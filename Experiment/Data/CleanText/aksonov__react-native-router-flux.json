{
    "aksonov": "It should be done now with 0.0.9 version, please check - you just don't need to pass sceneConfig parameter to avoid animation, check updated Example project.\n. I believe it should be supported already. Have you tried to just pass title param to action?\nPavel.\n\n3 \u0441\u0435\u043d\u0442. 2015, \u0432 16:56, Tyler McGinnis notifications@github.com \u043d\u0430\u043f\u0438\u0441\u0430\u043b(\u0430):\nIn our app, all of the navbar titles aren't static. We have a few places where we're putting the users name or the title of the specific post in the title. This pull request makes it possible to dynamically update the routes title by passing in the name of the title as the second argument to Animation.myRoute.\nThe code for the above Gif looks like this,\nActions.post({\n  authedUser: this.props.authedUser,\n  post: this.props.post\n}, this.getTitle(this.props.post.title));\nYou can view, comment on, or merge this pull request online at:\nhttps://github.com/aksonov/react-native-router-flux/pull/3\nCommit Summary\nAdd ability to make titles dynamic\nFile Changes\nM index.js (6)\nPatch Links:\nhttps://github.com/aksonov/react-native-router-flux/pull/3.patch\nhttps://github.com/aksonov/react-native-router-flux/pull/3.diff\n\u2014\nReply to this email directly or view it on GitHub.\n. Thanks, it seems to be real issue - probably because Actions are generated in runtime, not compile time and minificator brakes it somehow. But it seems to be out of my control, any idea how to make it work with minification?\n4 \u0441\u0435\u043d\u0442. 2015, \u0432 13:25, Jacob Turner notifications@github.com \u043d\u0430\u043f\u0438\u0441\u0430\u043b(\u0430):\nWhen I bundle/minify my app, this library breaks. For some reason, the component names don't get added to the Actions object after minification.\nObject.keys(Actions) prior to minification:\n[\"push\", \"PUSH\", \"pop\", \"POP\", \"dismiss\", \"DISMISS\", \"preSplash\", \"splash\", \"login\", \"register\", \"formOne\", \"formTwo\", \"formThree\", \"formFour\", \"formFive\", \"floor\", \"post\", \"composePost\", \"explore\", \"conversations\", \"chat\", \n \"ownProfile\", \"otherProfile\", \"editProfile\", \"editBio\", \"about\", \"contactUs\", \"terms\", \"privacy\", \"changePassword\", \"passwordReset\", \"settings\"]\nObject.keys(Actions) after minifcation:\n[ 'push', 'PUSH', 'pop', 'POP', 'dismiss', 'DISMISS' ]\n\u2014\nReply to this email directly or view it on GitHub https://github.com/aksonov/react-native-router-flux/issues/4.\n. It works in straightforward way: it just adds new functions during processing of \u00abRoute\u00bb children to alt Actions object. Maybe I need to ask within alt github how to add custom actions in runtime correctly.\n4 \u0441\u0435\u043d\u0442. 2015, \u0432 13:31, Jacob Turner notifications@github.com \u043d\u0430\u043f\u0438\u0441\u0430\u043b(\u0430):\nI'll take a look at it this afternoon, I honestly have no idea how your library works yet. :P I'll let ya know what I find.\n\u2014\nReply to this email directly or view it on GitHub https://github.com/aksonov/react-native-router-flux/issues/4#issuecomment-137712792.\n. Please check latest version 0.1.0, this bug should be fixed.\n. It doesn't work (with both unminification & minification)\n\n. Yes, 0.0.5 works well without minification, but 0.0.7 (with your PR) doesn't work at all. maybe I've broken something by myself with 0.0.6, let me check too.\n. Strange, are you using io.js?\n. You need to have io.js, check this:\nhttp://facebook.github.io/react-native/docs/getting-started.html#content\n\nNo, problem only after your PR :) \nRead-only error happens because of second name parameter was added. Maybe after that i can't add new actions to class, so the question how to do it.\n. Ok, i've rollback changes and released 0.0.8 to avoid errors for a while.\n. I\u2019m using 0.17.1 version of alt.\n\n4 \u0441\u0435\u043d\u0442. 2015, \u0432 15:06, Emil Ahlb\u00e4ck notifications@github.com \u043d\u0430\u043f\u0438\u0441\u0430\u043b(\u0430):\nI was on iojs 2.5 though. I'll follow the instructions later on. :)\nThat's really strange, it appears there's an API change in alt that I'm not aware of. Could you try going back to alt 0.17.1?\n\u2014\nReply to this email directly or view it on GitHub https://github.com/aksonov/react-native-router-flux/pull/5#issuecomment-137730663.\n. You are right, 0.17.3 was installed, i've changed it to 0.17.1, but read-only error still exists.\n. Thanks, actually I agree with read-only error - way I'm adding custom actions are 'hacky' - i'm modifying internal properties of class now, but i didn't found suitable API to do that in 'good' way...\n. I think we really need API for alt to create actions runtime\n\nPavel.\n\n4 \u0441\u0435\u043d\u0442. 2015, \u0432 15:36, Emil Ahlb\u00e4ck notifications@github.com \u043d\u0430\u043f\u0438\u0441\u0430\u043b(\u0430):\nAgreed, they are kind of hacky. A nicer way (to me) would be to dynamically create the action once you have your schema. But then that gives you issues when you import components that imports the action class before the schema is even defined.\n\u2014\nReply to this email directly or view it on GitHub.\n. Yes, I was thinking about it, but how to unite then my 'generated' actions with already existed actions (push/pop) - it will be not good to have two different classes for this? Just merge? Sorry, i'm  still learning Javascript, so could miss something obvious here.\n. Oh, maybe i could just hide original actions (push/pop) inside component and just duplicate these methods in 'generated' actions ?\n. Usage of context will make usage more complex. It looks interesting idea - generate actions by its names (so it will be real actions), subscribe to all of them and handle properly within store. The problem is how to send these generated actions to user? Currently i'm just 'attaching' to actions singleton so user can easily import them as usual actions during compile time and use it later, in runtime.\n. I think in the same way, but how i can use it as return value for my module.exports, if it is done during compile time? \n\nBtw, i've commented all actions modifications within index.js and still get that read-only error for 'named' actions.\n. Hm, interesting, is it feature of ES6? I.e. if i call _setAction from my component, it will update _action for all other files imports it? \nLooks like current react-native doesn't support ES6 fully, but only some feature (like 'class' declaration)\n\n. Unfortunately that doesn't work within React Native environment - i don't want to patch run script or something like that because this way module will be unusable. I will try to find other solution\n. @mull Okey, i've implemented some solution without modifying existing actions anymore but generate own ones, but result is the same - it works without minification, but doesn't work with.\nAs I mentioned above - when I'm applying your PR (adding names for actions), i'm getting readonly error always, even without any modification of actions.\nFor example after adding \"FetchActions\" to FetchActions.js:\n\n. I've fixed bug with minification #4, it happens in code unrelated to alt.\n. Looks good!\n. Good catch! Fixed.\n. I don't see anything wrong with mixing implementation, if you would use this component only for nav transitions. However i agree that mixing could be issue. It is possible to add abstraction layer and use different flux implementation, but it is not trivial, so PR is welcome.\n. Please provide your code as github repo.\nPavel.\n\n25 \u0441\u0435\u043d\u0442. 2015 \u0433., \u0432 19:55, Mokto notifications@github.com \u043d\u0430\u043f\u0438\u0441\u0430\u043b(\u0430):\n+1\nI forked react-native-counter-ios-android\nI tried to pass props to route like this :\nvar RouterModule = React.createClass({\n    render: function() {\n        console.log('FROM ROUTER  : ',this.props.counter);\n        return (\n          \n\n\n\n        );\n    }\n});\nWhen I increment the counter:\nconsole.log('FROM ROUTER : ',this.props.counter); is rightly updated\nbut the subcomponent Counter) rerender with not updated counter value.\nPlease let me know if I am not clear.\n\u2014\nReply to this email directly or view it on GitHub.\n. Sorry, but it is not intended usage of this component. Router should be high-level app component, not internal one, so it doesn't change his props during app work. As I see Redux provides own router so looks like they are not compatible to each other.\n. Please latest version 0.1.9 with Android, i've made fix for the path, hope path is the same for Android as for iOS.\n. It is not possible, but you could give PR. Actually I'm looking for real 'native-looking' iOS transitions, but still unsuccessfully. Btw, you could use any own animations and set it to Schema or Router directly.\n. Pop & push? \n\nPavel.\n\n4 \ufffd\ufffd\ufffd. 2015 \ufffd., \ufffd 12:40, VansonLeung notifications@github.com \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd(\ufffd):\nHow do I trigger nav.replace ? Is it available in the current source code?\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/aksonov/react-native-router-flux/issues/12\n. Ok, I will add replace action soon.\n\nPavel.\n\n4 \u043e\u043a\u0442. 2015 \u0433., \u0432 13:26, VansonLeung notifications@github.com \u043d\u0430\u043f\u0438\u0441\u0430\u043b(\u0430):\nIf I do Pop + Push... there will be 2 outcomes for me\nWhen current page is the 1st page:\nActions.pop(); > will trigger this.props.onExit() instead\nActions.LoginPage(); > will push nav to this 2nd page\nResult: cannot replace 1st with 2nd, instead just \"Push\" has run properly\nWhen current page is the 3rd page:\nActions.pop(); > will trigger this.refs.nav.popToRoute(routes[routes.length - 1 - num]);\nActions.LoginPage(); > will push nav to this 4th page\nResult: pop & push has run simultaneously, should theoretically return correct results, but as their push & pop animations clash together, the navigator returns blank white page instead...\n\u2014\nReply to this email directly or view it on GitHub.\n. I've added 'replace' action to the 0.3.0 version. Also I've added some notes about 'custom' actions within README. \n. I understand you but i can't reproduce it. Could you please check current store-tests.js and add your ones which will fail (but should pass in your opinion) ?\n. Closing it for now, will re-open once 'failed' unit tests will be provided.\n. I've found that warning after recent upgrade,  I will ask alt team what does it mean.\n. Should be fixed within next version of alt, closing for now.\n. I think Container is right direction but you should set own custom style on Container 'component'. Could you provide simple github repo with Demo so i could look into.\n. Closing it for now, will re-open when will have demo\n. What is your goal? Router should be top-level component, not inside some UI component (Drawer in your case). You may try to use drawer instead of navbar inside components, and navigator object will be passed as prop to it.\n. Ah, I see - Drawer intended usage to be top-component as well :) Maybe we need to add that component to demo\n. Router should be real top level component by design. If you could create github rep demo, I would able to see play with it and fix the problem\n\nPavel.\n\n8 \u043e\u043a\u0442. 2015 \u0433., \u0432 18:46, Mokto notifications@github.com \u043d\u0430\u043f\u0438\u0441\u0430\u043b(\u0430):\nYes, and my case is even more special, I have to put a Youtube Player out of the Router (top-level component as well).\n\n\n\n\n\nIs there any way to do it ? I absolutely have to set Drawer inside Router ?\n\u2014\nReply to this email directly or view it on GitHub.\n. I glad that you found workaround, but i think i could adjust the component to work with drawer in correct designed way (i.e. being top-level component which uses Drawers/Tabbars/Navbars/etc) if you give me proper demo. \n. It is definitely out of scope for this component - this component doesn't represent navbars or tabbars, but only navigation from one component to other\n\nPavel.\n\n9 \u043e\u043a\u0442. 2015 \u0433., \u0432 07:46, Tyler McGinnis notifications@github.com \u043d\u0430\u043f\u0438\u0441\u0430\u043b(\u0430):\nI've learned to ask this question before I start implementing it on my own with this router :)\nIs there any way to add Notifications to the Tabbar? Something like this, \nPs great work with the continued progress with this project. Every time I look at it more and more stuff is added. I wouldn't built a RN app without it now.\n\u2014\nReply to this email directly or view it on GitHub.\n. I guess default 'right' scene from Navigator enables swipe, so you could use Navigator's defined sceneconfigs and pass it to the component.\n. Thanks, check latest version (0.3.3), should be fixed\n. Still don't see how it could be accessed via name 'navBar'? Also why you need it?\n. Your idea doesn't follow flux principles. All UI layer should do is just calling actions, UI should not have any logic.\nYou should define actions for each field (or one action with array data value - list of boolean) and store which will listen them and change its state. \"Next\" will call some another action as well and that store will listen it and process it without problems - that store will have all values already, right? \n. What problems do you have?\n\nPavel.\n\n13 \u043e\u043a\u0442. 2015 \u0433., \u0432 12:16, 0bit notifications@github.com \u043d\u0430\u043f\u0438\u0441\u0430\u043b(\u0430):\nI try to use this module in iOS project, and it running very well.\nbut when I try to use it in Android project, it has some strange problem.\nSo I want to know are there any plans to add Android support?\nThanks for providing such a cool module.\n\u2014\nReply to this email directly or view it on GitHub.\n. Maybe it is issue of android react native version...\n\nPavel.\n\n13 \u043e\u043a\u0442. 2015 \u0433., \u0432 13:10, 0bit notifications@github.com \u043d\u0430\u043f\u0438\u0441\u0430\u043b(\u0430):\nuse with react-native-tabs like in \"Example\",\nbut sometimes the component will has some vertical offset, like this:\nand sometimes display ok:\nthe same code run very well in iOS.\n\u2014\nReply to this email directly or view it on GitHub.\n. Closing it for now\n. Just Actions.NAME where NAME is action name attribute defined as for Route or Action element, and its schema=\"popup\"\n. Check example project from the repository\n. Have you tried Actions.name(DATA)  ?\n. No, it is not correct, check examples.\n29 \u043e\u043a\u0442. 2015 \u0433., \u0432 8:37 AM, nagendrakk notifications@github.com \u043d\u0430\u043f\u0438\u0441\u0430\u043b(\u0430):\nI tried like this, Actions.name(this,data)\n\u2014\nReply to this email directly or view it on GitHub https://github.com/aksonov/react-native-router-flux/issues/20#issuecomment-152103454.\n. Could you check demo, where is no navbar? \n. Try to debug in Chrome dev tools (set breakpoint for exception). For now i don't see what code of my component could raise it (stacktrace doesn't show it as well)\n. No, it is useless. If you are sure that the exception raised from my component, you have to find the line in the component code. Set breakpoints on all 'navigator' code and find out where the exception happen.\n. Closing it for now\n. Thanks for detailed info, seems to be bug, should be page.name instead of page.initial, could you check and if it works, commit PR?\n. It is very strange, there is nothing about popup changes in 0.3.4, could you check when it became not working? Maybe it happens after upgrade of React Native? Anyway, sample github repo with error would be helpful.\n. I believe you should fix it to work with latest React Native first. I'm getting that:\n\nthat one is outdated:\nvar Dimensions = require('Dimensions');\nvar {width, height} = Dimensions.get('window');\n\n. I don't understand. Your repo doesn't work and show that exception. Component demo works fine.\nPavel.\n\n22 \u043e\u043a\u0442. 2015 \u0433., \u0432 11:55, Phyo Moe pine notifications@github.com \u043d\u0430\u043f\u0438\u0441\u0430\u043b(\u0430):\nI am using react-native 0.12.0 and I still got that error. So I need to declare Dimensions in Animation.js file by myself.\n\u2014\nReply to this email directly or view it on GitHub.\n. I've removed popups for new version to avoid extra complexity. If there will be enough interest for it,  i will add it to new version\n. No, you should use 'Container' element, check demo with tab bar..\n. Yes, I've found this bug recently and trying to fix\n. Should be fixed with new release\n. There is no Container now, but just inner Router instance.\n. Do own Navigation scene animations work well? \n. @qbig Seems that the reason, closing this issue.\n. Please check demo, does it work well on your side?\n29 \u043e\u043a\u0442. 2015 \u0433., \u0432 18:06, Pascal Brunner notifications@github.com \u043d\u0430\u043f\u0438\u0441\u0430\u043b(\u0430):\nhi thank you for this awesome plugin\nI have a container with two scenes in it. I want to change the scenes with a button in the first scene. When I press this button and execute Actions.scene2() the scene changes but the selected tab in the tabbar won't change.\nIs there a method to do this?\n\u2014\nReply to this email directly or view it on GitHub.\n. Oh,  I see now. The problem that tabs is not connected with actions - it is not implemented - you should add listener to PageStore and change tab accordingly. \n\nSupport of 'tabs' is rather experimental and doesn't work well - see #26, for example \n. It is not supported at this moment...\n. Supported with 1.x release!\n. I will think how to implement such scenario in nice way ('restricted' routes).\n. But for now you could intercept it using Actions.onPush\n. Will it work if some actions are not handled, like 'switch' action inside store.js ?\n. Sorry, i meant ContainerStore which adds 'switch' action. Also user may add 'custom' actions, so store.js cannot handle all actions.\n. I'm going to use mocha for 1.0 release to avoid that...\n. Should be fixed within latest version, i'm using standard RN NavigationBar instead now.\n. Sorry, it doesn't support Redux at this moment\n. The component just calls navigator call. I suppose RN  navigator should call it, right?\nPavel.\n\n13 \u043d\u043e\u044f\u0431. 2015 \u0433., \u0432 20:46, Mokto notifications@github.com \u043d\u0430\u043f\u0438\u0441\u0430\u043b(\u0430):\n+1 :)\n\u2014\nReply to this email directly or view it on GitHub.\n. Pretty weird...I'm not sure where is the reason of such behavior \n. Closing it for now. Looks like it is problem of navigator, please check direct call of navigator.replace\n. I'm pretty inspired with Redux and want to create next version based on it. But i don't have any Redux experience, so still don't have any idea how to make it in 'right' way. Looks like it should be top 'container' component, but it is all know at this moment :)\n. @Mokto thanks, but i want to make the component itself to use redux, without alt. i.e. replace all alt dependencies to redux ones. Looks like it should be created as 'middleware' (i'm studying redux right now)\n. It seems not correct to add this support for this component, because it has 'flux' in its name, so i've created separate component react-native-redux-router with Redux support, all comments are welcome! Thanks for feedback and pointing me to great Redux library :)\n\nhttps://github.com/aksonov/react-native-redux-router\n. Related #44. I'm going to unite both components, simplify and make it suitable for any flux/redux implementation.\n. It is published, looks like i have to abandon 'redux'-related version, because latest one is suitable for any flux implementation\n. Thanks!\n. Try Actions.pop(2)\nOn Wed, Nov 18, 2015 at 7:36 PM, nbastoWM notifications@github.com wrote:\n\nI want from a button to navigate back twice.\nI tried Actions.pop() twice but with no success.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/aksonov/react-native-router-flux/issues/39.\n. Okey, currently Container implementation looks a little bit 'hacky' - it uses navigator 'push' inside for new tabs, so user may see wrong 'push'-like navigation for initial rendering of tab... If you know how to deal with it, PR is welcome\n. Check latest version that allows inner Router to define\n. Current version was not tested on android devices at all. I'm preparing now 1.0 release which will work on both devices, check #44\n. Please check now\n. Yes, it is known issue - \u2018Container\u2019 support is experimental for now.\nI\u2019m going to fix it soon with possibility of inner Router tag, but for Redux architecture (react-native-redux-router component), because Alt is not so powerful and clear.\n24 \u043d\u043e\u044f\u0431. 2015 \u0433., \u0432 6:12, Crysfel Villa notifications@github.com \u043d\u0430\u043f\u0438\u0441\u0430\u043b(\u0430):\nIs there a way to set routes inside of the tab container? I have a list inside of a tab, what I want is to show another view when the user taps on an item on the list. I tried this:\nThis is the index file:\n<Route name=\"tabbar\" >\n                <Container component={Tabs.Container}>\n                    <Route name=\"songs\" component={SongRoutes} title=\"Songs\" icon={Tabs.Icon} image={require('./icons/quaver11.png')} />\n                    ...\n                </Container>\n            </Route>\n        </Router>\nAnd inside the SongRoutes component I have this:\n```\n\n    <Router>\n        <Schema name=\"default\" sceneConfig={Animations.FlatFloatFromRight} />\n\n        <Route name=\"songlist\" component={SongList} initial={true} />\n        <Route name=\"songview\" component={SongView}  />\n    </Router>\n\n</View>\n\n```\nI'm getting the list of elements displayed correctly, here's the callback for when the user taps on the list.\n_onPressButton(){\n    console.log(Actions.songview);\n    Actions.songview({data:'This is some data!'});\n}\nBut when taping on an item I'm getting this error:\n[tid:com.facebook.React.JavaScript] 'No route is defined for name: songview'\nAm I doing something wrong? Any help would be appreciate.\n\u2014\nReply to this email directly or view it on GitHub https://github.com/aksonov/react-native-router-flux/issues/42.\n. Check #44\n. Should be fixed with new version\n. As described here: https://github.com/exponentjs/ex-navigator/issues/57\nyou should hide root navigator (as shown in demo) and push from scene with own navigator (you may use wrapRouter attribute for it)\n. Looks like no other ways except this for now, thanks @plougsgaard \n. https://github.com/facebook/react-native/issues/4062\n. New version doesn't use alt, so issue should be solved, please check\n. Will publish separate branch soon, thanks!\n. @cnjsstong Please check branch 1.0beta and try to run Example.\n. No. Any feedback is appreciated. \n\nPavel.\n\n8 \u0434\u0435\u043a. 2015 \u0433., \u0432 18:29, Tong Shen notifications@github.com \u043d\u0430\u043f\u0438\u0441\u0430\u043b(\u0430):\nAlready running. Any specific points that need attention?\n\u2014\nReply to this email directly or view it on GitHub.\n. @cnjsstong thanks, version is published.\n. My fault, will do documentation later (or someone else could do, it would be really great) For any missed docs, refer to exNavigator docs - Router just passes all params to ExNavigator component. As I can see you could use navigationBarStyle param.\n. Looks like exNavigator lacks documentation as well :)\nhttps://github.com/exponentjs/ex-navigator/issues/18\n. Does navigationBarStyle work for you?\n. Added rightButtonStyle, backButtonBarStyle, rightButtonTextStyle as well as renderLeftButton, renderRightButton and renderBackButton to customize nav bar.\n. navigationBarStyle is property for Router, not for Route. All Router's properties are passed to ExNavigator, you may check sources, it should work out of the box.\n. Now 2.0 version passed pure Router instance as router prop.\n. @joelcloralt PR #118 have to fix it, please check\n. I believe i could close it now.\n. titleStyle definitely works for me with v4. If it doesn't work please create separate issue for v4 version and give me link to cloned & modified Example so I can reproduce issue.. No, it works well on my project. Probably you didn't import your fonts properly via XCode. So what is error on last screen?\n. Oh, i see, error not on last, but on third one. I will look\n. Should be fixed with 1.0.1, please check. Thanks for reporting!\n. Use it for 'Router', not for 'Route'. PR for documentation is welcome :)\n. Let me check\n. Are you sure you removed root navbar first?\n. Otherwise it will be visible if you are hide child ones...\n. Android or iOS? I've just modified demo, added flag to Login and doesn't see navbar there normally:\nOr you want to hide \"Launch\" navbar? Then probably 'wrapRouter' doesn't pass it to inner Router, i will fix it.\n\n\n\n\n\n\n<Route name=\"launch\" component={Launch} initial={true} wrapRouter={true} title=\"Launch\"/>\n            <Route name=\"register\" component={Register} title=\"Register\"/>\n            <Route name=\"home\" component={Home} title=\"Replace\" type=\"replace\"/>\n            <Route name=\"login\" schema=\"modal\">\n                <Router showNavigationBar={false}>\n                    <Route name=\"loginModal\" component={Login} title=\"Login\" schema=\"modal\"/>\n                    <Route name=\"loginModal2\" component={Login2} title=\"Login2\"/>\n                </Router>\n            </Route>\n            <Route name=\"register2\" component={Register} title=\"Register2\"  schema=\"withoutAnimation\"/>\n            <Route name=\"tabbar\">\n                <Router footer={TabBar} showNavigationBar={false}>\n                    <Route name=\"tab1\" schema=\"tab\" title=\"Tab #1\" >\n                        <Router>\n                            <Route name=\"tab1_1\" component={TabView} title=\"Tab #1_1\" />\n                            <Route name=\"tab1_2\" component={TabView} title=\"Tab #1_2\" />\n                        </Router>\n                    </Route>\n                    <Route name=\"tab2\" schema=\"tab\" title=\"Tab #2\" component={TabView} />\n                    <Route name=\"tab3\" schema=\"tab\" title=\"Tab #3\" component={TabView} />\n                    <Route name=\"tab4\" schema=\"tab\" title=\"Tab #4\" component={TabView} />\n                    <Route name=\"tab5\" schema=\"tab\" title=\"Tab #5\" component={TabView} />\n                </Router>\n            </Route>\n        </Router>\n. Check 1.0.2 version, i've disabled nav bar for 'launch' screen within Example also.\n. @MehranJanfeshan Are you talking about v4 version? . Check breaking changes first\n\n13 \u0438\u044e\u043b\u044f 2017 \u0433., \u0432 18:22, MehranJanfeshan notifications@github.com \u043d\u0430\u043f\u0438\u0441\u0430\u043b(\u0430):\n@aksonov Thanks for the reply, I got the version 4 but I am getting this error:\n[react-native-router-flux] props should be defined\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n. I don't understand the problem. Please check Example and try to reproduce your issue there.\n13 \u0438\u044e\u043b\u044f 2017 \u0433., \u0432 18:45, MehranJanfeshan notifications@github.com \u043d\u0430\u043f\u0438\u0441\u0430\u043b(\u0430):\n@aksonov I found that in the old version I was able to do this:\n      Actions.auth()} rightTitle=\"Log out\" key=\"newOrderList\" component={EmployeeList} title=\"New Orders\" initial />   \nbut after I moved to version 4 I cannot do that so I changed to this and it worked:\n    Actions.auth()} rightTitle=\"Log out\" key=\"newOrderList\" component={EmployeeList} title=\"New Orders\" initial />   \nbut this not what I want, I want to able to categorize the Scene, is there any other alternative?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n. Wrap it with one root scene.\n13 \u0438\u044e\u043b\u044f 2017 \u0433., \u0432 18:55, MehranJanfeshan notifications@github.com \u043d\u0430\u043f\u0438\u0441\u0430\u043b(\u0430):\nhere is my code that works perfectly in version 3 but when I upgraded to version 4 I got this error:\n[react-native-router-flux] props should be defined\nso I removed the part that is surrounded by the blue line and it works fine.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n. It is not question about RNRF but more about your application structure. I guess you need to use tabs or disable back button (mark it with 'init' attribute) or use 'replace' type. Check Example.. Actually v3 just wrapped multiple scenes into one, so you will not see any back button (because you hide parent navbar). You could just use <Scene key=\"homeScreen\" component={mainScreen} hideNavBar />. Yes, a little bit work is needed, i just thought feature is not used :)\n. Ok, will work on it.\n. Please check type='modal' within latest 2.1.3 and Example with popup Error.\n. try latest 1.0.3 and hideTabBar for Route component (Wanted: person who will write docs :)\n. oops, will check.\n. @sslash Should work now with latest release, it was bigger problem - tab bar was not updated if you switched externally, not via tabbar but from button or somewhere else.\n. I can't reproduce. Make sure you are using latest version, i've updated package.json for demo now\n. Hiding tab bar is not working for nested routes (i.e. start route doesn't have hideTabBar, but next one (pushed) have this, tab bar will not be hidden)\n. should work with 2.0.5, please check demo, tab n2\n. Check Example, second tab is hidden.\n3 \u0444\u0435\u0432\u0440. 2016 \u0433., \u0432 0:48, paulbao notifications@github.com \u043d\u0430\u043f\u0438\u0441\u0430\u043b(\u0430):\n@aksonov https://github.com/aksonov 'Hiding tab bar is not working for nested routes (i.e. start route doesn't have hideTabBar, but next one (pushed) have this, tab bar will not be hidden)' Is this fixed?\nI am now try version 2.1.4 and just add hideTabBar={true} like below. But it seems not working.\n\u2014\nReply to this email directly or view it on GitHub https://github.com/aksonov/react-native-router-flux/issues/52#issuecomment-178892509.\n. Looks like other changes broke it. It definitely worked with 2.0.5.. \n. Should work now, with latest 2.2.2 for Tab 3, Example was updated accordingly.\n. Your title doesn't have quote closed...\n. I will do when will have time, so it doesn't work only for tab#2? looks very strange.\n. 3.0 is released, please check it there. Closing it for now, because it is for outdated version (2.x)\n. Right, because it is out of the component control... Maybe i will remove onPop entirely in favor to onLeave function call (available within 1.0.7 as Route prop), that is called when route loses focus.\n. Should work in 2.0.3\n. It works fine on my side, for example for Tab#1_2 view.\n\n<Route name=\"tab1\" schema=\"tab\" title=\"Tab #1\" >\n                            <Router onPop={()=>{console.log(\"onPop is called!\"); return true} }>\n                                <Route name=\"tab1_1\" component={TabView} title=\"Tab #1_1\" />\n                                <Route name=\"tab1_2\" component={TabView} title=\"Tab #1_2\" />\n                            </Router>\n                        </Route>\n. Fixed\n. Sure, just define your TabIcon which will display image and add image source attribute to route (it will be passed to your TabIcon component).\n. The problem that for now i don't see use cases to use onPush/onReplace/onPop, maybe you could provide some use cases when it is needed?\n. Again, i don't see how onPop could be used here. You just executes two actions, one - logical, 'logout' for your flux/redux which will manipulate all needed data and doing pop at the same time...\n{Actions.pop(),this.dispatch(logout())} }>Logout\n. I believe info passed via react context. Check it http://rackt.org/redux/docs/basics/UsageWithReact.html\nI'm just using these two steps and everything works well (root Provider, then connect each screen).\nMaybe you could do redux demo, it would be really great.\n. For Route you define 'component' class, that class should be 'connected'. Data passed via inner context, as i understand.\n. Right\n. Please give me real use case, I will think about it\nPavel.\n\n11 \u0434\u0435\u043a. 2015 \u0433., \u0432 21:56, Jo\u00e3o Macedo notifications@github.com \u043d\u0430\u043f\u0438\u0441\u0430\u043b(\u0430):\nYou are right, and I agree with you. I just lacked a better example - The thing is I'm coming from your other implementation using redux and I have a mix of questions that I'm not sure are related...I'm starting to think that my true question is related to custom actions. In redux router, your reducer returned a state which was used by the router component to know how it should render itself. I could, however, create my own reducer to process custom actions that were supposed to change the route stack in a way different than the simple push /pop /replace primitives. What is the way to accomplish that here ? Is it related to onPop, onReplace, etc...?\n\u2014\nReply to this email directly or view it on GitHub.\n. @mangogogos Do you want Router will pass all own props to children? Looks good idea, please confirm.\n. @jmacedoit Why you  need 'custom' actions, please describe user case here\n. @jmacedoit [Login]----logs in---->[MembersArea,EditProfile]----back (pop)--->[MembersArea] - I'm going to add 'initial' action which will setup given navigation stack, will it work for you?\n. @jmacedoit Yes. Something like Actions.reset([stack])\n. @drojas I'm still don't understand clearly about custom actions/action creators, etc. For example for some your redux action you need to pop/push or reset stack or something. Why you can't just declare that action and call Actions.ACTION inside your Redux action ? \n. @mangogogos Yes, routes are not updating corresponding component currenty, because they don't render nothing and use just to give values for parent Router. As I said above i need clear use cases to understand the problem.\n. It is quite easy to pass all Router's props to Route's components, but I'm concerned a little that some/major unnecessary props will be passed if Redux state is large, and screens will need only some small sub-set of it.  Also props like style, hideNavBar could be a problem.\n. Both points (connect once or connect 'each') have own props/cons, check nice discussion here https://github.com/rackt/redux/issues/419\n. Maybe I could introduce 'connect' Route property where you could list all defined props to pass to this route from parent Router? Does it sound good?\n. Yes, it should work! :)\n. But syntax is more complex comparing with connect=\"foo\" \n. Ok, i don't want to make component more complex too, so let's use inline connect.\n. I'm thinking about possibility to set global handler for Actions, it will simplify things much. Maybe someone can suggest PR for that? You may create even ReduxHandler which will be set once and send redux actions to dispatcher.\n. Actually this component is exNavigator agnostic as well, but have kind of 'plugin', ExRouter to connect with ExNavigator UI. Another plugin could be implemented for Native iOS Navigator or for navbar component from 0.3 version. The same concept could be used for handlers. Actions.handler could be set to some handler and be called before any action. This handler could be 'redux' aware, i.e. call something like route.props.dispatch(PushReduxAction(name, props)), so you could subscribe to PushReduxAction and other redux actions from your store.\n. Please check latest demo for 2.2.0 release.\n. 3.0 is released with improved docs. Closing it for now, because it is for outdated version (2.x)\n. Thanks, did it manually, because of conflict - already modified code during fixing other issues\n. Thanks for great feedback. Could you please give me sample github repo with all issues above. Also it will be useful to create separate issues (not this one) for each problem...\nAnd PR will be welcome for some/all of them would be helpful.\n\nP.S. Problem 2 is not problem, i believe.\n. Should be available within 1.0.7. If onEnter returns false, no action is processed.\n. I will definitely add it, thanks!\n. Should be available within 1.0.7\n. renderRightButton will customize right button. also there rightButtonStyle for styling.\n. Please try 'selected' not initial. Initial is only for root initial route.\n. Then that is bug (selected), i will look at it, thanks.\n. And you are right, probably i should do select it with 'initial', to avoid complexity.\n. @chetstone could you look into this issue and fix it?\n. @smallsaucepan No, you could work on it.\n. @smallsaucepan Any update for this?\n. Should be fixed with latest version, please check.\n. You must pass 'schemas' prop to Router to make it work:\nxml\n          <Router footer={TabBar} showNavigationBar={false} navigator={this.props.navigator} schemas={this.props.schemas}>\n. The problem that View as parent container doesn't pass 'navigator' property to his children, so navigator's hierarchy is lost. I'm not sure how to fix it, maybe we need to declare it as not bug, but 'feature' - i.e. require to avoiding inner Routers inside React Views...\nHowever I will try to fix it using react 'context' by passing router instance as 'current' router, maybe it will work.\n. From other point of view, context is not good idea to use (like 'global' vars), so maybe it will be more correct to do deep parsing of routers/routes, i will think.\n. Okey, it doesn't have any sense to built some 'smart' here, just by-pass props to children to make it work\nxml\n          <Router footer={TabBar} showNavigationBar={false} navigator={this.props.navigator} schemas={this.props.schemas}>\n. @chetstone What do you mean - Router couldn't automatically pass its props? It already does - but View will not pass everything to its children and Router is not able to check all children (including children of children) without instantiation of all 'component' during launch recursively. It will slow down performance significantly - all UI screens have to be created during startup.\n. I hope later we will be able to replace it within your customized UI screen:\nxml\n          <Router footer={TabBar} showNavigationBar={false} parent={this.props.route}>\n. Never mind. I was the thinking about some refactoring\nPavel.\n\n15 \u0434\u0435\u043a. 2015 \u0433., \u0432 19:50, Chester Wood notifications@github.com \u043d\u0430\u043f\u0438\u0441\u0430\u043b(\u0430):\nWhat do you mean - Router couldn't automatically pass its props?\nAh, I see where I was confused. I have\n\nand in another file  has:\nreturn (   ... )\nThe problem we need to work around is that TabContainer doesn't pass its props to Router. Gotcha.\nI'm not sure if I understand this comment though:\nI hope later we will be able to replace it within your customized UI screen:\nAre you talking about a contemplated change to react-native-router-flux or are you suggesting another way for users to work around this issue?\n\u2014\nReply to this email directly or view it on GitHub.\n. React-native-navbar is ios-only and doesn't look good - i noticed some weird behavior with showing 'Back' button during transition for initial routes, nothing like that with built-in RN navbar.\nIt is easy to customize built-in RN navbar, i will add proper props to do it soon. \n. Does navigationBarStyle work for you to style nav bar?\n. Closing it now, to customize buttons, refer to #61 \n. Currently I'm doing following - Launch 'initial' screen will check logged/unlogged status then do redirect based on it. \n. @theaqua  #60 is created for that, closing this issue.\n. Doesn't type='replace' and sceneConfig={YOUR ANIMATION} work for you?\n. I can't reproduce, anybody can?\n\nbash-3.2$ react-native run-android\nJS server already running.\nBuilding and installing the app on the device (cd android && ./gradlew installDebug)...\n:app:preBuild UP-TO-DATE\n:app:preDebugBuild UP-TO-DATE\n:app:checkDebugManifest\n:app:preReleaseBuild UP-TO-DATE\n:app:prepareComAndroidSupportAppcompatV72301Library UP-TO-DATE\n:app:prepareComAndroidSupportRecyclerviewV72301Library UP-TO-DATE\n:app:prepareComAndroidSupportSupportV42301Library UP-TO-DATE\n:app:prepareComFacebookFrescoDrawee081Library UP-TO-DATE\n:app:prepareComFacebookFrescoFbcore081Library UP-TO-DATE\n:app:prepareComFacebookFrescoFresco081Library UP-TO-DATE\n:app:prepareComFacebookFrescoImagepipeline081Library UP-TO-DATE\n:app:prepareComFacebookFrescoImagepipelineOkhttp081Library UP-TO-DATE\n:app:prepareComFacebookReactReactNative0161Library UP-TO-DATE\n:app:prepareOrgWebkitAndroidJscR174650Library UP-TO-DATE\n:app:prepareDebugDependencies\n:app:compileDebugAidl UP-TO-DATE\n:app:compileDebugRenderscript UP-TO-DATE\n:app:generateDebugBuildConfig UP-TO-DATE\n:app:generateDebugAssets UP-TO-DATE\n:app:mergeDebugAssets UP-TO-DATE\n:app:generateDebugResValues UP-TO-DATE\n:app:generateDebugResources UP-TO-DATE\n:app:mergeDebugResources UP-TO-DATE\n:app:bundleDebugJsAndAssets SKIPPED\n:app:processDebugManifest UP-TO-DATE\n:app:processDebugResources UP-TO-DATE\n:app:generateDebugSources UP-TO-DATE\n:app:processDebugJavaRes UP-TO-DATE\n:app:compileDebugJavaWithJavac UP-TO-DATE\n:app:compileDebugNdk UP-TO-DATE\n:app:compileDebugSources UP-TO-DATE\n:app:preDexDebug UP-TO-DATE\n:app:dexDebug UP-TO-DATE\n:app:validateDebugSigning\n:app:packageDebug UP-TO-DATE\n:app:zipalignDebug UP-TO-DATE\n:app:assembleDebug UP-TO-DATE\n:app:installDebug\nInstalling APK 'app-debug.apk' on 'react(AVD) - 6.0'\nInstalled on 1 device.\nBUILD SUCCESSFUL\nTotal time: 17.096 secs\nStarting the app (/Users/aksonov/Library/Android/sdk/platform-tools/adb shell am start -n com.example/.MainActivity)...\n. Good catch!\n. @MITDelian you are welcome (added)\n. @chetstone You are welcome, help with documentation is really necessary. Btw, I've added you as collaborator as well.\n. @thachp @markburns thanks for help. Please check latest issues and try to create PR for them.\n. @smallsaucepan Yes, please.\n. @mmazzarolo You are welcome to help with README as well as other open issues.\n. #176 maybe is first priority for now, then #187 \n. Who want to help and have time, please check https://github.com/aksonov/react-native-router-flux/issues/307\n. FYI. Collaborators are still wanted (who could regularly answer/resolve issues, propose PRs, review my changes, etc.).\n. @charpeni You are welcome! Please check all issues marked with 'help wanted' and submit PR for any.\n. Actually I really want to add active collaborators as contributors.  However so far I see situation when people want to become contributors initially, without any experience with PRs.\nPavel.\n\n16 \u0430\u043f\u0440. 2016 \u0433., \u0432 03:58, Mark Burns notifications@github.com \u043d\u0430\u043f\u0438\u0441\u0430\u043b(\u0430):\nI think everyone here (including me) was confusing collaborators/contributors. It seems @aksonov is just asking for help but is not asking about adding people as collaborators.\nBTW, you might want to follow the model of trusting/adding people based on their contributions here or elsewhere.\nE.g. Rubinius is contributor-friendly:\nhttp://www.programblings.com/2008/04/15/rubinius-for-the-layman-part-2-how-rubinius-is-friendly/\nIt can be rewarding to be listed as a collaborator on a project and the trust can inspire people to contribute even more than the initial contribution.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly or view it on GitHub\n. @cridenour , @lynndylanhurley, @joenoon Would you like to be collaborators for this project?\n. @lelandrichardson are you interesting to be collaborator?\n. @philipshurpik Philip, are you still using the component and want to be a collaborator?\n. @jeroenbourgois Thanks for help with README. Are you using the component in real app and want to be a collaborator?\n. @jeroenbourgois Sure, you may focus on answering issues, README improving, etc. Unfortunately a lot of duplicates are created nowadays.. And any PR should be reviewed anyway.\n. Guys, please check any new created issues and feel free to submit answer or fix it. Please add proper label and assign it to yourself to avoid any duplicate work. Thanks.\n. @lynndylanhurley Sure, it would be great!\n. all contributors, please PM me if you need WebStorm license, i've just got open source license.\n. Guys, a lot of issues (mostly quite stupid) were created recently. Feel free to help if you can, unfortunately i have quite limited time now.\n. @sibelius Thanks,  I've sent you invitation! Feel free to review existing issues/PRs.\n. up, very actual now.. v4 beta based on React Navigation is ready (#1974), looking contributors for v4 now (@sibelius, @cridenour @AlexDM0, @jeroenbourgois, @joenoon, @philipshurpik @chetstone, @charpeni    are you still using RNRF ?). @AlexDM0 Strange, v3 allowed you to define left, right, title as static properties for your components. v4 should support it as well (because React Navigation supports it). Yes, v3 doesn't provide access to properties.\nv4 provides the same access to navigation state as React Navigation:\nhttps://reactnavigation.org/docs/intro/headers. Who could help with Android support?. @daisydon No, it is not supported yet, PR is welcome (as titleImage prop). @AlexDM0 It is supported already - renderTitle. @rajsuvariya Thanks! The most wanted task now is prepare some MobX demo with authentication, but you can start from smaller tasks like answering questions here and submit PR to solve the issues.. @rajsuvariya Change RNRF package.json to point to src/index.js and restart packager.. I've just marked all tasks anybody could help with PR as 'help wanted'. @mcabs3 Thank you for your help. If you want you can also check tickets with 'help needed' tag. @mcabs3 Done. Feel free to close issues - most issues nowadays are questions... Maybe we have to redirect them to stackoverflow.. @onrige Thanks! Just sent you the invitation.. @daviscabral Could you show me your PRs first? v3 support would be great!. Please do, it would great to manage questions \n28 \u043e\u043a\u0442. 2017 \u0433., \u0432 15:26, Michiel van Roon notifications@github.com \u043d\u0430\u043f\u0438\u0441\u0430\u043b(\u0430):\nCount me in!\nI believe one important thing to be done is manage the questions being asked here in github in the form of issues. They should be asked on gitter or stackoverflow. Maybe we could also add gh-pages and add some more examples and common problems/faq there? I\u2019d be more than happy to help you out there\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n. Dear maintainers and supporters, I have vacation until the end of August. You are welcome to answer issues, submit/review/merge PRs, etc.. If someone still wants to help, he can choose \"help wanted\" tag and work. Also I can pay for some issues from my opencollective budget.. @darrencruse I talked with some guys from react-navigation team two years ago. They don't want to use JSX as route declaration like RNRF does. However we also discussed possible splitting react-navigation into many modules (separate for router, separate for tabs, etc.), so RNRF could be implemented as router for react-navigation v3 now. Good catch, looks like we need to pass all data from Route to inner Router and from Router to inner Routes.\n. @andreasbhansen Just released 2.0, it should work there - 'data' prop is passed to children routes, please check\n. Maybe we should split it into two issues: Hide tab bar and hide nav bar. For hide tab bar we have #52 \n. Looks like such features require full refactoring of existing code - separate Router/Route/Schema from UI and navigator implementation, create full hierarchy of router tree, so child route could find all his parent routers and pass information to them. I will think about it.\n. Just an idea, what if you would 'push' modal not from tab navigator, but from root navigator? This way you will not see any tab bar.\n. Yes, I've specially written such behavior, but didn't document it, sorry, you PR will be very welcome.\n. Now hideNavBar is supported for Route element.\n. Don't forget that router Actions are created in run-time, so you may should wrap such calls into functions to avoid being checking during compile-time. Check Example project.\n. Please post example here and check it with latest version. Maybe 2.0 version could do it (navigate to other route)\n. 1. I can't reproduce problem\n2. You noticed that \"Well, I should of course have checked the ExNavigator repo before asking here.\" - does it mean the case not in this component?\n. iZal, thanks, but could you do this PR for react-native-tabs? I want to make this component more abstract from tabs representation...\n. 2.x version doesn't have onEnter and i'm thinking is it necessary to have? Why onPop/onPush/onReplace is not enough?\n. PR would be welcome! You need to add this functionality into ExRouter\n. 3.0 is released. Closing it for now, because it is for outdated version (2.x)\n. It is known problem, see #72. Btw, you always could use own custom navbar and set it as header/footer for Route, and hide it when necessary.\n. hideNavBar now is supported for Route\n. The component is just wrapper around exNavigator. Could you check if it works the same with pure exNavigator?\n. @andreasbhansen , no, Actions.login is function, so you need to call that function with data passed to next scene. I will look at this issue when i will have time.\n. @jw84 Could you check with latest version?\n. Closing for now\n. So it seems to be not issue of this component?\n. Should be fixed with latest 2.0 version, please check\n. Does parent router hide navbar as well?\n. This component doesn't provide routerReducer (maybe you meant react-native-redux-router)?\n. redux-simple-router is not connected with this component (and it is not declared anywhere, right?), so i  still don't understand the issue\n. You should manage state on your own (flux or redux) by using Actions.onPush/Actions.onPop - fire there needed redux actions and manage your state.\n. Maybe it will be later, when i've found what is desired use case. For a while nobody didn't tell me how it should be supported - you are using redux-simple-router, but somebody else will use own way of redux, so it is not clear how to support all possible scenarios.\n. Okey, now with 2.0, you could implement your own Router delegate to manage state/UI - check ExRouter for reference - it uses simple onPush/onPop props with exNavigator UI. You may use your own UI that fires own Redux push/pop/replace actions - and you could check current router/route using Actions.currentRouter and Actions.currentRouter.currentRoute\n. No, \"<\" is not displayed when current route (scene) if first within navigation stack (i.e. have 'switch' type or have wrapRouter function or inner Router)\n. Post your full routes here.\n. As you can see \"location\" has wrapRouter which means it runs under his own navigator (that is why you don't see \"<\")\n. Thanks for the feedback. You may implement your own tab bar for desired functionality. This component provides just simplest tab bar mostly to demonstrate navigation, but you could pass own one.\n. But 'old-route' still in the nav stack (that is why it will not be unmounted), right? Looks like it is not connected with this component, but general redux/flux question. I'm solving it by checking if route is \"current route\" then update, otherwise don't update.\n. Please check latest 2.0 version. There is Actions.currentRouter property and Router has currentRoute property as well, so you could use Actions.currentRouter.currentRoute \n. @sslash check Actions.currentRouter.currentRoute\n. @michalpetrov i saw such behavior as well, it seems not connected with this issue. You may create new ticket, PR is welcome!\n. Strange, with 2.0.9 I've fixed that - it should deep into child route after Actions.route method:\n\n```\n            // deep into child router\n            while (router.currentRoute.childRouter){\n                router = router.currentRoute.childRouter;\n                debug(\"Switching to child router=\"+router.name);\n            }\n```\n. It is interesting question, have you tried set Drawer as 'footer' prop for Router?\n. Try {()=>Actions.home()} because Actions.home may not defined during compile time...\n. SideMenu should pass its 'router' prop to his children, otherwise router hierarchy would be broken.\n. @mmazzarolo Good work! Could you please add this as section to README? \n. I\u2019m working on refactoring now, when i will complete you may check that issue with new version.\n\n25 \u0434\u0435\u043a. 2015 \u0433., \u0432 14:16, Basit Ali Mundia notifications@github.com \u043d\u0430\u043f\u0438\u0441\u0430\u043b(\u0430):\nHi,\nFor my app, I wrapped a nested Router inside another view (for eg. SideMenu) but it caused all nested route navigation to not work properly. Going through the code, I found out that this was because the nested router was failing to reference the parent navigator when it wasn't a direct child. The issue was thus easily resolved by referencing _parent,\n\n\n\n\n\n\n\n\n\n\n\nHowever, now when I call Actions.pop from the feed route, it fails throwing JS Exception: Cannot pop navigator with less than 1 screens exception. For this, I had to change the Actions.pop method as follows,\n-            var parentNavigator = navigator.parentNavigator;\n-            if ( ! parentNavigator) {\n-              parentNavigator = this.navs[navigator.props._parent];\n- }\n- if (navigator.parentNavigator) {\n-            if (parentNavigator) {\n              //console.log(\"pop to parent navigator\");\n-                navigator = navigator.parentNavigator;\n-               navigator = parentNavigator;\n              routes = navigator.getCurrentRoutes();\n          } else {\n              throw new Error(\"Cannot pop navigator with less than \"+number+\" screens\");\n          }\n  Are there any side-effects to this? Let me know if I can improve on it.\nRegards,\nBasit\nYou can view, comment on, or merge this pull request online at:\nhttps://github.com/aksonov/react-native-router-flux/pull/93 https://github.com/aksonov/react-native-router-flux/pull/93\nCommit Summary\nFallback on navigator.props._parent when parentNavigator is not found.\nFile Changes\nM index.js https://github.com/aksonov/react-native-router-flux/pull/93/files#diff-0 (12)\nPatch Links:\nhttps://github.com/aksonov/react-native-router-flux/pull/93.patch https://github.com/aksonov/react-native-router-flux/pull/93.patch\nhttps://github.com/aksonov/react-native-router-flux/pull/93.diff https://github.com/aksonov/react-native-router-flux/pull/93.diff\n\u2014\nReply to this email directly or view it on GitHub https://github.com/aksonov/react-native-router-flux/pull/93.\n. @BasitAli please check 2.0 version, an check these issues there\n. Because style param is passed to component as well. You have to pass something like tabStyle and change TabBar to accept tabStyle as property.\n. You should hide TabBar nav bar as well and add type='switch' for each Route (so nested nav bar will be generated for each tab), check Example.\n. please check 'jump' type for newly released 2.0 version. It is actually the same as 'switch', but without inserting nested nav bar inside (which is useful for tab bars)\n. Just released it\n. It seems exNavigator issue, they promise to finish it soon...\nhttps://github.com/exponentjs/ex-navigator/issues/24\n. @delta1 fixed. Strange, i always try to pull before commit...\n. It should work out of the box now, isn't? \n\nPavel.\n\n31 \u0434\u0435\u043a. 2015 \u0433., \u0432 00:17, ZaL notifications@github.com \u043d\u0430\u043f\u0438\u0441\u0430\u043b(\u0430):\nI know you are working on the V2 of this great lib. so I thought in case you haven't thought about this feature where we can pass the route's title as a prop while navigating \nex:\nActions.mediaEntityScene({\ntitle:'title for the scene'\ndata: media\n});\n\u2014\nReply to this email directly or view it on GitHub.\n. It is in TODO list. For any missed docs, just refer to exNavigator, this component just passes these properties to exNavigator component\n. You should pass function which returns react component.\n. @andreasbhansen Thanks, should be fixed in 2.0.3\n. Please check latest 2.0 version and Actions.currentRouter property.\n. Yes.\n. It is not problem of this component actually. As far as i see paddingTop is one from optimal solutions....\n. This component just re-uses existing RN Navigator and works in the same way.\n. Please check default examples from React Native distribution and exNavigator. I believe all they work like 1.* and 2.* versions. The reason why 0.* version worked differently that the component used 'non-RN' navigator bar (react-native-navbar) that was just 'header' for each the scene. As the result you were not able to do semi-transparent navbar, so you could see underlying scroll content (correct me if i'm wrong).\n\nBtw, you still could do the same with newest versions - just set footer as your custom navbar and disable internal navbar by setting hideNavBar={true}\n. > > So may I summarize by stating that the pre-1.* behavior was incorrect or suboptimal (or in any case different from the norm), and that the post-1.* behavior is normal and as expected?\nYes.\n. Seems it is breaking changes for 2.* version, please change it to:\nimport ExNavigator from '@exponent/react-native-navigator';\nI want 2.0 version to be UI-agnostic - so it can use exNavigator or anything else to render nav bar.\n. Please post example here\n. Where is Launch component passed within index.android.js?\n. Should be fixed for 2.0.5, please check.\n. Should be fixed for 2.0.5, please check\n. Just set hideNavBar={true} and use your search bar as header\n. The same issue as #113, check answer there\n. Please check with 2.0.8\n. I can't reproduce this issue with latest version (2.0.9), could you post exact Example code? \n. Also i need to modify TabView, right? I've used something like this, but my Back button for Tab2_2 always point me to Tab2_1. Are you sure you are using 2.0.9 (demo uses 2.0.6 by default now) ?\n. Please check with latest 2.1.3 version\n. It is interesting, could you do more debug and check when the component is unmount  (stack trace)?\n. I'm closing this ticket, open new one for unmounting with more details\n. Sorry, i can't reproduce, could you should by editing example?\n. Please check master branch now\n. Please check header prop now or pass render function to renderTitle attribute (like it is supported by exNavigator)\n. pop() is most suitable when you need to remove scene from memory. Or try 'reset' type for Main so Actions.Main() will reset nav stack.\n. Try to use hideNavBar for Route.\n. It is in testing phase, so it is not in docs yet.\n. 2.0.5\n. Thanks, looks like i didn't committed some changes, will check now.\n. Please check latest master branch\n. Actions.currentRouter.currentRoute\n\n12 \u044f\u043d\u0432. 2016 \u0433., \u0432 20:38, James Zhang notifications@github.com \u043d\u0430\u043f\u0438\u0441\u0430\u043b(\u0430):\nIs there a way to get the current route stack or the route on the top of the route stack? The navigator object seems to be hidden by the library. Thank you.\n\u2014\nReply to this email directly or view it on GitHub https://github.com/aksonov/react-native-router-flux/issues/117.\n. Looks like it is connected with #110 ?\n. Could you modify Example to reproduce that?\n. Just pass onPush/onPop param to Router with your handler\n. Looks like duplicate of #56 \n. It is switch action, so it should be onSwitch\n\nPavel.\n\n13 \u044f\u043d\u0432. 2016 \u0433., \u0432 17:38, Tristan Godfrey notifications@github.com \u043d\u0430\u043f\u0438\u0441\u0430\u043b(\u0430):\nThanks for your reply @aksonov , for some reason onPush isn't firing when I change route via a tab bar.\nQuick example:\n<Route\n  name=\"home\"\n  type=\"replace\"\n\n\n\n\n\n\n\n\n\nAny idea why this is happening?\n\n\u2014\nReply to this email directly or view it on GitHub.\n. Because navigationBarStyle is property of Router, not Route...\n. could you try hideNavBar ?\n. Check Example, second tab has hidden nav bar.\n. Please check RN Navigator with replace. Looks like it doesn't support animation? This component just reuses standard RN Navigator and passes scene configs to it.\n. Unfortunately that fix doesn't work for next pop() actions. So will wait until React Native guys fix it.\n. Could you submit PR or atleast code example with double headers? Thanks\n. You could use 'leftTitle' property, what is the problem?\n. Please check 2.1.3 version\n. wrapRouter is syntax sugar for: \n\n```\n\n\n\n\n\nIt is needed when you need to use own nav bar for route\n```\n. Where is exception?\n. Why just don't use Actions.ACTION_NAME with type 'reset' ? You may use own TabBar with such actions...\n. Check RN Navigator component behavior - i believe it doesn't unmount components as well...\n. Yes, seems the same issue. Could someone look at it? I have quite limited time nowadays...\n. Please check with latest version 2.1.3, there was error within TabBar component...\n. So why don't use reset action then?\n. Have you tried Actions.reset(route_name) ?  PR about docs is always welcome\n. Please check it, if it doesn't pass with Actions.reset(route_name, params), you may fix it and post PR.\n. Ops, probably you have to define Actions with type=\u2018reset\u2019 and call Actions.ACTION_NAME(params)\n\n21 \u044f\u043d\u0432. 2016 \u0433., \u0432 14:24, rgoldiez notifications@github.com \u043d\u0430\u043f\u0438\u0441\u0430\u043b(\u0430):\nHere's what I get when trying to call Actions.reset() ... any idea?\nhttps://cloud.githubusercontent.com/assets/10797610/12481608/ecebf246-c00f-11e5-8a9f-03ffdc3a411c.png\n\u2014\nReply to this email directly or view it on GitHub https://github.com/aksonov/react-native-router-flux/pull/134#issuecomment-173568284.\n. Looks ok.\n. Sorry, i can't reproduce it. Make sure you installed latest iojs and all steps required by React Native install\n. Should work with latest 2.1.3, please check.\n. Just use proper RN style for 'tabBarStyle' to set it it at the top.\n. No issue here, CSS layout question, so I'm closing it.\n. Could you do it without this component? If so, just split it to header and content (i.e. component) and pass header and component to Route, it must work, check sources, there is no magic.\n. Use setTimeout(()=>Actions.login() instead. Your code doesn't work because Actions.login doesn't exist during getInitialState phase.\n. Cannot reproduce, closing it for now\n. Please give detail description and example code. These properties for Router, not Route.\n. There were breaking changes introduced within 1.x and 2.x versions. So please create issues only for latest versions.\n. Sure, because it is not for Route. Again: API (syntax) was changed, no need to create issues related to old version syntax incompatibility...\n. Each major version update introduces API changes.\n. It is not only change. Now the component uses exNavigator component for navigation\n. There is small probability that recent changes broke something, please try version 2.0.8 for example.\n. 0.3.* version didn't use it, i didn't know what old version you used before.\n. Changes should be minimal between 1.x and 2.x, please try 2.0.8\n. Yes, it could be. \n. Refer to exNavigator for needed styling. The component is wrapper around exNavigator.\n. Ok, please post sample repo which works with 1.x but not with 2.x with screenshots. Information you gave is not enough.\n. Sorry, i can't found problem with it. I need sample repo  i could execute and see broken layout. Anyway, this component is open source, you could try to check where the problem is and submit PR.\n. Hm, that commit was suggested within exnavigator github to fix issue with android devices...\n. Ok, submit PR if you want to remote it.\n.  Closing it for now, because it is for outdated version (2.x). pop(n) is not supported for 3.0, feel free to submit PR for it.\n. Could you clarify? The component doesn't use redux.\n. I'm closing it for now because of lack of details\n. @lynndylanhurley what problem is with Actions.currentRouter.currentRoute ?\n. For v4 you access currentRoute as Actons.currentScene. Yes, it has the same quality as ReactNavigation (that is still in beta too) - recommended way for navigation from Facebook . Even more we fixed some ReactNavigation issues already (like popTo, pass props to tabs, etc.). 2.x is official release now, if it is buggy, post issues.\n. Hi guys, any PR about docs improve would be very helpful, thanks.\n. 3.0 is released with improved docs. Closing it for now, because it is for outdated version (2.x)\n. Closing it for now.\n. Usually just Actions.content() or Actions.popular(..) should work, but looks like problem here in lazy loading - \"content\" Router is not loaded during \"login\" screen, so Actions were not created...\n. @masonwu311 Please provide working example git repo to reproduce this issue.\n. Have you tried type='modal' ? Check Example, Error popup is definitely not full screen...\n. Why don't use latest release from npm? Anyway, i've updated release page with latest release.\n. @mrpatiwi It is NOT intended usage of this component (passing 'items'), i don't see any mention of this in documentation. You could propose PR so i could review and apply if it doesn't break anything.\n. @mrpatiwi Maybe i don't understand the problem. When you call Actions.ROUTE_NAME(params), these params passed to 'component' prop as well to onLeft and onRight props (functions for navigator). \n. Closing it for now, because don't understand what the problem is...\n. @MITDelian Have you submit PR for that?\n. Please check 3.0 version. Closing it for now (because it is for outdated 2.x)\n. It is difficult to understand what you did. ExRouter is just wrapper around ExNavigator and use its refs. For some reasons that refs became null, which should not happen...\n. Yes, maybe you are right. Try to remove it and check what happens. Probably it is needed to avoid nested routers to be set as current one, but maybe it is OK, please check demo and navigation inside tab router.\n. TabBar is not 'core' of this component and provided more for reference as example. It has known problems with performance (for example some methods are called several times, etc.) Any improving PR would be appreciated.\n. Could you check with latest version? I've done some changes into TabBar recently\n. I thought it should not work at all with current version :) Check what animations you are using (sceneConfig). Animations.FlatFloatFromRight disables it at all. The reason - i can't find how to override 'pop' behavior for swipe - I need to call Actions.pop() because built-in pop will not update current router, its stack, etc. Any help would be appreciated here to fix it.\n. This issue should be fixed in upcoming 3.0 release of this component #186 \n. Could you give me use case? I don't want to make the component more complex. Currently component (core) doesn't know anything about 'tab bar'. Why you can't just push from tab route defined from root router? This way tab bar should not be shown for that route.\n. Could you just fix it within TabBar:\nThe problem that route.props.hideTabBar is not passed for Actions call below. pass it and check how it works.\n\nonSelect(el){\n        if (!Actions[el.props.name]){\n            throw new Error(\"No action is defined for name=\"+el.props.name+\" actions:\"+JSON.stringify(Object.keys(Actions)));\n        }\n        if (el.props.selected && Actions[el.props.defaultRoute]) {\n          Actions[el.props.defaultRoute]();\n        } else {\n          Actions[el.props.name]();\n        }\n        InteractionManager.runAfterInteractions(() =>\n            this.setState({hideTabBar: el.props.hideTabBar}));\n        return {selected: true};\n    }\n. @jungsoo108 I've already gave direction above - use something like Actionsel.props.name  within onSelect method, have you tried it?\n. Okey, I've fixed it by myself in way i've described above, please check (version 2.1.9)\n. Yes, i don't post regular versions for github, because it is not automatic, so refer to NPM for latest release.\n. @amrnt Please provide working repo or change current Example appropriately to reproduce the issue.\n. @amrnt I can't \"run\" this (it is only js). Why you can't just change Example appropriately?\n. Sure, it will not work because your inner Router doesn't know anything about his parent route. Check #92 for the same type of error. You have to add route={this.props.route} as param to inner Router. Maybe we should add this to docs...\n. Sorry, it is not supported in v3. Scenes are similar to iOS storyboards. They could be splitted but to sub-storyboards, not classes or something \n. @bodhi Have you tried to do it with Actions.ROUTE({rightTitle:..., onRight:....}) where ROUTE is your new route? \n. Closing it for now.\n. Please check 2.2.0 version and its Example\n. @mmazzarolo Hm... If you can change redux state with currentRoute, what problem to pass this state to the component? It is Redux, isn't?\n. Maybe the component could call something like routeDidFocus (if it exists)? Maybe you could submit PR (just add that listener to ExRouter?)\n. @mmazzarolo Looks very good, could you add it to README and i will close this issue\n. Could you explain this change in more detail? It seems ExRouter already passes their props to Router and Router passes it to child Routes.\n. Okey, what about 'rebuilding' Router when ExRouter receives new props? As I understand it should be componentWillReceiveProps and recreate Router there? For me it is more logical comparing with rebuilding intialStack (but leaving Router the same) as done in your commit, right?\n. To be more exact, i'm proposing to improve ReactRouter and its componetWillReceiveProps\n. We need to carefully test it to avoid any side effects. For example performance issues are possible - there is absolutely no sense to rebuilt router each render if no related stuff is changed. \n. Btw, I'm preparing redux demo (with some redux improvements) now and maybe it will be usable then to show use cases when it is needed (to update router props) on that demo.\n. I'm ok with node-deep-equal\n. Are you sure that this PR will not impact performance ? I.e. initialStack will be rebuilt for any new prop (even not related to router) \n. @ericvicenti Your new experimental API looks very good, but let me explain why i still want to use my component and probably many other people does.\n1. I want to have all my routes in one place. Like Storyboard in iOS, but more convenient (because of JSX). I believe navigation logic should be separated from other code.\n2. I want to have very simple transitions. Like 'performSegueWithIdentifier' in iOS.\nSorry, maybe it is already done in your API but I've missed it....\n. @MITDelian it would be great if you could make it as 'plugin' for this component, like ExRouter. \n. We could really make Router (now it is BaseRouter) immutable and its Routes, so it could be stored in state...\n. Hm, why? Just modify pop/jump within BaseRouter so it will return new BaseRouter instance. This way all logic still will be within BaseRouter.\n. This way also it the component still could be backward compatible with ExRouter (sure, some modification of ExRouter will be necessary)\n. @grin Any problems to make BaseRouter/Route immutable and store it within your state?\n. The problem I don't want this component to depend from redux or any other flux library - many users don't want it at all. Many react native components has own inner state (for example TextInput) and you don't add all their state to redux (for example, in most cases you need to add completed text, but not 'in-progress' text). So you may consider navigation component state as TextInput state or any other...\n. @MITDelian  any ETA for your changes? \n@danielweinmann It looks very good idea, looks like @MITDelian  works on it. I think it even could be not connected with Experimental Navigator API at all. Anyway, PR is welcome.\n. Ok, looks like now this integration is priority No.1 for this component because \n\"Facebook is dropping support for Navigator and will focus on NavigationExperimental from now on\" according to  https://github.com/ericvicenti/navigation-rfc/blob/master/Docs/NavigationOverview.md\n. Also seems we can't make it fully backward compatible (because of reducers & state), i'm going to work on this for next 3.0 release\n. @philipshurpik Looks like 0.21 or even 0.22-rc doesn't contain latest experimental Navigator API changes... Maybe it is too early to work on it because of unstable API - for example latest Navigator example  cannot be run with 0.21.0\n. @philipshurpik , all Okey, i've submitted very early alpha, branch 3.0.0alpha, check Example project there. API & syntax have been changed. Nested containers (Login, TabBar within Example) don't work yet (you may fix it if you can), but go to Register/Register2/Home works with good animation, thanks @ericvicenti for great library, it is really amazing!\n. 3.0 version is released, too pity that nobody was able to help, i thought open source community could be more active...\n. No support, it is not implemented. PR is welcome.\n. https://github.com/sbycrosz/react-native-router-flux/commit/1a386d16b273e42f838e805fbee0e3a63cc9158f Looks interesting, have you tried it?\n. @sbycrosz Well done! Could you submit PR with Example update?\n. Maybe docs are unclear about it, here is explanation: Router is pure router (no react dependency). ReactRouter is adoptation for React. ExRouter is 'plugin' for ReactRouter.\n. I agree with you - Router as component name was used for backward compatibility with prev. versions and for easy reading of route map. Maybe we really should rename current Router class to BaseRouter and ReactRouter to Router, PR would be welcome.\n. Yes, it is from old version, i will remove it. \n. @danielweinmann Why git shows BaseRouter as new file? I thought it show rename from Router to BaseRouter? Did you use git mv command?\n. Also agree about moving to components all React components\n. @danielweinmann Could you do it in correct way?\n. Maybe we could do it later, when we have more plugins :)\n. Modal window should be designed in such way, so it should be impossible to call other action, but only dismiss() from it.\n. Check Example, error popup there. You need to use absolute positioning for that.\n. Unfortunately no at this moment. You could check sources, now modal is just 'view' inserted after navigator within ExRouter. It doesn't have nothing common with navigation and its transitions, so you could send PR to implement it.\n. Yes, it is duplicate of #176. I've created issue in react-native github, because currently i don't know how to add own handler to gesture...\n. Have you voted https://productpains.com/post/react-native/override-swipe-back-behavior/ ?\n. As you can see only 6 persons were affected...\n. Version 3.0 is released, but disabling swipe is not implemented but in the progress:\nhttps://github.com/ericvicenti/navigation-rfc/issues/49\n. Btw, 3.0 should not have problems with gesture, so feel free to create another ticket with correct title.\n. The problem I don't have android. Maybe community could help. Have you tried to debug? This component is just wrapper around exNavigator. Does ExNavigator work well on android?\n. @sbycrosz Is it slow for tab bar or for all pages? \n. Could you check latest version? Also please uncomment console logging within debug.js and check.\n. Please check core exnavigator code \nPavel.\n\n24 \u0444\u0435\u0432\u0440. 2016 \u0433., \u0432 21:18, doomsower notifications@github.com \u043d\u0430\u043f\u0438\u0441\u0430\u043b(\u0430):\nI've tried to debug Example app from version 2.3.1 on Android tablet. Animations were extremely slow.\nHere is console output with debug.js uncommented\nI also made a release build of simple app (using version 2.3.1) and ran it on Samsung Galaxy S3. Again everything was very slow.\nMaybe updating \"@exponent/react-native-navigator\": \"^0.3.5\" to latest will fix it?\n\u2014\nReply to this email directly or view it on GitHub.\n. Ops, \"If a handler returns false, the route action is ignored. For Redux, you will need to 'connect' your component to your store. If 'dispatch' prop is passed to the router, it will be called with current route as route, name as route name and all route props, check Example for more details.\" - no clear what handler here...\n. Does exNavigator support common background? This component is just wrapper around it.\n. Duplicate of #197, is there any PR to fix it?\n. Yes, looks like it is limitation of React Native navigator.jumpTo method, which doesn't allow to pass new properties to existing routes. Could you try new Actions.refresh(props) method? If it works fine you may want to submit PR to add this call at the end of ExRouter.onJump method after jumpTo to update route with new props...\n. Please check latest 3.0 release. I'm closing this ticket because it for 2.x\n. Seems not related to this component, check latest versions for React native.\n. These guys 'cut&paste' my component, added redux support and called it 'inspiration'...\nOk, I don't know why you wrote about this \"component\" here and why you can't use the same here - define come component in root and push it from inner route?\n. Oh, could you give use case? Currently it renders 'root' route outside tab bar...\n. I could suggest to implement some kind of Route 'ref' which will 'clone' some 'root' Route during Router initialization. Maybe someone could implement it, it should be quite easy. Will it solve this problem?\n. Please check latest 3.0 release. Closing this ticket for now (because it is for outdated 2.x)\n. I propose to implement pushToCurrent type which will add scene to current parent - like pop removes current scene, pushToCurrent will push to current scene. So Reducer will replace parent to current one so pop() should work.\n\nPR is welcome.\n. @joenoon Pleas check 3.2.0 version. I did huge refactoring to optimize state management, hope you could implement your change easier now.\n. @joenoon please check latest 3.2.3, i've simplified your PR, maybe too much?\n. Have you tried pure ExNavigator?\n. Brilliant!\n. It maybe related to #207 . You could try to use 'jump' action type.\n. Please try latest 2.3.1 version with new Actions.refresh(props)\n. Cannot reproduce it, please check latest 3.0 release, closing it for now (because ticket was for 2.x)\n. Thanks!\n. You are right, you may add own 'plugin' instead of ExRouter, ReduxRouter that will use some redux state to manage UI. Current BaseRouter/Route could easily be converted to be fully immutable, so you could use it in your state. As I know @MITDelian worked on such approach, but i don't know when he plans to finish.\nAnyway, PR is welcome.\n. Also you may want to check #186 \n. It uses React Native ExperimentalNavigation built-in store. According to https://github.com/ericvicenti/navigation-rfc/issues/52 author doesn't want to mix redux with this store...\n. You should pass 'route' prop to children Router.\n. Have you tried latest npm version? \n\n18 \u0444\u0435\u0432\u0440. 2016 \u0433., \u0432 16:36, Lane Rettig notifications@github.com \u043d\u0430\u043f\u0438\u0441\u0430\u043b(\u0430):\nThanks for the tip! But I only have one Router. What do you mean?\n\u2014\nReply to this email directly or view it on GitHub https://github.com/aksonov/react-native-router-flux/issues/221#issuecomment-185779056.\n. Closing for now. Some fixes was made, please check latest version\n. It looks the same as #197 - currently React Native doesn't allow to override actions for SceneConfigs. So you could implement your own animations and own gestures but don't use Navigator's gestures (you could disable them easily).\n. You may vote for product pain: https://productpains.com/post/react-native/override-swipe-back-behavior/\n. it is duplicate of #197, closing this ticket\n. @jamesone It cannot be fixed in v2. You could disable swipe only (search other issues)\n. Please try new Actions.refresh(props) added to latest 2.3.1 version.\n. You may set needed props and check them within renderRightButton(route) function. It should be accessible via route.props. \n. Should be possible with 3.0 release, closing this ticket for now\n. Have you tried to debug? Stack trace error?\n. Closing it because no answer.\n. Sorry, but error stack is from exNavigator, not from this component. Try to check behaviour without this component, if you will see the same - report bug to exNavigator team\n. I've just added support to set properties without navigator transition using Actions.refresh(props), please try it (version 2.3.1)\n. Cannot reproduce with clean npm install, possibly it was upgrade problems.\n. Just call action, like Actions.home().\nPossibly it should be done within setTimeout(..)\n. Should be possible with 3.0 release (using Switch renderer), closing this ticket for now.\n. route is passed as first argument, so you need to use route.title\n. Could you debug? It maybe bug.\n. Hm, why PR to ex-navigator? ex-navigator is not connected with routing from this component.\nAs far as i see renderTitle is binded to route within ExRouter:\n\nif (this.route.props.renderTitle){\n            this.renderTitle = this.route.props.renderTitle.bind(this.route);\n        }\n. Please check issue for new 3.0 release. Closing this ticket (because it is for outdated 2.x release)\n. @tristangodfrey Yes, it is good idea, old version supported it in the past, feel free to submit PR to support it for latest version...\n. Switch custom renderer for newly release 3.0 version could be used for this, check README. 2.x version is not supported from now.\n.  Currently this component just uses standard react native transitions (sceneConfig property).\nreact-native-custom-navigation looks very nice, all components are open source, feel free to submit PR with improved transitions.\n. 3.0 version is release. It uses new RN Navigation API with better transitions.\n. 3.0 version is released. Closing this ticket (because it is for outdated 2.x release)\n. Should be possible with 3.0 release, closing this ticket for now (feel free to reopen if 3.0 release has this problem)\n. I don't understand, sorry.\n. params starting from 'render' should be functions returned React component, not react component itself.\nalso the component doesn't have rightButtonPress param, check docs\n. There is documentation. You may add example PR if you want.\n. Just pass route attribute to children route, route={this.props.route} or just {...this.props} to child Router\n. 3.0 version just released, please check it. 2.x release will not be supported except very critical issues.\n. Please check latest version, 2.3.0, setting initial for Route will set initial route.\n. duplicate of #238\n. Duplicate of #240\n. Feel free to submit PR, name style as routerStyle or something like that\n. Duplicate of #340 \n. Probably it is default React Native Navigator behaviour. You may disable gestures within your sceneconfig to disable it.\n. I don't know any docs... Maybe you could ask React Native team about that.\n. Sorry, but it could brake existing apps. Why binding to this.route is not enough for rendering?\n. Looks like the problem that Route doesn't update their props during actions. Then probably we have to fix BaseRouter. It should modify stack route with latest props, could you check there?\nFor example:\n_push(name:string, props:{ [key: string]: any} ){\n        this._stack.push(name);\n    }\nProbably it should be added :\nthis.routes[name].props = Object.assign({}, this.routes[name].props, props);\nWhat do you think? I don't have much time now to add such calls for all action types, check if everything is OK with demo, maybe someone could check.\n. @danielweinmann Could you look it? I still don't like your fix when you rebuild whole route stack for new props coming from Router, maybe it would be more correct to fix BaseRouter and set new props after each action there?\n. Closing it for now because of 3.0 release is published.\n. I'm doing following in my project - using not ref, but context and pass contextTypes for all chain:\n```\nimport React from 'react-native';\nimport Drawer from 'react-native-drawer';\nimport SideMenu from './SideMenu';\nimport {Route,Router} from 'react-native-router-flux';\nexport default class extends React.Component {\n    render(){\n        return (\n            //Material Design Style Drawer\n            }\n                tapToClose={true}\n                openDrawerOffset={0.2} // 20% gap on the right side of drawer\n                panCloseMask={0.2}\n                negotiatePan={true}\n                styles={{main: {shadowColor: \"#000000\", shadowOpacity: 0.4, shadowRadius: 3}}}\n                tweenHandler={(ratio) => ({\n                     main: { opacity:Math.max(0.54,1-ratio) }\n                })}\n            >\n                {React.Children.map(this.props.children, c => React.cloneElement(c, {route: this.props.route}))}\n            \n    );\n}\n\n}\nRouter.contextTypes = {drawer: React.PropTypes.object};\nRoute.contextTypes = {drawer: React.PropTypes.object};\n```\nThen, in my screen component:\n```\n...\n// inside render()\n            this.context.drawer.toggle()} style={{width:60*k,justifyContent:'center',alignItems:'center'}}>\n                \n\n...\nHome.contextTypes = {drawer: React.PropTypes.object};\n```\n. You hidden root nav bar and then switched to 'root' route then sure, it will not have navbar. Have you tried to put renderLeftButton, renderRightButton to root router and show it?\n. You may check 3.0 release now with approach of 'custom' renderer. Closing this ticket for now.\n. Have you tried setTimeout(()=>Actions.tabbar()) ?\n. Nobody complained about this before, it was done for easier 'naming' of Routes. It is used by TabBar for example to do unique tabs as well for Actions\n. Yes, you need to run action in next cycle, even with standalone navigator you have to do it. Duplicate of #228.\n. @chetstone You are right, latest changes broke 'back' button functionality, didn't found the reason yet, reverted to old solution...\n. It should be the same as hideNavBar, i believe\n. Check latest version (2.3.6), if it doesn't work, please check demo, it hides/show navbar within tabbar.\n. Please check 2.3.7\n. Added customization of nav bar again (2.3.7 is like 'reverted' version), please check 2.3.8, hope i didn't break it again ;)\n. What problem with it? Anyway the question seems not related to this component (renderTitle is just passed to exNavigator)\n. You might implement something like TabBar, which iterates for children and passes them to react-native-tabs. Your ScrollableTabView  will iterate over inner Routes, create components and pass them to scrollable-tab-view.  Let me know if you will have any problems with it.\nFeel free to submit it as PR for this component.\n. It is quite easy now with 3.0 release (custom renderer, check TabBar sources), closing this ticket, feel free to submit PR\n. Please check 2.3.7\n. Feel free to submit PR for improving documentation. Btw, there is quite large discussion at redux github about having only one connect for top-level component, and i don't agree with this sentence.\n. Please check 2.3.7, should be fixed.\n. What is problem to use hideNavBar only?\n. Please check 2.3.7\n. Then it means different issue. Ok, please modify Example to reproduce this bug in sample repo.\n. Closing it for now. Feel free to re-open when sample repo will be ready. \n. componentDidMount should not be fired for pop. You need to check onFocus handler for this.\n. Check 3.0 release, now the component uses new React Native Navigation API. However it has a little bit different API comparing with 2.x release. Anyway I'm closing this ticket because 2.x release will not be supported except critical bugs.\n. It is not question about this component but about Javascript, please post them at Stackoverflow. Actions.LoginScreen is function, why you don't call Actions.LoginScreen() ? Also it may not exist on this stage, so you could use setTimeout(()=>Actions.LoginScreen())\n. Could you reproduce it on our Example?\n. Feel free to improve it by sending PR.\n. Check 3.0 release, now the component uses new React Native Navigation API and I've added nav bar buttons to Example. However it has a little bit different API comparing with 2.x release. Anyway I'm closing this ticket because 2.x release will not be supported except critical bugs.\n. It is NOT supported now  - customisation of nav bar for each route. PR will be welcome.\n. Please check latest release, it should be fixed\n. @RWOverdijk Because arrow is blue image, you can't change its color (v3 version). You could set your image there or submit PR to replace image with some vector graphics using ReactNativeART for example...\n. Should be ok with latest version.\n. Check demo for hideNavBar, Tab#2 has this property and navbar is hidden. \n. Check 3.0 release, now the component uses new React Native Navigation API. However it has a little bit different API comparing with 2.x release. Anyway I'm closing this ticket because 2.x release will not be supported except critical bugs.\n. Unfortunately V3 animations were sluggish and buggy, that is why I wrote V4 based on react-navigation. Looks like react-navigation allows black/dark background - use <Router cardStyle={{backgroundColor:'black'}}>...</Router> and navigationBarStyle to set proper navbar style.. Check 3.0 release, now the component uses new React Native Navigation API. However it has a little bit different API comparing with 2.x release. Anyway I'm closing this ticket because 2.x release will not be supported except critical bugs.\n. It is difficult to say from the your code, could you check Example? Tab#1, Tab#2, etc are displayed correctly as titles for tabs.\n. Again, please modify this component Example project to show the problem.\n. What problem to set another component for some tab? Sorry, if it works without redux, but doesn't work with redux, then it is not the problem of this component...\n. For what? It is not related to this component.\n. Thanks for the feedback! Please check latest 2.3.11\n. Sounds good.\n. What about setting  Actions.currentRouter to that 'hidden' stack, doing pop and then restore currentRouter? \n. Hm, give him different properties then to distinguish stacks. Or i don't understand the question\n. Doing this.props.route.pop() looks better option..\n. The component doesn't do anything with event emitters. It is just wrapper around React native navigator.\n. use onPop handler (for Router) or redux events (check docs)\n. It is all about css styling. Feel free to create your own TabBar. You may use own 'buttons' or react-native-tabs\n. popToRoute is \u2018switch\u2019 type, please try to use it\n\nOn 08 Mar 2016, at 20:30, thngdude notifications@github.com wrote:\nI'm trying to achieve a Navigator.popToRoute effect as follows:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe flow would be as follows:\n1) Actions.route('router1') from launch to push aRoute\n2) Actions.route('bRoute') from aRoute to push bRoute\n3) Actions.route('router2') from bRoute to push router2, which defaults to cRoute\n4) Actions.route('dRoute') from cRoute to push dRoute\n5) call Actions.currentRouter.parentRoute.parent.pop() to pop router2 and return to router1 (on bRoute)\n6) Once popped back to bRoute, I call Actions.route('router2') again, but I get the following error:\nNo current router is set\nWould appreciate your advice whether this is the correct way to accomplish this popToRoute kind of effect, or if there is a better way to do so.\nThanks\n\u2014\nReply to this email directly or view it on GitHub https://github.com/aksonov/react-native-router-flux/issues/296.\n. It is wrong use case - modal should not be called twice, prevent it from your code.\n. Should be fixed for 3.0 release\n. You may check how it works. I didn't test it with several popups yet.\n. And 3.0 is not backward compatible...\n. I'm closing it for now\n. I don't understand the problem - it is all about css styling. did you try to use paddingTop or top ?\n. Sorry, but it is not the component issue.\n. Please use search before posting. Duplicate of #253.\n. No, it will not work.\n. Okey, i'm working now on 3.0 release, that release will not have any problems with unit tests, so you need to wait. Or community could suggest something.\n. Check 3.0 release, now the component uses new React Native Navigation API and it should be easier to test. However it has a little bit different API comparing with 2.x release. Anyway I'm closing this ticket because 2.x release will not be supported except critical bugs.\n. 3.0 release doesn't have any docs, please check Example and unit test, it is quite self-explanatory. Now it has everything as Scene element and unique key is required for each (not name).\nAll routing data (scenes) could (and maybe should) be defined during compile time so this release will not have problem \"action is not defined\" when some component tries to call action within componentDidMount.\n. Also unit tests (for Schema) would be very helpful. Note, 3.0alpha still have a lot of missed functionality, but basic routing works. Swipe back works! :)\n. Please check latest 3.0 release\n\nPavel.\n\n17 \u043c\u0430\u0440\u0442\u0430 2016 \u0433., \u0432 05:11, Perry Poon notifications@github.com \u043d\u0430\u043f\u0438\u0441\u0430\u043b(\u0430):\n@aksonov Is it fixed already?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly or view it on GitHub\n. Check 3.0 release, now the component uses new React Native Navigation API and you may pass own reducer without subscription to 'event's. However it has a little bit different API comparing with 2.x release. Anyway I'm closing this ticket because 2.x release will not be supported except critical bugs.\n. Don't use 3.0alpha, it is not ready yet\n\nPavel.\n\n14 \u043c\u0430\u0440\u0442\u0430 2016 \u0433., \u0432 10:48, Josh Bedo notifications@github.com \u043d\u0430\u043f\u0438\u0441\u0430\u043b(\u0430):\nTrying to install this on my project but i can't seem to get past this error, does anyone have any ideas how i can fix it?\n\u2014\nReply to this email directly or view it on GitHub.\n. Check Example project. v3 has different API.\n. Check 3.0 release, now the component uses new React Native Navigation API. However it has a little bit different API comparing with 2.x release. Anyway I'm closing this ticket because 2.x release will not be supported except critical bugs.\n. 3.0 release should solve this problem. However it has a little bit different API comparing with 2.x release. Anyway I'm closing this ticket because 2.x release will not be supported except critical bugs.\n. Check docs carefully. renderRightButton is closure (function) not array.\n. It is not issue but feature and standard behaviour of built-in React Native Navigator (as well as native iOS navigator).\n. It is not true. It will be not covered only if you set translucent property:\nhttp://stackoverflow.com/questions/18953509/how-to-prevent-uinavigationbar-from-covering-top-of-view-in-ios-7\n\nOk, anyway React native doesn't have 'translucent', so you have to set padding. Otherwise transparent nav bars are not possible.\n. 3.0 release should solve this problem. However it has a little bit different API comparing with 2.x release. Anyway I'm closing this ticket because 2.x release will not be supported except critical bugs.\n. 3.0 release should solve this problem using Switch renderer, check README. \nHowever it has a little bit different API comparing with 2.x release. Anyway I'm closing this ticket because 2.x release will not be supported except critical bugs.\n. Why you wrapRouter here? \nCheck 3.0 release, now the component uses new React Native Navigation API. However it has a little bit different API comparing with 2.x release. Anyway I'm closing this ticket because 2.x release will not be supported except critical bugs.\n. 3.0 release should solve this problem (no dispatch is called). However it has a little bit different API. Anyway I'm closing this ticket because 2.x release will not be supported except critical bugs.\n. 3.0 release should solve this problem. However it has a little bit different API. Anyway I'm closing this ticket because 2.x release will not be supported except critical bugs.\n. Closing it for now because of 3.0 release is published.\n. @emrosenf Check original navigation API github:\nhttps://github.com/ericvicenti/navigation-rfc/issues/52\nAlso nice discussion here:\nhttps://github.com/ericvicenti/navigation-rfc/issues/29\nSo author doesn't want to unite redux/navigation states and i'm ok with it.\n. v3.0 release is just wrapper around new Experimental Navigation API. So try that API without my component (React Native UIExplorer project) and check behaviour and report if it is slow.\n. Please read my answer again. \n. Try 0.22-rc\nPavel.\n\n16 \u043c\u0430\u0440\u0442\u0430 2016 \u0433., \u0432 20:50, Nick Leonov notifications@github.com \u043d\u0430\u043f\u0438\u0441\u0430\u043b(\u0430):\nLooks like I'm doing something wrong.\nindex.android.js\n'use strict';\nimport React, { AppRegistry, Component } from 'react-native';\nimport { Router, Actions, Scene } from 'react-native-router-flux';\nimport Home from './src/scenes/Home';\nconst scenes = Actions.create(\n  \n\n\n);\nclass MyApp extends Component {\n  render() {\n    console.log(scenes);\n    return (\n      \n    );\n  }\n}\nAppRegistry.registerComponent(MyApp', () => MyApp);\n gives me action should be defined error pointing to Reducer.js:123\nUsing RN 0.21.0\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly or view it on GitHub\n. Try 3.0.9, removed that file.\nOn 16 Mar 2016, at 22:48, Rmannn notifications@github.com wrote:\nAfter updating, i got \nUnknown plugin \"transform-class-properties\" specified in \"***/node_modules/react-native-router-flux/.babelrc\"\n\u2014\nYou are receiving this because you commented.\nReply to this email directly or view it on GitHub https://github.com/aksonov/react-native-router-flux/issues/325#issuecomment-197563323\n. Closing it for now, feel free to create issues if any.\n. @Rmannn could you create separate 'action' with separate key for  profile (OtherUser)  ?\n. please check 3.0.11\n. Check Example and set duration to {1} for Scene to avoid animations. Maybe you could propose PR for that. For example you could wrote own custom renderer based on TabBar without animation.\n\nI'm closing this ticket.\n. @liangmicha check above and README about required react-native version (0.22-rc) before posting. Hope that will upgrade to 0.22 on Monday...Closing this. \n. Just define styles above scenes. It is javascript.\n. Have you run npm install ?\n. please check 3.0.11\n. have you set hideNavBar for that scene?\n. Could you modify Example to show the problem?\n\nOn 17 Mar 2016, at 10:28, ajoshdee notifications@github.com wrote:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u2014\nYou are receiving this because you commented.\nReply to this email directly or view it on GitHub https://github.com/aksonov/react-native-router-flux/issues/332#issuecomment-197786840\n. 0.22 is supported now.\n. Actions.Help is Function!\n. Are you sure that all route have 'switch' type, check Example project for details? Anyway 2.x is not supported anymore, you need to use 3.0 release\n. Does backButtonStyle work?\n. @stolinski It will not work because default back button is just image with blue arrow. Just render your own button, using renderBackButton method\n. It is what used now in React Native NavigationHeader component. Feel free to submit PR with  better solution \n. I can't reproduce it. I've just replaced TabBar within Demo to Switch:\n\n<Scene key=\"tabbar\" component={Switch} tabs={true} default=\"tab2\" selector={props=>props.default}>\nAnd it works well - it selects 'default' tab.\n. Please check 3.0.12, should be fixed there\n@ylquankai  Sorry, it is out of scope of the component, but you may submit PR for this.\n. The problem in NavigationCard of React Native package:\n<Animated.View\n        {...panHandlers}\n        style={[styles.main, animatedStyle]}>\n        {this.props.renderScene(sceneProps)}\n      </Animated.View>\nSo the component can't pass own style to NavigationCard and it is weird. Please create issue there if you want it to be fixed:\nhttps://github.com/ericvicenti/navigation-rfc\n. Looks like rc4 doesn't have this change, but master does. Anyway i've added this feature to the component (once NavigationCard will have style support, it should work), release 3.0.14\n. Check code above:\nstyle={[styles.animatedView, navigationState.style]}\n``\n. For each scene.  If you want to set globally you can wrap View around Router, but current Navigation API doesn't support it, you have to wait until current master  will be published as i said above.\n. Read my answer again. i said 'master', not rc-4...\n. @zelphir You may use new feature #356 with 3.1.0 - you can pass some property to all scenes from Router. So you could pass sceneStyle, for example, and then use props.sceneStyle within your Scene...\n. Have you called Actions.pop() and it doesn't work? Check final state from reducer after pop action.\n. Closing it for now.\n. Have you set leftTitle? Check Example, one tab has Left button there.\n. Define your reducer and pass it to Router -  you will see all actions there.\n. Have you provided static renderNavigationBar method for your component? Then it cannot be undefined...\n. Ugh, method is not static....\n. This component is just wrapper around NavigationExperimental API. Just reproduce it with UIExplorer examples (without this component) and post your issues there:\nhttps://github.com/ericvicenti/navigation-rfc\n. You have to implement it by yourself using React Native Animated API. Check AnimatedNavigationView. I've already posted request to add bottom to top animation there:\nhttps://github.com/ericvicenti/navigation-rfc/issues/47\n. Looks like documentation about custom animation is here:\nhttps://github.com/ericvicenti/navigation-rfc/pull/53\n. I've added support of direction, check Example for 3.0.14, Login page\n. Should be fixed in 3.0.12\n. It is fully configurable by using duration property.\n. I'm fine to change 'default' duration if you can say exact value for native iOS animation duration. Now it is equal to 500ms.\n. It looks like enhancement. \"JUMP\" action within new Navigation API just switches tab. As I see you want to do PUSH + JUMP in the same action... Have you tried to jump to tab1 and then push to tab1_2 ?\n. Feel free to submit PR.\n. Should be OK now just with one Action (v3.22.17)\n. just use \nnavBar={Title} title=\"eifj\"\ntitle should be passed to Title automatically.\n. @naji247 I can't reproduce it. Please change Example accordingly to show the problem. \n. Sorry, it is not supported behaviour.\n. Scene setup is analog of iOS storyboards. You could split it to many smaller 'storyboards' by including own components that contains Scenes. But config should be static like iOS storyboards.\nPavel.\n\n20 \u043c\u0430\u0440\u0442\u0430 2016 \u0433., \u0432 15:35, Alexis notifications@github.com \u043d\u0430\u043f\u0438\u0441\u0430\u043b(\u0430):\n@aksonov That is really something I think you should support, that is the main philosophy behind React, to be able to have component within a component, without the parent having the need of being aware what the child does exactly, as long as it does it.\nFor this reason I will stop using your component for sure, as it doesn't support this very-important feature that most well-developed large mobile applications really need.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly or view it on GitHub\n. from NavBar:\n\n```\n        if (state.renderLeftButton){\n            this._renderLeftButton = state.renderLeftButton;\n        }\n        if (state.renderRightButton){\n            this._renderRightButton = state.renderRightButton;\n        }\n        if (state.renderBackButton){\n            this._renderBackButton = state.renderBackButton;\n        }\n```\nPlease debug and feel free to submit PR if it doesn't work properly.\n. @jarredwitt No need to post sources here (it is for issues not for source code), just submit PR and i will review.\n. Okey, i've found that props were not passed for nested scenes, please check 3.1.1\n. @linyize Sorry, renderTitle is not supported (because of animation of titles), i've removed it from docs.\n. @jarredwitt I've just added renderRightButton to Example for tab #5, i see it without any problem\n. Example, tab#5 contains custom right button (just unclickable text)\n. Are you joking? Have you ever read answer above? tab n5 contains right button from Example project.\n. It is just wrapper around new Navigation API. Check performance within React Native UIExplorer example for that API\n. Guys, I don't understand why you are posting it here. The component is just WRAPPER and use new Navigation API, so please complain it here : https://github.com/ericvicenti/navigation-rfc or at react native github.\n. Any screenshot? Looks like it is about Relay but not about this component \nPavel.\n\n20 \u043c\u0430\u0440\u0442\u0430 2016 \u0433., \u0432 19:45, rgovindji notifications@github.com \u043d\u0430\u043f\u0438\u0441\u0430\u043b(\u0430):\nI am using Relay with my project but when I try render a scene that contains my News Feed I get an undefined error saying the property hasn't been set. I define the Scene's and then I wrap the Router in a relay container which has a fragment for the NewsFeed page. If I don't use the Navigator then the newsfeed renders fine. Here's what I am trying below:\nconst scenes = Actions.create(\n    \n\n\n\n\n\n\n);\nexport default class SampleApp extends Component {\n  render() {\n    return (\n       \n    );\n  }\n}\nexport default Relay.createContainer(SampleApp, {\n  fragments: {\n    viewer: variables => Relay.QLfragment on Viewer {\n        id\n        ${NewsFeed.getFragment('feed')}\n      },\n  },\n});\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly or view it on GitHub\n. It is definitely not about this component. The current component is just wrapper around new nav api\n\nPavel.\n\n20 \u043c\u0430\u0440\u0442\u0430 2016 \u0433., \u0432 21:17, rgovindji notifications@github.com \u043d\u0430\u043f\u0438\u0441\u0430\u043b(\u0430):\nI managed to get it to work by doing adding the \"viewer\" property manually to the NewsFeed scene.\nrender() {\n    scenes.NewsFeed.viewer = this.props.viewer;\n    return (\n       \n    );\n  }\nIs this the proper way to do this?\nI also have an issue now with the NewsFeed scrolling performance is bad. It is a ListView and when I scroll it will lose a lot of frames. This didn't happen when I was rendering the NewsFeed as a standalone component.\n\u2014\nYou are receiving this because you commented.\nReply to this email directly or view it on GitHub\n. Yes, if viewer is required property that set by Relay, you have to pass it manually because Router doesn\u2019t know about it.\nMaybe the component could pass all their props to all children automatically to solve this (except scenes and probably style), feel free to submit PR or i could do it when i have time\u2026\n\nMaybe you could rename this ticket accordingly (like \"pass Router props to all Scenes\") To pass style we could use sceneStyle, for example, so you could set \u2018default\u2019 scene style this way.\n\nOn 20 Mar 2016, at 21:19, Pavlo Aksonov aksonov@gmail.com wrote:\nIt is definitely not about this component. The current component is just wrapper around new nav api\nPavel.\n20 \u043c\u0430\u0440\u0442\u0430 2016 \u0433., \u0432 21:17, rgovindji notifications@github.com> \u043d\u0430\u043f\u0438\u0441\u0430\u043b(\u0430):\n\nI managed to get it to work by doing adding the \"viewer\" property manually to the NewsFeed scene.\nrender() {\n    scenes.NewsFeed.viewer = this.props.viewer;\n    return (\n       \n    );\n  }\nIs this the proper way to do this?\nI also have an issue now with the NewsFeed scrolling performance is bad. It is a ListView and when I scroll it will lose a lot of frames. This didn't happen when I was rendering the NewsFeed as a standalone component.\n\u2014\nYou are receiving this because you commented.\nReply to this email directly or view it on GitHub https://github.com/aksonov/react-native-router-flux/issues/356#issuecomment-199009885\n. Should be done for 3.1.0\n. Pass your function to Router as reducer param. You may also redirect actions to 'default' reducer from your reducer (check how to create it from Router sources)\n. Have you tried to pass own reducer as i said? \n. what means this.State?? State is module of the component. Sorry, i'm not tutor and it is not resource to support javascript beginners.\n. Sorry, syntax is still wrong, please study javascript, check sources, i don't see any problem with it. It is not the problem of the component.\n. I've put comments where it is necessary. Please check React Native sources do you see any comments there? You may also compare v2 and v3, i've fully rewritten v3 to make it as simple as possible.\n. @ajoshdee Okey, i've added custom reducer to example, hope it will help.\n. @thessem Okey, where is PR?\n. Check https://github.com/ericvicenti/navigation-rfc/issues/49\n. Looks like it is not in 0.22 release. Anyway i will post version that pass panHandlers to NavigationCard.\n. Yes. However 0.22 doesn't support passing panHandlers yet, probably 0.23 will.\n. Yes, use your own NavigationCard, AnimatedNavigationView and your renderer instead of DefaultRenderer.\n. What is your empty example about? I've added passing of style to Example project and Launch page gets it normally.\n. Where are Actions, Scene imports?\n\n\nPavel.\n\n22 \u043c\u0430\u0440\u0442\u0430 2016 \u0433., \u0432 09:00, Denis Baranovskyi notifications@github.com \u043d\u0430\u043f\u0438\u0441\u0430\u043b(\u0430):\n@timzaak yes, of course\nimport Home from './Home'\nconst scenes = Actions.create(\n  \n\n\n\n\n);\nclass App extends React.Component {\n    render() {\n        return ;\n    }\n}\nThis code generate the error given above.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly or view it on GitHub\n. Sorry, i can't reproduce and see Launch screen normally (after fixing missed styles where is not declared in your example). Try to add console.log(Router, Scene), something wrong with your dependencies.\n. @shivangbtech Always write your version of RNRF. i guess that example depends from v2 version.\n. That is why you have got the error.... Are you sure that example could use this version? author said that it depends from v2.\n. Why you can't check Example project from RN 3.22.1 ? It has Drawer for tab bar..\n. Also this error (props should be defined for stack) could happen if you pass several scenes, without Root one to Router. Anyway, latest 3.22.5 wraps such scenes with Root one automatically now\n. You must define key for each Actions.\n. Please check 3.1.4\n. I can't reproduce it\n. No. They are different components. Read React Native docs how to communicate between different components.\n. Duplicate of #364 \n. Sorry, it is not responsibility of this component.\n. No, it is default behaviour of React Native NavigationHeader (NavBar is improved copy of it) component - looks like many developers prefer it without displaying of title of prev. route.\n\nAnyway you could use renderBackButton to render text or something or submit PR to improve the component.\n. SideMenu should have single child, Scene container. Please try to reproduce the issue on component Example. Also you could try to debug by printing state within Reducer - reducer cannot find parent of 'welcome' action for some reason.\n. Could you modify Example project to reproduce the issue?\n. You may also print incoming state passed to defaultReducer to understand why it cannot find parent...\n. So you want to go inside tabs container (i.e jump + push) ? Is it duplicate of #350 ?\n. @gustavovnicius Good catch! Looks like you are right, Reducer should iterate also over 'scenes' where all scenes are stored.\n. @gustavovnicius However Drawer should have only one child, check example.\n. @jeroenbourgois Actually it is not error. You are requesting from component several actions at once (jump + push). So it could be good enhancement, yes, but not error.\n. We have \u2018clone\u2019 property now for such cases (to run some screen from different locations). You could define such screen at root level with clone attribute and then call it where you want.\n\nOn 30 Mar 2016, at 10:17, Jeroen Bourgois notifications@github.com wrote:\n@aksonov https://github.com/aksonov ah ok. I did not realize that I was doing multiple actions, since I called only one action. So that might solve my inital problem too, but then when I would press 'back' it would go back to the intermediate route which I never wanted to access anyway...\nLike in the Example, when I am on the register page and I want to go to loginModal2, I should have two actions, one to go to login and then to loginModal2. But when I press back, will I go to register? Probably not, but Login instead\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly or view it on GitHub https://github.com/aksonov/react-native-router-flux/issues/370#issuecomment-203314817\n. v2 is not supported. NavigatorIOS is not supported by React Native and this component as well.\n. It is how NavigationView works. This component is just wrapper around Navigation API:\n\n<View\n        style={this.props.style}>\n        {this.props.navigationState.children.map(this._renderScene)}\n      </View>\nYou always could implement your custom renderer instead of TabBar to avoid this. Feel free to do it and PR would be very appreciated.\n. As you see sceneKey ends with underscore. It means that it is inner scene. Each tab scene should contain inner scene with navbar, so navbar could be displayed:\n// wrap scene if parent is 'tabs'\n            if (parentProps.tabs) {\n                const innerKey = res.key + '_';\n                const inner = {...res, name:key, key: innerKey, type: PUSH_ACTION, parent:res.key}\n                refs[innerKey] = inner;\n                res.children = [innerKey];\n                delete res.component;\n            }\n. Seems duplicate of #355 \n. Check latest version\n\nOn 23 Mar 2016, at 11:19, Peter Kowalczyk notifications@github.com wrote:\nI am on react-native 0.22 and react-native-router-flux 3.1.3 with hot reloding [HMR], after first HMR reload I got following error\nhttps://cloud.githubusercontent.com/assets/10186048/13956908/730928a0-f042-11e5-8c2a-988066f2b0f9.png\nProblem is caused by Actions.create\nThis is my current setup:\nlet scenes = Actions.create(\n     \n\n\n);\n\n      {() =>\n        \n      }\n    \nI tired this also, but doesn't work at all - nothing renders\n\n      {() =>\n        \n\n\n\n\n      }\n    \nTemporary solution is to call when working with HMR is to call components directly without Router\n{() =>\n        \n      }\n..\nLet me know if you have any ideas, so I can test them :)\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly or view it on GitHub https://github.com/aksonov/react-native-router-flux/issues/376\n. It is not true. 3.1.5 doesn't throw exception for existing keys anymore\n\nif (this[key]){\n            console.log(\"Key \" + root.key + \" is already defined!\");\n        }\n. It is not issue but logging. It still could be usable if user really defines several scenes with the same key. For hot reload you could ignore it.\n. Duplicate of #368 \n. Please check 3.1.6\n. @gaykov I believe you should always prefer composition over inheritance in react native world (btw, maybe it could be true for any language). As I see you are using private API of NavBar, so it easy could be broken (or already broken)\n. @A1ex5andr It is out of scope for this component. You will probably need onPress={()=>{Action.NAME();drawer.hide()}\n. Should be fixed with 3.1.6 \n. Check 3.2.2, reducer doesn't change state for push the same route again.\n. Why Switch doesn't have 'tabs' property?\n. Switch is analog of 'switch' operator. Tabs are 'case' conditions.\n. You should hideNavBar also for launch too, because all tabs are wrapped by NavBar.\n. @joenoon Thanks for PR! \nPlease check 3.1.6\n. @Mokto You have to include inner composite stack into your 'Layout', check docs.\n@evollu Should be fixed within 3.1.6\n. README. There is sample for Drawer.\n. Please check my notes. Is it possible not to modify state.scenes?\n. Closing it. Feel free to submit new PR for latest version. I hope it will be just setting parent to current one for pushToCurrent actions.\n. I believe it happens because currently the component copies full state using Immutable.fromJs().toJS() I know it is not effective, if you know better alternative to modify some substate only quickly, please submit PR.\n. Another possible reason is 'current' key for scene is always changing, so root router will always re-render because it will thought that his property is changed. I'm going to remove it and use getCurrent() function instead\n. Okey, I've done major refactoring to improve state management within reducer, now it is not fully cloned, but only partially, please check carefully 3.2.0, some bugs may occur...\n. Closing it for now (because of silence)\n. Because other scene doesn\u2019t have your navbar. You need to define your navbar for parent scene\n\nOn 25 Mar 2016, at 09:11, yeshanqi notifications@github.com wrote:\nHi,\nI define the static method renderNavigationBar in my Scene component and it works well, but during transition animation the default NavigationBar appear again, replacing my custom NavigationBar\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly or view it on GitHub https://github.com/aksonov/react-native-router-flux/issues/393\n. Hm... I'm not sure that you are using modals correctly... Could you check Example and how 'error' popup modal works there?\n. Hm, Actions.refresh(props)? I've added it to Example, to login screen (it changes title)\n. Hm, you said \"pass new props the current route\". Anyway you may try Actions.refresh({key:KEY, ...props}) where KEY is that component...\n. 3.2.1 should allow setting key for refresh action.\n. Why you can't do Actions[scheneKey]();?\n. Feel free to submit PR\n. Please modify Example accordingly to show the bug. From your sources it is not clear - it could be parent navbar that hides children one.\n. Closing it until you give me Example modification.\n. I can't reproduce it with latest version (3.2.4), it is shown above nav bar correctly.\n. Could we avoid modification of scenes? It will cause re-rending of whole nav tree. I don't understand why that 'cloned' Scene cannot have the same sceneKey as original scene. Because of parent? I believe for pushToCurrent you could just set parent before 'update'. Maybe i'm missing something please tell.\n\nI also don't like addition of new attributes to Scene, could you just define new action type?\n. So what the problem to create pushToCurrent action type, search 'current' parent and push it there?\n. Okey, i will merge and then I or you will try to improve.\n. You need to fix refresh then to find current screen (with unique key using findElement) and return properties from there, so you will be able to set rightTitle and onRight only for that screen....\n. Seems duplicate of #355\n. Could you check UIExplorer ExperimentalNavigator tab demo (from React Native 0.22 package)?\n. Kind of duplication #355. Sorry, ask React Native team to support ExperimentalNavigation properly for Android/Windows! This component is just wrapper around it.\n. It looks great, but could you add it to existing Example (tab bar screen) to switch tab1..tab5 ? I don't want to have two example projects because i will have to support both for any fixes/changes.\n. Great!\n. @Froelund Sorry, it doesn't work properly for me - i see that button at start screen and all titles within tab bar are hidden (issue #421)\n. Improved Example with Drawer\n. There is already request #423 for new version.\n. I can do change logs, but it will make all things much much slower - so far many people want to use but nobody want to help.\nAlways check latest npm versions from NPM, not from github (because i can't create each version there)\n. Please always search existing issues first. Duplicate of #372\n. v2 is not supported now, sorry. Check v3.\n. v3 uses 'async' Navigator API, so it is not the problem, but the feature :) Check UIExplorer with ExperimentalNavigation API, how it works there.\n. @levinqdl Are you using 0.23 ?\n. 0.22 is supported now. 0.23 is not even released, i can't  (and should not)  make sure that my component will work with release candidates...\n. Closing it for now, please report if it is not fixed in latest 3.2.4\n. It is not supported within v3 right now, PR will be welcome.\n. @cgreening Have you tried Actions.pop();Actions.pop() ?\n. Looks like PR #406 brake things, i've partially reverted it (removed from Example), please check latest version (3.2.4)\n. Please search for existing issues before creation of new one! Duplicate of #359\n. Yes, i've got error about AssetRegistry so i've reverted it back...\n. Check Example project. Submit PR to improve docs if anything.\n. What you did is not 'replace' but 'reset' action. You may add it and submit PR (also add it to README)\n. \" selects the scene which is defined before the currently selected and b) deletes the last scene in the list.\"  - is it not definition of pop? Please modify Example project accordingly to show the issue. It is absolutely useless to give me some scenes config from your app.\n. Hm... Are you using pop for tabbar (tabs=true)?\n. And what did you expect from pop for TabBar? Where is it in example? pop() for tab bar doesn't make any sense. I will add assert call to throw exception in this case. \n. Looks ok, but could you unite getElement and getChildForKey? Like i did within inject:\nconst condition = action.type == REFRESH_ACTION ? state.key === props.key || state.sceneKey === action.key : state.sceneKey == props.parent;\n. Please check React Native UIExplorer example, ExperimentalNavigation section and compare animation. This component is just wrapper around it, it doesn't provide 'own' animation.\n. Why tab items are replace? Please try to reproduce bug on example project.\nPavel.\n\n29 \u043c\u0430\u0440\u0442\u0430 2016 \u0433., \u0432 19:42, Mokto notifications@github.com \u043d\u0430\u043f\u0438\u0441\u0430\u043b(\u0430):\nHi,\nWhen I upgrade to 3.2.2 -> 3.2.5, my tabs routes are broken.\n\n\n\n\n\n\n\n\n\n\n\n\nReplace routes are working fine, but when I do Actions.menu(params), the custom Reducer receives proper actions, but routes are not visually pushed.\nIt is working fine in 3.2.1.\nPlease let me know if you need anything else.\nThanks for your work and keep going ! :)\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly or view it on GitHub\n. I'm worrying it could broke existing apps with v3, looks like breaking change?\n. I'm ok with it, will you submit PR for 3.24 branch?\n. I don't have time to do example but as i remember someone used it without any problem - just wrap Router by Relay component...\n. Why just not \n\n<Relay>\n         <Router><Scene>...</Scene></Router>\n   </Relay>\n\nOn 01 Apr 2016, at 11:14, ugputu18 notifications@github.com wrote:\nThere is an easy way, yet not most optimal. See the sample on typescript.\nexport function relay(Component: Relay.RelayContainerClass, queries: any, params?: any): React.ComponentClass {\nreturn class RelayRootContainer extends React.Component {\n    private routedComponent: any = null\n    private params: any = {}\n```\nconstructor(props: any, context?: any) {\n  super(props, context)\n  class Routed extends React.Component {\n    render(): JSX.Element {\n      return \n    }\n  }\n  this.routedComponent = hoistStatics(Routed, Component)\n// Prepare queries params\n  if (queries.params) {\n    Object.assign(this.params, queries.params, _.pick(props, Object.keys(queries.params)))\n  }\n  if (params) {\n    Object.assign(this.params, params)\n  }\n}\nrender(): JSX.Element {\n  const route = {\n    name: ['$$aggregated', ...Object.keys(queries)].join('-'),\n    queries: .omit(queries, ['params']),\n    params: this.params,\n  }\n  return \n}\n```\n}\n}\nAnd then in routes:\n\n\u2014\nYou are receiving this because you commented.\nReply to this email directly or view it on GitHub https://github.com/aksonov/react-native-router-flux/issues/437#issuecomment-204323250\n. Yes, it works! \n\nPavel.\n\n27 \u043c\u0430\u044f 2016 \u0433., \u0432 17:29, Christopher Moore notifications@github.com \u043d\u0430\u043f\u0438\u0441\u0430\u043b(\u0430):\nAre we able to use RNRF's wrapBy?\n(Example w/ MobX's observer) https://github.com/aksonov/react-native-mobx/blob/master/index.js\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n. Router could create actions for you if you put scenes as children \n\nPavel.\n\n31 \u043c\u0430\u044f 2016 \u0433., \u0432 20:43, Christopher Moore notifications@github.com \u043d\u0430\u043f\u0438\u0441\u0430\u043b(\u0430):\nJust a note for anyone using Action.create to generate scenes, the api changed a bit. You need to move wrapBy from the  to the Actions.create function as a second parameter like so:\nconst scenes = Actions.create(\n  \n Relay.QLquery { viewer } }}\n    />\n    {/* ... */}\n  ,\n  RelayComponentRenderer // This is necessary otherwise you will encoutner a Relay context error\n);\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n. We could make it configurable option, please send PR\n. navigationState should be bind to onRight method, have you tried check param passed to onRight??\n. duplicate of #355 \n. So far, yes. You may try v2 version for Android.\n. It is all about React Native programming, i guess. Check \"<\" back image, is it flickering? If no then something is wrong with your code....\n. @willmcneilly Does UIExplorer project (v0.22, NavigationExperimental topic) have flickering?\n. Sorry, but it is out of scope for this component, if UIExplorer RN example flickers too, raise issue for RN, not here.\n. Duplicate of #355\n. Use your fix to remove border, it is not a bug, but behaviour of built-in NavBar. You may pass your own NavBar if you want.\n. It is not bug, it is known feature of React Native as well as native iOS nav bar (so semi-transparent navbars could be shown nicely). You need to adjust your padding by yourself.\n\nhttps://github.com/facebook/react-native/issues/4264\n. I think it is because transparent background for scenes. Anyway it is not this component issue but React Native one.\n. If we will remove it, it will don't allow to set one background for all scenes....\n. Great, please submit PR.\n. Are you seriously thinking that somebody could help you without even snippet of code? Sorry, please fill all steps or i will close the issue.\n. It is not used in v3. You may pass any attribute but should use it inside your component accordingly. So 'style' may work.\n. Yes, feel free to create PR.\n. Should be done for 3.2.7\n. Check latest master\n\nOn 07 Apr 2016, at 15:24, Matteo Mazzarolo notifications@github.com wrote:\nHello there, sorry but I don't get it, does sceneStyle work now?\nThe example of the first post is still not working for me on 3.2.7.\n\u2014\nYou are receiving this because you modified the open/close state.\nReply to this email directly or view it on GitHub https://github.com/aksonov/react-native-router-flux/issues/452#issuecomment-206899137\n. @domchristie Does it work for you?\n. Could you clarify?\n. Maybe we should wait for RN0.25 to allow custom animations. Closing it for now.\n. How it is connected with this component?\n. Ignoring of 'wrong' actions is not good way. Why can't you disable pop action from initial scene?\n. Latest version ignores it now.\n. Sorry, as i see you are using v2 version, it is not supported anymore.\n. It is out of scope for this component. Use global, redux or whatever you want.\n. It is given within README.\n. Sorry, i can't help. You may add PR. I don't want to introduce redux or other dependency for Demo without strong need. \n. select gets props from the its component props.\n. Sorry, i don't know how to do it without Redux. You may copy Switch to your component and pass userInfo somehow there.\n. Please study about Javascript more - this cannot be used within static functions...\n. Sorry, i've added support for sceneStyle within 3.2.7 :)\n. Please give example (by modification of this component Example)\n. Could it be duplicate of #370?\n. Thanks!\n. I guess it should refresh it if something is changed within its state. So set some random value within refresh\nOn 09 Apr 2016, at 09:51, rtrompier notifications@github.com wrote:\nThanks for your answer but, not work ;) \nIt doesnt refresh the previous view ...\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly or view it on GitHub https://github.com/aksonov/react-native-router-flux/issues/465#issuecomment-207737400\n. Again, you must change state of previous component to be refreshed. It is how NavigationExperimental API works.\n. PR is welcome.\n. You may now use navBar property as well as rightButton/leftButton for each scene.\n. You may use now rightButton/leftButton as React components, check latest release.\n. @burgalon have you tried Actions.searchScreen({searchText}) or Actions.refresh({searchText}) from your navbar title?\n. renderTitle function come with state param, you can get information about current navigationState\n. @greatwitenorth  You have to do pop and then refresh. Putting it together would be nice addition (and different issue, btw), PR is welcome\n. Probably you are trying to use Actions before it actually created. You need to create them BEFORE Router render, i.e. during compile time. Another option to use setTimeout. But compile time creation is better (however hot reload react native feature will not reload them).\n. It is not supported\n. You should do it with usage of custom renderer (for TabBarIOS or whatever your like). But scenes should be defined once, at root level\n. I've asked author how to use replace now: https://github.com/ericvicenti/navigation-rfc/issues/50\n. #489\n. PR would be welcome to make it work with 0.23\n. #489\n. What sense to bind to this? These function should be bind to the navigation state. Please check latest version, now render functions are binded during render()\n. Now you could use just rightButton/leftButton as React components. I'm closing this ticket.\n. Please check Example, Drawer is not root there, but works, right?\n. #489\n. Actually you could use it now, with Actions,callback({key:'destination', ...data}). You may submit PR to make 'go' as alias for that\n. It is not issue actually. You may use Actions.refresh({key:SCENE_KEY, props}) for this.\n. Have you tried Actions.refresh({key:SCENE_KEY, props}) ? Could you modify component Example to show the issue?\n. I don't see how it is possible to implement (auto-update fields) - Scenes are not real components, but just syntax sugar to describe your scheme. They don't render anything.\n. Should be fixed within 3.2.10\n. Seems it is 0.23 or greater? Closing it for now, #525\n. @joenoon Could you check if it is possible to merge 3.24 with latest branch and upgrade it to usage with 0.26-rc? This way we will create new branch 3.26 and then will replace master when official 0.26 will be released.\n. @sylvainbaronnet Maybe could you integrate 3.24 into master and then update imports?\n. Probably they are caused by eslint formatting done for master branch....\n. Also I did some improvements for NavBar component.\n. \"The one issue I do run into but not sure if its known is - when switching tabs the entire UI seems to re-render (loses scroll position etc). I've been meaning to try and track this down for a while - maybe I can figure it out this week.\" - actually i've met this problem and it is very critical bug...\n\nNavigationStateUtils seems necessary if user wants to use NavigationExperimental directly....\n. Looks great, thanks, but could we leave 'duration' compatibility? I.e. pass applyAnimation by Default Renderer if duration is defined (and version is 0.24+)? Also about direction...\n. Looks like direction doesn't work #499. I just thought you know how to implement it via new methods like you did with 'duration'\n. Example app has replace action, could you check it?\n. #525! Also duplicate of #474\n. @ruettiger #525 ?\n. How you propose to support several Scenes in stack with the same key like ProfileDetail? It is NOT suitable to change global ProfileDetail 'state' in this case. You could easily store state within this.state for the component taken from this.props.navigationState.\n. My fault, you cannot use this.state, because component will be created for each Scene. But again, we have two contradict requirements from component users - don't store state (because of possibility of several equal components within stack) and you want to store state....\n. You could solve your problem with your custom reducer - just modify 'scenes' of state properly. Now it is read-only (never modified).\n. Sorry, i don't have time for teaching. Check readme, check example project with custom reducer, etc. And better try to use Redux, this component is about navigation, not replacing redux.\n. I can't reproduce. Could you modify Example project and show the issue?\n. You have to use backTitle then i guess.\n. #525 \n. Duplicate of #472 ?\n. Have you read message you are posting? \"Requiring unknown module \"assert\". If you are sure the module is there, try restarting the packager or running \"npm install\".\"\n. It seems question, not issue. You may check Example project for details. Please post questions to stack overflow with tag react-native-router-flux.\n. Great work! 0.24 is not released officially yet, so i will merge it once it is out (next Monday?), ok?\n. Another possibility is to publish 'rc' release for the component which will work with 0.24.rc\n. Close it because of #536 (that PR includes this one)\n. You may try 3.24.0 version which supports RN 0.24. However you could check #557 \n. Please check 3.2.10. Sorry, but fail silently is not good idea, so you need to make sure that scene with that key is already loaded.\n. Strange, i see 'this branch has conflicts', could you check?\n. @lelandrichardson Thanks for PRs! Currently I have some troubles (no troubles actually but lack of time) to migrate to 0.23-0.24rc (seems no sense to migrate to 0.23, but better to migrate to 0.24), are you using 0.22?\n. Yes, #503 and probably some other will do it. 3.2.11 is already published, please check.\n. Duplicate of #370 ?\n. Please modify Example project to reproduce the issue\n. #525 \n. Sorry, it is not intended usage of the component (v3 version)\n. Duplicate of #353 \n. Maybe it is redundant, since all properties all of Router will be passed to all scenes anyway, right?\n. @maitriyogin Yes, looks like it is duplicate. \n@maitriyogin @crockpotveggies Have you looked at Example project to see integration? It doesn't use store.dispatch and see all your actions there....\n. all, @lynndylanhurley, @zxcpoiu \n I've added dispatch call (if it exists) within Actions now to make redux integration much easier (without needed to create custom reducer). So now you could see all Router actions in your redux reducers with zero effort (you need just to connect Router).\n. Closing it for now. I've also added possible alternative to redux, react-native-reactive library to docs.\n. #525! Duplicate of #481 \n. @bosung90 All i see that non-supported 0.23 is used...\n. @chetstone Looks like it is fixed within latest React native master, i don't remember number of the issue, but we can't use it because of #557 \n. @yusufseyrek Thanks to find that :)\nI believe React Native team is working on it, so probably fix is near.\n. As I understand custom animations are introduces only within RN0.24, but that version introduce more serious bugs, see #557 \nYou may also check branch 3.24, but it contains bugs described within #557 \n. @efkan Great work!\nActually i don't like complexity of 'contextTypes', maybe it is possible to implement drawer without usage of context at all....\nFor example Actions.refresh({key:DRAWER_NAME, 'open':true}) could open drawer (Drawer renderer will open it when navigationState.open prop is changed) Maybe we could improve 'refresh' to allow 'switch' boolean values to implement switch, like passing function for values: Actions.refresh({key:DRAWER_NAME, open:value=>!value})\n. @efkan You could still use v2. v3 seems more like experimental. I was wrong when thinking that when NavigationExperimental component became part of React Native it will be 'stable'.\nIf you choose to use v3, feel free to improve existing NavBar and submit PR.\n. Don't have free time to work on it yet, so feel free to submit PR this weekend, thanks!\n. @lelandrichardson Will it be different from 3.24 branch? The problem is not in absence of PR but that 0.24 contains bugs and they are confirmed by NavigationExperimental authors. The only solution i see is to move whole NavigationExperimental from latest RN master into this component (if master already contains fixes, of course)...\n. It is distributed across many issues :)\nSome attempts to aggregate: #489, #557 \n. Closing it for now, but probably we will have the same story with 0.27 now :)\n. Should work with latest version, please check. Closing it for now.\n. #537 is much much better, thanks.\n. It will be good addition, PR is welcome!\n\nOn 27 Apr 2016, at 18:12, Alon Burg notifications@github.com wrote:\nDoesn't it make sense for pop({params}) to act like pop() + refresh({params}) ?\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly or view it on GitHub https://github.com/aksonov/react-native-router-flux/issues/529#issuecomment-215134442\n. Looks nice, could you add also modification to README?\n. Close it in favour for #537\n. Looks very nice, feel free to submit PR & add docs to README.\n. Great work! Hope to merge everything here once 0.24 will be released (today?)\n. I've decided to merge it now to master and will try to fix 'replace'/'reset' actions. 3.22.0 version will be compatible with 0.22,\n3.24.0 will be version compatible with 0.24rc and then with 0.24\n. It would be great if you add it to README.\n. Seems duplicate of #524 \n. You may implement your own NavBar and pass it to the Scene. I'm using something like that \n\nonLayout({nativeEvent}){\n        const isPortrait = nativeEvent.layout.width === WIDTH;\n        if (isPortrait){\n            if (this.state.height != NAVBAR_HEIGHT_PORTRAIT){\n                this.setState({height: NAVBAR_HEIGHT_PORTRAIT, delta:STATUS_BAR_HEIGHT});\n            }\n        } else {\n            if (this.state.height != NAVBAR_HEIGHT_LANDSCAPE){\n                this.setState({height: NAVBAR_HEIGHT_LANDSCAPE, delta:0});\n            }\n        }\n    }\nrender(){\n        return (\n            <View onLayout={this.onLayout.bind(this)} style={[styles.container, {height:this.state.height}, this.props.style]} >\n                {this.props.navBarHeader}\n                <View style={[styles.container, {height:this.state.height}, this.props.style]} >\n                    <View style={{height:this.state.delta,flex:1}}></View>\n                    <View style={{height:this.state.height-this.state.delta, flexDirection:'row'}}>\n                        {this.props.navigationState.children.length > 1 ? this.renderBackButton(this.props) : this.renderLeftButton(this.props)}\n                        <View style={{flex:1,justifyContent:'center',alignItems:'center'}}>\n                            {this.renderTitle(this.props)}\n                        </View>\n                        {this.renderRightButton(this.props)}\n                    </View>\n                    {this.props.footer}\n                </View>\n            </View>\n        );\n    }\nMaybe we could incorporate such logic within the components NavBar if community will want it and submit PR.\n. #525 ?\n. #557 \n. Could you check UIExplorer demo and its tab bar with ExperimentalNavigation?\n\nOn 19 Apr 2016, at 08:09, Oliver Shaw notifications@github.com wrote:\nVersion\nreact-native-router-flux v3.24\nreact-native v0.24\nExpected behaviour\nThe state of each Scene component for tab items should be maintained. Changing tabs will not re-mount the component of each tab Scene. This is evident in react-native-router-flux 3.2.13 and RN 0.22.\nActual behaviour\nThe state of each Scene component for tab items is reset when changing tabs. The Scene component for each tab is re-mounted when that tab is switched to.\nSteps to reproduce\nSomething like the following Scene structure\n\n\n\n\n\n\n\n\n\n\n\nI'm currently investigating and will reply here if i get anywhere with it.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly or view it on GitHub https://github.com/aksonov/react-native-router-flux/issues/549\n. #525\n. POP_ACTIONs should have exactly the same names used in NavigationExperimental because of swipe back behaviour. The same for probably some other actions...\n. #525 ?\n. #525 ??\n. Unfortunately RN 0.24 (rnrf 3.24.0) has significant bugs with reset/ replace actions as well as re-mounting tabs during switch. So I've marked 3.22.0 as latest. Probably have to fork 3.24.0 and return master to 3.22.0... \n\nPavel.\n\n19 \u0430\u043f\u0440. 2016 \u0433., \u0432 20:30, Lynn Dylan Hurley notifications@github.com \u043d\u0430\u043f\u0438\u0441\u0430\u043b(\u0430):\n@cridenour - is 3.24 stable?\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly or view it on GitHub\n. @cridenour , @lynndylanhurley I'm reverting master now to 3.22 (3.24 is in separate branch now). \n. #525 \n. #557...\n@ms88privat i've reverted changes so now master is 3.22.0, sorry for confusion \n. @zelphir Add some debug into selector to check if updated property is there. Btw, i've made Switch as pure function recently and it worked well for me (yes, it doesn't generate action anymore but just show proper scene)\n. @zelphir Are you still using RN 0.24?\n. Have you upgraded to latest 3.26.5?\n. Probably you need to create new issue then and clone & change Example to reproduce the issue.\n. @joenoon Thanks for the feedback. The problem that everybody wants to use latest stable React Native (because it fixes a lot of issues usually) and also wants to use latest RNRF (because it fixes a lot of issues as well). Problems begin when such combination have bugs, like we have with RN 0.24 => a lot of issues are created recently and we cannot do anything with it.\n\nIf we would use master for latest changes, it would be difficult to improve older forks then (like current most stable 3.22). So I'm still thinking to have most stable version as master and some 'experimental' versions (like 3.24) as forks which should be merged to master when all issues will be fixed.\n. @satya164 You may try to do it. The problem that the ExperimentalNavigation component uses require of internal React native libraries directly, so we have to change all 'require' calls. And do it every time for each new API change, it is what @joenoon explained above.\n. Could you submit PR? Maybe some shell script which will change require calls automatically...\n. @joenoon 0.26 is out, should we merge wip-0.26 to master?\n. 0.27, 0.28-rc all they have breaking changes. Maybe it is really worth checking to copy NavigationExperimental sources into this component, so it will work with any RN version? And merge them from time to time to improve things...\n. @jmurzy Looks like your wrote your router once, but selling it anywhere :) Okey, if seriously, here is my feedback - but please don't start to discuss it here (you may use your topic jmurzy/react-router-native#7 for that, you could quote my feedback there if you want), because it is really offtopic here and i don't know why i didn't remove your post (probably because first half is quite useful, thanks! :)\nI don't think that url-based navigation works well for native, but probably it is very subjective. For example for me it is much easier to use Actions.user(123) not dispatch(\"/user/123\") or even better: Actions.post({post}) instead of something like dispatch(\"/post/1234\") where post is well defined domain object (it could be observable model from MobX).\nIt is very easy to add deep linking to this component as described here #704, but looks like our community doesn't need it much. URL is boilerplate itself and it is popular because it is needed for web. URL is form of serialization of an user request and RNRF just uses original user request because it is not necessary to serialize/deserialize data to/from URL for native apps. However you could do deep linking with RNRF easily if needed.\n. Okey, 3.30.0 version doesn't depend from 0.26 anymore (i've forked NavigationExperimental API to separate package). We will update fork (react-native-experimental-navigation) when new changes within Experimental Navigation API will be made (we could clone even latest master fixes now!). Also we will update this component to work with latest version API but it is not so critical now (now component still depends from 0.26 API, but not from React Native 0.26)\nFeedback is welcome.\n. When ExperimentalNavigation API will be stabilized AND our Router will be changed to use it, we will switch from fork to RN again. I'm glad that ExperimentalNavigation 0.26 doesn't depend from core, so fork was not difficult to do (mostly just replace import paths), i'm closing this issue for now.\n. Sorry, it is out of scope of this component, it is about react native programming. I guess you should use onLayout handler\n. It is not planned, but you may submit PR. \n. NavBar.js\n. Use Actions.refresh(data). You may specify key of scene where you want to pass that data.\n. Why just don't pass {myProp:undefined}  to 'remove' that value?\n. Ok, i see. You may submit PR if you want to add this feature to component.\n. It could be quite simple to implement, i guess. All 'core' props are stores within state.scenes, so all you need is just 'reset' them for some special key, like Actions.tab5({reset:true})\n. Okey, i've added new feature (\"scene sub-state\"), maybe it could be useful for you (v3.22.15) You need to define 'special' scene (check README) and call it when you need to 'restore' your scene. It doesn't support 'containers' now (i.e. scene is restored to initial params, with no children/index), but you may submit PR to improve it.\n. As I said before it should not be difficult to improve this part - i.e. interpret 'jump' also as 'refresh', i just don't have enough time to do it.\n. Sorry, i can't merge 3.24 to master, only when react native will fix major bugs about it.\n. Why you need custom reducer? Current scene will get navBarDimensions property.\n. Oh, if you need to access it from your reducer, not from your scene component, then you did right.\n. agree with @rturk \n. Good question, i'm not sure. It will 100% work for current scene when layout is changed, but for other scenes it will be lost probably. Let me think about it.\n. Maybe storing nav bar dimensions in redux is only way...\nHere is one solution:\n1. don't use 'refresh' but your redux dispatch\n2. connect RNRF Router to your redux.\n3. all properties you passed to Router from 'connect', will be globally available across all scenes\n. @rturk I don't have different height for navbar, but probably will do (smaller height for landscape, for example). One usage i see now is setting top:HEIGHT within my scenes to avoid its overlapping by navbar. \nIn my current app it is just fixed (equal to navbar height), but what i can do it navbar height is flexible?\n. Maybe @rturk has better solution for it, i would listen it too.\n. 1. You may use your own NavBar, and dispatch redux there, right?\n2. connect(state=>({navBarHeight:state.navbar.navBarHeight})(RNRF.Router) will pass navBarHeight prop to all your scenes (but you should store it within your navbar reducer first)\n. Please do, thanks.\n. Looks interesting!\n. No reason. Unfortunately webstorm sometimes doesn't do formatting\nPavel.\n\n22 \u0430\u043f\u0440. 2016 \u0433., \u0432 21:12, Nicolas Charpentier notifications@github.com \u043d\u0430\u043f\u0438\u0441\u0430\u043b(\u0430):\nI will do the fix to the eslint problems as mentioned in #574.\n@aksonov Any reason why the tabulation is not consistent ?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly or view it on GitHub\n. I've fixed some problems using --fix, but there are still many left. Btw, strange that 'codacy' didn't found any, and requires usage of \", but aslant requires ' ;)\n. @r0b1n Yes, it could be, you may improve it and submit PR. Also unit tests are necessary, so you are welcome to submit unit tests.\n. Yes, what should i do?\nOn 29 Apr 2016, at 18:48, Nicolas Charpentier notifications@github.com wrote:\n@r0b1n https://github.com/r0b1n Sorry I missed the notification, yes you can help with the few remaining eslint errors if you want to.\n@aksonov https://github.com/aksonov Can you add mention-bot https://github.com/facebook/mention-bot to the repo WebHooks?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly or view it on GitHub https://github.com/aksonov/react-native-router-flux/issues/567#issuecomment-215803756\n. Sorry, have pretty limited time, could you submit PR with needed .mention-bot ?\nOn 29 Apr 2016, at 18:58, Nicolas Charpentier notifications@github.com wrote:\n@aksonov https://github.com/aksonov Pretty simple in fact, just follow these steps : https://github.com/facebook/mention-bot#how-to-use https://github.com/facebook/mention-bot#how-to-use :)\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly or view it on GitHub https://github.com/aksonov/react-native-router-flux/issues/567#issuecomment-215809702\n. ok, done.\n\nbtw, i will be unavailable during next week.\n\nOn 29 Apr 2016, at 19:12, Chris Ridenour notifications@github.com wrote:\n@aksonov https://github.com/aksonov Looks like the configuration is optional, just need to add the webhook in settings.\nhttps://mention-bot.herokuapp.com/ under Settings > Webhooks & services > Add Webhook\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly or view it on GitHub https://github.com/aksonov/react-native-router-flux/issues/567#issuecomment-215817750\n. Circle should be authorized already.\n. @charpeni  please check now.\nI'm getting this:\n\n```\neslint index.js src/ test/ -o $CIRCLE_TEST_REPORTS/eslint/eslint.xml -f junit\nbash: line 1: eslint: command not found\nbash: line 1: eslint: command not found\nbash: line 1: eslint: command not found\neslint index.js src/ test/ -o $CIRCLE_TEST_REPORTS/eslint/eslint.xml -f junit returned exit code 127\neslint index.js src/ test/ -o $CIRCLE_TEST_REPORTS/eslint/eslint.xml -f junit returned exit code 127\neslint index.js src/ test/ -o $CIRCLE_TEST_REPORTS/eslint/eslint.xml -f junit returned exit code 127\n```\n. I don't know, i didn't change anything.\n. @charpeni great, what should i do?\n. Please check 3.22.5\n. You should insert scenes instead of Routes, check updated readme\n. Looks like exception not from this component, do you have full stack?\n. The component DOESN\"T depend from redux. It just uses 'this.props.dispatch' if it is provided.\nDo you have full error stack?\n. Do you see anywhere files from this component?\n. Just typo for connect import...\n. Are you sure that Main is not null (i.e. imported) ?\n. Sorry, it was just typo in README, i've just changed connect import to\nimport { connect } from 'react-redux';\n. I don't quite understand what do you need. Could you implement needed functionality with custom reducer (check Example project how to use own reducer)? You may intercept all nav actions and do whatever you want with them and with navigation state.\n. Good question, maybe we need to add this topic to README!\nYou can split your scenes using NodeJS require calls:\n<Router>\n                    {require(\"./scenesForTabBar\")}\n                    {require(\"./scenesForAnotherPart\")}\n            </Router>\nscenesForTabBar.js:\n```\nimport React from 'react-native';\nimport {Scene} from 'react-native-router-flux';\nmodule.exports = \n   // scenes here\n;\n```\n. I believe this method is better than any possible additional interface, because it requires zero knowledge about that additional interface from code reader...\n. Honestly i just don't see how to traverse children of component children defined in their render method, maybe you know the way? So if you define some custom component 'Scenes', the component will be not able to iterate Scenes children...\n. So I would like to implement this possibility however i don't see how to do it with React Native....\n. PR is welcome. I've show a way to accomplish it for current version\n. @charpeni Thanks, please fix errors if you can.\n. You should place renderLeftButton for children of Drawer, check Example project.\n. Check README. \"New feature for 3.x release is custom scene renderer that should be used together with tabs={true} property.\"\n. You need to create custom renderer for it. It should not be difficult. Check existing renderers for Modal, Drawer (within example)\n. #515 \n. Sorry, why you can't just pass your TabBar instead? I don't want to make built-in TabBar more complex\n. Sorry, it has conflicts now, please re-submit...\n. Is there any way to check PRs before merge to comply with code style? I've added you as collaborator.\n. Sorry, i had to revert, because it brakes things... Maybe we need to have strong unit test coverage before such big changes...\n\n. @charpeni Is there any automatic tool to do all these changes (so i could do it by myself)? I'm about to commit now some improvements for navbar (with old eslint issues), so your changes will have conflict...\n. Sorry it doesn't work (for iOS), i've partially reverted #596 \n. #525 !\n. Have you tried master branch?\n. @mywaystar Please try 3.22.10. There were huge changes for nav bar, hope i didn't broke anything.\n. How it is connected with this component??\n. Check bottom of README.\n. @r0b1n Good work! But why you removed reducer testing? It should be moved to other files, but not to be removed.\nMaybe we should allow running Actions.create several times because of recent react native hot-reload feature .\n. Sorry it doesn't work (for iOS), i've reverted it\n\n. Ok, you might submit correct PR and change version within package json\nPavel.\n\n27 \u0430\u043f\u0440. 2016 \u0433., \u0432 09:50, Yann Pringault notifications@github.com \u043d\u0430\u043f\u0438\u0441\u0430\u043b(\u0430):\n@aksonov It doesn't work because it should be Platform.OS and not Platform.os. As it's undefined you get the Android's height in both platform.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly or view it on GitHub\n. Just use Actions.refresh to change state of current scene (i don't remember if v2 has 'refresh' action)\n. so refresh it before pushing\n. pop & refresh cause crash?\n. Is it Android?\n. Then, yes, it is not stable with Android. However it is pretty stable with iOS. \n. 0.24 improves android support, but introduces other bugs :) So we are waiting for RN0.25 probably....\n. Sorry, no. v3 depends from new navigation api and it doesn't work good on android (v0.22)\n. @mikefowler Looks good, could you merge with latest master and submit again (now it has conflicts) ?\n. @charpeni I don't have any problems with npm install, do you?\n. Hm... Why NavBar.contextTypes are declared before NavBar declaration?\n. @sarovin What is wrong with existing NavBar? \n. component is required for non-'refresh' Actions:\nSo if ALL children don't have type they will be considered as 'refresh' ones.\n\nconst condition = el => (!el.props.component && !el.props.children &&\n    (!el.props.type || el.props.type === REFRESH_ACTION));\n    // determine sub-states\n    let baseKey = root.key;\n    let subStateParent = parentProps.key;\n    const subStates = list.filter(condition);\n    list = list.filter(el => !condition(el));\n    if (list.length) {\n      res.children = list.map(c => this.iterate(c, res, refs).key);\n    } else {\n      assert(staticProps.component, `component property is not set for key=${key}`);\n. #525\n. Have you tried panHandlers={null} ? \n. Sorry, i can't reproduce, maybe you don't use RN0.22\n. @NIcholasJudd Have you tried to set onRight={null} AND rightTitle={null} ?\n. @andpor It is how React Native work. NavBar is overlay which is persisted across scenes, so it cannot be part of individual Scene. As I understand it is done to support 'native' looking animations that are DIFFERENT for scene and for navbar.\n. The component doesn't have instance of scene. It just renders scene. DefaultRenderer is stateless now. You may implement your own stateful renderer and submit PR.\n. Did anybody try 0.26-rc?\n. @joenoon Glad to see that you start working on 0.26-wip, i've made some fixes, Example seems to work good! I've got only strange warning:\n\n. @joenoon Looks good (after your fixes will be approved for navigator), have you checked Example project? Btw, i see NavigationView is removed from latest RN master, maybe we could do the same within 0.26-wip?\nAnother idea is to move TabBar to separate component and require setting component prop (so no default TabBar).\n. @joenoon Fantastic, will try it! For now i just edited RNRF inside node_modules/react-native-router-flux and then copied it to RNRF own folder\n. Will you merge all things into 0.26-wip?\n. Ok, i agree about default tab bar, however be ready that it will raise more issues ;)\n. @andpor Component methods must be static.\n. ```\nclass MyAccount extends React.Component {\n   static renderRightButton(props){\n    return rightButton;\n    }\n```\n. You will get it from props passed to that static method :)\n. As far as I see it is not supported for v4, PR is welcome.. Looks good for me, but it makes quick fixes more difficult. Now i could change react-native-router-flux src inside my project's node_modules or Example's node_modules and then copy full src folder back to react-native-router-flux and commit. After this change i will have to do much more operations - copying src, re-compile, then test. Is there any other way to modify the component for real project quickly?\n. #525 ??\n. Looks good!\n. @charpeni ops, sorry, enabled os x plan but it didn't run because it is paid! for open source! reverted back, could you submit another PR to run build again? Maybe we must use travisci instead with os x support for free (we could build Example project and run GUI tests for it!)\n. Ugh, circleci schedules new builds, and don't want to remove 'os x' ones. I'm removing it and re-adding the project again...\n. Yes, we could try both\n. Have you tried Actions.refresh({key:SCENE_KEY, ..data}) ? \n. @tinygipxy I suggest you to try experimental 0.26-wip branch with react native 0.26.0-rc. Looks like it is RN issue, not this component.\n. Could you show screenshot? Also could you check 0.26-wip to see if it is fixed there (then it means that it was bug of navigation-rfc)\n. #525 ?\n. Agree, guys, let's focus on https://github.com/aksonov/react-native-router-flux/tree/0.26-wip and then will delete 3.24 and current master (i.e. move 0.26 to master)\n. Seems this more question to RN new Navigation API, not for this component, because this component is just wrapper. \n. @xvalentino could you submit PR to make it configurable option (like preloadScenes, false by default) ? \n. #525 ??\n. really good issue for 666 number, and creator nickname has prefix \"dev\" ;)\n. Could you PR it to 0.26-wip branch? We are going to apply 0.26-wip to master once 0.26 will be released \n. @charpeni i don't know why it is not running - i definitely see CircleCI in the list of linked services...\n. removed and added circleci again, let's check future PRs...\n. i don't know how to do it, i even don't see how to trigger manual build there. weird interface.\n. @FakeYou Could you resolve merge conflict and then ask @joenoon to review?\n. Closing it for now. @FakeYou if you will decide to solve conflict, feel free to commit to this PR.\n. Strange, i did squash commit and merge, but still see old readme...\n. @adrianmc Could you also submit PR to replace README.md into the root to new one?\n. #525!!\n. #525 \n. Closing it for now, @martco feel free to submit new PR on new docs.\n. @wootwoot1234 You may check existing Modal, TabBar and do the same for ActionSheet.\n. Maybe here is some misunderstanding. Sure any component will work with RNRF, but it would be great to have something like Actions.sheet({...}) and see actionsheet, without wrapping anything like exponent's requires. version 2 allowed such easy usage, v3 doesn't.\n. @itinance What scene should be updated? Have you connected your scene to Redux? As I see you connected container but not particular scene.\n. @symmetriccurve If this is not top-level element in the current stack, backButtonImage will be displayed (that is more logical).\n. Omg, #525 again? Why people don't check existing issues first? I've put 0.22 version even into title of the project, but it didn't help, people are creating and creating new issues with non-supported versions of React Native...\n. @itinance Looks like you put Router inside some other React component that calls re-rendering. If issue still exist with latest version, please reproduce it with Example project. Closing this ticket for now.\nYou always could create Actions during compile time with Actions.create, before Router declaration.\n. You may define all your scenes separately, before router to avoid that (however hot-loaded will not work). Or re-design your app properly, like @rturk suggests.\n. We did it for earlier versions but it would not work for Redux/Provider (wrappers), right?\n\nOn 03 Sep 2016, at 20:56, atlanteh notifications@github.com wrote:\n@dwilt https://github.com/dwilt I didn't say I solved it, I said I found a better solution than the arbitrary timeout solution.\nBut, I looked into it more, and managed to totally solve it :)\nI moved the handleProps function to the constructor and removed the async setState function\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub https://github.com/aksonov/react-native-router-flux/issues/686#issuecomment-244563838, or mute the thread https://github.com/notifications/unsubscribe-auth/ABQpcUfJAkLj7Eipj1IyT5x3SjARy17Cks5qmcLLgaJpZM4IfUpY.\n. Check latest 3.26.0 and re-open this ticket if issue remains.\n. @joenoon what about removing this dependency at all and replace to own function to check condition and raise exception if it is not true?\n. @calvinmetcalf Let's don't repeat the same error and avoid dependency if possible. Because author of minimalist-assert could publish new version that brake build again... It is definitely weak side of NPM.\n. It could be good enhancement, any PR is welcome.\n. It should not be difficult to implement - implement additional Actions.path 'action' that will accept path, parse that path and call appropriate action Actions.user({userId:VALUE})\n. It is not difficult to add for v4, but nobody requested. If you need it, create new issue.. Just found impressive MobX framework and build RNRF bridge to it:\nhttps://github.com/aksonov/react-native-mobx\n. Please check latest version, closing it for now.\n. @codyhazelwood Could you submit PR, thanks!\n. Sorry, but you cannot avoid reload - it is how React Native works. Endless loop is probably caused you update it within your componentWillReceiveProps\n. @cridenour answered, closing this issue.\n. @rturk i've added you as collaborator, so you could close issues now. Thanks for your help!\n. Closing it for now, @rseemann feel free to submit fixed PR and ask @joenoon to review.\n. @joenoon Just got these exceptions too - i'm not using built-in TabBar either... I think it is VERY critical issue, too pity that i didn't mention it during 3.26.0-rc testing...\nI still believe we must separate tabbar to different component completely to avoid coupling....\n. We could publish docs about breaking changes for 3.27 to use separate TabBar (tabs or tab-navigator,etc.).\nTo confirm, which is the critical issue(s) out of this? Are you experiencing the bug where the hidden tab >bar is catching clicks? Or the null issue? Or both?\nBoth. As I understand i have to pass icons for hidden tabbar to resolve it and it is quite weird :)\n. Feel free to reopen if you still have issue with latest version.\n. @anthonywebb You may try to use Actions.refresh(data) before Actions.pop. I've just added onBack property to latest 3.26.22\nHowever it will not help for gesture back. Looks like upcoming 0.27/0.28 version will have separate onBack handler for this.\n. It is definitely not issue of this component.\n. Please, please don't use unsupported versions.\n. @esutton You definitely need to re-think this and follow flux/redux principles. MySceneComponent should not have any logic except publishing redux/flux events, so onRight could do the same\n. Sorry, it seems out of scope for this component. This component is just wrapper around new RN navigation.\n. agree, @joenoon could you fix that?\n. Thanks!\n. @charpeni Looks like i've broken it during my previous commit. What kind of command i should run locally to prevent that? I've run npm run eslint, but it outputs a lot of errors always.\n. @charpeni Looks like i've broken it during my previous commit. What kind of command i should run locally to prevent that? I've run npm run eslint, but it outputs a lot of errors always.\n. It works well for me as well, thanks! I'm merging\n. @joenoon omg, just noted that all my navbar buttons disappeared :( I'm using leftButton, rightButton properties.\n. It seems good solution, so i'm closing this.\n. I believe it is out of scope of this component. Example project has modal popup with usage of 3rd party component.\n. @lwhiteley You must use absolute style, because navbar is overlay \n. @q6112345 Is it still issue with latest version? \n. Good idea, i believe it should not break existing apps, please check 3.26.22\n. @zelphir Could you provide github clone of Example with modification to reproduce issue. Sorry, code snippets give too little help here.\n. @zelphir Great, looks like i've found issue - RN0.26 changes, please check latest 3.26.7\n. Please check with latest version.\n. @joenoon could you look at it?\n. No, it is not possible. If you need that, probably something is wrong with your architecture - your UI should be fully reactive, i.e. react on state changes. \n. Please check latest 3.26.13\n. Jump action is not called currently for simplicity, however everything should work (i.e. correct scene should be rendered)\n. @antonzy It could be a bug, could you provide repo based on our Example project to reproduce it?\n. I can't reproduce, closing it.\n. @diogoviannaaraujo Please provide github repo with our Example project modification to reproduce the issue.\n. Please check our Example project with tab bar\n. Sorry, but it is only navigation router, not framework for syncing your app state. I'd recommend to look at MobX & react-native-mobx or Redux.\n. It is not currently implemented - jump action doesn't pass props. You may submit PR to implement that.\n. Looks like duplicate of #563\n. Could you clarify? Switch switches to map because probably your token is not empty. It should not be re-rendered unless your redux state auth is changed.\n. Then it could be the bug. Could you make some example based on this project example and publish it to github?\nOn 06 Jun 2016, at 23:27, Alex Omar Fernandez Lorenzo notifications@github.com wrote:\n@aksonov https://github.com/aksonov it switch to map but when I try to call another scene using Action.scene() it doesn't work, I think it is because of the Switch component because when I remove it the Action.scene() works great. How can avoid this conflict?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub https://github.com/aksonov/react-native-router-flux/issues/780#issuecomment-224093805, or mute the thread https://github.com/notifications/unsubscribe/ABQpcarXgnmhu9YkFxDUZLllvc1c9yf-ks5qJJDCgaJpZM4IuQ5j.\n. @lexfernandez I'm waiting for examples, as i said it is probably a bug.\n. Feel free to submit PR to fix that, we can't check all android devices...\n. @xrjxs @281330  is right, also you could use 'clone' attribute to push 'cloned' scene from anywhere.\n. Unfortunately ExperimentalNavigation API is very buggy and already deprecated by React Native team.\nI'm working now on v4 version now that uses new http://reactnavigation.org and actively looking for contributors:\n #1595 . Please check this on UIExplorer react native example with ExperimentalNavigation, it could be RN issue.\n. Could you add nested scenes with \"plain\" implementation?\nWhy did you close this?\n. @Andreyco Please try, because it may be not RNRF issue. RNRF just constructs navigationState and passes it to RN NavigationExperimental API.\n. Please always use latest RNRF version (now it is 3.26.16)\n. Please provide github repo with our Example project modification to demonstrate issue.\n. Looks like no sense to work on 0.27, because 0.28 breaks things again, please check my latest post for #557 \n. Okey, 3.30.0 version doesn't depend from 0.26 anymore (i've forked NavigationExperimental API to separate package). We will update fork (react-native-experimental-navigation) when new changes within Experimental Navigation API will be made (we could clone even latest master fixes now!). Also we will update this component to work with latest version API but it is not so critical now (now component still depends from 0.26 API, but not from React Native 0.26)\n\nFeedback is welcome.\n. @joenoon and others, if you want to adopt RNRF to latest 0.28 (or even master) API, let me know. I've published latest master as react-native-experimental-navigation, 0.29.0-alpha, so you could play it with RNRF right now.\n. Closing it for now. If someone wish to upgrade RNRF to latest API, let me know, PR is welcome.\n. Please reproduce the issue with our Example modification and give us repo.\n. What RN and RNRF version do you use?\n\nOn 20 Jun 2016, at 06:31, Ritesh Kadmawala notifications@github.com wrote:\nI am facing the same issue in my project, i see that both scene and focus actions are emitted but the scene doesn't change. I understand that it might be a bug somewhere in my code, but any suggestion on debugging it?\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub https://github.com/aksonov/react-native-router-flux/issues/787#issuecomment-227048386, or mute the thread https://github.com/notifications/unsubscribe/ABQpcdGKtpnyt_4J3yByX4TVD45TGv9uks5qNheLgaJpZM4Iu1hT.\n. Should be fixed with 3.26.20\n. 3.26.21 reverts Back button over Left button priority, because it is more correct (don't show drawer but back button). In rare case you could use onBack, backTitle and new hideBackImage properties to show something custom instead of own back button\n. With 3.26.20 Drawer's support is simplified - so now you could defined own leftButton/rightButton and use Actions.refresh({key:DRAWER_KEY,  open: value=>!value}) within onPress method.\n\nCheck updated docs for more details.\n. It is not required to have tabs, it should be just one child, but usually it is tabs. I don't know how it is possible to use drawer but not use tabs (tabs is NOT tab bar, it is 'tabs' structure, like tabs in browser) - your drawer scenes are usually tabs.\n. You need to set initial value open so refresh could determine modifier \nPavel.\n\n10 \u0438\u044e\u043d\u044f 2016 \u0433., \u0432 20:00, Kevin Carr notifications@github.com \u043d\u0430\u043f\u0438\u0441\u0430\u043b(\u0430):\nJust to let you know:\nonPress={() => Actions.refresh({key: 'drawer', open: value => !value }) }\nDoes not work because the open value is a function in this state, (I was getting a YellowBox error), but:\nonPress={() => Actions.refresh({key: 'drawer', open: true }) }\nDoes work because when the drawer is open I can dismiss by other means...\n\u2014\nYou are receiving this because you modified the open/close state.\nReply to this email directly, view it on GitHub, or mute the thread.\n. Are you able to remove? Or should i do it?\n. @rseemann Route structure is very simple - it is just tree, with children as scenes. Child could have other children, etc.\n. @rseemann could you also fix eslint errors?\n. @rseemann index number is currently selected scene.\n. @rseemann yes. the same as in NavigationExperimental structure.\n. For 'tabs', it represents number of selected tab.\n. You will access it via navigation state! Check #797 and https://github.com/aksonov/react-native-router-flux/blob/master/docs/OTHER_INFO.md#drawer-side-menu-integration\n. I noted this as well, but i believe it is NavigaitonExperimental related. I think you should build some prototype based on UIExplorer RN demo and check behaviour there.\n. It happens because of RN Navigation Experimental. This library doesn\u2019t do any rendering/transition.\nOn 17 Feb 2017, at 00:09, Vinay Saini notifications@github.com wrote:\n+1. Waiting for a solution.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub https://github.com/aksonov/react-native-router-flux/issues/800#issuecomment-280493633, or mute the thread https://github.com/notifications/unsubscribe-auth/ABQpcSC8T_zqimOQ9QO7oJIsoeSP6cl9ks5rdNcMgaJpZM4Ixihv.\n\n\n. Yes, looks like this problem started from React Native 0.26, probably NavigationExperimental API has changed something. As workaround you may use setTimeout(()=>Actions.pop) for 'additional' actions, it should work.\n. #798 could help here?\n. @Swordsman-Inaction it doesn't matter actually, if your PR changes state properly without settings action.parent. Could you fix conflicts and eslint errors?\n. @SudoPlz I can't reproduce it with our Example project, could you? I see BackAction property within logs.\n. @mbecker As I see ExperimentalNavigation has quite limited support of animations now, you may ask this questions at navigation-rfc github or React Native github because this component is just wrapper around it. If you really need it you could use RNRF v2 version (based on exNavigator)\n. @sbycrosz yes, why not. use https://github.com/aksonov/react-native-router-flux/tree/2.x branch and submit PR.\n. Enter tabbar, go to tab2_2 or anywhere where is more than one scene within the stack.\n. Check Example\n. Please go to gitter chat and ask for help.\n. Scene is not real component (it doesn't render nothing), so you can't use it as Component replacements. You could use it only inside Router.\n. Have you tried to remove node_modules and run install again? I can't reproduce this error both Example and my own app.\n. Hm, maybe i need to remove \"react\" as dependency from react-native-experimental-navigation. Please try now (0.26.1)\n. @DClark5218 could you make sure that 0.26.1 is used for react-native-experimental-navigation and NPM 3?\n. Just found that NavigationAnimatedView is deprecated as well, so we have to remove it. Also we need to rework our 'focus' event to work as described here:\nhttps://github.com/ericvicenti/navigation-rfc/issues/82\n. @joenoon Any news? About managing navigationState - i believe we could support both ways - if navigationState is passed as prop then no internal state management, otherwise - use this.state.navigationState and change it accordingly.\n. cc @cridenour \n. Agree, let's wait until no changes within NE API atleast during 7-10 days :)\n. @vinceprofeta Just check built-in TabBar and implement yours one in the same way.\n. @cridenour No, all props are passed to component and title functions, so it would be more correct:\n<Scene action={Actions.profileDetail} initialState={{propA:'1231, propB:'12344'}} component={({item, propA, propB}) => <ProfileDetails item={item} propA={propA} propB={propB} />} title={({item})=>item.displayName} />\nAfter some thinking i believe that Scene hierarchy is UI-specific (for example for Web it will be completely different. Not sure about initialState - should it be within React Scene or within action declarations.\n. @cridenour Looks like i'm trying to invite bicycle to implement UI state model description. As I've found it is already standardized as SCXML format http://www.w3.org/TR/scxml/ - there is everything we need - states, transitions, guards at so on.\nhttps://github.com/jbeard4/SCION converts it to pure JSON. So RNRF could just attach SCXML states to react native components.\n. @cridenour It is approved recently (2015) and it looks great. It is not usual state machine, but pretty advanced. I've found SCXML GUI editor that works with SCXML nicely https://github.com/fmorbini/scxmlgui\nAnyway, i've created Statem - Next-gen state management based on Harel Statechart and SCXML, migrated some part of my app and it works quite well.\nProbably i would try to integrate Statem into current RNRF, without waiting for v4. I've just committed Statem support for Switch, so now you could use something like this:\n<Router statem={statem}>\n        <Scene key=\"root\" component={Switch} tabs={true}>\n          <Scene key=\"launch\" component={Launch} default hideNavBar/>\n          <Scene key=\"promo\" component={Promo} state={statem.promoScene} hideNavBar/>\n          <Scene key=\"signUp\" component={SignUp} state={statem.signUpScene} hideNavBar/>\n          <Scene key=\"logged\" component={Drawer} state={statem.loggedScene} open={false} >\n                 //...\n          </Scene>\n</Router>\nNote, that Switch doesn't have selector. Once given scene application state will be active that scene will be rendered. Probably react-native-router-mobx is required to re-render Switch once state is changed.\n. Okey, will you deal with possible issues after your PR ? ;)\n. @alextkd Is it OK to merge?\n. @joenoon @charpeni Are you ok with this change?\n. @rturk Are you using redux?\n. cc @cridenour \n. @ThaJay Could you also update Example and docs to avoid complaints #894 , thanks..\n. @zxcpoiu We need to rework it without breaking existing apps.\n. Like create map (short names -> redux names) and use it only with dispatch call\n. new PR will be welcome.\n. Ops, thanks.\n. We definitely need to have unit tests for our views to avoid such problems... I'm having assert within my app, so i didn't mention that issue at all.\n. Duplicate of #257 \n. I'm closing it because it is not RNRF issue.\n. Looks nice, please update docs with new possible value for direction.\n. @andyschwob  btw, 'direction' looks not suitable name for this, could we use something like 'animation' (and support old 'direction' as well). Also as @joenoon mentioned, it would be great to do some generalization function like animationStyle or something like that...\n. @andyschwob Thanks!\n. @SSTPIERRE2 You can still use v3, I just cannot support it (because of focus on v4). There is ticket about adding animations to v4: #2042. Add second action within setTimeout\n. @sarovin custom navbar is really correct way to go here.\n. Does example drawer work for you?\nPavel.\n\n29 \u0438\u044e\u043d\u044f 2016 \u0433., \u0432 20:32, Tucker Chapin notifications@github.com \u043d\u0430\u043f\u0438\u0441\u0430\u043b(\u0430):\nGlad to know I'm not going crazy. Looks like that's what I'm gonna have to do.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub, or mute the thread.\n. Do Example\u2019s Actions.KEY_NAME() work within Example?\n\nAre you sure that Actions.KEY_NAME is not null when you are call them? Note, that you should not call them during mounting phase, because they may be null at this time.\nAbout navBar - please create repo with Example and custom NavBar and show broken functionality. I\u2019m using custom nav bar and drawer without any problem within my app\nThis component is used within production apps, so i don\u2019t think it contains such big bugs.\n\nOn 29 Jun 2016, at 22:49, Tucker Chapin notifications@github.com wrote:\nIf you're referring to the example drawer found here https://github.com/aksonov/react-native-router-flux/blob/master/docs/OTHER_INFO.md then yes and no.\nIt \"works\" in that the drawer functions 100% as to be expected. However, its inclusion causes other things to break. It breaks Actions.KEY_NAME() calls and also breaks the custom navBar functionality, causing no navBar to render at all.\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub https://github.com/aksonov/react-native-router-flux/issues/876#issuecomment-229484243, or mute the thread https://github.com/notifications/unsubscribe/ABQpcSyEs6UedGlotPm-t3EzOJ7aVKvtks5qQtp3gaJpZM4JAco9.\n. And Example Drawer contains exactly ONE scene, your example contains many..\nOn 30 Jun 2016, at 08:03, Pavlo Aksonov aksonov@gmail.com wrote:\nDo Example\u2019s Actions.KEY_NAME() work within Example?\nAre you sure that Actions.KEY_NAME is not null when you are call them? Note, that you should not call them during mounting phase, because they may be null at this time.\nAbout navBar - please create repo with Example and custom NavBar and show broken functionality. I\u2019m using custom nav bar and drawer without any problem within my app\nThis component is used within production apps, so i don\u2019t think it contains such big bugs.\n\nOn 29 Jun 2016, at 22:49, Tucker Chapin notifications@github.com> wrote:\nIf you're referring to the example drawer found here https://github.com/aksonov/react-native-router-flux/blob/master/docs/OTHER_INFO.md then yes and no.\nIt \"works\" in that the drawer functions 100% as to be expected. However, its inclusion causes other things to break. It breaks Actions.KEY_NAME() calls and also breaks the custom navBar functionality, causing no navBar to render at all.\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub https://github.com/aksonov/react-native-router-flux/issues/876#issuecomment-229484243, or mute the thread https://github.com/notifications/unsubscribe/ABQpcSyEs6UedGlotPm-t3EzOJ7aVKvtks5qQtp3gaJpZM4JAco9.\n. Please prepare clone of Example to show the issue\n. @sondremare Check Example project, does modal work for you?\n. I've added Actions.get(ACTION_NAME) to receive scene props with ACTION_NAME. This way you could store everything during displaying of that scene including refs using Actions.refresh({key:ACTION_NAME, ref:this.refs.REF_NAME}) then use Actions.get(ACTION_NAME).ref from any other action\n. This component is just wrapper around React Native navigation. RN Navigation doesn't call componentWillUnmount, please check React Native docs.\n. @joenoon could you look at it?\n. Almost, check my comment.\n. right\n. @zxcpoiu Sounds good, will you submit PR? We will publish this change under 3.31.0\n. Most users don't use any constants and custom reducers and the component should work for them.\n. @zxcpoiu Great!\n. it could be the reason that Back button displayed when stack length is greater than 1.\n. Have you tried to change backButton ?\n. Check Readme, current version of RNRF doesn't depend from RN version anymore.\n. @brien-crean @cridenour Sorry, but i see extra complexity here as well as internal state is used (setState) together with navigationState (i believe it should be avoided). What is wrong with current Example approach - when Actions.pop() will just dismiss popup and Actions.POPUP_NAME will show it?\n. @brien-crean it sounds reasonable. Ok, let it be as temp solution until we will find better way (maybe introduce removeScene(ACTION_NAME) method? What do you think?\n. LGTM\n. No specific reason, feel free to  submit PR to use 1.0.9\n\nOn 18 Jul 2016, at 21:52, Andris Praulitis notifications@github.com wrote:\nAny reason why RNRF uses 1.0.7 tabs?\n1.0.9 version supports \"activeOpacity\" prop on tab icon.. really need this when tabs container has to be transparent.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub https://github.com/aksonov/react-native-router-flux/issues/935, or mute the thread https://github.com/notifications/unsubscribe-auth/ABQpcRYZxpQ7s8UOEVNMxYIiP4N4Q-kXks5qW9ljgaJpZM4JPE0_.\n. Duplicate keys \u2018root'?\nOn 19 Jul 2016, at 17:19, Adrian Perez notifications@github.com wrote:\nTrying:\n\n\n\n\n\n\n\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub https://github.com/aksonov/react-native-router-flux/pull/936#issuecomment-233666749, or mute the thread https://github.com/notifications/unsubscribe-auth/ABQpcQ292SFJL37Qp-0w03iFwV1_Fa1-ks5qXOrpgaJpZM4JPGTk.\n. Thanks, ould you update it to ^1.0.9?\n. Have you set background color for your scene within your components or using getSceneStyle attribute? Previous version uses 'white' by default (as well as some shadow), but i believe it is wrong so i've removed it.\n. I could easily revert it and set it back to default if many people uses 'white' by default, please post here your opinions.\n. you may set it once using Router getSceneStyle={{background:DEFAULT_BACKGROUND}}.\n. see #948\n. We may revert to old version of Switch, see https://github.com/aksonov/react-native-router-flux/issues/976#issuecomment-236444982\n. It is strange, because it uses the same algorithm as REFRESH. If refresh can found your scenes then this method should too.\nOn 26 Jul 2016, at 19:56, Iacami Gevaerd notifications@github.com wrote:\nJust for the record: there is some new function get in Actions so you can do Actions.get( 'someKey') and have the necessary access to the props.. But it seems to be buggy as it is not finding my scenes.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub https://github.com/aksonov/react-native-router-flux/issues/953#issuecomment-235351139, or mute the thread https://github.com/notifications/unsubscribe-auth/ABQpceCYI7JAPWaJd6AkP50_p723aqSjks5qZkpggaJpZM4JSA6f.\n. I believe it is bug-feature - for simplicity Switch is pure function now, but ideally it should call refresh to change index. But this way child components may be rendered twice... Any thoughts to avoid that? PR is welcome.\n\nPavel.\n\n26 \u0438\u044e\u043b\u044f 2016 \u0433., \u0432 18:49, Saro Vindigni notifications@github.com \u043d\u0430\u043f\u0438\u0441\u0430\u043b(\u0430):\nI don't understand why \"index !== navState.index\" not return true at the second switch.\nFor example:\nScene as switch with case1 and case2\ncase1: login\ncase2: tabs with tab1 and tab2\ntab1: ...\ntab2: button for logout\nControl Flow:\nswitch from case1 -> case2 and then go to tab2 and logout\nswitch back from case2 -> case1\nswitch again from case1 -> case2\nnow \"index !== navState.index\" is false...why???? \ud83d\ude15\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n. Remove node-modules and run install again.\n. Could you submit PR? \nOn 19 Feb 2017, at 13:25, Nathan Broadbent notifications@github.com wrote:\n@aksonov https://github.com/aksonov this is happening because your npm package accidentally includes it's own internal node_modules directory. I ran into this problem when I was trying to fork react-native-experimental-navigation and use my own version.\nCan you please setup the files directive in your package.json to only include the necessary files, and then push a new package to npm? Thanks!\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub https://github.com/aksonov/react-native-router-flux/issues/960#issuecomment-280915767, or mute the thread https://github.com/notifications/unsubscribe-auth/ABQpcQoGPz-tBSc0Z0lhNXMNrRQvO6aoks5reDS2gaJpZM4JSpsH.\n\n\n. @clevertree Why do you spam closed issues? It is open source project, your 'corporation' didn't do anything to help. Why you can't just create detailed ticket with exact errors you got instead of spamming several tickets with the same 'corporate sabotage' abuse.. @clevertree v3 is not supported for a long time so I'm just merging community commits and publish new v3 versions by community requests. Now I see that 3.42 introduced react/react-native dependencies and that is probably the reason of YOUR issues and probably connected with some specific npm version on YOUR side, because my yarn works well even with your package.json. Please check 3.45.0 version I made personally for you. Nobody else notified and complained about your particular issue.\nP.S. I like npm as dependency for your \"app\"... It looks like real \"corporate sabotage\", right?\nAnyway,it doesn't have anything with original issue (did you ever checked date of this post and compare to date of 3.37 version??) or other issue you spammed to. It is not good and should not happen again.. LGTM\n. Why don't wrap your scenes into one inside drawer?\nPavel.\n\n24 \u0438\u044e\u043b\u044f 2016 \u0433., \u0432 00:42, mrnahidtalukder notifications@github.com \u043d\u0430\u043f\u0438\u0441\u0430\u043b(\u0430):\nVersion\nTell us which versions you are using:\nreact-native-router-flux v3.30.2\nreact-native v0.28.0\nExpected behaviour\nI want to use push on a transition a scene within a navigation drawer to another scene within the same navigation drawer.\nActual behaviour\nIt automatically jumps. I know in the documentation it says it automatically jumps, but is there any way to override this code?\nSteps to reproduce\nCreate a navigation drawer with scenes\nTry to call one scene to another scene within the navigation drawer\nScene automatically jumps instead of push, Actions.profile(type: 'push');\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub, or mute the thread.\n. @Brokray I agree with @cridenour, it looks not our component failure. Personally i've been using gifted messenger at the past, but migrated to  own solution for better keyboard handling and better auto-scroll to bottom using inverted scrollview (because scrollTo will not work good for large datasets). You may check example for react-native-xmpp component.\n. @enapupe looks quite complex and it doesn't return changed props (with Actions.refresh), so we would receive complaints for it at the future for sure. Could you just re-use existing Actions.get(SCENE_KEY) (sorry, it is not documented yet, but it should return actual state of Scene with key==SCENE_KEY?\n. Just try it :) It is set from Router like all other actions.\n. Strange, it works well for (i'm using it to open/close drawer)\n. Could you submit PR for it? Any other custom code you use?\nOn 31 Jul 2016, at 19:44, Joe Noon notifications@github.com wrote:\n@kristojorg https://github.com/kristojorg can you import this Switch instead of the Switch that comes with rnrf?\nimport { Actions, DefaultRenderer } from 'react-native-router-flux';\nimport React, { Component, PropTypes } from 'react';\nexport let Switch = class extends Component {\nstatic propTypes = {\n    onNavigate: PropTypes.func,\n  };\nconstructor(props,context) {\n    super(props,context);\n    this.updateState = this.updateState.bind(this);\n    this.state = {};\n  }\ncomponentDidMount() {\n    this.updateState(this.props);\n  }\ncomponentWillReceiveProps(props) {\n    this.updateState(props);\n  }\nupdateState(props) {\n    const navState = props.navigationState;\n```\nconst selector = props.selector;\nif (!selector) console.error('Selector should be defined.');\nconst selectedKey = selector(props);\nif (!selectedKey) console.error('Selector should return key.');\nconst selected = navState.children.filter(el => el.sceneKey === selectedKey);\nif (!selected) console.error(A scene for key \u201c${selectedKey}\u201d does not exist.);\nconst navigationState = selected[0];\nif (!navigationState) console.error(Cannot find a scene with key \u201c${selectedKey}\u201d);\nif (navigationState.key !== navState.children[navState.index].key) {\n  ActionsselectedKey;\n}\nthis.setState({ navigationState });\n```\n}\nrender() {\n    if (this.state.navigationState) {\n      return (\n        \n      );\n    }\nreturn null;\n}\n};\nThat is basically an older version of the Switch component that I still use, because for some reason the one that now comes with rnrf doesn't work for me. I wonder if we have the same issue.\nJust import this Switch i.e. import {Switch} from './mySwitch'; instead of the one from react-native-router-flux. Look forward to hearing if that solves your issue.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub https://github.com/aksonov/react-native-router-flux/issues/976#issuecomment-236444982, or mute the thread https://github.com/notifications/unsubscribe-auth/ABQpcXH7NHMBzlgK1mTDTSIzwk1ttj_Bks5qbN71gaJpZM4JVs92.\n. Let's revert to old Switch. I thought calling Actions[key] was redundant and slows things down (and such version works well for me), but it (new version) seems don't work for some people.\n. statem is moved to mobx, so it is not need (it is not documented anyway), but unmountScenes looks very useful, so we need to merge it...\n. @jingpeng Maybe I've misunderstood something, but why you can't call refresh from onRight?\n. Oh, got it, you are talking about internal state of component... But for most cases you may use navigationState instead of component's state with RNRF...\n. Should be solved now with latest react-native-experimental-navigation\n. @sarovin Maybe i'm wrong, but i believe navigationState should be changed within Reducer, not within Switch. What do you think?\n. Reducer works in the same way as Redux reducers. You may introduce param for JUMP action and add appropriate logic where JUMP is processed.\n. Closing it because of #1002, @joenoon does it work for you?\n. @sarovin Yes, looks nice. Could you verify that it works for your scenarios? Example project?\n. @zxcpoiu Does @sarovin version work for you?\n. \"just side note:\nnot sure why, the render() times of my component are 2~3 times than the Switch version in 3.32.0\nbut no problems so far.\" - actually it was initial reason to migrate to new Switch...\n. @sarovin Unfortunately it doesn't work for me - infinitive loop (because Actions[selectedKey] re-renders Switch and call updateState again and so so). I'm using mobx and my selector is reactive function. With current version of Switch it works well (because it doesn't call Actions)....\n. @sarovin Could you just modify current Switch to add Actions call there (if index!=old index) ?\n. @sarovin Most interesting thing that  Actions[selectedKey] is never called for my app. I don't understand why selectedKey is always equal to current sceneKey...\n. When I'm trying just to modify current Switch i see the same - index is always equal to current index.\n. Could you try following:\n\n```\nimport React, { Component, PropTypes } from 'react';\nimport DefaultRenderer from './DefaultRenderer';\nimport TabBar from './TabBar';\nimport Actions from './Actions';\nexport default function Switch(props) {\n  const navState = props.navigationState;\nconst selector = props.selector;\n  if (!selector) console.error('Selector should be defined.');\nconst selectedKey = selector(props);\n  if (!selectedKey) console.error('Selector should return key.');\nconst selected = navState.children.filter(el => el.sceneKey === selectedKey);\n  if (!selected) console.error(A scene for key \u201c${selectedKey}\u201d does not exist.);\nlet index = -1;\n  navState.children.forEach((el, i) => {\n    if (el.sceneKey === selectedKey) {\n      index = i;\n    }\n  });\n  if (index === -1) console.error(A scene for key \u201c${selectedKey}\u201d does not exist.);\nlet navigationState = index !== navState.index ? { ...navState, index } : navState;\n  if (index !== navState.index) {\n    if (props.unmountScenes) {\n      ActionsselectedKey;\n    } else {\n      ActionsselectedKey;\n    }\n  }\n  return (\n    \n  );\n}\nSwitch.propTypes = {\n  navigationState: PropTypes.object,\n  onNavigate: PropTypes.func,\n  selector: PropTypes.func,\n  statem: PropTypes.any,\n  unmountScenes: PropTypes.bool,\n};\n```\n. Maybe Actions should be wrapped into setTimeout also (to avoid warning about setState within render method)\n. Any idea how to avoid that? I like this variant because it works with my app just fine.\n. Oh, maybe you could return null if index !== navState.index ?\n. @zxcpoiu The problem we don't want to render TabBar with old selectedKey.\n. No, it doesn't work. The problem that mobx doesn't call componentWillReceiveProps, but just re-render component once observable state is changed. So it works better with pure functions.\nLooks like i have equal index because i didn't create deep copy of navigationState...\n. @sarovin Sorry, last variant works well. So could I merge it ?\n. @sarovin To solve problem what to do - to jump or to push for given actions[key], two keys are actually created actions[key] for jump and actions[key+' _ '] for push, maybe you could try to add ' _ ' and check how it works.\n. @sarovin could you please check if it still works for you :)\n. @doomsower Looks nice addition, could you add docs? \n. done\n\nOn 09 Aug 2016, at 21:26, Juan Pablo Solano notifications@github.com wrote:\nHi, Any idea when is this going to be publish to npm? \nThank you\n\u2014\nYou are receiving this because you modified the open/close state.\nReply to this email directly, view it on GitHub https://github.com/aksonov/react-native-router-flux/pull/1016#issuecomment-238663389, or mute the thread https://github.com/notifications/unsubscribe-auth/ABQpcYvMxovCB3Ynf8JVi3aOwfuOaJgbks5qeNRugaJpZM4JcmVI.\n. @sarovin Could you add it?\n\nPavel.\n\n4 \u0430\u0432\u0433. 2016 \u0433., \u0432 21:17, Farid from Safi notifications@github.com \u043d\u0430\u043f\u0438\u0441\u0430\u043b(\u0430):\n+1\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub, or mute the thread.\n. Please check latest version\n. Any difference between 15.2.1 and 15.0.2?\n. I've just added it as 'dependencies' to RNEN, please check\n. LGTM\n. @stephy Could you please add new mode to docs? \n. Maybe it is bug within umountScenes? Could you check without unmountScenes?\nOn 09 Aug 2016, at 21:52, Cristian Asenjo notifications@github.com wrote:\nVersion\nTell us which versions you are using:\nreact-native-router-flux v3.33.2\nreact-native v0.29.0\nExpected behaviour\nThe scene key should be found when the state of the app changes\nActual behaviour\nI have the following code for my app:\n\n ({ auth: state.auth, isOnboarding: state.verify.isOnboarding }))(Switch) }\n    tabs = {true}\n    unmountScenes\n    selector = {props => (props.auth.token !== '' && props.isOnboarding == 0) ? \"loggedIn\" : \"loggedOut\"}\n\n<Scene key = \"loggedOut\" hideNavBar = {true} type = {ActionConst.RESET} direction = \"vertical\" >\n  <Scene key = \"login\" component = {LoginContainer} passProps = {true} direction = \"vertical\" />\n</Scene>\n<Scene key = \"loggedIn\" hideNavBar = {true} type = {ActionConst.RESET} direction = \"vertical\" >\n  <Scene key = \"productList\" component = {ProductListContainer} passProps = {true} direction = \"vertical\" type = {ActionConst.RESET} />\n</Scene>\n\n\nWhen the app is initially installed in the simulator, the loggedOut scene works great. After the login scene is completed (and auth.token and isOnboarding have the relevant values), the transition to loggedIn works great as well. When the token is cleared, however, I get the following screen:\n\nhttps://cloud.githubusercontent.com/assets/1554289/17530875/4eee79b6-5e2e-11e6-93b5-9d776f83e22e.png\nAnd when I press Cmd+R, the app refreshes, and only then does it go back to showing the loggedOut scene properly.\nI'm not sure what is triggering this error, since the initial render of the loggedOut scene works fine.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub https://github.com/aksonov/react-native-router-flux/issues/1040, or mute the thread https://github.com/notifications/unsubscribe-auth/ABQpcTUu1wTDjay-uC4gTY3penR0ZSaCks5qeNqVgaJpZM4JgdGs.\n. Check docs about \u2018redux\u2019 integration. You could see entire stack in your custom reducer.\nOn 02 Sep 2016, at 18:09, Oscar Franco notifications@github.com wrote:\nany ideas on how to access this?\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub https://github.com/aksonov/react-native-router-flux/issues/1045#issuecomment-244418544, or mute the thread https://github.com/notifications/unsubscribe-auth/ABQpcSTXxCxqnOSGAmuKFOKBZr9uJYlLks5qmEpUgaJpZM4JhpaO.\n. @tadas-subonis Are you going to fix errors?\n. @joenoon, @sarovin Does this change work well with existing renderButton functions in your apps?\n. @moschan Ok, i will apply for now, but please keep eye on possible issues for users with defined renderButton functions.\n. @charpeni Any idea why PRs fail unit tests now?\n. @lynndylanhurley brilliant! will try to use it\n. @charpeni I'm going to try this tool with latest PRs, but unit tests fail for all of them (i've tried reverted some but they fails for reverted PRs as well). \n. Better way is to get reference to drawer directly and call its methods: Actions.get(\u2018drawer\u2019).ref.switch()\nand set Actions.refresh({ref:this.refs.drawer\u2019) within comonentDidMount of Drawer component.\nOn 22 Aug 2016, at 20:39, Berkay Kaya notifications@github.com wrote:\nrenderLeftButton={() =>  { Actions.refresh({key: \"drawer\", open: true})}} />}\nI am not sure if this is the best way to do but it works. \"drawer\" is the key of the main container that has Drawer as the component. If there is a better way, please share with me :)\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub https://github.com/aksonov/react-native-router-flux/issues/1078#issuecomment-241508407, or mute the thread https://github.com/notifications/unsubscribe-auth/ABQpcUgfHGaOuUlKPqmzJNHmeF-IgSchks5qiezJgaJpZM4JotPY.\n. @braco You are free to choose any package you want, nobody asked you to use this component. It is open source component, why you don't try to fix it and submit PR? Or do you want just to use some other labor for free?\n\nBtw, use master to your own risk (like react-native master itself). Do you have this issue with 3.35?\n. @braco Ask for stable API from React Native Experimental team.\nAPI of this component is almost not changed for more than year. Community (but not you, sure) adds more and more props, but it is not called 'unstable API'.\n. Huh, are you joking guys? @spltTrevor is fully correct. Switch could be used only with tabs, it is clearly stated in docs\n\"New feature for 3.x release is custom scene renderer that should be used together with tabs={true} property.\"\nUnfortunately i can't review all such \"bugs\" in time...\n. Do you use \u2018tabs\u2019 as stated in docs?\n\nOn 07 Sep 2016, at 02:31, Adrian Perez notifications@github.com wrote:\nAs you guys might know (or not :P) i've been following pretty closely, and I also experience this bug with Switch on latest HEAD. Something definitely broke but not sure what exactly.\n\u2014\nYou are receiving this because you modified the open/close state.\nReply to this email directly, view it on GitHub https://github.com/aksonov/react-native-router-flux/issues/1081#issuecomment-245138761, or mute the thread https://github.com/notifications/unsubscribe-auth/ABQpcU4VD1HBjq09U5tqw3XVp655kJWDks5qngXugaJpZM4JpJ6z.\n. @rseemann Could you check if it would work with latest master but without #1057 ?\n. Could you please solve conflicts? Thanks \n. Thanks, but looks like master has some weird issues with Switch and some other, could you check?\n\nPavel.\n\n8 \u0441\u0435\u043d\u0442. 2016 \u0433., \u0432 15:00, Nicolas Charpentier notifications@github.com \u043d\u0430\u043f\u0438\u0441\u0430\u043b(\u0430):\n@aksonov CI is fixed on master, you can safely merge this PR if you wish to.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n. Well done!\n. Unit test fails, I thought because of this PR, but it is not the reason... I will merge it again.\n. @charpeni I would like to help, but unfortunately i don't work with Android at all currently. Could we disable animations for time being?\n\nP.S. My company is hiring now Android+React Native specialist, if you know someone, let me know.\n. California, US, but it is remote work (however full-time) and I live in Slovenia.\n\nOn 06 Sep 2016, at 00:15, Nicolas Charpentier notifications@github.com wrote:\n@aksonov https://github.com/aksonov Good, I'll try to fix this.\nWhere is your company located?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub https://github.com/aksonov/react-native-router-flux/issues/1134#issuecomment-244816605, or mute the thread https://github.com/notifications/unsubscribe-auth/ABQpcWGnAok_EeMVEEJ-5Tb8dE8dAOUzks5qnJSTgaJpZM4Jz7Gu.\n. Ok, let's revert it\n\nPavel.\n\n17 \u0441\u0435\u043d\u0442. 2016 \u0433., \u0432 23:28, Chester Wood notifications@github.com \u043d\u0430\u043f\u0438\u0441\u0430\u043b(\u0430):\n@joenoon I discussed the tab bar regression in issue #1151 . I identified the offending commit. This is a pretty serious problem that has not been addressed.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n. @dwilt Regression made https://github.com/aksonov/react-native-router-flux/issues/1151\n. @dwilt Check that comment (\"@joenoon I discussed the tab bar regression in issue #1151 . I identified the offending commit. This is a pretty serious problem that has not been addressed.\")\n\n@charpeni, @joenoon Looks like @chetstone is not available, could you look? We can't publish new release because of that bug...\n. FYI, Navigation action is real side effect and MUST NOT BE raised from reducer. You may just call Actions.ROUTE from redux-saga or other side-effect redux library.\n. Looks like you have nested Router somewhere. It should be top-level component.\n. @charpeni, @joenoon could you look please? we definitely need more unit tests to prevent regression  at the future...\n. @chetstone Could you prepare PR to revert that commit? We definitely need to add more tests to prevent such things at the future.\n. Sorry, but it seems not supported right now by RNRF (because its nav state also contains Javascript objects, so it cannot be persisted).\n. PR would be great for this. All you need is to persist navigationState within your custom delegate (check Example how to get that state). If you will be able to create JS classes from JSON, then you could set initial navigationState into Router.\n. Hot reload probably doesn't work good with static variables (like Actions).\n. @charpeni I don't understand advantage of this refactoring...\n. Sorry, but \nrenderLeftButton = (navProps) => { is not more 'readable' than renderLeftButton (navProps) {\nThe only one reason to do it is to avoid manual binding, but it doesn't make code more readable...\n. @charpeni Ok, please do, MIT is fine.\n. We have some regression after one commit:\nhttps://github.com/aksonov/react-native-router-flux/issues/1151\n. @peteychuk Makes sense, but could you state in update docs that it is optional step? Most users may want to use Actions global directly.\n. @charlesluo2014 Please check latest master now.\n. @alexicum Thanks, could you fix eslint errors to pass circleci check?\n. Yes\nPavel.\n\n30 \u0441\u0435\u043d\u0442. 2016 \u0433., \u0432 21:11, Alexey Shestakov notifications@github.com \u043d\u0430\u043f\u0438\u0441\u0430\u043b(\u0430):\n@charpeni I replaced in ..\\Example__tests____snapshots__\\Example-test.js.snap \n\"fontFamily\": \".HelveticaNeueInterface-MediumP4\",\nby\n\"fontFamily\": \"HelveticaNeue-Medium\",\nand\nnpm run jest -u\nreturned:\n1 test passed\nCould you explain it?\nShould I upload updated Example-test.js.snap ?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n. Yes, RN did a lot of changes and nobody here don't have time to adopt it for RNRF. Feel free to submit PR to our navigation experimental fork to support this feature\n\nPavel.\n\n11 \u043e\u043a\u0442. 2016 \u0433., \u0432 09:30, Jamie Loberman notifications@github.com \u043d\u0430\u043f\u0438\u0441\u0430\u043b(\u0430):\nOk, so I think one of the causes of this is currently because the version of react-native-experimental-navigation that RNRF uses is out of date. @aksonov - any blockers for updating it?\nIn the meantime, anyone wanting to make this change globally as a temporary hack can go into their node_modules/react-native-experimental-navigation/NavigationCardStackPanResponder.js and change this line.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n. @jankalfus CircleCI fails tests, could you check it?\n. @brunolemos You are right, but it is not problem of RNRF, but JS-based navigation... Actually I've created react-native-router-native to use 100% native navigation but with the same syntax as RNRF...\n. I'm really sorry about missing this PR. Unfortunately I have available time only recently and completed v4 beta based on React Navigation. Feel free to submit PRs for v4 now. I promise I will not miss them again.. @alexicum Could you please check?\n. @wrozka Great, please submit PR.\n. @wrozka It is ok, could you comment those tests and introduce some new test for this ticket? This way when guys will fix passing props we could make sure that this functionality is not broken again.\n. @alexicum I agree, we need to find fix that fixes all these issues. @wrozka Could you check #1151 with your code?\n. @csotiriou I would like to return, any PR is welcome. Unfortunately it is quite big change because their(RN) API was changed significantly. And who knows how many breaking changes they may introduce later. Maybe when they renamed Experimental to 'stable' we could start migration.\n. Sure. I've already started migrating to 0.29, check branch of experimental fork but didn't have time to finish\n\nPavel.\n\n17 \u043e\u043a\u0442. 2016 \u0433., \u0432 11:53, Christos Sotiriou notifications@github.com \u043d\u0430\u043f\u0438\u0441\u0430\u043b(\u0430):\nIf someone starts investing time into this, would you migrate into the react native's core component, even before it was made 'stable'?\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub, or mute the thread.\n. One more 'standard' library? Huh... It is really strange, why they cannot create normal library from the beginning...\n. Yes.\n\nPavel.\n\n25 \u043e\u043a\u0442. 2016 \u0433., \u0432 15:07, Alexey Shestakov notifications@github.com \u043d\u0430\u043f\u0438\u0441\u0430\u043b(\u0430):\nHowever this commit breaks passing props to tabs.\nand \nRestoring 0.35 would return #1151 problem:\n@aksonov \nMay be it should be mentioned inside readme.md\nActions.ACTION_NAME(PARAMS) will call the appropriate action and params will be passed to the scene.\nExcept tabs. (Need help to implement params passing to tabs).\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n. done\nOn 10 Nov 2016, at 04:08, Jeremy He notifications@github.com wrote:\n@aksonov https://github.com/aksonov Can you release the latest changes in NPM? we need this commit, thanks in advance.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub https://github.com/aksonov/react-native-router-flux/issues/1293#issuecomment-259590833, or mute the thread https://github.com/notifications/unsubscribe-auth/ABQpcVExOLphBDPKH0FTuNuliB__ZhoAks5q8oqkgaJpZM4KYTPl.\n. @haibinyu Does master work well for you? Seems there are some other issues left...\n. Sometimes people need back over left, sometimes left over back. So for now, yes, fix it locally. Or propose PR with some configured property (like preferLeftOverBack) with changed order.\nOn 17 Jan 2017, at 19:44, Quinten Powell notifications@github.com wrote:\n@aksonov https://github.com/aksonov @ddolheguy https://github.com/ddolheguy Is this going to be updated on master, or is the recommended to solution to override Navbar.js and fix it locally? Thanks\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub https://github.com/aksonov/react-native-router-flux/issues/1320#issuecomment-273260021, or mute the thread https://github.com/notifications/unsubscribe-auth/ABQpcR57x6RqpA0sLSW6EIn3s-CCxE8kks5rTQv7gaJpZM4KelV0.\n\n\n. Yes. Actions.currentScene. I'm really sorry about missing this PR. Unfortunately I have available time only recently and completed v4 beta based on React Navigation. Feel free to submit PRs for v4 now. I promise I will not miss them again.. I'm really sorry about missing this PR. Unfortunately I have available time only recently and completed v4 beta based on React Navigation. Feel free to submit PRs for v4 now. I promise I will not miss them again.. Thanks for your help. I've added you as collaborator, feel free to close issues/answer them, thanks.\n. Sure\n. It is shame, but I've completed missed this PR, sorry... What we could do now?. @sarovin Could you please resolve conflicts?. @sarovin Thanks for PR! I can just merge if it works for you. I'm currently working on v4 and planning to stop supporting of v3 soon.... Sure, will do now.. Check 3.41.0-beta. It is not ok, looks like connected with new react native version... Feel free to fix it or maybe we should fix react native version within package.json...\n. Does current master contain it?. I\u2019ve re-added circleci support, please check now\n\nOn 16 Dec 2016, at 07:11, Swordsman-Inaction notifications@github.com wrote:\nSeems like the CI has been disabled. Can we merge this PR now? @charpeni https://github.com/charpeni\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub https://github.com/aksonov/react-native-router-flux/pull/1451#issuecomment-267524719, or mute the thread https://github.com/notifications/unsubscribe-auth/ABQpcRuwsFaU0eM0rphdFA7h80t442lsks5rIiuGgaJpZM4LDi0p.\n\n\n. I see, this circleci makes me crazy.\n\nOn 16 Dec 2016, at 11:31, Swordsman-Inaction notifications@github.com wrote:\n@aksonov https://github.com/aksonov It didn't run\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub https://github.com/aksonov/react-native-router-flux/pull/1451#issuecomment-267564572, or mute the thread https://github.com/notifications/unsubscribe-auth/ABQpcQpUp0BWRWiV6maBQPqmZhYtsP-rks5rImh5gaJpZM4LDi0p.\n\n\n. @Swordsman-Inaction Could you setup travis CI?. I'm really sorry about missing this PR. Unfortunately I have available time only recently and completed v4 beta based on React Navigation. Feel free to submit PRs for v4 now. I promise I will not miss them again.. @DonnieWest sorry for the delay. Could you please make sure that all tests are passing and re-submit this PR? We have installed Travis CI, so tests should be run automatically now.. @itinance Thanks for great PR. Sorry, I completely missed these PRs because of lack of time (and because I've ocassionally unsubscribed from PR updates). Looks like other contributors missed it as well. Anyway, do you still want to add it to v3?\nI've recently release v4 based on React Navigation and really need help for v4 with PRs like this. Sorry about missed PR again.... Closed it due inactivity, feel free to create new PR.. I'm really sorry about missing this PR. Unfortunately I have available time only recently and completed v4 beta based on React Navigation. Feel free to submit PRs for v4 now. I promise I will not miss them again.. I'm really sorry about missing this PR. Unfortunately I have available time only recently and completed v4 beta based on React Navigation. Feel free to submit PRs for v4 now. I promise I will not miss them again.. Try to pass navBar as Router param, if you want to make it global. Sorry, can't help here because of iOS usage only. Maybe you could debug and check why it re-renders. @psychoo118 I'm really sorry about missing this PR - I unsubscribed to PR once and forgot to re-subscribe again later. Unfortunately I have available time only recently and completed v4 beta based on React Navigation. Feel free to submit PRs for v4 now. I promise I will not miss them again.. Sorry, i'm not using this component at this moment (had to switch to native iOS controllers with react-native-router-native for truly native animations), any PR would be welcome.. Sorry, but RNRF doesn't work with VoiceOver - it is responsibility of underlying implementation. Check v4, if it is still issue, report to react-navigation package.. RNRF doesn't use any native modules, check stack trace.. @davidshore I'm really sorry about missing this PR - I unsubscribed to PR once and forgot to re-subscribe again later. Unfortunately I have available time only recently and completed v4 beta based on React Navigation. Feel free to submit PRs for v4 now. I promise I will not miss them again.. @bishalshr It seems to be a bug, could you create an issue?. Maybe passing empty function ? onBack={()=>{}}. Thanks for the feedback. Feel free to submit PR or we will do it later.. Guys, contributors are actively wanted! It is extremely difficult to support this component alone because I can do it mostly in my free time.\nProbably for v4 it will be done someday  - actually all constants represents actions from new React Navigation API (v3 is not supported anymore because of many many bugs within obsolete fork of react-native-experimental-navigation from Facebook). @pocesar  I'm really sorry about missing this PR - I unsubscribed to PR once and forgot to re-subscribe again later. Unfortunately I have available time only recently and completed v4 beta based on React Navigation. Feel free to submit PRs for v4 now. I promise I will not miss them again.. Some tests fail, could you check?. @superandrew213 It will break existing apps. Please introduce special setting like overrideBackButton, document it and re-send PR, thanks.. Let me explain. For my app, i want to see \u201c<\u201c button anywhere. Only for first scenes in the stack i want to see \u2018left\u2019 button (i.e. hamburger button).\n\nOn 18 Feb 2017, at 00:43, Andrew Shini notifications@github.com wrote:\n@aksonov https://github.com/aksonov are you sure that it will break existing apps?\nAt the moment if you set the left button, the back button overrides it. So basically you can't set the left button at all at the moment. The back button is set by default and overrides the left button if it is set.\n{renderBackButton(navProps) || renderLeftButton(navProps)}\nThe change would only break apps that have set the left button (mistakenly). Because it is not working at the moment and would only show the back button. After the update the left button would override the back button.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub https://github.com/aksonov/react-native-router-flux/pull/1552#issuecomment-280797173, or mute the thread https://github.com/notifications/unsubscribe-auth/ABQpcaafn1wmJVloq6Sgc-N1I0Xs4d6Cks5rdjC5gaJpZM4LlCQK.\n\n\n. Will you re-work this ticket with adding new property or I could close it?. @barakcoh Yes, I'm interested. Could you please resolve conflicts and re-send PR, I've fixed the build. Yes, feel free to submit a PR.. Feel free to submit PR. @chris-at-translate Thank you for your help. I've made you as collaborator, feel free to resolve issues, thank you again.. See https://github.com/aksonov/react-native-router-flux/pull/1451. I don't know how to reproduce it. Sorry, I'm using Mac and iOS only.. Benefit is to leave RNRF syntax as is that is not changed since v1.. @Lenin7 Seems nobody wants to help here.. @MovingGifts I still think that RNRF syntax is better - its syntax/API was not changed during several years. \nLet's hope react-navigation will not change and break own API so often as NavigationExperimental did.. I'm researching possible integration but I have very limited time.... Looks like react-navigation is still quite buggy, so I prefer to wait until it will be stabilized.. Okey, guys, I've prepared some 'draft' for v4 based on latest React Navigation library (1.0.0-beta.11):\nhttps://github.com/aksonov/react-native-router-flux/tree/v4/Example\nMany features are still missed, it is very very alpha. \nSyntax is preserved almost instead of  you must to use Router(...)\nPlease check it, run 'npm test' from Example folder and run ios project. There are many issues left, but core is done. Feel free to send PR to improve, suggest, etc.\n. Beta was released #1974, closing this ticket. Contributors still wanted for v4.... Closed in favour of #1476 . Could you please resolve conflicts and re-send PR, I've fixed the build. Could you please resolve conflicts and re-send PR, I've fixed the build. I've just published 3.38.1 , please check. Could you please try v4 beta?. Yes, it should. Some attributes not supported yet however, please check breaking changes first. The same way.. @filipemonteiroth Check eslint warnings there (\"Details\"):\n/Users/travis/build/aksonov/react-native-router-flux/src/NavBar.js\n52:24  error  Missing trailing comma                           comma-dangle\n  464:7   error  'state' is not defined                           no-undef\n  466:9   error  'state' is not defined                           no-undef\n  474:1   error  Line 474 exceeds the maximum line length of 100  max-len\n  474:9   error  Empty components are self-closing                react/self-closing-comp\n  477:6   error  Missing semicolon                                semi\n  517:1   error  Line 517 exceeds the maximum line length of 100  max-len\n  517:10  error  Do not nest ternary expressions                  no-nested-ternary. Please check latest master. Sorry, this component doesn't use any native modules. I've just updated demo with 'react-native init Example' and it works without any additional steps.... Should it be 'scene' ?. Should be fixed now. Should be fixed now. Also v4 is released (based on new React Navigation). remove all node_modules and run again.. Latest versions of RN are not supported yet. I will take a look it but have limited available time. PR is welcome \n\n12 \u043c\u0430\u044f 2017 \u0433., \u0432 16:30, jayp notifications@github.com \u043d\u0430\u043f\u0438\u0441\u0430\u043b(\u0430):\nHow's it working out ? \n\nOn May 12, 2017, at 8:43 AM, Diego Rodrigues Vieira notifications@github.com wrote:\nIt seems to me that this project is not being maintained, I am now using react-navigation...\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n\n. Does demo work for you?\n14 \u043c\u0430\u044f 2017 \u0433., \u0432 1:17, Facundo Martin Gordillo notifications@github.com \u043d\u0430\u043f\u0438\u0441\u0430\u043b(\u0430):\n+1\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n. Please use 3.39.1 or greater with RN0.44. Please check 3.39.1. Sorry, I can't verify android, but iOS Example project works fine.. Should be fixed now, thanks. Check latest version and Example project.. Sorry, but I believe it is out of scope for this component, you always could customize it from your app.. Sorry, RNRF doesn't useAccessibilityInfo. Clear cache, etc.. @jmcdonald-ut Yes you could became reviewer as you wish. We need to fix unit tests, you are welcome to fix it.. Thanks for PR. Maybe you could look at new v4 beta (v4 branch for now) and improve it as well.. Could you please check v4 beta #1974 . Sorry, but v4.0.0 is ALPHA and definitely is not ready for production. As I see npm recognize 'alpha' correctly and doesn't install it by default.\n\n@thanhtr You have to add 'decorator' support to your project. Check Example project for .babelrc config.. @thanhtr API for Router is changed - you have to wrap root Scene with Router function, see more details here: https://github.com/aksonov/react-native-router-flux/issues/1595 and Example project.. @mistenkt Fixed now, thanks.. @thanhtr You may want to try latest v4 beta now, it should not have this error.. try latest version 3.41.0 or 4.0.0-beta.3. Could you try 3.40.1 ?\n\nOn 28 Jun 2017, at 08:14, booker-laputa notifications@github.com wrote:\nI have been using npm i react-native-router-flux to install\nBecause of other plugins, I have to stay with RN0.43.1 and I found the latest release is not working with it.\nCould any one tell me which release version on npm is the latest supporting RN0.43.1?\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub https://github.com/aksonov/react-native-router-flux/issues/1962, or mute the thread https://github.com/notifications/unsubscribe-auth/ABQpcYbbk06qSFfV79B3hBARsxnXDWx5ks5sIe85gaJpZM4OHiFU.\n\n\n. You have to use Redux or Mobx to manage app state. Latest RNRF v4 uses Mobx internally so you will benefit from mobx.. v3 provides Switch to change screen dynamically, v4 uses mobs-powered navigationStore . @frangeris Great example! @kwnccc Have you tried it? Closing this ticket anyway, now v4 is only version supported.. You may pass own navbar and render as many buttons as you need.. Sorry, but it seems anti-pattern (pop & refresh). You have to use app state managers (Redux or Mobx or similar) and change state of your app. RNRF is not State management framework for your app.. Please check latest 3.41.0, Example project doesn't have such issue.. RNRF is not state management solution, could you use Redux or MobX instead?. It is not supported. You may pass your class to renderLeftButton and render button differently depending from app state.. Please try v4 beta #1974 . It is with 'beta' tag. Latest beta for today is 4.0.0-beta.5. Master is replaced with v4 now. v3 is moved to 'v3' branch.. @guysegal \n1. We will start working on it next week. Yes, eventually migration tutorial will be created too - actually most API is the same, differences are already listed. Feel free to submit PRs, it is open-source project. Follow me on github/twitter to get updates.\n\nIf community will submit PR/patch I will publish new v3 revision.. @Dictory mobx manages navigation state and reload navigators after state changes. . @AlmogRnD Will do it today.. @bragur Check beta.7, you could define it as Scene props for drawer now. My lighting talk proposal about RNRF v4 version:\nhttps://gist.github.com/aksonov/e2d7454421e44b1c4c72214d14053410. @itinance Please check Example project to see new drawer syntax.. I've just updated 'migration' docs about drawer.. @waqas19921, @Dictory Yes, v4 lacks of documentation and we are trying to improve it. Unfortunately we have lack of maintainers now. \n\nGuys, this project is open source, feel free to check sources and submit PR for docs. Guys, let's improve open source, not just use it for free.\n@tejacoder Check Example project and existing docs. If still not clear, create separate issue.\nAll, I'm closing this ticket (original aim was just to make announce), create issue (and better with PRs) if any.. Sorry, this way is not supported yet. Could you try \nconst App = () =>\n<Router><Scene key=\"root\">\n    <Scene key=\"Start\" component={Start} hideNavBar={true} duration={0}/>\n    <Scene key=\"Login\" component={Login} hideNavBar={true}  duration={0}/>\n    <Scene key=\"ChatList\" component={ChatList} duration={0}/>\n  </Scene>\n</Router>\nP.S. duration is not supported because new ReactNavigation doesn't support it. The best way is to make root scene as 'tabs' (add 'tabs' attribute and 'hideTabBar'). You may add 'lazy' attribute to 'tabs' Scene to avoid constructing of inactive scenes. Any PR about documentation is welcome. . For now I'm going to collect 'breaking changes' topic comparing v3 and v4. So your feedback is very welcome.. 1. Check Example, Actions.refresh works for Login.js page. Passing renderLeftButton to 'refresh' is definitely anti-pattern - renderLeftButton is 'function' already and could be flexible enough.\n2. Could you clarify? You definitely should not use setState within Router.... It is wrong usage of RNRF.\n1. Router should be TOP-LEVEL component.\n2. render* functions should be passed to \"Scene\" not via refresh\n3. You really should use Redux/Mobx for state management. \nIf you want to dynamically switch from Start to Login and then to ChatList the best way is use 'tabs' container and Switch statement for v3 (and just Actions[KEY] for v4)\nRNRF is not replacement for Redux/Mobx, it is just easy navigation. For some reasons many people try to use it as state management tool.\n. Sorry, v3 is not supported anymore. Please try v4. Switch is absent, instead you could use 'onEnter' ('on') handler - it could be async function. Success termination will run 'success' handler, 'failure' handler will be run otherwise. You can use 'string' type for both success/failure as names of states to navigate.. Looks great!. Maybe we could apply v4 to master and move current master to 'v3' ?. Github pages could point only to master branch. I've set it now:\nhttp://aksonov.github.io/react-native-router-flux/. You set hideNavBar for root, so that navBar will be hidden for all its children.. Could you try to set hideNavBar for 'main' only?. It is how ReactNavigation animation works. Maybe it makes sense to mark 'Training' as 'clone' scene( add clone attribute) This way it will be pushed FROM your internal tabbar stack.. Actually it is not a bug, it is real iOS-kind of navigation - animation of headers is separated from animations of scene 'body'. So it needs header of prev scene (that is hidden by you). As I remember react-navigation supports 'android-style' animation as well (when header sticks with body during animation). Maybe you can play a bit with pure react-navigation to get desired behaviour. . It happens because 'Training' from your original request is pushed from MAIN, but not from TABS controller. That is why I asked you to use 'clone' for 'Training' screen\n. Yes, it is very good and nice to have feature. Feel free to submit PR (for v4). v3 is not supported anymore. Please test v4 and create issues if any.. It is with beta tag. Latest for today is 4.0.0-beta.5. Good catch! Example was updated (it is master branch now). External TabBar is not supported - because it is not supported by React Navigation. You have to provide own custom navigator to make it work:\nhttps://reactnavigation.org/docs/navigators/custom\nand pass it as navigator prop to Scene.\nOr you may just copy their TabNavigator and change code appropriately.. I can't just run your example, please provide github demo. Check Example project, it renders tabbar normally. . direction is not supported anymore because underlying reactnavigation API doesn't support it. Unfortunately now RN doesn't allow to have different animations for one stack:\nhttps://github.com/react-community/react-navigation/issues/124\nhttps://github.com/react-community/react-navigation/issues/175\nOne workaround is to create two nested stacks (Scene), one should be modal for vertical direction, another is usual, left-to-right direction.\n. @alexchia Check also Example, Login has different animation there.. Could you fork and modify Example to show what exactly do you want to achieve? \nIs it similar to your issue\nhttps://github.com/react-community/react-navigation/issues/1593 ?\nIf so, probably I have to add popTo method that will use back({key:routeName}) - if it is really supported by RN. Please check latest master. It should be deployed already \n\n10 \u0438\u044e\u043b\u044f 2017 \u0433., \u0432 18:49, Alexander Chia notifications@github.com \u043d\u0430\u043f\u0438\u0441\u0430\u043b(\u0430):\n@aksonov thanks for so quickly pushing a fix!\ncould you deploy it to npm so I can test it with the complex Scene hierarchy I have in my app right now?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n. You need to create custom navigator and pass it as navigator prop to parent scene.\nPlease check Custom Navigators section within https://reactnavigation.org https://reactnavigation.org/\nOn 8 Jul 2017, at 15:25, xahon notifications@github.com wrote:\nVersion\nTell us which versions you are using:\nreact-native-router-flux v4\nreact-native v0.45.1\nIs there a way to embed inherited scenes into parent, like\n<Scene\n   key='tab_parent'\n   component={ ParentComponent }\n\n<Scene\n      key='tab_1'\n      component={ Comp1 }\n<Scene\n      key='tab_2'\n      component={ Comp2 }\n\nparent_component.js\n\nexport default class Parent extends Component {\n   render () {\n      return (\n         \n\n\n\n\n      )\n   }\n}\nI haven't found in documentation how to create custom header, custom tab switcher and refence to inherited scene.\nHow can i create something like this?\n https://user-images.githubusercontent.com/18731681/27985745-c09f06b8-6434-11e7-88df-963f9345b056.png\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub https://github.com/aksonov/react-native-router-flux/issues/1988, or mute the thread https://github.com/notifications/unsubscribe-auth/ABQpcV8iSgrKgSrX-9Uah0BfVMp42rcbks5sL4NYgaJpZM4ORvQU.\n\n\n. Also it is probably could be achieved with two navbars. One navbar belongs to first container, another to second (tabs).\nPlease check reactnavigation docs, v4 just creates needed hierarchy of Stack/Tab/Drawer navigators from defined Scenes.. Please create separate issue for it and check reactnavigation docs - does it provide API for it or not. If so, then RNRF probably supports it as well - Router.js passes all props as TabNavigator second param (i.e. config). V3 is not supported now. Please try v4, check Example project \n\n8 \u0438\u044e\u043b\u044f 2017 \u0433., \u0432 20:54, Jaume Bosch notifications@github.com \u043d\u0430\u043f\u0438\u0441\u0430\u043b(\u0430):\nVersion\nTell us which versions you are using:\nreact-native-router-flux v3.41.0\nreact-native v0.45.1\nExpected behaviour\nI'm trying to use react-native-flux with tabbar and navbar, but the scene change works strange.\nThe first time I press each option in the drawer it works, not the second. Also if I return to the 'Main' scene, the 'drawerImage' doesn't apply and renders the default one.Any help will be appreciated!\nThis is my router file\nimport React, { Component } from 'react';\nimport { Text } from 'react-native';\nimport { Router, Scene } from 'react-native-router-flux';\nimport SplashPage           from './SplashPage';\nimport Main                 from './Main';\nimport Drawer               from './Drawer';\nimport ClientNoLogged       from './ClientNoLogged';\nimport OwnerNoLogged       from './OwnerNoLogged';\nimport OwnerLogin          from './OwnerLogin';\nimport OwnerSignUp         from './OwnerSignUp';\nimport OwnerForgot         from './OwnerForgot';\nimport OwnerPending        from './OwnerPending';\nimport OwnerAnswered       from './OwnerAnswered';\nimport OwnerOtherRequests  from './OwnerOtherRequests';\nimport OwnerReviews        from './OwnerReviews';\nimport OwnerProfile        from './OwnerProfile';\nimport STYLES from '../core/Styles';\nclass TabIcon extends React.Component {\n    render(){\n        return (\n            {this.props.title}\n        );\n    }\n}\nexport default class App extends Component {\n    render() {\n        return (\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        )\n    }\n}\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub, or mute the thread.\n. Btw, Router supports inheritance of navbar attributes, so you may remove repeated values and move it higher.. @jaumebosch Thanks for the feedback. Will add these properties soon. . And, of course, PR would be welcome if you want to speed up things. There is nothing difficult, you maybe check how other properties are passed.\n\nFor drawerImage you may set leftImage directly for now, you may check Example project.. Please check latest beta.7. @jaumebosch drawerImage should work, I've just checked:\n<Scene key=\"drawer\" drawer contentComponent={TabView} drawerImage={require('./images/back_chevron.png')} >\nI see 'chevron' instead of 'burger'\nMaybe you didn't set it for drawer Scene but for inner tabs?. Was it supported within v3? Maybe you could list other missed nav bar properties too there.. Sorry, I will add this to 'Breaking Changes for v4'. Could you use another syntax to define routes - without Actions.create, just  as component. Check Example for more details.. Added note about Actions.create to README.md. Yes, it should work! Please check \n\n9 \u0438\u044e\u043b\u044f 2017 \u0433., \u0432 10:51, xahon notifications@github.com \u043d\u0430\u043f\u0438\u0441\u0430\u043b(\u0430):\nIs this possible to pass component property in scene like  ?\nOr there is exist another approach?\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub, or mute the thread.\n. It is function, not property. Fork Example and show your problem \n9 \u0438\u044e\u043b\u044f 2017 \u0433., \u0432 12:41, xahon notifications@github.com \u043d\u0430\u043f\u0438\u0441\u0430\u043b(\u0430):\nWhen i call Actions.nameOfInnerScene nothing occurs\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub, or mute the thread.\n. Thanks, will work on it. Disable strict-mode for a while.. Please check latest master. Sorry, v3 is not supported, please try v4 and custom navigator for reactnavigation\n9 \u0438\u044e\u043b\u044f 2017 \u0433., \u0432 12:23, xahon notifications@github.com \u043d\u0430\u043f\u0438\u0441\u0430\u043b(\u0430):\nIs defaultrenderer a container for inner scenes?\n MasterScene                ( Component={ MasterSceneComponent } )  \n |          |  \n V          V\n\nInnerScene1    InnerScene2\n(initial)\nIf i understand right, MasterScene containing code below...\nrender () {\n   return (\n      \nHello from master scene\n\n\n   )\n}\nwill produce merged Master and Inner scene and Inner scene will be within defaultRender?\nWithout defaultrenderer element my scene won't rendering but with one it renders outside under that element and won't stretch it by its content. What should this element do? There is not enough information about that element in documentation.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub, or mute the thread.\n. Will be added as well. Please check https://reactnavigation.org/docs/navigators/tab, TabNavigatorConfig is passed by v4 from your Scene props.. Looks like react-navigation doesn't support something similar to tabBarSelectedItemStyle. Have you tried activeBackgroundColor, inactiveBackgroundColor, etc. ?\n. @AlmogRnD Check Example - you could pass your React element as icon for tabs.. I don't know what is the must, it is default ReactNavigation behaviour. As I see it allows to pass your own tabbar component, just check. Maybe you could help with docs about Tabbar customization with v4.. Closing it because original issue was resolved.. Thanks, duplicate of #1987 . Nice, try to remove that comment about 'Breaking changes'! I've just added redux to Example without any problem, but reproduce your issue only after adding comment as child for Provider. Weird redux issue.\n\nP.S. You may want to switch MobX ;). @warrenronsiek \n1. Replace ActinsConst.REPLACE with 'replace'.\n2. You must set atleast one container - wrap your single Login by Scene\n3. Please fork & modify Example project to reproduce your issue ('props is not defined'). You may use props.navigation.state instead. I will add navigationState for backward compartibility soon. . Do you mean this.props.navigationState.children? Yes, it is replaced to this.props.navigation.routes. Will add it to 'Breaking changes'.. Could you check navigation.routes ?. It is weird, let me check.. There is no 'children' because RNRF Router interpret 'main' as leaf (because 'component' is defined). So V4 accepts children OR component prop.\nIf you want to use custom tab container you have to use custom Navigator and pass it as navigator prop:\nhttps://reactnavigation.org/docs/navigators/custom\n. Original code was taken from v3 and applied to v4 that is wrong. Starting from v4 'container' scenes (like tabs, stack, etc.) cannot have 'component' prop but 'contentComponent' instead. Good question. I'm going to submit Lighting Talk about it for ReactiveConf:\nhttps://blog.reactiveconf.com/open-call-for-reactiveconf-lightning-talks-2017-a4f5394e5f96\nWill post it soon.. My talk proposal \nhttps://gist.github.com/aksonov/e2d7454421e44b1c4c72214d14053410. @Maxwell2022 Improving react-navigation instead?? Maybe you are joking, really. Just for experiment I submitted really useful PR https://github.com/react-community/react-navigation/pull/1999, it took 2 weeks (!) to complete review, I fixed all (!) suggestions from reviewers and after that one from authors said that my PR is not needed because he worked on 'refactoring' of navbar API! Huh, probably new breaking changes... And check other PRs, a lot very useful PRs are not merged for MONTHS. . And yes, docs are harder part to maintain, especially for open source projects. The problem that most community prefer just to use open source without any contribution.. Many problems like navbar customization (like setting right/left navbar images), action processing (like added missed popTo) could be solved by RNRF. \nBut for some problems like #2012, yes, we have to wait fix. We could fork ReactNavigation and apply suggested PRs at the future (right, many PR solve problems but still not merged).\nAnyway, v3 is based on obsolete react-native-experimental-navigation, so I don't see any better alternative.. Just use hideNavBar, hideTabBar to hide navbar/tabbar. No, it should not. Please check Example, TabBar.. yes. Will implement for next version, please rename ticket or create new one.. Check Example tabs\n\n12 \u0438\u044e\u043b\u044f 2017 \u0433., \u0432 12:27, Almog Koren notifications@github.com \u043d\u0430\u043f\u0438\u0441\u0430\u043b(\u0430):\n@aksonov I just tested gestureEnabled={false} and it's not working\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n. Please check 'breaking changes' first and search before create new issues  #1992 . Please check your version, it should be fixed within 4.0.0-beta.7\nOn 10 Jul 2017, at 16:24, shiqian123 notifications@github.com wrote:\nwhen I in login3 page click go Root is error\n https://user-images.githubusercontent.com/9497069/28022680-6f8b0cbe-65be-11e7-94f0-cd6d59b4df47.png\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub https://github.com/aksonov/react-native-router-flux/issues/2004, or mute the thread https://github.com/notifications/unsubscribe-auth/ABQpcV49kxvzkB17RDKDKcnJxkFb3tqBks5sMjP_gaJpZM4OS6s9.\n\n\n. @shiqian123 Please update Example too, there was error - popToRoot should use popTo('launch)notpopTo('root')`. panHandlers set to null should work for beta.7\n\n10 \u0438\u044e\u043b\u044f 2017 \u0433., \u0432 18:51, Alexander Chia notifications@github.com \u043d\u0430\u043f\u0438\u0441\u0430\u043b(\u0430):\nCan you provide some guidance on how to disable panHandlers in this new version of react-native-router-flux?\nThe current swipe right to dismiss feature is very disruptive to my app flow.\nIf you could provide some guidance on how to implement a CustomNavigator etc, I would be glad to submit a PR to show this could be done in Example.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub, or mute the thread.\n. Fork & reproduce it with Example project.. Sorry, it seems not supported yet by react-navigation (disable gestures for drawer) https://github.com/react-community/react-navigation/issues/390. Duplicate of #1988. You have to use custom navigator for container Scenes. It is not difficult, just check LightboxNavigator.js as part of RNRF.\n\nWithin V4 if you Scene has component, then it is CHILD. . https://github.com/aksonov/react-native-router-flux/blob/master/src/LightboxNavigator.js. Docs will come later, but for this case I could document it here - LightingboxNavigator is clear example of custom container - it displays main view and other 'active' view as overlay - useful for popups. You may copy code and modify how you need - display all children at once, for example, etc. Then pass it as navigator prop for container Scene.. ```\nimport MainNavigator from '../YOUR_CUSTOM_NAVIGATOR';\n...\n\n\n\n```\nor you may just try lightbox already:\n<Scene key='lightbox' lightbox>\n   <Scene key='Home' component={Home} />\n   <Scene key='Teams' component={Teams} title='Teams' initial={false} />\n</Scene>\nThis way it will display Home and after Actions.Teams it will display Home & Teams as overlay.\n. Yes, feel free to submit PR. Have you tried second way (Lightbox) ?. It is strange, could you fork and reproduce it with Example?. Could you check Example, put Error popup link inside Tabs. If it doesn't work, please create issue and I will try to fix. Cancel your packager, probably it is already run for other app\u2026\n\nOn 11 Jul 2017, at 11:38, Almog Koren notifications@github.com wrote:\nI can't even run example not sure what's going on first time seeing this error\nhttps://user-images.githubusercontent.com/169507/28062199-017ad172-65e2-11e7-9aef-893f2812566f.png\n\u2014\nYou are receiving this because you modified the open/close state.\nReply to this email directly, view it on GitHub https://github.com/aksonov/react-native-router-flux/issues/2007#issuecomment-314390291, or mute the thread https://github.com/notifications/unsubscribe-auth/ABQpcW4xyBUTVwSV8T3m0wqwENB20Z8kks5sM0KTgaJpZM4OTmiE.\n\n\n. Have you tried to popup Error from tab and got error?. And where is tab2_2 within your gist?. See my message above:\n\nWithin V4 if you Scene has component, then it is CHILD.\n\nP.S. I've added it to \"breaking changes\". I don't see your code. Please give me link to fork of Example to reproduce. . I added Redux wrapper and Example works without any problem. Sorry, I didn't store it - it was empty reducer (store), Provider and connected Router, nothing special. Please send me link to your Example fork and will try to run.. So just fork Example add Redux there and send me the link. I don't have time to create new projects and experiment, sorry.. Why you can't just fork github project?\nAnyway I don't see any Redux there. \nAnd I told several times \"Within V4 if you Scene has component, then it is CHILD.\", Home here is CHILD, so Login inside is not processed. Why are you doing that?\nclass Example extends Component {\n  render() {\n    return (\n      <Router createReducer={reducerCreate}>\n        <Scene key=\"lightbox\" lightbox>\n          <Scene key=\"root\">\n            <Scene key=\"tabBar\" tabs hideNavBar={true}>\n              <Scene key='Home' component={Home} title='Home' initial={true}>\n                <Scene key='Login' component={Login} title='Login' initial={true}/>\n              </Scene>\n              <Scene key='Home2' component={Home} title='Home' initial={true}/>\n            </Scene>\n          </Scene>\n        </Scene>\n      </Router>\n    );\n  }\n}\n. @xdamman Could you look at it?. @AlmogRnD Please try yarn yarn add react-native-router-flux@4.0.0-beta.7\n@xdamman may fix it for npm, for next beta, I guess.... Mac, npm 4.2.0. @xdamman Could we just run ./node_modules/.bin/opencollective instead to avoid that?. @xdamman Yes, it works. I've just submitted it to PR #2015 . Should be fixed with v4 beta.8. Try latest beta \n\nOn 30 Jul 2018, at 13:11, OrangeFlavoredColdCoffee notifications@github.com wrote:\n\u2014\nYou are receiving this because you modified the open/close state.\nReply to this email directly, view it on GitHub, or mute the thread.\n. Please check 4.0.0-beta.7, I don't see usage of React.PropTypes.  v3 is not supported anymore, sorry.. @Venumteam Please check 'Breaking changes' section.. Yes. v4 uses built-in react navigation Drawer navigator. Please use contentComponent for SideMenu component, remove component attribute. Please check docs about DrawerNavigator from ReactNavigation.. Is it similar to https://github.com/react-community/react-navigation/issues/1584 ?. Please try to reproduce it with Example project and latest version 4.0.0-beta.40. Feel free to open if the issue still exists. Use stateless function instead. It seems requirement from ReactNavigation and I agree - icon should not maintain any state.. @igorarkhipenko Just try 'color', not 'tintColor' because it is usual style applied to Text element.. 1. I've just set leftButtonTextStyle={{ color: 'red' }} backButtonTextStyle={{ color:'red' }} to Example 'root' element and definitely see red colours for Login 'Cancel' button.\n\n\nSure it will not work because rightButton is complete component for right Button. Try rightTitle instead.. @compojoom Please check now (forgot to 'build' js). @compojoom Please check with latest commit.. @compojoom Please give me link to forked Example to demonstrate. . @southerneer Thanks!. @compojoom Never mind, was able to reproduce with your snippet above. @compojoom Check now. About burger image, use Issues search. Like #703 . @compojoom Thanks for testing!. Could you reproduce it with Example project? I need gif and link to fork of Example. Not 'back', but 'pop'. I'm not sure about support of 'refresh' inside pop. Could you just raise two actions?. You should pass child scene to pop to, not container one.. Because 'companies' is not child.. 'Companies' is stack. Stack cannot be presented, you always see some child within the stack.\n'refresh' inside pop looks a little bit strange, have you tried just two calls - popTo & refresh?. Have you tried Actions.popTo('companies');Actions.refresh({data}); ?. On current scene. After popTo currentScene is changed.. Could you please check that PR:\nhttps://github.com/aksonov/react-native-router-flux/pull/2015 ?. Where is onRight? I don't see any leftTitle. Could you try PR #2015 ?. I can't reproduce. Please check Example from that PR, I've just committed rightTitle for Login Page and see it normally.\n\nIf you see it but don't see within your project, fork Example and try to reproduce it with Example.. Should work with v4 beta.8. Could you reproduce it with Example?\n\n17 \u0438\u044e\u043b\u044f 2017 \u0433., \u0432 0:38, parachute-dev notifications@github.com \u043d\u0430\u043f\u0438\u0441\u0430\u043b(\u0430):\nStill seem to have the same issue - no text appearing - tried rightTitle & leftTitle (using onLeft & onRight too). Currently using ^4.0.0-beta.11\nThis is with the android emulator on Windows.\n\"dependencies\": {\n\"firebase\": \"^4.1.3\",\n\"mobx\": \"^3.2.1\",\n\"mobx-react\": \"^4.2.2\",\n\"prop-types\": \"^15.5.10\",\n\"react\": \"16.0.0-alpha.12\",\n\"react-native\": \"0.46.3\",\n\"react-native-router-flux\": \"^4.0.0-beta.11\",\n\"react-navigation\": \"^1.0.0-beta.11\",\n\"react-redux\": \"^5.0.5\",\n\"redux\": \"^3.7.2\",\n\"redux-thunk\": \"^2.2.0\"\n},\n\"devDependencies\": {\n\"babel-jest\": \"20.0.3\",\n\"babel-preset-react-native\": \"2.1.0\",\n\"eslint-config-rallycoding\": \"^3.2.0\",\n\"jest\": \"20.0.4\",\n\"react-test-renderer\": \"16.0.0-alpha.12\"\n},\n\"jest\": {\n\"preset\": \"react-native\"\n}\n}\n\u2014\nYou are receiving this because you modified the open/close state.\nReply to this email directly, view it on GitHub, or mute the thread.\n. I mean Example project included into this github. Please clone and modify to reproduce the issue.. It should display 'Right'. Could you check iOS? Looks like different behaviour for iOS/Android again.... @diegocouto Do you have the same missed rightTitle on Android for Tab#1_1 ?. @cadudragon Please try latest master. Have you checked 4.0.0-beta.14?. It means actions is not generated yet i.e. Null value \n1 \u0430\u0432\u0433. 2017 \u0433., \u0432 11:36, Oriane notifications@github.com \u043d\u0430\u043f\u0438\u0441\u0430\u043b(\u0430):\nThe same occured using 4.0.0-beta.14.\nIn fact, it only works when using onLeft={Actions.pop}, not when using onLeft={Actions.mypage}\n\u2014\nYou are receiving this because you modified the open/close state.\nReply to this email directly, view it on GitHub, or mute the thread.\n. Please check Example project. There is modal Login with own navbar.. You may add lazy attribute to tabs Scene for lazy creation of tabs.. componenetDidMount is not good place.\nUse on (or onEnter) function for Scene. It will be run every time when scene is active.. I don't know your use case. You may run Actions.refresh action from onEnter handler to change some properties. Sorry, v3 is not supported.. @quarryman Sorry, I'm currently working with iOS app only. Could you debug and find where is the problem (probably within NavBar.js)? Maybe because of upper tabbar and absolute positioning?. @quarryman Could you check latest master now?. It is because of yarn cache. Pass latest commit ID instead of 'master'. Please always mention version\n13 \u0438\u044e\u043b\u044f 2017 \u0433., \u0432 12:39, Almog Koren notifications@github.com \u043d\u0430\u043f\u0438\u0441\u0430\u043b(\u0430):\nThis is a wired issue, not sure why it's happing but it looks like the my home component is getting rendered twice attached gif as you can see the nav bar has home twice and you can go back to home even though\nhome is the first view.\nMy code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub, or mute the thread.\n. Always try latest one before creating of issue ;) Please check with beta.8. Could you reproduce it with Example? Have you added console logs and see re-rendering several times?. Ok, please reproduce with Example and latest beta.8. Why? I've just increased dep to beta.8 if it is what you are saying.. Sorry, I can't guess the problem, I need to see the code. All I see from screenshot is some weird navbar transition and it could happen because of hidden navbar for tabbar. For such cases look at headerMode setting for RN StackNavigator - 'screen' maybe better ('float' is used by default)\n. Then try to fix it by yourself - RNRF is just wrapper around react-navigation and build all screens for you. As far as I can see when you are calling Actions.Home - you are telling react-navigation to PUSH Home - but Home is already exist as start screen, so you will have two screens as the result. That is why I said. So it is not bug, but incorrect usage.. As I said RNRF is just wrapper.\nIs it similar to https://github.com/react-community/react-navigation/issues/476 ?. Please try PR #2025, I did some workaround. You should call direct tabs child\n14 \u0438\u044e\u043b\u044f 2017 \u0433., \u0432 18:16, Almog Koren notifications@github.com \u043d\u0430\u043f\u0438\u0441\u0430\u043b(\u0430):\nI can confirm this still happens with beta 9 and I'm on \"react-navigation\": \"^1.0.0-beta.11\", I'm calling\nActions.Photos(); which is inside a tab bar\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n. Actions.tab2()\n14 \u0438\u044e\u043b\u044f 2017 \u0433., \u0432 18:40, Almog Koren notifications@github.com \u043d\u0430\u043f\u0438\u0441\u0430\u043b(\u0430):\nHow do I do that? What is the code?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n. Remove .babelrc\n13 \u0438\u044e\u043b\u044f 2017 \u0433., \u0432 18:09, Almog Koren notifications@github.com \u043d\u0430\u043f\u0438\u0441\u0430\u043b(\u0430):\nIssue with this PR\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub, or mute the thread.\n. @southerneer Are you able to use that PR?. It seem ReactNavigation behaviour, but maybe I didn't understand issue.  I want to repeat, screenshots only are not helpful for me, I need runnable project also.. It is about 'backBehavior' for TabNavigator. It is set to 'none' by RNRF:\nhttps://reactnavigation.org/docs/navigators/tab\nMaybe I will remove 'none' and use default value instead ('initialRoute') for beta.9. I've removed 'none' as back behaviour but don't see any changes. Maybe you could check ReactNavigation itself for desired behaviour. . connect it to redux or mobx observer and change it when do you need. It is not about RNRF, even not about React Navigation.... Please check beta.9 - you have to use navBarTintColor or navBarButtonImageColor or tintColor property.. Sorry, did it only for right button.\nCheck now beta.10\nOn 14 Jul 2017, at 20:20, Lucas Veiga notifications@github.com wrote:\n@aksonov https://github.com/aksonov Just updated. Tried all the options, but still not getting it:\nvar sceneConfig = {\n      navigationBarStyle: {'black'},\n      headerTitleStyle: {\n          color: 'white',\n          fontWeight: '500'\n      },\n      tintColor: '#fff',\n      navBarTintColor: '#fff',\n      navBarButtonImageColor: '#fff',\n      headerTruncatedBackTitle: 'Voltar',\n      headerBackTitleStyle: {\n        color: 'white',\n      },\n      cardStyle: {\n            backgroundColor: 'white'\n      }\n    }\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub https://github.com/aksonov/react-native-router-flux/issues/2028#issuecomment-315431076, or mute the thread https://github.com/notifications/unsubscribe-auth/ABQpceR2IjoA6iA2_lTFqRtONHV7s4f8ks5sN7F6gaJpZM4OXZLA.\n\n\n. Oops, did typo again. Try beta.11\n\nOn 14 Jul 2017, at 22:32, Lucas Veiga notifications@github.com wrote:\n@aksonov https://github.com/aksonov Getting this error:\nhttps://user-images.githubusercontent.com/246373/28229745-5df22d6c-68ba-11e7-8994-f4114fbfbdca.png\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub https://github.com/aksonov/react-native-router-flux/issues/2028#issuecomment-315460517, or mute the thread https://github.com/notifications/unsubscribe-auth/ABQpcTwRQrJo4_fepLarzk9XbDKliF1iks5sN9BlgaJpZM4OXZLA.\n\n\n. Check Example. I used tintColor\n\nOn 14 Jul 2017, at 23:16, Lucas Veiga notifications@github.com wrote:\n@aksonov https://github.com/aksonov Tried all the options and didn't get it. What's the correct param?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub https://github.com/aksonov/react-native-router-flux/issues/2028#issuecomment-315469900, or mute the thread https://github.com/notifications/unsubscribe-auth/ABQpcYKmxcceHoTB8zdrGa10hz1ddBF6ks5sN9q2gaJpZM4OXZLA.\n\n\n. Do you see red color for arrow within Example?\n\n16 \u0438\u044e\u043b\u044f 2017 \u0433., \u0432 22:12, Lucas Veiga notifications@github.com \u043d\u0430\u043f\u0438\u0441\u0430\u043b(\u0430):\nI tried everything, specially using tintColor as you used on the example, but it didn't work.\n\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n. Could you reproduce it on Example?\n16 \u0438\u044e\u043b\u044f 2017 \u0433., \u0432 22:47, Lucas Veiga notifications@github.com \u043d\u0430\u043f\u0438\u0441\u0430\u043b(\u0430):\nYes, I do. But when I try to apply on my Router, it doesn't work. In fact, it works on my modals, but not on my card stack.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n. Have you tried to set backTitle?\n16 \u0438\u044e\u043b\u044f 2017 \u0433., \u0432 22:55, Lucas Veiga notifications@github.com \u043d\u0430\u043f\u0438\u0441\u0430\u043b(\u0430):\nOn example, it works. But not on my project. I'm setting this way:\n\n        <Scene key=\"modal\" modal hideNavBar tintColor='white'>\n            <Scene key=\"root\" hideNavBar tintColor='white'>\n              <Scene key=\"tabbar\" \n              tabs \n              showLabel={false} \n              tintColor='white'\n              tabBarComponent={this.tabBarElement}\n              headerBackTitle={'Voltar'}\n              activeTintColor={AppStyles.colors.default}\n             >\n\nAs you can see, I tried on every element.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n. Yes, I'm just trying to debug :) maybe you see built in reactnavigation bar but not rnrf one \n16 \u0438\u044e\u043b\u044f 2017 \u0433., \u0432 23:01, Lucas Veiga notifications@github.com \u043d\u0430\u043f\u0438\u0441\u0430\u043b(\u0430):\nBut backTitle sets the text, right?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n. You have to include Scene directly into Router, check Example.. Sorry, it was quite unclear syntax and it will not be supported by v4. v4 uses ReactNavigation TabNavigator as tabbar. You may pass own tabbar, please check TabNavigator docs.. Sorry, v4 is just wrapper around ReactNavigation (v4), so probably you have to ask there.. Cannot reproduce on fresh install of Example\n14 \u0438\u044e\u043b\u044f 2017 \u0433., \u0432 17:37, Almog Koren notifications@github.com \u043d\u0430\u043f\u0438\u0441\u0430\u043b(\u0430):\nJust updated to \"react-native-router-flux\": \"4.0.0-beta.9\",\ngetting the following error\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub, or mute the thread.\n. Try clean clone and run Example\n14 \u0438\u044e\u043b\u044f 2017 \u0433., \u0432 18:05, Almog Koren notifications@github.com \u043d\u0430\u043f\u0438\u0441\u0430\u043b(\u0430):\nSame thing with npm install react-native-router-flux@4.0.0-beta.9 --save\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub, or mute the thread.\n. I will add support of getSceneStyle for upcoming release. Try cardStyle as @luco suggested. Have you tried lazy prop for tabs?\n14 \u0438\u044e\u043b\u044f 2017 \u0433., \u0432 22:02, Almog Koren notifications@github.com \u043d\u0430\u043f\u0438\u0441\u0430\u043b(\u0430):\nSo I don't think this is a bug but I'm not sure this is correct behavior also this might be caused be React Navigation.\nIf you have a tabs component on app start once tabs are loaded it also loads all the view components for each tab.\nSo if you have the following\n\n\n\n\n\n\n\n\n\n\n\n\nAs soon as home loads it also loads photos and site diary.\nFor the most part, this is fine but if you need to make API calls in componentDidMount you really can't. This feels like the wrong way with react, I thought the whole idea is to make API calls inside componentDidMount once the component is mounted or navigated to.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub, or mute the thread.\n. Sorry, docs are not ready (PR is welcome). As I said before all tabs/stack configs are passed directly to StackNavigation/TabNavigator. So you can check 'lazy' attribute within TabNavigator docs.. Why did you remove breaking changes section?. You have to use 'navigator' param, 'component' is used only by children to display screens\n. Great! Could you submit PR for docs? \n15 \u0438\u044e\u043b\u044f 2017 \u0433., \u0432 13:55, thngdude notifications@github.com \u043d\u0430\u043f\u0438\u0441\u0430\u043b(\u0430):\nOk, I got it working. This would be a first for me, but I would be willing to contribute to add a section about this to the documentation for v4.\n\n\n\n\nYou must add the tabs and tabBarComponent props, where the CustomTabBarComponent may extend a component such as TabBarBottom from the React Navigation library.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n. RNRF is just wrapper around ReactNavigation. It is how default 'headerMode' (float) works.\nAs I can see you completely hide navbar for first scene and then show it for second. You could change headerMode to 'screen' (check RN docs) OR don't hide navbar on first page.\n\nYou may want to try pure ReactNavigation also.. RNRF is just wrapper around ReactNavigation. Please check ReactNavigation first and make sure that your icons are displayed there.. Please try to reproduce issue with this project Example fork.\n\nOn 15 Jul 2017, at 15:34, Jonathan notifications@github.com wrote:\nYes i know it, i've tried with pure ReactNavigation and it's working ! With RNRF it's not working ! , It's working on IOS but not on ANDROID.\nIOS :\nhttps://user-images.githubusercontent.com/2753799/28239723-e12287be-6972-11e7-80b6-e68632989f23.png\nANDROID :\nhttps://user-images.githubusercontent.com/2753799/28239726-e9e5715e-6972-11e7-8644-d8cbed163b54.png\nCODE :\nimport React from 'react'\nimport { View } from 'react-native';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport Reducers from '@Redux/Reducers';\nimport scenes from '@scenes';\nimport { Actions, Scene, Router,ActionConst } from 'react-native-router-flux';\nimport IconMaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons';\nimport {ORANGE} from '@Theme/colors'\nimport {\n  Login,\n  Home,\n  Events,\n  EventDetail,\n  CreateEvent,\n  Messages,\n  Notifications,\n  PrivateProfil,\n} from '@Pages';\nconst tabbarConfigStyle= {\n      height: 60,\n      backgroundColor: '#ECF0F1',\n      borderColor: '#ECF0F1',\n};\nconst iconHome = (navigation) => ()\nconst iconNotifications = (navigation) => ()\nconst iconEvents = (navigation) => ()\nconst iconMessages = (navigation) => ()\nconst iconProfil = (navigation) => ()\nconst Kernel = () => (\n  \n\n\n  <Scene key=\"login\" initial hideNavBar>\n    <Scene key=\"welcome\" component={Login} />\n  </Scene>\n\n  <Scene key=\"PrivateProfil\" mode=\"modal\" modal direction=\"vertical\" component={PrivateProfil} title=\"MyProfil\"  />\n\n  <Scene key=\"inapp\"\n  panHandlers={null}\n  tabBarStyle={tabbarConfigStyle}\n  showLabel={false}\n  activeTintColor={ORANGE}\n  tabBar\n  tabs>\n\n    <Scene key=\"Home\" tabBarIcon={iconHome}>\n        <Scene key=\"Home\" component={Home} header={null} title=\"Home\" />\n    </Scene>\n\n    <Scene key=\"Notifications\" icon={iconNotifications} component={Notifications} title=\"Notifications\"  />\n\n    <Scene key=\"Events\" tabBarIcon={iconEvents} >\n      <Scene key=\"Events\" component={Events} title=\"Events\" />\n      <Scene key=\"CreateEvent\" component={CreateEvent} title=\"CreateEvent\" />\n      <Scene key=\"EventDetail\" component={EventDetail} title=\"EventDetail\" />\n    </Scene>\n\n    <Scene key=\"Messages\" icon={iconMessages} component={Messages} title=\"Messages\"  />\n  </Scene>\n\n</Scene>\n\n\n\n)\nexport default Kernel\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub https://github.com/aksonov/react-native-router-flux/issues/2038#issuecomment-315534276, or mute the thread https://github.com/notifications/unsubscribe-auth/ABQpcaWJPj-xozU-THi8dP-PEs0t2930ks5sOL_bgaJpZM4OY_TR.\n\n\n. Sorry, I'm actively looking for Android contributor right now because I'm working on iOS app only.. Closing because I didn't received forked Example to reproduce issue.. Looks like duplicate of #2033. Sorry, I'm actively looking for Android contributor right now because I'm working on iOS app only.. @diegocouto We could also add it to v4 ('App' component within src/Router.js), could do you submit PR? . @quarryman Example doesn't use master branch but latest beta, are you sure that you are using master?. @oeddyo I see your confusion - v4-beta or unsupported-v3. This problem is going from quite strange React Native team behaviour - stop to support existing navigation and ask community for migration to beta ReactNavigation package. So I v4-beta is the same quality as beta React Navigation. If it works differently for Android comparing to React Navigation then it is VERY strange because RNRF is just wrapper - you may check source codes - it just creates needed component tree and configuration for ReactNavigation. Probably the problem that Android doesn't support passing functions/images as parameters to actions (because images are passing now via props)? It is necessary just to debug it to find the reason.... Very good question. Probably we will implement some workaround soon if ReactNavigation doesn't allow it. What is your use case? You could try to use 'tabs' with tabbar hidden to avoid animation or you could try type 'reset' (check Example/Register UI, or it doesn't allow animation too?)\nCheck related issue:\nhttps://github.com/react-community/react-navigation/issues/175. @ywongweb Maybe you could implement own custom navigator for your use case - probably you could just copy & past StackNavigator and remove transitions from there. I will also investigate how to solve this problem.... Looks like we could add this functionality to RNRF using transitionConfig\nhttps://github.com/react-community/react-navigation/issues/1490\nPR is welcome!. Here is helpful post:\nhttps://stackoverflow.com/questions/43974979/react-native-react-navigation-transitions/43981835#43981835. @JoshStaff Feel free to submit PR. Okey, closing this ticket for now. As I found nice workaround by passing transitionConfig for needed container - this way you can create very customisable transitions:\nhttps://github.com/react-community/react-navigation/issues/1759\nAlso I will add duration support using the trick from https://github.com/react-community/react-navigation/issues/1254\nP.S. I've just updated Example to make 'Login' animation as standard android 'fade' animation.. Thanks! Unfortunately circleci didn't run, I've fixed it, could you just commit something to run eslint/tests ?. Maybe you could look also #2038?. LGTM!. It depends when you try to call it. Maybe you are calling it before router creates actions\n\n16 \u0438\u044e\u043b\u044f 2017 \u0433., \u0432 21:57, Pavel Shut notifications@github.com \u043d\u0430\u043f\u0438\u0441\u0430\u043b(\u0430):\nTriggering actions for the most nested screens produce such an error:\nundefined is not a function ( evaluating '_reactNativeRouterFlux.Actions.kriyaView()')\nimport React, { Component } from 'react'\nimport { Router, Scene, Actions } from 'react-native-router-flux'\nimport { KriyaView } from '../KriyaView'\nimport { KriyaEdit } from '../KriyaEdit'\nimport { HomeTimer } from '../HomeTimer'\nimport { Kriyas } from '../Kriyas'\nimport { NavDrawer } from '../NavDrawer'\nclass Root extends Component {\n  render() {\n    return (\n      \n\n\n\n\n\n\n\n\n\n\n    )\n  }\n}\nexport { Root }\nI tried not wrapping all the screen in a drawer but still get this error.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub, or mute the thread.\n. Strange. Could you try to reproduce it on Example project?\n16 \u0438\u044e\u043b\u044f 2017 \u0433., \u0432 22:53, Pavel Shut notifications@github.com \u043d\u0430\u043f\u0438\u0441\u0430\u043b(\u0430):\nI call it by tapping a button when everything is rendered long ago\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub, or mute the thread.\n. Oh, parent scenes cannot have component (it is breaking change from v3, please check docs).. for v4 I didn't write anywhere that Scene could have both children and component. I will add check for it to throw exception for next version.. Speed is awesome now, thanks!. Actions.pop();Actions.refresh({...}) should work. Please check Example from latest master, I've just added pop & refresh for Login 2 page.. Check Example project. You have to use createReducer param like with v3\n17 \u0438\u044e\u043b\u044f 2017 \u0433., \u0432 2:03, Diego Couto notifications@github.com \u043d\u0430\u043f\u0438\u0441\u0430\u043b(\u0430):\nThat's a pretty silly question, but I'm having some trouble to connect with redux using react-native-router-flux v4. We have something like this:\nconst RouterWithRedux = connect()(Router);\nclass App extends Component {\n  render () {\n    return (\n      \n\n          // Scenes...\n        \n\n    );\n  }\n}\nOn v4, the actions aren't being dispatched to our reducers anymore. I noticed that, on the README, this is mentioned:\nMobX-friendly: all scenes are wrapped with observer. You may subscribe to navigationStore (Actions in v3) and observe current navigation state. Not applicable to Redux.\nDoes it mean that it isn't possible to subscribe to events using Redux anymore?\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub, or mute the thread.\n. It could be considered as duplicate of https://github.com/aksonov/react-native-router-flux/issues/2115\nProbably docs should be improved for Redux integration - we are actively seeking for maintainers, PR is welcome.... You must have container scene as root. Otherwise this component doesn't make any sense.. Your root scene is not container\n1 \u0430\u0432\u0433. 2017 \u0433., \u0432 18:56, ranasing notifications@github.com \u043d\u0430\u043f\u0438\u0441\u0430\u043b(\u0430):\nOk, I'm not getting the error any more, but it only shows a blank screen on my Android simulator. Here is the relevant code:\nimport React, { Component } from 'react';\nimport { Scene, Router } from 'react-native-router-flux';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport LoginForm from './components/LoginForm';\nrender() {\nconst store = createStore(reducers, {}, applyMiddleware(ReduxThunk));\nreturn (\n  \n\n\n\n\n);\n}\n\u2014\nYou are receiving this because you modified the open/close state.\nReply to this email directly, view it on GitHub, or mute the thread.\n. Check Example project within this repository.. @hofuchi Thanks for PR! Sorry, please check latest master about back handler, it is already there You are adding listener within render() that is not correct.... I don't understand the question. Please fill all steps if you want to report something. Closing this 'ticket'. Good catch, will fix! Thanks!. Drawer should be parent for tabs, check Example project.. Maybe it is issue of ReactNavigation. Please create pure React Navigation project and check. Also you may try to reproduce the issue with Example project from this component.. Closing it because didn't receive cloned and modified Example to reproduce.. PopTo should accept only child scene, not container. What scene do you expect to see after popTo (it will be child, not container, right?) ? Use its name within popTo.. 1. Use 'replace' instead of ActionConst.REPLACE within Scene declaration (will add it to breaking change)\n2. Scenes cannot have both 'component' and 'children' (will add assert for the next version)\n3. Drawer syntax was changed (boolean drawer attribute + contentComponent for side menu component + Actions.drawerOpen/Actions.drawerClose to open/close drawer) . 1. Try drawerImage\n2. It is because of transpiled code. Change dist/index.js to src/index.js within node_modules/rnrf first \n19 \u0438\u044e\u043b\u044f 2017 \u0433., \u0432 20:16, Hagen H\u00fcbel notifications@github.com \u043d\u0430\u043f\u0438\u0441\u0430\u043b(\u0430):\n@aksonov One more question please.\nHow can i exchange the Menu-Icon, that is used in the NavBar with drawer?\nI looked around in NavBar.js and tried to pass a property \"backButtonImage\". But it won't work.\nI also tried to pass some console.log into the function \"renderBackButton\", but it gots never called.\nBuy the way, how did you worked/debugged the example application?\nEven if i completely reset packager and restart everything from scratch and change lines in \"node_modules/react-native-router-flux\" in the Example-application they got never called. I've never had this behaviour before with lower RN-versions, when i created my pull request for the navbar-background, which needed those things for debugging....\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n. @itinance Thanks, docs were updated. Closing this ticket.. Could you check Example project? It has Error lightbox and it is transparent.\nBtw, you may pass sceneConfig just once, within Router.. Could you describe all steps? Why you can't just pass transitionConfig as prop to Router (it will be passed to all navigators automatically)?. I've just tested your animations and it works great without modification (just bypass to Router)!  I've just added transitionConfig to Lightbox Navigator right now but it will not work, because LightboxNavigator doesn't use transitionAnimation now  - feel free to submit PR (it is accessible via tabsConfig.transitionConfig).\n\nAlso it will be great if we could preserve default animations somehow for modal/push and extend animations for other custom animation so I could include it into Example - I tried your config and it changes all animations within the app, so I postponed changes until we have default/native push/modal + custom ones.. Also disabled animations will be very helpful (so we could use duration={0} to disable animations for some scenes). Great! Is it possible to import ready ones from ReactNavigation?. Oh, I see CardStackStyleInterpolator.forHorizontal is already used, so only duration and easing is 'duplicated'.. So could we pass duration individually for scene?. I have tried to use that your 'default' config, but it doesn't work for modals.... It could be React Navigation issue. Could you please rework your example with ReactNavigation only and check.. It is strange why I can't reproduce it with Example project, can you? Anyway error is gone when you make top-level App as stateless component, please check. Check react docs about stateless components and check Example project:\nconst App = () => <Router>.... See code above\n\n22 \u0438\u044e\u043b\u044f 2017 \u0433., \u0432 13:05, Daniel Dimitrov notifications@github.com \u043d\u0430\u043f\u0438\u0441\u0430\u043b(\u0430):\nI don't understand what I'm doing wrong.\nThis is my original code:\nclass App extends Component {\nrenderBackButton(nav) {\n   ...\n    return nav.navigationState.index ? (\n            <TouchableOpacity onPress={onPress} style={styles.backButtonStyle}>\n                {button}\n\n            </TouchableOpacity>\n        ) : null;\n}\n\nrender() {\n    let owner = this.props.owner, loggedIn;\n    try {\n        if (owner.user.user_id) {\n            loggedIn = true;\n        }\n    }\n    catch (e) {\n        loggedIn = false;\n    }\n\n    return (\n        <Router>\n            <Scene key=\"root\" headerMode=\"screen\" cardStyle={styles.cardStyle}>\n                <Scene key=\"LoginOrRegister\" hideNavBar component={LoginOrRegister}\n                       initial={loggedIn ? false : true}\n                       title=\"Login or register\"/>\n                <Scene key=\"login\" hideNavBar={true} component={Login} title=\"Login\"/>\n                <Scene key=\"requestPassword\" hideNavBar={true} component={RequestPassword} title=\"Passwort vergessen\"/>\n\n....\n                \n\n        )\n    }\n}\nconst selector = (state) => {\n    return {\n        owner: state.owner\n    }\n};\nexport default connect(selector, actionCreators)(App);\nAnd this is what I transformed it to:\nconst App = (owner) => {\nconsole.log(owner);\n  let loggedIn;\n  try {\n      if (owner.user.user_id) {\n          loggedIn = true;\n      }\n  }\n  catch (e) {\n      loggedIn = false;\n  }\n  return (\n      \n\n\n\n\n......\n          \n\n  )\n}\nclass BlaBla extends Component {\n  render() {\n      return \n  }\n}\nconst selector = (state) => {\n  return {\n      owner: state.owner\n  }\n};\nexport default connect(selector, actionCreators)(BlaBla);\nAny idea what I'm doing wrong?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n. @Stophface Maybe you need to reconsider architecture of your app. react-navigation, for example, provides only static methods to create navigators - you don't have any way to pass props from other components runtime.. @1335382915 ReactNavigation doesn't pass params for some reason. I've just committed fix to use 'refresh' after 'navigate'. Please check latest master. Example also contains demo when Tab5 could be switched with data param (but you have to switch Example to latest master as well). Try beta.12 now. > No component support for scene containers (that contains children Scene) - you have to use custom navigator.\n\nIt is not for the problem you mentioned. Probably React Navigation doesn't support such scenario - as workaround you could remove 'reset' and use 'tabs' for 'root' navigator (with hideTabBar).\nTo see your case could you fork this component and modify Example so I can run it?. Could you please clone & modify Example project to demonstrate issue?. Thanks for repo, I've just checked it. It works fine without 'reset', so as I guessed before ReactNavigation doesn't support such transitions for some reason. Could you build pure ReactNavigation example and ask there to help? If they could give some receipt we could change RNRF 'reset' behaviour accordingly.... @tywoodpav Good job! Please check latest master now. And replace Actions.pop to Actions.unauthenticated within Home screen because 'reset' clears stack completely (so no pop is possible). Could you try latest master? Not beta.12\n\n21 \u0438\u044e\u043b\u044f 2017 \u0433., \u0432 18:20, tywoodpav notifications@github.com \u043d\u0430\u043f\u0438\u0441\u0430\u043b(\u0430):\nI think there is a bug. It works occasionally but every once in a while it throws the same error. I'm using ^4.0.0-beta.12. I'll try putting together some code to demonstrate.\nIn my previous structure, it transitions correctly to authenticated but throws the same error when transitioning to unauthenticated.\n\u2014\nYou are receiving this because you modified the open/close state.\nReply to this email directly, view it on GitHub, or mute the thread.\n. Again, I've just implement key:null for replace you suggested before. could you implement it with pure react navigation ? Or it is better to submit PR.\n. Have you tried to pass reset type as actions param and remove it from scene param?\n22 \u0438\u044e\u043b\u044f 2017 \u0433., \u0432 19:02, tywoodpav notifications@github.com \u043d\u0430\u043f\u0438\u0441\u0430\u043b(\u0430):\nHere's a link to the updated repo with react-navigation https://github.com/tywoodpav/reset-nested-navigators-react-native-navigation\nI think the problem is when RNRF detects what type of action to dispatch, it defaults to the one highest up in the tree. This makes reset work but when you navigate to a scene within the stack it still thinks you want a reset action when you actually just want to navigate normally.\nI'd love to help, but I think I'll have to change navigationStore and I have trouble following how params are parsed. Maybe some comments would help? ;)\n\u2014\nYou are receiving this because you modified the open/close state.\nReply to this email directly, view it on GitHub, or mute the thread.\n. Ops, looks like type is the inherited property. I will fix it. For now just set type for children to push \n22 \u0438\u044e\u043b\u044f 2017 \u0433., \u0432 19:02, tywoodpav notifications@github.com \u043d\u0430\u043f\u0438\u0441\u0430\u043b(\u0430):\nHere's a link to the updated repo with react-navigation https://github.com/tywoodpav/reset-nested-navigators-react-native-navigation\nI think the problem is when RNRF detects what type of action to dispatch, it defaults to the one highest up in the tree. This makes reset work but when you navigate to a scene within the stack it still thinks you want a reset action when you actually just want to navigate normally.\nI'd love to help, but I think I'll have to change navigationStore and I have trouble following how params are parsed. Maybe some comments would help? ;)\n\u2014\nYou are receiving this because you modified the open/close state.\nReply to this email directly, view it on GitHub, or mute the thread.\n. Actions.state. @sylvainbaronnet Please check latest master. Please check master now, I've added backward compatibility to use constants.. Oh, you are right, thanks!. I see duplicate onLeft there, could you look?. Thanks, I will add it to 'migration' section. Use Actions.pop();Actions.refresh({..}). Actually it is not workaround but much better syntax. v3 just was not able to support it.. However it is not difficult to add old syntax for backward compatibility. Feel free to submit PR.. Yes, master branch. Will publish beta.13 soon.. Duplicate of #2012 ? It seems ReactNavigation has issues with TabBar.... Hm, I can't find correlation between null NavBar - v4 doesn't export it anymore and hideTabBar option... Are you sure that you didn't use that empty NavBar anywhere (so it could broke things) ?. Please check latest master now, I've added support for refresh for backward compatibility. Duplicate of #2066 . @luco Have you tried to add onEnter/onExit on containers or on child? It works only for child. I've just added possibility to define them on component level (as static functions), please check.. Depends from what is this.doSomething. Just put onEnter={()=>console.log(\"onEnter!\")}  to see log. Demo is in progress... You may define it as static component function. @diegocouto Please check latest master. Yes, please create new one. Also it would be great if you will try to show me how to solve it with pure ReactNavigation (or just submit PR) - it is how I've fixed issue with 'reset' #2066 . As you can see from ReactNavigation docs there is no 'replace' action yet:\nhttps://github.com/react-community/react-navigation/issues/802\nFeel free to submit PR, probably we should do it by ourselves (i.e. don't use reactnavigation router) like I did for 'popTo'.\n. Yes, something like this. Duplicated of #2080 . Issue was created without details (version, etc.) As I see it could be even not v4 (Scene's doesn't contain root scene). Please use v4.. Yes, it is limitation of React Navigation and it makes sense. Please use pure functions for icons.. Could you reproduce it with Example project? Also it will be helpful to check if it is react-navigation issue (by implementing pure react navigation example).. Just try mobx . Or Actions.refresh. Use Action.refresh to 'refresh' tabs (componentWillReceiveProps). Tabs should not be remounted.\nOr use onEnter handler for tabs.. I have just added BLUR/FOCUS passed to reducer (latest master, will be beta.13 soon). Closing this ticket. Good catch! PR would be great. As workaround just use rightButtonImage and set drawerImage to null.. Should be fixed with 4.0.0.beta.13. Could you reproduce it with Example project? I rotated it without any problem, all links were re-centered properly without any additional logic.. Ok, if you want this issue to be fixed, please reproduce it with Example project from this repo (i.e. fork and modify). Closing it for now.. refresh within componentDidMount or componentWillReceiveProps is definitely anti-pattern. All you need is Redux or MobX and change state of your app accordingly and define static onRight, rightTitle, title functions within your component that will display that state. For MobX, RNRF allows wrapping all navbar by 'observer', so it will be fully dynamic - i.e. updated automatically.\n\n. Yes, it is good question, it would be great to create separate issue for this - 'access to the component props from the navbar' I will think how to achieve that.. It is kind of duplicate #2089 - you should use Redux/MobX to manage app state.. App should re-use existing 'home'. If it doesn't give me steps to reproduce. Check Example project for this repo.. What version do you use? We had some issues before, but it should be fixed with beta.12 I believe. Good question, could you please give me a link to that project or even better, could you submit PR with this demo (with simple login/auth/loading screens and some fake auth), so I could include it as mobX example? We could name it as ExampleMobX project.. I will try to prepare some MobX demo (it could be very simple at the beginning) to demonstrate best-practices with MobX. No, navigation actions should not be done within autorun - it is not intuitive and difficult to debug way. Correct way is to use on(onEnter) and success, failure properties (more correct analog of v3 Switch statement). Use string, success='menu'\n\n25 \u0438\u044e\u043b\u044f 2017 \u0433., \u0432 22:52, Daniel K. notifications@github.com \u043d\u0430\u043f\u0438\u0441\u0430\u043b(\u0430):\nOk, I think I've got some partial solution. This essentially works for the \"load\" scene where it can decide which way to go based on auth. However, I am struggling with redirecting to \"menu\" scene after the moment user gets authenticated. Apparently onEnter of the \"auth\" scene is not rerun when state changes.\nfunction Main() {\n  if (stores.preloadStore.loading) {\n    return \n  }\nconst guardAuth = () => {\n    const { authStore } = stores\n    if (authStore.isInitializing) {\n      return false\n    }\n    return authStore.isAuthenticated\n  }\nreturn (\n    \n\n\n Actions.menu()} failure={() => Actions.auth()} />\n           Actions.menu()} />\n          \n\n\n\n  )\n}\nThere is also a small bummer that I cannot do directly success={Actions.menu} but need to wrap into a function. Not sure why is that, no error is popping there.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n. @FredyC It seems MobX observables/observer/autorun concept is a little bit different from redux-like react-navigation immutable state. onEnter allows to decide where to go but it should not be re-run because app could be already in different state (screen). And yes, you may add simple autoruns to return back to login screen once auth flag is changed easily.\n\n@scriptfans and others\nIt is difficult and time consuming to create demo from scratch (like create loading/auth screen/main screen/logout/menu/etc, find needed icons, etc). If someone could share simple demo I could help to improve it to work with MobX. Feel free to submit PR or you could create own repo for this if you want to be maintainer.. It is interesting idea. But we can't dispose it when leave that scene - than observing will not happen. And now image several 'observe' Scenes and then could conflict each other or make infinite loop, etc... Need to think about it more. For now let's make some MobX demo but I really need help for this.. Could you make demo with simple Actions.SCENE calls from componentDidMount() for 'loading' scene ? After that I will replace it with mobx logic.. @keith527 Great, do you have English interface? I'm not sure I could understand it with Chineese.... Just finished some basic conversion of nice starter kit with auth example (without dynamic recipes retrieval from firebase) to RNRF v4: https://github.com/aksonov/react-native-starter-app\nSorry, Redux was replaced for Mobx for great simplicity...\nAny PR about new features demonstrated within that starter kit (on/success/failure transitions) is welcome.. @radha-bacancy Just check navigation state. Sorry, this component is just wrapper around ReactNavigation and uses TabBar provided by ReactNavigation. Could you check their github?. It is strange because RNRF just passes everything to react-navigation... I need to more concrete Example (modification of this repo Example?) and more react-navigation example that works - maybe some parameters were overriden. You may check Router.js and how it passes params to TabNavigator.. Please use v4, v3 is not supported. It depends from your parent scene. If it is modal - it will be bottom to top.. Duplicate of https://github.com/react-community/react-navigation/issues/1493. Duplicate of #2094 . See Example project. Have you tried back attribute?. Looks like it is the problem of React Navigation:\nhttps://github.com/react-community/react-navigation/issues/774\nIf you could find solution how to do 'replace'  correctly with react-navigation I could implement it with RNRF.. I have one idea - do Actions.pop and Actions.push for 'replace'. I will try to implement this.. OK, I will try for Example.. @compojoom Could you check latest master?. Have you tried 4.0.0-beta.12 ?. It would be a little bit strange to remove beta if react-navigation is still in beta, what do you think?\nI would like to remove beta once we will have one week without bugs. But how to deal with react-navigation bugs (like bugs with tab bar)\n\nOn 25 Jul 2017, at 11:19, Hagen H\u00fcbel notifications@github.com wrote:\nooops.... thx! don't know how it could work without the dot yesterday (or the dev was on del-key)^^\nHowever, can you tell pls the roadmap for 4.0.0 - non-beta?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub https://github.com/aksonov/react-native-router-flux/issues/2102#issuecomment-317679900, or mute the thread https://github.com/notifications/unsubscribe-auth/ABQpcc6ybHio2zuYBmgva3xyn0neCaZ_ks5sRbMNgaJpZM4OhNE1.\n\n\n. Should be fixed with 4.0.0-beta.14. I've just added ActionConst.POP_AND_PUSH action for this (previous REPLACE could be useful to replace root scene). It is how react-navigation works - you have to use Drawer on top level. Similar to https://github.com/react-community/react-navigation/issues/374 ?. Looks like {type: ActionConst.RESET} calls 'replace' now. I've just fixed it for latest master. @luco Have you tried type='replace' for tab bar?. @luco Could you reproduce it with latest Example? I used Actions.tabbar({type:'replace'}) with 4.0.0-beta.14 and tabbar replaces launch screen normally.. Remove type='reset' from scenes. Use it as parameter. Again, please reproduce it with current Example project.. Try type='replace'. What do you think if we will add overlay attribute for new container OverlayNavigator that will just simply render all children - similar to current LightboxNavigator (but lightboxnavigator displays initial + active only). Please check Example project from latest master. I think now RNRF allows very powerful techniques with overlay stacks (i.e. scene decomposition). Should be fixed with 4.0.0-beta.13, Example project contains alert on launch screen.. Check latest master, it has full redux support now (v3 didn't have it). Duplicate of #2092 ?. You can call static function onEnter of component or just pass it as prop to Scene. If it returns non-null value RNRF makes automatic transition to scene defined by success (failure otherwise). Sorry, no access to component methods - it just accesses to your navigation state, like navBar static methods.. Current state params are passed to onEnter. So you could try to pass callback, like\nActions.login({callback}) and then your onEnter will be executed with {callback} param.. I believe onEnter is way to go. Another way is to use type=replace instead of tabs, so your scenes will be unmounted.. Yes, just pass lazy prop \n\n26 \u0438\u044e\u043b\u044f 2017 \u0433., \u0432 12:00, Enrique Mart\u00edn Garc\u00eda notifications@github.com \u043d\u0430\u043f\u0438\u0441\u0430\u043b(\u0430):\ngood enough. Is there a way use lazy when using TabNavigator?\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub, or mute the thread.\n. Does it work with pure react-navigation? Is it similar to https://github.com/react-community/react-navigation/issues/374 ?. RNRF uses headerLeft as well. Maybe the reason is in missed drawerIcon? Is it required to pass to drawer? Looks like RNRF doesn't use it...\n25 \u0438\u044e\u043b\u044f 2017 \u0433., \u0432 18:52, bartaveld notifications@github.com \u043d\u0430\u043f\u0438\u0441\u0430\u043b(\u0430):\nIn react-navigation it is possible to add a headerleft to get the effect\nexport const HomeStack = StackNavigator ({\n    Home: {\n        screen: HomeScreen,\n        navigationOptions : ({ navigation }) => ({\n            title: 'Glasportaal',\n            headerTintColor: 'white',\n            headerStyle: {\n                backgroundColor: '#C62828',\n            },\n            headerTitleStyle: {\n                alignSelf: 'center',\n                marginRight: 56\n            },\n            headerLeft: \n navigation.navigate('DrawerOpen') }/>\n                        ,\n        })\n    }\nand adding it to my drawer stack\nexport const Drawer = DrawerNavigator ({\n    HomeScreen: {\n        screen: HomeStack,\n        navigationOptions : {\n            drawerLabel: 'Home',\n            drawerIcon: ({ tintColor }) => (\n            \n        ),\n        }\n    },\n    InformationScreen: {\n        screen : InformationStack,\n        navigationOptions : {\n            drawerLabel: 'Information',\n            drawerIcon: ({ tintColor }) => (\n            \n        ),\n        }\n    },\n    AccountScreen: {\n        screen : AccountStack,\n        navigationOptions : {\n            drawerLabel: 'Account',\n            drawerIcon: ({ tintColor }) => (\n            \n        ),\n        }\n    },\n    SettingsScreen: {\n        screen : SettingsStack,\n        navigationOptions : {\n            drawerLabel: 'Settings',\n            drawerIcon: ({ tintColor }) => (\n            \n        ),\n        }\n    }, LogoutScreen: {\n        screen : LogoutStack,\n        navigationOptions : {\n            drawerLabel: 'Logout',\n            drawerIcon: ({ tintColor }) => (\n            \n        ),\n        }\n    }\n},{\n    contentOptions:{\n        activeTintColor: '#FFB300',\n    },\n    drawerWidth: 250,\n    contentComponent: props => \n    \n\n\n\ndummyaccount@live.nl\n\n\n\n\n})\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub, or mute the thread.\n. I'm just thinking. Yes, try that. Also try to remove icon from pure react nav solution \n25 \u0438\u044e\u043b\u044f 2017 \u0433., \u0432 19:16, bartaveld notifications@github.com \u043d\u0430\u043f\u0438\u0441\u0430\u043b(\u0430):\nSo you are saying I should add a drawerIcon here aswell?\n\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub, or mute the thread.\n. Probably it is a bug, but it is difficult for me to find the reason. Please fork & modify Example project to demonstrate the issue.. Close due forked repo was not given.. v3 is not supported, sorry. Please try v4.. Could you fork & modify Example project to show the problem? Are you able to achieve your goal via pure react-navigation?. Closed due inactivity.. Just pass wrapBy={observer} for MobX. Not sure how to apply it to Redux, because Redux wrapper is different (connect(...)) for each component, so you have to wrap it within the component. . Just use clone for shared scenes.. Maybe you are using older version. Please check Example project from latest beta.14 - I definitely see FOCUS events:\n\n2017-07-26 13:34:41.387 [info][tid:main][RCTBatchedBridge.m:77] Initializing <RCTBatchedBridge: 0x6180001b0f40> (parent: <RCTBridge: 0x6000000db040>, executor: RCTJSCExecutor)\n2017-07-26 13:34:41.433 [warn][tid:com.facebook.react.JavaScript][RCTModuleData.mm:220] RCTBridge required dispatch_sync to load RCTDevSettings. This may lead to deadlocks\n2017-07-26 13:34:41.653 [info][tid:main][RCTRootView.m:295] Running application Example ({\n    initialProps =     {\n    };\n    rootTag = 1;\n})\n2017-07-26 13:34:41.657 [info][tid:com.facebook.react.JavaScript] Running application \"Example\" with appParams: {\"rootTag\":1,\"initialProps\":{}}. __DEV__ === true, development-level warning are ON, performance optimizations are OFF\n2017-07-26 13:34:41.741 [info][tid:com.facebook.react.JavaScript] Launch RENDER\n2017-07-26 13:34:49.138 [info][tid:com.facebook.react.JavaScript] 'ACTION:', { type: 'Navigation/NAVIGATE',\n  routeName: 'login',\n  params: \n   { tintColor: 'red',\n     cardStyle: { backgroundColor: 'white', shadowOpacity: 1, shadowRadius: 3 },\n     leftButtonTextStyle: { color: 'green' },\n     backButtonTextStyle: { color: 'red' },\n     initial: true,\n     hideNavBar: true,\n     init: true,\n     data: 'Custom data',\n     title: 'Custom title',\n     routeName: 'login' } }\n2017-07-26 13:34:49.139 [info][tid:com.facebook.react.JavaScript] 'ACTION:', { type: 'REACT_NATIVE_ROUTER_FLUX_BLUR', routeName: '' }\n2017-07-26 13:34:49.141 [info][tid:com.facebook.react.JavaScript] 'ACTION:', { type: 'REACT_NATIVE_ROUTER_FLUX_FOCUS',\n  routeName: 'loginModal',\n  params: \n   { tintColor: 'red',\n     cardStyle: { backgroundColor: 'white', shadowOpacity: 1, shadowRadius: 3 },\n     leftButtonTextStyle: { color: 'green' },\n     backButtonTextStyle: { color: 'red' },\n     initial: true,\n     hideNavBar: true,\n     init: true,\n     data: 'Custom data',\n     title: 'Login',\n     routeName: 'login',\n     leftTitle: 'Cancel',\n     onLeft: [Function] } }\n2017-07-26 13:34:49.156 [info][tid:com.facebook.react.JavaScript] Login RENDER\n2017-07-26 13:34:49.173 [info][tid:com.facebook.react.JavaScript] 'ACTION:', { type: 'Navigation/SET_PARAMS',\n  key: 'Init-id-1501068881684-14',\n  params: \n   { title: 'Login!',\n     rightTitle: 'rightTitle',\n     onRight: [Function: onRight] } }\n2017-07-26 13:34:49.174 [info][tid:com.facebook.react.JavaScript] 'ACTION:', { type: 'REACT_NATIVE_ROUTER_FLUX_BLUR', routeName: 'launch' }\n2017-07-26 13:34:49.175 [info][tid:com.facebook.react.JavaScript] 'ACTION:', { type: 'REACT_NATIVE_ROUTER_FLUX_FOCUS',\n  routeName: 'loginModal',\n  params: \n   { tintColor: 'red',\n     cardStyle: { backgroundColor: 'white', shadowOpacity: 1, shadowRadius: 3 },\n     leftButtonTextStyle: { color: [Getter/Setter] },\n     backButtonTextStyle: { color: 'red' },\n     initial: true,\n     hideNavBar: true,\n     init: true,\n     data: 'Custom data',\n     title: 'Login!',\n     routeName: 'login',\n     leftTitle: 'Cancel',\n     onLeft: [Function],\n     rightTitle: 'rightTitle',\n     onRight: [Function: onRight] } }\n2017-07-26 13:34:49.726 [info][tid:com.facebook.react.JavaScript] Login RENDER\n. @rasmniel Could you post link to sample repo with redux usage? I'm using MobX but will try to help if you provide the example. Probably I have to modify RNRF to work with external state provider.. @hellsan631 RNRF v4 manages navigation state by itself, like v3 version did. I will think how to work with external state, it could be good enhancement.. @rasmniel Thanks, will take a look. @hellsan631 It will work after this enhancement will be done.. @rasmniel Your example is very helpful. One difficult thing to implement is creation of initial state - reducer must know it at compile time, but Router is created later, runtime. Any ideas how to avoid it?. Probably I will restore old v3 syntax Actions.create(<Scene>...</Scene>) to create all actions BEFORE Router usage for this. Does it sound good?. @rasmniel Okey, please check https://github.com/aksonov/rnrfSample. Check latest master now.. It is not supported. Use \u2018on\u2019 (or onEnter) and success/failure instead\n\nOn 17 Nov 2017, at 05:54, Frang Peguero notifications@github.com wrote:\n@aksonov https://github.com/aksonov Thanks, there's only one thing I can not figure it out, selector in Scene is not reacting when state change, in v3 I use the state to control access to views, but now I update the state and selector don't even see the changes, what am I not seeing?\nexport default Actions.create(\n   {\n      console.log('selector', props) // <-- THIS NEVER PRINTS\n      return props.logged ? 'auth' : 'anon'\n    }}\n    tabs\n    unmountScenes\n    hideTabBar\n\n<Scene key=\"anon\" hideNavBar>\n  <Scene key=\"login\" component={login} />\n</Scene>\n<Scene key=\"auth\" hideNavBar>\n  <Scene key=\"home\" component={home} type='reset' initial />\n</Scene>\n\n\n)\nHow ca we make this in v4?\n\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub https://github.com/aksonov/react-native-router-flux/issues/2115#issuecomment-345145293, or mute the thread https://github.com/notifications/unsubscribe-auth/ABQpcf05NEQdysf_dQf3CeGazmFvyyOxks5s3RF2gaJpZM4Ojyd-.\n\n\n. Update rnrf too\n\n27 \u043d\u043e\u044f\u0431. 2017 \u0433., \u0432 11:07, RadiksMan notifications@github.com \u043d\u0430\u043f\u0438\u0441\u0430\u043b(\u0430):\nwhen i update test project (https://github.com/aksonov/rnrfSample) to \"react\": \"16.0.0-beta.5\",\n\"react-native\": \"0.49.5\",\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n. No, it is not related to this topic. Check forked redux sample https://github.com/aksonov/rnrfSample. No, it should work with latest master, please check. Need to adopt latest version then... It worked before. Yes, then deep linking is the reason... I don't know how deep linking should work for external state yet. PR is welcome.. English please.. What version? v4 is only supported now and it requires to have one, root container Scene as child for Router.. Please record animated gif. You may check also Example project that has hidden nav bar.. I see, but it is difficult to understand the reason. Do you see any white screen on Example project? Please fork & modify Example accordingly so I could look at source code.. Closed due inactivity. Btw, try to set headerMode='screen' when you are moving from hidden navbar to shown navbar to avoid any flickering (default iOS header transition). Router is expected to be top-level component - it should not depend from outer state. Anyway, please fork & modify Example project so I could see the problem. Closed due inactivity (didn't received forked Example to reproduce the problem). Yes, just define them as static. Just rename it to onLeft (no need to set it on Scene).. Could you please post your code for v3? For v4 you could pass custom reducer as shown in Example project and check events.. Could you try to set init prop ? . You may pass navBar property and render whatever you want for whole nav bar. Or you could pass left /right to render left/right Buttons . There is no such option. You may submit PR to support it, like passing right as array for buttons. But it is better just to put two button inside right. Actually state is changed immediately, after that scene will be re-rendered according to the new state. So you could just to use componentWilReceiveProps for this.. Try Actions.ROUTE_NAME({type: 'replace'}) where ROUTE_NAME is name of current route.. Closed because of inactivity.. Could you clarify? Does react-navigation support it?. Closed due inactivity. It is how react-navigation tabBar works. Have you tried to pass own tab bar and pass it as tabBarComponent ? . Nothing wrong, react-navigation just doesn't pass params to icons (ask them why?), that is why I've proposed to define your own tabbar.. It is just react-navigation tab bar: https://github.com/react-community/react-navigation/blob/master/docs/api/navigators/TabNavigator.md\nHave you tried showLabel prop ?. I will add it. You could use shorter syntax for now - navBar. Please reproduce it with Example project.. Closed due inactivity. Probably issue with react-navigation. Please check pure react-navigation examples and try to make transparent navbar there. If you are able to do it then send me the link.. Yes, I used this for navTransparent and it works well.. But I didn't tried for custom nav bar.. Then you must check pure react-navigation first. It has navigationOptions.header option for custom navbar (header).. tabBarVisible? Try to do it with React-Navigation. If it is possible, it could be easy done with RNRF.. Could you try pure react-navigation? If it has this issue, it is react-navigation bug, create ticket there.. @adarshTS It is unknown when it will be done for v4.. Have you looked at https://github.com/react-community/react-navigation/issues/716 ? . v4 uses built-in react-navigation drawer.. Try new overlay and contentComponent props (not documented, PR will be useful):\n<Scene overlay contentComponent=`CustomDrawer`>\n   <Scene>...</Scene>\n   <Scene>...</Scene>\n   <Scene>...</Scene>\n</Scene>\n\nWithin CustomDrawer you define your drawer. The question is how to call drawer open/close... We need to think about it, but try this first.. Duplicate of #2042. Please check latest master, it supports duration={0} for stack container (check Example project, 'Register' stack). Okey, I added path passing to react-navigation, but it doesn't work good. react-navigation router doesn't return any action for deep nodes, only for top level. Also it creates several pushes for some reason... You need to debug react-navigation code to make it work. Check PR above, you may open login popup using xcrun simctl openurl booted mychat://login/123, but it pushes two login screens for some reason. . Duplicate of #2129. RNRF just uses react-navigation TabBar. Check Example for this repository. You may check more Examples from react-navigation repo.\nWith latest master repo it should work well.. Set initial prop for second scene - check Example project\n\n30 \u0438\u044e\u043b\u044f 2017 \u0433., \u0432 12:02, Luciano Lima notifications@github.com \u043d\u0430\u043f\u0438\u0441\u0430\u043b(\u0430):\nVersion\nTell us which versions you are using:\nreact-native-router-flux v3.39.2\nreact-native v0.44.2\nExpected behaviour\nI have the following scenes:\nActions.create(\n    \n\n\n\n\n\n\n\n\n\n\n                    ...\n                \n\n\n\n\n);\nMy starts on main scene and I try to push tabbar scene from buttons press on mais scene.\nFirst button push and focus first tab and second button, second tab.\nBut I only make this works pushing tabbar action, not beauty and health.\nActual behaviour\nPush tabbar focused in one tab.\nSteps to reproduce\nI try Actions.beauty() and Actions.health(). Focus actions is dispatched but don't work.\nWhen I use Actions.tabbar() always go to first tab.\nHow I can push tabbar scene focused in second tab?\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub, or mute the thread.\n. Sorry only v4 is supported now\n30 \u0438\u044e\u043b\u044f 2017 \u0433., \u0432 12:02, Luciano Lima notifications@github.com \u043d\u0430\u043f\u0438\u0441\u0430\u043b(\u0430):\nVersion\nTell us which versions you are using:\nreact-native-router-flux v3.39.2\nreact-native v0.44.2\nExpected behaviour\nI have the following scenes:\nActions.create(\n    \n\n\n\n\n\n\n\n\n\n\n                    ...\n                \n\n\n\n\n);\nMy starts on main scene and I try to push tabbar scene from buttons press on mais scene.\nFirst button push and focus first tab and second button, second tab.\nBut I only make this works pushing tabbar action, not beauty and health.\nActual behaviour\nPush tabbar focused in one tab.\nSteps to reproduce\nI try Actions.beauty() and Actions.health(). Focus actions is dispatched but don't work.\nWhen I use Actions.tabbar() always go to first tab.\nHow I can push tabbar scene focused in second tab?\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub, or mute the thread.\n. Hm, it seems wrong design decision - have you tried to put drawer lower, it should not be parent of unauthenticated screen.. I can't help with external code, only with Example project from this repo. Check latest master, I moved drawer . @warrenronsiek So problem with 'reset' type, but not with drawer, right? Probably you have to use 'replace' instead, because reset clears stack entirely.. @warrenronsiek There were real issues with 'replace' because react-navigation doesn't have it and their 'reset' doesn't work well for deep nested containers. Finally I implement it by myself within RNRF, please check latest master, see #2189. Actions.drawerOpen. Looks like it is open issue for react-navigation: https://github.com/react-community/react-navigation/issues/780\n\nMaybe we could maintain own DrawerNavigator and include proposed PR into RNRF. Feel free to submit PR to include this functionality. Could you try latest master version?. I'm going to publish new version today (beta.15). Closing now, feel free to open if it will happen with beta.15. Please try to reproduce on Example project and give me a link.. Do you see the bug on iOS? I don't have android sdk.. I can't help here, I could work only with modified Example from this repository, not your projects.. Home is used to demonstrate 'pop and push' action - it cannot be used for initial scenes like TabView.. It is definitely configuration problem - you are calling screens from another navigation tree - so you will be switched to that tree (it is standard behaviour determined by react-navigation), so back action will return you to parent tree, not your screen. You could try to use clone scenes so they will be pushed from your current nav tree.. Please check latest master branch. If it still exists, try to reproduce on this repo Example project.\n\nOn 31 Jul 2017, at 12:28, Raj Suvariya notifications@github.com wrote:\nVersion\nTell us which versions you are using:\nreact-native-router-flux v4.0.0-beta.12\nreact-native v0.46.3\nExpected behavior\nWhen I press \"Add\" button I am calling Actions.pop() and Actions.refresh({data: this.state.mydata}). In this case, when the previous screen becomes visible onEnter callback should be executed.\nActual behavior\nWhen I press \"Add\" button I am calling Actions.pop() and Actions.refresh({data: this.state.mydata}). In this case, when the previous screen becomes visible onEnter callback is not being executed. It is being executed when I press back or Android hardware back button from second component.\nSteps to reproduce\nProject with two component\nAdd onEnter and onExit callbacks with console.log() in first component's scene inside router.\nAdd a button to open the second component from first component. (call Actions.openSecondComp())\nIn the second component add a button \"Add\" and on the press of this button call\n Actions.pop();\n Actions.refresh({data: \"Random String\"});\nCheck console logs. onEnter is not being executed.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub https://github.com/aksonov/react-native-router-flux/issues/2147, or mute the thread https://github.com/notifications/unsubscribe-auth/ABQpcT9KIISMxjfxQBTlBQrMO2NwutzSks5sTaxqgaJpZM4OoMW7.\n\n\n. So only onExit doesn't work properly, right?. Please check latest master, it should be fixed . How did you test it? Are you sure that you are using latest master (not just Example from master) ? . Example uses beta.15 not latest master, that is why I asked you to change RNRF inside Example to latest one.. Ok, please check latest now, I've modified dependencies directly to latest master. It seems to work (Example app):\nxcrun simctl openurl booted \"mychat://root/register\". Check breaking changes section, now containers cannot have 'component', but 'contentComponent' instead. And right, check Example project for more details. Please read 'breaking changes' carefully:\nhttps://github.com/aksonov/react-native-router-flux/blob/master/docs/MIGRATION.md especially item about custom navigators and impossibility of children and component props together.\nDefaultRenderer concept is replaced with custom navigators from react-navigation. It is quite similar and more powerful:\nhttps://reactnavigation.org/docs/navigators/custom\nYou could check example of custom navigators within RNRF source code: LightingNavigator and OverlayNavigator\nYou have to do convertation step-by-step and create issues (if any) for smaller steps. Closing this ticket.\nAbout redux - v4 now fully supports redux (state is not 'read-only' like in v3), check #2115 and example repo provided there.. v4 (latest 4.0.0-beta.15) provides full redux support (v3 provided partial, 'read-only' support, it was not possible to provide external redux state). PR about new integration is welcome. For now check #2115 and rnrfSample repo provided there.. Feel free to upgrade RNRF's dependencies and submit PR.. Could you just upgrade dependencies to match latest mobx version, without peerDependencies?. Closed due inactivity. RNRF provides compiled (transplied to ES5) version within dist folder. Plugin is necessary only if you want to use source code directly, without transpiling.. It should be done automatically - RNRF package.json points to dist/index.js, not to src/index.js.\nI just removed that plugin from .babelrc for this repo's Example project and run it without any problem. Please check Example project from latest master.. I see \"main\": \"dist/index.js\", there. I've fixed package.json now for master. V4 is only supported now, sorry. Sorry, but I don't want to make installation more complex for non-mobx users.... . 1. Have you tried absolute layout, bottom:0  ?\n2. Use headerMode='screen' for different animation. 1. You can set global style for all scenes using getSceneStyle or cardStyle option, check Example.\n2. headerMode is option for react-navigation StackNavigator, read rn docs about it. You have to set it for container Scene. Closed due inactivity. Thanks, should be fixed now. Please check latest master (Example Login3 page contains popTo). Sorry, beta.28 is fully experimental and should not be used (some developers asked to publish to fix react-navigation 1.x issues)\n\nOn 7 May 2018, at 02:10, Dave Padovano notifications@github.com wrote:\nnvm ... beta.28 is missing from the repo release but was submitted to npm.\n\u2014\nYou are receiving this because you modified the open/close state.\nReply to this email directly, view it on GitHub https://github.com/aksonov/react-native-router-flux/issues/2163#issuecomment-386927398, or mute the thread https://github.com/notifications/unsubscribe-auth/ABQpccoVuUwCARCiPVutM-KROP8tCPyJks5tv5DxgaJpZM4OqWZ-.\n\n\n. Could you check pure react-navigation TabNavigator first? It is possible that the problem is there because RNRF uses react-navigation internally.. Use lazy prop for tabs Scene. >Could you check pure react-navigation TabNavigator first? It is possible that the problem is there because RNRF uses react-navigation internally.. Closed due inactivity. Fee free to reopen if any.. Try to run pure react-navigation tab bar demo and check. RNRF just uses react-navigation TabNavigator internally.. https://github.com/react-community/react-navigation/issues/1420. RNRF uses react-navigation internally.. @nakulkundaliya First I need to know where is the bug - within RNRF or within react-navigation. That is why I asked you to try react-navigation tabbar demos first. If the bug is there, create issue there please.. Then probably you have to set proper styling. Definitely react-navigation issue.... I don't have android. Probably set absolute layout for tabbar.. @mikaello @nakulkundaliya Good catch! Could you submit PR to make it default for both iOS and Android?. https://github.com/react-community/react-navigation/issues/253. I fixed it today, please check master\n\n2 \u0430\u0432\u0433. 2017 \u0433., \u0432 18:19, Lucas Veiga notifications@github.com \u043d\u0430\u043f\u0438\u0441\u0430\u043b(\u0430):\nI'm using mobx to set which screen should I pop to when I finish a process.\nOn iOS works flawlessly, but on Android I get this error.\nWhen I console what I'm passing to popTo it gives me the correct screen key.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub, or mute the thread.\n. Duplicate of #2163. Thank you for a PR! It seems there options are not only for Android, could you remove 'Android' word?. I don't have Android sdk, could you please check #2165 ? Does tabbar really doesn't show on Android?. Just check react-navigation TabBarBottom sources. It should be there otherwise tabs would not work in Example project ;). First try to pass react-navigation TabBarBottom as tabBarComponent. If it works then you could successfully customise it.. @mybolide Please reproduce with pure react-navigation to make sure that it is not their bug. Give me link for forked and modified Example or other demo with the issue.. How I can run your code above? Modify Redux example here https://github.com/rasmniel/rnrfSample and give me the link.. >For non-obvious bugs, please fork this component, modify Example project to reproduce your issue and include link here.. Closed due inactivity.. You should make root scene as modal like @luco suggested. Please check Example project, Login is implemented as modal. Unfortunately it is problem of react-navigation - it doesn't support different animations for stack children. I can't reproduce your problem (code looks fine), that is why I ask everybody to fork & modify this repo Example if they want their issues be resolved. Login modal from Example works fine as you can see. What do you mean? I said you twice that Example has modal Login screen (that slides from the bottom). The same I could tell you about your code - I don't see whole project and all details. For example you may use Actions.map and it could be even not generated (and be null) during compilation.. OMG. Not in app, but in one container. After more deep look your code has error - 'map' still child of 'normal' container (key=root), not modal (key='modal'). Looks like you don't understand what you are doing. Maybe this component is too complex for you...\n\nTry this:\n<Router>\n    <Scene key=\"modal\" modal>\n      <Scene key=\"root\" hideNavBar hideTabBar>\n        <Scene key=\"tabBar\" tabs>\n          <Scene key=\"listings\" component={Listings} title=\"Listings\" initial right={MapButton} />\n          <Scene key=\"favorites\" component={Favorites} title=\"Favorites\" />\n          <Scene key=\"messages\" component={Messages} title=\"Messages\" />\n          <Scene key=\"profile\" component={Profile} title=\"Profile\" />\n        </Scene>\n      </Scene>\n        <Scene key=\"map\" component={Map} title=\"Map\" hideNavBar />\n        <Scene key=\"listingDetail\" component={ListingDetail} title=\"Listing Detail\" clone />\n    </Scene>\n  </Router>\n. Few recent posts here are about JSX syntax and understanding of navigation containers, not about documentation.\nI added more information about modal.. modal within RNRF v4 is bottom-to-top navigation, nothing about Modal from React Native. For popups you could use lightbox as shown within Example project. With lightbox you could use Actions.pop without problems.. Could you reproduce this issue with Example project from this repo?. Fixed for latest master. Could you check iOS ?. It is not supported now, PR is welcome. Closing this ticket.. Could you please fork and modify this repo Example project to demonstrate it? Probably react-navigation doesn't support it out-of-box.. You should use 'modal' prop for container Scene for bottom to top animation. Oh I misunderstood then. It is really strange, could you check pure react-navigation demos on Android? RNRF uses react-navigation internally. Could you reproduce this issue on Example project from this repo?. Yes, it is a bug. Let's find where is it - within RNRF or within react-navigation.  Try this intro: https://reactnavigation.org/docs/intro/. Ops, looks like it is not bug but a \"feature\"  - I see the same behaviour at that tutorial for Android!. https://github.com/react-community/react-navigation/issues/1400. It is default android behaviour, closing the ticket.. Sorry, it is not supported (probably you could look does react-navigation support react-native-web or not). Please check pure react-navigation first. RNRF just creates react-navigation structures and pass state to it.. Stated what? About react navigation usage? Please fork & modify Example or create own project so I could reproduce issue. I can't work with code snippets or English wordings to reproduce issues.. I don't understand. RNRF is wrapper around react-navigation, so first I need to determine where the error is.. And I need reproducible iOS project. Example of 'good' issue that I solved:\nhttps://github.com/aksonov/react-native-router-flux/issues/2115. Have you created issue there? I guess you could use Actions.refresh to refresh screen if necessary. Closing this ticket for now. @shukerullah Could you clarify? Could you check Example project, its tab bar has only one nav bar.. Yes, check Example project. Check Example project and Login modal popup. Use lightboxfor it - check Example, Error popup. But probably it is only for one screen. Unfortunately no animationStyle for v4 - ask react-navigation team to add that feature.... Please check latest master, it should work better now. If you check Example, you will find that scenes has back option to render backButton - otherwise drawer icon will be rendered.. It should not be triggered if screen is still at the stack. Check pure react-navigation demos and docs, it is normal behaviour.. Duplicated of #2012 . @avorochenko It seems to be a bug with PropTypes. Please use navigator={scenes} for now. Could you check Example project? It uses tintColor (red) . Oh, I see now, Example tabbar has Right button and it is black.. Please check latest master. I didn't touch navTransparent and drawUnderNavBar, navTrasparent works fine on my app with latest master and I don't know anything about drawUnderNavBar. reset fully clears stack, please try to use 'replace' instead or ActionsConsts.POP_AND_PUSH.. PR is welcome.. @alexwasner Please send me link to repo, it is difficult to say something. @alexwasner Looks like it happens because react-navigation doesn't have normal 'replace' - i.e. push & pop previous scene. I implement 'replace' with their 'reset' action but it is not real 'replace'. \nNow I implemented it as PUSH & POP_PREVIOUS, check now. \nP.S. If you use react-navigation navigate it will not do replace, because it is not supported.. Should be fixed within latest master. Looks like react-navigation issue: https://github.com/react-community/react-navigation/issues/88\nCould you please test pure react-navigation tabbar demo?. Closed due inactivity. Feel free to reopen.. Please check latest beta.17, it should work.. Looks like it is bug of react-navigation for complex structures like we have for Example project. Will fix it by processing 'DrawerClose' by RNRF. Could you check latest master?. Check 4.0.0-beta.18 - now you can access your component instance via Actions.refs.SCENE_NAME. Please check latest master, it should be fixed. Set link to direct master with commit ID for package.json like\n\"react-native-router-flux\": \"github:aksonov/react-native-router-flux#92f055e52d11e0ff8c38bd5f1a5100bc927d5242\",\n. @lazyhoneyant Use lazy option. Will add it to docs. Component will NOT be unmounted after switching - it is how tabbar works.. Have you tried to put Scene tabs inside Scene tabs?\n\nOn 8 Aug 2017, at 09:28, Nakul Kundaliya notifications@github.com wrote:\nHow can I show tab inside the tab?\nExample\n https://user-images.githubusercontent.com/15937642/29060865-2bcdfe64-7c39-11e7-9b6a-52d275e8b547.png\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub https://github.com/aksonov/react-native-router-flux/issues/2199, or mute the thread https://github.com/notifications/unsubscribe-auth/ABQpcSdmrLtbDBy_zg6GGqNxZ-zLl9L0ks5sWA4xgaJpZM4OwWNU.\n\n\n. And what do you see? Probably react-navigation doesn't support it, please try pure react-navigation solution first.. @nakulkundaliya If react-navigation doesn't support it then yes. But it seems to support it with some lazy and gestureEnabled tweaking: \nhttps://github.com/react-community/react-navigation/issues/662. It looks react-navigation issue. Please check pure react-navigation demos - once you set header to null within navigationOptions it will hide all navbars. Related:\nhttps://github.com/react-community/react-navigation/issues/88. Closed because it is not supported right now. Feel free to submit PR or open issue for react-navigation about this.. I don't understand - why MyReduxForm is children of Scene ?. No, I don't have any. Please give me link to repo so I can reproduce that issue. Please also check pure react-navigation, maybe the issue is from there:\nhttps://github.com/react-community/react-navigation/issues/1589. Closed due inactivity. It is incorrect usage createScenes should not be function, just list all your scenes directly. Check Example project. Just check latest beta.31 and Example project. \n@AlbertoIHP As I mentioned it is incorrect usage, you must list scenes directly.. Check breaking changes section. Could you try to pass right ? renderRightButton is too long, probably we need to update docs to use right.. > For non-obvious bugs, please fork this component, modify Example project to reproduce your issue and include link here.. Closed because of lack of details. Upgrading to major version of any product could have breaking changes. Have you ever read docs? How I can help you if you even didn't share any code. \n\n10 \u0430\u0432\u0433. 2017 \u0433., \u0432 18:07, Philippe David notifications@github.com \u043d\u0430\u043f\u0438\u0441\u0430\u043b(\u0430):\nI would love to give more details but I don't more to share ... ?\nI just start the app after an upgrade to 0.47 and it crashes without telling me what's up.\n\u2014\nYou are receiving this because you modified the open/close state.\nReply to this email directly, view it on GitHub, or mute the thread.\n. Pass navBar property as your custom navbar to Router - it will be propagated to all scenes.. No. It is about react native programming - just pass your component to navBar, have you tried it? Check react-navigation docs (because RNRF uses react-navigation) about customisation of nav bar (i.e.header within navigationOptions). I can't reproduce it. Just replaced rightTitle within Login.js of Example project:\nActions.refresh({\n      title: 'Login!',\n      //rightTitle: 'rightTitle',\n      rightButtonImage: require('../images/menu_burger.png'),\n      onRight: () => {},\n    });\nand saw image normally.\n\nPlease fork & modify Example project to demonstrate issue.. Thanks! Please check latest master. Could you try to use init instead? Currently back is used to add back button, not to hide it. Need to improve docs.. Just add init prop to Scene, it is not documented yet.. More correct way is not to hide 'back', but use 'replace' action instead. Actually back now is kind of workaround of react-navigation bug where 'back' button is not properly determined.. Closing it for now.. Also I made key optional.. RNRF is a wrapper around react-navigation. Please check pure react-navigation TabNavigator demos with lazy enabled: https://github.com/react-community/react-navigation/blob/master/docs/api/navigators/TabNavigator.md. Closed due inactivity.. Sorry, it is not supported behaviour.. Yes, it is how routing works. You don't render scenes within Router, but declare them.. Probably you have to read more about navigation in general.. Sorry, it is about your app architecture, not about RNRF.. @fxhereng  @MakeAndyBetter is right, it should work (not everybody needs such 'feature' so I can't make it 'built-in' into RNRF).. As far as I know when you are using Actions.create, no render happens (correct me if I'm wrong) - you just create appropriated navigator. Rendering will happen only when you are use that navigator within render (what Router does). So I don't see any bad effect on app performance.. Okey, v3 didn't have real two-way support of redux - i.e. you were able just to subscribe to nav events. If it is your way you don't need to change anything - check Example project, it works in the same way as with v3.\nv4 introduced real two-way support of redux - it means you can change nav state from your reducers now. But to calculate initial navigation state for reducer, it is necessary to process all your scenes first - that is why you need to declare reducers/store after scene processing.. Closing it in favour to #2220. Have you tried backTitle ?. It is not supported yet, but probably I could add it.. Sorry, don't have any ETA. PR is welcome - you need to optionally wrap scenes with View and overlayComponent\n\n15 \u0430\u0432\u0433. 2017 \u0433., \u0432 10:52, Gaurav Harchwani notifications@github.com \u043d\u0430\u043f\u0438\u0441\u0430\u043b(\u0430):\n@aksonov would be grateful if you can do it ASAP as i am using this library on an production APP. Can you please give me any leads on ETA on when you will be able to do it?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n. Please check PR #2281 . You must use 'Overlay' custom navigator (check Example project) that will display ALL its children. This way you could add 'backgroundImage' component easily (check Tab #1 overlay from Example). @oakis Sorry, but it doesn't have nothing with RNRF, but with React Native or React Navigation (used by RNRF) - try pure react-navigation demos and if it works well (I doubt so), reopen this issue.. It is not selected but focused for v4, please check. Duplicate of https://github.com/facebook/react-native/issues/13240 \nI will convert Example project screens to classes.. Have you tried lazy prop to set for tabs scene?. Use onEnter, onExit props for Scene (or as static functions of component class).\nlazy is documented here: https://github.com/aksonov/react-native-router-flux/blob/master/docs/API.md. @abeltje1 I don't understand your issue. Check Example project, tab2_2 - it has panHandlers disabled but you still can open drawer by swipe.. It is not supported yet: https://github.com/react-community/react-navigation/issues/390. Added to docs, closing.. It could be react-navigation issue. I can't reproduce it with iOS 10 emulator.. Anyway, I've just added some changes, could you check latest master?. Duplicate of https://github.com/react-community/react-navigation/issues/135 ?. I reproduced this issue - the problem was in refresh within componentDidMount of Login. It seems anti-pattern and should not be used - onEnter should be used instead.. Sorry, I was able to reproduce it only with Login. Maybe I have bad mouse (Apple one) that doesn't allow to click faster. Anyway, please check related issue, it seems problem of react-navigation.. I suggest that you will try suggested PR first. If it helps, you can just use forked react-navigation until they will merge it.. Please check latest master now.. @gtauniverse Read my comment above. No. We are waiting until new 1.0 API will be stabilized . Sorry, but your desired behaviour (common navbar) it is not correct behaviour (atleast for iOS). iOS UI guides requires own navbar for each tab:\nhttp://www.ios-blog.co.uk/tutorials/ios-custom-ui-series-tabbar-navbar/\n\nRNRF does wrapping scene with navbar internally to achieve that.. Check latest master, set wrap={false} if you don't want to wrap tabs to own navbar. You can use popTo('A'), check Example project. Oh, I see now. Then yes, you could try pop & replace.. Duplicate of https://github.com/react-community/react-navigation/issues/297 ?. use cardStyle for Router. I will add support of sceneStyle (now only getSceneStyle as function is supported). Sorry, but it is open source and free software. If you can improve something - submit PR. \nP. S. I don't see you in either list of contributors or sponsors or bakers. So bad!. Sorry, but tab1 is not accessible from register page (i.e. by using pop), right?. Maybe it happens because A is wrapped internally (if tab is not stack), so A is stack container. Try add underscore prefix to refer inner original component, i.e. \u2018_A\u2019\n\nOn 15 Aug 2017, at 18:32, Daniel Dimitrov notifications@github.com wrote:\n@aksonov https://github.com/aksonov - here is my use case\nA -> B -> C\nC is an edit screen that has a delete option. If I use delete I can't pop to scene B as the object it was showing previously is no longer existing. That's why I want to popTo('A'), but since A is a tab RNRF hangs.\nIf I popTo something that is before scene A, that is not a tab - then it works... Do I need to structure my project differently? The scenes I'm sending the user from the tab are not tabs on their own... They have their own navigation etc...\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub https://github.com/aksonov/react-native-router-flux/issues/2234#issuecomment-322518465, or mute the thread https://github.com/notifications/unsubscribe-auth/ABQpcSzwBV5igAF6zYjVHEpxfHSKDf-Nks5sYcgxgaJpZM4O23tN.\n\n\n. to the key.. No. Tabs are wrapped automatically, so you don't need to define key with underscore. Anyway, it is not your use case. popTo(name) works in pretty simple way - just do pop until current scene will be not name . After first pop current scene will be tab2_1 (popTo('tab2_1') works). After that you have to 'navigate' not to 'pop' to switch to tab1. Closing this ticket.. Nice. Thanks. Login popTo works as expected, without any hanging for latest master, so your issue was invalid. . Probably I have to wait for a week or two before answering like react-navigation team does and not try to help everybody with their problems.. Try to modify RNRF's navigationStore.reset to your one and check.. I meant fork & edit source code of RNRF (and rebuild dist folder). I can add it but I need clear demo first to understand issue. Please fork & modify Example project.. 'replace' does this trick, right? Do you want also animation? It seems out of scope for this component (and a bit unusual) - why just don't use Actions.pop ? I've tried also method you mentioned (react-navigation one) and I don't see any animation for it as well.. Try to use https://facebook.github.io/react-native/docs/backhandler.html and check navigationState (Actions.state) from there.. Please switch Example to use latest master\n\n15 \u0430\u0432\u0433. 2017 \u0433., \u0432 11:21, Bhanwar Singh Rathore notifications@github.com \u043d\u0430\u043f\u0438\u0441\u0430\u043b(\u0430):\nHi Pavel,\nI'm unable to run \"Example\" project under react-native-router-flux repo.\nPlease see attached screen-grab.\nThanks,\nBhanwar\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub, or mute the thread.\n. Okey, I updated Example's package.json, check now.. Just use latest master for Example\n15 \u0430\u0432\u0433. 2017 \u0433., \u0432 12:54, Gaurav Harchwani notifications@github.com \u043d\u0430\u043f\u0438\u0441\u0430\u043b(\u0430):\n@rathorebs Plz attach the chrome debugger output. This error comes up when you miss\nkey props for particular scene.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub, or mute the thread.\n. @themakerman Check docs, probably you have to style title for that - titleStyle or headerTitleStyle. Can't reproduce that.\n```\nbash-3.2$ yarn\nyarn install v0.24.5\n[1/4] \ud83d\udd0d  Resolving packages...\n[2/4] \ud83d\ude9a  Fetching packages...\n[3/4] \ud83d\udd17  Linking dependencies...\n[4/4] \ud83d\udcc3  Building fresh packages...\nwarning Your current version of Yarn is out of date. The latest version is \"0.27.5\" while you're on \"0.24.5\".\n$ ./node_modules/.bin/opencollective postinstall\n\n *** Thank you for using react-native-router-flux! ***\n\nPlease consider donating to our open collective\n     to help us maintain this package.\nhttps://opencollective.com/react-native-router-flux/donate\n                ***\n\n\u2728  Done in 15.83s.\nbash-3.2$ yarn run build\nyarn run v0.24.5\n$ babel src -d dist --presets react-native-stage-0/decorator-support \nsrc/ActionConst.js -> dist/ActionConst.js\nsrc/Drawer.js -> dist/Drawer.js\nsrc/Lightbox.js -> dist/Lightbox.js\nsrc/LightboxNavigator.js -> dist/LightboxNavigator.js\nsrc/Modal.js -> dist/Modal.js\nsrc/NavBar.js -> dist/NavBar.js\nsrc/Reducer.js -> dist/Reducer.js\nsrc/Router.js -> dist/Router.js\nsrc/Scene.js -> dist/Scene.js\nsrc/Stack.js -> dist/Stack.js\nsrc/State.js -> dist/State.js\nsrc/Tabs.js -> dist/Tabs.js\nsrc/Util.js -> dist/Util.js\nsrc/index.js -> dist/index.js\nsrc/navigationStore.js -> dist/navigationStore.js\n\u2728  Done in 2.30s.\n```. bash-3.2$ node --version\nv7.10.0\nbash-3.2$ babel --version\n6.24.0 (babel-core 6.24.0)\n. v3 is not supported, sorry.. Try Actions.pop({refresh: DATA}). It is wrong approach - declare rightTitle and onRight as static function for your component. You could access to your component ref via Actions.refs.SCENE_NAME  #2195 . Yes, you are right\n\n16 \u0430\u0432\u0433. 2017 \u0433., \u0432 21:14, Daniel van der Merwe notifications@github.com \u043d\u0430\u043f\u0438\u0441\u0430\u043b(\u0430):\nOk, it would be useful if you also mentioned that this was a mistake in the example, not my mistake.\ne8c5a42#diff-32afed19f718c82f2588a4adaa45100e\n\u2014\nYou are receiving this because you modified the open/close state.\nReply to this email directly, view it on GitHub, or mute the thread.\n. Fork & modify Example project to demonstrate the issue. Just try to set custom navbar for some screen (like Register2).. Closed due inactivity.. It is not correct usage. success, failure should be name of scenes to navigate. And they should be defined within Scene definition.\n. Closed due inactivity. Try titleStyle. Added it to docs.. I don't know, maybe add flex:1 to style, but anyway it seems not good idea to include Router into ScrollView. Check #2218. Okey, fork and modify Example project to demonstrate the issue.. Closed due inactivity.. Check latest Example project with usage of Overlay - tab1 uses background defined by other scene (#2220 related). It is not a bug. Title style is for title style (!!!), not for whole navbar. Use navigationBarStyle for navbar styling.. use sceneStyle for Router. Thanks for the feedback, it is added to docs now:\nhttps://github.com/aksonov/react-native-router-flux/blob/master/docs/API.md. Check Example project for white background colour (for whole scene screen).  titleStyle must be used for textcolor of the header, as I said before. navigationBarStyle is style of nav bar (as I said already). > navigationBarStyle is style of nav bar (as I said already). Do you see white for Example? If so, probably you are using outdated RNRF version (Example uses latest). Yes, docs will be improved eventually (you may check commits during last week, for example). Feel free to submit PR to improve them, thanks!. Thanks, done, but please create PR next time.... Duplicate of #2063 ?. Also https://github.com/mobxjs/mobx-react/blob/master/README.md#faq could be helpful. I will wait for Example.. I need to see code. Please fork & modify Example to reproduce the issue.. Maybe you can post solution here, it could be useful for others.... All screens in nav stack must be mounted, it is by design for any navigation. You really need to rethink your architecture. I'd just catch exception for non-exist ID (i.e. render empty screen) and do 'double' pop after item removing.. Another option is to 'reset' whole stack to Lists instead of Actions.pop usage.. > As far as architecture, I'll probably rework it as you suggested. Instead of deleting the item immediately, I'll throw it into a queue and resolve the queue once I've reached the initial scene in the stack after pop()\n\nYes, it seems to be good idea - I think you could just try Actions.pop();Actions.pop();delete_item() or Actions.Lists({type:'reset'});delete_item(). Please always try to latest version before posting issues (now it is beta.18). @Paul-Todd It is anti-pattern because you are doing unnecessary 'refresh' (i.e. changing of nav state) when it is not needed. You may try new feature of beta.18 - using Actions.refs.SCENE_NAME to refer  to component instance (PR about new docs is welcome).. It is how tabbar works - it doesn't remount anything. Use Actions.refresh to update props.. Okey, it is about your app state management, not navigation.\nYou could try to use onEnter handler (as static function) for Photos screen to get photos for 'active' screen. Also you could (or even should) use Redux or Mobx to re-render photos once home is changed.. So it is not problem of RNRF.. No. It is how react-navigation works and how tabbar works. Why you can't use onEnter, onExit?. Btw, always try to use LATEST beta (or even master) before creating an issue.. Looks great!. Sorry, probably it is out of scope for RNRF - as I see underlying react-navigation doesn't support nested tabbars in good way (if you can implement it with pure react-navigation but cannot with RNRF - share your code then). I'd use react-native-tab-view for inner tabs.. Have you tried to use replace instead?. I don't see any issue to implement that using custom styles and navbar button images. Please specify the problem, this one is too generic (like 'is it possible to implement app like attached photo?' ). I guess you may just set two lines of <Text> as usual React component as return it fromrenderTitle prop.. I believe you must use renderTitle with 'left' align, not backTitle for your design. Anyway you could just use your own navbar. \nAnd it looks definitely not issue, but react-native programming question (for stackoverflow or other forums).. Duplicate of https://github.com/react-community/react-navigation/issues/1485. Will fix it with workaround found at https://github.com/react-community/react-navigation/issues/504. Tabbar is big breaking change for v4 unfortunately. Try to disable labels like shown in Example project: showLabel={false} for tabs container.. Try Actions.drawerOpen(). Sorry, it is impossible to say something without code. Please fork & modify Example to reproduce issue.. Sorry, can't help here. RNRF doesn't do any transition, it is job of react-navigation (for v4). So create issue at react-navigation github (but create pure react-navigation demo before). Make sure that you don't do any processing during device rotation.. No, it is not possible and it is anti-pattern (because unnecessary nav state change). Just try Actions.refs.SCENE_NAME to use your component instance from static onExit/onEnter (you can define onEnter/onExit as STATIC functions for your component). Actions.refs.SCENENAME\n\n22 \u0430\u0432\u0433. 2017 \u0433., \u0432 18:10, Dombi Soma notifications@github.com \u043d\u0430\u043f\u0438\u0441\u0430\u043b(\u0430):\n@aksonov And is there a way I can access the state of the component from onExit?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n. @todorone As workaround could you use hideNavBar for all tab children? . I've just added hideNavBar to all tabs for Example project and it works well. Could you reproduce the issue with Example project?\n\nFor general fix - sorry, I can't fix this 'bug' because hideNavBar is NOT 'inheritable' property (i.e. children should not inherit it from parent).. Use gesturesEnabled={false} or panHandlers={null}. Unfortunately v4 tabbar is breaking change (because it is based on react-navigation TabNavigator now). It looks like duplicate of https://github.com/react-community/react-navigation/issues/314, please check maxmcd's workaround from there. I think we could integrate it somehow into RNRF, need to think about it. PR is welcome.. Btw, you may use onEnter handler for each tab scene if you need to do some actions when tab is selected.. Closing this ticket because onEnter should be enough.. v4 has several breaking changes, so I cannot just copy typings from v3. I don't use Typescript, but feel free to submit PR. Probably some props are still missing, but you could take it as the base. Also you may find new more useful syntax for containers  - you could use Stack, Modal, Tabs, Lightbox instead of Scene for containers (check Example project).... Current Actions (navigationStore) is singleton for simplicity - i.e. one instance across ap..  It is not difficult to support multiple navigationStore instances by exporting also NavigationStore class from navigationStore.js and don't use Actions but app-defined classes for it. After that it is easy to modify Router.js to accept navigationStore as optional parameter or create new instance of NavigationStore class each time.\nPR is welcome. I don't have time to implement it right now and I would need some demo code anyway to work with.. Sorry, onEnter/onExit works only on 'component' scenes (I've just updated docs). PR is welcome for componentless scenes (but it could be not trivial, because this way RNRF has to call onEnter for many nested containers at once).\nYou could add first screen (i.e. 'loading..') and move your onEnter, success='authorized', failure='unauthorized' (RNRF doesn't have onSuccess/onFail) there.. Please list PR here to merge.. https://github.com/react-community/react-navigation/pull/1803 to fix #2144. https://github.com/cribspot/react-navigation/commit/02a12045ef50550fcec5187466cedd0cb206d259 to fix #2012 . Where is that PR?\n\n23 \u0430\u0432\u0433. 2017 \u0433., \u0432 21:52, Amurmurmur notifications@github.com \u043d\u0430\u043f\u0438\u0441\u0430\u043b(\u0430):\nI think one of the most important PRs is the one that fixes slow transitions on android.\nFor instance this issue: react-community/react-navigation#608\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub, or mute the thread.\n. @RWOverdijk Welcome to RNRF! I'm trying to merge all PRs if they are useful.. You must add 'hideNavBar' for 'tabs' Scene to hide upper navbar.. Duplicate of #2177. Feel free to add note. However you may add custom transitions with latest master - check Example with 'fade' transition for some screens.. Passing props to drawer is not supported (by react-navigation) - you are calling \"something\" so you must check component defined by \"something\", not drawer.. navigationOptions is react-navigation stuff, not RNRF. Please use proper API of RNRF if you want to use RNRF features (like props of scenes).. Just pass prop backAndroidHandler to Router with own handler of back. Many users of RNRF didn't want to exit app for back button for some reason, so it works in such way.. Do you have hardware IOS back button??. Okey, any idea how to implement Router/navigationStore without mobx ?. Mobx is removed now. Check Example project. <Overlay> and others are syntax 'sugar' for <Scene overlay/tags etc...>, you could use any tags instead of Scene - it is just placeholder. Docs could be missed, PRs are welcome - it is open source, check sources and improve the software.. Closed due #2288 (bug in more recent beta.19). set headerMode='screen' for container. Please check latest master. @sachithamadhupa Let's make sure that it fixes issue, could you check?. @davojan Thanks, check beta21. It doesn't seem to be related to RNRF - looks like you are trying to pass some cyclic structure as param, it is not allowed (by react-navigation), please use pure Javascript objects. Just don't pass cyclic references.. Where is RNRF Actions usage ?. Okey, as I see from stack trace error is thrown by react-navigation, not RNRF... Anyway could you reproduce this issue with Example project?. Have you tried Example project from this repo?. As I know it is not supported (by react-navigation and RNRF). You have to use mobx or redux for that.. Sorry, it is not about RNRF, but your app state management. Drawer contentComponent is usual react component, check mobx or redux docs about it.. Maybe it is possible to refresh state for drawer component, I will think about it.. I don't have any ETA for this. I have similar drawer too and it is not about react navigation - you definitely need to use mobx/redux for that (mobx is much easier, as for me). With mobx your drawer (with observer/observable usage) will be re-rendered automatically once you change profile :). Sorry, I will not do things more complex - just check #2094 example. Good job! I was thinking about removing mobx/redux dependency at all... What about passing optional 'setState' function to navigationStore (default React.Component.setState will be used)?. Ignore my last comment about setState - it will not work for navbar buttons. I still don't want to increase complexity for 90% of users (who doesn't care about internal mobx), could you found a way to   have both worlds - default (mobx) and customised (redux or anything else). I think it could be achieved with require usage (not import), what do you think?. Okey, could you add default state engine based on Component.setState? This way we could introduce\nbreaking change for mobx-users who use wrapBy (i.e. require to pass engine instead of current wrapBy) - i.e. option 3. - package state engines into separate modules\n. @rmevans9 Thanks! Looks interesting, code seems to be ok, unfortunately I was quite busy these days and will have vacation starting Sep, 20. Could you resolve conflicts? Also could you check how many times components are mount with redux/standard engine - issue #2382 ? Could it happen because of mobx?\n\n. It is not supported at this moment. You may fork and edit sources of NavBar or event react-navigation to achieve that.. #2283. It is first tab, what do you expect? It will be loaded because it is first.. lazy doesn't work for containers, only for scenes - check lazy docs for TabNavigator (react-navigation). . Deep linking is not supported yet. Check #2148. Duplicate of #2137. Yes, use Actions.refs.SCENE_NAME to refer to your component instance. @todorone, @Megamind2301  It could be good enhancement - ability to define non-static onEnter/onExit methods.. @luco it is not implemented yet, but it is not difficult to add, check sources (within createWrapper function), feel free to submit PR.. It will be more difficult for onLeft/onRight/onBack - you could just use Actions.refs.SCENE_NAME to access your component . You are right... Need to think how to implement it in better way... Thanks, but please also run npm run build to recompile ES5-sources too.. Really good news, finally we could release v4 without beta too, does anyone have time to write PR, it should not be difficult I guess...\n\nOn 8 Feb 2018, at 09:39, Todor1 notifications@github.com wrote:\nYoohooo!\nWe have latest React Navigation release with exciting blur/focus events system - react-navigation/react-navigation#3345 https://github.com/react-navigation/react-navigation/pull/3345\nNo more hacks and inconsistent onEnter/onExit behavior, we just need to adopt the new system to RNRF.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub https://github.com/aksonov/react-native-router-flux/issues/2298#issuecomment-364040172, or mute the thread https://github.com/notifications/unsubscribe-auth/ABQpcXkpsXs5iPrZbbziRMtfnecV336mks5tSrK4gaJpZM4PE5OG.\n\n\n. You can try to use Actions.refs.SCENE_NAME to access component instance. It is breaking change - you have to use 'modal' prop for such animation (as container prop). https://github.com/aksonov/react-native-router-flux/blob/master/docs/MIGRATION.md. Use headerMode='screen' prop.. You need to use headerMode='screen' for different animation.. back is used only to display back button. Try to use init prop not to display back button. Then it is not navBar, but overlay. Check Example project for overlay usage.. @mcabs3 is right, please disable RNRF navbar then. If you still have issue please try to reproduce it with Example project.. hide==disable. Try headerMode='screen' for container scene for different animation. I didn't test custom nav bars. Please fork and add it to Example project to demonstrate the issue.. Good job, thanks!. Looks like it is behaviour of react-navigation and it just re-renders whole view with losing focus. Probably you need to check react-navigation tabbar demos and try to reproduce the problem there (and create issue if any). It is about javascript programming... Static function doesn't have this, just props access from function params!. It could be good enhancement. Check navigationStore.refresh method sources - you may add optional key retrieving from data and given routeName.  PR is welcome. Closing due inactivity.. popTo now requires scene name, not container ('root' is container). tabs is container as well - popTo requires child only - like feedView in your example.. But I see problem in your case - you don't know what child will be.... Please try to reproduce it with Example project and latest version 4.0.0-beta.40. Feel free to open if the issue still exists. Please reproduce that error on Example project.. Closing because of no details are given. Feel free to reopen when you can describe problem in more detail.. Docs are updated, thanks to @mcabs3 . @zacharygcook, @mcabs3  Duplicate of #2094. Check my comment there, I have good news!. Cool!. @frankcary I believe you must use latest React Native, it is not RNRF issue. Try to google error first...\nhttps://stackoverflow.com/questions/44077830/undefined-is-not-an-object-evaluating-reactnative-backhandler-addeventlistene. Unfortunately it is not supported (by react-navigation), but it is possible to implement - just define reset action without react-navigation, PR is welcome.... Please be more specific, I don't understand anything. Currently only one Router is supported per app.. Just set <Tabs> or <Scene tabs> as root scene.. Please always try to use LATEST version before reporting... #2288. Just check API for v4: https://github.com/aksonov/react-native-router-flux/blob/master/docs/API.md\nYou don't need to know anything about react-navigation.. Duplicate of #2285 (check some answers there), documentation of it is in progress - mostly we need to copy it from v3 docs. Feel free to improve it as well.. Could you fix conflicts?. @mcabs3 Thanks! Could you please check mobx demo I've just prepared? Maybe you will find something new, your feedback is very important for me.. It is in separate repo (fork of react-native-starter-app):\nhttps://github.com/aksonov/react-native-starter-app\n. Anyway only built-in Drawer is supported at this moment.... Please try to reproduce it with Example project. Probably you are using Actions before it is created. Try to wrap it into function, like () => Actions.myScene(). Yes. Just pass wrapBy={observer} to Router and you don't need to wrap your scenes manually!. Why don't use onEnter?\n\n6 \u0441\u0435\u043d\u0442. 2017 \u0433., \u0432 17:20, Edgardo Ram\u00edrez notifications@github.com \u043d\u0430\u043f\u0438\u0441\u0430\u043b(\u0430):\n@Nautal I cannot see any difference using lazy\n@mcabs3 I want to know if there is a way to detect the tab event to compare if the content has not been loaded, then load the content because I'm using axios to get data from my API\n@pgonzalez-santiago Not yet u.u\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub, or mute the thread.\n. lazy must be defined for Tabs, not for scene, please carefully check docs.... Read docs carefully.. You have to use Tabs element or tabs param for 'jumping'. Should be fixed now, please update to latest master. It is not supported for v4, sorry.. Sorry, previous PR make conflicts, could you resolve it? Does Example work well with custom navbars? (If no, I should not merge but we need to fix bugs first). Also you have to always latest version before reporting.. Sorry, it is not supported yet.. For now, you can try onEnter handler.. backToInitial is supported now to reset stack for tab bar. Yes, 'react-navigation' reset action is very weird. Sorry I cannot merge because we had this change before. \n\nThe correct way would be to write own processing within reducer to fit both cases (reseting from nested scene to another scene AND @seratonik's one ) ...\nI have quite limited time now to do it, but it is already implemented for v3 version - you just need to convert it and put that logic to v4 Reducer. You have to move scenes into Router for this, or pass params as second argument for Actions.create. Each stack has own navBar. All tabs are wrapped within own navbar also. You may disable parent navbar by using hideNavBar or disable wrapping tabs by passing wrap={false} to Tabs scene.. It is not supported yet by react-navigation.. Interesting, now RNRF passes drawerLockMode to react-navigation correctly, but I don't see it works. I used 'locked-closed' but still can open drawer with the back gesture...\n  . Please try to reproduce it with Example project and latest version 4.0.0-beta.40. Feel free to open if the issue still exists. Sorry, but you are using react-navigation feature (static navigationOptions) and want to make it work within RNRF advanced functionality (like dynamic prop.title)? Please read docs and follow docs how to define custom navBar for RNRF.. It is not supported, sorry.. Not enough data. Reproduce it on example project.. @mcabs3 is right.. @AlmogRnD I don't see any issue here but app programming logic. Maybe you must add type='replace' to replace one route by another.. v3 is not supported anymore, sorry.. Only react-navigation provides NATIVE 60fps animations from available JS solutions. You may check how to implement custom animations by looking Example project.. It is not supported.. Sorry, it is not related to RNRF. Check RN docs. Merged, thanks.. You are right, BackHandler should be used, feel free to submit PR for docs.. v3 is not supported anymore. Duplicate of #2298. It is not RNRF issue. You may use Modal to disable background elements.. You should use BackHandler with v4.. Please try to reproduce it with Example project and latest version 4.0.0-beta.40. Feel free to open if the issue still exists. Please try to reproduce it with Example project and latest version 4.0.0-beta.40. Feel free to open if the issue still exists. I can't reproduce it with latest RNRF.. Please try to reproduce it with Example project and latest version 4.0.0-beta.40. Feel free to open if the issue still exists. Duplicate of https://github.com/aksonov/react-native-router-flux/issues/2115. It is possible but it is not fully 'redux' style. So with v4 you could do the same as with react-navigation - integrate your reducer with navigation reducer and pass own dispatch/state into RNRF.. You should refer to mentioned demo.. Cannot reproduce it on Example project. If you still have this issue, fork and modify Example project to demonstrate.. Looks like React Navigation issue (RNRF just sends actions to RN). Please check docs/examples, there are some breaking changes.. Please reproduce it with Example project\n\n14 \u0441\u0435\u043d\u0442. 2017 \u0433., \u0432 10:57, Almog Koren notifications@github.com \u043d\u0430\u043f\u0438\u0441\u0430\u043b(\u0430):\n@aksonov have you had a chance to look at this, pretty much a major issue?\n@jankarres if I understand you correctly what you're saying is that the issue is cased when the router loads components that then load internal components?\nFor example, I have a drawer\n\nThat loads CustomDrawer which loads another component NavMenue\n\n\n {this._validateLogout()}}/>\n            \nIs that correct?\nI tried what you suggested but then I get\nTypeError: _reactNativeRouterFlux.Actions.photos is not a function\nWhen I call Actions.photos\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n. @AlmogRnD you must reproduce issue with some github repo. Otherwise I cannot help, sorry. Also you need to make sure that it is NOT react-navigation issue.. Closed due inactivity. Looks like the issue not in RNRF (because it doesn't mount/render scenes at all, but calls react-navigation): react-navigation/react-navigation#476. Please send full stack here\nOn 13 Sep 2017, at 14:15, Jun Matsushita notifications@github.com wrote:\nVersion\nTell us which versions you are using:\nreact-native-router-flux v4.?.? master\nreact-native v0.?.? 0.44.0\nExpected behaviour\nExample runs correctly.\nActual behaviour\nGetting the following error.\naddComponentAsRefTo(...): Only a ReactOwner can have refs. You might be adding a ref to a component that was not created inside a component's render method, or you have multiple copies of React loaded\nSteps to reproduce\nFor non-obvious bugs, please fork this component, modify Example project to reproduce your issue and include link here.\nCheckout master\ncd Examples\nyarn\nreact-native run-android\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub https://github.com/aksonov/react-native-router-flux/issues/2384, or mute the thread https://github.com/notifications/unsubscribe-auth/ABQpcURA02llpTPa3Hx_wYPIF1IbgLzMks5sh7lSgaJpZM4PV84I.\n\n\n. I don\u2019t see RNRF here.\n\nOn 13 Sep 2017, at 14:25, Jun Matsushita notifications@github.com wrote:\nThe image version is probably easier to parse:\nhttps://user-images.githubusercontent.com/356097/30374941-f710c6ec-9886-11e7-9539-3791dd991c40.png\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub https://github.com/aksonov/react-native-router-flux/issues/2384#issuecomment-329138481, or mute the thread https://github.com/notifications/unsubscribe-auth/ABQpcYLji7-iXWZgP-wvY5D1jyEex51hks5sh7uxgaJpZM4PV84I.\n\n\n. Just used 'yarn' with Example project without any problem. Please try to reproduce it with Example project and latest version 4.0.0-beta.40. Feel free to open if the issue still exists. It is not supported. It is not right usage of RNRF. RNRF creates needs navigational structures inside Router component, so it should be top-level component - you can put all alerts inside as Overlay component - check Example for 'message bar' alerts.. Custom tabor should receive navigation prop with all needed data inside. Should work well with latest RNRF Example project.. It is not supported. Sorry, but I can't reproduce it. Just installed clean RNRF Example project and it works without problems.. Could you fork and modify Example project to reproduce this issue?. Please check Example project for custom nav bar. Please try to reproduce it with Example project and latest version 4.0.0-beta.40. Feel free to open if the issue still exists. Not RNRF related (report to react navigation repo). Please try to reproduce it with Example project and latest version 4.0.0-beta.40. Feel free to open if the issue still exists. Not supported. @Maxitk Please check latest master now.. Latest Example works fine with hardware back button. Closed due inactivity. Closed due inactivity. I don't use redux for our app, but mobx with wrapBy. Maybe it could be useful for MobX only. . Removed Redux from docs for wrapBy. Feel free to submit PR that allows easier Redux integration.. Thanks for the PR! Ops, it conflicts now after I merged your another PR, could you resolve?. @rmevans9 Just returned from vacation. Have you tried to solve \"Back and Refresh\"? Any other problems?. Looks great, Example works well, but my app doesn't work  - there is something wrong with onEnter/success/failure transitions. Probably setTimeout will help, will try to fix that.... @kesha-antonov Could you check how it works on your app?. @rmevans9 Just replace 'launch' scene with \n<Scene key=\"launch\" component={Launch} title=\"Launch\" initial on={() => console.log(\"ONENTER!\")} success='register' failure='customNavBar' />\nand you will see that onEnter/on is not executed at all.\n. @rmevans9 Yes, I found the same - onNavigationStateChange is not called initially. Probably we could call it from navigationStore.create, what do you think?\nP.S. Omg, got conflicts again now after deep-linking PR and updating Example to latest RN.. Maybe we could remove dist generated files at all, because auto-merge doesn't work with generated files.... Looks great! One more thing is to change package.json to point to src/ .... Oh, you removed Actions.currentScene and Actions.prevScene as well as double actions preventing.\nAnother issue that you are using navigator._navigation.state that is hidden property and could be changed by react-navigation without any notice. Why don't use own state of Router component for navigation state as well as currentScene/prevScene (i.e. update all them at once with Router.setState method?. It is different - own state management and it is not compatible with v2...\n\nOn 23 Jul 2018, at 14:10, Davis Z. Cabral notifications@github.com wrote:\nIt has been a while since this PR - but I would like to check about the state of this since we are moving into something similar with the migration to react-navigation@2.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n. Finally 4.0.0-beta.40 is released (based on react navigation 2.x), without mobx dependency.. I can't reproduce it with the latest version of RNRF, If you still see the issue, feel free to reopen and fork and modify Example project to demonstrate.. RNRF doesn't support it. Looks like something was wrong with LoginScreen definition. Not RNRF related.. Sorry, RNRF doesn't support this use case. Sorry, but it is not issue but the question for stackoverflow. You should disable back gesture and back button then OR use 'replace' action so tabbar will be first scene. . 'hideNavBar' is applied to stack container, not child screen (for v4). Please check latest master.. Just use custom navbar for v4.. Cool!. Looks like the issue not in RNRF (because it doesn't mount/render scenes at all):https://github.com/react-navigation/react-navigation/issues/476. Please read docs for v4 - you should not have both component and children defined. Your 'Dashboard' is considered as child, not container.. Do you mean wrongly typed Actions.AddEmployee()  ?. You tried another action staring with uppercase\n10 \u043e\u043a\u0442. 2017 \u0433., \u0432 19:18, Karan Wadhwa notifications@github.com \u043d\u0430\u043f\u0438\u0441\u0430\u043b(\u0430):\nAddEmployee is the component name while addEmployee is the key so Actions.addEmployee() should work but it doesnt.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n. Maybe you can try latest version, but anyway this component doesn't provide rendering, only easier JSX syntax to define routes. Rendering is done by react navigation. Please use replace instead.. I see this issue but it is how react navigation works (used by RNRF) - so first tab bar is display with initial tab_2 then it navigates to tab_3.. It is not supported right now, PR is welcome. . The component just uses 'ViewPropTypes.style'. I can't reproduce it with Example project (just added logging to tab 4)\n<Scene key=\"tab_4_1\" component={TabView} title=\"Tab #4\" hideNavBar icon={TabIcon}  onExit={()=>console.log('tab_4 exit')}/>\nand see 'tab_4 exit' clearly.. Example project works well.. Please check latest master now. Please check latest master and PR #2491 (I've just merged it). Unfortunately I'm working on ios app only.. @daviscabral Could you check this ticket? :). Right, I see this bug and PR is welcome.. Please try to reproduce it with Example project and latest version 4.0.0-beta.40. Feel free to open if the issue still exists. cc @daviscabral . @jasongrishkoff Could you check react navigation core examples?. Looks like you have more navbar global stylings defined. Please check Example project - it renders left button correctly. . Nice PR, could you add that new property to docs?. Could you give me a link?. Sorry, my fault. Thanks!. Sorry, dynamic declaration is not supported by RNRF. Have you tried to used navigationBarStyle mentioned in docs? You can pass it pass as prop to 'login' Scene. Sorry, it is not supported (by react navigation) - you have to pass it only for parent tabs container.. RNRF uses react-navigation for rendering. Please check beta.22 (it uses rn beta.13) and check pure react-navigation examples. If it doesn't work as expected, please create issue there.. Sorry, it is not supported.. Probably you have to use atleast two tabs for TabBar.. Sorry, it is not possible, probably you could try to use 'replace' action instead.. Please check Example project to check custom transitions.. Looks like better fix just to submit android images for back button image (if there is only difference in default images)? . Probably only because of icon. . Can you just check Example project with your PR? You will see no drawer button there after 'go to tabbar page', sorry, I can't merge and break this.\n\njust replace\n\"react-native-router-flux\": \"file:../\",\nto\n\"react-native-router-flux\": \"github:aksonov/react-native-router-flux#1364b111cff4fa218c9521e13a780e1228a6a708\",\nwithin Example/package.json to reproduce. Yes, it still has problems - just tap \"next screen for tab2_1\" and you will not see \"back\" nav button.. @onrige Please check latest master, I hope I fixed that issue and your code to Example/navigationStore. Feel free to reopen if you have any bugs.. It is open source project. I'm not using typescript, but feel free to add PR with typings and I will merge. As I know recently there were some PRs about that (beta.22). Duplicate of #2487. OverlayNavigator was added again, please fork & modify this repo's Example to demonstrate issue.. Sorry, I can't reproduce - just installed Example and it works well. Gist is not helpful here, just fork and modify this repo and give me the link. . I clearly see different transition for Example project If you still have issue with latest RNRF, please fork & modify Example project to demonstrate the issue. You may also check  #2628. It is default animation for android (bottom to top) for all containers. Please use custom animation like shown in Example to achieve right-to-left.. It is not supported. Use Actions.refresh to update data.. Please check latest master and PR #2491 (I've just merged it). Unfortunately I'm working on ios app only.. Duplicate of #2467 . Two drawers probably are not supported yet by react-navigation. Please reopen once react-navigation provides support for both right/left drawers. I don\u2019t know exact workaround. Maybe try to use react-native-drawer ?\n\nOn 23 Oct 2017, at 11:04, Parth Gandhi notifications@github.com wrote:\nCan you suggest me any kind of possible workaround or something for this?\n\u2014\nYou are receiving this because you modified the open/close state.\nReply to this email directly, view it on GitHub https://github.com/aksonov/react-native-router-flux/issues/2506#issuecomment-338594638, or mute the thread https://github.com/notifications/unsubscribe-auth/ABQpcfrFiP-3DbLJolGsFnQBczoWS5Gvks5svFasgaJpZM4P5RRh.\n\n\n. You are using react navigation API. Please use Actions.refresh or switch to react navigation.. Could you try to fork & modify Example project to demonstrate the issue?. You may check https://github.com/aksonov/react-native-starter-app or try to ask this question at stackoverflow. It is out of scope for this component. Use redux or mobx. hideNavBar dynamic changing is not yet supported, see #2492 . You could check https://github.com/aksonov/react-native-starter-app. Please reproduce the issue with Example project.. Hopefully random is not needed for latest version now. You may check Example app and its refresh calls - it works fine there with latest 4.0.5. Feel free to clone and modify example accordingly to demonstrate the issue.. Please try to reproduce it with Example project and latest version 4.0.0-beta.40. Feel free to open if the issue still exists. Please check #2628. As I understand componentWillMount is not re-called for pop() call (React lifecycle). It is not supported. You can access class Component by using Actions.refs.SCENE_NAME as stated in docs.. Please check latest master now. I fixed it in different way because you PR would break other functionality (like custom transition shortcuts like onLogin='loginScene'). @kesha-antonov Looks like your Router is not top-level and you are recalling it, probably with different params. I tried to reproduce your issue with Example provided by this component without success (from Login3 page). Please fork and modify Example as requested initially. . Now try to do the same with pure react-navigation and check results. RNRF doesn't do almost any rendering.. It looks very useful, could you submit PR?. Have you tried just to wrap it with setTimeout ?. @kesha-antonov It is interesting. We could easily modify our Reducer and process SET_PARAMS by RNRF (not to forward to RN). Could you try  @gaodeng receipt?. Sorry, don't have time. You may check Reducer.js and its code. For many actions it just forwards requests to navigationStore.router.getStateForAction. You may add own if else block for REFRESH action (and remove it from supportedActions map). Closed because it is not related to RNRF.. Done (3.42.0). Closed due inactivity (thanks @daviscabral for checking). Closed due inactivity. Sorry, it is not supported. Please check Example project - I checked hardware back and it works fine.. Looks like 0.28 was published before your changes. I\u2019ve just published 0.29, please check\n\nOn 26 Oct 2017, at 18:44, Ujwal Setlur notifications@github.com wrote:\n@daviscabral https://github.com/daviscabral it looks like react-native-experimental-navigation 0.28.0 uses React.PropTypes. That needs to be cleaned out as well. Bummer, so much cleanup work!\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub https://github.com/aksonov/react-native-router-flux/pull/2541#issuecomment-339727370, or mute the thread https://github.com/notifications/unsubscribe-auth/ABQpcWG-5EWnr0BItc0y6zP2VQ6kcaFYks5swLb2gaJpZM4QEb8W.\n\n\n. Does component fails now?\n\n26 \u043e\u043a\u0442. 2017 \u0433., \u0432 19:57, Ujwal Setlur notifications@github.com \u043d\u0430\u043f\u0438\u0441\u0430\u043b(\u0430):\n@aksonov there were duplicate require statements in two files. I have fixed that and raised a pull request: aksonov/react-native-experimental-navigation#32\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n. Done, published 0.29.1. @daviscabral Could you set 0.29.1 as react-native-experimental-navigation ?. Done, 3.43.0\nOn 27 Oct 2017, at 19:42, Ujwal Setlur notifications@github.com wrote:\n@daviscabral https://github.com/daviscabral @aksonov https://github.com/aksonov I just checked and 3.42.0 does not have this pull request. In DefaultReneder.js:\nimport React, {\n  PureComponent,\n  PropTypes,\n} from 'react';\nWe need a 3.43.0 or 3.42.1\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub https://github.com/aksonov/react-native-router-flux/pull/2541#issuecomment-340037944, or mute the thread https://github.com/notifications/unsubscribe-auth/ABQpcVv46E4oH1-FFc37WpmUh8oMlzPEks5swhYOgaJpZM4QEb8W.\n\n\n. Please insert your scenes as Router children, Actions.create  way is not supported yet by v4.. It is hard to say anything without the code. Check Example project - Actions calls are working fine there. Try to modify and reproduce.. Probably you should use Lightbox for this - atleast some other guys solved similar problems with lightbox.. I just checked Example, hardware back works well on Android.. It is not supported (by both RNRF and react-navigation). Please reproduce the issue with forked & modified Example project.. Could you reproduce the issue with forked & modified Example project?. Please try to reproduce it with Example project and latest version 4.0.0-beta.40. Feel free to open if the issue still exists. Please try to reproduce it with Example project and latest version 4.0.0-beta.40. Feel free to open if the issue still exists. Can't reproduce it with latest RNRF. Closed due inactivity. It is more question for stackoverflow, not for github. Anyway it could happen only in one case - Actions.key is called before actions are created.. Please reproduce this issue with Example project.. Closed because it is not related to RNRF - I can't reproduce it with Example project.. It is default behaviour of react-navigation.. Could you reproduce it with latest RNRF and forked Example project? This way I could look into the issue.. Closed due inactivity and absence of reproducible forked Example project.. Could you submit PR?\n\n30 \u043e\u043a\u0442. 2017 \u0433., \u0432 7:59, Daniel Dimitrov notifications@github.com \u043d\u0430\u043f\u0438\u0441\u0430\u043b(\u0430):\nI'm testing our app with bigger text set to maximum. As far as I can observe - the default behavior in iOS is to leave the NavBar as is and only increase the content of the app. That is not the case for RN-router-flux\nLeftbutton, rightbutton, title are all being increased which often leads to text overlapping.\nI'm proposing that we add the following to our text elements in the Navbar:\nallowFontScaling={false}\nthis way the text won't increase.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub, or mute the thread.\n. Closing this ticket for now.. Closed due inactivity.. Please reproduce the issue with Example project. Closing this ticket for now.. Please check pure react-navigation. I'm closing this until more details will appear (about RNRF code). Cannot reproduce it with Example project. Please demonstrate it with modified Example.. Try drawerLockMode prop. Check https://facebook.github.io/react-native/docs/drawerlayoutandroid.html#drawerlockmode for more details. Docs were updated.. Have you tried it on iOS?\nOn 4 Jan 2018, at 18:27, Anton Sivogrivov notifications@github.com wrote:\nAnd what about iOS?\n\u2014\nYou are receiving this because you modified the open/close state.\nReply to this email directly, view it on GitHub https://github.com/aksonov/react-native-router-flux/issues/2566#issuecomment-355345178, or mute the thread https://github.com/notifications/unsubscribe-auth/ABQpccytaRvGt-th63tXZQ0z8zcaOz7Dks5tHQoHgaJpZM4QMeke.\n\n\n. Cannot reproduce, sorry. Check Example project.. Tried with yarn, the same - everything works well.. Use onEnter static prop for this.. Payment will replace Profile but not Messages.. It means that component is still in stack - it is how navigation works. Use onExit static method for this.. I can't reproduce it with Example project. I added logging to TabView.js and see exactly 5 statements.. Looks like the issue not in RNRF (because it doesn't mount/render scenes at all):react-navigation/react-navigation#476. Please try to reproduce it with Example project and latest version 4.0.0-beta.40. Feel free to open if the issue still exists. Originally RNRF's Modal was created before current 'official'. If you are not satisfied, please just use official Modal for your use cases.. Please check Example project. @kesha-antonov thank you for the support.. Please update also yarn.lock, also react-navigation.beta.17 was published... Maybe we could use something like '*' to install latest beta automatically?. Not related to RNRF, sorry.. I can't reproduce it. Please change Example project to reproduce it. Closing it for now, feel free to re-open.. Unfortunately reset action is quite buggy because it uses underlying react-navigation API reset action and probably the bug is there (you may debug and find out what is wrong there). We really need to implement own reset action handling within our reducer.\nYou may want to change containers to 'lazy' tabs and switch to 'app' tab instead of 'reset' action.. Okey, check latest master and add type='reset' to  'app' scene. Actions.app should work. Don't use 'reset' - it is for root container only.. It is very good feature and nice to have but it requires a lot of time. If RN supports it you can use it with RNRF as well in the same way. Feel free to submit PR if you feel it could be done in more easier way.... Great https://github.com/fram-x/FluidTransitions could be used together with latest RNRF beta.40. v3 has very limited support right now and it seems you mixed v3/v4 syntax to tab bars. Thanks to @daviscabral, it works with latest RN, please ask him any questions. . It is not supported. Feel free to submit PR to support it.. Please try to reproduce it with Example project and latest version 4.0.0-beta.40. Feel free to open if the issue still exists. You should use this property for containers, not for child scenes. I just added it to Example project and see red 'back' image normally.. I can't reproduce it with latest RNRF and Example project.Just add data='wow' to tab scenes and you will see 'Tab data:' changed.. Please check react navigation, it could be their issue of react native \n\n5 \u043d\u043e\u044f\u0431. 2017 \u0433., \u0432 10:28, Kesha Antonov notifications@github.com \u043d\u0430\u043f\u0438\u0441\u0430\u043b(\u0430):\nHello!\nI have this setup:\n\n\n\n\n\n\n    ...\n\nIn signIn scene after log in I call Actions.tabbar({ type: ActionConst.RESET }) and after reset scenes I have these warnings.\nVersion\nTell us which versions you are using:\nreact-native-router-flux v4.0.0-beta-22 (master)\nreact-native v0.50-rc\nExpected behaviour\nGives warninings.\nActual behaviour\nNo warninings.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub, or mute the thread.\n. Closed because it is not related to RNRF.. Just use left={()=>null} to hide whole left/back button or just backTitle=' ' to make back button text invisible. Sorry, RNRF is just wrapper around react-navigation. Try to check pure react-navigation TabNavigator with lazy option.. I don't think it is supported. You can try to use Actions.refresh but I'm not sure it will save your scroll position.. Sorry, I don't have any idea. v3 uses react-native-navigation-experimental API (btw, it still works with latest RN) but v4 uses react-navigation that doesn't have this feature. Feel free to submit PR. Added navTransparent to register screen for Example project, don't see black border with latest RNRF/react-navigation. Closing the issue.. Could you resolve conflicts?. It is 'feature' to avoid double push for the same scene if user taps it several times. Try to add some random param to avoid that.... renderRightButton and other render params should be function. If bug still exists try to reproduce it with Example project from this repo.. Your JSX markup is invalid. Check Example project.. LGTM, good job! Could you also add your great use case/usage  to docs?. Cannot reproduce. Probably some old cache / react-navigation version exist within your node_modules / watchman memory / etc. static cannot work with this. Duplicate of #2413 . Check Example project. Also check #2115 for redux integration. It is not supported. v3 is not supported, sorry.. Modal should be not included within drawer but outer stack. Please check Example project. Duplicate of #2115. It is not yet supported, PR is welcome!. Yes, it will be OK. Another issue that popTo doesn't work now with latest beta as reported, could you check that?. Please try to reproduce it with Example project and latest version 4.0.0-beta.40. Feel free to open if the issue still exists. No details. It is not related to RNRF. It is really strange and looks like it is related to mobx. Maybe mobx 4 or mobx 5 will solve it.... Unfortunately it is really doesn't work well, so I removed it as well as mobx. Right, it is not supported from the box. @Blapi Please check custom 'Modal' animation from Example with usage screenInterpolator: CardStackStyleInterpolator.forFadeFromBottomAndroid. You may found other screen interpolators from react-navigation or you can build own one. Maybe you could improve docs after you will figure it out.. Also PR about passing this custom interpolators for 'horizontal' (v3 syntax) prop could be helpful.. Looks like it is limitation if react navigation library, so please request it there.\n7 \u0434\u0435\u043a. 2017 \u0433., \u0432 11:04, Todor1 notifications@github.com \u043d\u0430\u043f\u0438\u0441\u0430\u043b(\u0430):\n@Blapi\nThanks for the hint, I've also figured out it. I've also figured out that adding duration={0} as prop, we also disabling transition. But figure out how to control specific transition is really needed...\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n. @Blapi Great, could you submit PR to docs about it? Also it could be good to generate own transitionConfig automatically by our component (if it is not defined for the root) and return custom animations defined by individual Scene like that switch. PR is welcome.  . Sorry, it is question for stackoverflow, not the issue. I'm not sure that it is supported by RNRF.. Glad to hear, maybe you can post PR to docs how to implement that, it could be very useful.. Sorry, I don't see that it is supported by RNRF and react-navigation built-in tabbar. But you may define own custom tabbar for this.. You really need to check Example project first.. @wodCZ Sorry about overriding, could you re-submit this PR again?. Please try to reproduce it with Example project and latest version 4.0.0-beta.40. Feel free to open if the issue still exists. You may check state of whole navigation tree and you will see DrawerOpen, DrawerClose keys there. Closed due inactivity. Use left={null}. Have you checked Example? I see all actions within reducer there. Also have you tried sample from #2115? . Closing, you should really check #2115.. It is not supported, PR is welcome. Solution is to use custom navbar.. Should be fixed within latest RNRF. Please check latest beta.27, now you can define onEnter, onExit methods as your react component methods.. Probably you are right, PR is welcome.. Please try to reproduce it with Example project and latest version 4.0.0-beta.40. Feel free to open if the issue still exists. Please reproduce the issue with Example project.. Please try to reproduce it with Example project and latest version 4.0.0-beta.40. Feel free to open if the issue still exists. Please check Example project with Drawer.. Probably yes, it is not possible with RNRF. Sorry, it is question not issue and must be posted at stackoverflow. This error usually means that actions are not generated yet but you are using them already. Sorry, it is how built-in react navigation drawer works now. Maybe you could you latest version. If the bug is still there, create the issue within react-navigation github repo.. Strange, RNRF just passes routing to react navigation, so it could be react navigation issue. Please check core examples and re-open issue if it works fine there.. Answered there. Closing.. Your code looks very strange [ <Router>..] (url) ?? Please fork and modify Example to reproduce the issue. Closing for now.. It is how tab bar works within react navigation (used internally by RNRF). @AlmogRnD Try drawerLockMode prop. Check https://facebook.github.io/react-native/docs/drawerlayoutandroid.html#drawerlockmode for more details. Docs were updated.. Please check latest beta.27, now you can define onEnter, onExit methods as your react component methods.. @Blapi Could you please check this android issue?. Please try to reproduce it with Example project and latest version 4.0.0-beta.40. Feel free to open if the issue still exists. Use tab container and then define inner 'tab' components. For those components you may add onEnter, onExit methods.. You may use custom drawer as written above. RNRF uses react navigation internally, so you can pass almost all react navigation props as your scene props. As I see now built-in RNav drawer doesn't support other 'modes'... The only way now is to use Actions.refs.SCREEN_NAME . Sorry, it is not issue but the question, use stackoverflow for this.. Lack of details, closing.. It is not yet supported, PR is welcome!. Duplicate of #2621. You should really check react navigation component and create issue there (if any), because RNRF is just useful wrapper.. @amitava82 It is how react navigation for tabs works.. @Blapi could you look on this android issue? . @Blapi thank you for help!. As you can see most issues here are not issues, but questions - you may redirect them to stackoverflow and answer there with getting all benefits. Also I can make you collaborator to deal with it if you wish.. Done. Please be careful with PR merging - the code should be reviewed and tested before. Try to pass function instead of value.. Closed due inactivity. Sorry, it is not RNRF question - just add footer or bottom for your scenes...\nMaybe you could use overlay to set global footer/bottom. Anyway, it is not issue but question for StackOverflow.. Now you can use onEnter/onExit method within your react component for tabs.. @Blapi Could you please check this android issue?. @asciifaceman Check example. It should just work with default (built-in) handler.. Just check Example project. Reducer is to demonstrate redux integration. Btw, I'm talking about is about exit app with hardware back button.. renderTitle should be a function\n8 \u0434\u0435\u043a. 2017 \u0433., \u0432 18:11, gopikrishna notifications@github.com \u043d\u0430\u043f\u0438\u0441\u0430\u043b(\u0430):\nYes, i gave the Component like am sending screen shots as reference\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n. It works as expected for me for latest RNRF (iOS). Can't verify on android, but anyway RNRF just calls react navigation TabNavigator.\n\n\n. Sorry, I can't help here, maybe it is question for stackoverflow.. Looks great!. Please check react navigation core examples. RNRF internally uses react navigation, so the issue could be there.. You need to use hideNavBar to the root.. @Blapi could you look on this android issue? . Not related to RNRF. Closed due inactivity. navTransparent should be defined for container scene. I can't reproduce. Just added navTransparent to <Stack key='register' within Example project and see transparent navbar without problems.. It looks not related to RNRF, but your drawer menu component - I don't see white flash for Example project.. Closed due inactivity. Unfortunately it is how react navigation works. Closing it.. Check latest master, I locked rn version\n\n19 \u0434\u0435\u043a. 2017 \u0433., \u0432 17:37, Ariel Falduto notifications@github.com \u043d\u0430\u043f\u0438\u0441\u0430\u043b(\u0430):\nAny update?\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub, or mute the thread.\n. It was breaking change for latest RNav beta.22. Should be fixed with latest RNRF beta.26 . You must use latest version of RNRF\nOn 15 Jun 2018, at 21:00, Michael Stelly notifications@github.com wrote:\nI'm not sure what changed between January and now, but this issue arose again. Running the latest repo example with \"react-native-router-flux\": \"4.0.0-beta.26\" and \"react-navigation\": \"1.5.8\". From the main screen select \"Go to Tabbar Page\". The app crashes with the error listed in the title. I didn't know if I should have created a new issue or simply extend this one. I chose the latter, obviously.\n\u2014\nYou are receiving this because you modified the open/close state.\nReply to this email directly, view it on GitHub, or mute the thread.\n. Sorry for the delay, we were working on upgrade RNRF to latest React Navigation (2.x). If you still want to have this functionality, please apply new PR for new version (beta.40). You need to write own processing of this action within Reducer.js, because now react navigation is used and it is buggy - works only for root sub scenes \n22 \u0434\u0435\u043a. 2017 \u0433., \u0432 9:37, ANUSHEEL SINGH notifications@github.com \u043d\u0430\u043f\u0438\u0441\u0430\u043b(\u0430):\nCan someone guide how this issue can be solved? Would love to contribute\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub, or mute the thread.\n. Closing it for now. PR is welcome.. @gitsuraj Please share your code. It is better to modify Example accordingly to demonstrate the issue.. Closing it, feel free to reopen after providing an Example. I've totally re-worked 'replace' action, so it should work now for arbitrary nodes, including stacks. I'm not sure why we need 'reset' now.. Check latest beta.26. I don't understand the issue. Please check Example project and its tabbar. Stackoverlow question. Probably it is about proper tabBarStyle. Should be fixed now, thanks! https://github.com/aksonov/react-native-router-flux/commit/7c9b2d1a30444ad4bd8259e3a1d9e0b4c60fd950. Please check latest master - I've just added onEnter/onExit class instance method support.. RNRF uses react-navigation. Please check react-navigation core examples.. Sorry, I can't help here - RNRF doesn't need to be destroyed, all should be done automatically by RN, maybe you could ask at stackoverflow.. It is not supported, PR is welcome.. @aelallam Could you check Example project?. I can't reproduce it with Example, closing for now.. I can't reproduce it with example project.. Please reproduce the issue with Example project (i.e. fork and change the code). Please try to reproduce it with Example project and latest version 4.0.0-beta.40. Feel free to open if the issue still exists. Sorry, currently it is not supported.. It seems to be not related to RNRF - just installed Example project normally without any errors.. It is not supported at this moment, PR is welcome. Probably you could add custom transitions with usual stack container instead: #2628. Sorry, it is not intended behaviour to have several Routers.. Sorry, but it is not good practice to pass 'this', you should pass small serializable data. . It is not supported yet, PR is welcome.. Just tried it with Example and it works well. You are using container-like lightbox (that contains stack/etc) and passing data to containers is not supported for all types of actions (not only for lightbox), but PR is welcome.. Sorry, it is not supported yet (passing data via reset), PR is welcome. I can't reproduce. Just added navTransparent to register stack for Example project and see transparent navbar.. @jamesDZ Just installed Example from clean clone and then yarn and it works without any problem.. Sorry, can't help here, probably the question to stackoverflow. It looks like about proper styling. Have you tried Example project with custom styles?. Sorry, you should declare your scenes within one file, one structure - I see different Route.js, 'Homeroute.js' in your example.. As I see a screen already has update property after step 3, so it will not be updated after step 5 (the same property). Anyway it is question for stackoverflow, not issue for RNRF.. It is more question for stackoverflow, not github issue. You should check Example project. Usually it could be outer container-stack OR it could be 'clone' scene.. LGTM!. Please try to reproduce it with Example project and latest version 4.0.0-beta.40. Feel free to open if the issue still exists. I can approve it, but probably it is better to make component required for Scene and use other container types for containers - Tabs, Stack, Drawer, does it make sense?. Please try to reproduce it with Example project and latest version 4.0.0-beta.40. Feel free to open if the issue still exists. onRight can be used only with rightTitle and rightButtonImage. If you use renderRightButton, onRight is ignored for obvious reason. Just add your onPress within SettingsButton. Sorry, please ask questions at stackoverlflow, not here. It is for issues.. Great starter kit! Feel free to submit PR to add your link into our docs. Btw, check latest version that works with react navigation v2.x. Please try to reproduce it with Example project and latest version 4.0.0-beta.40. Feel free to open if the issue still exists. Please try to reproduce it with Example project and latest version 4.0.0-beta.40. Feel free to open if the issue still exists. @mounlion prefix is not correct at all, please check deep linking examples . Please try to reproduce it with Example project and latest version 4.0.0-beta.40. Feel free to open if the issue still exists. It is not issue for github. Use setTimeout for this.. Please try to reproduce it with Example project and latest version 4.0.0-beta.40. Feel free to open if the issue still exists. Duplicate of #2576. @Blapi Published 0.28, could you check?. Looks like we need to revert related commits...\nOn 6 Feb 2018, at 11:10, Facundo Acosta notifications@github.com wrote:\nHad the same bug on 4.0.0-beta.28 when using Actions.replace('screen'). Downgrading to 4.0.0-beta.27 fixed it but the last version is broken. @kesha-antonov https://github.com/kesha-antonov\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub https://github.com/aksonov/react-native-router-flux/issues/2799#issuecomment-363374407, or mute the thread https://github.com/notifications/unsubscribe-auth/ABQpcR1pD95PlcroPWXydMm95p5vhl36ks5tSCUcgaJpZM4RfI38.\n\n\n. Sorry, it is not supported.. Please try to reproduce it with Example project and latest version 4.0.0-beta.40. Feel free to open if the issue still exists. Lack of details. jumpToIndex now is obsolete for react navigation v2.x.... Closed due inactivity. Please try to reproduce it with Example project and latest version 4.0.0-beta.40. Feel free to open if the issue still exists. Please try to reproduce it with Example project and latest version 4.0.0-beta.40. Feel free to open if the issue still exists. Duplicate of #2309. It is the same ;) It is just syntax sugar for better readability.. Please check Example project and its 'reducer' param for redux integration. Yes. Not supported, sorry. Agree, feel free to submit PR!. onEnter/onExit params are equivalent of Switch (i.e. control of flow). We may restore Switch if it is really needed (feel free to submit PR). Please try to reproduce it with Example project and latest version 4.0.0-beta.40. Feel free to open if the issue still exists. Please try to reproduce it with Example project and latest version 4.0.0-beta.40. Feel free to open if the issue still exists. Please try to reproduce it with Example project and latest version 4.0.0-beta.40. Feel free to open if the issue still exists. Check Example project. Check Example project for more details. Lack of information. Please try to reproduce it with Example project and latest version 4.0.0-beta.40. Feel free to open if the issue still exists. Please try to reproduce it with Example project and latest version 4.0.0-beta.40. Feel free to open if the issue still exists. Please try to reproduce it with Example project and latest version 4.0.0-beta.40. Feel free to open if the issue still exists. You really should check react navigation docs about this - RNRF just passes params to Drawer from react navigation. lazy should work for v4. Could you please confirm that 4.0.0.beta.31 has lazy working?. Closed due inactivity. Please try to reproduce it with Example project and latest version 4.0.0-beta.40. Feel free to open if the issue still exists. Could someone change Example accordingly and reproduce this issue with latest version (4.0.0-beta.42) ?. I've just updated ReduxExample for full Redux integration using official react navigation guide (https://reactnavigation.org/docs/en/redux-integration.html), please use version 4.0.1. Could you check conflicts?. Please try to reproduce it with Example project and latest version 4.0.0-beta.40. Feel free to open if the issue still exists. Please try to reproduce it with Example project and latest version 4.0.0-beta.40. Feel free to open if the issue still exists\nFor Android please ask @daviscabral . Please try to reproduce it with Example project and latest version 4.0.0-beta.40. Feel free to open if the issue still exists. Please try to reproduce it with Example project and latest version 4.0.0-beta.40. Feel free to open if the issue still exists. Trying to make RNRF work with latest react-navigation... Any suggestions?. It is because 1.x react-navigation introduced breaking changes, for external state management (so not only redux is affected). 2.x introducing more breaking changes.. Please try to reproduce it with Example project and latest version 4.0.0-beta.40. Feel free to open if the issue still exists. Please raise this issue within react-navigation github, because RNRF is wrapper around react-navigation. @rudyryk Yes, react-navigation doesn't provide it yet.. PR are welcome, we can do any header we want with RNRF!. https://medium.com/appandflow/react-native-scrollview-animated-header-10a18cb9469e\nClosing it because no RNRF changes are needed to implement custom nav bars. @EvianZhow Could you submit PR?. Please try to reproduce it with Example project and latest version 4.0.0-beta.40. Feel free to open if the issue still exists. Please try to reproduce it with Example project and latest version 4.0.0-beta.40. Feel free to open if the issue still exists\nIf it is still actual, please ask @daviscabral because he works with Android. Sorry, it looks like a question for stackoverflow, not issue for github... @NN01010101 is right.\nPlease try to reproduce it with Example project and latest version 4.0.0-beta.40. Feel free to open if the issue still exists. You have to use redux/mobx or use navigation state & Actions.refresh inside static function. Please try to reproduce it with Example project and latest version 4.0.0-beta.40. Feel free to open if the issue still exists. Please try to reproduce it with Example project and latest version 4.0.0-beta.40. Feel free to open if the issue still exists. Please try to reproduce it with Example project and latest version 4.0.0-beta.40. Feel free to open if the issue still exists. Please try to reproduce it with Example project and latest version 4.0.0-beta.40. Feel free to open if the issue still exists\nClosed due inactivity. @Blapi Feel free to close inactive tickets, thanks. Please try to reproduce it with Example project and latest version 4.0.0-beta.40. Feel free to open if the issue still exists. Unfortunately newer react navigation versions completely change outer state integration stuff: https://reactnavigation.org/docs/redux-integration.html \nPR is welcome but I doubt we can avoid any breaking changes to support newer react navigation version.... There are more breaking changes coming:\nhttps://github.com/react-navigation/react-navigation/pull/3392\n. @marcosmartinez7 I'm working on new RNRF version that will work with v2 views. For v1, I will try to adopt current RNRF by adding empty addListener (if it would work).. It would be great if you could make RNRF work with v1. I can't add where I have to add 'addListener'. Ok, please check latest master and beta.30. Current error is following (Example project) - addListener is missed:\n\nP.S. I've added addListener to navigationStore but it seems not to be enough.... RNRF 4.0.0-beta.40 uses latest react-navigation now (2.x). Please try to reproduce it with Example project and latest version 4.0.0-beta.40. Feel free to open if the issue still exists. Closed due inactivity. You may also check Example project with Modal usage. Custom navbar is solution, @rstims is correct. It is not a bug, but feature - first scene is already part of the stack. So you name of stack/drawer, not name of first scene. You may try to use tabs with hideTabBar so all your scenes will not be destroyed. Please try to reproduce it with Example project and latest version 4.0.0-beta.40. Feel free to open if the issue still exists. Please try to reproduce it with Example project and latest version 4.0.0-beta.40. Feel free to open if the issue still exists. I see. It is almost impossible to support such project alone, during only free time. I don't understand the issue. Check Example project that uses Lightbox and Modal . Dynamic scenes are not supported.. Please try to reproduce it with Example project and latest version 4.0.0-beta.40. Feel free to open if the issue still exists. Duplicate #2851. Please try to reproduce it with Example project and latest version 4.0.0-beta.40. Feel free to open if the issue still exists. Please try to reproduce it with Example project and latest version 4.0.0-beta.40. Feel free to open if the issue still exists. Please try to reproduce it with Example project and latest version 4.0.0-beta.40. Feel free to open if the issue still exists. Lack of information. Should be fixed now. Does it work for RN 0.53? \n\nOn 19 Mar 2018, at 01:16, Almog Koren notifications@github.com wrote:\nAnyone have any news regarding this, we really can't launch without this\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub https://github.com/aksonov/react-native-router-flux/issues/2923#issuecomment-374069816, or mute the thread https://github.com/notifications/unsubscribe-auth/ABQpcRBYHbrYUz_7yseQ5TulHdKaloZzks5tfvjFgaJpZM4SiDed.\n\n\n. So what PR I must merge to make it work? \n\nOn 19 Mar 2018, at 08:31, Almog Koren notifications@github.com wrote:\n@aksonov https://github.com/aksonov no I tested on 0.53 same issue, the version which it was fine was 0.51 where on 0.54 had to upgrade due to testing\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub https://github.com/aksonov/react-native-router-flux/issues/2923#issuecomment-374123105, or mute the thread https://github.com/notifications/unsubscribe-auth/ABQpcQCxNnDTf-qfExyccZ7bM71cLhEVks5tf16-gaJpZM4SiDed.\n\n\n. The problem is addListener error because of breaking changes, please check other github issue...\n\nOn 19 Mar 2018, at 08:37, Almog Koren notifications@github.com wrote:\nThe following PR react-navigation/react-navigation#3650 https://github.com/react-navigation/react-navigation/pull/3650\nfrom react-navigation, I think it was already merged so you just need to upgrade react-navigation to 1.5.1\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub https://github.com/aksonov/react-native-router-flux/issues/2923#issuecomment-374124253, or mute the thread https://github.com/notifications/unsubscribe-auth/ABQpcQ_3Vis6WPBP5JS0HbynKR8txW5Oks5tf2BPgaJpZM4SiDed.\n\n\n. Check #2893 and feel free to fix it.\nNow I'm working on RNRF v5 to work with upcoming 2.0 react navigation (yeah, it introduces many NEW breaking changes again). With v5 RNRF will depend only from navigational views, not from react-navigation routers/navigators/listeners/etc, so such situation should not happen again.... Yes, you have to set width/height, closing this issue. Please try to reproduce it with Example project and latest version 4.0.0-beta.40. Feel free to open if the issue still exists. You may still try to apply different sceneStyle to individual component.\n. I guess @arnsa is right. Please try to reproduce it with Example project and latest version 4.0.0-beta.40. Feel free to open if the issue still exists. Please try to reproduce it with Example project and latest version 4.0.0-beta.40. Feel free to open if the issue still exists. Sorry for the delay. We were working on React Navigation 2.x upgrade, your demo looks great, I would be happy to apply this PR for the new version (4.0.0-beta.40). Sorry, it is not supported. Sure!\n\nOn 9 Aug 2018, at 09:14, Charles C. notifications@github.com wrote:\n@aksonov If I can get something together would you accept a PR for other directions? No promises, but I have it working in a project and might be able to abstract it to RNRF\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n. Please try to reproduce it with Example project and latest version 4.0.0-beta.40. Feel free to open if the issue still exists. Please try to reproduce it with Example project and latest version 4.0.0-beta.40. Feel free to open if the issue still exists. You are right, it was migration change, sorry.. Please try to reproduce it with Example project and latest version 4.0.0-beta.40. Feel free to open if the issue still exists\n\nTo 'reset' stack you can use type='replace' for your Tab, so user cannot go back.. Please try to reproduce it with Example project and latest version 4.0.0-beta.40. Feel free to open if the issue still exists. Please try to reproduce it with Example project and latest version 4.0.0-beta.40. Feel free to open if the issue still exists. Sorry, it is not the bug, so try to get help from stackoverflow. Sorry, it is not supported. Please use beta.24. wrap drawer content into one child if it doesn't help. Please check 4.0.0-beta.41 and Example with backToInitial prop. Sorry for the delay. Closing this ticket because latest version (based on React Navigation 2.x) doesn't use mobx. Please check Example project and TabView.js with Actions.tab_5_1({ data: 'test!' }). Closing it now because beta.40 doesn't use mobx. Please try to reproduce it with Example project and latest version 4.0.0-beta.40. Feel free to open if the issue still exists. Please try to reproduce it with Example project and latest version 4.0.0-beta.40. Feel free to open if the issue still exists. It is how it was designed. Feel free to submit PR for improved/desired functionality. Sorry, it is not supported. Please make Modal as top level component. Feel free to re-open if it doesn't help. @asciifaceman is correct - reset works for top level views. Closing due inactivity. 4.0.0-beta.31 fixes it as well. @fatfatson is correct.. Does it require different setup process for end user who doesn't use mobx?. What about following idea - clone this repo and use react-native-router-mobx with peer mobx dependencies (who are using mobx in their projects) and use normal dependencies for this project (for everybody who don't use mobx) ?. Ok, let's try your way, could you update README ?. Closing because of correct solution, thanks @Koshukey . Sorry, it is not supported. Router should be top-level component without this.state usage, check Example and starter kit: https://github.com/aksonov/react-native-starter-app for more details. Sorry, it is not supported. Please give me more details and reopen the ticket if any. It may not called if you have stack inside your tab. Try to make drawer as part for modal, feel free to reopen if it doesn't help. Please check Example project for details how to define sceneStyle - you must define sceneStyle key for the scene style like you did for titleStyle, etc.\nconst sceneStyle = {\n  navigationBarStyle: {\n    height: 44\n  },\nsceneStyle: {\n   backgroundColor: 'red'\n},\n  titleStyle: {\n    fontSize: 16,\n    fontWeight: '100'\n  }\n}. Correct, it is not supported functionality, PR is welcome.. Settings height/width should help. Please try to reproduce it with Example project and latest version 4.0.0-beta.40. Feel free to open if the issue still exists. Not enough information. Please try to reproduce it with Example project and latest version 4.0.0-beta.40. Feel free to open if the issue still exists. Sorry for the delay, we were working hard on new version based on React Navigation 2.x, please check 4.0.0-beta.40 and if the bug exists, reapply this PR, thank you. on, success, failure is v4 equivalent for v3 switch. Please check https://github.com/aksonov/react-native-starter-app as the example. Please check latest Example and latest v4.0.0-beta.31. 4.0.0-beta.31 fixes it, please check latest Example. LGTM. Sorry, it is not supported. Instead define your logic inside renderBackButton function. Actions.pop should be called, you may write custom reducer to observe it.. Looks great, could you also update docs and regenerate navigationStore again?. Sorry for the delay, we were working hard on new version based on React Navigation 2.x, please check 4.0.0-beta.40 and if the bug exists, reapply this PR, thank you. I've just committed the fix to work with react-navigation v2.x. I can't reproduce. Please check Example project. Maybe you should not use { } inside Scene. All props you define as props will be passed to your Scene component. Also you can define it inside your scenes.. Please check 4.0.0-beta.41 and Example with backToInitial prop. Answered. \nPlease use onEnter/onExit function together with Actions.refs.YOUR_CAMERA_SCENE to start/stop camera like this:\n<Router ...>\n     <Scene tabs>\n       <Scene />        // Scene1\n       <Scene key='QR' onEnter={()=>Actions.refs.QR.startCamera()} onExit={()=>Actions.refs.QR.stopCamera()} />        // Scene2\n     </Scene>\n   </Router>\nAnd your QR React Component should have startCamera and stopCamera methods.. Please try to reproduce it with Example project and latest version 4.0.0-beta.40 (and RN0.56). Feel free to open if the issue still exists. 4.0.0-beta.31 should be major upgrade and recommended version right now. Closed due inactivity.. It is not correct usage of reset - you are trying to make home only one scene of the app, but it is not true -drawer is top-level within your Example. Please try to reproduce it with Example project and latest version 4.0.0-beta.40. Feel free to open if the issue still exists. Please try to reproduce it with Example project and latest version 4.0.0-beta.40. Feel free to open if the issue still exists. Looks great!. Closed due inactivity. popN is not supported right now. PR is welcome.. Have you tried v3 branch with latest RN?\nhttps://github.com/aksonov/react-native-router-flux/pull/2853 \nThanks to @DavidPineda. Sorry, it is not supported. Please try to reproduce it with Example project and latest version 4.0.0-beta.40. Feel free to open if the issue still exists. It is not supported, PR is really welcome.\n. Sorry, it is not supported. Strange, I didn't received any email about that, sorry. will review now. RNRF doesn't give you access to the child components. You may check navigationState prop to get your navigation state.. Lack of details, closing. Please try to reproduce it with Example project and latest version 4.0.0-beta.40. Feel free to open if the issue still exists. Sorry, but Expo is not supported at this moment. Probably sometimes we will test it and support it (probably after migration to v2 react-navigation). Please try to reproduce it with Example project and latest version 4.0.0-beta.40. Feel free to open if the issue still exists. @alittletf You may check also Example project as well as starter pack https://github.com/aksonov/react-native-starter-app\nBasically good practice is to put everything in one place to see whole app logic. . It is not supported at this moment. Sorry, it is not supported at this moment.. Yes, please wrap all scenes inside the Drawer.. Looks like v4 doesn't support it. PR is welcome (it should not be difficult to filter by icon and tabContent). But I really suggest you to change your nav hierarchy - move away Home if it is not part of tabbar. . Closed due inactivity. Check Example project as well as starter app: https://github.com/aksonov/react-native-starter-app\nRedux integration is a little bit different for Redux.. You may check https://github.com/aksonov/react-native-starter-app for some authentication ideas. v4 supports on, success, failure props that allows to act like the state machine.. Probably navigation hierarchy is wrong. Please refer to Example project - you need to use LightboxNavigator for popups.. You may pass React component as header (i.e. smart header) that will listen for some redux/mobx events and changes the title.. It is not supported by RNRF. navigation.navigate is not RNRF API, have you tried Actions.firstStack or Actions.secondStack ? . Unfortunately it seems to be quite hard... I started and stuck here: https://github.com/react-navigation/react-navigation/issues/4481\nAs you can see react-navigation starts recommending to store state within their library only and will not support (?) external management of state with Redux, MobX, etc. (as well as RNRF), etc. starting next major version. I will think what I can do.. I found one easy and one complex way. First is to remove state management from RNRF, second is to build own navigators and use them instead of react-navigation ones, use only views from react-navigation. I'm working on first way while probably second way may be implemented at the future (or maybe not).\nFeel free to check my PR (Some links work, some not - login/lightbox/modal don't work yet). @daviscabral what do you think about my comments above and my PR? There are still a lot of things to to do, maybe you can help here (new tab navigator, our custom actions like popTo, etc)..... @daviscabral Could you clarify - \"make the project name a bit out of sync with it.\" ? RNRF name?\nYou may start from converting Modal/Overlay/Lightbox navigators and restore original Example demo, fix eslint errors or restore original actions like POP_TO, checking all other actions like RESET, REPLACE - they may not work..., etc.. @daviscabral Great! Also we can remove mobx now too to make RNRF more lightweight (everybody who are observing state/or currentScene will be able to pass own onNavigationState function). Please check latest 4.0.0-beta.40, it uses React Navigation v2.x now. It is not supported at this moment . Please check Example project, it passes props correctly, so there is something wrong with your scene setup.. Please try to reproduce it with Example project and latest version 4.0.0-beta.40. Feel free to open if the issue still exists. Not enough information, closing. Please try to reproduce it with Example project and latest version 4.0.0-beta.40. Feel free to open if the issue still exists. It is not supported at this moment. Please try to reproduce it with Example project and latest version 4.0.0-beta.40. Feel free to open if the issue still exists. Please try to reproduce it with Example project and latest version 4.0.0-beta.40. Feel free to open if the issue still exists. Please try to reproduce it with Example project and latest version 4.0.0-beta.40. Feel free to open if the issue still exists. Please try to reproduce it with Example project and latest version 4.0.0-beta.40. Feel free to open if the issue still exists. Interesting, how direct react navigation helped you to implement dynamic buttons? The same static header methods could be used with RNRF as well..\n\nOn 13 Oct 2018, at 06:36, Daniel Dimitrov notifications@github.com wrote:\nI gave up and switched to directly using react navigation.\n\u2014\nYou are receiving this because you modified the open/close state.\nReply to this email directly, view it on GitHub, or mute the thread.\n. Please try to reproduce it with Example project and latest version 4.0.0-beta.40. Feel free to open if the issue still exists. Please check latest beta.40, it should solve this issue. @AlexCatch is right, closing this ticket.\n\nYou may try to use clone attribute, but I didn't test it for Tabs (only for Stack). Latest version doesn't use mobx, closing it. Please try to reproduce it with Example project and latest version 4.0.0-beta.40. Feel free to open if the issue still exists. Something wrong with your node_modules/packager. Please check Example project. Not related to RNRF. Latest version no longer uses mobx, closing it.. Please try to reproduce it with Example project and latest version 4.0.0-beta.40. Feel free to open if the issue still exists. Sorry, Android maintainer is really wanted, I'm using iOS right now.. cc @daviscabral . @Symous have you tried latest version? Could you reproduce this issue with Example project?. It is not supported. Sorry, it is not correct usage of RNRF (i.e. different scenes for props.auth.success). You may check auth example for https://github.com/aksonov/react-native-starter-app (it could be outdated, though). Please check latest 4.0.0-beta.40 version. Syntax is the main difference as well as some additions (own custom navigators, actions popTo, better 'replace', onEnter/onExit, etc.). It is not supported, sorry. Duplicate of #3068 . Please check Example, it uses Lightbox with semi-transparent background. You need to use setTimeout to defer nav action. @jcoulaud is right, closing this issue.. Your solution is right. Yes, it is 'feature' - first Scene is already part of stack.. You may use Actions.pop({refresh: data}). Sorry for the delay, we were working hard on new version based on React Navigation 2.x, please check 4.0.0-beta.40 and if the bug exists, reapply this PR, thank you. Sorry, it is not supported. Latest version no longer uses mobx, closing it.. Please check latest 4.0.0-beta.40, Example Login->Login2->login3->popToRoot uses popTo function. Just check Example project that use it. With latest version you can see this for Example project:\n2018-08-08 16:44:08.796 [info][tid:com.facebook.react.JavaScript] 'reducer: ACTION:', { type: 'Navigation/DRAWER_CLOSED', key: 'id-1533739425368-12' }. Please check latest version based on react navigation 2.x - 4.0.0-beta.40, it should be solved. I don't understand, sorry. It is not supported. Please override needed parameters with new values.. Right, you should use EventListener and do proper actions there.. It is not supported right now, but you always can pass custom reducer to modify navigation state for new action.. Please check latest version based on react navigation 2.x - 4.0.0-beta.40. If it will not help, try to reproduce this issue with pure react navigation.. Sorry for the delay, we were working hard on new version based on React Navigation 2.x, please check 4.0.0-beta.40 and if the bug exists, reapply this PR, thank you. Duplicate of #2309 . It is interesting how many still use v3. react-navigation changes so rapidly and unpredictably so whole v4 was probably not good idea.... LGTM!. Please check latest version based on react navigation 2.x - 4.0.0-beta.40. Please check latest version based on react navigation 2.x - 4.0.0-beta.40. Actions.state contains all navigation state.. Have you tried it without export? I don't see any flashes for Example project, please check. Closed due inactivity, feel free to reopen it with recorded video for the issue with Example project.. Could you say name of plugin? There is a lot... @daviscabral I'm done for today. If you have time please fix custom actions, as well replace action, also I found missed labels for two tabs, etc. Btw, I introduced easier custom navigator implementation now - 'renderers', i.e. views for custom navigators, please check OverlayRenderer and LightboxRenderer.. Oh, also custom onNavigationStateChange handler.. @daviscabral Please check deep linking if you can, it may not work now... @daviscabral any ETA for REPLACE action?. No, I can\u2019t. Integrating it now into our app and didn\u2019t found any issues yet, will continue tomorrow. If it is ok I want to release it tomorrow as beta.33 if you agree\n\nOn 26 Jul 2018, at 18:19, Davis Z. Cabral notifications@github.com wrote:\nI believe there are still more things besides what is listed in the PR todo list - do you recall anything else @aksonov?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n. Oh, missed texts for two tabs within Example, do you know what it could be?\nOn 26 Jul 2018, at 18:34, Davis Z. Cabral notifications@github.com wrote:\nSure - good with that. I'll check about the missing action then.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n. @daviscabral Because reset was buggy and didn't work for sub-tree, feel free to remove it. I guess scenes.test.js should be disabled now because it works with internal state.... Btw, what about removing dist and use src? react-navigation doesn't do compilation now, right?. Yes, just found it. Don't worry, we will think about it later.. Let me know when I can merge\nOn 23 Jul 2018, at 10:49, Davis Z. Cabral notifications@github.com wrote:\nI did already - but that limited a bit the way it can be customized.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n. No rush, will merge tomorrow then \nOn 23 Jul 2018, at 22:31, Davis Z. Cabral notifications@github.com wrote:\nFeel free to merge it - I got a few other things to keep going and I'll need to postpone the rest of changes for later tonight or tomorrow morning.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n. Well done, merging!. Actions.state. Please check latest version based on react navigation 2.x - 4.0.0-beta.40. If the problem exist, reproduce it with react navigation examples and create the issue there (because RNRF uses react navigation). Closing it (indicatorStyle should be used). There is NO DefaultRenderer within v4, you have to use custom navigators from React Navigation . Do you have any plans for POP_TO ?. Please check latest version based on react navigation 2.x - 4.0.0-beta.40, it should hide Keyboard automatically now.. Note \"Maximum call stack size exceeded\" error. @daviscabral Could you give ETA?. Please check Example project, it has MessageBar that is very similar for your goals (i.e. global for all screens).. Please check latest version based on react navigation 2.x - 4.0.0-beta.40.  Android maintainer is really wanted, I'm using iOS right now.. @daviscabral Great. Hopefully I solved the non-trivial problem withpopTo and also restored reducer support, so please check beta.40 and let's close all issues now ;). So what is expected/actual  (RN0.55)?. Please check latest version based on react navigation 2.x. Thank you, closing it. @ibraheamkh Great answer, thanks! Closing this ticket. Please check latest beta.40. Please try to reproduce it with Example project and latest version 4.0.0-beta.40. Feel free to open if the issue still exists. Please reproduce it with Example project and latest version.. @muhamad-rizki Sorry, but it is not about RNRF, but generic React Native Linking setup. Please create test github repo where deep linking WORKS without RNRF, but doesn't work with RNRF.. https://facebook.github.io/react-native/docs/linking. Sorry, this component is wrapper around react navigation (i.e. adds own Router syntax and some syntax sugar). Feel free to check latest version (beta.40). If it still doesn't work, check react navigation demos and try reproduce the issue there.. Please check Example project and TabView.js with Actions.tab_5_1({ data: 'test!' }). v3 is not supported, sorry.. Check Example project and custom navbars there. Looks like you called dispatch before navigator is set. Anyway, I added needed condition, please check beta.42. Yes, it is probably a bug, I didn't checked Redux integration yet. Do you have any github repo with Redux & RNRF example to see the problem (that works with beta.31 but not with beta.42)? It would help. Agree \nOn 9 Aug 2018, at 12:38, Davis Z. Cabral notifications@github.com wrote:\nThinking about having 3 example folders instead of just one right now. \n1) The current one (call it Playground maybe? like react-navigation does);\n2) Redux integration;\n3) An example using Expo / create-react-native-app.\nAny objection about it?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n. It doesn\u2019t look like correct usage of redux. Reducers must be pure functions, you must use defaultReducer and usual navigate action to view2 to return new state.\n Actions calls are not pure functions and should not be used from reducers \nOn 9 Aug 2018, at 13:42, mobdim notifications@github.com wrote:\n@aksonov Yes, I created test repository\nIf call change a scene from componentWillMount() not work in beta.42, but work in beta.31.\nThis line.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n. I'm preparing Example now for redux.. @mobdim Have you tried setTimeout ?. Bad thing is to use non-pure function within reducers.\nAlso bad thing is to navigate away from component even when it is not mounted yet (that is why setTimeout is needed).\n\nAnyway, you helped me to find the bug, thanks! It is probably not related to your issue, I will release new version and very basic redux demo shortly.. beta.43/ReduxExample is out.. It seems to be removed from React Navigation 2.x. Should we return it back? ;)\nhttps://github.com/react-navigation/react-navigation/issues/4146. We are using our library on production, too pity that it doesn't work for you. You may create separate ticket for every issue you have with reproducible fork of Example project. For Android issues please ask @daviscabral . Btw, Actions.currentScene really could be inaccurate now (because RNRF no longer maintains own navigation state), I will try to fix it now. . @SourceCipher Could you create new issue for this problem? It seems hard to fix, onNavigationStateChange is called AFTER react components are mounted.. Could you clarify?\n\nOn 10 Aug 2018, at 17:11, Davis Z. Cabral notifications@github.com wrote:\nI am also strugling with the onNavigateStateChange life cycle. Any chance for us to implement a side life cycle instead of route state? So people can subscribe to it instead.\n\u2014\nYou are receiving this because you modified the open/close state.\nReply to this email directly, view it on GitHub, or mute the thread.\n. Any idea how? RNRF doesn\u2019t manage state anymore (maybe 5.0 release will do, but it is a lot of work).\n10 \u0430\u0432\u0433. 2018 \u0433., \u0432 17:48, Davis Z. Cabral notifications@github.com \u043d\u0430\u043f\u0438\u0441\u0430\u043b(\u0430):\nOf course. I meant about adding something like a onNavigateStateWillChange on our side - to allow some kind of preparation for the next component.\n\u2014\nYou are receiving this because you modified the open/close state.\nReply to this email directly, view it on GitHub https://github.com/aksonov/react-native-router-flux/issues/3163#issuecomment-412124267, or mute the thread https://github.com/notifications/unsubscribe-auth/ABQpcQkormZrBzFCNqdLq3aPMnR2tIqkks5uPas_gaJpZM4V0t53.\n\n\n. Users can use NavigationEvents freely already. . legacy attribute must be used to make old behavior. However I don't see tab bar, maybe @daviscabral could help. @daviscabral Could you try to fix legacy tabbar before new release?. Yes, it is supported already, just use Actions.popTo('mark'). It is out of scope for this component. You have to pass your custom reducer to manage state for proper action - you could do whatever you want there.. @SourceCipher Could you reproduce this issue with Example project? The main difference between current RNRF version and older is that currentScene is set AFTER component is mounted/rendered (because React Navigation does that). So for custom navbars you have to read currentScene from actual navigation.state (because it is passed before rendering), not Actions.currentScene. You may also check ReduxExample, how it renders 'current scene' (as name prop): https://github.com/aksonov/react-native-router-flux/blob/7d4d2880a11d5125ee698a044b31ae1fc4b1aee6/ReduxExample/src/home.js#L11. For mobx it is even easier (we are using it) - just create simple mobx store navStore and with one observable scene and setScene action, then pass onStateChange param to Router:\n<Router onStateChange={() => navStore.setScene(Actions.currentScene)}>...</Router>\nand then you can observe navStore from your components and use navStore.scene\n. Just do usual 'push', like Actions.productList({categoryId: 123}), you will have just two components in the stack.. For Redux integration, change ReduxExample. \"<\" button ? Sorry, github is for issues not for questions, please post the question to StackOverflow. No info. Please don't create such tickets.. Closed because of inactivity. Please create new issue for 4.x version if the issue still exists. @daviscabral  Just verified that it works (latest master, github:aksonv/react-native-router-flux#master) with addition of legacy attribute to Tabs. But I don't see tab bar anymore, is it intended?\n. Duplicate of #3163. @daviscabral Could you fix tabbar for legacy before releasing of new version?. @mog3n You have to use latest master and legacy param for tabs scene. But now it works without tabbar.... @danferd I can't reproduce it. Make sure you removed node_modules before RNRF upgrade. It is very possible to latest react navigation may not support old react native version. Try to upgrade to latest 0.56.0 or 0.55.4 (I'm using 0.55.4). Check Example project as well. \nTry to simplify your Router to one Scene and check. After that add more scenes one by one.. Could we preserve old API?\n\nOn 15 Sep 2018, at 07:30, Davis Z. Cabral notifications@github.com wrote:\nWith 4.0.2 - you will have to provide a key to pop to have it refreshing.\nActions.pop({ refresh: { data: 'Data after pop', title: 'title after pop' }, key: null });\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub, or mute the thread.\n. So why we need to provide null key? As I remember it was not required before.... Please check latest 4.0.3, reopen if bug still exists.. @jiushicheng Check examples and modify it to demonstrate your issue.. @daviscabral Any progress on this?. @ThomasLarge beta is not supported, could you please check latest 4.0.6 version?. @aniltirola @daviscabral What is problem just to pass SwitchNavigator as navigator param to container Scene?. @matthewkwong2 It looks like a hack and probably just not supported by React Navigation 2.x (its SET_PARAMS action). Instead you should define one renderLeftButton that changes its content depending from navigation state. Actions.refresh should be used just to update navigational state (i.e. pass values not functions)\n. Please try replace action\nOn 8 Oct 2018, at 12:09, \u963f\u65af\u987f notifications@github.com wrote:\nDid you solve this problem in version 4.0.5? I still had this problem in version 4.0.5\nError: There is no route defined for key main.\nMust be one of: 'root','confirmDialog'\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub, or mute the thread.\n. Yes, use type=replace for routes you want to use instead current one\n\nOn Monday, October 8, 2018, \u963f\u65af\u987f notifications@github.com wrote:\n\n@aksonov https://github.com/aksonov Replace 'reset' with 'replace'?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/RNRF/react-native-router-flux/issues/3194#issuecomment-427782658,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ABQpcYT_GXk3n72VK5imxRnVxxT54Paiks5uiyU7gaJpZM4WFDKH\n.\n. @lordenas As @daviscabral mentioned we need you to reproduce the issue based on Example project, not your project.. @dextermb Sorry, but I can't help you until you don't give me modified Example. So far I can't find the bug with passing props.\n. No. PR is welcome to make Example project as Expo project.. Please re-read my sentence above again.\nNO, we don't have Expo-compartible Example now. You are WELCOME to add PR and modify Example to make Expo-compartible. Please check 4.0.3 release and create new ticket if any.. Duplicate of #3153 . HoC is good solution, closing this ticket. @daviscabral Sounds good (v3.5). Ugh, right, v3.5 doesn't look good idea now for me - it could confuse v3 users... What about leaving it as beta (as is now) - as I understand there are no requirements for v4.beta and prod v4 to have the same API/behavior.\n\n. We can add 'beta is not supported' note too. @daviscabral Do you know why tests fail now (on master)?. It looks like question for stackoverflow. You can try to check this.props.navigation.state. @jamesholcomb It looks like a hack and probably just not supported by React Navigation 2.x (its SET_PARAMS action). Instead you should define one renderRightButton that changes its content depending from navigation state. Actions.refresh should be used just to update navigational state (i.e. pass values not functions)\n. If you don't have problem without camera then it is not problem of RNRF. Maybe react-navigation and CameraKitCamera is not compatible somehow. Please try pure react-navigation first.. Maybe you can use custom reducer with custom action to do that. Check RNRF sources, its Reducer.js, how it works with custom POP_TO.. react-navigation@2.0 doesn't pass props to all children components anymore. Tabs are 'wrapped' by default - i.e. all children are wrapped by Stack with own nav bar. You may disable wrapping by using wrap={false} for Tabs and check passing props again.. @daviscabral Is it ready to merge?. I think no, could you tell me what issues/difficulties are?. @daviscabral But how it will solve problems with passing params?. @daviscabral Sure, I'll publish new version once this PR is finished. Any ETA?. Sorry, but your desired behavior is not supported - you are manipulating with scenes from different stacks and tabs are automatically switched.. Looks good!. @daviscabral are you able to reproduce the issue? I don't think that RNRF can cause the problem, because it just wraps react-natigation.. @davidwu220 It is probably react-navigation issue. Update to latest react-navigation and check. If it doesn't help, please check their demos and check your issue there. @daviscabral Yes, I think so. Will check it today.. LGTM. It should be param for Drawer, not for inner scenes\n\nOn 12 Sep 2018, at 16:45, Renan Serr\u00e3o Nogueira notifications@github.com wrote:\nVersion\nTell us which versions you are using:\nreact-native-router-flux v4.0.1\nreact v16.3.1\nreact-native v0.55.4\nnative-base v2.8.0\nredux v4.0.0\nExpected behaviour\nDo not open the drawer when drawerLockMode is 'locked-closed'\nActual behaviour\nThe drawer opened on drag.\nSteps to reproduce\nrender() {\nreturn (\n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n);\n}\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub https://github.com/aksonov/react-native-router-flux/issues/3261, or mute the thread https://github.com/notifications/unsubscribe-auth/ABQpcYhZeW638W4uOJH5gyTXM3lsDq-Yks5uaR4dgaJpZM4Wlivz.\n\n\n. I can't reproduce. Please check examples/react-native and its Drawer. Feel free to modify example and demonstrate this bug.. So, should we release new version now?. Okey, I've just got error tabBarComponent is read-only when set legacy for TabBar (I added legacy to Example). I fixed that but got another error within backToInitial processing, so I disabled backToInitial for legacy at this moment, feel free to fix. Now it works but with warning about jumpToIndex is deprecated - looks like using of old navigators was bad idea.... 3.43 is not supported anymore, sorry. Looks huuuge, but anyway, good job!. Yes, we need to split it to smaller PR. I can't reproduce this issue. Please change any of our examples accordingly to demonstrate the issue. . Yes, it is possible that you are doing something CPU-intensive within your onEnter. You should use InteractionManager.runAfterInteractions https://facebook.github.io/react-native/docs/interactionmanager. You can use Actions.refs.SCENE_KEY to access component ref. . Thanks!. You have to use 'replace' not reset as type. This use case is not supported - Actions.refs is not immediately available but only when screen component is created and mounted.. I don't see any line for example project, feel free to modify our examples to demonstrate the issue.. Please check core react navigation examples\n\nOn 8 Oct 2018, at 11:26, YY notifications@github.com wrote:\nI modified the example project.This problem is repeated.\nreact v16.2.0\nreact-native v0.52.0\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n. @thedjinn I removed cyclic dependency for NavBar. Please check updated examples/react-native. If it works for you, you may use current master.. Should be solved within master, will release shortly. Tests are not passed. LGTM!. Please check 3.44.0\n24 \u0441\u0435\u043d\u0442. 2018 \u0433., \u0432 13:06, Jonathan Chrisp notifications@github.com \u043d\u0430\u043f\u0438\u0441\u0430\u043b(\u0430):\n@aksonov https://github.com/aksonov thanks for the quick turnaround, if possible can you give me an ETA as to when you'll push this version to npm?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub https://github.com/aksonov/react-native-router-flux/pull/3290#issuecomment-423939903, or mute the thread https://github.com/notifications/unsubscribe-auth/ABQpccGV-53CLrXurJU2We5Ge59QNFr4ks5ueLzCgaJpZM4W2Vl4.\n\n\n. Probably so. Feel free to submit PR. v3 is not supported. Strange. Check v3.44.1 now. Davis, could we just set backBehavior not to initialRoute within RNRF, to preserve v1 behavior?\n\n25 \u0441\u0435\u043d\u0442. 2018 \u0433., \u0432 17:16, Davis Z. Cabral notifications@github.com \u043d\u0430\u043f\u0438\u0441\u0430\u043b(\u0430):\nChecking react-navigation code, I found this: https://github.com/react-navigation/react-navigation/blob/master/src/routers/TabRouter.js https://github.com/react-navigation/react-navigation/blob/master/src/routers/TabRouter.js\nIt might help with what you want.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub https://github.com/aksonov/react-native-router-flux/issues/3292#issuecomment-424383458, or mute the thread https://github.com/notifications/unsubscribe-auth/ABQpcQMIZ_pZfXkv8csmVNf_B2-yLI3aks5uekjogaJpZM4W4Znf.\n\n\n. @daviscabral Could you look?. @blackbing Please check latest 4.0.6. Probably you have custom reducer, so you need now to pass Actions to createReducer method.\nPlease check Example project for more details.\n\n26 \u0441\u0435\u043d\u0442. 2018 \u0433., \u0432 12:58, dalba1992 notifications@github.com \u043d\u0430\u043f\u0438\u0441\u0430\u043b(\u0430):\nVersion\nTell us which versions you are using:\nreact-native-router-flux v4.0.3\nreact v16.4.2\nreact-native v0.55.4\nExpected behaviour\nActual behaviour\nhttps://user-images.githubusercontent.com/20521231/46075763-10868b00-c1be-11e8-9ddd-ea1e0072c0fb.png\nSteps to reproduce\nFor non-obvious bugs, please fork this component, modify Example project to reproduce your issue and include link here.\n1.\n2.\n3.\nReproducible Demo\nPlease provide a minimized reproducible demonstration of the problem you're reporting.\nIssues that come with minimal repro's are resolved much more quickly than issues where a maintainer has to reproduce themselves.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub https://github.com/aksonov/react-native-router-flux/issues/3294, or mute the thread https://github.com/notifications/unsubscribe-auth/ABQpccmLTbSqhHmG2MJotVCO5RBcUfLQks5ue13ggaJpZM4W6Z6Y.\n\n\n. Please check examples/react-native - it works for iOS. My apologies for breaking change. I mistakenly thought that createReducer is not used by community ;)\n4.0.4 should fix it - old API is preserved. Sorry for breaking change, my mistake. I've just published 4.0.4 with old API. preserving of API is very important for us and we should try to keep it stable. Could you remove 'new' API from examples for this PR? Thanks.. LGTM. Should be fixed with 4.0.4. Could you fix it by removing of navigationStore as param at all? \n\nOn 30 Sep 2018, at 17:47, Davis Z. Cabral notifications@github.com wrote:\n@aksonov this seems still broken - the old API was not passing navigationStore but params.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n. Please check 4.0.5 version. Make sure you use the same react navigation for both cases. Then try to reproduce issue with our example \nOn 27 Sep 2018, at 12:14, Mahmud notifications@github.com wrote:\nNot fixed. Going back to digging how RNRF works on provided Example app then hopefully find out why Navigation/SET_PARAMS isn't firing in my app. (3 days and counting...I'm in deep trouble!)\nClosed this issue because it was a question and you've answered it.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub, or mute the thread.\n. Not related to RNRF. @daviscabral What is 'rnrf dedup', why do we need it and why it doesn't work? Probably it is better just to return to hardcoding version numbers of RNRF for now.. @duanyachao please check latest master now. @isrdoc Make sure that RNRF 4.0.5 is installed. It is normal, use setTimeout. Please reproduce this issue with our examples.. Sorry, but I can't reproduce this issue. Feel free to modify Example to reproduce your issue.. Thanks for the investigation, PR is welcome!\nOn 19 Oct 2018, at 12:19, hophoppoppop notifications@github.com wrote:\nMy Repo\nSo i try to see why this happen and then i find it that on navigationStore.js. When function createTabNavigator is called the tabBarPosition parameter not included as parameter.\nyou can try my repository if you want\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub, or mute the thread.\n. betas are not supported, please upgrade to latest (4.0.5) and reopen if any. Your approach is correct, I'm closing this issue. You have to use setTimeout wrapper for next animation.. Duplicate of #3165. I think it is OK. Make sure to wrap it with setTimeout and not in render (but componentDidMount) or static onEnter. LGTM!. Please check pure react-navigation examples and try to reproduce this issue there. If it happens there too then the issue not in RNRF, but within react-navigation used by RNRF. Please check examples and how it passes props, create reproducible Example with your problem. v4 is based on react-navigation 2.x when 4.beta - on react-navigation v1.5. componentWillUnmount will be triggered by pop, but not for push (action for  Actions.sceneKey()). RNRF just re-uses react-navigation drawer (and its config), so please check this issue with pure react-navigation first.. Please check example, it works fine. Please create reproducible example (Expo) to demonstrate the issue and re-open then.. setTimeout (even with zero delay) is necessary because of async react-native architecture. Check Example, previous screens should preserve their scroll position...\nFeel free to demonstrate your issue with our examples and reopen.. @marciobera is correct. Sorry, not enough information. Please check provided examples with Drawer. Looks like fixes are not published yet. Could you check latest master instead of 4.0.5?. Please check 4.0.6. Could you try different commits between 4.0.1 and 4.0.5 and check what commit broke?\nOn 6 Nov 2018, at 04:52, Danny Althoff notifications@github.com wrote:\nAfter some digging, it seems that between in 4.0.2 this change in behaviour was introduced, using 4.0.1 still works for me.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub, or mute the thread.\n. You should use type='replace' so new scene will be first within the stack.. It is a bug. Feel free to submit PR. You should manually close drawer after tap, it is intended behavior . Check example project\nOn 11 Nov 2018, at 02:13, jackychanfox notifications@github.com wrote:\nHow to close drawer manually?\nAfter navigation to another scene, when I close drawer, original scene is displaying again.\nCould you explain in detail?\n\u2014\nYou are receiving this because you modified the open/close state.\nReply to this email directly, view it on GitHub, or mute the thread.\n. Sorry, but it is not enough for PR, if you want to help, please check 'help wanted' tag. Sorry, it is not supported right now. Feel free to submit PR. Make Drawer as parent for Tabs. It is not good and should be fixed for sure. Unfortunately I don\u2019t have enough time to work on it, PR is welcome!\n6 \u043d\u043e\u044f\u0431. 2018 \u0433., \u0432 10:15, Roman notifications@github.com \u043d\u0430\u043f\u0438\u0441\u0430\u043b(\u0430):\nHi there,\nI just installed your demo app https://github.com/aksonov/react-native-router-flux/tree/master/examples/react-native and it seems it uses\n\"react-native-router-flux\": \"^4.0.4\",\nand when I stay on first screen and hit back button then nothing happens (I am not able to quit the app). is it exactly how it suppose to work?\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub https://github.com/aksonov/react-native-router-flux/issues/3347, or mute the thread https://github.com/notifications/unsubscribe-auth/ABQpcSuXCEEwRooX8wK4r1CWDX_GWjy4ks5usdHZgaJpZM4YRAMi.\n\n\n. Duplicate of #3337. @mightym Could you reproduce it with RNRF's example?. You may create another tabbar (with hideTabBar option) with two children - Welcome and your current tabbar. Not enough information. @shubhang93 thanks, closing this. You have to wrap refresh with setTimeout if you use it from componentDidMount. It is not supported. @shubhang93 Great tips, thanks! It would be great if you can submit documentation PR. It will prevent to open the same scene with different props... @iherem Could you check my comment above?. Sorry, it is not supported right now. Can you reproduce it with RNRF's examples?. It is true. Overlay is explained via our examples but it is definitely not enough. PR is welcome.. Thank you, @LeviWilliams . @jaumebosch Unfortunately it is not supported right now. Maybe situation will be improved after migration to react-navigation 3.x https://github.com/aksonov/react-native-router-flux/issues/3393. I believe it is because of underlying react navigation. 4.beta used RN 1.5, 4.x uses RN 2.x. ETA is unknown, I have very limited availability right now, supporters are wanted.. @hugoh59 You have to wrap refresh with setTimeout.\nYes, it is connected - react navigation 2.x changed a lot. For some (unknown) reasons swipeEnabled was removed from react-navigation 2.x. That is why we added 'legacy' and support for old tabs. I'm not sure what is the status of swipeEnabled within latest react-navigation 3.x. \nI will try to support it but I can't promise, need to complete migration to 3. first: https://github.com/aksonov/react-native-router-flux/issues/3393. Content should be not the same, RNRF instantiates new instance every push.. LGTM!. LGTM, let's try to merge that. Check Overlay usage within our examples. Good question. If you need conditional navigation you have to use  success and failure attributes with names of scenes to navigate. You may show some 'Loading' screen to display\nTry this:\ncomponent={Launch} on={() => UserService.findAll().length > 0} success='homeScreen'  failure='login'. It maybe fixed after #3393. It is not supported. Maybe with react-navigation 3.x it could be possible, but I'm not sure. I think it is not supported right now.. LGTM. UWP is not supported. Probably #3393 may improve that.. Thanks for mentioning that. PR is welcome. a. It seems to be not difficult to migrate to v3, I will commit new 'alpha' release in following days\nb. I talked with Eric Vicenti two years ago and he personally didn't like idea of JSX for routes (scenes). As I understand other members of react-navigation don't like it as well, so RNRF will live as separate component for those who likes this idea.. Hi all,\n4.1.0-beta.2 supports react-navigation now. Please check and create issues if any.. It is very hard to find free time to maintain the component. If someone wants to join, you are welcome. We also can discuss some payment for most important bugs and issues from my opencollective budget:\n https://github.com/aksonov/react-native-router-flux/issues/69. LGTM. LGTM. LGTM. LGTM. LGTM!. Below we have \nthis.title = props.title || route.title;\n. Deleting looks not good - scenes should store all possible scenes, like library.\n. Modification of scenes could bring some unpleasant issues - it is possible that we could have several scenes in stack with the same sceneKey (such issue was created already in the past), for example on Details of user1 and then Details of user2. And you are proposing to set 'scene' with user1 or user2?\n. state.index should always be last element for children, right? Why you don't return just newChild  there?\n. But popToTop should not be called for TabBar, i believe (like pop, it doesn't have any sense)\n. Oh, i see now. Does it work for stack too?\n. Another thought that even for tab bar all tabs are actually stacks (with name tab+''), so popToTop should be applied to them, not to tab bar...\n. So could you make it in the same way as POP action ? Then it will work for both tabs/stacks and it will be much simpler (just return first single child as children array)\n. Have you tried Action.callback({key:NAME+'', type:'reset'}) ? To use inner stack for given tab, not tab itself\n. So if you set type='reset' for groupOverview and then call Actions.groupOverview() when user clicked on tab, will it work?\n. Maybe you could propose PR based on it? For cases when first child has type 'reset'...\n. Probably you need to check against state.index, not state.children.length...\n. Are you sure that height should be the same for android/ios? We had issue with that...\n. My idea was slightly different - don't modify type (to avoid breaking existing apps), but just pass modified type to 'dispatch' method only\n. as i've found today this commit broke my app :(\n. Right button style and overall style for own nav bar passed to Router globally\nPavel.\n\n5 \u0438\u044e\u043b\u044f 2016 \u0433., \u0432 17:44, Joe Noon notifications@github.com \u043d\u0430\u043f\u0438\u0441\u0430\u043b(\u0430):\nIn src/TabbedView.js:\n\n@@ -54,7 +54,8 @@ class TabbedView extends Component {\n         return;\n       }\n       this.renderedSceneKeys[key] = true;\n-      scenes.push(this.renderScene(item, i));\n-      const {navigationBarStyle,titleStyle} = this.props.navigationState;\n-      scenes.push(this.renderScene({navigationBarStyle,titleStyle,...item}, i));\n   });\n   return (\n     \n  @aksonov sorry about that! what did it break?\n\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n. Ok, will setTimeout with 10 work?\n. Have you tried to return null if selectedKey != current scene? This way no double rendering should happen.\n. You should not modify existing state, but produce new one. Here i see you modify existing child within existing state var.\n. Thanks, fixed. Good point. However making Screens as pure function is not good idea - hot reload will not work for them.... path is not required, but optional, right?. Could we avoid using private properties like _navigation ?. I still don't understand why we can't use own state? This way react-navigation should not maintain own one (as their document says).. The problem also that main idea of mobx integration was to make currentScene observable, i.e. re-render screens that use currentScene. It is usable for example to display loading buttons if prevScene != currentScene. I will check how it works with mobx-less implementation.... Yes, please try to fix. I've got some babel-related error, connected with stage 0 or something like that.. No worries, you just fixed eslint errors. It was used by removed setState, now I re-enabled handlers.. Any reason to remove headerTitle? . Is this comma correct?. I see comma right before 'currently', so now it is \"Flexible Nav bar customization ,currently not allowed by React Navigation:\". Could you fix it?. \n",
    "tylermcginnis": "Awesome. Thanks for the quick update!\n. That works! This router is about 1000X better than the other one we were using. I really appreciate it!\n. ",
    "jacob-israel-turner": "I'll take a look at it this afternoon, I honestly have no idea how your library works yet. :smile:  I'll let ya know what I find.\n. @aksonov Thanks.  We ended up going with an unminified bundle because of time restraints.  I'll take a look at 0.1.0 for our next release.\n. ",
    "mull": "For some reason I thought the issue was only after minification. Gimme a couple of minutes/hours :)\n. FYI I'm getting complaints about this package being missing: https://www.npmjs.com/package/absolute-path\n. ```\n\u279c  Example git:(feature/minification-issues) \u2717 npm start\n\nExample@0.0.1 start /Users/eml/Projects/react-native-router-flux/Example\nnode_modules/react-native/packager/packager.sh\n\nCould not find dependencies.\nEnsure dependencies are installed - run 'npm install' from project root.\n```\nAfter adding the missing dependencies absolute-path and chalk\n. Ah that was indeed the case. Tried on 0.12.7 but got these errors:\n```\nReact packager ready.\n[2:40:46 PM]  fs crawl\nTypeError: Cannot read property 'root' of null\n    at /Users/eml/Projects/react-native-router-flux/Example/node_modules/react-native/packager/react-packager/src/DependencyResolver/crawlers/index.js:16:84\n    at tryCallOne (/Users/eml/Projects/react-native-router-flux/Example/node_modules/react-native/node_modules/promise/lib/core.js:37:12)\n    at /Users/eml/Projects/react-native-router-flux/Example/node_modules/react-native/node_modules/promise/lib/core.js:103:15\n    at flush (/Users/eml/Projects/react-native-router-flux/Example/node_modules/react-native/node_modules/promise/node_modules/asap/raw.js:50:29)\n    at process._tickCallback (node.js:355:11)\n[2:41:02 PM]  request:/index.ios.bundle\n[2:41:02 PM]  find dependencies\n```\n. Let me know if you introduced some trouble in 0.0.6. I need to get back to work but I can try more tonight or tomorrow morning. I was hoping my quick PR could've done it.\n. I was on iojs 2.5 though. I'll follow the instructions later on. :)\nThat's really strange, it appears there's an API change in alt that I'm not aware of. Could you try going back to alt 0.17.1?\n. Can you verify that is the one installed? Because running npm install would install 0.17.3.\n. Thanks. I'll try and help you with this over the weekend. If we're lucky one of the other collaborators who aren't new and have better answers for you. :)\n. Agreed, they are kind of hacky. A nicer way (to me) would be to dynamically create the action once you have your schema. But then that gives you issues when you import components that imports the action class before the schema is even defined.\n. @aksonov you can create actions runtime. It's just that once you say alt.createActions the return value is immutable. That's not really a bad thing. Thinking about your problem during the evening I don't think mutable actions are the way to go here. After your schema definition you have a list of actions for your class, you could feed that into alt.createActions!\n. Once you have your route definitions and  you could build the specification for the action & call alt.generateActions. You could though I don't know if this is a great solution pass that down through context to the react components. They could call this.context.router.login().\n. Indeed it will.\nOkay so for generating the actual action is what I would do. Get an array of action names such as [\"login\", \"about\", \"contact\", \"faq\", \"tos\", \"feed\"] and use it to create your an object like:\n{\n  login: function(data) { this.push(\"login\", data),\n  about: function(data) { this.push(\"about\", data),\n}\nThat can in turn be sent to alt.createActions- see http://alt.js.org/docs/createActions/. You want to merge in the implementation of push and what have you into that object though.\nOnce you have your object you can pass that alt.createActionsand use that return value in your components. Does that make sense?\n. You can't use it as return value for your module.exports. You'd have to modify that value when you've generated your action.\n```\nlet _action = {};\nexport function _setAction(value) { _action = value; }\nexport default _action;\n```\nPretty sure any file that imports the file will have the updated value. Given that you should be doing the whole config & generation before any component is ever rendered and has a chance to call your action, it would work.\n. Yeah that would be an ES6 feature. Typically in ES6 projects you run the code through Babel to handle this kind of stuff. If you wish to pursue this path take a look at babel. This looks good: http://daliwa.li/es6-modules-in-node/\n. ",
    "Mokto": "+1 (Great work BTW)\nI forked react-native-counter-ios-android\nI tried to pass props to route like this :\njavascript\nvar RouterModule = React.createClass({\n    render: function() {\n        console.log('FROM ROUTER  : ',this.props.counter);\n        return (\n          <Router>\n            <Schema name=\"default\" sceneConfig={Animations.FlatFloatFromRight} />\n            <Route {...this.props} name=\"launch\" component={Counter} initial={true} hideNavBar={false} title=\"Launch\"/>\n          </Router>\n        );\n    }\n});\nWhen I increment the counter:\n- console.log('FROM ROUTER  : ',this.props.counter); is rightly updated\n- but the subcomponent Counter) rerender with not updated counter value.\nPlease let me know if I am not clear.\n. Thanks for your quick answer.\nMy forked repo\nThe console.log in ./src/components/Counter.js and ./src/containers/Router.js show the issue.\nPlease let me know if you need anything else.\n. Ok, thank you anyway, I found a workaround. (connect every subcomponent with redux)\n. Hi, to nav.replace you can do Actions.reset(ROUTE_NAME);\nIs it ok for you ?\n. Yes, and my case is even more special, I have to put a Youtube Player out of the Router (top-level component as well).\njavascript\n<Drawer>\n       <PlayerQueue>\n              <Router />\n       </PlayerQueue>\n</Drawer>\nIs there any way to do it ? I absolutely have to set Drawer inside Router ?\n. Hi,\nThanks a lot but i managed to do it !\nI placed a redux store over your router and save current routes.\nThanks again !\n. The only way I see is to create a mocks directory at the root of your project and add a react-native-router-flux.js file :\njavascript\nmodule.exports = {\n  Actions: {\n    push: function() {},\n    reset: function() {},\n    pop: function() {},\n  }\n}\n. +1 :)\n. This is my redux way to do it : \nAction\n``` javascript\n'use strict';\nimport { Actions } from 'react-native-router-flux';\nconst actions = exports = module.exports;\nexports.PUSH = 'PUSH';\nexports.RESET = 'RESET';\nexports.POP = 'POP';\nexports.push = function push(name, data) {\n  if(typeof Actions[name] == 'function') {\n    Actionsname;\n  }\n  return {\n    type: actions.PUSH,\n    name: name,\n    data: data\n  }\n};\nexports.reset = function reset(name, data) {\n  Actions.reset(name);\n  return {\n    type: actions.RESET,\n    name: name,\n    data: data\n  }\n};\nexports.pop = function pop() {\n  Actions.pop();\n  return {\n    type: actions.POP\n  }\n};\n```\nReducer : \n``` javascript\n'use strict';\nimport { PUSH, RESET, POP } from '../actions/router';\nvar initialState = [{\n  name: 'home'\n}];\nmodule.exports = function router(state = initialState, action) {\n  switch (action.type) {\n    case PUSH:\n      return [\n        ...state,\n        {\n          name: action.name,\n          data: action.data\n        }\n      ];\n    case RESET:\n      return [{\n        name: action.name,\n        data: action.data\n      }];\n    case POP:\n      var res = [...state];\n      return res.filter(function (item, i) {\n        return i<res.length-1\n      });\n    default:\n      return state;\n  }\n};\n```\n. Also see this : https://github.com/burgalon/react-native-redux-navigator\n. I'm sorry for the delay. Can you please reopen ? I will be more reactive.\nHere is my stack trace :\n\nPlease let me know if you need anything else.\n. I'm sorry but what docs ?\nThere is no mention of inner composite stack neither in your plugin, neither in https://github.com/ericvicenti/navigation-rfc\n. Ok thanks !\nFor those with same issue, this is wrong \njavascript\n<Scene key=\"loggedIn\" hideNavBar={true} component={Layout}>\n          <Scene key=\"menu\" component={Menu}  />\n          <Scene key=\"settings\" component={Settings} />\n</Scene>\nYou have to do this\njavascript\n<Scene key=\"loggedIn\" hideNavBar={true} component={Layout}>\n    <Scene key=\"main\">\n          <Scene key=\"menu\" component={Menu}  />\n          <Scene key=\"settings\" component={Settings} />\n    </Scene>\n</Scene>\n. Okey doing it now.\n. Ok I can't reproduce in example but I went into your code and \nif (state.children[state.index].sceneKey == action.key && !props.clone){ is triggered even if I send different parameters to the same route.\nLooking into it.\n. Closing as it was related to https://github.com/aksonov/react-native-router-flux/pull/432\n. I do not know if it helps but still not working in 0.24-rc3\n. Is this fixed ?\n. \nI hope you see it clearly but everything around a Scene container has a black shadow.\nI even had to set my custom navbar to position: 'absolute' to hide this shadow.\nThis behaviour exists since 3.0.\n. Ok thanks man !\n. ",
    "saidimu": "The path fix works now. Thanks!\n. ",
    "iSimar": "ok I will try to look into it and reopen. Closing for now.\n. ",
    "RomanTsegelskyi": "@aksonov Is this still impossible to change?. ",
    "FaridSafi": "thanks\n. Thank you for your answer.\nBy clicking on the \"Next\" button of the navbar, I want to retrieve the values of the switches of the page (see attached screenshot).\nSince the navbar is created before the switches, I can not pass an onNext event containing the switches references when calling the action.\nThe only working way I found is to access this.props.navigator.refs.navBar inside the action.\nDo you think I should use another way?\n\n. Ok I understand now, thank you\nI followed demo https://github.com/mrblueblue/react-native-alt-demo to store the values of the fields\n. Hello, I was in a similar situation. The best way is to use a Store.\nExample: https://github.com/mrblueblue/react-native-alt-demo\nSo you can set the state in the Store, then access it from anywhere you want\n. You should be able to access it using YourStore.getState()\n. You are welcome\n. +1\n. ",
    "VansonLeung": "If I do Pop + Push... there will be 2 outcomes for me\n1. When current page is the 1st page:\n       Actions.pop();    >   will trigger this.props.onExit() instead\n       Actions.LoginPage();   > will push nav to this 2nd page\n   Result: cannot replace  1st with 2nd, instead just \"Push\" has run properly\n2. When current page is the 3rd page:\n       Actions.pop();    >   will trigger this.refs.nav.popToRoute(routes[routes.length - 1 - num]);\n       Actions.LoginPage();   > will push nav to this 4th page\n   Result: pop & push has run simultaneously, should theoretically return correct results, but as their push & pop animations clash together, the navigator returns blank white page instead...\n. :D  Appreciate & thanks very much for your quick feedback.\nI wonder if it is possible to call the \"replace\" function of the Navigator by this lib\nI tried forking myself a new branch to add this \"replace\" action to call nav.replace, but it was too hard for me I gave up.\n. Moreover, I tried to use \"custom\" action tags when working on the \"replace\" thing but don't know how to trigger those \"custom\" tags.\nThis part is not documented yet. Is this part not done yet?\n. It did the job to clean the whole array of pages in the navigator.\nSadly it is an overkill for my case\n. Thank you, Cheers!\n. ",
    "JoaoCnh": "If I do Actions.replace({name:ACTION_NAME, title: MY_TITLE})\nthe title doesn't get filled and after navigating for a while, let's say\nthis happens:\nActions.replace({name:ACTION_NAME, title: MY_TITLE})\nthen\nActions.push(SOME ROUTE)\nthen Actions.pop\nthen\nActions.replace({name: OTHER_ACTION_NAME, title: MY_ANOTHER_TITLE}) \nand the title is the same one as in SOME ROUTE title. \nI really hope you can undestand what I'm trying to say. It's hard to explain well.\nAm I using it wrong?\n. @FaridSafi I've succesfully setup flux in my project. I got what I want working. But how can I access the state stored in my navbar?\nI'm trying to find it online but not being lucky\n. :facepalm: I was being an idiot.\n@FaridSafi Thanks for helping out. It solved my problem\n. ",
    "JonnyBGod": "Will make an example for it. Meanwhile some snippets:\n```\n\n this.refs.drawer.open()}/>\n\n\n\n\n\n\n\n\n\n```\n```\nconst DrawerLayout = require('react-native-drawer-layout');\nlet Drawer = React.createClass({\n  render() {\n    return (\n        this.changeScene(name, type)}\n          closeDrawer={() => this.refs.drawer.close()} />\n        } >\n  </DrawerLayout>\n);\n\n}\n});\n```\n\n. I realise you managed to work around it but for reference I did it in a different way.\nImport {PageStore} form 'react-native-router-flux' and then you can have the current route with PageStore.state.currentRoute.\nYou can probably also listen to the store on Drawer view.\n. +1\n. +1\n. An example would be helpful.\n. Thanks thats solved it.\n. ",
    "andreasbhansen": "If I get this working, I'll try to provide a proper demo for it :)\n. @igin You should be able to pass a navbar component into header={} on each router, at least: https://github.com/aksonov/react-native-router-flux#router\n. Any news on this, @aksonov ?\n. I agree with @emrosenf here, selectively hiding the tab bar would be fantastic for modals.\n. I went with this modal component because my visual specs required the modal to only fill up ~50% of the screen height: https://github.com/maxs15/react-native-modalbox\nNot sure if I'm able to configure the tab navigator to \"hide\" when using that one. Not a huge issue for me really, but others might find it useful.\n. @emrosenf Why don't you put the AHNavBar component into your route's header={} object instead?\n. Well, I should of course have checked the ExNavigator repo before asking here. \nHere's the same issue:\nhttps://github.com/exponentjs/ex-navigator/issues/60\n. Hm, I'm not sure what might have fixed this. So many errors occurred throughout today, ended up updating OS X Yosemite, then upgraded to OS X El Capitan, downloaded a few xGB large Xcode updates, cleaned and reinstalled the entire node_modules folder, removed some .babelrc files that caused problems, and just five minutes ago I was able to get everything up running again. That took an entire day. \n. Sorry, I'm not able to say what actually fixed it. As previously posted, I spent a day updating and reinstalling everything from OS to Node. For some reason, it worked.\n. I'll definitely look into that!\nAnd thanks for this contribution, makes life easier.\n. ~~@aksonov I'm having some really weird issues with the navigation bar. I can't really implement a custom one, because for some reason, with the following code, a navigation bar is present all the time within the \"loggedinLayout\" route group, even though hideNavBar={true}.~~\n~~When it's set to hidden, the navigation bar is showing with the route name as title, and there is no back button when navigating the tabs (which is great!). However, if i set hideNavBar={false} on the \"loggedinLayout\", I'm able to style it the way I want, but then there's a backbutton (when navigating between tabs) I can't get rid of, I've tried the newer props like renderLeftButton and backButtonStyle but they have no effect.~~\nEDIT:\nOK, so renderBackButton is to be placed on a route, and takes a function returning the button:\njavascript\n  renderBackButton() {\n    return <View></View>;\n  }\njavascript\n<Route name=\"mainview\"  key=\"1\" renderBackButton={this.renderBackButton.bind(this)} ...... />\n. Well, I don't think you're supposed to call the route name like you're doing here:\njavascript\nif (!this.state.loggedIn) {\n  Actions.login();\n}\n... but rather like this:\njavascript\nif (!this.state.loggedIn) {\n  Actions.login;\n}\nNo idea if that'll work, but you'll get rid of the error message.\n. @aksonov Ah - ok, thanks!\n. Related to https://github.com/aksonov/react-native-router-flux/issues/82 and https://github.com/aksonov/react-native-router-flux/issues/66 (?)\n. Since you closed it, did you solve this? @robtg4\n. @aksonov Does this still work in 2.0.2? After updating, the button which used to be in the navBar is no longer there.\n. Thanks, @aksonov. Works fine now!\n. Superb! Works great, thank you :)\n. @tomkur @arthurvi Where would you put Actions.refresh()? I tried putting it in both componentWillMount and componentDidMount, but neither of those rendered successful. Didn't find the button/function, neither through route.props.* nor route.props.router.delegate.state.*.\n. Hm. Maybe I misunderstand something here. \nIn my route:\n<Route name=\"detailView\" schema=\"default\"  component={DetailView} renderRightButton={(route) => { console.log(route); }} wrapRouter={true} title=\"Detail View\" />\nin my DetailView component (trying both life cycle methods just to check):\n```\n  componentWillMount() {\n    Actions.refresh({ editButtonRight:  })\n  }\ncomponentDidMount() {\n    Actions.refresh({ editButtonRight:  })\n  }\n```\nShouldn't this enable me to see the editButtonRight component/function in the console.log within the renderRightButton?\n. Ah, sorry, I didn't see your edit, @tomkur. \nSo let me get this straight. The component that calls Actions.filters() handles the _renderApplyButton(), even though that button belongs to your filters route, not to the overarching component (the one that calls Actions.filter())?\n. ",
    "chrissm79": "Thank you for the quick response!\nI changed the sceneConfig in the example to the following, but I'm not able to get the swipe back gestures to work:\njs\n// ...\nvar React = require('react-native');\nvar {AppRegistry, StyleSheet,Text,View,Navigator} = React;\n//...\n    <Schema name=\"modal\" sceneConfig={Navigator.SceneConfigs.FloatFromRight} navBar={NavBarModal}/>\n    <Schema name=\"default\" sceneConfig={Navigator.SceneConfigs.FloatFromRight} navBar={NavBar}/>\n// ...\n. Looks like gestures is set to an empty object in the Router's getRoute method. If we could have a gesture prop on the Schema or Route you could change gestures to:\njs\nvar gestures = route.gestures || schema.gestures || {};\n//...\nsceneConfig: {\n    ...sceneConfig,\n    gestures: gestures\n}\nand on the schema or route you could use:\njs\n<Schema name=\"default\" sceneConfig={Animations.FlatFloatFromRight} gestures={Navigator.SceneConfigs.FloatFromRight.gestures} navBar={NavBar}/>\n. Perfect! Thank you!!\n. Awesome, thank you!!\n. @r0b1n Are we able to use RNRF's wrapBy? \n(Example w/ MobX's observer) https://github.com/aksonov/react-native-mobx/blob/master/index.js\n. Tinkering around w/ @r0b1n solution and wrapBy, and if I get it working I'll post it here. Does anyone have an example they could share?\n. Just a note for anyone using Action.create to generate scenes, the api changed a bit. You need to move wrapBy from the <Router> to the Actions.create function as a second parameter like so:\njavascript\nconst scenes = Actions.create(\n  <Scene key=\"root\">\n    <Scene\n      key=\"page1\"\n      title=\"PageOne\"\n      component={PageOne}\n      queries={{ viewer: () => Relay.QL`query { viewer }` }}\n    />\n    {/* ... */}\n  </Scene>,\n  RelayComponentRenderer // This is necessary otherwise you will encoutner a Relay context error\n);\n. I gave this a try... it starts to navigate to the scene while closing the drawer, then navigates back to the previous scene (like the back button was clicked halfway through the transition). If you click again, you get the error:\nnavigationState.children[2].key \"scene_name\" conflicts with another child!\n. @ailinykh Thanks for the suggestion, I went that route as well for now. Maybe a better solution will be baked in eventually but at least this works.\n. @aksonov I just tried the new example project and it indeed lets you navigate to the echo scene without throwing the no route defined error. However, the swipe to go back gesture will instead open the drawer. Based on the router's structure it would seem that the echo scene is in a different stack (not nested in with the drawer) which shouldn't allow you to open the drawer (or at least that's what I assume when looking at the router).\nTo be fair, I don't know how to resolve this issue in react-navigation either as I can't find a way to pass params down to a nested screen on another navigator (and also keeping the back button) so this is a big help to me, just wondering if there's a way to navigate away from the drawer while keeping the swipe to go back gesture (as well as the back button).\nThanks, the package is \ud83d\udcaf !. ",
    "0bit": "use with react-native-tabs like in \"Example\", \nbut sometimes the component will has some vertical offset, like this:\n\nand sometimes display ok:\n\nthe same code run very well in iOS.\n. ",
    "CoreSoft2": "Found answer, Actions.NAME only works onpress= .... it does nothing, if you can call from your own function. \nif you have own function, & processing, you have to use Actions.NAME(this);\n. ",
    "nagendrakk": "how to pass data while using action in own function\n. I tried like this, Actions.name(this,data),but that did not work\n. hi aksonov, thank you, the above fix worked.\nthe other issue i'm facing is, unable see navbar in the app,I have followed the steps mentioned in the begining page.\n. ",
    "chai2": "Not entirely sure, if this info is what you're looking for or not .. this is the exception. And, this is the error from the call stack - https://gist.github.com/chai2/7e4dc8d672f285b580e5\n\n. ",
    "xkawi": "Just realised it was my mistake. I forget to remove Actions.reset() on componentDidMount() in page1 that I added for debugging purpose earlier. I re-installed the library and try using the reset method again just to verify it has no issue, and it works. So, there is no bug with the library as of now.\nfyi, I observed 2 things:\n1. Actions.reset() will results in the error mentioned earlier (no route for data:{}), but Actions.reset('page1') works as expected. Is this the intended behaviour? or Actions.reset() should works and automatically reset back to the initial page?\n2. If I specify another page like Actions.reset('page2') it works too, although page2 is not the initial page that I defined. If 'page2' has a back button in the navigation bar or anything else, it will appear. Is this the expected behaviour? this might be related to the first observation though.\nOut of curiosity, I tried your recommendation and change to page.name. I called the reset method this way Actions.reset('page1') and found that page.name always equals to the current route 'page3' in this case. This further verify that there is no bug in your code, unless my observation says otherwise.\nhope this helps. closing this issue as it has been resolved.\nfeel free to open it when needed. thanks.\n. ",
    "pmpSalween": "https://github.com/pmpSalween/FLUX_EXAMPLE\nI was using router flux version 0.0.9 and I just updated to version 0.3.4 yesterday. And that strange thing happened. \n. I am using react-native 0.12.0 and I still got that error. So I need to declare Dimensions in Animation.js file by myself.\n. I tested component demo. It does not show that error. I just added component demo with popup in componentDidMount function. It does not work either. Could you please check my repo again. There is a new folder called \"FluxExampleOrigin\" which is component demo with modification. Sorry for late reply.\nI found that when I called Action.popup() in other views, it worked. It does not work only in initial view. \nTry to navigate to Login View. The errorPopup will show. \n. ",
    "imothee": "I also am interested in this.\nIf you push another Route into the navigation stack from within a TabBar the TabBar is removed and the new route is basically full screen. Then when performing Action.pop it falls back to the first Tab selected.\nI really want to emulate the native tabbar behaviour. How would I use a container to do this?\nThis is not the default behavior of iOS native navigation controllers embedded inside a tabbarcontroller. Each navigation controller is completely independent \n. ",
    "qbig": "@JonnyBGod @aksonov   related to this  https://github.com/facebook/react-native/issues/3669 ?\n. ",
    "vanBrunneren": "I made a little demo\n\nWhen I press the button \"Goto tab#2\" the Scene switches but the tab in the tabbar doesn't change. Is there a way to do this? I only added a simple onPress to your demo.\n``` javascript\nclass TabView extends React.Component {\nonTouch(){\n    Actions.tab2();\n}\n\nrender(){\n    return (\n        <View style={styles.container}>\n            <Text>Tab #{this.props.name}</Text>\n            <TouchableHighlight onPress={this.onTouch}>\n                <Text>Goto tab#2</Text>\n            </TouchableHighlight>\n        </View>\n    );\n}\n\n}\n```\n. thank you for your fast response I managed it with your advice and added a listener to the PageStore.\n. :+1: \n. ",
    "jbadeau": "Thanx you. I will have s look at at and see what I can come u with \ud83d\ude00\n. ",
    "daemonchen": "In alt, there is no switch statement, does it ?\n. Oh, I think it can handle all user's 'custom' action in 'onCustom' way.\n. ",
    "lrettig": "I'm having the same problem. Thanks for reporting.\n. Oddly it works fine for Actions.pop on the same component\n. If anyone else is as stuck on this as I was--until the docs are updated--this appears to work with the latest version of the code (2.0.5):\n``` javascript\nclass MyApp extends React.Component {\n  render() {\n    return (\n      \n\n\n    );\n  }\n}\n```\n. I think adding a couple of simple examples like this to the existing README file might go a long way!\n. The behavior of this component appears to have changed with the switch to ExNavigator. Here are screenshots of the exact same code (it's below) rendered using versions 0.3.4, 1.0.1, and 2.0.2 of this component.\nAny idea why this changed?\nThanks!\n0.3.4:\n\n1.0.1:\n\n2.0.2:\n\nCode for the route:\njavascript\n    return (\n      <View style={{flex: 1}}>\n        <View style={{position:'absolute',left:0,right:0,top:0,bottom:0,backgroundColor:'#F5FCFF'}}/>\n        <Router>\n          <Route name=\"home\" component={HomeScreen} initial={true} title=\"Home\"/>\n        </Router>\n      </View>\n    );\nCode for the HomeScreen component:\n``` javascript\n  render: function() {\n    return (\n      \n{this.state.cartAnnouncement}\n\n\n    );\n  }\nvar styles = StyleSheet.create({\n  listView: {\n    //paddingTop: 20,\n    backgroundColor: '#F5FCFF',\n  },\n});\n```\n. Hi @aksonov, thank you very much, this is very helpful. So may I summarize by stating that the pre-1.* behavior was incorrect or suboptimal (or in any case different from the norm), and that the post-1.* behavior is normal and as expected? Thanks. This makes sense.\n. Thanks. In case it helps anyone else, there is a related thread on the topic here: https://github.com/facebook/react-native/issues/4264.\n. This does not work for me. I thought this module uses NavigatorIOS?\n. Me too :)\n. Hi Pavel, thanks for taking a look at this. I would love to try to fix it, but I don't understand the interactions among the tab bar + router + animations well enough. And I'm really struggling to understand why this issue only happens when Chrome debugging is turned off, which as you can imagine makes debugging very hard!\n. I just tried to recreate this, using both the older (2.1.8) and latest version of the library, and I couldn't recreate it on either of two devices. No idea what happened. I'll close this.\n. I ran into this too. refresh did not work, but manually setting the props on the existing route did. Not sure if this is the safest/right way to do it, but it works. Just submitted #259.\n. This is more complicated than I thought. The component continues to receive the props from the router every time push or pop is called, i.e., when another component is added on the nav stack on top of it, or popped back off. @aksonov do you know why this happens?\nIn my use case, I want to act on the props only when they're received explicitly (i.e. via an Action) and not implicitly (the push/pop case I just described). I'm receiving them in componentWillReceiveProps but I don't know how to handle the first case but ignore the second.\n. It's even stranger than I thought. I'm seeing nondeterministic behavior, where my component sometimes receives the props, sometimes doesn't (i.e., componentWillReceiveProps is called sometimes when the route is loaded, but not always). Maybe this has something to do with RN's internal mechanism for deciding when updates need to happen?\nI worked around this for now by defining multiple routes so that I can act upon componentDidMount rather than componentWillReceiveProps.\n. Thanks for the tip! But I only have one Router. What do you mean?\n. The simple example I put together appears to work with the latest npm version--sorry for not trying that before. But upgrading my code is producing a new warning, and I'm still getting an error in the same place. I will keep debugging, but in case either of this ring a bell for you or you have any tips.\nHere's the warning (I haven't changed my code; this is new with the latest npm version, I didn't get a warning before):\nPossible Unhandled Promise Rejection (id: 0):\nCannot read property 'delegate' of null\nTypeError: Cannot read property 'delegate' of null\n    at ExRouter.componentWillUnmount (http://localhost:8081/index.ios.bundle?platform=ios&dev=true:72287:42)\n    at ReactCompositeComponentMixin.unmountComponent (http://localhost:8081/index.ios.bundle?platform=ios&dev=true:15041:6)\n    at Object.ReactReconciler.unmountComponent (http://localhost:8081/index.ios.bundle?platform=ios&dev=true:13509:18)\n    at ReactCompositeComponentMixin.unmountComponent (http://localhost:8081/index.ios.bundle?platform=ios&dev=true:15044:17)\n    at Object.ReactReconciler.unmountComponent (http://localhost:8081/index.ios.bundle?platform=ios&dev=true:13509:18)\n    at Object.ReactChildReconciler.unmountChildren (http://localhost:8081/index.ios.bundle?platform=ios&dev=true:26600:17)\n    at ReactMultiChild.Mixin.unmountChildren (http://localhost:8081/index.ios.bundle?platform=ios&dev=true:26386:22)\n    at ReactNativeBaseComponent.Mixin.unmountComponent (http://localhost:8081/index.ios.bundle?platform=ios&dev=true:25827:6)\n    at Object.ReactReconciler.unmountComponent (http://localhost:8081/index.ios.bundle?platform=ios&dev=true:13509:18)\n    at ReactCompositeComponentMixin.unmountComponent (http://localhost:8081/index.ios.bundle?platform=ios&dev=true:15044:17)\nHere's the error: \"No current router is set\":\n\n. My code uses tab bars and does have a hierarchy of Routers. What do I pass in the route prop to the child Router?\n. I was able to work around this by moving the component in question inside the top-level Router. I still think there are reasons you might sometimes want things to live outside the Router, and control their presentation via state, e.g., to easily present a modal that covers the entire screen (and leaves the view below in place), or if you want to swap a screen without any animation/transition, or if you want multiple Router hierarchies for different parts of your app, or if you simply prefer to keep state inside the state variables for part of your app.\nBut I may be misunderstanding these cases.\nFeel free to close this if you like. Thanks again.\n. same!\n. just tested, the back button issue first appeared in 2.3.4, so the issue is here somewhere: https://github.com/aksonov/react-native-router-flux/commit/07fb25abe954be0bae3759367bd6d7cb1471c2fe\n. Agree that this is terribly confusing, I'd love to see this cleaned up! Thanks for pointing it out\n. Okay I'll take a crack at this and let you know if I get stuck. Not sure yet how to tell which stack the component should be popped from, if e.g. it's on multiple stacks!\n. Makes sense. But what if the component in question is actually mounted on multiple stacks?\n. This is working for me, what do you think? https://github.com/lrettig/react-native-router-flux/commit/e0db8f1f664c50b9619adbef890cf43c305b74c7\nThe view-to-be-popped must call Actions.pop with this.props.route.parent.\nAnother option is to modify the Route class to add a pop() method, so that, instead, the view could call this.props.route.pop().\n. Sure. Thanks for the feedback. Will submit a PR asap!\n. Will submit PR by this weekend\n. Changes are done, tested (briefly), and working. Closing in favor of PR https://github.com/aksonov/react-native-router-flux/pull/313.\n. ",
    "shinework": "+1\n. ",
    "litinskii": "Yep, I look throw source and understood it. So currently I can use it if i wrap every component that pass to Route with connect method from react-redux/native. Seems it work for me ) Thanks. \n. ",
    "fselcukcan": "thanks a lot. :)\nI hope I will try it soon.\n. Hi there,\nI have a question for redux version here\n. ",
    "wootwoot1234": "@aksonov  This should be added to the documentation, or did I miss it?\n. @aksonov, thanks for the response.\n. @rturk I was under the impression it didn't work.  @aksonov why does it say it doesn't work in the readme?  Glad to hear it does.\n. Ok, yeah.  There was some misunderstanding on my part.  Can you update the readme so that's clearer?  I would say something like:\n\"No built in Action Sheet like v2.  If you want to use Action Sheets you'll need to use a 3rd party module.\"\n. @zxcpoiu thanks for putting this together!\n. ",
    "pewh": "+1 I have same issue too\n. +1 latest version doesn't have Actions.currentRouter anymore. So how to access currentRoute?. create _createReducer function:\n```\n  _createReducer = (params) => {\n    const { dispatch } = this.props\n    const defaultReducer = Reducer(params)\nreturn (state, action) => {\n  if (action.type === ActionConst.FOCUS) {\n    dispatch(updateScene(action.scene.name))\n  }\n\n  return defaultReducer(state, action) \n}\n\n}\n```\nthen in render, \nreturn (\n      <Router\n        scenes={routes}\n        createReducer={this._createReducer}\n     ...\n      />\n    )\nupdateScene is just a redux action. Here is my updateScene function:\nexport function updateScene(sceneName) {\n  return (dispatch, state) => {\n    dispatch(createAction('SET_ROUTE')(sceneName))\n  }\n}\nthen in reducer:\nexport const routeReducer = handleActions({\n  SET_ROUTE: (state, action) => ({\n    ...state,\n    currentScene: action.payload,\n  }),\n}, { currentScene: '' })\nWhat I've done is simulate Actions.currentRouter function by create own reducer. Hope it solve your problem.. Removing Navigator.NavigationBar.StylesIOS on navigationStyles={} is working for me. Please merge this PR.\n. You can change navbar background color on Router.\n```\n\n\n\n\nconst styles = StyleSheet.create({\n  navBar: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'red', // changing navbar color\n  },\n  navTitle: {\n    color: 'white', // changing navbar title color\n  },\n  routerScene: {\n    paddingTop: Navigator.NavigationBar.Styles.General.NavBarHeight, // some navbar padding to avoid content overlap\n  },\n})\n``\n. Hi @thngdude, you can styling navbar on eachRouter`. Look at this below to see what I've mean. I have not test this code below, so let me know if something is wrong.\n<Router>\n            <Route hideNavBar={true} name=\"launch\" component={Launch} initial={true} wrapRouter={true} title=\"Launch\"/>\n            <Route name=\"signin\">\n                <Router navigationBarStyle={styles.greenNavBar} titleStyle={styles.navTitle}>\n                    <Route hideNavBar={false} name=\"signinmain\" component={SignIn} title=\"SignIn\"/>\n                </Router>\n                <Router navigationBarStyle={styles.redNavBar} titleStyle={styles.navTitle}>\n                    <Route hideNavBar={false} name=\"signupmain\" component={SignUp} title=\"SignUp\"/>\n                </Router>\n            </Route>\n        </Router>\nor do this if above doesn't work.\n```\n        \n\n\n\n\n\n\n        <Route name=\"signup\">\n            <Router navigationBarStyle={styles.redNavBar} titleStyle={styles.navTitle}>\n                <Route hideNavBar={false} name=\"signupmain\" component={SignUp} title=\"SignUp\"/>\n            </Router>\n        </Route>\n    </Router>\n\n```\nPs: Wrap with triple backtick instead of one backtick ( ) to format multiline code.\n. Hi @KBLNY, I'm glad I can help your problem :smile:\nIt seems you forget to includefooterprop inRouter` inside tabbar route.\nSo your code should be:\n```\nRouter name=\"root\" hideNavBar={true} showNavigationBar={false} navigationBarStyle={styles.navBar} titleStyle={styles.navBarTitle} sceneStyle={styles.routerScene} >\n              \n\n\n          <Route name=\"register\" schema=\"modal\" component={registerComponent} />\n          <Route name=\"login\" schema=\"modal\" component={loginComponent} />\n\n          <Route name=\"tabbar\" style={styles.tabBar} >\n              <Router footer={TabIcon}  navigationBarStyle={styles.navBar} titleStyle={styles.navBarTitle}>\n                <Route name=\"newsFeed\" schema=\"tab\" title=\"News\" component={newsFeedComponent} />\n                  <Route name=\"notifications\" schema=\"tab\" title=\"Notif.\" component={notificationsComponent} />\n                  <Route name=\"events\" schema=\"tab\" title=\"Events\" component={eventsComponent} />\n              </Router>\n          </Route>\n      </Router>\n\n```\nand don't forget to include TabIcon component.\nclass TabIcon extends React.Component {\n    render(){\n        return (\n            <Text style={{color: this.props.selected ? 'red' :'black'}}>{this.props.title}</Text>\n        );\n    }\n}\nI have not tested it, but it should work.\n. Route inside route should be called with prefix _ (underscore), so you can navigate to route Popular by Actions._popular().\n. No. You don't need import _ from 'underscore'. What I've mean is: every route in the parent route should prefix with underscore. For example, you have route content, which contains stream, popular, notification, and user routes. You can call these routes by Actions._stream(), Actions._popular(), etc.\nUmm it seems I use different version. Please wait for a moment. I'll test on my sample project.\nEdit:\nBy the way, what is react-native-router-flux version you used?\n. What the happen if you change Actions._popular() to:\nActions.route('content')\nActions.route('popular')\nis it working?\n. @masonwu311 Ummm, mine is working :/\nCan you post the content of LoginWrapper?\n. What the happen if you delete wrapRouter={true} on tabbar route?\nThen, you can try delete footer={TabBar} or change componentWillMount to componentDidMount. Let me know if you still get an error.\n. It seems you add wrapRouter={true} on login route. What the happen if you delete it?\n. I know this is an old issue. But I get navBar is rendered at the bottom of the page. Tested on latest version (3.36.0)\n. Hello @lwhiteley.\nI know this is an old issue, but I'm curious how you styling header. I get blank navbar too. Thanks! :beers: \n. It seems the problem is on my DrawerContainer.js. So I temporarily remove Drawer inside DrawerContainer.js, and now my DrawerContainer's render become:\n<DefaultRenderer\n            navigationState={navigationState.children[0]}\n            onNavigate={onNavigate}\n          />\nIt renders correctly without NAVBAR. It seems DefaultRenderer doesn't contain NavBar. Any idea to show it in my product scene? Thanks\n. Thanks @ronyv89. I still figure out what you'd mentioned. Was it like @drdeath113's code above? If yes, is there any way to show drawer in some scenes? Thanks :)\n. Hello @tuckerchapin, did you fix your problem on rendering issue?\n. Hey, thanks all men for the solutions. My case is changing icon or add number beside icon if product is added to cart. So I think access redux state or connect are make sense. Actually I have migrate from redux to mobx. I also use React native mobx as a RNRF wrapper. I am on vacation now, so I'll try it again after a few days. \n. Hello @parrunset,\ncan you give me a clue for semi-transparent navbar? I've set opacity on style, but I just got white navbar (not semi-transparent). Thanks. Ah it's work. Thanks :beers: . +1 have same issue. @LukeAvery92 Sometimes your solution shows incorrect current scene on tabbar. \n<Scene\n      key='tabs'\n      tabs\n      tabBarStyle={styles.tabBar}\n      tabBarSelectedItemStyle={styles.tabBarSelectedItem}\n      type='replace'\n    >\n        <Scene key='foo' ... />\n        <Scene key='bar' ... />\n</Scene>\nWhen I'm on foo scene, action.scene.name sometimes show tabs or foo. Is it a bug?. @ddolheguy where is Navigation variable come from?. Yes, I'm using hardwareBackPress event too. But it's not enough because my case is to trigger something before back button in device or navbar is pressed .. I get same issue when upgrade RN to 0.45.1, and \"react-native-experimental-navigation\": \"0.26.10\", doesn't work anymore. Please help. I already solve my issue. My issue was caused by conflict package. I delete that package & the error is gone. I'm forget what is the package name. Can @shizhenbin post package.json?. @willymulyana the link is broken. Remove Actions.create, just use () instead.\nconst scenes = (\n  <Scene key=\"drawer\" drawer contentComponent={myConnectedSideBarConponent}>\n    <Scene key=\"root\" hideNavBar hideTabBar>\n      <Scene key=\"mainScreen\" component={myConnectedMainScreenConponent} title=\"\" initial/>\n      <Scene key=\"homeScreen\" component={myConnectedHomeScreenConponent} title=\"\"/>      \n    </Scene>\n  </Scene>\n);\nThen convert <ConnectedApp  scenes={scenes} /> into <ConnectedApp>{scenes}</ConnectedApp>. ",
    "crysfel": "I see, that's means I can't do it for now. I would look for another way to it then. Thanks.\n. ",
    "idibidiart": "Babel 6 was introduced in 0.16 and broke several things. \n. ",
    "plougsgaard": "Try deleting all .babelrc files from node_modules except for the packager's config.\nFor example:\nfind node_modules -type f -name '.babelrc' | grep -v 'node_modules/react-native/packager/react-packager/.babelrc' | xargs rm\n. ",
    "shiverysea": "That works for me! Thanks! @plougsgaard \n. ",
    "cnjsstong": "Here! What should I do?\n. Already running. Any specific points that need attention?\n. One problem first...\nIt seems that you have not updated package.json for Example. It is still using 0.3.x version of react-native-router-flux .\n. ",
    "joshuarotenberg": ":+1: \n. I have a couple navbar styling requests, if you don't mind.\n\nHow can I change the statusBar to white? Also, any way to kill the borderbottom of the navbar? Can I just remove it or make it the same color as the nav. \n\nI would also like to remove the word \"home\" from the leftText and change all the text in Navbar to white. \nThanks in advance.\n. @alirezavalizade: you can make that change in xCode http://stackoverflow.com/a/35287747\n. @aksonov: I'm updated to the latest version and I've added hideTabBar={true} to my route inside the tabbar and it does not work. I can pull the route out of the tabbar component but then I lose navigation. Thoughts?\n. @aksonov or @emrosenf Could you give an example of rolling your own navbar and putting it in the header?\n. @emrosenf Thank you. \n. You can pass style into the router component:\n<Router footer={TabBar} showNavigationBar={false} style={{backgroundColor:'pink', borderTopWidth:1, borderTopColor: '#cccccc'}} >\n. :+1: \n. :+1: \n. navigationBarStyle is the attribute name. Try adding it to a router or schema.\n. :+1: my navbar is gone with the latest update also\n. @aksonov This appears to be fixed. THank You!\n. ",
    "emrosenf": "navigationBarStyle as a property of Schema is not working properly. It looks like the property is not passed to the ExNavigator. It would be good to make the other ExNavigator properties available too, for sake of completeness:  titleStyle, barButtonTextStyle, barButtonIconStyle\n. There's definitely something funky happening. Try using these Schemas with the example:\n<Schema name=\"modal\" navigationBarStyle={{backgroundColor: 'green'}} sceneConfig={Navigator.SceneConfigs.FloatFromBottom}/>\n            <Schema name=\"default\" navigationBarStyle={{backgroundColor: 'brown'}} sceneConfig={Navigator.SceneConfigs.FloatFromRight}/>\n            <Schema navigationBarStyle={{backgroundColor: 'blue'}}  name=\"withoutAnimation\"/>\n            <Schema navigationBarStyle={{backgroundColor: 'red'}}  name=\"tab\" type=\"switch\" icon={TabIcon} />\nThen go to the tab controller and switch to different tabs. How many of them are have red bars?\n. Nevermind, I misread what you had written. I see that the property goes with Router, not Schema. Sorry.\n. I think it's easy enough to implement a custom navigation bar, so it's perfectly reasonable not to fix this.\nIn my opinion, hiding the tab bar is a more important issue, because without it you cannot have a true modal experience.\n. @aksonov that is a very clever solution, and it works.\nIt wasn't obvious to me how to selectively push from the root navigator, so let me document here. My goal would be to submit a pull request documenting this for you later.\n1. The Route that you want to present modally should be a child of the root Router\n2. Use wrapRouter={true} on the Route.\nExample:\n<Router>\n          <Schema name=\"modal\" sceneConfig={Navigator.SceneConfigs.FloatFromBottom}/>\n          <Route name=\"myModal\" component={myModal} title=\"Modal\" schema=\"modal\" wrapRouter={true} />\n          <Route name=\"tabbar\">\n            <Router footer={TabBar}>\n              <Route name=\"tab1\" schema=\"tab\" title=\"Tab 1\" component={Tab1}/>\n            </Router>\n          </Route>\n        </Router>\nIf you are in the Tab1 controller and do an Actions.myModal(), myModal will be presented modally from the root navigator.\n. @joshuarotenberg sure, it's not as glamorous as you might think. Here's one of my screens\n<View style={styles.container}>\n    <AHNavBar title={this.props.title} leftTitle={\"\"} rightImage={require('../img/filter.png')}/>\n    <ScrollView style={[this.props.style, styles.scrollStyle]}>\n      ...\n    </ScrollView>\n  </View>\n. @andreasbhansen That is a cool option. The reason I don't use it is parameter passing. For example, I would have to write Actions.myPage({rightImage: require('rightImage.png')}) and define the properties of the navigation bar when I am calling the screen transition. That feels like an anti-pattern,\n. Fixed the typo, thanks\n. @aksonov Incredible work ... this is the declarative API everyone always wanted. Any thoughts on using Redux to store state instead of NavigationRootContainer so that all of the application state can be in one store?\n. I assume you've seen https://github.com/jlyman/RN-NavigationExperimental-Redux-Example ? It stores state with redux and calls the NavigationStateUtils functions directly. Seems to me like it would be better to have one store for everything, right?\n. They are aware of the issue and will refactor it soon. See https://github.com/facebook/react-native/issues/6579 \n. I took that from #56. Will you write up an example of how you are doing it?\n. Yes, look at index.js#L133\n. ",
    "rowellx68": "@aksonov tested it and I got it to work. I'll try and modify the example and do a simple writeup\n. The idea was to render the leftButtonImage when we are presented with the initial Scene. With the modification I did for https://github.com/aksonov/react-native-router-flux/pull/838, I get the results below.\n\nTapping the gear button takes us to another scene. The navbar keep the default behaviour of presenting a back button:\n\n. ",
    "igin": "Hmm ... I liked how this was done in react-native-redux-router ... there you could pass your own navbar component to every route. Would this be very hard to implement?\n. @andreasbhansen Yes I think you are right ... It will take a bit of redesign on my side but it should work. Are the routes passed to this header view as props? (sorry that may be off topic for this issue)\n. This doesn't seem to be a problem with this package. Why did you reopen the issue?\n. ",
    "joelcloralt": "@joshuarotenberg were you able to set the back button style to white? I'm passing backButtonBarStyle as a prop to the route and the router and it doesn't do anything on either. \n. I can confirm this works. The key thing to notice is that the icon takes tintColor and the text takes color as styles. So for anyone else wanting to customize the NavBar Colors here is what I have:\nUntil next release, modify ExRouter.js with this commit: https://github.com/aksonov/react-native-router-flux/commit/b5b9b2f8a85285695869e0d21595293304f793fc\n<Router navigationBarStyle={styles.navBar} titleStyle={styles.navBarTitle} barButtonTextStyle={styles.barButtonTextStyle} barButtonIconStyle={styles.barButtonIconStyle}>\n //some routes...<Route .... /> \n</Router>\nAnd styles:\nnavBar: {\n    backgroundColor:'#0D47A1',\n},\nnavBarTitle:{\n    color:'#FFFFFF'\n},\nbarButtonTextStyle:{\n    color:'#FFFFFF'\n},\nbarButtonIconStyle:{\n    tintColor:'rgb(255,255,255)'\n},\n. I had the same issue but I solved it with action-store instead.\nMy initial route is set to Home.js, so in there I do the check:\nvar authenticationActions   = require('../authentication/authenticationActions');\n....\nmixins: [Reflux.listenTo(authenticationStore, 'onLoggedInStatus')],\ncomponentDidMount: function(){\n  authenticationActions.isLoggedIn();\n},\nonLoggedInStatus: function(event, status){  \n  if (!status) {\n    //not logged in, redirect\n    routerActions.login();\n  } else {\n    //logged in, do your thing for this component\n  }\n},\nrender: function() {\n  return(\n    //here you can have a \"loading view\"\n    ....\n  )\n}\nIn the authenticationStore:\nisLoggedIn: function(){\n  //do your check to see if you have a user stored and return logged in status\n  var status = true;\n  this.trigger('loggedInStatus', status);\n},\nMaybe you can turn this into a mixin and add it to the routes you want to protect behind authentication.\n. This happens to me with 2.0.9. I was able to reproduce with Example. \nfor me, It happens on the second tab and not the first one.\n\n. yep\n```\n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n{console.log(\"onPop is called!\"); return true} }>\n              \n\n\n\n\n\n{console.log(\"onPop is called!\"); return true} }>\n            \n\n\n\n\n\n\n\n\n\n\n\n``\n. I saw that and updated my package.json before doing anything. I recorded the video with 2.0.9\"react-native-router-flux\": \"^2.0.9\"`\nYeah TabView demo only has a back button if the name of the tab is tab1 \n{this.props.name === \"tab1_1\" && ....\nI tried to modify it and noticed the name of tab2 changed to an underscore?\nThis is TabView's render:\n```\nreturn (\n            \nTab {this.props.title}\n                {this.props.name === \"tab1_1\" &&\n                next screen for tab1_1\n                }\n                {this.props.name === \"_tab2_1\" &&\n                next screen for tab2_1\n                }\n            <Button onPress={Actions.pop}>Back</Button>\n\n        </View>\n    );\n\n```\nIt was the only way to display the next button when browsing tab2 but the action points to tab2_2 which is the right name.\n. :( for some reason onPop() is not being called on that second tab's back button. You can see that in the gif I posted with the console.log.\n. Any luck here? I haven't been able to figure it out either. I did notice that on the second tab, when calling the action to push to the next route, it actually triggers onJump().\nSo the same route structure is triggering push() on tab1 and jump() on tab2. \n. @aksonov It works for me. Thanks for fixing this!\n. Fixed: My mistake was to have initial={true} in the schema instead of the <Route>. Seems like it was s thing of how it used to be ;) \n. @aksonov not sure. #110 describes: \"when tab1_1-> tab1_2, then press back to tab1_1, it will pop to launch page.\"... this is still within tab_1.\nWhat I'm describing is pressing back in the nav bar after having switched to another tab (tab_2, tab_3, etc.) and coming back to tab_1. \nAs if the route stack is lost when you switch between tabs, so when you come back to the tab you left and press back in the navigation it doesn't have anything in the stack to pop to.\n. I expanded my routes by embedding a navigation bar inside the tab_2 as well and now the back button on tab_2 returns the same error without switching tabs at all. \n```\n \n\n<Route name=\"tabbar\" >\n    <Router footer={TabBar} showNavigationBar={false} style={styles.tabbar}>\n        <Route name=\"tab1\" schema=\"tab\" title=\"Me\" >\n            <Router navigationBarStyle={[styles.navBar]} titleStyle={styles.navBarTitle} backButtonBarStyle={styles.navBarTitle}>\n                <Route initial={true} name=\"tab1_1\" component={meHome} title=\"Home\" sceneStyle={styles.navBar}/>\n                <Route name=\"mediaForCountry\" component={mediaForCountry} title=\"\"/>\n                <Route name=\"mediaDetail\" component={mediaDetail} title=\"\"/>\n            </Router>\n        </Route>\n        <Route name=\"tab2\" schema=\"tab\" title=\"My Friends\" >\n          <Router navigationBarStyle={[styles.navBar]} titleStyle={styles.navBarTitle} barButtonTextStyle={styles.barButtonTextStyle} barButtonIconStyle={styles.barButtonIconStyle} >\n              <Route name=\"myfriends\" title=\"My Friends\" component={myFriends} />\n              <Route name=\"mediaForCountry\" component={mediaForCountry} title=\"\"  />\n              <Route name=\"friendsMediaDetail\" component={mediaDetail} title=\"\" />\n          </Router>\n        </Route>\n        <Route name=\"tab3\" schema=\"tab\" title=\"Search\" component={TabView} />\n    </Router>\n</Route>\n\n\n```\n\n. I tried with Example but was not able to reproduce. However, I found the problem. \ninitial={true} can't be set to a tab within a tab bar if there are other routers outside of where the initial route is.  Makes sense now that I've fixed though. Logic is hard ;)\nExample: you can't have:\n```\n//Removed some attributes for clarity....\n //Main Router\n   \n\n\n //Router with tabs\n        \n //Navigation bar for tab1\n              //intial can't be here\n             \n\n\n\n //Navigation bar for tab2\n            \n\n\n\n\n  //end of route tabbar\n\n\n\n\n\n\n```\ninitial={true} must be a route inside the main router. I just created a \"Launch\" component that does the login status logic and redirects accordingly. \n. Just make sure the initial route is at the root level inside the outermost <Router> and not nested in a second <Router>\nIf that doesn't solve it, can you post your entire router? it works for me. \n. @DVassilev I was having the same issue but I was able to assemble the release by deleting the /android/app/build directory and letting it create the whole thing again. \nI also changed the line that calls that icon here: https://github.com/aksonov/react-native-experimental-navigation/issues/1#issuecomment-235678427\n. ",
    "alirezavalizade": "how to change color of clock and wifi status and i dont know what is that name... :)\n\n<Scene key=\"app\" navigationBarStyle={{backgroundColor: '#1e2226'}}  titleStyle={{color : \"#FFF\"}}>\n    <Scene  key=\"welcome\" component={LauchContainer} title=\"Welcome\" />\n    <Scene key=\"counter\" component={CounterContainer} title=\"dsfdsfdsf\" />\n  </Scene>\n. how to change color of Backbutton in react native router flux ?\n\nIm try backButtonBarStyle but not working...i cant find any solution.tnx for your helps\n<Scene key=\"app\"  navigationBarStyle={{backgroundColor: '#1e2226',borderBottomColor:\"#1e2226\"}}  titleStyle={{color : \"#FFF\"}}>\n    <Scene  key=\"welcome\" component={LauchContainer} title=\"Welcome\" />\n    <Scene key=\"ProductDetail\"  backButtonBarStyle={{color : \"#FFF\"}} component={ProductDetail} />\n  </Scene>\n. how to change color of clock and wifi status and i dont know what is that name... :)\n\n<Scene key=\"app\" navigationBarStyle={{backgroundColor: '#1e2226'}}  titleStyle={{color : \"#FFF\"}}>\n    <Scene  key=\"welcome\" component={LauchContainer} title=\"Welcome\" />\n    <Scene key=\"counter\" component={CounterContainer} title=\"dsfdsfdsf\" />\n  </Scene>\n. how to change color of Backbutton in react native router flux ? \n\nIm try backButtonBarStyle but not working...i cant find any solution.tnx for your helps\n<Scene key=\"app\"  navigationBarStyle={{backgroundColor: '#1e2226',borderBottomColor:\"#1e2226\"}}  titleStyle={{color : \"#FFF\"}}>\n    <Scene  key=\"welcome\" component={LauchContainer} title=\"Welcome\" />\n    <Scene key=\"ProductDetail\"  backButtonBarStyle={{color : \"#FFF\"}} component={ProductDetail} />\n  </Scene>\n. woww tnx! it's worked perfect :) @wildQueequeg \n. @danieladias \nthis is my drawer component,i hope it can help you : \n```\nclass NavigationDrawer extends React.Component {\ncomponentDidMount() {\n    Actions.refresh({key: 'drawer', ref: this.refs.navigation});\n}\n\nrender() {\n    const state = this.props.navigationState;\n    const children = state.children;\n\n    return (\n        <Drawer\n            styles={drawerStyles}\n            ref=\"navigation\"\n            type=\"displace\"\n            // onOpen={() => Actions.refresh({ key:  'drawer', open: true })}\n            // onClose={() => Actions.refresh({ key: 'drawer', open: false })}\n            content={<TabView />}\n            tapToClose\n            openDrawerOffset={0.2}\n            panCloseMask={0.2}\n            negotiatePan\n            tweenHandler={(ratio) => ({\n            main: { opacity: Math.max(0.54, 1 - ratio) }\n    })}\n        >\n            <DefaultRenderer navigationState={children[0]} onNavigate={this.props.onNavigate}/>\n        </Drawer>\n    );\n}\n\n}\nand this is my Scene\n \n /another  Scene/\n\n```\n. ",
    "berkayk": "Use barButtonTextStyle and barButtonIconStyle such as the following styles.\nbarButtonTextStyle: {\n    color:'#F16B6F'\n},\nbarButtonIconStyle: {\n    tintColor:'#F16B6F'\n},\n. renderLeftButton={() => <MenuButton press={() => { Actions.refresh({key: \"drawer\", open: true})}} />}\nI am not sure if this is the best way to do but it works. \"drawer\" is the key of the main container that has Drawer as the component. If there is a better way, please share with me :)\n. Can you give a short example?\n. Thanks @wildQueequeg It worked! I also understood how to use refs in react-native-router-flux.\nCheers :+1: \n. How can you use MenuActions inside YourComponent?\n. ",
    "fostertime": "@berkayk that didn't work for me. I had to use backButtonTextStyle in order to change the text color.\n. How would one remove, what looks like about 20 pixels of padding, on the top of the NavBar if your app does not display the Status Bar? I've tried top: -10, and marginTop: 0, etc. But it doesn't seem to correctly alignItems (back button and title) to the center of the row.\n. I fought this issue for 2 days... turns out that clone does not work correctly as described above, cloning a scene into a tab, if the root scene is wrapped with a modal component. Has anyone figured out a workaround for this? Or am I doing something wrong?\n```javascript\n\n\n\n    <Scene clone key='profile' component={Profile} title='Profile' hideNavBar={false} hideTabBar={false} />\n\n    <Scene key='main' tabs>\n        <Scene key='tab_1' title='One' icon={TabIcon}>\n            <Scene key='one' component={One} title='One' />\n        </Scene>\n        <Scene key='tab_2' title='Two' icon={TabIcon}>\n            <Scene key='two' component={Two} title='Two' />\n        </Scene>\n        <Scene key='tab_3' title='Three' icon={TabIcon}>\n            <Scene key='three' component={Three} title='Three' />\n        </Scene>\n        <Scene key='tab_4' title='Four' icon={TabIcon}>\n            <Scene key='four' component={Four} title='Four' />\n        </Scene>\n    </Scene>\n</Scene>\n\n<Scene key='modalOverlay' component={ModalOverlay} title='Overlay' hide />\n\n\n```\n. Based on this note from @aksonov from July:\n\nI've added Actions.get(ACTION_NAME) to receive scene props with ACTION_NAME. This way you could store everything during displaying of that scene including refs using Actions.refresh({key:ACTION_NAME, ref:this.refs.REF_NAME}) then use Actions.get(ACTION_NAME).ref from any other action\n\nIs this a solution to resolve the issue of not being able to pop() the modal? I am having the same issue as described above, where the first view of the modal works, but any other attempts to load the modal causes a duplicate key error. Trying to figure out how to pop the modal, when hiding it.. @alizbazar You can see in the Examples, EchoView.js (https://github.com/aksonov/react-native-router-flux/blob/master/Example/components/EchoView.js) is set as a clone when referenced in the Router in Example.js (https://github.com/aksonov/react-native-router-flux/blob/master/Example/Example.js). In the most simplistic terms, a cloned Scene accepts props and is simply cloned each time it is referenced via Actions.sceneName() ... \n. Actually, I forgot to close this ticket. Because the solution was that the Scene that is being cloned needed to be separate from itself. Meaning, don't clone->clone->clone->clone ... instead, do parentScene->clone->parentScene->clone->parentScene->clone that way the router stack RESETs when setting type: ActionConst.RESET when returning to parentScene, which then clones its child. That sounded a lot more clear in my head... :) Let me know if thats confusing! \n. I think router-flux makes it extremely easy to do what you want to do. Hit me up  if you run into any issues and I'll do my best to help! Going to close this ticket for now. \n. ",
    "ghost": "Be sure you're looking at the API_CONFIGURATION.md specific to your installed release, e.g.\nhttps://github.com/aksonov/react-native-router-flux/blob/3.30.1/docs/API_CONFIGURATION.md\n. @robtg4 depends on your version. check API docs\n.  See API docs as mentioned above. Yeah. just some hint, please. I just don't know how to combine that with a state. Redux pass it in props to the root component, but it's a router, how does the info get passed down to actual 'screen' down there? Lost here (sorry n00b atm, just starting w/ redux).\n. I have read though the that page already, thanks. I understood how to connect things there, but there, root (in App.js) was connected, and it was passed state to select function, where it selected relevant subsets and used then directly in the render JSX in the components.\nBut here, those components are not specified at all. There are only routes. I do not understand how the data gets passed to the 'screen' components themselves (or do I add it to the Route and it gets passed down to the component?)\n. Ok, I probably understand now. I use Provider to specify store for an app, and then I need to connect every single 'visual' component, adding specific select function for each of it (so every one select its own relevant subset), and if I have hierarachy of visual components, then I only connect the roots of the trees in the visual forest (and passing the rest down via props as shown in other redux-react tutorials). Am I right @aksonov?\n. Thanks. ;-)\n. I was asking my original question exactly because I had similar feeling. I got the answer that, yes, the each \"root\" visual component (the first the is visual in the tree, IOW its parent is route) should be connected. That shouldn't be that much components, and I see added value in the fact that each connect call will use its own select function.\nBut yes, I had the impression that actually, the root router is connected and data is somehow passed down.\nThe problem I see here is, that unnecessary data may be computed / processed - the whole route tree must process the whole store (as the whole store will be undoubtedly connect to the root router) and subsets selected on the way down. As I am new in flux-like thing and react as well, in fact, I don't know if this case can be optimized good enough (while the connect(selectFn) probably can, as it is the core redux principle).\nJacob Patenaude wrote:\n\nWould you suggest just connecting all subcomponents then? To me that \nseems \nto go against redux but you would consider every route to be a \ncontainer?\n\u2014\nReply to this email directly or view it on GitHub \nhttps://github.com/aksonov/react-native-router-flux/issues/56#issuecomment-164490715.\n. I am still afraid if ir does not mean too much processing and if some wrapper which is connected should not pass these to the visual component (which can be its required child). Something like  ({foo: state.foo, bar: state.baz.bar})}>..., which would pass foo and bar to VisualComponent props in addition to quux specified explicitly and renders the connected version of itself using the injected select function.\n\nBut maybe connect itself is not very magical and passing down substate in props just does the same... I don't know.\nJacob Patenaude wrote:\n\nThat would be a great compromise! Allows scene components to be \noblivious to redux but still adds selective behaviour\n+1\n\u2014\nReply to this email directly or view it on GitHub \nhttps://github.com/aksonov/react-native-router-flux/issues/56#issuecomment-164502456.\n. Oh wait, I happened to come up with interesting idea. Maybe even brilliant one ;-).\nWhat if instead component={Foo} I used component={connect(selectFnForFoo)(Foo)}. Isn't it all that's needed?\n. But it does what @mangogogos wants, in the sense, the visual components can stay oblivious to Redux, as connect call is done externally, in the router, not in component definition.\n\nFrom my PoV the syntax is only just an bit more complicated. Hm. I'll try that (I even do not fear to put select functions inline - I will see what is selected directly at the right place).\n. I personally do it in one file, I did not use nesting yet. To keep components decoupled, I also tend to add next={foo => Actions.bar({foo:foo})} like props to the route that gets propagated to the component, so I can easily rewire the order in which components are, if the component is \"UNIXy\" or \"middlewarey\" enough, so the \"next screen\" is not hardwired.\n. Contrary to tutorials, there isn't connect call in export clause of a component. Bare class is exported. The connect call is in Route itself, like component={connect(state => ({...subset of state...})(ComponentClass)}. And it is juat mattwr of style if you inline the function as above, or declare it first and juat reference it by name.\n. @aksonov I don't understand what you want to do from your description... I can just point on two things, from the partial try to understand:\n1. You are redux/flux agnostic now, which is nice thing; is the thing you are thinking of gonna break it?\n2. I use es6 import / export (with help of RN built-in babel), which is (syntactically) static and does not allow to monkeypatch what is exported. Won't your approach rely on that?\n. It does not work unless you specify onLeft.\n. Cannot check now, still using ver.1 and ver.2 breaks all the navbar styling... will take a while to check if this works.\n. Works.\n. leftTitle\nErick Arroyo wrote:\n\nWhat should we use then? Can we add the functionality on the \ndocumentation? What should we use to custom the backButton or de \nnextButton?\n\u2014\nReply to this email directly or view it on GitHub \nhttps://github.com/aksonov/react-native-router-flux/issues/127#issuecomment-175590887.\n. We used it fine inside Routes, not inside Router.\n. This manifest itself in 1.x. Trying if 2.x will show something better.\n. Same for 2.x, styles are ignored in Route.\n. Was it changed from Route to Router in 1.x -> 2.x transition (eg. it was meant for Route in 1.x)?\n. Eh... that was not what I asked.\n. I would like to know if those style props were actually meant for Route in 1.x, so we did our code right when we used 1.x, and 1.x -> 2.x was the time when they were moved to Router.\n. So that when moving to 2.x, it is supposed to take styles used inside Route and move them into Router; or we just did it wrong from beginning and it just manifests now...\n. Ad \"It is not only change. Now the component uses exNavigator component for navigation\": You always used exNavigator for navigation, didn't you?\n. I did not start that early, so it was exNavigator as far as I can remember.\n. Ad \"There is small probability that recent changes broke something, please try version 2.0.8 for example.\": I don't know if anything is actually broken in this issue. I need to get an answer to my question: \"Were navigationBarStyle etc. meant to be used in Route in 1.x and this was changed in 1.x -> 2.x transition so they are now meant to be used in Router?\".\n. If it was so (1.x way was \"put xxxStyle in Route\", 2.x is \"put xxxStyle in Router\"), then this is non-issue. But I still did not hear from you whether it is yes or no.\n. @aksonov Maybe I solved the mystery. One of the Routes with style props, the one that appeared first in chronological order, had wrapRouter={true}. Could it be so that both 1.x and 2.x should actually use xxxStyle props in Router but b/c of wrapRouter it was actually inherited by wrapped Router from Route's props?\n. Styles used:\n\n``` js\nexport const {width,height} = Dimensions.get('window');\nexport const actionBackgroundColor = '#1faaff';\nexport const actionTextColor = '#fff';\nexport const navBackgroundColor = '#333';\nexport const baseMarginLeft = 15;\nexport const baseMarginRight = 15;\nexport const baseMarginTop = 10;\nexport const baseMargin = 5;\nexport const baseFont = 'Roboto';\nexport default StyleSheet.create({\n    // ...\n    navBarStyle: {\n        backgroundColor: navBackgroundColor,\n        borderColor: navBackgroundColor,\n        borderWidth: 1,\n        opacity: 0.9\n    },\n    navTitleStyle: {\n        color: actionTextColor,\n        fontFamily: baseFont,\n        fontWeight: 'bold',\n        fontSize: 20\n    },\n    navBarFix: {\n        paddingTop: 56\n    },\n    backIcon: {\n        tintColor: actionTextColor,\n        position: 'relative',\n        top: 3\n    }\n});\n. The 1.x version showed thing properly, the 2.x is not. AFAICT, exNavigator itself wasn't bumped. So this should be the issue of r-n-router-flux.\n. I just checked. Both 1.x and 2.x used \"^0.3.5\" as version of exNavigator dependency.\n. I cannot, it is proprietary. I can send the render methods that use 1.x and 2.x (they must have been changed), using the styles from before.\n. js\nimport React, {Component, View, Text, Navigator, StyleSheet} from 'react-native';\n// ...\nimport styles from './screens/components/styles'; // the file pasted above\n// ...\nimport strings from './strings';\n```\nrender for 1.x:\n``` js\n    render () {\n        return \n ({\n                installation: state.installation\n            }))(Login)} next={() => Actions.welcome()}/>\n             ({\n                tasks: state.backgroundTasks\n            }))(WelcomeScreen)} next={appLoadSequence}/>\n            \n ({\n                offers: state.offers\n            }))(OfferList)} wrapRouter={true} title={strings.offerList} sceneStyle={styles.navBarFix}/>\n            \n ({\n                uc: state.installation.uc\n            }))(OfferWebView)}/>\n            \n\n        <Schema name=\"default\" sceneConfig={Navigator.SceneConfigs.FloatFromRight}/>\n        <Schema name=\"system\" type=\"replace\"/>\n        <Schema name=\"modal\" sceneConfig={Navigator.SceneConfigs.FloatFromBottom}/>\n    </Router>;\n}\n\n```\nrender for 2.x:\n``` js\n    render () {\n        return \n ({\n                installation: state.installation\n            }))(Login)} next={() => Actions.welcome()}/>\n             ({\n                tasks: state.backgroundTasks\n            }))(WelcomeScreen)} next={appLoadSequence}/>\n            \n\n\n ({\n                        offers: state.offers\n                    }))(OfferList)} title={strings.offerList}/>\n                    \n ({\n                        uc: state.installation.uc\n                    }))(OfferWebView)}/>\n                \n\n\n\n        <Schema name=\"default\" sceneConfig={Navigator.SceneConfigs.FloatFromRight}/>\n        <Schema name=\"system\" type=\"replace\"/>\n        <Schema name=\"modal\" sceneConfig={Navigator.SceneConfigs.FloatFromBottom}/>\n    </Router>;\n}\n\n``\n. offerList, offer and webPage show the navbar nicely, with centered text in 1.x; but in 2.x, it is in the bottom.\n.initialRoutes=[...list of strings...]` is not working any more. It awaits list of objects.\n. When runing on actual Android device that is\nplugged into usb you need to run the following\nfrom the command line.\n$ react-native start\n$ adb reverse tcp:8081 tcp:8081\n$ react-native run-android\nturn off \"JS Dev Mode\nYou will want to make sure that you turn off \"JS Dev Mode,\" or else it\nwill run painfully slow on device.\nAfter running \"react-native run-android\" you should \"shake\" your device\nto bring up the menu. Select \"Dev Settings\" then uncheck \"JS Dev Mode.\"\nAfter that run \"react-native run-android\" again and it should be more \nperformant, at least I hope for you :)\n. I've got same problem - replace not working, component gets created, render is called, but blank screen is shown. Used 23, now 24, so that may be an issue. Will wait until version 3 will wortk fine.\n. @rseemann  popToParent() works at this time ? . @rseemann Thanks for this information \ud83d\udc4d . I'm having the same issue right now\n. I just figured it out, you have to include a fontWeight with it as well, if you set it to fontWeight: 'normal' along with fontWeight: 'YOUR FONT', that worked for me.\n. I'm having the same issue\n. Thanks for the tip, I only recently realized that runAfterInterractions did work but that it took a very long time before it actually ran the code after each react-native-router-flux transition, although nothing seems to be animating in the mean time.  I have not investigated yet but I don't really play with animations in the rest of my code so I suspect react-native-router-flux to be doing some invisible animation stuff. However this is not the initial point of this issue, so yes, you can close it ! Thanks again\n. I will try that and let you know if it worked \n. So I tried the above, and here is the issue that I am having.\nIf I use the navigationDrawer to navigate and I go from Scene 1 to Scene 2, it 'jumps' or 'resets' or 'replaces', depending on whatever I needed, however, Scene 2 to Scene 3 maybe be 'push'.\nNavigation Drawer Scenes:\nScene 1 to Scene 2 via jump because of tabs and the navigation drawer\nScene 2 to Scene 3 via push because of Actions.Scene3({type: 'push'}), this doesn't work. Because Scene 3 is also in the navigation Drawer. And I want to be able to use Scene 3 in both the navigation drawer AND to be able to push onto a different scene. Since I will be reusing it.\n. Nevermind, I figured out a solution.\n. This is a little rough, but it gets the job done, while maintaining the tabs, which is what I wanted. I put in all the views that were going to be pushed and added the clone={true} attribute, which clones it and you can push it on to whatever view you want to stack it on to.\nSo you would call it like this, Actions.test({type: 'push'}); from which ever view you're pushing from\n```\n              \n\n\n\n\n\n\n\n                    <Scene\n                        key=\"cloneHolders\"\n                    >\n                        <Scene\n                            clone={true}\n                            backButtonImage={require('../images/viewBackArrow.png')}\n                            navigationBarStyle={styles.navBar}\n                            titleStyle={styles.title}\n                            key=\"oprofile\"\n                            component={Profile}\n                            title=\"PROFILE\"\n\n                            rightButtonImage={null}\n                            onRight={null}\n                            />\n                        <Scene\n                            clone={true}\n                            backButtonImage={require('../images/viewBackArrow.png')}\n                            navigationBarStyle={styles.navBar}\n                            titleStyle={styles.title}\n                            key=\"test\"\n                            component={test}\n                            title=\"test\"\n                            />\n                        <Scene\n                            clone={true}\n                            backButtonImage={require('../images/viewBackArrow.png')}\n                            navigationBarStyle={styles.navBar}\n                            titleStyle={styles.title}\n                            key=\"topic\"\n                            component={Topic}\n                            title=\"TOPIC\"\n                            />\n                        <Scene\n                            clone={true}\n                            backButtonImage={require('../images/viewBackArrow.png')}\n                            navigationBarStyle={styles.navBar}\n                            titleStyle={styles.title}\n                            key=\"post\"\n                            component={Post}\n                            title=\"POST\"\n                            />\n                    </Scene>\n                </Scene>\n            </Scene>\n        </Router>\n\n```\n. How is your router with the scenes setup? If you have a few things like embedded routers, reseting goes awol.. Let's say, saying you have the same problem resetting is all fine in all. But to get some help to fix this problem. Posting some example code of routers and how you are resetting would provide more scope to be able to give help on.. In your first scene inside of scene 'A' can you add initial={true} and see what is does.\nSo your scenes from above provided looks like.\n```\n\n\n\n\n```. Are you calling the reset from Scene A or Scene first?\n. If you are calling the reset from scene first. You could try to wrap the inner scenes ie, scene first in a router. I know that this library is not meant to have this type of formatting with embedded routers, but until we can solve this problem, this could be a temporary by pass for now.\n```\n\n\n\n\n\n\n```\n. I would say this is not relevant to v4 as the bare bones on the library has\nchanged. So sorry bo. This was oblver a year ago. Think before posting in\nclosed issues. Thanks\nOn 8 Feb. 2018 7:28 am, \"Matt Kennedy\" notifications@github.com wrote:\n\nDid anyone have a successful workaround or solution for this?\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/aksonov/react-native-router-flux/issues/1110#issuecomment-363864001,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AXs077creilYjHYdUnrjzVOhlBYuxNN2ks5tSes6gaJpZM4JuTVT\n.\n. @jsdario any way to increase that bounty to 1000 rep? That might draw more eyes.. I was afraid of that. Any chance on switching to MIT?  There are probably hundreds of apps going into the store right now which break the licensing policy.\n. MIT is permissive and the copyright notice only needs to go on the source code, not necessarily called out in binary distributions. I give credit where credit is due, but creating an in-app about page  in the binary distribution with BSD licenses doesn't feel professional.\n. Not to pick apart language, but where fallacies are concerned:\nFacebook does it, Whatsapp does it. Chrome does it.\n\nArgumentum ad populum\n\nBut how many people do you think are going to press on a \"licenses\" link inside your \"about\" page, just to see a long list of project you're using\n\nDenying the antecedent\n\nOnce enough people are using a library, and if they're breaking licensing requirements any savvy attorney could do the work for them IMO.\n. @zxcpoiu MIT is the de facto open source license now. It's short and sweet. Use anything else and it only serves to confuse and discourage use.\n. @aksonov @charpeni thanks a million!\n. I'm having this issue as well, but with a Webview\n. Same problem here, component life cycle methods are not being called when quickly navigating between scenes.\n. I am facing the same issues as well.\n. I have same issue which is something like this issue.\nWould you please help me?\n. Problem existed at the keyboard/chair interface layer. Has been resolved.. type={ActionConst.RESET} in Scene. Predefined rules set around the devices screen size, and/or is iPad or not. Then they set the scene based on those factors. Is what I would do. Could be other ways tho.. Just a generic typo error, @aksonov.. This problem is not due to this library, your canvas component is not a valid component. Take it out and your app should work. For your problem around the canvas component, best to post onto stackoverflow. But what advice I can give you. In React native you cannot use var canvas = document.getElementById(\"container\");, so basically the canvas code you wrote will never work in this context. Please look up some tutorials on youtube or on the web, there are some good ones out there. @aksonov Please close.. @aksonov Some clean up, this can be closed.. For help topics its best to ask these sort of question on stackoverflow as there are allot more people there to help you out. But anyway, from the jist of your question you the views that you are wanting to be able accessed from all 3 tabs must still be inside the tablayout, ie meaning you can still see the tabbar if so the way i would personally do it would be having:\n<Scene key={'tab1'} initial={true} component={Tab1}>\n                    <Scene key={'tab1A'} component={TabA}/>\n                    <Scene key={'tab1B'} component={TabB}/>\n                    <Scene key={'tab1C'} component={TabC}/>\n                </Scene>\n                <Scene key={'tab2'} component={Tab1}>\n                    <Scene key={'tab2A'} component={TabA}/>\n                    <Scene key={'tab2B'} component={TabB}/>\n                    <Scene key={'tab2C'} component={TabC}/>\n                </Scene>\n                <Scene key={'tab3'} component={Tab1}>\n                    <Scene key={'tab3A'} component={TabA}/>\n                    <Scene key={'tab3B'} component={TabB}/>\n                    <Scene key={'tab3C'} component={TabC}/>\n                </Scene>\nWhile you are having to duplicate the scene, in which there is probably a better way to do so. You reuse the components forA B and C.  But with different keys to call from each tab.\nLike i said the way i would do it and there are probably better ways to do it.. Is not the purpose of this library, you have to use a custom bridge or another library to do this.\nHave a google search for RN orientation or go onto stack overflow.. Probably more code and more explanation (details) of what you are wanting. I know that your english isn't the best, but try your best.. You are incorrectly using the actions command. Rather than Actions.HomeScreen; It should be Actions.HomeScreen(); <<< Add in the () at the end. And also the extra pair of curly braces inside the if statement are not needed. Plus you could use a Promise instead of async function if you wanted too.\nThats what i think is you problem please let me know if you have any more problems.. Have you tried to set the component to be exported as default so...export default class Plus also can you show where you have linked this file to your index.ios.js and index.android.js files.. Set initial={true} on the component you want to goto. Also do this on the login scene if you want that one to come first.. @jigarmistry can you provide some basic example.\n . Having the same issue using react-native-router-flux@3.35.0. type={ActionConst.RESET} in Scene. type={ActionConst.RESET} in Scene. I am encountering the same issue and not sure how to resolve it. I am seeing the issue when I have deeply nested Scenes / Stacks, specifically at the settings stack.\n```\n export default Actions.create(\n   ({\n      screenInterpolator: CardStackStyleInterpolator.forFadeFromBottomAndroid,\n    })}>\n<Scene hideNavBar key=\"landing\" component={Landing} />\n\n<Scene key=\"auth\">\n  <Scene hideNavBar key=\"signup\" component={SignUp} />\n  <Scene hideNavBar key=\"login\" component={Login} />\n</Scene>\n\n<Stack key=\"main\" headerMode=\"screen\">\n\n  <Scene initial key=\"feed\" component={Feed} title=\"App Title\" {...feedSceneProps} />\n\n  <Stack key=\"settings\">\n\n    <Scene\n      initial\n      key=\"settingsList\"\n      title=\"Settings\"\n      component={Settings}\n      {...settingsSceneProps}\n    />\n\n    <Scene key=\"settingsEmail\" title=\"Update Email\" component={Email} {...settingsSceneProps} />\n\n    <Scene\n      key=\"settingsPassword\"\n      title=\"Change Password\"\n      component={Password}\n      {...settingsSceneProps}\n    />\n\n  </Stack>\n\n</Stack>\n\n,\n);\n``. @joel611 Thanks. That worked out.. I just had to replace myActionConst.RESETwithActionConst.REPLACE`\n. Hello,\nIs this still a pending issue? \nI've noticed my app is crashing in release mode but works fine in debug?\nThanks very much!. Hi @daviscabral \nThanks, I was able to address the issue by doing the following \nhttps://stackoverflow.com/questions/47603791/react-native-undefined-is-not-an-object-evaluating-react2-proptypes-string/47603838#47603838\nUsing react-codemon, run on your projects directory\njscodeshift -t react-codemod/transforms/React-PropTypes-to-prop-types.js myapp/\nThis will resolve updating proptypes for your source code and any node modules.\nRe-installing node modules will require running the command again it seems.\nPlease follow instructions over at https://github.com/reactjs/react-codemod but essentially once you've installed jscodeshift, and you've downloaded the react-codemod files as above for the various commands such as transforming React.propTypes to PropTypes and so on.\nmyapp/ here corresponds to my entire application project directory so the entire react-native project.\nSecondly, consider the project dependencies you're using. For example in my case I was using react-native-router-flux at version 0.38.0, the app would work in debug mode, but crash in release. I attempted to upgrade to the latest beta version of 4.0.0-beta.24 and the problem was resolved.. +1. I have the same issue with this code:-\nreact-native-router-flux: 4.0.0-beta.22\nreact-native: 0.49.3\n```\n Actions.pop()}\n    sceneStyle={styles.sceneStyle}\n\n<Scene key=\"root\">\n  <Scene\n    key=\"scene1\"\n    component={Scene1}\n    title=\"Scene 1\"\n    navigationBarStyle={styles.navigationBarStyle}\n    navBarButtonColor={styles.navBarButtonColor}\n    titleStyle={styles.titleStyle}\n    initial\n  />\n  <Drawer\n    hideNavBar\n    key=\"dashboard\"\n    drawerImage={Images.menuIcon}\n    contentComponent={Navigation}\n    drawerWidth={styles.drawerWidth}\n\n    <Scene\n      key=\"dashboard\"\n      component={Dashboard}\n      title={strings.dashboard}\n      navigationBarStyle={styles.navigationBarStyle}\n      navBarButtonColor={styles.navBarButtonColor}\n      titleStyle={styles.titleStyle}\n      renderRightButton={renderNotificationButton}\n    />\n  </Drawer>\n</Scene>\n\n\n\n. @Anandks1993 I have react-navigation@1.0.0-beta.22 version in package-lock.json. @Anandks1993 Can you tell me why this issue is coming in react-navigation@1.0.0-beta.22?\nin previous days it's working fine in this version why?. @Anandks1993 thanks for the solution.. I have the same issue with this code:-\nreact-native-router-flux: 4.0.0-beta.22\nreact-native: 0.49.3\n Actions.pop()}\n    sceneStyle={styles.sceneStyle}\n\n<Scene key=\"root\">\n  <Scene\n    key=\"scene1\"\n    component={Scene1}\n    title=\"Scene 1\"\n    navigationBarStyle={styles.navigationBarStyle}\n    navBarButtonColor={styles.navBarButtonColor}\n    titleStyle={styles.titleStyle}\n    initial\n  />\n  <Drawer\n    hideNavBar\n    key=\"dashboard\"\n    drawerImage={Images.menuIcon}\n    contentComponent={Navigation}\n    drawerWidth={styles.drawerWidth}\n\n    <Scene\n      key=\"dashboard\"\n      component={Dashboard}\n      title={strings.dashboard}\n      navigationBarStyle={styles.navigationBarStyle}\n      navBarButtonColor={styles.navBarButtonColor}\n      titleStyle={styles.titleStyle}\n      renderRightButton={renderNotificationButton}\n    />\n  </Drawer>\n</Scene>\n\n\n\n```. Any suggestions on this?. When I returned, I immediately entered the component again and the component was mounted twice on iOS.. ",
    "robtg4": "@joelcloralt any way of exchanging the default back button icon with one of your own?\n. why was this closed? the error hasn't been solved\n. But if you use Actions.login(data: \"asasdas\") won't you go to the login route? Or can you do this with whatever route name you have?\n. I determined that you can call Actions.component in a function by doing Actions.componentName(). In terms of passing data I have not tried that\n. is it possible to add custom buttons to the navbar at all?\n. ",
    "OscarBastardo": "hello, is there any way to style (resize, specifically) the navigationBarBackgroundImage?\n. ",
    "MattyK14": "Is there any way to change the color of the menu button?. You can change the image yes, but there seems to be no way of just changing the color from the default blue. barButtonIconStyle={{ tintColor: '#fff' }} only changes the chevron back button.. +1. Did anyone have a successful workaround or solution for this?. +1. Yeah the back button is no issue, anyone solve the menu button?. I changed mine to white using:\nbarButtonIconStyle={{ tintColor: 'white' }}. @ddeanto \nconst RouterComponent = () => {\nreturn (\n<Router\nbarButtonIconStyle={{ tintColor: 'white' }}\nnavigationBarStyle={{ backgroundColor: 'black', opacity: 0.65 }}\npanHandlers={null}\n{...this.props}\n>\n<Scene key=\"auth\">\n<Scene\nsceneStyle={{ paddingTop: 40 }}\nkey=\"loginPage\" component={LoginForm}\ntitle=\"Login\" hideNavBar\n/>\n</Scene>\n<Scene key=\"main\" component={NavigationDrawer} initial/* skips login for debug */>\n<Scene\nkey=\"home\"\nleftButtonIconStyle={{ tintColor: 'white' }}\ntitleStyle={{ color: 'white' }}\n>\nEDIT: It's actually the leftButtonIconStyle setting the color sorry!. I believe this issue can be closed.. @juancabraal while this is a solution for some, this isn't practical for all cases. Where someone is fetching and rendering a list of data with help from componentWillReceiveProps, trying to put Actions.refresh() inside this method will call an infinite componentWillReceiveProps.. Any luck with this issue? Also looking for a solution.. @aksonov Can we get a merge on this? Works well for me!. +1. +1. +1. Have you tried adding style to it?. I've been tearing my hair out over this issue, glad to come across the root of the problem\n```\njest-haste-map: @providesModule naming collision:\n  Duplicate module name: react-native\n  Paths: /Users/${username}/Desktop/${appName}/node_modules/react-native-router-flux/node_modules/react-native/package.json collides with /Users/${username}/Desktop/${appName}/node_modules/react-native/package.json\nThis warning is caused by a @providesModule declaration with the same name across two different files.\nFailed to build DependencyGraph: @providesModule naming collision:\n  Duplicate module name: react-native-vector-icons\n  Paths: /Users/${username}/Desktop/${appName}/node_modules/react-native/local-cli/core/fixtures/files/package.json collides with /Users/${username}/Desktop/${appName}/node_modules/react-native-router-flux/node_modules/react-native/local-cli/core/fixtures/files/package.json\nThis error is caused by a @providesModule declaration with the same name across two different files.\nError: @providesModule naming collision:\n  Duplicate module name: react-native-vector-icons\n  Paths: /Users/${username}/Desktop/${appName}/node_modules/react-native/local-cli/core/fixtures/files/package.json collides with /Users/${username}/Desktop/${appName}/node_modules/react-native-router-flux/node_modules/react-native/local-cli/core/fixtures/files/package.json\nThis error is caused by a @providesModule declaration with the same name across two different files.\n    at HasteMap._updateHasteMap (/Users/${username}/Desktop/${appName}/node_modules/react-native/packager/src/node-haste/DependencyGraph/HasteMap.js:158:13)\n    at p.getName.then.name (/Users/${username}/Desktop/${appName}/node_modules/react-native/packager/src/node-haste/DependencyGraph/HasteMap.js:133:31)\n```\nRemoving react-native-router-flux from my package.json and reinstalling node_modules causes no errors so it's definitely react-native-router-flux.. @prtkkmrsngh did you delete the react-native folder inside of /node_modules/react-native-router-flux? Or revert to react-native-router-flux 3.38.0?. This is, ironically, a duplicate of #1803. Exact same solution as in #1803 \nThis is an error on react-native-router-flux's part, and not your's by the way.. @Daredevll applying just tintColor worked for me.. Seems the header is no longer centered after upgrading to react-native@0.55. Tested with beta.42 & beta.31. beta.31 is fine on react-native@0.54 whereas beta.42 just doesn't run, both are off center on react-native@0.55.\n\n. Expected (seen on RN 0.54 & previous versions):\n\nActual (seen on RN 0.55):\n\nOnly observed on Android, not present on iOS.. ",
    "colorfulberry": "Can i only remove the back button?. @akinolu52  How do you solve it at end? \nmaybe it need https://github.com/mobxjs/mobx-react. ",
    "thienanle": "It seems if I define navigationBarStyle based on state and the state changes, the bar does not update. If I add a key to <Router> and update the key then I can force a change, but this feels dirty. Is there a better way?. +1. ",
    "DeveloperChallenge": "Hi there,\n\"Navbar items\"\nI want image in title not text. so, when i add image using navigationBarTitleImage property, it is going to top left corner. and tried more to get in center using navigationBarTitleImageStyle property, image is fixed but right and left icons are not visible or miss it's original place.\nso, cam i get the proper solution please. . ",
    "fourteen": "@HubMahesh can you post the code you used for navigationBarTitleImage?. ",
    "Nygma297": "```\nimport React from 'react'\nimport { Actions, Scene, StyleSheet } from 'react-native-router-flux'\nconst scenes = Actions.create(\n<Scene key=\"app\" navigationBarStyle={{ backgroundColor: '#db342e' }}>\n    <Scene key=\"drawer\" component={NavigationDrawerComponentWrapper} open={false} >\n        <Scene key=\"requiredBecauseOfDrawer\">\n                        <Scene key . . . />\n                        //Scenes\n        </Scene>\n    </Scene>\n</Scene>\n\n)\n```\nCan't color the navBar Please Someone help out!\n. ",
    "brownmagik352": "So to be clear if i have some text as my right button on the navbar, I can't change its color, correct?\nWhy does barButtonIconStyle work but barButtonTextStyle not work?\nI attached the image and here is my code:\nRouter \n        sceneStyle={styles.sceneStyle} \n        backButtonTextStyle={styles.backButtonTextStyle} \n        barButtonIconStyle={styles.barButtonIconStyle}\nconst styles = {\n    sceneStyle: {\n        paddingTop: 65\n    },\n    backButtonTextStyle: {\n        color: '#2227b7'\n    },\n    barButtonIconStyle: {\n        tintColor: '#2227b7'\n    }\n};\n\n. @sicdigital thanks for the tip!\nso barButtonIconStyle & rightButtonTextStyle got me what I was looking for:\n\n\n. ",
    "sicdigital": "@brownmagik352 -- What you're looking for is the prop rightButtonTextStyle that will do it. . ",
    "alexTitakoff": "Hello, guys!\nIs it possible set styles for NavBar into Component of called Scene, no in an attribute of Scene Tag in Router Tag?\n. ",
    "rajsuvariya": "@aksonov Is it possible to change the font in the nav bar title. I already tried \n<Router titleStyle={{ color: 'red', fontFamily: \"pfencoresanspro_book\" }} headerTitleStyle={{ color: 'blue', fontFamily: \"pfencoresanspro_book\" }}>\nBut it isn't working. Looks like issue with React Native as mentioned here.\nhttps://github.com/react-community/react-navigation/issues/542#issuecomment-283663786. I was able to fix it using fontWeight: \"100\" as mentioned in the comment. The font I was using was in .otf format and normal so RN was not able to convert it into bold one. @aksonov I am interested. But as I don't have too much experience in this technology, so I would like to start with small tasks. Please let me know if there are any.\nThanks\n. I am trying to change some code for my application. I am trying to change it inside myproject's /node_modules/react-native-router-flux/src/Router.js. But the same is not being reflected in the app. Then I tried to add just log inside App component like following, but even that is not working.\ncomponentDidMount() {\n    console.log('dsasd');\n    BackHandler.addEventListener('hardwareBackPress', this.onBackPress);\n  }\nThen I completely removed the code of Router.js then also the app is working fine. How can I change the code inside node_module/router_flux and make it work in my application?. Anyone able to fix the issue?\n```\ncomponentDidMount(){\n      Actions.refresh({ renderRightButton: this.renderRightButton  })\n}\nrenderRightButton = () => {\n      return Test\n}\n```\nMy code is as above and the button is not getting rendered. @aksonov please provide powerful docs for this kind of issues.. Actions.pop();Actions.refresh({..}) this is work around only right?. In navigationStore.js the pop is written like this\n```\n pop = () => {\n    this.dispatch(NavigationActions.back());\n  };\n```\nIt is even not taking any params. Is it the cause of this problem?. Is this fix live now? If yes, in which version?\n. I was able to achieve it using Actions.reset(\"Scene\") but the animation looks too bad. Actually, it shows every screen being closed.\nCan I have the option to remove this animation while clearing back stack. @luco In my case Actions.reset(\"homeMain\") is working. Try that.. @aksonov is this incorrect Actions.reset(\"homeMain\") ? I am able to reset the back stack using it.\n. After taking clone of master even onExit is not working when I open the new screen using Actions.secondComp().\nI have added onEnter and onExit props in loginModal in the Example.js in this repo https://github.com/rajsuvariya/react-native-router-flux Please check.\nExpected Behavior and test status\n\nWhen login 1 scene is opened console should print 'onEnter'  - passed\nWhen login 2 button is clicked console should print 'onExit' - failed\nWhen pop and refresh is clicked on login 2 console should print 'onEnter' - passed\nWhen back is pressed from login 1 console should print 'onExit' - failed\n\nYou can verify the same in the gif below. \n\n. Yes . Okay. No, It isn't fixed yet.\n\n. I am using your example project only and yes I took pull from master not Example project (see the image)\nYou can find the project here https://github.com/rajsuvariya/react-native-router-flux\n\n. I am sorry about that. \nBut as I am new to open source I don't know how to use the source code directly. Can you please tell me how to do it?. Yes, It's working perfectly. Thanks a lot.. ",
    "golestanirad": "I am using react-native-router-flux 4.0.0-beta.17 for my learning project. I need to customize the header. for instance the background color, the title alignment, etc. where can I find a comprehensive document?. @sicdigital   hi there, where can I find a comprehensive document about all props?. @twksos could you please explain it more? I really appreciate it.. ",
    "dcgray85": "Is there a way to disable dynamic text in the header?  When the user allows dynamic text, I can disable this in the Scenes, but I can't in the header.  I would expect allowFontScaling={false} to be able to be applied to the header text.\n\n. ",
    "Friis1978": "Just to clarify everything. \nI have styled everything in the header this way:\n\nand the styles:\nconst styles = {\n    navBar: {\n        backgroundColor: '#ff8c00',\n        height: 70\n    },\n    navBarTitle: {\n        color: '#FFFFFF',\n        fontSize: 20\n    },\n    barButtonTextStyle: {\n        color: 'red'\n    },\n    barButtonIconStyle: {\n        tintColor: 'white'\n    },\n    routerScene: {\n        paddingTop: 80,\n    },\n    rightButton: {\n        marginTop: 5,\n        marginRight: 5,\n        backgroundColor: 'white',\n        borderRadius: 5,\n        borderWidth: 1,\n        borderColor: '#00b8ff'\n    },\n    rightButtonText: {\n        color: '#00b8ff'\n}\n\n`};\n\n` \nThis is how it looks. @edoantonioco fixes my issue as well, thanks a lot...... ",
    "kylanhurt": "We should be able to pass the router a component for the navbar, IMO. Would love to make the background a gradient (currently using transparent backgroundColor with underlying component on the scene to mimic the appearance we'd like.. We're having this issue on version 4.0.0-beta.28. @aitemr Will you guys be adding this sort of functionality for version 4? I know you guys get swamped with feature requests. I specifically am looking to use a colored gradient as the background for the header within version 4. Is it possible to pass a colored gradient as the navBar component? What would the code / API for that look like?. @Blapi You guys have the patience of saints!. I should mention that it might be easier to implement as a function call, for example: Actions.swipeEnabled(false) or Actions.disableSwipe, for example.. ",
    "edoantonioco": "\n\nAny way to kill the borderbottom of the navbar? Can I just remove it or make it the same color as the nav.\n\nWere you able to fix this?\n. This issue is a hard to fix for me.\nFirst to all, I need to have the <Stack key=\"root\" hideNavBar={false}> inside the <Drawer> tags because othewise sending props to another screens wont work at all. But having that Stack between the Drawer and the Scenes makes the drawerLockMode to not work at all.\nSo the way to fix a bug opens another bug. > I have exact same architecture of router with you @edoantonioco, Did you find any solution?\nNot at all. All we can do is to expect RNRF to support react navigation 3.0 and maybe there it might get fixed https://github.com/aksonov/react-native-router-flux/issues/3393. Tried 4.1.0-beta.2 (which is based in react navigation v3). Situation hasnt changed.. In my case its a very similar code, and drawerLockMode does not works. Thats because <Scene key=\"root\"> is between the Drawer and the Scenes, if its not there it works fine.\nOn the other hand, you need to keep that <Scene key=\"root\"> where it is so the app works fine (thats why I also have it there)\nSo I was wondering if you make it work, and how?. I have the same bug on android\n\nOnly when tabBarPosition=\"top\", when it is \"bottom\" (or no tabBarPosition property setted), it works fine.\nPlease fix it. Im in latest Expo (which has latest RN). hey, did someone found a way to fix this? \nFor normal scenes you can use the navBar property and set the component which has to be on top, but a Drawer has no component, so I really need to know how to fix this.. So Im in the same situation than you.\nI know the way to fix this is to not have any layer between the <Drawer> and the <Scenes>, in that case drawerLockMode will work fine.\nBut there is another bug where you cant send props to another screens, and for that you need to have the <Stack key=\"root\" hideNavBar={false}> between the Drawer and the Scenes. And having that Stack between the Drawer and the Scenes makes the drawerLockMode to not work at all.\nSo the way to fix a bug opens another bug. @chiragsheta way works. So as @pgonzalez-santiago stated the way to fix this is with navBar={MediaNavBar}\nbut what about a Scene that is a Drawer? SInce it has no component attached (to be replaced with MediaNavBar). It happens to me as well, an ugly workaround to make props to work again (while using a Drawer) was to add the \"root\" scene inside the Drawer, and not the other way around.\nThis approach makes it work, but it causes some trouble with some properties of the drawer childs to not affect the Drawer (like to disable the drawer for a login screen for example). So I definitely hope that this get fixed, cant wait for RN 3.x support.. ",
    "zebulgar": "Sorry just the third screen had errors, was just showing on the last screen when you navigate back the nav bar appears\n. Nice! Looks great. Fixed the issue.\n. Here is an example of how I did it:\njs\n <View style={styles.tabContainer}>\n   <Icon\n      name={this.props.tabIcon}\n      size={24}\n      color={this.props.selected ? '#444' :'#AAA'}\n   />\n  <Text style={[{color: this.props.selected ? '#444' :'#AAA'}, styles.tabIcon]}>{this.props.title}</Text>\n</View>\nI'm using react-native-vector-icons as my icon manager\n. @jfsemaan feel free to reopen this if you have any other questions\n. Addressed in #70 \n. I'd be interested! I'm not sure how much time I can dedicate as well but since we're using this library in our production app I will probably be motivated to fix issues that arise\n. @aksonov I thought it might be helpful to have a chat room. I've seen gitter.im used often so I set one up. just might chat some things as I'm learning the component: https://gitter.im/aksonov/react-native-router-flux\n. @chetstone happy to help review as well. I'll spend some time this weekend really trying to understand the component. One of my major goals is to make integration with a pre-existing redux store much easier\n. Thanks for the report! I'll take a look\n. Ok @aksonov I found the issue. In react-native-tabs you maintain a selected element in the state. However I think if a selected prop is passed in, then that should override the component state. The issue is in this line:\nhttps://github.com/aksonov/react-native-tabs/blob/master/index.js#L60\nBasically self.state.selected is still \"tab1\" and so it's cloning the element where the prop of selected is still true. My proposition is to make it so that the line is \n{!self.props.selected && (self.state.selected == el.props.name) ? React.cloneElement(el, self.state.props) : el}\ninstead of what it currently is which is:\n{self.state.selected == el.props.name ? React.cloneElement(el, self.state.props) : el}\nWill be submitting a PR shortly and will make sure this doesn't cause any other breaking changes\n. Here is the submitted PR: https://github.com/aksonov/react-native-tabs/pull/9\n. Hey @jamesfzhang this is what the type of 'switch' is used for. You can check out in the example how we use it for tabs, however this can be used for any route really. Just define a route as so:\n<Route name=\"foo\" type=\"switch\"/>\n. Feel free to reopen if you have further questions\n. Yes! It's referencing the schema defined up above. If you are having a bunch of routes that have this switching behavior I recommend a schema so you can define other global attributes on said routes if needed\n. Looks pretty good! I think we could likely improve the formatting of the Feature section but this is a great step in the right direction\n. thanks @mmazzarolo for the well-structured code. That ended up working for me better than my hackish implementation of the drawer!!!\n. hey @aksonov got a quick moment to hop onto Gitter?\n. @joshuarotenberg is correct. passing in your own style will override the default style\n. Looks pretty interesting. Is the example expected to work with this?\n. I have also been seeing this issue\n. I dug into this a bit today without much success\n. I was messing around with customizing the back button and realized that this._barButtonIconStyle and this._barButtonTextStyle are always undefined\n. I had this issue where if I would very quickly tap the back button it would call Actions.pop() twice. This would sometimes result in there not being a parentRouter and it would throw an error so this was my fix\n. Pop can get called twice but I don't think it should throw an error since it can be done just by fast tapping the back button\n. @darkrishabh are you planning to address @aksonov's concerns? If not let's close this PR\n. I notice that in most apps when you have a tab navigation system and you are deep inside one of the tabs, clicking on that tab when it is already actively selected returns you to the \"home screen\" of that tab. This is how I implemented it. Happy to put it into the example code as well\n. That's basically how you should do it. You can reuse the same components so it's not really too bad and makes it pretty clear in your routes file that you are using the same routing types.\nI would still recommend calling the different routes differently. like tab1_page1 tab1_page2 & tab2_page1 tab2_page2 even if across the two tabs page1 and page2 use the same components\n. This is something I am working on\n. Ha thanks for solving this, I was just experiencing this myself as well. Thanks @danielweinmann !!\n. Yeah @danielweinmann @aksonov this works on solving the referencing issue but the refs on the plugin are still empty for some reason\n. This seems to cause wrapRouter to get passed down as well which is not useful. I'm not sure I fully understand the purpose of this PR\n. In my project these lines actually causes the application to crash because it gets stuck in an infinite loop of Router -> Route -> Router -> Route rendering over and over\n. haha no way wasn't expecting an answer so quickly from you. I'm just going through your examples first and making sure I fully understand them.\nWas going to email you and ask if you thought this was a good idea but I'll take the comment as implicit approval\n. I have to agree w/ @aksonov.\nI've actually been spending some time this last week trying to integrate the best of both APIs. Simple transitions, routes defined in a single place, with a more direct connection to redux similar to react-router-redux.\nMy goal is to publish it by the end of this weekend and I'd love to get the community's feedback on it. I basically started from @aksonov's library and worked towards an interface similar to the react-router-redux ideology.\n. The only real issue with that @aksonov is that I think the stack of the Router class needs to be stored in redux rather than in the state. I'll send you an early version this weekend so you can take a look over it and let me know what you think\n. So there are some slight tweaks I have to make in Actions.js and Router.js in order for it to be more properly \"redux\" and have all the data stored in the store rather than on a particular component or class state\n. Yes! That is what I'm working on @aksonov\n. I have all of the adjustments made to the rest of the codebase as if BaseRouter was immutable, and now I need to actually move the stack to the store and make it so the logic for pop, jump etc are in the reducers rather than in the class\n. Ahhh smart idea. Hehe this is what I wanted to discuss on gitter the other day\n. I mean I understand that TextInput has its own internal state however the navigation state of an application is far more important and I think exposing that to the user and letting them store it in redux is quite important.\nIt also allows you to start from scratch, load in the store, and then be popped deep into a navigation hierarchy rather than starting from the main page each time you reload\n. @aksonov I got a preliminary version working for my fork that I use internally, but it's not really quite ready to be integrated into this library.\nApologies but this (https://github.com/facebook/react-native/issues/5404#issuecomment-188571340) is my priority right now, but I'll dedicate some time to this once it is resolvde\n. I've been testing this library on Android today and it appears to be working fine as long as I don't use the chrome debugging.\nThere does seem to be a delay in 'switch' animations between tabs. I'm looking into it.\n. I'm going to close this. For future reference make sure to not have console.log anywhere in the code, whether it is your redux middleware or in the debug for this library\n. Hey @sbycrosz definitely something I am working on. I'm hoping to have an initial version out in the next two weeks that just acts as a separate plugin that is backwards compatible with this library by making the Router class immutable and storing it in the redux store and making a reducer as you mentioned above\n. @braco  I have something that works for me that I use on an internal project. It's not super easy to rip out so I've stalled on this project until I can find some time to contribute it back.\nSo no, I'm not actively working on it but once I get both iOS and Android out on the app store I can spend some time on it again. Let's continue the conversation on #186 though.\n. I've been running into this issue as well\n. Somehow the router is unmounted which I don't understand how it is possible\n. haha this worked for me. thanks for the dirty hack @kacperpotega \n. Is this really a common practice? I feel like it's more common to call connect in the component file, not inside the routing file.\n. If a handler returns false the route action is ignored?\n. Yeah I was just reading through that discussion\n. The way I've been doing it, which I think is more common practice than using connect inline has been like this:\nexport default connect((state) => ({\n  email: state.data.ui.login.email,\n  password: state.data.ui.login.password,\n  status: state.data.ui.login.status,\n  error: state.data.ui.login.error\n}))(Login);\n. and then when you import the Login component it is already connected\n. sorry that was more of a grammatical comment. I think the word the should be inserted in that sentence is all\n. If a handler returns false the route action is ignored.\n. ",
    "sslash": "I have tried that too, doesn't remove the navbar :/\n. \nJust to be sure, I add it in most possible places\n. Worked like a charm. Thanks!\n. nice! but if you go back, it is now gone forever :( I can try and write some docs!\n. nice. Though it seems like the selected property on the initial route is now broken\n. how do you check if the component is \"current route\"? I can't see any such property on the route component\n. @aksonov the problem with Actions.currentRouter.currentRoute is that if your current route is inside a tabBar, its name resolves to the tabBar route, not the current (nested) child route. Say I have\n<Route name=\"tabbar\">\n                    <Router footer={TabBar} hideNavBar>\n                    <Route name=\"home\" schema=\"tab\" component={Home} />\n                    </Router>\n</Route>\nAnd I am currently on \"home\", Actions.currentRouter.currentRoute.name = tabbar and not home\n. I also have this problem with the 3.x version. A bit annoying if you are on a map screen. So the sollution will be to pass panHandlers={null} down a Scene?\n. Okey. is there any other way to accomplish this now? We sort of rely on this in order to upgrade to 3.x\n. Okey, thanks!\n. Yes absolutely. I have postponed the task however, not sure when I/we will start, but when we do then yes\n. ",
    "lakmalniranga": "\nThis works to me!. ",
    "bjax13": "  <Router hideNavBar={true} >\n\nAlso works. . ",
    "vvavepacket": "I tried the above code from lakmalniranga, but header still takes a spot.\nhttps://snag.gy/91aXTj.jpg\n. maybe you have a padding at the top? I was facing same issue but I forgot I have a top padding...\n```\n\n\n```. any updates?. ",
    "EmersonStark": "hideNavBar={true} :D\n. ",
    "lyrl": "work !!!!  thanks @lakmalniranga \n```js\n\n```. ",
    "sivcan": "We don't even need to assign hideNavBar a value of true.\nIf we mention it then it simply means we are giving it a value of true rather than being undefined.\nJust adding for future users referring to this issue. \n<Scene \nkey=\"SplashSCreen\" \ncomponent={SplashSCreen}  \ntitle=\"splash\" \nhideNavBar\n initial\n/>. ",
    "Omarkojak": "any ideas why when using hideNavBar it still appears\n\n\n. ok fixed sorry for that. ",
    "godfredcs": "@Omarkojak You gave the Router a paddingTop of 65. That means every scene gets a paddingTop of 65 whether they have titles (navbar) or not.. ",
    "rwehresmann": "There are any way to not only hide the navbar, but also remove it? Even hidden, it still taking up space on the screen.. ",
    "Icacls": "it still appears,I can not see why\n\n\n. ",
    "MehranJanfeshan": "any update on this? even if hide the nav still takes some space there. @aksonov Thanks for the reply, I got the version 4 but I am getting this error:\n[react-native-router-flux] props should be defined. @aksonov I found that in the old version I was able to do this: \n<Router sceneStyle={{margin:0}} hideNavBar={true}>\n      <Scene key=\"auth\">\n        <Scene key=\"login\" component={AuthScreen}/>\n      </Scene>\n      <Scene key=\"main\">\n        <Scene\n          onRight={() => Actions.auth()}\n          rightTitle=\"Log out\"\n          key=\"newOrderList\"\n          component={EmployeeList}\n          title=\"New Orders\"\n          initial\n        />\n        <Scene key=\"orderDetails\" component={OrderDetails} title=\"Order Details\"/>\n      </Scene>\n    </Router> \nbut after I moved to version 4 I cannot do that so I changed to this and it worked:\n<Router sceneStyle={{margin:0}} hideNavBar={true}>\n      <Scene key=\"auth\">\n        <Scene key=\"login\" component={AuthScreen}/>\n        <Scene\n          onRight={() => Actions.auth()}\n          rightTitle=\"Log out\"\n          key=\"newOrderList\"\n          component={EmployeeList}\n          title=\"New Orders\"\n          initial\n        />\n        <Scene key=\"orderDetails\" component={OrderDetails} title=\"Order Details\"/>\n      </Scene>\n    </Router>\nbut this not what I want, I want to able to categorize the Scene, is there any other alternative?. here is my code that works perfectly in version 3 but when I upgraded to version 4 I got this error: \n[react-native-router-flux] props should be defined\nso I removed the part that is surrounded by the blue line and it works fine. \n\n. if I wrap it with one root scene then how I can control the back button? I do not want the user to be able to back to the login page, that' why I used to Scene.. @aksonov Thanks for the help and thanks for the great job :). just switch off your Chrome Debugger and everything would be fast :). ",
    "adarshTS": "this worked for me : <Scene key=\"homeScreen\" component={mainScreen} hideNavBar={1} />. this code worked for me leftButtonImage={require('./components/Images/bg_inner.png')}. @waqas19921 @aksonov how can we do this to receive the props in CDM. can we pass 2 images in navBar property for 2 right buttons\n. how can I add 2 right buttons to this or how can I use a custom navBar instead\nthis is my code : \n`import React from 'react';\nimport { Scene, Router } from 'react-native-router-flux';\nimport mainScreen from './components/mainScreen';\nimport challengeScreen from './components/challengeScreen';\nconst RouterComponent = () => {\n  return (\n    \n\n\n\n\n\n  );\n};\nexport default RouterComponent;\n`. @aksonov \nhow can we use navBar property to add multiple buttons is there any example or links for that I want to add a custom image as a back button and add 2 more custom images as right buttons \n. hey I sorted out that issue, \nIn my Router.js file, I created a navBar property and gave it my NavBar.js file to it like navBar={NavBar} and inside my NavBar.js file I  have customized the buttons that I needed on both left and right sides \nhope this might help someone \nand thanks @aksonov . Refer this: https://stackoverflow.com/questions/42479184/customizing-default-navigation-bar-of-react-native-router-flux/45372828#45372828. @wkwyatt I did this : <Scene\n     key=\"screen2\" component={challengeScreen} navTransparent={1}\n     navBar={NavBar}\n       /> in the Router.js file where NavBar is the custom navbar that I created and don't forget to import import NavBar from './components/NavBar';. Here's something that I found : https://github.com/react-community/react-navigation/issues/312\nBut it didn't work with my project and I didn't install react-navigation but still, I don't think that it will work . yes navTransparent worked well for me in default navigation bar but it didnt work in custom nav bar . here are the few links that I found referring react-navigation @aksonov https://reactnavigation.org/docs/navigators/tab#tabBarVisible\nhttps://reactnavigation.org/docs/navigators/stack#header\ncan I make my custom navbar transparent without changing from RNRF to React-navigation . @aksonov What I observed is that when I  change it to any other color the background of the navigation bar is changing but when we are trying to make it transparent it changes into white why is it so? for making it transparent I tried these : backgroundColor: 'transparent'  and backgroundColor: 'rgba(52, 52, 52, 0.8)'\nthis is what I get now \n. @aksonov will this help in making the navBar transparent \nhttps://github.com/aksonov/react-native-router-flux/pull/1476. ",
    "vhson0610": "@lakmalniranga this worked for me, thanks!. ",
    "ahmetilhann": "Works\nconst RouterComponent = () => (\n    <Router headerMode=\"none\">\n        <Stack key=\"main\">\n            <Scene \n                key=\"login\" \n                component={Login} \n            />\n        </Stack>\n    </Router>\n);. ",
    "0paIescent": "@ahmetilhann Thanks! Removes all headers of child Scenes in the Router, still works as of v4.0.0-beta.3.. ",
    "erdostom": ":+1:\n. fixing this would probably also solve #132\n. maybe #110 as well\n. @aksonov I'm trying to do something with this now, where I call the current route with Replace and a new rightTitle, but it doesn't work.\nconst rightTitle = getState().currentStack.editMode ? 'Edit' : 'Done'\n    Actions.stackstab_stackview({ type: ActionConst.REPLACE, rightTitle})\nrunning RN 0.30 and RNRF 3.30.1\n. Yes, I got the code above to work ultimately.. Thank you! :)\n. ",
    "paulbao": "@aksonov 'Hiding tab bar is not working for nested routes (i.e. start route doesn't have hideTabBar, but next one (pushed) have this, tab bar will not be hidden)' Is this fixed?\nI am now try version 2.1.4 and just add hideTabBar={true} like below. But it seems not working.\n\n. Yes, I've checked Example and only Navigation bar is hidden for the second tab not Tab bar.\n. Thanks @aksonov , the example works well, but if I add hideTab={true} \n<Route name=\"tab2_2\" component={TabView} title=\"Tab #2_2 hideTabBar={true}\" />. It still doesn't work.\n. Have you tried <Route name=\"tab2_2\" component={TabView} title=\"Tab #2_2\" hideTabBar={true} /> ?\nTo be honest, It's just a typo that I am trying to explain this issue by your provided example. hideTabBar is still not working for both my own project and your Example.\n. Thanks for your time. I think it's not working for nested Route. In another word, it works for tab1 and tab2, but not work for tab1_2 and tab2_2\n. @aksonov onSwitch is not fired either, I've tested it on Example project.\n<Route name=\"tabbar\" onSwitch={()=>{\n                  console.log('onSwitch')\n                }}>\n. What's the difference?@lentg\ntabbar Route's defined before others? That doesn't work too.\n. I have the same issue and tried to reproduce it on Example app. However, I cannot reproduce it on the Example app which is so wired...\n. ",
    "KBLNY": "I confirmed that even the latest master release (2.2.6) doesn't fix this.\n@aksonov Btw, a big thank for your initiative, :+1: for the way you designed the route and router management.\n. FYI, The \"2.0\" branch fix the solution, but this is a workaround, not a solution since the 2.0 is still buggy\n. I found it, due to a stupid mistake:\n<Route name=\"tabbar\" style={styles.tabBar} >\n   <Router footer={TabBar} >\n      <Route name=\"newsFeedTab\" schema=\"tab\" title=\"News\" >\n         <Router>\n            <Route name=\"newsFeed\" title=\"News\" component={NewsFeedPage} />\n            // Others routes ...\n         </Router>\nI named the tab and its 1st component with the same name.\nI now add a suffix \"Tab\" to the tab name.\nDone.\n. I thank you @pewh ! thanks to you I just discover that I was unable to customize the nav bar due to that overlap, I sometimes successfully customized the nav bar by juggling with the hideNavBar and showNavigationBar attributes.\nHowever, following your guidelines the nav bar is well customized but when I switch between tabs, the nav bar displays the previous tab name in place of the \"back\" button. Here is my code, can you please help me to spot the mistake?\n```\n\n\n\n\n          <Route name=\"register\" schema=\"modal\" component={registerComponent} />\n          <Route name=\"login\" schema=\"modal\" component={loginComponent} />\n\n          <Route name=\"tabbar\" style={styles.tabBar} >\n              <Router navigationBarStyle={styles.navBar} titleStyle={styles.navBarTitle}>\n                <Route name=\"newsFeed\" schema=\"tab\" title=\"News\" component={newsFeedComponent} />\n                  <Route name=\"notifications\" schema=\"tab\" title=\"Notif.\" component={notificationsComponent} />\n                  <Route name=\"events\" schema=\"tab\" title=\"Events\" component={eventsComponent} />\n              </Router>\n          </Route>\n      </Router>\n\n```\nPlease Note, if I change the hideNavBar and showNavigationBar, I get the following outputs:\n- hideNavBar={true} showNavigationBar={true} : 2 styled nav bars, the topest one with only a \"Back\" button (<) and the bottomest one with the title and the back button \"< Title of previous screen\" (even when switching between tabs)\n- hideNavBar={false} showNavigationBar={true} :  idem than above\n- hideNavBar={true} showNavigationBar={false} : 1 styled nav bar, with the title and the back button \"< Title of previous screen\" (even when switching between tabs)\n- hideNavBar={false} showNavigationBar={false} :  idem than above\nI can't really understand the difference between hideNavBar and showNavigationBar and their impacts to get the expected output : 1 styled bar with the Screen Title and the Back Button that should appear only when \"stacked\" screens are handled, not when switching between tabs.\nThanks a lot for help\n. For me, I didn't replace name property by key in the variable I used in my` like :\n```\nvar myRoute = {\n   key: 'myRoute',\n   component: MyComponent,\n   title: 'My Route'\n};\n\n``\n. @gaykov That's sounds a pretty solution, but I get the following error:Cannot read property 'open' of undefined`\nAny idea?\n. I know this is a pure Javascript way of programming.\nHowever, I was wondering how to achieve creating a statefull \"link\" between the custom navigation bar and its component?\n. Hey, I'm working on that. Any help/suggestion is appreciated.\nI will keep you in touch.\n. ",
    "kesha-antonov": "Need this too: hide tab bar for nested route.\n. Hello guys! Is it possible now to disable swipe back gesture for some route or for all of them?\n. Cool. Thanks! @dan-lee \n. Nice! Thanks @oureta \n. Oh my!\nIt was my issue: in TabIcon I returned function - not a React class.\nWas:\nTabIcon = ->\n  React.createClass\n    render: ->\n      <Text style={{color: if @props.selected then 'red' else 'black'}}>{@props.title}</Text>\nBecome:\nTabIcon = React.createClass\n  render: ->\n    <Text style={{color: if @props.selected then 'red' else 'black'}}>{@props.title}</Text>\nThank you for the lib!\n. @RWOverdijk Try this on your scene/scenes: barButtonIconStyle={{tintColor: 'black'}}\n. Thanks! @aksonov \n. Can confirm!\n3.37.0 - OK\n3.38.0 - double mounting on tabs. Thanks!. https://github.com/aksonov/react-native-router-flux/pull/2148#issuecomment-342881209\nThanks! @aksonov . @aksonov Thanks!\nMy mistake! I'm trying to migrate from v3 to v4 and I was using\nScene, Router from react-native-mobx. I guess it is not needed anymore?. Ok! Thanks!. @mcabs3 Thanks! I'll try this. +1. +1. Hello guys!\nWhat's the motivation of removing mobx? Will it increase performance?. @aksonov Sure. I will check tomorrow. +1\ndid you solve it?. Try leftButton instead of renderBackButton and pass Component to it.. It works for me. rnrf-4-beta22\nleftButton for left icon\nright for right icon. @aksonov Please merge. Solved it by position NavBars absolute.\nNot sure if there's another way but it works.. <Tabs tabBarStyle={{position: 'absolute', top: 0, left: 0, right: 0}}\n@redwind \n. Why? It's not in gitignore and it's good practice to keep .lock files.\n@onrige . Ok. Thanks! @aksonov \nWorks without PR. @daviscabral Hello!\nWhen I do Actions.pop components that should just unmount will unmount and remount and unmount again. I don't think it's React related. @daviscabral I use mobx.\n@aksonov Thank you for looking at it. I'll provide an example.\nI have \n<View>\n  <Router ...>\n    {this.scenes()}\n  </Router>\n   ...other Components\n</View>. Ok. Solved it with other way\nClosing for now. It's definitely something wrong @aksonov \nBecause when I call Actions.tabbar({ type: ActionConst.RESET })\n(see https://github.com/aksonov/react-native-router-flux/issues/2595)\nit remounts signIn scene twice. I think this is also cause of this error: Could not locate shadow view with tag #122, this is probably caused by a temporary inconsistency between native views and shadow views.\n\n. Maybe related https://github.com/react-community/react-navigation/issues/2599. Ok. Maybe it's my app related.\nI found out that my App and Router re-renders after sign in.\n\nWhat's be best way to solve it?\nIf you need to re-render component with Router. But not Router itself @aksonov . Ok. Rewrote without re-render\nSame errors. When I disabled Actions.refresh on scene where I go from signIn errors disappear. SignIn will unmount and no errors/warnings.\nSomething wrong with Actions.refresh. Wrapping Actions.refresh in `InteractionManager.runAfterInteractions helped. No errors/warnings\nSo I think they appear if Actions.refresh called on new scene when previous is not unmounted yet. What do you think? @aksonov \nRef: https://github.com/react-community/react-navigation/issues/2702\n--- UPDATE ---\nYes. Errors/warnings disappear when previous scenes is unmounted completely (componentWillUnmount called).\nIf prev scene is not unmounted (componentWillUnmount not called yet) and we call Actions.refresh on the next scene - then prev scene get's remounted twice and errors/warnings appear.\nThis happens with Actions.pop and Actions.tabbar({ type: 'reset' }). > Wrapping Actions.refresh in InteractionManager.runAfterInteractions helped. No errors/warnings\nThis is bad idea. If you're talking about this.\nWe should detect that prev scene is unmounted componentWillUnmount called and if not skip setProps in Actions.refresh. No. Now I track it in mobx store\nGood suggestion. @aksonov \nYes. setTimeout works. But if I use\nrefresh = (data) => {\n    const key = getActiveState(this._state).key;\n    const params = filterParam(data);\n    setTimeout(() => {\n      this.dispatch(NavigationActions.setParams({ key, params }));\n    })\n  };\nfor all scenes I see delay of rendering title, navbar buttons.. So this is what is going on:\nActions.tabbar({ type: 'reset', ... })\n\nBlur current scene_1\nFocus next scene_2\ncomponentDidMount in scene_2\nCall Actions.refresh\nSince scene_1 is not unmounted yet setParams is called on that scene\ncomponentWillUnmount, componentDidMount, componentWillUnmount called on scene_1. Related https://github.com/react-community/react-navigation/issues/2931. Tried but didn't understand RNRF code.\nCan you please help try adapt that code? @aksonov . Ok. Thanks! I'll find solution.. Hello @fadlykayo ! I've migrated to react-navigation today. I see improvement in transitions speed on Android. iOS always works good. Also I've noticed then you pop from scene memory not released. Although views reduced. Check recent master. react-navigation was updated with support of iphone x. Try \nstyle={{ flexWrap: 'nowrap' }}\nfor your labels. To prevent them go in two lines. Try inside your label\n<Text style={{ flexWrap: 'nowrap' }}>{'My label'}</Text>. @aksonov Ok! one moment.\n\nThere was style issue with navBar in beta.16. react-navigation team fixed it\nAlso I'm not confident enough in react-navigation usage or RNRF source code to be sure if it's a good idea or we should manually check every release of react-navigation before update.. What do you think about to update mobx & mobx-react?\n\n. I've looked through mobx changelog. Nothing breaking. Check recent master. I think it has been fixed. I have no warnings on this. @aksonov  Ok. thanks!\nBTW If i don't use type: ActionConst.RESET then I have 2 scenes in routes instead of 1. And no warnings. Please see https://github.com/aksonov/react-native-router-flux/issues/2531\nI've updated info. Hey guys! https://github.com/react-navigation/react-navigation/releases\nreact-navigation 1.0 was released. Maybe it has been fixed there!\nCould you check it?. Their docs are very good. No need for guide.. I'm not sure about performance. Which is faster?\nBut both will be faster than it's now since function for ref re-created on every render.\n@ovr . @ovr  bind is faster?. ",
    "jamesone": "Did this ever get resolved? I can't use 3.x cos of other modules needing a lower version of React-native. \n. @brien-crean  - Haven't found one yet. Would be extremely useful though.\n. Very good and easy solution to implement! @mmazzarolo Thanks for doing this, I was trying to find a \"good\" way of doing this exact thing for a while.\nHere is my implementation of the reducer for people using es6 and separating there reducers.\nApp.js - I've put this code where my <router is:\nimport * as RNRF from 'react-native-router-flux';\nconst {Route, Schema, Animations, TabBar,Actions} = RNRF;\nconst Router = connect()(RNRF.Router);\nglobal.js - Created it's own reducer file and just merged it in with my other reducers.\n```\nimport {Actions} from 'react-native-router-flux';\nexport default function global(state = {}, action) {\n  switch (action.type) {\n       case Actions.BEFORE_ROUTE:\n       case Actions.AFTER_ROUTE:\n       case Actions.AFTER_POP:\n       case Actions.BEFORE_POP:\n       case Actions.AFTER_DISMISS:\n       case Actions.BEFORE_DISMISS:\n           console.log(\"Current route is: \", action.name);\n           return {\n             ...state,\n             currentRoute: action.name,\n           }\n       default:\n           return state;\n   }\n}\n``\n. Has this been fixed in 2.x? I cannot update to v 3 as I have dependencies for other packages that require a lower RN version.\n. @sylvainbaronnet  Any update on a fix for this?\n. @joenoon @aksonov - I'd find it a lot easier if the code were commented? I'd like to start contributing a bit, but the code is foreign to me! I'm not really sure what's doing what, I think comments would help developers new to the project.\n. Any idea if/when RN 0.25 will be supported?\n. @cridenour  Fair enough! Yeah I agree, waiting until 0.26 is probably the best option (:\n. @sylvainbaronnet  - There's something wrong with the storage of state when using the3.24` branch. So I wouldn't say it's stable at all!\nFor instance when I use Actions.routeName({type: 'push'}), the sceneName will not be added to the routes store.\nI'm using RN 0.24.1\n. Can confirm that the current master branch is more stable than the 3.24 branch when using react-native 0.24.1\nFixes I've noticed:\n- type: Replace, this will actually replace the previous scene and not show the previous scenes content.\nConfirmed working:\n- type: pop, works as expected\nProblems: \nAs I was writing this, I noticed one major problem, I'll open up a new issue.\nEDIT: I've fixed the problem, checkout my fork which is attached to the below (664) issue.\n. #636 Branched off from this issue\n. @rturk  - I didn't test with RN25/26, only 0.24.1. The project I'm working on will need to be updated to work on RN V > 24. Is there a possibility you could test it?\nIf not I'll try convert my proj to work with a RN V > 24! I don't think it'd be worth testing on RN 25, as there are no real navigation api fixes, I think the best option would be to try it on RN 26-RC?\n. @joenoon has a better solution over at #667 - Turned out to be a typo. I'll keep this open until #667 has been merged! \n. Can confirm that this fixed my issue. It is also a better fix than my #665 PR!\n. ",
    "brien-crean": "I'm wondering the same as @jamesone, anyone ever figure out a workaround?\n. @Mokto, @rgoldiez  did you manage to find a workaround for your situation? I would like to trigger something on unmount also when the type of route is \"push\"\n. @mvaivre to disable swiping back, passing panHandlers={null} worked for me, e.g:\n<Scene key=\"modal\" component={Modal} panHandlers={null}/>\n. I am using\nreact-native: 0.23.1\nreact-native-router-flux: 3.2.8\n. @mvaivre interesting, I am not using any map components at the minute. It looks like for a slider component, RNv0.24 will include a fix for the component letting go of the panResponder. I wonder if something similar can/should be implemented for a map component?\nSee 52ddfd9\n. +1\n. @aksonov Good idea, I'll try that and see if I get the same results and update this issue. \nI had seen this issue for a while and stuck to RNRF v2 until now because of it. I thought the issue was related to  this Navigation Experimental fix added in RN 0.26 but doesn't seem so.\ndidFocus event should fired after transition finishes. included in RN 0.27 also sounds promising\n. I haven't had a chance to see if this issue is fixed in the latest Navigation Experimental but it seems that it is possible to disable transition animations on every scene by passing duration as 0. This avoids the flaky transition overlay in my GIFs above\n. @af7 Not sure if this has been resolved. Have you tried as a workaround disabling the animations? I have found that this issue seems to happen most frequently when there is a TabBar on one of the components. So as a workaround I disabled the animations on the TabBar itself and enabled animations on other scenes. \nIn the below you can see duration is set to 0 on the entire TabBar and enabled on the FAQ scene which can be navigated to via the Home Screen. Which results in an animation when the FAQ is pushed onto the stack, but no animation when it is popped off. Its a compromise\n```\n\n\n\n\n\n```\n. @af7 I haven't found a proper solution, but its possible to leave animations enabled on all other scenes that are not part of the TabBar. The transitions look okay to me so far but I haven't had time to investigate a proper solution or if the latest versions of RNRF and RN have resolved the issue. I am on RNRF 3.30.2 and RN 0.29.0, I will be updating soon\n. Agree, also a bit confused about Modal usage.\nIf using a Modal as a way of reporting App status to the user e.g. \"Network connection failed\" etc. \ndisplaying the Modal works fine I can show it on each screen as the user navigates. \nHowever as Actions.pop() (or maybe ActionConst.BACK in latest version) is used to dismiss the Modal, if I push another route to the stack and then try to dismiss the Modal it instead pops the most recently added route from the stack and the Modal is stuck there\nIs there a better way to implement or is it possible to override onNavigate on the Modal component for example? I tried adding it as a prop to the Scene but it prevented the component from rendering\nE.g.\n```\n      \n\n\n\n      </Scene>\n        <Scene key=\"statusModal\" component={StatusModal} \n           onNavigate={ ()=> Actions.loginScreen()}/>\n    </Scene>\n  </Router>\n\n```\nEDIT: Instead of using Actions.pop() to dismiss the modal I set a boolean {hide: true} to the StatusModal to return an empty view or if there is an error pass 'Actions.statusModal({error: error, hide: false})' to display the Modal with the error.\n. @heat @charpeni @cridenour I tried to submit a pull request, but got permission denied. Here is the example of Modal usage I was trying to submit:\n``` jsx\nimport StatusModal from './components/StatusModal'\n\n\n\n\n\n\n\n\n\n```\nThen in the StatusModal Component we can define what we want it to look like and what props can be passed to it:\n``` jsx\nclass StatusModal extends Component {\nconstructor(props) {\n    super(props)\n    // set state with passed in props\n    this.state = {\n      message: props.error,\n      hide: props.hide,\n    }\n    // bind functions\n    this.dismissModal = this.dismissModal.bind(this)\n  }\ndismissModal() {\n    this.setState({hide: true})\n  }\n// show or hide Modal based on 'hide' prop\n  render() {\n    if(this.state.hide){\n      return (\n        \n\n      )\n    } else {\n        return (\n          \n{this.state.message}\n\n        )\n      }\n  }\n}\n```\nLastly when calling the Modal pass the props defined in the component, for example an error message and a 'hide' prop of false to display the Modal:\nActions.statusModal({error: \"Network failed...\", hide: false})\nWhen the Modal is pressed it will set hide to true and return an empty view.\n. @omeid @flare216 yes, unfortunately there is a flaw with my solution, the Modal never gets popped from the stack so will only appear once, other pushes of the Modal will result in error. \nI have been trying to create another solution but have been unsuccessful so far. \nPotential solutions could be the ability to remove a Scene from the stack by name, (after checking that it exists on the stack), as @aksonov proposed e.g. removeScene(ACTION_NAME) or the solution that @omeid proposed above, either would work. Unfortunately I don't know if I would be able to figure it out myself\n. Thanks @aksonov, I'll give that a shot and see if I can submit another PR for the docs\n. @vandervidi From what I understand components attached to a tab are not unmounted when you switch between different tabs on a tab bar and will only re-render if their state changes. \nFor example if using something like redux you need listen for a \"jump\" action, and then change state in order to hook into one of the React lifecycle hooks like componentDidUpdate or componentWillReceiveProps.\nFor example doing something like this will alllow you to tell if a tab is selected:\n``` javascript\n// listen in reducer for tab1 selected\n// Note: jump action is fired by defaultReducer attached to main Router (see example project)\ncase \"jump\":\n      if(action.key==\"tab1\") {\n        return {\n          ...state,\n          tab1: true\n        }\n      }\n// reset tab1 to false (triggered by action call in component)\ncase TAB_ONE:\n      return {\n        ...state,\n        tab1: false,\n      }\n```\njavascript\n// Tab 1 Component\n  componentDidUpdate(prevProps) {\n    // on tab1 press\n    if(this.props.tab1) {\n      console.log(\"Tab 1 Pressed\")\n      // fires TAB_ONE action\n      this.props.resetTab()\n    }\n  }\n. @aksonov Yes Actions.POPUP_NAME will show and Actions.pop() will dismiss the Modal, as long as another route is not pushed onto the Stack before trying to dismiss the Modal. If that happens the Modal is no longer at the top of the stack so it is stuck there. React Native now has a built in Modal customizable component for pop ups.\nI am using the Modal to display a status message that does not stop the user from navigating when it is displayed for example a network connectivity Modal: \n\nIs there a way to remove the Modal from the stack if it is no longer at the top?\nThe only other solution to this scenario that I could think of is to have the Modal as a component that can be wrapped around all other components and shown and hidden based on state.\n. @aksonov yes I think that would be a great feature to have! I'm sure there are other scenarios where it would be very useful to be able to pull a scene from the stack. \nI did see that someone else was asking for a similar feature in this issue/question\n930\n. @designbuildplay Further to what @cridenour suggested If you are using something like redux this is how I am detecting a tab change:\nListen for a \"jump\" action, and then change state in order to hook into one of the React lifecycle hooks like componentDidUpdate or componentWillReceiveProps.\n``` javascript\n// listen in reducer for tab1 selected\n// Note: jump action is fired by defaultReducer attached to main Router (see example project)\ncase \"jump\":\n      if(action.key==\"tab1\") {\n        return {\n          ...state,\n          tab1: true\n        }\n      }\n// reset tab1 to false (triggered by action call in component)\ncase TAB_ONE:\n      return {\n        ...state,\n        tab1: false,\n      }\n```\njavascript\n// Tab 1 Component\n  componentDidUpdate(prevProps) {\n    // on tab1 press\n    if(this.props.tab1) {\n      console.log(\"Tab 1 Pressed\")\n      // fires TAB_ONE action\n      this.props.resetTab()\n    }\n  }\n. The default transition animation is horizontal, just needs to be changed to 'vertical' in the Scene declaration, e.g.\n<Scene key=\"Scene1\" component={Scene1} type=\"push\" direction='vertical' />\nMore info here:\nhttps://github.com/aksonov/react-native-router-flux/blob/master/docs/API_CONFIGURATION.md#animation\n. @Roilan I tried something similar and could see that the Background component was there in the component tree, by using the Nuclide React Native Inspector but I could not get it to render. I tried playing around with the new zIndex for iOS also but nothing I did seemed to help\n. @joenoon I am trying to do something similar, but instead I am trying to put a Component in the foreground of every Scene, to serve as a status error message that can be displayed or hidden based on props on every scene, e.g. no network connection. \nThe reason I am trying this is because the current Modal method usage causes Navigation issues if a route is pushed to the stack before the Modal is dismissed.\nSo I wrap each scene in an Error Modal as @Roilan showed me like this:\njsx\n// Create Component Wrapper\nconst ComponentWrapper = ComposedComponent => class extends Component {\n  render() {\n    return (\n      <ErrorModal>\n        <ComposedComponent {...this.props} />\n      </ErrorModal>\n    )\n  }\n}\n// Inside the Router wrap the Component with the wrapper\n<Router createReducer={this.reducerCreate.bind(this)} getSceneStyle={getSceneStyle} >\n    <Scene key=\"root\">\n          <Scene key=\"loginScreen\" hideNavBar component={ComponentWrapper(LoginScreen)}/>\n    </Scene>\n</Router>\nconst getSceneStyle = (props, computedProps) => {\n  const style = {\n    backgroundColor: 'transparent',\n    shadowColor: 'transparent',\n  };\n  return style;\n};\n\nHowever all I get is the Modal on top of a white background. I'm not sure what I did wrong? Thanks\n923\n893\n. @joenoon Thanks, I'll try a simpler implementation, maybe I goofed on the styling\n. @anton6 Try adding this to a Schema:\n<Schema name=\"noSwipe\" sceneConfig={Navigator.SceneConfigs.HorizontalSwipeJump.gestures = null}/>\nThen add the schema to the Route like this\n<Route name=\"scene1\" schema=\"noSwipe\" component={Scene1} />\nNote that this will also disable transition animations. I could not find another way to disable gestures without disabling animations when I was running v2\n. ",
    "micahkatz": "In ^4.0.0-beta.26, you can just put hideTabBar={true} on any scene and it will hide the tab bar for that scene or for the whole navigation inside of that scene. @ajaykumar97 you can use Actions['yourtabroute'](); to switch between tabs\nFor example, if you have Tab1 and Tab2, and you are currently in Tab1, you can call Actions['Tab2'](); to switch to Tab2. ",
    "j-funk": "This is not working for me in v4.0.1.  The hideNavBar prop works on any nested Scene, but not hideTabBar.\n<Stack\n          key=\"home\"\n          title={AppConfig.appName.toUpperCase()}\n          icon={() => <Icon name=\"planet\" {...DefaultProps.icons} />}\n          {...DefaultProps.navbarProps}\n        >\n          <Scene key=\"home\" component={AboutComponent} />\n          <Scene\n            hideTabBar\n            hideNavBar\n            key=\"designer\"\n            title=\"DESIGNER\"\n            component={DesignerContainer}\n            Layout={DesignerComponent}\n          />\n        </Stack>. ",
    "michalpetrov": "Still not working in 2.0.5\n. I'm not sure if this is the same problem, but when I have tabbar router with tree routes in it and I click on the tab button, then Tabs component is rerendered four times. The view seems to be switched immediately but applying the \"selected\" style on the new selected tab button is lagging cca 1 second. \nTested with version 2.0.5.\n. ",
    "Proyoyo": "Works fine for me. I'm using 2.0.5.\n. I had the same issue. I fixed it by using npm 3 instead of npm 2.\n. A support for this would be really useful\n. I'm having this issue as well.. ",
    "jmacedoit": "Perhaps a \"log out\" case where you need to manipulate some data in onPop?\n. You are right, and I agree with you. I just lacked a better example - The thing is I'm coming from your other implementation using redux and I have a mix of questions that I'm not sure are related...I'm starting to think that my true question is related to custom actions.  In redux router, your reducer returned a state which was used by the router component to know how it should render itself. I could, however,  create my own reducer to process custom actions that were  supposed to change  the route stack in a way different than the simple push /pop /replace primitives. What is the way to accomplish that here ?  Is it related to onPop, onReplace, etc...? \n. Please let me know if this should be in a different issue:\nImagine there's  LogIn, MembersArea and EditProfile scenes/routes. And that after the user logs in, he should go to EditProfile, but with MembersArea also in the stack, and not LogIn.\nSo this is the route stack evolution I want:\n[Login]----logs in---->[MembersArea,EditProfile]----back (pop)--->[MembersArea]\nHow am supposed to do the log in step in terms of Action calls?\n. With the redux specific implementation version -  https://github.com/aksonov/react-native-redux-router -  it was possible to create custom actions... This is precisely what I would like to do with this implementation (since the other is being discontinued) ... \n. I'm not sure I understand... You will create an action where it is possible to specify the stack? \n. ",
    "drojas": "Hi, thanks for sharing this, it's very valuable. This is what I'm doing, please correct me if there is a more \"idiomatic\" way to do it.\nLogic that I want attached to a specific routing event (like navigate from here to there implies that ...) is being dispatched as plain actions alongside the routing action. But, logic that should be attached to every routing event (like serialising, remote controlling, automatic fetching) is embedded in some \"higher order action\" that manages routing actions.\nPS: However, as the routing actions are abstracted away, it's not 100% clear how to achieve what @jmacedoit is trying to do with the stack. Perhaps a public api for action creators might be a good approach.\n. ",
    "mangogogos": "So Im gathering that route components MUST be connected? The design I had in mind is a container which is connected and passes those props down to purely visual scenes, chosen by the current route. Is there a way I can get this type of behaviour without having to connect too many components? I really don't need to have any components but the container be connected\n. I had more in mind that having a connected component contain the router would cause state changes to propagate to the current scene. I have a container which is subscribed to a redux store that has inside it a router. The container takes its props and delegates them to the routes but even though the container was updating with state changes, it didn't seem like the routes were updating to receive the new values\n. Would you suggest just connecting all subcomponents then? To me that seems to go against redux but you would consider every route to be a container?\n. This seems fair! I will redesign my selectors and give it another go, thanks!\n. That would be a great compromise! Allows scene components to be oblivious to redux but still adds selective behaviour\n+1\n. yeah inlining like that should work! thanks @herby looks like everything I needed was there all along!\n. Ahh yes my bad! \n. Excellent API redesign, thanks!\n. ",
    "everhusk": "@herby Brilliant idea indeed :+1: Just a question about how you structure your RN app, do you keep your entire router defined in one file under the Provider, or do you split it up?\n. Also, do you nest your components under the container they should be a part of? For example\n<Route name=\"container1\" component={connect()(container1)}>\n  <Router>\n    <Route name=\"component1a\" component=\"component1a\"/>\n    <Route name=\"component1b\" component=\"component1b\"/>\n  </Router>\n</Route>\n<Route name=\"container2\" component={connect()(container2)}>\n  <Router>\n    <Route name=\"component2a\" component=\"component2a\"/>\n    <Route name=\"component2b\" component=\"component2b\"/>\n  </Router>\n</Route>\n. ",
    "thngdude": "@herby, I'm trying to figure out how to implement your solution. Where and how would you define the selectFnForFoo function?\nAlso, I'm assuming you would also have to define something like the following in the component?\nexport default connect(state => ({\n    state: state.counter\n  }),\n  (dispatch) => ({\n    actions: bindActionCreators(counterActions, dispatch)\n  })\n)(CounterApp);\nThanks\n. @herby I got it working. Thank you!\n. @pewh Is this possible with nested Routers? I am trying to have different styled Navigation Bars for different screens. For instance, one screen may have a green navbar and another may have a red navbar.\nThe code below routes correctly, however no style is applied to the navigation bar in the signin route.\n`< Router>\n<Route hideNavBar={true} name=\"launch\" component={Launch} initial={true} wrapRouter={true} title=\"Launch\"/>\n            <Route name=\"signin\">\n                <Router navigationBarStyle={styles.navBar} titleStyle={styles.navTitle}>\n                    <Route hideNavBar={false} name=\"signinmain\" component={SignIn} title=\"SignIn\"/>\n                </Router>\n            </Route>\n        </Router>`\nconst styles = StyleSheet.create({\n  navBar: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'green',\n  },\n  navTitle: {\n    color: 'white',\n  }\n});\nApoligies for the bad styling ... I can't figure out how to format it correctly.\n. @pewh Thanks, I tried your suggestions, and the navbar appears, but no title is present and the styling is the default style.\n. You were absolutely right. Thanks! Is there any official documentation regarding sceneConfigs? I tried searching but only found referrals to the source code.\n. Ah, I see. When you refer to docs, are you talking about the readme or is there something I'm missing? I've been trying to undersatnd how this awesome project works by looking at the code. Thanks\n. ok, I feel like an idiot. \nI had tried the switch type on router 1 before, and after your comment un-nested everything in router1 and set bRoute's type=\"switch\". And... yes, I got my effect. Thank you!\n. Thanks, @aksonov. Is this currently documented somewhere? Perhaps there's a README I missed.\nBtw, this library is really awesome. Thanks for your work.. Ok, I got it working. I would be willing to contribute to add a section about this to the documentation for v4. However, this would be a first for me (contributing documentation) and could use some guidance.\n<Scene\n          key=\"tabbar\"\n          gestureEnabled={false}\n          activeBackgroundColor='#ddd'\n          tabs\n          tabBarComponent={CustomTabBarComponent}>\n            <Scene key=\"tab1\" component={TabOne} title=\"Tab1\"/>\n            <Scene key=\"tab2\" component={TabTwo} title=\"Tab2\"/>\n          </Scene>\nYou must add the tabs and tabBarComponent props, where the CustomTabBarComponent may extend a component such as TabBarBottom from the React Navigation library.. ",
    "jonlong": "@Everhusk did you end up connecting a nested route structure like the one you referenced here?\nI'm trying to do exactly the same thing, but having a tough time figuring out how the props would get from container2 to component2a in your example.\n. ",
    "chetstone": "Thanks for the response. I have created new issues for problems 1,3, and 4. Agreed, I don't believe problem 2 is a problem at the moment.\nI have rethought my approach and for my app it may make more sense to implement the entire router in the subcomponent. In that case issue #62 would be the highest priority for me.\n. Thanks for this. Can we also have a renderTitle? My app has a drop-down menu from the title button.\n. Hmmm. That makes it worse. Now both Tab1 and Tab3 are highlighted in the tab bar, and the view is of Tab1.\n. I spent some time last night and tried a couple of things but the code was\nvery hard to follow. If you're thinking of refactoring, maybe this should\nwait. Refactoring may be a good idea: my feeling (could be wrong) is that\nprocessing the children of  could be different. Somehow I think it\nshould not matter if the Router is a TabBar router or not --- any Router\n(or nested router) should be treated the same, e.g. it could have 'initial'\ndefined.\nWhat is different about a tab bar router is that it has to deal with an\nextra component (TabBar), and the actions are switch instead of push/pop.\nOtherwise the same.\nOn Tue, Dec 15, 2015 at 2:00 AM, Pavlo Aksonov notifications@github.com\nwrote:\n\n@chetstone https://github.com/chetstone could you look into this issue\nand fix it?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/aksonov/react-native-router-flux/issues/62#issuecomment-164691595\n.\n. I finally had some time to look at this again. @aksonov, the good news is that it looks like the structure of your code has improved a lot with the refactor. The bad news is I haven't gotten any smarter, and I still can't figure it out. \n\nIt looks like the error is caused by Tabbar:getChildrenState() being called with a null selectedRoute parameter on initial render. I've figured out a couple of ways to fix that --- the easiest for experimentation is just to add the prop initial=\"tab4\" to tabbar router like this:\n<Router footer={TabBar} showNavigationBar={false} initial=\"tab4\" >\nThen I get the error:\nCannot find router for route=tab4 current router=root\nand I'm stuck trying to figure that out.\n. Seems to be fixed in 2.3.6. Thank you!\n. This works. Thanks. Any reason why <Router> couldn't automatically pass its props?\nAlso, perhaps I need to file another issue but when the tabs are in a subcomponent and tabs are switched, they don't really switch, they are pushed. A back button appears in the Title bar and by clicking it you can backtrack through the tabs you pushed. This doesn't happen when the tabs are part of the main component, as in your example: Each tab replaces the previous one, and I believe that is the expected behaviour for tabs.\n. > What do you mean - Router couldn't automatically pass its props?\nAh, I see where I was confused. I have \n<Route name=\"tabbar\" component={TabContainer} />\nand in another file <TabContainer/> has:\nreturn (  <Router footer={TabBar}> ... )\nThe problem we need to work around is that TabContainer doesn't pass its props to Router. Gotcha.\nI'm not sure if I understand this comment though:\n\nI hope later we will be able to replace it within your customized UI screen:\n\nAre you talking about a contemplated change to react-native-router-flux or are you suggesting another way for users to work around this issue?\n. Yes that does seem to work. Thanks.\n. I was thinking about trying to help with documentation. There's still an awful lot I don't understand about this component, but perhaps I could take a stab at rewriting the readme and you could review it.\n. @MITDelian Thanks for the chatroom. See you there.\n@aksonov Thanks. But I'll want you to review docs carefully please before pushing.\n. You have a route as a child of a route? I think you need to wrap it with a router:\n<Route name=\"tabbar\" initial>\n      <Router footer={TabBar} showNavigationBar={false}>\n                        <Route onEnter={(route)=>{console.log(route.getName()); return true;}} name=\"home\" schema=\"tab\" component={Home} {...props} imageSource={require('image!home')} />\nDon't know if that will fix your problem or not, but what you have doesn't look right.\n. I've worked around this by removing the redux-related stuff from the Example. The comments in the Example state the redux stuff is optional, but it's not totally obvious how to remove it for someone not familiar with redux. \nIMHO the Example is getting a bit too complicated. It seems like the redux features could be demonstrated in a separate, much simpler example. \n. I saw something similar, when I was trying to use the example from @nyura123's PR  for react-native-tableview. hideNavBar={true} was not working in the editing routes \"Example with editing mode\" and \"Custom Editing Example\". It should hide the main navbar and allow the route-specific navbar to be seen but did not. This seems to be fixed in 2.3.5. \nBut now there is another regression: With 2.3.5 and clicking on any of the other (non-editing) routes, the Back button is missing from the navbar. This works fine in 2.1.8, and in 2.2.4, the back button is there but does not work.\n. Try adding \nsceneStyle={{paddingTop: 64}}\nto your <Router>.\nSee issue #103.\n. Well I refactored so I'm no longer getting the Key root is already defined! warning and I'm still getting the error when I push a scene. Is it perhaps not supported to push from within a tab bar to a scene defined outside the tabs?\n<Router  createReducer={reducerCreate}  >\n              <Scene key=\"root\" hideNavBar={true} >\n                  <Scene key=\"logout\" component={Logout} title=\"Logout\"  hideNavBar={false}/>\n                  <Scene key=\"switch\" tabs={true} initial={true} component={AltSwitch} >\n                      <Scene key=\"tabbar\" tabs={true} initial={true} default=\"button\" >\n                          <Scene key=\"history\"  component={MalaHist} title=\"History\" icon={TabIcon}  />\n                          <Scene key=\"button\" component={MalaMain} title=\"Button\" icon={TabIcon} initial={true}   />\n                          <Scene key=\"settings\" component={MalaSettings} title=\"Settings\"  icon={TabIcon} />\n                      </Scene>\n                  </Scene>\n              </Scene>\n          </Router>\n. Hmmm. Found it. I was doing onPress={Actions.logout} and that doesn't work, but onPress={()=>Actions.logout()} works.\nFunny. It worked with version 1.\n. Thanks, no, this is iOS.\nOn Tue, Apr 12, 2016 at 10:05 PM, Eric notifications@github.com wrote:\n\nIf you are talking about Android, you should upgrade RN to 0.23.1\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly or view it on GitHub\nhttps://github.com/aksonov/react-native-router-flux/issues/520#issuecomment-209217447\n. I set a state variable goingBack to disable subsequent clicks of the back button . Note: This can happen in other circumstances than just rotating the device. I first noticed it in my app when hiding/showing the StatusBar with react-native-navbar. I tried adding a button to show/hide the statusbar  in the RNRF example but it didn't show the problem. There must be something else react-native-navbar is doing when it toggles the status bar that triggers the issue. Perhaps this changes the layout of the main view of the app.\n. This seems to be fixed in RN 24. I used the versions recommended by @joenoon and the problem is not there. Also, thankfully, my app seems to work with those versions and the issue is gone. Yay! Thanks @joenoon and everyone for your work on this.\n. Apologies for not reading your proposal carefully enough to really understand it, but it sounds like a major API change and I wonder if it wouldn't be better to fork and create a new project? The V3 API seems to work OK for many users and it is still far from stable with breaking changes to NavigationExperimental still coming fast and furious. It seems to me to be confusing to have so many API's and changes happening all at once in the same repo. \n\nOn the other hand, if you think this new proposal is radically better and will provide enough improvement that a great majority of react-native-router-flux users will enthusiastically embrace it and be willing to change their code to use it, then maybe it's OK to do it here. \nMy two cents.\nAnd by the way @aksonov thanks so much for your work. \n. Where should you put the Actions.refresh() call?\nWhen I put the refresh call in my flux action (which is called when there should be a change to the style) It only updates the navbar style on the currently selected tab. When I switch tabs, it reverts to the old style.\nThe only component that updates whenever I switch tabs is my tabbar, so  I tried putting the refresh in my Tabbar component in componentWillReceiveProps or componentWillUpdate. Then I get infinite recursion because every time it is refreshed, Tabbar gets new props and it refreshes again. \n. @joenoon I discussed the tab bar regression in issue #1151 . I identified the offending commit. This is a pretty serious problem that has not been addressed.\n. This seems to be a regression in RNRF. Reverting to version 3.34 fixes the issue.\nPerhaps #1136 is related.\nActually, version 3.35 is OK too. The last commit that works is 2ff66a2f7bf20362ba37490460cd532362f1d6ec. The regression is apparently caused by       d03e70b34733f6fc21df072d4bcb2d7641bdf86d\n. @benstepp  , @aksonov could you take a look? The RNRF example shows the problem. Click on Go to TabBar and all 5 tab icons are shown. Then click on a tab and only that tab icon is shown.\n. This seems to be fixed. Tested with RN 0.33.1 and RNRF 3.37.0. This was happening because of https://github.com/facebook/react-native/issues/2716#issuecomment-265844514. Adding the missing line in my AndroidManifest.xml fixed the problem.. ",
    "skeie": "... Or have a listener on route change\n. Sorry, we have a Route then a Router then a Route. I updated the example now.\n. ",
    "evgenyrodionov": "onEnter and onLeave (like react-router does) will be truly awesome.\n. @aksonov please land it in userland with hooks onEnter and onLeave, because some developers want restrict certain scenes, not entire app.\n. ",
    "burgalon": "Where can I see this? I'm not finding any onEnter/onLeave in the source code\n. I'm encountering a similar issue where I need the navigation bar to pass props from the scene component state, and so I'm not sure how to go about this.\nFor example: A search button on the NavigationBar button needs to route into the SearchScreen scene and pass the current search state (no Redux)\n. @aksonov When invoking Actions from within the component - passing props works well.\nHowever since the Navigation bar is definer inside the Router, I'm not seeing a way to pass props from within the current component\n. As @aksonov suggested:\nIt seems like the way around it is to push the state outwards and use Actions.refresh({someState} and keep using Actions.refresh() instead of this.setState. This was the NavigationBar will be able to access the props.\n. I guess we can close this\n. Doesn't it make sense for pop({params}) to act like pop() + refresh({params}) ?\n. I'm looking at Reducer.js POP_ACTION and wanted to add ...props similarly to refresh but it doesn't seem like it's working out\n. ",
    "Arnoldnuo": "Can't I use onEnter/onLeave now?\n. ",
    "mykelaballe": "how to implement the onEnter and onLeave?\n. ",
    "gr4yscale": "Thanks @lrettig, I searched through the code for a while and discovered this, too - too late before reading this issue. =\\ There are so many layers between RN, Exponent, and this component that it's rather confusing. Still very useful. I would be happy to help with documentation if I understood it all a bit better.\n. ",
    "smallsaucepan": "@aksonov @chetstone Thought I might look at this. Do either of you have any changes pending?\n. Hi @aksonov. I wouldn't mind taking a look at #62 if you still want some help.\n. ",
    "thomasjonas": "@aksonov Sorry, but I have another question about this... I'm using the initial screen (launch) to check the user status and base my redirect on it. But what do you do when you logout? Is there are way to clear the complete route stack and transition to the login screen? I think this behaviour is possible in ExNavigator (https://github.com/exponentjs/ex-navigator/blob/master/ExNavigatorMixin.js#L61), is there a way to access those functions this project?\n. I think Launch stands for a splash screen... There you could do an Ajax request to check authentication. Based on the outcome you would navigate to the right page. But maybe the login and launch could be the same component? And have the render function take care of showing the right view?\n\nOn 15 Dec 2015, at 07:55, Jerry Wang notifications@github.com wrote:\nWould it make better sense to have Login be the initial that leads to Launch?\n\u2014\nReply to this email directly or view it on GitHub.\n. Did you fix it? I had to update my React and all other packages to the latest version... which was kind of a hell. In the end I just started from scratch again.\n. \n",
    "jw84": "Would it make better sense to have Login be the initial that leads to Launch?\n. I got it figured out\nFor me I have now set as Launch checks for Parse.currentUser\nIf not found then show the auth options\n\nI also pass extra custom data to Login for the switch case to display the corresponding SDK wrapper to save the auth data and logging into Parse\nWhich then kicks off to my TabView\nI'm still trying to make sense of the new toys in 1.0.7 like renderLeftButton and renderRightButton, any insight there?\n.  Also, is there a way to redirect by Actions rather than just return the TabView directly if the user is logged in?\nrender() {\n        var User = this.data.user\n        if (!User) { \n            return (\n                <View style={styles.container}>\n                    <Text style={styles.logo}>Hello!</Text>\n                    <Icon.Button name=\"facebook-official\" backgroundColor=\"#3b5998\" onPress={()=>Actions.login({data:\"facebook\", title:\"Login with Facebook\"})} size={32} width={220} borderRadius={0} padding={10}>\n                        Login with Facebook\n                    </Icon.Button>\n                    <Icon.Button name=\"twitter-square\" backgroundColor=\"#55acee\" onPress={()=>Actions.login({data:\"twitter\", title:\"Login with Twitter\"})} size={32} width={220} borderRadius={0} padding={10}>\n                        Login with Twitter\n                    </Icon.Button>\n                    <Icon.Button name=\"envelope\" backgroundColor=\"#aaaaaa\" onPress={()=>Actions.login({data:\"email\", title:\"Login with Email\"})} size={29} width={220} borderRadius={0} padding={10}>\n                        Login with email\n                    </Icon.Button>\n                </View>\n            ) \n        }\n        return (<ActivitiesFeed />)\n    }\n. Related to #82 \n. Brilliant!\n. ",
    "TangRufus": "@aksonov, can you provide an example of your Launch 'initial' screen redirect implementation?\nIn my app, this would throw an Cannot read property 'getCurrentRoutes' of undefined error\njs\nclass Launch extends Component {\n  render() {\n    Actions.login();\n  }\n}\nFor reference, this works on button pressed:\n``` js\nclass Launch extends Component {\n  goLogin() {\n    Actions.login();\n  }\nrender() {\n    return (\n      \nGo to Login page\n\n    );\n  }\n}\n```\nThanks!\n. To clarify, i am facing the same issue as react-native-fellowship/react-native-side-menu#72\n. ",
    "ericraio": "@TangRufus I managed to hack around this issue until a proper fix is in place. It seems like it's a race condition issue.\njavascript\n    render() {\n      setTimeout(() => {\n        Actions.login();\n      }, 50);\n      return ( <View /> );\n    }\n. ",
    "nandhakumarskce": "I want to redirect the scene based on the authentication by firebase. ",
    "narychen": "I found the problem causing this issue. refer to http://stackoverflow.com/a/22524985/5020095\nBecause the example package is com.example and my android phone have a same name package.\nI changed the com.example to com.examplei and the issue fixed.\n. ",
    "markburns": "Happy to help out. Just picking up a project again that uses this, and found some incompatibility with the latest react-native. Thought I'd browse the issues to see if it's reported and found this issue. Even better if I can just fix it as soon as I understand the problem.\n. I think everyone here (including me) was confusing collaborators/contributors. It seems @aksonov is just asking for help but is not asking about adding people as collaborators. \nBTW, you might want to follow the model of trusting/adding people based on their contributions here or elsewhere.\nE.g. Rubinius is contributor-friendly:\nhttp://www.programblings.com/2008/04/15/rubinius-for-the-layman-part-2-how-rubinius-is-friendly/\nIt can be rewarding to be listed as a collaborator on a project and the trust can inspire people to contribute even more than the initial contribution. \n. ",
    "thachp": "@aksonov - I will be happy to help out.\n. What is not working? Can you provide repro(s)?\n. ",
    "mmazzarolo": "Hi @aksonov, I'm using react-native-router-flux in production and I would like to help when possible. \n. Thank you @BigPun86, your solution is working for me.\nIf anyone needs an example I used the sidebar in this common pattern:\n- A session screen that just checks if the user is already logged in on startup\n- An auth screen where I manage signin/signup\n- Many other screens where that show the true content of the app, all using the sidebar\nRouter.js\njavascript\nexport default class Routes extends React.Component {\n  render() {\n    return (\n      <Router>\n        <Route component={SessionScreen} name='session' type='replace' hideNavBar={true} initial={true} />\n        <Route component={AuthScreen} name='auth' type='replace' />\n        <Route name='main' hideNavBar={true} type='reset'>\n          <SideDrawer>\n            <Router>\n              <Route component={PlaceScreen} name='place' title='Place' />\n              <Route component={ItemScreen} name='item' title='Item' />\n              ...\n            </Router>\n          </SideDrawer>\n        </Route>\n      </Router>\n    )\n  }\n}\nSideDrawer.js (I'm using 'react-native-drawer')\n``` javascript\nimport Drawer from 'react-native-drawer'\nclass SideDrawer extends React.Component {\n  render() {\n    return (\n      }\n        tapToClose={true}\n        openDrawerOffset={0.2} \n        panCloseMask={0.2}\n        closedDrawerOffset={-3}\n        styles={{ drawer: drawerStyle, main: mainStyle }}\n        tweenHandler={(ratio) => ({ main: { opacity: (2 - ratio) / 2 } })}\n      >\n        {React.Children.map(this.props.children, c => React.cloneElement(c, {\n          route: this.props.route\n        }))}\n      \n    )\n  }\n}\n```\nBe careful of #172 that you can fix by adding in AuthScreen.js:\njavascript\ncomponentWillUnmount() {\n  // Fix https://github.com/aksonov/react-native-router-flux/issues/172\n  Actions.currentRouter = null\n}\n. Thank you @BigPun86! \nYou don't need to pass the schema/styles to the children:\nRouter.js\n``` javascript\nconst hideNavBar = Platform.OS === 'android'\nconst paddingTop = Platform.OS === 'android' ? 0 : 8\nexport default class Routes extends React.Component {\n  render() {\n    return (\n      \n\n\n    <Route schema='boot' component={SessionScreen} name='session' initial={true} />\n    <Route schema='boot' component={AuthScreen} name='auth' />\n\n    <Route name='main' hideNavBar={true} type='reset'>\n      <SideDrawer>\n        <Router\n          sceneStyle={styles.scene}\n          navigationBarStyle={styles.navigationBar}\n          titleStyle={styles.title}\n          barButtonIconStyle={styles.barButtonIcon}\n          barButtonTextStyle={styles.barButtonText}\n        >\n          <Route schema='main' component={PlaceScreen} name='place' title='Places' />\n          <Route schema='main' component={PaymentScreen} name='payment' title='Payment' header={Toolbar} />\n        </Router>\n      </SideDrawer>\n    </Route>\n\n  </Router>\n)\n\n}\n}\n```\nThe router above is working for me, hope it helps.\n. Thanks @MITDelian, but I just stolen and implemented the idea from @GarrettSmith's comment.\n@aksonov can you take a look at #69 ? I can be helpful with the README/wiki if you want!\n. +1, it would be really helpful\n. I've found a workaround: you can use the navigationContext of the React-Native Navigator to get the current route from the component itself.\njavascript\ncomponentWillMount() {\n  const navigationContext = this.props.route.parent.delegate.refs.nav.navigationContext\n  console.log(navigationContext)\n  navigationContext.addListener('didfocus', event => {\n    console.log(navigationContext.currentRoute.name) // This is the current focused route\n  })\n}\nYou can find info about the listenere here.\nThe listener is called on every route change, which means that if you need to know if the component is the focused one you can do something like this in the listener callback (and you can update the state in redux/flux here too):\njavascript\nconst isComponentFocused = navigationContext.currentRoute.name === 'componentName'\nIt worked fine for me so far, but it doesn't seem to be an optimal solution  in my opinion because you need to dig deep to find the navigationContext and also for the same reasons stated by @lynndylanhurley in the issue #158 \nRelated issues:\n158 #78\n. Thank you for the new version aksonov! (And also thank you for the awesome work you're doing with this router).\nThe Redux support seems to be working, now I can update my store currentRoute from my own reducer:\njavascript\ncase Actions.AFTER_ROUTE:\ncase Actions.AFTER_POP:\n  return state.set('currentRoute', action.name)\n...but I'm still trying to find out the best way to handle the currentRoute information from a component.\nFor example:\nI have a component that shows a list of items fetched from a server.\nI need to trigger the server request (update the list) when the component is focused.\ncomponentDidMount is not the right place, because I need to trigger the request on POP too.\nWhat I'm doing at the moment is using the didFocus listener like in my previous comment:\njavascript\ncomponentWillMount() {\n  const navigationContext = this.props.route.parent.delegate.refs.nav.navigationContext\n  console.log(navigationContext)\n  navigationContext.addListener('didfocus', event => {\n    console.log(navigationContext.currentRoute.name) // This is the current focused route\n  })\n}\nAm I missing something? Does anyone know an alternative solution?\n(maybe #158 is a better place for talking about this)\n. Yes, it's Redux.\nYou mean something like changing the state (i.e.: setting justFocused to true) and catching the state change from the component in componentDidUpdate/componentWillUpdate and trigger the fetching?\nI thought about it at first but it just didn't seem the optimal solution... but it's still probably better than the above solution.\n. Did it this way (using Redux):\n1. Connect the Router with Redux and before using it\njavascript\nimport ReactNativeRouter, { Route } from 'react-native-router-flux'\nconst Router = connect()(ReactNativeRouter.Router)\nNow when you use a <Router> it will be connected to the store and trigger the following actions:\n- Actions.BEFORE_ROUTE\n- Actions.AFTER_ROUTE\n- Actions.AFTER_POP\n- Actions.BEFORE_POP\n- Actions.AFTER_DISMISS\n- Actions.BEFORE_DISMISS\nTake a look at this for an example.\n2. Catch the interested actions in your reducer\nI have a global reducer (where I keep the information needed by all my app) where I set the currentRoute.\njavascript\ncase Actions.AFTER_ROUTE:\ncase Actions.AFTER_POP:\n  return state.set('currentRoute', action.name)\nNow global.currentRoute will always have the currently focused route.\n3. Update your component on focus\nI'm doing it on componentDidUpdate of my payment component.\nIf global.currentRoute is payment and the previous global.currentRoute was different, than the component has just been focused.\njavascript\n  componentDidUpdate(prevProps) {\n    const prevRoute = prevProps.global.currentRoute\n    const currentRoute = this.props.global.currentRoute\n    if (currentRoute === 'payment' && prevRoute !== currentRoute) {\n      this.props.actions.doSomething()\n    }\n  }\n. Of course, I'll do it after work.\n. Maybe this can be useful: Take a look at this comment, I had the same problem in nested routers and fixed it following the hints of the issue #172.\n. @zxcpoiu is right, re-rendering <Router /> (for example by wrapping it in a Provider) prints that log.\n. Hello there, sorry but I don't get it, does sceneStyle work now?\nThe example of the first post is still not working for me  on 3.2.7.\n. Well... at least it's a funny bug \ud83d\ude04 \n\n. In the meanwhile here is a temporary solution I'm using in an app I'm working on, hope it can help (when the issue will be fixed just remove the row commented with // TO-DO in Toolbar.js and it should work):  \nrouter.js\n``` javascript\nimport React, { Platform, StyleSheet } from 'react-native'\nimport { Scene, Router, Modal, NavBar } from 'react-native-router-flux'\nimport MyScreen from './containers/MyScreen'\nimport Toolbar from './components/Toolbar'\nimport Colors from './theme/colors'\nimport Metrics from './theme/metrics'\nconst IS_ANDROID = Platform.OS === 'android'\nexport default () => {\n  return (\n    \n\n\n\n\n\n\n  )\n}\nconst styles = StyleSheet.create({\n  navigationBarStyle: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: Colors.PRIMARY\n  },\n  titleStyle: {\n    color: 'white'\n  },\n  sceneStyle: {\n    flex: 1,\n    paddingTop: Metrics.NAVBAR_HEIGHT,\n    backgroundColor: 'white'\n  }\n})\n```\nToolbar.js (used only on Android)\n``` javascript\nimport React, { StyleSheet } from 'react-native'\nimport Colors from '../theme/colors'\nimport Metrics from '../theme/metrics'\nimport Icon from 'react-native-vector-icons/Ionicons'\nexport default ({ title }) =>\n  \nconst styles = StyleSheet.create({\n  toolbar: {\n    backgroundColor: Colors.PRIMARY,\n    height: Metrics.NAVBAR_HEIGHT,\n    position: 'absolute', top: 0, left: 0, width: Metrics.DEVICE_WIDTH // TO-DO\n  }\n})\n```\nmetrics.js\n``` javascript\nimport { Dimensions, Platform } from 'react-native'\nconst IS_ANDROID = Platform.OS === 'android'\nconst { height, width } = Dimensions.get('window')\nexport default {\n  DEVICE_HEIGHT: height,\n  DEVICE_WIDTH: width,\n  NAVBAR_HEIGHT: IS_ANDROID ? 54 : 64\n}\n``\n. What version are you using? It is still working for me on\"react-native-router-flux\": \"^3.24.0\",` \n. @donnguyen, that's weird! Did you already try setting this: \njavascript\nposition: 'absolute', top: 0, left: 0, width: Metrics.DEVICE_WIDTH\nOn the toolbar like in my example? (Make sure to give it a width)\n. @miqmago \nOuch, you're right, I'm forcing a vertical layout on my current project.\nYou might be able to update the toolbar on layout changes but it might be a little too much effort when the best option is just to wait for a fix (or even better... directly sending a pull request if you're able to fix it).\n. @miqmago Don't worry I wasn't taunting you, I'm not able to help either... but the fix might not come soon in my opinion because there are many other prorities right now (this module exploded after RN0.23 unfortunately :crying_cat_face:)\n. I thought the problem was only with the Android toolbar, not with the iOS one... but I guess you're using  a custom toolbar for iOS, right?\nCan you post you code?\n. @lynndylanhurley did you find any way to handle that kind of navigation on react-native-router-flux 3?\nI'm working on something that in my opinion sounds really vanilla but it still seems too hard to achieve in this version: drawer on some main routes, no drawer in sub-routes.\nI'm facing a lot of issues: un-needed sub-schemes, the title sometimes doesn't work, the back button is not rendered etc... I'd love to help but unfortunately I have no time :(  \nIt worked perfectly on the previous version but sadly it seems to have a lot of problem now... I think I'm going to drop this router until it become more stable.  \nP.S.:\nDefaultRenderer: \njavascript\n_renderHeader(/*NavigationSceneRendererProps*/ props) {\n        return <NavBar\n            {...props}\n            getTitle={state => state.title}\n        />;\n    }\nNavBar: this.props.getTitle can't be null here, am I right?\njavascript\n_renderTitle(childState: NavigationState, index:number) {\n        const title = childState.renderTitle ?\n          childState.renderTitle():this.props.getTitle ? this.props.getTitle(childState) : childState.title;\n. Ops, didn't know about it. Thanks.\n. ",
    "lynndylanhurley": "Hi @aksonov - I'm sure you've seen it already, but I just pushed a fix for #176.\n. @aksonov - sure! I think this project would benefit from a test suite - would you like me to start with that?\n. @aksonov - onEnter is useful to me because most of the time it doesn't matter if a screen is visited using onPop, onPush, or onReplace. \nOne example is authentication. This is what I would like to do:\n``` js\n// checks if user is signed in, otherwise redirects to login.\nfunction isSignedIn() {\n  if (!store.getState().signedIn) {\n    Actions.LogIn();\n  } else {\n    return true;\n  }\n}\n// ...\n\n  // non-authenticated users can only see these routes\n  \n\n\n\n\n\n// authenticated users can see these routes\n  \n\n\n\n\n\n\n```\nIn order to accomplish this with onPop, etc. I would need to add the isSignedIn method to the onPop, onPush, and onReplace handlers of each individual route. I would rather have a single onEnter handler that operates at the parent Route level.\n. Thanks for the response @JeremDsgn. Can you please elaborate?\nActions contains a lot of properties, but I can't find one that reliably returns the current visible route.\nthis.props.title is not defined in my header component. The header component was added to the Router like this:\njsx\n<Router header={Header}>\n. I'm sorry, I don't think my initial post was clear. I'll try to elaborate.\nHere is my main component that contains the routes:\n``` jsx\nclass App extends React.Component {\n  render () {\n    return (\n      \n\n    <Route\n      name=\"Detail\"\n      component={Detail}\n      title=\"Detail\" />\n  </Router>\n);\n\n}\n}\n```\nHere is the header component that is referenced in the above code:\n``` jsx\nclass Header extends React.Component {\n  render () {\n// from here, how do I know which page I'm looking at?\nif (???? === 'Index') {\n  let title = 'this is the index';\n} else {\n  let title = 'this is the detail';\n}\n\nreturn (\n  <View>\n    <Text>{title}</Text>\n  </View>\n);\n\n}\n}\n```\nWhat can I replace the ???? with in the above code that will let me know what to render in the Header component?\n. If I use that same code in my app, this.props.title is undefined.\n. My actual code is only a little more complex. I'm using redux, so the routes are wrapped in a Provider, and the Router that has the Header component is nested within a parent Router.\n``` jsx\nclass App extends React.Component {\n  render () {\n    return (\n      \n\n\n      <Route name=\"SignedIn\">\n        <Router header={Header}>\n          <Route\n            name=\"Index\"\n            component={Index}\n            title=\"Index\"\n            initial={true} />\n\n          <Route\n            name=\"Detail\"\n            component={Detail}\n            title=\"Detail\" />\n        </Router>\n      </Route>\n    </Router>\n  </Provider>\n);\n\n}\n}\n``\n. Thanks @micksabox! Just to clarify, does this mean that in order to access the current route, I will need to addonPush,onPop, andonReplace` hooks to each individual route in my app?\n. This is what I would like to do:\n``` jsx\n// update the global redux store with the current route\nfunction onEnterHandler() {\n  let currentRoute = Actions.currentRouter.currentRoute;\n  store.dispatch(updateCurrentRoute(currentRoute));\n}\nclass App extends React.Component {\n  render () {\n    return (\n      \n\n\n      <Route name=\"SignedIn\">\n        <Router header={Header}>\n          <Route\n            name=\"Index\"\n            component={Index}\n            title=\"Index\"\n            initial={true} />\n\n          <Route\n            name=\"Detail\"\n            component={Detail}\n            title=\"Detail\" />\n        </Router>\n      </Route>\n    </Router>\n  </Provider>\n);\n\n}\n}\n```\nThe problem is that the onEnterHandler only gets called once when the page loads. So I end up with something like this:\n``` jsx\nclass App extends React.Component {\n  render () {\n    return (\n      \n\n\n      <Route name=\"SignedIn\">\n        <Router \n          onPop={onEnterHandler}\n          onReplace={onEnterHandler}\n          onPush={onEnterHandler}\n          header={Header}>\n          <Route\n            name=\"Index\"\n            component={Index}\n            title=\"Index\"\n            initial={true} />\n\n          <Route\n            name=\"Detail\"\n            component={Detail}\n            title=\"Detail\" />\n        </Router>\n      </Route>\n    </Router>\n  </Provider>\n);\n\n}\n}\n```\nAnd so on for each child Router.\nBut this still doesn't work because if I navigate back to the Login route from one of the SignedIn routes, the onEnterHandler is not fired again.\nIn this case, it's actually easier and more reliable to update the current router state at the componentWillMount stage of the individual screen components.\nBut that defeats the purpose of using the router in the first place, which is to manage the routing from a central resource.\nI feel like I'm missing something - is there a better way to do this?\n. @aksonov - would you accept a PR that introduces a way to access the current route?\n. @aksonov - see #183.\nThe value seems to be correct when it's checked, but it doesn't trigger a state update.\nFor my use case, the style and content of my header component needs to change when I change routes. The header component is not re-rendered when the value of Actions.currentRouter.currentRoute changes.\n. @behl1 - the only way I can find to do this is to manually update the state when a route component is mounted. For example:\n``` jsx\nclass Index extends React.Component {\n  // ...\n  componentDidMount () {\n    this.props.dispatch(currentScreenChange('Index'));\n  }\n// ...\n}\n```\nWhere currentScreenChange is a redux action that I created to set the router state manually.\nI don't like this solution for the following reasons:\n- It involves a lot of code repetition.\n- It takes something that should be the router's responsibility and makes it the responsibility of every screen in the app.\n- It creates another weird thing that all of my co-workers and I must remember to do when creating new routes for our apps.\n- Even this method doesn't seem to get called every time. I'm still trying to nail down the issue, but I think sometimes when routes are popped, the destination component doesn't fire componentDidMount. I could be wrong about the cause, but the point is that even this method isn't 100% reliable.\nI would prefer if there was a global callback for route changes that I could hook into. \nSomething like this would be ideal:\n``` jsx\nconst store = // ... create redux store\n// define a handler that is called whenever the current route is changed\nfunction onEnterHandler(nextScreenName, lastScreenName) {\n// dispatch route change event from a single, centralized location\n  store.dispatch(updateRoute(nextScreenName, lastScreenName);\n}\n// then in the render method, place the onEnterHandler on the top-level router:\n\n  // ...\n\n```\n@aksonov - how do you feel about this approach?\n. @aksonov - thanks, I'll test https://github.com/aksonov/react-native-router-flux/commit/78e5a7d891f4daea258e3d6baf9dce3e23f2bf0e ASAP!\n. Thanks @aksonov  - this works really well in all cases except for swipe navigation. I just submitted a PR to address this (see #204).\n. Thanks @aksonov!\n. I just created a Product Pains post for this. Please upvote:\nhttps://productpains.com/post/react-native/override-swipe-back-behavior/\n. @bodhi - I'm having a similar issue. I proposed a solution here: https://github.com/aksonov/react-native-router-flux/issues/158#issuecomment-181618505 - would something like this help you solve your problem?\n. I'm having the same problem.\n. I just created a Product Pains post for this. Please upvote:\nhttps://productpains.com/post/react-native/override-swipe-back-behavior/\n. I just pushed a workaround.\n. Hi @xanderlu - #204 was meant only to dispatch the BEFORE_FOCUS and AFTER_FOCUS events. It doesn't fix the No current route is set bug, or any other bugs.\nI haven't experienced the swiping issue - what are the steps to reproduce?\n. I'm having the same issue. Why is it complaining about initialState?\n. @deoqc - what do you think about this solution: https://github.com/aksonov/react-native-router-flux/pull/531 ?\nRight now it only dispatches the FOCUS action, but it could be extended to dispatch all the actions.\n. @deoqc - my app just needs to know which screen is the current screen. In v2, this was possible by listening for the BEFORE_FOCUS and AFTER_FOCUS actions. None of the actions dispatched by v3 provide this information. The FOCUS_ACTION action from #531 provides exactly that information.\nI hear what you're saying about creating a framework-agnostic system, but honestly I don't care about that at all. I don't think that matters to anyone in practice. We're tired and we just want this to be easy.\n531 is unobtrusive, it can't possibly break anything, and it makes redux integration as easy as possible.\nIf you're worried about continued maintenance, I was the one that implemented the original BEFORE_FOCUS and AFTER_FOCUS actions. This is me trying to continue maintenance on a feature that my apps depend on.\n. @deoqc - I appreciate you efforts in trying to help me. Your solution does work.\nI made #531 in an effort to reduce the amount of glue-code in my app, but I appreciate the reasoning behind createReducer system.\n537 should work as the createReducer system intended.\n. Hi guys, I just updated the README to make redux integration more clear. Please take a look and let me know if it can be improved:\nhttps://github.com/lynndylanhurley/react-native-router-flux#reduxflux\n. @caledhwa thx!! (^^,)\n. I don't completely understand reducerCreate's intended purpose. But as far as we're concerned, its purpose is to dispatch the action so that our app's reducer can consume it.\nIn other words, RNRF has nothing to do with redux. If we want to dispatch actions to redux, we must do it ourselves manually using the reducerCreate hook.\n. @zxcpoiu - your comment just made my day. happy to help :crocodile:\n. That's fantastic!! Thanks @aksonov!!!\n. I've been struggling with this for several hours. What is the proper way to set up the drawer with this configuration?\n``` js\n// scenes\n\n\n\n\n\n\n{/* ... more scenes */}\n\n\n\n```\n``` js\n// drawer\nclass MainDrawer extends React.Component {\n  static contextTypes = {\n    drawer: PropTypes.object,\n  };\nconstructor (props) {\n    super(props);\nthis.state = {\n  showDrawer: false,\n};\n\n}\ntoggle () {\n    const {drawer} = this.context;\n    const showDrawer = !this.state.showDrawer;\nif (showDrawer) {\n  drawer.open();\n} else {\n  drawer.close();\n}\n\nthis.setState({showDrawer});\n\n}\nrenderNav () {\n    return (\n      \n        {/ ... menu items /}\n      \n    )\n  }\nrender () {\n    const children = this.props.navigationState.children;\nreturn (\n  <Drawer\n    ref={(ref) => this.drawer = ref}\n    type=\"displace\"\n    content={this.renderNav()}\n    tapToClose={true}\n    openDrawerOffset={0.2}\n    panCloseMask={0.2}\n    negotiatePan={true}\n    tweenHandler={(ratio) => ({\n      main: { opacity: Math.max(0.54,1 - ratio) }\n    })}>\n    <DefaultRenderer navigationState={children[0]} />\n  </Drawer>\n);\n\n}\n}\n```\nFollowing the example, I tried this:\n``` js\n// scenes\n\n\n\n\n\n\n{/* ... more scenes */}\n\n\n\n```\nBut this doesn't work. I don't get the drawer icon, and if I try to create my own drawer icon manually using the rightTitle and onRight props, I can't access the drawer from the onRight method's context. For example, this also doesn't work:\n``` js\n    \n      }\n      onRight={() => {\n        console.log('context', this.context); // context is undefined\n      }}\n      title=\"Dashboard\"\n      key=\"Main\">\n  {/* ... scenes */}\n</Scene>\n\n```\nI'm using react-native 0.22.\n. Just pushed a fix. See #531\n. See also #537.\n. Thanks @caledhwa!!\n@aksonov - what do you think about this PR?\n. See also #537.\n. @aksonov - why isn't react-native v0.24+ declared as a dependency in the package.json file?\n. @aksonov - I will do that. Thanks for the merge :smiley:\n. I'm seeing this issue as well.\n. Hi guys, please try https://github.com/aksonov/react-native-router-flux/pull/553 and let me know if it solves the issue.\n. @cridenour - is 3.24 stable?\n. Also, if react-native v0.24+ is a dependency, why is it not listed as a dependency in package.json? How is anyone supposed to know which version of react-native to use with this?\n. Thx @cridenour! I updated to react-native 0.24 and everything is working fine now.\n. Thanks @aksonov!\n. how about something like this?\nhttps://github.com/skywinder/github-changelog-generator\n. I'm having the same issue.\n@Zianwar - that didn't help in my case.\n@fmmajd - can you show exactly what you did to get past this?\n. ",
    "gustavovnicius": "@aksonov, I'll be looking at #370. It's being a real pain for me. Do you have some idea that might help?\n. @aksonov I've found something that I dont know if it is correct:\nMy Scenes are configured like this:\n\nAnd...\n\nThis is a log from Reducers.js:17, note that only the \"login\" scene is on children, and at Reducers.js:20 it iterates on children. The \"drawer\" scene shouldn't be listed there too? Looking at the code, I'm wondering if this could solve the problem because at Reducers.js:20 it iterates on state.children, if the children tree was complete, it would have found the correct scene (I am calling  \"Actions.content()\" inside the \"login\" scene). Am I wrong? \n. > @gustavovnicius However Drawer should have only one child, check example.\n@aksonov, I didn't understood why... For me it should have as many as needed.\n. ",
    "charpeni": "@aksonov I'd be interested in helping you as collaborator by managing issues, propose and review pull requests, documentation and unit tests as well.\nFYI, I'm one of the contributors of react-native-simple-router which is a simple and basic integration of the Navigation API.\n. @aksonov Yes :). I'll close this issue since 0.26 will be landed in few days.\nIf you still get this issue with 0.26.0 (both updated react-native and react-native-router-flux), please reopen it.\n. @aksonov  In addition, to improve the pull requests reviewing, i'm thinking about using the mention-bot. Thoughts?\n. Oh, you're totally right.\nThe linking with mention-bot and CircleCI will needs the interaction of a collaborator with access to the WebHooks.\n. I will do the fix to the eslint problems as mentioned in #574.\n@aksonov Any reason why the tabulation is not consistent ?\n. @r0b1n Sorry I missed the notification, yes you can help with the few remaining eslint errors if you want to.\n@aksonov Can you add mention-bot to the WebHooks?\n. @aksonov Pretty simple in fact, just follow these steps : https://github.com/facebook/mention-bot#how-to-use :)\n. @aksonov Thank you.\nWe will take care of this repo, good week!\n. @aksonov Before leaving can you give authorization to CircleCI for this repo ? https://circleci.com\nI will do the config soon with eslint and unit tests.\n. @aksonov Welcome back!\nYou should setup your Git with your real git address, some commits are linked to a****@gmail.com and you don't get mentioned by the bot.\nI added a circle.yml, but CircleCI doesn't get triggered, can you try to manually start a build and verify the link with this repo?\n. @aksonov Fixed and merged into master.\n1 eslint error remaining (except Example folder), I will fix it.\n. @aksonov What happened with the mention-bot ?\n. > Hi Nicolas!\n\nThanks for reaching out to us. As long as your project is public, you will have access to a total of 4 free containers for that project to build on our Linux based platform. As for OS X, we have enabled OSS for your org aksonov.\nPlease let me know if you need anything else!\nChlo\u00e9\n. cc @aksonov @joenoon @cridenour @rturk @lynndylanhurley\n. @aksonov Nothing, it should be already activated. I'll look to do some e2e tests.\n. > Is there any way to check PRs before merge to comply with code style?\n\n@aksonov Yes with CI from CircleCI, we will implement this after all eslint errors has been fixed.\nSorry I didn't notice the props from Modal, yeah I will do some testing with all components before submitting a pull request.\n. Unfortunately, I do not believe that such tools exists.\nI think for a project moving as fast we should only fix one file at time and do a pull request with solid test coverage. Don't worry with it, I will redo.\n. Fixed by #596.\n. > It is however not recommended to use the static API and the component for the same prop because any value set by the static API will get overriden by the one set by the component in the next render. StatusBar documentation.\n. @mikefowler @lelandrichardson \nI'm curious about this declaration :\njavascript\nstatic propTypes = {\n  dispatch: PropTypes.func,\n};\nI thought that Airbnb is recommending to assign static properties on a class after the class declaration (Link) instead of using the class static properties proposal?\n. LGTM, good work !\n. Maybe the render methods could be defined in the same order they are binded ?\njavascript\nthis.renderCard = this.renderCard.bind(this);\nthis.renderScene = this.renderScene.bind(this);\nthis.renderHeader = this.renderHeader.bind(this);\n. Pull request has been updated.\n. cc @aksonov \n. Sorry I didn't noticed you had answered into the PR.\nI'll close this issue.\n. @sarovin Please refer to the Airbnb React/JSX Style Guide specially ordering section and How to define propTypes, defaultProps, contextTypes, etc...\n. FYI 12 eslint errors remaining.\nCan you move 355c03c Fix NavBar height for Android to a different PR?\n. LGTM\n. I'll merge since no one else did review. Thank you for your work.\n. Cherry pick cf396ed into 3.24 if you want it.\n. Sorry for the notification.\n. LGTM\n. I will take a look at remaining errors.\n. I just added some comments about remaining errors, feel free to comment.\n. LGTM. Good work @sarovin, thank you! :)\n. Duplicate of #613.\n. I'll close this issue since 0.26 will be landed in few days.\nIf you still get this issue with 0.26.0 (both updated react-native and react-native-router-flux), please reopen it.\n. Thank you, I'll do some cleaning with babel soon.\n. Good job :)\nLGTM if you can tell us if it pass the eslint rules ? I will setup CircleCI really soon, until that we will trust you.\n. LGTM, thank you @r0b1n.\n. You're right, something went wrong with the example. I'm on it.\n. I just merged a fix into master, just grab the last version and you should be able to run the example.\nSorry for this inconvenience, if it doesn't fixed your issue just reopen it.\nHappy learning !\n. Thanks.\nWe will wait for @aksonov to review it.\n. Duplicate of #650.\n. I'll close this issue since 0.26 will be landed in few days.\nIf you still get this issue with 0.26.0 (both updated react-native and react-native-router-flux), please reopen it.\n. TravisCI is really slow, but I like your idea. Maybe we could setup TravisCI only for OS X build and keep CircleCI for Eslint and Mocha ?\n. I'll close this issue since it was answered on Stack Overflow.\n. I'll close this issue since it's resolved by 0.26.\nThank you @tinygipxy.\n. Hmm, i'm not sure about that. I think 3.24 should be rebased on master.\n. I'll close this issue since 0.26 will be landed in few days.\nIf you still get this issue with 0.26.0 (both updated react-native and react-native-router-flux), please reopen it.\n. Oops, my bad. Sorry !\n. @aksonov CircleCI seems unlinked, can you check this?\n. @aksonov Weird, maybe if you trigger a manual build from CircleCI panel.\nIs that possible to give me rights on CircleCI, if you want to ?\n. @aksonov Should be fine now :)\n. Wow good job that's really appreciate.\nIn my opinion, I prefer when markdown files are in caps.\nNote to the collaborators that will do the merge, please use the squash option.\n. Thank you for asking.\ncc @aksonov.\n. Introduced by #706.\n. I'll close this issue as @rturk said 0.26.0 version will be landed soon. (react-native and react-native-router-flux)\nIf you still get this issue with 0.26.0, please reopen it.\n. On iOS, Android or both?\n. @cridenour This is because the branch 3.24 doesn't contain a circle.yml. In fact, that commit should not rather be merged in master?\n. @aksonov didn't publish react-native-router-flux to npm since 3 weeks, I guess a new release will be published when 0.26 will land.\n. See #697 #698.\n. Can you fix eslint errors? :)\n. @joenoon Exactly, https://github.com/lelandrichardson/react-native-mock/pull/43\n. That sounds interesting!\n. Thanks for the screenshot.\nFYI : It should be Accueil and not Acceuil :)\n. @SirensOfTitan It breaks the CI, can you fix this?\n. @aksonov You're right, I added Example folder into eslint scripts but not into CI since it contains a lot of errors. I'll do a pull request to remove Example folder from npm run eslint.\n. I would let @joenoon review this since he's working on tab.\n. @q6112345 If it still an issue with the latest version, please rebase and fix conflicts.\n. @rturk Totally agree.\nI don't know for the other collaborators, but I'll prefer Flow type checker instead of TypeScript.\n. Good catch, I guess it was used by an old example.\nThanks.\n. LGTM. I will let someone else do the merge to be sure that was not intentional.\n. We do not use this branch anymore. \nCan you rebase your changes on master and apply it to master ?\nIt'd be nice to have a motivation to this pull request.\nThank you.\n. Please fix the eslint errors.\nYou can test it locally with npm run eslint.\n. We are able to remove it, but i'm afraid of deleting a useful branch. I'll let the creator delete it.\n. Will be fixed by #831.\n. I'll close this issue since it should be fixed now, let me know if it's not.\n. I confirm this issue, I just ran on it. \nI'll give more details soon.\n. I don't know if it what's @mickeyinfoshan means.\nIf you remove hideNavBar from the Example (here), you won't be able to swipe back with Android because the scene will be blocked in transition.\nAny ideas?\ncc @aksonov @rturk @sarovin \n. CircleCI failed.\n. I can see the use case, but i'm not a redux expert.\n. > We definitely need to have unit tests for our views to avoid such problems... I'm having assert within my app, so i didn't mention that issue at all.\n@aksonov I'm working on something.\n. Good catch, thank you!\n. LGTM.\n. As @sarovin said a screenshot will be appreciated.\nCircleCI failed, can you check this?\n. Thank you.\n. Spread operator should be already supported, what are you trying to achieve?\n. Thank you!\n. Note to the collaborator that will do the merge : Please use squash and merge.\n. Thank you.\n. Thank you, unfortunately I merged #986 before. :(\n. CI doesn't like the global variable, we need to disable it for these specific lines like @adrienthiery said.\n. cc @aksonov @joenoon @philipshurpik @lynndylanhurley @cridenour\n. Are you up for a pull request?\n. Thank you for reporting, are you up to do a pull request?\n. I'll close this issue since it was resolved.\n. Can you fix eslint?\n. Can you fix eslint?\n. @aksonov CI is fixed on master, you can safely merge this PR if you wish to.\n. Can you fix eslint?\n. Can you explain your motivation ?\n. Hi @maksim-harakhovich-itechart,\nWhen I integrated Jest Snapshot in this repo, I have not had this issue.\nCan you compare with the example project : https://github.com/aksonov/react-native-router-flux/tree/master/Example/tests\n. I am currently trying to investigate this issue and it seems caused by renderTitle.\n. The bug is located here : https://github.com/aksonov/react-native-router-flux/blob/master/src/NavBar.js#L436-L443\n\n\n``` diff\n   renderTitle(childState, index:number) {\n     let title = this.props.getTitle ? this.props.getTitle(childState) : childState.title;\n     if (title === undefined && childState.component && childState.component.title) {\n       title = childState.component.title;\n     }\n     if (typeof(title) === 'function') {\n       title = title(childState);\n     }\n     return (\n       \n         {title}\n       \n     );\n   }\n```\n\n\nIf we removed the previous lines, everything works fine except the removed animations. With this line, the default NavBar is unusable on Android. \n@aksonov can I have some of your time on this? I try to pitch RNFR for an application and it's the only blocker. That would be really appreciated.\n. @aksonov  Good, I'll try to fix this. \nWhere is your company located?\n. @aksonov Can you send more information to nicolas.charpentier079@gmail.com, thank you :)\n. Nice catch, thank you!\n. Duplicate of #1132.\n. Congratulations!\n. What is your issue exactly and what are you trying to do ?\n. You're right, the sample contains an error.\ndiff\n- import React, { PropTypes, Text } from 'react-native';\n+ import React, { PropTypes } from 'react';\n+ import { Text } from 'react-native';\n import { connect } from 'react-redux';\nI'll fix this on the documentation, thank you.\nLet me know if it doesn't solve your issue.\n. Can you send a screenshot of this?\n. Unfortunately, class properties are not ES6 and even less a standard yet, it's only a proposal at stage 2.\nI would not recommend using this until stage 3 at least.\n. I understand what you mean and you're right, arrow functions looks better than .bind().\nHowever, a lot of people doing something doesn't necessarily justify it. We're talking about a router library and for the sake of stability I'd like to not rely on babel quirks. Issues are growing up since few months and few contributors have time to help, adding this to the pipeline without a proper description, nor even a test plan seems a bit crazy to me.\nUsing this in a project? Go ahead. \nIn a library that many users rely on? Sorry, but that will be a no for me.\n@stereodenis Anyway, thank you for your contribution it's highly appreciated.\nI'll let @aksonov close or merge this pull request.\n. @aksonov ?\n. > Way #4: Class Instance Field With an Arrow Function (good, ES8+)\n\nEven though this is supported by Babel, there\u2019s a (small) risk that this feature could be taken out of the spec and require some refactoring, but a lot of people are using it so it seems likely that it\u2019ll stay put.\nWay #5: Binding in the Constructor (good, ES6)\n\nAs I said in my previous message, for the sake of stability I'd like to not rely on babel quirks. (ES8+).\n. Can you explain why you do this ? Please explain your motivation in a new pull request, I just closed your previous PRs.\n. You're right and his other libraries are MIT licensed too, so I don't think it will bother him.\ncc @aksonov I can do the change (BSD-2 to MIT) if you're agree with that.\n. react-native-router-flux is now under MIT license. :tada:\n. Please reopen another issue with more information.\n. I'll close this issue since it's seem answered, if not please reopen it and let me know.\n. I'll close this issue since it's seem answered, if not please reopen it and let me know.\n. I'll close this issue since it's seem answered, if not please reopen it and let me know.\n. @alexicum It's seem that fontFamily has been renamed. \nCan you run npm run jest -u and push the new snapshot ? It will be really appreciate.\n. @wcandillon It should be available in the latest release on npm (3.37.0).\n. Thank you! :joy:\n. @moaxaca That would be highly appreciated!\nAlso, don't forget to subscribe to the Hacktoberfest 2016 if you want a free t-shirt with your pull requests. https://hacktoberfest.digitalocean.com/\n. Thank you!\n. Thank you!\n. @inferusvv Should be fixed now, are you up to rebase on master?. Thank you.. Thank you @sarovin. Did you run the Example app since ? Everything is working?\nIt seems you updated react-native without run react-native  upgrade\n. @sarovin I'll check that soon.. There seems to have an issue with the Example on Android, the project can't even build. (Fixed in #1413)\nI just checked and I do not think 'react-native upgradehad been executed,.flowconfig` should have been changed by the upgrade.\nI'm not sure this is a proper fix for Jest, all functions seems anonymous now.\nI'll disable Jest testing until I have time to fix this.. Fixed by #1422, there was an issue with react-addons dependencies.. @wcandillon Are you up to rebase on master?. Thank you @MechanicKim, your time is greatly appreciated.\nI'll close this PR since it seems resolved, if you think it shouldn't be closed, please let me know.. Thank you for letting us know, but instead I just reverted the commit that cause this issue.. Task list has been updated.\n@MechanicKim Jest Snapshots has been fixed, but I'll review your PR.. Update dependencies and fix errors as you did in #1425, thank you btw.. @johnstonmatt Are you up to rebase on master?. Unfortunately, rebase wasn't right. I fixed it on your fork.\nHere some documentation on Syncing a fork.\nThank you for your PR, it's greatly appreciated!. @dannycochran Are you up to rebase on master?. Amazing, thank you @MechanicKim!\nI'll review this soon.. In addition, these changes will need to be tested. \nIf someone can confirm that everything works well, unfortunately I can not build on mobile for now.. One last thing before merging, everything works fine on both platforms?. There was also a red screen before ?\nI'd like to merge this pull request, unfortunately I can not introduce breaking changes, that would be problematic for developers.. @MechanicKim I tested master branch on Android and everything works fine without red screen on Login 2. If you could fix this it would be appreciated so we can finally merge this. Thank you!. @MechanicKim I can only test on Android.. Thank you for your time :). @BrendanBerkley Done, thank you!. I'm not a big fan of splitting community like this, neither unmerged PRs. IMO, PRs should be merged in their respective repositories.\nI just shared this with react-navigation team.. Thanks @spencercarli.\nI now have push access to react-navigation, feel free to ping me if there're any pull requests blocking you.. You're totally right, I'll fix this tomorrow in the morning.\n. Since propTypes is assigned after the class declaration, export default should be moved to the end of the file.\n``` javascript\nRouter.propTypes = propTypes;\nexport default Router;\n```\n. Maybe this would fix the issue :\njavascript\nrenderTitle(/* NavigationState */ childState, index: number)\n. Shouldn't be there.\n. Same as line 48, shouldn't be there.\n. javascript\nonPress={onPress}\nAnd defined onPress before the current return : \njavascript\nconst onPress = state.onRight.bind(null, state);\n. javascript\nonPress={onPress}\nAnd defined onPress before the current return : \njavascript\nonPress = onPress.bind(null, state);\n. Reassign onPress instead of a declaration and it should be fine. (no const)\njavascript\nonPress = onPress.bind(null, state);\n. Useless space\n. Useless space\n. In Javascript false == 0, so if this.props.titleNumberofLines is defined to 0, it will be defaulted to -1 by this line.\nIn case that's what you want, I suggest this defaulting instead :\njavascript\nconst numberOfLines = this.props.titleNumberOfLines || -1;\nOtherwise : \njavascript\nconst numberOfLines = Number.isInteger(this.props.titleNumberOfLines) ? this.props.titleNumberOfLines : -1;\n. Eslint Error - Missing trailing comma. (comma-dangle)\n. I would probably write something like : It can also takes param [...]\n. line 272, col 1, Error - Line 272 exceeds the maximum line length of 100. (max-len)\n. line 289, col 1, Error - Line 289 exceeds the maximum line length of 100. (max-len)\n. line 242, col 1, Error - Line 242 exceeds the maximum line length of 100. (max-len)\n. class-methods-use-this should be enabled. \nIf a class method does not use this, it can safely be made a static function.. import/no-named-as-default should be enabled, it's likely misleading.. Unfortunately, the proposal for public class fields & static properties is only at Stage 2.\nIt should be a static function with the keyword static, not an arrow function.\nThe same applies to other methods.. ",
    "joenoon": "@aksonov sure, thanks.  i'm using this project quite a bit so i hope to keep contributing regularly.\n. @aksonov neat about v4!  I switched to plain react-navigation in April.  It was not the easiest switch, but it worked out.  I'll probably just stay with that for now unless I have time for another refactor.. @aksonov great library!  I think I'm running into this same issues here.  Can you tell me if there is a way to do this?\nconst scenes = Actions.create(\n  <Scene key=\"root\" hideNavBar={true}>\n    <Scene key=\"apples\" component={View} title=\"apples\" />\n    <Scene key=\"oranges\" component={View} title=\"oranges\" />\n    <Scene key=\"tabbar\" initial={true} tabs={true} default=\"tab1\" >\n      <Scene key=\"tab1\" component={View} title=\"Tab #1\" icon={TabIcon} initial={true} />\n      <Scene key=\"tab2\" component={View} title=\"Tab #2\" icon={TabIcon} onRight={() => Actions.apples()} rightTitle=\"Push\" />\n    </Scene>\n  </Scene>\n);\nWhat I'd like to happen is when I call Actions.apples(), I want it to push inside tab2 (the currently active scene).\nRight now, it renders over the entire tabbar, which is true to how its defined above, but not how I'm hoping to use it.\nOne option is to redefine apples and oranges inside of each tab (tab1_apples,tab1_oranges,tab2_apples,tab2_oranges).  The problem with this is I need to know which tab I'm currently in to know the key.  Actions[${currentTab}_apples]().\nIs there another option, to just push into the currently active context?\n. I found a partially working solution: Actions.apples({parent:'tab2'})\nThat gets the scene rendered in the current tab, but still has some downsides:\n- The back button doesn't work, probably because...\n- Actions.pop() doesn't work.  But this works: Actions.pop({parent:'tab2'})\nIf I were to keep going down this road my plan would be to write a wrapper taking in the navigationState.  Something like Actions.inContext(this.props.navigationState, Actions.apples) and the same for pop.  But I'd like your thoughts on if this even seems like the right way to approach it (manually overriding parent).\n. PR here: https://github.com/aksonov/react-native-router-flux/pull/389\n. @aksonov Ya thats exactly what I was just trying here.  It almost works, but one of my actions is getting parent 'root' for some reason, so I'm trying to track that down.  That is one from a navbar where I do refresh in the componentDidMount (which is amazing!).  But otherwise clicking around seems to work like this.  I'll track down the problem I'm having and see if I run into any other issues! Thanks!\n. Thanks for the notes, I'll dig into this!  The scenes I'm adding and deleting are what I was considering 'runtime scenes'.  The original defined scenes shouldn't be affected.  What I mean by this is this is what happens when pushing then popping some scenes:\n'create scene', '1_List'\n'create scene', '2_Profile'\n'create scene', '3_List'\n'delete scene', '3_List'\n'delete scene', '2_Profile'\n'delete scene', '1_List'\nThose are internal/runtime scenes that were not recorded previously at the root level - I added them in this PR.\nLet me think about this today and see if I missed something.\n. @aksonov I see the problem with my PR and the scene modifications... let me see if I can find another way.\n. Updated and open for comments!  I think this works and ensures the only things deleted from scenes are what were added at runtime, and also makes sure clones added are unique.\nAlso, I changed https://github.com/aksonov/react-native-router-flux/pull/389/files#diff-98b3594cf65eb9acfce1160c51678d6eR86 - I think this probably breaks the original case but fixes mine, so I need to look at this more.  But first I want to make sure the other stuff is making sense and on the right track.\n. This needs more work and isn't ready for merging yet.  I've discovered a few more problems with my PR related to how sceneKey and key were intended to be used. I need to get a better understanding of how everything fits together.  I'll keep working toward a PR over the next few days.\n. It could be that I'm missing something... lets figure it out.\nIs it possible to get the behavior I added in the example without this clone feature?  My use-case is similar to many apps that have lots of interconnected content: Imagine a facebook newsfeed.  Each post has a creator, maybe target object (Place, Location) users who like it, comments.  Comments have a creator.  Location and Places might have their own list of users who like them, etc.  Lots of object types and very interconnected.  At any point I click on a user's name, a new page is \"pushed\" onto the navigation stack.  Then I look through that users followers and click on another user, which is \"pushed\" onto the navigation stack.  Then I look through that user's profile and list of places they like, and click a place.  The place page is then \"pushed\" onto the navigation stack.\nThat is what this PR is for: to be able to push certain scenes anywhere, anytime, multiple times, with the same or new attributes. (User 1 > Place 2 > Photo 3 > User 1 > User 5)\nMy understanding is without this feature, I would need to know the entire scene map at app launch.  Is that right?\n. @aksonov The problem I'm running into with 6d2e5d114118e594168f65c83732e8a470c0529f is, in my app there can be multiple pushed ProfileScreenComponents with different users as people click though the app.  But because they all share the same scene now, they step on each other during a refresh.\nclass ProfileScreenComponent extends React.Component {\n  componentDidMount() {\n    Actions.refresh({\n      key: this.props.navigationState.sceneKey,\n      rightTitle: this.props.user.name,\n      onRight: () => (null)\n    });\n  }\n  // ...\n}\nIn this case, all ProfileScreen navbars rightTitle become the last user's name that was mounted, so if you go: Joe > Jane > Bob > Sarah > Jenn > Bill, and the start popping, \"Bill\" will be the rightTitle for every screen.\nI know you didn't like the idea of adding scenes at runtime, but does anything else come to mind that would make this pattern work?  In my mind each unique profile screen should have a unique scene, but I'm not sure how to achieve that without adding scenes at runtime.\n. @aksonov is this what you had in mind?\n. I think I found a fix in the PR above\n. In case other people land here, as of today I'm using this combination successfully:\n\"react-native\": \"0.24.1\",\n    \"react-native-router-flux\": \"aksonov/react-native-router-flux#3.24\"\n. @aksonov I attempted to update my app to 0.26-rc last night and decided it was too early for me.  I made all of the required changes such as require react vs react-native, etc.  But the real problem was downstream in other npm modules I relied on that had not yet done the same and probably wont for a while.\nBut the good news for me is the 3.24 branch works fine with react-native 0.25.1.  I had branched to a 0.25-stable branch in my own fork thinking I would have to make some changes, but haven't needed to yet.  However I remember there are still some issues with the 3.24 branch - I guess my app just doesnt run into them.\nThe one issue I do run into but not sure if its known is - when switching tabs the entire UI seems to re-render (loses scroll position etc).  I've been meaning to try and track this down for a while - maybe I can figure it out this week.\n@aksonov One thing I'm trying to wrap my head around is if we should be using NavigationStateUtils or not?  Are we not using it on purpose or because it wasn't around initially?\n. I've been trying to track down the re-mounting issue and so far am having no luck.  From the basic logging I've added locally, it looks like previous components are unmounted as new ones are mounted when switching tabs - so its not quite as bad as it could be.\nI'm still trying today - does anyone know if this happens in older react-native + rnrf master combos?\nWhen I follow the component lifecycles I get to https://github.com/aksonov/react-native-router-flux/blob/3.24/src/TabBar.js#L43 where _renderScene returns a <DefaultRenderer key={props.scene.navigationState.key} navigationState={props.scene.navigationState}/>.  In a way, it seems to make sense its unmounting when switching tabs since this new key becomes the only \"content\" child.  But at some point it worked... so still digging in.\n. Its looking more like this is a problem in RN, so now I'm focusing efforts on getting my app to work with RN 0.26-stable branch which includes the commits that look relevant.  https://github.com/ericvicenti/navigation-rfc/issues/69\nWill update here as I know more\n. Unfortunately the changes upstream in RN that I thought would fix the tab-switching issues actually didn't fix it.  Now my app works with 0.26 though, which was quite a challenge in itself.\nI've started a 0.26-wip branch: https://github.com/aksonov/react-native-router-flux/tree/0.26-wip\nIt brings back the old behavior where all tabs are loaded at the same time, however there is a bug I haven't been able to figure out yet related to the \"selected\" tab changing on load.\nBasically I added a new TabbedView which is pretty much like the old NavigationView from RN 0.22 .  The NavigationView in RN > 0.22 is quite a bit different and I think the problem is its no longer the right view for implementing tabs.  It only renders the current scene.\nIf anyone can help me try to figure out whats going on with the selected/index issues, that would be really helpful.  It has something to do with Reducers.js#inject, but there is a lot of logic there that I haven't fully understood yet.\n. @jamesone I know what you mean.  I think there is a lot going on - NavigationExperimental changes upstream, RNRF used to be its own thing from my understanding (2.x), but now more of an extension/default/implementation on top of NavigationExperimental (3.x).  But its sometimes difficult to keep straight where NavigationExperimental ends and RNRF begins.  But please feel free to ping me on gitter and I'll do my best to work through any questions.\n. @aksonov updated.  I put direction back, but I'm not sure if it works any more with RN upstream.  Just glancing through, I see mentions of direction in NavigationCardStack.  So it possibly moved.  But better if someone who knows what the expected behavior feels like can check it out.\n. @aksonov I think its a bit more complicated.  From what I can tell so far, direction moved into NavigationCardStack.\nI started experimenting with using NavigationCardStack in DefaultRenderer, but I'm not sure thats the answer because then we lose things like custom animations completely (what used to be setTiming, now applyAnimation).\nTo support direction outside of NavigationCardStack looks like maintaining a copy/paste derivative of it, which is likely to break or be hard to keep track of given how much is still changing with NavigationExperimental.\nSo I'm just not really sure what the right approach is.\n. I did notice the \"switching tab re-mounts\" problem return last week.  Hopefully I'll get some time this week to try and figure out what happened.\nMaybe master should be bleeding edge without concern for RN release versions.  So branches are cut for every RN release as they come out with a confirmed working commit for that version.  And branches could be cut for rc's as well - so maybe not even have a master branch.  Backporting would be rare since the goal is to keep moving forward while having branches that work with various RN versions as we go.\nI think maintaining a fork would be a lot of work.  It doesn't make much sense to me to preserve and continue to use stuff they are intentionally changing upstream.  \nI guess the way I see it is since its clearly marked experimental, whoever wants to use it (and by association this repo), should understand its closely tied to upstream changes, and can easily break.  I think the best we could do is let people use working combinations.  So if they want to use RN 0.24 they should use it in combination with aksonov/react-native-router-flux#0.24-stable.  And if that branch doesn't exist yet, they are on their own or should wait.\n. FWIW I've been using this combination successfully:\n\"react-native\": \"0.24.1\",\n    \"react-native-router-flux\": \"aksonov/react-native-router-flux#3.24\"\nI'll probably start looking at 0.25 this week.\n. @ndarilek you can try this combination with 0.24: https://github.com/aksonov/react-native-router-flux/issues/557#issuecomment-215235588\nI've seen comments where others have run into an issue with 'replace' route types, but my app doesn't use that functionality so I haven't run into it myself.  I'm also using a custom NavBar, so its possible there are other issues I'm unaware of.\n. @spaceoi I dont use the default NavBar, but I did stumble onto the title issue by accident.  If I remember correctly it was related to this change: https://github.com/aksonov/react-native-router-flux/commit/fe5da322d392117e7d51a382ae8584c2d7f45936\n@philipshurpik do you remember the reason for that change?  \nJust glancing it looks like child and selected both point to the same thing.  Maybe state was removed accidentally instead of one of the duplicates?\n. With NavigationRootContainer gone going forward it looks like all we are left with that depend on NavigationExperimental are 1.) NavigationAnimatedView and 2.) NavigationCard (and their dependencies).  I haven't looked deeply at what it will take to get rid of NavigationRootContainer from RNRF, but it seems like there is less and less surface area available to be impacted by NavigationExperimental upstream changes on each release.\nCopying sources on NavigationExperimental:\n-  Questions:\n  - does this solve the problem with RN versions?  Or are the copied sources still possibly dependent on certain RN features with the version it was released in?\n  - can this be done without duplicate file packager errors?\n- Concerns:\n  - we should probably have strict rules around this so these files never get \"patched\" manually creating another bug to track down later\nTwo very different project directions:\n1. A library on top of the upcoming NavigationExperimental:\n   - an alternative to doing it all yourself\n   - if the user were to go and use NavigationExperimental directly, they would need to build large portions of RNRF on their own\n   - by using RNRF they get a nice implementation on top of NavigationExperimental out of the box\n   - but they are locked to the RN specified by RNRF\n   - if they want RNRF to work with a newer RN they should help with PRs\n   - if they were using NavigationExperimental directly they would also have to get their own code working with a newer RN\n2. A library with its own stable API - user does not need to know what it uses under the hood\n   - an alternative to doing ANY of it yourself\n   - Copied NavigationExperimental seems like the way to go if no issues raised above\n   - when bugs are found in the NavigationExperimental sources we've copied, we'll have the same pain points to upgrade sources\nI think if 2 is sounding good, it might be because its just the opposite of the current approach.  We can try it, but I suspect we'll discover new/different issues and pains with that approach.\n. @jamesone could you try this PR instead of yours and see if it fixes the issue you ran into? https://github.com/aksonov/react-native-router-flux/pull/667\n. @aksonov cool! i have a PR upstream for that warning: https://github.com/facebook/react-native/pull/7518\nyou could try silencing it for now:\nconsole.ignoredYellowBox = ['Warning: Failed propType: SceneView'];\nalso working on what i think will be a better tab component, but will see what you did and we can compare notes\n. @aksonov check out https://github.com/joenoon/react-native-router-flux/tree/0.26-wip if you get a chance.\nI didn't want to push that commit into your repo without first getting approval.  I think that tab library is a big improvement since its smart about not rendering the content of the tab until the tab is active.  It also seems to fix or avoid the issue I was running into with my app, where on load it was switching tabs as it was rendering.\nIts also waiting on an upstream PR, so pointing at another fork of mine until that gets hopefully accepted.\n. @aksonov I started working off of the Example project.  Do you know any nice way around needing to rm -rf node_modules/react-native-router-flux/ && npm i after every src change when working on the Example project?  I know one way but its very hacky.\nI've updated my 0.26-wip branch to make the tab/nav work out of the box a bit more, and added some examples of more advanced hide nav/tab tracking through the tree: https://github.com/aksonov/react-native-router-flux/compare/61ac6d3...4d8d369\nNavigationView is no longer used anywhere in 0.26-wip, so thats great we got away from it before it was removed upstream.\nI worry about not providing a default tab implementation.  It seems like such a fundamental part of navigation and I don't really like the idea of everyone having to maintain their own implementation.  I guess it depends on the goals of the project.  I'd like to see something usable/customizable out of the box, but I could be swayed if there are strong arguments for it.  I'm not a big fan of the reference implementation trend - it feels a little bit like punting sometimes.\n. @aksonov FYI i ended up finding a neat way to speed up the dev flow: https://github.com/joenoon/react-native-router-flux/commit/ea0a2603f344df637272ed2e7f9d839a1f41ee7b\n. @aksonov 0.26-wip updated!  Yes, I understand about the tab bar and issues :)\n. @Mokto I just updated the 0.26-wip branch to allow overriding the NavigationCard's default shadows.  Check the Example project on that branch and specifically getSceneStyle.\n. @SunnyGurnani ive added a 0.26-wip branch: https://github.com/aksonov/react-native-router-flux/tree/0.26-wip\nIt brings back the old behavior where all tabs are loaded, however there is a bug I haven't been able to figure out yet related to the \"selected\" tab changing on load.  But if you are trying to get things working with > 0.22 then it might make sense to check that branch out.\n. @anthonywebb Actions.refresh or sub-scenes should do the trick here.  Please re-open if there are any issues.\n. @FakeYou could you rebase this and add the doc to https://github.com/aksonov/react-native-router-flux/blob/master/docs/API_CONFIGURATION.md.  And I think the -1 should be 0 - can you double check that works?  -1 doesnt feel right\n. Looks like you solved it with Actions.refresh which is correct, so I'll close.\n. FYI merged #1137 \n. @greatwitenorth if possible you might want to try with the 0.26-wip branch.  RN 0.26 stable is right around the corner and the react-native-router-flux 0.26-wip branch has quite a few changes - especially dealing with the TabBar.\n. This wont apply to 0.26-wip since the check is done quite a bit differently there\n. Closing since 3.24 is no longer supported.  Please reopen against master if there is still an issue.\n. @yanghuxiao  if possible you might want to try with the 0.26-wip branch. RN 0.26 stable is right around the corner and the react-native-router-flux 0.26-wip branch has quite a few changes - especially dealing with the TabBar.\n. @anguskwan You can't use a system icon by default.  You could implement your own TabBar using TabBarIOS, which has a systemIcon property: https://facebook.github.io/react-native/docs/tabbarios-item.html#content\nBut IMO I would use react-native-vector-icons and check out the react-native-router-flux 0.26-wip branch which has a new tabbar implementation, and provide the icon as @AlexDM0 explained.\n. @JimmyStavros try a thorough reset:\n(set -ex; rm -rf node_modules/ && npm cache clear && npm install && (watchman watch-del-all || true) && rm -fr $TMPDIR/react-* && node_modules/react-native/packager/packager.sh --reset-cache true)\n. @aksonov that sounds great!\n. Agree with @rturk this is usually because a dependency does import Foo from 'react-native', and then extends Foo.Component, which no longer exists since RN 0.26.\nAlso things may have stabilized since two days ago, so give the upgrade another try.\n. @charpeni checking now\n. any ideas about the test error? it looks like tests wont work until react-native-mock is updated upstream\n. @aksonov i have to head out for a bit but if there are no blockers then i think this is ready for release! \ud83d\udc4d \n. @mnadbader is this solved? The Example app has a working drawer.  I'm wondering if you need to set titleStyle to prevent it from obstructing the left button - but just a guess.\n. @mnadbader It looks like if hideNavBar (now an inherited value) resolves to true that the NavBar component should never be rendered: https://github.com/aksonov/react-native-router-flux/blob/2d84f885a6723d3a0dfba18a4db6554e6260581f/src/DefaultRenderer.js#L144\nCan you check against the Example app and see if theres a bug you can reproduce so I can take a look?  \nI my guesses would be you might need to set these to true in an outer scene: <Scene key=\"root\" hideNavBar={true} hideTabBar={true}>.  Or you might need to make use of getSceneStyle as shown in the Example.  If its the first fix, then I wonder if thats something that the library could do automatically... let me know and we'll go from there.\n. Agree this would be nice - just checked the Facebook and Twitter apps and they behave as described above\n. @rseemann I think the feature request makes sense - to be able to pop back to a certain point in the navigationState.  But this looks a little arbitrary - just accepting a number to cut from the end and decrement the index, seems like there would be a pretty good chance of corrupting the navigationState by accident.\nI was thinking this would be more along the lines of: \"pop back to scene foobar\" and the navigationState would be walked backwards until the foobar scene is found, and then everything in front of it would be dropped.\nI'm not sure though.  @aksonov any thoughts?\n. Currently here: https://github.com/aksonov/react-native-router-flux/blob/2d84f885a6723d3a0dfba18a4db6554e6260581f/src/Reducer.js#L61\nIts impossible to end up with an invalid index, because there is a check to protect against decrementing beyond 0, and otherwise the decrement is 1.\nIf the user is allowed to send whatever number they want, then they could decrement the index by 4 on accident/user-error, and end up with an index of -3.  So at the very least there needs to be an assert protecting against that scenario.\n. @ivpusic to use your own tab bar component you would need to add component={MyTabBar} to the tabs={true} scene.  If you intend to use your own tab bar component and see an error about TabNavigator, the rnrf implementation is being used.\n. Also to add more background, there were lots of changes, especially to the tab component, to get everything working with NavigationExperimental in RN upstream.  react-native-tabs was previously used but I switched the project to react-native-tab-navigator.  react-native-tabs' focus is on the actual tab bar.  react-native-tab-navigator handles the tab bar and the tab's child content, making sure that the tab children don't load all at once.  That became a big selling point and noticeable improvement when I was working on getting everything compatible with 0.26.  The result is some changes might be required during the upgrade, and there are possibly some things that could be better out of the box, but the Example app provides a pretty good outline and should help quite a bit.\n. If you are using tabs={true} you need something to render the child scenes: feed, profile, etc.  If you don't use the default TabBar, you need a component that will take its place and render those children for you - keep only the active screen visible, the rest hidden, etc.\nI'm still not sure though that you need to do anything other than hideTabBar={true} like you intended.  The error you mentioned: Warning: React.createElement: type should not be null, undefined, boolean, or number. It should be a string (for DOM elements) or a ReactClass (for composite components). Check the render method of TabNavigator. seems to be saying one of the tabs has a null child.  You might need to do some debugging and try to figure out where things are going wrong.  One thought would be:\n<Scene key=\"feed\" hideNavBar={true} initial={true} component={(props) => {\n  console.log('feed', props, 'Feed', Feed);\n  return <Feed {...props} />;\n}}/>\netc...\nSo its possible if you just track down that, then everything else will be fine.\n. Also check your imports vs requires, exports etc...  see this: https://github.com/reactjs/react-router/issues/2220#issuecomment-220573173\n. And maybe this https://codereviewvideos.com/blog/warning-react-createelement/\n. @ivpusic ok so the problem is you are not passing an icon to the tab bar?  Can you simply pass something for now to see if it gets you working? icon={() => <View/>} or something.  If thats the only problem then we might need a better error message.\n. about hideTabBar... it is not ignored.  it is used by the default tab bar component to set its styling to hidden, and it can be used by getSceneStyle to account for its state.  I think what you might be referring to is previously the whole tab bar component would be skipped entirely if hideTabBar was true.  That does not happen any more since the scenes are children of the tab bar component now.  Previously they were siblings.  Now if we didn't render the tab component, then none of its tabbed scenes would get rendered either.\n. @ivpusic agreed and the points you bring up are very valid.   NavigationExperimental is still a moving target - things change rapidly there and as a result here - for example tabs became non-functional due to a change in NavigationExperimental's NavigationView a few versions back.  The hidden tab bar catching clicks is one I haven't heard about until just now.  PRs either addressing docs, adding examples of broken use-cases, or fixing these issues would be very appreciated.  I'll try to make time to do another round of updates later this week as well.\n. @aksonov maybe a combination of the react-native-tabs with some of the smart logic around how the children are rendered like react-native-tab-navigator does?  I'm all for it if it pleases more people.  In hindsight the release for .26 probably should have been a major version bump + contain release notes saying something like check your usage against the Example app.  There is just too much changing here and upstream to be one of those libraries anyone can use without having to dig into the source.  Maybe one day when NavigationExperimental stabilizes...\nTo confirm, which is the critical issue(s) out of this?  Are you experiencing the bug where the hidden tab bar is catching clicks?  Or the null issue? Or both?\n. agree it seems like more of a bug than a feature - but maybe there is a valid use case there that I just dont use.  I have a branch in progress that brings back the old tab implementation exactly as it was, and fixes the part I couldnt get working before for the scene rendering.  so hopefully all of these problems since the new tab implementation will go away soon.\n. @rgovindji that sounds to me like you want this:\nYou click a tab, click a user's name which should open their profile.  That could happen from any tab at any depth.  The expected behavior would be to \"push\" the profile screen into the current navigation flow (current nav/tab).  And then when browsing that profile, you might see a \"friends\" section and find someone else to click... their profile would then be pushed as well.  You would get back to the root of the tab my going Back, Back on the nav bar.\nIf that sounds like the flow you want, thats exactly what the \"clone\" feature allows.  You can check the Example app where its used in the tabbar demo:  EchoView, push new scene, all of the inherit/explicit options for hideNavBar/hideTabBar etc.\n. The previous tab implementation is coming back soon which will wipe this out, but merge this for now\n. Also broken:  seems the inner navbars are now rendering underneath the outer navbars.  So back button etc isnt showing up... will try to figure out why today.  And if anyone else spots the issue please let me know\n. I think I have this working as expected.\nIt would be great if I could get some extra eyes on this.  There were lots of issues along the way with getting the scene styling and hideNavBar/hideTabBar values passed through to getSceneStyle.  And I also ran into multiple navbars that I didn't know were previously there by accident when playing with margins.  So I'm not quite sure if some of the things worked at some point before just by luck, or if I've introduced a bug or misunderstood how some of the navigation should function.\nThe result was pretty much trial and error in the example app to figure out the right combination that produced the right result.  \nIf we could get a few people confirming the Example app works as they expect, AND they can confirm their real app works as expected, that would be awesome!\n@aksonov @charpeni \n. Just to keep track of what would probably need to go into release notes for this, and for anyone testing this:\n- check updated getSceneStyle signature in Example app\n- set hideNavBar hideTabBar on the root scene \n. @andoru I dont think this still would apply to master, so closing for now.  If you want to reopen a new one against master please do.\n. Can you try something like this?\n/* <Scene key='modal' component={Modal} > */\n/* <Scene key='root' > */\n<Scene clone key='user' component={UserView} title='User' />\n<Scene key='homeView' tabs>\n  <Scene key='addTab' title='create' icon={TabIconComponent}>\n     <Scene key='add' component={CreateTabView} title='Create' />\n   </Scene>\n   <Scene key='peopleTab' title='people' icon={TabIconComponent}>\n      <Scene key='people' component={PeopleContainer} title='People'  />\n    </Scene>\n</Scene>\nActions.add() -> Actions.user()\nActions.people() -> Actions.user()\nYou should see the user added to the current tab's nav stack\n. Ok. Also try this against my branch https://github.com/joenoon/react-native-router-flux/tree/jn-wip if you can.  That is currently pending PR and possibly addresses some of the stuff you mentioned with navbar.\n. @jdmunro can you check the example app: \"Go to TabBar page\", \"push new scene\", then \"push new scene hideNavBar=? hideTabBar=?\".  That should demo being able to push new scenes into the current tab.  Also the keys should be unique if you want to define it without clone as the OP did - you can't have 2 'user' keys defined.  The last 'user' overwrites the first 'user' immediately as the JSX is executed which is probably why the OP reported the last one always being triggered.  So the issue could be as simple as making it user1 and user2.  FYI I'm using 3.35.x\n. @Olliepop what do you mean by \"within the TabBar onSelect method\"?  How do you get that code (scene_1,scene_2,scene_3) to be executed inside onSelect in the first place?  Did you fork the code and modify onSelect to run that code?  As onSelect stands now, it executes the key name for the tab selected - thats it - no 1, 2, 3, pop, pop, pop, etc... so I'm trying to understand how I would even go about trying to reproduce what you are describing.  Could you PR something in the Example app for me to check?\n. Ok I think I follow now.  Here are a couple ideas:\n- This \"pop to root\" should only happen if the active tab is tapped again.  Not if switching among different tabs.  I think thats the common convention.\n- Maybe it should be something like Actions[key]({popChildren: popChildrenOnSelect}) and the children could be truncated in the reducer?\n. I like this even though it means a little more maintenance.  It can only really be maintained by people who use vscode or something else that interprets these typing files.  So it might break or be outdated from time to time, but thats better than not including it IMO.\n. @Andreyco RNRF is locked to 0.26.x, so RNRF should be perfectly fine.  I'm sure there will be a lot of work to make RNRF work with 0.27.x given some of the changes upstream.  So RNRF will hold people back to 0.26.x for now.  I will try to allocate some time this week to look at the 0.27.x path.\n. @rseemann cool!  This looks like it makes sense.  The one thing I'm unsure of is the state.children search - what if the child hierarchy is more complicated?  Does this need to walk the full tree instead of only direct children?  I'm not sure.  Would be awesome if you could add something to the Example app to demo the intended scenario - that would open up a place to experiment with more popToParent scenarios.\n. I had the same experience and I had to null out the backgroundColor.  I don't think we need the default styling at all.  What about just:\nstyle={state.tabBarStyle}\n            selectedIconStyle={state.tabBarSelectedItemStyle}\n. PR here: https://github.com/aksonov/react-native-router-flux/pull/839\n. I think this can be closed since https://github.com/aksonov/react-native-router-flux/pull/798 was merged?\n. @Swordsman-Inaction ok then I can see how this makes sense.  Besides the eslint and conflicts, the only other thing that comes to mind is using action.data.  Should that be so generic, or should it be action.popNum or something?\n. @aksonov yes this will be a big and important release for a few reasons.  I'm in a similar situation with time - I don't have much of it - but as my app depends heavily on this navigation I think I can find some time this week.  I'll post back here when I can actually start so we can coordinate better and not repeat work.  BTW I tried your MobX integration and its awesome!\n. I'm in the process of getting my app working again with 0.27 (just about to have it working now) so I'm a ways behind still.\nAs part of this I started using MobX with wrapBy which is really great ( thanks @aksonov ).\nI'm curious to see what will happen as I move past 0.27 to 0.28/0.29 since it sounds like managing the navigationState will now be left to the user.  I'm not sure if that means everyone will need to supply their own store interface outright, or there will need to be a store-interface for the common ones (mobx-rnrf-store, redux-rnrf-store, etc).\nAnyway, just wanted to give a little update and hopefully I'll have some time over the next few days to explore the path forward.\n. @aksonov I'm still on 0.27 here and about to try moving to 0.28 or 0.29 soon.  Looking at the RN release notes it still looks like tons of stuff is changing in NavigationExperimental.  Since rnrf is not tied to the NavigationExperimental upstream I'm finding for my app rnrf works fine as is for now.  So I'm not really in a hurry to try and update the NavigationExperimental dep until its more stable, or there would be some real benefit at the app level.\n. BTW great decision to package NavigationExperimental with RNRF.  I thought it was going to create lots of problems but it turned out to solve most of the problems.  So to everyone who pushed for that \ud83d\udc4d \n. It looks like something that would do well as a README and Example addition so people can hook it up if they want.  But, the event listener should not be added in the render, and would need to be cleaned up properly.\n. Looks ok to me but I don't fully understand - maybe I haven't needed this myself yet.  Would it be possible to make the tab have its own <TouchableOpacity> that intercepted the tap if there is a need to do something (non-standard?) like this?  Is this just a more convenient alternative or are there other benefits?\nCan you resolve conflicts and eslint?\nAs a side note (not about this PR), that condition and how this whole section of the code works gives me a headache.\n. Comment from other PR: https://github.com/aksonov/react-native-router-flux/pull/827#issuecomment-226388281\n. @aksonov this seems ok to me, except I'm not sure if there could be unexpected problems with the condition.  That whole part of Actions is a little unclear to me.\n. @aksonov I dont use redux and haven't had a need for this.  I guess if its really necessary then its fine... but would be good to have someone else verify its a real problem that needs solving.\n. Looks good\n. @ms88privat I did this for login and getting a full router reset.  I wonder if this would work for your case?\n<Router key={`${user_id_or_session_key_or_auth_key_or_anon}_route`} ...>{...}</Router>\nBy having a key that changes when the logged in user changes... ie. anonymous to user1 to anonymous to user2, the whole component and children will be unmounted and re-created when that key changes.\n. This looks good to me - one other way to do this might be to add animationStyleFn or do some type checking on animationStyle and if its a fn then call it with the sceneprops.  That would allow stuff like this and anything else.  But its probably nice to have some included transitions using direction like this PR.\n. @sarovin this broke some things for others so I think you might need to provide your own navBar or see if there is another way to just pass the styles everywhere needed in the jsx.\n. @MovingGifts I tried your example and was a little surprised it doesn't work.  But I've never needed to do anything like that so I've never run into the issue before.  I think you'll need to look into a custom reducer or adjusting the default reducer to handle jumping/pushing to nested scenes.\n. @lifehackett in my app I use a custom navBar and I set it in the jsx on every immediate child of a tabs={true} scene, as well as the top root.  So it looks sort of close to what you are doing, except I don't know that {...navBar} is correct.  I think you need navBar={navBar}.\nAnd since these are the tab root scenes (index: 0), it makes sense to me that no back button is appearing... but you are using a custom NavBar that doesn't handle renderRightButton or renderBackButton from your navBarButtons, so I'm really not sure what is going on there?  By the logic in your custom NavBar the back button would only be displayed if index > 0, and none of denied, unmoderated, or approved would meet that criteria.\n. @lifehackett I missed that navBar variable but now that you point it out I understand.\nThe state tree from your code as I understand it would be something like this:\nconst state = {\n  index: 0, // will be 1 when drawer is active\n  key: 'root',\n  children: [\n    {\n      index: 0,\n      key: 'login',\n    },\n    {\n      index: 0,\n      key: 'drawer',\n      children: [\n        {\n          index: 0, // will be 2 when moderation is active\n          key: 'nav',\n          children: [\n            {\n              index: 0,\n              key: 'projects',\n            },\n            {\n              index: 0,\n              key: 'collections',\n            },\n            {\n              index: 0, // will be 1 when unmoderated is active\n              key: 'moderation',\n              tabs: true,\n              children: [\n                {\n                  index: 0,\n                  key: 'denied', // the default NavBar will never show a back button here because index === 0,\n                                 // and doesn't have any children so it will always be 0.\n                                 // if you wanted to take into account the FULL state tree, you would need to\n                                 // supply your own leftButton.\n                },\n                {\n                  index: 0,\n                  key: 'unmoderated',\n                },\n                {\n                  index: 0,\n                  key: 'approved',\n                },\n              ],\n            },\n            {\n              index: 0,\n              key: 'filters',\n            },\n            {\n              index: 0,\n              key: 'moderation_detail',\n            },\n          ],\n        },\n      ],\n    },\n  ],\n};\nYou might want to try console.log'ing the state to make sure or see what is changing.  This is just a best guess but hopefully will get you started.\n. @MovingGifts @aksonov animating the tabbar in/out linked to the scroll of a scene's scrollview would be nice to have, but AFAIK not something this library ever offered (I only know since v3, and never used v2 - maybe it used to be implemented there?).\nThis would be a neat one for someone to try and add if they are up for it.  I can imagine it might get complicated.  I would try but I'm heads down working on my app's release.\n. There is no resolution, but a PR to add this functionality would be interesting.\n. I'm also not sure about this because I'm not working on an Android app.  But a couple of notes:\n1. The doc duplicates componentWillMount instead of having a componentWillUnmount with removeEventListener.\n2. Something doesn't feel right with catching an exception as the official way to handle this case.\n3. I haven't tested the reducer modification, but at a glance of the diff I wonder if this works on a nested navstate tree, where there are multiple levels of state with children, and multiple levels where index === 0.  Does it make sure its acting on the index of the true root?\n. I think this and https://github.com/aksonov/react-native-router-flux/issues/927 can be solved with getSceneStyle as in the example: https://github.com/aksonov/react-native-router-flux/blob/822e83f08f5063cd33bc0c92030311c9acafb2af/Example/Example.js#L107\nCould you also try the static sceneStyle param by passing what you are currently passing to navigationCardStyle?\nIf neither of those work let me know and I'll take a closer look.  I have a feeling getSceneStyle is what you need.\n. @brien-crean I think it would depend a lot of what the styling of ErrorModal is.  You probably need to do some manual debugging with different colors with some alpha so you can see how things are overlapping.  Or try the RN style inspector in-app and see if that helps.  And verify your ErrorModal implementation is rendering its child, etc...  really tough to say without seeing quite a bit more about the specifics.\n. I'm using a much older version of the Switch component due to another bug I found but could never understand.  So probably best if @aksonov and others who are familiar with the current Switch take a good look at this.\n. I was aware of the keys looking like this when parent or key was undefined.  But did it break something, or is it just a visual issue?  IMO those generated keys should be opaque.  But if its actually breaking something I'd like to understand it.\n. So far I'm not seeing anything but I'm also not sure exactly what I'm looking for.  I added a line to show the key when DefaultRenderer#componentWillReceiveProps determines they are different:\nconsole.log('dispatchFocusAction', nextProps.navigationState.key);\nSo far it logs the same keys and fires the same number of times with your code and original.\nThere is also a typo getScenekey vs getSceneKey and an eslint issue.\nDo you have a case I could try with the example app or is this still in the investigation stage?\n. Can you gist the test case or tell me how to reproduce?  What logging or checking are you doing to test?  I added my log line to the example and didn't spot an issue so far.  Can you reproduce in the example app?\n. @kristojorg this sounds to me like it should work as you expect.  I'm on the road now but will be back to check this in more detail in about 24h.  One thought in case you want to experiment:  You mentioned this is all wrapped in a Switch.  You might need to move that clone scene \"up\" - directly inside the root scene.  They should be defined as early as possible.\n. @kristojorg I reviewed my app and do something very similar to what you described, and it works fine.  I think the issue is what I mentioned before with the clone scenes needing to be defined directly inside the root scene.  If that still doesn't work, I have one other idea that you could test that modifies Switch, but lets not go there unless we have to because its a bit of a hack.  Let me know.\n. @kristojorg can you import this Switch instead of the Switch that comes with rnrf?\n```\nimport { Actions, DefaultRenderer } from 'react-native-router-flux';\nimport React, { Component, PropTypes } from 'react';\nexport let Switch = class extends Component {\nstatic propTypes = {\n    onNavigate: PropTypes.func,\n  };\nconstructor(props,context) {\n    super(props,context);\n    this.updateState = this.updateState.bind(this);\n    this.state = {};\n  }\ncomponentDidMount() {\n    this.updateState(this.props);\n  }\ncomponentWillReceiveProps(props) {\n    this.updateState(props);\n  }\nupdateState(props) {\n    const navState = props.navigationState;\nconst selector = props.selector;\nif (!selector) console.error('Selector should be defined.');\n\nconst selectedKey = selector(props);\nif (!selectedKey) console.error('Selector should return key.');\n\nconst selected = navState.children.filter(el => el.sceneKey === selectedKey);\nif (!selected) console.error(`A scene for key \u201c${selectedKey}\u201d does not exist.`);\n\nconst navigationState = selected[0];\nif (!navigationState) console.error(`Cannot find a scene with key \u201c${selectedKey}\u201d`);\n\nif (navigationState.key !== navState.children[navState.index].key) {\n  Actions[selectedKey]();\n}\n\nthis.setState({ navigationState });\n\n}\nrender() {\n    if (this.state.navigationState) {\n      return (\n        \n      );\n    }\nreturn null;\n\n}\n};\n```\nThat is basically an older version of the Switch component that I still use, because for some reason the one that now comes with rnrf doesn't work for me.  I wonder if we have the same issue.\nJust import this Switch i.e. import {Switch} from './mySwitch'; instead of the one from react-native-router-flux.  Look forward to hearing if that solves your issue.\n. I took a shot at making some modifications:\n```\nconst RouterWithRedux = connect()(Router);\nfunction isLoggedIn (props) {\n  const token = props.me.get('token');\n  const myId = props.me.get('myId');\n  const gu = props.route.get('gu');\n  const guid = props.route.get('guid');\n  const rehydrated = props.route.get('rehydrated');\nif (!rehydrated) return 'splash';\nif (token && token !== '' && token !== constants.FETCHING) {\n    if (gu && guid && myId) {\n      return 'drawer';\n    }\n    return 'login';\n  }\n  return 'login';\n}\nfunction tabSceneSelector (props) {\n  const myId = props.me.get('myId');\n  const gu = props.route.get('gu');\n  const guid = props.route.get('guid');\nif (gu === 'user') {\n    if (guid === myId) {\n      return 'myAccount';\n    }\n    if (!_.isNil(guid)) return 'traineeAccount';\n  }\n  if (gu === 'group') return 'groupAccount';\n  return 'splash';\n}\nconst scenes = Actions.create(\n  \n\n state.get('me').toJS())(Switch)}\n      component={connect(state => ({\n        route: state.get('router'),\n        me: state.get('me'),\n      }))(Switch)}\n      tabs\n      initial\n      unmountScenes\n      type={ActionConst.REPLACE}\n      selector={props => isLoggedIn(props)}\n    >\n      \n\n\n ({\n            route: state.get('router'),\n            me: state.get('me'),\n          }))(Switch)}\n          tabs\n          unmountScenes\n          selector={props => tabSceneSelector(props)}\n          type={ActionConst.RESET}\n        >\n          \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n      <Scene\n        key=\"traineeAccount\"\n        tabs\n        hideNavBar\n        tabBarStyle={styles.tabBar}\n        tabBarIconContainerStyle={styles.tabBarIconStyle}\n        type={ActionConst.REPLACE}\n      >\n        <Scene key=\"traineeStreamContainer\" tabTitle=\"Stream\" icon={TabIcon} hideNavBar hideTabBar={false}>\n          <Scene key=\"traineeStream\" component={Stream} hideNavBar hideTabBar={false} type={ActionConst.PUSH} />\n          <Scene key=\"traineeComposer\" component={Composer} hideNavBar hideTabBar type={ActionConst.PUSH} />\n        </Scene>\n        <Scene key=\"traineeCalendar\" component={Calendar} tabTitle=\"Calendar\" icon={TabIcon} hideNavBar hideTabBar={false} />\n\n      </Scene>\n\n      <Scene\n        key=\"groupAccount\"\n        tabs\n        hideNavBar\n        tabBarStyle={styles.tabBar}\n        tabBarIconContainerStyle={styles.tabBarIconStyle}\n        type={ActionConst.REPLACE}\n      >\n        <Scene key=\"groupStreamContainer\" tabTitle=\"Stream\" icon={TabIcon} hideNavBar hideTabBar={false}>\n          <Scene key=\"groupStream\" component={Stream} hideNavBar hideTabBar={false} type={ActionConst.PUSH} />\n          <Scene key=\"groupComposer\" component={Composer} hideNavBar hideTabBar type={ActionConst.PUSH} />\n        </Scene>\n        <Scene key=\"groupCalendar\" component={Calendar} tabTitle=\"Calendar\" icon={TabIcon} hideNavBar hideTabBar={false} />\n      </Scene>\n\n    </Scene>\n  </Scene>\n</Scene>\n\n\n);\nclass Root extends React.Component {\nrender() {\n    return ;\n  }\n}\nfunction mapStateToProps(state) {\n  return {\n    // userName: selectors.getMyName(state),\n    route: selectors.getRoute(state),\n    myId: selectors.getMyId(state),\n  };\n}\nconst RootContainer = connect(\n  mapStateToProps,\n  // mapDispatchToProps\n)(Root);\nexport default Root;\n``\n1. Added a base \"root\" scene, and made the \"activity\" clone scene a direct child. Made \"switcher\" initial.\n2. Moved scene creation into Actions.create to ensure they only get created once.\n3. I'm not too sure about the need fortype={ActionConst...}in so many places.  I dont have anytype=` in my scenes so I would think you probably just want the defaults, unless you know you have to set them explicitly for your use case.\n. > Could you submit PR for it? Any other custom code you use?\n@aksonov that old Switch is the only custom code I use on top of 3.31.  I tried to figure it out once but never solved it.\nFrom memory:  On initial app load with a typical logged in / logged out Switch scene setup, my app would be on the \"home\" screen.  I would then try to push a clone scene, and nothing would appear to happen.\nThe farthest I tracked it down to was:  the state that was being seen by the failing push action was not correct (maybe wrong indexes and/or parent).\nIf I switch tabs first, THEN push my clone scene, it works fine.  This makes me think I'm landing in a corrupt state, but by clicking a tab the reducer runs again the state is somehow corrected.\nSo I started looking into Switch for changes.  What stuck out to me was it used to call Actions[key](), and now it doesn't.  So my best guess was to just use the old Switch in my app, and that solved my issue.\nI tried to figure out why state was incorrect on landing but correct after switching tabs back and forth, and never found a fix.  I was thinking this was only related to clone scenes but its possibly other scenarios too.\nref https://github.com/aksonov/react-native-router-flux/issues/952\n. I can create a PR for the old-style Switch, but the current one has some stuff in there that would be lost:\n- the non-selector statem way\n- unmountScenes\nI've never used either of those so I'd need to figure out how they work if they need to be migrated back into Switch.\nAre both of those necessary going forward?\n. Ok ill take a look now\n. Can someone verify unmountScenes works?  It may need to be moved before the Actions[selectedKey]();\n. @zxcpoiu thanks for checking! Just made a change to only do the unmountScenes logic when a switch will actually occur.\n@ms88privat could you also verify?\n. @aksonov so far so good!  Totally missed all the action in the other PR - nice work @sarovin and everyone else!\n. I haven't been able to try this PR yet so I might not understand exactly what we're discussing (i.e. feel free to ignore me if this doesn't make sense).  But if it does what I'm guessing, then what about: appearFromLeftToRight\n. @Swordsman-Inaction looks pretty good to me.  I haven't had a chance to run it... have you tried to run on iOS with these new Router additions? I'm curious if BackAction will complain since its an Android lib, or if its just a no-op.\n. I have a custom nav so I won't be affected.  My guess is people using the default nav will need to make adjustments based on this.\n. @atlanteh I've looked at this diff and read through the comments on https://github.com/aksonov/react-native-router-flux/issues/686 \nI'm pretty sure this is a matter of moving the code that calls Actions.foo() into the right spot.  It looks like right now at least from the original issue, Actions.foo() is being attempted in a parent and is expecting its children to execute (create the reducer) before it can function, which is against how the react component lifecycle works.\nThis probably means using a Switch to handle the scene picking in the context of the router and its lifecycle.  Or at the very least moving the Actions.foo() to a component used by the router, not in the component that is responsible for creating the router.\n. @atlanteh a couple thoughts:\nFirst, I'm not against the PR as long as people have tested it.  I'm currently way behind versions so I can't test this on my app.  Hopefully @aksonov and others can review.\nBut some other thoughts: Actions tends to get treated like a singleton, yet Router is not.  This has always been an oddity/bug IMO, but most of the time people don't run into issues because they use only one Router.  But really, I don't think there should be a global Actions.  If the router exposed a actions method and passed that down either through context or props, then the situation here would be more clear.  You would need to access this.props.actions which would make it obvious where actions is available.  I'm not sure, but I would hope that would take the async/race issues out of this.\nIf you do want to treat Actions as a singleton, then my suggestion would be to define your actions all up front:\n```\nconst scenes = Actions.create(\n  \n    ... scenes ...\n  \n);\nexport const MyRouter = function (props) {\n  return ;\n}\n```\nAgain, not sure if that would fix this specific problem, but just throwing ideas out there.\n. I just pulled this down and tried it in my app.  I couldn't really do much to test it since there is a pretty bad bug in master that seems to be wiping out the tab bar, making master basically broken.  (Anyone know what happened there?)\nI have a feeling by looking at the changes that this is ok.  And worst case, it won't be the only blocker on master.  I'll give it a few hours and then merge this unless anyone objects before then.\n. I'm a few versions behind and a bit out of the loop on this project, so I could be wrong here.  But removing deepestExplicitValueForKey seems to me like it would break a lot of functionality that used to be demoed in the Example app: Go to tabbar > push new scene > and then all of the variations of hideTabBar hideNavBar that persisted through additional scenes and correctly recoiled as they were popped off.  I would just urge someone more current on the state of the project to double check this. #1330 #1363. @MechanicKim If I'm guessing, I think what you have is something like this:\n- root hideNavBar=false\n  - scene1 hideNavBar=false\n  - scene2 hideNavBar=true\n  - scene3 (unspecified hideNavBar)\nAnd when you go Actions.scene3(), you notice it thinks hideNavBar == true\nIf that accurately describes the issue, that was how I intended hideNavBar and hideTabBar to work - they are inherited values.  The deepestExplicitValueForKey function walks the scene tree to get the inherited value when it isn't explicitly defined.  Those props are special/different than other props to get the navigation behavior in the \"push new scene\" demo.  I would compare it to how the ios UINavigationController behaves as you push and pop scenes while setting navigationBarHidden and hidesBottomBarWhenPushed as you go.\nSo I guess a few things:\n1) Am I describing the issue right?\n2) If so, it would not be a bug, so would better documentation resolve this? (either explicitly set hideNavBar on scenes, or at least set hideNavBar=false on any scene following a hideNavBar=true so it goes back to false).\n3) Or is this not a behavior people want?  For my app this functionality is critical and everywhere, but I can work around it if the core library wants to remove it.\nAlso, I mentioned before I'm a few versions behind, so I'm kind of jogging my memory on this, and I can't vouch that this functionality hasn't been broken in the latest versions that I haven't seen yet.. @MechanicKim no need to be sorry!  What do you think about the rest?  Does my explanation solve your issue or is there still something that doesn't work for your app?. @timkendall Would this fix still work if the style, styles.navigationCard order was changed to styles.navigationCard, style? I'm thinking otherwise getSceneStyle can't be used to override backgroundColor. @timkendall awesome.  Only other question is what does this do to the \"out of the box\" rendering?  Is there another view already applying a solid background, or by default are apps going to look broken until they apply a background manually?\nI'm a little behind on this project so feels wrong for me to merge without having someone more current verify it.  Maybe @charpeni could or knows who should verify and merge?. @Ash-faq im mainly doing react web dev lately so its been some time since I've used this package.  Could you create a snack to reproduce this? https://snack.expo.io/ ... ill try to help but don't want to mess around with xcode or my dev env.. @Ash-faq ah, then I would probably be no help on anything related to windows.  I didn't even know react-native-windows was a thing.  You may need to dig into the lib in the node_modules directory and do some dirty console.logging to figure out whats different, and possibly submit a PR for react-native-windows or one of the libs in the chain.  Good luck!. its not currently possible to do certain styling with the npm version of this lib.  i am waiting on a PR https://github.com/exponentjs/react-native-tab-navigator/pull/73 but it doesnt look like its very high priority over there.  are there big concerns with leaving a github dep in?\n. changed here https://github.com/aksonov/react-native-router-flux/pull/701/commits/c04b03dc2c0f9bf7d3d0ab03f8b7c9bf363688a6 and in that rnrf-lock branch ive set the version to 99.0.0\n. Ya you can simplify this quite a bit and not have to duplicate anything:\n<Component\n  {...(something ? {foo: 1} : {})}\n/>\nWant to try that and then lets see how it looks?\n. What is the need for having a different code path here?  Is there something in the Example app I can check?  Does this change break any of the Example app pages?\n. @phproot no problem! you can probably use getSceneStyle to account for the hideNavBar/hideTabBar props like in the Example app, and not hard-code a marginTop in sceneStyle.  Check the Example app that does exactly this.\nThat 3D screenshot is great.  Is that Reveal.app or something else?\n. Seems like a job for type checking with flow or typescript - not sure about going down the path of doing runtime type checking everywhere?  But cheers to anyone who would attempt passing a non-function to onPress :)\n. @alextkd could you expand on your comment here? I didn't understand either\n. @aksonov sorry about that! what did it break?\n. ",
    "philipshurpik": "@aksonov yes, we use it in new version of our app )\nWould be nice to be a collaborator \n. Ok, if you need some help - please mention me in issue :)\nAlso it would be great if you create new issue for 3.0 release with planned subtasks \n. Hi!\nI think possibly can be good idea to clean-up index folder.\nNow it' really confusing.\nAs a proposal: move Schema, Route, TabBar, Actions, Router, Animations to maybe 'components' folder\nAbout ReactRouter, EXRouter - we need example for it\nAnd I also agree with idea of renaming\n. thanks!\nbut if it's all ok with Example now?\nAs I understand it used old Router version?\npossibly we need to examples - with BaseRouter and Router\n. also - like a proposal - it can be good idea to clean-up index folder.\nNow it' really confusing.\nAs a proposal: move Schema, Route, TabBar, Actions, Router, Animations to maybe 'components' folder\nAnd ExRouter for example into 'plugins' folder\n. I also faced with this problem and created pull request to fix it\n. as I understand now it's fixed, please check\n. yes... i tested all other functionality - with this improvements it works on 0.23 (if just comment requiring images)\nso when this error will be fixed - you can use it for next release\n. Yes, worst case scenario - navbar would be shown in places, when it was previously hidden by parent.\nI think that this change will make usage of router more configurable.\nPossibly it can be part of router 3.3 version with upgrade guide.\nAnd can be introduced the same time, as RN 0.23 released.\nP.S. Also we can make router to understand hideNavBar={false} to override parent behaviour, but it's not obvious solution\n. @aksonov Hi! :)\nWhat do you think about this change now, but only for 3.24 branch?\n. yes, will make it in few minutes\n. Thanks!\nBut this PR has an issue:\ndisabling panHandlers with panHandlers={null} stopped working\nIt will be better to do smth like that:\n```\nvar state = props.scene.navigationState;\nconst panHandlers = state.panHandlers !== undefined ? state.panHandlers : (isVertical ?\n                NavigationCardStackPanResponder.forVertical(props) :\n                NavigationCardStackPanResponder.forHorizontal(props));\n```\n. Probably it would be good to clean up logic by changing API to make everything similar, for example: \n- to have props: getSceneStyle, getPanHandlers, getAnimationStyle\n- to remove animationStyle and panHandlers - that are currently mutable - it's not good and clear\nIt will change API - we need to add warnings and fallback \nI can make proposal PR for that, for example for 3.32 version, so we will have more clear API\nWhat do you think about this?\nP.S. Plus it's useful for getAnimationStyle to pass animType in it - to be analogue of chooseInterpolator method (or maybe also name it chooseInterpolator)\n. I cleaned up code and make it pass eslint.\nFor future versions I think we can clean up API\nBut for current - it can be good improvement :)\n. Guys, any ideas about this pull request?\nDo we need to clean API, or remain API the same (plus add one more prop) ?\n. @vonovak good idea to pass direction, but please fix eslint :)\n. Thanks for android example improvements!\n. ",
    "jeroenbourgois": "@aksonov I am using it to create a real production app. I would be happy to contribute, but I do have to say this is my very first React Native project alltogether so I have a lot of learning to do.\n. Hi, I updated my code so that the SideMenu has a single child and I added the reducer. Still the same error, this is the output:\nREDUCER -> ACTION: Object {type: \"RootContainerInitialAction\"}\nREDUCER -> ACTION: Object {key: \"home\", type: \"push\"}\nACTION_CLICK -> Failed AssertionError {name: \"AssertionError\", actual: undefined, expected: true, operator: \"==\", message: \"Cannot find element for parent=main within current\u2026pe\":\"push\",\"key\":\"0_preloader\"}],\"key\":\"0_modal\"}\"\u2026}\nThis is my current router:\n```\n\n\n\n\n\n      <Scene key=\"sidemenu\" component={SideMenu}  title=\"ballekes\">\n        <Scene key=\"main\" navBar={NavBar}>\n          <Scene key=\"home\" component={Home} title=\"Home\" />\n        </Scene>\n      </Scene>\n    </Scene>\n  </Router>\n\n```\nFor now I can bypass the issue by letting the action call sidemenu but then the animation let's the sidemenu slide out real fast :) bit weird.\nThanks for your efforts\n. Ok, I will do it asap. Meanwhile I dropped two minor PR's ;) I am not super technical so it are two documentation updates, but hey, my way of helping out, appreciate your feedback on my issues so I need to give something back :)\n. Ok, I can reproduce with the Example project. Modification is very easy:\nChange line 14 that says\n<Button onPress={Actions.register}>Go to Register page</Button>\nTo (the change is the actions, where I want to trigger a nested view like 'loginModal', which is similar what I was doing:\n<Button onPress={Actions.loginModal}>Go to Register page</Button>\nThen the same error is thrown.\n. Not not that I know. I just want to navigate directly to a route inside my sidemenu (drawer). It also has a key but I cannot access keys inside. This does not really seem like push jump? When using the example I get the same error\n. @gustavovnicius even without modifying the Example a lot you can reproduce the bug. Just calling a nested Scene already triggers the error. I will try to investigate that as soon as I have the time.\n. @aksonov ah ok. I did not realize that I was doing multiple actions, since I called only one action. So that might solve my inital problem too, but then when I would press 'back' it would go back to the intermediate route which I never wanted to access anyway...\nLike in the Example, when I am on the register page and I want to go to loginModal2, I should have two actions, one to go to login and then to loginModal2. But when I press back, will I go to register? Probably not, but Login instead\n. I struggled a bit with this myself.... But what I already see missing is the binding of the context types?\nI think you will need to create your own NavBar component and set the contexType with the drawer there... What I did was copying the NavBar in the source of this repo and build there...\nThen, inside that NavBar be sure to include the context type. So in short, create a NavBar\n```\nclass NavBar extends Component {\n   // ... implementation found in this repo, just tweak it to what you need\n}\n// context types!\nNavBar.contextTypes = {\n  drawer: PropTypes.object\n}\n```\nThen on your scene pass the NavBar and the drawer will be passed in the context. Allthough for me I had to pass the NavBar as a child of the drawer (for you that would be container instead of drawer. Here is my router:\n```\n\n\n\n\n\n  <Scene key=\"sidemenu\" component={SideMenu} title=\"ballekes\">\n    <Scene key=\"main\" navBar={NavBar}>\n      <Scene key=\"home\" component={Home} title=\"Home\" />\n    </Scene>\n  </Scene>\n</Scene>\n\n\n```\nBUT -> I am by far an expert, I am still learning a whole lot about both React Native, Redux and this library. So I might be doing things the wrong way :)\n. AFIKT it cannot be done on iOS. The docs are quite clear about it.\n. Perfect, thanks!\n. I am not so sure sceneStyle is still used in the 3.0 Version? @aksonov \n. Very glad to help! As soon as I have the time I will try to fix some real issues :)\n. Can you check the example in the readme again? Key is to bind your drawer to the contextType of react, that way it will be passed and accessible within your component.\n. Very weird, but I seem to be having the same issue. The initial page is loading just fine, any actions from there on seem to be muted.\n. @gerard0315 what version of react and react-native are you using? Check you package.json please.\n. Ah... but the current version of the router requires RN 0.22, or are you using the latest master version instead of the stable one?\n. Does this work for you @zccan ?\n. There is an example with the Drawer, it can be found here:\nhttps://github.com/aksonov/react-native-router-flux/blob/master/docs/OTHER_INFO.md#drawer-side-menu-integration\nIn your header bar the Drawer should be available through the context afik, have you tried debugging the context?\nThis is what I have in my SideMenu component:\nSideMenuContent.contextTypes = {\n  drawer: PropTypes.object\n}\nThen inside my render function I can grab the drawer in the context:\nconst { drawer } = this.context\nBut in this setup the SideMenuContent is the actual child of the Drawer, which in your case is not:\n<Drawer\n        ref=\"navigation\"\n        type=\"displace\"\n        content={<SideMenuContent onLogout={onLogout}/>}\n        tapToClose={true}\n        openDrawerOffset={0.2}\n        panCloseMask={0.2}\n        closedDrawerOffset={-3}\n        styles={styles}\n        tweenHandler={(ratio) => ({\n            main: {\n              opacity:Math.max(0.54,1-ratio)\n            }\n          })}\n      >\n. @jaimeagudo is the ItemCheckbox a component of yours? If so, are you exporting it correctly?\n. I think this can be done, but not sure how. Right now I see that the Connect function is passed in...\n. Any ideas on this?\n. Exactly. I am using redux but i find no way to access or pass the store\nthere :(\nOn Thu, 30 Jun 2016 at 20:00, Chris Ridenour notifications@github.com\nwrote:\n\nI think this is a great reason to use flux. React shouldn't be trying to\nshare state or props when you can have a higher level store keep this\ninformation for multiple components to connect to and use.\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/aksonov/react-native-router-flux/issues/864#issuecomment-229739332,\nor mute the thread\nhttps://github.com/notifications/unsubscribe/AAMWSN0Xa8Cc8BGpLTdkA5jQ0OajSK45ks5qRAQsgaJpZM4I-s0w\n.\n. @tuneZola in a way, thank you! I was coming from v3.29 and never considered going back one version. I had the same behaviour, it has something to do with passing certain props, in the NavBar component there probably is a collision between renderLeft || renderRight. I have a clue where to look now, double thanks!\n. I think this commit might have something to do with it:\nhttps://github.com/aksonov/react-native-router-flux/commit/1e05a97a1dff58881648bf66593b4e5df6bc228d\n\nThe order of the check was altered:\n{renderBackButton(selected) || renderLeftButton(selected)}\n. @surendharreddy @pbassut you are not tied at all to Redux or any other methodology. The plugin provides you with a reducer method that injects the current state and action. You can then do your own logic and pass the current scene to the next one, it will be passed as props.\n```\n// Where you define your router\nlet currentRoute = \"\"\nconst createRouterReducer = params => {\n  const defaultReducer = Reducer(params)\n  return (state, action) => {\n    currentRoute = action.key // e.g. LoginPage\n    action = {..., currentRoute} // you can access this on the scene component through the props\n    return defaultReducer(state, action)\n  }\n}\n...\n// pass that function to the router\n    \n```\nHope this helps. \nUpdate: I just saw that the props of the scene also contain a navigationState object, maybe that is enough?. The word reducer != redux per se :)\nOn Mon, 22 May 2017 at 18:16, Patrick Bassut notifications@github.com\nwrote:\n\n@jeroenbourgois https://github.com/jeroenbourgois Oh, and not being\ntied to redux methology at all is not entirely sure, right. I see a reducer\nbeing defined right there.\nA simpler approach for me would be something like Actions.currentSceneKey\nor a method like Actions.is('myScene')\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/aksonov/react-native-router-flux/issues/1867#issuecomment-303147817,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AAMWSBisXDGLtt3S-z1enP-qYBqFsPztks5r8bS8gaJpZM4NaRG4\n.\n. Can you show the actual class where it is used?. That is odd, I do not really see why the fetchData function would be undefined. As a small tip: maybe perform a POST request for the login instead of a GET request?\n\nAlso, both of your screenshots seem the same, so I do not really see any difference between with and without the componentDidMount(). Furthermore, I cannot think of any reason why that function would impact the scope of the fetchData function at all?. ",
    "cridenour": "@aksonov I would love to. Thanks!\n. Another solution is to make sure your components don't let go of the panResponder. See https://github.com/jeanregisser/react-native-slider/pull/28\n. Unfortunately I don't believe the default MapView uses the JS gesture system AFAIK.\n. We're still not sure if this is anything in this library or the upstream NavigationExperimental. Has anyone been able to reproduce in the UIExplorer shipped with RN?\n. Some work was started in #868 which has been published, looking for help with additional animations. \n. 1. It should refresh B, but why don't you test it and find out! \n2. Use renderBackButton to pass in your own back button, custom onPress and all. \n. @ssomnoremac What's wrong with overriding the button? Pretty simple to do. If this issue was more popular I'd say we add the functionality but it seems to be an edge case. \n. I would think your registration component would receive the change by listening to redux would it not? Or is the issue the scene doesn't re-render after receiving new props when another component rests on top?\nI mean we provide an onBack so when defining the registration scene should be as simple as \n``` jsx\nconst refreshOnBack = () => { Actions.pop(); Actions.refresh(); }\n...\n\n...\n```\n. No problem. Definitely take a glance through https://github.com/aksonov/react-native-router-flux/blob/master/docs/API_CONFIGURATION.md as there's a lot of flexibility there for when you go \"off book\" :) \n. If you debug remotely do you see an error in the console?\n. Hmm! Maybe try doing the refresh first.\nActions.refresh({key: 'yourSceneKey'}); Actions.pop();\n. @Brokray Interesting that it didn't work - but you have the better solution anyways. I don't believe in trying to use the navigation system to pass app state - I always stick to flux stores. \n. @jholton Correct, and that is by design from React, for better or worse. I highly suggest you try out a flux implementation (a lot of people like redux, I personally use Alt) and manage the data there. That way, when you update the data, the component will re-render (this means re-running render()) and not be reliant on the initialization of the component. A lot of react problems in React become much easier once you move the data layer away from components (and they just read data and display).\nThat said, Actions.refresh() will only cause new props and a re-render (again, just render()) but will not call componentWillMount, etc. \n. Thanks for your hard work! I'm willing to take a stab at 0.24 integration this weekend, if there is any existing work or contributors working on this, if you're willing to help herd us so we're not doing unnecessary work, that would be helpful!\n. Will do!\n. That component seems to be expecting an instance of https://facebook.github.io/react-native/docs/navigator.html but this library uses NavigationExperimental, which doesn't have a compatible API. \n. So I'm pretty sure this is because you're running 3.24 while running 0.22. 3.24 should be for 0.24+\n. So I'm pretty sure this is because you're running 3.24 while running 0.22. 3.24 should be for 0.24+\n. https://github.com/aksonov/react-native-router-flux/pull/536#issuecomment-211250908 is where I'm getting my information. Probably needs to be communicated more clearly on the README. \n. No problem. Just a heads up that there is a bug upstream in NavigationExperimental in 0.24 preventing type=\"replace\"\n. 0.24 may seem stable, but the underlying navigation library that this library uses was shipped with some major bugs. If you can, stick with 0.22. \n. @charpeni You might want to watch out for doing both at once or every pull request is going to have you mentioned if you commit the new linted code :) \n. True. I'd say, submit a PR with the new .eslintrc and such (which I agree would be an awesome addition), but let @aksonov do the big \"reformat\" commit. \n. @aksonov Looks like the configuration is optional, just need to add the webhook in settings. \nhttps://mention-bot.herokuapp.com/ under Settings > Webhooks & services > Add Webhook\n. You can already customize every component in the TabBar. \n<Scene key=\"main\" tabs={true} component={TabBar}>\n  <Scene key=\"showings\" component={ShowingsList} title=\"Showings\" icon={TabIcon} iconName=\"calendar\" />\n</Scene>\n. Please see the first line, you can pass a component to the scene with tabs={true}. I would suggest using the TabBar in this component as a start, and edit from there.\n. Well, to be fair the tab library is the same maintainer as this library. \nBut if you don't want to use it you won't need to. You have full control over that component as it just reads the navigation state to decide what to do. I personally overwrote mine to hide it when the user is logged out.\n. Duplicate of #521 which is being worked on upstream in React Native.\n. @ciriac Unfortunately I haven't been able to keep up with upstream changes recently so I can't say either way.. I thought we talked about this in #576 - you can use component={MyTabBar} \n. This work has already been complete in the unreleased 3.24 branch but we are waiting on upstream changes for a complete working solution for 0.24.\nThanks!\n. We're hoping they hit in 0.25, and we just merged a type=replace fix. I might try and upgrade to latest react native master later this week to see if they do. \n. We have support for direction in the 0.24 branch, but the two issues are linked to in #489 I believe. \n. The example code is for v3 of the library. If you're wanting to stick with v2, you will need something like https://github.com/aksonov/react-native-router-flux/tree/752dde2f236d1404d3a09beb1c3229597b7db3b4\n. Why not try and mirror react-native's lodash dependency to avoid any actual additional requirements?\n. Please see #525\n. LGTM\n. While you're in there, might as well make the 0.22 requirement more prominent (at least bold, maybe moved to top) to avoid a lot of confusion. \n. Yes, I would suggest you use a custom NavBar. \n. I've not done it myself unfortunately, so I don't have a example on hand. If you do get it working, please submit a PR to add it to the docs though! \n. #525 (aka please stick with 0.22 until further notice)\n. I see you have showDot={false} and one without showDot - in both cases, this.props.showDot will be false-y. \n. Then you'll need to change showDot to {true} for one of them\n. I don't think you should be using this library to pass that information down. You should still use a custom TabIcon but you should be using a Flux implementation like Redux or Alt to actually store the information of whether to show the dot - and have the TabIcon have a property of whether to connect to the store or not. \nSo I would use showDot={true} and in your componentDidMount of TabIcon, if (this.props.showDot) DotStore.listen(this._handleDot) ... etc. \n. I'm not sure if this is caused by #525 or not - so I'll keep it open. But if you can show that this is happening on 0.22 that would help narrow this down.  0.24 introduced tons of navigation bugs.\n. Still waiting to see if this is an issue with the library or mis-matched versions. Can anyone try this on 0.26-rc with the 0.26-wip branch here?\n. So I wrote this into my branch, but recently stopped using it in favor of Actions.scene({type: 'reset'}) - would that work for you? If not, I can submit a PR.\n. Also, reset will not work for 0.24 (see #525)\n. > This is really a very fundamental piece of functionality. Would be great to have this implemented inside the package. Otherwise have to do customizations....\nI'm not sure it always has to be implemented at the package level, just as long as we provide the option to customize, it will work for everyone.\nThat said, we're always open to reviewing a PR with this functionality.\n. I imagine this is related to #628 - I'm not sure of the deployment process used for the project, yes it does seem to be a hidden requirement given the latest push to npm.\n. Man I was really hoping 0.25 would include the recent NavigationExperimental fixes. Can anyone confirm that 0.25 didn't touch NE at all?\n. @thelordoftheboards  #637\n. @aksonov is on a well deserved break, but I have to think we're going to wait for 0.26 as 0.25 did not include any NavigationExperimental fixes. Between the 0.24 branch and a few open pull requests, I imagine you could get pretty close though.\n. If we do remove the default TabBar, we should make sure it's included in the Example - because even though I use a custom one for various reasons, seeing how the default one changes in each release helps me keep up to date with the best ways to use DefaultRenderer. \n. At a quick glance, this looks good. Does this pass our new fancy eslint rules?\n. No need to apologize - thanks for helping :)\n. Fixed by #637 \n. LGTM\n. I know as part of 3.22.17, something was implemented for child routes of tabs, in #350 I think. I guess this didn't apply to other scenes.\nWonder if you can use 3.22.17 as a base and get it to work. If so, let us know!\n. Probably just change the title in each child scene back to \"Search\", no? Only keys need to be unique.\n. LGTM\n. @tinygipxy You also need to use the 0.26-wip branch..\n. It's a branch on this project. \nIn your package.json, update this library to read \n\"react-native-router-flux\": \"aksonov/react-native-router-flux#0.26-wip\",\nThen run npm install again. \n. Most people are sticking with 0.22 for the time being. You're welcome to try the beta branch 0.26-wip on this project and use the 0.26-rc version of react-native. Or as others have pointed out, try using the 2.x branch of this project. \nI realize none are ideal, but most of the bugs are upstream in react-native.\n. This sounds like #525. Feel free to re-open if you find this with 0.22.\n. Yea, I just merged #678 - @martco if you don't mind re-basing this and updating the new file, we'll get this in. Thanks!\n. You could use src/TabBar.js as inspiration for rendering a child scene with a \"static\" component.\n. The tests failed in an upstream library - weird. This LGTM. \n. @charpeni Good catch. Should this be master or 0.26-wip? \n. This is a problem with your react-native installation, not this library. Feel free to jump in the Gitter to ask for more general help though! \n. Just for fun, here is a working tabIcon for our tab bar. Obviously you probably don't want our design, but figured I keep everything in there to get you started. \n``` jsx\n'use strict';\nimport React, { Component } from 'react';\nimport {\n  StyleSheet,\n  Text,\n  View\n} from 'react-native';\nimport Icon from 'react-native-vector-icons/FontAwesome';\nclass TabIcon extends Component {\n  static propTypes = {\n    selected: React.PropTypes.bool,\n    last: React.PropTypes.bool,\n    title: React.PropTypes.string\n  };\nrender(){\n    const containerStyles = {\n      borderRightWidth: this.props.last ? 0 : 1,\n      backgroundColor: this.props.selected ? '#E36137' : 'transparent'\n    };\nconst textStyles = {\n  color: this.props.selected ? '#ffffff' : '#db4626'\n};\n\nconst iconColor = this.props.selected ? '#ffffff' : '#db4626';\n\nreturn (\n  <View style={[styles.container, containerStyles]}>\n    <Icon name={this.props.iconName} style={styles.icon} size={18} backgroundColor=\"transparent\" color={iconColor} />\n    <Text style={[styles.text, textStyles]}>{this.props.title.toUpperCase()}</Text>\n  </View>\n);\n\n}\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignSelf: 'stretch',\n    borderColor: '#db4626',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: 50\n  },\n  text: {\n    fontSize: 10\n  },\n  icon: {\n    marginBottom: 4\n  }\n});\nexport default TabIcon;\n```\nAnd how we use it \njsx\n<Scene key=\"settings\" component={Settings} title=\"Settings\" icon={TabIcon} last={true} iconName=\"cog\" hideNavBar={true} />\n. For the time being, I suggest you change your package.json to use askonov/react-native-router-flux#0.26-wip if you really need to use anything beyond 0.22. \n. Duplicate of #628 - feel free to continue conversations there if this is a blocker for you.\n. #525 !\n. I think @joenoon pushed a version to our new Utils file. But let's all remember the left-pad insanity before we introduce dependencies for 3 lines :) \n. Your best bet is to use type=\"reset\" when defining scenes or when using Actions.scene() instead do Actions.scene({type: \"reset\"}).\nI had a branch where I created a Actions.reset() but it felt like overkill vs. passing in the type.\n. We haven't pushed a version compatible 0.26 to NPM yet. Go ahead and change your package.json to \"react-native-router-flux\": \"aksonov/react-native-router-flux#0.26-wip\",\n. Could be interesting. Any ideas on how you would you map url elements to props?\n. I think given the simplicity and the solution posted here, we should move on from adding to this library. Thoughts?\n. I've been using the solution posted above without issue. If anyone wanted to turn it into a guide, they could submit a PR to put it into the official docs. . We don't have an Android version but the underlying Linking library in React Native does have Android support, yes. . You can always use console.ignoredYellowBox until they fix it upstream.\n. Good call. Yea, it's definitely not important, but we should probably document it somewhere. I'll leave this open until we update the README and Android example.\n. This is upstream RN bug and fixed in 0.26.2, which is a JS only upgrade. \n. Upgrade to 0.26.2.\n. You should be passing hideNavBar={true} to your root component. See the Example project as it has a Drawer.\n. Actions.refresh({hideNavBar: false})\n. I think this is a good idea, would love to see a PR with it if you're up to it! \n. I believe those actions are only dispatched because we send them regardless of whether the tab is selected. \n. This is a limitation of how tabs are implemented in react-native in general AFAIK. They are all mounted with the TabBar. You can check if the tab is selected through it's props though - which makes me think there might be a bug if that lifecycle event is never called. Can you fork the Example for a simple example for us?\n. Yea unfortunately we don't have the web's react-router control of \"preTransition\" in this library. Highly suggest you move that stuff into a Flux implementation though anyways. \n. Version 3.22 is not compatible with 0.26. However, 3.26.1 is! Feel free to re-open if this is still happening after you upgrade. \n. You should use src/TabBar.js in this project as a starting point for MyTabBar. Just change as necessary!\n. Don't use tabs={true}? \nI am using a custom tab bar based on src/TabBar.js that I hide using a flux state. I had to update my component with 0.26, but other than that, it works fine. \n. Yes, if needed, you can just use type=\"jump\" on all the sub-scenes. Definitely take a look at Joe's comments above though!\n. I think it would be very confusing to call react lifecycle methods when react itself wouldn't. The reducer is simple to implement and is an easy solve for those who want that level of control.\n. Where is the transition started from? A button press? App load? \nEither way, it will come down to custom code in your component and using Actions.search() or Actions.list() as necessary.\n. Check out everything under Alternatively here: https://github.com/aksonov/react-native-router-flux#usage\nAfter that, I would try using Actions.search in componentWillMount of your app. \n. Can you reproduce in the Example app? Or paste your  config.\n. Just a heads up you are using an unsupported pair of RNRF + RN. The only known working configurations are RN 0.22 + RNRF 3.22.x and RN 0.26 and RNRF 3.26.x. \n. Possibly related to https://github.com/facebook/react-native/commit/14eb427a8061e0c904ace022535070150c6872d4?\n. @ramigb In the mean time, I would stick with 0.26.\n. React Native and this library have had many, many updates since the\nversions you're using. I'd update to the latest.\nOn Wed, Mar 15, 2017 at 5:33 AM Denis notifications@github.com wrote:\n\nreact-native@0.37.0\nreact-native-router-flux@3.26.0\n@ramigb https://github.com/ramigb @cridenour\nhttps://github.com/cridenour what should I do to fix it?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/aksonov/react-native-router-flux/issues/728#issuecomment-286688016,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AAKt0K8ZNeA63_9T0M5K_4DXGLThCRmWks5rl7BZgaJpZM4IlUD2\n.\n. You need to use RN 0.22 with 3.22.x or RN 0.26 with 3.26.x. If the problem persists after you upgrade, let me know and I'll re-open. \n. I don't believe 3.23 and 3.24 were ever \"supported\" as we closed all issues with them. I would put them in the same category as 3.25. \n. I think in general, you should use Actions.create when dynamically changing routes as shown below: \n\n``` jsx\nimport {Actions, Scene, Router} from 'react-native-router-flux';\nconst scenes = Actions.create(\n  \n\n\n\n\n);\n/ ... /\nclass App extends React.Component {\n  render() {\n    return \n  }\n}\n```\nThat said, you should not be re-rendering. Your initial only cares about the first render anyways. So rather than use state, just check for the onboarding once on app load. \n. That's because AsyncStorage is a Promise and will call setState once it returns. To truly make it work add a new function like \njs\nasync function getOnboard() {\n  const onboard = await AsyncStorage.getItem('key');\n  return onboard;\n}\nAnd then in your componentDidMount you can use this.getOnboard.done() to get the value and it will work as you expect. \n. @chandlervdw When I did that on an app, I forked the TabBar into it's own component which listened to a flux store, and would hide/show appropriately. It's just the Router itself that shouldn't re-render.\n. @chandlervdw Oh right. On your scene with tabs={true} you can pass in component={MyTabBar} and it will use that rather than importing the default.\n. I believe you need to cd to Example to run it. Can you try and report back?\n. I'm going to close this due to inactivity. If this continues to be a problem, please let us know and we will re-open the issue. If this is a question about using the library, head over to the Gitter Chat for live help!\n. The tabbar Scene should be the one with tabs={true}, not it's first child. Basically remove the whole tabbar scene and rename main to tabbar.\n. I'm going to close this due to inactivity. If this continues to be a problem, please let us know and we will re-open the issue. If this is a question about using the library, head over to the Gitter Chat for live help!\n. Has anyone had a chance to test this yet? Let's use this issue to collect bugs (if any).\n. Which as I'm sure we're all aware is my birthday. \ud83c\udf89 \n. Is this happening in the Example project as is? Or after you've made changes?\n. Have you tried panHandlers={null} on the Scene?\n. Also, even inside a router you should have have state, as you should not re-render the whole app. And given that any \"isLoggedIn\" will be async, you should be routing to another component after determining a logged in state.\n. I'm going to close this due to inactivity. If this continues to be a problem, please let us know and we will re-open the issue. If this is a question about using the library, head over to the Gitter Chat for live help!\n. Now that our app is out, I should have some time later this week to play around as well. I'll check back in before then to see where there's a need. \n. We haven't had any issues with 0.27, but we haven't gone into full QA mode. Now that we package NE with RNRF, it seems RN's 2 week release cycle should be less hectic now!\n. After forking src/TabBar.js to a component, just pass that in as component={CustomTabBar}.\n. @aksonov This is very interesting. Since we are restricting the props in Scene to a defined set, will we still pass these props down to the component as well? Or is the thought that these are for the navigation stack and any important props should be passed in the action.\n. @aksonov Hm, while that is a W3 standard, how common is it? I'd like to hear some thoughts of others here - but I'm not sure adopting an unused standard would be beneficial. \n. Hey @gmchaturvedi1, your best bet for support like this is in the Gitter Chatroom. Feel free to open a new issue if you find a bug in the library. \n. I think this has merit and would welcome a PR containing this functionality. \n. Not using redux so I can't say for certain. I had the same understand though that all redux actions are combined, but maybe this is something we can accomplish in the redux example in the docs?\n. I just think this is supposed to be a flux agnostic library, so while redux would like more specific action names, can we do this on the fly as part of the optional redux docs? If so, I would prefer that. \n. That's exactly how it currently works - have you tried it and it's not working?\n. That code is from version 2.x of the library. Please see the Example project, specifically https://github.com/aksonov/react-native-router-flux/blob/master/Example/Example.js and https://github.com/aksonov/react-native-router-flux/blob/master/Example/components/NavigationDrawer.js on how to do this with 3.x.\n. Sounds like @badaz has a working solution. Closing for now. Feel free to comment if this is still an issue!\n. @perrosnk Can you confirm this answered your question? \n. What if you install the react-native-experimental-navgation library directly so it's not as nested? If it truly is a filename length issue, that might help. \n. @asafratzon As long as you install the same version, npm won't re-install it as a submodule.\nI'm going to close for now - if you are having this issue on windows, please see my suggestion above!\n. 0.25 was never officially supported, but the latest versions of RNRF provide the navigation code inline. \n. @whitmanc The previous versions of this project relied on specific versions of RN (3.26 with 0.26, etc). Since 3.30, it works with all versions of RN. \nMoving forward, we just ask everyone work with the latest code :)\n. @AshokICreate Did upgrading end up fixing your issue?\n. When you're calling the page after logging out use Actions.KEY({type: \"reset\"}). We use this for logging out without issue. \n. AFAIK, if you navigate to a page via type=reset, then any component added to the stack after that will have its componentDidMount action called. \n. I think this is a great reason to use flux. React shouldn't be trying to share state or props when you can have a higher level store keep this information for multiple components to connect to and use. \n. I don't see why you can't access the store via onRight or onLeft. Since it's just a JavaScript function, everything available should be there - maybe there's a scoping problem in your case. If you post code we can try and help. \n. Do you have any other libraries in this app? I've seen this with the keyboard aware scroll view. https://github.com/APSL/react-native-keyboard-aware-scroll-view/issues/33\n. Closing in favor of the pull request.\n. Doesn't this overwrite any styles passed to the child intentionally? \n. I believe the default for this library should mirror the default iOS behavior. However, if you want to override that, you can always set your own panHandlers on the scene, but I don't have any examples of the functionality you're looking for. \n. There is only one \"Router\". You're already defining it in your index.ios.js and index.android.js. I highly suggest you use the Example as a starting spot.\nhttps://github.com/aksonov/react-native-router-flux/tree/master/Example\n. Yes, and there can only be one per project. You can't have it in both app.js AND index.android.js. \n. Ah so sorry - I read Provider as Router when I first looked. \nI would still place your Router as the first element after the redux provider - following this guide. https://github.com/aksonov/react-native-router-flux/blob/master/docs/REDUX_FLUX.md\n. @iWinkey Now that 3.30.4 is live, can you confirm if that fixed the issue? Thanks!\n. Hm, there's a lot going on in your example code. Are you able to produce this in the actual RNRF Example app with leftButtonImage and rightButtonImage as the only changes? \n. Unfortunately using react-native Navigation or NavigationExperimental is even more intense IMO. When you think about a mobile app, the UX and flow are some of the most important pieces, and one developers expect to be completely customizable. \nHopefully we can get to the bottom of this, and after you're more comfortable, we'd love the help with documentation! \n. It's not something that is supported AFAIK. There are some hacks you can do with a custom TabBar, but I was hoping someone had a more clever answer for you. \n. What does your NavBar code look like? \n. Hm, even if your navbars are separate instances, they should have the correct state. \nMake sure you're reading the navigationState correctly, maybe compare to the original one and see how they are reading the new state. \nhttps://github.com/aksonov/react-native-router-flux/blob/master/src/NavBar.js\n. I would believe that you wouldn't want a back button on a child tab scene. Navigation at that point should be between tabs. If you navigate to a scene from a tab, you will then want to go back - but only as far as the tabs. \nThis is a \"sane\" default as most tab based navigators are root scenes - but obviously you have a use case for otherwise. I'll have to take a deeper dive or get @joenoon in here to find a next step.\n. Check out the API docs here: https://github.com/aksonov/react-native-router-flux/blob/master/docs/API_CONFIGURATION.md#navigation-bar \nYou can pass in a navigationBarStyle - if that doesn't get it perfect, you can create your own NavBar by copying src/NavBar.js to your own file and using navBar={MyNavBarComponent}.\n. Hey @yashvmbd \nBased on your description, this is because you need to either use \nonPress={Actions.pageTwo} or onPress={() => Actions.pageTwo()} as both of those are references to functions. When you use onPress={Actions.pageTwo()} it runs the pageTwo function returning a boolean.\nThis is a Javascript error and not necessarily related to this library, but switching to one of the two methods I described above will remove that error. \nThe screenshot you posted seems to be correct format, but you might need to rebuild to get it to work correctly. \n. Thanks @rh389. Until NavigationExperimental is stable upstream, this is something we won't be able to fix. However, future Google searchers can implement the suggestion above!\n. If the view is showing up then the router is doing its job, and that view just needs styling.  Position absolute, top, left, right, bottom all at 0. \n. I believe a transparent background is possible, as I've done it accidentally. However I'm on mobile and can't provide an example. But regarding positioning, the default is fluxbox, but you can manually set it to absolute.\nWith the direction, on the modal view in your scene config, just set direction=\"vertical\" and it should do the trick. \n. Wait why do you have getSceneStyle on your router? I don't think it's valid on a router, only scenes.\n. Ah, you're right - sorry. Maybe instead of nesting the scenes under the Router object, pass them using the scenes prop and Actions.create\n. @ryancoughlin That suggestion was for their particular case. If you check out the Example app, the modal example (Login) does not require such styling. . Is this something you're also seeing in the Example app?\n. Thank you @iWinkey. This is an unfortunate and unintentional change of a merge request aimed at better redux integration. It might be worth rolling back, but I'll wait for others to chime in. \n. Yea, I'm confused by this as well. @tsyirvo can you post a video of this working out of the box in 3.26? Or was it a custom component that only worked in 3.26?\n. What does this do to the router configs with type=\"replace\" and type=\"reset\"? This will also need to update the Example app.\n. Thanks @zxcpoiu! \nI think removing the _ACTION makes sense as we'll be using ActionConst in front of it in almost every situation. \n. See https://github.com/aksonov/react-native-router-flux/blob/master/Example/Example.js#L165\nYou can pass a component to use as the icon, where you can leverage icons (or anything).\n. You should look at using a reducer to catch these actions. \nSee the example here https://github.com/aksonov/react-native-router-flux/blob/master/Example/Example.js#L55 and here https://github.com/aksonov/react-native-router-flux/blob/master/Example/Example.js#L106\n. I'm going to close as this has nothing to do with this library and is more of an architecture question. Feel free to re-open if I'm misunderstanding!\n. @gregorpilz Any more details on the error with 0.29? Can you run the Example app and provide a screenshot?\n. Another approach is to have the initial screen be the login screen as it checks for the AsyncStorage token and on finding that token, calling Actions.main or whatever your other screen should be. \n. Unfortunately I'm not building an Android app at the moment so I haven't have a chance to dive in. However, your assert doesn't seem to be in the right format. \nThat said, if this is a well documented UX pattern, we should include the exit in our own code rather than a documentation suggestion. If it's not, I think pointing people to a custom reducer is best. \n. You can listen to the reducer - check the Example app for a way to do this.\n. You can do \njs\nActions.pop();\nActions.refresh(newProps);\n. @af7 I also believe you can do Actions.refresh({key: 'sceneKey', ...newProps}) followed by pop - but I have not tested that. \n. @AntonNiklasson is correct. Using {} is necessary in JSX but when you use it in the JS object, it creates a child object holding the TabIcon and not just the TabIcon as expected.\n. @imWildCat Thanks for the detailed report. This definitely seems like a bug on our end - but I'll have to play with the Example app to make sure. \nIn the mean time, can you try adding navigationBarStyle={styles.navigationBarStyle} to your tabbar scene?\n. @waqas19921 Does the solution posted by @vinayr work for you?\n. While I didn't test the code myself, this looks great! Thanks for the write up. \n. Hey @yaronlevi this is interesting. If possible could you fork the Example app and add this component to it so we can test it as you have configured? Definitely shouldn't be happening. \n. Please see the Example app here: https://github.com/aksonov/react-native-router-flux/blob/master/Example/Example.js#L56\nIf you're using redux, you can follow this guide: https://github.com/aksonov/react-native-router-flux/blob/master/docs/REDUX_FLUX.md\n. @asrytis Are you leveraging the reducer in your app? This type of logic shouldn't be something that lives on your component. If there are issues with the reducer stopping you from using it, I think that would be the best place for us to start. \n. I believe that would have to be something built into react-native. This library lives on top of NavigationExperimental. \n. @tonyneel923 Definitely. In your custom reducer function like https://github.com/aksonov/react-native-router-flux/blob/master/Example/Example.js#L59 then you can call AltJS actions to save the current scene. \nYour stores can listen for these actions and act appropriately. \n. @tonyneel923 Yup! Then in your various stores that your components listen to, bind to the ConfigActions.SET_CURRENT_ROUTE action and determine if you care about that scene. So if you have a \"News\" component and store, and you want to refresh every time they enter, then the NewsStore would bind to that action and determine whether to refresh when receiving that action. \n. Also, for Alt specifically, if you already have the updated data but want to just have the component refresh, you can use this.emitChange()\n. Why not just render the router inside a view with a background image?\n. Does your home component have a transparent background set as well? I believe most react-native components default to non-transparent.\n. Please see the reducer section of the detailed example.\nhttps://github.com/aksonov/react-native-router-flux/blob/master/docs/DETAILED_EXAMPLE.md\n. The only way I can think to do this would hook up your own reducer and put the logic there, so you can affect the actual navigation state. \nI would check the current implementation of reset for changing the underlying navigation state.\n. In the scene where you set tabs={true} you can set the component like component={MyTabBar}. I suggest you copy src/TabBar.js as a starting point. \n. It's very likely upstream, but I'll be interested if anyone else has noticed this behavior. \nIs this Android or iOS?\n. Yea unfortunately this is probably not something we'll add as the whole idea of replace is to change the component inline. \nThat said, if you need to force unmount the previous scenes, there was work in #932 that should interest you. Not sure if it will fix this particular workaround. \n. Closing as duplicate of #887 - there are some pointers there, feel free to continue the discussion though. \n. Maybe there are changes that need to be made in the Xcode project? I've never re-named a project before.\n. This library doesn't use rnpm, what other libraries do you use?\n. For that, I would suggest forking the NavBar and passing it in as your own using navBar described here: https://github.com/aksonov/react-native-router-flux/blob/master/docs/API_CONFIGURATION.md#navigation-bar\n. Well you as the developer control when a user can see a certain screen. I'll leave this open for anyone who wants to post how they handle authentication in their apps, but in the simplest case it is if(isLoggedIn) { Actions.nextScreen(); }\n. I guess my confusion is - who are you protecting it from? It's not like the web where a user can craft a URL. You are in control of what's rendered.\nWhen you log someone out, you can send them to the login page with Actions.pageLogin({type: \"reset\"}) and the stack is cleared. In other places, if you don't want someone to be able to go to a page, disable the button (or don't even render it) unless they're logged in. \n. Correct - if your goal is to just reduce boilerplate code, I would just use a standard JS function. \n. If you want the push animation, you can use the unmountScene prop introduced just last week in #932 \n. I actually think I might have led you down the wrong path. \nAt some point, I had a fork with an Actions.reset() - let me see if I can find it as it would do what you want. There are also some issues to remove certain scenes from the stack by name.\n. Interesting! I personally don't see any issues with it - I'd say go ahead and open a PR and see what others think.\n. We forked NavigationExperimental to avoid conflicts like this. It should work fine, but let us know if that isn't the case!\n. You can try out the new unmount prop as described in #932 - I haven't had a chance myself. In areas where we need memory, I usually use type=\"reset\"\n. @ajoshdee Go ahead and open a new issue - don't believe it fits with this. Thanks!\n. Thanks @Swordsman-Inaction! Can you add this to the API docs file as well?\n. What do set as a default with getSceneStyle? Should we provide a default function (that includes the direction stuff) to help clean up some of that logic?\n. Since the navBar is absolutely positioned, this is normal AFAIK. However, since some of us don't use the navBar or have a transparent background, adding this margin automatically wouldn't be ideal. \n. Can you try running react-native upgrade in that project? This is more of a general react-native error, but it could be our example.\n. Add hideNavBar={true} to your root Scene.\n. Have you tried navigating to a tab with Actions.sceneKey({type: 'reset'})?\n. Actually, this sounds exactly like what #932 was introduced to solve. \n. I have to think this is more of a question for their library than ours - I've never had the NavBar disappear when showing the keyboard. \n. Simplest option is to use Actions.refresh({ ...navBarProps }) to pass in the new props to the scene. \n. Take a look at the detailed example, specifically the reducerCreate and it's usage. By creating your own reducer, you can keep track of what scenes are active. \nEdit: Link to example\n. I agree this seems like a high barrier of entry for this specific task - but this library was made to be used with a flux implementation (I personally use Alt) and to ignore that aspect means we would end up writing a lot of code into the library that would duplicate code that's already in a most apps, or muddle the right way to integrate this library into your app. \nNot saying that one way is right or wrong, but this isn't a simple case of missing functionality. More of a case of the community using this library for basic routing (since there is an absence of a easily configurable one in React itself) vs the intended use when it was built (to integrate the navigation into your flux implementation of choice). \n. It won't be able to. You should move the state above the component as the NavBar cannot access another component's state. \nIf you want to use refresh, you can access it via this.props but I highly suggest a Flux implementation. \n. Hey @blackxored - thanks for the feedback. The few \"design\" elements of this library could definitely use a closer look. I wonder if there are things we can do to hide the inaccuracies of NavigationExperimental in either this library or our branch of NE - https://github.com/aksonov/react-native-experimental-navigation\n. While we don't have anything simple regarding the tab bar, check out the detailed example as a starting point. \nPRs welcome once you figure it out ;) \nhttps://github.com/aksonov/react-native-router-flux/blob/master/docs/DETAILED_EXAMPLE.md\n. @sheparddw is correct. In the same way you can update the navigationBarStyle with Actions.refresh({navigationBarStyle ... }).\n. We also use FB login and haven't had this issue. Can you post your Router config and FB button code?\n. in your componentWillMount of Contacts add \nActions.refresh({onRight: () => this.create });\n. @onatm There's not much more to it than what I posted. If you find it's working outside a switch and not inside, definitely submit a new issue regarding that!\n. Ah nope. That looks good - thanks!\n. Honestly, the navigation of your page shouldn't manage this sort of binding and state. Your best bet is to include a flux implementation so you can keep the app state on a higher order, and bind your components to the state. \nAt that point, then it's just a matter of wiring up your buttons to the flux actions. \n. HI @twvdb! I doubt anyone here has tested with UWP. Are you willing to submit a PR with the correct assets?. Thanks!. Unfortunately there's no way to move from Router to Router. I would encourage you to use one router and use additional mechanism for authentication. . Can you test with the latest release? Also, can you confirm this is happening in the Example app?. I would create a new NavBar (copy from the repo, rename) and add functionality to listen for an event called StartScroll and hide itself, then unhide itself at the end of the scroll. Then in your component with the scroll, fire off those events (using whatever flux/redux/mobx you choose) based on the scroll. . Can you post your router?. Can you use Actions.newScene({type: ActionsConst.RESET})?. That was going to be my next suggestion. Glad you got it figured out!. This might be an upstream bug but honestly I would encourage you to change the structure of your logic to not rely on componentDidMount. Keeping that data in a flux/redux/mobx store will mean all you need is a new render to see the latest data. . Unfortunately there's not enough here to reproduce. Are you seeing this behavior in the example app? . You can create a custom TabBar (copy the one from the source code here) and update the styles, etc. in there to lock itself to the top of the screen vs. the bottom. . If @hasLandon's suggest did not work for you, you should create a custom TabBar (copy the one from our source) and add your button / View there - and make it do as much or as little as you want.. @dioxmio I personally believe in less options and more inheritance, which is why I always suggest a custom component. I'm glad you were able to get this to work without it - but as someone who has a custom tab bar, it's really not a lot of work and feels cleaner. I'm going to close this issue, but feel free to open a PR if you believe there is an easier way! . What does your NavBar look like? You should look at the real one for inspiration (or as a starting place) if you want it to behave similar. \nhttps://github.com/aksonov/react-native-router-flux/blob/master/src/NavBar.js. The real NavBar is an Animated.View instead of a normal one, so I imagine that is requirement number one. However, there's no documented list of requirements for this so I would encourage you to start all Custom NavBars by copying the one I linked and customizing from there vs. a fresh component. . What you can do is create a \"separate\" Rooms scene called roomsModal which is not a tab. It would use the same component, but it will be able to jump on the stack as a normal scene and get removed correctly.. I have done this in the past by allowing the transition to happen normally (with animation) and then after the transition, calling Actions.reset(); \nThis may or may not work for your case. . A demo is worth a thousand pictures! I would encourage you to check out the example app provided with the repository. That said, this could be a great contribution to this repository. Thanks for the idea.. I've not used jest - but I would encourage you to look at the tests in this project which use chai. Maybe someone else who uses jest can let you know if they found a working config. . What are you trying to achieve by using .callback and why can't you just call Actions.mykeyScene?. @pocesar Can you try with the latest release? . Is this in the device or emulator? Do you have free memory? \nThis is very bizarre. . As long as the phone only suspends the application, state will be preserved. But if they leave the app, it will reset navigationState.. If memory serves, the unmounting is left up to RN and not this library (I don't think we have that control). . Just call Actions.refresh from wherever you are handling the response from your server.. Hi @satsuki0221.\nAre you wanting the back button to continue to work? . We're going to need to see more code to be able to help. In general, I usually suggest making the initial scene the login page (or a loading page) and when you read the user_id from redux, make a call to Actions.login or Actions.main as needed.. Actions.refresh({key: ROUTE_NAME, ... }). You can't assign a prop in your component. You should be using state to store that information.. Can you reproduce this in the Example app provided or just in your own app? May be something more going on here.. I don't think there's a way to do this out of the box. Can you describe more of the use case? . Are you able to find it in the inspector? Maybe you need to add better styles with navigationBarTitleImageStyle and our defaults need to be updated.. Merged PR. Thanks again.. Honestly, I would just suggest copying the image and creating an altered version. It's by far the simplest solution and I can't see the justification for adding an option for this.. Looks good. Thanks for submitting. . I don't see why it should be. \nSee: https://github.com/aksonov/react-native-router-flux/blob/master/src/NavBar.js#L572\nCan you share the actual implementation?. leftButtonIconStyle={leftButtonIconStyle}\nnavigationBarStyle={navStyle}\ntitleStyle={titleStyle}\nshould be\nleftButtonIconStyle={styles.leftButtonIconStyle}\nnavigationBarStyle={styles.navStyle}\ntitleStyle={styles.titleStyle}. Hm what if you specifically put the navigationBarStyle on the scene as well? Do the styles apply correctly to the other tab with the Dashboard?. The original issue says the image itself is killing the styles that were on the NavBar. The NavBar is just a view, so any react-native styles should work. I'm just trying to make sure the image itself is the problem.. Can you try applying navigationBarBackgroundImageStyle={navStyle}? \nhttps://github.com/aksonov/react-native-router-flux/blob/master/src/NavBar.js#L582\nAs you can see here, there is a different structure when using a background image (necessary in React Native vs. web). Just to be clear, this is a background image and won't be inline with the rest of the content. It might be easier to pass in a custom NavBar (by copying src/NavBar.js and creating LogoNavBar.js in your project) to add an image and style it more directly.. Hmm. Can you change one of the views in the Example project to an Animated.View and see if you can reproduce? This sounds like a panResponder issue rather than Animation related.. Are we still waiting on upstream changes on tab-navigator? Or can we point back to npm?\n. Only potential concern would be if they list react-native-tab-navigator in their package.json separately. Maybe bump the version number in your master branch to avoid conflict?\n. ",
    "lelandrichardson": "@aksonov Airbnb is going to be using this library in production, so I would definitely be interested in being a contributor.\nThanks for your great work so far!\n. Note: This PR includes the commit from #504 and will go away when/if that is merged.\n. @aksonov There was a conflict with some tests added in a different commit. Should be fine now.\nThanks for merging these in! Let me know if you have any questions. Thank you for your great work on this library - if we can get these changes in then we should be able to use it at Airbnb!\n. @aksonov we are currently on 0.22 but going to upgrade soon. Probably when 0.24 comes out.\nI can take a stab at putting a PR out to upgrade this library once we do, if you want?  Looks like #503 is already moving in the right direction.\nBTW, when can I expect these merged PRs to be published to npm?  Thanks.\n. Thanks for such a quick turnaround!\n. @aksonov interesting. That's kind of what I thought, too... but it didn't work for me when I tried... :/\n. FYI, support for 0.24 is blocking AIrbnb from upgrading to 0.24, and we will be preparing a PR to upgrade this lib for 0.24 support today (hopefully).\n. @aksonov thanks for this context. I'm just sort of jumping into this now...\nIs there a discussion thread where I can understand better the bugs you are referencing in RN 0.24?  If so, I will try and get them cherry-picked into 0.25-rc (if they aren't already)\n. LGTM.\n. This PR in general LGTM. This does add a dependency on lodash/omit, which I think is reasonable, but I want to allow someone else to comment on that as well.\n. @mikefowler maybe we just use the proposed ignore comment + object-rest?\n// eslint-disable-next-line no-unused-vars\nconst { children, style, scenes, reducer, createReducer, ...parentProps } = props;\nThis way the behavior is sure to be the same, and we have no question of additional dependencies?\n. \ud83d\udc4d \n. LGTM. \ud83d\udc4d \n. @charpeni any reason to include src in .npmignore? Can be helpful if consuming users want to look at the source code\n. LGTM\n. ",
    "AlexDM0": "I'd be up for helping out. I've been using this project a lot in our own app and we'll be working with it for some time to come. I can't promise I'll be able to help out with issues but I can submit pull reqs for any issues that I may encounter in our own project. \nWe've recently been trying to involve the community in one of our projects vis.js and I know how difficult it is to try to make something community supported, so best of luck!\n. I am, Yes. I was thinking of making my own lib based on react navigation. I'll be happy to address issues that I run across but I'm not sure of the process. There are some annoyances I had with the current architecture so I'm not sure any fix would fit the philosophy of this project. \nMain issue I had was that the topbar was only configurable on the router. Not in the scene itself. Left button, right button etc. \n\nOn 7 Jul 2017, at 19:11, Pavel Aksonov notifications@github.com wrote:\nv4 beta based on React Navigation is ready (#1974), looking contributors for v4 now (@sibelius, @cridenour @AlexDM0, @jeroenbourgois, @joenoon, @philipshurpik @chetstone are you still using RNRF ?)\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n. Is that in the documentation somewhere? The props on the API docs seem to have to be supplied as scene props. From the component in the scene I'd like to change those properties because they are depending on the context of the component itself. \nOn 7 Jul 2017, at 19:28, Pavel Aksonov notifications@github.com wrote:\n@AlexDM0 Strange, v3 allowed you to define left, right, title as static properties for your components. v4 should support it as well (because React Navigation supports it)\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n. Currently I use the navbar from rnrf in simple views. For Views that have a more complex use (dynamic titles, context aware buttons etc) I have my own topbar implementation. Since I'm building the app for our company I can allocate time to implement v4 but I don't have much time for issues and the like. As I said, the ones I run into I'd be willing to fix. The move to v4 won't be done until it is out of beta though.\n\nCheers\n\nOn 7 Jul 2017, at 21:14, Joe Noon notifications@github.com wrote:\n@aksonov neat about v4! I switched to plain react-navigation in April. It was not the easiest switch, but it worked out. I'll probably just stay with that for now unless I have time for another refactor.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n. Wouldn't it make more sense to just allow a custom element instead of differentiating between images or text? I can imagine svg, small styled views etc. \nOn 20 Jul 2017, at 09:23, Pavel Aksonov notifications@github.com wrote:\n@daisydon No, it is not supported yet, PR is welcome (as titleImage prop)\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n. For me it would be great just to change the pan detector to be on the left half of the screen. iOS sliders now go to the previous page when I decrease their value...\n. Hi, \n\nI'm using iOS at the moment. I'll give it a shot though!\nRegards\n. I had that before but then the example didn't work as it is calling a reference to itself. In production that wouldn't be the case so there your solution would indeed be better. \n\nOn 25 Mar 2016, at 10:21, Elie Slama notifications@github.com wrote:\nYou should use the reducer to store the currentRoute somewhere in your app.\nThen you check if the currentRoute is already set and prevent the route to be triggered twice.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly or view it on GitHub\n. Cant believe I missed that. Sorry and thanks!\n. Hi, \n\nI explicitly wanted it to be done at the second tap. The first tap is just to switch. \nRegards\n\nOn 06 Apr 2016, at 17:05, rgovindji notifications@github.com wrote:\n@AlexDM0 I tried that solution but it doesn't work 100%. I have to click on the tab icon twice in order for the page to show. I'm not really good with reducers, do I need to kick off two actions? One for the parent tab and one for the child?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly or view it on GitHub\n. I just used the renderBackButton method:\n\njs\nrenderBackButton={backButtonFunction}\nwith\njs\nlet backButtonFunction = function() {\n  if (this.props.navigationState.index === 0) {\n    return null;\n  }\n  return (\n      <TouchableOpacity style={[{\n        width: 100,\n        height: 37,\n        position: 'absolute',\n        bottom: 4,\n        left: 2,\n        padding: 8,\n        justifyContent:'center',\n    }]} onPress={Actions.pop}>\n        <View style={{flexDirection:'row', alignItems:'center'}}>\n          <Icon name=\"ios-arrow-back\" size={25} color={'#ffffff'} style={{marginTop:2,paddingRight:6}} />\n          <Text style={styles.topBarLeft}>Back</Text>\n        </View>\n      </TouchableOpacity>\n  );\n};\nWorks like a charm.\n. Keep in mind that you dont use an arrow function or bind it. It depends on the this of the environment where it is being executed. I reverse engineered it from the method implemented in the router source and hardcoded the styling into it.\nCheers\n. I defined it in my router file but it shouldn't matter where you define is since the scope will be where it is executed. In fact that is the only reason it works. Did you put it in the scene props? \n\nOn 18 Apr 2016, at 09:57, Stijn Tytgat notifications@github.com wrote:\nHey @AlexDM0 ,\nWhere did you define that function?\nI can't seem to get it to work in my project.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly or view it on GitHub\n. Which version are you using? You didn't use arrow functions or bind?\nOn 18 Apr 2016, at 10:05, Stijn Tytgat notifications@github.com wrote:\nThanks for the quick response!\nI did include it in the scene's props, but it somehow keeps saying that this.props.navigationState is undefined.\nI don't think anything's off with my props though:\n\nI've tried defining the function inside of the render-method, outside of the class, as method of the class. None seemed to solve it though.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly or view it on GitHub\n. I'm not sure if it could be related but so far router-flux requires 0.22. I'll check my exact router flux version when I get to work. \n\nIf it doesn't work anymore I'll make a pull req to fix it and properly pass the props instead of hoping the this is alright. \n\nOn 18 Apr 2016, at 10:12, Stijn Tytgat notifications@github.com wrote:\nI have used neither of those.\nreact-native-router-flux: 3.2.12\nreact-native: 0.23.1\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly or view it on GitHub\n. I tested it with rn 0.22 and router-flux 3.22, everything seems to work fine.\n. My bad, it doesnt work with 3.22... I'll look into it\n. The navbar now correctly gets the tab it should and the this is not bound anymore causing the app to crash. I'll make a pull to fix this.\n. Hi,\n\nI've done this with the reducer like this:\n``` js\nlet inTabMenu = (state) => {\n  if (state && state.children && state.children.length > 0) {\n    return state.children[0].name = \"tabBar\";\n  }\n  return false;\n};\nlet getActiveTabName = (state) => {\n  if (state && state.children && state.children.length > 0) {\n    let tabBar = state.children[0];\n    let tabIndex =  tabBar.index;\n    return tabBar.children[tabIndex].name;\n  }\n  return undefined;\n};\nlet getTabTreeIndex = (state) => {\n  if (state && state.children && state.children.length > 0) {\n    let tabBar = state.children[0];\n    let tabIndex =  tabBar.index;\n    return tabBar.children[tabIndex].index;\n  }\n  return undefined;\n};\nlet getTabRootName = (state) => {\n  if (state && state.children && state.children.length > 0) {\n    let tabBar = state.children[0];\n    let tabIndex =  tabBar.index;\n    let tabContainer = tabBar.children[tabIndex];\n    return tabContainer.children[0].name;\n  }\n  return undefined;\n};\nconst reducerCreate = params=> {\n  const defaultReducer = Reducer(params);\n  return (state, action)=> {\n    // this part makes sure that when a menuIcon is pressed AND you are already in that menu tree,\n    // it goes back to the root of that tree\n    if (action.type === 'jump' && inTabMenu(state)) {\n      let activeTabName = getActiveTabName(state);\n      // We only want to reset if the icon is tapped when we're already in the view\n      if (activeTabName === action.key) {\n        // if we're already at root, do not do anything.\n        if (getTabTreeIndex(state) === 0) {\n          return state;\n        }\n        // snap to root.\n        let rootName = getTabRootName(state);\n        if (rootName) {\n          console.log(\"ACTION\", {key:rootName, type:'reset'});\n          return defaultReducer(state, {key:rootName, type:'reset'});\n        }\n      }\n    }\n    console.log(\"ACTION\", action);\n    return defaultReducer(state, action);\n  }\n};\n```\nYou'll have to read through your state object to see how you have to setup your util methods.\nMy setup is:\njs\n return <Router createReducer={reducerCreate} store={store} >\n      <Scene key=\"Root\" hideNavBar={false} {...navBarStyle}>\n        <Scene key=\"loginSplash\"        component={LoginSplash}        hideNavBar={true}  type=\"reset\" />\n        <Scene key=\"login\"              component={Login}              hideNavBar={true}  />\n        <Scene key=\"register\"           component={Register}           hideNavBar={false} title=\"Register\" {...navBarStyle} />\n        <Scene key=\"registerConclusion\" component={RegisterConclusion} hideNavBar={false} title=\"Registration Almost Finished\" type=\"reset\" {...navBarStyle} />\n        <Scene key=\"tabBar\" tabs={true} hideNavBar={true} tabBarStyle={{backgroundColor:colors.menuBackground.h}} type=\"reset\">\n          <Scene key=\"overview\" title=\"Overview\" icon={TabIcon} iconString=\"ios-color-filter-outline\" {...navBarStyle}>\n          <Scene key=\"1\" component={1} />\n          <Scene key=\"2\"  component={2}/>\n          <Scene key=\"3\"  component={3}/>\n          <Scene key=\"4\"  component={4}/>\n          <Scene key=\"5\"  component={5}/>\n          </Scene>\n          <Scene key=\"settings\" title=\"Settings\" icon={TabIcon} iconString=\"ios-gear-outline\" {...navBarStyle} >\n            <Scene key=\"Settings\" component={SettingsOverview} title=\"Settings\"/>\n          </Scene>\n        </Scene>\n      </Scene>\n    </Router>;\nBasic idea is to do the following in the reducer:\n- check if you're in the tab bar section of your app\n- jump action type is used in the switching tabs. I never use jump for any other reason, if you do then you have to change the detection of 'switching tabs'\n- check if you're already in the tab thats being pressed\n- check if you're already on the root of the tab\n- detect the root of the tab, then action.type reset to it.\nRegards\n. Mostly don't specifically cared :)\n\nOn 08 Apr 2016, at 16:29, Elyx0 notifications@github.com wrote:\n( @AlexDM0 Just curious about let over const for the functions declaration)\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly or view it on GitHub\n. Could we also do insert this in the renderBackButton to fix #460 ? I wanted to make a pull myself but if you're doing it anyway might as well add the selected to the renderBackButton here :)\n. Yes. Granted the methods need to be adapted but we'd have what we'd need I think.\n. Simply define your own icon definition:\n\njs\nclass TabIcon extends Component {\n  render(){\n    return (\n    <View style={[styles.centered]} >\n      <Icon name={this.props.iconString} size={30} color={this.props.selected ?  colors.menuTextSelected : colors.menuText} />\n      <Text style={[styles.menuItem, {color:this.props.selected ?  colors.menuTextSelected : colors.menuText}]}>{this.props.title}</Text>\n    </View>\n    );\n  }\n}\nwith:\njs\n<Scene key=\"tabBar\" tabs={true} type=\"reset\">\n            <Scene key=\"overview\" title=\"Overview\" icon={TabIcon} iconString=\"ios-color-filter-outline\" >\n. Where is this documented?. I'll try it once I have time. Our internal deadlines are quite pressing at the moment so I worked around it by using my own navbar component in this view. \nRegards\n\nOn 28 Nov 2016, at 20:03, Saro Vindigni notifications@github.com wrote:\nCan you try this fix? #1386\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub, or mute the thread.\n. Are there any plans to refractor the usage of the navbar? I'd rather have a navbar object passed to the scene so the scene is fully responsible for the content and style of the navbar instead of the awkward separation between the router/scene definition and the scene itself. Dynamic titles, a bit more complicated buttons etc are all annoying to define outside of the scene. They can depend on an internal state or processing of the props which is done in the scene. \n\nRegards\n\nOn 28 Nov 2016, at 20:31, Saro Vindigni notifications@github.com wrote:\nno problem @AlexDM0\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n. I have a similar issue.\n\nScreenA -> ScreenB -> ScreenC -> ScreenD\nI'd like a normal transition between ScreenC and ScreenD, then back from ScreenD should be ScreenA.\nWhat is the best way to do this? I'd need to pop ScreenB and ScreenC when the transition to D is completed?\n. I solved this by changing the reducer you pass to Router.createReducer\n```js\nexport const reducerCreate = (params) => {\n  const defaultReducer = Reducer(params, {});\n  return (state, action)=>{\n    if (action && action.type == \"REACT_NATIVE_ROUTER_FLUX_PUSH\") {\n      if (action.params && action.params.__popBeforeAddCount) {\n        let newState = {...state};\n        for (let i = 0; i < action.params.__popBeforeAddCount; i++) {\n          newState.routes.pop();\n          newState.index -= 1;\n        }\n        return defaultReducer(newState, action);\n      }\n    }\n    return defaultReducer(state, action);\n  }\n};\n```\nI added a custom field to the action params __popBeforeAddCount which I filter for in the reducer (yes, that IS a little ugly ;)). If this is the case I pop a few items off the routing stack before continuing. Similarly, when you'd want to remove screenA from the stack, you can change the stack in the reducer you provide.\nHope it helps!\nedit:\nusage:\njs\n<Router createReducer={reducerCreate} ... >. I solved this by overloading the popTo in the reducer that you give to the Router.createReducer.\n```js\nexport const reducerCreate = (params) => {\n  const defaultReducer = Reducer(params, {});\n  return (state, action)=>{\n    if (action && action.type == \"REACT_NATIVE_ROUTER_FLUX_POP_TO\") {\n      // check if we can see the key in the list of items, if not, do a back.\n      let popCount = 0;\n      let success = false;\n      // search throught all routes in the state, starting from the top, for one that matches the route name\n      for (let i = state.index; i >= 0; i--) {\n        if (state.routes[i].routeName == action.routeName) {\n          // we found it!\n          success = true\n          break;\n        }\n        // how many pops do we need for this operation?\n        popCount++;\n      }\n      if (success) {\n        // if our routing stack is [1, 2, 3, 4, 5] and we're in 5 and want to go back to 1, we remove [2,3,4] so [1,5] are left, then do a nav/back for animated transition\n        // cut out the intermediates ([2,3,4])\n        if (popCount == 1) {\n          return defaultReducer(state, {type: \"Navigation/BACK\"});\n        }\n        else if (popCount > 1) {\n          let newState = {...state};\n          newState.routes = newState.routes.slice(0, newState.routes.length - popCount);\n          // push the current scene back on top of the stack.\n          newState.routes.push(state.routes[state.routes.length-1])\n      // have the index point to a the correct scene.\n      newState.index -= (popCount - 1);\n\n      // go back one step to go from 5 to 1\n      return defaultReducer(newState, {type: \"Navigation/BACK\"});\n    }\n    else {\n      // popCount = 0, we're already there?\n      LOGw.info(\"navigation.ts: Tried PopTo with name\", action.routeName, \" while already on that route. Popping once.\")\n      return defaultReducer(state, {type: \"Navigation/BACK\"});\n    }\n  }\n  else {\n    // just go back one if we can't find the target?\n    LOGw.info(\"navigation.ts: Tried PopTo with name\", action.routeName, \" but could not find target route. Popping once.\")\n    return defaultReducer(state, {type: \"Navigation/BACK\"});\n  }\n}\n\nreturn defaultReducer(state, action);\n\n}\n};\n```\nedit:\nusage:\njs\n<Router createReducer={reducerCreate} ... >\nHope it helps!. Hi,\nI've had issues with Android (using a Drawer with a nested scene) and iOS using a tabBar with nested scenes together with normal scenes (router here:https://github.com/crownstone/CrownstoneApp/blob/master/js/router/RouterIOS.js#L35)\nI solved this by going into nested sets to find the key: \nhttps://github.com/crownstone/CrownstoneApp/blob/master/js/router/store/reducers/navigation.ts\nBasically, I reconstruct the state to have only the scene I'm at and the target scene, then use a normal back action to have the animation.\nI think it's a little shortsighted to only compare the routename and not account for nesting... If you have a router like:\njs\n<Router>\n  <Scene key=\"1\" />\n  <Drawer key=\"drawer\">\n    <Scene key=\"2\" initial={true} />\n  </Drawer>\n</Router>\nThen do Actions.1(), to go from 2 -> 1, then Actions.popTo(2) and it fails.\nCheers. I'm really looking forward to an integration with the new versions since the following bug is very visible in our app: https://github.com/react-navigation/react-navigation/issues/4185\nIt's fixed in 2.5.5 :). There's quite the annoying bug in 2.x of RNavigation, did anyone find a workaround?\nhttps://github.com/react-navigation/react-navigation/issues/4884\nUnfortunately, I'm still stuck in the beta's because of it.... Because the tabBar disappears when I do that. I've tested it with 3.2.5. The state that is provided to the method is that of the tabBar.\n. In my case I need it for the tab bar. The behaviour is based off the apple app store. Tapping the tab on which you already are is back to root of the tab. Is there a cleaner way to implement this? I could put it in the reducer of course but I thought it was a nice addition to the actions.\n. I just worked with the incoming state in the update method.. I'm not sure what would change for stacks, though the assert I copied over from the jump action currently limits it to tabs. I can remove that? What would the expected behaviour be for the stacks? As long as there is a shown back button this action makes sense, though thats not always the case.\n. The main issue I had here was that if I used reset, the tabBar would only show one of my tabs. For stacks I assume the reset Action would work?\n. Wouldnt that mean I'd have to hardcode it for each of my tabs? I have not named my tabs as in the example, seemed arbitrary? Is the naming convention important here?\nThis is my router code with a small set of views in there.\njs\n return <Router createReducer={reducerCreate} store={store}>\n      <Scene key=\"tabBar\" tabs={true} tabBarStyle={{backgroundColor:colors.menuBackground.h}}>\n        <Scene key=\"overview\" title=\"Overview\" icon={TabIcon} iconString=\"ios-color-filter-outline\" navigationBarStyle={{backgroundColor:colors.menuBackground.h}} titleStyle={{color:'white'}} renderBackButton={backButtonFunction}>\n          <Scene key=\"groupOverview\" component={GroupOverview} title=\"Group Overview\" />\n          <Scene key=\"roomOverview\"  component={RoomOverview} onRight={onRightFunctionEdit} rightTitle=\"Edit\" rightButtonTextStyle={{color:'white'}} />\n          <Scene key=\"roomEdit\"      component={RoomEdit} title=\"Edit Room\" />\n          <Scene key=\"deviceEdit\"    component={DeviceEdit} title=\"Edit Device\" />\n        </Scene>\n        <Scene key=\"settings\" title=\"Settings\" icon={TabIcon} iconString=\"ios-gear-outline\" navigationBarStyle={{backgroundColor:colors.menuBackground.h}} titleStyle={{color:'white'}} renderBackButton={backButtonFunction}>\n          <Scene key=\"Settings\" component={SettingsOverview} title=\"Settings\"/>\n        </Scene>\n      </Scene>\n    </Router>;\nWhenever I refer to specific scenes inside the tabs, the tabbar disappears.\nIf I have to hardcode the action key in the reducer for each of my tabs it seems a bit more sloppy than using the index of the state?\n. It works dynamically if I change the reducer like this:\njs\nconst reducerCreate = params=> {\n  const defaultReducer = Reducer(params);\n  return (state, action)=>{\n    if (state) {\n      let currentTabIndex = state.index;\n      if (state.children[currentTabIndex].name === action.key && action.type === 'jump') {\n        return defaultReducer(state, {key: state.children[currentTabIndex].children[0].name, type:'reset'})\n      }\n    }\n    return defaultReducer(state, action);\n  }\n};\nI guess thats less code than my proposal :)\nEDIT: fixed small bug\n. I'm not sure how that would look for a general case.. I have no type reset on the child, its being forced into the reducer at the moment. It could be the default behaviour of the tabs since it's also done that way in iOS while Android doesnt use tabs..\n. ",
    "sibelius": "@aksonov I'm willing to help on triage of issues and review of PR\n. I've just removed this from componentDidMount, because I think it is not a good ideia anyway\nthanks\n. Hey @rgovindji could u share an example repo with ur solution please?\n. @r0b1n @joonhocho @ugputu18 could u guys share an example repo please?\n. @rturk I think this solution does not integrate seamless with this package, I think @r0b1n solution is the best one based on react-router-relay\n. great job @r0b1n it works great.\n@aksonov I think @r0b1n should submit a PR to add this info to the docs and this example as well, as Relay is getting more main stream now\n. This is not a complete app, but it is a good start point\nhttps://github.com/sibeliusseraphini/react-native-redux\nIt has a login screen, and it uses redux, redux-saga, redux-storage and this package to manage the routes\nIt uses the 2.x api, but I will update it when I have time\n. I will make my changes from 0.26-wip branches, closing this for now\n. You can use this https://github.com/exponentjs/react-native-action-sheet\n. @aksonov ActionSheets should not be a responsability of this package\n. @wootwoot1234 please submit a PR to update the readme, please also add a link to react-native-action-sheet there.\nI think we can close this issue cc @rturk \n. @aksonov what is the progress on this?\ncan u use FloatFromBottom on Scene of RNRF?\n. @mbecker did u find a solution?\n. How can I have a transparent background on my Modal?\nShould I use Modal from react-native ?\n. @cridenour position absolute shouldn't be the default?\nwhat about transparent background, is it possible without using <Modal> from react-native?\n. I'm using Modal component from react-native core. @tinygipxy could u post a gist or a repo with the code that u used?\ncan i define a function inside my component to handle this onPress event?\n. @aksonov what is the equivalent of configureScene on the newest version?\n. @rclai u can try to use https://github.com/aksonov/react-native-router-flux/blob/master/docs/API_CONFIGURATION.md#animation\n. @cridenour I think RNRF should enable us to track current focused view without need of redux,\n. any workaround?\n. looks good, can we merge it?\n. u could try this one as well: https://github.com/react-native-community/react-native-tab-view\nMaybe TabBar should be customizable\n. @aksonov I think u can close this\n. I think this is more suitable for stack overflow\n. @charpeni u can also close this\n. arrow functions looks better than .bind()\nthere are a lot of people using class properties on react native projects, we can easily change this if something goes wrong and it did not reach stage 3\n. can't we make backgroundImageStyle as a prop to be customizable?\n. every style should be customizable\n. @charpeni u can close this\n. why not just use Actions global?\n. looks good\n. jest can handle both es6 and es5\nI can this question is more suitable for stackoverflow\n. @nikitph could u explain more on this?\n. this is a problem with ur react native version, please upgrade it or follow this issue https://github.com/facebook/react-native/issues/8108\n. ",
    "daisydon": "Do we currently support image as navigation title? If not, I am thinking to contribute on that enhancement.. ",
    "mcabs3": "@aksonov I don't know if I need to be a contributor, but I would love to try and help people with documentation issues and/or usability issues. Let me know what I can do and if I need a role. I will continue to try to get docs up to date as well and eventually can help with some PRs.\nCheers. @aksonov can you add me as a collaborator please?. It looks like it is coming from the drawer i'm using, false alarm! and I apologize for the unnecessary ticket!\n. I have a PR for documentation for these components here. Are you saying that you are using back={false} prop in a scene and it still shows the back button? We need a little more context to assist you with your issue.. From the looks of your second slow animation, it looks like it could be rendering the \"actual\" navigation first, and then laying your navBar overtop, you can see the slight shift of the hamburger icon which would suggest this.\nso I think it is actually going back a screen, rendering that navBar internally (built from RNRF) and then laying your navBar on top after.. My hope is to spend more time digging into the project so I can continue to add more documentation and snippets to help other developers get started. Let me know how I can be of further assistance.. I think you need to remove a pair of {}\ndrawerImage={require('path/to/image.png')}. If you want it to reset overtime, apply the type={ActionConst.RESET} to your Scene if you are trying to do it per situation, then you can do Actions.reset('SCENE_NAME'); like @taylorgoolsby stated.\nCheers. For #2, the attribute selected changed to focused. I looked into your first issue, you should be able to use tabBarStyle to do your top border, maybe try adjusting padding or margin?\nI will update the docs for these props.. @zacharygcook what type of auth are you trying to accomplish. This library is a router and isn't really supposed to handle authentication logic. In my production apps, I have a root component, like a loading screen or splash screen that will wait for my app to load and can look to see if a user is in memory, and then if yay or nay, will call Actions.whatever() to direct accordingly. Typically I have been following the idea of having a <Scene key='authenticated'> that has anything that requires a user authenticated in there.\nI'll do my best to help you, however I think I will need more context.. Since you are trying to accomplish some sort of authentication, you are going to have to be able to pass the \"user\" context between screens, because of that I would assume you would be implementing some sort of design pattern with redux or mobx.\nIf my assumptions are correct, what I would do is create a routing action that accepts a destination route, and if there is no user in the store, handle accordingly.\nFor example dispatch(authenticate('dashboard', 'login')) and that could check the user, and take you to dashboard, or login if there is not a user in the store.\nThe issue with binding the auth logic to the routes in JSX is that you are relying on the router to pass things like user context and other data for you between scenes, and currently it doesn't do that. It would be to your benefit to have that logic outside the router, incase you ever needed to switch routers or adjust logic.\nSorry, I know that doesn't answer your question entirely. I just want to express my opinion, and hopefully show you an alternative route that would cause less headache.. Can you provide some more detail about your Router?. @GuillaumeMunsch most of the components you are mentioning are just <Scene> components with the different boolean attributes already applied for you. For Example <Tabs> is the same as <Scene tab={true} />. <Stack> is a grouping <Scene> that doesn't have a component prop, as it contains children <Scene>s.. Sorry about that, conflicts resolved.. I can most certainly give it a go! Is it in master? Maybe we refactor the example project to be in a parent examples folder? I can make one for redux as well.. The link you provided is a 404 error. set initial on the tabbar and it will load the tabbar and by default the first scene in the tabbar. Or move tabbar to the first scene in the nested Stack and you won't need the initial attribute.. @SoldierCorp currently I don't believe there is way to render the tab \"new\" every time you go to the tab, if you are looking for just when you initially go to a tab for the first time, then @Nautal has the right idea of using the lazy property on the tabs you want to lazy load.. Referring to the docs\nTry Actions.channelView({ title: this.props.channel.title, channel: this.props.channel }). @luco if signUp1 and signUp2 aren't related to work in a Stack pattern, then I would ask why you would have them in a group Scene?\nI think a simple fix would be to pull those two out of the group. I think what is happening is it is behind the scenes loading signUp1 in the stack because it is technically the initial route for your signup Scene.\nBecause of this, your route has to go through your signup Scene to get to your signUp2 Scene nested within.. @SoldierCorp PR #2364 should address this issue. @pgonzalez-santiago is this something you are going to update? Otherwise I can close this PR.. @pgonzalez-santiago can you pull master and make sure everything is good to go? I will then review it and get this in for you.. Thanks @pgonzalez-santiago . @donnes I ran into this bug too in the example project, try wrapping your scenes that are children of the Drawer in a Scene, so that the Drawer has one direct child Scene and then that child has your components and list Scenes. @asokol try looking at the Example project, I think I have what I fixed in there. Can you provide your current router/scenes as well as the methods you are running to navigate?. @seratonik you could also try creating an Icon component that will do what you are asking. Just trying to toss ideas around for you to find a solution.. @seratonik although this fixed resetting nested scenes, however this breaks resetting from a nested scene to another scene.. @RedManBrasil it is required that you have only a single Scene as a child to Router, so your first lines of code in the beginning of this issue is correct. The two back buttons are appearing because both the root scene and the nested teams scene are controlling their navigators. I would try adding a hideNavBar which will hide a navigator from its scene.. This project uses the DrawerNavigator from react-navigation. It looks like they don't have anything in their docs to support the behavior you are looking for.. I think its because it isn't removing the Scene from the stack when you do Actions.Photos, it is pushing it onto the stack, and because of that, isn't calling componentWillUnmount because it technically isn't unmounting because it is still in the stack.. @AlmogRnD just for clarification, popTo is used to pop back x number of times to a scene in the stack. popAndPush doesn't seem to be implemented in the v4. I will look to add this feature back.\nIn the meantime, what I would do is look at the componentDidUpdate lifecycle method that has a check to see if your user is logged in, and then carries out the action you desire like navigation. componentWillUnmount will fire when the Scene is popped from the stack.\nIn the meantime, please consider adding the function you desire to a PR. I try to stay on top of the issues and comments here.. @pekka I would have all of the screens load, but some sort abstraction that will show what routes are available to use versus what aren't. If you are using a store like Redux or Mobx then that would be a good place to store that.. did you just try passing them Actions.pop({foo: 'bar'}). @Pylipala looks like your PR failed eslint formatting. Please correct so that the CircleCI tests pass. @aksonov I like this change though, seems to work from my tests.. The change has already been merged into master due to time constraints.. @althurzard for your navigationBarTitleImage are you passing an object? or an <Image /> component? navigationBarTitleImage requires you pass an Image RN component.\nLet me know if that changes your outcome.. @althurzard touche! I will take a look. @aksonov I updated the docs from the notes from previous issues, and I also added a separate commit for the replace issue for Tab components since the other PR wasn't passing the CircleCI tests.. @piloulac please look at tabBarPosition in the docs. To keep native feel, android defaults to top and iOS defaults to bottom.. The back button will show only when you have a Scene to navigate back to. this is based on react-navigation. If you are looking to always have a back button to perform some sort of action, you can try the onLeft features of the Scene or indeed implement your own custom navBar.. Sure, if you need further help, let me know.. try renderLeftButton. @thebergamo i'm sorry to hear that. if you have more questions i'll do my best to help.. @quanpotato can you give more information on how you are navigation from login to employeeList?. I think if you do this, you would force people using this library to implement Redux/Mobx so that the loading state could be controlled globally. I personally think a better approach would be to create some <Screen /> component with a isLoading prop that can be adjusted with local state or a global state management system.. Thank you for taking the time to make a PR. We just merged another commit to resolve this.. Can you try reinstalling the package? I just tried it in one of my projects and I see the images folder just fine?. I would look at maybe implementing a handler to accomplish this for you in your top level component.\nhttps://facebook.github.io/react-native/docs/backhandler.html. PR is always welcome, just make sure the Example application will run in your PR. Thanks. This has been fixed with Pull Request 2405. Have you tried using just a regular Scene instead of TabScene?. Do you have an example of what would cause this crash?. @wsxyeah so is this change irrelevant now?\n. @James2516 making sure I understand you correctly. Are you asking how you could reload the previous routing \"history\" when the app initiates?. @pedrogyn you should not make the drawer your outer most component, instead make a root scene as normal and have a login process, once completed you can navigate to the drawer scene and be \"authenticated\". Which ScrollableTabView are you using? you own or a third party?. try Actions['key'].call({data: 'hello'). Your easiest solution would be to use redux or mobx and have the function there, and then render a button that connects to the method and then can fire in the onPress of the save button.. Otherwise just spitballing, you could create a PR that encapsulates the button's onPress and try and pass it down to a scene.. Yeah, unfortunately since React components only get their props from their parent or from redux, currently the router (which would be a scenes parent) doesn't pass anything down to the scene that would support what you are asking. So I agree currently the minimal effort would be using a state store like redux.. I have added currentScene to the docs.. Good call, I will update the docs.. You are correct that this property doesn't exist anymore in V4. I will label this as an enhancement to add this feature back. Feel free to make a PR if you have time!. Can you provide a code snippet of what you are doing? that will help us understand what you are doing.. Please fix your lint errors and we can start the review process.. /home/circleci/react-native-router-flux/src/OverlayNavigator.js\n  25:26  error  Trailing spaces not allowed  no-trailing-spaces\n  31:17  error  'routeName' is not defined   no-undef\n  31:35  error  Trailing spaces not allowed  no-trailing-spaces\n  31:35  error  Missing semicolon            semi. the onLeft is a function for then the renderLeftButton is pressed. You need to provide a renderLeftButton component.. What are you navigating to? BookList or books?. Actions[links.route].call() would be what you are looking for. The simplest solution would be to create separate Scenes for your signup route. I do not believe popTo supports the behavior you are suggesting currently. A PR is always welcome!. When the tabs are \"loaded\" they are continuously in the navigation \"state\" so they only mount once and stay mounted. If you are looking for something when you enter or exit a scene, I believe there are some API methods you can attach to your tabs for this purpose.. Can you provide a video or snapshot of what you are experiencing. What TextInput are you selecting on which component, etc. Snippets and videos are very helpful if an issue is hard to document.. I don't see anything in your Navigation Router. what is your application router setup?. this can be done using icon and tabBarLabel component on an individual Tabbed Scene.\njsx\n<Tabs>\n  <Scene\n  tabBarLabel={'Something'}\n  icon={IconComponent}\n  />\n</Tabs>. I think you would need to provide your own custom navBar component. @aksonov sound about right?. By default there are no tab icons provided. just the tabBarLabel. Can you provide more context to your situation?. @mvanroon is correct, your current setup suggests that both of those Scenes are at the same navigational level, you are expecting them to be in a Stack like navigational structure. Only change is that you shouldn't need the back attribute in tripDetails on his response.. onPress={()=>Actions.LoginScreen} needs to be onPress={()=>Actions.LoginScreen()}. you said you tried {ACTIONS.LoginScreen()}, that isn't the same as {() => Actions.LoginScreen()}. What Scene are you at trying to navigate to LoginScreen?. I have updated your description of the problem to better explain your situation, please review it when you have a moment. . Yes, you should be able to pass it as a prop when you perform your action. for example, Actions.login({title: 'Sign up!'}). Docs have been updated, thanks for pointing that out.. Can you show us a code snippet?. please follow JS standards and use !== instead of != as well as !navigationParams.back instead of === false. What is this for?. Please, thanks! it will reduce confusion for novice react native devs.. Yes please. ",
    "VahidBo": "@aksonov I'm using react-native-router-flux in my projects so I like to help as much as i can.. ",
    "onrige": "@aksonov Hey. I am also interested in help if you still need it. I am already done some PRs and try to help people with issues in free time but it would be great if you will add me as a collaborator.. I am also have the same issue. I will try to find the cause but may be someone have any ideas?. @fxhereng I don't understand how does tab switch via my solution can create a new scenes stack :) Could you show me your scenes?\nIn my case it was something like this:\njavascript\n<Scene key=\"root\">\n    <Tabs key=\"tabs\">\n        <Scene key=\"tabs_tab1\" />\n        <Scene key=\"tabs_tab2\" />\n    </Tabs>\n</Scene>\nSo if I will use Actions.tabs_tab2() somewhere - I will navigate to this tab.\nAnyway if you have the problem with stacked navbar may be you will need to try wrap or hideNavBar property.. Interesting. In my case it works good. Could you give an example with such problem? It's probably a bug because I don't understand how scene change functionality can do something like this. o_O. Hey. Just have a look at the API docs. \nhttps://github.com/aksonov/react-native-router-flux/blob/master/docs/API.md#tabs-tabs-or-scene-tabs\nYou are probably looking for activeTintColor and inactiveTintColor properties.. @pedrogyn Hey, could you give me a part of your code? Also you can look at my UPD section - there is a solution for my case (and may be for yours too). Try Actions.popTo('sceneKey') instead (Pops the stack until the)\nhttps://github.com/aksonov/react-native-router-flux/blob/master/docs/API.md#actions. @guarani You are welcome :) Could you give me the link to this docs? I can't find anything in current docs (v4) you talk about, sorry.. Sure, it's ready to merge now :). It's definitely the problem of ListView. At least it was so in my case. Try to add removeClippedSubviews={false}. Please have a look at API docs. You're trying to create modals in a wrong way.\nhttps://github.com/aksonov/react-native-router-flux/blob/master/docs/API.md#modals-modal-or-scene-modal. @pgonzalez-santiago This feature was able about two weeks ago by my PR but it's broke drawer in some cases it seems.\nSo you can have a look at commit: https://github.com/aksonov/react-native-router-flux/commit/29090461469d4eb907072c63e9881f99205fab73. @pgonzalez-santiago Fine, I will try to reproduce this bug in commit and resolve it. But you must admit that there is no accepted PRs since @aksonov went on vacation (till 8 october).. @pgonzalez-santiago @ihor @thiemo--bleeken @alexhoo now you can monitor any updates on this here #2492.. It happens because you don't specify key for some Scene.. You also can create you own navbar with input and show it \"on the fly\" by using Actions.refresh({ navBar: Your searchbar here }) when you need this.. Fine. So please have a look at the last update. There was a problem with hiding Drawer because of hideNavBar property (child inheritance). It was fixed by just removing this property from Drawer child (Scene component in case of Example project) and now all works good. I am also added an example to TabView component with toggle NavBar functionality.\nUPD: Hmm, nope, there is still some problems with hiding NavBar in some cases (for example with tabs).. You can try to do it on only one Scene with your own custom tab bar (tabBarComponent property). . Hey. Could you remove package-lock from this PR, please?. Sure, but we use yarn (also for this). You can add package-lock to gitignore in commit if you want :). Could you give more info about this? I also use this versions on both and I don't have such problems with shouldComponentUpdate().. Hey. As for me definitely yes. For my not very small application there was a serious boost for performance after upgrading. It seems because of React Navigation of cause, it is more productive compared to ExperimentalNavigation. Also v4 has some interesting and helpful features.. It happens because any new parent will create his own NavBar. So all you need is just add hideNavBar.. Hey. You can just take a look at Example folder.. Please have a look at this one: https://github.com/aksonov/react-native-router-flux/blob/master/Example/Example.js#L48\nAll you need is just dispatch actions you're interested in. Definitely, something like this \ud83d\udc4d . What kind of problems do you have? It's not clear only after reading post title and looking to your code.. Your case is not the default so you can provide your own tab icon press logic by tabBarIconPress property. Have a look at this one for example: https://github.com/aksonov/react-native-router-flux/blob/master/src/navigationStore.js#L227. I can't answer on your question, sorry. I am not sure that this is possible in React Navigation.. What about Actions.reset? \nhttps://github.com/aksonov/react-native-router-flux/blob/master/docs/API.md#actions. It happens because you created scenes wrong. You should try something like this:\njavascript\n<Router>\n  <Modal>\n    <Stack>\n      // here is your scenes with initial\n    </Stack>\n    // here is your modals\n  </Modal>\n</Router>. Try to add it like this: renderRightButton={() => <Setting style={styles.marginRight} />}. You can just open inspector and look at current styles for NavBar. All you need is to set elevation property to 0 in NavBar styles.. It happens because the fourth tab doesn't have his own NavBar definitely. If my memory serves me the same was in v3.. Please have a look at lazy property in docs: https://github.com/aksonov/react-native-router-flux/blob/master/docs/API.md#tabs-tabs-or-scene-tabs. Right, thx. But first one was a typo by the way.. @davojan It seems like docs where changed since I did this PR. So I really need this functionality (and may be not only me in future), may be you have some suggestions about this? This add is doing the job I want for now.. You're right. In my case it's won't work because I'm using leftButton. I think I'll update this PR with hide left functionality instead of back in the evening. Thanks.. ",
    "daviscabral": "If needed - I would like to help too - mainly keeping v3 and helping people around it - not sure if is something that you still wish - but since I see a lot of folks still using it, at least maintenance for a few basic issues would be nice while a major upgrade can't be done in most of the projects. Thoughts?. @aksonov sure - no worries. Just opened #2532 with a few changes related to react 16.0.0.. Thank you and have a great time!. That's not related with rnrf. \nUse just react-native to do it. https://facebook.github.io/react-native/docs/statusbar.html.. Corporate sabotage? It sounds more like the regular \"copy and paste without knowing what I am doing\" as usual stuff instead of locking versions in the right way. ;-). Alright - show me both things - where my joke shows bad attitude and where is our sabotage here. Thank you. . I am locking this issue to focus on bugs and issues in the v4. \nv3 and v4-beta are not supported anymore - in case you found a bug or would like to improve something, PRs are welcome, but I recommend to update to the most recent version to make use of last version of react, react-navigation and react-native.. @ddolheguy Thank you. It worked for me. . @jobiwankanobi could you give more context? this issue is 8 months+ old - probably in the version you are trying it might have changed.. I was getting the same issue here and I found out the answer in other issue: https://github.com/aksonov/react-native-router-flux/issues/1509#issuecomment-269825629.\n\nYou need to override the \"renderBackButton\" on the Scene with a function which returns the back button. NOTE: Depending on your situation you might need to override the \"renderLeftButton\" instead of the back button with the same function.. Notice: this issue has been closed because it has been inactive for more than 30 days.\nYou may reopen this issue if it has been closed in error.. Look for duplicate packages inside your node_modules/ and nested node_modules inside packages there.\n\nI had problems with it - when developing modules locally - having to remove packages like react, react-native and react-navigation.. To avoid duplicating my comment: https://github.com/aksonov/react-native-router-flux/issues/960#issuecomment-424953838. \ud83d\ude1d . Notice: this issue has been closed because it has been inactive for more than 30 days.\nYou may reopen this issue if it has been closed in error.. Thank you for reporting - but beta versions are not supported. \nYou can use resolutions in your package.json to lock the opencollective version to one that might work in your environment.. <Drawer /> is the same as <Scene drawer />. When it opens/closes is the onEnter/onExit event - but you can also use only react-navigation for that with NavigationEvents.\nhttps://github.com/aksonov/react-native-router-flux/blame/master/docs/API.md#L67\nEDIT: This event is available for Drawer only react-native-router-flux@^4.0.2 - previous versions does not support it. \nEDIT2: Check out the examples folder - I believe there are something there showing it.. If you think you found a bug - please open a new issue with all the information asked in the template. Beta versions are not supported - I recommend you to download the most recent release to test.. Please open a new issue with the details of your error and sample code to help someone to jump on this.. Typings merged in #2448.. It has been a while since this PR - but I would like to check about the state of this since we are moving into something similar with the migration to react-navigation@2.. Hey guys, could you fork the project and make a broken version of the Example app with the same error? That would help me a lot to check it out with the short free time that I have to dedicate to this project lately. Thank you.. Also, not sure if is the same error - so, please, open a new issue, and be sure to put all the possible information to make easier to reproduce this error. Thank you again.. @jatsrt I've noticed that you have added an extra commit in your fork - is that complementing the TS support? Do you mind creating a new PR for it? Thank you.. @aksonov I can help you testing changes on android - just tag me in the PR and give me instructions and I can check it there. :+1: . Sorry - I've been idle in the last few days but I am getting back now to check this. I'll get an update as soon as I get my simulator up and running here.. Issue is still present on master - going to investigate now to see if I am able to solve it.\n\n. I am a bit busy lately and couldn't finish the PR that I've started. I'll check if later today I'll spare some time for it. Thank you.. On it - should have a PR in a few hours. I am in a company transition, things are just crazy lately.. Sorry - took longer than I thought cause I was trying to fix the Example project that was not running - so I couldn't actually test and verify it properly.. Thank you. Glad to hear that. . > Fixed on #3256.\n\n\n\nThis was possible because of react-navigation changes,  when headerLayoutPreset support was added. Docs were also updated to reflect it. \nExample.js file has an example of how to make it work, below the line where it happens:\n<Stack key=\"customNavBar\" hideTabBar headerLayoutPreset='center'>. v3 and 4.0.0-beta are not supported. Drawer support for onEnter and onExit were just added on 4.0.2. . Are these nested same Scenes? Cause react 16 talks about something that might be related to this (out of order calls).\n\nComponent Lifecycle\nSince React prioritizes the rendering, you are no longer guaranteed componentWillUpdate and shouldComponentUpdate of different components will fire in a predictable order. The React team is working to provide an upgrade path for apps that would break from this behavior.\nSource: https://edgecoders.com/react-16-features-and-fiber-explanation-e779544bb1b7\n. I see. Are you using redux? I am asking to see if Is there any way to track the page actions.. @aksonov could you please bump the version too?. Thanks.. @ujwal-setlur #2541 address it - and also adds some performance improvements.. @michaelstokes do you have more information about your issue? could you open a new issue with all the data from the template filled? tag me there please, so I can help you there.. I am not able to reproduce it here with the Example project. It might be related to other package or setting in your project.\n\n\nYou can check the code I used in the Example folder here: https://github.com/daviscabral/react-native-router-flux/tree/issue-2533-sample/Example. In the version 4 you don't actually need to do it. You can actually just call actions Actions.drawerOpen or Actions.drawerClose.. Hey guys, sorry - I was a bit busy lately. You should import those components from RNRF, so you can use them the way @bkniya used. \nIt seems you cannot open your drawer, cause it is not being loaded in the right way. Instead, use the Drawer one.\nBy the way, are you using v3 or v4? This way that you are using, makes me think that you are mixing v3 and v4.. Can you provide these informations below? \nVersion\nTell us which versions you are using: \n\nreact-native-router-flux v?.?,?\nreact-native v0.?.?\n\nAlso more data about the error.. Please, try to wrap your full code for better reading. \nBut from what I am getting - this might be an issue with react-navigation (exiting or not exiting from initial screen when on Android). Is that the issue?. @aksonov any objection in going forward with this kind of update? That\u2019s the maintenance of v3 that I would like to keep - that I told you about in #69.. @ujwal-setlur good catch! I was under the impression I had committed those changes. I'll get those committed and pushed now.. @schlaegerz you are totally right. I know what happened - I've have in my app with a custom reducer and router - what made I miss it. My bad - I'll work in a proper fix. Probably worth to patch http://github.com/aksonov/react-native-experimental-navigation instead of moving over a totally different project.. Working to fix this right now :+1: . I am with a new local branch working in a way to bring useNativeDriver to the animations - but it seems that is really broken. Not sure if worth the trouble. I'll keep cleaning up stuff to react 16.0.0.. @schlaegerz glad to know. I changed my mind about using the MS fork - it seems they made a lot of changes there to use it with Skype. Not sure if the whole work to make it functional with v3 makes sense. An upgrade to v4 sounds more sensate.. @ujwal-setlur try to remove your node_modules and clean your npm cache. I got the same issue here, and since we haven't bumped the version yet - it was still getting the same old package. Let me know if that does not work.. Good catch! My bad! :+1: . I am not home now - but should be there soon to update it \ud83d\udc4d\ud83c\udffb. Did some cleanup in the commits. \n@aksonov Any chance of this getting merged? . Yes - sorry - forgot to update it inside the Example folder.. @aksonov Done \ud83d\udc4d\ud83c\udffb. Thank you.. @ujwal-setlur it's there already - 3.42.. Could you show some code from your router? Or put it in the Example folder to reproduce it?. @bsiddiqui why the drawer parent is a Scene and not a Stack? Do you have more than one drawer?. Sorry - my bad.. Could you check if inside the DrawerContainer is there any reference to the Drawer component?. Which actions do you trigger over there? Do you have any calls in the willMount/unMount lifecycle methods?. Thanks for the update @wluxion. \n@bsiddiqui can you confirm that this fixes your issue?\njavascript\n      <Drawer hideNavBar\n              key='drawer'\n              drawerIcon={() => <MenuButton />}\n              contentComponent={DrawerContainer} >\n      </Drawer>. What about the <Overlay />?. Do you have any BackHandler.addEventListener in your app that might be affecting it?. Are you using redux-saga? You will probably yield call/put or dispatch this action to have it working.. Do you mind showing me some code of how are you calling it inside your saga?. Just found this today: https://github.com/react-navigation/react-navigation-transitioner \nIt might help with something simpler to implement if someone decide to take a stab on it.. It has changed from v3 - but I don't think it is going to change so soon. \nSince it seems this issues seems to be solved, I am closing it - feel free to reopen in case it needs further discussion.. @aksonov you are a machine today \ud83e\udd23 . v3 and beta are not supported.. Closing this issue as it seems the fix provided by @timqha has worked for everyone. . Hey guys - any update with the Redux testing here? Can I close this issue? Thank you.. I believe we can consider this done. Please open a new issue referring this one in case something new pops up.. @Donhv That might not be related to react-native-router-flux, but to react-native-drawer-layout-polyfill - the DrawerView component used in react-navigation.\nIt seems the DrawerView has a drawerBackgroundColor that you might try use to set the transparency. I haven't tried, but let me know if that does not work.. I use <StatusBar barStyle=\"light-content\"/> out and before the routes - and works like a charm. Could you write a sample of this problem in the Example app and point the link here?. @AgNm Also, besides what @divye11 has said, pay attention to loggers (the use of console.log) causes this kind of behavior. Try to enable the debug mode on Chrome, and see if it make the scene change faster.. I noticed that depending on what modules you are using - they might have enabled some kind of debugging during dev mode - that if you are not with the chrome inspector opened will for sure cause your app to be laggy - my experience on osx and xcode. Fixed getting rid of console (using a babel transform plugin), opening xcode or keeping the chrome opened all the time.\nCould you push a sample app or make the Example app to behave like yours? \nAlso, could you show which other packages are you using? . Same here - Example is broken right now - can't build it. Working on it for other issue - but no success so far.. Great news guys - I just fixed this issue and I am pushing a PR right now. \n/cc @aksonov . @MaxInMoon do you mind covering this change with tests or with a sample code in the Example app? I see the issue but I can't really confirm it is related to a bug or to a misconfiguration. . PR for better documentation to avoid this confusion for other users is welcome. But yeah, looking at the code I saw that if you define backToInitial - it's not possible to define tabBarOnPress - and keeping both handlers might be even worst (and harder to debug). I believe a warning would be fine - telling the user that the tabBarOnPress defined will be overwritten due the backToInitial flag defined.. I am pushing a PR with this change - I believe it does not hurt. :-). @matteocollina have you looked at the state object as pointed above? you can get the idea of the stack size by that.\nThis is a sample that I got by running the tests from the project:\njson\n{\n  \"key\": \"StackRouterRoot\",\n  \"isTransitioning\": false,\n  \"index\": 0,\n  \"routes\": [\n    {\n      \"key\": \"id-1537858201424-3\",\n      \"isTransitioning\": true,\n      \"index\": 1,\n      \"routes\": [\n        {\n          \"params\": {\n            \"init\": true,\n            \"param\": \"1\"\n          },\n          \"routeName\": \"a\",\n          \"key\": \"id-1537858201424-2\"\n        },\n        {\n          \"params\": {\n            \"error\": \"\",\n            \"param\": \"2\",\n            \"init\": true,\n            \"data\": \"abcde\",\n            \"routeName\": \"c\"\n          },\n          \"routeName\": \"c\",\n          \"key\": \"id-1537858201424-4\"\n        }\n      ],\n      \"params\": {\n        \"init\": true\n      },\n      \"routeName\": \"b\"\n    }\n  ]\n}. @isamuhiro could you find a solution for this? . Great - thank you for taking the time to write about it here.. That's not an error - it is a warning. Even a few official packages still make references to isMounted yet. \nBy the way, this is not even used by react-native-router-flux anywhere. I believe that react-navigation is the culprit here.. That's fine. Please provide a pull-request with your solution. . Btw, hide the warning is not a solution. I don't consider a warning a blocker in a release, just a heads-up about possible out of date packages and future unsupported code. . Thank you sir! \ud83d\udc4d\ud83c\udffb\ud83d\udc4a\ud83c\udffb. @baldeweb please try this:\nbash\nwatchman watch-del-all\nyarn cache clean --force\nnpm cache clean --force # optional - in case you also have used npm\nrm -rf node_modules/\nrm yarn.lock\nrm package-lock.json # optional - in case you also have used npm\nrm -rf $TMPDIR/metro-*\nrm -rf $TMPDIR/haste-*\nyarn \nyarn start --reset-cache\nThis will make sure you are not with any wrong dependency being loaded there.\n. Just in time, also update to the most recent version with a few updates related to the react-navigation (4.0.0-beta.31).. @Jarred-Sumner I am able to reproduce the error - but it seems to be related to react-navigation. But I believe something can be done over it to avoid that. I will spare some time this week to investigate this issue. Thank you.. Alright - I believe I found the cause of the issue. When reaching the top level, the state is always the same - never finding the undefined route. That might also happen with a defined route in a different stack level. \nAdjusted to verify if the current state is the same as the top level from the current router - if does, just break the loop.. @AlexDM0 / @Jarred-Sumner the PR that fixes this issue just got merged. Now, instead of the loop, you will be warned (console.warn) about the unknown route. I would appreciate the extra eyes on this from you guys. Thank you.. Please, provide information in the ticket to get assistance. . @ranadeep47 do you mind upgrading your rnrf to the last version to see if might pass the right navigation prop forward?. @ranadeep47 It seems you are using react-navigation 2.0 that is not supported yet by this project.. Please, be aware of v3 is not supported anymore - and that this question might not fit the intent of the issues section of the repo. This might be a better fit for a stack overflow kind of help. \nBut I think that this kind of change might be related to the component lifecycle and should be handled in the componentWillReceiveProps - that way you can verify if the user state changed and update the sidebar content.. Please upgrade to 4.0.0-beta.31 - a fix was added to it a few hours ago.. @Hgq1001 can you try cleaning your cache and removing all your files from node_modules? \nAlso, could you show me your package.json and the packager error?\nTo clean use these commands: \nwatchman watch-del-all\nyarn cache clean --force\nnpm cache clean --force # optional - in case you also have used npm\nrm -rf node_modules/\nrm yarn.lock\nrm package-lock.json # optional - in case you also have used npm\nrm -rf $TMPDIR/metro-*\nrm -rf $TMPDIR/haste-*\nyarn \nyarn start --reset-cache # <-------- this is important\nEDIT: Also, remove the react-navigation from your package.json - it is already required by rnrf and it's a different version.. @pakkibokati2012 it's misspelt: \nnpm install --save react-native router-flux\n                               ^ check this blank space here.. Do you mind checking which version of react-navigation was installed over there? As soon as I get some time, I'll investigate this and get back to you about it. Thank you for reporting.. @aksonov any objections about getting this merged?. @rayj10 are not you able to access it from this.props.title?. If I understood it right, that's the expected behavior - and it's documented on react-navigation. To have it behaving the way you want, you will need to reorganize your scenes in a different and more complex way. But in a nutshell, the scene containing the drawer need to be at the top level, or it will be nested.\n\nNesting DrawerNavigation\nPlease bear in mind that if you nest the DrawerNavigation, the drawer will show below the parent navigation.\nhttps://v1.reactnavigation.org/docs/drawer-navigator.html#nesting-drawernavigation. Please add an example of your issue in the Example app in the repository. That will make easier to trace the issue.. react-native-router-flux is still on react-navigation@1.5.8 - and there is no active work for supporting 2.0 that I am aware of. PRs are always welcome.. I believe this is an expected behavior with the new react-navigation - to get rid of it we need to use headerForceInset in the navigationOptions. I'll check how we handle it internally later this week and can get back to you about it.. I think this might be possible only if you use a custom smart Header (that might get an action and trigger its re-render - without re-rendering the rest of the page).\n\nA different alternative, hacky way, in case you are working with a sort of scrolling title replacement, it's to use conditional styles to apply the title over the Header (covering the header title).\nHave you tried to disable the animations before updating the title?. I have this partially done - when finished I can push a PR and reference it here.. @gyf19 I'll confirm it as soon as I get back to contribute here - probably end of next week. Thank you.. @aksonov Great - I've been thinking about removing state management from RNRF - but that would make the project name a bit out of sync with it. I'll check your PR and start to hack on missing stuff - let me know things that you would prefer me to look into first. . @aksonov sure - yeah - when I was trying to make it to work with react-navigation@2 here - ended being more like a utils than something like it is now. But checking your PR, that's a way better than I thought. \nI have created a few helpers/utils for some projects where I am using react-navigation@2 that I think might be useful there. I'll get started with it tonight! \ud83d\udc4d . @aksonov I can do it - even provide the way to connect it with onNavigationState.\nAlso - with the new React context API - we might want to explore that instead of a forward props hell that usually happens.. I am on it :+1: . @symous I cant reproduce it here. Closing due inactivity - but let me know if the last version haven\u2019t fixed it for you.. @aksonov I've brought your list here - and placed my username beside the item I am planning to tackle first.. I believe you are using the plugin for prettier only - there is a better plugin with support to eslint + prettier on VSCode - better to use that one instead.. @aksonov this one: \nhttps://marketplace.visualstudio.com/items?itemName=esbenp.prettier-vscode\nYou have to enable the ESlint integration: \nprettier.eslintIntegration: true\nAlso, instead of prettier, use prettier-eslint, so it will apply it in the right order.. \ud83d\udc4f \ud83d\udc4f \ud83d\udc4f \ud83d\udc4f . @aksonov sure - the custom actions are almost done. The missing labels are the next thing to do.. Got busy with work and couldn't finish what I've started - but planning tackle that later \ud83d\udc4d . Checking it now - back with ETA in a few.. I believe there are still more things besides what is listed in the PR todo list - do you recall anything else @aksonov? . Sure - good with that. I'll check about the missing action then.\n. Checking.. @aksonov can you elaborate on this to me?\njs\n            // go to first screen of the StackNavigator with reset\n            // navigation.dispatch(NavigationActions.reset({\n            //   index: 0,\n            //   actions: [NavigationActions.navigate({ routeName: tab.route.routes[0].routeName })],\n            // }));\n            // go to first screen of the StackNavigator without reset\n            for (let i = 1; i < scene.route.routes.length; i += 1) {\n              navigation.dispatch(NavigationActions.back());\n            }\nWhy are we using multiple back calls instead of just one single reset there?. @aksonov that's because I am using a local copy of eslint-config-airbnb. I'll push one temporary fix for it - while they do not release it.. @aksonov just fixed it - it was a problem with babel and jest.. Cool - only linter errors now.. Done - using src now :+1:.. I did already - but that limited a bit the way it can be customized. . Feel free to merge it - I got a few other things to keep going and I'll need to postpone the rest of changes for later tonight or tomorrow morning.. @aksonov initial work done.\nYou will need to clone airbnb/javascript in order to have it working while they don't release a babel v7 version of their presets/configs.. Still checking about it - taking a look in the POP_TO_TOP to see if we could do something similar.. Trying to fix it here. Still working to manage a few edge cases too.. I am back on Android - most of my users are Android. Now I am with several AVDs on my mac to test - so I can help with that.. Fixed on #3256. \n. @muhamad-rizki I might help you after getting a sample code.. Thinking about having 3 example folders instead of just one right now. \n1) The current one (call it Playground maybe? like react-navigation does);\n2) Redux integration;\n3) An example using Expo / create-react-native-app.\nAny objection about it?\n. > Thinking about having 3 example folders instead of just one right now. 1) The current one (call it Playground maybe? like react-navigation does); 2) Redux integration; 3) An example using Expo / create-react-native-app. Any objection about it?\nThis was added in the PR #3287 and #3288.. I am also strugling with the onNavigateStateChange life cycle. Any chance for us to implement a side life cycle instead of route state? So people can subscribe to it instead.. Of course. I meant about adding something like a onNavigateStateWillChange on our side - to allow some kind of preparation for the next component.. I was actually thinking in something unconnected to state - to really move away from this idea a bit. \nHave you take a look at NavigationEvents? https://reactnavigation.org/docs/en/navigation-events.html#docsNav\nMaybe allow users to connect whatever they want (with the new context API - I am noticing that it might be possible to postpone use of redux or mobx a bit in some cases).. Yeah - that's true. I am overcomplicating with this idea - just shooting to see if we could end with something around it - but you are correct - let's keep things simple. ;-). @sourcecipher could you provide an example where I am able to see it? \nIt seems that the lifecycle of the components now are all mounted at once right after loading the app.. Can you try last code from master? There was some updates related to reset and other stuff that might help on that.. No - master as in master branch: \nyarn add aksonov/react-native-router-flux. It was not intended :(. Sure - also fixing #3258 before it.. @aksonov fixed on #3265.. Thank you @SourceCipher for letting us know that the solution provided worked. Closing this one.. With the upgrade - probably the app structure will have to be updated.\nCould you provide a sample of your structure so we can work with it to see how proceed and maybe add a migration guide?. @nica0012 could you please update to the most recent version at the moment and see if is still happening? \nAlso, can you provide an app using the code from Example folder?. Version 4.0.3 does not work exactly the same way as the 4.0.0-beta.x. It is using a different react-navigation version. Please provide the all the information asked in the issue template instead of +1 to get help.. Could you update to the most recent version and see if it works with your app and fix this issue?. @aksonov not sure if I understand - it is not showing the tab bar at all?. I got it now - it was not the intention. . I will see if I can reproduce it here and then get back to you guys.\n. @alejandroclvi @danferd @fcabrera23 I was not able to reproduce it with the Example that I have here. But I do believe that is because babel is misconfigured. What is the react and react-native versions that you are using?\nCould you check if your version is compatible?\n| react-native | react         |\n|----------------|-----------------\n| 0.46.x         | 16.0.0-alpha.12 |\n| 0.47.x         | 16.0.0-alpha.12 |\n| 0.48.x         | 16.0.0-alpha.12 |\n| 0.49.x         | 16.0.0-beta.5   |\n| 0.50.x         | 16.0.0          |\n| 0.51.x         | 16.0.0          |\n| 0.52.x         | 16.2.0          |\n| 0.54.x         | 16.3.0-alpha.1  |\n| 0.55.x         | 16.3.1          |\n| 0.56.x         | 16.4.1          | \nAlso, check this document about what have changed and breaking changes that might help you identify what is going on there.\nhttps://github.com/react-native-community/react-native-releases/blob/master/CHANGELOG.md. @danferd but what is the version installed? Try to run these commands to check the versions you are using and if they are compatible.\n```shell\n$ npm ls react-native\nreact-native-router-flux@4.0.2-dev /Users/daviscabral/Projects/open-source/react-native-router-flux\n\u2514\u2500\u2500 react-native@0.56.0\n$ npm ls react\nreact-native-router-flux@4.0.2-dev /Users/daviscabral/Projects/open-source/react-native-router-flux\n\u2514\u2500\u2500 react@16.4.1\n``. @lynnic26 what is thereact` version you are using? \nCould you check if your version is compatible?\n| react-native | react         |\n|----------------|-----------------\n| 0.46.x         | 16.0.0-alpha.12 |\n| 0.47.x         | 16.0.0-alpha.12 |\n| 0.48.x         | 16.0.0-alpha.12 |\n| 0.49.x         | 16.0.0-beta.5   |\n| 0.50.x         | 16.0.0          |\n| 0.51.x         | 16.0.0          |\n| 0.52.x         | 16.2.0          |\n| 0.54.x         | 16.3.0-alpha.1  |\n| 0.55.x         | 16.3.1          |\nI suspect that this one might be the same issue that is occurring with #3010 and #3218.\nAlso, could you provide steps or some code that I could use here to reproduce your error? I am trying to add these issues that are being found to the Example app, so we can make a proper regression every time a new version is released.. With 4.0.2 - you will have to provide a key to pop to have it refreshing.\nActions.pop({ refresh: { data: 'Data after pop', title: 'title after pop' }, key: 'tabbar' });. Yes, it should be preserved. Just wanted to show where to place it.\n. I've updated the example - my bad for keeping it confuse. Actually null is the default - not needed.. But it will be refactored in the #3269.. @roeib Please try the most recent version, in case that still does not work, provide an example (better if using one of the ones provided in the repository) so I can reproduce it here and help you.. @Abhishekgarg727 I am not able to reproduce it here - could you provide an example using the code from the repo (Example or ReduxExample)? Thank you.. I think people might refer this issue in the future - and also check the package.json from examples. BTW,  react-native@\u02c60.56 is the first version to use Babel 7, and it's recommended to enforce the version beta-47 using tools like yarn resolutions. \nIt's possible to know more about it here: https://github.com/react-native-community/react-native-releases/blob/0.57/CHANGELOG.md. Sorry - I thought I had commented here. Please, update the yarn.lock file so we can have it merged :). Thank you @tikkichan4, the fix was added on #3190 and it will be released as 4.0.2. \nJust checking why we have changed it back (during the upgrade to 2.0 it was StackNavigation.push during some time.. @aksonov is on vacation - so the 4.0.2 version will need wait him to be released. But while that, you can try it using yarn add aksonov/react-native-router-flux. \nPlease, try that and let me know if it have fixed your issue.. There is a new version now that fix this. To get it right, with reset, use Actions.reset or set type={ActionConst.RESET} in the scene you want to behave like that.\nAgain, I am not able to publish any version, so you will have to use master to test it there.\nPlease reopen this if the fix haven't worked.. Thank you @matthewkwong2. \nI believe the way you are working with controlled/uncontrolled components here might be causing it. If the suggestion from @matthewkwong2 does not work for you or you are still having issue, please provide an example with the code from Example folder that I'll take a look.\nI found this article really interesting and helpful to do a better use of controlled/uncontrolled components, it might help you like helped me:\nhttps://goshakkk.name/controlled-vs-uncontrolled-inputs-react/. Did you meant Scene with Screen? - onBack is showed in the code and in the Example code. \nhttps://github.com/aksonov/react-native-router-flux/blob/cd74da5f28f3a0d3c33be781a7f07463ace6b00f/src/NavBar.js#L18\nhttps://github.com/aksonov/react-native-router-flux/blob/e1b7cd19ad86980643ae852c2f689da4d6ec6538/Example/Example.js#L113\nPlease provide the information that is asked in the template, so we can help you. . ~onBack is not a supported in the action param.~ You will have to manage that in the life cycle of your component or in the onNavigationStateChange.. My bad - just confirmed that it is supported. Thanks for having the time to report it back here.  \ud83d\udc4d . Your issue description is confusing. \nBut it seems this is the expected behavior.\nHere is the code from Example folder using the most recent version:\n\nPlease, try it like is there and in case you are still having issues, reopen this ticket.. Have you achieved the result expected? Do you mind sharing what have you done? What is the lib missing in that case? Thank you.. Nice - thank you. Please, when you do, refer to this issue. I'll keep this opened and marked as feature request.. By accident I was able to make it work when trying to hide the tabbar. So it seem that you might need to find the right Scene reference to apply the style. What might be causing the style to not be applied is that you are not actually hitting the right one. I'll see if I can update the Example project in a new PR showing it.. Not being able to work on this lately - but I'll try to spare some time later today.. That's not an issue on RNRF, but might be fixed setting the opacity for your container:\ncontainerStyle: {\n            backgroundColor: \"transparent\",\n            opacity: 1\n        }\nPlease reopen in case it not fix your problem.. Hi @blackbing, do you mind updating your change to instead of using the git repo like I did, to use the most recent npm package? That git clone part of Circle CI was necessary during the upgrade process to React Navigation 2.0 - while they were still working in a version for Babel v7.\nSo, just to be clear: \n\nRemove airbnb clone from base package, circle ci and examples;\nAdd the most recent package installed there;\nRun lint/fix again.\n\nThank you for your first contribution here! :+1: . It was required because the current version was not released and was still using Babel 6 - not being able to work with the other packages. I am with your code here - and I got it fixed, I will push the changes and get it merged - thanks again.. I am not on my computer - so if you dont mind doing that - lock the version, remove the clone steps and run lint with fix again - then I can get this merged.\nIt will be released as 4.0.2 - with other hotfixes.. Thank you sir! . Could you try with most recent version and let me know if is still broken? . Please update your React and React Native versions and also try to use aksonov/react-native-router-flux while version 4.0.2 is not released to see if that is fixed.. Those versions aren't compatible like I told you in the other ticket. About the hardware back button - that also happens with React Navigation when the POP action is called. That seems like a good enhancement to me. \nI don't have time now to work on that, but if someone else decide to take stab ;-). That's because of the navigator reference that is used. The default back action is dispatched from there, what causes the nested navigators to be ignored. To fix that you will need to override the back handler from your Router.. Check the Example, it's working there :+1:\n\n. I will keep this opened to track the PR that I might work in the weekend to make it easier.. I believe a custom reducer also can make it work without needing to change the lib. I am inclined to close this issue since the lib is flexible enough to allow a proper fix. What do you think?. Keeping it opened to see if someone might implement it.. Thanks - I might start a doc page project - to link API with examples. . :). Hey guys, looking into the issue history I found out that onBack is really not called by hardware handlers like you can see at #2359. For now BackHandler still should be used, I'll check what can be done on that matter - feel free to provide PRs that help on that matter.. Sorry - I misread the issue. Maybe we could work in a new event here? Not sure yet how to fix it - I am checking other issues with the Example code, and might take a look into that too.. I don't think it works like that with refresh - but I'll check it and get back to you.. @matthewkwong2 for params, that's correct, it is renderLeftButton - but since back was true - it seems it is being replaced right after being set. . It seems for react-navigation@2 some extra work is going to be needed.\nRN issues related to this:\nhttps://github.com/react-navigation/react-navigation/issues/2770\nhttps://github.com/react-navigation/react-navigation/issues/1171\nhttps://github.com/react-navigation/react-navigation.github.io/issues/191\nLibs that might help here:\nhttps://github.com/ReactTraining/react-broadcast\nRN Docs:\nhttps://reactnavigation.org/docs/en/navigation-prop.html#addlistener-subscribe-to-updates-to-navigation-lifecycle\nhttps://reactnavigation.org/docs/en/with-navigation-focus.html\n. After digging a bit more, makes no sense to do this PR and mess around with old code like that. Closing this in favor of handling with issues and PRs that are pilling every day.. Nice, thanks, I'll take a look when possible and update the ticket.. Also guys, there a couple of things here that I noticed that are not supported anymore - due react-navigation@2 breaking changes:\n\nswipeEnabled={false} and animationEnabled={false} will not work anymore as you can read about it here: react-navigation/issues/4146 and here\n\nI am checking the provided code now to see what is happening.. I found that the problem is not actually the combination between LightBox and ActionType.RESET - but the way RESET is handled now that RNRF does not manage state anymore. \nWhat is going on - is that RESET is always called on the top stack. I'll look here what can be done in that matter.. Hey guys - I was able to fix the issue - just being sure that is not going to break anything else before creating a PR for it.\nJust to be clear about the fixes I am going to push:\n- Reset is now going to work with the right stack/scope - respecting nested scenes;\n- When using the scene aliases (Actions.[key]) for a scene that has a type RESET, it will also respect the scope.\nThank you for the patience and for keeping the discussion clear and objective here.\n/cc @asd8855 @mswokk @andrew @joenoon @januswel . This should do the trick:\nyarn add aksonov/react-native-router-flux. @Abhishekgarg727 there were more changes - not just that. The preset was to solve some incorrect version dependency during the development.. @Abhishekgarg727 ReduxExample uses it.. You should use the scene key or jump to make that work. You can see this working in the Tab 5 from the Example code.\nWith the example, the code would be: \njs\n  onPress = () => {\n    Actions.screen({incomingTask: this.state.task})\n  }\n\nIn case that is still happening, please provide a failing example and reopen this ticket.. That is working in the Example code with the most recent version.\n\n\nPlease, take a look there, and in case you found a bug, or was able to reproduce this there, reopen this ticket with the failing example.. Sorry - I misread the issue and the prop - I read it as hideNavBar - as the hide the navigation bar - and not the tab bar. \nBut I got your code here - and there is no hideTabBar in your example as well.\njs\n            <Stack back backTitle=\"Back\" key=\"register\" duration={0} navTransparent>\n              <Scene key=\"_register\" component={Register} title=\"Register\" />\n              <Scene key=\"register2\" component={Register} title=\"Register2\" />\n              <Scene key=\"home\" component={Home} title=\"Replace\" type={ActionConst.REPLACE} />\n            </Stack>. Check this out: https://github.com/aksonov/react-native-router-flux/issues/2076.. Sure - PRs are welcome. But the behavior really changed. That was something that I suffered a lot with the react-navigation upgrade (handling with the navBar and tabBar across stacks).. Yes, I belive that's because 4.0.0-beta-28 uses react-navigation@1.5 - and the final 4.0 version uses react-navigation@2.0. We will need to see what else is broken/deprecated - and maybe update the API.. I got it working in the PR that is opened: [](https://gyazo.com/664563f57ca5a9b25a57e41c5d793359. PR #3240 added an example of how to work with this. A correct reference to the tabbar scene need to be used, or the tabbar will not be hidden. PRs to improve this are welcome, not sure about what others contributors are focusing - but I am trying to keep functionality working across Android and iOS right now. \nYou can check Example from master branch to see it in action.. Great - in case you find a bug, please open an issue with as many details as possible :+1: . As discussed here, this is because of the new context API. I can't say much, cause I don't know anything about your environment, but try to use React > 16 and React Native > 0.55.\nProbably we will need to update README to say that as well.. React Native 0.55 does not support React 16 as you can see here https://github.com/facebook/react-native/blob/v0.55.4/package.json#L145.\nPlease provide failing example (with valid package versions).\nFor docs, PRs are welcome. The upgrade for React Navigation is pretty recent. . Could you try 4.0.1? RNRF 4.0.1 uses react-navigation@2.0 and 4.0.0-beta.31 uses react-navigation@1.5. In react-navigation@2.0 is not supported anymore.. I am closing this ticket in favour of the bugs and active issues - please, check the Example folder from that version you are using or try to upgrade to the most recent version.  \nIf you believe that this was mistakenly closed - feel free to reopen providing a way to reproduce the error (I couldn't get the problem exactly) or a https://stackoverflow.com/help/mcve.. @sritharanrbt are you using RTL? Can you provide more information about the error? Code sample? That sounds like a real bug with the way we handle the transform prop - but the lack of information in the issue does not help.. Have you tried onBack? That's present in the Scene API docs.\njs\n<Scene key=\"detailsVisit\" back={true} onBack={() => Actions.visits()} component={DetailsVisit} title=\"Detalhes da visita\" />\nIf you want to handle with the Android handler, you will have to use backAndroidHandler in your router.\njs\n<Router backAndroidHandler={Actions.listIfOnDetail}>\n    <Scene key='listIfOnDetails' component={Redirector} />\n</Router>\nYou might need to combine Redirector and onNavigationStateChange to do what you need. \nClosing this in favour of bugs only - in case you have problems related to how to do this, you can use Stack Overflow and the tags #rnrf and #react-native-router-flux. It will be easier to me, and other people to answer and find the answer over there.\nIf you find a bug that is directly related to this, you might reopen this issue - otherwise, please open a new one providing the needed information.. Could you reproduce the error using the ReduxExample from the project? If yes, do you mind sharing this - so I can check it and see what is going on?. I believe 4.0.0 is really broken, and that's why @aksonov released 4.0.1 right after. I tried to release 4.0.2 to fix a couple of other issues right after as well. But I will only have time to dedicate to code here in the weekend now. \nAnything that you guys might provide to help with that, specs, examples, would really make the testing/fixing process easier. Thank you.. I noticed that with the last release, a lot of issues might be happening due the wrong version match between a lot of dependencies.\nCould you check if your version is compatible?\n| react-native | react         |\n|----------------|-----------------\n| 0.46.x         | 16.0.0-alpha.12 |\n| 0.47.x         | 16.0.0-alpha.12 |\n| 0.48.x         | 16.0.0-alpha.12 |\n| 0.49.x         | 16.0.0-beta.5   |\n| 0.50.x         | 16.0.0          |\n| 0.51.x         | 16.0.0          |\n| 0.52.x         | 16.2.0          |\n| 0.54.x         | 16.3.0-alpha.1  |\n| 0.55.x         | 16.3.1          |\n| 0.56.x         | 16.4.1          | \nAlso, check the breaking changes related to the version you are using and the most recent - that might shed a light here:\nhttps://github.com/react-native-community/react-native-releases/blob/master/CHANGELOG.md\nIf you think this was closed by mistake, please reopen the ticket after verifying the information above.. Please upgrade to version 4.0.2 (for now - using Git). I don't think beta version will be or should be supported.\nThe Example code has a sample of passing data to a tab in the tab 5: \n\n. Can you try this? \njs\n                <Scene \n                  drawer\n                  hideNavBar\n                  key=\"drawer\"\n                  contentComponent={SideMenu}\n                  drawerImage={MenuIcon}\n                  drawerWidth={300}\n                  onEnter={() => alert(\"in drawer\")}\n                >. It seems that you got it working - in case it's not and you believe it's a bug - feel free to reopen the ticket.. @anishroff I've added support for it in a PR.. Sorry, unfortunately v3 is not supported anymore.  Also, this seems to be a question better suited for StackOverflow. . Please provide the code from the Example folder that reproduces this error.. I noticed that with react-navigation@2.x - Scenes are being rendered all together with the Stack. So, when you are really logging it - it has no params being passed to it yet, so probably, the lifecycle is wrong, and that might be probably the issue with all the recent opened tickets here. If someone here have time to help dig on that, I would appreciate.\nThis might be related to #3202, #3197, #3196, and a couple of others?. I need to investigate to be sure. Right now I am running late with work and might get back to it in the weekend.\nWhat I usually do in these cases, where I have a deadline, is to fork the project I need, do my changes and install it direct from there with yarn, pointing the github repo. . I think you can fork the repo, make the changes and then use that fork. I don't think beta versions will be supported. At least I have no plans to work with that (it will cause one more version to give maintenance).. As I've already commented in other issues and ended opening a specific issue for that (#3213) - beta.31 was the last one using react-navigation@1.5. \nAfter that RNRF had a major upgrade in the dependency to version 2.0 - what changed a lot of things (and might be the reason why so many stuff are not working as before).\nI am still trying to catch up on issues and bugs here.. Not yet - I'll try to hack something on that :+1:. > I switched back to 4.0.0-beta.31 and it's working again\nThat's because react-navigation@1.5 is used there - in the recent versions RNEF is using react-navigation@2 that has some breaking changes. \n. I found out a few things about the tabBar and props - but are mostly the way things works now with React Navigation.\n\n. Do it please - just need that confirmed to proceed with the release.. This seems to be related to the react-navigation@2 upgrade. \nChecking the link below, it seems now they have a headerLayoutPreset prop to manage that. That's not supported yet and will have to add it to the list.\nhttps://github.com/react-navigation/react-navigation/pull/4588\nhttps://github.com/react-navigation/react-navigation/issues/4615. I'll keep this opened since it was an existent feature that is not working anymore and probably will be an easy to fix now that react-navigation provides an API for that.\nThat's also possible using custom nav bars.. You can try the react-navigation@2 NavigationEvents.\nCould you also check if the idea below works? (I haven't actually tested it - and typed it here in the input off the top of my head - it might have errors or typos - help me out on that to get the whole idea behind it \ud83d\ude09).\nCustomScene\n```\nclass CustomScene {\n  constructor(props) {\n    props.onEnter = this.handleOnEnter;\n    super(props);\n  }\nhandleOnEnter = (val) => {\n    console.log(\"Scene onEnter val:\");\n    if (this.props.onEnter) {\n      this.props.onEnter(val)\n    }\n  }\n}\nexport default CustomScene;\n```\nAdding a onEnter in the Router sounds like a good enhancement - what do you think @aksonov?. # IGNORE THIS ANSWER\nUse the other one I answered below please. https://github.com/aksonov/react-native-router-flux/issues/3208#issuecomment-416466059 \n\nI believe the way for doing that (since onEnter from components is always called) is to move the code you want reuse to a module and call it in your components.\n```\nclass Login extends Component {\n  onEnter = myModuleNameUtils.onEnterHandler\n}\nclass Home extends Component {\n  onEnter = myModuleNameUtils.onEnterHandler\n}\nclass Profile extends Component {\n  onEnter = myModuleNameUtils.onEnterHandler\n}\nconst myModuleNameUtils = {\n  onEnterHandler: (val) => {\n    // do your stuff here\n  }\n}\n```\nRNRF will call onEnter in these components if you do not set it in the Scene. . HoC is also a solution.\n```\nconst withOnEnterHandler = onEnterHandler => Component => {\n  class WrappedComponent extends Component {\n    onEnter = val => onEnterHandler(val)\nrender () {\n  return <Component {...this.props} />;\n}\n\n}\n  return WrappedComponent;\n}\n``. But yeah - something on theStacklevel would be nice. Let's wait @aksonov come back from vacation to see his opinion about it.. The opacity solution - if I am not mistaken, is for the versions usingreact-navigation@2`. \nFor versions before it - I am not aware how to that's could be done. I usually look into the react-navigation issues and StackOverflow to see if someone asked/answered it. Please reopen the issue with template information in case of a bug found.. Thank you :+1: . Do you mind showing how is that behaving on Android and iOS before and after? I am trying here and not being able to see the problem or to confirm that this change is not going to break anything else for other people.. Also, could you check if SafeAreaView is not something that would fix this for you? . @mswokk I believe 4.0.1 is stable - but it's not working as before for a lot of cases that I believe were not the main intent of the lib. \nBut for having a 3.5 version, someone from the community also will have to step up to maintain it. That's the main purpose of this issue too. My focus is on bringing back things that people are missing from v3 on v4.. Cool. I'll fork the last beta using react-navigation@1.5 to a branch v3.5 and update the package.json to reflect it. . @aksonov that's done - could you publish it as a version please? I've already built and tagged it too over there. And also, ignore the 4.0.2 commit on packages.json in the history - that was really precipitated - but if would be good to release it now that we have a few fixes in place. Thanks.. Ouch - now that I noticed that v3 was already on 3.39.x - probably worth to keep going on there. @aksonov how do you want to proceed?. Agree. I just had the idea of moving it to its own package - like react-native-router-flux-deprecated. But right after changing the title I was not so sure about it. Anyway, let's focus in the v4 :-) . A note for anyone that end in this thread - there is a branch for beta - and PRs are welcome. I am not interested in working on that version (too much context to load everytime I have to switch between the different versions of react-navigation).. I believe it's related with the versions - I spent some time tracking the dependency that could be causing it - but without success yet. . That's weird - locally it's passing. Checking what is going on.. @aksonov tests fixed - just lint updates.. There is no way to help with the information provided here. Please fill the information from the template.. Like I said - without information about how to reproduce the error, an Example or at least an explanation there is no way to help.. @ptmaroct thank you.. Please provide a https://stackoverflow.com/help/mcve or enough information to reproduce this error. Closing this issue for the lack of information by all the users that complained about it since it was opened.. @nagacoder that's right - when upgrading react-native versions you need to update your platform folders - usually using the git upgrade tool. Thanks for sharing your solution.. Thank you for the update about the workaround. This seems to be sort of a duplicate of #3188. I'll keep it marked as bug and work on both in the same PR.. This is not related to RNRF. As the error message says - you will need the babel loader to make spread work (probably @babel/plugin-syntax-object-rest-spread - but I believe that's not included anymore and to customize it, you might have to eject your app).. This seems to be better suited to Stack Overflow. Btw, you have a typo, it's not gestureEnabled - the right prop is gesturesEnabled.. Can you update to a more recent version? \nI am still waiting further discussion on #3213 - until there, I don't think beta version should be supported. . Closing due inactivity. . I am going to merge this to see if the edge cases get some change. I have tested both examples, and they are working fine.. I can't see anything wrong - probably is the order you are loading things. This seems a questions better suited for StackOverflow. If you find that this was mistakenly closed and it is really a bug, please reopen and provide a code sample. \nThat will help with the tests when new versions come. Failing tests might get added to the examples in the long run (tests would be much better actually).. Do you have a sample code? I have no idea about what might be happening here.. Thank you for providing the example - I'll investigate further later tonight.. The main point to be aware here is that RNRF had a major library upgrade (react-navigation) during the v4.0.0-beta.x releases. So beta.31was the last version using react-navigation@1.5.x. After that RNRF started to use react-navigation@2.x that deprecated some stuff, and removed others - but also added lots of new things/fixes.. That would not be a refresh - refreshing automatically a component would make sense if params were going to change - if they do not change, you will not get any reason the trigger render again. If they change, you will need to inform that, in that case, I believe it's more flexible and less problematic to allow users works with it in the ways that might be the best for them. Do you know what I mean?. This might get easier to fix with the proposal work that I am going to do in #3240.. @pierol Now that I got deeper in that code a bit more - I believe you can get done using onEnter={Actions.refresh}. This will trigger a refresh every time the Scene get focused.\nOther thing you might try too is to have a call with params: Actions.key(params). Reopen the ticket if those solutions does not work. Also, there is an opened PR that have a few fixes and samples that show this.. Can you provide the route and component structure used? The way you explained here - it is really hard to reproduce from my side to try to help you.\nI noticed that with the last release, a lot of issues might be happening due the wrong version match between a lot of dependencies.\nCould you check if your version is compatible?\n| react-native | react         |\n|----------------|-----------------\n| 0.46.x         | 16.0.0-alpha.12 |\n| 0.47.x         | 16.0.0-alpha.12 |\n| 0.48.x         | 16.0.0-alpha.12 |\n| 0.49.x         | 16.0.0-beta.5   |\n| 0.50.x         | 16.0.0          |\n| 0.51.x         | 16.0.0          |\n| 0.52.x         | 16.2.0          |\n| 0.54.x         | 16.3.0-alpha.1  |\n| 0.55.x         | 16.3.1          |\n| 0.56.x         | 16.4.1          | \nAlso, check the breaking changes related to the version you are using and the most recent - that might shed a light here:\nhttps://github.com/react-native-community/react-native-releases/blob/master/CHANGELOG.md. @ggunti Cool. Thanks. I can't see anything wrong there - have you inspected the views to see from where is that coming? Also, could you try to use yarn add aksonov/react-native-router-flux to test if the new version of RN that was merged and the other fixes to reset and push/pop might fix that?. There is an example of how to handle transition config in the Example app inside the repo. \nFor the most recent versions (> 4.0.1) - that's something you can use from the react-navigation-stack package.\nFor the earlier versions (<= 4.0.1) that's still part of react-navigation. \nThis issue explains how to do it react-navigation/react-navigation/issues/1759 in some different versions. \nHere there is even an example about how to do it: https://github.com/react-navigation/react-navigation/issues/2393#issuecomment-409985231\nThis Stack Overflow shows a solution too: https://stackoverflow.com/questions/46624633/from-left-to-right-window-animation-with-react-navigation.\nMaybe we should add to the API docs that with the recent version, RNRF is behaving a lot more like an extended lib adding functionality and features that it is not present or are not going to be implemented on react-navigation. \nWhat do you think @aksonov?\n. Thank you @vanb! . jumpToIndex was removed in the react-navigation@2 and for this reason it's not possible to use anymore (and one of the reasons that it was not even documented as stated on #2805).. In the Example folder of the project there are some options showing how to do it. If you are using Redux, please update to 4.0.1 - there was an important fix related to that.\nReopen if you think that you found a bug related to what you are trying to do - or in case you would like to discuss about something that you would like to see new or different in RNRF.. Are you able to reproduce it with the Example or ReduxExample code provided? It might be something else in your app affecting it. \nThere is no enough information here to help you - please provide a way to reproduce the error - here, both examples are building on ios and android.. No worries, glad you got it working.. Thank you for reporting the issue - this one is a duplicated and was already reported on #3194. \nClosing in favour to keep all information to this bug there.. Please, when opening a ticket, provide the information that is asked in the template. Without knowing that - it's not possible to help you.. Where is how is Actions.selfie being called? (EDIT: I read that is in the click action from item, but can you show how you are placing it there?)\nI noticed that with the last release, a lot of issues might be happening due the wrong version match between a lot of dependencies.\nCould you check if your version is compatible?\n| react-native | react         |\n|----------------|-----------------\n| 0.46.x         | 16.0.0-alpha.12 |\n| 0.47.x         | 16.0.0-alpha.12 |\n| 0.48.x         | 16.0.0-alpha.12 |\n| 0.49.x         | 16.0.0-beta.5   |\n| 0.50.x         | 16.0.0          |\n| 0.51.x         | 16.0.0          |\n| 0.52.x         | 16.2.0          |\n| 0.54.x         | 16.3.0-alpha.1  |\n| 0.55.x         | 16.3.1          |\n| 0.56.x         | 16.4.1          | \nAlso, check the breaking changes related to the version you are using and the most recent - that might shed a light here:\nhttps://github.com/react-native-community/react-native-releases/blob/master/CHANGELOG.md. Cool - thank you for pointing all this out. I will take a look - but it seems this might be a duplicate - maybe #3049 or #3221. Both are in the queue to be checked. I can't really use client paid time to fix that now - but on my next free time I will def check this out first.. It seems for react-navigation@2 some extra work is going to be needed.\nRN issues related to this:\nhttps://github.com/react-navigation/react-navigation/issues/2770\nhttps://github.com/react-navigation/react-navigation/issues/1171\nhttps://github.com/react-navigation/react-navigation.github.io/issues/191\nLibs that might help here:\nhttps://github.com/ReactTraining/react-broadcast\nRN Docs:\nhttps://reactnavigation.org/docs/en/navigation-prop.html#addlistener-subscribe-to-updates-to-navigation-lifecycle\nhttps://reactnavigation.org/docs/en/with-navigation-focus.html\n. Just a note about the info, I used the issue as bookmark - and also to encourage someone else to work on it - if available. There is a PR with initial work on that - but I am not sure when I will have the time to finish it.. Thanks for reporting this as well. That's because when navigating it does not mount/unmouont the component. That's also being tackled in the PR I am taking a look. In order to concentrate all this information in the same place - I am closing this and encouraging you to continue contributing in #3206 - that's the main issue to handle this issue related with the lifecycle (that seems to be the culprit of the props problems for everyone). . Please try to upgrade to beta.31 that is the last version using the same react-navigation, and if that does not work, upgrade it to 4.0.1.  There is a discussion about turning beta.31 into a version on #3213 - but I don't think it will get traction - so for now, there is no support for beta versions IMO.\nIf errors persists after upgrading, please reopen the ticket.. Just lack of time - helping a friend with some stress test in his server right now - after finishing it I'll push the changes. \nBut what I am doing is to move the logic of onEnter from componentDidMount to the event listener willFocus. And the onExit to the didBlur. But I want to be sure that is really going to fix the issue - and also not break anything. \nI am also extending the test suite - so it's possible to require that every new PR that fixes a bug comes in companion of a test that helps it to come back (and also in future upgrades).. @aksonov ~yes - that's going to fix that's as well.~ sorry - misunderstood the question. Some of the errors I saw in the issues opened were related with people relying in the regular life-cycle from the components, that now are not like before. \nIt's not actually directly attached - I am going to finish the changes and show to you here, not sure if this should exactly be merged, as it's probably not just extending/facilitating the use, but might be changing behavior. . @aksonov after this - could we get a new version? I tried the last time but due the lack of permissions I was not able to publish - so I reverted a few things. Ended doing a little mess here while you was not around.. Should be there in a few hours - just finishing a few tests here.. Please, do not merge yet - I noticed a bug in the isStatelessComponent call - making it to pass a ref to the wrong kind of component. \nI've updated the examples to some of the cases that people complained - but to hide or pass props - it's like @aksonov said before - wrap=false might be needed - or you will have to provide the right scene key to refresh or pop.\nBelow the tab bar toggle working:\n. I would appreciate some help testing these changes by the people that were having the problems before we proceed. We might have to update docs too. Any voluntary? . Can you try this? (just to test if I am correct about the key reference that we need to keep now. If thta's the case - like it happened with React Navigation - it will require some work from everyone to adapt to it.\nonPress={() => Actions.pop(\n        {\n          ...props,\n          refresh: { challenge: challenges[i] },\n          key: 'root'\n        }\n      )}\nI believe you are defining the params but they are not passed from top to bottom like before. Also, check this:\nonPress={() => {\n   Actions.ChallengesDetails();\n   Actions.refresh(\n        {\n          ...props,\n          refresh: { challenge: challenges[i] },\n          key: 'root'\n        }\n      )}. I use this to help with the libs I help to maintain:\nbash\nfunction rn-clean() {\n  rm -rf android/build\n  rm -rf ios/build\n  watchman watch-del-all\n  rm -rf $TMPDIR/react-*\n  rm -rf $TMPDIR/haste-*\n  rm -rf $TMPDIR/metro-*\n  yarn start --reset-cache\n}\n$ cp [lib-path:react-native-router-flux(in this case)]/src/*.js [app-path]/node_modules/react-native-router-flux/src/\n$ yarn install # in the project root \n$ rn-clean\nFor your case - probably worth also remove node_modules.. This is the piece that magically generates the methods with scene names. But it calls execute - with type jump for tabs - or push for everything else. . You can place a console.log inside the execute - and you will see that the params get there. The problem seems to be that is not possible to put a lot of nested scenes like before without wrapping it with a navigator to manage this. This is what I am trying to confirm.. I am getting this in - I can't reproduce that - but it fixed a few other cases and add more examples.. Yes, thank @dextermb, we can continue this over there. But before doing that it's important to notice that things changed from 1.x to 2.x on react-navigation, making a lot of RNRF API to also change (that's the main reason why this went from v3 to v4. \nPlease read #3206 and see if you think you can contribute there with more information about your problem or that you can help with a PR.. Sorry - this does not seems to be valid for master. I just created a branch for beta, v4.0.0-beta - for people that want to continue using and contributing it (the last version there is 4.0.0-beta.32).\nAnd honestly - to downgrade RN, you will need to provide some information in your PR. Reopen it with enough information to give context and reasons about this change. \nThere is a guide in the repo that talks a bit about how to contribute: \nhttps://github.com/aksonov/react-native-router-flux/blob/master/CONTRIBUTING.md. Good catch - thanks for fixing that.. Take a look in the Example code. \nhttps://github.com/aksonov/react-native-router-flux/blob/master/Example/Example.js\nStack and Drawer are both navigators - and with this structure I believe you don't need both there. Try to remove Stack and make the Drawer your root. If that does not work, put the Stack inside.. Take a look in the file Example/Example.js and see if you can reproduce the error using the Example project that we have here.\nI would say that it might be related with the Scene - if you have it nested in other scenes - it will not work, cause it does not manage the that anymore after the react-navigation upgrade. So you will have to pass this prop to the right scene to have it showed right.\nThe example app is working as expected - try to run it - it might shed a light for you.. The Example project got all the configuration got be able to generate the APK without this issue, you might copy or check it to see what to do.\nThis commit shows more or less what I have done to bring it back to live: https://github.com/aksonov/react-native-router-flux/commit/cd74da5f28f3a0d3c33be781a7f07463ace6b00f\nJust keep the focus in the android/ folder and you will be fine.\nClosing as this error is not related with react-native-router-flux - but with the upgrade of Graddle and the way that it is not being able to process this PNG file. I am trying to be available in Gitter for helping with general questions and keeping the issues to manage bugs in the lib.. Sorry, I was really trying to help. I am focusing on bugs. I hope you get the help you need.. This was fixed in react-native@0.57 as stated here https://github.com/facebook/react-native/issues/16906. \nClosing since there are two possible fixes for the issue. . It seems that there is a setState inside your render method. The error message is pretty clear about the error. That's a common react mistake - I recommend you search about why not use setState inside render to get the whole idea. Probably inside the react docs. Feel free to reopen, if I misunderstood you and this is really a bug.. It seems some confusion around the way react-navigation works with SafeAreaView. I am facing that sometimes too - just couldn't pin-point the exactly place where it happens.. @aksonov do you think after this PR we can generate a new release?. Thank you.. There is an example of how to handle transition config in the Example app inside the repo that shows the correct path to import this file.\nFor the most recent versions (> 4.0.1) - that's something you can use from the react-navigation-stack package.\nFor the earlier versions (<= 4.0.1) that's still part of react-navigation.\nSorry, but the error there is pretty clear, the file is not there anymore. . @aksonov if possible, include this one too in the next release.. Probably this warning is because you are using a react-native in a release candidate version. react-native-router-flux does not directly depend on that package - that's a react-navigation dependency. And we depend on them to update, to also get that update. \nWhat you can do is to use resolutions from yarn to lock it in a more recent version.\n$ yarn why react-native-safe-area-view\nyarn why v1.9.4\n[1/4] \ud83e\udd14  Why do we have the module \"react-native-safe-area-view\"...?\n[2/4] \ud83d\ude9a  Initialising dependency graph...\n[3/4] \ud83d\udd0d  Finding dependency...\n[4/4] \ud83d\udea1  Calculating file sizes...\n=> Found \"react-native-safe-area-view@0.9.0\"\ninfo Reasons this module exists\n   - \"react-navigation\" depends on it\n   - Hoisted from \"react-navigation#react-native-safe-area-view\". I'll check it - sounds like something it was already fixed for the next release.. I am working in a fix for it.. Could you check last published version 4.0.2 to see if that might have fixed your problem?. > On 25 Sep 2018, at 04:05, \u9ed8 notifications@github.com wrote:\n\nrunning well in my project, great\n\nGreat. Closing this one.. Duplicate of #3258.. @arghya95 while I check a permanent solution - could you try:\njs\nActions.replace('restaurant',{ mapdata: newArr}, 'tabs');. Have you tested with other keys? Like:\njs\n  Actions.replace('restaurant', { mapdata: newArr}, 'Login');\nPlease, check if the same structure from the Example app might fix it for you. With the Example we have props working with the master version.. maybe a typo? gesturesEnabled (with an S). Can you confirm it?. Duplicate of #3169.. You will have to do something using onEnter events to manage the Drawer.. You must create your store out of render. I advise you check the redux docs to understand the reason. .  This seems a questions better suited for StackOverflow. If you find that this was mistakenly closed and it is really a bug, please reopen and provide a code sample.\nThat will help with the tests when new versions come. Failing tests might get added to the examples in the long run (tests would be much better actually).. Example code is working fine on Android.\n\n. You need to put the Drawer inside a Stack to make it work properly.\nI will try the same thing without react-native-router-flux - using only react-navigation - to see what is going to be the result.. @iamsee it seems this is the issue https://github.com/react-navigation/react-navigation/issues/2743 of react-navigation.\nYou can track it here: https://github.com/react-navigation/react-navigation/issues/4154.. Duplicate of #3176. This was already fixed on #3190 but the code was not released under a new version yet. To get the fix, you will have to install the code from master. \nI recommend to wait - 4.0.2 should be out today or tomorrow.. Hi @js1121302139 - glad you found a workaround to this issue. Even happier that you not just found it and come back and wrote it down here and in other issue where other user was having the same problem.\nThis was a known issue with react-native and gradle and it seems that is fixed with react-native@0.57 as seen here: https://github.com/facebook/react-native/issues/16906. . Give me a few minutes - I need to get one more fix pushed - related to one bug I brought to master with the reset/refresh change I did a few days ago.. Yeah - sorry about that - I noticed it right after, and I thought I was going to be able to fix in time, but I had to stop to work. \nI have other PR with that and other stuff in development.. There is a big discussion about it on react-navigation RFC - and no proper solution have been decided yet. \nMore about it here:\n- https://github.com/react-navigation/rfcs/blob/master/text/0004-less-pushy-navigate.md\n- https://github.com/react-navigation/rfcs/issues/16\n- https://github.com/react-navigation/react-navigation/pull/1348\n- https://github.com/react-navigation/react-navigation/issues/3839\nBut the thing is, push is supposed to do that. Stack scenes. To avoid that , you might try using key or maybe not push.\nFeel free to reopen if you find that this is really a bug or if you would like to provide a PR with some kind of enhancement in order to make a better experience with that. \nBut I really believe that most of the time, this responsibility relies in the developer and in the app - not in the lib. Because that's not only about navigation, but all other actions as well.. Done in #3287.. @aksonov Probably going to break this into smaller PRs - but just to give a heads up why the fix from other PR took so long.. I'll push smaller PRs in a few. \n@aksonov Is there any way that we could talk/chat? Sometimes I feel that would work fast for a few decisions/directions that I am taking that might not be good for the project.\nI am available on skype (id: daviscabral), whatsapp (if you also use it - email me with your number at daviscabral@gmail.com so we might talk over there), Telegram (id: daviscabral) and on gitter (already started a chat with you there a few days ago). . @aksonov done!. I agree with @LeviWilliams - I believe Splashscreen should not be part of your group of scenes - but a piece of Switch - to be replaced when finish loading - that way there is no back to splash when the app loads - since the scene would be removed from the stack.\nOr try to use a type replace - that way it will be also replaced instead of having other scene pushed over.\nLet's move this discussion to StackOverflow or the gitter channel - since it suits more there than here. In case if you think this is a bug and need to be really fixed, reopen the issue..  This seems a questions better suited for StackOverflow. If you find that this was mistakenly closed and it is really a bug, please reopen and provide a code sample.\nThat will help with the tests when new versions come. Failing tests might get added to the examples in the long run (tests would be much better actually).\nBut from the top of my head, for the issue written in the title, that is getting props from parent scenes - you can use a custom reducer to read the navigation state for that or onStateChange at Router to monitor and store the changes that happens on your Scenes to know what to do.\nBut now, for the thing you are asking in the body, I am really not sure what you are talking about. . PR #3281 merged.. I believe this is a duplicated of #3208. Not sure if this is supported right now - the solution we found out was a HoC to provide it, like I wrote here: https://github.com/aksonov/react-native-router-flux/issues/3208#issuecomment-416466059. In case you want to contribute providing this support, PRs are welcome. . Fixed now.. react-navigation is part of the lib - you MUST have it installed... What I mean is that it is automatically installed - even react-navigation-stack - that is now a dependency of react-navigation v2.\nSo if you check examples, both the react-native one and the expo show how to use it - but about changing direction, you will have to really check react-navigation docs or stack-overflow. I believe this was already answered here. \nIn case you want to help improving the docs, PRs are welcome.\nDuplicate of #3227.. Please fill the issue template properly. Without that, it's not possible to help.. I believe to have it working you will need to create a stack inside the tab with your scenes. But I am not sure - a sample code would make it easier to understand - it's really hard to see what you are doing and see if this is going to do what you need. . What I meant is that is not actually a bug - we are trying to keep issues here focused on bugs and moving general help and questions there. I am also spending some time there answering questions.\nI found something about what you want to do here:\nhttps://itnext.io/handle-tab-changes-in-react-navigation-v2-faeadc2f2ffe\nreact-navigation in the version 2 removed and introduced several behaviors - that's reflects on react-native-router-flux as well.. Checking react-navigation code, I found this: https://github.com/react-navigation/react-navigation/blob/master/src/routers/TabRouter.js\nIt might help with what you want.. Pavel, yes - that's something I also need for the tabs I work with. That's supposed to be the default behavior, so I will check tomorrow morning about what might be causing it - smells like a bug.. > Thanks a lot for helping so fast! v4 works just great\nSorry - is that already working? I mean, with the last version? 4.0.3? . Sure.. > I'm not sure why there is a closed issue on this - it's definitely a bug.\nIf that's not working in the current version - we are going to look into - but v3 and beta versions are not supported (that is stated in the README, issue template and in several other issues already opened). Sorry if that was not clear. I am looking into that now.\n. @forsen thank you. There was a change in the createReducer API like you can see in the image below.\n\nPR #3295 shows the change in the expo example.. Sure thing.. @aksonov this seems still broken - the old API was not passing navigationStore but params. . Can you please also provide the installed version of react-navigation? Also - I believe that's not the recommended react version for this react-native version.. Are you also renaming Actions as NavigationActions in your routes file? . Sorry - I only read right the title of the issue now - answering it: I don't think 0.57 is mandatory - examples were updated to 0.57 recently, before that, it were using 0.56 - but with previous version of react, and also with babel locked to beta-46, that were the versions they were supposed to work.\nI recommend you to lock to the recommended versions - and also follow the instructions from here: https://github.com/react-native-community/react-native-releases/blob/0.57/CHANGELOG.md. @oleole90 sorry - but was that the fix for your issue? do you mind sharing what fixed it?. Remove title from your TabIcon and it will should work as expected.\nExpo example shows something similar to your code.\nhttps://github.com/aksonov/react-native-router-flux/blob/master/examples/expo/navigation/AppNavigator.js#L99\nhttps://github.com/aksonov/react-native-router-flux/blob/master/examples/expo/components/TabBarIcon.js. Glad it worked - react-navigation have changed a lot - and rnrf also due to it.  . @aksonov sorry, my bad - it was a tool for removing duplicated packages from examples folder when developing. You are right - probably better to keep examples with stable versions.. @duanyachao Get the project from master, cloning from git or downloading the whole package - if you  already did it, please try remove node_modules and run yarn install again. \n. Sorry - that's not possible. v4.0.0-beta-31 is not using react-native-navigation - it is using react-navigation 1.5. That is a different library. . I will keep this opened as a feature-request in case someone would like to work on it for version 4.0.0.. Hi there - that seems something possible. i just got back, I will dig on it and get back to you.. hi there - back from the ashes. Let me get back on track and I'll help here.. hi there - I am back today. I am checking this and hoping to get back to you in a few hours with some answer. Sorry about the delay. . Please open a new ticket with the information asked in the template.. Any reason to revert this here? Something that I might help? I was thinking about using the last version for everything. I've spent a couple of days in the past week just to make a few projects to work with these versions.. Cool - I think I know how to fix them. This might be related to the use of babel 7 (I had to upgrade a few other deps in order to make it to work - checking it).. Got example working with latest react and react-native. \n\n. Also from:\n\u2716 538 problems (535 errors, 3 warnings)\nTo:\n\u2716 136 problems (133 errors, 3 warnings). TabBarTop and TabBarBottom are deprecated.. My bad here for removing it - they were not being used before.. It was not removed - just ordered those items alphabetically. . @aksonov ^. ",
    "mvanroon": "Count me in!\nI believe one important thing to be done is manage the questions being asked here in github in the form of issues. They should be asked on gitter or stackoverflow. Maybe we could also add gh-pages and add some more examples and common problems/faq there? I\u2019d be more than happy to help you out there. I'm confused as to how to use redux with RNRF4 as well. Anyone who managed to get this to work?\n\nJust pass wrapBy={observer} for MobX. Not sure how to apply it to Redux, because Redux wrapper is different (connect(...)) for each component, so you have to wrap it within the component.\n\nWrap what in which component? Is there any other way to call a function when exiting or entering any scene? So like a global onEnter/onLeave.. I believe this is because they're Drawer child scenes.\nTry this:\nJSX\n<Router>\n  <Scene key=\"drawer\" contentComponent={this.renderSideBar} drawer>\n    <Scene key=\"splashScreen\" component={SplashScreen} initial hideNavBar/>\n    <Scene key=\"login\" component={Login} hideNavBar/>\n    <Scene key=\"trips\">\n      <Scene key=\"tripList\" component={TripList} title=\"Trip List\" initial />\n      <Scene key=\"tripDetails\" component={TripDetails} title=\"Trip Detail\" back/>\n    </Scene>\n  </Scene>\n</Router>. It's already in the docs mate. I meant - I already added it: https://github.com/aksonov/react-native-router-flux/pull/2473/files#diff-96cc378dcdef180641176501f42183c7. it's a custom implementation; I've built my own tabBarComponent and added a button that onPress calls drawerOpen. Please refer to gitter or stackoverflow is you have any other questions. have you tried upgrading RNRF?. Try upgrading to v4.x and see if the issue still persists.\nPlease bear in mind that GitHub is not the place the ask questions about old versions of RNRF.\nI recommend asking your question on stackoverflow.com. Make sure you add the react-native-router-flux label. Post your problem on stackoverflow along with your code and I'll have a look.\n@aksonov could you close this issue please?. Try this:\n<Router>\n    <Scene key='root'>\n        <Scene key='splash' component={SplashScreen} hideNavBar/>\n        <Scene key='main'>\n            <Tabs hideNavBar showLabel key='tabbar'>\n                <Scene key='tab1' title='PAGE 1' component={Screen1} />\n                <Scene key='tab2' title='PAGE 2' component={Screen2} />\n            </Tabs>\n        </Scene>\n    </Scene>\n</Router>\n. @aksonov would you be OK with Action.refresh()-ing underwater if popTo() was given extra props?\nif yes then I'll make a PR this week. Sure. Assign the issues it to me if you like\n@aksonov isn't that this PR? https://github.com/aksonov/react-native-router-flux/pull/2761. @aksonov I have a fix ready for this issue, but I can't run 0.28 because replace() broke. I'll continue working on this when that one (#2799) has been fixed. Unfortunately I don't have time to work on fixing that issue right now.. Beta 27 and 28 are crashing for me with the aforementioned error.\nBeta 26 is working.. ",
    "darrencruse": "I noticed the issue about the current RNRF not being up to date with the latest react-navigation v3, as well as this issue about needing contributors, and I also noticed react-navigation issues about needing contributors, and also wanting to add a simpler api.\nMy question: has there ever been talk of teaming up and merging the two libraries?\n. I've been using react-navigation a bit but was finding it a little confusing for more complex needs.\nI'd not looked at RNRF I do like the look of it - it seems to address what I wasn't liking about react-navigation which is partly that it just doesn't feel very easy doesn't feel very \"react like\".\nI am using react-navigation v3 though on a greenfield project for a client that won't go live for almost a year so I don't see us even considering using RNRF without it supporting v3.\nSo two questions:\na.  How long has it typically taken RNRF to support a new version of react-navigation?\nb.  (the most interesting question to me):  Has there been any discussion of the react-navigation and RNRF projects merging and making RNRF part of react-navigation?\n(even if react-navigation feels their approach is super super flexible I could imagine the RNRF way being there for newbies or for simple needs and their current way being more an advanced option). ",
    "joshloo": "Hi everyone, \nSuppose I have a page before tabbar. Something like this:\n<Router createReducer={reducerCreate} getSceneStyle={getSceneStyle}>\n                <Scene key=\"modal\" component={Modal} >\n                    <Scene key=\"root\" hideNavBar hideTabBar>\n                        <Scene key=\"LoginPage\" component={LoginPage} initial/>\n                        <Scene key=\"tabbar\" component={NavigationDrawer}>\n                            <Scene key=\"main\" tabs tabBarStyle={styles.tabBarStyle}\n                                tabBarSelectedItemStyle={styles.tabBarSelectedItemStyle}>\n                                <Scene key=\"tab1\" initial title=\"Dashboard\" icon={TabIcon}>\nHow should I pass data from Login Page to tab1? \n. ",
    "corbt": "I have this same question: is there a way to navigate directly to a specific route in a sub-router? I can only seem to navigate to routes at the same level as the currently active route.\n. ",
    "deresegetachew": "Can any body please tell us how they solved it ?\n. ",
    "joshbedo": "Having same issue and with ExNavigator i can't even use this library.\n. @aksonov is their still a BEFORE_ROUTER_ROUTE event that gets called in 3.0?\n. Awesome, downgrading to 2.3.1 solved my problem! By default npm downloads the alpha version.\n. Noticing the same issue on iOS.\n. ",
    "anupkale1984": "I was able to resolve it with. Development server restart as mention on this post\nhttps://www.npmjs.com/package/babel-preset-react-native-stage-0\n. ",
    "iZaL": "I just read react-native-tabs api and it seems that that the option to pass styles down to tabs is already there, iconStyle prop does exactly the same thing what this PR does, so this PR is obsolete .. \n. confirmed\n. you are right ! it is working ! \n. ok, for some reason, the code is not indented properly, sorry for that\n. V2.3.7 doesn't fix the bug\n. Yes, Jump + Push works. would be cool to have in the one action though ..\n. ",
    "JonasJonny": "+1\n. ",
    "diegorodriguesvieira": "how can I get onEnter on 3.x?. I have had to downgrade to get it working again:\n\"react\": \"16.0.0-alpha.3\"\n\"react-native\": \"v0.43.0-rc.3\"\n\"react-test-renderer\": \"16.0.0-alpha.3\". @itswaze I'm using FlatList...\nMy package.json\nhttp://paste.ubuntu.com/24321269/. Has the problem been solved in version 0.44 of react-native?\nI updated and it works ...\nMy current packages:\n\"dependencies\": {\n    \"react\": \"16.0.0-alpha.6\",\n    \"react-native\": \"0.44.0\",\n    \"react-native-router-flux\": \"^3.38.0\",\n  },\n  \"devDependencies\": {\n    \"babel-jest\": \"20.0.0\",\n    \"babel-preset-react-native\": \"1.9.1\",\n    \"jest\": \"20.0.0\",\n    \"react-test-renderer\": \"16.0.0-alpha.6\"\n  },\nSomething related to https://github.com/facebook/react-native/commit/a2cfea1934ab3682b2597a53de0b2b00a319832f ?. +1. @iiitmanikanta  from 3.37 to 3.38?. +1. +1. @sporteman use this workaround:\n\"react\": \"16.0.0-alpha.6\",\n    \"react-addons-pure-render-mixin\": \"15.5.2\",\n    \"react-native\": \"0.43.3\",\n    \"react-native-router-flux\": \"3.38.0\",\n    \"react-static-container\": \"^1.0.1\",. +1. @jpca999 now I'm using react-native 0.44 and the error still happens. It seems to me that this project is not being maintained, I am now using react-navigation.... +1. @aksonov Do you have idea how to fix this error?. ",
    "gyson": "Just checked with v2.0.4 and it's fixed now :)\nGreat work! @MITDelian , @aksonov \n. ",
    "jamesfzhang": "@MITDelian Thanks, didn't realize that's what \"tab\" meant!\n. @MITDelian I tried using type \"switch\" but I don't want the navbar to appear. I set hideNavBar but it still appears?\njs\n<Router hideNavBar={true} style={styles.container}>\n  <Schema name='default' sceneConfig={Navigator.SceneConfigs.FloatFromRight}/>\n  <Route name='home' component={HomeScreen} initial={true} title='Home' type='replace'/>\n  <Route name='tracks' component={TracksScreen} title='Tracks' type='switch'/>\n  <Route name='artists' component={ArtistsScreen} title='Artists' type='switch'/>\n  <Route name='albums' component={AlbumsScreen} title='Albums' type='switch'/>\n</Router>\n\n. @aksonov That is the top level Router.\n. @aksonov @MITDelian I added some logging to this library's render method to log the value of hideNavBar in between scene transitions. As you can see the value is true after a push route, which is expected but becomes undefined after a switch route.\n\n. Thank you!\n. I said I did use \"modal\" but I guess I was on an older version of this library. Is there a change log? The release page still says 2.0.2 is a pre-release?\n. I was using a fork of 1.0.9 due to this specific behavior I wanted. I just updated to the latest version and implemented that behavior: https://github.com/jamesfzhang/react-native-router-flux/commit/be18b3583fb15be91c213d12f0c8f1e64fda49fa\nEssentially, I wanted \"switch\" behavior for \"push\" routes since I encountered a bug where I couldn't hide the navigation bar for \"switch\" routes. I also added an ability to reset a particular route ad-hoc.\nAnyway, I updated to the latest version by my modal is still full screen. I'll check out your examples and see what the differences are.\n. ",
    "vitalets": "+1 having trouble with unneeded navbar when switch is enabled.\n. ",
    "lesniakania": "Hm, actually I should have phrase this issue in other way.\nI'm using routeReducer from redux-simple-route. But from what I understand, it's not the reducers fault, but it just doesn't get proper state to reduce from.\nI mean, as far as I know redux, all reducers gets every action, and they just choose to which action they want to respond.\nBut I can't see in state in my custom reducer nothing about params. But I see all the arguments I pass to the Action.name(args) methods in the props of the component. The thing is that, I think, it should be in state first.\n. Ok, maybe my assumptions are wrong then.\nI thought it should work like this:\nYour component implements routing with ability to connect your library to either flux or redux.\nIn redux it would mean that routing change is done by dispatching action.\nBut it would mean that I can see state change in any reducer (particularly routeReducer from redux-simple-router.\nBut I'm not seeing state change, so my assumption something is wrong while changing the route with your component. Or maybe I should set your component up in other way, but I already did everything from the README. \nThe example I've shown you is from the non native one, it's just for illustration how I think it should work.\n. Hm, ok, I can do this, but it's not a matter of executing callback, but the fact that route itself should be changed by dispatching action. I understand I can use it regardless of the architecture choice, I'm just saing it's a pitty you don't want to support redux way no more.\n. Ok, I understand now. For me It would be just more consistent with non-native react world.\nI started with using https://github.com/acdlite/redux-router, because their why section convinced me that changing a route is a state change so should be treated the same way as any state change in redux.\nNow they recommend using redux-simple-router (because it's more official).\nI can't wait when there will be more official libraries in this world ; ] I mean more knolegde about how it should be done, less chaos.\nAnyway thanks for conversation.\n. @aksonov thanks for letting me know. I don't have time to check this now, but I will remember definitely for future.\n. @aksonov Thanks for pinging me. Although I'm a little big confused, I see you merged it to your master, but I can't see these changes in the ExRouter.\nWhen I apply these changes manually in my local copy of your library, it works for me, so nice to have this workaround :]\n. Actually, I've already done and waiting for being merged  ; )\nhttps://github.com/aksonov/react-native-router-flux/pull/1088\n. @sarovin done :)\n. looks good to me, who can merge it?\n. ",
    "julipur": "the behaviour I described is in the second route (scene) of the application. hidenavbar(true) shows the < and false hides it. \n. ```\n\n\n\n\n\n      <Route name=\"location\" component={Location} title=\"Property Location\" initial={true} wrapRouter={true} />\n      <Route name=\"quote\" component={Quote} title=\"Quote\"/>\n  </Router>\n\n```\n. Thanks much!\n. ",
    "spacesuitdiver": "It's also kind of janky, often white screen is all I get... any thoughts on what to look for? :\\\n. It's also eating up memory like a bosssss haha. Eeeeee.\n. Sorry for the hasty reply... On further inspection this is caused by not using \"type='switch'\", presumably because it is continually pushing each tab onto the view stack? Anyhoo, next problem is figuring out how to get rid of the NavigationBar with type='switch' is on, the two methods hideNavBar={true} and showNavigationBar={false} don't seem to work.\n. @cridenour thanks so much this works awesome!\n. ",
    "Durgaprasad-Budhwani": "@aksonov  Have you found any solution for this fix ?\n. @cridenour Yes same thing is also reproducible in Example app and to reproduce there, go to register page in example app and click on replace page or go to switch page and click on exit, it will not work.\n. Thank you @iWinkey. It is working like a charm. Closing this issue.\n. I have migrated to RN0.30 version and my application is compatible with react-native-router-flux@3.31.2 version. @chadwilken you can close this issue.\n. ",
    "tonyneel923": "@aksonov Is Actions.currentRouter.currentRoute still the recommended way to do this? I cannot seem to get this to work in 3.32.0\n. @cridenour for the reducer I am correct in understanding it is possible to use altjs for this? If so how would I learn to do this? I do not have any experience with redux so I am having issues understanding how to use alt.\n. const reducerCreate = params=>{\n      const defaultReducer = Reducer(params);\n      console.log(params)\n      return (state, action)=>{\n          ConfigActions.setCurrentRoute(action.scene.name);\n          return defaultReducer(state, action);\n        }\n    }\n@cridenour  Something like this? Thanks for the help. \n. ",
    "mandycandyqt": "@pewh have you found a solution for this?. @designbuildplay did you figure out how to ensure that components unmount on scene transitions?. @manask88 any solution?. @arnsa i found that transitioning with Actions.key({type: 'replace'}) ensures that the component you are transitioning from unmounts.  then when navigating you just need to ensure that on back you override Actions.pop() and transition back to the previous component because replace will remove the scene from the stack. @arnsa for android in the component you are are transitioning to: \n```\ncomponentWillUnmount() {\n    BackAndroid.removeEventListener('hardwareBackPress', this._onBack);\n  }\ncomponentWillMount() {\n    BackAndroid.addEventListener('hardwareBackPress', this._onBack);\n  }\n``\nwhere_onBack()` transitions back to the previous component.  for iOS, you would just override back in the nav bar\nnot sure that this is the best way to approach the issue, but it's the only thing i've tried that's worked. ",
    "BigPun86": "Any progress on this? I am trying to use react-native-side-menu module with this router-flux. Actually it only works until i try to call any Actions. \nMy SideMenu combined with router-flux:\n```\n }\n     isOpen={false} >\n        \n\n\n\n\n\n\n\n   ..........\n   ..........\n\n```\nIt works up to the point when i try calling any actions from the Side Menu, where unfortunately nothing happens. \nA Button in my Side Menu, which should call Home Screen:\n<Button onPress={Actions.home}>\n        <View style={styles.row}>\n             <Image style={styles.itemImage} source={require('../Assets/SideMenu/home_off.png')}/>\n             <Text style={styles.itemText}>Home</Text>\n        </View>\n  </Button>\nAny ideas why Actions won\u00b4t work?\n. Okay nice, it fixed it thanks. Now when i try to put my Side Menu over a nested Router, something like:\n<Router hideNavBar={true}>\n     <Schema ......\n     <Route name=\"launch\" component={Launch}/>\n     <Route name=\"dashboard\" component={Dashboard}/>\n         <SideMenu\n             menu.....>\n                   <Router hideNavBar={false}>\n                        <Route name='home' component={Dashboard} title={Strings('home')} type='replace'\n                               renderTitle={renderTitle}/>\n                        <Route ...../>\n                        <Route ...../>\n                        <Route ...../>\n                    </Router>\n           </SideMenu>\n      <Route ...../>\n      <Route ...../>\n</Router>\nIt throws me this error when i try to call an Action:\n\nAnd the NavigationBar loses it\u00b4s Styling... \n. Worked, thanks!\n. Hey there. This is how i use the Drawer/SideMenu. In my Main Router i setup as usual my routes. Then i have a nested router Dashboard where i need the Drawer/SideMenu\n```\n        \n\n\n\n        <Route name=\"dashboard\" schema=\"dashboard\">\n            <Router hideNavBar={false}>\n                <Route name='home' component={ Routes.Dashboard }  title={translate('dashboard')} type='reset'\n                       renderTitle={renderTitle}/>\n                <Route name=\"chatAndGroups\" component={ Routes.ChatAndGroups } title={translate('myGroups')}\n                       renderTitle={renderTitle} renderLeftButton={renderBackButton}/>\n                <Route name=\"reviews\" component={ Routes.Reviews} title={translate('reviews')}\n                       renderTitle={renderTitle}\n                       renderLeftButton={renderBackButton}/>\n                <Route name=\"weather\" component={ Routes.Weather} title={translate('weather')}\n                       renderTitle={renderTitle}\n                       renderLeftButton={renderBackButton}/>\n            </Router>\n        </Route>\n        <Route name=\"launch\" component={Routes.Launch} initial={true}/>\n        <Route name=\"tutorial\" component={Routes.Tutorial}/>\n\n        <Route name=\"disclaimer\" component={ Routes.Disclaimer} title={translate('disclaimer')}\n               renderTitle={renderTitle}\n               renderLeftButton={renderBackButton}/>\n        <Route name=\"login\" component={ Routes.Login} title={translate('login')} showNavigationBar={false}\n               renderLeftButton={renderBackButton}/>\n        <Route name=\"register\" component={ Routes.Register} title={translate('createAccount')}\n               renderLeftButton={renderBackButton}/>\n    </Router>\n)\n\n}\n```\nIn my Dashboard component i implemented the SideMenu:\n```\nexport default class Dashboard extends Component {\nconstructor(props) {\n    super(props);\n}\nrender() {\nreturn (\n    <SideMenu\n        menu={<Menu />}\n        isOpen={false}\n    >\n        <ContentView/>\n    </SideMenu>\n)\n\n}\n}\n```\n. @mmazzarolo nice example. I tried yours which works for me too even better than mine. But how do you pass the schema to the children? I tried this:\n{React.Children.map(this.props.children, c => React.cloneElement(c, {\n      route: this.props.route,\n      schema: this.props.schema\n    }))}\nThis is what worked to pass the navigationBarStyle, but i am not sure if passing the schema would be nicer...:\n{React.Children.map(this.props.children, c => React.cloneElement(c, {\n      route: this.props.route,\n      navigationBarStyle: this.props.navigationBarStyle\n    }))}\n. Not sure what u mean exactly...But this is how i implemented my Router with SideMenu (react-native-drawer)\n```\n.............................\n\n                <Router\n                    ref=\"router\"\n                    firstRoute={{ \n.......................\nexport default class SideDrawer extends Component {\nconstructor(props) {\n    super(props);\n}\nrender() {\n    var userToken = store.getState().User.token;\n    return (\n        }\n            tapToClose={true}\n            openDrawerOffset={0.2}\n            panCloseMask={0.2}\n            closedDrawerOffset={0}\n            tweenHandler={(ratio) => ({ main: { opacity: (2 - ratio) / 2 } })}\n            disabled={ userToken === '' || userToken === null || userToken === undefined }\n        >\n            {React.Children.map(this.props.children, c => React.cloneElement(c, {\n                route: this.props.route\n            }))}\n        \n    )\n}\n}\n```\nThe main thing is to give your router and sidedrawer a ref and you can than acces the trigger for opening closing from anywhere like this:\nthis.refs.drawer.refs.drawer.open();\n. @davidfloegel do you have Discord? So we could solve it there....\n. my index.android.js\n```\nimport {Router, Route, Schema, Animations, TabBar} from 'react-native-router-flux';\nimport Launch from './App/Routes/Launch';\nvar Test  = React.createClass({\nrender: function () {\n    return (\n       \n\n\n\n    );\n}\n});\n```\nmy index.js in  './App/Routes/Launch' defining my Screen: \n```\nvar React = require('react-native');\nvar {View, Text}  = React;\nclass Launch extends React.Component {\nrender() {\n    return (\n        \nTEST\n\n    );\n}\n}\nmodule.exports = Launch;\n```\n. Upps sorry! Now i fixed the code above. \nError is: route is not defined\n. Works perfect thanks @aksonov \n\n. You need to use your BackAndroid Component:\n```\nrender() {\n    BackAndroid.addEventListener('hardwareBackPress', () => {\n        try {\n            Actions.pop();\n            return true;\n        }\n        catch (err) {\n            ToastAndroid.show(\"Cannot pop. Exiting the app...\", ToastAndroid.SHORT);\n            return true;\n        }\n    });\nreturn (\n        <Router hideNavBar={true}>\n            <Schema name=\"modal\" sceneConfig={Navigator.SceneConfigs.FloatFromBottom}/>\n            <Schema name=\"default\" sceneConfig={Navigator.SceneConfigs.FloatFromBottomAndroid}\n\n.....\n.....\n```\n. componentWillMount = () => {\n  BackAndroid.addEventListener('hardwareBackPress', () => { ToastAndroid.show(\"message\",ToastAndroid.SHORT ); setTimeout(()=> { Actions.pop(); } , 1000) );\n};. @thanghach I think that should do it \ud83d\ude0b. +1\n. ",
    "rturk": "Hi @BigPun86 can you share your code? I'm trying to build similar logic with a nested tabbar. @sibeliusseraphini\n. If I add a style as suggested above the top of screen will also show a border\n<Router footer={TabBar} showNavigationBar={false} style={{backgroundColor:'white', borderTopWidth:1, borderTopColor: '#00bb00'}} >\n\n. @aksonov thanks. That's my guess. As @thachp commented style is fixed to 'white. I think we need a more robust way to augment style the tabbar using props. Similar to your code in the react-native-tabs.\n. @zxcpoiu tks\n. Thanks for sharing this. I'm also experiencing this.. It was quite tricky to debug..\n. @sibeliusseraphini this seems to work \nhttps://github.com/codefoundries/UniversalRelayBoilerplate/blob/master/app/app.js\n. @willmcneilly can you test this using the latest stable RN & RNRF? RN0.26.2 & RNRF 3.26.X?\n. I've manually removed 'transparent' form DefaultRenderer.js. I can't see any difference in my app\n. @sibeliusseraphini FYI\n. @aacotroneo well it is quite a hack.. Have you tested thoroughly and do you know why it works? \n. Can someone help/point to the potential source of this issue? I'll be happy to work in a PR.\n. I'm still getting this. As soon as the apps loads I load the app state from the disk, if the user is already logged I'll skip login view and take him directly to the tabbar.\n[info][tid:com.facebook.React.JavaScript] 'ERROR:', { [TypeError: _reactNativeRouterFlux.Actions.tabbar is not a function. (In '_reactNativeRouterFlux.Actions.tabbar()', '_reactNativeRouterFlux.Actions.tabbar' is undefined)]\n. Looks like this was closed with the latest commit (https://github.com/aksonov/react-native-router-flux/commit/5373ba2d4e653bbc9e952449a4be11573594687a). I'll run some additional tests.\n. @aksonov That's correct I'm trying to call Actions before router is created. I'm closing this since this is not related to RNRF. \nI've fixed this using F8 code as benchmark (link below as reference). This is much better design. I'm only rendering the App after redux was fully loaded. Surprisingly waiting for the redux to load during initial app setup actually makes it faster since we only need to render it one time.\nhttps://github.com/fbsamples/f8app/blob/b5df451259897d1838933f01ad4596784325c2ad/js/setup.js#L61\n. @aksonov thank you! This is great. \n. In case you're looking for the address https://gitter.im/aksonov/react-native-router-flux\n. My two cents..\n@zelphir what triggers isAuthenticated? Looks like you're using this to change the launch screen of your app? If that's the case Keep in mind that while the app is loading you'll might hit a state where redux was not fully loaded/processed/parsed and your app already started to render.\nAlso RN25> apps are much faster after improvements in the code, so there is a change the apps will render much faster..\nIf that's the case: Check this\nhttps://github.com/fbsamples/f8app/blob/master/js/F8App.js#L80\nhttps://github.com/fbsamples/f8app/blob/master/js/setup.js#L61\nWhat's interesting in the F8 App is that they only start render when they have everything in place for the app to start working. \n. IMO this is out of scope of this project. This is a navigation stack. \nAlso adding this new feature can significantly disrupt onPress calls from downstream components or can introduce delays in complex views; for example views using ListView\nYou can accomplish this by simply adding onPress in the top view of each of your pages. \n. https://github.com/aksonov/react-native-router-flux/issues/515\n. Why do you need this? I don't know about your app but storing dimensions in redux doesn't seems to be best practice.\n. @SudoPlz can you detail your use case, why you need dimensions?\nWe can explore it at Gitter. I have a fairly complex App and I've managed to make it work only using flexbox, padding, and margin in the root View of each component\nOverall IMO this package is a navigation stack. Adding rendering, view, features will diverge from it's core purpose\n. @aksonov @SudoPlz \nI'm using my own NavBar so have more control over he UI. Also trying to follow redux best practices, this means that I only store app data and app state in the redux store. \nWithin my ownNavBar I'm listening to app state changes. If the app rotates I simply update the internal state of the NavBar height. Currently I only have two heights one for portrait one for landscape.\nAlso I wouldn't recommend using top for layout. Instead I'm using a View with a padding as wrapper for my content. React Native Virtual DOM is smart and will convert this to a single Native Object. The benefit of this is that different than top this will look much better for views that are rotated \n<View style={paddingTop:navBarHeight}>\n ...content\n</View>\n. @SudoPlz I'm OOTO with no access to my code. I'll share something mid next week.\n. https://github.com/aksonov/react-native-router-flux/issues/515\n. @cmouysset can you try again using the latest master? FYI (https://github.com/aksonov/react-native-router-flux/commit/900ba4299faff2099b91e8002bf2256892cee652)\n. This nice, however goes back to other discussions that we need to improve tests\n. https://github.com/aksonov/react-native-router-flux/issues/525\n. Not sure if I understand your question. My two cents...\nI can't understand your code above. Why you're wrapping the drawer menu within the navigation logic? \nThis is what works for me\n  \nAlso check this\nhttps://github.com/aksonov/react-native-router-flux/blob/cad94673dd872669d49ec95895bd775592a13dec/Example/components/NavigationDrawer.js\n. Considering the NavigationExperimental bugs (FYI https://github.com/aksonov/react-native-router-flux/issues/557) I'm not sure if it makes sense support RN0.25. Should we skip .25 and move to RN0.26?\nRN26 (https://github.com/facebook/react-native/releases/tag/v0.26.0-rc) fixed some NavigatorExperimental bugs, such as https://github.com/facebook/react-native/commit/81c62c5f41da2e34f0c0e19ca38843918c23c32b\n. @aksonov Looking for your thoughts. Let's skip RN.25 and invest all devo resources to RN0.26?\n. @sylvainbaronnet can you describe your App/Tests? Are you, for example, using Tabs? \n. Closing this. RN v26 is out and is supported by latest RNRF series v3.26.x\n. My two cents: RNRF manages the App navigation stack, just like any other framework it will not help with when and how you'll render and show stuff . For your use case you could use a app state (via redux for example) to decide when to show or not the Video.\nMy question is: Do you really need to preload a video? If you need to preload a VIdeo you shouldn't be using it in a MobileApp.. Think about Facebook. FB App shows millions of videos per hour, none of them is pre-loaded.\n. @jamesone This is interesting. Did you tested this with RN25 & RN26? As far as I know RN24 Navigation bugs are related to RN NavigationExperimental itself, not with RNRF. \n. @sibeliusseraphini this makes sense. My App uses both RNRF and Expoent's react-native-action-sheet with no issues. Benefit of this setup is that is compatible with Both IOS and Android.\n@wootwoot1234 PR's are still welcome, although I'm not sure if this will be a duplicated effort considering that Expoentjs/react-native-action-sheet works with RNRF\n. @dominicmh \nFYI https://github.com/aksonov/react-native-router-flux/issues/525\nConsidering https://github.com/aksonov/react-native-router-flux/issues/636 and that RN26 will be released within the next couple of days please close this issue\n. @dominicmh paste more details of your code in a Gist. \n. @dominicmh My Two cents\nlooks like your app is rendering before Actions is loaded. In my case my app needs to load a lot of stuff from asyncStorage before boot so I was facing similar problems.\nThis can help:\nhttps://github.com/fbsamples/f8app/blob/master/js/setup.js#L60\n. @gmchaturvedi1 \nIn General  ...super expression must be either null.. means that one ore more of your external dependencies are using legacy React import due to breaking changes in RN0.26\n. @tinygipxy I guess that your question is beyond the scope of this framework. Looks like you want to increase the control of your app state based on certain conditions, in your example authentication.\nYou can achieve this using redux. For example only a certain redux state will render a particular view. Check the example folder.\nAlso this can help you\nhttps://github.com/aksonov/react-native-router-flux/issues/555\nhttps://github.com/fbsamples/f8app/blob/master/js/F8App.js#L80\nhttps://github.com/fbsamples/f8app/blob/master/js/setup.js#L61\n. @tinygipxy can you please close this?\n. @rseemann I agree with @joenoon this is an nice feature, however we need a robust code. Any app that uses Sagas or handle push notifications can easily have the index corrupted. \n. @ThaJay I'm afraid your suggestion would not work in complex apps, and would create performance issues.\n. Kill NavigationExperimental Containers is only applicable to RN0.27-rc, are you sure you're using RNv0.26.1?\n. Hi @esutton If I've understood correctly you've kind of already answered your own question. You need to connect onRight to a function or callback that will handle your save to database logic. You probably need another framework like Redux to handle your overall App State.\n. @xiaopow Are you using a KeyboardWrappper? \n. @xiaopow Keyboard is a component managed by the OS. In your case handled by IOS, hence it's rendered on top of your app. It's impossible to slide a functional keyboard. \nHave you tried to blur your text input component as soon you start the slide? This will hide the keyboard before sliding, might even be a more interesting User Experience.\n. Hi @jamesone can you elaborate your question? The issue title title mentions unmount however your explanation ask for componentWillMount to run. Run where? In tab Y, Z, both tabs? \ncomponentWillMount, componentDidUpdate are core React components they play a significant role keeping the App performance. Not sure if overriding the existing logic is the best approach. \nThere are multiple options than you can use to control how a component will and how be rendered. One of them is redux. You can connect tabbar event changes to your redux logic and dispatch actions that change one or more tab components.\n. Hi @Elyx0 Can you elaborate why you need this? Looks like that your magicHiddenTab can easily be placed as a sibling to tabbar and by default it will be hidden if you use switch. Or for a more sophisticated design you'll be able to hide it using redux. \nI agree with @ms88privat this old behaviour is more like a bug that could lead to incongruent scenarios where it will be hard to define what shows or not a tab.\n. @Cordazar what you're describing can't be achieved with nested scenes?\n. React native v0.25.1 is not supported please refer to https://github.com/aksonov/react-native-router-flux/issues/636. \nYou need to upgrade to RN26 in order to use RNRF 3.26.x series \n. @texas697 please close this, unless you think further clarification is required.\n. @cridenour makes sense. Actually there are only a few cases that worked, most with tons of hacks\n. @joenoon I'll try to test this week\n. @andoru I haven't tested it, so please correct me if I'm wrong this is a breaking change?\n. @eranbes can you please include more details of your code? The \"startup\" scene has nested Scenes?\n. HI @eranbes pasting just snippets of code don't help. Can you please provide more details of your code? Please feel free to use a GIST.\n. Hi @samdturner can you elaborate your use case? Can't you use another logic to interface between components? Ie: Redux?\n. @samdturner you can always implement your own NavBar. My Apps use own navbars in order case similar to yours.\nThis is a redacted version of what I'm using:\nhttps://gist.github.com/rturk/a52321593dd9264ddd2ccbd43eb489b7\n. @esutton this gist is just a pice of my code. Probably I've forgot to paste something.\n. @r0b1n fantastic. However I would really like to see tests and ideally working examples before declaring relay supported. \n. @diogoviannaaraujo can you elaborate? Can you please paste all your code or link to a gist. Snipets of code don't help much.\n. What happens if you go Login from 'ItemProfile' ?\n. @diogoviannaaraujo I can't reproduce this. You can always re-create your own navbar and implement it inside the scene view\nhttps://gist.github.com/rturk/a52321593dd9264ddd2ccbd43eb489b7\n. Hi @bang88 are you also plaining to maintain this? My sense is that this will break quite often given the number of changes that React and RNRF will experience in the upcoming releases.\n. @joenoon makes sense. Worse case scenario this will only affect folks using vscode, and it will be always another tool to validade the code. \n. @babbarankit Fantastic! Gitter is also a great place to ask questions.\n https://gitter.im/aksonov/react-native-router-flux\n. According to RN release notes there are lot's of changes related to navigation, including breaking\nBreaking changes related to Navigation\n- Kill NavigationLegacyNavigator (ef44781) - @hedgerwang\n- Kill NavigationExperimental Containers (14eb427) - @ericvicenti\n- Kill NavigationView (c3714d7) - @hedgerwang\nNew features\n- Animated: Implement toJSON method of Animated (17f0807) - @wusuopu\n- Expose a new prop transition for scene renderer. (55c3086) - @hedgerwang\nBug Fixes\n- Fix propType check for NavigationCard. (b1cd1cb) - @hedgerwang\n- NavigationExperimental: didFocus event should fired after transition finishes. (8975bb8) - @hedgerwang\n- Fix a bug where NavigationPropTypes.SceneRenderer was a plain object (0e997c6) - @joenoon\nIOS specific\n- NavigatorIOS: Expose interactivePopGestureEnabled property (4d2c72b) - @rigdern\n. @aksonov agreed. I've spent a few hours reading v0.27 and v0.28 navigator code. There are several breaking changes related to the same components. Makes no sense to invest time for two consecutive breaking changes that are only a few weeks apart. Also v0.28 it's already in RC so we can already start coding for it.\n. https://github.com/aksonov/react-native-router-flux/blob/master/docs/API_CONFIGURATION.md\n. Hi @mickeyinfoshan please be more specific. Ideally share a screenshot. Overall please explain what do you mean by block?\n. @ajoshdee This package uses a fork for Nagiator Experimental, please check docs.\n. Hi @ArEnSc  Are you sure that this is related to RNRF package? If you're having issues with Listview please open issue at React Native, otherwise please close this.\nAlso is not recommended to use contentOffset, or contentInset to layout your component, use styles, marging, padding, etc..\nMy two cents:\nPlease react RN28 release notes there are some breaking changes related to Flexbox:\nhttps://github.com/facebook/react-native/releases/tag/v0.28.0\n. @GeekWeier you should really consider using a newer RN version. RN25 & RN26 are not properly supported.\n. @asafratzon Can you initiate the packager with nmp start also can you run this app in the simulator?\n. Hi @AshokICreate your project should work if you upgrade RN. If you don't have any further questions please close this.\n. Is your font installed in Android? (including all formats Bold/Italic) I had a similar issue with android. For example IOS will default to the same family font if bold or italic are not installed, however Android will default to a System font.\n. @andrispraulitis do you have any further comments? can you please close this?\n. @ms88privat I have a global wrapper that completely un-mounts my hole app when the user logs out, including redux state cleanup.\nI like it since its a simple and elegant solution, with extra benefit that its smart to release used resources. \nThe F8 App was my inspiration:\nhttps://github.com/fbsamples/f8app/blob/master/js/F8App.js#L80\n. @ms88privat in this case I recommend you to use redux (or other state management framework of your preference). \nWhat I don't recommend is use two (or more!) routers.. this can be inefficient (from a memory and CPU perspective)..\n. @pewh this is a little old but should give you an ideia how to implement a custom Icon. In my case I'm simply changing colors, but you should be able to connect icons to your favor redux tool.\nhttps://gist.github.com/rturk/69568c504583439a1f5e39b0f87fc81d\n. @andyschwob can you simply migrate to the latest stable react 15.2?\n. Hi @charlesluo2014 not sure what do you mean. In order to implement Authorization in any App you need to build your own custom logic, handle user input, serverside integration, etc.\n. Hi @charlesluo2014 I don't see any problem on the code above, it's simple, clean and clearly states that only if some is logged a particular scene will be rendered..  I have multiple auth blocks like the one you described above in my apps.\nAs always PR's are always welcome.\nIf you don't have any further questions, can you please close this?\n. @danieldunderfelt please note that RNRF don't use React Native core navigation anymore. Due to the increasing number of breaking changes. RNRF use a form https://github.com/aksonov/react-native-experimental-navigation please look at package.json\n. @lifehackett RNRF already works with RN29 (please check comment above), well at least my app works.\n. @haabnaseem @kaenry @sithobog Check this code. It's from Facebook code. It's a simple elegant approach. If the user is not logged it will show login screen, otherwise when authorized the full app. Works really well.\nhttps://github.com/fbsamples/f8app/blob/master/js/F8App.js#L80\n. Hi @enapupe PRs are always welcomed. This is a public project and as such you can help the team with new improved docs.\n. @ms88privat this is interesting. Have you tested this with nested scenes?\n. Hi @alsh76 looks like @Dean177 comments answered your question. If you don't have any other comments can you please close this?\n. @vykumar pop(), by definition, will bring back the previous scene with all the context that it was previously set. \nWhy can't you just Go to Actions.MyDesiredScene({withMyNewProps...}); .?\n. Hi @vairabagni looks like this is a general React/React native question. Are you sure this question is related to RNRF? Otherwise can you please close this so we can keep the issues thread concise and clean?\n. @digitaldavenyc this strategy from F8 App works pretty well for me: \nhttps://github.com/fbsamples/f8app/blob/master/js/F8App.js#L80\nI'm using redux-persit. I'm my case I wait (actually show a loading view) until the real redux is loaded from disk. \n. There is an example describing drawer menu usage\nhttps://github.com/aksonov/react-native-router-flux/blob/b11a84962e4e4d9265770382b8859d21d1a12ea0/Example/components/NavigationDrawer.js\n. @proProbe \nI've noticed that you're using RelayRenderer + Redux in the same code are you using Relay?\n. Works for me. What RN version are you using?\n. @dmhood I've glanced over your gist code, it looks quite different from the core code, specially considering that you're re-creating the tabs logic: \n<Button onPress={() => { drawer.close(); Actions.tab1(); }}>Switch to tab1</Button>\nWhy you need this? Can't you just use core tab logic and just redesign the UI part?\n. FYI this works for me in production Apps\nPlease note the *   tabs={true}*  in the Tabs Scene, wrapped inside drawer menu\n```\nexport default Actions.create(\n  \n\n\n\n\n      <Scene\n        key=\"mynews\"\n        title={Local.myFeed.title}\n        iconObj={Icons.user}\n        icon={TabIcon}\n        hideNavBar={true}\n        component={NewsFeedUser}\n        initial={false}\n      />\n\n      <Scene\n        key=\"settings\"\n        title={Local.settings.title}\n        iconObj={Icons.cog}\n        icon={TabIcon}\n        hideNavBar={true}\n        component={Settings}\n        initial={false}\n      />\n\n    </Scene>\n  </Scene>\n\n  <Scene\n    key=\"cart\"\n    hideNavBar={true}\n    component={Cart} title=\"\"\n  />\n\n```\n. @tclain nothing should prevent you to use redux @connect, can you share your code in a Gist? \nFor best results post this in Stack Overflow.\n. Do you really need to use Dimensions here? Looks like this will break when the device screen rotate.\n. ",
    "artem-russkikh": "+1\n. +1\n. ",
    "GarrettSmith": "It took me awhile but I got to the bottom of this.\nMy top level render looks like this.\n<Router>\n  <Route name=\"without-drawer\"/>\n  <Route name=\"main\">\n   <Drawer>\n      <Router>\n        <Route name=\"with-drawer-a\"/>\n        <Route name=\"with-drawer-b\"/>\n      </Router>\n    </Drawer>\n  </Route>\n</Router>\nMy drawer's render function looks like this.\n<DrawerLayout>\n   {React.Children.map(children, c => React.cloneElement(c, {route: this.props.route}))}\n</DrawerLayout>\n. ",
    "oviava": "@BigPun86  do you have a repo for this ? How does the navigator know to render your scene in  ?!\n. ",
    "blocka": "@mmazzarolo\nI've tried setting up your example. When I call Actions.main (the route with the drawer) I get undefined is not a function this._navBar.immediatelyRefresh()\n. Would either of you be able to provide an example of how to do this?\n. ",
    "davidfloegel": "Sorry for bringing this up again!\nIf I wrap a Router in the  I can't seem to access the context anymore and therefore not open/close the sidebar.\nAny ideas? @mmazzarolo \n. Hmm yeah that is strange you see..\nMy Main Component:\nclass App extends Component {\n    render() {\n        return (\n            <Router key='mainrouter' name='router' sceneStyle={ styles.router }>\n                <SideDrawer key='drawer' ref='drawer' router={ this.refs.router }>\n                    <Router ref='router' key='root' duration={ 100 }>\n                        <Scene key='home' initial={ true } component={ Home } hideNavBar={ true } />\n                    </Router>\n                </SideDrawer>\n            </Router>\n        );\n    }\n}\nMy SideDrawer:\nexport default class SideDrawer extends Component {\n  render () {\n    return (\n      <Drawer\n        ref='drawer'\n        type={'overlay'}\n        content={<ControlPanel />}\n        openDrawerOffset={ (viewport) => viewport.width - 250 }\n        tweenDuration={ 100 }\n        tapToClose={ true } >\n        {React.Children.map(this.props.children, c => React.cloneElement(c, {\n          route: this.props.route\n        }))}\n      </Drawer>\n    )\n  }\n};\nAnd my 'home' component where I try to open and close the drawer:\nrender() {\n   return (\n        <TouchableOpacity onPress={ () => this.refs.drawer.open() }>\n              <Text>Open Drawer</Text>\n        </TouchableOpacity>\n   )\n}\nBut if I click the TouchableOpacity  I get a cannot read property open of undefined.\n(I have tried this.res.drawer.refs.drawer.open as well - but I thought it was a typo?)\nAny ideas?\n. Just got an account! davidfloegel is my username!\n. Has there been any solution to this yet? Or any more ideas?\n. Ok thanks!\nI will see if I have some spare time tonight then I can try it!\n. ",
    "rajeshkos": "Hi,\nI have used react-native-router-flux and react-native-drawer together. Can anybody help me to show drawer only for dashboard screen not for login. . ",
    "RedManBrasil": "There is some way to use react-native-router-flux and react-native-side-menu together, using the latest version of both? Seems like all these answers are outdated.\nThis is my code. It works at the main Scene, but as you go to the others it everything goes blank (the side bar actually still works at that part).\n```\nconst RouterComponent = () => {\nreturn (\n    }>\n      \n\n\n\n\n\n\n\n  );\n};\n``. It worked! But this feels like a work around, I remember that wrappingScene`'s weren't necessary.\nThis code, for example, works perfectly\n\n. ",
    "BasitAli": "Sure, I'll keep an eye on this. Thanks.\n. ",
    "iclems": "Any update on a better way to do this? . That's a react-native-gifted-chat . ",
    "delta1": "hi @lesniakania see the PR above for a workaround\n. @lesniakania Looks like a regression from this recent commit: https://github.com/aksonov/react-native-router-flux/commit/3025c02a341d7e09f8c35ac929d4a343302d63fe \n@aksonov did you commit from an old version?\n. Confirming it's fixed, was just about to send a PR. Thanks @aksonov !\n. ",
    "vugman": "I've tried that... all I get is the following error:\n\n. Here's my code:\nRightButton.js\n....\nvar RightButton = React.createClass({\n  render: function() {\n      return (\n          <View stlye={styles.rightButton}>\n              <Button style={{color: 'green'}}>\n                 +\n              </Button>\n          </View>\n      );\n  }\n....\n})\nApp.js\n....\nvar RightButton = require('./components/RightButton');\n....\n<Route name=\"something\" component={Something} renderRightButton={RightButton} wrapRouter={false} title={'Requests'} hideNavBar={false}/>\n....\n})\nWhat am I missing?\n. Ohhh thanks @ippy04 thanks for the help!\n. No I don't, I think this happens when there are multiple screens in the stack that listen to keyboard events (i.e. TextInput component)\n. ",
    "ippy04": "@vugman I believe you're passing in a RN component instead of a function that creates a RN component, i.e. sbould be something like this: \n```\nvar createRightButton = function() {\n      return (\n          \n\n                 +\n              \n\n      );\n\n```\n. just upgraded and confirmed that setting initial={true} works. Thanks!\n. Am seeing this also with 2 tabs, each with a ListView...\n(downgrading to 0.35.0 fixes the issue)\n. ",
    "getnashty": "what happened to this?. +1 looking for updates. +1 on this - @ddolheguy 's solution solves from the bottom - but doesn't address the issue that using sceneConfig seems to do nothing.... @sainthardaway - I'm not able to make this work. it seems as though its completely ignored.. this is a huge problem, we should be able to control edgeHitWidth. Just came here to post this same thing! +1. ",
    "axelander": "Ok, so you set the paddingTop property to push down the content? I want to get the same result as when adding a header to the router. \n. Hm, still doesn't work.\nThe part of my router that I'm having trouble with looks like this:\njavascript\n<Route name=\"tabbar\">\n  <Router footer={TabBar} showNavigationBar={false}>\n    <Route name=\"tab_menu\" schema=\"tab\" title=\"Sections\" style={styles.route}>\n      <Router>\n        <Route name=\"menu\" schema=\"firstView\" component={MenuView} />\n        <Route name=\"page\" schema=\"secondView\" component={PageView} />\n        <Route name=\"article\" schema=\"secondView\" component={ArticleView} />\n      </Router>\n    </Route>\n  </Router>\n</Route>\nSo, when switching to the tab tab_menu the menu route is the default route in that tab.\nWhen dispatching an action from MenuView to go to the page route like this:\nActions.page({ title: 'Sports' })\nI get \"Sections\" as the route.props.title in my custom title.\nIf I remove the renderTitle prop from my scheme (also tried adding directly to the routes with the same result) I get \"Sport\" as the title. So it works when using the default title behaviour.\n. Seems like route is not passed to renderTitle callback. I created a PR for ex-navigator to fix this.\nhttps://github.com/exponentjs/ex-navigator/pull/97\n. When passing in the route like in my PR you get an ExRouteAdapter as the first argument in renderTitle. When removing it, you get a ExNavigator. So I guess the .bind part is not working as expected? Do you have any ideas how this could be fixed within RNRF? \n. So, I found the problem with the .bind and created a PR.\n. I'm quite positive this is a bug but I'm not sure where to fix it.\nI found that in the constructor of ExRouteAdapter, on this line, title is set correct for the ExRouteAdapter instance but not the Route. Updating my PR to show you.\nI really have no idea how this should be solved, you think you could help me?\n. @cridenour Thank you! \ud83d\udc4d \n. If route should be passed as the first argument to renderTitle then this update should be correct.\n. Feels like I'm correcting something that should be handled earlier on in some other module, but this solves the issue with getting the parent route title.\n. yes but this.title is on the ExRouteAdapter but the renderTitle callback is bound to this.route.\n. ",
    "navels": "FYI I think the correct solution is to tell the navigator about the padding via sceneStyle.  You can just add this to your route's schema:\nsceneStyle={{paddingTop: Navigator.NavigationBar.Styles.General.NavBarHeight}}\nEdit: per my comment below, this doesn't work.\n. It uses exNavigator, which extends Navigator.  ~~The sceneStyle works for me except in the case of a ScrollView, where I had to add paddingTop to the ScrollView's style.~~\n~~Ugh, never mind, sceneStyle has no impact.~~\nFinally got this working by putting the sceneStyle property on the Router.\n. Ditto\n. ",
    "CreepGin": "@navels Thanks! I got it working for my scenario using Navigator.NavigationBar.Styles.General.TotalNavHeight\n. ",
    "helsont": "@CreepGin's method worked best for me:\nTLDR: On your Router, use the style \nsceneStyle={{paddingTop: Navigator.NavigationBar.Styles.General.TotalNavHeight}}\n. Sure, here's my code:\nconst getSettingsTab = (topPadding) => {\n  const opts = {\n    key: 'settings',\n    title: 'More',\n    icon: { TabIcon }\n  };\n  return (\n    <Scene {...opts}>\n      <Scene\n        key=\"tab2_1\"\n        title=\"Settings\"\n        component={SettingsContainer}\n        sceneStyle={{ paddingTop: topPadding }}/>\n    </Scene>\n  );\n};\n//...\nrender() {\n    const topPadding = Platform.OS === 'ios' ? IOS_TOP_PADDING : ANDROID_TOP_PADDING;\n    const settingsTab = getSettingsTab(topPadding);\n    // abbreviated scene initialization\n    return (\n      <RouterWithRedux>\n        <Scene key=\"tabbar\"\n          tabs={true}\n          type=\"reset\">\n          { settingsTab }\n        </Scene>\n      </RouterWithRedux>\n    );\n  }\n\nIf I use the key value pairs in opts directly in the JSX, it works as expected.\n. Didn't catch that. Thanks!\n. ",
    "simman": "@helsont ,Can be used in a root sceneStyle?  I use it in the Scene key=\"root\" does not work, but I use in Scene key=\"WebView\", it can work .\n```\nconst Scenes = Actions.create(\n  \n\n  <Scene key=\"Launch\" component={Launch} title=\"\" hideNavBar={true} initial={true}/>\n  <Scene key=\"WebView\" component={TNWebView} title=\"\" type=\"push\" hideNavBar={false} sceneStyle={{paddingTop: Navigator.NavigationBar.Styles.General.TotalNavHeight}}/>\n\n```\n. ",
    "joewood": "The Navigator.NavigationBar.Styles.General.TotalNavHeight value doesn't seem to be quite large enough to offset the navigationbar. Using the inspector, the NavBar is 64px, but the value of TotalNavHeight is 56. \nI've never understood why the NavBar's child navigation card isn't rendered in the body of the Navigation component so this offset isn't necessary. Why not make it the default?\n. Maybe worth testing with the release candidate of 0.28 - which has just been labeled. This is due to be final on June 20th\n. ",
    "DVassilev": "What about the tabbar at the bottom? That also overlays content.\n. The navbar is also not changing for me despite using navigationBarStyle.\n. @cridenour I have this issue on OS X and attempted to as suggested above but it has not changed the filename and fails to fix this issue. Any work around?\n. ",
    "Cody-G-G": "encountering the same as @joewood. So i guess I have to hardcode the value, not ideal.... Maybe also add the missing paddingLeft: 6, in barLeftButtonText, since that's also an inconsistency?. This is great, been looking into how I can get this done! Hoping for a merge soon \ud83d\udc4d . ",
    "yccphp": "@lrettig This is what tools\uff1f\n. @jp928 thank you. ",
    "jp928": "@yccphp \njust use cmd+d in the simulator and choose inspect from the menu. ",
    "slender9168": "@helsont  Thanks, your solution worked for me ( tested on android lenovo phone ). ",
    "Amurmurmur": "@aksonov But what if you wanted to hide the navbar on scroll?\nIf sceneStyle={{paddingTop: navbarheight}} is set, listview elements will not reach the top of the screen before they become invisible. \nHow is it possible to fix that issue, to sort of make listview stick to the navbar, whenever it disappears the listview takes it's place and moves to the top.\nKind like a search bar in the iOS contacts, when you hit the search it increases in size, when you finished typing, the searchbar gets back to the original size and listview's top edge is sticked to them bottom of the searchbar.\nThanks a lot in advance, for any help.. well just set paddingTop -54 on the child scenes whenever you dont have a navbar and you dont need padding top. Has anyone ever tried to accomplish it ? Its sort of similar to icon badges.. I've thought about a workaround, basically I think one of the ways, is to connect tabbar to the store, and load image from the store when state changes after an api request has been completed successfully. . Well doesnt matter, if you connect the tabbar properly, it should receive all the props anyway that you map in mapStateToProps. Let me know if you get it working, I'll try it as soon as I finish other components.. Sweet, if you could provide any example code where tabicon is replaced with a badge number or an image, just to make double sure, we are thinking about the same approach.\nThank you very much in advance! . @iossocket\nYes, just create a custom TabIcon component and pass it to the scene like so:\nimport MyCustomTabIconComponent from './TabIcon'\n<Scene\ntitle=\"MyScene\"\nname=\"MyScene\"\nkey=\"MyScene\"\nicon={MyCustomTabIconComponent} />\nIn your TabIcon, connect it to the store like so:\n```\nimport { connect } from 'react-redux'\nfunction mapStateToProps(state, props) {\n    return {\n        profilePicture: state.yourProfilePic,\n    }\n}\nclass MyCustomTabIconComponent extends Component {\n  render() {\n   return(\n\n\n\n   )\n  }\n}\nexport default connect(mapStateToProps)(MyCustomTabIconComponent);\n```\nHope this helps \ud83d\udc4d . @iossocket Glad to help, I guess we can close it \ud83d\udc4d . you can either pass hideNavBar to the Scene in the root component where you define all Scenes.\nLike so:\n<Scene key=\"Login\" initial hideNavBar component={LoginPage} title=\"Login\" />\n<Scene key=\"WelcomeScreen\" component={WelcomeContainer} title=\"Welcome\" />\nOr you can hide the navbar on componentDidMount() in your welcomescreen container like so:\nimport {Actions} from 'react-native-router-flux'\ncomponentDidMount(){\n      Actions.refresh({ hideNavBar: true })\n}\nHope this helps :). Thaaank you :). You should be able get the scene key/name from props\ntry to print the following into the console log, to understand what I'm talking about, in your render method:\nconsole.log(this.props.navigationState.key)\nThis should return your key, same for name just access the name value inside navigationState.\nHope this helps.. This has been asked here so many times:\nMy personal choice is to use custom Back and right button components.\nSimply go ahead and copy them from the react-native-router-flux src folder, and pass your new component as a prop when for example you create your scenes like so:\n<Scene\n   key=\"MyScene1\"\n   component={MySceneComponent}\n   title=\"MyScene1\"\n   renderBackButton={() => \n            <LeftButton \n               leftButtonIcon={\"arrow-back\"} \n               onLeft={() => Actions.pop()} \n               leftButtonColor={\"white\"} \n               leftButtonIconSize={30} \n             />\n   }\n/>\nYou can do the above inside your Scene component/container component too like so, for example on component mount:\n```\nimport {Actions} from 'react-native-router-flux'\nimport LeftButton from './leftbutton'\ncomponentDidMount(){\nActions.refresh({renderBackButton: () => \n     Actions.pop()} leftButtonColor={\"white\"} \n     leftButtonIconSize={30} \n    />\n})\n}\n```\nAnd I simply use  component inside my LeftButton component, that comes with 'react-native-vector-icons' \nHope this helps \ud83d\udc4d . @lucasleelz Easy, just pass the title of the current scene to the next scene.\nFor example in your current scene of which you want to show the title of on the nextScene:\nActions.nextScene({title: this.props.title})\nAnd in your nextScene (or whatever name you have), just use:\ncomponentDidMount(){\nActions.refresh({backTitle: ()=> this.props.title})\n}\nShould do the job, obviously you can play around and have the title in the redux store if you use it, and or fire Actions.refresh in a different place for example when you get a response from the api or something.\nHope this helps, hit that thumbs up button \ud83d\udc4d \n. yes of course feel free to use animationStyle property on \nHere is a hint for you:\n```\n\n\n\nexport const animationStyle = (props) => {\n  const { layout, position, scene } = props;\nconst direction = (scene.navigationState && scene.navigationState.direction) ?\n    scene.navigationState.direction : 'horizontal';\nconst index = scene.index;\nconst inputRange = [index - 1, index, index + 1];\n  const width = layout.initWidth;\n  const height = layout.initHeight;\nconst opacity = position.interpolate({\n    inputRange,\n    outputRange: [1, 1, 1], //This will prevent the scene from Fading out\n  });\nconst scale = position.interpolate({\n    inputRange,\n    outputRange: [1, 1, 1], //This will keep the scale the same\n  });\nlet translateX = 0;\n  let translateY = 0;\nswitch (direction) {\n    case 'horizontal':\n      translateX = position.interpolate({\n        inputRange,\n        outputRange: [width, 0, -10],\n      });\n      break;\n    case 'vertical':\n      translateY = position.interpolate({\n        inputRange,\n        outputRange: [height, 0, -10],\n      });\n      break;\n  }\nreturn {\n    opacity,\n    backgroundColor: 'transparent', // Fixes white border\n    transform: [\n      { scale },\n      { translateX },\n      { translateY },\n    ],\n  };\n};\n```\nGo ahead and interpolate those values aka play with them, to meet your needs :)\nHope this helps \ud83d\udc4d . @yakirbu \ntry to play with:\ncomponentWillMount() and componentWillUnmount()\nIn other words do things (replace data or check if the component is still mounted)\nHope this helps \ud83d\udc4d . @maanick90 \n\nCould you please help me out in displaying the new title values from the server? If 'Action.refresh()' would work, from where should I run it? Can I run it from a normal js method?\n\nYou can do Action.refresh() inside the \ncomponentWillReceiveProps(nextProps){\nnextProps && nextProps.yourTitle && Actions.refresh({title: nextProps.yourTitle})\n}\nnew props are passed to all the components that are connected to the redux store, whenever any reducer changes the global state.\nHope this helps \ud83d\udc4d . @dsvorc41 In your splash screen, call an action to check the stored token from the previous login on componentDidMount()\nIn your action, have something like:\nimport {Actions} from 'react-native-router-flux'\ncheckAuth(){\n    return getStoredSessionToken().then(sessionToken =>{\n     if(sesstionToken)\n      Actions.main()\n     else\n      Actions.auth()\n})\n}\nObviously in your getStoredSessionToken method you probably want to use AsyncStorage to get saved token, stored on the device from a previous login, if any.\nHopefully you get the idea \ud83d\udc4d . Yes, facing the same issue, rolling back to 3.37.0. I can confirm that issue disappears in 3.37.0 but does exist in 3.38.0.\n@sk15973\nMake sure that you restart the react-native packager after youve installed a new package.\nAnd also make sure that you use componentDidMount/componentWillMount/componentWillReceiveProps accordingly, and dont do many unnecessary changes to the state. . @ugendrang In your onSomething() methods, just use:\nActions.refresh({onRight: ()=> alert('onRight'), hideNavbar: false, ...otherProps})\nIn order to pass new props to the scene when some form of action happens (onButtonClick, or something else that you want)\nHope this helps \ud83d\udc4d \n. Try this, most likely the border will appear just above the icon itself, in that case try to change the tabbar style depending on currently selected tab through tabBarStyle scene prop.\nconst TabIcon = ({ selected, title, iconName }) => { return ( <View style={{borderTopWidth: selected ? 1 : 0, borderTopColor: selected ? 'white' : 'transparent'}}> <Icon name={iconName} color={selected? '#473332' : '#bdb8bc'} size={35} /> </View> ) };\n. Still no fix? \nThis will require recoding and reimplementation of the navigation.\nBut well, react-navigation seems like a popular replacement. \ud83d\udc4d . @ArcadeRenegade I think you should definitely check official react-native's Animation guide.\nhttps://facebook.github.io/react-native/docs/animations.html\nEssentially what you do is you interpolate height and maybe Y position of your navbar.\nGiven your case, you could do something like this:\n```\n/*\n * @providesModule nav-bar\n /\nimport React, { Component } from 'react';\nimport {\n    Animated,\n    Text,\n    View,\n    TouchableOpacity,\n     Easing // Import easing\n} from 'react-native';\nimport { CommonStyles } from 'app-style';\nimport Icon from 'react-native-vector-icons/MaterialCommunityIcons';\nimport { Actions } from 'react-native-router-flux';\nexport default class NavBar extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        navbarY: new Animated.Value(0),\n        navbarHidden: false,\n      }\n    }\n    componentDidMount(){\n        setTimeout(() => {\n         this._animateNavBar();\n    }, 2000);\n    }\n  _animateNavBar = () => {\n    Animated.timing(this.state.navbarY, {\n     toValue: this.state.navbarHidden ? 0 : 50, //If your navbar height is 50\n     duration: 150,\n     easing: Easing.linear\n    }).start()\n    this.setState({navbarHidden: !this.state.navbarHidden})\n  }\nrender() {\n    let state = this.props.navigationState;\n    let selected = state.children[state.index];\n\n    while ({}.hasOwnProperty.call(selected, 'children')) {\n        state = selected;\n        selected = selected.children[selected.index];\n    }\n\nconst navBarYPosition = this.state.navbarY.interpolate({\n      inputRange: [0, 50],\n      outputRange: [0, -50],\n      extrapolate: 'clamp',\n    })\nconst navBarHeight = this.state.navbarY.interpolate({\n      inputRange: [0, 50],\n      outputRange: [50, 0],\n      extrapolate: 'clamp',\n    })\n    return (\n        <Animated.View style={[\n            CommonStyles.navBar,\n            this.props.navigationBarStyle,\n            state.navigationBarStyle,\n            selected.navigationBarStyle,\n            {\n                 height: navBarHeight,\n                 transform:[{translateY: navBarYPosition}]\n             }\n        ]}>\n            <TouchableOpacity style={CommonStyles.navBack} onPress={Actions.pop}>\n                <Icon name=\"chevron-left\" style={CommonStyles.navBackIcon} />\n            </TouchableOpacity>\n            <Text numberOfLines={1} ellipsizeMode=\"tail\" style={CommonStyles.navTitle}>{this.props.title}</Text>\n        </Animated.View>\n    );\n}\n\n}\n```\nShould do the work (btw haven't tested the above, coded straight in github's comments lol)\nEvery time you call this._animateNavBar() it will either hide or show the navbar\nI personally advise to do both: reduce height and move the navbar upwards.\nSince on Android I've noticed that when you just reduce the height, there are 2 lines appearing from the top and the bottom of the navbar, kind becomes noticeable that the navbar doesnt hide to top but actually gets folded into the centre.\nHope this helps, if it does hit that +1 button \ud83d\udc4d \n. @ArcadeRenegade \nyes you can\ngive it a try and put this._animateNavBar() in the componentWillUnmount() in your scene component\nIf I understood you correctly on what you are try to achieve.. @Symous \nyep there is.\nSimply apply this code to your Router animationStyle prop:\n```\nexport const animationStyle = (props) => {\n  const { layout, position, scene } = props;\nconst direction = (scene.navigationState && scene.navigationState.direction) ?\n    scene.navigationState.direction : 'horizontal';\nconst index = scene.index;\nconst inputRange = [index - 1, index, index + 1];\n  const width = layout.initWidth;\n  const height = layout.initHeight;\nconst opacity = position.interpolate({\n    inputRange,\n   outputRange: [1, 1, 0.3],\n  });\nconst scale = position.interpolate({\n    inputRange,\n   outputRange: [1, 1, 0.95],\n  });\nlet translateX = 0;\n  let translateY = 0;\nswitch (direction) {\n    case 'horizontal':\n      translateX = position.interpolate({\n        inputRange,\n        outputRange: [width, 0, -10],\n      });\n      break;\n    case 'vertical':\n      translateY = position.interpolate({\n        inputRange,\n        outputRange: [height, 0, -10],\n      });\n      break;\n  }\nreturn {\n    opacity,\n    backgroundColor: 'transparent', // Fixes white border, You can replace it with your default scene background\n    transform: [\n      { scale },\n      { translateX },\n      { translateY },\n    ],\n  };\n};\n```\nApply the animation above to the Router component from 'react-native-router-flux' package.\n<Router\n          animationStyle={animationStyle}\n          scenes={scenes}\n        />. @LoreGr \nSimple enough\nTry this:\n```\nconst styles = {\n    modal: {\n        justifyContent: 'center',\n        alignItems: 'center'\n    },\nmodal4: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n   height: 300\n}\n\n}\n```\nYou need to make the modal absolute, so it will be on top of the navbar and other elements \ud83d\udc4d \nHope this helps!. I think one of the most important PRs is the one that fixes slow transitions on android.\nFor instance this issue: https://github.com/react-community/react-navigation/issues/608. @aksonov Sorry for not mentioning, I think this approach fixes the issue: https://github.com/react-community/react-navigation/issues/706#issuecomment-295322551\nUpdate:\nCouldnt find an exact PR that fixes the slow transitions on android, but definitely a hot topic and problem that exists for a long time. :/. ",
    "de-ocampo": "The solution of adding padding to the router seems to cause issues when using tested scenes, such as with tabs. Everything looks fine until I hit the screen with tabs. Then it seems to double in padding.\nFor reference, my schema:\n```\n  \n\n\n\n\n\n\n\n\n    <Scene\n      key=\"mapResultsTab\"\n      title=\"Map\"\n      icon={TabIcon}\n    >\n      <Scene key=\"mapResults\" component={MapResultsScene} title=\"Results Map\" />\n    </Scene>\n</Scene>\n\n\n```\n\nAny solutions?. Cross-posed to SO with more detail. Still unresolved\n. Having the same issue. It would be nice to get this checked out.. This is my first time using tabs in RNRF so I don't have anything to compare it to. Thanks for looking into it!. ",
    "jtmarmon": "@JCDJulian ran into the same issue. not sure where you're applying the padding in your scene, but I was applying it to the sceneStyle prop of the tab bar scene, like so:\n<Scene key=\"tabBar\" tabs={true} tabBarStyle={styles.tabBarStyle} sceneStyle={{paddingTop: 64}}>\nremoving the sceneStyle from the tabBar scene and instead applying it to the child scenes worked for me.. ",
    "bradhanebury": "Also ran into this issue after updating to latest version.\n. ",
    "ivanfoong": "I'm having this issue too, with version 2.0.4\n. :+1: v2.0.5 is working for me. Thanks!\n. ",
    "JianlongCao": "Tested on 2.0.8, 2.0.9, not work for me.\nsame with @joelcloralt , happened on second tab\n. Tested example on 2.0.9, there is an underscore of tab2 name...\n\n. @aksonov Thanks for fixing this issue! It works for me!\nBut after changing 2.0.1 to 2.1.3, I found componentWillDidMount will be called every time when props updated, any issue opened for this?\nmy Code :\n```\ncomponentDidMount() {\n        console.log(\"componentDidMount\")\n        const {actions,user} = this.props;\n        actions.getDevices(user);\n    }\n    componentWillReceiveProps(nextProps) {\n        if(this.mount) {\n            console.log(\"componentWillReceiveProps\")\n        }\n    }\ncomponentWillUnmount() {\n    this.mount = false\n    console.log(\"componentWillUnmount\")\n}\n\n```\n\n. ",
    "apaquino": "@aksonov works great for me.  Thanks!\n. ",
    "yarax": "Thank you!\n. ",
    "luisfuertes": "On android cant center image on navBar. \nCode of renderTitle:\nreturn (\n                <View style={{\n                    flex: 1,\n                    flexDirection: 'row',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                }}>\n                    <Image\n                        source={require('./Resources/logo2.png')}\n                        style={{ height: 36, width: 84}}\n                        resizeMode=\"contain\"\n                    />\n                </View>\n            )\nAnd navBar style:\nflex: 1,\n        flexDirection: 'row',\n        alignItems: 'center',\n        backgroundColor: '#E12518',\n. Could you fix it? I need have a component with and without back button.\n. \"react-native\": \"^0.28.0\" + \"react-native-router-flux\": \"^3.30.2\" arent working yet?\n. Can you post a example of your code?\n. Thanks for your example!\nIm trying it but dont work. What im doing wrong?\nMy index: \n```\n            \n\n\n                    <Scene key=\"Splash\" initial={true} component={Splash} hideNavBar={true} type='replace' />\n                    <Scene key=\"Login\" component={Login} hideNavBar={true} type='replace'  />\n\n                    <Scene key='SideDrawer' component={SideDrawer} type='replace'>\n\n                                <Scene key='Screen1' component={Screen1} />\n                                <Scene key='Screen2' component={Screen2} />\n\n                    </Scene>\n                </Scene>\n            </Router>\n        </Provider>\n\n```\nMy SideDrawer: \n```\nimport {PropTypes, StyleSheet, } from 'react-native'\nimport React, {Component} from 'react'\n// Router Flux\nimport {Actions, DefaultRenderer} from 'react-native-router-flux';\n// Redux\nimport { connect } from 'react-redux';\n// Drawer\nimport Drawer from 'react-native-drawer'\nimport SideDrawerContent from './SideDrawerContent'\nexport default class SideDrawer extends Component {\n    render() {\n        console.log()\n        const navigation = this.props.navigationState;\n        if (!navigation.children) {\n            return null;\n        }\n    return (\n        <Drawer\n            ref=\"navigation\"\n          type=\"overlay\"\n          content={<SideDrawerContent />}\n          tapToClose={true}\n          openDrawerOffset={0.2} // 20% gap on the right side of drawer\n          panCloseMask={0.2}\n          closedDrawerOffset={-3}\n          styles={drawerStyles}\n          tweenHandler={(ratio) => ({\n            main: { opacity:(2-ratio)/2 }\n          })}\n          >\n            <DefaultRenderer navigationState={navigation.children[0]} onNavigate={this.props.onNavigate} />\n        </Drawer>\n)\n}\n\n}\nconst drawerStyles = StyleSheet.create({\n    drawer: { shadowColor: '#000000', shadowOpacity: 0.8, shadowRadius: 3},\n    main: {paddingLeft: 3},\n})\n```\nWhen i do \"Actions.SideDrawer\":\nIn this environment the sources for assign MUST be an object. This error is a performance optimization and not spec compliant.\nMy \"navigation.children[0]\" object:\n\n. Now: \n```\n            \n\n\n                    <Scene key=\"Splash\" initial={true} component={Splash} hideNavBar={true} type='replace' />\n                    <Scene key=\"Login\" component={Login} hideNavBar={true} type='replace'  />\n\n                    <Scene key='drawer' component={SideDrawer} type='replace'>\n                            <Scene key=\"main\" tabs={true} hideTabBar={true}>\n                                <Scene key='Screen1' component={Screen1} />\n                                <Scene key='Screen2' component={Screen2} />\n                            </Scene>\n                    </Scene>\n                </Scene>\n            </Router>\n        </Provider>\n\n```\nBut same error\nEDIT: I quit line styles={drawerStyles} and it runs... \u00ac\u00ac xd Thanks for help!\n. with \"react-native-router-flux\": \"^3.30.2\", if i set \"type\" to my scenes, Actions dont work.\nAnd in Drawer if i set tabs={true}, Actions.pop() dont work. \nIf i set tabs={false}, Actions.pop() works, renderLeftButton dont work, but renderBackButton work. \nAnd set  type=\"reset\" dont work and i can go to Login with back button :s\n```\n            \n\n\n\n\n                    <Scene key='drawer' component={SideDrawer} open={false} type=\"reset\">\n                            <Scene key=\"main\" tabs={false} hideTabBar={false}>\n\n                                <Scene key='Home' component={Home} renderBackButton={this.renderMenuButton} renderRightButton={this.renderNotificationButton} sceneStyle={{paddingTop: this.getNavBarOffset(), paddingLeft: 3}} navigationBarStyle={[Styles.navBar, {backgroundColor: Commons.Colors.purple}]} type={'reset'}/>\n\n                                <Scene key='Screen1' component={Screen1} renderBackButton={this.renderMenuButton} sceneStyle={{paddingTop: this.getNavBarOffset(), paddingLeft: 3}} />\n                                <Scene key='Screen2' component={Screen2} renderBackButton={this.renderMenuButton} sceneStyle={{paddingTop: this.getNavBarOffset(), paddingLeft: 3}} />\n\n\n                            </Scene>\n                    </Scene>\n                </Scene>\n            </Router>\n        </Provider>\n\n``\n. Some help?\n. If i dont use{type: 'reset'}, user can go back with Android back button. I need add it after login.\n. But {type: 'reset'} should work fine. I use it in other app with Drawer and TabBar and dont have this issue.\n. When i putActions.Login()orActions.root({key: 'Login'})without reset, navigation flash 1 sec in Login component but after navigate to Drawer.\n. WithActions.root({key: 'Login', type: 'reset'})give same error:Cannot read property 'sceneKey' of undefinded`\nI have other project with router-flux working fine, but in this project i cant.\n. But i want start new stack from \"Login\" component. If i do Action.Login without reset, Login scene is presented a few seconds. But after going back to Drawer\n. Ok the error is for this functions of my SideDrawercomponent:\nonOpen={()=>Actions.refresh({key:state.key, open: true})}\n        onClose={()=>Actions.refresh({key:state.key, open: false})}\nFor fix it, i only have to remove drawer.close(); from LogOut onPress button in SideDrawerContent.js\nThanks for help @dragfire\n. I have that router: \n<Router sceneStyle={{backgroundColor:'white'}}>\n                <Scene key='lightbox' lightbox>\n                    <Scene key='root'>\n                        <Scene key='Login' initial={true} component={Login} hideNavBar/>\n                        <Scene key='User' component={User} />\n                    </Scene>\n                </Scene>\n            </Router> \nFrom Login scene i do Actions.User() and in User scene, react-native-router-flux show back button but when i press it, app crash with: _this.props.navigation.goBack is not a function instead do a simple pop . If i add onLeft={(e) => console.log(\"e: \", e)} prop to scene, console.log isnt printed, but when i press back button do pop() correctly.... ",
    "tomkur": "Thanks for answering, but I'm afraid it doesn't work (I'm using version 2.0.5). Is hideNavBar really supported by Route? Can't find anything in the docs.\n. I see, is it supposed to work in 2.0.5 or only master?\n. I'll share my code. Neither of these two examples works for me:\n<Router hideNavBar={true}>\n    <Route name='login' initial={true} component={Login}/>\n    <Route name='dashboard' component={Dashboard} title='Dashboard' hideNavBar={false}/>\n</Router>\n<Router>\n    <Route name='login' initial={true} component={Login} hideNavBar={true}/>\n    <Route name='dashboard' component={Dashboard} title='Dashboard' hideNavBar={false}/>\n</Router>\n. Looking forward to this, thanks!\n. For future reference: fix available in 2.0.6\n. Thanks @aksonov, works like a charm!\n. I'm confused, please describe how I can achieve my goal with Actions.refresh\n. All right, I'll check that soon, thanks\n. Thanks for thorough example, @arthurvi, much appreciated! I'll test that first thing tomorrow\n. I did as you both suggested, but in my case route.props.applyButton returned undefined. However, I was able to find the button via route.props.router.delegate.state.applyButton. It seems to work now, but I don't think that's a good way to do it.\nWhat could I be doing wrong?\n. In my case this was in handler of button press:\njsx\n<TouchableOpacity onPress={this._onPress.bind(this)}>\n...\n</TouchableOpacity>\nes6\n_onPress () {\n  Actions.refresh({rightButton: this._renderApplyButton()}\n  Actions.filters()\n}\n_renderApplyButton () {\n  // rendering code\n}\n. Exactly, @andreasbhansen and it's (almost) good enough for me, although it's not a clean solution. It would be indeed better if it could be delegated to the \"Filters\" component (as I suggested in my first comment)  and I don't know if it can be achieved. \n. I do have one problem though - I'd like to disable the 'Apply' button under certain circumstances while the 'Filters' view is opened (not during opening). @aksonov is that possible?\n. ",
    "tristangodfrey": "Thanks for your reply @aksonov , for some reason onPush isn't firing when I change route via a tab bar.\nQuick example:\n```\n<Route\n  name=\"home\"\n  type=\"replace\"\n\n\n\n\n\n\n\n\n\n```\n\nAny idea why this is happening?\n. @kacperpotega Yeah that was my old solution but it's far less than ideal, I guess it's time to finally read the source code and see if I can submit a PR at some point.\n@aksonov Do you think it's a good idea to be able to set an initial route prop on a Router component to allow dynamic initialisation? Or am I missing an easier solution? \n. @aksonov I'll be able to look at it at some point next week I think, should I leave this issue open until then?\n. ",
    "willmcclellan": "FYI the handler is actually called onJump and should be attached to the parent router. I think the documentation is either out of date or mis-referencing onJump with onSwitch\n. ",
    "graywolf336": "A better way to handle it:\nes6\ncomponentWillMount = () => {\n  BackAndroid.addEventListener('hardwareBackPress', () => Actions.pop());\n};\n. Your code does the same as mine. ;) one line inline arrow functions return the value without needing the return keyword. https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions\n. @ericvicenti Where can we find the documentation for the Experimental Navigator API? I'm starting to work on a project and am looking into my options for navigation, started to use this repository but then saw this issue and your comments so was just curious. Thanks!\n. Okay thanks, I will take a look and try them out.\nI won't promise anything, but I will make an effort to if I grasp the understanding of it!\n. @aksonov I opened https://github.com/exponentjs/ex-navigator/issues/94 and with the answer provided there, this does indeed work! Just needed to change <Router style={styles.transparentBg}> to <Router sceneStyle={styles.transparentBg}>.\n. @jayesbe I have not, been a while since I tried it. Sorry\n. ",
    "kadosh1000": "@graywolf336  your solution is good but not perfect, with your solution the app will still close as the 'hardwareBackPress' event expects to get a boolean back saying if the app should remain open or not.\nfor our luck, the great developers here are returning that boolean in the Actions.pop method. So the entire solution should be:\ncomponentWillMount = () => {\n  BackAndroid.addEventListener('hardwareBackPress', () => return Actions.pop());\n};\n. You're right, didn't notice that :)\n. still wondering what would be the right style for it\n. ",
    "thanghach": "i wanna press back button first then  display ToastAndroid , and exit app with the second. Help me please. this is my solution, and i'm success.\ncomponentWillMount() {\n           BackAndroid.addEventListener('hardwareBackPress', function() {\n               var _this = this;\n               if(!this.state.backPress) {\n                    ToastAndroid.show('Back again to exit', ToastAndroid.SHORT);\n                    this.setState({backPress:true});\n                    setTimeout(function() {\n                        _this.setState({backPress:false});\n                    },2500);\n                } else {\n                    return false;\n                }\n                 return true;\n           }.bind(this));\n    }. ",
    "Maxwell2022": "Not sure if we should re-open this issue or not @aksonov @graywolf336.\nActions.pop() may return false if you are navigating between tabs.\nThe React Native BackAndroid (at least in RN 0.42+) module is considering that it should close the app if the register listener is returning false.\nIs that the default behaviour we want for the back navigation on tabs?\nhttps://github.com/facebook/react-native/blob/v0.42.0/Libraries/Utilities/BackAndroid.android.js#L36. You don't have to dispatch your action REMOVE_TWO_TABS in a component. \nYou can dispatch it before your LOGIN_SUCCESS_ACTION for instance, so you can remove the tab before to navigate to home scene. \nWhen the user logout, you can re-initialise the scenes to restore all the tabs that you've previously deleted.. If the screen you want to go back to is always the same, then just call Action.screenKeyName({type:...}), else if this screen is random... \nI'd say... First you need to save the history of the navigation, you can use a reducer that is connecting to the Router to do this, and listen for Focus event to add the current screen to the history stack. Then you can implement you function navigateToPreviousScreen for instance that is looking into the history and trigger the Action to get there. It was not just for me but for everyone. This should be added in the README.\nWould it make more sense to concentrate efforts on improving react-navigation (core or documentation)?\nI've used RNRF in previous projects and I also faced frustration because of the docs not being up to date or information being hard to find. I think it's a common problem for every complex library, documentation is probably the harder part to maintain.\n. ",
    "prasann278": "@BigPun86 \n@thanghach @JonnyBGod \ni have implemented router in the react native app but andoird react native app is getting exit in the back press\n i have used this code  but in the middle of the app it is also getting exit   plz help me out in this . ",
    "RamonAcedoM": "I also have this problem, the solution detailed here does not work. \nUsing: RN 0.43.2\nRNRF: 3.38.0. ",
    "techpanga": "+1 \nRN 0.44\nBackHandler with onHardwareBackPress event, backbutton press with empty handler closing the app, the app still in background.\n. ",
    "durgesh0001": "Still application is closing . i have added below line in router component \n    BackAndroid.addEventListener('hardwareBackPress', () => {\n        try {\n            Actions.pop();\n            return true;\n        }\n        catch (err) {\n            ToastAndroid.show(\"Cannot pop. Exiting the app...\", ToastAndroid.SHORT);\n            return true;\n        }\n    });. ",
    "vsashyn": "Main.js\njavascript\n<RouterWithRedux backAndroidHandler={this.handleBack}>\nreturn false will invoke BackAndroid.exitApp(); automatically. return true if you want to not close app.\nI added Actions.pop() cause after returning from background my app was failing with exception\nThere is no route defined for key key1. Must be one of : 'key3'\nHandleBackHandler.js \n```javascript\nimport { ToastAndroid } from 'react-native'\nimport {Actions} from 'react-native-router-flux'\nconst ANDROID_TIME_INTERVAL_BACK_BUTTON = 2000\nlet BACK_BUTTON_PRESSED_ONCE_TO_EXIT = false\nconst hwBackButtonHandler = () => {\n  if (BACK_BUTTON_PRESSED_ONCE_TO_EXIT) {\n    Actions.pop()\n    return false\n  }\nBACK_BUTTON_PRESSED_ONCE_TO_EXIT = true\n  ToastAndroid.show('Please tap BACK again to exit app', ToastAndroid.SHORT)\nsetTimeout(() => {\n    BACK_BUTTON_PRESSED_ONCE_TO_EXIT = false\n  }, ANDROID_TIME_INTERVAL_BACK_BUTTON)\nreturn true\n}\nexport default hwBackButtonHandler\n```. ",
    "MbF-Khalif": "Hi all, Where should I add this code \ncomponentWillMount = () => {\n  BackAndroid.addEventListener('hardwareBackPress', () => Actions.pop());\n};\n. ",
    "maxs15": "Same for me hideNavBar doesn't work\n. ",
    "iheart2code": "Doesn't work for me either. Using the following:\n```\n\n\n\n\n\n```\n. Looks like there's a thread for this issue already: https://github.com/facebook/react-native/issues/1981\n. I was able to find a similar solution in one of the other closed issues. Would be a great candidate to add to the README or the Example app.\n. ",
    "shukerullah": "any news related to this issue?. Any advice on this issue? Reset is working only once.. +1. @pratomchaip no, will this clear stack?. After successfully login I want to reset my navigator to Home screen with a animation. This is possible with React Native Navigator's resetTo. I want same functionality with react-native-router-flux. This will reset navigator and redirect to home screen without animation but I want animation.. Any updates on this?. working in my case, just add showIcon in the parent scene, Home in my case.. I want to have only one nav bar for all tab, is that possible?. leftTitle and rightTitle both are working in Example.. leftButtonImage is not working, its because navigationParams.leftButtonImage condition is missing in navigationStore.js, leftButtonImage working on v4.0.0-beta.16.\nVersion\n\nreact-native-router-flux v4.0.0-beta.17. Thank you for quick response.. Still leftButtonImage is not working, but if I move navigationParams.leftButtonImage outside the onLeft condition then its working.\n\nFrom\n((onLeft && (leftTitle || navigationParams.leftTitle || leftButtonImage || navigationParams.leftButtonImage)) || drawerImage || drawerIcon)\nTo\n((onLeft && (leftTitle || navigationParams.leftTitle || leftButtonImage)) || drawerImage || drawerIcon || navigationParams.leftButtonImage)\nVersion\nreact-native-router-flux v4.0.0-beta.18. @aksonov any news on this? I want to reset stack to new screen with transition is this possible with transitionConfig?. RNStatusBar?. drawerIcon={DrawerIcon} is working in my case. Scrollable-Tab-View not working if we add it inside Tabs.\n\nI faced this issue only on Android\n\nSolution\nAdd delay to show ScrollableTabView\ncomponentDidMount() {\n    setTimeout(() => {\n      this.setState({\n        isLoaded: true\n      });\n    }, 100);\n}. Is this (following code snippet) you want?\n```\n<Scene\n  tabs\n  lazy\n  showIcon\n  key=\"tabs\"\n  showLabel={false}\n  tabBarPosition=\"bottom\"\n  iconStyle={styles.iconStyle}\n  tabBarStyle={styles.tabBarStyle}\n  indicatorStyle={styles.indicatorStyle}\n\n\n\n\n``. I have no issue with customnavBaras far as iOSnavBaranimation works fine. . @aitemr are you surebackgroundImage` work in v^4 ?. @aksonov Example?. Here is example working for me, write these methods in your react component.\n\n```\nstatic onEnter() {\n  ...\n}\nstatic onExit() {\n  ...\n}\n``. I triednavTransparent`, header set back to visible while navigation to new screen or pop back.. ",
    "CoericK": "Any new here?\n. What should we use then? Can we add the functionality on the documentation? What should we use to custom the backButton or de nextButton?\n. the other one should be rightTitle?\n. Hey @vinayr im trying to do something similar but, on my scene i got\n``` js\ncomponentDidMount(){\n   Actions.refresh({hideNavBar:false});\n}\ncomponentWillUnmount(){\n   Actions.refresh({hideNavBar: true})\n}\n```\nSo when im leaving the scene the navbar, but also reloads the state or something like that, cuz the previous scene had a validation that pushed to the current scene, and when i go back it redirects again  to the scene.\n. @sylvainbaronnet @cridenour So what should i do? Lower my RN Version ?\n. @cridenour that reloads the whole state of the app\n. ",
    "29er": "thanks!\n. ",
    "rgoldiez": "I'm interested in this too.  However, I'm seeing that the component is not unmounted on a replace either.  I have event listeners on some of my components that fire multiple times, depending on how the user navigates, because the original component never unmounts:\nRouteA (replace) -> push A.1 (listener attaches on WillMount) -> push A.2 -> ...\nRouteB (replace) -> RouteA (replace) -> push A.1 (another listener attaches, both fire on events)\nAny help is greatly appreciated!\n. In my case, I was able to use the a 'reset' type route, which unmounts and clears the stack.  This may or may not be what you're looking for.  If you have code that needs to know when something new is push onto the stock (over top of your current view), you can always add an onPush handler and in that handler, broadcast an event that any concerned components listen for and take action when something is pushed on top.\n. Is unmounting all scenes not the expected behavior on a replace?  It is in my cases because the navigation stack could have scenes in the stack that have listeners for remote API events to finish.  More specifically, a scene that has listeners may not be the last / top event in the navigator stack.\n. I am willing to try that, but I didn't see anything in the docs about reset.  How do I call that (Actions.reset() throws a not found error)?\n. Not yet, but I will.  Can I pass in props with this specific call?  I need to call a route of type='replace' and pass props at the time of the call.\nEdit: I should have said \"How can I pass in props with the reset call?\"\n. Here's what I get when trying to call Actions.reset() ... any idea?\n\n. That did it!  Thanks.  I will try to do a PR later today updating the README indicating type='reset'.\nThanks!\n. You can just route to page1... Actions.page1({params})\n. Confirmed.  I narrowed down the issue.  Thanks.\n. I'll try to get a PR done, but here's how I use type='reset'.  I don't configure any scenes like the original poster.  My onPush and onPop functions simply track navbar info (for my custom navbar) and always return true.\n<Router hideNavBar={true} header={NavBar} onPush={hbStore.pushRoute} onPop={hbStore.popRoute}>\n                     <Route name=\"dashboard\"    component={Dashboard} type='reset'/>\n                     <Route name=\"robot\"        component={RobotView} type='reset'/>\n                     <Route name=\"cases\"        component={Cases} type='reset' />\n                     <Route name=\"caseview\"     component={CaseView} sceneConfig={Navigator.SceneConfigs.FloatFromRight}/>\n                     <Route name=\"caseviewrepl\" component={CaseView} type='replace' sceneConfig={Navigator.SceneConfigs.FloatFromRight}/>\n                     <Route name=\"feedcomments\" component={ChatterFeedComments} sceneConfig={Navigator.SceneConfigs.FloatFromRight}/>\n                     <Route name=\"feedcommentsrepl\" component={ChatterFeedComments} type='replace' sceneConfig={Navigator.SceneConfigs.FloatFromRight}/>\n                     <Route name=\"ideas\"        component={Ideas} type='reset' />\n                     <Route name=\"ideaview\"     component={IdeaView} sceneConfig={Navigator.SceneConfigs.FloatFromRight}/>\n                     <Route name=\"lost\"         component={CenteredSpinner} />\n                     <Route name=\"userprofile\"  component={UserProfile} sceneConfig={Navigator.SceneConfigs.FloatFromRight}/>\n                     <Route name=\"appsettings\"  component={AppSettings} type='reset'/>\n                     <Route name=\"myprofile\"    component={UserProfile} type='reset'/>\n                     <Route name=\"group\"        component={ChatterGroup} type='reset'/>\n                     <Route name=\"chatterfeed\"  component={Chatter} sceneConfig={Navigator.SceneConfigs.FloatFromRight}/>\n                     <Route name=\"chatterfeedrepl\"  component={Chatter} type='replace' sceneConfig={Navigator.SceneConfigs.FloatFromRight}/>\n                  </Router>\n. @jdmunro - I learned through trial and error that it doesn't work the way you'd expect.  You have to handle the animation yourself.  See below and let me know if you have questions.\n```\nvar {height, width} = Dimensions.get('window');\nvar MyModalComponent = React.createClass({\n   getInitialState: function() {\n      return {\n         offset: new Animated.Value(height),\n      }\n   },\n   componentDidMount: function() {\n      Animated.timing(this.state.offset, {\n           duration: 250,\n           toValue: 0\n      }).start();\n   },\n   onCloseModal: function() { // you may want to do something like this if you have a button to dismiss the modal\n      Animated.timing(this.state.offset, {\n          duration: 250,\n          toValue: height\n      }).start(Actions.pop);\n   },\n   render: function() {\n      return (\n         \n            {/ ... your modal stuff here ... /}\n         \n      );\n   }\n});\n```\n. ",
    "michshat": "Run into the same issue, had my head scratching, setting type='replace' fixed it.\n<Route name=\"dashboard\" type='replace' wrapRouter={false} component={Dashboard} title=\"Dashboard\" />\n. ",
    "yangli1990": "@michshat whilst replace does demount it, it's used to replace it in the history order, which means if you use it then you can go back (especially on android back button). ",
    "philohelp": "@rgoldiez \"you can always add an onPush handler\" that's probably what I would need, but it seems that it's not an option anymore in V3, although componentWillUnmount is still not triggered with the push actions.. Same problem here :\n\nerror: bundling: UnableToResolveError: Unable to resolve module react/lib/ReactComponentWithPureRenderMixin from /test/node_modules/react-native/Libraries/react-native/react-native-implementation.js: Module does not exist in the module map or in these directories:\n /test/node_modules/react-native/node_modules/react/lib\n/test/node_modules/react/lib\n\n\ndreaming to get rid of nav-exprimental and get back to rnrf\nusing flatlist everywhere in my app\nnot skilled enough to help to solve that\ndeeply depressed. @diegorodriguesvieira I copy pasted you package.json and it works here too.. Same issue on React-native navigation . \n",
    "qasimalbaqali": "Thanks for this! :+1: \n. ",
    "adrienbrault": "It is:\n```\nconst renderRequestsRightButton = () => {\n    return (\n      \n\n\n          Add\n        \n\n    );\n  };\nreturn (\n    \n  );\n```\nIf I got it correctly, you should be able to pass any of the following props to your routes: https://github.com/exponentjs/ex-navigator/blob/master/ExRoute.js#L6\n. ",
    "alex3t": "for me solved by updating to last NPM version from 3.3.12\n. ",
    "Daniel-ccx": "componentDidMount/componentWillMount will work fine,try this\n. ",
    "eranbes": "this is where the issue is: https://github.com/aksonov/react-native-router-flux/commit/b6188e81605cf3f54d87b687eb72ef8f7fad22bb (I am using Android and it messes up the design). I you remove navigationStyles={Navigator.NavigationBar.StylesIOS} it should work.\n. Here is the render code\nreturn <Router hideNavBar={false}>\n        <Route name=\"tandcPage\"  schema=\"modal\" component={TandcScreen} title={strings.tc}/>\n        <Route name=\"error\" schema=\"system\" component={ErrorScreen}/>\n        <Schema name=\"system\" type=\"replace\"/>\n        <Schema name=\"modal\" sceneConfig={Navigator.SceneConfigs.FloatFromBottom}/>\n    </Router>;\nSee the following:\n1.0.9 default style (ignore the back button)\n2.1.3 default style (see that the text is at the bottom and it's higher)\n2.1.3 when removing navigationStyles={Navigator.NavigationBar.StylesIOS} \n\n\n\n. One router and a few siblings (scenes), nothing nested.\nhere is another one (attaching image too):\n\n\n. it seems like it was a styling error after all. \n. We just reserved top margin and forgot to remove it.\n. ",
    "tristola": "I have similar situation.\nThere is no scheneConfig called \"FloatFromUp\", so If i navigate Actions.page1({params}),\nso I cannot have the \"correct animation\". Of course I can implement such a animation. But being able to pop the history would make this nicer: Actions.pop(2)  \nUsing replace I can make it work - except I get the animation between page3->page2 And i would need animation between page2 -> page1.\n\nEdit: I found an alternative way to do the implementation, that did not require to change the route\n. ",
    "dingxizheng": "Thank you\n\nOn Jan 27, 2016, at 08:16, Joshua Rotenberg notifications@github.com wrote:\nnavigationBarStyle is the attribute name. Try adding it to a router or schema.\n\u2014\nReply to this email directly or view it on GitHub https://github.com/aksonov/react-native-router-flux/issues/151#issuecomment-175618887.\n. \n",
    "jgibbons": "+1\n. The parent can just pass a callback function through props.\n. ",
    "marcelglaeser": "I founded a solution.\nMaybe other people can help it.\nThats my renderRightButton:\nvar CameraIcon = function() {\n  return (\n    <TouchableOpacity onPress={this.props.rightButtonPress} style={{width:35}}>\n    <FontAwesome name=\"camera\" size={22} style={AppStyles.navbar_button_right_icon}/>\n    </TouchableOpacity>\n  );\n}\nexports.CameraIcon = CameraIcon;\nAppStyles.navbar_button_right_icon:\nnavbar_button_right_icon: {\n      color: '#FFF',\n      width: 26,\n      height: 26,\n      top: 10,\n    },\nI set \"style={{width:35}}\" at the TouchableOpacity and remove \"right: 10\" from the style navbar_button_right_icon.\n. Hello atn4z7,\ncan you give me a example for that?\nRegards,\nMarcel\n. No one an idea or is my English to bad? I can try to explain it again ;-)\nIt's very very important for me!!\nThanks Marcel\n. No problem :) I try to explain it better!\nI have two classes. In the first class I define the router and the route.\n\n\n{Actions.pop();}} renderRightButton={Icons.TorchIcon} rightButtonPress={this._switchTorchMode} />\n\n\nThe function _switchTorchMode (rightButtonPress) is defined in the second class 'cammodal', not in the first class. But that's doesn't worked. How can I fix it?\n. Thanks for your answer. Are there examples?\n. +1\n. I'm created a custom button. it solved that.\n. ",
    "micksabox": "I think I figured this out. The Actions stores the state of the router, so by calling \nActions.currentRouter.currentRoute\nyou can retrieve the current route onPop, onPush, etc. Note: during the onPop context, the current route is the one that is being popped.\n. Closing since the above seems to be the answer.\n. I think this might help.\nYou can get the current route using Actions.currentRouter.currentRoute during an Actions.onPop or Actions.onPush hook. This route has the name and any properties passed when defining your global route stack. The Actions can be accessed globally, so depending on what the current route is you can dispatch an action that updates the state in App. App is a component so modifying its state should trigger a re-render to show the updated  header view.\n. @lynndylanhurley glad to help! I know the hooks work on a Router instance, but I'm not sure about an individual Route. So add the hooks to each router that you care about, then during the on___ event hook you can query the current route.\n. I've noticed this during an onPop event too. Maybe that's what is happening here - at the time of the console.log call, the route state hasn't been updated. But when you check the dev console it appears correctly.\n. Hey @timsuchanek thanks for reporting this. Is it slow without animations (i.e. a <Scheme> with no animation config)? I am willing to compromise animations for performance if worse comes to worse. I don't have an Android either, or else I would try it myself.\n. ",
    "jeremybarbet": "You need to import { Actions } from 'react-native-router-flux'; and { this.props.title } should display the current route.\n. - The Actions return all the data related to the routes you declare in index.ios.js.\n- this.props.title return the title value defined on the route itself.\njs\n<Route name=\"TabBar\">\n  <Router header={ header }>\n    <Route name=\"page1\" component={ Page1 } title=\"Page1\" schema=\"tab\" type=\"switch\" /> // Page 1\n    <Route name=\"page2\" component={ Page2 } title=\"Page2\" schema=\"tab\" type=\"switch\" /> // Page 2\n    <Route name=\"page3\" component={ Page3 } title=\"Page3\" schema=\"tab\" type=\"switch\" /> // Page 3\n  </Router>\n</Route>\n. ``` jsx\nimport React from 'react-native';\nimport { Actions } from 'react-native-router-flux';\nclass Header extends React.Component {\n  render () {\n    return (\n      \n{ This is the ${ this.props.title } }\n        {/\n          This is the Index\n          This is the Detail\n        /}\n      \n    );\n  }\n}\n``\n. Can you paste complete code of related page ?\n. How can Iunmounted` this view ? What kind of action should I do, to make it works ?\n. My router look like this :\n<Router hideNavBar={ true }>\n  <Route name=\"list\" component={ List } title=\"Statiks\" schema=\"default\" />\n  <Route name=\"add\" component={ Add } title=\"Options\" schema=\"default\" />\n</Router>\nThere is separated route for each view.\n. On the Add view, I edited field that I push on AsyncStorage. After getting back to List View, I would like to update my view with the new data retrieve with a await AsyncStorage.getItem. I use at the moment componentWillReceiveProps to render the view. But it rendre twice my view and create a glitch during 1sec with the old data before updating with new data.\n. Even with a new route level, the componentDidMount is not fired after clicking on the back button = Actions.pop\n. 4. Update your component on focus of this section : https://github.com/aksonov/react-native-router-flux#reduxflux-support ?\n. @aksonov How the onFocus handler works ? Can you provide a link with the documentation about it ?\n. ",
    "behl1": "@lynndylanhurley Did you find a way to update the redux store?\n. +1\n. +1. Just upgraded to 2.3.6 and am experiencing the same issue. \n. Thanks  @aksonov \n. ",
    "JosephKarayan": "I am using 'react-native-router-flux' to implement navigation between pages in my app. \nThere are some scenes (sort, filter) that I would like to remove from the back stack.\nIs it possible to skip adding some pages to the stack  or  remove the page from back stack ?\n. The issue with removing a scene from the back stack was resolved by using popAndReplace' type in the the custom actions:\nActions.products({ ...this.props.product, type: 'popAndReplace' });. I am using 'react-native-router-flux' to implement navigation between pages in my app. \nThere are some scenes (sort, filter) that I would like to remove from the back stack.\nIs it possible to skip adding some pages to the stack  or  remove the page from back stack ?\n. The issue with removing a scene from the back stack was resolved by using 'popAndReplace' type in the the custom actions:\nActions.products({\n  ...this.props.product,\n  type: 'popAndReplace'\n});. ",
    "PumpkinSeed": "Can someone give more information about the Actions.currentRouter.currentRoute. \nI'm using the v3.38.0 version and it is not existed in this package.\nimport { Actions } from 'react-native-router-flux';\nconsole.log(Actions.currentRouter.currentRoute);\nError: undefined currentRoute. I searched for 'current' in the codebase, and I found nothing. . @sarahmarciano No, I tried an other way, but it's not related to this issue.. @sarahmarciano I had a problem, where the Actions.currentRouter.currentRoute was a small part, so I tried a totally other way to solve the whole problem, this is why I said \"but it's not related to this issue\". I didn't found any stable version under v4. I got the BackHandler error like the #1894  and I think it is using newer React Native which is breaking some other dependency. \nThank you, but I think currently my application not supporting the v4. . ",
    "enguerranws": "@lynndylanhurley I'm facing the same use case that you described and ended up with a solution like you mentioned in the first place:\n```\nclass Index extends React.Component {\n  // ...\n  componentDidMount () {\n    this.props.dispatch(currentScreenChange('Index'));\n  }\n// ...\n}\n```\nThis works but it doesn't seem clean IMO (code repeating everywhere). \nSo I saw you suggest an improvement:\n```\nconst store = // ... create redux store\n// define a handler that is called whenever the current route is changed\nfunction onEnterHandler(nextScreenName, lastScreenName) {\n// dispatch route change event from a single, centralized location\n  store.dispatch(updateRoute(nextScreenName, lastScreenName);\n}\n// then in the render method, place the onEnterHandler on the top-level router:\n\n  // ...\n\n```\nI tried to implement that but I can't make it work: it seems onEnter is never fired. Can you give me a working example of this? Which version of RNRF do you use?. @aksonov I saw that, but I read that v4 is still in beta. Is it safe to use it right now?. Nice to hear that. Thanks for your quick answer!. I guess I messed up with my Components declaration. MyScreen wasn't referencing to any MyScreen component found in this context.. ",
    "sarahmarciano": "@PumpkinSeed did u solve that?\nI'm getting the same error. Which other way?\nI'm searching a way to achieve that but didn't succeed. Ok thank you\nI'll try to solve it. @mbenjamin618 did u solve it??\nI have the latest version and I am still hitting this error.\nAny idea?. ",
    "AdamBrodzinski": "@aksonov this would be really helpful for me too. I'm looking to use the Android styles and it seems like a lot less work to do this instead of creating a custom header.\nThanks for this project btw... it's perfect!\n. Thanks @pewh I got it to work. However, to get Android styles and transitions is becoming rather difficult. This seems like the underlying ex-navigator issue https://github.com/exponentjs/ex-navigator/issues/24 would solve this. Ideally if the user is on an Android and the hideNavBar={false} is set... it should just look like an Android. \nIt seems like Navigator.NavigationBar.StylesAndroid opens up a can of worms and the whole NavigatorBar is poorly documented. I really don't have time to sink into this currently so I might try and find another NavBar component instead.\n* edit *\nDigging deeper the built in ToolbarAndroid is going to the ticket. Using your built in header prop will allow me to integrate this.\nhttps://github.com/facebook/react-native/blob/master/Examples/Movies/MoviesApp.android.js#L50-L56\n. @alirezavalizade  I would use the StatusBar component on the page that has the dark backgrounds:\nhttps://facebook.github.io/react-native/docs/statusbar.html\n. ",
    "travisday": "@robtg4 I was wondering the same, the sample navbar here is very confusing since I am just starting.. @jeannei I am having trouble implementing this I have a page that loads a list view do I put this code in there?. @jeannei Yes, I got it sort of working, my custom nav shows up but gets rid of the back button. ",
    "BhavanPatel": "Well I had made one plugin for that it is use full to achieve what you want.\nWhether its Statusbar or Navbar Color\nhttps://github.com/BhavanPatel/react-native-navbar-color\nhttps://www.npmjs.com/package/react-native-navbar-color\n. @alexpavlovaskblue  Yes, Please check Readme of plugin. Thanks. ",
    "alexpavlovaskblue": "@BhavanPatel, is it working for iOS?. ",
    "darkrishabh": "It worked but by going really deep \nthis.props.route.parent.delegate.refs.nav.navigationContext\n. I am not getting enough time to look into this. For now lets close this. Also I just saw #185 \nI wanna see how this can help in getting navigator in the props.\n. ",
    "jackyshek": "there is no route in this.props in react-native-router-flux 4.0.6. where can i find the navigationContext?. ",
    "masonwu311": "@pewh,first thanks for your answer,i have do this:\nimport _ from 'underscore';\nActions._popular()\nbut i get error below\nTypeError: Actions._popular is not a function(\u2026)\ncan you help me more\n. @pewh ,my version is \nreact-native-router-flux: \"^2.1.3\",\ni didnot import  _ from 'underscore',but i get the same error \nTypeError: Actions._popular is not a function(\u2026)\n. @pewh  the error is below:\nError: Cannot find router for route= popular current router=undefined(\u2026)\n. @aksonov ,do i have a way to do this\n. @pewh  this is my  router \uff1a\n<Router hideNavBar={true} >\n         <Schema name=\"modal\" sceneConfig={Navigator.SceneConfigs.FloatFromBottom}/>\n         <Schema name=\"default\"  sceneConfig={Navigator.SceneConfigs.FloatFromRight}/>\n         <Schema name=\"withoutAnimation\"/>\n         <Route name=\"launch\" component={Start} initial={true} hideNavBar={true}  wrapRouter={true} />\n         <Route name=\"login\" component={Login}  hideNavBar={true}  wrapRouter={true} />\n         <Route name=\"register\" component={Register}  hideNavBar={true}  wrapRouter={true} />\n         <Route name=\"findPassword\" component={FindPassword}  hideNavBar={true}  wrapRouter={true} />\n         <Route name=\"username\" component={Username}  hideNavBar={true}  wrapRouter={true} />\n         <Route name=\"tabbar\" wrapRouter={true} >\n              <Router footer={TabBar}  showNavigationBar={false}>\n                  <Route name=\"message\" schema=\"tab\" title=\"\u6d88\u606f\"  component={Message} />\n                  <Route name=\"task\" schema=\"tab2\" title=\"\u65e5\u7a0b\"  component={Task} />\n                  <Route name=\"linkman\" schema=\"tab\" title=\"\u901a\u8baf\u5f55\"  component={Linkman} />\n                  <Route name=\"discover\" schema=\"tab\" title=\"\u53d1\u73b0\"  component={Discover} />\n                  <Route name=\"setting\" schema=\"tab\" title=\"\u6211\u7684\"  component={Setting} />\n              </Router>\n          </Route>\n     </Router>\nand this is my login page's code :\n```\nsetToggleTimeout () {\n    setTimeout(\n       async () => {\n         try{\n           let oauthToken = await Storage.get('userToken');\n           let now = Date.parse(new Date());\n           if( oauthToken.expressLogin>now){\n             Actions.route('task')\n           }else {\n             Actions.login();\n           };\n         }catch (e){\n           console.log(e);\n           //Actions.login();\n         }\n       },\n       200\n     );\n }\ncomponentWillMount () {\n    this.setToggleTimeout();\n }\n``\n. @pewh  i have the  same error \uff1aError: Cannot find router for route=task current router=undefined(\u2026)`\nif what ever i add wrapRouter={true} or remove it\n. @pewh  thank you very much\n. @aksonov\uff0csorry\uff0c i did not solve this problem\uff0c i will review next time\n. ",
    "thecodecafe": "So... You mean you built this package and added support for tabbed navigation and didn't think someone will need to navigate from inside one tab to another?. @jdmunro  what worked for me was to do Actions.Tabs() using  @toadums  code as example above, that way it loaded the first scene in the tabs scene, problem solved for me!. I can't agree that it makes sense, navigating all the way back to the screen you're working on because of a small adjustment you made to it isn't convenient, it kills my vibe when I'm working.. ",
    "lentg": "render() {\n    return (\n        \n\n\n\n\n```\n        \n\n\n{console.log(\"onPop is called!\"); return true} }>\n                        \n\n\n\n\n{console.log(\"onPop is called!\"); return true} }>\n                        \n\n\n\n\n\n\n\n\n    <Route name=\"register\" component={Register} title=\"Register\"/>\n    <Route name=\"home\" component={Home} title=\"Replace\" type=\"replace\"/>\n    <Route name=\"login\" schema=\"modal\">\n        <Router name=\"loginRouter\">\n            <Route name=\"loginModal\" component={Login} schema=\"modal\"/>\n            <Route name=\"loginModal2\" hideNavBar={true} component={Login2} title=\"Login2\"/>\n        </Router>\n    </Route>\n    <Route name=\"register2\" component={Register} title=\"Register2\"  schema=\"withoutAnimation\"/>\n    <Route name=\"error\" type=\"modal\" component={Error}/>\n    <Route name=\"launch\" header={Header} component={Launch} wrapRouter={true} title=\"Launch\" hideNavBar={true}/>\n</Router>\n\n);\n```\n}\n. Tab route. before other router, work.\n. ",
    "arqex": "+1 \nSeems that routes props are stored internally in the constructor and they are never updated again. \nSomething like this is happening:\njs\n// this.state.items === 1\n<Route items={ this.state.items } />\n// this.props.items inside the route handler will be always 1\n// It will never change even if the state of the parent changes\nPlease, fix this. It's a big stopper from using this library.\n. In my case I am using freezer as the state holder. I would need to pass the current app state down to the current screen. In the docs is said that I can pass any prop to the route:\n<Route appState={ freezer.get() }/>\nBut the first value is cached so the app is not reacting to the state changes. Props are not passed down as expected, they work like setting an initial value.\n. ",
    "lopezjurip": "How can I communicate navigation items (left and right buttons) to the component?\n. ",
    "yonahforst": "I'm having the same problem. In my root App.js where I have my Router and Routes, I listen for changes to my state holder (also using freezer.js like @arqex). It looks something like this:\n``` js\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = freezer.get();\n  }\ncomponentDidMount() {\n    var self = this;\n    freezer.on('update', function(newValue) {\n      self.setState(newValue);\n   });\n  }\nrender() {\n    return (\n      \n\n\n\n\n    );\n  }\n}\n```\nSince ...this.state is now available as properties in each of the Routes, I would expect them to update whenever the freezer triggers an update to the App.js state\n. For anyone else who comes upon this issue, it seems it's been fixed in master but not yet pushed to npm. Cloning from master and requiring locally, prop changes to the Router now propagate to its Routes\n. ",
    "welbornio": "Thanks for the update. Glad I'm not the only person who got stuck on this.\n. ",
    "keeleycarrigan": "I feel like I'm having the same problem. I'm calling a scene mainEntry and it's calling it, but the object I'm sending through isn't available on the props.\nActions.mainEntry({view: 'SignUp'});\nIn my mainEntry component the passed data doesn't show up at all. Am I just being a dum dum?\n. @ospfranco In general, the problems I've had with this module I have solved by adding some piece of information to the apps overall state. In this instance, I created a view component that's just a shell for another view to be injected into. So after the launch screen the initial scene is this shell and then I set a value on state that the shell uses to load the proper component. I couldn't get the back button on the title bar to work properly either. So I just made my own title bar that I control with a \"navigation\" key on the app state. Even for all it's problems, this module is still the most straightforward to implement for navigation.\nLet me know if that makes sense.\n. Thanks @pmadruga. I actually just ended up rebuilding my app using NavigationExperimental directly. Too many issues with this module. . @Mokto Thanks so much for this! I had the same issue when reading the docs for the drawer.\n. @Anthonyzou I think the reason it's not working totally is the Animation start call should be pulled out into it's own function that can be called whenever and it needs to be called again on componentWillReceiveProps after resetting the width. Doing that makes my scenes animate in every time they are called.\n@xvalentino thanks so much for this solution. I think I may try to add some logic in there to animate in left or right based on the situation.\n. I'm experiencing this as well. I pretty much just have to 'fake' tabs. And the back button in the title doesn't render at all, but if I put a button in the view and onPress call Actions.pop() everything works. Seems like I should just build my own top nav bar and write all the logic myself.\n. @jadidian what I had to do to accomplish that is have an \"initial\" scene in each parent that is just kind of a shell so when I dispatch a navigation action that gets passed to that scene telling it which child scene to load. It should technically be able to be done by pass props to the scene when you call the action, but I've had issues with the props getting passed to the scene.\nSo in the shell scene I have something like this in the render.\n``` js\nrender() {\n    const Component = this.props.screen === 'SignUp' ? SignUp : Login;\nreturn <Component />;\n\n}\n```\nscreen is set on the main state and that's mapped to the shell component. I've also had issues with the nav bar so I just made my own and keeps track of back buttons and whatnot using navigation actions and my state. Seems to work well. Not sure if it's the best way but it seems pretty clean and hasn't had any issues so far.\n. I'd love to help more, but TBH I've given up on trying to use this module for all my navigation. I'm only using it to navigate to completely new views. I've built my own solutions for the navbar, back button, modals, and child scene navigation. The documentation just isn't complete enough and there seem to be a lot of bugs in the actual module.\n. ",
    "ospfranco": "@keeleycarrigan I'm having the same issue, did you find a way around it?\n. I'm facing this same problem, on my Scenes:\nA => B\non B I change my redux store state, but when I do a Router.pop(), componentWillReceiveProps is not triggered on A.\nMy router.pop lives locally inside the B page (not using default navBar), so\nRouter.pop()\nRouter.refresh()\ndoes not work, setting a timeout does not work either, any ideas on how to achieve this?\n. This is not really necessary, but it was something I wanted to have, anyways, using hot reloading solves my problems for now, feel free to comment if there is a practical way to implement this.\n. Hey @DenJohX, I'm not sure I understand your problem, I have a connected router to feed some variables and switch on root level nodes, here is the code:\n```\nclass Routes extends Component {\nrender() {\n    let catchInitialState = false\nfunction selector(props) {\n  if(props.isLoggedIn) {\n    if(props.isVerified) {\n      if(props.firstLogin) {\n        return 'friends_invite'\n      } else {\n        if(props.reminders.length > 0) {\n          return 'reminder'\n        } else {\n          return 'home'\n        }\n      }\n    } else {\n      return 'authenticate'\n    }\n  } else {\n    return 'authenticate'\n  }\n}\n\nconst reducerCreate = params => {\n  const defaultReducer = Reducer(params)\n  return (state, action) => {\n    if(action.type == 'RootContainerInitialAction') {\n      catchInitialState = true\n    }\n\n    if(catchInitialState && action.type != 'RootContainerInitialAction') {\n      GoogleAnalytics.trackScreenView(action.scene.sceneKey)\n      catchInitialState = false\n    }\n\n    if(action.type == 'REACT_NATIVE_ROUTER_FLUX_REPLACE') {\n      GoogleAnalytics.trackScreenView(action.key)\n    }\n    return defaultReducer(state, action)\n  }\n}\n\nconst component = connect(state => ({\n  isLoggedIn: state.auth.isLoggedIn,\n  isVerified: state.auth.isVerified,\n  firstLogin: state.friends.firstLogin,\n  reminders: state.dashboard.reminders,\n}))(Switch)\n\nif(this.props.isLoggedIn){\n  this.props.pushNotfificationActivate()\n}\n\nreturn (\n  <AppRouter createReducer={reducerCreate}>\n    <Scene key=\"root\" component={component} tabs selector={selector} hideTabBar unmountScenes>\n      <Scene key=\"authenticate\" hideTabBar>\n        <Scene type=\"replace\" key=\"login\" component={GradientBackground(LoginScreen)} hideNavBar initial/>\n        <Scene type=\"replace\" key=\"register\" component={GradientBackground(RegisterScreen)} hideNavBar/>\n        <Scene type=\"replace\" key=\"forgotPassword\" component={GradientBackground(ForgotPasswordScreen)} hideNavBar/>\n        <Scene type=\"replace\" key=\"emailConfirmation\" component={GradientBackground(EmailConfirmationScreen)} hideNavBar/>\n      </Scene>\n      <Scene key=\"home\" component={NavigationDrawer} hideTabBar>\n        {require('./scenes/home')}\n      </Scene>\n      <Scene key=\"friends_invite\" component={GradientBackground(FriendsInviteScreen)} hideNavBar/>\n      <Scene key=\"reminder\" component={GradientBackground(ReminderScreen)} hideNavBar/>\n    </Scene>\n  </AppRouter>\n)\n\n}\n}\nfunction mapStateToProps(state) {\n  return {\n    isLoggedIn: state.auth && state.auth.isLoggedIn ? state.auth.isLoggedIn : null,\n  }\n}\n```\nhowever if I understand correctly you want your scenes to have access to the data store, you should do something like this:\n```\nimport React, { Component } from 'react'\nimport {bindActionCreators} from 'redux'\nimport {connect} from 'react-redux'\nclass Foo extends Component {\n  // class code here, etc\n}\nconst mapStateToProps = (state) => {\n  return {\n    // insert the variables of your reducers here\n  }\n}\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators({\n    // insert your actions here\n  }, dispatch)\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Foo)\n```\n. any ideas on how to access this?\n. ",
    "apperside": "maybe it could help:\nfor example if you started a Scene, then you can use something like this\nActions.pop({refresh: {prop: \"value\"}});\nas stated here \n\nallows to refresh the props of the scene that it pops back to\n. \n",
    "pmadruga": "@keeleycarrigan I was experiencing the same problem as you.\nThe problem was that I was trying to pass props from Scenes belonging to the same parent Scene. I solved by moving this scene to its own parent. Picking up on your naming, what I had was:\n<Scene initial='true' key='main'>\n<Scene key='anotherEntry'>\n<Scene key='mainEntry'></Scene>\n</Scene>\n</Scene>\nBy the above, you can see that mainEntry is a child of anotherEntry.\nAnd I solved by doing:\n<Scene initial='true' key='main'>\n<Scene key='anotherEntry'>\n</Scene>\n<Scene key='mainEntry'></Scene>\n</Scene>\nAnd now the mainEntry is not a child anymore. By doing that I was able to now pass the props.\nNot sure if this is your case, but I hope it helps.. ",
    "chatras": "If you send some value using actions and put a breakpoint in your scene before it renders, you can easily find the the object that you are passing in that scene. So here is how its done:\nPass the object to the scene like this \nActions.mediaViewScene(message);\nNow in your scene, you can access this object in the data variable. \n```\nclass MediaViewScene extends Component {\nrender() {\n  this.props.data <---- this contains the object that I passed.\n\n```\n. ",
    "gablorquet": "Yeah, it doesn't seem to be working for me.\nI'm using a Drawer (from react-native-drawer) with multiple tabs within my drawer scene. When using Actions.ROUTE(_PROPS), the scene only has navigation state in its props. No, unfortunately. I switched to React Navigation but it has pretty much the same problem. As our app is in very early stages of development, I've settled on waiting for a fix.. ",
    "realtebo": "@gablorquet : i'm in the same situation. Didi you solved?. @gablorquet : probably I find a solution.It was as simple as creating the props at router level \nThis is my Scene definition,\nconst scenes = Actions.create(\n  <Scene key=\"root\" >\n    <Scene key=\"mainBucket\" component={NavigationDrawer} >\n      <Scene key=\"mainBucketInternal\" >\n        <Scene \n          ....\n          onRight={(scene) => scene.openCreateGroup()}\nNote openCreateGroup: here openCreateGroup is s a property I created at Router level. \nIn my specific case, I'm passing a redux action to Router, I use the connect() function \n```\nimport { connect } from 'react-redux';\n...\nimport {\n  openCreateGroup\n} from './actions';\n.... \n(scenes definitions like above)\n...\nclass AppRouter extends Component {\nrender() {\n    return (\n        \n    );\n  }\n}\nconst mapStateToProps = ({ drawer }) => {\n  const { open } = drawer;\n  return {\n    open\n  };\n};\nconst mapDispatchToProps = {\n  openCreateGroup\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(AppRouter);\n```\nIf you add a console.log(this.props)into render() method, you'll see both open and openCreateGroup. The first is a piece of state (used to integrate Drawer) and the second is an action.\nIf you need that your Scene properties are passed down to Scene children, use the passProps property into the specific scene definition. \nOf course, it works, but it's not so clean. @denghejun please add more details . ",
    "denghejun": "Finally I got a perfect solution about this. It is lazy load, a simple factory method you know!. @realtebo \nOk, you can pass a factory method as a prop into your screen, the method return a reference type value, here is this.props, see below:\n<Scene key='home' getNewerProps={()=>this.props}  {....other props} />\nAnd then in your scene view, use the method like this:\n```\nconst newerProps = this.props.getNewerProps(); // newerProps must be latest.\nActions.Refresh({ title: newerProps.title }); // then refresh current screen's title. it works.\n```\nHow it works\nTwo Points: \n\nthe factory method is a lazy way to get some data. it only be executed when it is called.\nthe return value of factory method had better be a reference type rather than value type.\n\nSo we can get the newer props value from the same reference memory address. So the most important thing is keep the reference, you can get it whenever the value changed.. look here: https://github.com/aksonov/react-native-router-flux/issues/1922. look here: https://github.com/aksonov/react-native-router-flux/issues/1922. Actually I raise this question because I want change the question below:\nhttps://github.com/aksonov/react-native-router-flux/issues/167\nFinally I found a perfect way to solve this:\nOk, you can pass a factory method as a prop into your screen, the method return a reference type value, here is this.props, see below:\n<Scene key='home' getNewerProps={()=>this.props}  {....other props} />\nAnd then in your scene view, use the method like this:\n```\nconst newerProps = this.props.getNewerProps(); // newerProps must be latest.\nActions.Refresh({ title: newerProps.title }); // then refresh current screen's title. it works.\n```\nHow it works\nTwo Points: \n\nthe factory method is a lazy way to get some data. it only be executed when it is called.\nthe return value of factory method had better be a reference type rather than value type.\n\nSo we can get the newer props value from the same reference memory address. So the most important thing is keep the reference, you can get it whenever the value changed.. ",
    "jonathanpalma": "Thanks for your answer @MITDelian I'll try to work on it too. \nAlso let people know that I decided making a temporary solution to help me fix it on Android devices overloading BackAndroid\njavascript\nBackAndroid.addEventListener('hardwareBackPress', (function() {\n  try {\n    return (Actions.pop() !== null);\n  } catch (e) {\n    return false;\n  }\n}));\n. ",
    "kimorq": "you can use Actions.refresh({data:\"Custom data\", title:'Custom title' }) immediately after Actions.pop() and this will do the trick. Refresh will be called on the parent\n. ",
    "ugendrang": "Actions.pop( {refresh: {variable: value} }) will do. Kindly advise how to achieve the below steps?\n1. On pressing 'Add', NavBar need to hide from current scene\n2. The component 'Show NavBar' in current scene need to be set to visible \n3. On selecting the text 'Show NavBar', the component at step 2 need to be set to hidden and NavBar to be set to visible\n. Thank you. NavBar is set to invisible with the following code line,\n<Scene key=\"CategoryList\" component={CategoryList} title=\"Category\" initial rightTitle=\"Add\" onRight={() => Actions.refresh({hideNavBar: true})}/>\nBut when i assign the hideNavBar value to prop or state as shown below, iam getting the exception 'Attempted to assign to readonly property'.\ncomponentWillReceiveProps(nextProps){\nif(nextProps.hasOwnProperty('hideNavBar')){\nthis.props.showAddCategory = !nextProps.hideNavBar;\n}\n}\nAny thought on how to get rid of the error.. Issue still occurs in  react-native-router-flux@3.38.1. @Dani93380, I like to pass property from SceneB to SceneA on back button action as like below, but not sure how to call the 'onBackFunction' when I press back button in SceneB\n```\nclass SceneB extends Component {\n    render() {...}\nonBackFunction(){\n    Actions.sceneA({myprop:'test'});\n}\n\n}\n```\n. On setting scene type as reset solves my issue\n<Scene key=\"drawer\" component={NavigationDrawer} open={false}>\n          <Scene key=\"main\">\n            <Scene key=\"Item1\" component={Item1} title=\"Item1\"  initial type=\"reset\"/>\n            <Scene key=\"SubItem1\" component={SubItem1} title=\"SubItem1\"/>\n            <Scene key=\"Item2\" component={Item2} title=\"Item2\" type=\"reset\"/>\n          </Scene>\n      </Scene>. ",
    "danielweinmann": "OK, after reading the code again I found a solution: https://gist.github.com/danielweinmann/4b44271c7d5631177f17\nI had to add the following method to my routed main component:\ncomponentWillUnmount() {\n    Actions.currentRouter = null\n  }\nI don't understand the code very well, but it seems it was losing the nav ref because Actions.currentRouter had a reference to the old, already unmounted router.\n@aksonov, what do you think would be a good implementation of a solution for this? Just point a direction and I'll send a PR ;)\nThanks a lot!\n. Yeah, since I'm new to ExNavigator I'm still trying to understand it too.\nWhat I do know is that the problem has to do with this line: https://github.com/aksonov/react-native-router-flux/blob/master/Router.js#L131\n. @MITDelian o/\n. Actually, I've now noticed that Router already passes its own props to Route on the first render. I think I wont create passProps prop and just use the router's props.\nWhat do you think, @aksonov?\n. @aksonov, I don't think you understand the problem I fixed. I am actually astonished that nobody else has run into it! I'm thinking everybody is implementing the default Router-as-first-component-in-the-render-stack approach.\nThis change broke it: https://github.com/aksonov/react-native-router-flux/commit/2724b8163a1798775046926c70ade4e4fcfe8066#diff-07ab94a626d050c4a73fb7272713b477R294\nThe problem was that the original Route component had static props that didn't change on subsequent renders. So I had to do this ugly router.routes[route].props = there.\nI know it's ugly, and I know it would be better to use react's component lifecycle. But it just didn't work. I'm thinking the problem is on the way we \"store\" the routes on a non-react class and then try to pass them around. I think we'll have to made an architectural change to make it more elegant.\nBut for now I'm going to send a new PR fixing it with the ugly router.routes[route].props =, ok?\n. @shakdoesgithub unfortunately I had to focus on launching my project (which will happen later this month), so I couldn't keep up with the changes here.\nI'm using a fork right now, with 1 commit that I didn't try to merge with @aksonov's version. Here is my version: https://github.com/danielweinmann/react-native-router-flux/tree/d88aa3b84ee908aca3aa3a5ef6edad4180ee820b\nI don't recommend using my fork, though. @aksonov is probably better, mine is 2 months old, but maybe you can take a look at my commits and see if you can create a PR here for fixing this issue if it is still present.\n. @aksonov, the problem is detailed in issue #184, and this gist reproduces it: https://gist.github.com/danielweinmann/09a2c980fe2fa405eb39\nActually, I believe its the opposite of what you said: Router (the default export in ReactRouter.js) passes its props to ExRouter on every render.\nAlso Router (now the one in Router.js) receives these props and passes them to every Route. But only in its constructor. Here it is, in _addRoute: https://github.com/aksonov/react-native-router-flux/blob/master/Router.js#L91\nRouter (the one in Router.js) is not a React Component, so it doesn't have ways to pass the props to every Route again. But this shouldn't be a problem, because this should be ExRouter's responsibility (or RouterIOS or any other adapter).\nThat's when the issue becomes clear: ExRouter receives the routes as attribute of the prop this.props.router, but this prop is not updated on subsequent renders, exactly because Router (the one in Router.js) is not a React Component.\nSo, when ExRouter renders every Route using this.props.router.stack, it will have outdated/static props on them. My change updates the props of the routes on ExRouter's this.props.router.stack on every render, which seems to be necessary both for flux or redux flows ;)\nIf you feel like putting my point to test, run my gist on both master and pass_router_props_on_subsequent_renders branches. At least for me, it works on pass_router_props_on_subsequent_renders and it does not work on master.\n. Looks good, @aksonov! I think we can remove ReactRouter's constructor and move createRouter to it's render or componentWillReceiveProps.\nI just don't think I understand the whole package enough to predict side effects to that. What do you think?\n. Having it on render() avoids duplication, actually, because using componentWillReceiveProps means that we must keep the constructor.\n. Got it! Question: what do you think of depending on something like https://github.com/substack/node-deep-equal ?\nI can include a custom deepEqual function to the code, to check for changes in props before rebuilding router, also, but if you're open to more dependency maybe it's a good idea.\n. It didn't work with the ReactRouter componentWillReceiveProps approach. Somehow ExRouteAdapter's renderScene is getting this as an outdated ExRouteAdapter.\nWhat do you think of merging this PR and creating an issue to make this better in the future? I have to move on with my project, and since it works now and the other approach have this weird behaviour (probably something we'll figure out soon enough) I think it's better to refactor in the future.\nI'm interested in contributing more with this package in my free time, tough. So I'll probably tackle this myself soon.\n. I'm not sure. Probably it will affect performance if it receives unrelated props.\nBut I think passing props carefully is the responsibility of the caller ;) anyway, this is the standard behaviour in React. If you pass new props to a component (say, Router) it should rebuild.\nIf anyone complains about performance issues in this case, we'll probably have to tell them not to pass props around irresponsibly :) but of course, if they have good arguments we can always improve our code.\n. @MITDelian the purpose of this PR is to have a way to re-render the components with new props when a parent's state, and thus props passed to its children, have changed. If you try the following Gist you'll see that it is a basic react/redux pattern that is broken: https://gist.github.com/danielweinmann/09a2c980fe2fa405eb39 ;) maybe you'll know of other ways to accomplish my goal. If so, please let me know.\n@aksonov and @MITDelian, I think a solution would be to filter wrapRouter and other props specific to the router, preventing them from being passed. What do you think of that?\n. @MITDelian, just wondering: why do you pass wrapRouter to Router? Shouldn't it be passed only to Route?\nCan you show me an example of your problem? I'm working on it now and would gladly fix it if I can understand it ;)\n. +1!\n. Why not make BaseRouter immutable/stateless and implement state management in an optional decorator?\n. Yeah, I understand that. I just think it's better to have different terms for each thing. I also think it means trouble when you have to document these kind of thing instead of making it evident on the code.\nThis line creates the main problem, in my view: https://github.com/aksonov/react-native-router-flux/blob/master/index.js#L4\nWe're calling the react adaptation internally ReactRouter but exporting it as Router. It becomes more troubling because we already have a Router class internally as well.\nAs for the prop \"router\" on ReactRouter, I think it should be called \"plugin\", then.\n. Great ;) I'll try to do this and update the README as I do this.\nI don't know when, though. If anyone else wants to do it, please feel free. I'll check here before starting.\n. @philipshurpik, the example uses Router because we were exporting ReactRouter as Router before. That's the good part of this refactoring: it doesn't change anything for the user of the package, only internally.\nI like the ideia of having ExRouter and RouterIOS in a 'plugins' folder! :D the other classes I don't know where is a good place for them yet. @aksonov?\n. Sorry, @aksonov, I used git commit -am :S my bad.\n. Created a new PR here: https://github.com/aksonov/react-native-router-flux/pull/196\n. @timsuchanek, did you test it without live reloading and chrome debugging? For me it's only (extremely) slow when I have live reloading or chrome debugging on ;)\n. @aksonov, the last commit kinda proves the point I was making in my last large comment on #184.\nIn these methods, this.props is outdated and props is updated. I don't know why yet, but I'm pretty sure it has to do with the way BaseRouter stores it's routes and props. These values stay static there, since there is no react lifecycle there.\nBut don't get me wrong: I believe its great that BaseRouter is not a React Component. We'll just have to think more carefully about it's architecture and investigate these problems more thoroughly ;)\n. @aksonov I'll try to take a look later this week!\nAbout your suggestion, I don't think after new action is a good enough place to set new props. It's important that every react component re-renders when receiving new, different, props.\nNo matter what they know about their own state, things can change on the outside and shouldn't have to dispatch an action to change.\nI'm still guessing the main reason you guys don't share my line of thinking is because you all must be using a big root router that manages a whole app. Is that right? In my case, I have a lot of state management without any route and a few small routers deep inside my rendering stack. This makes sense for me, since I only want to have a router when I need navigation functionality, and in a big part of my app I don't need navigation. It would mean a lot on unnecessary code to have a big root router.\nSo I need a way to do just that: rebuild the whole stack for new props coming from Router.\nPS: I still don't like my solution in terms of elegance of the code. But it solves this scenario, and any other solution presented so far don't.\nPS2: I think when @MITDelian finishes making BaseRouter immutable we will see more clearly how to make my solution better.\n. ",
    "keeth": "Seeing this issue.  It happens on my iPad but not in Simulator.\n. ",
    "jungsoo108": "list view (tab bar not hidden), press row\n-> push item detail view (tab bar not hidden), press show map button\n-> push map view(tab bar hidden)\ni try push map view in root router, and encount problem after pop.\nafter pop map view, Actions.currentRouter is root router not router of item detail view.\nso Actions.pop() on item detail view not working.\ni think hideTabBar props of Route is one of solution.\nif that is not good, help me, give another solution.\n. today, i see your comment and code.\nsorry for late feedback.\nyour commited code is good, and it is really helpful for my app\nthank you\n. ",
    "pagrawl3": "I have a similar issue, I've defined another router inside a component with other views, It gives me current router = undefined. Can we pass a reference of the parent router to the child router (possibly inside another component) ?\n. ",
    "amrnt": "@pagrawl3 I saw some other closed issues mentioning the same issue here... but it's not really obvious if its fixed in some way... Let's see what @aksonov will add :)\n. @aksonov here's a gist: https://gist.github.com/amrnt/a70453f8309fd1fd1363\n. @aksonov Here you go https://github.com/amrnt/test-react-native-router-flux-180\n. I'll try this when I'm home. I will close it if this solution is working :smile: thanks!\n. route={this.props.route} in the inner params solves the issue.\n. @aksonov This not working as the new version 3.x. Here's my new code:\n``` js\n// Main.js\nimport App from './containers/App.js';\n...\n\n\n\n\n\n\n\n\n```\n``` js\n// App.js\nrender(){\n    return (\n       // ????\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n    )\n  }\n``\n. Com'on mate! It's obvious that they copied your code and called it 'inspiration'! And no one should their \"component\" since -at least- its not a \"fork\" of this project... and mentioning this here means how good isreact-native-router-fluxcomparing to otherreact-native-router` out there.\nWhat I mean In my question: calling \"an action from outside tabs router\" doesn't render the component inside the current tab... or?\n. feed tab -> single item -> user profile\nfeed tab -> single item -> comments list -> user profile -> user posts -> comments -> other user\nnotification tab -> single item -> user/comments ->  ...\nEach view above represents a route...\n``` js\n\n    // ...\n    \n\n\n<Route name=\"tabbar\">\n    <Router footer={TabBar}>\n        <Route name=\"feed\" schema=\"tab\" title=\"Feed\" component={Feed} />\n        <Route name=\"notification\" schema=\"tab\" title=\"Notification\" component={Notification} />\n    </Router>\n</Route>\n\n\n```\n. @aksonov May you add this to the example? I'm having terrible time trying to understand/implement it :(\n. ",
    "bodhi": "No I haven't. Is this the correct/preferred way to deal with this? Maybe I missed it in the docs.\n. ",
    "kiranruth": "@erdostom did you get this it to work ?\nTIA. ",
    "SudoPlz": "@jamesone for some reason I can't get this to work. Did you get it working with the latest rnrf version? I assume its no longer there.\n. Did you solve this? How ? Could you please share? Thank you.\n. @fionita didn't that result in messy code? If I understand correctly you no longer use the ExperimentalNavigator that comes with the navbar, but you're using ToolbarAndroid with Android and NavigatoriOS with iOS ? \nSo you actually manage the ToolbarAndroid and NavigatoriOS on each schene seperately?\n. Am I wrong to think that v3 of react-native-router-flux still uses its own store?\n. I see, thanks for the clarification man! Your library is awesome.\n. @aksonov Please shed some light on this question, is there any way I can update which schene the user sees whenever my (redux) store changes..?\n(For instance if I update my store from chrome devTools)\n. I've got trouble seeing the right button in 3.2.2. I use the code from your example but nothing appears. I'll keep on looking in case I'm missing something.\n. Yes I understand that, I'm using that exact code but I don't see any Right button on my nav bar.. Am I missing something? \nEdit: Found out that it is indeed rendering but behind the nav bar. New issue here\n. @sslash If you do this can you please post it back in this issue so that we can also reuse your code please? \nThanks!\n. @brien-crean on which react-native and react-native-router-flux versions?\n. I just had that problem thanks for fixing it.\n. Because _reactNativeRouterFlux.Actions[schene] is not a function is the error I get.\n. Omg it was totally my bad. Actions[scheneKey](); is working after all, I had a typo in the scheneKey... Sorry for wasting your time. \n. @aksonov hi, please reopen the issue, here is the example modification. \nThe SAME exact issue happens on the example, here is a photo:\n\nhttps://github.com/SudoPlz/react-native-router-flux/blob/master/Example/Example.js\n. It has something to do with a parent navbar overlapping the child, if you use the renderRightButton on the root schene with no other schenes it always works! The same happens if you hide the parent and show just the child navbar.\n. I could not get it to work either, till then I just go and tamper the back_chevron.png img in the node_modules/react-native-router-flux/src directory.\n. Will try that, thanks for reporting this brother.\n. Can you open a pull request?\n. Ok I close the issue until I create an example of this.\n. I'll check it and let you know!\n. Could this perhaps be a future feature or should I just close the issue?\n. On which file should I look for the Navigation bar component and its styles?\n. Ok thanks!\n. Hey @aksonov , I found a way to get the dimensions within NavBar.js, but I'm currently trying to figure out a way to pass that object with the width and height back to the user. \nIf your project was using redux, I would dispatch an action to save the object to the current state, but I'm so confused on how to pass that object to the end user with your library. \nAny suggestions please?\nOnce I get this done I will open a pull request.\n. Ok so since my pull request was not accepted, here is how to set your View to render below the nav bar in both iOS and Android: \npaddingTop:Platform.OS === 'ios' || Platform.Version > 19 ? 64 : 44,  //nav bar height\n. @af7 The code is no more valid. I got this code from https://github.com/aksonov/react-native-router-flux/blob/0.26-stable/src/NavBar.js#L58 but apparently this has changed in the latest version. \nNow the code has changed to (https://github.com/aksonov/react-native-router-flux/blob/master/src/NavBar.js#L66):\njs\n...Platform.select({\n      ios: {\n        height: 64,\n      },\n      android: {\n        height: 54,\n      },\n    }),\nTherefore the correct code now should be:\npaddingTop:Platform.OS === 'ios'?  64 : 54, //nav bar height\n. @af7 Yes!\n. Ok check this out and let me know if it is correct, I can now get the dimension of the nav bar in my reducer like so:\n```\n        const reducerCreate = params=>{\n            const defaultReducer = Reducer(params);\n            return (state, action)=>{\n          switch(action.type){\n            case \"refresh\":\n              console.log(\"Nav bar dimensions:\",action.navBarDimensions.height); \n              break;\n            default:\n              break;\n          }\n          return defaultReducer(state, action);\n        }\n    };\n\n``\n. Hmm sure but I'm new to react-native-router-flux, how would I access it otherwise?\n. Well then what should I do, wouldthis.props.navBarDimensionswork in any Schene now? Haven't tested that yet.\n.this.props.navBarDimensions` is nowhere to be found at the moment (answering my own question above). null null null\n. Ok this comment is so confusing to me right now. \nThis is pretty much my init.js file at the moment:\n``` javascript\n/\n\n  * ## Initial state\n  * Create instances for the keys of each structure in example app\n  * @returns {Object} object with 4 keys\n  /\n  function getInitialState() {\n    const _initState = {\n      auth: new authInitialState,\n      device: (new deviceInitialState).set('isMobile',true),\n      global: (new globalInitialState),\n      profile: new profileInitialState,\n      router: new routerInitialState\n    };\n    return _initState;\n  }\nlet Example = React.createClass( {\n      render() {\n    const store = configureStore(getInitialState());\n\n    //Connect w/ the Router\n    const Router = connect()(RNRF.Router);\n\n    // configureStore will combine reducers from Example and main application\n    // it will then create the store based on aggregate state from all reducers\n\n\n    var self = this;\n    var renderRtBtn = function renderRtBtn(){\n      return\n    }\n    const reducerCreate = params=>{\n        const defaultReducer = Reducer(params);\n        return (state, action)=>{\n\n          switch(action.type){\n            case \"push\":\n              store.dispatch(navigateState(action.key));    //I navigate to the state I want to go using my action creator (uses Actions.ScheneName on the background)\n              break;\n            case \"back\":\n            case \"BackAction\":\n              store.dispatch(navigateToPreviousState());    //I navigate to the previous state using my action creator (uses Actions.pop on the background)\n              break;\n            case \"refresh\":\n              console.log(\"Nav bar height:\", action.navBarDimensions.height); \n              store.dispatch(setNavBarDimensions(action.navBarDimensions));\n              break;\n            default:\n              break;\n          }\n          return defaultReducer(state, action);\n        }\n    };\n    return (\n      <Provider store={store}>\n        <Router hideNavBar={false} createReducer={reducerCreate} sceneStyle={{backgroundColor:'#F7F7F7'}} >\n          <Scene key=\"modal\" component={Modal} >\n            <Scene key=\"root\" navigationBarStyle={{backgroundColor:Colors.primaryColor}}  titleStyle={{color:Colors.mainTextColor, fontFamily:\"Whitney\"}}>\n              <Scene key={ScheneKeys.ONBOARDING} direction=\"vertical\" component={Onboarding} type=\"replace\" hideNavBar={true} />\n              <Scene key={ScheneKeys.LOGIN} component={EmailSignIn} hideNavBar={false} title=\"Sign In\" type=\"push\" renderBackButton={()=><BackBtnImg/>}  renderRightButton={()=><RightPavLogo/>}/>\n              <Scene key={ScheneKeys.REGISTER_STEP_1} component={EmailSignUpStep1} type=\"push\" hideNavBar={true} />\n              <Scene key={ScheneKeys.REGISTER_STEP_2} component={EmailSignUpStep2} type=\"push\" hideNavBar={true} />\n              <Scene key={ScheneKeys.REGISTER_STEP_3} component={EmailSignUpStep3} type=\"push\" hideNavBar={true} />\n              <Scene key={ScheneKeys.REGISTER_STEP_4} component={EmailSignUpStep4} type=\"push\" hideNavBar={true} />\n              <Scene key={ScheneKeys.TOPIC_PICK} component={TopicPick} schema=\"modal\" type=\"push\" hideNavBar={true} />\n              <Scene direction=\"vertical\" key={ScheneKeys.NEWSFEED} title=\"News Feed\" hideNavBar={true} panHandlers={null} duration={1} tabs={true} initial={true}>\n                    <Scene key={ScheneKeys.TAB_NEWS} title=\"News Feed\" component={NewsFeed} icon={TabIconFactory} navigationBarStyle={{backgroundColor:Colors.primaryColor}}  titleStyle={{color:Colors.mainTextColor, fontFamily:\"Whitney\"}}/>\n                    <Scene key={ScheneKeys.TAB_NOTIFS} title=\"Notifications\" component={NewsFeed} icon={TabIconFactory} navigationBarStyle={{backgroundColor:Colors.primaryColor}}  titleStyle={{color:Colors.mainTextColor, fontFamily:\"Whitney\"}} notifications={[\"a notification\", \"another notification\"]}/>\n                    <Scene key={ScheneKeys.TAB_PROFILE} title=\"Profile\" component={Profile} icon={TabIconFactory} navigationBarStyle={{backgroundColor:Colors.primaryColor}}  titleStyle={{color:Colors.mainTextColor, fontFamily:\"Whitney\"}} initial={true}/>\n              </Scene>\n            </Scene>\n          </Scene>\n        </Router>\n      </Provider>\n    );\n  }\n});\n/**\n* registerComponent to the AppRegistery and off we go....\n*/\n\nAppRegistry.registerComponent('ExampleApp', () => Example);\n\n```\n@rturk The reason I need the dimension of the navigation bar is because I want to know its height, so that I can start rendering my schene children below it. If otherwise some of my children will be hidden beneath the navigation bar. I have to specifically set my View to start at top= navigationBar.height.\n@aksonov you said:\n1. don't use 'refresh' but your redux dispatch\n   But the Actions.Refresh() call is currently within the react-native-router-flux code, so I cannot use my own redux dispatch within there can I?\n2. connect RNRF Router to your redux.\n   I think I have that in my code in line: const Router = connect()(RNRF.Router); but I neeever really understood how it works. I NEVER managed to get dispatches from RNRF directly within my own reducers.\n3. all properties you passed to Router from 'connect', will be globally available across all scenes\n   Would you please mind giving a line of code or 2 as an example to this statement?\n. @rturk Teach me sensei! Could I please see some code with this as an example? Trying to style views using flexbox is already hard enough for me, would you be kind enough to share some code so that I can see your custom NavBar and how you implement this?\n. So still no solution to this..\n. @aksonov I believe react 0.26.0 is out.. Check https://github.com/facebook/react-native/releases, the latest tag is 0.26.0 half an hour ago.\n. @aksonov  Try now, its up! \n\n. Ok this had nothing to do with the Animated.View, it had to do with me calling scrollResponder.scrollResponderScrollTo after I called Actions.pop().\nI close the issue and leave it here if someone faces this in the future.\n. @andrispraulitis I know that I have reducer code for both.\n@aksonov I don't have time to create a project to reproduce this, I disabled swiping and just called Actions.pop() manually to solve this for now.\n. Looks good to me.\n. ",
    "shakdoesgithub": "@danielweinmann are you still having this issue?\nI have a redux provider wrapping the router, and it's not passing the store props down to the route with the 3.2.7 react-native-router-flux version.\n. @danielweinmann I got it to work by using the latest version and using the compiled version of your scenes. \n```\nconst scenes = Actions.create(\n  \n\n\n);\nclass RouterContainer extends Component {\n  render() {\n    console.log('RouterContainer render', this.props)\n    return(\n      \n\n    )\n  }\n}\nclass ConnectedRouter extends Component {\n  render() {\n    return (\n      \n    )\n  }\n}\nConnectedRouter = connect(state => ({\n  todo: state,\n}))(ConnectedRouter)\n```\n. @matt-d-rat how are you passing your redux state to the components?\n. ",
    "ericvicenti": "Excellent! Let me know how I can help, or if you have any feedback. \nThose docs are slightly out of date. I'll update them this afternoon :smile: \n. I'm happy to see that you're experimenting with it. Bu my hope is that we won't need to rely on many libraries, so people can easily do navigation out of the box with react-native. If you're missing anything important from the built-in Navigation library, please consider sending a PR to react-native so everybody can benefit!\nIf you want to create custom reducers or navigation views, those would be great to publish independently!\n. You will probably learn the most by looking through the examples: https://github.com/facebook/react-native/tree/master/Examples/UIExplorer/NavigationExperimental\nRight now the docs are quite sparse, but I'm working on them here: https://github.com/ericvicenti/navigation-rfc/tree/master/Docs\nIf you want to contribute to the docs, that would be very welcome!\n. ",
    "grin": "Storing router's transitions stack as redux state is the only feature I'm missing from this great library\n:+1: \n. @aksonov No problem at all. That was just meant as encouragement to @MITDelian and his idea that he mentioned he is working on. From a library user perspective this sort of functionality would be really nice to have out-of-the-box and I believe it would make this lib even more attractive.\n. ",
    "sbycrosz": "Hey there, \nI'm interested in helping out. So far I could think of 3 possible ways:\n1.  Implement the animation in the modal view itself (example: ExNavigatorModal example, or https://github.com/sbycrosz/react-native-router-flux/commit/1a386d16b273e42f838e805fbee0e3a63cc9158f)\n2.  Integrate the animation into the Router object (Will likely need to add another modal animation params since I'm not sure if we could reuse sceneConfig)\n3.  Use type=\"push\" to display full-screen view with transparent background (will include a lot of sceneConfig overriding)\nSo yeah, any comments?\n. It's working pretty well..\n\nThe timing function need some fine tuning though..\n. After some thought, I think it's better to let the user animate their own modals since it's quite simple and they could have more control over it (i.e. modal size/ animation/ backdrop/ gestures etc.), and also https://github.com/maxs15/react-native-modalbox has nice swipe-able modals that easy to integrate.\nExample: https://github.com/sbycrosz/react-native-router-flux/commit/a5dac2e0e1a231fcb4df6f1befdcdc9bd2484c2b\n\n. I can confirm the example app slowed down on Android 4.4 (It takes ~2s from clicking a button to any route changes).  And the exNavigator examples don't have the same issue.\nEdit: After enabling chrome debugging the delay magically disappear -____-\n. @braco sadly, I haven't upgraded to 3.x yet. \nBut I guess It would be particularly similar i.e. on componentDidMount do the animation using RN Animated API.\n. I guess this'll continue on that thread :]\n. But then RNRF v2 breaks on the latest version of React Native because of what I believe to be the split React and React Native import introduced in RN 0.25.x\nWould you still accept a PR for 2.x?\n. ",
    "ljhender": "Yeah @sbycrosz @aksonov thats actually how we solved this problem. Animating the actual modal itself was the best solution to this. We could update the documentation for people curious as to how to do this however.\n. ",
    "ninjz": "With the current modal implementation, I can't seem to get this type of functionality (non full screen sized modal with a transparent backdrop). \n. hmm so I set the type of the modal schema to type \"modal\", and made it dismiss by calling Actions.dismiss() and that seemed to work. But the issue now is that when displaying the modal, it gets stuck half way with the tab bar staying at the center.  (it also does not animate from the bottom anymore either) \n\n. Awesome that worked thanks for the quick response. Is there any way to keep the FloatFromBottom transition when doing a modal popup like this?\n. ahh i see alright will definitely look into doing that. cheers\n. I too would like to know if this can be done. If you see native iOS applications like Instagram for example the scenes slide to the left on transition and does not have the popping effect\n. For me swipe-to-go-back is not working now with null passed to panHandlers\n. Yea, and just realized it is occuring on Android as well. this is for v3.35.0, i reverted back to 3.30 and the problem does not occur\n. Experiencing the same issue. For me this is also causing weird behaviours where touches are being captured and preventing scrolling on scroll views.\n. So how exactly are we supposed to deal with this issue?. After some digging here seems we can get the old behaviour by using jump. Very misleading as the API docs state jump is for Tabs only @K-Leon . ",
    "braco": "@ljhender: would be interested in your implementation, if available\n. @sbycrosz: have any good techniques for the new version?\n. @MITDelian - you still working on this?\n. The key seems to be changed for some reason. When I started using Switch (or maybe after an upgrade, I need to investigate), I noticed that my nav buttons weren't highlighting correctly. The key name for the child route is changed from \"Foo\" to \"Foo_\"\n. There are 172 open issues, the API is unstable, and these problems are so substantial that I'm wondering if it isn't time to move away to a simpler, more stable package. Or just bare metal:\nhttps://github.com/fbsamples/f8app/blob/master/js/F8Navigator.js\nhttps://github.com/react-native-simple-router-community/react-native-simple-router\nhttps://medium.com/@dabit3/react-native-navigator-navigating-like-a-pro-in-react-native-3cb1b6dc1e30#.cjciz4qnw\nhttps://github.com/satya164/Croma/blob/master/src/components/Scene.js#L74\n. Yikes, this isn't good if true\n. ",
    "jdmunro": "I'm also trying to get a modal to appear transparently over some other scenes. I've tried the example from @sbycrosz but this doesn't seem to work anymore because Schema is no longer supported. I can get a modal to appear but it is not rendering the scenes beneath. Has anyone had any luck?\n. Thanks @ms88privat I'll give that a go \ud83d\udc4d\n. Just wondering if this solution was ever implemented?\n. Did anyone make any progress with this issue? I'm having similar problems.\n. I am also experiencing this issue.\n. ",
    "ms88privat": "@jdmunro its working something like this. You can find it in the documentation here\n``` jsx\nimport {Scene, Router, Modal} from 'react-native-router-flux';\n\n\n       .... normal scenes\n    \n\n\n\n```\nThen push and pop the modal like normal, hope this helps. The Modals will overlay all of the scenes with key = 'home'\n. @xanderlu thanks for this PR. But this is not working for me. If I swipeToGoBack, and do Actions.pop(), it does not route.. Only BEFORE_ROUTER_POP and AFTER_ROUTER_POP are getting dispatched.\nIt does work when I pop() a second time. If I don't use swipeToGoBack it is working on the first time like expected.\nCould you please help me here? I'm using the 2x Version, so this should matter\n. \nthe stack is not updating for every swipeToGoBack :/\n. @blocka you could have a look at the source code. \nhttps://github.com/facebook/react-native/blob/9a82c03e1f3415e255c5936aa2c35f0fd006a785/Libraries/CustomComponents/Navigator/NavigatorSceneConfigs.js\nTo diasble the gestures override the SceneConfig\njs\n// ES2015\nconst newConfig = {...Navigator.SceneConfigs.VerticalUpSwipeJump, gestures: null};\n// or\nvar newConfig = Object.assign({}, Navigator.SceneConfigs.VerticalUpSwipeJump, {gestures: null});\n. Is this now possible with 0.26? Is there any example for a custom animation? Thanks!\n. https://github.com/aksonov/react-native-router-flux/issues/525\nEdit: I think the documentation should be more clear about the 0.22 version. The first time I read it, I also thought you need at least this version, but not explicit.\n. @Olliepop where do I find it? I see no tag? Which of the branch is the correct one? Thanks\n. In my style.js file, I handle all the logic between Android and iOS like:\njs\nexport function getHeaderHeight() {\n  if(Platform.OS === 'ios') {\n    return HEADER_HEIGHT_IOS;\n  } else {\n    return HEADER_HEIGHT_ANDROID;\n  }\n}\nThis is also useful to have:\n``` js\nif(Platform.OS === 'ios') {\n  DEVICE_HEIGHT = Dimensions.get('window').height;\n} else {\n  var ExtraDimensions = require('react-native-extra-dimensions-android');\n  // REAL_WINDOW_HEIGHT - Actual height of screen including system decor elements\n  // REAL_WINDOW_WIDTH - Actual width of screen including system decor elements\n  // STATUS_BAR_HEIGHT - Height of the status bar\n  // SOFT_MENU_BAR_HEIGHT - Height of the soft menu bar (supported on most new Android devices)\n  // SMART_BAR_HEIGHT - Height of the MeiZu's device smart bar\nDEVICE_HEIGHT =\n    ExtraDimensions.get('REAL_WINDOW_HEIGHT') -\n    ExtraDimensions.get('STATUS_BAR_HEIGHT') -\n    ExtraDimensions.get('SOFT_MENU_BAR_HEIGHT');\n}\n``\n. @mywaystar add this to your package.jsonreact-native-router-flux\": \"github:aksonov/react-native-router-flux#masterand thennpm update. Creating a view (and destroying a view) before pushing them would be very cool. Would like to see an example of how to do it.\n. @anthonywebb I tried the sub-scenes thing @wireblue mentioned and it did work for me.\n. the old behaviour sounds like a bug to me. But I can see the usefulness of it. Can we make it by explicit setting a new prop likehideTab={true}` ?\n. related to https://github.com/aksonov/react-native-router-flux/issues/209 and this pr\n@joenoon did you find a solution yet?\n. hm, this is only resulting in a \"popup\" style of navigation. So the navbar will overlay the current navbar without a transition and so on. I would be fine with this, but I got another problem with the navbar. It is immediately be visible instead of being animated with the view transition. Also somehow I'm missing the back button.\nI think I have to sleep another night and reproduce it step by step with some example data\n. Thanks a lot. Yes, I will try your branch tomorrow.\n. \ud83d\udc4d \n. I often do things like \"if componentDidMount and data is not available, load something\". But this doesn't work anymore, because I reset my Redux-Store (if the user logs out) but the components are not going to mount again because the Router still exist.\nMaybe there should be an option on the new switch component if it should unmount the other case\n. @cridenour Thanks, but this doesn't work for me. Tried to reset every scene I got, but my last selected Tab is still active and will not mount again.\n. @rturk Thanks for the hint again. Now I gave this solution a second thought and it should work with two Routers too.\nBecause in my case a simple Login Screen isn't good enough, I need routing there too. That's why it is integrated in the current Router setup.\n. @rturk I'm using redux. But this is not the problem. What I need is something like this. Only one Router at a time.\n``` jsx\nrender() {\n  return this.props.authenticated ? this.renderHome() : this.renderLogin();\n}\nrenderHome() {\n return ;\n}\nrenderLogin() {\n  return ;\n}\n```\nI can't use the Switch Component of Router because it will keep both Scenes in Memory (which will prevent the componentDidMount Events from happening again also)\nAny solution for this Problem? I think I have to use the pure Navigator for the second Router instead of the Router from Router-Flux. \n. @cridenour let me try that again. Maybe I run into the naming conflict with the new Action Names\n. @cridenour thanks. Looks like it is working. I think I also did not use type=reset correctly the last time. Now I put it directly on my HomeView and LoginView as prop with the Action constant\n. @cridenour But its still not perfect. If you could have two Routers it would be better. Right now the View is in memory and still rendered in the Background! It's not good for older devices and the other aspect is, that the Scroll Position is preserved (even after RESET). And the scroll position is really far on the bottom because of the login button :(\n. @cridenour this solution doesn't work. The View itself will mount again. But not my Components inside the View. Because it is still rendered.\nEdit: let me try to expand the Switch Module for this feature\n. Ok, I got it to work! I will create the pull request now :)\n. @joenoon omg, didn't know about the key thing. With this it should be possible to render two Routers (like I mentioned above).\nBut my PR for the Switch component is still useful. So you can have only one Router and have the benefit of unmounted Scenes while switching.\n. @rturk my Router is very nested and it seems to work fine.\nI got three tabs in my Switch Scene. One of them is a normal Tab Scene. All working fine. There shouldn't be any breaking changes, because it all depends on the new prop \"unmountScene\" which you have to add to your switch scene.\n. @blackxored \n\nMore specifically, I have a tab view that links to a non tab view (outside of that scene's container)\n\nthis could be a problem. Does your navbar behave strangely if you push/pop the route?\nDid you try it as a Modal?\n. @sarovin did you have a look at this https://github.com/aksonov/react-native-router-flux/pull/932 ?\nmaybe it fixes your problem too. It was merged only recently. Please try to set the prop \"unmountScenes\" on your switch component\n. @sarovin you are right. If some scenes are pushed, my solution doesn't work like expected. I will try your solution now\n. I tried your solution. It behaves slightly different then mine (starting from first Tab again, which is good), but you suffer from the same problem like my solution if a Tab has pushed Scenes.\n. @sarovin I'm sorry, I have no time at the moment. It looks something like this:\n- Scene as switch with case1 and case2\n  - case1: login / loading\n  - case2: tabs with tab1 and tab2\n    - tab1: multiple scenes (PUSH a Scene here)\n    - tab2: ...\nControl Flow:\n- switch from case1 -> case2 and then push a scene in tab1\n- switch back from case2 -> case1\n- login again from case1 -> case2\n  => tab1 will have the pushed scene as initial scene (which breaks the whole navigation for the User at this point, because the scene is not pushed, it is the tab right now, without a backButton)\n. @sarovin don't think so... but maybe. I will give it another try on 30.07. Right now I'm in the middle of a relocation.\n. @Arthraim please try the newest version of router-flux and then add the prop \"unmountScenes\" to your Switch component. E.g.:\njsx\n<Scene key=\"main\"\n               component={connect(state => ({login: state.getIn(['auth', 'login'])}))(Switch)}\n               tabs={true}\n               unmountScenes\n               selector={(props: {login}) => {return (props.login ? 'dashboard' : 'welcome')}}>\n    <Scene key=\"dashboard\" />\n    <Scene key=\"welcome\" />\n</Scene>\n. ",
    "Naoto-Ida": "@sbycrosz Thanks for the example! Unfortunately it doesn't seem to reappear when I call the same action.. Never mind, if you set the onClosed callback to Actions.pop instead of Actions.replace, the example works.. @toadums Thanks for pointing this out. Finally figured out the last issue on our app's issues list.. +1 would be a great addition for what I'm developing right now :). I can't recreate this.\n- react-native-router-flux v3.35.0\n- react-native v 0.34.1\n<Scene\n  key='showPost'\n  component={PostContainer}\n  leftButtonIconStyle={{tintColor: '#fff'}}\n   queries={{viewer: () => Relay.QL`query { viewer }`}}\n/>\nThis shows a white back arrow as the left icon when I push to the component.\n. So suddenly babelRelayPlugin starting acting up and could not transpile...\nAfter I made some fixes to remove the error, the arrow is back for some reason.\n. @weixingsun I just ended up calling renderBackButton as a scene argument. Now we have a custom back arrow that always shows.. +1. Is componentWillUnmount not enough?. @booboothefool Semi-offtopic, but this just came out yesterday. May be good if you're going for fluid transitions. My app depends on this lib, so I'll probably be sticking around.. Searching through issues and PR, I found #1472 which seems to address the issue I'm having (forgot to mention I'm using tabs). The changes presented seem to fix my issues, so closing this issue.. This is great. I have the same issue of double calls to Actions which cause two pushes to happen.. Closing this as a comment in #209 suggests the usage of clone prop.. Ah, I didn't see that issue.\nI think clone is a very useful prop that should be mentioned more predominantly.. My workaround is to obviously set the initial component to whatever I need to do some inspection on, but this is slowing my dev a bit. Any possible causes for this?. ",
    "xhyp0": "Awesome! Thanks @lynndylanhurley. I might be missing something dumb\u2014still kinda new to Redux and React Native, but after trying your PR, it looks like it's properly dispatching the actions when swiped. But, I still bump into the No current router is set issue. \n. Ah, my bad. I thought it was supposed to fix that bug since the issue that I field for it was duped to the bug that #204 closed. More details can be found on #197, but here are the general repro steps:\n1. Clone the repository\n2. Change entry for react-native-router-flux for package.json to point to current version. I just set it to file:../\n3. run npm install\n4. launch the project in the iOS Simulator\n5. click on `Go to TabBar Page'\n6. swipe back to the main page\n7. try clicking on any of the pages.\n. I think the fix is to set Actions.currentRouter, and it does seem to work (see https://github.com/xanderlu/react-native-router-flux/commit/dd660e8090d09b2bbcd5d2857c535c1cda44f01d), but I'm not sure if I'm putting it in the optimal spot or if doing so will cause other issues..\n. #231 should fix it.\n. ",
    "Elyx0": "Still bumping into the same error after a swipe \n. Experienced this today too. Had to change schema to the Android version even on ios so gestures pop would not be present in the FloatFromBottom\n. Came around the same issue where you can't call a nested tab route from outside the tab have to repeat the routes that are going to be used inside the tab across all tabs. I thought it was build in and I was doing something wrong. \n. Made a bit of digging:\nLet's say we're in a context like 1root route, 1 tabbar with nested routers:\njavascript\n<Route name=\"tutorial\"  initial={true}   hideNavBar={true} title=\"Tutorial\"  component={TutorialView} />\n<Route name=\"tabbar\">\n  <Router  footer={TabBar} showNavigationBar={false}>\n    <Route name=\"browse\" schema=\"tab\" title=\"th-list\">\n      <Router name=\"br_rooter\">\n        <Route name=\"b1\" component={BrowseSwitcher}  />\n        <Route name=\"b2\" component={MyComponent}  />\n      </Router>\n    </Route>\n    <Route name=\"me\"  schema=\"tab\" title=\"user\">\n      <Router name=\"me_rooter\">\n        <Route name=\"m1\" component={MeSwitcher}   />\n        <Route name=\"m2\" component={MyComponent}   />\n    </Router>\n    </Route>\n    <Route name=\"friends\" schema=\"tab\" title=\"list-alt\">\n      <Router name=\"fr_rooter\">\n        <Route name=\"f1\" component={FriendsSwitcher} />\n        <Route name=\"f2\" component={MyComponent}  />\n      </Router>\n    </Route>\n  </Router>\n</Route>\nFrom the Tutorial route, after the user finishes the tutorial I can't:\nActions.friends()\nActions.m1()\nOtherwise triggering _reactNativeRouterFlux.Actions.friends is not a function\nI only can:\nActions.tabbar() that will then mount the browse route that will then mount the br_router that will instanciate my BrowseSwitcher component.\nThis BrowseSwitcher is allowed to navigate only to its direct children or some siblings such as Actions.me() and Actions.friends(). But even from here, I can't ask it to load a further nested route like Actions.f1().\nOnly solution is to use every first route inside nested tabbar routers as \"Switcher\" routes, that determine where the user wants to go... which is a pain..\nFrome m1 for example, I have to do Actions.me({goto:'m2'}) then MeSwitcher will pick the goto param and issue a Actions.m2().\nNote:  That switch can't happen too fast either, it has to be in the componentDidUpdate or the flow of actions will be cut too early, causing an error.\nTrying to solve _reactNativeRouterFlux.Actions.friends is not a function is not easy, I tried a quick test-patch in _addActions to add the missing actions first.\njavascript\n    _addActions(){\n        if (!Actions.currentRouter){\n            Actions.currentRouter = this;\n            debug(\"Set current router:\"+this.name);\n        }\n        console.log(Actions.currentRouter,Actions);\n        // Are we in a tab children\n        if (this.parentRoute && this.parentRoute.type == \"switch\"){\n          //Add parent parent children routes actions if exists.\n          if (this.parentRoute.parent){\n            const childrenRoutes = this.parentRoute.parent.routes;\n            const childrenKeys = Object.keys(childrenRoutes);\n            if (childrenKeys.length > 1){\n                 childrenKeys.forEach(name=>{\n                   if (name != this.parentRoute.name){\n                       const siblingRoute = this.parentRoute.parent.routes[name];\n                       siblingRoute.children.props.children.forEach(children =>{\n                         const name = children.props.name;\n                         if (!Actions[name]) {\n                         Actions[name] = function(data){\n                             return Actions.route(name, data);\n                         }\n                       }});\n                     }\n                 });\n            }\n          }\n        }\n        Object.keys(this.routes).forEach(name=>{\n            if (!Actions[name]){\n                Actions[name] = function(data){\n                    return Actions.route(name, data);\n                }\n            }\n        });\n    }\nAnd then a second problem came along is that Actions.js only tries children or parent router from where it is called, not siblings routers. So we need to help him find the correct Router that hold the tab we watch to switch to from another tab.\n``` javascript\n    route(name: string, props: { [key: string]: any} = {}){\n        if (!this.currentRouter){\n            throw new Error(\"No current router is set\");\n        }\n        if (props.toString()!='[object Object]')\n            props = {data : props};\n    props = filterParam(props);\n    // check if route is in children, current or parent routers\n    let router: BaseRouter = this.currentRouter;\n\n    // deep into child router\n    while (router.currentRoute.childRouter){\n        router = router.currentRoute.childRouter;\n        debug(\"Switching to child router=\"+router.name);\n    }\n\n    debug(\"Route to \"+name+\" current router=\"+this.currentRouter.name+ \" current route=\"+this.currentRouter.currentRoute.name);\n    while (!router.routes[name]){\n        const route = router.parentRoute;\n        //Check Siblings routers.\n        const siblings = route.parent &&\n                         route.parent.parentRoute &&\n                         route.parent.parentRoute.childRouter &&\n                        route.parent.parentRoute.childRouter.routes;\n        const {[route.parent.currentRoute.name]:_, ...otherSiblings} = siblings;\n        const foundInSiblings = Object.keys(otherSiblings).some(sibling=>{\n          const childRouter = route.parent.parentRoute.childRouter.routes[sibling].childRouter;\n          if (childRouter && childRouter.routes[name]){\n                router = childRouter;\n                debug(\"Found in siblings=\"+router.name,router);\n                return true;\n              }\n              return false;\n        });\n\n        if (!route || !route.parent){\n            throw new Error(\"Cannot find router for route=\"+name+\" current router=\"+router.name);\n        }\n        if (!foundInSiblings) router = route.parent;\n        debug(\"Switching to router=\"+router.name);\n    }\n\n```\nAnd It somehow worked... But only if you visited the route once before, causing childRouter to belong to the route object. Otherwise it's undefined until the route is visited. And even with doing all that, it only switches the tab, but not TO THE tab. If I was on b1 and calling Actions.f2, the fr_router will indeed be switched to f2 but I will not be moved from br_router to fr_router.\nAaaand that's it so far. I think the library owners could help us in the correct direction.\n. Actually. Kind of my bad from having <Schema name=\"swipe\" sceneConfig={Navigator.SceneConfigs.HorizontalSwipeJump}/> as a schema... runs in shame\nIs there a way to configure the gestures too then ? like https://github.com/facebook/react-native/issues/1014 Found https://github.com/aksonov/react-native-router-flux/issues/17 not sure if it's still up to date\n. Same issue, no idea.\n. Digging this, but it's really been a feature that people have asked since early days of v2. @iZaL how did you articulate the logic of jump + push ? Ho does tab1 knows he has to do the push to tab1_2 ? Is it something the switch component could handle ?\n. Oh okay manually with \njavascript\nActions.callback({key:'tabbar',type:'push'});\nActions.callback({key:'tab1',type:'jump'});\nGreat work :) !\n. Awesome work, thank you, so far so good. Will reopen if I see issues.\n. Did something like https://github.com/aksonov/react-native-router-flux/issues/468 I didn't try to mess with the code though...\n. I'm currently using static renderNavigationBar(props) in my classes with Redux.\njavascript\n  static renderNavigationBar(props) {\n    return <Header title=\"DefaultTitle\" connectStore='myComponentStore' />;\n  }\nHeader.js has a custom mapStateToProps that connects the given store using the connectStore prop.\njavascript\nfunction mapStateToProps(state, ownProps) {\n  return { [ownProps.connectStore]: state[ownProps.connectStore] };\n}\nThis way my static header can react to changes dispatched via redux after the server has given me the info and use the values as the title.\nFor simple cases though, the main component could simply do some Actions.refresh({title:'newTitle'}) I think it would get passed to renderNavigationBar, \n. ( @AlexDM0  Just curious about let over const for the functions declaration)\n. I wish we had a snippets folder in the repo where we can add that kind of things.\n. I had to alter the code of bit to support tabbar children with children and tabbar children without sub-children.\nMy scenes are kinda like:\njavascript\n  <Scene key=\"modal\" component={Modal} >\n    <Scene key=\"root\" hideNavBar={true}>\n      <Scene key=\"tutorial\" type=\"reset\" component={TutorialView}  hideNavBar={true}  />\n      <Scene key=\"tabbar\" tabBarStyle={tabBarStyle.bar} component={TabBar} tabs={true}>\n        <Scene key=\"1\" icon={TabIcon} title=\"1\">\n          <Scene key=\"1_1\" component={1_1}  title=\"1_1\"/>\n          <Scene key=\"1_2\" component={1_2}  title=\"1_2\"/>\n        </Scene>\n        <Scene key=\"2\" icon={TabIcon} title=\"2\">\n          <Scene key=\"2_1\" component={2_1} />\n          <Scene key=\"2_2\"  component={2_2} />\n        </Scene>\n        <Scene key=\"3\"  hideTabBar={true} >\n          <Scene key=\"3_1\" component={3_1} hideTabBar={true}  />\n        </Scene>\n        <Scene key=\"4\" component={4} icon={TabIcon} title=\"4\" />\n        <Scene key=\"5\" component={5} icon={TabIcon} title=\"5\" />\n      </Scene>\n    </Scene>\n    <Scene key=\"error\" component={Error}/>\n  </Scene>\nI had to change a bit so it would work for both:\n``` javascript\nconst inTabMenu = (state) => {\n  if (state && state.children && state.children.length > 0) {\n    return state.children[0].name = \"tabbar\";\n  }\n  return false;\n};\nconst getActiveTabName = (state) => {\n  if (state && state.children && state.children.length > 0) {\n    let cbase, parent = null, base = state;\n    while(cbase = base.children) { parent = base; base = cbase[base.index];  }\n    if (parent && parent.children.length) {\n       return parent.name;\n    }\n  }\n  return undefined;\n};\nconst getTabTreeIndex = (state) => {\n  if (state && state.children && state.children.length > 0) {\n    let cbase, parent = null, base = state;\n    while(cbase = base.children) { parent = base; base = cbase[base.index];  }\n    return parent.index;\n  }\n  return undefined;\n};\nconst getTabRootName = (state) => {\n  if (state && state.children && state.children.length > 0) {\n    let cbase, parent = null, base = state;\n    while(cbase = base.children) { parent = base; base = cbase[base.index];  }\n    return parent.children[0].name;\n  }\n  return undefined;\n};\n```\nThanks for the snippet @AlexDM0 \n. RNRF stable currently is with RN 0.22\n. What version are you using ? RN / RNRF ?\n. Actions.pop();\nActions.refresh(); ?\n. I've done it and it required a custom renderNavigationBar. Besides that you're building a dropdown like you would normally in React using state and Actions\n. So is .22 the latest stable or .24 is fine ?\n. Yeah I need the full power of RNRF, meaning tabs & replace & navigationState & static navigationBar, so v22 is  pretty much a safe heaven for now. But it puts people who uses it more and more behind from the standpoint of the other packages that rely on earlier versions of react-native.\n. There is different ways to solve this issue, I recommend you check other people issues (open/closed) about custom navigation bar, and/or integration with flux/redux.\n. This can be handled with a custom rnrf reducer. I implemented something along these lines back in v.22\n``` javascript\nimport { Reducer } from 'react-native-router-flux';\nconst inTabMenu = (state) => {\n  if (state && state.children && state.children.length > 0) {\n    return state.children[0].name = \"tabbar\";\n  }\n  return false;\n};\nconst getActiveTabName = (state) => {\n  if (state && state.children && state.children.length > 0) {\n    let cbase, parent = null, base = state;\n    while(cbase = base.children) { parent = base; base = cbase[base.index];  }\n    if (parent && parent.children.length) {\n       //console.log('activeTabName',parent.name,'[[<<<   >>>]]');\n       return parent.name;\n    }\n  }\n  return undefined;\n};\nconst getTabTreeIndex = (state) => {\n  if (state && state.children && state.children.length > 0) {\n    let cbase, parent = null, base = state;\n    while(cbase = base.children) { parent = base; base = cbase[base.index];  }\n    return parent.index;\n  }\n  return undefined;\n};\nconst getTabRootName = (state) => {\n  if (state && state.children && state.children.length > 0) {\n    let cbase, parent = null, base = state;\n    while(cbase = base.children) { parent = base; base = cbase[base.index];  }\n    return parent.children[0].name;\n  }\n  return undefined;\n};\nexport const reducerCreate = params=> {\n  const defaultReducer = Reducer(params);\n  return (state, action)=> {\n    // this part makes sure that when a menuIcon is pressed AND you are already in that menu tree,\n    // it goes back to the root of that tree\n    if (action.type === 'jump' && inTabMenu(state)) {\n      console.log('JUMP IN TAB MENU')\n      let activeTabName = getActiveTabName(state);\n      // We only want to reset if the icon is tapped when we're already in the view\n      //debugger;\n      if (activeTabName === action.key) {\n        // if we're already at root, do not do anything.\n        if (getTabTreeIndex(state) === 0) {\n          console.log('Already in root');\n          return state;\n        }\n        // snap to root.\n        //debugger;\n        let rootName = getTabRootName(state);\n        if (rootName) {\n          console.log(\"ACTION ROOT\", {key:rootName, type:'reset'});\n          return defaultReducer(state, {key:rootName, type:'reset'});\n        }\n      }\n    }\n    console.log(\"ACTION\", action);\n    return defaultReducer(state, action);\n  }\n};\n```\n. Opened https://github.com/aksonov/react-native-router-flux/issues/736 as it was previously working\n. Would be nice to add it to the docs of the drawer part\n. I've experimented the same.\nWhen navigating from down to top\nstatic renderNavigationBar(props) { is never called.\nIn his example\njs\n<Scence 'Login' />\n<Scene 'Dashboard' tabs=true />\n   <Scene 'Home' />\n   <Scene 'Fav' />\n<Scene 'ItemProfile' />\nCalling Actions.Login() from the Scene Fav would render the Login Scene without calling renderNavigationBar hence having the top bar empty.\n``` js\n'use strict';\nimport React, {Component} from 'react';\nimport {ScrollView, Text, View} from 'react-native';\nexport default class LoginView extends Component {\n  constructor(props) {\n    super(props);\n  }\nstatic renderNavigationBar(props) {\n    console.log(props,this.props,this);\n    return (\n      HELLO>\n    );\n }\nrender() {\n    return (\n      \nMy nav bar is gone if Action.Login() called me from a tabbar child route !\n);\n}\n}\n```\n. ",
    "dan-lee": "I don't think this issue should be closed, as it still occurs to me and apparently others.\nIs there any way to resolve/work around this?\n. I just did so! \n. @lynndylanhurley How did you work around the error No current router is set with the reducer in your PR https://github.com/aksonov/react-native-router-flux/issues/204?\n. @kesha-antonov I don't have a solution for this, but we use this workaround to disable the swipe gestures for the scene configs: Navigator.SceneConfigs.FloatFromBottom.gestures = null\n. @tristangodfrey Good issue, I need that feature too! :+1:\nDid you have some time working on this? \n. You should pass the props to the router: <Router name=\"startRouter\" {...this.props}>\n. :+1:  I'm also in need of this, so I proposed a PR.\n. Yes, that is the reason what @peterlazar1993 wrote. But React 0.22 should be released Mar 21, if you want to use a stable RN version.\n. ",
    "miknonny": "Realised i had to wrap all in Router. Issue solved.\n. ",
    "chetankotkar": "can you post an example .. or any link on how to do it... ",
    "timsuchanek": "Hey, yes I tried it without debugger enabled. But what I found:\nIf it has already been opened once, it's a lot faster.\nOnly the first 1-2 times it's slow.\nI'll check ExNavigator standalone\n. ",
    "soliury": "I have test the 'switch' on tab, it's too slow, about 1.5s to change the tab. I have turn off the chrome debug and live reload, it's the same.\n. ",
    "doomsower": "I've tried to debug Example app from version 2.3.1 on Android tablet. Animations were extremely slow.\nHere is console output with debug.js uncommented\nI also made a release build of simple app (using version 2.3.1) and ran it on Samsung Galaxy S3. Again everything was very slow.\nMaybe updating \"@exponent/react-native-navigator\": \"^0.3.5\" to latest will fix it?\n. @vykumar Are you sure you're testing with my fork of RNRF? If so, can you show some code? Because in my test project everything works fine and componentWillReceiveProps is triggered (you can find this test example here )\n. Until this PR gets merged (if at all) you have to use my fork, or you can apply this patch to whatever fork you use. \n. @aksonov I've added some info to main readme, near popNum param description. But it only documents pop action, and not popTo and pushOrPop, as I feel that main readme should be brief. I think as list of possible action and their parameters grows, a section should be created which describes all this stuff.\n. ",
    "doddys": "Hi,\nI am also experiencing slowness. However, when chrome debugging is enabled, it is faster .\nBehaviour in simulator (android and iOS) and physical device is the same as when chrome debugging is disabled.\nIs there anyway to disabled \"@exponent/react-native-navigator\" completely to isolate the problem?\nDoddy\n. Hi, \nI finally found why it was slow on my device/simulator. I was due to my own mistake. \nI was doing a console.log(action) in the reducers. That turns out slow things a lot. Especially when executed on the device. It was ok when chrome debugging was turned on because it is executed using the chrome javascript engine which is much more powerful (laptop vs device).\nAfter removing all the log(action), its much better now.\nDoddy\n. ",
    "TonyCois": "Hi,\nI had this problem too, but I solved it by disabling the dev mode.\nHere the issue on react-native github :\nhttps://github.com/facebook/react-native/issues/3049\nI tried another router and it was exactly the same on android. The demo was\nvery slow. So, I'm not sure that it comes to react-native-router-flux :)\nTony\nLe ven. 26 f\u00e9vr. 2016 \u00e0 03:10, doddys notifications@github.com a \u00e9crit :\n\nHi,\nI am also experiencing slowness. However, when chrome debugging is\nenabled, it is faster .\nBehaviour in simulator (android and iOS) and physical device is the same\nas when chrome debugging is disabled.\nIs there anyway to disabled \"@exponent/react-native-navigator\" completely\nto isolate the problem?\nDoddy\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/aksonov/react-native-router-flux/issues/199#issuecomment-189078772\n.\n. \n",
    "mofelee": "@doddys works for me \ud83d\udc4d\n. @doddys I'm using console.log in my logger middleware\ud83d\ude02\ud83d\ude02\n. ",
    "AleCaste": "Hello.\nI am experiencing this. I tried removing all calls to console.log throughout the project, tried turning dev mode off, tried using/not-using chrome debug... even tried to build a release APK and run your react-native-router-flux demo as is... and the problem still persists.\nTransitions may look ok for a while but if you stress the navigator out by going back and forward, the app will eventually slow down and sometimes will even freeze.\nThere is a comment on the related react-native issue https://github.com/facebook/react-native/issues/3049#issuecomment-143505930 that describes a workaround.\nOn the React Native official notes about Android performance, this workaround is also mentioned: https://facebook.github.io/react-native/docs/performance.html#slow-navigator-transitions\nWould it be possible to integrate the InteractionManager workaround on react-native-router-flux somehow?\nUntil then I feel I cannot really use the module on Android devices, which is a real pity.\n. ",
    "fabriziomoscon": "I was trying the Example updated as of today with both a real Android devide and simulator and it was simply unusable.\nI tried to update package.json so to use the latest react-native \"react-native\": \"^0.25.1\", and now it runs pretty smooth.\n. ",
    "jaynsw": "The above didn't fix. My Nexus 6 runs extreme slow can not be used in debug.\nWho can tell how you debug your android version...\nThe issue is not fix for a long time...\n. ",
    "6pm": "For nexus 5x not fixed too.\n. ",
    "dannycochran": "It looks like there's a pull request from RN (https://github.com/facebook/react-native/pull/10289) that updates NavigationExperimental to offload animations from the JS thread, which should resolve this issue.\nHowever, react-native-router-flux is using a forked version of NavigationExperimental (react-native-navigation-experimental), which has some deprecated files (e.g. NavigationAnimatedView is now NavigationTransitioner) so it's probably worth updating that.\n@aksonov is it possible to unfork react-native-navigation-experimental? It seems dubious to maintain a forked copy given the frequency of changes.\n. I think this is a duplicate of #199 \n. Agreed my solution is not great for UX issues. This may be related to https://github.com/aksonov/react-native-router-flux/issues/1282 and and https://github.com/aksonov/react-native-router-flux/issues/1281\n. IMO - as long as this library is using the forked version of RN ExerpimentalNavigation, that was forked almost a year ago, it's not a great decision to continue using this library. I don't fault the authors at all, it's really hard to maintain a library w/RN constantly changing its API.\nI'm now using react-navigation, which has good community support and the API behaves pretty similarly to this one. Hopefully it'll be the last router based refactor I do for a while.\nI'm closing this since it's unlikely to be fixed and there's a few workarounds. IMO the best workaround is moving to react-navigation.. Related to https://github.com/aksonov/react-native-router-flux/issues/1266, or does it happen regardless of timing of the switch?\n. Related #1281 and #1282 -- it's possible this could be fixed by https://github.com/dannycochran/react-native-experimental-navigation/pull/1, which will offload the animations to native rendering.\n. ",
    "foodaka": "on nexus 5 very slow with remote debugging turned on\n. ",
    "helderdb": "I've got the same issue. On an emulator it works okay. But on a device, the animations are extremely laggy (routing between screens that animate horizontally/vertically) when remote js debugging is enabled. too bad, will have to switch it on and off a lot.\nWiko Lenny 2\n. ",
    "leandrosimoes": "Just for information:\nA days ago, I'm figure that when I run \"react-native run-android\" to install in my device, for no aparently reason, it's taking about 15/20 minutes to finish (yes, I'm a hero for waiting). So after painfully run and run, changing somethings I figure out that my problem was that I'm behind a proxy and in I've commented my proxy configurations on gradle.properties file. So I uncomment the configurations and everything runs faster again. I really don't know why, but works for me, and to be sure I comment this configurations again and everything run slowly again. So, if someone is having this issue and any others solutions works, try put this lines in yout gradle.properties file (Only if you are behind proxy, of course):\n```javascript\nsystemProp.http.proxyHost=192.168.X.XX //put your server IP here\nsystemProp.http.proxyPort=8888 //put your server PORT here\nsystemProp.http.proxyUser=xxxxxxx //put your PROXY USER here\nsystemProp.http.proxyPassword=xxxxxxx //put your PROXY USER PASSWORD here\nsystemProp.https.proxyHost=192.168.X.XX //put your server IP here\nsystemProp.https.proxyPort=8888 //put your server PORT here\nsystemProp.https.proxyUser=xxxxxxx //put your PROXY USER here\nsystemProp.https.proxyPassword=xxxxxxx //put your PROXY USER PASSWORD here\n```\nI hope this help someone.. ",
    "franleplant": "Hey guys, this is what have the most impact to me (aside from dev=false and disabling remote js debugging)\nThe problem\nRouter transitions + android + react-native-svg\nThe solution\nObviously try to avoid Svg, but if you have to use them, then delay rendering them until the transition is made. You can use a variation of this technique: https://facebook.github.io/react-native/docs/performance.html#slow-navigator-transitions\nIn my case, the svg images are quite a few, but luckily they are rendered on the bottom of the screen, so the user needs to scroll in order to see them. So only delaying rendering those svgs had a huge impact in performance (initially it was about 4s and after it was about less than 1s).\nDelaying is quite tricky in it's own way so I created a HOC to do it. Here is the gist (take in account that I wrote in TS and I just striped the type information so it becomes JS but I have not tried it):\n```javascript\nimport React from 'react'\nimport { InteractionManager } from 'react-native';\nconst MAX_DELAY = 500;\nexport default function providePartialRender(Component) {\n  return class PartialRenderProvider extends React.Component {\n    // initialize state (same as inside the constructor, just syntax sugar)\n    state = {\n      partialRender: true,\n    };\ncomponentDidMount() {\n  const updatePartialRender = () => {\n    this.setState(state => {\n      state.partialRender = false\n      return state;\n    });\n  }\n  // workaround https://github.com/facebook/react-native/issues/8624\n  let called = false;\n  const timeout = setTimeout(() => { called = true; updatePartialRender() }, MAX_DELAY);\n  InteractionManager.runAfterInteractions(() => {\n    if (called) return;\n    clearTimeout(timeout);\n    updatePartialRender();\n  });\n}\n\nrender() {\n  const props = Object.assign(\n    {},\n    this.props,\n    { partialRender: this.state.partialRender }\n  );\n\n  return <Component {...props}/>\n}\n\n}\n}\n```\nSo now, the components that you enhance with this HOC will have a new prop called partialRender that will tell them whether to render a lighweight version of the component (partialRender = true) or to render everything (partialRender = false).. Ok, thanks a lot, just to document how I monkey-solved it:\ntypescript\n(Actions as any).wardrobe()\n. ",
    "Jickelsen": "See https://reactnavigation.org/ for the new \"official\" navigator from Facebook, which uses native animations for transitions.. You're right, the animated nav example in UIExplorer is rather slow too, though it doesn't freeze up completely. The other examples in that same app run fine however. I'll see if it helps turning off animations, and hope things improve to the official release.\n. ",
    "adambene": "@Jickelsen How official is it?. ",
    "vexsnare": "@adambene check collaborators list.. +1. Waiting for a solution.. @aksonov For time being any workaround for that or disabling transition is the only solution?. I am now migrating to React Navigation It looks really cool.. https://github.com/react-community/react-navigation. +1\nYes, title fade animation doesn't look natural in android. . @insaneinc01 @jvaclavik Are you able to disable slide animation for android?. Totally agree with @Rewieer . ",
    "arg0navt": "@doddys You are a great man! You know it?. ",
    "Kida007": "@doddys  Thanks man , you saved the day !\n. ",
    "matc4": "Hello atn4z7, do you have the example?\nThanks\n. ",
    "atn4z7": "@marcelglaeser @matiascba \nSure. Here is an example from https://github.com/aksonov/react-native-router-flux/issues/100. You can do the same with renderLeftButton\n```\nvar createRightButton = function() {\n      return (\n          \n\n                 +\n              \n\n      );\n\n```\n. turned out I just need to specify it at the parent scene like this\n<Scene key=\"login\" direction=\"vertical\"\n                  renderLeftButton={ButtonRenderer.back}>\n                  <Scene key=\"loginModal\" component={Login} schema=\"modal\" title=\"Login\"\n                    navigationBarStyle={styles.navBar}/>\n. ",
    "jayesbe": "@graywolf336 I am trying to use your technique to do something similar however I am getting stuck with the initial route not loading. I end up with just a background image and no child elements. \nHave you come across something similar? is there something I might be missing ? \n. ditto.  Trying to center the title in the navigation bar.. not working. \n. Found the example in the source. \n. It seems this might be a core issue. It looks like If I minimize the app, then bring it back up, it locks the element at the top as expected. When you first run the app it pushes it off the screen. Definitely seems like a bug to me.\n. https://github.com/facebook/react-native/issues/6785\n@aksonov It is not. I believed it was a scene issue.. the same thing happens with the NavigationBar in the router.  I made a ticket on ExNavigator as well (2.x same issue) however upon close inspection I found it must be a core bug so I made the above ticket.\n. @dongrenguang  Did you set sceneStyle height to window dimensions ?\nie \nconst { width, height } = Dimensions.get('window')\nconst sceneStyle = { height: height }\n?\n. ",
    "ChaitanyaBudapaneti": "When I come out of the Login modal view using the back button calling the Actions.pop() method everything works fine. But when using the slide down gesture to close the Login modal, the router doesn't return to the TabBar router. This gives me an error when I press on Tabs.\n<Router hideNavBar={true} name=\"root\">\n        <Schema name=\"modal\" sceneConfig={Navigator.SceneConfigs.FloatFromBottom}/>\n        <Schema name=\"default\" sceneConfig={Navigator.SceneConfigs.FloatFromRight}/>\n        <Schema name=\"withoutAnimation\"/>\n        <Schema name=\"tab\" type=\"switch\" icon={TabIcon} />\n        <Route name=\"tabbar\">\n          <Router footer={TabBar} showNavigationBar={false}>\n            <Route name=\"tab1\" schema=\"tab\" title=\"Tab #1\" component={MyListView}/>\n            <Route name=\"tab2\" schema=\"tab\" title=\"Tab #2\" component={Launch}/>  \n          </Router>\n        </Route>\n        <Route name=\"LoginView\" component={Login} schema=\"modal\" wrapRouter={true}/>\n</Router>\n. ",
    "uyson": "+1 same problem\n. +1\n. yes , thanks\n. ",
    "toadums": "@jdmunro give your routes the clone property, and they can be pushed in any tab. Here is a super incomplete example:\n<Scene key=\"Root\">\n  <Scene key=\"Tabs\" tabs>\n    <Scene key=\"Account\" component={Account} />\n    <Scene key=\"Messages\" component={Messages} />\n  </Scene>\n  <Scene clone key=\"Settings\" component={Settings} />\n</Scene>\nThen if the active tab is Account, and you call Actions.Settings(), it will push onto the Account tab stack. Same is true if you are inside of Messages.. ",
    "Predjo": "I have now and same problem is present :/\n. ",
    "oureta": "Oops. I thought 2.0 branch is still active. I'll PR this on master instead.\n. Use renderRightButton to use an element that is subscribed to the store.\ne.g.\nconst SmartRightButton = connect(store => ({ updates: store.updates })(RightButton);\n<Router renderRightButton={() => <SmartRightButton />} >\n...\n. I'm developing on iOS and borderBottomWidth: 0 works for me. In my structure, the main router's hideNavBar equals true and every module has their own nested Router. So the borderBottomWidth: 0 are applied on the nested Router's\n. I am also having issues with Back Button on v2.3.6. I think v2.3.1 is more stable.\n. Actions.pop should be the way to go. The List View is not being unmounted when you go to Edit Screen that's why componentDidMount is not being called. When you call Actions.list, a new List Screen is being created, mounted and pushed to the stacks.\n. It needs to be on a separate Router. Or you can call Actions.pop to unmount the List Screen before Actions.add. Basically, the List Screen needs to be removed from the stacks for it to unmount\n. You could try something like this.\n<Router hideNavBar={ true }>\n  <Route name=\"list\">\n    <Router>\n      <Route component={ List } title=\"Statiks\" schema=\"default\" />\n    </Router>\n  </Route>\n  <Route name=\"add\" component={ Add } title=\"Options\" schema=\"default\" />\n</Router>\nI'm not sure though why you want it to be unmounted.\n. Try to set the current route's leftTitle to space i.e. leftTitle=\" \"\n. ",
    "fionita": "I've hided the router flux navbar and used toolbarAndroid instead.\nOn Fri, Mar 25, 2016, 21:15 Ioannis Kokkinidis notifications@github.com\nwrote:\n\nDid you solve this? How ? Could you please share? Thank you.\n\u2014\nYou are receiving this because you modified the open/close state.\nReply to this email directly or view it on GitHub\nhttps://github.com/aksonov/react-native-router-flux/issues/213#issuecomment-201437114\n. \n",
    "liangmicha": "@sriraman  were you able to figure this out? I'm running into the same issue.\n. I am having the same issue\n\"react-native\": \"^0.21.0\",\n  \"react-native-router-flux\": \"^3.0.11\",\n. ",
    "TeodorKolev": "same here\n. ",
    "adrienthiery": "I don't know if it helps, but this happened on my project and the only thing that fixed it was to delete the whole folder, reclone and reinstall all npm packages...\n. Hi @Mokto,\nI had this error today, it seems my problem was that I was going to fast between 2 views with an TextInput with an autofocus={true} so the router was basically trying to close the keyboard and open it again before the closing was finished.\nTo verify if that is your problem, you can put a setTimeout on your Actions.** and see if it helps, or if you have a route rendered very quickly inbetween your source route and your target route!\nI hope that might help!\n. I think I got in a similar situation, the idea being that the switch \"Restricts\" you to only one Scene, but in my case, I just created 2 \"subroot\" scenes for the switch : \n<Provider store={Store}>\n    <Router\n        sceneStyle={styles.routerStyle}\n        hideNavBar={true}\n    >\n        <Scene\n            key=\"root\"\n            component={connectedSwitch}\n            tabs={true}\n            selector={selectScene}\n        >\n            <Scene\n                key=\"anonymous\"\n             >\n                <Scene\n                    key=\"index\"\n                    component={WelcomeView}\n                    initial={true}\n                />\n            </Scene>\n            <Scene\n                key=\"authenticated\"\n            >\n                <Scene\n                    key=\"otherIndex\"\n                    component={AuthenticateView}\n                    initial={true}\n                />\n            </Scene>\n        </Scene>\n    </Router>\n</Provider>\nAnd then my switch is : \nconst connectedSwitch = connect(\n    (state) => ({\n        profile: state.Auth.profile,\n    })\n)(Switch);\nconst selectScene = (props) => (\n    props.profile.id\n        ? 'authenticated'\n        : 'anonymous'\n);\nSo only my Scenes children to \"anonymous\" are available if my user is not logged in, and only my Scenes under \"authenticated\" are available if my user is logged in.\nIs it not the expected behaviour ?\nDoes it help @lexfernandez ?\n. @tadas-subonis You can use // eslint-disable-line no-undef on these specific lines.\nhttp://eslint.org/docs/user-guide/configuring#disabling-rules-with-inline-comments\n. ",
    "BerndWessels": "Any updates on this?. @lynndylanhurley Hi,\nI see that the actions are dispatched and arrive in redux reducers, that's great.\nBut if I want to use redux devtools to time travel and it seems that react-native-router-flux ignores the changes in state and nothing happens.\nBasically our question, what do we have to do to make react-native-router-flux render state changes to enable time travel and generally control of navigation via state?. @jhen0409 did you get remote-redux-devtools time travel to work with react-native-router-flux ?. This is pretty essential, otherwise whats the point of redux integration with react-native-router-flux ?. @denizs Same question, did you find a solution for this?. ",
    "arthurvi": "Hi @tomkur, when you upgraded to 2.3.1 you can use the new Action.refresh like this:\nFirst import Actions in the component from where you want to change/control the navbar button:\njavascript\nimport { Actions } from 'react-native-router-flux';\nThen when you want to change the navbar button, refresh like this:\njavascript\nAction.refresh({\n    applyButton: <ApplyButton />\n})\nAnd then in your root file where all the routes are defined:renderRightButton:\njavascript\n<Route\n    renderRightButton={\n        (route) => {\n            return route.props.applyButton;\n        }\n    }\n/>\nYou can define everything in object you pass with the Action.refresh. It could als just be the text of the button or a specific function to call. Then of course you should modify the renderRightButton method.\nThis at least worked for me!\n. No problem, happy to help. Had some issues with it today as well.\n. ",
    "ralphpina": "I also had issues getting the button to change. Below is what I did. In the router, I had to check to nullability. Otherwise, on first load, it would throw:\njs\n<Route name=\"Settings\" schema=\"tab\" title=\"Settings\" component={SettingsTab}\n           renderRightButton={(route) => {\n                      return route.props.router.delegate.state != null \n                                 ? route.props.router.delegate.state.rightButton \n                                 : <View/>;\n                      }}/>\nThen, in my component, I called Actions.refresh() in componentDidMount(). I also called it again inside the button click so that I could update the text. The button would only render the first time if I used a timeout in componentDidMount. Is this right?\n``` js\ncomponentDidMount() {\n    setTimeout(()=>Actions.refresh({\n        rightButton: this._renderApplyButton()\n    }), 200);\n},\n_renderApplyButton () {\n    return ( {\n                    this._editButtonClicked();\n                        Actions.refresh({\n                            applyButton: this._renderApplyButton()\n                        });\n                      }}>\n        {this.state.inEditMode ? 'Save' : 'Edit'}\n);\n},\n```\n. > It is not question about this component but about Javascript\nYeah... see this:\n\nI am brand new to React Native and Javascript\n\nSo clearly I'm still learning the difference. But yeah, it was a lifecycle issue.\nThanks for the quick response!\n. ",
    "rsavignon": "Is it possible to do this with 3.0 release ? If so, how ?\nThanks in advance.\n. Hi greatwitenorth , think i figured out how to achieve that. Both renderRightButton and renderLeftButton properties accept enclosured functions.\n```\nvar gbl_mycomponent_create_nav_right_button = function() {\n      return (Test} );\n};\nclass MyComponent extends Component {\n...\nconstructor(props) {\n    super(props);\n    Actions.refresh({ renderRightButton: gbl_mycomponent_create_nav_right_button } );\n}\n...\n}\n```\nCheck out and tell me if it worked as expected.\nIf you got the hint to refer Components Method directly let me know. I tried but without successs.\nregards.\n. ",
    "greatwitenorth": "It'd be nice to see a full example of how to change the renderRightButton dynamically. I'm using 3.2.8 and calling Action.menu({renderRightButton: () => <Text>Test</Text>}) but the right button never shows up.\n. Is there a way to set it for a specific scene even if I'm not currently on that scene? ie \nActions.refresh({key: 'home', title: 'My new title'})\n. My issue was that I wasn't navigating to the scene that needed it's title updated. My screen updated the user's address, but the address was displayed as a title on a completely seperate screen.\n. I had a similar problem and had to add hideNavBar={true}  on the root Scene. I believe it's because the root scene's navigation bar was 'overwriting' the child tabs. Not sure if this is intended behaviour, but it worked for me.\nComplete example:\n<Router>\n  <Scene key=\"root\" hideNavBar={true}>\n    <Scene key=\"main\" tabs={true} default=\"orders\" >\n      <Scene key=\"orders\" component={Page} tabTitle=\"Orders\" icon={TabIcon} />\n      <Scene key=\"profile\" component={Page} tabTitle=\"Profile\" icon={TabIcon}/>\n      <Scene key=\"about\" component={About} tabTitle=\"About\" icon={TabIcon}/>\n    </Scene>\n  </Scene>\n</Router>\n. I'm trying to dynamically render the right button. I have the following in my scene I'm navigating to:\n```\n  _renderRightButton(){\n    return (\n      {'right'}\n    )\n  }\ncomponentDidMount(){\n    Actions.refresh({renderRightButton: this._renderRightButton()})\n  }\n```\nBut nothing seems to render. Is there any way to dynamically render the right button from within the scene?\n. In the event I want to change the title of a previous page when using Action.pop() how would I do this? I tried doing Actions.pop({title: 'my new title' }) but it doesn't work.\n. @aksonov ahh got it. Didn't realize that I could do the refresh right after the pop. Sorry didn't mean to hijack this thread.\n. I'm seeing a similar error:\nCannot read property 'forHorizontal' of undefined\nI'm running react-native@0.22.2 and react-native-router-flux@3.24.0:\n\nnot sure if this is related to @masterkrang original issue.\n. I've only tested on iOS. It happens on both the simulator and an actual device.\n. ",
    "digitalhobo": "Thanks aksonov.\nI may not be understanding you properly. \nSo, for instance if I wanted to change the state of the title. I would call\nActions.refresh({title: 'Some other title'})\nMany thanks for getting back to me.\n:0)\n. My bad, its all working great. Thanks very much for your help aksonov. Much appreciated. :0)\n. ",
    "shaharz": "I'm running into an issue that seems like a bug here with setting the title dynamically. It seems like Actions.refresh sets it for all routes, overriding their static titles.\nIn my case, I have a master-detail setup where the master route has a title prop and the detail route title is only set dynamically. When I'm in the detail route and the title changes what happens is that both the title and the back button change to the same text. When going back to the master, the dynamic title stays on (rather than going back to its schema title).\nI'm new to React Native so I'm not sure if this is by design or not...?\nThanks!\n. ",
    "JuHwon": "@greatwitenorth whats your exact use case?\ne.g. if you are navigating to a view with the key view2 you can set the title with the props like this\njavascript\nActions.view2({ title: 'My New Title' })\n. ",
    "edencakir": "@greatwitenorth I ran into same problem. How to change the title without navigating to a new route with changed title?\n. OK, I should have read the documentation better, it's simply \nActions.refresh({title: 'new title'})\n. @JeroenNelen which navigator are you using right now? (If you don't mind sharing). @jaynakus righttitle or right button?. I would suggest using custom navbar, with whatever you want to be in it.. @sarovin can you please elaborate the Platform.version > 19 part? What about < 19, what does that mean?\n. Use renderBackButton prop of Scene component. Pass a private function, and inside that function just call Actions.refresh({key: 'drawer', open: value => !value});\nExample below:\n<Scene sceneStyle={styles.sceneStyle} renderBackButton={this._showCustomButton} hideNavBar={false} key=\"test\" component={Test} title=\"Test\"/>\n_showCustomButton() {\n    return (\n      <TouchableOpacity\n      onPress={()=>Actions.refresh({key: 'drawer', open: value => !value })}>\n        <Image style={styles.tabImage} source={require('./images/settings.png')} />\n      </TouchableOpacity>\n    )\n  }\nPS: please teach me formatting....\n. +1,\nSolved with timeout too.\n. @tuneZola I don't understand, why are you insisting on renderLeftButton? If your scene is pushed, then its better using renderBackButton, otherwise, I assume your scene is tabbar scene, just use renderLeftButton to change drawer icon.\nHowever, if you're trying to navigate a scene that won't have a back action (at least in the navbar) and you want to render a custom left button, you may use key=\"reset\" or other options and combine with renderLeftButton to get what you want.. +1. Great PR, can you guys merge?. ",
    "JeroenNelen": "@greatwitenorth did you find any decent solution?\nI'm fetching the title from the state, so whenever the state changes, I want a specific view to have that value as a title. Sometimes people change the title and navigate via the back button, in that case I can't seem to define the {title: } parameter (and pass the state-value in the back action), or am I missing something?\nRefreshing in one of the lifecycle methods of the component (or in render), makes the app crash as it probably gets into an infinite loop due to changing state properties. \nKind regards,\n. @jondbm thanks for the suggestion, but we've decided to switch to a different navigator.\nKind regards, . @ivansifrim did you found a solution for this?\nwe're also trying to find a way to trigger an action after landing on the screen. @Ross-Landry  @AndrewHenderson \nI understand this works for the log-out case, in which you indeed would want to reset the navigation stack. But I have the following scenario:\n1. user is on scene A and clicks a browse button which redirects to scene B\n2. user navigates further, from B to C, from C to D (amount of browsing can differ)\n3. at scene C, user does an action and now I want him to be redirected to scene A, currently scene A has type PUSH because you arrive, in the beginning at scene A via scene Z and you have to be able to use the back-button.... so I try to Actions.sceneA(); but this throws the navigationState.children issue, because it is trying to add the scene again to the stack, is there a way for me to redirect to scene A without using REPLACE for example?  Any suggestion?. @Ross-Landry that's a scenario we can consider yes, to always have sceneA's back button to redirect to sceneZ.\nRESET to sceneA is not an option, because then we can not go back to sceneZ from sceneA as the stack was cleared.. It indeed seems impossible to find an overview of the current stack. Only if an item has children, you can find the children in the stack, but it seems impossible to just find an array with all the scene's that are on the stack at the current moment. Which makes it very hard, in a dynamic app, to determine how many items you have to pop etc.. @compojoom @mahlon-gumbs I have a similar issue, with just a small variation, maybe any of you can point me in the right direction.\n1. sceneA -> sceneB -> sceneC ->... sceneN -> sceneA    --> in this case REFRESH works to show me sceneA but, if I then use the back button it will pop sceneA and I'm back on sceneN, if I then try to proceed again to sceneA, it will try the refresh but sceneA is no longer in the stack, so it won't do anything... so somehow I would have to know, when arriving on sceneN if sceneA is already in the stack (use REFRESH) or not yet in the stack (use PUSH).... another possibility might be that when at sceneN, I pop all the way back to sceneA, the problem however is that the amount of items on the stack will not always be the same and I can't seem to figure out how I can know how many stack items are between sceneA and sceneN...\nAnyone any clue?\nThanks,. hey @compojoom thank you for your reaction,\nin sceneN I select something that will be shown on sceneA\nsceneB --> sceneC --> scene... are some kind of browsing screens: you browse through folders until you see items on sceneN, select an item and it will be shown on sceneA, so I have two situations\n1) from the dashboardScene --> sceneA, so if we go back at that moment, we want to land on the dashboardScene\n2) from the dashboardScene --> sceneA --> start browsing so several scenes are pushed onto the stack --> at sceneN the user selects a new item and that item should be visible on sceneA, so preferably at that moment, we would pop all the way back to sceneA, but since the amount of screens between sceneA and sceneN is not always the same, I would somehow have to be able to calculate or now the amount of screens to pop (assuming that multi-pop works as expected) ?. hitting the back button at sceneA should send you to the dashboard, so RESET is not an options as it will clear entire stack and you can not go back from sceneA to dashboard anymore, there should be a function like 'pop until sceneA', but as far as I know there is none.\n. @cmrichards I have also been looking for something like this, have you found any cleaner work around than the suggested changing of props? \nKind regards, . anyone found anything concerning this? I'm in need of the same situation... clear several items on the stack but not all of them. More or less related: we are also encountering issues with refreshing a page, is there anyone that knows if there is any lifecycle that is triggered when landing on a page again?\nSituation: we want an action to be executed every time a user views the page, no matter if it is via redirect or via push or pop or replace... we can't seem to find out how to do this. Any suggestions?. This would be a very handy feature.. Can confirm that the type REFRESH does not has the expected behaviour.\nIt would be very, very, vey handy if there was a possibility to trigger a (re)render of the scene component when arriving on a specific scene (for refetching data etc.). ",
    "jondbm": "@JeroenNelen I had a similar issue and solved it by putting the refresh in ComponentDidMount and setting the state in Redux reducers - I tie a Redux action into every user action that changes the title, update the app state, and the props the refresh reads update too.\nSo basically something like this line in ComponentDidMount:\nActions.refresh({title: this.props.state.myapp.myvalue})\n. @jaynakus try putting your rightTitle and onRight into your Scene component instead of at the top RouterWithRedux level, that might work.. ",
    "jaynakus": "Why below setup is not refreshing right button? console.log writes the new value, but the right title never gets refreshed?\n```\nconst RouterWithRedux = connect()(Router);\nexport class App extends Component {\nconstructor(props) {\n    super(props);\n  }\nrender() {\n    let title = '(' + this.props.basket.length + ')';\n    console.log(title);\n    return (\n       alert('All right')}>\n        \n\n\n\n\n    );\n  }\n}\nApp.propTypes = {\n  dispatch: PropTypes.func.isRequired\n};\n// Wrap the component to inject dispatch and state into it\nexport default connect(\n  state => {\n    return {basket: state.basket.items}\n  }\n)(App);\n```. The Title!. @jondbm putting them to root scene didn't resolve, but calling Actions.refresh() in componentWillReceiveProps did the trick ;)\n```\nconst RouterWithRedux = connect()(Router);\nexport class App extends Component {\nconstructor(props) {\n    super(props);\n  }\ncomponentWillReceiveProps(nextProps) {\n    if (this.props.basket.length !== nextProps.basket.length) {\n      console.log(nextProps.basket.length);\n      let title = '(' + nextProps.basket.length + ')';\n      Actions.refresh({rightTitle: title});\n    }\n  }\nrender() {\n    let title = '(' + this.props.basket.length + ')';\n    return (\n      \n alert('All right')}>\n          \n\n\n\n    );\n  }\n}\nApp.propTypes = {\n  dispatch: PropTypes.func.isRequired\n};\n// Wrap the component to inject dispatch and state into it\nexport default connect(\n  state => {\n    return {basket: state.basket.items}\n  }\n)(App);\n```. ",
    "nica0012": "This is awesome, is there a clean way to fade in/out the title when it switches? In my case I have the title switching when the user scrolls over 100px. It would be nice to fade the transition. Cheers.. I am having the same issue, did you resolve this at all?. Did you add this on the drawer or in the scene nested inside the drawer?. @JulioOrellana Hey, How did you fix this? I am having the same issue and I'm patiently waiting for it to be resolved... Here is a link to mine:\nhttps://github.com/aksonov/react-native-router-flux/issues/2949. @aksonov Hey man, can you check this out?. @aksonov Thanks for the reply. I tried downgrading to beta.24 but I get this error:\nhttps://github.com/aksonov/react-native-router-flux/issues/2876\nWhat exactly do you mean by, \"wrap drawer content into one child if it doesn't help\"?\nCheers.. @getconcar Hey, can you keep me posted if you find a fix?. @JulioOrellana Thanks for the reply Julio. this is what I am doing now and it does work. The problem is I only want my initial screen to have the drawer functionality. I don't want it anywhere else. I managed to remove it by manually adding a back button on some scenes but by doing this I can no longer swipe back to the previous scene which is a hassle for the user.... @aksonov I found a fix!\nSo, all scenes need to be nested inside of the drawer for it to work properly (without the header glitching when transitioning scenes). To properly disable the drawer completely to allow you to swipe back to the previous scene and show the back button too, you need to add the following three lines to any scene where you want the drawer to be ignored completely:\nhideDrawerButton\ndrawerLockMode={'lock-closed'}\npanHandlers\nHope this helps some people out who have experienced this!\n. @daviscabral Thanks for the feedback! I just tried to use redux to dispatch an action (new title) to the router component after the scrollview reaches the title switch point, but this is causing the whole screen to re-render which causes the scroll to start over...  I have also tried removing the title and then using absolute positioning to place my own over it like you mentioned, but i can't seem to over ride the zIndex value of the RNRF navbar.\nCan you tell me more about this custom smart header? I thought using redux on the router component would do the trick, it caused the title to change but its causing a re-render on everything - maybe because its the overall wrapper?. Same issue.... @daviscabral I tried updating but the issue still persists.. Hey @aguevara92, any luck with the left button press navigation to the left? I managed to do this for animating from the bottom:\nconst fadeUp = () => ({\n      screenInterpolator:\n        StackViewStyleInterpolator.forFadeFromBottomAndroid,\n    });\nI haven't been able to figure out how to invert/reverse the normal stack navigation transition.... @digitaldavenyc unfortunately not!. ",
    "minhhung96966": "\n@greatwitenorth whats your exact use case?\ne.g. if you are navigating to a view with the key view2 you can set the title with the props like this\n```js\nActions.view2({ title: 'My New Title' })\n\nHow can we access it in setup file?. ",
    "tadasstra": "If I have a configuration like this:\n```\n\n\n\n                    <Scene drawer\n                           drawerPosition=\"right\" drawerWidth={300}\n                           key=\"task\"\n                           contentComponent={DrawerView}\n                           drawerIcon={drawerIcon}\n                           rightButtonImage=\"menu\"\n                           onRight={() => {\n                               Actions.drawerOpen()\n                           }} hideNavBar\n                    >\n\n                        <Scene key=\"taskInner\"\n                               leftButtonImage=\"arrow-back\"\n                               component={TaskView}\n                               onLeft={() => {\n                                   Actions.popTo('tasksList')\n                               }}\n                        />\n                    </Scene>\n\n                </Scene>\n\n\n```\nThen Actions.task({ title: 'My New Title' }) or Actions.refresh({title: \"My New Title\"}) does not work. How to set title or send some properties when having a drawer?. ",
    "kacperpotega": "When I had the same issue, removing the node_modules folder, updating node and npm and then doing a new npm install resolved the issue.\n. I had a similar issue. Solved this by setting the initial route to a loading screen and letting the application dispatch a navigate action (Action.NewRouteName), navigating to the route that the application calculated.\n. This seems to be a ExNavigator issue.\nWhen you do the following:\n<Router\n        hideNavBar={false}\n        navigationBarStyle={{ backgroundColor:'#5aa0cc', borderBottomColor: 'transparent', borderBottomWidth: 65 }} >\nthe bottom border disappears on both iOS and Android. And yes, borderBottomWidth has to be exactly 65. At 64 the white border is still there, at 66 the navigator itself starts gaining height.\nI traced this back to ./node-modules/@exponent/react-native-navigator/ExNavigatorStyles.js, where changing the bar{} styles to the above would have the same effect.\nIf anyone has a better solution than this rather filthy one, please tell me :)\n. Seems like @oureta's solution only works if every module has its own Router. As soon as my main router is responsible for displaying the navbar borderBottomWidth: 0 doesn't have any effect.\n. ",
    "amun1303": "borderBottomWidth: 0 works with me, thanks @oureta . ",
    "nimamyscreen": "borderBottomWidth: 0 works for me.. any respond???. ",
    "ycpatel813": "borderBottomWidth:0 not works for me. . ",
    "chenyi5266": "in          node_modules/react-navigation/src/view/Header.js        delete shadow\nconst styles = StyleSheet.create({\n  container: {\n    paddingTop: STATUSBAR_HEIGHT,\n    backgroundColor: Platform.OS === 'ios' ? '#EFEFF2' : '#FFF',\n    height: STATUSBAR_HEIGHT + APPBAR_HEIGHT,\n    //shadowColor: 'black',\n    //shadowOpacity: 0.8,\n    //shadowRadius: StyleSheet.hairlineWidth,\n  //  shadowOffset: {\n   //   height: StyleSheet.hairlineWidth,\n   //},\n  . ",
    "hungdev": "navigationBarStyle={styles.navBarStyle}\nnavBarStyle: {\n    borderBottomWidth: 0,\n    elevation: 1\n  },\nin router edit like this. ( Router flux v4). i love you.. @aksonov \nhttps://github.com/react-community/react-navigation/pull/793. this is props in <Scene. read more API docs.\nback backButtonImage={Images.arrowLeft} leftButtonIconStyle={styles.backButtonStyle}. but if i want to add more behaviors you can use custom navbar component.. i dont think cause router flux. you should set height and width for style Mapview. . you are resolved. i think you should close the issue.. i think the error of react-native-svg or react-native-pathjs-charts. ",
    "alexmngn": "I tried this but it still doesn't want to work, I get the same error:\n<Route name=\"start\" component={Start} {...this.props} />\nAnd the child:\n<Route {...this.props} name=\"login\" component={Login} initial={true} rightTitle=\"Register\" onRight={() => {\n    Actions.register();\n}} />\n. Okay so now that we are version 3, how can I nest my Scene @aksonov ?\nIt looks like Actions create everything, but in my case I don't want to create everything in one place :pensive: \nThe parent don't need to be aware that the child has its own scenes!\n. The NavigationCard in the last React Native 0.22rc-4 has the following:\n<Animated.View\n        {...panHandlers}\n        style={[styles.main, style]}>\n        {this.props.renderScene(sceneProps)}\n      </Animated.View>\nstyle is a prop that I should be able to modify with whatever I need, but I'm not sure how to access it via Scene/Router @aksonov ?\n. @aksonov That is really something I think you should support, that is the main philosophy behind React, to be able to have component within a component, without the parent having the need of being aware what the child does exactly, as long as it does it.\nFor this reason I will stop using your component for sure, as it doesn't support this very-important feature that most well-developed large mobile applications really need.\n. Agree with @Ansalibrahim. I myself wrote an article about how great is it to have modular/feature based architecture with React. https://medium.com/@alexmngn/how-to-better-organize-your-react-applications-2fd3ea1920f1\nWith such restrictions of the need to define all the routes in one place, it forced me to use different solutions.. @Ansalibrahim I stopped to use this library and used the Navigator component provided by react-native: https://facebook.github.io/react-native/docs/navigator.html. @Ansalibrahim I thought the same, until I tried and it's actually not that difficult to use.\nHave a look to my repo here: https://github.com/alexmngn/react-native-authentication/blob/master/client/MobileApp/src/App.js You can see how it works and how easy it is to setup.. ",
    "AndrewKovalenko": "I have similar problem. \nI'm trying to build \"parent-child\" view like on mockup below\nmockup\nto do this I defined top-level routing:\n```\n'use strict';\nimport React, { Navigator } from 'react-native';\nimport LandingScreen from './components/landing.js';\nimport ParentScreen from './components/parent.js';\nimport RNRF from 'react-native-router-flux';\nlet {Router, Route, Schema} = RNRF;\nexport default class Example extends React.Component {\n  render(){\n    return(\n      \n\n    <Route name='landing' component={ LandingScreen } title='Home' initial={true}/>\n    <Route name='parent' component={ ParentScreen } title='Parent'/>\n  </Router>\n);\n\n}\n}\n```\nparent component:\n```\n'use strict';\nimport React, {View, Text} from 'react-native';\nimport Button from 'react-native-button';\nimport { Actions } from 'react-native-router-flux';\nimport {Router, Route} from 'react-native-router-flux';\nimport ChildScreen from './child.js';\nimport AnotherChildScreen from './another-child.js';\nexport default class ParentScreen extends React.Component {\n  render(){\n    return(\n      \nParent screen\nPassed param: {this.props.data.nested.field}\nBack\nChild\nAnother Child\n    <View>\n      <Router name='parentRouter' {...this.props}>\n        <Route name='child' initial={true} component={ ChildScreen } />\n        <Route name='anotherChild' component={ AnotherChildScreen } />\n      </Router>\n    </View>\n  </View>\n);\n\n}\n}\n```\nparent component get rendered with no problem, but it doesn't show any child content.\nalso when I click on child link - nothing happens.\nscreenshot\nCould you pls help me to figure out, what do I do wrong?\n. ",
    "boyaq": "+1\n. @aksonov \nIt sure worked as initial route, but the tab we rendered in the footer doesn't highlight properly.\nI've found that there is a \"selected\" property for the Router, and it throws an error when we use it with initial={true}.\nCould you please look into that too.\nThanks.\n. Hi Aksnov,\nyou've labeled this as duplicate of #240 and which you referred a duplicate of #238 .\nAs I mentioned in #238 , My problem is slightly different and will appreciate if you can look into it.\nThanks.\n. ",
    "ws3li": "nvm I figure it out.\n. I had the same problem and then I finally figure it out.\nI am not sure if it is same the as yours. \nIn SideDrawer.js add this line at the end:\nmodules.exports = SideDrawer;\n. I ran into another problem, I wonder if someone could help me out:\nLooking at the same scenario above: in Router.js\nHow can I add another <Route> that is not part of the <SideDrawer>. \nIf I add a Route say, \n<Route name='NoDrawerPage' component={Page2}  title='Page2' /> outside of <Route name='main' ...>, shown below:\n```\n\n\n\n\n\n\n\n\n\n\n```\nWhen I navigate from {Page 1} to {Page 2}, for some reason I loose the navigationbar styles/buttons when pressing the back button or swiping back. \nAny idea on how to fix this?\nThanks.\n. Hmm, it didn't work for me. I get drawer is undefined.\nBut I manage to do it using redux action. Thanks\n. When you say 'root' which route are you indicating?\nin my main router I do hideNavBar={true} already.\nCan you show me an example? Thanks\n. Is the back button fixed yet? I still see the back button not being rendered properly. Thanks\n. ",
    "efkan": "You're right! I didn't export anything. (module.exports = SideDrawer or export default class SideDrawer... so I had to have a break)\nThanks to you, I could overcome the first issue.\nIf I have Router.js run, I'll review your issue too... \n. @ws3li ,\nProbably as you know, in the code above, schema attribute of the route tags define <schema> tag names that are container for the common attributes. \n<Route schema=\"main\"... /> is related with <Schema name=\"main\"... \nIf you might write your code I can review it.\n. I had prepared an example here.\n. Thanks @aksonov ,\nThanks to you, I completed a month ago that example and I don't have enough time to think about it.\nYesterday I upgraded the my project. As you may guess, then some serious problems arose.\nOne of them is upgrading react-native-router-flux. It seems beautiful and it uses the original React-Native Navigator component. I think that is great. However I have to create new appropriate NavBars for Android and iOS. \nNontheless, I think that way is the correct.\n. ",
    "zelphir": "@aksonov How to set custom background in the new version? \n. @aksonov How to override this value here: https://github.com/aksonov/react-native-router-flux/blob/master/src/DefaultRenderer.js#L88\n. @aksonov saw that, but where and how should I pass the style? in the Router? In each Scene? What if I want to set it globally? could you give me an example?\nThanks\n. ok, which parameter should I use for each scene? \nIf I use the latest version 0.22.0-rc4 can I do:\njavascript\n<View style={{backgroundColor:'red'}}>\n  <Router scenes={scenes} />\n</View>\n@aksonov just tried and it doesn't work :disappointed: \n. @aksonov thanks!\n. @aksonov any updates on this one?\n. @aksonov Just updated to RN 0.26 and latest version of RNRF (3.26.1). The problem is still present.\nSwitching back to RN 0.22 and RNRF 3.22 everything works fine\n. @rturk The initial state of the app is handled by redux-persist\n``` jsx\nrender() {\n    if (!this.state.rehydrated) {\n      return \n    }\nreturn (\n  <Provider hideNavBar store={ store }>\n    <Routes />\n  </Provider>\n)\n\n}\n```\nI've just checked that if I don't use a wrapper for the scenes it works, for instance:\njsx\nconst scenes = Actions.create(\n    <Scene\n      key=\"root\"\n      tabs\n      component={ connect(({ auth }) => ({ auth }))(Switch) }\n      selector={ ({ auth }) => selectorCheck(auth) }\n    >\n      <Scene key=\"isGuest\" component={ Launch } title=\"Launch\" initial />\n      <Scene key=\"isAuthenticated\" component={ OnBoarding } title=\"OnBoarding\" />\n    </Scene>\n)\nBut I have different scenes based on the user state, that's why I was using a Scene wrapper.\n. @aksonov any thoughts?\n. @aksonov Everything is updated but the scene. If I use the navbar, even the navbar is updated, but the Scene remains the same (of course also all the props are updated)\n. @aksonov and yes... the selector is returning the right scene\n. Nope, using RN@0.26 and latest RNRF@3.26.5\n. ok\n. @aksonov Done: #760 \n. @aksonov there you go: https://github.com/zelphir/switchtest\nI've created 2 groups (group1 and group2). Each group contains 2 scenes (PageOne and PageTwo for group1 and PageThree and PageFour for group2).\nAs you can see, if you change group from 1 to 2 you go to the next one (group2, scene PageThree) but once there if you change again group with the button the navbar is updated but not the scene, you are still on PageThree.\n. @aksonov Thanks! Everything works as expected now!\n. Figured it out.... just follow the Example!\n. ",
    "amitbobade2007": "@ws3li Are you getting performance issue on open and close after using drawer with redux action? \n. @aksonov i am getting this issue in 3.2.8 for Scenes inside Drawer. Not able render right button with default navbar or custom navbar. \n. @aksonov renderRightButton function is not gets assigned in componentWillMount method in NavBar. Instead of receiving renderRightButton/renderLeftButton/renderBackButton from this.props.navigationState, receiving from this.props.\nIs it react-native issue?\n. Not working for me also in 3.2.8.\n. ",
    "shivangbtech": "I am unable to use openDrawer() in DrawerScreen.js. Here is my code, How can I pass reference of drawer to other component file.\n```\n` render: function() {\n    var navigationView = (\n      \n\nHello there!\n\n       <ListView\n            dataSource={this.state.dataSource}\n            renderRow={this._renderRow}\n       />\n       <TouchableHighlight onPress={() => this.drawer.closeDrawer()}>\n            <Text>Close drawer</Text>\n       </TouchableHighlight>\n  </View>\n);\n\nreturn (\n  <DrawerLayout\n    onDrawerSlide={(e) => this.setState({drawerSlideOutput: JSON.stringify(e.nativeEvent)})}\n    onDrawerStateChanged={(e) => this.setState({drawerStateChangedOutput: JSON.stringify(e)})}\n    drawerWidth={200}\n    ref={(drawer) => { return this.drawer = drawer  }}\n    keyboardDismissMode=\"on-drag\"\n    renderNavigationView={() => navigationView}>\n\n    <View style={styles.container}>\n    <DrawerScreen ></DrawerScreen>\n    </View>\n  </DrawerLayout>\n);\n\n}\n});`\n```\nDrawerScreen.js\n```\n'use strict';\nvar React = require('react-native');\nvar {\n  AppRegistry,\n  StyleSheet,\n  Text,\n  View,\n  Dimensions,\n  Image,\n  TouchableHighlight,\n  TextInput,\n} = React;\nvar deviceWidth = Dimensions.get('window').width;\nvar DrawerScreen = React.createClass({\nrender: function() {\n    return (\n    <View style={styles.container}>\n\n      <Text style={styles.welcome}>Content!</Text>\n\n      <TouchableHighlight onPress={() => this.drawer.openDrawer()}>\n        <Text>Open drawer</Text>\n      </TouchableHighlight>\n      <TextInput style={styles.inputField} />\n    </View>\n);\n\n},\n});\nvar styles = StyleSheet.create({\n   container: {\n      alignItems: 'center',\n      justifyContent: 'center',\n      flex: 1,\n          flexDirection: 'column',\n    },\n    inputField: {\n      backgroundColor: '#F2F2F2',\n      height: 40,\n    },\n});\nmodule.exports = DrawerScreen;\n```\n. getting same error :\n'props should be defined for stack'\nwhile using sample:\nhttps://github.com/efkan/rndrawer-implemented-rnrouter\n. I recently install :\nreact-native-router-flux@3.22.1 ../node_modules/react-native-router-flux\n\u251c\u2500\u2500 react-native-tabs@1.0.5\n\u2514\u2500\u2500 assert@1.3.0 (util@0.10.3)\n. So how can I solve the problem, I need to develop same functionality. I have tried many solutions. One more example I am using having problem:\nhttp://stackoverflow.com/questions/36693943/unable-to-use-drawer-method-opendrawer-in-component-react-native-android\n. getting error :\n'props should be defined for stack'\nwhile using sample:\nhttps://github.com/efkan/rndrawer-implemented-rnrouter\n. I am unable to understand the solution, I have updated my code in above post for your simplicity, Please take a look on that and guide me.\n. ",
    "281330": "I'm having a similar issue, and @aksonov way of doing it does not work for me because I receive undefined error.  Has there been a change, or any updated way on how to do this?\n. i think you're doing nesting wrong.  check out this code snippet from the Example:\n```\n              <Scene key=\"tabbar\" component={NavigationDrawer}>\n                    <Scene key=\"main\" tabs={true} >\n                        <Scene key=\"tab1\"  title=\"Tab #1\" icon={TabIcon} navigationBarStyle={{backgroundColor:\"red\"}} titleStyle={{color:\"white\"}}>\n                            <Scene key=\"tab1_1\" component={TabView} title=\"Tab #1_1\" onRight={()=>alert(\"Right button\")} rightTitle=\"Right\" />\n                            <Scene key=\"tab1_2\" component={TabView} title=\"Tab #1_2\" titleStyle={{color:\"black\"}}/>\n                        </Scene>\n                        <Scene key=\"tab2\" initial={true} title=\"Tab #2\" icon={TabIcon}>\n                            <Scene key=\"tab2_1\" component={TabView} title=\"Tab #2_1\" renderRightButton={()=><Right/>} />\n                            <Scene key=\"tab2_2\" component={TabView} title=\"Tab #2_2\" onLeft={()=>alert(\"Left button!\")} leftTitle=\"Left\" duration={1} panHandlers={null}/>\n                        </Scene>\n                        <Scene key=\"tab3\" component={TabView} title=\"Tab #3\" hideTabBar={true} icon={TabIcon}/>\n                        <Scene key=\"tab4\" component={TabView} title=\"Tab #4\" hideNavBar={true} icon={TabIcon}/>\n                        <Scene key=\"tab5\" component={TabView} title=\"Tab #5\" hideTabBar={true} hideNavBar={true} icon={TabIcon}/>\n                    </Scene>\n                </Scene>\n\n```\n. @aksonov thanks!  i am wondering if I am using DrawerLayoutAndroid, should I be using the drawer methods for open and close?  I am not sure how the Drawer library you are using works, I am just trying to use what react-native provides out of the box.  Please let me know if you have any suggestions.  Thanks!\n. sure.  its documented at https://github.com/aksonov/react-native-router-flux/blob/d8ddf9d5e2f3ab4f034d1574793e08032f788e0c/README2.md#configuration\nProperty 'type' is - \nDefines how the new screen is added to the navigator stack. One of push, modal,actionSheet,replace, switch, reset transitionToTop. Default is 'push'. replace tells navigator to replace current route with new route. actionSheet shows Action Sheet popup, you must pass callback as callback function, check Example for details. modal type inserts its 'component' after navigator component. It could be used for popup alerts as well for various needed processes before any navigator transitions (like login auth process).`switch is used for tab screens. reset is similar to replace except it unmounts the componets in the navigator stack. modal component could be dismissed by using Actions.dismiss() transitionToTop will reset router stack ['route.name'] and with animation, if route has sceneConfig. eg \n\n. do you have some example code?  Just asking, that way if there is something obvious.  :)\n. There is a small snippet in the example app that handles this.\n. if (computedProps.isActive) {\n    style.marginTop = computedProps.hideNavBar ? 0 : 64;\n    style.marginBottom = computedProps.hideTabBar ? 0 : 50;\n  }\n. In each Scene, you can give backButtonTextStyle={{ ... }}\n. Yes, but you'd have to set a state somewhere for open or close modal.  Have you attempted this yet?  If so and you're having issues, please post some code :)\n. ",
    "ColdStack": "same  issue , its  not working\n. ",
    "egaris": "I'm having a similar issue. You can toggle drawer by changing it's \"open\" property through the store, like\n<Drawer\n          open={this.props.drawerVisibility}\n          onClose={\n          () => {\n              this.props.dispatch({type: types.TOGGLE_DRAWER_VISIBILITY, payload: {drawerVisibility: !this.props.drawerVisibility}})\n            }\n          }\n        >\n        </Drawer>\n. ",
    "ahmetabdi": "Just update npm if you get this \nsudo npm install npm -g\n. ",
    "paulxtiseo": "Well, good to know I am maybe not the only one. :)\nAnother thing I noticed in trying to superficially debug, the repo's readme.md example shows a nested router (<Router footer={TabBar} showNavigationBar={false}...) with a showNavigationBar attribute? How does it differ from the hideNavBar one? The configuration table above it does not document it.\n. But, probably inversed? Meaning (showNavigationBar = true) === (hideNavBar = false)?\nIf so, that did not seem to alter the fact the the navbar is absent from my ActivityFeed screen.\n. Yes, it works now.\n. Updated. Works for me.\n. ",
    "sisyphsu": "In the same case, NavigationBar disappeared in 2.2.7, and after upgrade RNRF to 2.3.6, NavigationBar appeared, but the back button disappeared again.\njs\nvar React = require('react-native');\nvar RNRF = require('react-native-router-flux');\nvar {Text, View, TouchableOpacity} = React;\nvar {Router, Route, Actions} = RNRF;\nvar Home = React.createClass({\n    render(){\n        return (\n            <View style={{flex:1, alignItems: 'center', justifyContent: 'center'}}>\n                <TouchableOpacity onPress={()=>{Actions.search();}}><Text>Hello world</Text></TouchableOpacity>\n            </View>\n        );\n    }\n});\nvar Search = React.createClass({\n    render(){\n        return (\n            <View style={{flex:1, alignItems: 'center', justifyContent: 'center'}}>\n                <Text>Search world</Text>\n            </View>\n        );\n    }\n});\nvar Launcher = React.createClass({\n    render(){\n        return (\n            <Router name=\"root\">\n                <Route name=\"home\" component={Home} initial={true} hideNavBar={true}/>\n                <Route name=\"search\" component={Search} hideNavBar={false}/>\n            </Router>\n        );\n    }\n});\nmodule.exports = Launcher;\nAbove is an example, I hope it can help some.\n. Maybe during routes switch, the NavBar doesn't change at all.\nCheck the code below, when route switch to search, NavBar title is still 'Home Page', not 'Search Page'.\njs\nvar React = require('react-native');\nvar RNRF = require('react-native-router-flux');\nvar {Text, View, TouchableOpacity} = React;\nvar {Router, Route, Schema, Actions} = RNRF;\nvar Home = React.createClass({\n    render(){\n        return (\n            <View style={{flex:1, alignItems: 'center', justifyContent: 'center'}}>\n                <TouchableOpacity onPress={()=>{Actions.search();}}><Text>Hello world</Text></TouchableOpacity>\n            </View>\n        );\n    }\n});\nvar Search = React.createClass({\n    render(){\n        return (\n            <View style={{flex:1, alignItems: 'center', justifyContent: 'center'}}>\n                <Text>Search world</Text>\n            </View>\n        );\n    }\n});\nvar Launcher = React.createClass({\n    render(){\n        return (\n            <Router name=\"root\">\n                <Schema name=\"default\" sceneConfig={React.Navigator.SceneConfigs.FloatFromRight}/>\n                <Route name=\"home\" title=\"Home Page\" component={Home} initial={true}/>\n                <Route name=\"search\" title=\"Search Page\" component={Search}/>\n            </Router>\n        );\n    }\n});\nmodule.exports = Launcher;\n. Fixed, tks~\n. 2.3.8 works fine.\n. ",
    "cancan101": "Any example of how to do this? It looks like Tabs from react-native-tabs and TabBar from react-native-router-flux expect to just be the tab bar and not the content pane whereas react-native-scrollable-tab-view expects to also manage the content pane (i.e. the various tabs are children components of the ScrollableTabView.\n. This looks like a good start:\njs\nclass ScrollableTabContainer extends Component {\n  render(){\n    const state = this.props.navigationState;\n    return (\n      <ScrollableTabView >\n        {\n          state.children.map(el =>{\n            return (\n              <DefaultRenderer navigationState={el}  key={el.key} {...el} tabLabel={el.title} />\n            );\n          })\n        }\n      </ScrollableTabView>\n    );\n  }\n}\n. ",
    "sarovin": "@cancan101 Can you show your Router??\nI have a set it as follows:\n<Scene\n                key=\"search\"\n                type=\"replace\"\n                component={ScrollableTabContainer}\n                title={'Search'}\n              >\n                <Scene\n                  key=\"tab_1\"\n                  component={tab_1}\n                  title=\"tab_1\"\n                  initial={true}\n                />\n                <Scene\n                  key=\"tab_2\"\n                  component={tab_2}\n                  title=\"tab_2\"\n                />\n              </Scene>\nbut i have this error:\nObjects are not valid as a React child (found: object with keys {dispatch, key, name, sceneKey, \nparent, type, component, title, initial, index}). If you meant to render a collection of children, \nuse an array instead or wrap the object using createFragment(object) from the React add-ons. \nCheck the render method of `ScrollableTabView`.\n. Not considered the previous comment. I have fix it.\nBut i have another problem.\nI have create this ScrollableTabView as cancan101:\n```\nimport React, {\n  Component,\n} from 'react';\nimport ScrollableTabView from 'react-native-scrollable-tab-view';\nimport { DefaultRenderer } from 'react-native-router-flux';\nimport TabBar from './TabBar';\nclass ScrollableTab extends Component {\n  render(){\n    const state = this.props.navigationState;\nreturn (\n  <ScrollableTabView renderTabBar={() => <TabBar />} >\n    {\n      state.children.map(el => {\n        return (\n          <DefaultRenderer navigationState={el}  key={el.key} {...el} tabLabel={el.title} />\n        );\n      })\n    }\n  </ScrollableTabView>\n);\n\n}\n}\nexport default ScrollableTab;\n```\nand this TabBar:\n```\nimport React from 'react';\nimport {\n  StyleSheet,\n  Text,\n  View,\n  TouchableOpacity,\n  Animated,\n  Component\n} from 'react-native';\nconst styles = StyleSheet.create({\n  tab: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingBottom: 10,\n  },\n  tabs: {\n    marginBottom: 70,\n    top: 64,\n    height: 45,\n    flexDirection: 'row',\n    paddingTop: 5,\n    borderWidth: 1,\n    borderTopWidth: 0,\n    borderLeftWidth: 0,\n    borderRightWidth: 0,\n    borderBottomColor: 'rgba(0,0,0,0.05)',\n  },\n  tabUnderlineStyle: {\n    position: 'absolute',\n    height: 3,\n    backgroundColor: '#3b5998',\n    bottom: 0,\n  },\n});\nconst propTypes = {\n  goToPage: React.PropTypes.func,\n  activeTab: React.PropTypes.number,\n  tabs: React.PropTypes.array,\n};\nclass TabBar extends Component {\nrender() {\n    return (\n      \n        {this.props.tabs.map((tab, i) => {\n          return (\n             this.props.goToPage(i)} >\n              \n                {tab}\n              \n\n          );\n        })}\n      \n    );\n  }\n}\nTabBar.propTypes = propTypes;\nexport default TabBar;\n```\nThe result is this:\n\nWhy it duplicates the NavBar? Any suggestions?\n. I have upgrade to 0.24.0-rc2 and it's fast but i have another issue.\nThe custom NavBar is in the bottom ( i have tested on IOS Simulator and Samsung Galaxy S6 Device ):\n\nThis is my NavBar Component:\n```\nimport NavigationBar from 'react-native-navbar'\nimport React, { Component, StyleSheet, View } from 'react-native'\nclass NavBarBase extends Component {\nrender() {\nreturn (\n  <NavigationBar style={styles.navBar}\n    titleColor='white'\n    buttonsColor='white'\n    statusBar= {this.props.statusBar ? this.props.statusBar : {style:'default'}}\n    title= {{title:this.props.title, tintColor:'white', fontSize: 20, fontFamily: 'Avenir-Roman'}}\n    leftButton = {this.props.leftButton ? this.props.leftButton : {title:''}}\n    rightButton = {this.props.rightButton ? this.props.rightButton : {title:''}}\n  />\n);\n\n}\n}\nclass NavBar extends Component {\n   render() {\n      return } {...this.props} statusBar= {{style:'light-content', tintColor: '#1db198', hidden: false}} />\n   }\n}\nvar styles = StyleSheet.create({\n   navBar: {\n       backgroundColor: '#1db198',\n       height: 56\n   },\n});\nmodule.exports = {NavBar};\n```\n. Actions.signin({type: \"reset\"});\n. it's not the right way...\nIf i add 'Actions.signin({type: \"reset\"})' navigation does not work as it should.\nAfter 'Actions.signin({type: \"reset\"})', the 'Actions.search' not work in the signin component\n. Yes\n. There are news for react-native 0.25 support??\n. There isn't bug with rn 0.24.1?\n. The Scene 'drawer' is in the array \n```\nrender () {\n    console.log('DEBUG Scenes: ', scenes)\nreturn (\n  <Router\n    createReducer={this.reducerCreate.bind(this)}\n    scenes={scenes} />\n);\n\n}\n```\n\n. Why there is only one children in the navigationState for root? the children are two 'auth' and 'drawer'...i don't understand.\nthis is the result of 'console.log('navigationState: ', props.navigationState)' in Switch.js:13\n\n. The problem is the tabs={true} in the root :D sorry\n. I have the same prolem because the height of NavBar changes from IOS to Android and i want manage it in each screen.\n624\n. I just do not understand what is wrong with it, i post a questions on stackoverflow...\n```\nimport React, { Component }                   from 'react-native'\nimport {\n  createStore,\n  applyMiddleware,\n  combineReducers,\n  connect }                                   from 'redux'\nimport {\n  Router,\n  Reducer,\n  Actions,\n  Scene,\n  Switch,\n  Modal\n}                                             from 'react-native-router-flux'\nimport { middleware as netInfo }              from './Middleware/redux-middleware-react-native-netinfo'\nimport { Provider }                           from 'react-redux'\nimport thunk                                  from 'redux-thunk'\nimport createLogger                           from 'redux-logger'\nimport { getAuth }                            from './Lib/auth'\nimport * as reducers                          from './reducers'\nimport { checkConnection }                    from './actions/NetworkActions'\nimport SignIn                 from './Containers/SignIn'\nimport SignUp                 from './Containers/SignUp'\nimport Search                 from './Containers/Search'\nimport OTPScreen              from './Containers/OTPScreen'\nimport FDrawer                from './Components/FDrawer'\nconst selectorCheck = (user) => {\nif ( user && ( user.auth_token || user.isGuest ) ) {\n    return 'drawer'\n  }\n  return 'auth'\n}\nconst logger = createLogger()\nconst createStoreWithMiddleware = applyMiddleware(thunk, logger, netInfo)(createStore)\nconst reducer = combineReducers(reducers)\nconst store = createStoreWithMiddleware(reducer)\nconst RouterWithRedux = connect()(Router)\n//Carica l'Auth da Realm allo Store\ngetAuth( store )\n//Controlla lo stato della connessione all'avvio\nstore.dispatch(checkConnection())\nexport default class App extends Component {\n  render() {\n    return (\n      \n\n\n({user:state.user}))(Switch)}\n              selector={ ({ user }) => selectorCheck(user) }\n              tabs={true}\n              >\n              \n\n\n\n\n\n\n\n\n\n\n\n\n\n    );\n  }\n}\nexport default App\n```\n. Yes, is a Redux exception...not?\npackage.json\n{\n  \"name\": \"test\",\n  \"version\": \"0.0.1\",\n  \"private\": true,\n  \"scripts\": {\n    \"start\": \"node node_modules/react-native/local-cli/cli.js start\"\n  },\n  \"dependencies\": {\n    \"react\": \"^0.14.8\",\n    \"react-native\": \"^0.22.2\",\n    \"react-native-drawer\": \"^2.0.0\",\n    \"react-native-dropdown\": \"0.0.6\",\n    \"react-native-router-flux\": \"^3.22.5\",\n    \"react-redux\": \"^4.4.1\",\n    \"realm\": \"^0.11.1\",\n    \"redux\": \"^3.3.1\",\n    \"redux-logger\": \"^2.6.1\",\n    \"redux-middleware-oneshot\": \"^0.1.1\",\n    \"redux-thunk\": \"^2.0.1\"\n  },\n  \"devDependencies\": {\n    \"eslint\": \"^2.8.0\",\n    \"eslint-config-airbnb\": \"^7.0.0\",\n    \"eslint-plugin-import\": \"^1.5.0\",\n    \"eslint-plugin-jsx-a11y\": \"^1.0.2\",\n    \"eslint-plugin-react\": \"^5.0.1\",\n    \"redux-devtools\": \"^3.1.1\",\n    \"remote-redux-devtools\": \"^0.1.5\"\n  }\n}\n. Yes, \n\n. I have a reducers.js\n```\n// routes.js\nconst initialState = {\n  scene: {},\n};\nexport default function reducer(state = initialState, action = {}) {\n  switch (action.type) {\n    // focus action is dispatched when a new screen comes into focus\n    case \"focus\":\n      return {\n        ...state,\n        scene: action.scene,\n      };\n// ...other actions\n\ndefault:\n  return state;\n\n}\n}\n```\nand combine reducers in app.js\nWhat do you mean with 'Do you see anywhere files from this component'?\nI have this error at the startup.\n. I can't call connect() in the app.js, not?\n. Ok, i have a solution:\nroutes.js\n```\nimport React                  from 'react-native'\nimport {\n  Scene,\n  Switch,\n  Modal,\n  Router\n}                             from 'react-native-router-flux'\nimport { connect }            from 'react-redux'\nimport SignIn                 from './Containers/SignIn'\nimport SignUp                 from './Containers/SignUp'\nimport Search                 from './Containers/Search'\nimport OTPScreen              from './Containers/OTPScreen'\nimport FDrawer                from './Components/FDrawer'\nconst selectorCheck = (user) => {\nif ( user && ( user.auth_token || user.isGuest ) ) {\n    return 'drawer'\n  }\n  return 'auth'\n}\nconst RouterWithRedux = connect()(Router)\nclass Routes extends React.Component {\nrender () {\n    return (\n      \n\n({user:state.user}))(Switch)}\n            selector={ ({ user }) => selectorCheck(user) }\n            tabs={true}\n            >\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    );\n  }\n}\nexport default Routes\n```\napp.js\n```\nimport React, { Component }                   from 'react-native'\nimport {\n  createStore,\n  applyMiddleware,\n  combineReducers\n}                                             from 'redux'\nimport { middleware as netInfo }              from './Middleware/redux-middleware-react-native-netinfo'\nimport { Provider }                           from 'react-redux'\nimport thunk                                  from 'redux-thunk'\nimport createLogger                           from 'redux-logger'\nimport { getAuth }                            from './Lib/auth'\nimport * as reducers                          from './reducers'\nimport { checkConnection }                    from './actions/NetworkActions'\nimport Routes                                 from './routes';\nconst logger = createLogger()\nconst createStoreWithMiddleware = applyMiddleware(thunk, logger, netInfo)(createStore)\nconst reducer = combineReducers(reducers)\nconst store = createStoreWithMiddleware(reducer)\nexport default class App extends Component {\n  render() {\n    return (\n      \n\n\n    );\n  }\n}\nexport default App\n```\n. @explorigin Can you post a screenshot and your code?\n. You can use this in index.android.js:\nStatusBar.setBackgroundColor('transparent');\nStatusBar.setTranslucent(true);\n. There is an issue with android api > 17...\nPlease FIX with:\ntitle: {\n    top: Platform.OS === 'ios' || Platform.Version > 19 ? 20 : 0,\n  },\n  header: {\n    height: Platform.OS === 'ios' || Platform.Version > 19 ? 64 : 44,\n  },\n\n\n. #614 \n. @charpeni it's good?\n. @aksonov i have fixed some Eslint error.\n. There is also\n305:27  error  'NavigationState' is not defined                             no-undef\n. I have fixed NavBar height for android...\n. It's a problem for me..\n. #625 \n. 4 eslint errors remaining but i need help.\n. 'onPress' is already declared in the upper scope.\nI have changed OnPress in OnPressBind, it's ok?\n. The props showDot is undefined in the TabIcon. It is defined in the component 'MessageConintainer'...not?\nCan you use console.log to display the status of this.props.showDot?\n. You are looking for this https://facebook.github.io/react/docs/component-specs.html\n. i am sorry ;)\n. yes, it's pass the eslint rules ;)\n. #637\n. Right\n. Oops, i created a duplicate request.\n@leoz can you change titleStyle PropTypes with this? \ntitleStyle: PropTypes.oneOfType([PropTypes.array, PropTypes.object])\nso we can use an array for style without warning.\n. #688 \n. There is a problem with the Translucent StatusBar.\nWe can't see if the translucent is set in StatusBar, no?\n\n. Yes, no problem.\n. I have a problem with transition on Android.\nRN@0.28\nRNRF@3.20.2\n\n. RNRF@3.30.0 use a fork of experimental navigator from RN@0.26\n. Now you can see an error with TabIcon:\n\nWarning: Failed propType: Invalid prop selected of type boolean supplied to TabIcon, expected string. Check the render method of Tabs.\n. @cridenour Yes, it not overwrite any styles...\n@joenoon have a better solution\n. Can you show an example or a screenshot?\n. componentWillReceiveProps(nextProps) {\n  Actions.refresh({title: nextProps.whatever.name})\n}\n. #958 \n. I'm studying a solution, any help is welcome. \n. This fix my problem.\n. @ms88privat \nyes, but not work for me...\n. Can you show me an example?\n. @ms88privat you use unmountScenes in selector component with my fix?\n. I don't understand why \"index !== navState.index\" not return true at the second time.\n\nFor example:\n- Scene as switch with case1 and case2\n  - case1: login\n  - case2: tabs with tab1 and tab2\n    - tab1: ...\n    - tab2: button for logout \nControl Flow:\n- switch from case1 -> case2 and then go to tab2 and logout\n- switch again from case1 -> case2\nnow \"index !== navState.index\" is false...why???? \ud83d\ude15 \n. #996\n. See this #932 and this #958\n. You can set tabBarStyle like this:\ntabBarStyle={ {\n    ...Platform.select({\n      ios: {\n        top: 64,\n      },\n      android: {\n        top: 54,\n      },\n    }),\n    height: 65,\n    padding: 16,\n  }}\n. Can you try to fix it with style props?\n. @joenoon I can test it tomorrow\n. Can you test it? It work fine for me...\n``` diff\n@@ -15,6 +15,7 @@ export default class Switch extends Component {\n   constructor(props, context) {\n     super(props, context);\n     this.updateState = this.updateState.bind(this);\n+    this.resetHistoryStack = this.resetHistoryStack.bind(this);\n     this.state = {};\n   }\n@@ -26,6 +27,23 @@ export default class Switch extends Component {\n     this.updateState(props);\n   }\n\nresetHistoryStack(child) {\nconst newChild = child;\nnewChild.index = 0;\nfor (let j = 0; j < child.children.length; j++) {\nif (child.children[j].initial) {\nnewChild.index = j;\nif (!child.tabs) {\nnewChild.children = [child.children[j]];\n}\n}\nif (newChild.children[j].children) {\nnewChild.children[j] = this.resetHistoryStack(child.children[j]);\n}\n}\nreturn newChild;\n}\n+\n   updateState(props) {\n     const navState = props.navigationState;\n\n@@ -43,11 +61,8 @@ export default class Switch extends Component {\n if (navigationState.key !== navState.children[navState.index].key) {\n   if (props.unmountScenes) {\n\n\nnavigationState = {\n...navigationState,\nchildren: [navState.children[navigationState.index]],\nindex: 0,\n};\nnavState.children[navState.index] = this.resetHistoryStack(navState.children[navState.index]);\nnavigationState = { ...navState };\n       }\n       ActionsselectedKey;\n     }\n```\n. @aksonov you are right but i don't understand how work your Reducer  \ud83d\ude15 \nI try with reducer as soon as possible\n. #1002\n. @aksonov Is it right? \n. It work fine for me.\nMy scenarios is here #952 \n. @zxcpoiu I don't understand your problem...i have tested with your scenarios and it work fine.\n. @zxcpoiu i try to fix it\n. @zxcpoiu Can you try now?\n@aksonov this is completed for me...\n. @blackxored with modal scene there is a problem.\nCan you help me?\n. @blackxored Yes, it not work with the old version.\nSo if we have this scenarios:\n\njavascript\n<Scene key=\"modal\" component={Modal}>\n      <Scene key=\"root\" selector={...} unmountScenes tabs >\n        <Scene key=\"auth\" >\n          <Scene key=\"welcome\"  component={Welcome} />\n        </Scene>\n        <Scene key=\"main\" tabs >\n          <Scene key=\"list\" ... />\n          <Scene key=\"localize\" tabs >\n            <Scene key=\"scene1\" >\n              <Scene key=\"search\" />\n            </Scene>\n            <Scene key=\"scene2\" />\n          </Scene>\n        </Scene>\n      </Scene>\n      <Scene key=\"error\" />\n    </Scene>\nWe can't call Actions.search from Scene with key => Scene1.\nWe can't call Actions.error from Scene with key => list.\nAny suggestion?\n. Yes @blackxored \n. @aksonov I try to fix it\n. @aksonov \nFrom this \njavascript\nif (navigationState.key !== navState.children[navState.index].key) {\n      if (props.unmountScenes) {\n        Actions[selectedKey]({ unmountScenes: true });\n      } else {\n        Actions[selectedKey]();\n      }\n    }\nto this??\njavascript\nif (navigationState.key !== navState.children[navState.index].key && navigationState.index !== navState.children[navState.index].index) {\n      if (props.unmountScenes) {\n        Actions[selectedKey]({ unmountScenes: true });\n      } else {\n        Actions[selectedKey]();\n      }\n    }\n. @aksonov \nSo we have this error:\n\nCannot update during an existing state transition (such as within render or another component's constructor). Render methods should be a pure function of props and state; constructor side-effects are an anti-pattern, but can be moved to componentWillMount.\n. @aksonov I have a problem with the last implementation. Now not work the resetHistoryStack...\n. I think that we must investigate about your implementation...\nI don't understand why selectedKey is always equal to current sceneKey in your use case.\n. @aksonov \n\nHave you any idea about why your scenekey is always egual?\nCan you try this?\n```\nimport React, { Component, PropTypes } from 'react';\nimport DefaultRenderer from './DefaultRenderer';\nimport Actions from './Actions';\nexport default class Switch extends Component {\nstatic propTypes = {\n    navigationState: PropTypes.object,\n    onNavigate: PropTypes.func,\n    selector: PropTypes.func,\n    unmountScenes: PropTypes.bool,\n  };\nconstructor(props, context) {\n    super(props, context);\n    this.state = {};\n    this.updateState = this.updateState.bind(this);\n  }\ncomponentDidMount() {\n    this.updateState(this.props);\n  }\ncomponentWillReceiveProps(props) {\n    this.updateState(props);\n  }\nshouldComponentUpdate(nextProps, nextState) {\n    if (this.state.navigationState !== nextState.navigationState) {\n      return true;\n    }\n    return false;\n  }\nupdateState(props) {\n    const navState = props.navigationState;\n    const selector = props.selector;\n    if (!selector) console.error('Selector should be defined.');\nconst selectedKey = selector(props);\nif (!selectedKey) console.error('Selector should return key.');\n\nconst selected = navState.children.filter(el => el.sceneKey === selectedKey);\nif (!selected) console.error(`A scene for key \u201c${selectedKey}\u201d does not exist.`);\n\nconst navigationState = selected[0];\nif (!navigationState) console.error(`Cannot find a scene with key \u201c${selectedKey}\u201d`);\n\nconsole.log(navigationState.name, navigationState.sceneKey);\nconsole.log(navState.children[navState.index].name, navState.children[navState.index].sceneKey);\n\nif (navigationState.sceneKey !== navState.children[navState.index].sceneKey) {\n  if (props.unmountScenes) {\n    Actions[selectedKey]({ unmountScenes: true });\n  } else {\n    Actions[selectedKey]();\n  }\n}\n\nthis.setState({ navigationState });\n\n}\nrender() {\n    if (this.state.navigationState) {\n      return (\n        \n      );\n    }\n    return null;\n  }\n}\n```\n. @aksonov the variant in the last commit? No, not work the resetHistoryStack. \nGive me time...\n. @aksonov If this is good for everyone you can merge \ud83d\ude2b \n. I want a persistent tabbar ( search, notification, UserProfile ) and push other scene from search or notification or userProfile with a back button in the navbar.\nLike this => https://www.youtube.com/watch?v=nJDtrvEOr40\n. I have this error:\nis not tab bar, jump action is not valid\n. javascript\n<RouterWithRedux>\n  <Scene key=\"modal\" component={Modal}>\n    <Scene key=\"root\" hideNavBar selector={...} unmountScenes tabs >\n      <Scene key=\"auth\" >\n        <Scene key=\"welcome\" />\n        ...\n      </Scene>\n      <Scene key=\"search\" clone />\n      <Scene key=\"main\" tabs >\n        <Scene key=\"list\" icon={...} />\n        <Scene key=\"localize\" icon={...} tabs initial >\n          <Scene key=\"a\" icon={...} />\n          <Scene key=\"b\" icon={...} />\n        </Scene>\n        <Scene key=\"profile\" icon={...} />\n      </Scene>\n    </Scene>\n  </Scene>\n</RouterWithRedux>\nSo when i am on the a scene, i have a bottom tab and a top tab.\nI want push the \"search\" scene from \"a\"  with the persistent tab ( list, localize, profile at the bottom ), without the top bat and the back button in the navbar.\n. because the root is a selector component...\n. Is there a limit with the tab?\n. I think so too, i can remove the third tab but i want a persistent tab at the bottom. \nMaybe the tabs is not the right way.\n. Yes, but i want to show the main tabs ( with list, localize and profile and not with auth, search,main)  after the login action.\nSo if the user is authenticated then show the main tabs.\n. The solution is this:\njavascript\n<RouterWithRedux>\n  <Scene key=\"modal\" component={Modal}>\n    <Scene key=\"root\" hideNavBar selector={...} unmountScenes tabs >\n      <Scene key=\"auth\" >\n        <Scene key=\"welcome\" />\n        ...\n      </Scene>\n      <Scene key=\"main\" >\n        <Scene key=\"search\" clone />\n        <Scene key=\"tabs\" tabs initial >\n          <Scene key=\"list\" icon={...} />\n          <Scene key=\"localize\" icon={...} tabs initial >\n            <Scene key=\"a\" icon={...} />\n            <Scene key=\"b\" icon={...} />\n          </Scene>\n          <Scene key=\"profile\" icon={...} />\n        </Scene>\n      </Scene>\n    </Scene>\n  </Scene>\n</RouterWithRedux>\n. LGTM\n. #1021\n. react-addons-pure-render-mixin@15.2.1 requires a peer of react@^15.2.1\nWant you update react, react-dom and react-native?\n. #1021 \n. @China1Ai It is fixed?\n. Can you fix eslint errors?\n. ???\n. @yasheshkt yes, you use it?\n. @aksonov have any suggestions?\n. @hubciorz Do you use react-native-maps???\n. #1386 this solve your problem????\n. @openmynet  Can you fix lint error?\n. @aksonov you can close \n. The root scene must be a tabs if you want use switch. See => https://github.com/aksonov/react-native-router-flux/blob/master/docs/OTHER_INFO.md#switch-new-feature\n. #1386 this solve the problem?\n. @MechanicKim a PR is welcome ;). @aksonov close it\n. ok, thank you @aksonov \n. @aksonov Can i merge?\n. @aksonov Close this\n. No, this is another problem... I cannot test if it works. I will try it this weekend ;). @aksonov Can you test this PR?. @aksonov I cannot test this PR now.... We can release a beta version with this PR?. @duhseekoh @zxcpoiu can you test this beta?. @cfs5403 Actions.anotherComponent({ myProp: 'hello' });\n. Please ask questions about usage within stackoverflow, not here, with tag\nreact-native-router-flux, react-native\nIl Ven 18 Nov 2016, 21:03 stefonmarcel notifications@github.com ha\nscritto:\n\nhello aksonov ,\nim trying to display icons in react native router flux tab bar using import\nIcon from 'react-native-vector-icons/Ionicons'; but i think theres\nsomething that my eye cant catch. I believe i did it right. i keep getting required\nprop name was not specified in 'icon' error\nvar color = this.props.selected ? '#00f240' : '#301c2a';\nreturn (\n  <View style={{flex:1, flexDirection:'column', alignItems:'center', alignSelf:'center', justifyContent: 'center'}}>\n  <Icon\n        name={this.props.iconName}\n        size={18}\n        color={this.props.selected ? '#444' :'#AAA'}\n     />\n             <Text style={{color: color, fontSize: 12}}>{this.props.title}</Text>\n  </View>\n);\n}\n}\n\n\n\n```\nthank you\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/aksonov/react-native-router-flux/issues/1395, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AFtA7j5kFgMcF7mBmgKhP05bcxChap2gks5q_gR6gaJpZM4K23tt\n.\n. @charpeni Yes, Everything is working.\n. @aksonov Can you merge?. ok @charpeni, thank you ;). @lucianomlima any PR is welcome.. @charpeni Now we have another error in circleci, Can you fix it, please?\n\nError: Cannot find module 'react-dom/lib/ReactPerf'. @robbue It's not possible. The button is an image and you can set only the source with backButtonImage props.\nI don't like this solution and i want pass an element like you (i use a web font icon, not image).\nBut i don't have time for now, can you create a PR for this?? \nhttps://github.com/aksonov/react-native-router-flux/blob/master/src/NavBar.js#L251. Can you try this fix? #1386 . no problem @AlexDM0 . Can you show an example?\nI use RN0.37 and i don't have this problem.. If you don't use drawer or tabs, it works?. Sorry @ssomnoremac, i do not know...I can try to investigate when I have time.. Can you test this PR? => #1386 . ",
    "ruskid": "Can someone post final working solution with scrollable-tab-view?\n. I implemented it, but still some things didn't work quite well. For example \"clone\" in scene and I decided to stick to react-native-tabs. The code above works.\n. I have the same scene structure and same problem. In my case I had a conflict after logout, try to use type={ActionConst.RESET} on login Scene to reset navigation.\n. similar issue\nhttps://github.com/aksonov/react-native-router-flux/issues/395\n. My fault. redux updated two components\n. ",
    "juanpujol": "Did somebody figured this out? Thanks.\n. ",
    "jsdario": "Have any updates this past month? \n. How can we not wrap it into a provider? Any examples we could follow? I am stuck here and it was the recommended implementation on the docs https://github.com/aksonov/react-native-router-flux/blob/master/docs/REDUX_FLUX.md\n. Hi. Thanks @zxcpoiu for the hints, I made some progress. This question I posted in stackoverflow is becoming sort of popular. You may want to answer as you answer this one so I can credit you for your help.\n. How would it be top to down or viceversa? it seems to handle only 1 dimension.\n. I do appreciate the documentation work \u2013 which is nice. And the devoted to maintain this library. However I am missing examples on how to obtain precise navbar configurations. If they are only documented I need to try API methods one by one to see the result. That is which I have eventually done, but specifying a couple of popular use cases (with or without screen captures) I belive would increase library adoption.\n. [Update] I started a bounty on that question on stackoverflow\n. There should be a way to do a simple serialization / dehydratation work around \u2013 I did the same for Navigator from React Native. But I am still learning and asking for some help :)\n. However I am still not achieving the most important part \u2013 I want to be able to use hot reloading, but that feature only works best when tightly coupled to the store. Else it will always redirect me to the root Scene. Is there around an issue or solution to this I can take a look on?\n. No, @pocesar, sorry. I also changed to use ex-navigation, but it does not persist the router either.. Cannot afford it :(. ",
    "longfay": "lol really looking forward to the solution.\n. ",
    "afilp": "@sarovin I have the same error that you seemed to have fixed: \"Objects are not valid as a React child\"\nSee here:\nhttps://github.com/aksonov/react-native-router-flux/issues/1589\nWould you like to tell us how you fixed it? I am simply using the example code of this package for the Scenes.. @SudoPlz Is this a cross-device solution?\nI find that on my Samsng Android I need to use \"53\", so how can we be sure of the values?\n. @SudoPlz Thanks, may I assume that this is regardless of pixelRatio and same for all models of Android and iOs?\n. I would love to see this implemented. I have a React app that uses the \"react-router\" package and need to port its logic to a react-native mobile app. It would be nice if I could just keep the \"url-based\" routing logic which is already implemented (ok, with some tweaks).\n. @jadidian So, is this the solution for deeplinks and nothing needs to be done in the library?\nAlso, what about Android? How does this work? Thanks!\n. @jadidian (or any other)\nI am using the following code:\ncrossroads.addRoute('{kind}/:appId:/:categoryId:/:excursionId:/:screen:', (kind, appId, categoryId, excursionId, screen) => {\n    Actions.Page1({\n        deepLinkProps: {\n            kind,\n            appId,\n            categoryId,\n            excursionId,\n            screen,\n        },\n    });\n    }\n);\nHowever, it appears that the screen is changed more times than once (as it is the main screen) and the \"deepLinkProps\" are not there on the last render.\nWhy?\nAny ideas, why this cannot work?\n. @jadidian or anyone else:\nWhat about this on Android?\nActivity not started, its current task has been brought to the front\nThis appears when using the \"adb\" command:\nadb shell am start -W -a android.intent.action.VIEW -d myapp://mobile/app/215/test com.myapp\nThis means that the listener is not invoked and the deep link is not triggered, because all Android does is bring the app on the front.\nIs there any solution to that?\n. Is there a resolution to this? I get wrong screens because I pop to the same component but with different props. However, since the previous props are not yet \"unmounted\" if i quickly press a button then I get the wrong children view (the previous one).\nHow can this be solved?\n. @brien-crean  Thanks, disabling the animation (duration={0}) seems to work (cannot be sure 100% but in most tests it worked). Still a solution needs to exist because we all would like to use the animations.\n. Thank you, what happens in the meantime? Does the component receive the old props? Does it render without any? Or is this immediate?\n. @momo-Flanny Thanks, can you please explain a little how you did this? \n. I get undefined is not an object when evaluating action.scene.name. What is wrong?\n. @designbuildplay What do you mean \" if you aren't careful with shouldComponentUpdate()\"?\nI am also worried of tens of screens remaining on the memory just for being available for a POP action. What is the best practice for this? Do you use shouldComponentUpdate() extensibly on every component, if yes how? Thanks!. @cridenour Sorry for the confusion, this was related to https://github.com/joeferraro/react-native-cookies, not to this package.\nAll is OK. I will close this.\n. @jeveloper It hurts to know that friends are now on sunny beaches and I am still struggling with what is warning or not and what breaks or not on the npm world! (struggling to develop in sunny and hot Athens...)\n. I develop for Android... (for start, then for iOS)\n. @waqas19921 This is nice, but how can the \"automatic\" pop of the hardware back (on Android) is handled? What should we do in this case, in order for a prop to have a different value there?\nThanks!\n. Please help, how can we get the current stack? Should this be a parameter of the function?\n. @aksonov This really puzzles me, not having the \"route stack\" as a parameter of the function I could not find any way to create conditionals in order for the BACK to be \"true\" or \"false\" based on the scene (I want custom logic for the initial \"login\" scene, and the for the next scene which should not let you move back to login). \nDo I miss something on how this is implemented?\n. @sattaman Thanks but I want to keep the BACK functionality for all other cases.\nI want custom logic for the initial \"login\" scene, and the for the next scene which should not let you move back to login, BUT BACK should be working as usual on next scenes (i.e. other than the 1st and 2nd).\nIsn't there a way to just know where I am?\n. @sattaman I followed your advice and my use case is now implemented. Thank you.\nP.S. Still I think that If someone wanted to know where she is heading to after pressing the hardware back, then she would not be able to know it beforehand (and stop the back process). Maybe this needs to be addressed somehow.\n. Is my error related to this issue too?\nSee here:\nhttps://github.com/aksonov/react-native-router-flux/issues/1589\nThe interesting part is that it works once I open the Chrome (V8) debugger. What is different there?. @AlanFoster \n\n\nI do not use any 'i18n library' (at least not explicitly, could a dependency may do this? Does it matter somehow?)\n\n\nIs this error related to issue #1589 ? Why does it work with certain settings? (Hot reloading AND Debug JS on?). We found something new.\n\n\nWe changed \nimport 'babel-polyfill';\nTO:\nrequire('babel-polyfill');\nand now it works!\nI wonder why (and why the problem was only on Android, not iOS).\nThe above statement is the 1st one on Main.js component, even above the React and React Native imports (as the instructions say).\n. Related to this, how can we detect that an action will be the last pop? Through the reducer? Or with another API call?\n. I am also interested to it, not only for tabs though but for scenes too.. I confirm that this behavior has been a problem. Can someone tell us if there is a reason for this warning? I mean why it was added on the first place.\nWhat happens when this code is omitted, I assume the app exits?. @aksonov Any idea how this could be fixed? Thanks a lot!. I also see that the problem is caused with \"Enable Hot Reloading\". When this is ON, the problem occurs unless the Debug JS remotely is also ON. If both are OFF, it seems to be working.. Major problem: This also happens on the Release version, so the app crashes immediately after it starts.\nSee Report bug here:\n\nI hope we can find a solution to this... If someone has any idea or a link to a different issue (on a different package maybe?) please let us know. Thanks!\n. We found something new.\nWe changed \nimport 'babel-polyfill';\nTO:\nrequire('babel-polyfill');\nand now it works!\nI wonder why (and why the problem was only on Android, not iOS).\nThe above statement is the 1st one on Main.js component, even above the React and React Native imports (as the instructions say).\n. I have (almost) the same problem.\nThe \"refresh\" makes us lose the scroll position of the parent (which is ScrollView). We do not want to lose this. How?. @crazyhatfish I use the \"BaseLightbox\" that the example has, which uses transparent but I only see a light gray as background. I do not see the contents of the previous screen behind the lightbox. Any ideas what should be changed? Thanks!. @mn7676 Sure, I hope this helps. Thanks!\n````\nfunction reducerCreate(params) {\n    const defaultReducer = Reducer(params);\n    return (state, action) => {\n        if ([ActionConst.POP_AND_REPLACE, ActionConst.BACK_ACTION].includes(action.type) && state.index === 0) {\n            handleExitApp();\n            return state;\n        }\n        return defaultReducer(state, action);\n    };\n}\n...\n\n\n\n\n\n\n                <Scene\n                    key=\"DemoGameLightbox\"\n                    component={DemoGameLightbox}\n                />\n            </Lightbox>\n        </Router>\n\n````\n. Note: I also use REDUX through connected components and works on 0.24 (but I cannot use \"onExit\" which I really need to use in order to clear a timer and this can be done only in 0.28.... but I cannot use this either).. Hi, in 4.0.6 the REPLACE does not work as expected, no errors but the route is not replaced properly.\nAny news on this?\nI think that this code is also problematic here:\nconst routes = [...parent.routes.slice(0, index - 1), ...parent.routes.slice(index)];\nShouldn't it be this?\nconst routes = [...parent.routes.slice(0, index), ...parent.routes.slice(index + 1)];\n. I tried to use it with a \"connected\" component but onExit does not even trigger. Is this normal?. We need to have better support for Redux, if possible. Thanks!. Hi! Is there any solution to this?\n. I believe this is not fixed in 4.0.6. I have problems with the REPLACE.. Hi, 'replace' is not the same with 'reset' because we need to make sure that no history is tracked anymore (with back buttons, etc.) when the user logs out. \n@aksonov Do you think this can be solved in a clean way? Thanks!. ",
    "samernady": "any complete example or working solution on this? . ",
    "smikulenas": "I can confirm - it's the new issue that does not exist in 2.3.0\nrelated with: https://github.com/facebook/react-native/commit/67c6afd14b835f59832e7e19f95f22160c3f1abb\n. ",
    "tinygipxy": "I have same issue \n. Good suggest :-), why don't you tell me use static html instead of React\n. @bosung90 Nothing serious here, thank you anyway\n@aksonov I tried to use this component (3.22.23) with react-native 0.26.0-rc, but got issue \"Super expression must either be null or a function, not undefined\" that caused by : \nimport {Scene} from 'react-native-router-flux' command\n. @cridenour Can you help to explain it more ? what is 0.26-wip and where can I get it ?\n. Yes, branch 0.26-wip with react 0.26.0-rc don't have this issue\n. Thank you all, I'll try to use state to control it\n. Thank you @cridenour, but I'm connecting it to Redux state, so I don't have this reducer anymore. Anyway, I managed to use onPress action of tabbar scene to handle  it after look into source code of tabbar: \nhttps://github.com/aksonov/react-native-router-flux/blob/f9081b8cce8281ca845aa377fca552087d844de4/src/TabBar.js#L28\n. @sibelius I didn't use it anymore in my project, but the code look like this:\n   {console.log(\"On Press\")}} .../>\n. ",
    "zxcpoiu": "this issue occurs from version 2.3.4\n. Current workaround:\n- You can downgrade to stable 2.3.1 or master 2.3.3.\n- if you don't need to render NavBar, you can try setting up prop showNavigationBar={false} instead of hideNavBar={true} to tell ExNavigator do not render NavBar specifically. see: #262 \n. confirmed.\n2.3.7 fixed this issue.\ntested under react-native@0.20\nthanks!\n. At first, there are no problems at all.\nfirst reason:\nWhen I tried to find a workaround for #258 ( fixed by 2.3.7 ), which can be avoided if you set not to render NavBar at all.\nAt that time, I noticed that even though I use hideNavBar={true}, the app was still trying to reder NavBar, so error occurs.\nOnly if I use showNavigationBar={false} specifically that I can prevent the error.\nI don't know why it was, but maybe it is fixed, so it won't have any problems to me now.\nsecond reason:\nIn Example.js line 86 , it use showNavigationBar={false} instad of hideNavBar={true}.\nI think this is the most confusing part to newbies like me.\nThat's why I think it may be better to:\n\nhave a wrapper function that prioritize them or hide the lower api showNavigationBar at all.\nalways use hideNavBar in any Example code. \n\nyup, maybe add a wrapper for this is a little be redundant.\nI just make a PR to use hideNavBar in example instead showNavigationBar.\n270\n. Hi @aksonov \nWhen using redux, and wrap Router under Provider like\n<Provider>\n    <Router />\n</Provider>\nthe router will render several times if store changed, thus causing key xxx is already defined due to invoke Actions.Create(props.children) in Router.js several times. described at #376 ( probably NOT caused by HMR is on )\nmy structure like this:\n``` javascript\n\n\n    constructor(props) {\n        super(props);\n        this.myMethod = this.myMethod.bind(this);\n        this.xxxx = null;\n    }\n\n    myMethod(yyyy) {\n        if (this.store.myReduxData) {\n            this.xxxx = yyyy;\n            this.props.dispatch(xxxx)\n        }\n    }\n\n    render() {\n        return (\n            <Router>\n                <Scene myMethod=this.myMethod>\n            </Router>\n        )\n    }\n</MyLogicSmartComponent>\n\n\n```\nThe problem with this structure is I can NOT use:\njavascript\nconst scene = Actions.Create(\n    <Scene />\n)\n<Router scene={scene}>\nBecause I need to pass this.myMethod down to Scene from MyLogicSmartComponent.\nAfter playing Example,\nI noticed that these two components Router and Example only render at the beginning no matter I jump back and forth between different Scene.\n1. Is that normal?\n2. if so, does it makes sense or hurt if add the following in Router.js to prevent several Actions.Create() ?\n``` diff\n--- Router.js.orig\n+++ Router.js\n@@ -24,10 +24,14 @@\n         this.state = {};\n         this._renderNavigation = this._renderNavigation.bind(this);\n         this._handleProps = this._handleProps.bind(this);\n+        this.scenesMap = null;\n     }\n _handleProps(props){\n\n\nconst scenesMap = props.scenes || Actions.create(props.children);\nconst scenesMap = this.scenesMap || props.scenes || Actions.create(props.children);\nif (!this.scenesMap) {\nthis.scenesMap = scenesMap;\n}\n         const {children, style, scenes, reducer, createReducer, ...parentProps} = props;\n         scenesMap.rootProps = parentProps;\n         const initialState = getInitialState(scenesMap);\n```\n\nor any idea for how to wrap redux and SmartComponent with Router?\nThanks for the great job anyway!\n. same issue using 3.1.5\n. oh sorry, I mean, I didn't got a red screen but same issue which is \"key xxx is already defined.\"\n. @PeterKow\nI think it is caused by wrap <Router> into <Provider> and maybe it is redux triggers <Router> to re-render.\nyou can try Example and print some log in render() and onComponentDidMount, you will find that <Router> only render at the initial stage.\nis your <Router> render several times also?\nI'm still trying to find a better way to wrap <Provider>\n. by my suffering experiences, there is no way to prevent Router re-render if you wrap it under a Provider and listen updates from redux, it is a nature by design.\nthe point how to prevent this, is: Router should render once and just once\nit means:\nIf you didn't connect to redux at all, it works fine since your Router would not be triggered by any of updates from redux.\nAlso, you can connect() Router to redux to get a dispatch() method props but you can NOT listen to another props.\nThus, the architecture would be:\n``` jsx\nimport {\n    Router,\n    Scene,\n    Actions,\n} from 'react-native-router-flux';\n// --- child component can connect and listen to props they want.\nconst myConnectedMainConponent = connect()(myMainConponent);\nconst myConnectedLoginConponent = connect()(myLoginConponent);\n// --- Create it via Actions.create(), or it will be re-created for each render of your Router\nconst scenes = Actions.create(\n    \n\n\n\n);\n// --- Create connected Router if you want dispatch() method.\n// --- Or you can just use vanilla Router\nconst myConnectedRouter = connect()(Router);\n// --- your exported main router\nexport default class MyExportedRouter extends React.Component {\n    constructor(props) {\n        super(props);\n    };\nrender() {\n    return (\n        <Provider store={store}>\n            <myConnectedRouter scenes={scenes} />\n        </Provider>\n    );\n}\n\n}\n```\np.s. I typed above codes directly here, be aware the syntax error :)\nPoint Taken:\n1. Router should render once and just once ( connect to get dispatch method only or not connect at all )\n2. pre create scenes via Actions.create() and pass it into Router\n3. move your app main logic into one of the children of Router \n. put it in doc #1098\n. @jsdario thanks! glad it helps! :smile: \n. @lucasff \nI didn't upgrade my libraries for a while neither react-native-router-flux nor redux, so I'm not sure if it changes.\nI think the most important thing you might want to solve first is to make sure your router render once and only once\nyou can console.log(\"XXX\") in your router's render() function, then try to do anything you need to do until \"XXX\" only shows once.\nthere is so many factors may cause router to re-render, and the most difficult part is to redesign your app's architecture.. I don't know neither.\nBut I've noticed slow transitions even crashed. ( Use genymotion 2.6.0 )\nWhen I encounter this problem, one of my CPU core became 100%. \nIf lucky, it continued after few seconds, otherwise it crashed.\nmaybe it related to RN new API.\nsteps:\nclick and back items from top to bottom,\nit occurs usually after leave error prompt scene and click tap item.\n. @lynndylanhurley \ntruly thanks to you.\nlots of folks are confused and keep asking about this until you.\n you established a shortcut for all of us can focus on how to improve this repo instead keep away from trying to figure out what is the proper way to integrate with redux.\nbest regards.\n. I think it is README in current repo\nhttps://github.com/aksonov/react-native-router-flux/#reduxflux\n. Try\nhttps://github.com/aksonov/react-native-router-flux/blob/master/Example/Example.js#L105\nand see if it works\n. It's true.\nAll reducers will be invoked if it filters the same action name.\nIt's better than nothing in my opinion.\nCommon approach is to give the action name as less conflict as possible, like ROUTER_FLUX_ACTION_JUMP and so on\n. And it seems we can combine store if you follow the instruction here:\nhttps://github.com/aksonov/react-native-router-flux/blob/master/docs/REDUX_FLUX.md\n. Yeah, both works. Either change it or as optional config.\nSince the module is flux agnostic, it is worthy to prefix action name with full module name which makes it clearer actions and avoid potential conflict no matter what flux implementation you are using.\nhow about REACT_NATIVE_ROUTER_FLUX_JUMP ?\nIt won't hurt as long as we can import action name as constant.\n. I can do that. wait a minute\n. got it.\n. @aksonov is these what you mean?\nIf it is ok, I will add commits to change documents accrodingly.\n. - do you mean something like this?\njavascript\nif (this.props.dispatch) this.props.dispatch({...props, type: sceneTypeMapAction[props.type]});\n- so I don't need to pass modified type to onNavigate, right?\n. @cridenour \nthanks for review!\nand yes, I will add Example and related documents these days.\nbasically, this would not do anything about that as @aksonov suggested not to modified original props to avoid issues which described in #894 \nin short, in Router.js, if and only if  this.dispatch() exist in props, this PR will translate actions to unique action something like from 'reset' to 'REACT_NATIVE_ROUTER_FLUX_RESET'.\nso it should not break existing apps.\nif you found any chances that it would potentially breaks something, please let me know. \nonly for app which is using redux-like store needs to use action constants imported from ActionConst.js. like:\n``` javascript\nimport { ActionConst } from 'react-native-router-flux'; // <===== CHANGE\nconst initialState = {\n  scene: {},\n};\nexport default function reducer(state = initialState, action = {}) {\n  switch (action.type) {\n    // focus action is dispatched when a new screen comes into focus\n    case ActionConst.FOCUS_ACTION: // <===== CHANGE\n      return {\n        ...state,\n        scene: action.scene,\n      };\n// ...other actions\n\ndefault:\n  return state;\n\n}\n}\n```\nand you can also use constants for consistency if you want. ( it's better IMO )\nex:\n``` javascript\nActions.ROUTE_NAME({type: ActionConst.RESET_ACTION});\nor \n\n``\n. by the way, you reminded me that, do you think we should strip all_ACTION` suffix in the constant name?\nsince we can import constants from everywhere now, may be it would be more clearer if we use:\n``` javascript\n// in ActionConst.js\nexport const JUMP = 'REACT_NATIVE_ROUTER_FLUX_JUMP';\nexport const PUSH = 'REACT_NATIVE_ROUTER_FLUX_PUSH';\nexport const REPLACE = 'REACT_NATIVE_ROUTER_FLUX_REPLACE';\nexport const BACK = 'REACT_NATIVE_ROUTER_FLUX_BACK';\nexport const BACK_ACTION = 'REACT_NATIVE_ROUTER_FLUX_BACK_ACTION';\nexport const POP_TO = 'REACT_NATIVE_ROUTER_FLUX_POP_TO';\nexport const REFRESH = 'REACT_NATIVE_ROUTER_FLUX_REFRESH';\nexport const RESET = 'REACT_NATIVE_ROUTER_FLUX_RESET';\nexport const FOCUS = 'REACT_NATIVE_ROUTER_FLUX_FOCUS';\n=== and ===\n// in Actions.js\nimport { ActionConst } from 'react-native-router-flux';\nexport const sceneTypeMapAction = {\n  jump: ActionConst.JUMP,\n  push: ActionConst.PUSH,\n  replace: ActionConst.REPLACE,\n  back: ActionConst.BACK,\n  BackAction: ActionConst.BACK_ACTION,\n  popTo: ActionConst.POP_TO,\n  refresh: ActionConst.REFRESH,\n  reset: ActionConst.RESET,\n  focus: ActionConst.FOCUS,\n};\n```\nthen we can do this:\n``` javascript\nimport { ActionConst } from 'react-native-router-flux';\nActions.ROUTE_NAME({type: ActionConst.RESET});\nor \n\n```\nthoughts?\n. yeah, cool\nLet's do it\n. change description:\n- all actions now defined in a separate file: ActionConst.js.\n- create an mapping object called: ActionMap in Actions.js,\n  it maps deprecated string literal actions to constant one.\nrouter:\n- will dispatch constant actions if we have dispatch method in props\n- will pass unmodified type into onNavigate.\nreducer:\n- always use ActionConst and ActionMap to determine whether an action type matched or not\nbreaking\nit's really hard to not break ANY existing app.\n  especially for those who:\n    1. stores routing status outside from RNRF\n    2. use custom reducer instead of RNRF default reducer\nshould be always use action constant from RNRF.\nit will NOT break if user uses RNRF default reducer.\n. I want to make sure before I change document.\n- we want to use constant actions across all module\n- in Actions.js, it will pass constant action to it's callback;\n- in Router.js current logic when defining callback is:\n  only use constant action if we have dispatch method.\n  but did not modify type which passed in onNavigate()\n- Reducer will receive actions from onNavigate, and uses ActionMap to handle both constant and string literal actions to compare with ActionConst\nsince reducer uses ActionConst as well, so the only problem would be for those who are using custom reducer, should change action name in their code corresponds with ActionConst. ( no matter we pass original string literal action type or constant action type to onNavigate )\nin that case, can I say:\nwhen defining callback function in Router.js,\nwe should modified all actions type to ActionConst if the action name is belonged to reservedKeys ?\n. @aksonov I already rebase my PR corresponds to my description.\nBut I an not sure if it is OK.\nplease see my comments above.\n. looks at code is much clearer.\nmy whole point is:\nsince\nActions.js and Reducer.js always use action constant\nand\nfor those who using custom reducer or redux store, must change their code to use constant as well.\nshould we change code in Router.js from:\njavascript\n    Actions.callback = props => {\n      if (this.props.dispatch) {\n        if (props.type && ActionMap[props.type]) {\n          this.props.dispatch({ ...props, type: ActionMap[props.type] });\n        } else {\n          this.props.dispatch(props);\n        }\n      }\n      return onNavigate(props);\n    };\nto\n``` javascript\n    Actions.callback = props => {\n      if (props.type && ActionMap[props.type]) {\n        props.type = ActionMap[props.type];\n      }\n      if (this.props.dispatch) {\n          this.props.dispatch(props);\n      }\n      return onNavigate(props);\n    };\n```\n. alright, I have changed to:\n- if action type is existed in our reservedKeys, we will change it to constant value.\n- we can handle both original string literal actions and action consts.  \nhave tested with Example.\nwill change Example and Document accordingly soon.\n. done!\nlet me know if there are something need to be adjust\n. I had tested in the following structure:\n``` jsx\n// --- this got infinite loop\n\n\n\n\n```\nand\n``` jsx\n// --- this would not switch even selector returns 'home'\n\n\n\n\n```\n. I still got infinite loop in the first case with new commits.\nIt feels like a little weird to me, just want to make sure, is the following descriptions correct or not:\nat the first case:\njsx\n// --- this got infinite loop\n<Scene key=\"switch\" initial={true} component={Switch} tabs={true} unmountScenes={true} selector={switchSelector}>\n    <Scene key=\"login\" initial={true}/>\n    <Scene key=\"home\"/>\n</Scene>\n- navState's children is login and home, and initial index is '0' since login is the initial component\n- that's assume in selector, we return 'home', then the selected navigationState is home and it's index mostly is 0 (or the index of it's initial child.)\nso the reason I got infinite loop is because this children: [navState.children[navigationState.index]],\nwe always set navState to it's index-0 child which is login, but the selector return 'home' which is the index-1 child of navState and has it's own child indexes cache whcih is 0.\nand no matter how, eventually, we've change the navState to selected child's navigationState\n( I'm not sure, is this the right flow that we replace navState with child's state?)\n. I have tried several ways, but with no luck so far.\nIf someone want to reproduce, here is test case:\n``` jsx\n// --- this got infinite loop if switch selector returns 'home'\n\n\n\n\n\n\n\n\n\n\n\n```\n. I got the same with the following example, still figuring it out.\nIs this.setState({ navigationState }); always supposed to be the selected navigationState ( selected[0] )?\n``` jsx\n// --- this got infinite loop if switch selector returns 'home'\n\n\n\n\n\n\n\n\n\n\n\n``\n. Hmm...I guess it's a redux triggered rendering issue.\nI can't use older version of Switch before and never dig into it.\nHowever, I noticed that there is a newer version of Switch recently, and it works.\n. yeah, it works!\n. except double render issue, turns out that it can NOT be used withtype=\"replace\"` in the test case above.\nthanks guys\n. just side note:\nnot sure why, the render() times of my component are 2~3 times than the Switch version in 3.32.0\nbut no problems so far.\n. @sarovin\nOops, I can try it 12 hours later.\nIt looks fine btw.\nThanks for your work!!\n. I've tested and it did improved a bit. :+1: \nI'm thinking if it is better we have two Switch implementations, and import it via different use case?\nand we can make the most suitable Switch as the default one.\n. about modal, I don't have nested tabs but FYI:\nI can use both Actions.myModal()/Actions.myAnotherScene()\nin both tab1 scene / tab2 scene in this Switch implementation\n<Scene key=\"modal\" component={Modal} >\n    <Scene key=\"root\">\n        <Scene key=\"myModal\">\n        <Scene key=\"myAnotherScene\">\n        <Scene key=\"switch\" initial={true} component={Switch} tabs={true} unmountScenes={true} selector={switchSelector}>\n            <Scene key=\"login\" initial={true} />\n            <Scene key=\"home\" tabs={true} >\n                <Scene key=\"tab1\" initial={true} />\n                <Scene key=\"tab2\" />\n            </Scene>\n        </Scene>\n    </Scene>\n</Scene>\n. How about pass sceneKey as a prop into TabBar,  and execute it in component Will/Did Mount or will receiveProps if that props exist?\nlike:\n``` jsx\n<TabBar\n  onNavigate={props.onNavigate}\n  navigationState={navigationState}\n  fireAction={ () => Actions[selectedKey]() }\n/>\n\n```\n. it's just a bunch of constants represent real values of various actions to avoid future changes.\nyou can treat it like redux action.\nThis can use directly for example Actions.pop() will dispatch correspond action written in the source code, or, you can set those constants in scene type,  when you do Actions.main(), it will dispatch action according to your scene type or the default one.\nBut not every ActionConst can be used the same way ( use as an action or whether it can be set in scene type or not), that's why I said it's just a bunch of constants to mask the actual values. \n. about your question, it really depends on your route architecture, for the simplest way I can tell would be: Actions.main(); if you don't bother route stacks.\nset type='ActionConst.REPLACE' in Main Scene, will also jump to it but with route stack be replaced. \n. #1072 #829\n. #376 \n. FYI\nIf we are going to change license to MIT, isn't it better to use ISC\n(functionalities equivalent to MIT) License?\nIt also a default license on npm init\nNo matter how, we still can't avoid to use tons of modules distributed in\nMIT license though, so I'm fine with MIT.\nsee:\nhttps://en.m.wikipedia.org/wiki/ISC_license\nWhy you should not use the MIT license:\nhttp://forum.freegamedev.net/viewtopic.php?f=7&t=4328\n. yep, I'm fine with both since they are all short and sweet.\nthank you for fire this issue\n. this fixed #1870 in my case.. @sarovin \nthanks, I've tested your PR, and it fix the problem.. I guess if (props.unmountScenes) should wrapped in line 44\nif selected scene != current scene ( scene changed), than we should unmount scene\n. or\nuse\nlet navigationState = index !== navState.index ? { ...navState, index } : navState;\nto restore navigationState  back to navState\n. it will do this.setState() in the end using variable navigationState ( a child of navState )\nso if the second time you are entering this.updateState(), navState would never match scene key returned by selector.\nthe first time you entered this.updateState():  navState.key is 'switch', and it's children are ['login', 'home']\nthe second time you entered this.updateState():  navState.key is 'home', and it's children are ['tab1', 'tab2']\nmy question: is navState supposed to be the child one eventually ? \n. navigationState is from selected[0]\nso navigationState is a child of navState\n. if we have props.unmountScenes = true, is it necessary to fire Actions[selectedKey]() twice? ( one with { unmountScenes: true } and the other doesn't )\n. ",
    "adamski": "Think I found some good advice on #56 \nStill would be good to have clearer example I think.\n. Are you guys on the latest version? I had a similar problem and updating to latest (2.3.12) sorted it all out for me.\nI also found some of the example not showing nav buttons, however, as @aksonov pointed out to me you can see it working by:\nPress Tab link and then Tab #1, then next screen for tab1_1\n. What I'm trying to achieve is to have a back button when I click on an item in the ListView. I'm now trying it without nested Routers...\n. Fixed up updating to latest version.... doh \n. ",
    "tigershen23": "Did you get anywhere @rturk \n. ",
    "alfian0": "Hi, @aksonov I got same problem with @JeremDsgn,\nscene A to scene B, from scene B back to scene A again and Back to scene B again not triggered componentWillUnmount\n\n. Up, I got same problem ...is that just happen on 3.38.0 ?. ",
    "skatpgusskat": "+1\n. ",
    "wkirby": "@aksonov The issue is not with the example itself, it's that I believe the underlying code isn't working as intended. In neither the example nor my own use can I actually get navbar buttons to display \u2014 back or otherwise \u2014 using any of the exposed functions.\n. @jeduan Yes. So far, nothing I've been able to do with this library adds navigation buttons to the navbar. It sounds like @RealOrangeOne  is having the same problem.\nI haven't had time to debug this, but for now we've decided to switch away from this library in favor of the native navbar.\n. ",
    "jeduan": "@wkirby Did you try adding onRight to the props in <Route>? \n. ",
    "RealOrangeOne": "I am having a problem like this aswell. I can only seem to get the buttons to render using renderRightButton if they are on a <Route... /> that is a direct child of the main <Router .../> component. Any ideas?\n. ",
    "kristianmandrup": "I see the NavBar.js in the Examples but can't find it used anywhere. How do I hook it up. I thought this could be done by setting header={NavBar} in the main Router?\nAnyone has a working example I can look at?\nThanks :)\n. Do you have a copy of your project so I can have a look :) I'm having trouble figuring out how to show a Navbar in the header at all. The /Example doesn't really show how this works...\n. Thanks, I resolved it now. Wasn't aware from docs that the navbar would autodisplay given the routing stack by default. I thought I actively had to hook it up somehow.\nThe NavBar file in the Example tricked me into thinking I had to use it. Not used I think?\n. Awesome! I can already see the docs are getting much better :) Cheers!\n. ",
    "jopecko": "I'm going to look into creating my own tab bar component. will reopen if I need to.\n. ",
    "ajoshdee": "hide the router navbar\n. In native iOS you can just push a view controller but the view won't be covered up by the nav bar\n. I have a tab scene as my initial scene. but the navbar is not visible when the container scene's navbar is not set to hidden=true. But when I set it to false, the navbar will appear. but when i press a button on my launch page, the pushed page doesn't show the navbar.\n. <Scene key=\"main\">\n<Scene key=\"tab\" component={TabBar} tabs={true} initial={true}>\n<Scene key=\"board\" component={ExamBoard} title=\"Exam Board\" initial={true} icon={TabIcon}/>\n<Scene key=\"profile\" component={ProfileView} title=\"Profile\" icon={TabIcon}/>\n<Scene key=\"setting\" component={TabView} title=\"Settings\"  icon={TabIcon}/>\n<Scene key=\"more\" component={TabView} title=\"More\"  icon={TabIcon}/>\n</Scene>\n<Scene key=\"administrative\" component={Admin_Exam} title=\"Assessment\" leftTitle=\" \"/>\n<Scene key=\"communications\" component={Communications_Exam} title=\"Assessment\" leftTitle=\" \"/>\n<Scene key=\"creativity\" component={Creativity_Exam} title=\"Assessment\" leftTitle=\" \" />\n<Scene key=\"human_relations\" component={HR_Exam} title=\"Assessment\" leftTitle=\" \"/>\n<Scene key=\"leadership\" component={Leadership_Exam} title=\"Assessment\" leftTitle=\" \"/>\n<Scene key=\"problem_solving\" component={Problem_Solving_Exam} title=\"Assessment\" leftTitle=\" \"/>\n<Scene key=\"emotional_quotient\" component={EQ_Exam} title=\"EQ Exam\" leftTitle=\" \"/>\n<Scene key=\"result\" component={ResultView} title=\"Human Interaction Skills\" leftTitle=\" \"/>\n</Scene>\n. To put it simply, it acts just like a switch, if i turn the container scene off I can see the navbar of the tab scenes, but can't see the navbar of the other scenes . If I turn it on, I can't see the navbar of the tab scenes, but can see the navbar of the other scenes.\n. oh I solved it, I just needed to set my tab scene's nav bar to false. \n. Can I have a sample implementation?\n. How can create a switch case for the action.type? \n. I just need a listener that will return the state of the navigator. Cause i needed to do additional methods using a switch case depending on the state of the navigator. \n. I want to handle callbacks instead of just receiving 'ACTION:', { key: 'result', type: 'push' } in the console\n. How do you pass reducer? I did Reducer({this.State.getInitialState(), scene})\nBut i always get cannot evaluate undefined object error\n. can you just show me an example of how to implement it in my view?\n. Oh sorry, I used State.getInitialState()\n. Thank you very much for the example\n. Hi, how can I update to this ver. using the npm. I tried reinstalling it but the changes were not made.\n. Your README is too abstract to follow. And it's not in the sample code either.\n. Can you at least tell me how to use it without the redux?\n. Like where does the selector props gets its props? I don't know where to pass the data.\n. \nHow do i pass props.userInfo? \n. I just want the normal back button.\n. Hi what did you use instead of the static renderNavigationBar?\n. I'm getting Native Module cannot be null on RN0.28. Help needed.\n. Hi when i set unmountscenes to true, my app goes to the first scene before going to the second scene on the switch scene. this doesn't happen with the unmountscene prop and immediately goes to its specific scene\n. It has something to do with the order which the scenes are placed,\n. ",
    "vtambourine": "@ajoshdee, yes, I can figure out some workaround, but I think more solid API might be more suitable for my and similar situation.\n. ",
    "codebreach": "+1\n. ",
    "RWOverdijk": "@aksonov I tried applying this, it doesn't work. I used both leftButtonTextStyle and leftButtonStyle (with {{color:'white'}}), the arrow is still some sort of blue.\n\nAny direction in which I can look for a solution? Or do you perhaps already know what I'm, doing wrong? :)\nI'm on version ^3.2.3\n. Already did, and already got merged, too. :) I should've commented that here, my bad.\nThanks for the help!\n. @aksonov Will do.\n. \ud83d\udc4d  I've been patient for long enough now. Which is annoying if you could actually help, but it then doesn't get merged. . @aksonov I got that :p I'm not new here, see how it says contributor? Haha.\nThat's a good idea. At least until it can be merged back / they create a board of more diverse members to allow for a better flow of progress.. @Froelund Fair enough. See: https://github.com/aksonov/react-native-router-flux/pull/420\n. ",
    "julesmoretti": "@aksonov - Would love to know how to implement this also. I am working on a dark themed UI and the transitions from scene to scene fades to a white background which is not desirable.\nI have tried the following on the Router component but with no success on the transitions:\ngetSceneStyle={getSceneStyle}\nI am testing it out on Android and have:\n\"react\": \"15.4.2\",\n    \"react-native\": \"^0.41.2\",\n    \"react-native-router-flux\": \"^3.37.0\",\nThank you.. Wrapping the  component in a view that has flex:1 and a background color did the trick for me...\nAdditionally to not get the animated out theme to white out, I had to add getSceneStyle={getSceneStyle} to the router and then:\nconst getSceneStyle = () => {\n    const style = {\n      backgroundColor: '#2f3132',\n    };\n    return style;\n  };\nIdeally though the View wrapper should be redundant and the background color should be controllable through the router style.. Hey @wvicioso let me see if I can help, Is there a reason why the width and height are set to null?\nI will try to replicate on my end what you have going shortly. @wvicioso - ok cool I did not know that but try this:\nInstead of:\n<Router style={getScenceStyle}>\ntry\n<Router getSceneStyle={getScenceStyle}>\n;)\nI personally used:\n```\n styles.defaultBG}>\nconst styles = StyleSheet.create({\n  defaultBG: {\n    backgroundColor: 'transparent',\n  },\n});\n```\nLet me know if that worked out :)\n. @aksonov - Is this repo no longer maintained? I am having the same issues and have tried some suggestions from this feed with no success.. Same here for react-navigation https://reactnavigation.org/. ",
    "tomexa": "You did not provide any solutions, I'm also building a dark themed app and this clashes a lot.\nI'm currently using V3 from the Ignite + Native base boilerplate, but let's assume I can upgrade to V4 without breaking too much stuff, how would I set a dark/black background in V4 during screen transitions?. Thanks! I'll try that and tell you the outcome.. Damn! It works if call NavigatorActions.tabbar() !\nI thought it was kind of an 'abstract' scene that couldn't be navigated to.... ",
    "ksarna": "I have exactly the same issue.\n. ",
    "plrthink": "Same issue here. After searching through the code, I find line (https://github.com/aksonov/react-native-router-flux/blob/8b9bd122974785dc8e37ac1d4c9925b3bb2dd9e3/ExRouter.js#L102), so if we don't provide onLeft and leftTitle this two props to route component,  it wouldn't apply the custom styles to the left button text. I don't think this make sense since we only want alter some styles.\n. Just open a PR to try to solve this issue.\n. @kristianmandrup Just like what described in docs, provide hideNavBar prop to Route or Router component will toggle the navbar.\n. @kristianmandrup I think it's used for customizing the navbar, something like you want a button on the right.\n. @aksonov Is it fixed already?\n. @aksonov Awesome!\n. ",
    "alduro": "ChatContainer code:\n``import React, { Component, PropTypes } from 'react-native';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport * as chatActions from '../actions/actions';\nimport * as authActions from '../actions/authActions';\nimport Chat from '../components/Chat';\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    actions: bindActionCreators({\n      ...authActions,\n      ...chatActions\n    }, dispatch)\n  }\n}\nconst mapStateToProps = (state, props) => {\n  return {\n    chats: state.chats.data,\n    user: state.user || {}\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Chat)\n```\nHowever, it works ok for ChatMessagesContainer component. Looks like nested Route in tabbar Router is missing title. Or it is a matter of styling.\n. It works on Example but all tabs Route are using the same component TabView and without Redux ( dispatch, connect ).\n. ",
    "ssomnoremac": "I had to use @greatwitenorth 's advice to get this working for me. I think people will keep having this problem though\n. this works but the previous scene is visible underneath. Should be an easy fix to animate it further off screen. Is there an api for that?\n. what about within the navBar? Shouldn't we have a refresh=true on the Scene. Otherwise I have to override the onPress for the backButton to a function that calls the above two calls.\n. @cridenour I believe it goes beyond the scope of this question to have the ability to re-render a scene on route change. In my case I want to go back from a registration sequence and have the state of the registration reset in my Redux store by firing an action on re-render instead of hooking the reset into the back button. Is there a better way to accomplish this?\n. thanks, didn't know about onBack as I use the detailedExample as my docs. \n. Just a note on this error, I got it when I didn't define and include an Icon for tabs. Might be worth investigating a clearer error message.\nto reproduce:\n<Scene key=\"books\" tabs={true}>  \n    <Scene key='catalog' component={Catalog} title=\"Catalog\" />\n        ...\nto fix:\n<Scene key='catalog' component={Catalog} title=\"Catalog\" icon={TabIcon}/>\n. @redbaron76 , how are you using this in RNRouterFlux? I substituted the navbar in the package you mentioned but it's still not appearing. @charpeni, why isn't this a bug? The drawer doesn't work with NarBar. I don't see a NavBar. This issue should really be: \"Adding a drawer makes NavBar disappear\". Is it that drawers only work with tabs?\n. Just create a component for each tab scene and then set it on the scene using tab={mytabcomponent} look at the detailed example.\n. That's the solution. Thanks for solving this!\n. I just have all scenes with navbars set to false in the jsx and those without set to true. Sucks but that's how i have it and I've never had a problem. Don't know about passing as props. I wouldn't though. If you want to dynamically choose to show why not just clone the Scene and give it a different key, one with nav and one without?\n. Yeah, this is not ideal. Could work better if I was able to set a new background for other scenes because this background will always render behind any future scene transitions. So far with nested scenes I haven't been able to do this. At least for the first transitions between scenes you'll catch a glimpse of the background image as it is essentially the background image now of the entire app if you wrap the app in it this way.. @activelogic , thanks! That's the solution. A bit of a pain to wrap each component in something like this:\nif(this.props.routes.scene.sceneKey === \"CreateProfile_2\"){\n   return <SomeComponent/>\n}else{\n   return <View style={{backgroundColor: \"transparent\", flex:1}}/>\n}\nbut I agree, this definitely is the way to a tackle this problem. This also helps when using a drawer as the scene before the drawer scene will show through on the open/close animation. \n. well, I agree, being able to change the animation on the transition would be best but rendering blank screens when not active is something that would be easier to add to the API in my opinion. . \n    \n\n\n\nIn WorkerHome navigating like so `Actions.WorkerShiftDetails({foo:\"Bar\"})\nMind you I am using both Drawer and Tabs and all of this is a subScene so perhaps one of those 3 things could be to blame? . Hey @sarovin, I set 'tabs' to false and it works now, but why would sibling scenes not get the props. It actually used to back when I was using RN@35, RNRF@3.36. Don't know what changed.. @indatawetrust , I don't really understand your implementation. One of these days I'll look at how this router actually works, but for now I just override the onPress function of the tabScene to do a refresh and that solves it for me. I only have 3 tabs so it's adding too much bloat.\n<Scene key=\"tab1\" onPress={() => Actions.tab1({type: ActionConst.REFRESH})} />\n\nAnother gem from the bizarrely separate \"bonus docs\" Mind you this is a hack. Other Action calls into this tab will fail as well so I'm still looking for some other way.. ok, @indatawetrust I tried your solution, but my scene object only gets the children on second render so I modified it probably because I reset into it initially. I'm not seeing the advantage of using  \"ACTIVE\". In my case, I'm doing this in Reducer.js to conditionally render only a scene that is in focus:\nreturn { ...state, index: ind, name: props.name };\n\nand then on this on the render:\nlet sceneName = this.props.scene.children\n        ?  this.props.scene.children[0].name\n        :  this.props.scene.name\n\n\nif(sceneName === \"tab1\") { return {...} }   else { return null }\n\n. migrating from v3, I assume there is no longer back, there is only left?\nIf so, then yeah this isn't working for me.\n<Scene ... leftButtonImage={backImage}/>\nVersion\nreact-native-router-flux\": \"^4.0.0-beta.21. @geniuscd , yeah I got the same. Did you get around the error?. @jordenchang55 that got me around the error, thanks. My App.js was not configured to the example; however, using the exact same route-reducer and the following, none of the router actions (FOCUS, PUSH, etc) are seen using master RNRF:\n```\nconst navigator = Actions.create(\n    <Stack ...\n)\nconst reducers = require('./reducers').default;\nconst ReduxReducer = connect((state) => ({ state: state.route }))(Router);\nconst middleware = [thunk];\nconst store = compose(\n    applyMiddleware(...middleware)\n)(createStore)(reducers);\n...\n                \n\n\n\n\n``. hmm, strange, that didn't fix it for me. I'm seeing all actions except the router. It must mean I have something else setup differently. I'm going to have a closer look. I won't give up on this! Thanks for your help @jordenchang55 . @mcabs3, isn'tcurrentScene` a property not a function. I have a work-around so I'm going to close with it. Don't have time to solve this properly. Maybe I'll come back to it if people want. \nHere's what I did. I'm still popping back to my tab scene, but you can trick lightbox into staying visible as you pop by doing this:\n```\n// display the modal\nActions.loadingModal()\n// pop as much as needed to get back to tab scene (popTo doesn't work in this case for me)\nActions.pop()\nActions.pop()\n// load the modal back immediately\nActions.loadingModal()      \n// close modal by navigating to new tab\nsetTimeout(() =>{\n     Actions.tab2()          \n}, 3000)\n```. ",
    "adbl": "@lrettig I'm also interested in this \ud83d\udc4d\n. Hit this aswell, react-native-experimental-navigation has a dependency on react-addons-pure-render-mixin ^15.1.0 which currently resolves to version 15.3.0 which depends on react with same version. Should react-native-experimental-navigation dependency version get locked to 15.1.0 ?\nInterim solution do npm install react-addons-pure-render-mixin@15.1.0 after install react-native-router-flux.\n. ",
    "thessem": "Turns out this is a problem with the TabBar class... however is it possible to render something beneath the NavBar instead of on top of it?\n. Thanks for your response, I'll try to be a little more specific\nI want to be able to have a list of tabs in a view which is accessed by a list of tabs. For example:\njavascript\n<Route footer={TabBar} tabBarStyle={tabStyles.tabBarStyle}>\n    <Route name=\"Tab_A\" schema=\"tab\" title=\"Tab A\">\n        <Route header={TopTabBar} name='Tab_A Content' title='TabAContent'>\n            <Router>\n                <Route name='Tab_A1' schema=\"tab\" component={TabAContent}/>\n                <Route name='Tab_A2' schema=\"tab\" component={TabAContent}/>\n            </Router>\n        <Route/>\n    </Route>\n    <Route name=\"Tab_B\" schema=\"tab\" component={TabBContent}/>\n</Router>\nSo that I can select between Tab_A/Tab_B using the built in TabBar component, but when I am in Tab_A I have a second TabBar at the top and can select between TabA1 and TabA2 within it. Right now as written if I use footer for the second one it messes with the one there already, and header prints above the navigation bar (I assume, I've never been able to get a header and footer TabBar at the same time but I suspect that's me being dumb). I'd love an additional prop called top or something so I can easily throw my second tab bar at the top of the content using the built in infrastructure in this package.\nAs it is, I've implemented this by manually putting in a TabBar in TabAContent with the appropriate calls to switch routes, but I'd love to be able to specify this in the actual route itself.\nI'd love if there was some way of placing the header stuff below the navbar, I'm just starting out with react native so it's likely I've missed something obvious here.\n. I am getting this too, eventually the app freezes completely and dies. I am having trouble working out what's causing it (I upgraded RNRF 3 with RN 0.22 so it's hard to tell)\n@Jickelsen if you figure out a way around this please let me know!\n. @delta-9 I am experiencing exactly the form focus issue too. Weird\n. I decided to wait until I could put together a few other changes in the same style as this one, if you think this PR is acceptable by itself I'll happily reopen it though\n. If you're on Android the 0.22 release of React Native's experimental navigator seems to not work very well (Unusably slow transitions, eventually crashes). This gets a little better if you pull in the git version.\nI think the relevant issue on RN is facebook/react-native#6474 or similar\n. ",
    "crockpotveggies": "@aksonov can you elaborate a little more? What if there are two errors in a row (for instance, we start having API troubles and multiple requests fail?)\nThanks!\n. Thanks for the update. Anything I can do to help with the release?\n. Yep just saw the breaking changes. Let me put together a fork of our mobile repo later tonight and I'll start testing it out :)\n. Not an author but chiming in. I think this is clearly described in the documentation, and is very easy to use if you're using Redux.\nWhen using Redux, you can subscribe to the event in your reducer (via README):\n```\nConnect a  to Redux\nIf you need to inform Redux of the navigation status (i.e. when you pop a route) just override the  component included in react-native-router-flux with a connected one:\nimport ReactNativeRouter, { Actions, Router } from 'react-native-router-flux'\nconst Router = connect()(ReactNativeRouter.Router) \nNow when you use a  it will be connected to the store and will trigger the following actions:\nActions.BEFORE_ROUTE\nActions.AFTER_ROUTE\nActions.AFTER_POP\nActions.BEFORE_POP\nActions.AFTER_DISMISS\nActions.BEFORE_DISMISS\n```\nAnd if you want to simply make a traditional subscribe (via README):\nAlso all route actions can be hooked by adding handlers for Actions.onPush, Actions.onReplace, Actions.onPop in your store(s).\n. Having a very similar issue here. The awesome thing about this router in 2.x was that it made so much sense where we easily were able to hook into each route change. Now, the integration doesn't seem to work as expected. Actions.BEFORE_ROUTE allowed us to easily hook into our reducers.\n. +1\n. ",
    "jandom": "It seems that rm -rf node_modules and reinstall helps some people. Since you haven't provided instructions to reproduce, I can't try to replicate what you've done \u2013\u00a0also googling for 'DependencyGraph: Naming collision detected' gives a number of helpful pointers\n. ",
    "rlau1115": "Thanks for letting me know. Do you have an ETA on when you're releasing 3.0? \nAlso open to hear the community's thoughts. \n. Actually, Actions.pop() does do the intended job of unmounting a component, but it doesn't happen immediately. I was able to test this by adding a timeout.\n```\n/ This works /\nexport function handleLeaveGroup(groupInfoJson) {\n  return function(dispatch) {\n    // Remove two group views from stack\n    RouterActions.pop();\n    RouterActions.pop();\n// // route to inbox scene\nRouterActions.inbox();\n\n// Dispatch action to reducer\nsetTimeout(() => {\n  dispatch(leaveGroup(groupInfoJson));  \n}, 500)\n\n}\n}\n```\n```\n/ This doesn't work /\nexport function handleLeaveGroup(groupInfoJson) {\n  return function(dispatch) {\n    // Remove two group views from stack\n    RouterActions.pop();\n    RouterActions.pop();\n// // route to inbox scene\nRouterActions.inbox();\n\n// Dispatch action to reducer\ndispatch(leaveGroup(groupInfoJson));\n\n}\n}\n```\nThe timeout isn't ideal, so is there anyway to force an immediate unmount?\n. Will look into it, thanks for the quick response :)\n. Thanks for all of your hard work on this guys. Really appreciate it! Pretty swamped on my end with deadlines but will try to contribute when my time frees up. \n. ",
    "vysakh0": "@aksonov Unfortunately running into a similar error :disappointed:\nI installed the latest package 3.2.6, and getting this error (\"react\": \"0.14.8\",   \"react-native\": 0.22.2\")\n```\n$ mocha  --require test/setup.js  --compilers js:babel-core/register  test/components/Home.spec.js  \n/home/vysakh/react-projects/app/node_modules/react-native-router-flux/src/NavBar.js:29\nNavigationAnimatedView=_reactNative.NavigationExperimental.AnimatedView;var \n                                                          ^\nTypeError: Cannot read property 'AnimatedView' of undefined\n    at Object. (NavBar.js:29:19)\n    at Module._compile (module.js:434:26)\n    at loader (/home/vysakh/react-projects/app/node_modules/babel-core/node_modules/babel-register/lib/node.js:126:5)\n    at Object.require.extensions.(anonymous function) [as .js] (/home/vysakh/react-projects/app/node_modules/babel-core/node_modules/babel-register/li\nb/node.js:136:7)\n    at Module.load (module.js:355:32)\n    at Function.Module._load (module.js:310:12)\n    at Module.require (module.js:365:17)\n    at require (module.js:384:17)\n    at Object. (TabBar.js:5:1)\n    at Module._compile (module.js:434:26)\n    at loader (/home/vysakh/react-projects/app/node_modules/babel-core/node_modules/babel-register/lib/node.js:126:5)\n    at Object.require.extensions.(anonymous function) [as .js] (/home/vysakh/react-projects/app/node_modules/babel-core/node_modules/babel-register/li\n```\nThis happens when I have this line, \njs\nimport { Actions } from 'react-native-router-flux';\nPlease help :+1: \n. ",
    "flavordaaave": "I'm still having kind of this issue with version 3.35.0. When swiping to go back from a scene that HAS a navbar to a scene that HAS NO navbar, the navbar for the scene that should NOT have one is visible and only appears as soon as the transition is completed.\nI'd expect that even during the swipe transition, the navbar is NOT visible for the previous scene. Is there a solution to achieve this?\n. ",
    "sashafklein": "@aksonov -- I'm getting this with 3.1.3 -- which as of 3 days ago is an official release. Should I also downgrade to a 2.0 version? Or am I potentially doing something wrong?\n. Already had the key=\"root\" set, and deleting node_modules didn't do anything for me, unfortunately. Looks like this:\n```\n    return (\n      \n\n\n      <Scene key=\"message\" component={ Message } title=\"Message\" />\n      <Scene key=\"idCard\" component={ IdCard } title=\"IdCard\" />\n    </Scene>\n  </Router>\n);\n\n```\nThe root page is just a hello world example at the moment.\n. ",
    "sreejithr": "Solved by installing v2.3.1.\n. ",
    "beebase": "So is it possible to render multiple buttons and where in the docs can I find an example?\n. ",
    "marijarahman": "This is not solved and I'm using v3.39.2. ",
    "kayazinc": "I'm using v3.38.0, also having the same issue when showing on tablet.. ",
    "eneskaya": "I was thinking about that too. Here's my idea (I'm new to react-native and to native programming, btw.)\nHow about setting up an initial route, let's call it \"launch\", which calls a log in view. On this view, there is a check if the token is in the storage. If true, the user is redirected to the \"home\" route, or whatever. On the log in view you could also, e.g., show a loading spinner before rendering the email and password form, etc. \nI'm not sure if this is the right way to do it, would be glad to hear other/better ideas. \n. @ltjsjyyy Actually, when setting the duration like @erikandersson described, the screens render perfectly, even on fast tap. No matter if set to 400 or 0. I didn't test it on Android yet, but on iOS it works as expected.. Posting the above for convenience copy & paste \ud83d\ude04 \nwatchman watch-del-all && rm -rf node_modules && npm install && npm uninstall react-native-router-flux && npm install --save react-native-router-flux@3.38.0 && rm -fr $TMPDIR/react-* && npm cache clean && npm start -- --reset-cache. ",
    "PeterKow": "This might work if your app requires login in for all your components, a problem is when you have routes which can be accessed without login in.\nGeneric solution is when:\n- you have onEntry method which you can add to your route\n- be able to create nested routes and root will check auth for you\n. Works after updating to 3.1.5\n@zxcpoiu I tried without Provider and that wasn't a problem\nThanks!\n. ",
    "peterlazar1993": "Experiencing the same error, using redux \nRoute defenitions:\n```\nconst Router = connect()(ReactNativeRouter.Router);\nexport default class Root extends Component {\n  render() {\n    return (\n      \n    <Schema name=\"default\"\n      sceneConfig={Navigator.SceneConfigs.FloatFromRight}\n    />\n    <Schema name=\"boot\"\n      sceneConfig={Navigator.SceneConfigs.FadeAndroid}\n      type=\"replace\"\n    />\n\n    <Route component={SessionValidate}\n      initial\n      name=\"session\"\n      schema=\"boot\"\n    />\n    <Route component={Auth}\n      name=\"auth\"\n      schema=\"boot\"\n    />\n    <Route component={LeaderBoard}\n      name=\"leaderboard\"\n      schema=\"default\"\n    />\n  </Router>\n);\n\n}\n}\n```\nComponent:\n```\nclass SessionValidate extends Component {\n  constructor(props) {\n    super(props);\n  }\ncomponentDidMount() {\n    SplashScreen.hide();\n    Actions.auth();\n  }\nrender() {\n    return (\n      \nTouch Me\n\n    );\n  }\n}\n```\n\n. @aksonov Facing the same issue, not sure what I'm doing wrong \nconst scenes = Actions.create(\n  <Scene key=\"root\" hideNavBar>\n    <Scene key=\"auth\" component={Auth} />\n    <Scene key=\"leaderboard\" component={LeaderBoard} />\n  </Scene>\nIt works if I change the scene type to replace though.\n. @KBLNY  It is using NavigationExperimental which is available from 0.22 only I guess\n. ",
    "LightningK0ala": "Thanks for letting me know.\n. ",
    "hakkikonu": "How can I change navigationBarStyle dynamically? I want to use different background colors for every <Scene>\nCurrently my config is like this;\n<Router tintColor='white' navigationBarStyle={{ backgroundColor: '#81b71a' }} >\n...\n </Router>. ",
    "antonsivogrivov": "I have android 4.4 genymotion emulator and after switching to 3.0 version this router my app crushes and works very slow. Any Ideas?\n.  I have just try Example app in this repository. The same behaviour.\n. Tell me please, what is better (v3 or v4) to use for production with redux?. @kajm same here. @aksonov, I have the same issue here with rnrf 4.0.0-beta.27 and rn 0.52\n. Any updates about this?. +1. And what about iOS?. and how to set border when navTransparent is true? Now I dont's see border even with\nborderBottomWidth: 1,\nborderBottomColor: 'rgba(255, 255, 255, 0.3)',. I have the same problem!. +1. @Mimicx, you mean drawer scene <Drawer gesturesEnabled={false}/>?. ",
    "agrass": "I'm still having this issue of  Key is already defined. Any idea how to solve it?  before upgrading react-native to 0.22 it was ok, but now is crashing due low memory \n. I already fixed the problem key is already defined creating the scenes outside the render method. The other problem of low memory as I see in other issues it's something related with NavigationExperimental \n. I already fixed changed that scene with type 'reset' and it worked. I don't know if it's the best solution. I tried to change the direction to 'vertical' but it didn't worked\n. Hi @aksonov , sorry I'm using with RN 0.24 and looks pretty stable, Navegation bugs are already solved.  Anyway I already solved this with another 'type' prop in Scene, but when I change direction from 'horizontal' to 'vertical' nothing changed.\n. ",
    "Rmannn": "After updating, i got \nUnknown plugin \"transform-class-properties\" specified in \"***/node_modules/react-native-router-flux/.babelrc\"\n. Thanks it's working now. \n. This is what i did. but,\nThe navigation stack should allow us to push same scene (different instance) to the stack.\nThe solution works only if we plan to navigate throught those scenes only once.\nif I do \nprofile (currentUser) => View => user_profile (OtherUser1) => View => user_profile (OtherUser2) \nThis will fail with the same error when we push the second profile with different user.\nI would like to be able to loop navigate through my scenes.\n. Thank you, this is working now.\nI was trying to do it over a PR.\nSomething we should do is when we Jump to the tabs (root), do not animate each children.\nIf the stack is really huge, we will have an animation like the end of a solitaire game. Cards are moving until Jump is done. Maybe we should animate only the current child. I suppose this is linked to the support of custom schema.\nif I do \nuser_profile (User) => user_profile (OtherUser1) => View => user_profile (OtherUser2) => JUMP to user_profile (User) \nAll children OtherUser1, OtherUser2 will be animated until User.\n. Thanks, I will try to propose some PR if I modify the renderer.\n. For those who are searching how to override the TabView default behavior, \nYou have to override the TabView Component and override the NavigationCardStack _setTiming Default function.\nBecause when you have scenes inside tabs, we use a NavigationCardStack instead of the default NavigationAnimatedView. Changing the duration for cards inside tabs has no effect. (using duration={1}) on tab scenes.\n. You must use 3.0.11 (Latest) \n\"react\": \"^0.14.7\",\n\"react-native\": \"0.22.0-rc4\",\n\"react-native-router-flux\": \"^3.0.11\",\n. Update to the latest version using npm and packages versions\n. ",
    "chenxiaohu": "I think need dynamic scene to face this type problem, but I can't find any code example..\nUse case\uff1a\nUser_1 page open User_2, there are many different users(1,2,3....999...) , and in navigator stack more than one \n. ",
    "erikdung": "I got same error, how to fix it?\n. ",
    "shishircc": "I have same issue and I have the latest (^3.0.11) package form npm. The sample code does not work. \n. ",
    "subtirelumihail": "You should keep this open until the react native gets upgraded :)\n. ",
    "5amfung": "Yes.  I ran npm install in the example directory as well as the project directory.\n. @aksonov How do I pass null to panHandlers?\nPer https://github.com/ericvicenti/navigation-rfc/issues/49#issuecomment-200945651 the gesture can be disabled by setting panHandlers to null.  When I have a scene that pushed from bottom to top using direction='vertical', I don't want users to swipe down to pop the scene.\n<NavigationCard panHandlers={null}/>\n. ",
    "ylquankai": "It's fine! thank you~\n. if  react-native-tabs can show badge count, it will be greet!\n. I found \nchildrenState.component.renderNavigationBar \nis undefine\nin NavBar.js\n. class Login extends React.Component {\n    renderNavigationBar(props){\n      return \n    }\nrender(){\n    return (\n        <View style={[styles.container, this.props.style]}>\n            <Text>Login page: {this.props.data}</Text>\n            <Button onPress={Actions.loginModal}>Login 2</Button>\n            <Button onPress={Actions.pop}>Back</Button>\n        </View>\n    );\n}\n}\nHere is my demo code, it's not work for renderNavigationBar.\n. I see~ thank you very much.\n. You can try to use this.props.scene.navigationState.data to get props.\n. ",
    "stolinski": "Did not work, or at least backButtonStyle={{color:'white'}} didn't work.\n. Weird. I would have thought it to be an SVG that could be styled rather\nthan an actual blue image. Bummer.\nSCOTT TOLINSKI\nwww.scotttolinski.com\nOn Fri, Mar 18, 2016 at 8:22 AM, Pavlo Aksonov notifications@github.com\nwrote:\n\nClosed #336\nhttps://github.com/aksonov/react-native-router-flux/issues/336.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly or view it on GitHub\nhttps://github.com/aksonov/react-native-router-flux/issues/336#event-594945791\n. Will do.\n\nSCOTT TOLINSKI\nwww.scotttolinski.com\nOn Fri, Mar 18, 2016 at 10:23 AM, Pavlo Aksonov notifications@github.com\nwrote:\n\nIt is what used now in React Native NavigationHeader component. Feel free\nto submit PR with better solution\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly or view it on GitHub\nhttps://github.com/aksonov/react-native-router-flux/issues/336#issuecomment-198434483\n. \n",
    "pbestz": "I'm really need it!\n. Actions.refresh({status:\"open\"});\n. ",
    "matt-d-rat": "@aksonov I am also getting the console.error: \"selector should be defined\" error:\nscenes.js\n``` js\nimport React from 'react';\nimport { Actions, Scene, Switch } from 'react-native-router-flux';\nimport { connect } from 'react-redux';\nimport Login from './containers/Login';\nimport Home from './containers/Home';\nexport default scenes = Actions.create(\n     ({user:state.user}) )(Switch)}\n           tabs={true}\n           selector={props => props.user.accessToken ? 'home' : 'login'}>\n        \n\n\n);\n```\nmain.js\n``` js\nimport React, { Component } from 'react-native';\nimport { Router } from 'react-native-router-flux';\nimport { Provider } from 'react-redux';\nimport configureStore from './store/configureStore';\nimport scenes from './scenes';\nconst store = configureStore({});\nexport default class Main extends Component {\n    render() {\n        return (\n            \n\n\n        );\n    }\n}\n```\nMy project has the following dependencies at these versions:\njson\n{\n    \"react-native\": \"0.22.0-rc\",\n    \"react-native-flip-view\": \"1.0.4\",\n    \"react-native-google-signin\": \"0.4.3\",\n    \"react-native-router-flux\": \"3.0.15\",\n    \"react-native-vector-icons\": \"1.3.2\",\n    \"redux\": \"3.3.1\",\n    \"react-redux\": \"4.4.1\",\n    \"redux-logger\": \"2.6.1\",\n    \"redux-thunk\": \"2.0.1\"\n  }\n. @Fatxx I ended up abandoning using this library and going back to react-native-router-redux as I could get that to work with relatively little effort.\n@shakdoesgithub the same way in any redux project, via connect with a function which maps the state to props. But I don't use this router anymore as I couldn't get it to work. Opted to go back to  react-native-router-redux as it is more redux centric.\n. I was experiencing the same issue, setting the rightButtonIconStyle was the solution that fixed it for me.. ",
    "falconx": "I too has this issue but resolved it by updating my react-native-router-flux dependency from 3.0.9 to ^3.2.3.\n. ",
    "Fatxx": "@matt-d-rat can you please share how did you manage to check for token before render the app?\nWhen I try to dispatch an action which alter state, I'm get in an error ExceptionsManager.js:76 Warning: setState(...): Can only update a mounted or mounting component. This usually means you called setState() on an unmounted component. This is a no-op. Please check the code for the undefined component. in NavigationExperimental/NavigationCard.js from React Native.\nI can't manage to get component={connect(state => ({token: state.auth.token}))(Switch)}\n      selector={props => props.token ? 'jam' : 'login'}> this state update before it render, so it will always render the login page.\nAnyone facing this issue?\n. Couldn't get this working with Switch, I had to create condition which shows the scenes or a loading indicator view depending in the state of the authentication request.\n```\n\\ index.js\nimport Root from './root';\nimport { isAuthenticated } from './auth/auth.actions';\nclass Tagjam extends Component {\n  render() {\n      return (\n        \n      );\n  }\n}\nstore.dispatch(isAuthenticated()); // Dispatch action when application bootstraps which checks for token\n```\nThen I render the actual application when above function ends.\n```\nclass Root extends Component {\n  constructor(props) {\n    super(props);\n  }\nrender() {\n      let container = null;\n      if (!this.props.isRequesting) {\n          container = ;\n      }\n      return (\n        \n\n            {container}\n          \n\n      );\n  }\n}\nconst mapStateToProps = (state) => {\n    return {\n      isRequesting: state.auth.isRequesting\n    };\n};\n```\nIf I use switch there it will just throw the error which I pointed out in the comment above, somehow NavigationCard is setting state but isn't rendered yet. Instead I check for email prop and set the boolean value for initial property.\n<Scene key='login' initial={!this.props.email} component={Login} title='Login'/>\n<Scene key='register' component={Register} title='Register'/>\n<Scene key='jam' initial={!!this.props.email} component={Jam}/>\n. ",
    "tehong": "It looks like 3.0 just out.  Not sure if there is any new way to do pass my app state to the TabBar.js props and down to the TabIcon class prpos this way.  It doesn't appear so.\n. ",
    "walidvb": "In my case, the navBar is rendered at the bottom of the page, rather than the top. tried removing all styles from the top/wrapping view of my component, without luck.\nAlso, I was trying to pass down my redux states, but it seems it isn't part of the props passed to the static method :/\n. ",
    "robinschaaf": "The only way I could get the navbar to render at the top was to absolute position it like this, and set a height:\nposition: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0\n. ",
    "Tarkzeng": "I have this problem too. Is there any api to know if the component is already not exist in this window?\n. ",
    "xushuwei202": "after test,  I think 300ms is ok\n. Sorry, it's my bad.  after update,  i forget to npm install package\n. ",
    "naji247": "Using: \njs\nconst scenes = Actions.create(\n    <Scene key=\"root\" >\n      <Scene key=\"RankScreen\" button=\"leader\" navBar={TitleView} initial={true}  component={RankScreen} title=\"DogShow\"/>\n      <Scene key=\"LeaderScreen\" hideNavBar={true} component={LeaderScreen} title=\"LeaderScreen\"/>\n    </Scene>\n);\nI still get:\n\nWhen I want:\n\n. ",
    "icarusud": "I think I have a same question like this.\nI want to pass props to custom NavBar like\n<Scene key='menu' component='menu' navBar={<Toolbar istrue={true}/> }/>\nBut It doesn't work. Is there any recommendations?\n. ",
    "Ansalibrahim": "@aksonov any plans to support this feature in future? I think this will really boosts the usages of this library.. @alexmngn How did you solved your problem? I think sharing it here may help someone visits here in future.. @alexmngn I think, it is a bit complicated for anyone to handle whole navigations using the Navigator component in a project. So at least for me, it can't be considered as a better alternative.\n@aksonov Do you have any idea to implement this behavior in the library? . @alexmngn For me, I have almost completed the project and my client needs a change now. Throwing the whole lib out of the project will not feasible for my client. It will be good if I could find some way using this library. So I am behind some workarounds. Thanks for your valuable replies :-)\n. ",
    "afshinm": "I fixed the issue by adding a condition to my origin scene, so I conditionally render a view instead of changing the router to, say control panel, after login. . ",
    "jarredwitt": "I was running into the same issue as well. Did some debugging and was able to get it working by changing up NavBar.js. Here is my complete NavBar.js. \nhttps://gist.github.com/jarredwitt/16555de089db516ea07c\nI'm still cleaning it up, but if it works for you as well I'll get a PR ready and submit.\n. Sounds good. I'll get it cleaned up and do some more testing then submit.\n. It's still not working for me in 3.1.3. When I make the NavBar.js changes to what I posted earlier it begins working correctly. I'll do some more debugging.\n. ",
    "linyize": "renderTitle also don't work for me.  version 3.1.3\n. ",
    "alanzanattadev": "I've tried with the same component and renderTo attribut of your example, copied pasted, but it doesn't work on 3.1.5, nothing is displayed\n. Am I the only one who has a problem with renderRightButton ? It worked with 0.22 but doesn't work anymore. Nothing is displayed, or maybe it's under the navbar layer.\n. ",
    "delta-9": "I'm experiencing the same behaviour, Also when I fill a form the form refuse to loose focus, then the state freeze and the app crash. Tested with 3.1 and tcomb-form-native (also with react-native-stateless-form)\n. Sorry, I see that issue here so I reported here, I'll report it back to the RN repository\n. ",
    "sylvainbaronnet": "@delta-9 Exactly same issue\n. Sorry.\nI think we should report it to the official RN repo since :\n\nNavigationExperimental has recently been moved from here to the open source RN\n. I also see this warning after upgrading from 0.22 to 0.23 : \n\n\nbut i'm not sure it's related to this bug\n. A quick fix : add position: absolute; top:0; left:0; to the custom NavBar\nEdit : and a width too\n. try to set a width \n. Sure a proper fix is required.\nInstead of a position: absolute to all your scene you can just set a marginTop\n. No animation with 0.24.0-rc3 too\nEdit: \nI tried with a simple router and still have no animation : \n```\n\n\n  <Scene key=\"launch\" component={Launch} initial={true}/>\n\n  <Scene key=\"login\" component={Login} />\n</Scene>\n\n\n```\n. #486 Fix it \n. Works for me with RN 0.24.0-rc3 (iOS and Android)\n. see #491 \n. It also fix animation !\n. I upgraded RNRF to 3.22.22 and now the custom NavBar doesn't show up at all.\nWith RN 0.24.1\n. I tried previous versions of RNRF and the last version where the custom NavBar show up is the 3.22.8\nWith the 3.22.11 there's the bug. There's a change between these versions that introduce the bug.\n(3.22.9 & 3.22.10 were not published to npm so I can't try them)\nEDIT : with aksonov/react-native-router-flux#3.24 it works\n. There's still the problem with type=\"replace\" but it's a RN bug\n. Sorry I deleted my message because I realized imports were already updated in master.\n. I tried to merge 3.24 into master but there's too many conflict in src/NavBar.js and src/DefaultRenderer.js and I don't know the project enough to resolve them.\n. yes esling formatting but not only. If you want to take a look : \nhttps://gist.github.com/sylvainbaronnet/3dcd34832466abe7be012d9f67d824d5\nhttps://gist.github.com/sylvainbaronnet/a2671d94e9f548aa169473e871d476b0\n. same issue with react-native v0.24.0-rc4\n. Yes looks like the scene is loaded behind the current one\n. I guess the problem is in the reducer, here : https://github.com/aksonov/react-native-router-flux/blob/master/src/Reducer.js#L77 \nEdit : Looks fine, I don't think the problem is there\n. I made some test and I can confirm that the scene is loaded correctly but displayed under the current one\n. I think it's a problem with RN component <NavigationCard/> that use this style by default :\nbottom: 0,\n    left: 0,\n    position: 'absolute',\n    right: 0,\n    top: 0,\nif I remove it my replace scene appear but then next one don't. I guess RN really need to support z-index now...\n. I guess this module can require RN 0.24 (when it's released) for next releases ? It's better than not supporting latest RN version...\n. 0.24 and 0.25 are mostly fine with the 3.24 branch but not stable\n. I use a custom NavBar and a Drawer, I was using type=\"replace\" but there's a bug currently so I only use type=\"push\" with panHandlers={null} sometimes\nI don't use Tabs but I know there's a critical bug discussed here : #489\n. I did say it was not stable... although it works fine for me as temporary solution\n. This is a known bug (from RN) and 0.25 is not officially supported, See #525 \n. Good guess, it fixes the error, thanks !\nNow my custom navbar doesn't appear anymore and the side menu is not accessible \n. It's ok, I had just to remove hideNavBar={true}\n. I found that I can access them with Actions.currentParams. Yes it now works as expected, thanks a lot !. parient -> parent\n. ",
    "DThink": "my problem\nhi, I do not know if because of me or because of a malfunction of the plugin. i have this problems\n1)in the router bar if i see a title, this is to bottom of bar and the bar is too big respect you example.\n\n2) if i go to next page in the router bar i dont see the title and if i push the back button the app crashes\n\ni install the last react native version in windows 10, i tested the app in the genymotion emulator with android 6.0, 5.1 and 4.4 but in same case the problems is the sames.\nhow do I fix this? \n. how do I contact their team?\n. ",
    "rulatir": "Weirdly enough, this doesn't seem to even be caused by navigating. Basically any component updating inside a scene results in memory being leaked and exponentially so, except when the scene is the very root scene - the problem does not manifest in that case.\n. ",
    "Akimyou": "Very poor performance in adroid 4.0\uff0c\ud83d\ude2d\n. ",
    "caledhwa": "Yep. This is an issue related to React Native 0.22.2, this should be fixed in a few days on React Native 0.24. For more details log into Gitter and look at history \nSent from the 2-6 (Leavenworth, WA 98826)\n\nOn Apr 6, 2016, at 18:12, MIKUScallion notifications@github.com wrote:\nVery poor performance in adroid 4.0\uff0c\ud83d\ude2d\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly or view it on GitHub\n. Try react-native 0.24.0-rc2\n\nSent from the 2-6 (Leavenworth, WA 98826)\n\nOn Apr 6, 2016, at 18:12, MIKUScallion notifications@github.com wrote:\nVery poor performance in adroid 4.0\uff0c\ud83d\ude2d\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly or view it on GitHub\n. @albo1337 so I finally got my project upgraded to react-native@0.24.0-rc2 - It seems to work fine with the latest router. I'm not using some of the more complex features of the router, however. All of my routing is working fine under that version. I had some weirdness that showed up (views without backgroundColors were acting as if I'd set shadow properties) but I believe that was due to my usage of react-native-linear-gradient - totally unrelated to the router. The routing is working great on Android and there are no performance issues at all.\n\nNOTE: Currently the ONLY version that works with the router is 0.24.0-rc2. There was a bug fixed in that release that was a blocker for the router (regarding images in node_modules packages). That fix is confirmed. \nI'm not seeing the issue that is #474, nor am I seeing embedded Scene issues. My usage is very simple. Those things will need to be fixed I'm sure.\n. I confirm that this doesn't work with 0.23.0-rc4, but I also agree with @aksonov that supporting RC's seems like too far ahead. Also, @levinqdl has somewhat of a point too. Basically, the navigator stuff seems broken for ANDROID in 0.22. I confirmed that 0.23 did fix the performance issues with navigator and works well with react-native-router-flux. However, once you upgrade to the RC, a bunch of other things break including not being able to run at all in iOS. So, hopefully, all of this gets resolved with a 0.23 final release. We shall see. \n. I\u2019m seeing animations work correctly with 0.24.0-rc2\nAlso, Android is not working correctly with 0.22 - as a known issue. :)\nOn April 8, 2016 at 7:24:39 AM, Elyx0 (notifications@github.com) wrote:\nRNRF stable currently is with RN 0.22\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly or view it on GitHub\n. Better yet Pavlo? Use the Gitter\u2026. a pretty good group of folks trying to figure stuff out there. Learned a ton already. Thanks for a great project!\nOn April 12, 2016 at 7:27:53 AM, Pavlo Aksonov (notifications@github.com) wrote:\nPlease ask questions about usage within stackoverflow, not here, with tag react-native-router-flux, react-native\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly or view it on GitHub\n. @lynndylanhurley - This is seriously awesome! Thanks so much for doing this. +1 +1 +1 +1 - MERGE IT @aksonov !\n. So, with the description on the README and the changes that have been made here to help out with REDUX, can we close this issue @aksonov? Just thought it might reduce noise.\nThe only thing I'd love to see is some changes to the TYPE names of the actions. I implemented @lynndylanhurley 's approach to hook up Redux and it works fabulously. It'd be great to have the action types be called RNRF_PUSH, RNRF_FOCUS, etc. so I could much easier differentiate the actions amongst my redux actions. If you're interested I could dig in and do a PR or something. Anyhow, I love this library and want to see it continue to have success! Go team!\n. +1 looks like a good solution!!!\n. How does \u201cthis.drawer\u201d get bound in DrawerScreen??? I think you need in your DrawerScreen component:\nstatic contextTypes = { drawer: PropTypes.object.isRequired };\nThen you can add to your render():\u00a0\nconst { drawer } = this.context;\nAnd finally you can call (in the render somewhere): this.drawer.closeDrawer()\nI am assuming you have a \u201ccloseDrawer\u201d on Drawer layout\u2026\u00a0\nAlso, instead of opening issues for help, please join and visit us on Gitter instead:\u00a0https://gitter.im/aksonov/react-native-router-flux?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge\nOn April 18, 2016 at 2:14:45 AM, shivangbtech (notifications@github.com) wrote:\nI am unable to use openDrawer() in DrawerScreen.js. Here is my code, How can I pass reference of drawer to other component file.\n` render: function() {\n    var navigationView = (\n      \n\nHello there!\n\n```\n       \n this.drawer.closeDrawer()}>\n            Close drawer\n\n\n);\nreturn (\n   this.setState({drawerSlideOutput: JSON.stringify(e.nativeEvent)})}\n    onDrawerStateChanged={(e) => this.setState({drawerStateChangedOutput: JSON.stringify(e)})}\n    drawerWidth={200}\n    ref={(drawer) => { return this.drawer = drawer  }}\n    keyboardDismissMode=\"on-drag\"\n    renderNavigationView={() => navigationView}>\n<View style={styles.container}>\n<DrawerScreen ></DrawerScreen>\n</View>\n\n\n);\n```\n}\n});`\nDrawerScreen.js\n'use strict';\nvar React = require('react-native');\nvar {\n  AppRegistry,\n  StyleSheet,\n  Text,\n  View,\n  Dimensions,\n  Image,\n  TouchableHighlight,\n  TextInput,\n} = React;\nvar deviceWidth = Dimensions.get('window').width;\nvar DrawerScreen = React.createClass({\nrender: function() {\n    return (\n```\n    \n  <Text style={styles.welcome}>Content!</Text>\n\n  <TouchableHighlight onPress={() => this.drawer.openDrawer()}>\n    <Text>Open drawer</Text>\n  </TouchableHighlight>\n  <TextInput style={styles.inputField} />\n</View>\n\n);\n```\n},\n});\nvar styles = StyleSheet.create({\n   container: {\n      alignItems: 'center',\n      justifyContent: 'center',\n      flex: 1,\n          flexDirection: 'column',\n    },\n    inputField: {\n      backgroundColor: '#F2F2F2',\n      height: 40,\n    },\n});\nmodule.exports = DrawerScreen;\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly or view it on GitHub\n. In my opinion, the issues with ExperimentalNavigation will eventually get resolved. While some can't wait for that, I could. So, I'm hoping that we can get it all smoothed out again by 0.25-0.26. Since they are working on 2 week releases, I'm hoping that we're really only looking at a month at most of waiting for issues to be resolved. I like RNRF and I'd love to see it move forward with RN. While ExperimentalNavigation was a mess of bugs, I'd guess that once it gets smoothed out, it won't happen like that again for awhile. Anyhow, my two bits!\n. ",
    "albo1337": "@caledhwa have you any example app tested with rn-24 and router flux from akosonov? Would be great if you can share \n. Damn. Do you now any other Navigation-router which I can use without lose in performance in android or ios @codyhazelwood ?\n. Allright, so Navigation is useless on react native android? \n. I get no errors. The scene is just not opening. Maybe I do an example:\n`\n```\n                \n\n\n\n\n\n\n\n            <Scene key=\"secondTabbar\" Component={TabBar} tabs={true} default=\"homeTab\">\n                <Scene key=\"homeTab\" title=\"Home\" icon={TabIcon}>\n                    <Scene key=\"home\" component={Home} title=\"Home\"/>\n                </Scene>\n            </Scene>\n        </Scene>`\n\n```\nI want to open in my scene \"login\" the scene \"home\". \n. Done\n. I found it by my own. I had to call the Scene in an other way as I thought. \nExample.js\n```\n...\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n...\n```\nLogin.js\n...\nActions.tabbarTwo();\n...\n. Hey @anthonywebb \nyou have to do: Actions.refresh({rightTitle: \"foo\", onRight: this._save});\n. My problem here is, that I don't know how to add source to rightButtonimage. When I'm doing for example this: rightButtonImage: \"../../img/ic_shopping_cart.png\"\nAn error appears: Warning: Failed propType: invalid prop 'source' supplied to 'Image'. Check the render method of 'NavBar'.\nWhat am I doing wrong here?\nBest regards,\nalbo1337\n. Got it.\nI had to do: rightButtonImage: require(\"../../img/ic_shopping_cart.png\")\n. Is that even possible?\nkind regards\nalbo1337\n. I don't have problems with my navigation bar. I want to change props of my root scene while being on a child scene.\nKind regards and thank you for your response\n. I'm actually trying to change the props of my parent view while being on a child view.\nMy problem is, that if I go to a child view from a parent view, my parent view is still running. If I could set it onPause state (or something like that) while being on child view my problem would get solved...\n. http://stackoverflow.com/questions/37180919/change-props-of-parent-view-in-react-native\nHere I have opened a question where I explain it with more details.\nThanks for your respond @aksonov \n. ",
    "codyhazelwood": "@albo1337 I've tested with React-Native 0.23 and 0.24-rc2 and router-flux.  The transition speed is much faster, but it's unusable because of the layout issues such as #474.\n. +1 I also just spent about an hour on this and had to revert back to 0.22.\n. This also affects v0.24-rc2\n. Sorry for the late reply.  @aacotroneo Thanks a lot!  That fixes the problem.\n. I see this same issue.  It also seems to affect type=\"reset\".  Also here: #474 \n. Add hideNavBar=\"true\" to your root scene, and them remove it everywhere else.  You'll still get a navbar on your main scene which should contain the drawer.\n. This is much easier to navigate!  Thanks!\n. Worked around it for now by doing:\n<Router leftButtonIconStyle={{height: 24, resizeMode: 'contain'}}>\n    ...\n</Router>\nBut I'd still say it's a bug since it changed between versions of RNRF.\n. This also seems to be causing an issue with the drawer icon.  I was using renderBackButton to provide a custom back button with react-native-vector-icons:\nrenderBackButton(nav) { nav.navigationState.index ? <BackButton /> : null; }\nIn previous versions of RNRF this would only show the back button when appropriate, and it would otherwise show the drawer.  Currently it doesn't show the drawer icon.\n. ",
    "rgovindji": "I managed to get it to work by doing adding the \"viewer\" property manually to the NewsFeed scene.\nrender() {\n    //Manually add viewer property to NewsFeed scene\n    scenes.NewsFeed.viewer = this.props.viewer;\n    return (\n       <Router scenes={scenes} props={this.props}/>\n    );\n  }\nIs this the proper way to do this? \nI also have an issue now with the NewsFeed scrolling performance is bad. It is a ListView and when I scroll it will lose a lot of frames. This didn't happen when I was rendering the NewsFeed as a standalone component.\n. Okay so it should work without the additional line? I must have done something wrong. Thanks\n. Okay I have re-opened the ticket and renamed it. I like the idea that would be very helpful!\n. Thanks! I will give it a shot now :)\n. @aksonov How do I get switching between tabs to work? The initial tab will load correctly but if I switch to another tab and switch back I get an error saying \"viewer\" is undefined.\n. I'm still using 3.22 so I don't know if there is an issue in the latest version but in order to pass all props to all scenes I did this.\n\n. Update Cleaning and rebuilding fixed the issue\n@aksonov I am getting a syntax error saying unexpected character react-native-router-flux/src/back_chevron.png\n\n. Thank you this fix worked :)\n. @r0b1n I would really appreciate this feature, since my app will over fetch data if I simply wrap the router in a Relay component. \n. @AlexDM0 I tried that solution but it doesn't work 100%. I have to click on the tab icon twice in order for the page to show. I'm not really good with reducers, do I need to kick off two actions? One for the parent tab and one for the child?\n. Gotcha, instead i just reset the child component when I navigated away to another page. Thanks for the help!\n. I ended up calling reset on the first child when I navigate away from the tab. It's a hack but I guess it worked.\n. @irisSchaffer I'm doing this  Actions.callback({ key: 'tabbar', type: 'reset'}); which resets all the child scenes. Just do the same on the root node for your tab bar.\n<Scene key=\"tabbar\" initial={true} tabs={true}>\n<Scene key=\"camera_tab\" initial={true} iconLabel=\"ios-camera\">\n                <Scene key=\"CameraPage\" type='reset' component={CameraPage} ref=\"camera\"  hideTabBar={false} icon={TabIcon}\n                       title=\"Camera\" hideNavBar={true}>\n                </Scene>\n<Scene key=\"EditPhoto\" component={EditPhoto} icon={TabIcon} hideNavBar={false}\n                       hideTabBar={true} onLeft={() => Actions.pop()}  leftTitle=\"Back\" title=\"Edit Photo\">\n                </Scene>\n</Scene>\n</Scene>\n. Have you tried doing what I suggested and then pushing the scene you want onto the stack?\nActions.callback({ key: 'tabbar', type: 'reset'}); \nActions.yourScene;\n. I am having trouble with the tab bar as well, maybe it's related to this. I want to display the tab bar for scenes that I have declared outside of the tab bar scene but have navigated to from a scene within a tabbar. Is that possible?\n. @joenoon thanks a lot that is exactly what I was looking for \ud83d\udc4d \n. Hmm I tried this on another laptop and I can't repro the issue there. The only difference is that I installed Xcode 8 and switched back to Xcode 7 on the laptop that is having the issue.\n. ",
    "brettpappas": "@aksonov I think you would have more people willing to contribute if you included a little commenting in your code. I looked at the Router sources and a few others (State, Reducer) and am hesitant to make improvements to it when I don't know what you expect the functions to do. Code comments also help when people don't find what they are looking for in the docs.\n. You can create your own Reducer to handle navigation state. Check out the detailed example for details.\n. @casoetan Thanks for the tip! This fixes the issue for me as well.\n. ",
    "fforres": "Awesome @aksonov  :+1: !\n. Thanks mate @sslash \n. ",
    "mvaivre": "I'm in the same situation than @sslash : I've a full screen map and I can't interact with it after having a Scene change. So it would be very nice to have a way to set panHandlers={null} for a scene!\n. @brien-crean: indeed panHandlers={null} disable the swiping back, but one of the component still continues to \"steal\" the pan action, as stated by @cridenour, so I can't interact with my map.\n. Same bug here, and position: absolute makes my NavBar component disappear.\n. Thx @sylvainbaronnet, it works. But it's obviously less than optimal as it forces us to display each scene in position: absolute with a top value to avoid hiding content under the navBar.\n. @aksonov Yep, I think I have this problem too: while switching (push) to a scene, the component associated to this scene is re-mounted, and I end up having several instance of the same component! If it's not a mistake on my side, then it's indeed critical. (3.24 branch with react-native 0.25.1). \n. Ok, seems that this warning is hidden for iOS in the example (cf. https://github.com/aksonov/react-native-router-flux/blob/5d8ce5daef89616099a53fbcff979813d80d6a96/Example/index.ios.js) and not for Android ;) It looks like it's not severe.\n. @aksonov Agreed. And 0.28 will add important fixes like this one: https://github.com/ericvicenti/navigation-rfc/issues/61\n. ",
    "wzywno": "I am using \n\"react\": \"^0.14.8\",\n    \"react-native\": \"^0.24.1\",\nand I set  panHandlers={null} in my Scene definition with map view.  And it seems to work, swiping back is no longer posssible.\n. little update,\npanHandlers={null}\nbreaks the navbar buttons. Instead I added fake implementation of panHandlers to scene with map.\nvar _panResponder = PanResponder.create({\n        onMoveShouldSetPanResponder: (e, gestureState) => {},\n    onMoveShouldSetPanResponderCapture: (e, gestureState) => {},\n    onStartShouldSetPanResponder: (e, gestureState) => {},\n    onStartShouldSetPanResponderCapture: (e, gestureState) => {},\n    onPanResponderReject: (e, gestureState) => {},\n    onPanResponderGrant: (e, gestureState) => {},\n    onPanResponderStart: (e, gestureState) => {},\n    onPanResponderEnd: (e, gestureState) => {},\n    onPanResponderRelease: (e, gestureState) => {},\n    onPanResponderMove: (e, gestureState) => {},\n    onPanResponderTerminate: (e, gestureState) => {},\n    onPanResponderTerminationRequest: (e, gestureState) => {},\n    onShouldBlockNativeResponder: (e, gestureState) => {},\n  });\nand \n<Scene key=\"MapView\" panHandlers={_panResponder.panHandlers} ...\n. @mnadbader  Hi, I have a problem with SideDrawer implementation for RN 0.26.2.\nCan you share how body of your class SideDrawer extends Component {} looks?\n. Hi,\n@sharq1 I made changes as you wrote in previous comment.\nNow I have other error, Did you have it also?\n\n. This is related with react-native-drawer \n```\nconst children = this.props.navigationState.children;\n...\n\n``\n. @jaimeagudo  I had the same error message. I changed my components declarations.\nI addeddefault`, so\nexport class MyButton extends Component {\nI changed to \nexport default class MyButton extends Component {\n. ",
    "dalmeria": "Thanks. \"panHandlers={null}\" works.\n. ",
    "willyyang": "\"react\": \"15.2.1\",\n\"react-native\": \"0.30.0\",\n\"react-native-router-flux\": \"^3.35.0\"\npanHandlers={null} does not work for me. Anyone else have this issue?\n. @sineer  I used hideNavBar= {true} instead\n. @hejiaji any luck with that issue? I'm facing the same problem! . ",
    "sineer": "Looks like it's broken for me too.\n    \"react\": \"15.3.2\",\n    \"react-native\": \"0.33.0\",\n    \"react-native-router-flux\": \"^3.35.0\",\nin the Example I can still swipe back from Login2 screen for instance even too panHandler=null in login2 scene.\n. @willyyang It's two different thing no? \npanHandler is for swiping gesture to pop the scene and NavBar is the header section with title.\nI tried with both NavBar true/false set for Login2 scene or it's parent and panHandler is set to null yet I can always swipe my way back a scene when direction=\"vertical\"... Anyway not a big deal for me right now just a heads up I guess. maybe I am doing something wrong too I'm very fresh using this native stuff and using it through clojurescript also...\n. ",
    "uc-asa": "Thanks, brien-crean.\n    <Scene key=\"modal\" component={Modal} panHandlers={null}/>\nIt works I'm using Route some thing like that.\n<Route panHandlers={null} key=\"home\" component={Home} />\n. Suppose I have created 7 scene and I need to print each component name then how to get value of each and current rendered component name\n. Thanks its provide current class name.\n. Suppose I open 10 scene and these are stored in the any stack array how can I manipulate that array\n. ",
    "wachunei": "What about temporary removing panHandlers depending on scene's component state? . @redvulps you should set them as null when defining your scenes.\njs\n<Scene key=\"myAction\" panHandlers={null} />. @cridenour  how should this be achieved then?\nscenes/index.js\n```js\nexport default Actions.create(\n  <Scene\n    key=\"root\"\n\n{Scene}\n{OtherScene}\n{ /* ... more Scenes */}\n\n,\n);\n```\n\nroot.js\njs\nexport default function Root() {\n  return (\n    <Provider store={store}>\n      <RouterWithRedux scenes={scenes} />\n    </Provider>\n  );\n}\nHow should I switch between Scene and OtherScene depending on the state?\nShould I make Root a Stateful Component and handle on component render, dispatching Actions.key?\nI'm very confused and this has been taking me a lot of time to figure it out correctly.\nThanks in advance.. @mbenjamin618  I've created an initial Scene (SplashScreenScene here) which has set an SplashScreen component that handles storage and rehydration and then redirects to corresponding scene.. I'm new to RN and I just found out how to set this for scenes and it is amazing. But my transitions back to previous scene are using default NavigationCardStack functions, which mess with the UX of my app.\n@aksonov please consider this bug to be important for an update \ud83d\ude4f\ud83c\udffc. @peritus I realized it is not using default behavior, but using animationStyle of previous scene in the stack.\nLet me explain: consider a base scene (A), on top of that I present a new scene (B) with custom animation style, as you explained, this scene will use that animation to push itself into the stack and when using panHandlers to animate a transition back, but when using pop() it will use default animation.\nLet's say I push another scene on top of that (C) with another custom animation: it will use such animation to push itself and transition back with gestures, but at the time of using Actions.pop it uses B's animation.\nThat's why I conclude B is using A's animation to pop, which happens to be the default one.\nI wish any collaborator or @aksonov would take a look into this \ud83d\ude15. @Jlexyc Would you elaborate, please? Should animationStyle be read from props.scene.navigationState instead? . This closes #1174 . ",
    "redvulps": "is there a way to disable the pan handlers when calling a specific action? Like:\nActions.myAction({ panHandlers: null })\nUsing version 3.37.0. ",
    "gigeos": "To keep platforms' gesture-based navigation, I do:\nconst activeBackGesture = (Platform.OS ==='android') ? null : undefined;\n...\n<Scene key=\"myAction\" panHandlers={activeBackGesture} />. Try with 3.38.0 and same for me\n\"react\": \"16.0.0-alpha.6\",\n \"react-native\": \"0.44.0\",\n \"react-native-code-push\": \"^2.0.3-beta\",\n \"react-native-router-flux\": \"^3.38.0\",\n. @iNeedCode I don't know but I confirm updating the library to 3.39.1 fix release Android. ",
    "jituumaria": "is there a way to disable the pan handlers on react-native-router-flux\n. > @abeltje1 how did you solved it? Can you please help me out? Here is my code.\n\n<Scene key=\"root\" panHandlers={null}>\n         <Scene key=\"splash\" component={SplashScreen} initial />\n         <Scene key=\"Screen1\" component={Screen1} />\n         <Scene key=\"Screen2\" component={Screen2} />\n     </Scene>\n   </Router>\nI dont user to go from Screen1 back to SplashScreen. How can i do that?\n\nyou can use \n. Use--   Actions.your screen kry();\nOn Wed, Mar 6, 2019, 8:16 PM FaizalMalik notifications@github.com wrote:\n\n@aksonov https://github.com/aksonov I am also facing the same issue\n\n\n\n\n\n                    </Drawer>\n                </Scene>\n            </RouterWithRedux>\n\nI have given type={ActionConst.RESET} in Home Scene, Still after login\nwhen i press back , It take User Back to Login screen.\nI have two screens - Login and Home. after successful login , do not take\nuser back to Login screen .\nCan some one help me ?\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/aksonov/react-native-router-flux/issues/2006#issuecomment-470127748,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AZy1DqPl2TWFHuf6om7ZVhQxXTY5N7Q4ks5vT9TcgaJpZM4OTmbX\n.\n. > ## Version\n react-native-router-flux v4.0.0 @beta.21\n react-native v0.54.3\nExpected behaviour\nDisable swipe back function\nActual behaviour\nI can't make it work\nSteps to reproduce\nI have tryied:\n\ntype=\"reset\", but it minimizes the app\npanHandlers={null}\ngesturesEnabled={false}\n\nbut nothing works for me. Can someone help me?\nCode:\n<Router>\n            <Stack key=\"root\">\n              <Scene key=\"Inicio\" component={Inicio} titleStyle={{color: '#FFF', fontSize: 18}} navigationBarStyle={{ backgroundColor: '#4c486f' }} title=\"All About My Pet\" type=\"reset\"/>\n              <Scene key=\"FormLogin\" component={FormLogin} titleStyle={{color: '#FFF', fontSize: 18}} navigationBarStyle={{ backgroundColor: '#4c486f' }} title=\"Fa\u00e7a seu Login\"/>\n              <Scene key=\"FormCadastro\" component={FormCadastro} titleStyle={{color: '#FFF', fontSize: 18}} title navigationBarStyle={{ backgroundColor: '#066c76' }} title=\"Cadastro\"/>\n            </Stack>\n</Router>\n\nusing \ntype=\"replace\". ",
    "Froelund": "I have the same issue:\n- react-native-router-flux: 3.1.3\n- react-native: 0.22.2\n. It looks like that the input for Router -> handleProps has changed.\nThe first element of props.children is an array. Previously I believe those were React components.\n. In my case it was because I still used Route instead of Scenes.\nhttps://github.com/aksonov/react-native-router-flux#important-breaking-changes-comparing-with-2x-version\n. @aksonov I just added support to toggle the drawer in the default Navbar. I will merge the DrawerExample into the existing Example project.\n. Which version of react-native-router-flux are you using?\n. Consider renaming backButtonImage to buttonImage, as it is used for both drawerImage and backButtonImage. For readability.\n. Why not extract the Component here?\n. ",
    "megazoid84": "@Froelund can you describe your case in details? What did you do wrong?\n. @timzaak yes, of course\n```\nimport Home from './Home'\nconst scenes = Actions.create(\n  \n\n\n\n\n);\nclass App extends React.Component {\n    render() {\n        return ;\n    }\n}\n```\nThis code generate the error given above.\n. @aksonov it's a full source code of App.js that gives the error:\n```\nimport React, { Component, PropTypes } from 'react-native'\nimport {Scene, Router, Switch, TabBar, Modal, Schema, Actions} from 'react-native-router-flux'\nimport Home from './Home'\nconst {\n  Platform,\n  StyleSheet,\n  Text,\n  View,\n} = React\nconst scenes = Actions.create(\n  \n\n\n\n\n);\nclass App extends React.Component {\n    render() {\n        return ;\n    }\n}\nexport default App\n```\nAnd source code of Home.js\n```\nimport React from 'react-native'\nconst {View, Text, StyleSheet} = React;\nconst Button = require('react-native-button');\nconst Actions = require('react-native-router-flux').Actions;\nclass Home extends React.Component {\n    render(){\n        return (\n            \nReplace screen\nBack\n\n        );\n    }\n}\nmodule.exports = Home;\n```\nIf I comment Router & Scenes parts - application starting to build normally.\n. ",
    "timzaak": "Do you  have  writen  <Router scenes={scenes} />?\n. 3.2.13 does can also see no title\n. @sylvainbaronnet  does not fix it .\nAndroid  with v3.2.8 and rn v0.23.1 does not work.\n. in more details,  type=\"replace\"  does not work.\n. I have tried Example app with react-native v0.24.0-rc4. there is something odd. It does not work correctly.\nthe NavBar changes correctly, But the component in the Scene does not change.\n. I think #547 would be more nicer. Because this pr can not change the title dynamic, and #547 can also render images on the title position. :)\n. I change the status bar by native code.\n. ``` javascript\nimport { BackAndroid } from 'react-native';\nimport { Actions, Reducer } from 'react-native-router-flux';\nimport * as Toast from '../util/toast';\nlet hasInit = false;\nlet currentSceneName = null;\nfunction getCurrentName(obj) {\n  const { index, children, name } = obj;\n  if (index !== undefined) {\n    if (children) {\n      return getCurrentName(children[index]);\n    }\n  }\n  return name;\n}\nexport const routerReducer = params => {\n  const defaultReducer = Reducer(params);\n  return (state, action) => {\n    const nextState = defaultReducer(state, action);\n    currentSceneName = getCurrentName(nextState);\n    return nextState;\n  };\n};\nexport function platformInit() {\n  if (hasInit) {\n    return;\n  }\n  hasInit = true;\n  BackAndroid.addEventListener('hardwareBackPress', () => {\n    // the root view\n    if (['Login',\n        'tab1',\n        'tab2',\n        'tab3',\n        'tab4',\n        'doctorTab1',\n        'doctorTab2',\n        'doctorTab3'].indexOf(currentSceneName) !== -1) {\n      if (this.lastBackPressed && this.lastBackPressed + 3000 >= Date.now()) {\n        BackAndroid.exitApp();\n        return false;\n      }\n      this.lastBackPressed = Date.now();\n      Toast.show('press again, exit');\n      return true;\n    }\n    Actions.pop();\n    return true;\n  });\n}\n```\nthis is my code to handle the android back key.\n. ",
    "RTakes": "Update Cleaning and rebuilding it does fix the problem.  I forgot to quit the React Packager terminal process.  \n@rgovindji \nI'm repeatedly and randomly having this same issue.  I can't consistently reproduce it, and cleaning and rebuilding is no longer fixing the issue.  Today doing a git commit triggered the error.\nAny suggestions?\n\n. ",
    "AntonPuko": "Thanks, i've got it!\n. ",
    "spaceoi": "Got the same error.\n. Yes I have checked the code and @emrosenf figured it out! thank you @aksonov and @emrosenf !\n. @joenoon The title didn't display in tabbar sub-scenes, and buttons didn't display correctly either for rn0.24 + rnrf#3.24 in iOS. Do you have a solution for this?\n. @joenoon Actually I think this is a different bug. The _renderTitle method runs several times and the last run will show as the title in the NavBar. For example the click of 'Switch to tab1' shows runs 3 times _renderTitle method: tab1_1, launch and tabbar, and the title displays tabbar's title, which is undefined, instead of tab1_1's title, which is the correct result 'tab1_1'.\n. ",
    "slamus": "I've got the same error.\nI've got around it by setting initial={true} to my equivalent of your 'welcome' route.\nThen I just need to call the parent route to go to this this route.\n``` jsx\n      \n\n      <Scene\n        key=\"Login\"\n        type=\"replace\"\n        component={LoginPageContainer}\n        initial={true}\n      />\n      <Scene\n        key=\"ProfileCompleteness\"\n        type=\"replace\"\n        component={ProfileCompletenessPageContainer}\n      />\n\n      <Scene\n        key=\"Platform\"\n        type=\"replace\"\n        component={PlatformContainer}\n      >\n        <Scene\n          key=\"Lobby\"\n          type=\"replace\"\n          initial={true}\n          component={LobbyPageContainer}\n        />\n        <Scene\n          key=\"PageTest\"\n          type=\"replace\"\n          component={PageTestContainer}\n        />\n        <Scene\n          key=\"Profile\"\n          type=\"replace\"\n          component={ProfilePageContainer}\n        />\n        <Scene\n          key=\"EditProfile\"\n          type=\"replace\"\n          component={EditProfilePageContainer}\n        />\n        <Scene\n          key=\"Friends\"\n          type=\"replace\"\n          component={FriendsPageContainer}\n        />\n        <Scene\n          key=\"AboutUs\"\n          type=\"replace\"\n          component={AboutUsPageContainer}\n        />\n        <Scene\n          key=\"Show\"\n          type=\"replace\"\n          component={ShowPage}\n        />\n      </Scene>\n\n\n    </Scene>\n  </Router>\n\n```\n. You should use the reducer to store the currentRoute somewhere in your app.\nThen you check if the currentRoute is already set and prevent the route to be triggered twice.\n. Yes,\nI will try to change my logic to match the example one.\nKeep you updated\n. Well,\nAfter thinking about it a bit: I just want to pass new props to the current route !\nHow do I do that ?\n. Yes, but if I want to do that from outside the current mounted component ? Can I do that ?\nEdit: Sorry I just read it's for updating the props of the current view.. So no prob then ! I will try that\n. Perfect, will try that.\n. thanks for notifying\n. ",
    "yeomann": "However Drawer should have only one child, check example just to let people know who are still encountering issue, the thing is in drawer scene create a scene with no component={} and then give as many Childs you want to that parent. which is actually a single child of the drawer as statement says that Drawer should have only 1 child. carp:( nor type=\"rest\" nor type={ActionConst.RESET} working for me. come on:(\n\nEDIT: fixed in later releases :ok_hand: \n. what do you mean mate? @rodrigofbm  both v3 and v4 works now. mind sharing your implementation? I am using type={ActionConst.RESET} in Scenes and it's been working since.. just before you going to next Action with params or not. you can try SetTimeout like me. it does explain why this error is popping I am also struggling but my theory is that, imagine one success login dispatch from redux we show toast to user say \"successful login\" and in the callback of toast we moved to screen B. <---- that's where the error is lying. I believe as toast as toast was still there mounted and was probably fading away with its animation. we moved to screen B thus the toasts couldn't call SetSate to hide itself.\nI hope to find any solution or suggestions. but for now SetTimeout is doing the hack . after all tries I just switched to v 3.43.0. merged and can be closed thank @aksonov . @aksonov well the thing is as much as people would love to use v4 but they are probably afraid to ship the product with unstable or beta release package. Not to mention, This could create a hug amount of chaos in my humble opinion. . ",
    "ponty96": "because I'm still using version 2.x and it didnt state that v2 has been discontinued.... and i'm not ready to upgrade to v3 yet.... \n. ",
    "octohedron": "I'm also getting Key  is already defined for every key in my app.\nIs it confirmed that it's caused by wrapping the Router with a redux Provider? \nIs it telling me there is something wrong with my app that I should fix?\nIs there a way to make it go away besides commenting the line in the package? \n. Ended up refactoring the whole thing using a Drawer. I can connect it to the redux store and dispatch actions from there and also moved the <Scenes back to the render method, that gives me access to the store. I had originally moved them out to improve performance but it's running fine so far.\n. ",
    "lucasff": "@zxcpoiu hey, the wording is not so great, we are trying to use your approach even we have the same problems with the latest version of RN/RNRF. ",
    "gaykov": "@jeroenbourgois thank you for the nice idea!\nI solved it this way. First, I implemented my custom nav bar this way:\n``` javascript\nimport React from 'react-native';\nimport NavBar from 'react-native-router-flux/src/NavBar';\nclass AppNavBar extends NavBar {\n    static contextTypes = {\n        drawer: React.PropTypes.object\n    };\n_renderLeftButton() {\n    return (\n        <TouchableOpacity onPress={this.context.drawer.open}>\n            <Text>Test</Text>\n        </TouchableOpacity>\n    );\n}\n\n}\n```\nbut I started to see 'Maximum call stack exceeded' because of this line inside the render: https://github.com/aksonov/react-native-router-flux/blob/master/src/NavBar.js#L60 (it returns itself in the loop). So I have to rewrite render function also. And the final class is\n``` javascript\nclass AppNavBar extends NavBar {\n    static contextTypes = {\n        drawer: React.PropTypes.object\n    };\n_renderLeftButton() {\n    return (\n        <TouchableOpacity onPress={this.context.drawer.open}>\n            <Text>Test</Text>\n        </TouchableOpacity>\n    );\n}\n\nrender() {\n    const state = this.props.navigationState;\n    return (\n        <Animated.View\n            style={[styles.header, state.navigationBarStyle]}>\n            {state.children.map(this._renderTitle, this)}\n            {this._renderBackButton()}\n            {this._renderLeftButton()}\n            {this._renderRightButton()}\n        </Animated.View>\n    );\n}\n\n}\n```\nThanks again!\n. @KBLNY make sure you have drawer in you contextTypes:\njavascript\nstatic contextTypes = {\n    drawer: React.PropTypes.object\n};\n. ",
    "AlexCoderBit": "Helped me a lot. Many thanks ))\n. @aksonov \nPavel, what is the best way to hide navigation drawer after any onPress={Action ...}\n. @aksonov Exactly \ud83d\udc4d Thanks a lot ))\n. ",
    "haifaGh": "Hey can you please post the complete code .. I'm struggling in integrating drawer and navbar here .. thanks a lot :) . Hi, I'm having the exact same problem .. so can you please post the complete code? thank you, I really appreciate your help \n. ",
    "JamesWatling": "Hi @iamzifei, I also had this problem, and was fixed by adding a key=\"root\" to the parent scene.\nie. \n<Provider store={this.store}>\n        <Router navigationBarStyle={styles.navbar} leftButtonTextStyle={styles.backButton}>\n            <Scene key=\"root\" navigationBarStyle={styles.navbar}>\n              <Scene key={Routes.LAUNCH_SCREEN} initial={!this._loggedIn()} component={LaunchContainer} type='replace' />\n               .....\n            </Scene>\n        </Router>\n      </Provider>\n. Having several other issues in RNv0.23 most router navigation is inconsistent, swipe back is broken. I don't think official support is ready yet\n. Are we able to get this merged and approved? Really wanting to be able to upgrade to 0.24 but don't want to use my own private fork - and this solves my issues\n. ",
    "iamzifei": "Hi @JamesWatling , thanks for the reply. as you can see in my code, I have key='app' in parent scene. but still get this error. However when I clear everything (including node_modules) and re-run it again it works. Not sure why though.\n. ",
    "evollu": "UIExplorer example has the same issue. I'm doing the same workaround\n. +1\nI can't change the duration of the animation. Looks like it is taking the default one in NavigationCardStack.js\n. looks like they are going to fix in 0.24.0-rc2\nhttps://github.com/facebook/react-native/issues/6800\n. I'm using Switch to get around the problem and it works correctly with v0.24.0-rc3. \"replace\" doesn't work because NavigationView's animation depends on scene index and \"replace\" doesn't change the index\n. I want to custom tabbar itself not tabIcon because I want to use TouchNativeFeedback instead of TouchOpacity in react-native-tab.\n. yeah I tried and it works for most cases, but just not mine. Just want to add an option to not depend on another library.\n. I will change it in my fork then.\nThanks \ud83d\ude04 \n. Sorry I may not get you correctly. It is not changing the built-in TabBar. If you don't have renderTabs prop then the built-in one will be rendered.\nthe usage will have be like this\n<Scene key=\"MAIN\" tabs={true} renderTabs={this._renderTabs}>\n. @cridenour you are right. passing component works. Sorry I didn't get your point in the other issue. Thanks a lot\n. ",
    "Nikamura": "Hmm, I see that it requires Tabs now, but I think that should be the case.\nLet's say I have pages where tabs are not used (launch,login, register)\nAnd when authenticated tabs are used there. So I can't use Switch unless I am using it with Tabs, is that correct?\n. Okay, I see. Thanks\nAlso there seems to be a bug:\n<Scene\n                key=\"root\"\n                hideNavBar={true}\n                tabs={true}\n            >\n                <Scene key=\"launch\" component={Launch}/>\nNavBar is shown, even where hideNavBar is true, when tabs true is added. \n. ",
    "bosung90": "This bug seems to be 50% fixed in 0.23.0-rc1.\nHowever, react-native-router-flux has a peer dependency of 0.22.\nHow can I use 0.23 with react-native-router-flux?\n. +1\n. @aksonov This is an issue. Actions.refresh only works for the currently active scene and therefore if props change while you are on a different scene, it will simply fail.\n. @aksonov Sorry I thought you were referring to my \"hack it around\" solution and didn't notice your key:SCENE_KEY. I will let you know once I try it, Thanks!. \nHowever, I still feel like otherProps should update to a new value whenever props change to a new value.\n. @aksonov using otherProps in Router allows you to pass to every Scene. Is there similar for Actions that allow me to pass props to all Scenes ? For example Actions.refresh({key: 'Router', props})\n. @aksonov  I just tried Actions.refresh({key: 'weatherProperty', isRefreshing: true}), and I am getting missed child data for key=weatherProperty error at <unknown> Reducer.js : 123\n. @aksonov Found out the problem is with Reducer.js line 82 it is checking rather state.key === key but it should actually be just state.sceneKey === key (regardless of if it is REFRESH or not)\nAlso, calling Actions.refresh on key that is statically defined but has not yet been initialized will throw assertion error. Is there a way to check if element exists before calling Actions.refresh or let it fail silently?\n. #506 \n. @tuneZola You can easily bypass this restriction by one of following ways:\n1. Use Actions.refresh({key: '<your scene key>', <customKey>: <customValue>})\n2. Put redux container in each of your Scene component and you can get your values within your container without passing it through scene.\n3. Pass in function as otherprops that returns your value. This can be fetched whenever willReceiveProps gets called within Scene component that sets your state.\n. you shouldn't call Actions.pop() on a default scene since there is nothing to pop. In default scene, you should return false in order to let Android take care of back button (in which case it will close the app)\n. #515 Use Gitter for questions\n. @aksonov This is not a duplicate of #481  because this bug was introduced starting 3.2.10\n481 Clearly states it is for 3.2.7\n. If you are talking about Android, you should upgrade RN to 0.23.1 and RNRF to 3.2.9\n. Looks good to me too. \n. Have you tried adding\nshouldComponentUpdate(){\nreturn false\n}\n??\n. @tinygipxy That's what you say to someone who is trying to help you out? \n. You can try using tabbar without showing tabbar icons. \nAfter showing Scene 1, you can push tabbar\nTabbar has 2 tabs:\nTab1 has Scene 2 3 4 ... etc\nTab2 shows preloaded scene Video.\nYou can fire off loading the video at the same time you push the tabbar scene.\nAnother way to do this is by using react-native Modal without animation.\n. yes you can do it with Actions.refresh({})\njust override rightButtonImage and onRight or use other props if you want only text.\n. ",
    "lwhiteley": "may have been resolved by clearing watchman cache\n. i stopped my packager and ran watchman --watch-del-all and then restarted my packager and it started working for me\n. fixed, header styling was the issue\n. thanks for the update.\nbut does it solve the header being displayed at the bottom?\nseems like it would only solve it being displayed twice; a step forward nonetheless \ud83d\udc4d \n. i chose to turn off tabbar actually so maybe should edit post.. but when i do, it still displays to the bottom\nbut maybe ill try this and see\n. please read the issue again. that is the problem\ni expect the following layout without having to position the header\njs\n<Scene>\n   <NavBar/>\n   <Body/>\n</Scene>\ninstead I am getting\njs\n<Scene>\n   <Body/>\n   <NavBar/>\n</Scene>\nPositioning the navbar absolute after the fact, removes the flexibility of relative  styling when the navbar for the specified scene should really just be at the top by default i guess.\n. the default style of the navbar is what you just showed me, that adds the weird behaviour of not being fluid when the drawer is open. as i said before, thats not what i want\nJust to note: ive tried all of what you just said before\nI had to resort to putting the header in the scene itself\n. was this fixed or a solution provided?\n. @Rollan its as i said before,\nin order to get away from the absolute style and had to put the header component at the top of the components I use for the Scenes. which is not preferable i guess\n. and when the drawer is open, how do i get the navbar to move to the side with the rest of the scene?\n that is my intended use case. the drawer currently displays under the navbar when open for me\n. ",
    "aestrro": "Actually, I'm getting the same error on the burger menu (menu burger) <- lolz \n\n. Must I set the tabs={true} prop in the child Scene to get this working? Currently my application is not using tabs, so I feel this is why it doesn't work right now.\n<Scene key=\"drawer\" component={Drawer} open={false} >\n  <Scene key=\"main\" tabs={true}>\n    ....\n  </Scene>\n</Scene>\n. Just to let you know:\nonPress={() => Actions.refresh({key: 'drawer', open: value => !value }) }\nDoes not work because the open value is a function in this state, (I was getting a YellowBox error), but:\nonPress={() => Actions.refresh({key: 'drawer', open: true }) }\nDoes work because when the drawer is open I can dismiss by other means...\n. ",
    "giacomorebonato": "There is a bug in react-native 0.23.0-rc1 that does not allow to require images and throws with react-native-router-flux because of the back arrow images \n. We could encourage to re-use a container component for each scene \n. I have forked the repo and removed transparent from the DefaultRenderer.js . I don't get the error anymore.\nI have a container component that I re-use in all my scenes (I would have it anyway) and it has the background.\n. ",
    "texas697": "\"react-native-router-flux\": \"^2.3.1\"\n. after I made changes. this from my project\n. @dljcollette \n```\nimport React from 'react';\nimport {\n  AppRegistry,\n  StyleSheet,\n  Text,\n  View,\n  Navigator,\n  BackAndroid\n} from 'react-native';\nimport NavigationDrawer from './Components/NavigationDrawer';\nimport {Scene, Reducer, Router, Switch, TabBar, Modal, Schema, Actions} from 'react-native-router-flux';\nimport Store from 'react-native-simple-store';\nimport SplashScreen from '@remobile/react-native-splashscreen';\nimport MaterialIcon from 'react-native-vector-icons/MaterialIcons';\nconst reducerCreate = params => {\n  const defaultReducer = Reducer(params);\n  return (state, action) => {\n    console.log(\"ACTION:\", action);\n    return defaultReducer(state, action);\n  }\n};\nconst getSceneStyle = function (props, computedProps) {\n  const style = {\n    flex: 1,\n    backgroundColor: '#fff'\n  };\n  if (computedProps.isActive) {\n    style.marginTop = computedProps.hideNavBar ? 0 : Metrics.navBarHeight;\n  }\n  return style;\n};\nconst styles = {\n  navbar: {\n    backgroundColor: Colors.red,\n    height: Metrics.navBarHeight\n  },\n  title: {\n    top: 15,\n    marginTop: 0,\n    color: Colors.snow,\n    fontWeight: 'normal',\n    fontSize: Fonts.size.h6,\n    fontFamily: Fonts.bold\n  }\n};\nexport default class RootRouter extends React.Component {\ncomponentWillMount = () => {\n    BackAndroid.addEventListener('hardwareBackPress', () => Actions.pop());\n  };\nrender() {\n    return \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n;\n  }\n}\n```\n```\nexport default class NavigationDrawer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isDisabled: false\n    }\n  }\ncomponentDidMount() {\n    this.hamburgerListener = AppEventEmitter.addListener('hamburger.click', this.openControlPanel.bind(this));\n  }\ncomponentWillUnmount() {\n    this.hamburgerListener.remove();\n  }\nopenControlPanel() {\n    this.drawer.open();\n  }\nrender() {\n    const state = this.props.navigationState;\n    const children = state.children;\n    return (\n       Actions.refresh({ key: state.key, open: true }) }\n        onClose={() => Actions.refresh({ key: state.key, open: false }) }\n        content={ { this.drawer.close() } }/>}\n        acceptPan = {this.state.isDisabled}\n        closedDrawerOffset={-3}\n        disabled={this.state.isDisabled}\n        styles={{\n          drawer: { shadowColor: '#000000', shadowOpacity: 0.8, shadowRadius: 3 },\n          main: { paddingLeft: 3 }\n        }}\n        tweenHandler={(ratio) => ({\n          main: { opacity: (2 - ratio) / 2 }\n        }) }>\n        \n\n    );\n  }\n}\n```\n```\nconst contextTypes = {\n    drawer: React.PropTypes.object,\n};\nconst ControlPanel = (props, context) => {\n    const drawer = context.drawer;\nreturn (\n    <View style={styles.container}>\n        <ScrollView>\n            <View style={styles.linksContainer}>\n                <View style={{ position: 'relative' }}>\n                    <MaterialIcon name=\"home\" size={30} color={Colors.red} style={styles.icon}/>\n                    <TouchableOpacity\n                        style={styles.link}\n                        underlayColor={Colors.charcoal}\n                        onPress={() => { drawer.close(); Actions.home() } }>\n                        <Text style={styles.text}>Home</Text>\n                    </TouchableOpacity>\n                </View>\n            </View>\n        </ScrollView>\n    </View>\n)\n\n}\nControlPanel.contextTypes = contextTypes;\nexport default ControlPanel;\n``\n\"react-native-drawer\": \"^2.2.3\",\n\"react\": \"^15.0.2\",\n \"react-native\": \"^0.26.3\",\n\"react-native-router-flux\": \"^3.26.24\",\n```\n. ",
    "dabit1": "Hi! Somebody knows how can I solve this problem? If I have a list and I go to any item, and I press back button and quickly I go to another item the item component is not unmounted thus the component preserves data from the last item. This is because the component is not unmounted immediately.\nMany thanks. ",
    "levinqdl": "@ajoshdee I have the same issue, too. How do you fix the problem?\n. @aksonov yes 0.23.0-rc1\n. Yeah, I understand. But 0.22 have a really bad nav transition performance, so I want to try 0.23. Anyway, I can wait...\n. ",
    "felipemartim": "Setting hideNavBar={true} on the root scene fixed it for me.\n. also happening here\n. Can confirm that @luhui's solution worked fine for me on Android (RN 0.37.0). The animation is not 100% smooth though, but I only tested on DEV mode.. ",
    "cgreening": "We've got a workaround with a custom reducer where we modify the state to\nget it back to the scene we want.\nWill try and turn that into a pr.\nThis does look pretty horrible though as every scene is animated off in\nrapid succession. I believe this might be an issue with the underlying\nnavigation component. I think it needs a bit more work to bring it into\nline with the standard native iOS uinavigationcontroller.\nOn Thursday, 31 March 2016, Pavlo Aksonov notifications@github.com wrote:\n\n@cgreening https://github.com/cgreening Have you tried\nActions.pop();Actions.pop() ?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly or view it on GitHub\nhttps://github.com/aksonov/react-native-router-flux/issues/419#issuecomment-203801700\n. customRouterReducer.js:\n\n``` js\nimport {Reducer} from 'react-native-router-flux';\nconst reducerCreate = params=>{\n    const defaultReducer = Reducer(params);\n    return (state, action)=>{\n        if(action.type == 'BODGE') {\n          if(state.children.length > 1) {\n            state = Object.assign({}, state, {index: 0, children : state.children.slice(0,1)});\n           }\n        } else {\n          state = defaultReducer(state, action);\n        }\n        return state;\n    };\n};\nexport default  reducerCreate;\n```\nAnd then in your setup do:\n``` js\nimport customRouterReducer from './customRouterReducer'\nimport {Actions, Scene, Modal, Router} from 'react-native-router-flux'\nconst ConnectedRouter = connect()(Router);\n\n```\nThen send actions with the type \"BODGE\" to pop back to the first scene.\n. In a connected component you should be able to do:\njs\nthis.props.dispatch({type: 'BODGE'});\n. > If we will remove it, it will don't allow to set one background for all scenes....\nI'm not completely sure I understand this - is there a way for setting the background on a scene?\nWould it be possible to only have the transparent style if there is one background being used for all scenes.\n. https://github.com/aksonov/react-native-router-flux/issues/613\n. I've not tested this as I can't publish this package to npm. But, the code compiles and tests all pass.\n. Seems to be the consensus that you ignore the src for npm and ignore the lib for git.\nhttps://stackoverflow.com/questions/29738381/how-to-publish-a-module-written-in-es6-to-npm\nI guess if you want to look at the src it's acvailable on GitHub.\n. Having investigated a bit further I don't think the precompile step is necessary for react native as it runs the modules through the preprocessor anyway. So we can close this pull request and ignore it.\n. ",
    "Mbompr": "Hi @cgreening apparently you did not have time to turn it into a PR. By any chance, could share with us your custom reducer, I am facing the same problem.\n. Hi, I have managed to do so by modifying Modal component from RNRF. In my case I want to have a SpinningView that show up depending on my redux state.\n```\nexport default function SpinningViewModal (props) {\n  const children = props.navigationState.children;\n  const state = children[0];\nreturn (\n    \n\n\n\n  );\n}\n``` \nIt's definitely a shortcut and not as complete as the original Modal but it is sufficient in my case. . By creating a file called Modal.js in my app directory and importing Modal from there instead of importing it from RNRF. ",
    "esutton": "@cgreening Thank you!\nDumb question: Can you please give example on how to send action with type \"BODGE\" ?\nI am a Javascript/react newbie.  All I have been using are Actions fiuctions like:\n```\nActions.pop()\nActions'MySceneKey';\n```\n. @rturk Perhaps my problem is I am not experienced in javascript.  ( However, I am using redux. )\nThe MySceneComponent is handling adding a new database object if user presses right button.\nHow can I connect the Scene onRight function, to a function inside MySceneComponent?\n<Scene key=\"text1\" text=\"text1\" onRight={()=>alert(\"Right button\")}  component={(props) => <MySceneComponent {...props} mySceneComponentOnRight={rightFunction} />} />\nPreviously when using NavigatorIOS, I would call an action to commit the added object to the database when user pressed the right \"Done\" button.  Maybe I need to re-think this.\n. Thank you @rturk  for a great idea!  Your custom NavBar idea should be perfect and solve a lot of problems\n\nhttps://gist.github.com/rturk/a52321593dd9264ddd2ccbd43eb489b7\n\nIt looks a bit weird since the NavBar buttons and title slide in along with the scene instead of buttons instantaneously of buttons appearing at the top immediately, then title sliding in.\nI also can't seem to get the NavBar to layout at the top of the scene#2.  Even with scene#2 hideNavBar={true} it seems to have reserved space for the navbar.\nBut it solves some critical problems!\nThanks again!\n. @cridenour Thank you !\nNo more Key  is already defined! messages in the debugger !\n. How would I pop twice?\nI am no JS expert.  I literally tried this syntax without achieving any pops:\nsetTimeout(()=>Actions.pop);\nDid I read support for an Actions.pop(2) enhancement coming:\nhttps://github.com/aksonov/react-native-router-flux/pull/806\nUsing:\n    \"react\": \"15.0.2\",\n    \"react-native\": \"0.26.2\",\n    \"react-native-router-flux\": \"3.26.20\",\n. @xvalentino thank you.\nI was using the syntax @Swordsman-Inaction kindly suggested.  However, I was getting crashes on cheap Samsung Galaxy S4 tablets on Android that I suspect could be related.  I do not know for sure.  Anyway, I went back to single-pops temporarily.\nI understand a new RFRF API is coming for multiple pops.  I will wait until this API is documented in the README.ms and  a new RN release comes out that seems to play well with my other packages.\nI must say that multiple pops makes my app much better.  For example, when I drill down into a multi-level hierarchal menu made from ListView components, then execute a menu action, multiple are great!\n. I am not sure you always want to exit without giving the developer a choice.\nOn Android, when hardware back button is pressed in the root view, it normally ( but not always ) exits the app.\nOn an app that user can drill-down many levels, you may want to display a toast prompt  in case user accidentally pressed back too many times. A typical toast prompt is \"Tap back once more to exit\".\nThe app File Manager HD(File transfer) does this.\n   https://play.google.com/store/apps/details?id=com.rhmsoft.fm.hd&hl=en&gl=us\nI handle Android in my main view like this.\n```\nimport React, { Component } from 'react';\nimport {\n  Alert,\n  BackAndroid,\n  ListView,\n  Platform,\n  StyleSheet,\n  ToastAndroid,\n  Text,\n  View\n} from 'react-native';\nbackAndroidHandler () {\n    try {\n      Actions.pop();\n      return true;\n    }\n    catch (err) {\n      // let backCount = this.state.backCount + 1;\n      // let exitToHomeScreen = (1 < backCount) ? true : false;\n      // if( false === exitToHomeScreen) {\n      //   ToastAndroid.show(\"Tap back once more to exit.\" + backCount, ToastAndroid.SHORT);\n      // } else {\n      //   backCount = 0;\n      //   BackAndroid.exitApp();\n      // }\n      // this.setState({\n      //   backCount: backCount,\n      // });\n      // return !exitToHomeScreen;\n  // Cannot get toast to disappear - Exit to home without Toast prompt\n  return false;\n}\n\n},\n```\nI think RN has a problem with toast.  I could never get it disappear.  I gave up on the toast prompt.\n. In my non-expert-Android opinion, RNRF should not exit the app.\nLet the developer do what he wants.  My backAndroidHandler() makes RNRF work the way I want it to.  \nWhen user backs out to the root, the backAndroidHandler() in my MainView where the RNRF router lives get called and I can choose to exit or not.\n. I really like the built in pop that occurs on Android-back.  That works auto-magically like I expect it to.\nI think it is the automatic exitApp at the root, on Android-back  that developers may object to.\n. @adriandiaz Thank you!\nRolling back to 3.37.0 fixed problem with switching tabs popping back to the starting tab scene!\n\n3.38.1 caused many duplicate dependency errors in the packager\nRolling back to 3.38.0 Fixed duplicate dependency errors in the packager but breaks tab switching\n\n\"react\": \"~15.4.1\",\n    \"react-native\": \"0.42.3\",\n    \"react-native-router-flux\": \"3.37.0\",. http://stackoverflow.com/questions/38592747/react-native-router-flux-how-to-get-current-scene-key\n```\nconst AppRouter = connect()(Router)\nclass Routes extends Component {\nrender() {\n    let catchInitialState = false\nfunction selector(props) {\n  return props.auth.isLoggedIn ? (props.auth.isVerified? 'home': 'authenticate') : 'authenticate'\n}\n\nconst reducerCreate = params => {\n  const defaultReducer = Reducer(params)\n  return (state, action) => {\n    if(action.type == 'RootContainerInitialAction') {\n      catchInitialState = true\n    }\n\n    if(catchInitialState && action.type != 'RootContainerInitialAction') {\n      GoogleAnalytics.trackScreenView(action.scene.sceneKey)\n      catchInitialState = false\n    }\n\n    if(action.type == 'REACT_NATIVE_ROUTER_FLUX_REPLACE') {\n      GoogleAnalytics.trackScreenView(action.key)\n    }\n\n    return defaultReducer(state, action)\n  }\n}\n\nconst component = connect(state => ({\n  auth: state.auth,\n}))(Switch)\n\nreturn (\n  <AppRouter createReducer={reducerCreate}>\n    <Scene key=\"root\" component={component} tabs selector={selector} hideNavBar hideTabBar>\n      <Scene key=\"authenticate\" hideTabBar>\n        <Scene type=\"replace\" key=\"login\" initial component={GradientBackground(LoginScreen)} hideNavBar/>\n        <Scene type=\"replace\" key=\"register\" component={GradientBackground(RegisterScreen)} hideNavBar/>\n        <Scene type=\"replace\" key=\"forgotPassword\" component={GradientBackground(ForgotPasswordScreen)} hideNavBar/>\n        <Scene type=\"replace\" key=\"emailConfirmation\" component={GradientBackground(EmailConfirmationScreen)} hideNavBar/>\n      </Scene>\n      <Scene key=\"home\" component={NavigationDrawer} type=\"replace\">\n        {require('./scenes/home')}\n      </Scene>\n    </Scene>\n  </AppRouter>\n)\n\n}\n}\nexport default Routes\n```. How do you exit app without terminating the app?  I think I have tried all the above combinations and app is terminated and must relaunch from scratch.\nUsers may be in the middle of uploading or downloading and this kills the process.  I expect the Android back button to minimize app and show home NOT terminate it.\n1) Anytime I return false from either the router backAndroidHandler or the React Native BackHandler, my app terminates and closes completely. \n2) Calling BackHandler.exitApp() and returning true still terminates app.\nWhen I try to resume, I see the splash screen so I know app is restarting from scratch.\nAnytime the app the back handler returns false the app is shut down and closed completyely.\n````\n      \nrouterBackAndroidHandler = () => {\n    const result = Actions.pop();\n    console.log('dbg: Actions.pop()', result);\n// returning false will close app completely\nreturn true;\n\n}\n````\nUsing:\n\"react\": \"^16.2.0\",\n        \"react-native\": \"^0.52.2\",\n        \"react-native-router-flux\": \"4.0.0-beta.27\",. @Blapi A MainActivity.java fix was the only thing that prevented app from terminating.\n````\nimport android.content.Intent;\npublic class MainActivity extends ReactActivity {\n// Prevent back button from terminating app\n  // https://github.com/react-navigation/react-navigation/issues/1372#issuecomment-299432731\n  @Override\n  public void invokeDefaultOnBackPressed() {\n    moveTaskToBack(true);\n  }\n````. This is starting to work for me after adding a static onExit method to my component.\nI see 'onExit' in logs for both Android and iOS.\nI am still trying to figure out how I can get to the component instance and component state from the component's static onExit method?\n<Stack key=\"login\" path=\"login/:data\" titleStyle={{ alignSelf: 'center' }}>\n          <Scene\n            key=\"loginModal\"\n            component={Login}\n            title=\"Login\"\n            onExit={() => { Login.onExit()}\n            leftTitle=\"Cancel\"\n            onLeft={Actions.pop}\n          />\nUsing:\n\"react\": \"^16.2.0\",\n        \"react-native\": \"^0.53.3\",\n        \"react-native-router-flux\": \"4.0.0-beta.27\",\n. Animation is distracting when tab swiping is disabled.\nWhen I attempted to disable, I received a red box error on Android:\n<Scene\nanimationEnabled={false)\nUsing:\n\"react\": \"^16.0.0\",\n        \"react-native\": \"^0.50.3\",\n        \"react-native-router-flux\": \"^4.0.0-beta.24\",\n. @hawx1993 or @veer3383 How did you solve this?\nUsing refresh to trigger componentWillReceiveProps always seems to work sometimes, maybe once or twice then it never triggers it again.\n1) When my detail view exits, I attempt to use REFRESH to get the parent list view to update via componentWillReceiveProps\n2) Sometimes componentWillReceiveProps() is called a time or two, then it is not?\n// When the detail view exits, I attempt to use REFRESH to get the parent list view to update \n  componentWillUnmount() {\n    Actions[scene.Key.MenuPlanList]({ type: ActionConst.REFRESH });\n  },\nUsing:\n\"react\": \"^16.2.0\",\n        \"react-native\": \"^0.53.3\",\n        \"react-native-router-flux\": \"4.0.0-beta.27\",. @veer3383 Thanks for feedback.  \nIs this what you switched to?  Any examples demonstrating how to use with Redux?\n- https://github.com/react-navigation/react-navigation\n\nI dumped Router flux and used react navigation with Redux in my next React project\n\nI wondered if that may be a trend. It would be a lot of work for me to switch.\nI ended up with a two step solution that seems reliable for the moment;\n1) Add a REFRESH in DetailViewScene called from componentWillUnmount\nActions[scene.Key.ParentListScene]({ type: ActionConst.REFRESH });\n2) Add an onExit to the DetailViewScene that refreshes itself.\n<Scene\n              key={scene.Key.DetailViewScene}\n              component={props => (\n                <DetailViewScene {...props} {...this.props} />\n                )}\n              hideNavBar={false}\n              hideTabBar={false}\n              onExit={() => {\n                Actions[scene.Key.DetailViewScene]({ type: ActionConst.REFRESH });\n                }}\n            />\nIt is a \"house of cards\" solution.  No clue why it worked if I only did both things.\n. @Blapi Same issue on Android with react-native-router-flux 4.0.0-beta.28\nHow far do I need to rollback to avoid?\nreact-native-router-flux 4.0.0-beta.24 ?\n````\nTypeError: undefined is not an object (evaluating 'resetAction.actions.map')\nOn attempt to switch to this scene with type=\"replace\"\n (\n                \n                )}\n              type=\"replace\"\n              hideNavBar={false}\n              hideTabBar={false}\n            />\nAndroid:\n        \"react\": \"^16.2.0\",\n        \"react-native\": \"^0.51.0\",\n        \"react-native-router-flux\": \"^4.0.0-beta.28\",\n````\n. @Blapi and @FacuAcosta Thank you. \nI also confirm 4.0.0-beta.27 does not crash on Actions.replace('screen')\nyarn remove react-native-router-flux\nyarn add react-native-router-flux@4.0.0-beta.27. @NdozHH I am not seeing this fixed?\nUsing:\n\"react\": \"^16.2.0\",\n        \"react-native\": \"^0.52.2\",\n        \"react-native-router-flux\": \"4.0.0-beta.27\",\nHow do you exit app to Home screen without terminating the app?  \nI think I have tried all  #2040 combinations and app is terminated and must relaunch from scratch.\nUsers may be in the middle of uploading or downloading and this kills the process.  I expect the Android back button to minimize app and show home NOT terminate it.\n1) Anytime I return false from either the router backAndroidHandler or the React Native BackHandler, my app terminates and closes completely. \n2) Calling BackHandler.exitApp() and returning true still terminates app.\nWhen I try to resume, I see the splash screen so I know app is restarting from scratch.\nAnytime the app the back handler returns false the app is shut down and closed completyely.\n````\n      \nrouterBackAndroidHandler = () => {\n    const result = Actions.pop();\n    console.log('dbg: Actions.pop()', result);\n// returning false will close app completely\nreturn true;\n\n}\n````\n. A Java fix is the only one that that works for me.\nhttps://github.com/react-navigation/react-navigation/issues/1372#issuecomment-299432731\nPutting snippet below in your MainActivity will prevent back button from killing the activity. I'm not sure when you click the back button, on which screen, or what does exiting app mean. The snippet above prevents back button from executing the change or exiting the app if AppStack is the top router.\n@Override\npublic void invokeDefaultOnBackPressed() {\n    moveTaskToBack(true);\n}. This works sometimes, maybe once or twice, then componentWillReceiveProps is no longer triggered after making changes in SceneB is detail edit view \n\nSceneA is list view.\nSceneB is detail edit view\n\n// Detail view SceneB\n  // Actions REFRESH triggers componentWillReceiveProps in parent list SceneA\n  // SceneA updates state in componentWillReceiveProps\n  componentWillUnmount() {\n    Actions[scene.Key.SceneA]({ type: ActionConst.REFRESH });\n  },\nHowever, calling refresh in SceneB componentWillUnmount and adding an onExit to my scene that called REFRESH on itself made it reliable.\nNo clue why or if this is a good idea.  It just seems to work.\nIt feels like a \"house of cards\" ...\n````\n             (\n                \n                )}\n              hideNavBar={false}\n              hideTabBar={false}\n              onExit={() => {\n                Actionsscene.Key.SceneB;\n                }}\n            />\n\"react\": \"^16.2.0\",\n        \"react-native\": \"^0.53.3\",\n        \"react-native-router-flux\": \"4.0.0-beta.27\",. +1 Tab bar buttons disappear on iOS.  Android is fine. \niOS was fine if using RN 0.53.3.\nafter yarn add react-native@v0.54.0-rc.3\n\"react\": \"^16.2.0\",\n        \"react-native\": \"v0.54.0-rc.3\",\n        \"react-native-router-flux\": \"4.0.0-beta.27\",. @kaym0 This is not an EXPO specific problem.  \nI am not using EXPO and Tab bar buttons disappear on iOS. Upgrading to RN 0.54 or RN 0.55 makes tab bar icons and custom right navigation buttons disappear on iOS only.  \nAndroid works normally.\n@maltenz work-around to add both width and height to TabIcon solved.  Thank you.\nUsing:\n\"react\": \"16.3.1\",\n        \"react-native\": \"0.55.4\",\n        \"react-native-router-flux\": \"4.0.0-beta.27\",. ",
    "sym900728": "I write in the my component with the \nthis.props.dispatch({type: 'BODGE'})\nIt's not useable.\n. I also have the same problem.\n. I also encounter this problem. I don't know how to get the current stack\n. The react-native-router-flux is based on RN 0.26\n. ",
    "benjamincarp": "Actions.js mentions popTo in several places, which I assume would do what we're looking for here but I didn't have any luck trying to actually use it and I find the layout of this code pretty hard to read so I didn't dig in too far.  \nIn my case, I need to pop to the root level so I could just use a replace action for now. I would prefer for it to be a pop to the correct level though in case we ever add a level below the current root. \n. ",
    "JosephDev": "same here. Actions.ROUTE_NAME({type: ActionConst.RESET}); occur errors blow. \n\nI use ActionConst.BACK instead. \nPlease mention if I use it as wrong way. thanks,\n. @vugman Apply this PR and this into your app.\nI have no problems with react-native-router-flux v3.30.0 and react-native v0.28.0\n. Sorry, I am very new at JS.\nFor reference, Actions['seene_name'](params)\n. +1\nstill have a problem with\n\"react-native\": \"0.44.2\"\n\"react-native-router-flux\": \"3.39.2\". ",
    "highbass": "I get the exact same error as @JosephDev when trying to use POP_TO, however, RESET works fine for me unfortunately it doesn't solve my requirements.\nedit:\nWell looks like i was using POP_TO incorrectly... I think documentation requires some better explanation but this ticket showed how its supposed to work.\n1594. @ryancoughlin i am going through figuring out the exact same problem... could you kindly provide how you went about solving it.. ok I seem to figured it out also.... basically modified styling to be something as such...\ncontainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    position: 'absolute',\n    top: 0,\n    bottom: 0,\n    right: 0,\n    left: 0,\n    backgroundColor: 'rgba(0,0,0,0)',\n  },\nwhich (from the example) is attached to TouchableHighlight\n<TouchableHighlight style={styles.container} onPress={this.dismissModal}>\n        <Text style={styles.text}>{this.state.message}</Text>\n</TouchableHighlight>\nI also modified the dismissModal to have an Action.pop() .. since after hiding it doesn't come back up. \ndismissModal() {\n    Actions.pop();\n    this.setState({ hide: true });\n  }\n... setState is not needed at all here.. ",
    "redwind": "@cgreening: thanks for your hack\n@sym900728 : if this still help for you, it work for me by call \nActions.callback({ type: 'BODGE' }). @imWildCat : did you have any update for this issue ?\n@aksonov : in my case, i implement static navigationOptions for tab's children without hideNavbar. But when pop back from another screen, the header work like above gif image.\nThanks. add backBehavior={'none'} to your tabs route. @kesha-antonov kesha: i faced same issue, it work like this\n\nHow did you set navbar position absolute to resolve it ?\nthanks !!. got issue for 4.0.0-beta.28, downgrade to 4.0.0-beta.27 works for me!. ",
    "songyouwei": "\nNo old navigator.sceneConfig support (instead the component uses React Native NavigationAnimatedView for better transitions)\n\nHow to use NavigationAnimatedView to forbid swipe back gesture?\n. ",
    "aguenther": "Well, from your documentation I assumed pop goes back through the history, and for 2.x it indeed worked like that. Aka, if you start at Home, then go to Chat, then to Feedback, and then call pop, you are at Chat again, and after another call you are at Home. Instead, it goes back through the scenes' definition,  from bottom to top.\nWhile I understand that it makes sense that something called \"Actions.pop\" pops actions off the list of defined actions, it would be nice if you mentioned this change under \"breaking changes\", along with instructions how to get the \"back in history\" behavior in the new version.\n. Yes, I do. It is in the example, too. Do I have to do it differently in that case?\n. ",
    "Quirksmode": "Sorry to bring back an old thread, but I have just come across this same issue. Is there no way to go back to a different tab? I have an app which has search as one of the tabs and I need to add a back button, it's part of the design and in this instance makes a lot of sense. To add to this, I did some tests and it seems that the slowdown is definitely being caused by the scenes being added to the 'stack' (if we can call it that). The sliding animation is really important to the design of the app, is there a way I can have this animation and refresh the stack? The reverse sliding animation is really nice, is there a way to pop() back to a scene that has a RESET type being applied? . ",
    "joonhocho": "Thanks. Once I figure it out, I will make a PR.\n. @joenoon, Maybe ask React Native team to have a separate repo for NavigationExperimental ?\n. https://github.com/reactjs/react-router\nReact router accepts path param like path=\"/user/:userId\", and you can get userId as such this.props.params.userId.\n. ",
    "ugputu18": "There is an easy way, yet not most optimal. See the sample on typescript.\n``` typescript\nexport function relay(Component: Relay.RelayContainerClass, queries: any, params?: any): React.ComponentClass {\nreturn class RelayRootContainer extends React.Component {\n    private routedComponent: any = null\n    private params: any = {}\nconstructor(props: any, context?: any) {\n  super(props, context)\n  class Routed extends React.Component<void, void> {\n    render(): JSX.Element {\n      return <Component {...props} {...this.props}/>\n    }\n  }\n  this.routedComponent = hoistStatics(Routed, Component)\n\n  // Prepare queries params\n  if (queries.params) {\n    Object.assign(this.params, queries.params, _.pick(props, Object.keys(queries.params)))\n  }\n  if (params) {\n    Object.assign(this.params, params)\n  }\n}\n\nrender(): JSX.Element {\n  const route = {\n    name: ['$$_aggregated', ...Object.keys(queries)].join('-'),\n    queries: _.omit(queries, ['params']),\n    params: this.params,\n  }\n  return <Relay.RootContainer Component={this.routedComponent} route={route}/>\n}\n\n}\n}\n```\nAnd then in routes:\n<Scene component={relay(SampleScreen, viewer)}/>\n. The problem with transparent background is described here: https://github.com/facebook/react-native/commit/e4c53c28aea7e067e48f5c8c0100c7cafc031b06. And there is such background in DefaultRenderer.js: \njsx\n<NavigationCard\n    {...props}\n    key={\"card_\" + props.scene.navigationState.key}\n    direction={props.scene.navigationState.direction || \"horizontal\"}\n    panHandlers={props.scene.navigationState.panHandlers }\n    renderScene={this._renderScene}\n    style={{backgroundColor:\"transparent\"}}\n/>\nMaybe, we could remove that style property?\n. ",
    "r0b1n": "@aksonov I may try to achieve this as a OOB feature.\nI would like to suggest something like this:\nInspired by react-router-relay\n`` jsx\nconst ViewerQueries = {\n  viewer: () => Relay.QLquery { viewer }`\n};\n\n\n\n\n\n\n\n\n\n\n```\nAnd as I see we can extend DefaultRenderer here to render Relay components.\nDoes it work for you?\n. @sibeliusseraphini can't provide any usable examples now, I was just experimenting with relay rendering. \nCheck: https://github.com/aksonov/react-native-router-flux/compare/master...r0b1n:relay-integration\nYou may slightly change the way RelayComponentRenderer.js handle params and wrap your Scene component with it, then feed it to <Scene component={RelayComponentRendererWrappedScene} .../>\nMaybe I will implement some examples later.\nP.S. Router itself needs to have ability to intercept rendering, just like react-router did. And then we can setup relay renderer to it without changing the code.\n. Hi guys, here is my example. https://github.com/r0b1n/rnrf-relay-example\nPlease check if it works for you.\n// cc @chrissm79 @sibeliusseraphini \nP.s. tested on iOS only.\n. Guys, I am ready to help you with fixing issues.\n@charpeni any help needed?\nP.S.\n@aksonov Will it work wrong when lastAction contain property which is not exists in action?\nhttps://github.com/aksonov/react-native-router-flux/blob/master/src/Reducer.js#L16-L22\n. @aksonov Please specify, does code assume what Actions.create should be used only once (Router mounted only once)?\nBecause in case of incorrect using i am getting on re-render:\nKey launch is already defined!\nKey home is already defined!\nKey map is already defined!\n// etc.\nI suggest to add isInitialized variable and check if Actions.create was already invoked, then output message about double initializing.\nWhat do you think?\njavascript\ncreate(scene:Scene) {\n    assert(scene, 'root scene should be defined');\n    assert(!this.isInitialized,\n      'Scene already initialized. ' +\n      'Are you trying to render Router/Scenes more than once?'\n    );\n    const refs = {};\n    this.iterate(scene, {}, refs);\n    this.isInitialized = true;\n    return refs;\n  }\n. Yes, it should be moved to separate file, and it is broken because of init action removed in latest release.\nSure I am going to place it to separate test file.\n. I suggest to have own stack of needed functions to avoid dependencies.\nomit, pick, compare\nMove them to helpers/utils file and reuse in components.\n. @cmouysset \nAbout Key is already defined!:\nI see what you use custom RootRouter component which encapsulates the render of Route and Scenes. Also I see RootRouter state changing while login, this forces to re-render.\nBut you shouldn't re-render Route > Scenes. I suggest you to rework your RootRouter to make it render only once. Make it state-less and props-less. \nP.S. You may store token in flux implementation of your app.\n. @cmouysset flux and many implementations of it?\n. @cmouysset learn about flux, redux implementation, for example. It will answer your question.\n. @rturk got you, thanks. Will improve an example app.\n. @Lenin7 I havn't checked this example for a long time since I am not working on react-native + relay myself.\nBut last time it was working.Have you checked it recently?\nAlso there is bit complex example in https://github.com/r0b1n/rnrf-relay-example/tree/hotels-backend branch which is working with this graphql backend example https://github.com/r0b1n/graphql-hotels-example\nI am happy to update these examples, but don't have a time right now.\n. Why not to stay in one style and use assert instead all these console? Then we may revert.eslintrc back.\n. ",
    "proProbe": "Sorry for reusing this issue. Im having troubles with tabbar-scenes not rendering when the relaystore updates. If I in tab1 sends an update and changes the store which tab2 is dependent on, nothing happens in tab2. ComponentWillReceiveProps does not trigger. Even by Actions.refresh(), the relaystore does not send its newly updated information to tab2\n. Any progress on this?. same here\n. @rturk yeah I am. Redux is for configuring state-data and Relay has all the information-data\n. Yes, I totally missed that! thanks. closing this\n. after checking out v3.37 on master, this PR seems to have been lost?. oh no wait, it does. Must be something weird with my node modules. It says I have 3.37 but it doesnt give me the correct src files. Im looking for something similar. is this even possible?. unfortunately, I havent found any solutions. Would love to hear if anyone has one though!. any progress on this?. this problem actually a misunderstanding from my point. The problem I had lays more in android. gonna open a new issue about this. @hector I solved it through using animation. Just removing the view itself made the touch on the screen unresponsive. Animate the view out first and then remove it worked for me. @sirgalleto have you noticed any temporary solutions to this?. ",
    "willmcneilly": "Thanks for the reply.\nYes, it flickers too.\nI've copied your navbar example and added it to the root scene in the navBar prop. It seems anytime I transition to a new scene, it flickers as the navBar component is mounted. \n. Ah ok. We have been using jump in our reducer. I should be able to find a work around. Thanks. \n. Possibly related to this issue https://github.com/facebook/react-native/issues/7450\n. This bug has been about for quite a while. Here's another couple of issues describing the same problem:\n\nhttps://github.com/aksonov/react-native-router-flux/issues/1266\nhttps://github.com/aksonov/react-native-router-flux/issues/1282. \n",
    "morgondag": "Im having the same flickering problem.\nThere seams to be a 1 pixel wide white border when navigation between views.\nI recorded an example application with the problem here:\nhttps://www.dropbox.com/s/uqs1ngy37j2ciwq/recording.mov?dl=1\nIf you scrub trough the video its quite clear there is a white line appearing.\nHere is a picture of the visual artifact:\n\nThe new view have a white line that flickers as the new view animates into place.\n. when swiping back the old view have this white line applied to the top of the view:\nsee the top left corner here:\n\n. Can confirm that there is still a white line on transitions with these versions:\n\"react\": \"15.0.2\",\n    \"react-native\": \"0.26.2\",\n    \"react-native-router-flux\": \"3.26.0\",\n. ",
    "MovingGifts": "@jeroenbourgois Hmmm.. I must have missed that, where specifically does it say it cannot be done in iOS? There has got be a way to have it work on dark navbar :)\n. @lee-gray Works great! Thanks man :)\n. @FrankSalad Do you mean having the new scene slide in form the left side to the right, instead from the right to the left?\n@aksonov If so I have the same/similar question(s):\n1. For scene transitions ex. SlideDown, SlideUp, SlideFromRight, SlideFromLeft, how can those 4 be applied on the next/prev scene? I think by default there is only 2 that work that I've seen in the demo.\n2. For other transitions, like FlipRight/FlipLeft, how can those be applied on the next/prev scene? Is it possible?\n. @st577 Agreed, I am still stuck on this one with no response from gitter. I am sure others will benefit from how to accomplish this as well. Anyone?\n. I agree, would be better to have all the navbars in a single file, but know how to reach in and call the a method from the corresponding scene..\n. @adrianmc @cridenour I've seen this part of the docs, but there is no code example to see how it works anywhere. For beginners, it's really hard to use this plugin IMHO. Can you post an example of how the renderNavigationBar(props) should be used with a custom navbar?\n. @andpor I think you have to use a custom navbar for those buttons, and have that navbar in the component. I honestly am not sure how as I am trying to figure that same thing out and this plugin seems very powerful, useful, and time saving, but the documentation lacks and I don't know enough to contribute as a beginner, so I don't know how to use it very well.. \nI wish there was a video tutorial that goes over these different parts...\n- Integrating custom navbar for scene\n- Triggering scene methods from corresponding navbar buttons\n- Side bar drawer integration\n- Customizing bottom tabbar with icons, and top ones for content\nIf you're able to get it to work, please let us know how!\n. @aksonov Can you share a snippet?\n. @aksonov Thank you :+1: \n. @cridenour Does it work for both iOS and Android?. Try () => Actions.menus() to go to menus, or to pass restaurants to the menus as a parameter that will be available as a prop () => Actions.menus({restaurant}) short for () => Actions.menus({restaurant: restaurant}) where you're second restaurant is the passed item.\n. Hello anyone?\n. @joenoon @aksonov how can I go to a tab directly?\n. bump\n. @joenoon Thank you for your reply and direction. I have no clue how to do that, but appreciate your answer!\n. The tabbar is a great part of RNRF and it comes out of the box with clear examples of integration.  But the issue of hiding/showing it requires someone with more knowledge on how the inner workings of RNRF/tabbar work together, would have the best chance of making this happen.\nJust sharing my thoughts here, but I am thinking of ways that would make sense to integrate...\nSomething like <ListView tabBarHideOnScroll={300} could be a prop that can be added to any ListView/ScrollView When you scroll 300 up, it would hide the tabbar, scroll 300 down, it would show the tabbar.\nAny thoughts? Would like to keep the discussion open.\n. @susan-github Thank you for your solution :) It works, but would be nice to have an animation to slideup/slidedown the tabbar as opposed to a sudden show/hide. This would be the final improvement and I hope someone shares how to do it :)\n. @yaronlevi Where did you find/how can I get to DEV SETTINGS -> JS Dev Mode?\n. +1. @redbaron76 @aksonov This works perfectly and should definitely be part of the docs!\n. When navigating forward, we have a componentWillMount method to hook into.\nWhen navigating back, there is no method to hook into.\nA method like componentIsVisible for example, would be great to put inside a scene, where it would execute any code in it whenever it is the top visible item in the scene stack. Including when we pop/back_action from another scene unto it.\nThis router is good for basic navigation and has an easy to use API, but it is pretty frustrating when it comes to things like this.. @leifdenby I tried it out but it doesn't seem to work when navigating back to a scene that has your code's methods via Actions.pop() \nI tested with an alert like this:\njs\nhandleNavigationSceneFocus() {\n    alert('focused');\n}\nand included your setup. The alert only works when I navigate/push to Scene A, then push from there to Scene B where I press something, which takes me to a second instance of Scene A (alerts here).\nBut when I go back from the second instance of Scene A to Scene B, then pop Scene B, it takes me back to the original Scene A but the alert does not run.\nShouldn't the alert run when popping back to Scene A?. I think it's best to contribute to react-navigation directly going forward (with the time spent refactoring RNRF to integrate with the latest react navigation options). It's a never ending cycle of catching up to the latest version/features, and definitely react-navigation is the way forward :). ",
    "lee-gray": "You can call StatusBar.setBarStyle('light-content', true); to change the status bar text/icons to white. Remember to include StatusBar from react-native.\n. @melihmucuk try adding it to your root Scene, I don't know why but it worked for me.\n<Scene key=\"root\" backButtonImage={require('../images/back_chevron.png')}>\n    <Scene key=\"foo\" component={fooView} title=\"Foo\" />\n    <Scene key=\"bar\" component={barView} title=\"Bar\" />\n</Scene>\n. ",
    "rochestb": "@lee-gray Thanks!\n\n. Also need this fixed. One tab is connecting to the camera and needs to be unmounted. I have seen some potential using Switch.\n. I had to use connect() on the scene component itself in order to get the data changes.\n. ",
    "hejiaji": "Fantastic!!\n. @linonetwo the method 1, Actions.pop(), Actions.Tab#1() seems not work in my case, the tab didn't get  reloaded when reEnter the scene\n. @aksonov is there a way to rerender a component when click a tab? we got a requirement that refresh the component when switch tabs...\n. @linonetwo I encountered the same situation with @MuffinWithJam, unfortunately it's not only setUp work i need to do, i actually want it reRender to load data from server, it's like i need to unmount the component when switch up to another tab... is there any way we can try?\n. @dragfire Thanks for your reply, but this method doesn't fit me, i need the component to unmount and remount again when click the tab, not just render it. cause i need to decide when to fetch data. obviously i can't put the fetch logic in render(), ideally i want to put the fetch logic in ComponentDidMount, that's why i need unmount the component when switch out. \n. @willyyang hey, yes, i found a workaround for this specific requirement by link it to reducer.  by add listener to hook componentWillReceiveProps, to decide if we load data (refresh) from the flag we set in reducer. (flag for example: shouldRenderHome).  we subscribe the ActionConst.JUMP action in reducer and set shouldRender flags to true, then in the componentWillReceiveProps hook, we load the data and set it to false.\nHope this would help you\n. @JohnAntonusMaximus you just need simplely add logic in componentWillReceiveProps hook function like this:\ncomponentWillReceiveProps(nextProps) {\n    if (nextProps.shouldRender) {\n      this.props.resetShouldRender();\n      // fetch data here\n    }\n  }. @aksonov Can you release the latest changes in NPM? we need this commit, thanks in advance.\n. Thanks!\n. ",
    "lin493369": "Thanks!. +1. Waiting for a solution.. @BuuPanarin  I have this problem too.Cloud you tell me how to solve this?. @sarovin I have this problem too.Does any solution to solve this?. I solve it by  Actions.root.In the way,when View1 is pop stack,it always can jump well.\n````\n  _onPressButton(rowId){\n        const drawer = this.context.drawer;\n        drawer.close()\n    switch (rowId) {\n        case '0':{\n            Actions.root({key:'View1',type:'replace'});\n        }\n            break;\n        case '1':{\n            Actions.root({key:'otherView',type:'replace'});\n\n        }\n            break;\n    };\n}\n\n```\n. I try to call\nActions.get('indexDrawer').ref.open()\n`\nAnd it did enter the open function,and the this._open turn to true finally,but it doesn't show the drawer.It really confuse me, is it a bug?. ",
    "sirawat93": "cannot use backgroundColor in StatusBar in IOS, it only works in android. use setBarStyle={color} or set backgroundColor in View that covers StatusBar instead :). ",
    "e2goon": "There's this way.\njavascript\n<Scene\n  key=\"tabbar\"\n  tabs={true}\n  \ud83d\udc47\ud83c\udffb\ud83d\udc47\ud83c\udffb\ud83d\udc47\ud83c\udffb\ud83d\udc47\ud83c\udffb\ud83d\udc47\ud83c\udffb\ud83d\udc47\ud83c\udffb\ud83d\udc47\ud83c\udffb\ud83d\udc47\ud83c\udffb\n  onSelect={el => {\n    if (typeof Actions !== 'object') return;\n    const {\n      sceneKey,\n      statusBarStyle\n    } = el.props\n    if (statusBarStyle) {\n      StatusBar.setBarStyle(statusBarStyle, true)\n      Actions[sceneKey]()\n    }\n  }}>\n  <Scene\n    key=\"tab_1\"\n    title=\"home\"\n    component={Home}\n    icon={TabIcon}\n    \ud83d\udc47\ud83c\udffb\ud83d\udc47\ud83c\udffb\ud83d\udc47\ud83c\udffb\ud83d\udc47\ud83c\udffb\ud83d\udc47\ud83c\udffb\ud83d\udc47\ud83c\udffb\ud83d\udc47\ud83c\udffb\ud83d\udc47\ud83c\udffb\ud83d\udc47\ud83c\udffb\ud83d\udc47\ud83c\udffb\ud83d\udc47\ud83c\udffb\ud83d\udc47\ud83c\udffb\ud83d\udc47\ud83c\udffb\n    statusBarStyle=\"light-content\" />\n.\n.\n.. ",
    "mattfca": "did you add Actions.pop() to the onpress in  ?\n. ",
    "harishbelamkar": "check you style type properties of View. If you are using any opacity/shadow/shadowOffset property ,remove those properties will work fine! . ",
    "sneerin": "what's ButtonRenderer.back?. I was looking here: \nrenderLeftButton \nnot sure if it works for v4, but anyway thanks for suggestion. ",
    "aligenc": "it is my problem too. i am getting same error as component property is not set for key=root\n. stop the node processes that running. and power off your emulator. than try again.  . ",
    "xahon": "I have same error too. Here is my snippet of code\n```\nimport React from 'react'\nimport { Scene, Actions, Router } from 'react-native-router-flux' //eslint-disable-line\nimport SignupScreen from './src/screens/signup' //eslint-disable-line\nimport LoginScreen from './src/screens/login' //eslint-disable-line\nexport default class App extends React.Component {\n  render () {\n    return (\n      \n\n\n\n\n\n    )\n  }\n}\n``. This issue was resolved by addingdefaultkeyword inSignupScreenandLoginScreenexport default class SignupScreen extends React.ComponentNo components needed forrootScene!  . There is not explained how to create custom tab buttons in documentation. When i callActions.nameOfInnerScenenothing occurs. In this path the fieldchildrenis missing. Yes, i mean that but there is noroutes` field \n\n. \n. ",
    "domchristie": "\nYou may pass any attribute but should use it inside your component accordingly\n\nI feel it\u2019d be good if sceneStyle was brought back. Wrapping every scene component in <View style={props.style}> isn\u2019t ideal.\nI could look into creating a PR if you\u2019re interested?\n. I had a look into this and unfortunately it\u2019s not as easy as I had hoped.\nDefaultRenderer can either render a navigationState component or an NavigationAnimatedView. In the case of rendering a navigationState component there\u2019s no way to apply styles directly without wrapping it in another component (perhaps a NavigationCard?)\n. @aksonov Yes, it appears to work for me:\nhttps://github.com/domchristie/react-native-router-flux/commit/4644c59157b4ee374f2f8565aff66c9c6cc2ae9f#diff-8e927151f271a81709e2e70c2953591bL57\nResults in:\n\n. ",
    "FrankSalad": "@aksonov like Tinder - there's a center card (swiper), right card (messages) and left card (settings). When the left nav button is pressed the whole interface slides right to place the left card in the center.\n. ",
    "wrousseau": "@aksonov Is there any news regarding this ? \n. Hi, here's how I did it to handle rtl languages (such as arabic, so that the transition is right to left.\n```\n  rtlAwareAnimation(pos, navState) {\n    const factor = I18n.rtl() ? -1 : 1;\n    Animated.spring(\n      pos,\n      {\n        bounciness: 0,\n        toValue: factor*navState.index,\n      }\n    ).start();\n  },\nrender() {\n    return (\n      \n\n\n\n    );\n```\nHowever, it's still not really useful as the scenes are placed in special positions which means that the transition direction must match the place where the next scene is\n. @stephy Hi ! What is the difference with the standard direction used by default ?\n. @stephy Alright, got it. I feel like the name could be confusing though because locale whose transitions between scenes are supposed to be following that direction are usually called \"right to left\" locales. There is actually some work being done on React Native to support rtl languages\n. ",
    "dongrenguang": "I also meet this question. Finally, I resolve it by defining the height of each scene, such as:\n<Navigator\n    ...\n    sceneStyle={{height: **}}\n/>\nAnd, I also use a third party module https://github.com/jaysoo/react-native-extra-dimensions-android to get the real height.\n. ",
    "pavloko": "+1 one here. I'm about to try the solution proposed above. . I didn't know about this functionality. In my app, I'm currently using\nBackAndroid.addEventListener('hardwareBackPress', () => Actions.pop());. ",
    "philjoseph": "+1 for me as well. Checking the workaround. @aksonov Is this your recommendation to insert such an intermediate scene? We had several secondary effects of such a scene and I am not thrilled about it so I wonder if there is a better way to have both drawers and navigation bar (that seem to very valid components for our app).. Moreover, it will be great if the layout of within the bar will change in RTL so the back button will appear on the right, and will go rightward as mentionned by @ahmedNY . +1. ",
    "krailler": "+1 here. @aksonov Hey, see this.. ",
    "irsyadmhdilham": "+1 gonna try it. ",
    "winsontam": "how about \"assert\" something for better debug?\n. ",
    "viper1029": "Yes I understand, but version 3 is unusable due to performance issues. I was just wondering if this is a know issue and if there is a work around.\n. I'm trying to do the same thing. Have you found a solution?\n. ",
    "roshangm1": "I have this issue while running on version on the latest version too.\n. If i understood your problem, to change the navigation drawer icon, in your Scenes of Router:\n```\n\n {\nreturn (\n {\n          Actions.refresh({ key: 'drawer', open: true });\n        }}\n\n     <Icon\n      name='md-menu'\n      size={24}\n    />\n\n\n);\n\n```. \n",
    "sheparddw": "@KBLNY I know this is old, but you can define the button/navbar via a function within a component. You call Actions.refresh to add props such as title or renderRightButton, etc.\nFor example within componentWillMount:\nActions.refresh({\n      renderRightButton: () =>\n        NavigationEditRightButton(propsToPass)\n  });\n. Looks like you created a way: https://github.com/aksonov/react-native-router-flux/pull/868\nI added it here for reference.\n. Yes, you can update props via Actions.refresh(). Example:\nActions.refresh({ renderRightButton: this._renderRightButton });\nhttps://github.com/aksonov/react-native-router-flux/blob/master/docs/OTHER_INFO.md\n. Are you using a package for the dropdown menu functionality?\nHave you tried with the following package?\nhttps://github.com/instea/react-native-popup-menu\nMake sure your Menu Context is in the root view of your app (a parent of Router).\nFor example:\n<MenuContext style={styles.container}>\n        <Router\n          navigationBarStyle={styles.navBar}\n          titleStyle={styles.title}\n          sceneStyle={styles.scene}\n          scenes={Scenes}\n          leftButtonStyle={styles.backButton}\n        />\n</MenuContext>\n. You could do the following:\n<Router>\n     <Scene renderTitle={() => myTitleFunction(\"HelloWorld\")} />\n</Router>\nYou can even dynamically set the title if you wish via Actions.refresh() within componentWillMount. \nExample:\nActions.refresh({\n   renderTitle: () => {\n      //my title function here\n   }\n});\n. As sym900728 said, this package currently requires React Native 0.26.\nSee https://github.com/aksonov/react-native-router-flux/issues/815 for more information.\n. ",
    "isaiahgrey93": "@sheparddw thank you so much. I can't believe I didn't think about it but I didn't, thanks again. It really helped.\n. ",
    "Lida": "I think there is a bug with the current implementation that only use the renderLeft/Right/BackButton props set on the root scene. They are only bound on NavBar's componentWillMount.\nI have a local commit that fixes this in my fork.\n. ",
    "Paul-Todd": "I second that - this fixes an issue where the first scene (master scene) has a left button for settings. The remaining scenes (detail scenes) have the standard behaviour.\n. Lets see if this makes sense....\nInside the onRight function you will need to get the ref for the component view. This can be found in the Actions.refs.SCENE_NAME (see #2256).\nso..\nwe bind the function to \"this\" in the constructor.\n`constructor(props) {\n  super(props);\n  this.goToday = this.goToday.bind(this);\n  }'\nWe can then access it in the static\nstatic onRight() {\n  const c = Actions.refs.todayScene;\n  c.goToday();\n}\nRemember if you are wrapping your class in connect (if you are using redux) you will need to add a withRef to the config settings of your connect call and use getWrappedInstance() to get the actual instance.\nexport default connect(mapStateToProps, mapDispatchToProps, null, { withRef: true })(Today);\nOf course the easiest way is just to use Actions.refresh in the componentDidMount though this is an anti-pattern\ncomponentDidMount() {\n        Actions.refresh({\n            right: () => (<Text onPress={this.goToday} >{\"Save\"}</Text>)\n        });\n    }\n. ",
    "stinodes": "Hey @AlexDM0 ,\nWhere did you define that function?\nI can't seem to get it to work in my project.\n. Thanks for the quick response!\nI did include it in the scene's props, but it somehow keeps saying that this.props.navigationState is undefined.\nI don't think anything's off with my props though:\n<Scene key=\"key\" component={Component} renderBackButton={backButtonFunction}/>\nI've tried defining the function inside of the render-method, outside of the class, as method of the class. None seemed to solve it though.\n. I have used neither of those.\nreact-native-router-flux: 3.2.12\nreact-native: 0.23.1\n. Thanks, I'll try reverting back to an older version or RN.\nPerhaps that'll fix it.\n. I couldn't get it to work. Started using the NavigatorExperimental now, which seems to work fine\n. I might just be looking over something I did wrong. No worries.\nThanks for helping out though :)\n. ",
    "crismali": "@alirezavalizade I managed to change the color by passing leftButtonIconStyle to the scene with a tintColor.\n```js\nconst styles = StyleSheet.create({\n  backButton: {\n    tintColor: 'white'\n  }\n})\n// ...later\n\n```. ",
    "rtrompier": "Thanks for your answer but, not work ;) \nIt doesnt refresh the previous view ...\n. ",
    "helloworld123456": "Could anyone tell me how to refresh after Actions.pop()?\n. @Elyx0 \n: ), thank you, it works!\n. ",
    "samdturner": "@aksonov I am having the same issue as @helloworld123456 and @rtrompier .  My navigation flow looks as follows:\nScene A => Scene B => Scene C\nWhen I pop from C to B, I need to rerender Scene B.  I see that @Elyx0 has suggested using Actions.pop(); Actions.refresh();  I have two questions:\n1.  Will calling Actions.refresh() rerender Scene C or B?\n2.  Is it possible to override the onPress handler of the back button in the navbar?  It does not look like it is possible after looking at the code.\n. Got it - thanks @cridenour \n. +1\nHas this feature been implemented?  @anthonywebb were you able to find a solution to your issue?\nI ended up putting my data in a reducer, but I don't think that is the ideal implementation.\n. +1\n@esutton you have the same use case as me.  I am discussing it in issue #747 \n. My specific use case is putting a \"Done\" button in the right of the navbar.  This button does 2 things:\n1) It submits a form using the data contained within FirstScene.  The logic for submitting the form is also on FirstScene.\n2) It transitions to a new Scene.\nThis sort of use case has come up a number of times in our app.\nUsing redux is an option but I'm trying to avoid putting additional state in reducers for two reasons:\n1) It makes the app more difficult to reason about because developers have to follow the logic from the component => action creators => reducer => component (as opposed to everything being container within a single react component).\n2) You have to manage stale data in the reducer that persists even after the component is unmounted.\n. Thanks @rturk.  I'm thinking that's probably the best solution for now.\n. ",
    "alfancodes": "@samdturner can you tell me how?\nThank you\n. ",
    "mcglabs": "@alfan2305 \nActions.pop();\nActions.refresh();\n. ",
    "Brokray": "Hello guys, \nFirst of all : thanks you all for your insights they are really useful as I'm quite a newbie in react & javascript coding.\nI just tried out the \"refreshOnBack\" solution from @cridenour : unfortunately I stumbled upon some difficulties.\nNow the button just do nothing. I just stay on my \"C\" Scene (referring to @ssomnoremac example) even if the button highlighted itself. If I just set : \nconst refreshOnBack = () => { Actions.pop(); }\nI've the expected behaviour without an update of my parent view.\nWhat am I missing ? :/\n. Thanks you for your help @cridenour : I just tried your idea but unfortunately it doesn't work either. I go from C to B without any problems but \"B\" didn't changed.\nIt seems that the problem come from the refresh() method : even if I put a refresh button on the 'B' scene (calling to Actions.refresh()) nothing happens.\n@jholton I don't know if it can help you but  : I found a custom way to update my scene  :\nI have a reducer for each scene (B & C), when I call my POST action in 'C' both of my reducers catch the call, C does what he need to do and B set a state variable 'update' to true.\nThis way, in the \"ComponentWillReceiveProps\" of B, I test 'update', and call again what I need to refresh the scene.\nIf somebody have more insights on the Actions.refresh() problem, do not hesitate !\nThanks.\n. @jholton Well, as @cridenour said I use a flux implementation (redux indeed) which allow you to manage your data through actions, state and reducer. Once you're familiar with flux implementation I will gladly provide you an example !\n@cridenour Thank you again for your help !\n. @cridenour Yeah... That's what I thought but I needed to be sure. I posted the exact same question on their library : will see. Thanks anyway !\n@aksonov Thank you for your answer, I will check this example. I may migrate to my own solution as well for the exact same reason, that could be really helpful.\n. Maybe this can help you, it is hard to tell because I don't have your code but :\nI had the same \"issue\" using RNRF 3.35 & RN 0.30, and didn't understood it because it was working fine some days ago. \nHowever, the \"problem\" is that now (15 days ago) BackAndroid is already supported by RNRF, you just have to set it up when you declare your Router. See the code for the properties name.\n. Well, at the moment, I just try to do not use 'refresh' at all. Didn't find any other solution yet... \nMaybe @aksonov have some advices on how to use this Action.Const ?\n. ",
    "jholton": "I have the same results as @Brokray \n. @cridenour no errors in the console.\nIs there anything I can log to the console to figure out what's going on?  Something from the reducer maybe?\nThe reducer is still a bit of a mystery to me.\nThanks.\n. @Brokray if it's not too much trouble, can you provide an example?  How do you have a reducer for a single scene?  I've read all the documentation, but it's a bit over my head at this point.\n@cridenour Yeah, I don't want to pass app state per se.  I just want scene B to re-render.\nIn scene B, I display some data from by database.  In scene C, I have a form that adds data to the database.  When the user pops back to scene B, I just want all the lifecycle methods (e.g. getInitialState, componentWillMount, etc) to fire so the newly added data is retrieved and displayed.  Those lifecycle methods don't fire.\n. @Brokray Yeah, I'm diving into Redux tutorials now.  I'll revisit this thread when I can discuss flux/redux more intelligently.  Thanks.\n. ",
    "washaq": "will i succeed in updated props but when i try to move to next view again then its gives me error\nthis code is written in me setting screen\nActions.pop();\n Actions.refresh({key: 'pageOne', name:'wwwww'});\nOnly this will work and update the view but when i try to again go to the setting screen then it gives me error\n\n. will I finally solve it by calling empty refresh with props after delay\nActions.popTo('pageOne');\n        setTimeout(() => {\n        Actions.refresh({name:'zzzzar'});\n        console.log(\"zzzz\");\n    }, 10);\n. @ronyv89 glade it work for u can any one help me on this? \"https://github.com/facebook/react-native/issues/9280\"\n. @israrhnrtech  and @tuneZola  its not working if you want to call refresh of previous then u need to call it after delay then it will called properly like that\nActions.pop();\nsetTimeout(() => {\nActions.refresh({name:'zzzzar'});\nconsole.log(\"zzzz\");\n}, 10);\n. @israrhnrtech  no problem dude i find that really lot of hit and trail lol its looks simple know but when u r new on react native and doesn't know how to do that then its different story :) \n. i will only update when you pass your props that you want to change i.e\n```\nActions.pop();\nsetTimeout(() => {\nActions.refresh({name:'zzzzar'});\nconsole.log(\"zzzz\");\n}, 10);\n```\nin this i pass name as props in my main view that means if i m using this.props.name to update text then its updated you need to pass updated state as a props in refresh because thats how view know its updated.\nHope this will help you\n. @ivansifirm it should be working last I used it remember in refresh pass the props you want to undate I.e above 'name' is the props that I want u update in my previous view. ",
    "ronyv89": "@washaq: That did the trick for me \n. Nest all the scenes inside the drawer scene inside another scene. Navbar showed up for me after that\n. @alfredoreduarte: This is the way I did \n. ",
    "israr-shaikh": "Actions.pop(); Actions.refresh();\n just refresh the page but does not go to previous scene.\n. First of all Thanks for the Reply @tuneZola and @washaq .\nActions('pageOne');\nsetTimeout(() => {\nActions.refresh({name:'zzzzar'});\nconsole.log(\"zzzz\");\n}, 10);\nthis code is working very well ..\nthanks again ..\n. @phpscrpt  , can you brief more with some codes that how its working ?\n. ",
    "tuneZola": "It would be nice if Actions methods could be promised based so you can chain them together like\nActions.pop().then(Actions.refresh()).\nor \nActions.pop().refresh()\n. I am also seeing this issue with v3.22.15. The Scene is betting called with each Redux state change, but the value the Scene has is never updated.\n. @bosung90 Thank you for the work around. I am not sure if I would personal want to do something like this. It seems like a work about that is fairly extensive if you have a log of scenes as we do, and the restriction seems to be a flaw. Why would you have a scene update without being passed down the old props. Whats the point in using Redux in that case. Might as well keep everything in state. \n. You should just be able to import the Scene as a component. This is a feature we would really like. Can this issue be reopened?\n. Same problem\n. @linonetwo I have also been trying to get this to work for a while now and that solution does not work for be. I am on v3.34, but that shouldn't make a difference?\nAlso, I am assuming you mean type={ActionConst.RESET} unless\nActionConst changed to ActionConstants in 3.35?\n. This appears to still be an issue, I am not seeing the button with the latest version 3.37.0, and with the RN 0.40.0 I cannot stay on 0.34.0, laster working version. Any status change on the fix? @kgritesh . @edencakir Sorry for the late response, to answer your question, I don't use renderBackButton because it forces you to use the back arrow image that I do not want. You cannot customize it to meet our design needs. And the action is for a modal view which is more of a dismissal than a back action. Also, we configured it to work with the renderLeftButton and it worked until v3.37.0 and for it to not work now is a regression. If they don't want to support that functionality now, that is fine, but take it out of the api docs and inform people of the regression or removal of support in the release notes. I don't think its good to just regress and tell people to do hacky work arounds.. ",
    "phpscrpt": "For me applying this worked: \nnavigator.replacePreviousAndPop(previousRoute);\n. @israrhnrtech sorry it is for react-native's built in Navigator component. If react-native-router-flux is inherited from the Navigator component somehow it may work. \n. ",
    "ivansifrim": "@washaq  The timeout solution, as implemented below, is not working for me: \nbackAndRefresh(){\nActions.pop();\n  setTimeout(() => {\n     Actions.refresh({name:'zzzzar'});\n     console.log(\"zzzz\");\n  }, 10);\n}\n backAndRefresh()}>\n  GO BACK AND REFRESH\n\nThe componentDidMount on the page I want to refresh is not being called. \nAm I missing something? \nThanks!\n. @JeroenNelen - I haven't yet but I'll try what @Bertjuhh suggested . ",
    "Bertjuhh": "This works for me: Actions.pop({ refresh: {} });\nIt pops the current screen and refreshes the parent screen. . ",
    "ank-GML": "Any solution for the problem mentioned ? . ",
    "jonnyn": "This is working well for me:\nconst refreshOnBack = () => { Actions.pop({ refresh: {} }); }\n...\n// child scene\n<Scene key=\"settings\" component={SettingsScreen} onBack={refreshOnBack}/>\n.... ",
    "mini-eggs": "In a simple app I've recently done I've worked around this like so (this code is in my router file above the export):\nActions.pop = () => Actions.NAME_OF_PREVIOUS({ type: ActionConst.RESET });\nYou'll have to do some conditional logic in the function you're using to override pop. Worked beautifully in my case (granted I don't mind the alternate back transition while using ActionConst.RESET). Quick n nasty.. ",
    "GuillaumeMunsch": "Is there finally anything working well here ? None of the propositions above are really working...\n. I figured something out. I don't really think it is clean at all but for me it does the job, so here it is. (I'm using Redux to do this)\nI needed to call a fetch function whenever I did an Action.scene() or Action.pop(). This fetch was initially called in the componentWillMount method but as it isn't called when using Action.pop() I changed all my Action.scene() and Action.pop() calls to 2 custom functions which are actions which means that I have more redux containers than I normally should but eh :/. So here they are:\n``javascript\nconst goTo = (scene, label, sceneParams = {}, pushed = true) => ( // Equivalent ofAction.scene()(dispatch) => {\n     dispatch(setAppLabel(scene, label, sceneParams, pushed)); // I'm storing some infos about the scene in my store. Will be used in custompop()` later.\n     mapSceneToAction(scene, dispatch, sceneParams); // // Calls the function initially used in the componentWillMount. I'll show a sample further\n     Actionsscene;\n   }\n);\nconst pop = () => (  // Equivalent of Action.pop()\n   (dispatch, getState) => {\n     Actions.pop();\n     mapSceneToAction(getState().sceneReducer.previousScene, dispatch, getState().sceneReducer.previousScene.itemProps); // Retrieving some infos stored in the store during goTo()\n   }\n);\n```\nAnd here is how mapSceneToAction() looks like:\njavascript\nconst mapSceneToAction = (scene, dispatch, itemProps) => {\n  switch (scene) {\n    case 'events':\n      dispatch(fetchEvents()); // Or any other action :P\n      break;\n    case 'anyScene':\n      dispatch(anyAction(withAnyParams));\n      break;\n    default:\n  }\n};\nIt is a bit tricky, heavy and probably not really clean but since I'm using this method I've managed to fix all the problems I had.. I'm experiencing the same issue but the duration tip doesn't work for me. At the end of the animation it does a very quick back and forth between the original scene and the new one. I tried with 400, 250, 100 and 0. Doesn't change anything . Hi !\nAny news on this ?. Thanks for pointing out the onPress method.  It's not well mentioned in the doc (https://github.com/aksonov/react-native-router-flux/blob/master/docs/API_CONFIGURATION.md) as you said it :/. Maybe this should be ...\nEither way, thanks :). Any news on this ? This issue has been there for a while now ...\n. There have been so many issues on this. How do we do not have anything yet ?. I found that one actually but it is currently missing some parts right ?\nI can't find anything on the Modal, the Stack and other available imports (Lightbox, Drawer, Reducer, ...).\nAlso some props are currently missing right ? Like, as used in the Example project, the Router can have props like createReducer. Are these on the way ?\nBy the way, thanks for your quick answer :). Alright, there it is:\nindex.ios.js: \n```\nimport {\n  AppRegistry,\n} from 'react-native';\nimport SquareboardMobile from './src';\nAppRegistry.registerComponent('SquareboardMobile', () => SquareboardMobile);\n```\n./src/index.js:\n```\nimport React from 'react';\nimport { Provider } from 'react-redux';\nimport AppView from './AppView';\nimport store from './store';\nconst SquareboardMobile = () => (\n  \n\n\n);\nexport default SquareboardMobile;\n```\n./src/AppView.js:\n```\nimport React, { Component } from 'react';\nimport {\n  StyleSheet,\n  Text,\n  View,\n} from 'react-native';\nimport {\n  Scene,\n  Router,\n  Reducer,\n  Stack,\n} from 'react-native-router-flux';\nimport { connect } from 'react-redux';\nconst getSceneStyle = () => ({\n  backgroundColor: '#F5FCFF',\n  shadowOpacity: 1,\n  shadowRadius: 3,\n});\nclass AppView extends Component {\n  constructor(props) {\n    super(props);\n    this.reducerCreate = this.reducerCreate.bind(this);\n  }\nreducerCreate(params) {\n    const defaultReducer = new Reducer(params);\n    return (state, action) => {\n      console.log('ACTION:', action);\n      this.props.dispatch(action);\n      return defaultReducer(state, action);\n    };\n  }\nrender() {\n    return (\n      \n\nTest} title=\"INIT\" />\n        \n\n    );\n  }\n}\nexport default connect()(AppView);\n``react-native-router-fluxandreact-native` versions are still the same. The error kind of changed though. I have an additional information. There it is:\n\nIt looks like there is something with the Wrapped component.\n. <Scene key=\"login\" component={<Text>Test</Text>} title=\"INIT\" /> should be <Scene key=\"login\" component={() => <Text>Test</Text>} title=\"INIT\" /> ...\nI'm getting blind after hours of debugging ...\nThanks for your time guys. If I'm not wrong this issue https://github.com/react-community/react-navigation/pull/1377 offers the possibility to do so in react-navigation and it has been merged to master 11 days ago and a new release of this package (1.0.0-beta.13) has been published to npm 5 days ago so I imagine this is in the new release.\nDocumentation has been updated here as well https://github.com/react-community/react-navigation/blob/17c910fb5d69e02ef4015dfbf6a83d07019f4d03/docs/api/navigators/DrawerNavigator.md#drawerlockmode. This is a workaround using plain react-navigation right ? This isn't using the API of RNRF. ",
    "vingrad": "+1\n. +1. +1\n. Please fix asap. ",
    "WebMobi59": "same issue here, very strange.\nsometimes it works, sometimes it doesn't work.\nHere is my code. (In my case, there are scene A and B, A=>B by navigating, B=>A by poping)\nScene A:\n   componentWillReceiveProps(nextProps) {\n      if (this.props.test !== nextProps.test) {\n        this._getUser()  // I need call this func after pop\n      }\n    }\nScene B\nNavigationActions.pop({refresh:{test:true}})\nWhat's wrong with me ?\nThanks.. @nikitph  Thanks for your help.\nYeah, I tried with it.\nBut componentWillReceiveProps doesn't fire always after pop.\nCould you possibly let me know when componentWillReceiveProps is fired or there is a other lifecycle func is fired after pop ?\nRegards.. ",
    "nikitph": "NavigationActions.pop({refresh:{test:true}})\ncan you change it to\nNavigationActions.pop({refresh:{test:!test}})\nOn Tue, Jun 20, 2017 at 7:29 PM, MobileStar notifications@github.com\nwrote:\n\nsame issue here, very strange.\nsometimes it works, sometimes it doesn't work.\nHere is my code. (In my case, there are scene A and B, A=>B by navigating,\nB=>A by poping)\nScene A:\ncomponentWillReceiveProps(nextProps) {\n   if (this.props.test !== nextProps.test) {\n     this._getUser()  // I need call this func after pop\n   }\n }\nScene B\nNavigationActions.pop({refresh:{test:true}})\nWhat's wrong with me ?\nThanks.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/aksonov/react-native-router-flux/issues/465#issuecomment-309945049,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AExqB3CZM4U1yuwKslfuBj88uVVJulGtks5sGIAbgaJpZM4H_0pN\n.\n. @SelfnessAid ahh now i remember why i gave up on solving this issue. i had a similar problem. \"But componentWillReceiveProps doesn't fire always after pop.\" I think i have worked around it by having the index of a swipeable view which i have on the target page drive the refresh. yes it sucks but i m getting my problem solved. . i have a fix. need proper bindings for < TEXT>.lmk if you need a PR\n. Essentially if you follow the instructions word to word, instead of being\non page one onload you would be on page two because onpress is being called\non render for page one\nOn Tue, Oct 18, 2016 at 5:49 AM Sibelius Seraphini notifications@github.com\nwrote:\n@nikitph https://github.com/nikitph could u explain more on this?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/aksonov/react-native-router-flux/issues/1290#issuecomment-254496802,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AExqB2yqVBKFgXktY8W0rWDC8lSiHpd4ks5q1MBogaJpZM4KYC2u\n.\n. Did you not read my bug report. I already said i tried all variations of\nfunction call in onPress. None of them are working. This bug should not be\nclosed\nOn Wed, Oct 4, 2017 at 7:04 AM Miguel notifications@github.com wrote:\nClosed #2452\nhttps://github.com/aksonov/react-native-router-flux/issues/2452.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/aksonov/react-native-router-flux/issues/2452#event-1278024686,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AExqBzCx-Iob0GmrHAgofYBrCO0rfIsmks5so5BkgaJpZM4Pq_EX\n.\n. \"i have tried all permuatations of the call in bold (\n{ACTIONS.LoginScreen}, {ACTIONS.LoginScreen()} etc\"\n\nSo yes your suggestion has been tried and it does not work.\nOn Wed, Oct 4, 2017 at 7:43 AM Miguel notifications@github.com wrote:\n\nyou said you tried {ACTIONS.LoginScreen()}, that isn't the same as {() =>\nActions.LoginScreen()}\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/aksonov/react-native-router-flux/issues/2452#issuecomment-334178831,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AExqB29BEl7KRIO-9msCWom9apoCUsxcks5so5mtgaJpZM4Pq_EX\n.\n. \n",
    "bethuel11": "Pass a function prop to the next scene..\nActions.YourRoute({ onPress: () => setState.. });\nThen on the next scene, call the function prop\nthis.props.onPress();. ",
    "mrfambo": "@bethuel11  This is re rendering the component in a loop. Not a good solution though. ",
    "Kerumen": "I tried a lot of things in my code and in RNRF's code but I didn't manage to get this working :(\n. I finally also did something very similar.\n. @aksonov It doesn't work because it should be Platform.OS and not Platform.os. As it's undefined you get the Android's height in both platform.\n. Ok I'm creating a PR with appropriate fixes also for the buttons and title position.\n. @anthonywebb SO Answer\njson\n\"react-native-router-flux\": \"aksonov/react-native-router-flux#0.26-wip\"\n. You can do it in the componentWillMount hook of your initial Scene with the static API of StatusBar:\njavascript\ncomponentWillMount() {\n  StatusBar.setHidden(true);\n}\n. > finally...\nThe fix took less than 1 hour to land.\n. Don't forget to npm prune frequently.\nAnd when you publish a new version rm -rf node_modules && npm i and a build should be done to start from a clean install to check these errors.\n. @aksonov Can you release a npm version with this? Thanks!\n. ",
    "nitsujri": "@rgoldiez glad you got it working, would you be willing to help out make a PR against the documentation?\n. @Swordsman-Inaction for us, we ran into this with confirmation modals. \nBookings Index => Booking page => Confirm booking Modal => Booking confirmed Modal\nWe wanted to go back to Booking page. Our solution was to double pop().\nA clear would be nice, but not necessary since you can maintain the stack size through the store. Given the amount of effort required just to keep up to date with RN, it's best if you coded your need and made a PR. We had to do that for reset.\nHope I'm not coming off as mean, just the reality of the situation.\n. I stand corrected! Thanks @aksonov @rseemann.\n. ",
    "irisSchaffer": "@rgovindji, I have exactly the same problem and can't get it to work. May I ask what you mean by \"resetting on the first child when navigating away\"?\nAnd could this issue be re-opened? I don't think it is solved yet...\n. Thanks for the quick reply!\nOk, for me, I need to push to a scene in a different tab and not back to the root. So what I tried to do was to call Actions.myScene({type : 'reset' }), but although the back button disappears on the new scene, I still get the last scene I was in when going back to the old tab... See this stackoverflow question for details\n. Yeah, that is what we are currently doing, with a setTimeout, but it seems super hacky too...\n. Is there a way to access the store from within onRight / onLeft? We are looking into performing a logout and would need access to dispatch.\nAnother use case we've encountered is uploading a collection of files onRight. Since we don't have access to the props or the store though, we can't even check if we should already display the button or not. At the moment we simply added this functionality at the entry point of the next scene and redirect back if there are no files.\n. One problem with this approach is that you need to add a new variable for every new tab you introduce. Furthermore, this only applies for tabs.\nThe question was\n\nHow do I detect when the current scene is in focus when changing routes?\n\nWhile it is possible to listen for JUMP on a switch of tabs, listening to FOCUS won't do the trick, because the focused scene after a jump seems to be the parent tabs scene.\nI'm now wondering \u2013 since we get a prop selected on the tab icon, wouldn't it be easy enough to have a similar property on a scene-level?\n. Where would you keep track of the current scene then, if I may ask?\nWe have been trying to use a redux reducer reacting to FOCUS to save the currently focused scene, but on jump between tabs, although the JUMP goes to the right tab, the scene FOCUSed will be the parent scene (tabs).\nSurely there has to be a somewhat easy way to know which scene you are currently on?? Since non of the scenes are unmounted, it is essential to have a way of finding out if a scene is currently focused or not.\n. Also related to https://github.com/aksonov/react-native-router-flux/issues/925\n. Any reason why you are not using Actions.sceneName() for the navigation?\n```\nimport { Actions, Scene } from 'react-native-router-flux'\n//...\n {\n        Actions.myOtherScene()\n    }}\n/>\n```\n. ",
    "paulwcy": "Had the same issue in our app. Child screen titles are not always known ahead of time. Found a solution/workaround on version 2.3.1.\nDefine sub-screen with title = \"\"\n<Route name='VideoScreen'  component={VideoScreen} schema='sub' title=''     type='push'/>\nAnd when segueing to VideoScreen above, pass in title:\nActions.VideoScreen({title:\"New dynamic title\"})\n. ",
    "infacq": "how do I dynamically render title as component\n. @gmchaturvedi1 yeah figure it already?\n. @Talkwondo how do u do it?\n. @compojoom i get extra height. How do I get it rid\n. I think this has been solve before. See https://github.com/aksonov/react-native-router-flux/issues/1301\n. do you build your own component?\n. just use renderTitle={() => <Title/>}. See https://github.com/aksonov/react-native-router-flux/issues/1027 , https://github.com/aksonov/react-native-router-flux/issues/863\n. what do you mean?\n. ",
    "TomCaserta": "Okay, can ignore, I hadnt realised npm v just gave the information about the package from npm rather than listing the version/details of the current version installed. Looks like I was using 0.20.0 of react-native.\n. ",
    "aacotroneo": "As a temporal workaround.. adding a timeout seems to help setTimeout(()=> { \n                    Actions.dashboard();\n                },0);\n. no sorry, just worked on my code and dropped the workaround. I'll trace it\nlater and tell you if I find something\nOn Apr 8, 2016 7:01 PM, \"Rafael Turk\" notifications@github.com wrote:\n\nCan someone help/point to the potential source of this issue? I'll be\nhappy to work in a PR.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly or view it on GitHub\nhttps://github.com/aksonov/react-native-router-flux/issues/472#issuecomment-207624141\n. that one seems like another error. Does that redirect happen before the Router component is loaded? You need that so the Actions are generated.\nI have a splash screen myself and restore everything when the splash mounts.. and there I got the warning you posted first. \n. @codyhazelwood I think your problem is that you are rendering the navBar of the 'root' scene which doesn't have access to the Drawer context.\nYou should add <Scene key=\"root\" hideNavBar={true}> and let the child render their own NavBar\n. \n",
    "epas1117": "Sorry I didn't understood, the solution is to add a timeout?? setTimeout(()=> { Actions.dashboard(); },0);. Sorry I didn't understood, the solution is to add a timeout?? setTimeout(()=> { Actions.dashboard(); },0); . ",
    "msathis": "Doesn't work for type \"reset\" as well.\n. Shoudn't you call Actions.xxx() inside your custom onPress handler?\n. ",
    "jou": "Also ran into this, with 0.23.1\n. ",
    "donnguyen": "The workaround with position: absolute doesn't work anymore :(. Is there any other solution?\n. @mmazzarolo I am using \"react-native-router-flux\": \"^3.24.0\" as well. Tried with both RN 23 & 24, neither worked.\n. @mmazzarolo yes weird, below are screenshots when I haven't applied position: 'absolute', top: 0, left: 0, width: Metrics.DEVICE_WIDTH and when I have. Looks funny? \ud83d\ude04 \n\n\n. @aksonov I have created a PR to add my recent published app that using this plugin here: https://github.com/aksonov/react-native-router-flux/pull/712, please have a look. Thanks!\n. ",
    "miqmago": "@mmazzarolo this is great solution and works partially but the problem in my case is that the toolbar doesn't adapt when screen rotates .. :/\n. @mmazzarolo I would be very happy to contribute if I could, unfortunatelly it's my 4rth day with react-native and although it's exciting, I'm still lost in very basic things! :)\n. :sweat_smile: if it helps, I've managed to change the width with react-native-orientation plugin: \n``` javascript\nimport Orientation from 'react-native-orientation';\n...\nconst styles = StyleSheet.create({\n    toolbar: {\n        backgroundColor: Colors.PRIMARY,\n        height: Metrics.NAVBAR_HEIGHT,\n        position: 'absolute', top: 0, left: 0, // TO-DO\n    },\n});\nexport default class extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n        this.refreshToolbarWidth(Orientation.getInitialOrientation());\n    }\ncomponentDidMount() {\n    Orientation.addOrientationListener(this._orientationDidChange.bind(this));\n}\n\n_orientationDidChange(orientation) {\n    this.refreshToolbarWidth(orientation);\n    this.forceUpdate();\n}\n\nrefreshToolbarWidth(orientation) {\n    const { height, width } = Dimensions.get('window');\n    this.state.initialOrientation = this.state.initialOrientation || orientation;\n    if (this.state.initialOrientation === 'LANDSCAPE') {\n        this.state.toolbarWidth = orientation === 'LANDSCAPE' ? width : height;\n    } else {\n        this.state.toolbarWidth = orientation === 'LANDSCAPE' ? height : width;\n    }\n}\n\nrender() {\n    const title = this.props.getTitle(this.props.navigationState);\n    const subTitle = this.props.getTitle(this.props.navigationState.children[this.props.navigationState.index]);\n    return (\n        <IonIcons.ToolbarAndroid\n            title={title}\n            subtitle={subTitle}\n            navIconName=\"android-menu\"\n            actions={[\n                { title: 'Settings', iconName: 'gear-a', iconSize: 30, show: 'always' },\n                { title: 'Follow me on Twitter', iconName: 'social-twitter', iconColor: '#4099FF', show: 'ifRoom' },\n            ]}\n            style={[styles.toolbar, { width: this.state.toolbarWidth }]}\n            titleColor={TextColors.primaryLighText.textShadowColor}\n            subtitleColor={TextColors.secondaryLighText.textShadowColor}\n            overflowIconName=\"more\"\n            />\n    );\n}\n\n}\n```\n. ",
    "ThaJay": "This bug is still here because we need to set with to device width with custom toolbar like Icon.ToolbarAndroid like so:\n{\n  height:56\n, position:'absolute'\n, top:0\n, left:0\n, width: Dimensions.get('window').width\n}\nI tried to change the parent component and set alignItems to stretch according to the following comment: https://github.com/facebook/react-native/issues/2957#issuecomment-142664501\nbut it got complex pretty fast.\nI could maybe dig deeper and pr this but I'm not sure. Locking screen orientation on app start as a workaround for now.\n```\n<activity\n    ...\n    android:screenOrientation=\"nosensor\"\n\n```\n. but why not just have it do a render cycle on focus?\nit feels weird having to make a custom reducer just for some data that is already there (but does not show because no re-render)\nedit:\nthis re-renders on back:\n\nif (action.type === FOCUS_ACTION) {\n    return Object.assign({}, state, {number:state.number+1})\n}\nwith:\n@connect(\n  state => ({number: state.number})\n, dispatch => ({/*stuff*/})\n)\nexport default class Search extends React.Component {\n...\n. Sorry, haven't checked here in a few days.\nThanks @zxcpoiu for picking it up in the meantime\n. or in your Actions[scene]() call works as well, on the previous component:\nActions.details({title:getDisplayName()})\n. thanks for responding to my absence so quickly. We're all here to make the software better.\nremoving _ACTION sounds very good (but after this never change constants again). Also, I think we need to stress the importance of not using string literals when reducing a third party module, so I'd like to have every account of one being used in the docs replaced with the corresponding constant. Being able to import them from the index helps here as well. Also, I think it would be good to add this as a warning on the getting started page.\n. Are you talking about getting a fatal error when using this.props.children?\nIf so I have encountered the same problem. Haven't tied it to rnrf but also haven't been able to repro it on the react-native sample project.\nWhy do you think this is related to rnrf? I would really like to be able to make wrapper components again because this is hurting my code structure at the moment.\nThe link you posted does not help to clarify what you mean. Please be as specific as possible and if you have a small code example that would help greatly.\n. I see it as a dirty hack or a workaround\n. Drawer is implemented according to the docs.\nhttps://github.com/aksonov/react-native-router-flux/blob/master/docs/OTHER_INFO.md\nIt is just mentioned here as an example from my code. This would probably work the same for other use cases, but usually you can change state and navigate to another activity in one action. I think it is not possible to do it in one action in this case because drawer and activity are on different nesting levels.\nIf you were to use complex routing with scenes in different nesting levels you would probably have to call multiple actions as well. (and thus run into this bug)\n. https://github.com/oblador/react-native-vector-icons\n<Icon.ToolbarAndroid />\n. removed the contents of this post, made a separate issue for You are already in the root scene and put it there.\n. @PeterRock I'm still on v3.34.0 where my code works.\nI also did not encounter the error on quickly pressing the back button multiple times.\nI did change processBackPress to the following in the meantime:\nfunction processBackPress () {\n  if (!Actions.pop()) {\n    switch (sceneKey) {\n      case LOGIN:\n        return\n      case DRAWER:\n        Actions.refresh({key:'drawer', open:false})\n        sceneKey = SETTINGS\n        Actions.settings()\n        ;break\n      case SETTINGS:\n        confirmLogout(); break\n      case SCAN:\n        Actions.settings()\n    }\n  }\n  return true\n}\nThis fixed a few small bugs, the only thing that's not as good as it can be is the following: when you close the drawer(only present on 'settings') and want to return to the previous page ('login'), you have to press back twice before it executes confirmLogout. I accepted this because there is a 'log out' button on the drawer which makes this exact order of actions an edge case.. ",
    "iamawebgeek": "This is a little bit crazy. I was implementing custom navBar component and was kind of surprised to see it at the bottom of the page. I tried some stuff advised here and in other resources, but none of them helped, so I started to digging the source code of this and dependent libraries. After 2 hours of mind-blowing work, I ran against this piece of code on https://github.com/aksonov/react-native-experimental-navigation/blob/master/NavigationAnimatedView.js#L165\njsx\n    return (\n      <View\n        onLayout={this._onLayout}\n        style={this.props.style}>\n        <View style={styles.scenes} key=\"scenes\">\n          {scenes}\n        </View>\n        {overlay} <-- renders navBar\n      </View>\n    );\nI kind of felt some dirty stuff here, as navBar component is rendered after the scenes, so when I moved {overlay} above the View rendering the scenes, my custom navBar component finally got to the top.\nI am new to react-native and do not understand how everything works here and I can't think this is a right way, so I decided to put it here. I hope somebody would open PR, if this is the correct solution for the problem.. ",
    "lnmp4000": "I got round this with the following:\ntoolbar: {\n   height: 56,\n   elevation: 4,\n   position: 'absolute',\n   top:0,\n   left:0,\n   right:0\n },\nHope it helps someone.. ",
    "senthilsivanath": "Thanks a lot. API's are bit modified. Latest code that resets history\n```\nlet inTabMenu = (state) => {\n  if (state && state.children && state.children.length > 0) {\n    return state.children[0].name = \"tabBar\";\n  }\n  return false;\n};\nlet getActiveTabName = (state) => {\n  if (state && state.children && state.children.length > 0) {\n    let tabBar = state.children[0];\n    let tabIndex =  tabBar.index;\n    return tabBar.children[tabIndex].sceneKey;\n  }\n  return undefined;\n};\nlet getTabTreeIndex = (state) => {\n  if (state && state.children && state.children.length > 0) {\n    let tabBar = state.children[0];\n    let tabIndex =  tabBar.index;\n    return tabBar.children[tabIndex].index;\n  }\n  return undefined;\n};\nlet getTabRootName = (state) => {\n  if (state && state.children && state.children.length > 0) {\n    let tabBar = state.children[0];\n    let tabIndex =  tabBar.index;\n    let tabContainer = tabBar.children[tabIndex];\n    return tabContainer.children[0].sceneKey;\n  }\n  return undefined;\n};\nconst reducerCreate = params=> {\n  const defaultReducer = Reducer(params);\n  return (state, action)=> {\n    // this part makes sure that when a menuIcon is pressed AND you are already in that menu tree,\n    // it goes back to the root of that tree\n    if (action.type === ActionConst.JUMP && inTabMenu(state)) {\n      let activeTabName = getActiveTabName(state);\n      // We only want to reset if the icon is tapped when we're already in the view\n      if (activeTabName === action.key) {\n        // if we're already at root, do not do anything.\n        if (getTabTreeIndex(state) === 0) {\n          return state;\n        }\n        // snap to root.\n        let rootName = getTabRootName(state);\n        if (rootName) {\n          console.log(\"ACTION\", {key:rootName, type:'reset'});\n          return defaultReducer(state, {key:rootName, type:'reset'});\n        }\n      }\n    }\n    console.log(\"ACTION\", action);\n    return defaultReducer(state, action);\n  }\n};\n```\n. Have d same prob. How to navigate to diff page in same parent.\n<Scene key=\"drawer\" tabs>\n    <Scene key=\"artist\"/>\n    <Scene key=\"album\">\n             <Scene key=\"albumHome\" />\n             <Scene key=\"albumDetail\" clone={true} tabs={false} />\n    </Scene>\n</Scene>\nFrom albumHome page i navigate to album detail. From drawer when i press album, it loads album detail, how can i go back to albumHome directly though album detail was loaded previously.\n. Yes this can be overrided at scene level.\n```\nvar tabSceneMenu = {\n      onLeft :()=>{ MenuActions.openMenu() },\n      leftButtonImage:leftImage,\n      getLeftTitle:this.getLeftTitle, \n      getRightTitle:this.getRightTitle,\n      onRight :()=>{MenuActions.openRightMenu();} \n    }\n\n```\n. ",
    "ringzhz": "Additionally, I'm trying to use a custom icon for the leftButton.\nI'm not sure how to write comparable functionality in my button renderers without a reference to the navigationState.\nI can understand why you haven't done it yet, but might it be useful to bind the passed in renderers to this, as is done for the built-in renderers? How else would my button be able to access the drawer instance as to call its toggle method?\nUnless I'm missing something, which is the likely case, I'd suggest the following change. I will gladly create a PR if you agree.\nRewriting this:\nexport default class NavBar extends React.Component {\n    componentWillMount(){\n        const state = this.props.navigationState;\n        this._renderRightButton = this._renderRightButton.bind(this);\n        this._renderBackButton = this._renderBackButton.bind(this);\n        this._renderLeftButton = this._renderLeftButton.bind(this);\n        this._renderTitle = this._renderTitle.bind(this);\n        if (state.renderLeftButton){\n            this._renderLeftButton = state.renderLeftButton;\n        }\n        if (state.renderRightButton){\n            this._renderRightButton = state.renderRightButton;\n        }\n        if (state.renderBackButton){\n            this._renderBackButton = state.renderBackButton;\n        }\n    }\nas:\nexport default class NavBar extends React.Component {\n    componentWillMount(){\n        const state = this.props.navigationState;\n        this._renderRightButton = this._renderRightButton.bind(this);\n        this._renderBackButton = this._renderBackButton.bind(this);\n        this._renderLeftButton = this._renderLeftButton.bind(this);\n        this._renderTitle = this._renderTitle.bind(this);\n        if (state.renderLeftButton){\n            this._renderLeftButton = state.renderLeftButton.bind(this);\n            //or .bind(this.props.navigationState);\n        }\n        if (state.renderRightButton){\n            this._renderRightButton = state.renderRightButton.bind(this);\n        }\n        if (state.renderBackButton){\n            this._renderBackButton = state.renderBackButton.bind(this);\n        }\n    }\n. ",
    "huston007": "Okay, I'll dive deeper into my code to find the issue then. \nBy the way, 0.24.0-rc3 has no animations as well.\nHere is my router\n```\n\n\n\n      <Scene key=\"LogIn\"\n             duration={1}\n             component={() => <LoginForm auth={this.auth} onLogIn={this.checkAuthorization.bind(this)}/>}/>\n\n      <Scene key=\"IssueList\"\n             direction=\"horizontal\"\n             title=\"Issues\"\n             type=\"replace\"\n             component={IssueList}/>\n\n      <Scene key=\"ShowImage\"\n             title=\"Image\"\n             direction=\"vertical\"\n             component={ShowImage}/>\n\n      <Scene key=\"SingleIssue\"\n             title=\"Issue\"\n             direction=\"horizontal\"\n             component={SingleIssue}/>\n\n      <Scene key=\"CreateIssue\"\n             title=\"Create Issue\"\n             component={CreateIssue}/>\n    </Scene>\n  </Router>\n\n```\n. ",
    "itinance": "Arg.... \"React Native 0.22 is required\" in readme just found.\nsorry\n. Don't know what you mean. None of the listed issues in #525 are related to this issue. Also i use react-native 0.25 and not 0.22.\nPlease correct me if i misunderstood you\n. I published an example application as an entire copy of the original example application, which demonstrates this issue. In the launch screen i placed a simple counter with \"increment\" button. The counter is being incremented well in state, but not the view:\n. Ah yes, that was the right hint. This was a misunderstanding on my site. Thank you very much. For the sake of completeness and if others run into this issue too, i updated the Example to work. \n. But, this example is based on 0.22, the issue remains (i wrote it wrong in my opener comment)\n. https://github.com/itinance/react-native-router-flux/blob/master/ExampleRedux/package.json#L10\n. this everything reloads and for me it results in an endless loop of refreshing state\n. @steida: Upgrade to 0.31 will not fix it\n. Unfortunately not here:\n\"react\": \"15.3.0\",\n\"react-native\": \"0.31.0\",\n\"react-native-router-flux\": \"^3.30.0\",\nI've fixed it by myself directly in the node_modules/react-native-router-flux folder and have removed all proptypes\n. Any news on this? :). Glad you've answered! You're welcome. Let me checkout V4 and also V3's merge conflict.  Will do so in upcoming days. Please leave this PR open. I will turn back here to you as soon as possible.. A short note: after i've fully migrated to 4.0.0 i will care for this again. It is still required in two of our projects.. Please consider also this similar PR: https://github.com/aksonov/react-native-router-flux/pull/1476. Thx @ChristianTucker This helped!. PR sent. ok, thx for the hint. Did it.. ah good to know. thanks :) i wasn't sure if i should add the yarn.lock or not. @leyuan why not :) i thought it would be used for tests via jest and the react-test-renderer. But to be honest i am not familiar with that\ni will try another commit with removing react-dependency at all.\n. But anyways, the checks fail with \n\nModule ./jest/setup.js in the setupFiles option was not found.\n\nHas this something to do with the issue that we are discussing here? i think not.\n. i can confirm that this issue re-appears on iOS with 4.0.0-beta12 but has gone with all other 4.0.0_beta-versions before\nOn Android the beta12 is required for being able to draw the drawer-menuicon, but on iOS this \"unresolved\"-error occurs. Can you explain pls the following statement:\n\nBuilt-in reactnavigation drawer support (use drawer attribute for Scene and contentComponent to use your own Drawer)\n\nIn the API-documentation i've found nothing about it.\nIs the new drawer-Attribute simply a boolean setting to true when a scene is managed by a drawer? I understood, that contentCOmponent is the attribute where to pass the final Drawer-Component is it was with \"drawer\" in v3\n. Any drawbacks available? Running into the same issue after upgrade from v3.39 to v4.0.0.\nIf i understand it correctly: \nSomething like:\n```\n\n\n\n\n          <Scene key='main' hideNavBar={false} title='Chats'\n            type={ActionConst.REPLACE}\n            renderRightButton={this.renderRightButtonForChat}\n            component={ChatListViewScene} sceneStyle={getScreenContainerStyle()}\n            initial={ currentUser !== null && currentUser.id }\n          />\n\n```\nwill not work anymore when it comes to force a scene to appear like\nRouterActions.main() ?\nThanks for clarifing!. Thank you very much. WIll give it a new try tomorrow. @aksonov One more question please.\nHow can i exchange the Menu-Icon, that is used in the NavBar with drawer?\nI looked around in NavBar.js and tried to pass a property  \"leftButtonImage\" to the Scene. But this property isn't passed thru to the state, that will passed itself to renderBackButton()\n. Thank you very much!\nThere is one special detail: on the most outer Scene with drawer={true}the attribute drawerImage={...} needs to be placed.\nI think you should add this to the documentation :). This sounds great. I use 4.0.0-beta.11.\nWill upgrade and test again and give feedback. 4.0.0-beta.12 fixes this. Thank you!. @aksonov  Have you unpublished beta11 and beta12? We got an empty folder after \"npm install\" of an other library and while reinstalling neither beta11 nor beta12 can be found on npm.. ooops.... thx! don't know how it could work without the dot yesterday (or the dev was on del-key)^^\nHowever, can you tell pls the roadmap for 4.0.0 - non-beta?. yes, wouldn't think that. thats why i was asking :) with git remote show origin andgit branch i could see a lot of release-branches but not these both. was a bit confusing.\nOriginally I ran into this npm-issue that removes other dependencies sometimes and lost RNRF and all this got followed up with lots of side-issues... It's clear now :) . I faced the same issue after upgrading from v3 to v4. Both, the setState-Warning and also that all Rows in a ListView/FlatList got mounted and unmounted on changes in the redux-store . ",
    "imalbert": "I just had to npm install. I must have messed up my npm_module. Sorry for the false issue\n. ",
    "ruettiger": "I have got the same problem.\n. ",
    "Emilios1995": "@aksonov thank you for answering but I don't understand the solution you are proposing, would you mind elaborating a bit more? \n. @aksonov  you're right, I understand the problem. Would you please give me an example of how  I could implement that custom reducer to solve my problem? I'm not familiar enough with this library to figure it out on my own :(\n. ",
    "reyalpsirc": "Ah yes, it is. I searched on the issues but seems that I did not search enough...\n. I'm having exactly the same problem but, in my case it always happens when I call the modal. There's not a single time that it closes correctly.... ",
    "openGeeksLab": "sorry.\n. ",
    "yusufseyrek": "RN 24.0 is released but direction still not working\n. Thanks a lot @aksonov you are the best!\n. #372 \n. ",
    "dzmitryhil": "But how can I check is scene Default ?\n. ",
    "luco": "@aksonov I think there should have a method to control multiple routers. In e.g., I have two routers, one for my navigation, other for sidebar drawer. I can't communicate each other, I get the same missed route data for key=home as @zhouhao27 does.. +1 on this. Transitions drops to ~40fps while on Navigator remains at least ~52. @mastermoo It seems that react native reads scenes from top to bottom, so in this case, the direction=\"vertical\" is on bottom, and the code never goes thru horizontal animation.\nI'm trying to figure it out.. @redbaron76 Works perfect, but it applies to modal. How can I disable on modal animation only?. @pvroosendaal Try this:\nstatic navigationOptions = {\n    headerLeft:null\n  }. @jonrh Yea, it seems not. But I think that's essential. I don't say a router inside a router, but at least the props to control them individually.\n@asokol  Any thoughts?. Still getting the warning.. Oh, sorry. Thank you.\nNow it's working as expected.. @aksonov How can we achieve this on v4?\nI'm getting this. Once I open a modal and navigate into it, I cant dismiss the modal.. @aksonov Thanks a lot!. @aksonov Just updated. Tried all the options, but still not getting it:\nvar sceneConfig = {\n      navigationBarStyle: {'black'},\n      headerTitleStyle: {\n          color: 'white',\n          fontWeight: '500'\n      },\n      tintColor: '#fff',\n      navBarTintColor: '#fff',\n      navBarButtonImageColor: '#fff',\n      headerTruncatedBackTitle: 'Voltar',\n      headerBackTitleStyle: {\n        color: 'white',\n      },\n      cardStyle: {\n            backgroundColor: 'white'\n      }\n    }. @aksonov Getting this error:\n\n. @aksonov Tried all the options and didn't get it. What's the correct param?. I tried everything, specially using tintColor as you used on the example, but it didn't work.\n<Router createReducer={reducerCreate} tintColor='yellow'>. Yes, I do. But when I try to apply on my Router, it doesn't work. In fact, it works on my modals, but not on my card stack.. On example, it works. But not on my project. I'm setting this way:\n```\n  \n        <Scene key=\"modal\" modal hideNavBar tintColor='white'>\n            <Scene key=\"root\" hideNavBar tintColor='white'>\n              <Scene key=\"tabbar\" \n              tabs \n              showLabel={false} \n              tintColor='white'\n              tabBarComponent={this.tabBarElement}\n              headerBackTitle={'Back'}\n             >\n\n```\nAs you can see, I tried on every element.\n\n. But backTitle sets the text, right?\nEDIT\nWhen I set the backTitle, it works, but text becomes blue:\n\n. I thought as well, so I removed react-navigation from my project and it still not working. It's annoying me.\n. I can get the color on inspector:\n\n. I managed to work. Digging into your code I found that setting navBarButtonColor works for setting the tint color for the back arrow.\nThanks for your attention.. Ok, thanks for the feedback!. You can use this:\ncardStyle: {\n            backgroundColor: 'white'\n      }\nOn your scenes config.. How are you setting your scenes configs?. Try this way:\nvar sceneConfig = {\n      cardStyle: {\n            backgroundColor: 'white'\n      }\n}\n<Scene key=\"home\" {...sceneConfig}>\n                          <Scene key=\"homeMain\" component={Home}/>\n                        </Scene>\nIt should work.. Try tabBarPosition={'bottom'} on your Scene component.. @aksonov So, how should I dismiss a modal with card stack?. Oh, got it. I was struggling because I call a modal from my TabBar, so I gotta find which scene it's being rendered on my tabbar. Any tips?. Nevermind, got it with mobx. Thanks.. Where's your code?. It's a conflict issue. I'm gonna dig into it and let you know which is.. @aksonov Realized that react-native-mobx is conflicting somehow with v4.. @aksonov Figured it out.\nI was importing NavBar:\nimport {Actions, NavBar} from 'react-native-router-flux';\nRemoving fixed it. Should I submit a PR to Docs to specify that hideTabBar will only work if NavBar is not imported?. Not that I remember. Just removing it fixed.. Set hideNavBar on root.. @alexwasner Tried that. Didn't work.. @aksonov Still not working. Tried both type='replace' and {type: ActionConst.RESET}.\nShould I remove the plugin and add again?\n\n. @aksonov It gives me this error:\n\nMy structure is like this:\n```\n\n              <Scene key=\"welcome\">\n                  <Scene key=\"welcome1\" title=\"\" hideNavBar component={Welcome}/>\n              </Scene>\n\n              <Scene key=\"tabbar\" \n              tabBarPosition={'bottom'}\n              tabs \n              showLabel={false} \n              {...sceneConfig} \n              tabBarComponent={this.tabBarElement.bind(this)}\n             >\n\n                    <Scene key=\"home\" type=\"reset\" {...sceneConfig}>\n                      <Scene key=\"homeMain\" component={Home}/>\n\n...\n. @rajsuvariya When I try this method, it only allows me to pick scenes outside my root.. @aksonov Ok, you want to reproduce with example project, but this doesnt solve my problem. I want to understand what im doing wrong.. @aksonov Figured it out. It was the way my Scenes where nested. Had to do this way:\n                <Scene key=\"start\">\n                     <Scene key=\"welcome\">\n                         <Scene key=\"welcome1\" title=\"\" hideNavBar component={Welcome}/>\n                     </Scene>\n                  </Scene>\n\n                <Scene key=\"root\" hideNavBar>\n\n                    <Scene key=\"tabbar\" ...\n\n```\nLast question:\nIs there a way to transition and then reset the stack?. I'm getting a warning of maximum call stack when I perform a Actions.root({type: ActionConst.RESET});, but nothing with Actions.root().\nDo you have idea why?. Nervemind. Typo.\nThanks!. This would be awesome.. Any updates?. Is there any workaround for deep link while we wait?. It seems that it's something related to styles. In fact, the tabbar appears, but it's not properly styled, as you can see below:\n\ncc @aksonov\nEDIT\nIt seems that it's not rendering tabbar item children contents:\n\n. @aksonov Thanks!. Sure. I thought it was Android only because I only saw when tested on Android.. You can get the current tabbar index at props.navigationState.index with the tabBarComponent.. Try put your root scene inside modal.\nLike this:\n<Router>\n    <Scene key=\"modal\" modal>\n       <Scene key=\"root\" hideNavBar hideTabBar>\n            <Scene key=\"tabBar\" tabs>\n              <Scene key=\"listings\" component={Listings} title=\"Listings\" initial right={MapButton} />\n              <Scene key=\"favorites\" component={Favorites} title=\"Favorites\" />\n              <Scene key=\"messages\" component={Messages} title=\"Messages\" />\n              <Scene key=\"profile\" component={Profile} title=\"Profile\" />\n            </Scene>\n        </Scene>\n        <Scene key=\"map\" component={Map} title=\"Map\" hideNavBar />. It's right as @aksonov said. I had this issue yesterday, tried renderRight and headerRight.. Figured it out. Instead of using headerRight, the correct is right.. Try using headerLeft to render a custom component:\nstatic navigationOptions = {\n    headerLeft: (<View></View>)',\n  }\nI think backTitle doesn't work anymore. What works is headerBackTitle, which must be set on the previous screen.\n. @tendolukwago Can you post some screenshots? headerLeft should only render the back button and not break any styles.. +1 on this.. @aksonov Tips?. Where can I get navigationStore.reset? I didn't find it in props.. @aksonov suggestions?. But since React Navigation has this option, shouldn't RNRF has this as well?. I'm getting an error when trying to fork & run:\nENOENT: no such file or directory, uv_chdir\nStill, I think it's pretty simple what I'm suggesting. \n[Screen 1] -> [Screen 2] -> [Screen 1]\nHere, we are transitioning through screens. However, what I'm suggesting is when user reaches the last screen 1, RNRF resets the stack, not allowing the user to go back by NavBar or swipe.. @shukerullah Since RNRF is based on React Navigation, this is not possible yet. \nHowever there are some discussions on React Navigation repo based on this issue: \nreact-community/react-navigation/issues/2390\nreact-community/react-navigation/issues/1493\nWhat I was suggested to @aksonov is something similar as Facebook does on Navigator with resetTo:\nhttp://facebook.github.io/react-native/releases/0.34/docs/navigator.html#resetto\n\nresetTo(route) \nNavigate to a new scene and reset route stack.\n\nFrom what I've learned, it appears that react-navigation will approach this on V 1.0. I don't know if is possible to apply this on RNRF, but I think this is a must both on RNRF or react-navigation.. @aksonov Since we now can reset a child stack, would it be possible?\nSomething like resetTo from https://github.com/wix/react-native-navigation/. I think it's a great idea, since many of current v4 issues are related with react-navigation. \nIt would be nice to merge the best PR's from react-navigation.. Maybe this: https://github.com/react-community/react-navigation/pull/2222. @aksonov Can you provide a sample code using onEnter inside a component?\nThanks. mobx?. Nevermind. Got it working by using component directly.. Please, post some code.. Duplicate of #2236.\nNot possible yet. In fact, most of RNRF limitations are the same of the react-navigation.. +1 on this.\n\nEdit\n@brycepavey Achieved with navigationBarStyle bbw0. +1 . ",
    "ndarilek": "Can anyone create the react-native-router-flux tag on SO? I can't, I need 1500 reputation. I have a question but unfortunately Gitter is inaccessible to me, and since I can't create the SO tag I don't know where to ask it.\nThanks!\n. Just found this project today. Honestly, I think the fact that we can build native mobile apps cross-platform is pretty awesome in and of itself. I'd be happy to remain a RN version or so behind if it means I can use someone else's great module to ease app development, and routing/navigation is enough of an RN pain point that I'm happy to be a bit more conservative with upgrades if it means someone does the hard work of building a good router for me.\nIt might be enough to simply update the README.md with the latest working, stable combinations. If that means this only works with RN 0.23, then that's just a price people pay to have a decent routing solution. It seems a bit unrealistic for folks to expect you to keep up with RN when it is a rapidly-evolving project and you presumably have your own work and projects to maintain a living.\nThat said, what are the most recent known working combinations? I'm attempting to integrate this and am wondering if anything works with 0.24 or if I need to wait for 0.25. Unfortunately I've already updated my project and don't want to roll it back, but in the future I can hold off on upgrades if it means working with good third-party modules.\nThanks.\n. How difficult is the 3.x upgrade path? Right now I have a hand-rolled \nrouter but would like to switch to Redux, and cleaning up the router \nlogic would make that easier. I just don't know what my situation will \nbe if I start with 2.x when 3.X becomes compatible.\nThanks.\n. ",
    "tijs": "@aksonov i'm having a similar issue as @maitriyogin. While the example shows how to undertake actions on router changes it does not show how to take the default reducer and, for instance, use it with combineReducers to update the store state when using multiple reducers. I would like (expect) to be able to connect() the Router and then do something like this:\n```\nimport { Reducer as routerReducer } from 'react-native-router-flux';\nconst rootReducer = combineReducers({\n  application: applicationReducer,\n  auth: authReducer,\n  router: routerReducer,\n});\nexport default rootReducer;\n```\nBut that won't work. Instead it will complain about the initialState being empty.\n. Yeah that does seem a bit ehmm.. roundabout :)\n. @allenmanning if you follow the steps in the redux section of the current README it works like a charm!\n. ",
    "maitriyogin": "Hi tijs,\nthat's kind of what I was hoping for, in that it would follow the same pattern as react-redux-router ...\nI got round this by adding the reducer after it's created with the replaceReducers function injectAsyncReducer(store, 'router', defaultReducer);\ncombineReducers\nexport default function createReducer(asyncReducers) {\n  return combineReducers({\n    login,\n    ...asyncReducers\n  });\n}\n```\nfunction injectAsyncReducer(store, name, asyncReducer) {\n  store.asyncReducers[name] = asyncReducer;\n  store.replaceReducer(createReducer(store.asyncReducers));\n}\nconst reducerCreate = params=>{\n    const defaultReducer = Reducer(params);\n    injectAsyncReducer(store, 'router', defaultReducer);\n    return (state, action)=>{\n        console.log(\"ACTION:\", action);\n        store.dispatch(action);\n        return defaultReducer(state, action);\n    }\n};\n```\nwith reducerCreate being fed into the router \n<Provider store={store}>\n        <Router createReducer={reducerCreate}>\n....\nthis works but is kind of messy.\n/Stephen.\n. this is seriously awesome!\nHuge thanks, I'm sure the community is gonna love you for this...\nI'm still a bit confused as to why the RNRF Reducer is needed? \nIn the reducerCreate function why can't one use the reducer created in step1 ?\nI'll try this out and hopefully it'll make sense.\nSmiles,\n/Stephen.\n. ",
    "salbito": "@maitriyogin With your hack are you seeing all the Actions provided from react-native-router-flux? I'm only seeing the push & BackAction actions in my logs.\n. ",
    "deoqc": "Here is my workaround:\nCreate the reducer (Router.js file):\n``` javascript\nimport { Reducer } from 'react-native-router-flux';\n// needs to fake params to pass sanity checks\nconst routerReducer = Reducer({initialState: {key: true}, scenes: true});\nexport default function(state = null, action) {\n  if (action.type === 'RootContainerInitialAction') {\n      return action.initialState;\n  } else {\n      return routerReducer(state, action);\n  }\n}\n```\nThe default Reducer is a wrapper to set the initial state of the inner function returned, which is the actual reducer. I will deal with the initial state with the RootContainerInitialAction (an action passed to initialize by default), so I just mock an object to pass the sanity check.\nBut now you can go do:\n``` Javascript\n...\nimport router from './Router';\nexport default combineReducers({\n  awesomeReducer,\n  ...\n  router,\n});\n```\nOn the router component:\n``` Javascript\nimport store from 'path/to/store';\nconst createReducer = (params) => {\n  // initial state\n  const { initialState , scenes} = params;\n  const routerInitialState = {...initialState, scenes};\n  // dispatch actions\n  return (state, action) => {\n    // dispatch initial state of router\n    if(action.type === 'RootContainerInitialAction') {\n      action.initialState = routerInitialState;\n    }\n    store.dispatch(action);\n    return store.getState().router;\n  };\n};\n```\nand then:\nJavascript:\n...\n<Router createReducer={createReducer} >\n  <Scene ... >\n  ...\n  </Scene>\n</Router>\n...\nI'm using the intended reducer to actually dispatch the router action, and never used the state because the redux store is the source of truth (also, don't do it twice as which I think is the approach of @maitriyogin).\nUnfortunately, I was not able to use the connect function of 'react-redux' because I need to dispatch action and then to return the state (and I think is not possible to do it even with mergeProps). So I grabbed the store.\n\nI'm not using the package as intended, but I did not find entry points to do it better. Maybe if the Router component should have these entry points (custom getRouterState instead of hard coded as this.state, custom function to call to dispatch action instead of passing the reducer to the Router, etc.)\n. @lynndylanhurley your objective is to find the current screen? Can't you find it from the router state? If so, you could just find it from the now router state in the redux store (if following my approach).\nI think if you decouple the the dispatch and the state from the router, and having a default reducer and some other helpers (like getting the current state from router state), you could be more generic. \nThe current approach seems to be independent of flux implementation, instead of trying to have entry points to integrate with other implementations (redux, fb flux, nuclear). \nDon't think will be always possible to seamlessly integrate with them all (like nuclear require state to be immutable), but maybe a PR that could integrate redux, and shed some light on how do it for other libraries (like, how to convert the immutable state back and forth for nuclear) would be good.\n. Mostly agree with you @lynndylanhurley. Just thought that this PR is redux specific and only integrate with one feature, so maybe it would not conform with the purpose of the package creator/maintainer (but it is just a assumption and I came across this package few weeks ago, so you surely know better).\n. @lynndylanhurley just saw that to get the current screen is easy (from Reducer.js):\nJavascript\nfunction getCurrent(state) {\n  if (!state.children){\n        return state;\n    }\n  return getCurrent(state.children[state.index]);\n}\nSo, with my workaround just need getCurrent(store.getState().router). It just works, if you did the workaround to begin with, and it gives you more integration with redux (the router state is actually in the redux store, and every change of state passes to it). \nIf the router actually got it state from the store by design (like this.state = getRouterState || {}; in router instead of passing it in the createReducer) and if the Reducer had minor adaptions to not feel such hack solution, wouldn't it be better for you?\nI think we can get in a unobtrusive solution; really integrate with using combineReducers, which seems people that want to integrate with redux tries to do; and solve problems that we didn't anticipate (like yours need to get current view with just getCurrent).\n. ",
    "allenmanning": "Is it possible to consolidate this conversation into fresh doc posted on master?  After re-reading a few times, I'm still not 100% sure if what I got working is the best way of doing this with redux.\n. Are you talking about master or https://github.com/lynndylanhurley/react-native-router-flux#reduxflux\n. Thanks.  Great project.\n. ",
    "liorshalev01": "I see that this discussion is closed, however, related t o this discussion, I was wandering if it is possible for the Router to use the store on both directions - dispatching its actions to the store AND subscribing/reading its state from the store?\n. ",
    "krishbhattacharyya": "Hi @lynndylanhurley follow your documentation\nhttps://github.com/lynndylanhurley/react-native-router-flux#reduxflux\nMade a demo as per your instruction: \nhttps://github.com/krishbhattacharyya/Testroute\nNot working for me . Am I done something wrong here? \n. I have followed all the steps as per documentation. \nBut only changed in MyComponent :\nimport React, { Component } from 'react';\nimport { PropTypes, Text } from 'react-native';\nOne thing I have import the App from app.js in index.android.js\nI got the error:\n\n. Hi, \nYou should add one more thing  in app.js.\nimport { Router, Scene } from 'react-native-router-flux'; // Scene  is missing there \nThough I am getting another error- undefined is not an object ( evaluating 'el.props.component'); // Actions js \n. \n. In the provider section I have import MyComponent\nProvider store={store}\n         RouterWithRedux\n             // your scenes here\n             Scene key=\"MyComponent\" component={MyComponent} title=\"Replace\" type=\"replace\"\n        RouterWithRedux\n  Provider\n. @manishtuteja10 , after struggling long days I did not used this . But anyone can close this issue if it's worked.. ",
    "marcellkiss": "\nBut if I want to use redux devtools to time travel and it seems that react-native-router-flux ignores the changes in state and nothing happens.\nBasically our question, what do we have to do to make react-native-router-flux render state changes to enable time travel and generally control of navigation via state?\n\nI'd be also interested. Hi @diegocouto, could you make the replay work? . ",
    "angeloashmore": "526 should fix this.\n. ",
    "gendeld": "I have the same problem with RN 0.37 and RNRF 3.37. ",
    "Guardiannw": "Same problem\n. ",
    "egunsoma": "Same problem here.\nEven tried to stop animations onBack is clicked, but didn't help.\nAny ideas? . @aksonov And is there a way I can access the state of the component from onExit?. BTW onEnter works just fine.. Furthermore, I have the same issue when using popTo instead of pop.. ",
    "Iliyass": "Curious about this applyAnimation can you show an example of it's body, I have no clue what should it return!\nI'm also looking for having a custom Animation.\n. The same error, I thought it's just me. \nRN : 0.23.1\nReact: 0.14.8\nRN router flux: 3.2.13\n. ",
    "7ynk3r": "updates?\n. ",
    "dkaushik94": "Trying out for custom animations. If I get a hang of it I might try to contribute support of different animation styles. No luck yet. Anybody with a good example of how to apply animations in between on screen transitions. @aksonov . ",
    "babbarankit": "Thanks! issue was because of using 0.23.1\n. This seems to be working. I will need to improve my library design.\n. Thanks @rturk for this info \ud83d\udc4d \n. I am also have same issue.\n. ",
    "tiempham": "Use my way: renderRightButton={() => <SmallAvata />}\n                               renderBackButton={()=> <Icon name={\"nav-button\"} size={16} color=\"#fff\"/>}\n                               renderLeftButton={() =>  <Icon name={\"nav-button\"} size={16} color=\"#fff\"/>}\n                               hideBackImage={true}\nuse this in Scene options.\n. is it supported in v3.35 ?\n. @pewh. Do you have skype ID. I do with @ronyv89 way. It's working but Scene screen so lagging, with no error warm. \nMy code\n\n. ",
    "jamespearson": "I've submitted #534 to bring the Example app in to line with the currently supported version\n. ",
    "yang515648779": "I also want to ask this.\n. <Scene key=\"modal\" component={Modal}>\n                <Scene key=\"root\" \n                    hideNavBar={true}\n                    hideTabBar={true}\n                    navigationBarStyle={CommonStyles.navBarStyle} \n                    titleStyle={CommonStyles.navTitleStyle}\n                    backButtonImage={this.state.backButtonImage}\n                    >\n                    <Scene key=\"login\" component={LoginContainer} title=\"login\" hideNavBar={false}/>\n                    <Scene key=\"drawer\" component={Platform.OS==='ios'?null:Drawer} initial={true} hideNavBar={true}>\n                        <Scene key=\"main\" tabs={true} default='tab1' hideNavBar={true}>\n                            <Scene key=\"tab1\"\n                                component={MainContainer} \n                                title=\"main\"\n                                getTitle={()=>'App'} \n                                initial={true}\n                                navigationBarStyle={CommonStyles.navBarStyle} \n                                titleStyle={CommonStyles.navTitleStyle}\n                                leftButtonIconStyle={CommonStyles.menuBarBtnIconStyle}\n                                tabStyle={styles.bottomTabStyle}\n                                drawerImage={this.state.drawerImage}          \n                                icon={TabIcon}\n                                iconName='md-home'/>\n                            <Scene key=\"tab2\" \n                                component={UserCenterContainer}\n                                title=\"me\"\n                                getTitle={()=>'App'}  \n                                navigationBarStyle={CommonStyles.navBarStyle} \n                                titleStyle={CommonStyles.navTitleStyle} \n                                leftButtonIconStyle={CommonStyles.menuBarBtnIconStyle}\n                                tabStyle={styles.bottomTabStyle}\n                                drawerImage={this.state.drawerImage}\n                                icon={TabIcon} \n                                iconName='md-person'/>\n                        </Scene>\n                    </Scene>\n                </Scene>                    \n</Scene>\nconst styles = StyleSheet.create({\n    bottomTabStyle:{\n        paddingBottom:2\n    }\n});\nthis is my solution\uff0cbut the backButtonImage is still warning\u3002why the Proptype of backButtonImage is number?\n. <Scene key=\"tab3\"\n                                    title=\"\"\n                                    navigationBarStyle={CommonStyles.navBarStyle} \n                                    titleStyle={CommonStyles.navTitleStyle}\n                                    leftButtonIconStyle={CommonStyles.menuBarBtnIconStyle}\n                                    tabStyle={styles.bottomTabStyle}\n                                    drawerImage={this.state.drawerImage}                 \n                                    icon={TabIcon} \n                                    iconName={(Platform.OS==='android'?'md':Platform.OS)+'-add-circle'} \n                                    onSelect={this.onSelectTab.bind(this)}/>\nonSelectTab(el) {\n        if (!Actions[el.props.name]) {\n        throw new Error(\n            `No action is defined for name=${el.props.name} ` +\n            `actions: ${JSON.stringify(Object.keys(Actions))}`);\n        }\n        if(el.props.name!='tab3')\n        {\n            Actions[el.props.name]();\n            this.props.dispatch(ChangeMainSelectedTab(el.props.name));\n            this.props.dispatch(ChangeMainToolModalVisible(false));\n        }\n        else\n        {\n            this.props.dispatch(ChangeMainToolModalVisible(true));\n        }\n    }\nyou can overwrite onSelect of tabbar\n. ",
    "vinayr": "Yes I am using something similar, albeit simpler - \n```\n  onLayout = event => {\n    const { width, height } = event.nativeEvent.layout;\n    var newStyle;\nif (width > height) {\n  newStyle = update(this.state.style, {marginTop: {$set: 0}});\n} else {\n  newStyle = update(this.state.style, {marginTop: {$set: 64}});\n}\nthis.setState({style: newStyle});\n\n// hide navbar in landscape mode\nActions.refresh({hideNavBar: (width > height)});\n\n}\n``\n. I am having same issue. I use dark background for my navigation bar and whenever I hit back button the background changes to white before scene transition. @imWildCat did you find any workaround?\n. Changing thebackgroundColorofsceneStyle` to the same color as navigation bar's background color fixes for me.\n<Router sceneStyle={{ backgroundColor: 'black' }}>\n</Router>\n. @flaviotobi may I know how you solved this issue? I have exactly same problem where dropdown cuts off beyond navbar (android only, works fine in iOS). I am using just ListView for dropdown.\n. @flaviotobi Thanks for your response. I am not using any external modules for dropdown, just built-in ListView. So there is no height involved. I have already tried with absolute position and zIndex but no luck. I have pasted complete code at https://github.com/aksonov/react-native-router-flux/issues/1152. Could you please check if I am doing something wrong?\n. @flaviotobi yes I resolved it https://github.com/aksonov/react-native-router-flux/issues/1152#issuecomment-245876550. Thanks for your inputs though.\n. Apparently react-native does not support overlay in Android. I reworked and fixed my issue by creating a dropdown scene outside root scene and calling the scene from components.\n. ",
    "vdrg": "oh ok :(\nThanks for your help!\n. ",
    "jondot": "Sure, I've read #460, would renderBackButton(selected) help?\n. Should be good now.\nThis solution in general covers some of the cases, but for some, it's not enough sadly.\nIt might be worth to watch this https://github.com/ericvicenti/navigation-rfc/issues/70 meanwhile.\n. Sure, should be good now.\n. ",
    "gerard0315": "@jeroenbourgois I'm using React 0.14.8 and RN 0.24.0,RN is latest but React is not. However aksonov is using the same setup.\n. @jeroenbourgois yes I'm using v3.24 of the router\n. @jeroenbourgois oh i see, it's sort like https://github.com/aksonov/react-native-router-flux/issues/525. Author added support for RN0.24 yesterday I thought it would work\n. @Iliyass please see https://github.com/aksonov/react-native-router-flux/issues/525, the stable version supports only RN0.22 now i think\n. @msathis lol thanks just realized it\n. @doomsower  thx\n. ",
    "Olliepop": "The issue still exists when rolling back to react-native-router-flux 3.2.13. The issue is only remedied by reverting RN to 0.22. Definitely appears to be a NavigationExperimental issue.\nApologies @aksonov it's late, i'll be able to look into this deeper in the morning\n. @ms88privat react-native-router-flux v3.24.0 was released to support RN 0.24, so this is a valid issue. \n. @ms88privat Pavel removed 3.24 after huge issues were noticed with Navigator (NavigationExperimental) in RN 0.24 - see his comment here https://github.com/aksonov/react-native-router-flux/pull/553#issuecomment-212075299\n. Fixes didn't make it into 0.26. Holding out for 0.26.1.\n. @cridenour Cool - i thought this was a bug with intended functionality because of the actions dispatched when you click a tab. But if it's an enhancement i'd definitely be happy to work on it.\n. Question related to solving this issue:\nI had this solved in 3.22.23 by chaining Actions.pop() to the number of children in the tab scene navigationState. I want to submit a PR for 3.26.\nIn the latest implementation of TabBar within the onSelect method we're unable to execute multiple Actions i.e:\nActions.scene_1();\nActions.scene_2();\nActions.scene_3();\nIn the above example only the last action, Actions.scene_3() will be performed. Does anybody know why, and how we can perform all 3 within onSelect in TabBar? \nLink for convenience: https://github.com/aksonov/react-native-router-flux/blob/master/src/TabBar.js#L22\n. Re: my comment above. This is worth a seperate issue, as this issue (#717) is related to TabBar behaviour. \n. Actions.pop() isn't working in Example so closing until i fix that\n. @joenoon This isn't being used in production \ud83d\ude42   I'm modifying the TabBar source for the purpose of submitting a pull request. \nWhat i want to do is execute Actions.pop() for each child in the navigationState of a tab so that tapping a tab takes you back to the initial scene for that tab (functionality described in related issue #717) \nHere's what i'm trying to achieve in my fork. This concept works in previous versions of RNRF (i.e 3.22.23).\n. > This \"pop to root\" should only happen if the active tab is tapped again. Not if switching among different tabs. I think thats the common convention.\nI agree. This is what i'm using in my fork which is running 3.22.23, and achieves this: \n```\n    const state = this.props.navigationState;\n    let selected = state.children[state.index];\nif (selected.sceneKey === el.props.sceneKey && el.props.popChildrenOnSelect) {\n  el.props.children.forEach(() => {\n    Actions.pop();\n  });\n}\n\n```\nThe functionality is great but obviously popping each individual scene isn't the cleanest way to go about this.\nActions[key]({popChildren: popChildrenOnSelect}) i think this is a much cleaner pattern and will look into this further\n. ",
    "haabnaseem": "@Olliepop how did you use icons ? \n. @rturk Thanks will check it out too!, @sithobog \ud83d\udc4d the code you shared\nworks well, thank you very much\nOn Thu, Jul 14, 2016 at 1:03 AM, Rafael Turk notifications@github.com\nwrote:\n\n@haabnaseem https://github.com/haabnaseem @kaenry\nhttps://github.com/kaenry @sithobog https://github.com/sithobog Check\nthis code. It's from Facebook code. It's a simple elegant approach. If the\nuser is not logged it will show login screen, otherwise when authorized the\nfull app. Works really well.\nhttps://github.com/fbsamples/f8app/blob/master/js/F8App.js#L80\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/aksonov/react-native-router-flux/issues/913#issuecomment-232470089,\nor mute the thread\nhttps://github.com/notifications/unsubscribe/AG9jBm19AjyX5QSUTFroEk_s5-MRY-Noks5qVUSOgaJpZM4JIkTr\n.\n. i hope someone answers your question, i have been asking for this for a long time it seems there is no solution.\n. @rturk hi the problem is we have to drag screen from edge to swipe back, and it's laggy compared to default navigator, any idea to improve that?\n. @aksonov any suggestions ?\n. \n",
    "GeoffreyPlitt": "I am still getting this error, even though I seem to be using all the right versions of things:\nwebfreelance10@p26xx-webfree10:~/eaplay_good $ npm list | grep react\n\u251c\u2500\u252c react@0.14.8\n\u251c\u2500\u252c react-native@0.22.2\n\u2502 \u251c\u2500\u252c babel-preset-react-native@1.8.0\n\u2502 \u2502 \u251c\u2500\u2500 babel-plugin-react-transform@2.0.2\n\u2502 \u2502 \u251c\u2500\u2500 babel-plugin-transform-react-display-name@6.8.0\n\u2502 \u2502 \u251c\u2500\u252c babel-plugin-transform-react-jsx@6.8.0\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 babel-helper-builder-react-jsx@6.9.0\n\u2502 \u2502 \u251c\u2500\u2500 babel-plugin-transform-react-jsx-source@6.9.0\n\u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 babel-plugin-react-constant-elements@1.0.3\n\u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 babel-plugin-react-display-name@1.0.3\n\u2502 \u251c\u2500\u2500 react-timer-mixin@0.13.3\n\u2502 \u251c\u2500\u252c react-transform-hmr@1.0.4\n\u2502 \u2502 \u2514\u2500\u252c react-proxy@1.1.8\n\u2502 \u2502   \u2514\u2500\u2500 react-deep-force-update@1.0.1\n\u251c\u2500\u2500 react-native-button@1.6.0\n\u251c\u2500\u2500 react-native-calendar-events@0.1.4\n\u251c\u2500\u252c react-native-drawer-layout@0.5.1\n\u2502 \u2514\u2500\u2500 react-native-dismiss-keyboard@0.0.2\n\u251c\u2500\u2500 react-native-google-analytics-bridge@2.1.0\n\u251c\u2500\u2500 react-native-htmlview@0.5.0\n\u251c\u2500\u252c react-native-router-flux@3.22.23\n\u2502 \u2514\u2500\u2500 react-native-tabs@1.0.7\n\u251c\u2500\u2500 react-native-youtube@0.6.0\n\u251c\u2500\u252c react-redux@4.4.5\n\u2502 \u251c\u2500\u2500 hoist-non-react-statics@1.0.6\nSo I'm using react@0.14.8, react-native@0.22.2, and react-native-router-flux@3.22.23.\n@cridenour I saw your comment above, but I'm not able to upgrade to 0.24. What version of react-native-router-flux works for 0.22 ?\n. Also, is all of this affected by the version of Android being run in the simulator? Are my versions of node modules only expected to work up to a certain version of Android? Testing with API 23 for now.\n. ",
    "phproot": "fix react-native-router-flux/src/TabBar.js onSelect function.\n```\n...\nexport default class extends Component {\n    onSelect(el){\n        const state = this.props.navigationState;\n        if (!Actions[el.props.name]){\n            throw new Error(\"No action is defined for name=\"+el.props.name+\" actions:\"+JSON.stringify(Object.keys(Actions)));\n        }\n    // rewrite Actions[el.props.name]();\n    if (!el.props.modal) {\n        Actions[el.props.name]();\n    }\n    else {\n      el.props.onPress();\n    }\n}\n\n...\n```\nreact native files look like this:\n<Scene key=\"main\" tabs={true}>\n            ...\n            <Scene key=\"OtherPage\" component={OtherPageModal} modal={true} onPress={()=>alert(\"Test\")} ... />\n            ...\n        </Scene>\n. Sorry~\nPage.js\n```\nimport A from '../controllers/initial/A.Controller';\nimport B from '../controllers/initial/B.Controller';\nimport C from '../controllers/guest/C.Controller';\nexport {\n    A,\n    B,\n    C\n};\n```\nconnected component.\n. What are Can we merge?\n. if sceneStyle set paddingTop\u3001alignItems... \nmodal\u3001tabs\u3001NavigationRootView will inherit these attributes\u3002\n<Router createReducer={reducerCreate} getSceneStyle={getSceneStyle} sceneStyle={{marginTop:64}}>\n\n\nThis modification really does not solve practical problems. Only available in my project.\n@joenoon my english not good.soory.\n. @joenoon is xcode \nDebug -> View Debugging -> Capture View Hierarchy\n. Has been canceled\n. Well\uff01\n. Here I do not quite understand\n. ",
    "llgoer": "perfect!!!\n. @ptomasroos @joenoon thank you\n. ",
    "satya164": "@aksonov Why not copy the files into the project until the API becomes stable?\n. I really don't see any alternative right now. Moving NavigationExperimental into separate repo is much more difficult rather than just changing the require calls. We've to set up the Facebook infra for the separate repo, which is not simple.\n. This has come up a lot in the past. I think you'll find this discussion useful - https://github.com/facebook/react-native/issues/6184\n. ",
    "farwayer": "@sarovin there are bugs with replace type still :(\n. I don't think it is good idea to have separate copy of NavigationExperimental. It can become very different from original source very soon. imho it is better to wait API stabilization. The presence of the version matrix and supporting 0.28 will be enough.\n. It should have been minor version bump not patch...\n. ",
    "ptomasroos": "react-native has 0.26 has now a rc released since 5 days ago. \n. @Olliepop what fixes are you referring to?\n. Can you create a repo with the code @greatwitenorth ?\n. See #525 \n. ",
    "jmurzy": "@joenoon \nI've experienced similar issues in my own project. \ud83e\udd15\nTo answer your question:\n\ndoes this solve the problem with RN versions? Or are the copied sources still possibly dependent on certain RN features with the version it was released in?\n\nI believe it should solve your problems with React Native versions, and no, NavigationalExperimental isn't currently dependent on specific versions of React Native. I'm still not sure if I'd recommend forking as NavigationalExperimental is still a moving target and the new NavigationTransitioner comes with its own set of issues that need to be addressed before it can replace NavigationAnimatedView, &c. \nBut given the current state of this project it might be worth a try, and as I also mentioned in ericvicenti/navigation-rfc#81, here's how you'd do it. \nAs for your proposed alternative approach:\nI've been making some exciting progress on this front, react-router-native. [shameless plug] \nAnd for those of you who are interested, here's the pitch:\n\nReact Router community decided that a reducer-based paradigm similar to that of NavigationExperimental is better suited to native navigation. Transition to a reducer-based paradigm is also being discussed for the web. On the other hand, NavigationExperimental has no intention to support  a React Router-like interface and leaves the navigation state up to the developer to maintain.\nA declarative API removes the need to write boilerplate code and speeds up development. React Router Native follows React's Learn Once, Write Anywhere principle by providing a superset of React Router's API that marries React Router to NavigationExperimental.\n\nFeedback is greatly appreciated. \ud83d\ude05 \nAlso see jmurzy/react-router-native#7\n\ud83c\udf7a \n. ",
    "ivpusic": "the issue is inside case JUMP_ACTION: in Reducer. \nCurrently params are not injected into child. I did this, but still there is a problem that params cannot be removed if you call Actions. tab5() => in this case all params set by Actions.tab5({myProp: 'prop'}) should be removed. Reason why this is not easy right now is because currently lib is injecting received params directly into scene, not into some dedicated scene property.\nSo probably we would have to introduce scene.params property, and inject/remove params passed to Actions.NAME.\n. It could be an option, but doesn't sound convenient. \nAlso in case when we have Tabs and we use built in TabBar for navigation <Scene key=\"tab5\" component={TabView} title=\"Tab #5\" icon={TabIcon} />, then when we click on tab for this scene, action will be called (internally) as Actions.tab5(), so there is no way to pass additional (reset) arguments. \nEven if there is a way, you have to keep track of your previous params, and be careful when doing reset, which sounds, yeah...not the best solution\n. if you are using tabs right now you cannot. my workaround was to connect router with my local redux setup. that way you will get action jump/focus and it will contain route params. then you save param to your state and you can use it. How to do that is explained here https://github.com/aksonov/react-native-router-flux#reduxflux. \n. sorry, version is 3.26.1, it is my mistake. please reopen issue\n. @joenoon tnx for help. Is there any example of component={MyTabBar}? if not, are there any specific requirements which component should have in order to work correctly?\n. is there a way to disable requirement for tabbar completely? if I pass option hideTabBar={true}, then I expect that I don't need to think about it at all, and this was working in previous version. I need custom component on bottom => myCustomTabBar, which I am going to render/hide/change dynamically\n. without tabs=true you get push actions when doing navigation, instead of jump which is desired in my case...the workaround would be to use replace instead of push\n. @joenoon that wont work until you provide Icon=something. the reason is because hidetabbar is ignored, so default tab bar will still try to render and fail, becuase not all parameters are specified...I saw that this was changed recently, and now hidetabbar option only affects style, not rendering of default component\n. thanks for explanation...but, when I set hideTabBar to false, set dummy Icons to fix warnings and render my component on the bottom of screen, then if I click somewhere on the bottom of screen, I get redirected to some other page (somehow default tabBar is catching click events and processing them)...on android this is even more visible...my workaround for now is to put width and height to 0, using custom scene style property.\nAs you can see this is pretty big discussion and thing are unclear. I had no idea what new version bring and how to use it until I start reading code -> which most people does not want to do, because they want to save time by using library, not spend it. \nMy suggestion is to make docs update about things you told me here, so other people can know it as well. also better error message if Icon is missing would be good.\n. ",
    "pampang": "@ivpusic Sorry to bother you. Like calling Actions.tab5({myProp: 'prop'}), where can I get 'myProp'?\n. ",
    "rcholic": "it's my bad. After removing the curly braces in the import (see below), everything works beautifully:\nChanged\nimport { Main } from './Main';\nto \nimport Main from './Main';\n. ",
    "skrigs": "Ahhh yes.... Still getting use to the concept of the navigation state finally being fully represented within the store. My implementation is a bit like your v2 where I'm using the old Navigator. I will see how I go at implementing all my existing functionality (thinking it through I can't think of anything I couldn't achieve)\n. ",
    "philolo1": "@aksonov thanks, yeah it would be useful to add it to the readme. I see that the way i would like to do it its not easily possible without changing the interface, so your solution is fine, thanks!\n. i mean generally it should be possible to group any another component to a new component without breaking the code, but i understand that this might be hard to implement with the current Scenes etc. anyway i am ok with that and thanks for the fast response.\n. Well you can do something like shallowRendering https://facebook.github.io/react/docs/test-utils.html, but I am not sure that is really efficient and the way to go. I don't think that feature is that urgent, as long as there is a workaround.\n. It's not working for me, i thought I have to use <Scene panHandlers={null} />\n. I installed @3.22.23  @sf577  and i tried <Scene panHandlers={null} /> but i am still able to swipe back.\n. ok that explains it. Could you update your package.json in the example,\nthis is pointing to react 22.2.\n2016-05-05 17:23 GMT+09:00 sf577 notifications@github.com:\n\nWhat version of React Native are you using? panHandlers={null} is only\nsupported in 0.24+ I believe.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly or view it on GitHub\nhttps://github.com/aksonov/react-native-router-flux/issues/631#issuecomment-217101884\n. \n",
    "sf577": "This question was asked in the gitter however there was no answer as to how to achieve it. Has anybody worked out something close to best practice on this?\n. I've finally hacked it together by hiding the navbar in the router, and putting the custom NavBar in the scene component. It looks fine and I can pass a function callback in fairly easily however in general im not happy with the solution.\n. duplicate of #359 \n. What version of React Native are you using? panHandlers={null} is only supported in 0.24+ I believe.\n. yeah... its not quite that simple unfortunately. #525  #557 \n. ",
    "manideepcs024": "how can the tab text (which is key by default) can be changed or removed. . but still default key title comes with icon.how can we hide that. . can I render tabs or scene depending upon user type. i.e. if seller logs in I want to show different set of routes / tabs and if a customer logs in than different set of tabs. . ",
    "ciriac": "@cridenour Any idea if this has been fixed? Thanks.. ",
    "emroot": "gotcha, makes sense. thanks!\n. ",
    "mmelchio": "@emroot Could you explain how you got it to work?\nHow do your Login components look like?\nIn my case it couldn't fine the variable: connect. Do I need my own Reducer?\n. ",
    "KishPatel1996": "Do you know how?  Really new to all this, so I currently have no clue.\n. That seemed to fix things.  Thanks!\n. A cheap hack I use is to pad the view by Navigator.NavigationBar.Styles.General.TotalNavHeight.\nFor each scene, add the above line to 'paddingTop:'\n. ",
    "andreialecu": "Sorry for hijacking this. \nHow would you use this to put the TabBar at the top? I tried something similar but had to move the order of the components around in TabBar.js. This kind of worked, except the TabBar now shows above the navigation bar.\n. ",
    "mikefowler": "Any word on those upstream changes holding that branch back, @cridenour?\n. Neat. @lelandrichardson, do you know if this is on the radar for 0.25? If not, maybe we can sneak it in. What are the specific changes you're waiting for, @cridenour? Link to SHA?\n. \ud83d\udc4d \n. All but NavigationView in the constant block at the top are unused; could probably remove the extraneous ones and re-indent there, as well.\njs\nconst {\n  View: NavigationView,\n} = NavigationExperimental;\n. \ud83d\udc4d\nFor the group: an alternative is to disable the eslint rule for unused references on the line that uses destructuring to omit properties:\njs\n// eslint-disable-next-line no-unused-vars\nconst { children, style, scenes, reducer, createReducer, ...parentProps } = props;\n. Sounds good, y'all, I'll move this back to using rest properties.\n@charpeni: good call, this isn't in our styleguide. We've been using them a bit internally since React Native supports them. I'll move back to the approved way.\n. - Removed lodash dependency in favor of rest properties.\n- Pull propTypes out of static property\nFeel free to review again, y'all.\n. @aksonov, conflicts resolve. @charpeni, addressed your comment as well. Should be good to merge.\n. This LGTM!\n. Cool with me, @charpeni. Updated.\n. \ud83d\udc4d \n. If this is hitting the line-length rule, let's just break the arguments to separate lines:\njs\nexport function getInitialState(\n  route: { string: any }, \n  scenes: { string: any }, \n  position = 0, \n  props = {}\n) {\n  // ...\n}\n. ",
    "vermiculite": "Thanks I had never noticed. I made a work around as follows.\n<Router\n            navigationBarStyle={navigationBarStyle}\n            titleStyle={titleStyle}\n        >\nAssuming you want to apply for all scenes.\nStyle definitions are\n```\nconst navigationBarStyle = {\n    paddingTop: 0,\n    height: 44\n};\nconst titleStyle = {\n    marginTop: 0,\n    top: 10\n};\n```\n. ",
    "chzhuo": "When android.version >= 21 we can set component StatusBar's translucent to true. When translucent is set to true, the app will draw under the status bar. This is useful when using a semi transparent status bar color.  When android.version < 21 we can do like @vermiculite 's comment.\n. There be a problem. When android version is greater than 21, we can set component StatusBar is translucent.   When translucent is set to true, the app will draw under the status bar. This is useful when using a semi transparent status bar color. So should provide a api to control if  the nav bar height is 44 or 64. \nyou can see react-native #6876\n. @jeroenbourgois You code have a bug, should be 'Platform.OS', not 'Platform.os' in NavBar.js line 205\n@aksonov What's your  branch\n. ",
    "explorigin": "This is still an issue for me with 3.26.5 on RN 0.26.\n. Screenshot is no different from the first post.  We might leave this one closed.  I was able to work around it by setting <StatusBar translucent /> inside my scene.  Kinda a bummer to have to do that in each scene but it works.\n. Thanks, that's really helpful!\n. ",
    "yssmile": "@vermiculite it worked.Good job.. ",
    "anray": "@vermiculite \n\"react-native\": \"^0.39.2\",\n\"react-native-router-flux\": \"^3.37.0\",\nThis workaround doesn't work. There are no such props for Router: navigationBarStyle, titleStyle\nThere are only such prop types:\nconst propTypes = {\n  dispatch: PropTypes.func,\n  backAndroidHandler: PropTypes.func,\n  onBackAndroid: PropTypes.func,\n  onExitApp: PropTypes.func,\n};\nP.S. Here is how I set scenes: \nYou see that I hide navBar. So how can I reduce toolbar height in api 20-?\nI wanted to do it in styles of android app, but it by default uses *.NoActionBar style:\n Base application theme. \n\n        <!-- Customize your theme here. -->\n    . In my case Android actionBar was created with Views. So I need to fix sizes of those views. ",
    "baptistejamin": "Nope, i'm using npm so I did'n tried\n. True, with master, it's working :)\n. ",
    "xvalentino": "I believe it is in 2.x, but I thought Actions.refresh would only refresh the current scene. I want to refresh a scene that isn't in focus yet. Does this mean a custom render function would be what I need?\nThank you for the quick reply! I really appreciate it!\n. \"Actions.refresh(PARAMS) will update the properties of the current screen.\"\nDoes this mean the current screen that's in focus, or the scene this function is called in?\nSorry but it's not exactly clear to me how I specify which component I want to refresh.\n. The problem I was running into is in the 2.x implementation of tabs, render was only called when a route was the current route.\nUpgrading to v3 has fixed this.\nThank you!\n. @aksonov My app was crashing because I was on React Native 0.22. But when I update to 0.24 anything besides the current scene is not rendered/updated (just like in 2.x)\nIs there a stable 3.x release that will have the functionality I'm looking for? (updating component that aren't the current scene)\n. I ended up removing pop in several places and replaces them to just pointing to another tabbed route. But my app began crashing after updating to 3.x, and I read in some of the other issues that there were problems with RN 0.22. The app would crash after ~5 minutes of use. I couldn't track down what exactly was causing it. Should I go back and debug? After reading issues I assumed using the latest router version with RN 0.22 was unstable.\nWhat I'm going for is tabbed functionality so all of my components are always mounted, and being updated (not only when I make a component the current scene).\n. Yes\n. Do you know of any 3.x version that works with any RN version on Android? Or any combinations of version that could accomplish this?\nThank you for replying so quickly! Glad I can get this sorted out so fast.\n. I need to do this exact thing. On android there was a bug with using the tabbed views. Because the component wouldn't render the tab or update it if it was not in focus. Let me know if you figure this out, I'm still working on this.\nhttps://github.com/aksonov/react-native-router-flux/issues/599\n. Anyone figure this out? Or does anyone have an idea to where in the new Navigation API this functionality is at? What I'd like is to basically have all of my tabs be able to be updated, even if they aren't in focus.\n. Here's a branch where this is possible within tabbed Scenes. \nhttps://github.com/xvalentino/react-native-router-flux/commit/30fc19b65c99f869b6025f5d89014ab47eeef9f8.\nYou can call Actions.scene within componentDidMount or in an Image/Video's onLoad\n@ms88privat @kitolog \n. @aksonov yeah sure thing.\nI'm pretty sure this.props.navigationState is where the props would be for this component in TabbedView, I'm just going to have to make sure TabBar passes its props to it.\n. Can anyone find a way to test this in the example, I think I'd need a little help putting this into a PR\n(or if someone can point me into the right direction that'd be great)\n. @kdchang did you find a clean solution?\n. I'd like to disable animations. Anyone know if there is an easy way to implement this yet?\n. @Anthonyzou depending on what kind of scene it is, maybe you could reset the state in componentWillUnmount. \n. Hmm, how about adding a listener?\nhttps://facebook.github.io/react-native/docs/animated.html#addlistener\nOnce the value hits 0, call https://facebook.github.io/react-native/docs/animated.html#stopanimation and set the state back to whatever you need it to be.\nLet me know, as I haven't needed to do this yet, but could end up using this in the future.\nHope this helps! @Anthonyzou \n. To add onto what was said before, you probably want to use this.setTimeout, so you don't end up running into errors if the component unmounts before the function is called.\nhttps://facebook.github.io/react-native/docs/timers.html\n. No problem. Let me know how it goes @esutton !\n. I upgraded to react-native@0.27.0 after upgrading react and things work now.\n. What exactly do you expect to get? The number of routes you have?\nOne idea I have for this is maybe keep track of the stack in redux?\n. ",
    "cmouysset": "@r0b1n thanks! I'm not sure where to store the token if I don't store it in RootRouter. What do you mean by the in flux implementation?\n. Thanks @r0b1n.\nSo I've changed the RootRouter to:\nexport default class RootRouter extends Component {\nrender() {\n    return(\n    <Router>\n        <Scene key=\"drawer\" component={CP_Function}>\n            <Scene key=\"main\" >\n                <Scene key=\"home\" component={Home} title=\"Home\" hideNavBar />\n                <Scene key=\"login\" component={Login} initial={true} hideNavBar />\n                <Scene key=\"account\" component={Account} title=\"Account\" hideNavBar />\n                <Scene key=\"social\" component={Social} title=\"Social\" hideNavBar />\n                <Scene key=\"sales\" component={Sales} title=\"Sales\" hideNavBar />\n            </Scene>\n        </Scene>\n    </Router>);\n}\n}\nAnd put the loginFunction and the token state in CP_Function (see below). Is this how you'd recommend I do this? My concern is how can I get the token from Login.js to CP_Function so that I can change the state so that it's accessing on other pages?\nexport default class CP_Function extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            token: ''\n        };\n        this.loginFunction = this.loginFunction.bind(this);\n    }\n```\nloginFunction(token) {\n    this.setState({ \"token\": token });\n    console.log('RootRouter Token: ' + this.state.token);\n}\ncomponentDidMount() {\n    console.log(\"componentDidMount - hamburger listening\")\n    AppEventEmitter.addListener('hamburger.click', this.openControlPanel.bind(this));\n}\ncomponentWillUnMount() {\n    console.log(\"componentWillUnMount - hamburger listening removal\")\n    AppEventEmitter.removeListener('hamburger.click');\n}\ncloseControlPanel(navigation) {\n    if(navigation.type == 'AFTER_ROUTER_ROUTE') {\n        this.refs.navigation.close();\n        Actions.refresh({ \"token\": this.state.token });\n    }\n}\ncloseControlPanel = () => {\n    this._drawer.close()\n};\nopenControlPanel() {\n    console.log(\"Hamburger clicked!\");\n    this._drawer.open();\n}\nrender(){\n    const children = this.props.navigationState.children;\n    return (\n         this._drawer = ref}\n            type=\"overlay\"\n            content={}\n            tapToClose={true}\n            openDrawerOffset={0.2}\n            panCloseMask={0.2}\n            negotiatePan={true}\n            tweenHandler={(ratio) => ({\n             main: { opacity:Math.max(0.54,1-ratio) }\n        })}>\n            \n\n    );\n}\n```\n. ",
    "mckn": "I got this issue when I was running a version of react newer then the 0.22.*. So it might be the issue?\n. Yes, I have tried it but without any success :/\n. ",
    "seanfuture": "Running 0.22.2 of React Native resulted in same console log so in Actions.js the following change solved it for myself for now:\nBefore\niterate(root: Scene, parentProps = {}, refs = {}) {\n        assert(root.props, \"props should be defined for stack\");\n        const key = root.key || 'root';\n        assert(key, \"unique key should be defined \",root);\nAfter\niterate(root: Scene, parentProps = {}, refs = {}) {\n        assert(root.props, \"props should be defined for stack\");\n        const key = root.key || 'root';\n        if (this[key]){\n            return refs[key]\n        }\n        assert(key, \"unique key should be defined \",root);\n.. where the console.log(\"Key \" + root.key + \" is already defined!\"); statement appears below this.\nHope this helps\n. ",
    "ferologics": "fixed, i thought I can use it without the \n. ",
    "diogoviannaaraujo": "Im still trying to figure a way of doing this correctly.. My only solution right now is to conect router to my reducer, keep track of each change, and when its focus on the same tab i remount the component.\nReally thought that it would be awesome if scene called a onFocus propriety on the component everytime the reducer calls focus on that scene\n. Yeah, thats exaclty it!\nIs there a better way to implement that kind of behaviour? Where we would replace a scene with tabs for a scene without tabs, or is this really a bug?\n. If I open the app on Login and go to Itemprofile the navbar is there, but if I go from Home to Login and the navbar is alreadly gone it does not come back.\n. Someone could find any workaround this? Is forcing me to stay with RN 0.22 \ud83d\ude22 \n. You sure could connect your Icon to a redux state and show something for there.\nBut maybe there is a way to pass a prop to tab throu the router\n. ",
    "alex88": "Same here, RN0.26 \n<Router>\n        <Scene key=\"root\">\n          <Scene key=\"home\" component={Login} hideNavBar={true} initial={true}/>\n          <Scene key=\"timeline\" direction=\"vertical\" panHandlers={null} component={Timeline} />\n        </Scene>\n      </Router>\nand still on the second scene I can swipe to go back\n. With RN0.26 same thing, my code is:\n<Scene key=\"root\">\n      <Scene key=\"home\" component={Login} hideNavBar={true} initial={true}/>\n      <Scene key=\"timeline\" panHandlers={null} direction=\"vertical\" component={Timeline} />\n    </Scene>\nand I'm still able to swipe down to go to the previous view\n. Seems something related to https://github.com/facebook/react-native/issues/7626 which should be fixed with https://github.com/facebook/react-native/pull/7518\nHowever, after trying to upgrade RN to 0.27-rc it gives a fatal error when rendering Router\nreturn (\n      <Router>\n        <Scene key=\"root\">\n          <Scene key=\"home\" component={Login} initial={true}/>\n        </Scene>\n      </Router>\n    );\n\n. ",
    "markgoodyear": "I believe I have the same/similar issue. Here is a description of what I have:\n<Scene key=\"root\" hideNavBar={true} hideTabBar={true}>\n  <Scene key=\"Main\" component={Main} title=\"Main Scene\" initial={true} />\n  <Scene key=\"Settings\" direction=\"vertical\">\n    <Scene key=\"SettingsOne\" component={SettingsOne} title=\"Settings One\" />\n    <Scene key=\"SettingsTwo\" component={SettingsTwo} title=\"Settings Two\" panHandlers={null} />\n  </Scene>\n</Scene>\nI can swipe down on SettingsOne to pop back to the Main scene. If I navigate to SettingsTwo from SettingsOne I can still swipe down to pop back to the Main scene despite panHandlers={null} being set. Setting panHandlers={null} just prevents a horizontal gesture, but not the vertical one. When swiping down on SettingsTwo, it reveals the content of Main, but then will pop back to SettingsOne, and it'll slide up, which looks odd. Here is a gif of it to explain a little better: http://d.pr/i/grX1/1K3ywzTr.\nOf course, this could be intentional behaviour, but setting panHandlers={null} on SettingsTwo I would assume that scene would have no gestures at all.\n. ",
    "davidbiller": "panHandlers={null} dosent work on RN 0.26.3 \n. ",
    "mention-bot": "By analyzing the blame information on this pull request, we identified @bburnham to be a potential reviewer\n. By analyzing the blame information on this pull request, we identified @Kerumen, @ugputu18 and @Froelund to be potential reviewers\n. By analyzing the blame information on this pull request, we identified @ugputu18, @Froelund and @philipshurpik to be potential reviewers\n. By analyzing the blame information on this pull request, we identified @domchristie, @lelandrichardson and @lynndylanhurley to be potential reviewers\n. By analyzing the blame information on this pull request, we identified @aksonov, @Kerumen and @lynndylanhurley to be potential reviewers\n. By analyzing the blame information on this pull request, we identified @sarovin to be a potential reviewer\n. By analyzing the blame information on this pull request, we identified @sarovin to be a potential reviewer\n. By analyzing the blame information on this pull request, we identified @sarovin to be a potential reviewer\n. By analyzing the blame information on this pull request, we identified @sarovin to be a potential reviewer\n. By analyzing the blame information on this pull request, we identified @Froelund and @sarovin to be potential reviewers\n. By analyzing the blame information on this pull request, we identified @charpeni, @aksonov and @ffxsam to be potential reviewers\n. By analyzing the blame information on this pull request, we identified @sarovin, @lelandrichardson and @Zidail to be potential reviewers\n. By analyzing the blame information on this pull request, we identified @joenoon to be a potential reviewer\n. By analyzing the blame information on this pull request, we identified @lelandrichardson, @sarovin and @lynndylanhurley to be potential reviewers\n. By analyzing the blame information on this pull request, we identified @sarovin, @timzaak and @Froelund to be potential reviewers\n. By analyzing the blame information on this pull request, we identified @sylvainbaronnet, @timzaak and @Froelund to be potential reviewers\n. By analyzing the blame information on this pull request, we identified @lynndylanhurley, @mat2maa and @angeloashmore to be potential reviewers\n. By analyzing the blame information on this pull request, we identified @charpeni and @lelandrichardson to be potential reviewers\n. By analyzing the blame information on this pull request, we identified @charpeni, @lelandrichardson and @Mokto to be potential reviewers\n. By analyzing the blame information on this pull request, we identified @charpeni, @lelandrichardson and @Mokto to be potential reviewers\n. By analyzing the blame information on this pull request, we identified @r0b1n, @lynndylanhurley and @emrosenf to be potential reviewers\n. By analyzing the blame information on this pull request, we identified @sarovin, @r0b1n and @lynndylanhurley to be potential reviewers\n. By analyzing the blame information on this pull request, we identified @lynndylanhurley, @emrosenf and @r0b1n to be potential reviewers\n. By analyzing the blame information on this pull request, we identified @r0b1n, @adrianmc and @lynndylanhurley to be potential reviewers\n. By analyzing the blame information on this pull request, we identified @r0b1n, @lynndylanhurley and @emrosenf to be potential reviewers\n. By analyzing the blame information on this pull request, we identified @sarovin, @timzaak and @Froelund to be potential reviewers\n. By analyzing the blame information on this pull request, we identified @timzaak, @Froelund and @mat2maa to be potential reviewers\n. By analyzing the blame information on this pull request, we identified @philipshurpik, @timzaak and @Froelund to be potential reviewers\n. By analyzing the blame information on this pull request, we identified @Mokto, @charpeni and @ffxsam to be potential reviewers\n. By analyzing the blame information on this pull request, we identified @Mokto, @r0b1n and @charpeni to be potential reviewers\n. By analyzing the blame information on this pull request, we identified @sarovin, @philipshurpik and @domchristie to be potential reviewers\n. By analyzing the blame information on this pull request, we identified @sarovin, @timzaak and @Froelund to be potential reviewers\n. By analyzing the blame information on this pull request, we identified @adrianmc, @lynndylanhurley and @aksonov to be potential reviewers\n. By analyzing the blame information on this pull request, we identified @lelandrichardson, @joenoon and @lynndylanhurley to be potential reviewers\n. By analyzing the blame information on this pull request, we identified @joenoon, @sarovin and @charpeni to be potential reviewers\n. By analyzing the blame information on this pull request, we identified @joenoon, @adrianmc and @sarovin to be potential reviewers\n. By analyzing the blame information on this pull request, we identified @joenoon, @Mokto and @ffxsam to be potential reviewers\n. By analyzing the blame information on this pull request, we identified @adrianmc to be a potential reviewer\n. By analyzing the blame information on this pull request, we identified @joenoon, @sarovin and @charpeni to be potential reviewers\n. By analyzing the blame information on this pull request, we identified @Mokto, @ffxsam and @lelandrichardson to be potential reviewers\n. By analyzing the blame information on this pull request, we identified @adrianmc, @lynndylanhurley and @aksonov to be potential reviewers\n. By analyzing the blame information on this pull request, we identified @charpeni, @laurentnguyen42 and @Froelund to be potential reviewers\n. By analyzing the blame information on this pull request, we identified @joenoon, @sarovin and @charpeni to be potential reviewers\n. By analyzing the blame information on this pull request, we identified @joenoon and @bosung90 to be potential reviewers\n. By analyzing the blame information on this pull request, we identified @joenoon, @sarovin and @charpeni to be potential reviewers\n. By analyzing the blame information on this pull request, we identified @adrianmc, @lynndylanhurley and @rturk to be potential reviewers\n. By analyzing the blame information on this pull request, we identified @adrianmc, @lynndylanhurley and @rturk to be potential reviewers\n. By analyzing the blame information on this pull request, we identified @charpeni, @Mokto and @joenoon to be potential reviewers\n. By analyzing the blame information on this pull request, we identified @joenoon, @sibelius and @bosung90 to be potential reviewers\n. By analyzing the blame information on this pull request, we identified @adrianmc, @lynndylanhurley and @aksonov to be potential reviewers\n. By analyzing the blame information on this pull request, we identified @r0b1n, @sarovin and @joenoon to be potential reviewers\n. By analyzing the blame information on this pull request, we identified @joenoon, @sarovin and @charpeni to be potential reviewers\n. By analyzing the blame information on this pull request, we identified @sarovin, @timzaak and @Froelund to be potential reviewers\n. By analyzing the blame information on this pull request, we identified @adrianmc, @rturk and @lynndylanhurley to be potential reviewers\n. By analyzing the blame information on this pull request, we identified @r0b1n, @joenoon and @Zidail to be potential reviewers\n. By analyzing the blame information on this pull request, we identified @alextkd, @vpasquier and @timzaak to be potential reviewers\n. By analyzing the blame information on this pull request, we identified @adrianmc and @joenoon to be potential reviewers\n. By analyzing the blame information on this pull request, we identified @timzaak, @Froelund and @cornedor to be potential reviewers\n. By analyzing the blame information on this pull request, we identified @joenoon, @sarovin and @rseemann to be potential reviewers\n. By analyzing the blame information on this pull request, we identified @r0b1n, @rseemann and @bburnham to be potential reviewers\n. By analyzing the blame information on this pull request, we identified @bang88 to be a potential reviewer\n. By analyzing the blame information on this pull request, we identified @sarovin, @timzaak and @Froelund to be potential reviewers\n. By analyzing the blame information on this pull request, we identified @r0b1n, @adrianmc and @lynndylanhurley to be potential reviewers\n. By analyzing the blame information on this pull request, we identified @sarovin, @timzaak and @Froelund to be potential reviewers\n. By analyzing the blame information on this pull request, we identified @alextkd, @joenoon and @r0b1n to be potential reviewers\n. By analyzing the blame information on this pull request, we identified @alextkd, @joenoon and @r0b1n to be potential reviewers\n. By analyzing the blame information on this pull request, we identified @bang88 and @dalcib to be potential reviewers\n. By analyzing the blame information on this pull request, we identified @Swordsman-Inaction, @joenoon and @rseemann to be potential reviewers\n. By analyzing the blame information on this pull request, we identified @sarovin, @timzaak and @Froelund to be potential reviewers\n. By analyzing the blame information on this pull request, we identified @timzaak, @alextkd and @sarovin to be potential reviewers\n. By analyzing the blame information on this pull request, we identified @joenoon, @rseemann and @r0b1n to be potential reviewers\n. By analyzing the blame information on this pull request, we identified @joenoon, @rseemann and @domchristie to be potential reviewers\n. By analyzing the blame information on this pull request, we identified @adrianmc, @aksonov and @jeroenbourgois to be potential reviewers\n. By analyzing the blame information on this pull request, we identified @joenoon, @lelandrichardson and @Mokto to be potential reviewers\n. By analyzing the blame information on this pull request, we identified @joenoon, @mat2maa and @angeloashmore to be potential reviewers\n. By analyzing the blame information on this pull request, we identified @joenoon to be a potential reviewer\n. By analyzing the blame information on this pull request, we identified @Kerumen, @charpeni and @Mokto to be potential reviewers\n. By analyzing the blame information on this pull request, we identified @sarovin, @timzaak and @Froelund to be potential reviewers\n. @yanqiw, thanks for your PR! By analyzing the annotation information on this pull request, we identified @zxcpoiu, @rseemann and @joenoon to be potential reviewers\n. @K-Leon, thanks for your PR! By analyzing the annotation information on this pull request, we identified @adrianmc, @lynndylanhurley and @aksonov to be potential reviewers\n. @brien-crean, thanks for your PR! By analyzing the annotation information on this pull request, we identified @adrianmc, @aksonov and @dustin-H to be potential reviewers\n. @Roilan, thanks for your PR! By analyzing the annotation information on this pull request, we identified @andyschwob, @joenoon and @mat2maa to be potential reviewers\n. @ms88privat, thanks for your PR! By analyzing the annotation information on this pull request, we identified @adrianmc, @aksonov and @joenoon to be potential reviewers\n. @blackxored, thanks for your PR! By analyzing the annotation information on this pull request, we identified @joenoon, @charpeni and @lelandrichardson to be potential reviewers\n. @andrispraulitis, thanks for your PR! By analyzing the annotation information on this pull request, we identified @joenoon, @Mokto and @charpeni to be potential reviewers\n. @Olliepop, thanks for your PR! By analyzing the annotation information on this pull request, we identified @adrianmc, @lynndylanhurley and @aksonov to be potential reviewers\n. @aksonov, thanks for your PR! By analyzing the annotation information on this pull request, we identified @zxcpoiu, @r0b1n and @rseemann to be potential reviewers\n. @Swordsman-Inaction, thanks for your PR! By analyzing the annotation information on this pull request, we identified @joenoon, @sarovin and @charpeni to be potential reviewers\n. @aksonov, thanks for your PR! By analyzing the annotation information on this pull request, we identified @zxcpoiu, @joenoon and @rseemann to be potential reviewers\n. @sarovin, thanks for your PR! By analyzing the annotation information on this pull request, we identified @ms88privat, @Kerumen and @aksonov to be potential reviewers\n. @philipshurpik, thanks for your PR! By analyzing the annotation information on this pull request, we identified @zxcpoiu, @andyschwob and @joenoon to be potential reviewers\n. @stephenlaughton, thanks for your PR! By analyzing the annotation information on this pull request, we identified @bang88, @xirc and @dalcib to be potential reviewers\n. @sondremare, thanks for your PR! By analyzing the annotation information on this pull request, we identified @zxcpoiu, @sarovin and @adrianmc to be potential reviewers\n. @enapupe, thanks for your PR! By analyzing the annotation information on this pull request, we identified @zxcpoiu, @aksonov and @r0b1n to be potential reviewers\n. @Dean177, thanks for your PR! By analyzing the annotation information on this pull request, we identified @sondremare, @adrianmc and @zxcpoiu to be potential reviewers\n. @eronisko, thanks for your PR! By analyzing the annotation information on this pull request, we identified @sondremare, @adrianmc and @zxcpoiu to be potential reviewers\n. @joenoon, thanks for your PR! By analyzing the annotation information on this pull request, we identified @ms88privat, @Kerumen and @aksonov to be potential reviewers\n. @blackxored, thanks for your PR! By analyzing the annotation information on this pull request, we identified @sarovin, @timzaak and @Froelund to be potential reviewers\n. @sarovin, thanks for your PR! By analyzing the annotation information on this pull request, we identified @ms88privat, @Kerumen and @aksonov to be potential reviewers\n. @sarovin, thanks for your PR! By analyzing the annotation information on this pull request, we identified @joenoon, @andyschwob and @mat2maa to be potential reviewers\n. @aksonov, thanks for your PR! By analyzing the annotation information on this pull request, we identified @sarovin and @ms88privat to be potential reviewers\n. @doomsower, thanks for your PR! By analyzing the annotation information on this pull request, we identified @rseemann, @Swordsman-Inaction and @aksonov to be potential reviewers\n. @sarovin, thanks for your PR! By analyzing the annotation information on this pull request, we identified @Mokto, @charpeni and @joenoon to be potential reviewers\n. @charpeni, thanks for your PR! By analyzing the annotation information on this pull request, we identified @philipshurpik, @bosung90 and @qbig to be potential reviewers\n. @stephy, thanks for your PR! By analyzing the annotation information on this pull request, we identified @joenoon, @andyschwob and @mat2maa to be potential reviewers\n. @stephy, thanks for your PR! By analyzing the annotation information on this pull request, we identified @adrianmc, @zxcpoiu and @philipshurpik to be potential reviewers\n. @wtfil, thanks for your PR! By analyzing the annotation information on this pull request, we identified @sarovin, @adrianmc and @zxcpoiu to be potential reviewers\n. @Swordsman-Inaction, thanks for your PR! By analyzing the annotation information on this pull request, we identified @zxcpoiu, @adrianmc and @aksonov to be potential reviewers\n. @tadas-subonis, thanks for your PR! By analyzing the annotation information on this pull request, we identified @zxcpoiu, @r0b1n and @alextkd to be potential reviewers\n. @moschan, thanks for your PR! By analyzing the annotation information on this pull request, we identified @sarovin, @timzaak and @joenoon to be potential reviewers\n. @benstepp, thanks for your PR! By analyzing the annotation information on this pull request, we identified @r0b1n, @zxcpoiu and @rseemann to be potential reviewers\n. @vonovak, thanks for your PR! By analyzing the annotation information on this pull request, we identified @joenoon, @andyschwob and @mat2maa to be potential reviewers\n. @vonovak, thanks for your PR! By analyzing the annotation information on this pull request, we identified @philipshurpik, @joenoon and @andyschwob to be potential reviewers\n. @januswel, thanks for your PR! By analyzing the annotation information on this pull request, we identified @sarovin, @adrianmc and @zxcpoiu to be potential reviewers\n. @januswel, thanks for your PR! By analyzing the annotation information on this pull request, we identified @joenoon, @SudoPlz and @Swordsman-Inaction to be potential reviewers\n. @lesniakania, thanks for your PR! By analyzing the annotation information on this pull request, we identified @sarovin, @Froelund and @sondremare to be potential reviewers\n. @fkoester, thanks for your PR! By analyzing the annotation information on this pull request, we identified @blackxored, @charpeni and @sarovin to be potential reviewers\n. @fkoester, thanks for your PR! By analyzing the annotation information on this pull request, we identified @ms88privat, @joenoon and @sarovin to be potential reviewers\n. @zxcpoiu, thanks for your PR! By analyzing the annotation information on this pull request, we identified @adrianmc, @philipshurpik and @Swordsman-Inaction to be potential reviewers\n. @zxcpoiu, thanks for your PR! By analyzing the annotation information on this pull request, we identified @adrianmc and @aksonov to be potential reviewers\n. @xiaokekeT, thanks for your PR! By analyzing the annotation information on this pull request, we identified @joenoon, @sarovin and @zxcpoiu to be potential reviewers\n. @eulo, thanks for your PR! By analyzing the annotation information on this pull request, we identified @adrianmc, @lynndylanhurley and @aksonov to be potential reviewers\n. @AkiraXue, thanks for your PR! By analyzing the annotation information on this pull request, we identified @sarovin, @Swordsman-Inaction and @timzaak to be potential reviewers\n. @bifrost, thanks for your PR! By analyzing the annotation information on this pull request, we identified @joenoon, @zxcpoiu and @bang88 to be potential reviewers\n. @AkiraXue, thanks for your PR! By analyzing the annotation information on this pull request, we identified @sarovin, @Swordsman-Inaction and @timzaak to be potential reviewers\n. @aksonov, thanks for your PR! By analyzing the annotation information on this pull request, we identified @benstepp, @zxcpoiu and @r0b1n to be potential reviewers\n. @n7olkachev, thanks for your PR! By analyzing the annotation information on this pull request, we identified @charpeni, @aksonov and @joenoon to be potential reviewers\n. @aksonov, thanks for your PR! By analyzing the annotation information on this pull request, we identified @zxcpoiu, @r0b1n and @joenoon to be potential reviewers\n. @atlanteh, thanks for your PR! By analyzing the annotation information on this pull request, we identified @Swordsman-Inaction, @joenoon and @zxcpoiu to be potential reviewers\n. @RafalWilinski, thanks for your PR! By analyzing the annotation information on this pull request, we identified @aksonov, @adrianmc and @brien-crean to be potential reviewers\n. @AkiraXue, thanks for your PR! By analyzing the annotation information on this pull request, we identified @sarovin, @Swordsman-Inaction and @lesniakania to be potential reviewers\n. @chetstone, thanks for your PR! By analyzing the annotation information on this pull request, we identified @charpeni, @aksonov and @joenoon to be potential reviewers\n. @erdostom, thanks for your PR! By analyzing the annotation information on this pull request, we identified @adrianmc, @lynndylanhurley and @aksonov to be potential reviewers\n. @compojoom, thanks for your PR! By analyzing the annotation information on this pull request, we identified @charpeni, @philipshurpik and @bosung90 to be potential reviewers\n. @sadika9, thanks for your PR! By analyzing the annotation information on this pull request, we identified @brien-crean, @adrianmc and @ms88privat to be potential reviewers\n. @rseemann, thanks for your PR! By analyzing the annotation information on this pull request, we identified @zxcpoiu, @bifrost and @Swordsman-Inaction to be potential reviewers\n. @stereodenis, thanks for your PR! By analyzing the annotation information on this pull request, we identified @lesniakania, @sarovin and @timzaak to be potential reviewers\n. @stereodenis, thanks for your PR! By analyzing the annotation information on this pull request, we identified @sarovin, @Swordsman-Inaction and @sbycrosz to be potential reviewers\n. @AkiraXue, thanks for your PR! By analyzing the annotation information on this pull request, we identified @sarovin, @Swordsman-Inaction and @atlanteh to be potential reviewers\n. @AkiraXue, thanks for your PR! By analyzing the annotation information on this pull request, we identified @sarovin, @lesniakania and @Swordsman-Inaction to be potential reviewers\n. @roura356a, thanks for your PR! By analyzing the annotation information on this pull request, we identified @aksonov, @adrianmc and @brien-crean to be potential reviewers\n. @charpeni, thanks for your PR! By analyzing the annotation information on this pull request, we identified @Mokto, @joenoon and @ffxsam to be potential reviewers\n. @openmynet, thanks for your PR! By analyzing the annotation information on this pull request, we identified @januswel, @sarovin and @lesniakania to be potential reviewers\n. @AkiraXue, thanks for your PR! By analyzing the annotation information on this pull request, we identified @sarovin, @lesniakania and @timzaak to be potential reviewers\n. @7kfpun, thanks for your PR! By analyzing the annotation information on this pull request, we identified @adrianmc, @lynndylanhurley and @aksonov to be potential reviewers\n. @peteychuk, thanks for your PR! By analyzing the annotation information on this pull request, we identified @zxcpoiu, @aksonov and @adrianmc to be potential reviewers\n. @alexicum, thanks for your PR! By analyzing the annotation information on this pull request, we identified @aksonov, @zxcpoiu and @bifrost to be potential reviewers\n. @jankalfus, thanks for your PR! By analyzing the history of the files in this pull request, we identified @xirc, @bang88 and @dalcib to be potential reviewers.\n. @hilkeheremans, thanks for your PR! By analyzing the history of the files in this pull request, we identified @sarovin, @januswel and @lesniakania to be potential reviewers.\n. @jgkim, thanks for your PR! By analyzing the history of the files in this pull request, we identified @januswel, @sarovin and @lesniakania to be potential reviewers.\n. @moaxaca, thanks for your PR! By analyzing the history of the files in this pull request, we identified @adrianmc, @zxcpoiu and @peteychuk to be potential reviewers.\n. @dragfire, thanks for your PR! By analyzing the history of the files in this pull request, we identified @adrianmc, @brien-crean and @ms88privat to be potential reviewers.\n. @ecoinomist, thanks for your PR! By analyzing the history of the files in this pull request, we identified @adrianmc, @lynndylanhurley and @aksonov to be potential reviewers.\n. @dragfire, thanks for your PR! By analyzing the history of the files in this pull request, we identified @adrianmc, @brien-crean and @lynndylanhurley to be potential reviewers.\n. @mohanaravind, thanks for your PR! By analyzing the history of the files in this pull request, we identified @adrianmc, @brien-crean and @dragfire to be potential reviewers.\n. @wrozka, thanks for your PR! By analyzing the history of the files in this pull request, we identified @alexicum, @aksonov and @zxcpoiu to be potential reviewers.\n. @Simek, thanks for your PR! By analyzing the history of the files in this pull request, we identified @adrianmc, @peteychuk and @zxcpoiu to be potential reviewers.\n. @bifrost, thanks for your PR! By analyzing the history of the files in this pull request, we identified @zxcpoiu, @bang88 and @adrianmc to be potential reviewers.\n. @kgritesh, thanks for your PR! By analyzing the history of the files in this pull request, we identified @moschan, @sarovin and @lesniakania to be potential reviewers.\n. @sarovin, thanks for your PR! By analyzing the history of the files in this pull request, we identified @lesniakania, @timzaak and @wtfil to be potential reviewers.\n. @yasaichi, thanks for your PR! By analyzing the history of the files in this pull request, we identified @januswel, @joenoon and @sarovin to be potential reviewers.\n. @ximenean, thanks for your PR! By analyzing the history of the files in this pull request, we identified @zxcpoiu, @adrianmc and @philipshurpik to be potential reviewers.\n. @91hong, thanks for your PR! By analyzing the history of the files in this pull request, we identified @sarovin, @Froelund and @joenoon to be potential reviewers.\n. @sarovin, thanks for your PR! By analyzing the history of the files in this pull request, we identified @alexicum, @aksonov and @zxcpoiu to be potential reviewers.\n. @inferusvv, thanks for your PR! By analyzing the history of the files in this pull request, we identified @joenoon and @sarovin to be potential reviewers.\n. @sarovin, thanks for your PR! By analyzing the history of the files in this pull request, we identified @charpeni, @alexicum and @joenoon to be potential reviewers.\n. @wcandillon, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bang88, @xirc and @dalcib to be potential reviewers.. @MechanicKim, thanks for your PR! By analyzing the history of the files in this pull request, we identified @joenoon, @andyschwob and @mat2maa to be potential reviewers.. @agtb, thanks for your PR! By analyzing the history of the files in this pull request, we identified @charpeni and @philipshurpik to be potential reviewers.. @charpeni, thanks for your PR! By analyzing the history of the files in this pull request, we identified @compojoom, @philipshurpik and @bosung90 to be potential reviewers.. @johnstonmatt, thanks for your PR! By analyzing the history of the files in this pull request, we identified @adrianmcli, @zxcpoiu and @philipshurpik to be potential reviewers.. @dannycochran, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bang88, @xirc and @dalcib to be potential reviewers.. @charpeni, thanks for your PR! By analyzing the history of the files in this pull request, we identified @lelandrichardson, @joenoon and @Mokto to be potential reviewers.. @MechanicKim, thanks for your PR! By analyzing the history of the files in this pull request, we identified @zxcpoiu, @sarovin and @charpeni to be potential reviewers.. @Swordsman-Inaction, thanks for your PR! By analyzing the history of the files in this pull request, we identified @zxcpoiu, @bifrost and @r0b1n to be potential reviewers.. @andrispraulitis, thanks for your PR! By analyzing the history of the files in this pull request, we identified @januswel, @joenoon and @sarovin to be potential reviewers.. @DonnieWest, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bifrost, @zxcpoiu and @MechanicKim to be potential reviewers.. @itinance, thanks for your PR! By analyzing the history of the files in this pull request, we identified @januswel, @sarovin and @adrianmcli to be potential reviewers.. @luhui, thanks for your PR! By analyzing the history of the files in this pull request, we identified @lesniakania, @sarovin and @timzaak to be potential reviewers.. @timkendall, thanks for your PR! By analyzing the history of the files in this pull request, we identified @MechanicKim, @joenoon and @andyschwob to be potential reviewers.. @javiercr, thanks for your PR! By analyzing the history of the files in this pull request, we identified @adrianmcli, @zxcpoiu and @philipshurpik to be potential reviewers.. @psychoo118, thanks for your PR! By analyzing the history of the files in this pull request, we identified @moschan, @sarovin and @lesniakania to be potential reviewers.. @ywongweb, thanks for your PR! By analyzing the history of the files in this pull request, we identified @adrianmcli, @lynndylanhurley and @aksonov to be potential reviewers.. @davidshore, thanks for your PR! By analyzing the history of the files in this pull request, we identified @januswel, @fkoester and @joenoon to be potential reviewers.. @Piwaii, thanks for your PR! By analyzing the history of the files in this pull request, we identified @MechanicKim, @phproot and @joenoon to be potential reviewers.. @Swordsman-Inaction, thanks for your PR! By analyzing the history of the files in this pull request, we identified @MechanicKim, @zxcpoiu and @bifrost to be potential reviewers.. @pocesar, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bang88, @xirc and @dalcib to be potential reviewers.. @jakecraige, thanks for your PR! By analyzing the history of the files in this pull request, we identified @sarovin, @lesniakania and @timzaak to be potential reviewers.. @iyegoroff, thanks for your PR! By analyzing the history of the files in this pull request, we identified @bang88, @xirc and @dalcib to be potential reviewers.. @jmarrot, thanks for your PR! By analyzing the history of the files in this pull request, we identified @sarovin, @lesniakania and @timzaak to be potential reviewers.. @indatawetrust, thanks for your PR! By analyzing the history of the files in this pull request, we identified @wrozka, @bifrost and @zxcpoiu to be potential reviewers.. @superandrew213, thanks for your PR! By analyzing the history of the files in this pull request, we identified @januswel, @sarovin and @lesniakania to be potential reviewers.. @BrendanBerkley, thanks for your PR! By analyzing the history of the files in this pull request, we identified @xirc, @bang88 and @dalcib to be potential reviewers.. @lucianomlima, thanks for your PR! By analyzing the history of the files in this pull request, we identified @sarovin, @wtfil and @MechanicKim to be potential reviewers.. @andwaal, thanks for your PR! By analyzing the history of the files in this pull request, we identified @xirc, @bang88 and @dalcib to be potential reviewers.. @benvium, thanks for your PR! By analyzing the history of the files in this pull request, we identified @sarovin, @adrianmcli and @wtfil to be potential reviewers.. @soulwu, thanks for your PR! By analyzing the history of the files in this pull request, we identified @joenoon, @januswel and @sarovin to be potential reviewers.. @jeongmincha, thanks for your PR! By analyzing the history of the files in this pull request, we identified @adrianmcli, @brien-crean and @dragfire to be potential reviewers.. @Jlexyc, thanks for your PR! By analyzing the history of the files in this pull request, we identified @joenoon, @MechanicKim and @mat2maa to be potential reviewers.. @ahanriat, thanks for your PR! By analyzing the history of the files in this pull request, we identified @joenoon, @MechanicKim and @mat2maa to be potential reviewers.. @filipemonteiroth, thanks for your PR! By analyzing the history of the files in this pull request, we identified @sarovin, @wtfil and @MechanicKim to be potential reviewers.. @jman48, thanks for your PR! By analyzing the history of the files in this pull request, we identified @r0b1n, @MechanicKim and @zxcpoiu to be potential reviewers.. @jman48, thanks for your PR! By analyzing the history of the files in this pull request, we identified @r0b1n, @MechanicKim and @zxcpoiu to be potential reviewers.. @aksonov, thanks for your PR! By analyzing the history of the files in this pull request, we identified @zxcpoiu, @MechanicKim and @bifrost to be potential reviewers.. @MaxToyberman, thanks for your PR! By analyzing the history of the files in this pull request, we identified @sarovin, @wtfil and @MechanicKim to be potential reviewers.. @filipemonteiroth, thanks for your PR! By analyzing the history of the files in this pull request, we identified @sarovin, @wtfil and @MechanicKim to be potential reviewers.. @barakcoh, thanks for your PR! By analyzing the history of the files in this pull request, we identified @zxcpoiu, @sarovin and @doomsower to be potential reviewers.. @yuche, thanks for your PR! By analyzing the history of the files in this pull request, we identified @dalcib, @xirc and @bang88 to be potential reviewers.. @sirmax2, thanks for your PR! By analyzing the history of the files in this pull request, we identified @xirc, @bang88 and @dalcib to be potential reviewers.. @kennethlynne, thanks for your PR! By analyzing the history of the files in this pull request, we identified @charpeni, @sarovin and @joenoon to be potential reviewers.. @filipemonteiroth, thanks for your PR! By analyzing the history of the files in this pull request, we identified @sarovin, @adrianmcli and @wtfil to be potential reviewers.. @OhaiBBQ, thanks for your PR! By analyzing the history of the files in this pull request, we identified @zxcpoiu, @MechanicKim and @aksonov to be potential reviewers.. @dmueller39, thanks for your PR! By analyzing the history of the files in this pull request, we identified @MechanicKim, @joenoon and @mat2maa to be potential reviewers.. @stensrud, thanks for your PR! By analyzing the history of the files in this pull request, we identified @charpeni, @Mokto and @barakcoh to be potential reviewers.. @itinance, thanks for your PR! By analyzing the history of the files in this pull request, we identified @charpeni, @Mokto and @barakcoh to be potential reviewers.. @kesha-antonov, thanks for your PR! By analyzing the history of the files in this pull request, we identified @aksonov, @zxcpoiu and @Swordsman-Inaction to be potential reviewers.. @Symous, thanks for your PR! By analyzing the history of the files in this pull request, we identified @adrianmcli, @jeongmincha and @ms88privat to be potential reviewers.. @twksos, thanks for your PR! By analyzing the history of the files in this pull request, we identified @zxcpoiu, @MechanicKim and @aksonov to be potential reviewers.. @corymayer, thanks for your PR! By analyzing the history of the files in this pull request, we identified @charpeni, @Mokto and @barakcoh to be potential reviewers.. @abdurrahmanekr, thanks for your PR! By analyzing the history of the files in this pull request, we identified @charpeni, @Mokto and @ffxsam to be potential reviewers.. @Piwaii, thanks for your PR! By analyzing the history of the files in this pull request, we identified @charpeni, @joenoon and @januswel to be potential reviewers.. @jbreuer95, thanks for your PR! By analyzing the history of the files in this pull request, we identified @joenoon, @sarovin and @moschan to be potential reviewers.. @markdaws, thanks for your PR! By analyzing the history of the files in this pull request, we identified @sarovin, @filipemonteiroth and @lucianomlima to be potential reviewers.. @pbassut, thanks for your PR! By analyzing the history of the files in this pull request, we identified @sarovin, @filipemonteiroth and @lucianomlima to be potential reviewers.. @diogoarm, thanks for your PR! By analyzing the history of the files in this pull request, we identified @sarovin, @MechanicKim and @aksonov to be potential reviewers.. @wvicioso, thanks for your PR! By analyzing the history of the files in this pull request, we identified @joenoon, @MechanicKim and @mat2maa to be potential reviewers.. @encosw, thanks for your PR! By analyzing the history of the files in this pull request, we identified @andwaal, @xirc and @bang88 to be potential reviewers.. @southerneer, thanks for your PR! By analyzing the history of the files in this pull request, we identified @charpeni and @twksos to be potential reviewers.. @xdamman, thanks for your PR! By analyzing the history of the files in this pull request, we identified @ffxsam, @aksonov and @lynndylanhurley to be potential reviewers.. @charpeni, thanks for your PR! By analyzing the history of the files in this pull request, we identified @aksonov, @xdamman and @ffxsam to be potential reviewers.. @alexwasner, thanks for your PR! By analyzing the history of the files in this pull request, we identified @aksonov, @Swordsman-Inaction and @diegocouto to be potential reviewers.. @buncismamen, thanks for your PR! By analyzing the history of the files in this pull request, we identified @aksonov, @southerneer and @lynndylanhurley to be potential reviewers.. @trietphan, thanks for your PR! By analyzing the history of the files in this pull request, we identified @aksonov, @Swordsman-Inaction and @diegocouto to be potential reviewers.. @trietphan, thanks for your PR! By analyzing the history of the files in this pull request, we identified @aksonov, @Swordsman-Inaction and @diegocouto to be potential reviewers.. @aksonov, thanks for your PR! By analyzing the history of the files in this pull request, we identified @charpeni, @diegocouto and @twksos to be potential reviewers.. @compojoom, thanks for your PR! By analyzing the history of the files in this pull request, we identified @sarovin and @zxcpoiu to be potential reviewers.. @davojan, thanks for your PR! By analyzing the history of the files in this pull request, we identified @aksonov to be a potential reviewer.. @mcabs3, thanks for your PR! By analyzing the history of the files in this pull request, we identified @charpeni, @sarovin and @aksonov to be potential reviewers.. @pgonzalez-santiago, thanks for your PR! By analyzing the history of the files in this pull request, we identified @aksonov, @sarovin and @joenoon to be potential reviewers.. @ONRiGE, thanks for your PR! By analyzing the history of the files in this pull request, we identified @aksonov and @davojan to be potential reviewers.. @onrige, thanks for your PR! By analyzing the history of the files in this pull request, we identified @aksonov and @davojan to be potential reviewers.. @onrige, thanks for your PR! By analyzing the history of the files in this pull request, we identified @aksonov and @davojan to be potential reviewers.. @rmevans9, thanks for your PR! By analyzing the history of the files in this pull request, we identified @aksonov, @diegocouto and @trietphan to be potential reviewers.. ",
    "hyperh": "Are there any resources I should be reading as a starting point? Feels like a pretty common use case, but I haven't be able to find anything.\n. Fixed it through the following\n1.  rm -rf node_modules\n2. Removing the ^ from my package.json (\"react-native-router-flux\": \"3.22.22\") to make sure I am on the correct version.\n3. npm install --save assert@1.3.0 http://stackoverflow.com/a/37356920\n. ",
    "adrianmcli": "@hyperh it looks like you'll probably have to implement a static method renderNavigationBar(props) in your scene component class. See here: https://github.com/aksonov/react-native-router-flux#custom-nav-bar-for-individual-scene-or-even-different-state-of-scene-new-feature\n. @charpeni Wish granted! I've renamed all the Markdown files to be uppercased! And yes, the squash option will be crucial for this PR \ud83d\ude06 \n@codyhazelwood Thanks! My hope is that this will allow us to create even better documentation, helping more people get started using and playing around with RNRF.\n. @aksonov sure!\n. Since we're replacing the old docs with the new ones, maybe this change is better suited for the new file instead. See here: https://github.com/aksonov/react-native-router-flux/blob/master/docs/API_CONFIGURATION.md\n. ",
    "sathyakumarseshachalam": "@cridenour : I see this issue as closed. But I am not able to clearly see a resolution. Do you have a recommendation / steps to fix the issue\n@sattaman : Were you able to resolve the issue ?\nThe resolution mentioned here did not work either\n. Same here. I am blocked as well.\n. Want to do it in AppLoad. So question : I can only call Actions.* when I have registered my scenes with Provider in my render method. That being the case, whats the recommended pattern/place to call Actions.search or Actions.list like calls on AppLoad. \n. @cridenour : I tried and your solution worked. Thanks\n. Sorry. Ignore this. Realized there are props available for NavigationBar Styling.\n. Some help here will be greatly appreciated. \n. Giving up.\n. Had an onPress attribute that called store.dispatch and then Actions[sceneKey]. ",
    "sattaman": "@sathyakumarseshachalam I was able to get this project transpiling \nhttp://stackoverflow.com/questions/37251534/how-to-test-project-when-3rd-party-modules-used-arent-transpiled\nI have also moved my references to this project into my container components, which has allowed me to test my inner ones, \nMy current error thrown by this component is due to NavigationExperimental not being mocked, I noticed aksonov has an issue open regarding mocks for this. I also noticed that someone has PR'd mocks although not looked yet. \n. @cgreening @aksonov This is blocking me from running tests as this module throws an error due to not being transpiled when running as detailed in https://github.com/airbnb/enzyme/blob/master/docs/guides/react-native.md. \nCan you recommend a solution? \n. You just need to make sure you are matching the key defined when creating the scenes so for \n<Scene key=\"scene\" component={MyScene} >\nThe following would trigger navigation \nActions.scene()\n. I think these were only added in v3.35\nIt should give the behaviour you mention out of the box now. \nAn example of adding a confirmation dialogue when exiting.\n```\nconst onExitApp = () => {\n  Alert.alert(\n    'Exit',\n    'Are you sure you want to exit this app',\n    [\n      { text: 'Cancel', onPress: () => {} },\n      { text: 'YES', onPress: () => BackAndroid.exitApp() },\n    ]\n  );\n  return true;\n};\n<Router\n  onExitApp={onExitApp} \n  ...\n\n```\n. You can use \nActions.yourPage({type: 'reset'});\nor\nActions.yourPage({type: 'replace'});\nwhen switching to stop the routes stacking\n. I may not be fully understanding but can you not just use reset when you don't want the back button ,  and call it normally elsewhere? \nSo\nLogin ->  Actions.home({type: 'reset'});\nHome -> Actions.scene1();\nScene1 -> Actions.scene2();  <- back button is displayed here but not when coming from Login to home? \n. Try updating to v3.35.0 , I think the back android behaviour is baked into that release, you don't need to do anything. \n. I'm having similar issues. . +1 . ",
    "hellogerard": "I'll chime in here, perhaps unnecessarily.\nI too ran into this issue. The solutions in that StackOverflow post (which I believe are derivations of the real solution from the author of Enzyme) work great for other RN modules in general, but I still ran into RNRF issues, specifically issues with PNG images and the new react-native-experimental-navigation module.\nIn the end, I found it easier to use mockery:\njs\nconst mockery = require('mockery');\nmockery.enable({\n    warnOnReplace: false,\n    warnOnUnregistered: false\n});\nmockery.registerMock('react-native-router-flux', {Actions:{}});\n. I encountered the same error (with a different conflicting module name). Removing node_modules and re-installing all npm modules worked for me.\nreact: 15.1.0\nreact-native: 0.27.2\nreact-native-router-flux: 3.30.0\n. ",
    "casenjo": "I got this error in my automated tests after adding RNRF to my project:\n`SyntaxError: ../node_modules/react-native-router-flux/src/menu_burger.png: Unexpected character '\ufffd' (1:0)\n\n1 | \ufffdPNG\n    | ^\n`\n\nI have a setup.js file in my tests folder that set up everything needed to test in our project. Using the approach that @hellogerard used was great and it fixed my issues. Are there any downsides to using it though?\n. @Twitchkidd did you get the error during runtime or automated testing? I'm able to run the project and it works great, but for the automated testing I get the PNG error\n. @nalwayaabhishek have you found a solution to your mocha tests? The suggestion by @hellogerard in #628 fixes my tests, but I don't know what (if any) negative effects it could have to silence the mockery warnings\n. Just checked and unfortunately got the same result :(\nAre there any specific things that I could log to help narrow down the issue?\n. @steida I agree, I need to clean that up. I want to get it working properly first though ;)\n. Do you really believe that's the issue, and if so, can you explain why? I'd like to learn because I don't really understand why that's the case, and it's the exact example that's provided in the docs.\nhttps://github.com/aksonov/react-native-router-flux/blob/master/docs/OTHER_INFO.md#switch-new-feature\n. As @steida suggested, I cleaned the code up a little more and turned the component into a full on smart component like this:\n``` javascript\nclass App extends Component {\n  constructor(props) {\n    super(props);\n  }\nrender() {\n    return (\n    \n (props.auth.token !== '' && props.isOnboarding == 0) ? \"loggedIn\" : \"loggedOut\"} // Conditional to decide what to render\n      >\n        {require(\"./components/sceneGroups/loggedOut\")}\n        {require(\"./components/sceneGroups/loggedIn\")}\n      \n\n    )\n  }\n}\nconst mapStateToProps = (state) => {\n  const auth = state.auth;\n  const isOnboarding = state.verify.isOnboarding;\nreturn {\n    auth,\n    isOnboarding,\n  };\n}\nconst mapDispatchToProps = (dispatch) => {\n  return { };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n```\nAnd that fixed the issue, though I still don't understand why that fixed it. Thanks @steida! (Spoke too soon, it didn't :( See edit 1)\nI still want to understand why the example in the wiki wasn't working but converting it to use mapStateToProps did the trick. @aksonov would you be able to chime in? \nEdit 1: Initially the issue was fixed, and then I noticed that upon refreshing the app the proper scene wasn't being loaded. I added the component part to it and connected it with mapStateToProps and I'm back to getting the same error as before :S\n. ",
    "Twitchkidd": "I got that error, uninstalled my app and reinstalled it on the next build, and it went away\n. Oops, sorry, at runtime\nOn Monday, August 8, 2016, Cristian Asenjo notifications@github.com wrote:\n\n@Twitchkidd https://github.com/Twitchkidd did you get the error during\nruntime or automated testing? I'm able to run the project and it works\ngreat, but for the automated testing I get it\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/aksonov/react-native-router-flux/issues/628#issuecomment-238379734,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AJu0ifP6GcMbF-e4ZNTPZwOCU6s60l7pks5qd5xSgaJpZM4IWSsc\n.\n. \n",
    "alvarowolfx": "Just for the record, @ajwhite  you can force the scene to animate vertically using NavigationCardStackStyleInterpolator and getSceneStyle prop.\n```\nimport NavigationCardStackStyleInterpolator from 'NavigationCardStackStyleInterpolator';\n\n\n\n```\n. ",
    "jasongaare": "@alvarowolfx thanks for this! Is there a way to get it to come in from the top rather than the bottom with this?\n. Adding panHandlers works, in a way. I can set it to call Actions.pop() after the user has moved their touch a certain distance, however it would be really nice if the parent view rendered underneath the view as it is getting dragged off the screen. Is there a way to pull that off? \n. This didn't fix my issue. I'm not sure where it lies, but manually setting the size of my view DOESN'T change the size of my Root Navigator provided via the navigation libraries (because setting the size of the child doesn't change the size of the parent...) \nI'll dig more, but still need help if anyone has any suggestions. Thanks for your prompt response. \nYou can probably leave it closed for now, we've decided to stick with React Native 42 for now, because upgrading breaks all our navigation. Following the migration guide helps, but we've been using router-flux for over a year now so the new changes with moving to v4 are altering too many things for us to address currently. \nI will circle back when (a) we make the decision to bite the bullet and upgrade, and (b) when router-flux v4 is more stable.\nIf I'm still having issues then I'll try to create an example project. Our codebase is pretty complex so it's probably an internal issue somewhere... (but the sceneStyle={{ flex: 1 }} on the root scene in v3 seems to be our solution for the time being.. ",
    "reddingit": "@cridenour Yes, I only want the Message scene have dot.\n. Already tried Actions.refresh({showDot: true}) \u3001Actions.Tabbar({showDot: true}) \u3001Actions.Message({showDot: true}) \uff0cnothing happen...\n. showDot will pass to TabIcon.\nThe problem is I cann't find a way to reload TabBar after it rendered.\n. @sarovin Thanks.\nNeed find a way in these Router,Scene,Actions pattern...\n. Thanks @cridenour \nFinally, I solve this problem as you say. \nDeclare a new TabIcon component, map dot state as its props.\n. I solve this problem by add some code at render() function in NavBar.js, see below:\n\n. I solve this problem by add some code at render() function in NavBar.js, see below:\n\n. If you want to use both drawer and tabbar, maybe you should do this:\n<Scene key=\"drawer\" component={SideDrawer} >\n                                <Scene key=\"tabbar\" component={TabBar} tabs={true}>\n                                      <Scene component={Home} key='home' title='Home' navBar={CommonHeader} hideNavBar={false}/>\n                                      ...\n                                </Scene>\n                            </Scene>\n. ",
    "cjmarkham": "I got around this by using renderRightButton and this.refs.drawer.toggle.bind(this) and renderBackButton but is there a better option?\n. ",
    "andpor": "I am having a similar issue. The left/right buttons are dynamic based on the state of the current scene. Most of the time the buttons are not even visible and only appear when conditions are met and application decides that transition should be made available.\nThis is really a very fundamental piece of functionality. Would be great to have this implemented inside the package. Otherwise have to do customizations....\nWhy not allow the scene to decide whether there is a left/right button and allow it to render and include a local callback rather than having the callback sitting bespoke at the route configuration spec...\nThis is the only piece missing to make this routing package a complete navigation package..\n. hmmm, i don't quite agree...buttons can be rendered based on the component that is being rendered in a given route...you already have an instance...you should be able to call methods on it in fact to render a button (and tied it up to its own local callback)..\n. I found this piece of code in the NavBar.js\nconst renderLeftButton = selected.renderLeftButton ||\n      selected.component.renderLeftButton ||\n      this.renderLeftButton;\nconst renderRightButton = selected.renderRightButton ||\n      selected.component.renderRightButton ||\n      this.renderRightButton;\nwould this mean that the component by supplying renderRightButton function would be able to control whether the button is visible or not? Let me try - if this would this would be fantastic!\n. not much luck :(\n. ",
    "EricWithCare": "I agree, I'm having a hard time figuring out how to do this. I can see how you might want to hide/show a right button based on the state of the rendered scene (eg. a Save button). This also applies to the title, where the content of the title depends on a server response returned upon mounting of a scene/component. How would I do that?\n. ",
    "anthonywebb": "@EricWithCare you can use refresh to modify the title like this (works great):\nActions.refresh({title: this.props.name})\nOddly enough I am trying to use a similar mechanism to update the right button like this:\nActions.refresh({rightTitle: \"foo\", onRight: this._save()})\nWhen I do that I get a warning \"Both onRight and rightTitle/rightButtonImage must be specified for the scene\", and I dont see the right button.\n. @EricWithCare for more info on this issue see my question here https://github.com/aksonov/react-native-router-flux/issues/663\n. @joenoon @thelordoftheboards is there an easy way to specify in my package.json that I would like npm to install/use the 0.26-wip branch?  I'd like to try .26 but would like to pick up some of the changes for .26 that are not yet in master.  Thanks!\n. I'll have to give that a try.  \nI am also wondering if maybe this can be done via Actions.refresh() ?\n. This was an issue with my machine and the bundler, not specific to this module\n. This would solve the issue I am bumping up against (#697) hoping it is merged \n. @cridenour that worked great, thank you!\n. ",
    "javidjamae": "If anybody is interested, I made a sample app that demonstrates how to use Actions.refresh to update the Scene parameters.\nhttps://github.com/javidjamae/react-native-redux-expo-starter/tree/rnrf-action-refresh. ",
    "danieldunderfelt": "@cridenour it seems like it didn't. Replace routes still didn't work for me after the upgrade, and I also observed the \"route state changes but view doesn't update\" bug. Hanging back at RN24 and router-flux 2.x for now.\n. I hope everyone knows that the 2.x branch is stable and works great (fork and modify if you need to get rid of RN0.25 warnings). I'm using it right now and I miss nothing from 3.x.\nIf you want to use RN0.24/25 right now with a stable RNRF and not lose out on features, I highly recommend it.\n. Upgrading from 2.x => 3.x is super easy. Just change Route to Scene, the name prop to key and remove your Schemas. There might be something else for features I haven't used, but that's it in a nutshell.\n. Weird... 0.29 & RNRF user here, works well!\n. @rturk I am aware, yes. I was simply confirming that it works as @gregorpilz experienced some issues.\n. ",
    "thelordoftheboards": "Also, React Native 0.25 changes how the imports are done from\njavascript\nimport React, { Component, View } from 'react-native';\nto \njavascript\nimport React, { Component } from 'react';\nimport { View } from 'react-native';\nhttps://github.com/facebook/react-native/releases/tag/v0.25.1\n. @cridenour Sorry I did not recognize the issue by reading the name.\n. I have been able to run a knock off of the React Relay To Do (naturally with all the 0.25 import changes) example and it works great, I have not tried any navigator experimental features though so I cannot attest to how well they work.\n. @SudoPlz I can't seem to find it on npm. This is what I am seeing right now:\n\n. Works pretty well with react-native-router-flux installed from git like this:\njavascript\n    \"react-native-router-flux\": \"git+https://github.com/aksonov/react-native-router-flux.git\",\nMy use cases, however, are trivial.\n. @Kerumen thank you!\n. ",
    "heimuya": "@sylvainbaronnet can you show your example about how to use rnrf(3.22.23) with drawer? My rn version is 0.24.1\n. ",
    "fultonm": "Looks good for the Example app!\nI'm still getting the same error message in my separate app after applying this fix. This error message can point to errors in Example.js and beyond? I'm using Chrome debugging tools to find out whats wrong but there's not a lot of informative debugging info.\nedit: ahh, AppRegistry.registerComponent('Example', () => Example) \nThe string 'Example' has to be exactly the same as the package name. I'm ok now!\nJust as a general question how is it possible to determine the source of this error:\nWarning: ReactNative.Children is deprecated. Use React.Children from the \"react\" package instead.\nI've double and triple checked all my import React statements are import React from 'react' and not 'react-native', in my app's equivalent to Example.js, index.android.js, and components/Home.js. I have no other components at the moment.\nThe debugging information is just too sparse..\n. ",
    "loopdtw": "this problem still seems to be occurring? I'm not able to run the example code at all\n. ",
    "sebfie": "Hello, I still have the same issue!\n. Can we have a more detailled example?\nThx\n. ",
    "shanzhizi": "This issue is still at there. I want to view the example, who can help me? . ",
    "nemosdo": "Thanks for replay  , still not work with v3.22.17\n. it works when using like this, \nhttps://github.com/aksonov/react-native-router-flux#sub-scenes-support\n. your react-native-router-flux's version is not '3.22.23', may be '3.30', you can see it in 'node_modules/react-native-router-flux/package.json'\n. render() {\n    return (\n      <Provider store={store} >\n        <RouterWithRedux>\n          <Routes />\n        </RouterWithRedux>\n      </Provider>\n    )\n  }\nchange to\nrender() {\n    return (\n      <Provider store={store} >\n        <RouterWithRedux scenes={scenes}/>\n      </Provider>\n    )\n  }. i have the same problem \n. ",
    "yorzi": "@MovingGifts Hi do you find any good hints related to sidebar drawer integration? I am looking for detailed document on this topic as well. Thanks.\n. @jeroenbourgois thanks for your quick reply, I did follow your link. Hmm, I thought Drawer is available in context, but this.context in HeaderBar is blank.\n. @jeroenbourgois according to your update, Yeah, SideMenuContent in you case is child component of Drawer, so you can get const { drawer } = this.context. but in my case, HeaderBar is a custom NavBar for Scene where I want to have a complex and flexible top nav bar. I might need to trigger the menu icon in HeaderBar to open or close Drawer.\n. @cridenour Oh, thank you, I know the version relation now. Let me try to adjust versions first.\n. ",
    "jeremyong": "Why is this closed? There doesn't seem to be a good way for the scene component to specify any data or state necessary to be passed to the right or left buttons for the navigator. Am I missing something?\n. How do non static props get passed to a static method... this issue really shouldn't be closed. Components that want to modify navigation buttons are forced to reset the bar after being mounted.\n. Yes this is possible and considered but if you want the top buttons to depend on state in the component itself, it seems heavy handed to export that state to the global store and import it back again. Because it's an intrinsically UI thing, you end up exporting state about user data. For example, what if I want the back button to start glowing if the user taps the screen quickly or something (silly example but hopefully gets the point across).\n. ",
    "jrwm": "Though I can create and manipulate RightButton from Component by using static renderRightButton I cannot access the Component's state because the method is static. :( Any ideas?\n. @ppiechota\nyou can define your button in your scene's componentDidMount \nActions.refresh({\n            renderRightButton: this.yourFunctionToRenderButton,\n            onRight: this.yourButtonHandler,\n        })\ndon't use static renderRightButton, and you don't need to use flux either\n. ",
    "nlively": "@jeremyong, I'm curious to see how @aksonov will answer.  One way I am thinking about this is to manage your state within a store (if using flux) or within your app-wide store (if using redux).  So using redux, your onLeft or onRight handler would dispatch an action like this:\nstatic onLeft(props) {\n  props.dispatch(myAction());\n}\nThen in the action creator, use redux-thunk to get access to dispatch and getState\n. +1\n. @mrnahidtalukder do you have a working code sample of your finished solution? Thanks\n. @cridenour you are correct.  I was able to add unmountScenes={true} to my root scene after this pull request was merged and it all works now.\n. @Rayji96, I tried this and got other problems.  Seems that the other scene keys are no longer available after it uses RESET.  \nSo setting type={ActionConst.RESET} worked for the initial login.  The keyboard was no longer visible.  However, when I logged out, it could not return to the \"authentication\" scene.  See attached error.\n\n. @Rayji96,\nWe mounted grouped our scenes into containers inside a parent with \"tabs={true}\".  This was so that we could use Redux and the  component to switch between sections of the app based on state.  The intention was that the app would automatically switch to the appropriate section based on authentication, load status, etc, rather than manually calling scene transitions to change sections.\nSo when I log out, I don't explicitly navigate.  I simply dispatch an action that updates state and indicates that the app is in an unauthenticated state.  The router then switches to the authentication screens.\nThis was working until a recent update.  In the recent update, the symptom of the problem is a phantom keyboard that appears when I switch tabs.\n. @Rayji96 for clarification, I'm trying to do what is documented here:\nhttps://github.com/aksonov/react-native-router-flux/blob/master/docs/OTHER_INFO.md#switch-new-feature\n. @almirfilho I updated to 3.37.0 and the problem persists.\nHere's a video showing my experience:\nhttps://drive.google.com/file/d/0B50qWVZx4T7dVkZmb0ZNYW5UdFE/view\nI can confirm by looking at the logs that they keyboard that appears is from the Sign In screen.  The sign in screen is part of a \"tab\" that is not active.  The sign in screen was unmounted but then appears to have been re-mounted underneath the active screen, which causes the keyboard to appear.\n. Hi @almirfilho.  Thanks for the suggestion, but I don't see any change after removing those.\nThe sign in view is unmounted and then re-mounted on the tab change no matter what, causing the keyboard to appear when it is not desired.\nIssue persists.\n. ",
    "ppiechota": "Hello all, could you tell me how to make renderRightButton aware of state of component? Is it possible at all?\nI have component with form inputs in state, when I submit I dispatch action with those inputs, this all happens when user presses button that is rendered in NavBar.\n```\n  static renderRightButton(props) {\n    return (\n      \nSave\n\n    )\n  }\nonAddAccount = () => {\n    const {accountInput: account, keyInput: key} = this.state;\n    this.props.dispatch(addAccount(account, key));\n    Actions.auth({type: 'reset'});\n  }\n```\nI understand that is not possible because the method is static, so how to accomplish this?\n. @jrwm thanks it works\n```\n  componentDidMount() {\n    Actions.refresh({renderLeftButton: this.renderLeftButton, renderRightButton: this.renderRightButton})\n  }\nrenderRightButton = () => {\n    return (\n      \nSave\n\n    )\n  }\nonAddAccount = () => {\n    const {accountInput: account, keyInput: key} = this.state;\n    this.props.dispatch(addAccount(account, key));\n    Actions.auth({type: 'reset'});\n  }\n```\n. ",
    "matart15": "@ppiechota \nI tried renderRightButton approach on Scene1. Now I enter Scene1 renderRightButton get called every frame. very bad slow animation.\nReason I am using renderRightButton from component is I want to do some calculation and change right button dynamically (ex: before login and after login) and image involved. At most I only needed 2 or 3 calls to this function. But now I have 16 calls. \nIs there any way other way. Or is there anyway to skip render on back or something.. @enapupe Feels like cheating. But it helps. Thanks man.. Temporary Solution : \nhttps://github.com/aksonov/react-native-router-flux/issues/747#issuecomment-239873867. ",
    "jo-asakura": "A total hack but at least it allows me to achieve the desired result and avoid double render of Actions.refresh:\n```\n// your scene\n {\n           // state.scene.navigationState.myData is { hello: 'world' }\n         }\n       } />\n// your component\nclass SomeComponent extends Component {\n  // ...\n  handleButtonClick() {\n    this.props.navigationState.myData = { hello: 'world' };\n  }\n  // ...\n}\n```\nNote that it still doesn't allow you to change a visual button's representation on fly.. but at least you can customize the handler (pass variable or callback).. ",
    "EnriqueDev": "I'm currently not able to render left button in any case, not even using refresh (I need to do it from the component).. +1. I still don't really understand how onEnter works. Is it possible to call a function from the component from there? Is there a tutorial / doc on how to use it?. So inside my component I should call:\nstatic onEnter = (callback) => {\n    callback()\n}\n?. My main problem here is that as ReactNavigation does not unmount tabs, all the component's lifecycle methods are not called and it's impossible to perform requests in the usual place. Using the current API v4 what would you recommend as an approach (not code, I just need some guidance)?.\nThanks for your time!. good enough. Is there a way to set the lazy prop when using TabNavigator? . Awesome. Thank you so much!. Yep, that seems to do the trick. Nevertheless, I get an undefined prop error from that component even though it has been unmounted. Weird.. or you could use redux to fire events in your views.... ",
    "AgingChan": "Any workaround in v4?. I still get the same issue. No fix or workaround available?\n. ",
    "smwoods": "I'm having this issue as well. Did you ever find a solution?\n. ",
    "SunnyGurnani": "You are right that was the issue we thought any version greater then 0.22 will work with the router.\nThanks for quick response.\n. Just to add one more thing when we used >0.22 transitions were always horizontal even when we set it as vertical. But when we downgraded to RN 0.22 it worked fine.\n. ",
    "Mohamed-Abo-El-Soud": "@xvalentino The best way to test this is to transition between two gifs (two scenes, each containing a gif).\nSo scene 1 has a gif,\nand scene 2 has another gif\nWhat you will notice is that the way it is right now, pushing a new scene while two gifs are running simultaneously (one in scene 1 and the other in scene 2, and you are transitioning from scene 1 to scene 2) is causing a lot of dropped frames in the transition animation.\nHOWEVER, while you are on scene 2, popping the navigation stack will go back to scene 1. But what you will notice is that while popping, there doesn't seem to be a performance lag, even though it's still switching between two gifs.\nI think the reason for this is that while it is popping, both scene 1 and scene 2 were already preloaded and the phone did not have to re-render the components. however in the first scenario, when you are pushing a new scene, the component is being re-rendered while the scene transition is happening, hence the performance lag.\n( I came across a similar scenario to the one I'm describing to you).\n. BTW @aksonov can we reopen this issue until someone submits a PR for the preloading of tabs?\n. ",
    "markdaws": "Any update on this?  I want to preload a WebView inside a stack navigator so when the user clicks on an item in a list the view is already loaded as it transitions in. Is it possible to do this now with RNRF?. I'm seeing the same issue in the latest build, the back chevron is displayed in non release builds, but in a release build it is not displayed. I don't see any errors in the build output.. You could do a reset, which will reset the whole stack, for example if you have a scene called \"home\" at any point you could say:\nimport { ActionConst } from 'react-native-router-flux'\nActions.home({ type: ActionConst.RESET }). Add a reducer to the router, as in this example, you can then look at the action.type value to see if it was a back, pop, push, reset etc, should be all the info you need in there: https://github.com/aksonov/react-native-router-flux/blob/b11a84962e4e4d9265770382b8859d21d1a12ea0/Example/Example.js#L43. Are you saying you want to be able to dynamically change the title string of the scene?\nYou should be able to just pass in the title when you change to the new scene e.g.\nActions.movie_showing({ title: 'foo' })\nOr if you need to update the title of a scene you are already viewing, you can call refresh e.g.\nActions.refresh({ title: 'bar' }). Can't you just put the network error inside the login page? Then hitting refresh is just doing a network check and updating some react state on that page to conditionally show the error message or not. Doesn't seem like something you need to involve reac-tnative-router-flux with.. ",
    "wireblue": "Hi @anthonywebb,\nI believe this is one way of doing it.\nhttps://github.com/aksonov/react-native-router-flux#sub-scenes-support\nI've not used this feature before, but I would imagine you'd setup a \"save\" sub-scene (with a key of \"form_save\" for example) and run Actions.form_save() when you want the save button shown.\nI'm sure there are other ways of achieving a similar result also.\n. ",
    "devux": "I've modified my babelrc file now its working :+1: :+1: \n. ",
    "jssisodiyaPG": "@devux what changes you made in your babelrc file\n. ",
    "abhishkekalia": "TransformError: /home/reactjs/refrence/ProjectTest/node_modules/react-native/Libraries/react-native/react-native-implementation.js: EISDIR: illegal operation on a directory, read\n:app:bundleReleaseJsAndAssets FAILED\nFAILURE: Build failed with an exception.\n\n\nWhat went wrong:\nExecution failed for task ':app:bundleReleaseJsAndAssets'.\n\nProcess 'command 'node'' finished with non-zero exit value 1\n\n\n\nTry:\nRun with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output.\n\n\nBUILD FAILED\nTotal time: 22.887 secs\n. ",
    "pottercomuneo": "Could someone please explain which was the solution? It's not clear to me even after reading #525.\nThanks!. Same. ",
    "OrangeFlavoredColdCoffee": "i solved  this  ,by run react-native run-android   and error msg will show clearly , but when you build in  AndroidStudio, can not locate error msg .\nfor me ,just because one comma \n\n. \n. ",
    "FakeYou": "I have updated the code to just check for falsy value for the prop titleNumberOfLines. If it is falsy it will default to -1 which will negate the functionality of the numberOfLines prop for Text components.\n. @joenoon Setting the attribute to 0 means that not a single line of the text is shown. But you are right that using -1 is not the right solution. In fact I've tested it on android and it will crash the app. \nFor now I've added a check where it will only return the component with the numberOfLines attribute if it has a valid property.\n. Nicely spotted, I checked it out and when numberOfLines is set to 0 no text will be shown in the header. When set to -1 it will just ignore the numberOfLines property. \nUsing Number.isInteger is cleaner imo but I don't have any strong preference for either.\n. I'm not sure how you can add a conditional attribute in jsx, so I've added a check for the titleNumberOfLines prop that will return the <Animated.Text/> component with the numberOflines attribute.\nI would love to know if there is a better way to handle this case as now there is a lot of extra code just for a single optional attribute.\n. oh nice, I didn't know that was possible.\n. ",
    "adnanbrq": "@aksonov -.- Sorry, my fault.\n. ",
    "yulinho": "no actionSheet in 3.x ?\n. ",
    "danawoodman": "What is the full stack trace?\nWhy are you passing in actions like you did? Why not instead use the Actions method?\n``` js\nimport { Actions } from 'react-native-router-flux'\n// elsewhere pass in Actions.yourRoute()...\n```\nAlso, did you follow this guide?\n. @cridenour I see that now but please realize the current readme does not say this anywhere. Until that changes, I imagine a lot more similar issues are created unfortunately. \nThat said, it looks like v0.26.0 was just released so I imagine this won't be an issue soon.\nCheers \ud83c\udf7b \n. ",
    "leoz": "Hi @sarovin , I guess our patches could be applied one on top of another as they fix different properties. \n. ",
    "symmetriccurve": "leftButtonImage does not work! How did you get it to work. It  works on right though\n. ",
    "blaesus": "@symmetriccurve We didn't. We just wrote a custom NavigationBar.\n. ",
    "sachinbiradar9": "I am facing a similar issue. has anyone found a solution?\n. ",
    "dominicmh": "I updated to RN 0.26.0, but the issue remains:\n\n[react-native-router-flux] Actions.callback is not defined!\n\nI used the 0.26-wip branch as suggested here #636 in order to make RNRF runnable on RN 0.26.0\n- \"react\": \"^15.0.2\",\n- \"react-native\": \"^0.26.0\",\n- \"react-native-router-flux\": \"github:aksonov/react-native-router-flux#0.26-wip\"\n. Fails in App.js, note that it works fine in MissionsTab.js\n. ",
    "dwilt": "I'm running into this issue as well as I'm trying to redirect to an internal page from a notification to the phone. I'm a bit confused as to why the Actions methods for an interal page wouldn't be there as shown in @dominicmh 's App.js example. The way I understand it, per the documentation of React's componentDidMount:\n\nInvoked once, only on the client (not on the server), immediately after the initial rendering occurs. At this point in the lifecycle, you can access any refs to your children (e.g., to access the underlying DOM representation). The componentDidMount() method of child components is invoked before that of parent components.\n\nBeing that the children are rendered first and their componentDidMounts have fired, doesn't it only make sense that they would've registered with Actions?\nAll that being said, that's just my thoughts on how it should work. I wasn't able to figure out from this thread what you guys are proposing doing to make it work. If you could provide a clear example of this that would be fantastic!\n\"react-native\": \"0.28.0\",\n\"react-native-router-flux\": \"3.31.0\",\n. According to @rturk, if I'm understanding his proposed solution, he's attaching a callback to the store being configured which is getting called here: https://github.com/fbsamples/f8app/blob/master/js/store/configureStore.js#L50\nThis is when the store is configured by fetching the data from the local storage - this has nothing to do with the scenes being rendered - is this not just a race condition that seems to be working?\n. @aksonov your proposed solution of moving the defining the scenes separately and before the router is just another race condition, no? I guess I'm lost as to what is asynchronous about the scene callbacks being registered.\n. @shilpan the callback is an excellent idea. Or a promise would work too. And yes, I'm using an arbitrary timeout as well (1 second). Obviously far from ideal. \n. @atlanteh I'm really curious that you seem to think you have solved this but it seems to be a bit of a workaround in the mean time for a couple of reasons:\n1. you're extending the base Router class instead of this being a solution that is baked directly into the core Router code\n2. The fact that you have a timeout there, even of 10ms seems a bit of a race condition. \nI think there has to be a spot, and I acknowledge you for trying to find, that is a true hook when everything is complete and the user can pass in something like your onRouterInit and can be sure it's ready to go and comes out of the box with the Router and isn't based on a potential race condition.\nThoughts?\n. @atlanteh sorry man, wasn't trying to pick on you - just didn't want that type of solution to become the standard going forward. So happy you made a PR. Thanks!\n. @atlanteh you're waiting on a PR review for #1137 right from @aksonov ?\nI'd love to get this in as I still have my hacky setTimeout patch\n. @atlanteh you want me to check what into my app? The changes that you made? I figured I'd wait till it got integrated into react-native-router-flux once the PR got merged then just do an update.\n. @atlanteh ok, installed it but how do I actually use it. Did you expose a promise/callback that I can call to make sure that everything is ready?\n. How can I tie into that though? The issue is that we're calling Actions methods which are not  available yet. How can I know in my component that they are available?\n. Got it.\n. This solution unfortunately eluded me for a while then hit me while in the shower. It's actually quite simple. Don't render the <Router> until you have a persisted state loaded and instead load an empty <View/> while keeping the splash screen showing (or you could use another loading Scene). I'm using this splash-screen-plugin to hide the splash once the local storage has persisted (hydrated - the term comes from redux-persist)\n```js\nrender() {\n    const { onEnter, isLoggedIn, hydrated } = this.props;\nreturn hydrated ? (\n    <Router\n        sceneStyle={{\n            backgroundColor: `white`,\n        }}\n    >\n        <Scene\n            initial={isLoggedIn}\n            hideNavBar\n            key={MY_WATER_KEY}\n            onEnter={() => onEnter(MY_WATER_KEY)}\n            component={MyWater}\n            icon={({ focused }) => (\n                <TabbarTab\n                    active={focused}\n                    icon={`drop2`}\n                    label={getLocalizedString(\n                        `myWater.title`,\n                    )}\n                />\n            )}\n        />\n        <Scene\n            initial={!isLoggedIn}\n            key={LOGIN_SCENE_KEY}\n            onEnter={() => onEnter(LOGIN_SCENE_KEY)}\n            component={Login}\n        />\n    </Router>\n) : <View/>;\n\n}\n``\nMyhydratedprop is coming from redux and is true when the local storage has persisted and from the persisted state I can tell if a user is logged in. If it hasn'thydrated, I just show an empty` and don't hide the splash screen. \nThen I used the initial prop by passing in the isLoggedIn prop to dynamically determine which to show as @dellheng suggested. If they are logged in, I send them to MY_WATER and if they're not, I send them to LOGIN. Worked like a charm.. I'd definitely be interested in this as well. I've noticed major performance bottlenecks when data is trying to be rendered onto a scene that is still transitioning in. I have manual delays in my componentDidMount on the component that is being transitioned in so it will wait until the transition has finished to guarantee a smooth transition. Having a method on a component called onEnterComplete would be ideal - similar to how React and Ionic call their methods (componentDidMount, ionViewEnter):\n``` jsx\nclass DetailPage extends Component {\n  onEnterComplete() {\n    // Scene entered successfully. Now fire off async calls\n  }\n}\n\n```\nor at the very least have a callback on the Scene component directly:\n``` jsx\nvar enterCallback = () => {\n}\n\n```\n. @vonovak Interactions manager worked perfectly as a solution for me on iOS. But to @badaz 's point, I haven't tested on Android. Good example and understanding here:\nhttps://facebook.github.io/react-native/docs/performance.html#slow-navigator-transitions\nJust make sure to include InteractionsManager in your import. It's missing in the example:\njavascript\nimport { \n    InteractionsManager\n} from 'react-native'\n. Are you reverting this fix or something else not related to this ticket?\nOn Sun, Sep 18, 2016 at 05:23 Pavel Aksonov notifications@github.com\nwrote:\n\nOk, let's revert it\nPavel.\n\n17 \u0441\u0435\u043d\u0442. 2016 \u0433., \u0432 23:28, Chester Wood notifications@github.com\n\u043d\u0430\u043f\u0438\u0441\u0430\u043b(\u0430):\n@joenoon I discussed the tab bar regression in issue #1151 . I\nidentified the offending commit. This is a pretty serious problem that has\nnot been addressed.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/aksonov/react-native-router-flux/pull/1137#issuecomment-247844643,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ABBCQwXhGkoG7O90sr4jLY5M_J7Zxf4Zks5qrS05gaJpZM4J0XS6\n.\n. @aksonov I'm confused. So are you saying this commit (https://github.com/aksonov/react-native-router-flux/commit/492a1171b8606869e5808f48220e7b0df4699c88) that got merged caused a regression (https://github.com/aksonov/react-native-router-flux/issues/1151) and you're going to revert this merge?\n\nNot arguing, just want to make sure I understand what is going on and if I need to revert this patch in our project.\n. @timkendall thanks for working on this! Want to make a PR?. @davidsharp worked perfect. This is probably the simplest solution the people over in https://github.com/aksonov/react-native-router-flux/issues/857 were looking for. @aksonov worked for me in 4.0.0-beta.28. I'm running into this.. Just a heads up. This seems really weird, and might be a bug, but you can't pass a rendered component to the icon prop:\njs\n<Scene\n    hideNavBar\n    key={MY_ACCOUNT_KEY}\n    tabBarLabel={`My Account`}\n    component={MyAccount}\n    icon={<Icon\n            size={iconSize}\n            color={iconColor}\n            name={`home3`}\n        />}\n/>\nYou get this error:\n\nThe way around it is to wrap the component in a function:\njs\n<Scene\n    hideNavBar\n    key={MY_ACCOUNT_KEY}\n    tabBarLabel={`My Account`}\n    component={MyAccount}\n    icon={() => (\n        <Icon\n            size={iconSize}\n            color={iconColor}\n            name={`home3`}\n        />\n    )}\n/>. It seems the icon prop uses the v3 callback as explained here. Except now, the selected prop is now focused. Here's how I got it working:\n```js\n<Tabs\n    showLabel={false}\n    lazy={true}\n    tabStyle={styles.tab}\n    tabBarStyle={styles.tabs}\n    labelStyle={styles.label}\n    swipeEnabled={false}\n\n<Scene\n    hideNavBar\n    key={MY_WATER_KEY}\n    component={MyWater}\n    icon={({ focused }) => (\n        <Icon\n            size={iconSize}\n            color={focused ? activeIconColor : iconColor}\n            name={`drop2`}\n            text={`My Water`}\n            textStyle={focused ? [styles.label, styles.activeLabel] : styles.label}\n        />\n    )}\n/>\n<Scene\n    hideNavBar\n    key={INBOX_KEY}\n    component={Inbox}\n    icon={({ focused }) => (\n        <Icon\n            size={iconSize}\n            color={focused ? activeIconColor : iconColor}\n            textStyle={focused ? [styles.label, styles.activeLabel] : styles.label}\n            name={`envelope`}\n            text={`Messages`}\n        />\n    )}\n/>\n<Scene\n    hideNavBar\n    key={MY_ACCOUNT_KEY}\n    component={MyAccount}\n    icon={({ focused }) => (\n        <Icon\n            size={iconSize}\n            color={focused ? activeIconColor : iconColor}\n            textStyle={focused ? [styles.label, styles.activeLabel] : styles.label}\n            name={`home3`}\n            text={`My Account`}\n        />\n    )}\n/>\n\n\n```\n\n\nBy the way, I wanted more control over the labels so I passed the text into my Icon component and render it there and use the showLabel={false} on the Tabs component.. @ghoshabhi yep. I've ditches these all together and am using the icon prop to get all of the styling for inactive and active states on the icon and text. See my example here. Why is this closed as this bug is definitely outstanding?. It seems to be any of my scenes which are in Tabs. Here's my entire Router:\n``js\n<Router\n    backAndroidHandler={this.onBackPress}\n    sceneStyle={{\n        backgroundColor:white`,\n    }}\n\n<Scene hideNavBar panHandlers={null} key={`modal`} modal>\n    <Scene key={`root`} panHandlers={null} hideNavBar>\n        <Tabs\n            showLabel={false}\n            lazy={true}\n            tabBarStyle={styles.tabs}\n            tabBarPosition={`bottom`}\n            labelStyle={styles.label}\n            swipeEnabled={false}\n\n            <Scene\n                hideNavBar\n                key={MY_WATER_KEY}\n                onEnter={() => onEnter(MY_WATER_KEY)}\n                component={MyWater}\n                icon={({ focused }) => (\n                    <TabbarTab\n                        active={focused}\n                        icon={`drop2`}\n                        label={getLocalizedString(\n                            `myWater.title`,\n                        )}\n                    />\n                )}\n            />\n            <Scene\n                hideNavBar\n                key={INBOX_KEY}\n                onEnter={() => onEnter(INBOX_KEY)}\n                component={Inbox}\n                icon={({ focused }) => (\n                    <TabbarTab\n                        active={focused}\n                        icon={`envelope`}\n                        label={getLocalizedString(\n                            `inbox.title`,\n                        )}\n                    />\n                )}\n            />\n            <Scene\n                hideNavBar\n                key={MY_ACCOUNT_KEY}\n                onEnter={() => onEnter(MY_ACCOUNT_KEY)}\n                component={MyAccount}\n                icon={({ focused }) => (\n                    <TabbarTab\n                        active={focused}\n                        icon={`home3`}\n                        label={getLocalizedString(\n                            `myAccount.title`,\n                        )}\n                    />\n                )}\n            />\n        </Tabs>\n        <Scene initial key={`initial`} component={Loader} />\n        <Scene\n            key={LOGIN_SCENE_KEY}\n            onEnter={() => onEnter(LOGIN_SCENE_KEY)}\n            component={Login}\n        />\n        <Scene\n            key={FORGOT_PASSWORD_KEY}\n            onEnter={() => onEnter(FORGOT_PASSWORD_KEY)}\n            component={ForgotPassword}\n        />\n        <Scene\n            hideNavBar\n            key={HOUSEHOLD_ATTRIBUTES_SET_UP_KEY}\n            onEnter={() =>\n                onEnter(HOUSEHOLD_ATTRIBUTES_SET_UP_KEY)\n            }\n            component={HouseholdSetUp}\n        />\n        <Scene\n            hideNavBar\n            key={ENABLE_NOTIFICATIONS_KEY}\n            onEnter={() => onEnter(ENABLE_NOTIFICATIONS_KEY)}\n            component={EnableNotifications}\n        />\n        <Scene\n            hideNavBar\n            key={COMPLETED_SET_UP_KEY}\n            onEnter={() => onEnter(COMPLETED_SET_UP_KEY)}\n            component={CompletedSetUp}\n        />\n        <Scene\n            hideNavBar\n            key={UTILITY_PICKER_SCENE_KEY}\n            onEnter={() => onEnter(UTILITY_PICKER_SCENE_KEY)}\n            component={UtilityPicker}\n        />\n        <Scene\n            hideNavBar\n            key={POKE_UTILITY_SCENE_KEY}\n            onEnter={() => onEnter(POKE_UTILITY_SCENE_KEY)}\n            component={PokeUtility}\n        />\n        <Scene\n            hideNavBar\n            key={REGISTER_SCENE_KEY}\n            onEnter={() => onEnter(REGISTER_SCENE_KEY)}\n            component={Register}\n        />\n        <Scene\n            hideNavBar\n            key={UTILITY_NOT_FOUND_SCENE_KEY}\n            onEnter={() => onEnter(UTILITY_NOT_FOUND_SCENE_KEY)}\n            component={UtilityNotFound}\n        />\n    </Scene>\n    <Scene\n        key={PROFILE_KEY}\n        onEnter={() => onEnter(PROFILE_KEY)}\n        component={Profile}\n    />\n    <Scene\n        key={TIPS_KEY}\n        onEnter={() => onEnter(TIPS_KEY)}\n        component={Tips}\n    />\n    <Scene\n        key={REBATES_KEY}\n        onEnter={() => onEnter(REBATES_KEY)}\n        component={Rebates}\n    />\n    <Scene\n        key={NOTIFICATION_SETTINGS_KEY}\n        onEnter={() => onEnter(NOTIFICATION_SETTINGS_KEY)}\n        component={NotificationSettings}\n    />\n    <Scene\n        key={INBOX_MESSAGE_KEY}\n        onEnter={() => onEnter(INBOX_MESSAGE_KEY)}\n        component={InboxMessage}\n    />\n    <Scene\n        key={SUPPORT_KEY}\n        onEnter={() => onEnter(SUPPORT_KEY)}\n        component={Support}\n    />\n</Scene>\n\n\n``. @Jun711 You had me really excited there but it didn't end up working. Any other ideas?. I also tried wrapping eachScenein aStackand giving it akeybut that didn't work either. I was able to remove the underscore by settingwraptofalse. It makesinvisible too. You need to wrap aaround the` and give it a width and height.. \n",
    "shilpan": "@aksonov @dwilt were you able to overcome this issue? I had to put a random setTimeout of some arbitrary amount to make this work. What would be beneficial is to provide a callback hook for when the actions are loaded since they seem to be loaded async?\n@aksonov do you think that might work?\n. ",
    "atlanteh": "So finally I understood what the problem is.\nThe problem is not the Scenes taking time to initialize.\nAction.login needs to have a the Actions.callback that the Router injects after first actual render which is after the root componentDidMount.\nHere's what happens:\nRoot render function called\nRouter render function called without state.reducer so does nothing.\nRouter componentDidMount called - Here the Actions get initialized and the reducer gets saved to the state (setState is async).\nRoot componentDidMount - here the callback is still not initialized.\nRouter render called - This call is triggered by the setState before. Now the Actions.callback is injected.\nSo after second render, the router is initialized.\nI managed to find a better solution than an arbitrary setTimeout.\nYou override the Router render method, and right after it's rendered with data, you notify the parent:\njs\nclass OverrideRouter extends Router {\n    constructor(props) {\n        super(props);\n        this.render = this.overrideRender;\n    }\n    overrideRender() {\n        const result = super.render();\n        if (!result) {\n            return result;\n        }\n        // after first initialization use the regular render.\n        this.render = super.render;\n        if (this.props.onRouterInitialize) {\n            // need this setTimeout to allow this method to complete so that the Actions.callback is populated\n            setTimeout(this.props.onRouterInitialize, 10);\n        }\n        return result;\n    }\n}\n. @dwilt I didn't say I solved it, I said I found a better solution than the arbitrary timeout solution.\nBut, I looked into it more, and managed to totally solve it :)\nI moved the handleProps function to the constructor and removed the async setState function\n. @dwilt I didn't think you were. I was just making my point clearer :)\n@aksonov I'v applied the fix to my app which does have Redux and it seems to work great. What failed for you then?\n. Any updates?\n. Yes. Please check it in your app and update so that they can check it in.\nThx!\n. @dwilt I wish we could, but @joenoon wants others to check this PR before he merge it in..This PR is rather sensitive as it touches the core of rnrf so it's better if someone else checks it before we rush into it.\nWhat you can do is replace the rnrf dependency in package.json with this:\n\"react-native-router-flux\": \"git://github.com/atlanteh/react-native-router-flux.git#patch-1\"\nThen perform an \"npm install\" to install my PR, and check that nothing breaks. \n. When componentDidMount of the Router's parent is invoked, the Router is ready to go :)\n. @dwilt, The problem is not Actions.foo() which doesn't exist, the problem is that this method calls Actions.callback function which gets asynchronously initialized..This is the problem. My PR makes sure it gets initizlized synchoronously so that in the parent componentDidMount, the Router and Actions are fully initialized.\nBut @joenoon already merge this fix :)\n. What I do, is render a white screen by default, and when AsyncStorage fires REHYDRATE action, the navigationController middleware (which is responsible for controlling the view navigations) navigates to the right place\n. In the Router I have a scene set to initial:\njsx\n<Scene key=\"white\" initial component={WhiteScreen} />\nThen, I have a navigation middleware:\njavascript\nimport {Actions, ActionConst} from 'react-native-router-flux';  \n    const startInitialRoute = (state) => {\n    const initialRoute = {type: ActionConst.RESET};\n    if (!state.login || !state.login.uid) {\n        Actions.login(initialRoute);\n    } else {\n        Actions.someOtherScreen(initialRoute);\n    }\n};\nconst navigationMiddleware = (/* store */) => next => action => {\n    const result = next(action);\n    const {type, payload} = action;\n    const numOfSteps = 4;\n    switch (type) {\n    case REHYDRATE:\n        startInitialRoute(payload);\n        break;\n    case ....\n    case ....\n    default:\n        break;\n    }\n    return result;\n};\nand when I create the store, i plug it as middleware.\n. fixes this issue: #686 \n. @aksonov, any update regarding this? \n. @joenoon\nActually, I ran into that problem because I ran into the same one.Calling an action in rnrf parent's componentDidMount results in an error. We choose the screen dynamicly, so we call different routes on componentDidMount. It's expected that the router is initialized when it's mounted and it's not. Only after the router is mounted it starts to initialize itself asynchronously, which means we have no idea when it's safe to call an action.\nIt makes no sense that we must set arbitrary timeout in hopes that the router is initialized after it, and currently this is the conculsion of #686.\nMy PR makes sure that once the router is mounted it's also initialized.\nThis allows the parent to call an actions on componentDidMount. \n. @joenoon, the problem is not the routes not being initialized, they actually are initialized synchronously. The problem is the router itself.\nYou see, Actions.callback is only defined in renderNavigation.\nThe problem is, that renderNavigation is called only after this.state.reducer.\nSo using Actions as a singleton or not, this problem is not solved.\n. Ok, so I just cloned my repository with the change and it seems to work great with rnrf example. I even played a little bit with hot loading and changing names & backgrounds and it doesn't seem to break any functionality. You can try it by cloning:\ngit clone -b \"patch-1\" https://git@github.com/atlanteh/react-native-router-flux.git\nand then run the rnrf example inside.\nIt would help a lot if the guys from #686 can try it and confirm it's working.\n@dominicmh, @rturk @charpeni @aksonov @dwilt @shilpan\nCan you guys help?\n. I'm not one of the owners of this project, nor a lawyer, but you can look in facebook & whatsapp \"about\" screen, there you can see a link to all the open source projects with their licenses, that they use in the app..(there's practically an endless scrolling there..).\n I think this licenses requires exactly that..\n. MIT requires publishing their license as well :)\nhttps://tldrlegal.com/license/mit-license\nWhat we did was just using a module to crawl all our dependencies, make\nsure they are permissive, and copy their license content to one big file..\nObviously it's not enough, as there are modules that are MIT without\nlicense file & copyright notices.. But at least we satisfy 90% of our\ndependencies tree..\nOn Thu, Sep 22, 2016, 21:12 Josh Habdas notifications@github.com wrote:\n\nI was afraid of that. Any chance on switching to MIT? There are probably\nhundreds of apps going into the store right now which break your licensing\npolicy.\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/aksonov/react-native-router-flux/issues/1199#issuecomment-248982898,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ADxQPBSz1D_2yjcJ1lxsVAvFMzRGv4Umks5qssT3gaJpZM4KB-rQ\n.\n. Ok, so I guess you're right. But how many people do you think are going to press on a \"licenses\" link inside your \"about\" page, just to see a long list of project you're using? Facebook does it, Whatsapp does it. Chrome does it. Nobody cares,  but it's there..\nI do however agree with you that this license makes many people break its policy.. However, the oweners have put a lot of work in here and they probably want to be acknowledged, even if it's in a dark place in the app..Of course if they decided to change it to MIT, it could be cool :)\n. ??\n. @aksonov Do u guys have any estimations as to when the release will be published? \n. +1 happens to me too\n. We (my company) actually implemented it..\nYou need to connect your icon component to redux and it works great..\n\n``` jsx\nimport YourTabIcon from './YourTabIcon';\nconst mapStateToProps = state => {return {badgeCount: state.notifications.count};};\nconst ConnectedYourTabIcon = connect(mapStateToProps)(YourTabIcon);\n// ...\n\n```\nand in YourTabIcon you can implement your badge :)\n. ",
    "boghbogh": "Is this fixed? I don't understand what I should do to get over this? Where is the right spot to call Actions.methods.. ?  If not in componentDidMount? where? \nThanks Much. ",
    "Nemsae": "Sorry to add to the noise, but is there a fix for this?\n. Or just rollback to v 3.38.0\nnpm install --save react-native-router-flux@3.38.0. ",
    "DavidBrear": "Sounds good. I just wasn't sure since it says it's version 3.22.23 via NPM but the code is slightly different from what's available from master branch. I honestly just went into each of the files and manually changed it to use react which solved the warning problem. Not my finest moment but it worked.\n. ",
    "sunnyyants": "Yes, I have the same situation when I try to use reset after authentication...\n. ",
    "Glavin001": "Excellent. #698 is the way to go. Thanks for your quick response and merging!\n. ",
    "ronak301": "Ya this have solved my problem for the time being. Thanks to @joenoon for quick reply.\n. ",
    "JimmyStavros": "I'm still having the same issue even after manually installing the dependency, anything else I can try?\n. Agree. It also seems like the example is pretty outdated compared to the current API.\n. ",
    "calvinmetcalf": "FYI this exists https://github.com/calvinmetcalf/minimalistic-assert\n. I'm the author of minimalistic-assert fyi but it would probably make sense to just require a specific version\n. in fairness it's especially dangerous for a situation like react-native\nwhere you are consuming libraries from a different ecosystem meaning things\nthat are not a breaking change in node/browserify/webpack are breaking for\nyou guys\nOn Thu, May 19, 2016 at 11:44 PM Loch Wansbrough notifications@github.com\nwrote:\n\nLibraries should version lock their dependencies. Using the carat is\ndangerous.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly or view it on GitHub\nhttps://github.com/aksonov/react-native-router-flux/issues/697#issuecomment-220516121\n. \n",
    "lwansbrough": "Libraries should version lock their dependencies. Using the carat is dangerous.\n. ",
    "zccan": "@jeroenbourgois yes this helps. thank you @Kerumen \n. @BrainTrain3000 I get the same issue. particularly, this makes user very confused when he quickly touch scenes that wraps in a listView, because the previous subView doesn't  have enough time to unmount.\n. ",
    "dann1609": "this is not hidden status bar. Only hide text but bar still present\n. ",
    "Biplovkumar": "this is not hidden status bar. Only hide text but bar still present. ",
    "xotahal": "I think, update to 0.26-wip could help for now\n. npm i react-native-router-flux@aksonov/react-native-router-flux#0.26-wip\nYou will have probably more issues due to breaking changes of 0.26 version of https://github.com/facebook/react-native/releases\n. It's just a guess. If you use side menu, you will have to add onNavigate prop to DefaultRenderer. In  side menu integration example is same issue - there is not onNavigate prop.\njs\n<DefaultRenderer navigationState={children[0]} />\nvs.\njs\n<DefaultRenderer navigationState={children[0]} onNavigate={this.props.onNavigate} />\nAnd also, if you use DefaultRenderer somewhere, you should pass onNavigate prop now\n. ",
    "gmchaturvedi1": "how to do that can u suggest?\n. ",
    "jneumann": "Jawesome! That works now.\n. ",
    "DominicTobias": "I have the same error with the latest version and latest react/react-native on an empty project\n. The solution was to quit the emulator and the packager terminal and restart\n. ",
    "brenthosie": "my package.json is pointing to \"react-native-router-flux\": \"^3.33.2\" and @DominicTobias 's suggestion worked for me.\n. ",
    "nalwayaabhishek": "I am getting same error, while running the test with mocha. I also tried to use \"react-native-router-flux\": \"aksonov/react-native-router-flux#0.26-wip\" but no luck. \n. ",
    "j-wang": "For posterity, since I almost missed it scrolling through after being brought here on Google by this error message:\n@DominicTobias's solution worked for me. \nRN v0.33.0 and react-native-router-flux v3.35.0.\n. ",
    "Baskerville42": "This comment is helpful, thanks!\n. ",
    "luisfrocha": "@DominicTobias 's solution worked for me.. ",
    "jadidian": "This is gonna be a killer feature, imagine every single view on mobile app can be addressable... Maybe using Linking and Page for parsing URLs would do the job...\n. It turned up to be very easy, I just made a simple project on iOS and it worked... writing the steps here for anyone interested:\n1- Open the Xcode project, click on the project root, then \"Info\", add a URL type at the bottom\n\n2- Follow the instructions on Linking page, you have to add the header's search path in Xcode as described here, then copy paste these two methods in your AppDelegate.m to enable your JavaScript receive URL events:\n``` objc\nimport \"RCTLinkingManager.h\"\n\n(BOOL)application:(UIApplication )application openURL:(NSURL )url\n  sourceApplication:(NSString *)sourceApplication annotation:(id)annotation\n{\n  return [RCTLinkingManager application:application openURL:url\n                      sourceApplication:sourceApplication annotation:annotation];\n}\n\n// Only if your app is using Universal Links.\n- (BOOL)application:(UIApplication )application continueUserActivity:(NSUserActivity )userActivity\n restorationHandler:(void (^)(NSArray * _Nullable))restorationHandler\n{\n return [RCTLinkingManager application:application\n                  continueUserActivity:userActivity\n                    restorationHandler:restorationHandler];\n}\n```\n3- npm install --save crossroads Crossroads is a route matching library which does a lot, I guess its too much for simple route matching, but I couldn't find anything simpler... I tried Page first but it didn't work, I guess its intended to work with browser's location only\n4- My entry point looks like this:\njs\n// index.ios.js\nimport app from './source/app';\napp('ios');\n5- My app looks like this... ignore the Redux stuff if you're using something else:\n``` js\n// source/app.js\nimport React from 'react';\nimport { AppRegistry } from 'react-native';\nimport { Provider } from 'react-redux';\nimport Router from './containers/Router';\nimport configureStore from './store';\nconst store = configureStore();\nexport default function app(platform) {\n  let Test = React.createClass({\n    render() {\n      return (\n        \n\n\n      );\n    }\n  });\nAppRegistry.registerComponent('Test', () => Test);\n}\n```\n6- Finally, the router:\n``` js\n// source/containers/Router/index.js\nimport React, { Component, PropTypes } from 'react';\nimport { Linking } from 'react-native';\nimport { connect } from 'react-redux';\nimport { Actions, Router, Reducer, Scene } from 'react-native-router-flux';\nimport crossroads from 'crossroads';\n// import some views\nimport PageOne from '../PageOne';\nimport PageTwo from '../PageTwo';\nimport PageThree from '../PageThree';\n// define router scenes\nconst scenes = Actions.create(\n  \n\n\n\n\n);\n// define URL schemes\ncrossroads.addRoute('page-one/{id}', Actions.pageOne);\ncrossroads.addRoute('page-two/{id}', Actions.pageTwo);\ncrossroads.addRoute('page/:whatever*:', Actions.pageThree);\nclass Routes extends Component {\nstatic propTypes = {\n    dispatch: PropTypes.func\n  };\nconstructor(props) {\n    super(props);\n    this.createReducer = this.createReducer.bind(this);\n  }\ncomponentDidMount() {\n    Linking.addEventListener('url', this.handleOpenURL);\n  }\ncomponentWillUnmount() {\n    Linking.removeEventListener('url', this.handleOpenURL);\n  }\nhandleOpenURL(event) {\n    if (event.url && event.url.indexOf('test://') === 0) {\n      // remove \"test://\" and try to match\n      crossroads.parse(event.url.slice(7));\n    }\n  }\ncreateReducer(params) {\n    const defaultReducer = Reducer(params);\n    return (state, action) => {\n      this.props.dispatch(action);\n      return defaultReducer(state, action);\n    };\n  }\nrender() {\n    return (\n      \n    );\n  }\n}\nexport default connect()(Routes);\n```\n7- Open Safari, type \"test://page-two/123\" and you should be taken to PageTwo\n. Totally forgot about this... just wanted to add something to my previous comment, that will only work if app is already in background on iOS, if you want to handle URLs even when the app is closed you should add this to the component\n``` js\n  componentDidMount() {\n    Linking\n      .getInitialURL()\n      .then(url => {\n        this.handleOpenURL({ url });\n      })\n      .catch(error => console.error(error));\n    Linking.addEventListener('url', this.handleOpenURL);\n  }\ncomponentWillUnmount() {\n    Linking.removeEventListener('url', this.handleOpenURL);\n  }\n``\n. Real world example, if I pass an id to a componentActions.showPost({ id: 123 })it renders the scene for`, then the component will fetch the post from network, and then I want to update the navigation title to show the post's title up there...\n. @sarovin thank you!\n. ",
    "dimoreira": "Any news on this?. ",
    "mattotodd": "using the method described above by @jadidian - this does work on android too.\nIf i want to be able to deep link to the following url:  myappscheme://page-one/some-id\nadd the following intent-filter to your AndroidManifest.xml file under the .MainActivity:\n<intent-filter>\n    <action android:name=\"android.intent.action.VIEW\"/>\n    <category android:name=\"android.intent.category.DEFAULT\"/>\n    <category android:name=\"android.intent.category.BROWSABLE\"/>\n    <data android:scheme=\"myappscheme\"\n         android:host=\"page-one\"\n         android:pathPrefix=\"/\" />\n</intent-filter>\n. ",
    "justuseapen": "@aksonov Does V4 address this issue?. ",
    "franzejr": "@mvaivre I got this on iOS.\n\n. I have already tried that. But it seems it does not work. I have the state set up on componentDidMout, it calls the render again when the state is changed.\n``` javascript\nexport default class App extends Component {\nstate = {\n    onboarding: 'pending',\n  }\ncomponentDidMount(){\n    AsyncStorage.getItem('onboarding').then((val) => {\n  if (!val) {\n    this.setState({ onboarding: 'pending'});\n    AsyncStorage.setItem('onboarding', 'done').done();\n  } else {\n    this.setState({ onboarding: val});\n  }\n\n}).done();\n\n}\nrender() {\n    var showTutorialView, showMainScreen;\nswitch (this.state.onboarding) {\n  case 'pending':\n    showTutorialView = (<Scene key=\"tutorialView\" component={TutorialView} title=\"Tutorial View\" initial />);\n    showMainScreen = (<Scene key=\"mainScreen\" component={MainScreen} title=\"My App\" />);\n    break;\n  case 'done':\n    showTutorialView = (<Scene key=\"tutorialView\" component={TutorialView} title=\"Tutorial View\" />);\n    showMainScreen = (<Scene key=\"mainScreen\" component={MainScreen} title=\"My App\" initial />);\n    break;\n};\n\nvar scenes = Actions.create(\n  <Scene key=\"root\">\n    {showTutorialView}\n    <Scene key=\"validateNumberScreen\" component={ValidateNumberScreen} title=\"Validate Number\" />\n    <Scene key=\"verifyPinScreen\" component={VerifyPinScreen} title=\"Verify PIN\" />\n    <Scene key=\"personalInformationScreen\" component={PersonalInformationScreen} title=\"Personal Information\" />\n    {showMainScreen}\n  </Scene>\n);\n\nreturn (<Router scenes={scenes} />);\n\n}\n}\n```\n. ",
    "sandeepgujela": "how can remove this yellow screen(\"SceneRendererProps\") in android ??\nusing \"react-native\": \"^0.26.0\"\n          \"react-native-router-flux\": \"^3.26.0\",\n. ",
    "mnadbader": "I'm debugging the package and i have deleted the heade style position:'absolute', and i founded that the navbar is duplicated. See attached pic.\nAnd we can see that the title hide a part of the drawer image.\n\n. yes a typo mistake  :) thx\n. i founded a solution by addind type='reset' in  homeDrawer scene and main scene\n. the issue is that i have a duplicated navbars.  i debugued the component and i have elminated the issue by checking if hidenave=true to return null in render function of navbar. So i suggest that there's a bug whit navbar in this version.\n. backgroundColor:'rgba(255,255,255,0.5'\n. ",
    "mlevkovsky": "@CoericK and @itinance, @aksonov is right. This is simply the nature of react.\nI need to refresh the state of the navbar in my component will receive props method but what you can do is just to set certain flags to not refresh it.\nFor example:\ncomponentWillReceiveProps(nextProps) {\n      //if in the state we are moving from  not being chosen to chosen we want to display\n      //the next button\n      if(!this.props.wasChosen && nextProps.wasChosen){\n        Actions.refresh({\n          rightTitle: 'a new title',\n        });\n        return;\n      }\n}\nAnd if the state is moving from let's say a button NOT being chosen to being chosen, then update the navbar.\nShould avoid the maximum call stack issue\n. +1 on this\n. Try ActionConst.REPLACE as a parameter like this: Actions.someAction({type: ActionConst.REPLACE})\n. +1 it's a pretty big blocker. Any ideas on how to go around this?\n. @spltTrevor but even if you do tabs = {true} and you console logs the navigation children, you will notice that some of the scene keys are simply missing :/\nIs that the expected behaviour? Also in their docs they do mention that this is a good way to have restricted (i.e. loggedin/out) scenes.\n. @spltTrevor hmm interesting. I wonder if it's because I am doing ActionConst.RESET as the navigation type, because even with tabs={true} I was having the issue of the disappearing scene. \nI'll investigate more and hopefully it's what @braco noticed.\n. trying to achieve the same effect. I want to add an icon badge to a tab icon, but only after I get an API response. That's exactly what I am trying now lol.\nIt's just weird because it seems that custom props don't trigger the component will receive props methods in the icon :/. @Amurmurmur ya that solution worked just fine.\nI connected the tab icon to the store and handled everything in there. sure thing. Just give me a bit. same issue here, I am using redux and when I try to  refresh the right button it just doesn't update.\n. ",
    "nbolender": "If anyone is stumbling upon @Elyx0's reducer above, here is a version that works with the latest. Namely the changes are using ActionConst.JUMP instead of \"jump\", and using sceneKey instead of name when getting the tab root key.\n``` javascript\nimport { Reducer, ActionConst } from 'react-native-router-flux';\nconst inTabMenu = (state) => {\n  if (state && state.children && state.children.length > 0) {\n    return state.children[0].name = \"tabbar\";\n  }\n  return false;\n};\nconst getActiveTabName = (state) => {\n  if (state && state.children && state.children.length > 0) {\n    let cbase, parent = null, base = state;\n    while(cbase = base.children) { parent = base; base = cbase[base.index];  }\n    if (parent && parent.children.length) {\n       //console.log('activeTabName',parent.name,'[[<<<   >>>]]');\n       return parent.name;\n    }\n  }\n  return undefined;\n};\nconst getTabTreeIndex = (state) => {\n  if (state && state.children && state.children.length > 0) {\n    let cbase, parent = null, base = state;\n    while(cbase = base.children) { parent = base; base = cbase[base.index];  }\n    return parent.index;\n  }\n  return undefined;\n};\nconst getTabRootName = (state) => {\n  if (state && state.children && state.children.length > 0) {\n    let cbase, parent = null, base = state;\n    while(cbase = base.children) { parent = base; base = cbase[base.index];  }\n    return parent.children[0].sceneKey;\n  }\n  return undefined;\n};\nexport const reducerCreate = params=> {\n  const defaultReducer = Reducer(params);\n  return (state, action)=> {\n    // this part makes sure that when a menuIcon is pressed AND you are already in that menu tree,\n    // it goes back to the root of that tree\n    if (action.type === ActionConst.JUMP && inTabMenu(state)) {\n      console.log('JUMP IN TAB MENU')\n      let activeTabName = getActiveTabName(state);\n      // We only want to reset if the icon is tapped when we're already in the view\n      //debugger;\n      if (activeTabName === action.key) {\n        // if we're already at root, do not do anything.\n        if (getTabTreeIndex(state) === 0) {\n          console.log('Already in root');\n          return state;\n        }\n        // snap to root.\n        //debugger;\n        let rootName = getTabRootName(state);\n        if (rootName) {\n          console.log(\"ACTION ROOT\", {key:rootName, type:'reset'});\n          return defaultReducer(state, {key:rootName, type:'reset'});\n        }\n      }\n    }\n    console.log(\"ACTION\", action);\n    return defaultReducer(state, action);\n  }\n};\n```\n. @itelo You can take that entire example and put it in its own file, then import it to your root component (where your Router component lives). Just set it up like so:\n```javascript\nimport React, { Component } from 'react';\nimport { Router, Scene } from 'react-native-router-flux';\nimport myReducerCreate from 'my-reducer-example';\nclass MyApp extends Component {\n    render() {\n        return (\n            \n\n                ...\n            \n        );\n    }\n}\n```. @itelo You probably need to combine it with any reducers used by Redux. Try checking the Redux docs and your code for combineReducers().. @arnsa I am working off of this version of this library. Maybe something has changed recently that affects this: https://github.com/aksonov/react-native-router-flux/commit/2b09f47740bb0f5829e8419d9ba6622aef20c42c\nIn any case, I expect to be switching to a different library for navigation the next time I upgrade my app.. @itelo To answer your second question, you can create a custom navbar. You can either pass a navigationBarStyle prop to your Router or Scene (along with other properties like titleStyle, backButtonTextStyle etc.), or you can pass a whole custom component to the navBar prop List of props here: https://github.com/aksonov/react-native-router-flux/blob/master/docs/API_CONFIGURATION.md. ",
    "itelo": "@nbolender, can you post a full example or a link?. Hey @nbolender, i'm getting no reducer provided for key routes, seems to be a problem in my redux config. ",
    "AnsalAli-mudano": "Is there any other solution than implementing custom reducer for routing? I think this is a general scenario and every one who uses tabview needs this behaviour. If someone has any idea about this, please discuss it here. . ",
    "arnsa": "@nbolender for some reason inTabMenu returns me false :( I suppose it's not working anymore?\nEDIT: I noticed that the children property, at least for me, is under state.scene.children, not state.children. Also, when I click on the tabbar icon for the first time, it doesn't have any children for some reason :(.. +1. Waiting for a solution.. Also need for a solution :(. @bulkyracehorse512 hm, interesting. But could you please show me how have you overriden pop() action? I am not sure how to do that.. Same issue here. Anyone?. @jonrh actually, after many hours of thinking and hacking I've found what works and that was really simple. All I needed to do, was implement FOCUS action like shown here: https://github.com/aksonov/react-native-router-flux/blob/master/docs/REDUX_FLUX.md Now everything works perfectly!. Okay, I've fixed it myself by adding height to style prop and paddingBottom to tabStyle prop on Tabs component.. @ChristianTucker @asciifaceman you could do something like this:\nInteractionManager.runAfterInteractions(() => {\n    // clear state here\n});. ",
    "adriandiaz": "Has anyone figured a work around for this or has it been resolved? It seems like this issue still persists in v4. If anyone else is experiencing this issue, just tested it in on the previous version 3.37.0 and that fixed the issue (I was using 3.38.0). However, 3.37.0 has the issue mentioned on #717 where tapping a tab while you're viewing it doesn't pop back to default scene. So it looks like by attempting to resolve #717 in version 3.38.0 it caused the above issue. Would be sweet if next version could address both cases.. ",
    "MartinCamen": "It's working for me in an older version (3.38.0) but not in a newer project with a newer version (^4.0.0-beta.22)... Does anyone have any solution for this for v4?. ",
    "lateau": "Here's my solution on >=4.0.0-beta.\nI suppose that we have three children on a tabbar and want to see default scene always when it's tapped.\n\nProfile Menu\nProfile summary(default scene)\nChange your name\nChange password\n\n```jsx\n {\n    const { route, focused } = scene;\n    if (focused) return; // Skip transition when if a tab is already focused to prevent unwanted hard refresh.\n    const { key } = route; // This is a key of a scene has been tapped.\n    if (key === 'profile_summary' && route.routes.length > 1) { // You've leave a child scene before, excepts default.\n      Actions.replace('profile_summary'); // This might be what you want to do. It will show you default scene with fresh state.\n      return;\n    }\n// Otherwise, jump to next scene has been tapped with a index\n   jumpToIndex(scene.index);\n  }}\n\n<Scene\n    key=\"profile_tab\"\n<Scene key=\"profile_summary\" ... />\n<Scene key=\"change_name\" ... />\n<Scene key=\"change_password\" ... />\n\n\n  <Scene\n    key=\"another_tab\"\n...\n\n\n\n```\n\nNote that route.routes will always include default scene whether it is previously stacked or not. While Actions.replace(...) gives you fresh default scene(re-mounted), you might try  jumpToIndex(route.routes[0].index) to display default screen you've seen little bit before.. Hello @aaron25mt \nThat's weird. Did you try a Example project on this repository?\nI don't try it but it might work. Add tabBarOnPress property into this Tabs:  https://github.com/aksonov/react-native-router-flux/blob/master/Example/Example.js#L140. ",
    "aaron25mt": "@lateau Solution looks good, I want to try it out but my tabBarOnPress function isn't getting called. Any suggestions?\nE: For anyone else having issues with this, tabBarOnPress won't get called if you also have backToInitial set.\n2932 . @lateau Yes, I tried with an existing problem. Found my issue was that you cannot specify both tabBarOnPress and backToInitial as props to Tabs, but I found a fix. Thanks though!. V4, I just put my two buttons in a View and applied flexDirection row style on them and that worked for me.\nlet navButtons = <View style={{flexDirection: \"row\"}}>\n        <Button icon transparent onPress={this.search}>\n          <Icon name=\"search\"></Icon>\n        </Button>\n        <Button icon transparent onPress={this.showCart}>\n          <Icon name=\"cart\"></Icon>\n        </Button>\n      </View>. Created a fix for this, will make a PR.\nSee my repo here if you need the fix ASAP.. You might be clicking too fast, I get that sometimes but usually works fine using the Actions.refresh method.\n. See here #717 . Try changing <Tabs hideNavBar={false}> to <Tabs hideNavBar={true}> and then add hideNavBar={false} to each scene. I think that'll work.. a little repetitive but it's what I'm doing for now.. If you navigate to a different Stack there is no back button because you are on the root of that stack. If you want a back button, you can specify back={true} as a prop to your scene (though I'm not sure what behavior that will cause).. I believe the Back button calls NavigationActions.back() from React Navigation (see here).. ",
    "hartmamt": "+1\n. I was actually having a similar issue but it was related to redux.  If my scene points to a container component that I've 'connected' to my store everything works.  I had my container too high up and the props weren't passing down to the scene.\n. ",
    "rseemann": "@joenoon  That was actually the main goal, but the first step to do it, imho, would be to allow popping of more than one scene at a time.\nHow could this corrupt the navigationState and how could it be done differently other and changing the state as they are being changed now?\n. @joenoon what do you think of this way of implementing the multiple pops?\n. @joenoon I also thought about a more complex structure, but I wouldn't know how to handle it, since I don't fully understand the routing structure. Maybe I'll do some testing with the Example app as you mentioned, great idea.\n. @aksonov The structure I kind of understand, popping those, instead, I'm not sure I understand, specially  with the index number. About the linting, I'll fix those, for sure.\n. @aksonov so this number does not depend on how deep the structure is, but rather on how many scenes there are currently in the stack?\n. @aksonov that seems simple enough then. I'll make the necessary changes, add some examples and fix the linting then. Thanks for the explanations.\n. @joenoon and @aksonov I made some much deeper changes to handle the navigation to any scene that exists in the stack, node or component. Both usages can be seen at the example, with the newly component login3. I'm not fully happy with the node/component detection, maybe you can tell me if that's a reliable check.\n. @BenBenz I haven't checked on this since a while. Unless something changed in the navigation way, it should work.. @Swordsman-Inaction I still haven't had time to work further on this, but if you need this ASAP and your tree structure is simple enough you could try the fork for now.\n. The default behaviour for an Android app when the back button is clicked in the root view, is to exit the app, as far as I remember.\n. @Swordsman-Inaction I mean for native Android development, I'm not sure how it works here\n. @aksonov how does one make use of this? I understand the concept of calling the action, but is there a type that I can add to the component to allow this to action to be called, instead of the default push?\n. @spltTrevor I'm getting this error, even with tabs={true}. \nMy case is very similar to the example you posted, the weird thing is: this was working before, but doesn't seem to be working anymore.\nA quick inspection on the parameter sent to the connect(state => ({ user: state.user }))(Switch) selector shows that the Scene children are deleted after the second time the selector is called. \n. I was experiencing this error while using the latest version (installing with commit number). After reverting to 3.35 I don't see this happening anymore (but I lost passing props to tabs). Could this be related to #1057? @benstepp\n. I am using the tabs as stated in the docs, so much that everything works on 3.35. But just as @blackxored stated, on latest HEAD (which I'm using for passing props to tabs) this error occurs.\n. @aksonov can try it later today.\n. @aksonov I haven't been able to test this yet, if anyone feels like taking this over, please feel free.\n. This is due to Jest, in an old version, not having Image mocked. This has been fixed here: https://github.com/facebook/jest/pull/1451. The problem should go away if you update your jest version.\n. @aksonov why was this removed?\n. Is the action poping to the right scene and the myPropToUpdate is not updating, or what is happening?\n. @brunolemos oh, glad to hear it!\n. I'm not entirely sure of the need of some further action.parent manipulation here due to not fully understanding what it is done with it, please let me know if such handling is needed.\n. ",
    "alfonsodev": "Closing as is not working as intended, help is welcome .\n. ",
    "jhen0409": "I also have similar question but different purposes, if it doesn't auto-transition depends on the state, it will be unable to use remote-redux-devtools instrument functions. (e.g. skip push action and back to previous scene)\nFinally I directly used NavigationExperimental, the RootContainer must get the same state, the skip action is works very well.. @BerndWessels Unfortunately, react-native-router-flux doesn't provide a way to set navigationState for Router, it has its own state, so it doesn't to do time travel.\nI don't know if it have any change, I haven't tried it for a long time.\nCurrently I'm considering to use react-navigation instead of NavigationExperimental.. ",
    "yuyixg": "@cridenour  thank you ,demo is not issue ,my project is upgrade\n. ",
    "Hu4F00d": "Can confirm what @ssomnoremac said. The error seems to happen when you don't include an Icon for the tabs.\n. ",
    "jnbt": "I've also encountered the same problem\n. +1. @ShMcK Wouldn't be instrumenting React.PureComponent the more \"future-ready\" solution? https://facebook.github.io/react/docs/react-api.html#react.purecomponent. I think this is a duplicate of  #1761 . ",
    "andrispraulitis": "Works for me\n. https://github.com/andrispraulitis/tournament\nThere are 3 issues with this:\n1) clone doesn't work on event tabbar (on Messages works fine as it's not a nested scene and not a tab)\n2) Actions.event() focuses first tab twice, not sure why\n3) 2nd tap on any tab doesn't focus scene, only parent focused (same issue for both tabs: drawer & event)\n. Looks like you need to wrap your drawer scenes with a scene.\n. same as #785 ?\n. Hi,\nNot sure what unmountScenes does, so far seems this only sets index back to 0 but doesn't actually reset history stack which is why I have the same problem.\nExample:\n<Scene key=\"main\" tabs unmountScenes hideTabBar>\n<Scene key=\"auth\">\n    <Scene key=\"intro\">\n    <Scene key=\"login\" type=\"push\">\n</Scene>\n<Scene key=\"app\" tabs hideTabBar={false}>\n    <Scene key=\"dashboard\">\n     <Scene key=\"menu\">\n</Scene>\n\n</Scene>\nSteps to reproduce:\n1. auth is the initial tab & intro is the initial scene\n2. push from intro to login\n3. jump from auth to app\n4. jump from app to auth (on logout)\n5. now state for auth tab is broken because index (unmountScenes) is set to 0, but auth still has 2 children and child with index 1 is login and this is where push gets conflict\nBy setting login type to ActionConst.PUSH_OR_POP seems to work just fine, BUT...\nCan someone confirm pushOrPop is the correct option here or my scene nesting is wrong?\n. @aksonov Example: https://github.com/andrispraulitis/tournament\nThe issue actually seems that the second time you tap on a tab it doesn't call focus action on the scene. (In my example 2nd tap on tab focus only called on drawer)\n. RNRF Example:\nSwipe back action type is \"back\", but Actions.pop() action type is \"BackAction\"\n. @sarovin @Shakarang I have both of these issues too..\nRN@0.28\nRNRF@3.30.0\n. #855 \n. #940 \n. I use clone to achieve this:\n<scene key=\"search\" clone>\n<scene key=\"home\" tabs>...\n. Can you paste full scene setup?\n. You never said \"search\" is a tab, so by default type is jump. Not sure how to get this working. Why do you need \"root\" as tabs?\n. Why don't you do it facebook F8App style to do the switch for auth?\nCurrently you have 3 levels of tabs..\n. Don't think so, but for me too complex if every scene is a tab...\nSelector doesn't work without tabs?\n. I assume you want to persist main tabs.\nFrom your scene setup \"auth, search, main\" makes no sense to be a tab because as I see it you are not navigating/jumping between them, are you?\n. Try type replace for auth and main and remove tabs from root.\nI'm not sure how you'll persist main tabs on search scene, you'll need some logic there what happens when you switch tabs while on search scene.\n. I meant reset not replace, sorry\n. That looks about right since you would never navigate to scene in same level as main once logged in\n. https://github.com/skv-headless/react-native-scrollable-tab-view\n. I assume \"msg\" is not the scene you want to refresh. Have you tried Actions.pop({refresh: {key: \"SCENE_KEY_TO_REFRESH\"})} ???. Hi,\nI also need this, BUT.. can you set the state styles the last so you can always override?\nImagine what happens if you set flexDirection to row? (alignItems prop here would not work if you can't override that..)\n. I'm not priviliged to accept pull requests, in fact I'm waiting on my pull request with the exact same issue on tabbar.\n#1459. I've tried this but seems that RN zIndex does not work over parent siblings so no luck.\nTake a look at the screen shot where my scene is (0_SettingsMenu_), it's deep in the tree and can't overpower NavBar with zIndex. Looks like there is no way unless there is a way to set styles for View key=\"scenes\".\n\n. ",
    "sharq1": "@jaimeagudo try following changes to snowflake.js:\n\n. @jaimeagudo you are right, it should be connected to the store, which should be done this way const RouterWithRedux = connect()(Router), so the difference is that we import Router and use it instead of RNRF.Router and use the RouterWithRedux in render method - it works for me.\nIt looks like this is the suggested way from RNRF docs: https://github.com/aksonov/react-native-router-flux/blob/master/docs/REDUX_FLUX.md\n. ",
    "jaimeagudo": "thanks @sharq1 , that pass the error but afaik won't bind the Router component to the store which I think is wrong https://github.com/reactjs/react-redux/blob/master/docs/api.md#connectmapstatetoprops-mapdispatchtoprops-mergeprops-options \n\nHonestly I am just starting with RN and I have serious doubts if all this troubleshooting and breaking changes worth, I am considering swift which curiously has some tools inspired by React architecture\nhttps://reswift.github.io/ReSwift/master/\nhttps://github.com/alexdrone/Render\n. ",
    "ramigb": "@cridenour thank you, that's what I will do for now. \n. ",
    "stereodenis": "react-native@0.37.0\nreact-native-router-flux@3.26.0 \n@ramigb @cridenour what should I do to fix it?\n. componentDidMount() {\n  InteractionManager.runAfterInteractions(() => {\n    this.setState({ ready: true })\n  })\n}\n. @badaz closing issue?\n. componentDidMount() {\n  InteractionManager.runAfterInteractions(() => {\n    this.setState({ ready: true })\n  })\n}\n. @lesniakania @timzaak ?\n. @lesniakania maybe @aksonov ?\n. @charpeni @aksonov I had rebased branch\n. @aksonov \n- readability\n- new modern syntax\n- less code\n. @aksonov yep, https://daveceddia.com/avoid-bind-when-passing-props/\n. @D1no look at\nhttps://github.com/react-community/react-navigation/issues/2585\nand\nhttps://github.com/react-community/react-navigation/pulse/monthly . ",
    "yberstad": "@aksonov, I'm sorry, but I do not know the custom when having questions on a closed issues, should I create a new and reference the old, or could I try to use the same issue? I'll try using this issue/thread, please correct me if I'm doing it wrong.\nSo my main question is, how can I publishing a redux event with payload, when the basis for this payload is in a \"SceneComponent\"? \nAn example would be a form, and when the user has filled in all input fields and pressed \"Done\" triggering the \"onRight()\", I would like to publish an redux event with the form data. Do I need to create my own NavBar as suggested in #747 ? Is there a better way, or have I misunderstood something?\n. ",
    "xiaopow": "@rturk I don't believe so. I have a view container wrapping up my chatBox components and that's it.\n```\n    \n\n\n    <ListView\n      ref='listView'\n      style={{\n        flex: 1,\n        transform: [\n          { scaleY: -1 },\n        ]\n      }}\n      initialListSize={15}\n      pageSize={5}\n      scrollRenderAheadDistance={10}\n      enableEmptySections={true}\n      dataSource={this.state.messages}\n      onLayout= { (event) => {\n        // var layout = event.nativeEvent.layout;\n        // this.listHeight = layout.height;\n      }}\n      onContentSizeChange = {() => {\n        // console.log('onContentSizeChange')\n      }}\n      renderRow={this.renderRow.bind(this)}\n    />\n    <View style={styles.textInputContainer}>\n      <TextInput\n        style={[styles.textInput, {height: Math.min(120, Math.max(40, this.state.textInputHeight))}]}\n        onChange={(event) => {\n          this.setState({\n            newMessage: event.nativeEvent.text,\n            textInputHeight: event.nativeEvent.contentSize.height,\n            disabled: event.nativeEvent.text.trim().length ? false : true,\n          })\n        }}\n        onEndEditing={(event) => {\n          this.setState({\n            newMessage: event.nativeEvent.text,\n            disabled: event.nativeEvent.text.trim().length ? false : true,\n          })\n        }}\n        value={this.state.newMessage}\n        autoFocus={false}\n        blurOnSubmit={false}\n        multiline={true}\n        enablesReturnKeyAutomatically={true}\n        placeholder=\"Enter your message...\"\n        autoCorrect={true}\n      />\n    </View>\n  </View>\n\n```\n. @rturk How can I know the slide starts? \nI am currently using \nvar dismissKeyboard = require('dismissKeyboard');\nto dismiss the keyboard when I press back button.\nOtherwise, is there a way I can disable the user swipe gesture to pop the component? Currently, the user can swipe anywhere on the view to remove the component, I would much prefer if the user has to start the swipe on the left edge instead of anywhere on screen.\n. ",
    "vonovak": "use react-native-dismiss-keyboard\n. Just looking at it, I'd try this: you can transition to your scene 3 like Actions.Scene(custom props here). In custom props, you can pass the original scene that the user came from and then pass that even to the subscenes and then you'll know where the user came from and use that I formation to go back. \n. solved by not using the static renderNavigationBar and focusing the field upon the end of animation\n. I just rendered the search field as part of the content. \n. @MirGhojam I honestly don't remember. I switched to ex-navigation soon after trying out RNRF. The next, hopefully final switch, will be to react-navigation :) . Try using the interactions manager as in the following link. Works for me on Android \nhttps://github.com/facebook/react-native/issues/2248 \n. I'm also not a fan of the current JS-based navigation, however, I'd first like to see this library use the NavigationExperimental from RN core (I believe it will become stable in a couple of weeks) and have something that is fully usable. Maybe it's already implemented but last time I checked I was missing platform-specific animations for scene transitions.\nSome other thoughts - consider\n<Scene\n       ....\n       onRight={() => alert('Right button')}\n       rightTitle=\"Right\"\n/>\nI'm building an app for both iOS and android with completely different navbars for the two platforms and I feel like the code that has something to do with a navbar (onRight, rightTitle) should be moved to the respective components instead of being part of the Scene. Thanks for the lib!\n. yes, also encountered this. seems it wasn't released yet\n. sorry, actually I just wasn't running the latest version. Works for me now\n. my understanding is you wouldn't use them together but only one of them\n. @D1no I personally don't see any perf problems with react-navigation on android, and my app isn't all too simple. It may be the problem wasn't with the library but with the people's code. Also make sure to not run the code in dev mode if testing for perf.... ",
    "steida": "Use React key\n. Upgrade to React Native 0.31 will fix it. You can disable warning as well.\n. @itinance Try update React (but should not be required), it works for me.\n. connect(state => ({ auth: state. inside render function a big design smell, try to refactore out it.\n. Properly? It's terribly wrong ;). Please fix it and retest code.\n. ",
    "chriswu14": "is there any help on the original question?\n. ",
    "Cordazar": "One use case is where you want a small amount of tabs (main functionality/views of the app) to be shown on most of the scenes.\n. @rturk I can't see how.\n10 Views numbered 1-10.\nView 1 and 2 should be in the tab bar for Views 1-8 but not on View 9-10. \nHow would you nest that?\n. Tested it out in a real project. The tabBar is working and other issues with double navbars and stuff are also solved.\n. ",
    "mat2maa": "I'm wondering how this plays with the inclusion of a Drawer. In the documentation for a Drawer, it is suggested that within the \"drawer\" Scene you include a scene with tabs={true}, presumably so that children scenes will automatically set type='jump'.\nHowever, doing so leads to something like the referenced issue:\n\nError: Warning: React.createElement: type should not be null, undefined, boolean, or number. It should be a string (for DOM elements) or a ReactClass (for composite components). Check the render method of TabNavigator.\n\nIs the tabs={true} therefore erroneous in the documentation OR is this example a reason that the above is a feature rather than a bug?\n. ",
    "boulajp": "Could you include your entire router tree? I was having this issue, and I managed to fix it by moving the hideNavBar up to the root component\n. ",
    "bendellarocco": "@eranbes what was the styling issue?  I am seeing this same issue on android only\n. Darn, nothing that helps my issue.  Thank you for your response\n. ",
    "enapupe": "This is nice but I think we need a more 'native' solution.. Having the navBar animating together with the scene is not acceptable. We need a way to set button properties from component scope ...\n. The solution I found (I don't really like it) is:\ncomponentWillMount () {\n  Actions.refresh({\n    rightTitle: 'Add'\n    , onRight: this.addCard\n  })\n}\n. I have the swip from left working fine but it only triggers from the very left edge.. Like, 1px or so.. it should be a little bit wider though\n. It is a shame that the docs are poorly organized and the source code for <Scene> has no direction proptype. I had no idea that the Animation section in the docs were to be applied  in the scene component.\n. @rturk I understand, but first I must understand the code/docs to be able to improve it.. \n. To me, it feels natural to just replace, not transition to it.. Why can't you use a regular push?\nRegardless, I'm also looking for some information about animations and there is almost none, not even in the source code :/\n. Where would you do such call? Ideally you'd have a central point where you define which routes are protected under login. I did a small middleware but I couldn't avoid protected scenes from being rendered (before calling Actions.pageLogin()). Also, when I hit the back button at the login screen, it returns to the protected route, not to the initial.. so, there is also that.\nThe code I have right now:\n\n```\nimport {Actions, ActionConst} from 'react-native-router-flux'\nexport default (store) => (next) => (action) => {\n  console.log(store, store.getState(), action)\n  if (action.type === ActionConst.FOCUS){\n    const {needLogin} = action.scene\n    const {user} = store.getState()\n    if (needLogin && !user.get('authToken')) {\n      action = Actions.pageLogin\n    }\n  }\n  return next(action)\n}\n```\n\nIt seems that FOCUS happens after PUSH/REPLACE/etc, so, it won't prevent the transition.  If I act in PUSH/REPLACE/etc I don't have access to scene..\n. I have a few routes in the app which are not accessible to unlogged users..\nI thought that I could centralize this verification with scene\ncomponents. You are telling my I can't and I should do manual checks every\ntime I would have a call to any of these scenes?\nOn Fri, Jul 22, 2016 at 2:06 PM, Chris Ridenour notifications@github.com\nwrote:\n\nI guess my confusion is - who are you protecting it from? It's not like\nthe web where a user can craft a URL. You are in control of what's rendered.\nWhen you log someone out, you can send them to the login page with Actions.pageLogin({type:\n\"reset\"}) and the stack is cleared. In other places, if you don't want\nsomeone to be able to go to a page, disable the button (or don't even\nrender it) unless they're logged in.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/aksonov/react-native-router-flux/issues/953#issuecomment-234599728,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AARxCu_h4ewAH4NEtQslP3zXZ2ld7YsDks5qYPiqgaJpZM4JSA6f\n.\n. I think I got your point.. I could just create a function over Actions, do some dirty checks there and stop using react-native-router-flux's Actions \n. Now I have another question, how can I remove pageLogin from history stack? I think replace does the job but it doesn't respect the animation..\n\nI've got the following code to handle routes: (I'm pasting it just in case anyone has similar needs)\n\n```\nimport {Actions} from 'react-native-router-flux'\nimport {user} from '../config/user'\nconst FORBIDDEN = ['somePage', 'otherPage']\nconst _isLoggedIn = () => {\n  return !!user.authToken\n}\nconst _navigate = (route, params) => {\n  if (FORBIDDEN.includes(route) && !_isLoggedIn()) {\n    Actions.pageLogin({params: {route, params}})\n    return\n  }\n  Actionsroute\n}\nconst Router = {\n  push (scene, params = {}) {\n    params.type = 'push'\n    _navigate(scene, params)\n  }\n  , replace (scene, params = {}) {\n    params.type = 'replace'\n    _navigate(scene, params)\n  }\n  , go (scene, params = {}) {\n    _navigate(scene, params)\n  }\n  , pop () {\n    Actions.pop()\n  }\n}\nexport default Router\n```\n\nAnd login component has this connect:\n\n```\nconst mapStateToProps = (state, {params}) => {\n  if (someIndicatorsOfLogin) {\n    if (params.route){\n      Router.replace(params.route, params.params)\n    }\n    [...]\n```\n\nIf I use a regular push it animates correctly but pop would go back to page login\n. So if I register login scene with that prop it would not persist in the history stack? \n. hey @cridenour, do you think is possible to propose a change like this? https://github.com/aksonov/react-native-router-flux/compare/master...enapupe:ActionsProto?expand=1\nI modified the prototype of Actions[key] in order to have access to the scene props. This is very useful in this auth scenario where I'd like to simple add a propType like <Scene key=\"someKey\" forbidden={true} /> and have access just with Actions.someSceneKey.forbidden\n. Just for the record: there is some new function get in Actions so you can do Actions.get( 'someKey') and have the necessary access to the props.. But it seems to be buggy as it is not finding my scenes.\nSo, there is not need for that PR once this get functionality is OK.\n. My navigationState has only ONE children, while it should have many because my Scene schema has many.\n. My guess is https://github.com/aksonov/react-native-router-flux/blob/master/src/State.js#L69 is not right OR I'm just not using the router as I was supposed to \ud83d\ude1e \n. This is the Scene schema I'm running:\n\n```\n\n  <Scene\n    key=\"root\"\n    animationStyle={this.defaultInterpolator}\n    passProps={true}\n    titleStyle={styles.navTitle}\n    navigationBarStyle={styles.navigationBar}\n    leftButtonIconStyle={styles.leftButton}\n\n<Scene key=\"drawer\" component={NavigationDrawer}>\n  <Scene key=\"drawerChildrenWrapper\">\n    <Scene key=\"pageBrowse\" component={PageBrowse} title=\"Browse\" initial />\n    <Scene authOnly={true} key=\"pageMy\" component={PageMy} title=\"My\" />\n  </Scene>\n</Scene>\n\n<Scene key=\"pageAbout\" component={PageAbout} title=\"About\" />\n<Scene key=\"pageOrder\" component={PageOrder} title=\"Details\" />\n<Scene key=\"pageCatalogSubcategories\" component={PageCatalogSubcategories} />\n<Scene key=\"pageCatalogEquipment\" component={PageCatalogEquipment} />\n<Scene key=\"pageEquipment\" component={PageEquipment} />\n<Scene authOnly={true} key=\"pageRent\" direction=\"vertical\" onBack={noop} hideBackImage={true} component={PageRent} />\n<Scene key=\"pageLogin\" title=\"Login\" component={PageLogin} />\n<Scene key=\"pageRegister\" title=\"Register to Rent\" component={PageRegister} />\n<Scene authOnly={true} key=\"pageProfile\" title=\"Edit Profile\" component={PageProfile} />\n\n\n\n```\n\n. refresh uses a different function: https://github.com/aksonov/react-native-router-flux/blob/master/src/Router.js#L91\nBut yeah, refresh seems to be working just fine!\n. @jacobcyl what exactly do you need? there's many things going on here..\nI can advance that  I ended giving up many things to be able to deliver the basic navigation (without bugs). Far from ideal.. Yeah, I could definitely use Actions.get(), but i couldn't find anything like this. Could you link the source? Thanks for your attention.\n. ExceptionsManager.js:55 _reactNativeRouterFlux.Actions.get is not a\nfunction\nThere is no get() in the Actions.js file.. Could you be more specific?\nedit:\nI see there is something in Router.js:95 but I can't call it from Actions\n. Never mind, I was running outdated code while looking to master branch.. \n. So, the function is there but it isn't finding my scene..  I don't see any reasons to not, also, the used function (findElement) has a lot more logic than a simple find. What is the role of ActionConst.REFRESH in this?\n. IDK why. My navigationState root scene has only ONE children (the first registered scene) but the scenes property has all the scenes there.. \n\nSo, it is looping children and obviously not finding any.\nI'm going to try wrapping my scenes under another <Scene> component and see what happens \ud83d\ude26 \n. @aksonov I was debugging that case where get does not return my scenes and realized the get only finds scenes in the current navigation stack, so it is definitely not a solution. I need a function to get props for ANY registered scene. \n. This change broke the behavior of my app.\nI have a modal with custom animationStyle and with your modification, the modal is not anymore being poped with my animationStyle... \n. ",
    "dktan": "@enapupe mark and waiting for better solutions. ",
    "GitHubGreg": "Thanks for these comments. Seems like such an obvious use case and I can\u2019t underdtand why this is so hard to achieve. . Someone provided a helpful solution on StackOverflow. Here it is in case it can help someone:\nhttps://stackoverflow.com/a/53455766/4407512. ",
    "y2k-shubham": "I achieved this as follows:\n- in your render method where you are rendering Modal, pass a prop transparent={true}\n- add a single View child to your modal (put all other things inside this View) and apply style to it with backgroundColor = 'rgba(r, g, b, a)' as described above\nreact-native v0.46.4. @cridenour please update the link to example, it's currently giving me 404. @aksonov but Actions.currentScene still gives the key 'root', which is basically known already;\nisn't there a way to get the key of the innermost scene currently being rendered?. For those looking to hide the back button text label, see https://github.com/aksonov/react-native-router-flux/issues/2219\nSetting backTitle=\" \" prop (space in quotes; NOT empty string) does the job. Sorry for the lame question, but where do I place the above code (static navigationOptions...)?\n(I'm new to react-native as well as javascript). sorry @pvroosendaal, but that didn't work for me. @pvroosendaal, just restarted the packager and re-ran the app, and it worked!\nthanx\nfurthermore, following solution by @luco at https://github.com/aksonov/react-native-router-flux/issues/2219 also works fine\nstatic navigationOptions = {\n    headerLeft: (<View></View>)\n}. @tendolukwago, instead of setting backTitle prop to empty string / null value, I assigned it to space (string), i.e. backTitle=\" \", and it worked like a charm! (React-Native v0.46.4)\n(though that doesn't seem to be the right way to go about it). As told in https://github.com/aksonov/react-native-router-flux/issues/2219, passing the prop backTitle = \" \" (space in quotes; NOT empty string) does the job. @g4laura this solution is meant to hide only the text along-side the back button and not the back button itself. While I haven't tried hiding the back button, see if https://github.com/aksonov/react-native-router-flux/issues/1509 can help. Better yet, give a try to @aksonov's solution by setting prop left={()=>null}. ",
    "jeannei": "@pewh I'm not sure if you solved this, but as reference for anyone that needs help in the future, here is an example:\n``` \n // Default styles from inspecting default nav bar\n  const navigationBar = {\n    backgroundColor: ,\n    position: \"absolute\",\n    paddingTop: 0,\n    top: 0,\n    height: 64,\n    right: 0,\n    left: 0,\n    borderBottomWidth: 0.5,\n    borderBottomColor: \n  } \n// custom component\n  static renderNavigationBar(props) {\n    return (\n      \n{props.title}\n\n    );\n  } \n``. @travisday is yourscene` rendering that component?. @DiegoGallegos4 any updates on this? I'm looking to do the same.. ",
    "momokula2333": "if you want to use the component in navBar, you should let the component in position absolute like this:\n\n. well, but i think if you want to use the component in navBar, it means you should recover the style by your self\n. I think no api can support, and I've resolved the by sendding  an  event\n. ",
    "Roilan": "Is there any update on this beside having it absolute? \n@lwhiteley Have an example of what you did?\n. Thanks for your response @cridenour. Great suggestion and not sure why I didn't think of that before. So, I tried what you suggested and still having some issues with the transparent background. I provided a gist of how it looks now.\nhttps://gist.github.com/Roilan/4e0942dceab4fd84897384729bffb40d\nSeems like even with a transparent background it's still overlaying on top of the image.\n. Yeah, I've tried setting the home component background to transparent. No luck either. If I set it to another color, it takes over the whole background, it makes me believe that Background is just laying behind everything even when we set the background. Thoughts?\n. @brien-crean Thanks for looking into it. I'm having the exact same issue. Not sure what else to try. Maybe it's worth looking into add the option for a background component.\n. Found the issue. So, it's related to this https://github.com/aksonov/react-native-router-flux/issues/448 the backgroundColor: transparent was removed. Manually setting the background to transparent in the NavigationCard works but throws errors due to shadows. @cridenour @aksonov any thoughts on if it's even possible to do this?\n. Quick update, I found the issue. The deep inside the NavigationCard component, it has a shadowColor and backgroundColor. Setting both to transparent fixes it. I'll be making a PR shortly for optional style in the NavigationCard to override this.\n. Solved using getSceneStyle more info on https://github.com/aksonov/react-native-router-flux/pull/931#issuecomment-233105349\nYour component with a shared background will look something like this: https://gist.github.com/Roilan/0850ed3c16abd5386d234acd14152c03\nI wrapped the Login route because the Home component will be transparent in the background.\n. @joenoon Can't believe I missed that. Thanks for pointing out getSceneStyle, works great and exactly what I wanted.\n. Hey @joenoon,\nWondering if you have any ideas on how to handle the previous route being showed behind the current route but transparent.\nSo, home pushes to login but the home component UI stays behind but slightly faded.\n. ",
    "tuckerchapin": "This is mildly off topic, but since the people in this issue seem to have it squared away, I thought I'd ask:\nI have a custom navBar component that loads correctly when I comment out my drawer and the drawer works fine, but the navBar does not load at all when the drawer is in the app (open or closed). I've tried rearranging hideNavBar and navBar onto different scenes, but no combination thereof seems to allow the drawer to appear and still have the navBar behind it.\n<Router navBar={AppBar}>\n    ...\n    <Scene key=\"drawer\" component={MaterialDrawer} initial={true} tabs={false}>\n        <Scene key=\"loggedIn\" component={LoggedIn} title=\"Home\" hideNavBar={false} initial={true} type=\"replace\"/>\n        ...\n    </Scene>\n    ...\n</Router>\nThe drawer and navbar all load correctly on their own, so I have a feeling it's something to do with this chunk in my index file.\n. Just encountered a similar issue:\nFailed to build DependencyGraph: @providesModule naming collision:\n  Duplicate module name: ReactNativeTextComponent\n  Paths: ~/Development/PROJECT/native/node_modules/react-native/Libraries/ReactNative/ReactNativeTextComponent.js collides with ~/Development/PROJECT/native/node_modules/react-native-experimental-navigation/node_modules/react/lib/ReactNativeTextComponent.js\n. Hmm. I have the same issue, but several variants have not solved my problem.\nCall location:\n...\n<CreateSessionButton onPress={() => Actions.createSession()}>\n    <Icon name=\"add\" size={scaleFont(30)} color=\"#FFF\"/>\n</CreateSessionButton>\n...\nRouter layout in index.js:\n...\nrender() {\n    return (\n        <Router>\n            <Scene key=\"root\">\n                <Scene key=\"landing\" hideNavBar={true} component={Landing} title=\"Loading...\" type=\"replace\"/>\n                <Scene key=\"loggedOut\" hideNavBar={true} component={LoggedOut} title=\"Sign in/up\" type=\"replace\"/>\n                <Scene key=\"enterCCInfo\" hideNavBar={true} direction=\"vertical\">\n                    <Scene key=\"getCC\" component={CreditCardEntry} title=\"Enter your card info\"/>\n                </Scene>\n                <Scene key=\"drawer\" component={MaterialDrawer}>\n                    <Scene key=\"loggedIn\" component={LoggedIn} title=\"Logged in\" hideNavBar={true} initial={true} type=\"replace\"/>\n                    <Scene key=\"createSession\" direction=\"vertical\" hideNavBar={true}>\n                        <Scene key=\"sessionDetailSelector\" component={SessionDetailSelector} initial={true} title=\"Schedule a session\"/>\n                        <Scene key=\"sessionConfirm\" component={SessionConfirm} title=\"Everything look right?\"/>\n                        <Scene key=\"sessionReciept\" component={SessionReceipt} title=\"We'll see you then\"/>\n                    </Scene>\n                </Scene>\n            </Scene>\n        </Router>\n    );\n}\n...\nI've tried a variety of things:\n- The call is wrapped in an anonymous function\n- I've tried calling other scenes: real scenes throw no errors, but do not render into the view, while fake, non-existent scenes like Actions.fooBar(); throw an error. So clearly something is being actually called.\n- I've tried moving the scene outside of the wrapping scene that has the direction=\"vertical\" tag.\n- I've tried having other buttons or UI components trigger this Actions call. \nAlso of note is the fact that I have some scene transitions firing without user input that work. And the drawer also works and is triggered by a UI element. However, it is triggered by Actions.refresh({...}) and not Actions.KEY_NAME()\nNothing seems to work. Any ideas?\n. Alright, so drawer seems SUPER broken right now.\nSimply by commenting out the \"drawer\" container around my code I was able to launch the vertical scene with no other modification.\n. Glad to know I'm not going crazy. Looks like that's what I'm gonna have to do.\n. If you're referring to the example drawer found here then yes and no. \nIt \"works\" in that the drawer functions 100% as to be expected. However, its inclusion causes other things to break. It breaks Actions.KEY_NAME() calls from scenes inside the drawer scene and also breaks the custom navBar functionality, causing no navBar to render at all.\n. OH. Wow. Yeah, I'm a complete idiot, sorry for wasting your time. Reorganized the scenes and having one scene inside the drawer fixes ALL of my problems. \ud83d\ude2c\n. +1 Same issue\n. ",
    "swhamilton": "@boulajp Did you find your answer? I know this is old, but wanted to give 2 cents here...\nI also want to achieve this. I haven't finished implementing it but my approach will probably be:\n1. Make the redux Provider be a parent to the  component\n2. Make a redux action like \"CHANGE_FACEBOOK_LOGGEDIN_STATUS\" that holds the current state after an request to Facebook.\n3. Make a redux action like \"CHANGE_LOADING_STATUS\" so you know when the ajax request comes back. (Might not be necessary)\n3. Only render the Router component if some redux store variable is true:\nif isFinishedLoading && isLoggedInFacebook, return (<Router/>...\nI found an example of this integrated into a redux-storage project. I believe there might be some parts you can reuse to integrate if you haven't already.\nCheck this thread for example\n``` javascript\nimport createEngine from 'redux-storage-engine-sessionstorage';\nimport immutablejs from 'redux-storage-decorator-immutablejs';\nimport merger from 'redux-storage-merger-immutablejs';\nlet engine = createEngine('enjoymint');\nengine = immutablejs(engine, [\n  ['UserRed'],\n  ['routing'],\n  ['ErrorsRed'],\n  ['MenuRed'],\n  ['ModalsRed'],\n  ['OrdersRed'],\n  ['ProfileRed'],\n  ['VendorRed']\n]);\nconst finalReducers = storage.reducer(combineReducers(Object.assign({}, reducers, {\n  routing: immutableRoutingReducer\n})), merger);\nconst engineMiddleware = storage.createMiddleware(engine, [\n  Constants.modals.OPEN_LOGIN_MODAL,\n  Constants.modals.TOGGLE_ACCOUNT_DETAILS_MODAL,\n  Constants.modals.TOGGLE_CC_MODAL,\n  Constants.modals.TOGGLE_BILLING_MODAL,\n]);\nconst routingMiddleware = routerMiddleware(createHistory);\nconst finalCreateStore = compose(\n  applyMiddleware(thunk /,logger/, engineMiddleware, routingMiddleware),\n  window.devToolsExtension ? window.devToolsExtension() : f => f\n)(createStore);\nconst store = finalCreateStore(finalReducers);\nconst load = storage.createLoader(engine);\nconst createSelectLocationState = () => {\n  let prevRoutingState, prevRoutingStateJS;\n  return (state) => {\n    const routingState = state.routing; // or state.routing\n    if (typeof prevRoutingState === 'undefined' || prevRoutingState !== routingState) {\n      prevRoutingState = routingState;\n      prevRoutingStateJS = routingState.toJS();\n    }\n    return prevRoutingStateJS;\n  };\n};\nload(store)\n  .then(() => {\n    / I put the syncHistoryWithStore() call inside the load resolve promise.\nThis way the store is loaded from storage FIRST, before the redux action of LOCATION_CHANGE happens. /\n    const history = syncHistoryWithStore(createHistory, store, {\n      selectLocationState: createSelectLocationState()\n    });\n    render(\n        \n\n        ......\n    )\n  })\n  .catch(() => console.log('Failed to load previous state'));\n```\n. ",
    "matteocollina": "In  component change the props:\n- drawerImage: hamburger icon\n- backButtonImage: back icon\nIn my example:\n<Drawer\n              hideNavBar\n              key=\"drawer\"\n              contentComponent={MenuContent}\n              drawerImage={MenuIcon}  \n              backButtonImage={MenuBackIcon}\n              drawerWidth={300}\n             .......\n             >\n. Any news?. It works for me! This is my code:\nI have a left menu (Drawer).\nNB: It works if in my menu.js I call \"Actions.team_nav()\" and NOT \"Actions.my_team()\"  and then I can pass data to \"show_player_from_team\" with \"Actions.push(\"show_player_from_team\",{player: player})\"\njsx\n<Router>\n      <Stack key=\"root\">\n        <Lightbox key=\"lightbox\">\n            <Drawer\n              hideNavBar\n              key=\"drawer\"\n              contentComponent={MenuContent}\n              drawerIcon={IconMenuBtn}\n              backButtonImage={MenuBackIcon}\n              drawerWidth={300}\n              initial\n            >\n              {/* My Team navigation */}\n              <Scene key=\"team_nav\">\n                  <Scene\n                    key=\"my_team\"\n                    component={MyTeam}\n                    title={genericLocalizedString.lblIlMioTeam}\n                  />\n                 <Scene\n                    key=\"show_player_from_team\"\n                    component={ProfileUser}\n                    title={genericLocalizedString.lblAggiungiGiocatore}\n                    back\n                  />\n              </Scene>\n           </Drawer>\n        </Lightbox>\n      </Stack>\n    </Router>\n. @alittletf with my version I can transfer data from one scene to another ({player: player}).\n1) from app.js (root scene in my app) to MyTeam.js (Actions.team_nav())\n2) from MyTeam.js to ProfileUser.js with the transfer of data (Actions.push(\"show_player_from_team\",{player: player}))\n. @alittletf \nReact-native-router-flux: 4.0.0-beta.31\nReact: 16.3.1\nRedux: 4.0.1\nReact-Redux: 5.1.1\nReact-Native: 0.55.4. But Can i get the Stack size? . any news ?. ",
    "rafaelcorreiapoli": "Apply this style to the a View wrapping your navbar\njs\n  <View style={{position: 'absolute', top: 0, flex: 1, alignSelf: 'stretch', right: 0, left: 0}}>\n. ```\nimport { Actions } from 'react-native-router-flux'\nonPress={Actions.myPageKey}\n```\n. ",
    "kdchang": "@rafaelcorreiapoli \nCool. It works! Thanks a lot :)\n. @rafaelcorreiapoli \nExcuse me, the navBar is fixed on the top now. But it would overlap the main content every page(due to position absolute), how could I fix this issue ? I wrap a Component with marginTop style every scene now. Thanks :)\n. If you use redux, maybe you can check this to get the this.props.route.key.\n. ",
    "AlessandroCorradini": "@xvalentino @kdchang \nI've used the same solution. A container component like this (my custom navBar's height is 45):\n```\nimport React from 'react';\nimport { ScrollView, StatusBar, View} from 'react-native';\nclass Container extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            unScrollable: this.props.unScrollable || false\n        }\n    }\nrender() {\n    return (\n        <View style={{flex: 1, marginTop: 45}}>\n            <StatusBar\n                backgroundColor=\"#2085A8\"\n                barStyle=\"light-content\"\n            />\n            {(!this.state.unScrollable) ? <ScrollView>{this.props.children}</ScrollView> : <View>{this.props.children}</View>}\n        </View>\n    );\n}\n\n}\nexport default Container;\n```\n. @sarovin \nyes, if I add \"position: absolute\" and \"right: 0\" or another number, the button is in the correct position, but I think than the right button should be on the right side by default and the style props should serve for micro adjustments :) \n<TouchableHighlight onPress={()=>Actions.menu()} style={{ backgroundColor: 'red', width: 40, height: 40, right: 5, top: 5, position: 'absolute'}}>\n        <Icon name=\"menu\" size={40} />\n    </TouchableHighlight>;\n\n. I've made a custom navBar :)\n. ",
    "shivamsinha15": "If you are using the default reducer you can also get access to the current state and hence the route using:\n```\nconst reducerCreate = params=>{\nconst defaultReducer = Reducer(params);\n\nreturn (state, action)=>{\n\n\n   // The following is an example alternative implementation of Reducer.js .getCurrent(state)\n    var currentState = state;\n\n    if(currentState){\n      while (currentState.children){\n        currentState = currentState.children[currentState.index]\n      }\n    }\n\n    return defaultReducer(state, action);\n}\n\n};\n```\n. ah ok. I misunderstood the scope of RNRF. Thanks\n. How have you defined your scenes ? Typically it looks like:\n```\n        return \n\n\n\n\n \n    </Router>;\n\n```\nand you called Action.keyName({attribute: value}). So in the case above if I wanted to call firstContainer I would call Action.firstContainer(companyName: \"company_name\"{}). Note the value after Action. refers to the key name that you define not the actual component.\n. My bad  ({companyName: \"company_name\"}) should have been within the brace. Yeh not sure why its coming as undefined .\n. Hey Thanks for looking into it. Ill be able to help in about 2-3 weeks with a PR if no one has looked into it yet. Suggestion in terms of implementation:\n1) I think the logic needs to be defined in the Router.js since it is the initial view and there is only a single instance. \n2)Ideally these need to be able to be passed in as props \nThanks Kevin!\n. @jaisonveneri @KBLNY Aplogizes about the delay yes I did get it working:\n```\nimport { MessageBar , MessageBarManager} from 'react-native-message-bar';\nclass App extends Component {\ncomponentDidMount() {\nMessageBarManager.registerMessageBar(this.refs.alert);\n\n}\ncomponentWillUnmount() {\n     MessageBarManager.unregisterMessageBar();\n  }  \n_createAlert(message,alertType){\n      if(!alertType){\n        alertType = 'success';\n      }\n    MessageBarManager.showAlert({\n       // title: 'Your alert title goes here',\n        message: message,\n        alertType: alertType\n      });\n  }\nrender() {\nreturn (<View style={{flex: 1}}>\n      <Router createReducer={this.reducerCreate.bind(this)}>\n\n          <Scene..\n          <Scene...\n          <Scene key=\"yourScene\" initial createAlert={this._createAlert.bind(this)} />\n         </Router>\n         **<MessageBar ref=\"alert\" />**\n         </View>);\n\n}\n```\nand then call the following method from youScene component:\nthis.props.createAlert('Call Alert');\nlet me know if you have any problem ...ill be closing this issue in a couple of days. DUPLICATE: https://github.com/aksonov/react-native-router-flux/issues/517. ",
    "gijoehosaphat": "I get this with the currently latest commit to master #b58d21c492838fe16315948ed1695d6b4ca915a8\n. Confirming this does not solve the issue. The scenes are either never unmounted, or are over-eagerly unmounted via type={ActionConst.RESET} and cannot be navigated to.. This issue doesn't appear fixed. Even with #1386. It still either doesn't unmount the scene, or unmounts it to the point where it can no longer be navigated to via type={ActionConst.RESET}. We see this as well, to get things working, we created an empty Component listed as the first Scene. This one gets loaded temporarily before the selector kicks in and routes you to the correct Scene. It's definitely a bug. Unfortunately Switch seems unstable at the moment.. ",
    "Lenin7": "@r0b1n Did the example ended up not working with relay?\n. Which example are you using?\n. Any updates on v4?. Seems like this package isnt dying anytime soon. Might as well catch up with react-navigation while they are still in beta. ",
    "chandlervdw": "@cridenour so, if you want to key off of a slice of the state in order to hide or show a nav or tab bar, how do you do that if it's not supposed to be re-rendered?\n. @cridenour makes sense \u2014\u00a0how did you reference your forked TabBar component within the Scene?\n. ",
    "Anthonyzou": "This seems to work. The only issue I cant figure out is when to reset bounceValue in the state when navigating away.\n``` javascript\nimport React, { Component } from 'react';\nimport {\n  Animated,\n  Dimensions,\n  NativeModules,\n  View,\n} from 'react-native';\nconst {UIManager} = NativeModules;\nconst WIDTH = Dimensions.get('window').width;\nclass SitesPage extends Component {\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      bounceValue: new Animated.Value(WIDTH),\n    };\n    UIManager.setLayoutAnimationEnabledExperimental &&\n    UIManager.setLayoutAnimationEnabledExperimental(true);\n  }\ncomponentWillReceiveProps(){\n    this.state.bounceValue.setValue(WIDTH)\n  }\ncomponentDidMount() {\n    Animated.spring(                          // Base: spring, decay, timing\n      this.state.bounceValue,                 // Animate bounceValue\n      {\n        toValue: 0,                         // Animate to smaller size\n        velocity: 10,\n        deceleration: 2\n      },\n    ).start();                                // Start the animation\n  }\nrender() {\n    return (\n      \n...\n\n    );\n  }\n}\n``\n. @xvalentino It doesn't seem to work. This is a scene in parent with the attributetabs={true}`\n. ",
    "electricfeel1979": "with the version 4.0.0-beta.21 to disable the animation its animationEnabled={false}\ni really had to dig around the plugin to find this, it was on the node_modules, hopefully this could have been included on the api reference. . ",
    "tranlehaiquan": "animationEnabled={false} work only with IOS? Any idea?. ",
    "blackxored": "I'm experiencing this as well.\n. Transitions are notably slow on my end too (iOS). On device, not simulator.\n. iOS 10 on device, 9 on Simulator.\n. @mehcode Forgive me if I'm wrong, not made myself clear enough, or both :D,\n1. This library is not built upon ex-navigator but NavigationExperimental (ok, still JS), right? I think it used to be but not since a while ago, unless I'm mistaken.\n2. I'm doing no work on the components I'm using for testing since they're basically () => null.\n3. NavigationExperimental example on UI explorer doesn't experience this frame drops .\n4. Setting duration to 1 (effect which I'd assume has to do something with Animated) restores the smooth frame rate.\nThanks.\n. More specifically, I have a tab view that links to a non tab view (outside of that scene's container) if that'd help.\n. Any thoughts on this?\n. Sorry for the late response. My root scene is a modal.\nOn Wed, Jul 20, 2016 at 6:05 PM ms88privat notifications@github.com wrote:\n\n@blackxored https://github.com/blackxored\nMore specifically, I have a tab view that links to a non tab view (outside\nof that scene's container)\nthis could be a problem. Does your navbar behave strangely if you push/pop\nthe route?\nDid you try it as a Modal?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/aksonov/react-native-router-flux/issues/934#issuecomment-233996350,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AAIIvA7hR9dcdHLsnpVfB1bIv4YZEOCiks5qXkawgaJpZM4JOXhz\n.\n\nBest Regards,\n\nAdrian Perez\nhttps://adrianperez.codes\n. That's a workaround that I found pretty early. Still shouldn't be considered correct. One root cause I think I found was that if you're using any sort of redux logging in development, the router send the whole routing state tree to every back action and that slowed it on anything but WebWorker or with Release config (which disables redux-logger obv).\n. Sadly I've been away from using this project but my response remains: make sure that any logging middleware excludes this router's actions as specially the back action, as it sends the whole routing state tree, probably synchronously, and the parsing gets thing significantly slower than it should. \nThis should be fixed upstream as I don't see any particular reason to send the whole thing to reducers. . For one I'd say it breaks navigationState as part of DefaultRenderer#componentWillReceiveProps as the comparison will fail despite the fact there should be the same keys. I'm also investigating multiple FOCUS actions being triggered when Scene has no component set, and this might be affecting that as well. Let me know what you think.\n. Thanks for spotting those, I've fixed the build. The case I'm testing against it's two Scenes (one at the root with Modal component and a child scene container with no component) and a tab scene container underneath that container. \n. Trying:\njsx\n<Scene key=\"root\" component={Modal}>\n  <Scene key=\"some\" hideTabBar hideNavBar>\n    <Scene key=\"main\" tabs type=\"replace\" initial>\n      <Scene key=\"home\" component={Some} title=\"Home\"/>\n    </Scene>\n  </Scene>\n</Scene>\n. That was a typo, sorry. \n. Thanks for this! One less monkey-patch I have to use. \ud83d\udc4d \n. @mastermoo Sign me when we both have some free time, as I've also worked on this area.\n. This looks promising. Have you tried having a view within a tab trigger an action for one of the external views (the children of the root modal scene)?\nEDIT: For example\njsx\n<Scene key=\"root\" component={Modal}>\n  <Scene key=\"switcher\" tabs ...>\n    <Scene key=\"home\" tabs>\n      ...\n    </Scene>\n    ...\n  </Scene>\n  <Scene key=\"profileDialog\" ...>\n</Scene>\nhaving a scene that's a child to \"home\" trigger Actions.profileDialog().\n. I'm not sure it's related to these changes, as I've experienced this before.\n. Do you get scene key errors like I did?\n. So I wasn't able to fix this. But while I was looking into it, the closest I got was the Switcher setting up a navigation state that only included the child scenes, like assuming it was the root. At the time I thought it was by design and switcher should be your root scene, but the tabs requirement was a no-go for me. I'm sure that doesn't help a lot, but hopefully it's a start.\n. As you guys might know (or not :P) i've been following pretty closely, and I also experience this bug with Switch on latest HEAD. Something definitely broke but not sure what exactly.\nEDIT: \nBit more detail (for bisect purposes): \nFailing: HEAD\nWorking:\nf541ffb38af879f73e9d34b26a2b3bdb2bbdd573\nAlso working (but can't use since it broke navbar for me):\n2ff66a2f7bf20362ba37490460cd532362f1d6ec\n. ",
    "bang88": "@rturk  That's fine,but i think if you guys found an issue in typings you can improve it,not just me.\n@charpeni  I don't want choose Flow or typescript,just give this a try for lntellisense when use https://code.visualstudio.com/\nAccept or not your choice. I am free.\n. \ud83d\udc4d \n. Thanks @daemonchen ,but the tests failed.. Why this ?\n. scenehere is extends from React.Component it should works .By the way. are you using typescript with react-native.If so can you provide an online version,I can have a look.\n. I see,you are right.Thanks\n. ",
    "sammkj": "@cridenour , thank you for your response. I tried your suggestion. But still can't get it work. Here a screenshot:\n\n. ",
    "shaxbee": "@sammkj You need to specify icon property (it must be a component which defines look of a tab) for each sub-scene which has to show as a tab.\n. ",
    "OFranke": "<Provider store={store}>\n        <Router hideNavBar={true}\n        footer={TabBar}>\n            <Scene key=\"root\">\n                <Scene key=\"TabBar\" tabs={true} default=\"TagSearchView\">\n                    <Scene        key=\"TagSearchView\"\n                    title=\"TagSearchView\"\n                    icon={TabIcon}\n                    iconName={\"home\"}\n                    hideNavBar={true}\n                    component={TagSearchView}\n                    initial={true}\n                    />\n                    <Scene        key=\"TagSearchResults\"\n                    title=\"TagSearchResults\"\n                    component={TagSearchResults}\n                    hideTabBar={false}\n                    />\n                    <Scene        key=\"TodayinMap\"\n                    title=\"TodayinMap\"\n                    component={TodayinMap}\n                    />\n                    <Scene        key=\"CompanyProfile\"\n                    title=\"CompanyProfile\"\n                    component={CompanyProfile}\n                    icon={TabIcon}\n                    iconName={\"home\"}\n                    />\n                </Scene>\n            </Scene>  \n        </Router>\n    </Provider>\nYep, my route should be set up as needed. It is actually calling the component, just not passing the props. But what do you mean with this format (companyName: \"company_name\"{}) ? Did I do anything wrong with the parameters?\n. I found the problem. \nIf I move the Scene CompanyProfile outside of the TabBar, I am receiving the props as expected. \nIs there a possibility to to pass parameters to Scenes which are part of the TabBar?\nI thought about something like\nActions.TabBar.CompanyProfile({companyName: \"company\")};\nbut that does not seem to work.\n. I've had a look at the code, I am way to unexperienced yet to understand what's happening in Reducer.js, so I am trying to work around this for now. \nThanks aksonov!\n. ",
    "normenster": "I can confirm that putting a <scene>into tabbar and calling Action.Scene(payload) from somewhere to pass vars to that scene doesn't work, although the scene is being displayed and loaded. But props remains in an old state.\n. ",
    "lexfernandez": "I figure out that my problem is the Switch component because it is redirecting me to the map even if I try to push another view, is there a way to avoid this behaviour.\nI remove this from my root component and everything else start working as expected.\n``` javascript\ncomponent={connect(state => ({auth: state.auth}))(Switch)}\nselector={(props)=> props.auth.token !=='' ? \"map\" : \"login\"}\n```\n. @aksonov it switch to map but when I try to call another scene using Action.scene() it doesn't work, I think it is because of the Switch component because when I remove it the Action.scene() works great. How can avoid this conflict?\n. Sure, I will try to create an example as soon as I can, I will let you know.\n. Hi @aksonov at the end I just needed to add type=\"replace\" to my scenes in order to see the changes. I'm not sure why only type=\"replace\" is working, can you please explain how do I have to use the other types. 'push', 'jump' and 'reset' \n. Thanks @adrienthiery, I remove the drawer and follow your example and it works like a charm. \nDo you have any idea how to implement a drawer(side-menu), I follow the example but I can't make it work correctly.\n. @aksonov here is the example of the drawer + switch, please check it out and let me know what is the problem.\nhttps://github.com/lexfernandez/goGreen/tree/drawer\n. ",
    "frangeris": "Same issue here using \"react-native-router-flux\": \"^3.30.0\"\nI have the same situation of @adrienthiery \n\nswitch \"Restricts\" you to only one Scene\n\nExactly, for now the workaround is using 2 main Scene, authenticated and anonymous.\n@aksonov Are you planning to improve this or just stay using the above?\n. > the revoking of access on AppState change to background\nThis way...\n```javascript\n   ({ state: store.getState() }))(Switch) }\n    selector={ props => props.state.user.logged ? 'auth' : 'anon' }\n\n<Scene key=\"anon\">\n  <Scene key=\"home\" component={Home} />\n</Scene>\n<Scene key=\"auth\">\n  <Scene key=\"accounts\" component={Accounts} />\n</Scene>\n\n\n```\n\nps: there is a user property inside state. @aksonov Thanks, there's only one thing I can not figure it out, selector in Scene is not reacting when state change, in v3 I use the state to control access to views, but now I update the state and selector don't even see the changes, what am I not seeing?\n```javascript\nexport default Actions.create(\n   {\n      console.log('selector', props) // <-- THIS NEVER PRINTS\n      return props.logged ? 'auth' : 'anon'\n    }}\n    tabs\n    unmountScenes\n    hideTabBar\n\n<Scene key=\"anon\" hideNavBar>\n  <Scene key=\"login\" component={login} />\n</Scene>\n<Scene key=\"auth\" hideNavBar>\n  <Scene key=\"home\" component={home} type='reset' initial />\n</Scene>\n\n\n)\n``\nHow ca we make this in v4?. @aksonov Thanks, it works, but not as expected, why?onEnter` receive an object of properties passed to the view:\n\nObject {unmountScenes: true, init: true, tabs: true, hideTabBar: true, hideNavBar: true\u2026}\nNot the redux state from connect, so is not the same as the previous selector.\nAnother thing that I notice is that onEnter don't trigger in \"father\" when going to a \"child\", control access for groups of routes its a must to have.\nSo, for now downgrading to v3... \ud83d\ude1e \nThanks btw!\n. I'm having the same issue BUT when updating the store (mobx)\n```javascript\n@observer\nclass Custom extends Component {\n  render() {\n// prints every time I update state, this's ok!\nconsole.log('update', store.session.get('logged'))\n\nreturn (\n  <Router>\n    <Scene key=\"root\">\n      <Scene key=\"login\"\n        component={login}\n        type=\"replace\"\n        onEnter={() => {\n            // ONLY enter here once\n            console.log('onEnter');\n            return store.session.get('logged')\n        }}\n        success=\"recents\"\n      />\n      <Scene key=\"recents\" component={recents} />\n    </Scene>\n  </Router>\n)\n\n}\n}\n``\nI tried to trigger the 're-render' callingActions.refresh()after the update of the store, butonEnter` is not responding.\njavascript\n  _onPressButton() {\n    store.session.set('logged', !store.session.get('logged')) // invert the value in store\n    Actions.refresh() // tested with { key: 'login' } too\n  }\n\n@aksonov Could you please point us to the right direction? :pray: \n. This issue is not related to the lib itself :/\nBut... you could implement state management and observe changes or you could emit an event onExit and listen that event in your W1 component.... Could you please share a gif?. Exactly what it says, wrap your scenes with root Scene in v4 you need to have all the childs scenes inside a root scene, something like this:\njavascript\n<Scene key=\"root\">\n  // ....\n  <Scene key=\"auth\">\n        <Scene key=\"signin\" component={requireNotAuth(Signin)} title=\"Ingresar\" hideNavBar={true}/>\n            <Scene key=\"signup\" component={requireNotAuth(Signup)} title=\"Registrarse\" />\n        </Scene>\n        <Scene key=\"meals\" type={ActionConst.RESET}>\n  </Scene>\n</Scene>. Don't get it, what you mean? showcase?\nOn Sat, 16 Jun 2018 at 4:44 PM Anurag690 notifications@github.com wrote:\n\n@frangeris https://github.com/frangeris Then how to prevent a scene to\ngo to the upward scene.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/aksonov/react-native-router-flux/issues/2650#issuecomment-397835041,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AAxhdXbxbnyg2tLXl_AvhcyAvsZVPbcVks5t9WA2gaJpZM4QqFoS\n.\n--\nFrangeris Peguero\nZend Certified Engineer, Zend Certified PHP Developer\n. \n",
    "akaone": "@Beingbook are you going to submit a PR to fix this ?\n. I've just check with react-native-router-flux v3.30.0 and it's not fixed\nThis not a bug though, if you take a look at NavBar.js you'll see that the styling isn't quite done to get the android's style, so platform checking and tunning the style should do\n. ",
    "Beingbook": "@AkaOne Oh, I can submit PR but I don't know it's general problem. But I think it's fixed.\n. ",
    "AndrewHenderson": "I'm running into this same issue using the following code:\njsx\nexport default Actions.create(\n  <Scene key=\"root\">\n    <Scene key=\"login\" component={Login} initial hideBackImage />\n    <Scene key=\"main\"\n           tabs\n           tabBarStyle={styles.tabBarStyle}\n           tabBarSelectedItemStyle={styles.tabBarSelectedItemStyle}\n    >\n      <Scene\n        initial\n        key=\"tab1\"\n        title=\"Events\"\n        component={EventsFeed}\n        icon={TabIcon}\n        iconName=\"home\"\n        hideBackImage\n      />\n      <Scene\n        key=\"tab2\"\n        title=\"Create Event\"\n        component={EventForm}\n        icon={TabIcon}\n        iconName=\"event\"\n        hideBackImage\n      />\n      <Scene\n        key=\"tab3\"\n        title=\"Profile\"\n        component={Profile}\n        icon={TabIcon}\n        iconName=\"person\"\n        hideBackImage\n      />\n    </Scene>\n  </Scene>\n);\nOnce the user has authenticated, I direct him to the main scene. Within main is a tab, profile, which has a logout button.\nWhen the user clicks that I direct him to the login scene. When the user logs back in and goes to profile tab and logs out again, I get the following error screen:\n\n. @Ross-Landry No. It's still happening for me. I've put resolving this issue on the back burner for now.\nThe message makes me think the router is trying to navigate from the same page \"login\" to itself.. @Ross-Landry That worked! Thanks for posting!. I've run into this issue again.\nVersion\nTell us which versions you are using: \n\nreact-native-router-flux v3.36.0\nreact-native v0.37.0\n\nExpected behaviour\nI'm hoping to be able to open a vertical modal from a tab. The behavior I'm seeking to recreate is that seen in Instagram when a user presses the camera icon.\nInstagram\n\nWhen a user clicks the icon camera tab button, the following full screen view slides up:\nMe\n\nCode\njsx\nexport default Actions.create(\n  <Scene key=\"modal\" component={Modal}>\n    <Scene key=\"root\">\n      <Scene key=\"login\"\n             component={Login}\n             initial={true}\n             hideNavBar\n             type={ActionConst.RESET}\n      />\n      <Scene key=\"main\"\n             tabs\n             tabBarStyle={styles.tabBarStyle}\n             tabBarSelectedItemStyle={styles.tabBarSelectedItemStyle}\n      >\n        <Scene\n          initial={true}\n          key=\"events\"\n          icon={TabIcon}\n          iconName=\"md-home\"\n        >\n          <Scene initial={true}\n                 key=\"events_list\"\n                 renderBackButton={()=>(null)}\n                 component={EventsFeed}\n                 title=\"Main\"\n                 rightButtonIcon=\"ios-add\"\n                 onRight={() => { Actions.event_form() }}\n          />\n        </Scene>\n        <Scene key=\"publish\" icon={TabIcon} onPress={() => { Actions.event_form() }} iconName=\"md-pin\"></Scene>\n        <Scene\n          key=\"my_profile\"\n          icon={TabIcon}\n          iconName=\"md-person\"\n        >\n          <Scene key=\"my_profile_initial\" initial={true} renderBackButton={()=>(null)} component={Profile} getTitle={getProfileTitle} rightButtonIcon=\"ios-settings\" onRight={() => { Actions.my_profile_settings() }} />\n        </Scene>\n      </Scene>\n      <Scene\n        key=\"event_form\"\n        direction=\"vertical\"\n      >\n        <Scene\n          key=\"event_form_initial\"\n          title=\"New Event\"\n          component={EventForm}\n          leftTitle=\"Cancel\"\n          onLeft={() => { Actions.events() }}\n          rightTitle=\"Add\"\n          onRight={() => { Actions.refresh({ triggerSave: true }) }}\n        />\n      </Scene>\n    </Scene>\n  </Scene>\n);. Resolved using Actions.pop on the onLeft of event_form_initial.. I'm working on this issue at the moment. Has anyone made any progress on it?. @bulkyracehorse512 Scenes within your root never unmount. For instance, if you're using tabs at the foundation of your application, those scenes will live with the lifecycle of the application itself.\nI use Redux to render those scenes whenever the data changes.. @mdmush I don't think modifying the files in the node_modules folder is a stable solution.\n@AlessandroCorradini Did you modify the node_modules version or create your own component? If it's the latter, were you able to get nested Scenes to display your custom navbar? https://github.com/aksonov/react-native-router-flux/issues/1489. @manask88 hideBackImage. See: https://github.com/aksonov/react-native-router-flux/blob/master/Example/Example.js#L182. @markrickert @alexcurtis I am using hideBackImage. While the image does not appear, if I press the spot where the back button would be, it still navigates back. \ud83d\ude15 \nTell us which versions you are using:\n\nreact-native-router-flux v3.36.0\nreact-native v0.37.0. @asokol Is there documentation on migrating to react-native-router-native? And is it compatible with Redux? I attempted to swap libraries and received several errors.. @machei I just hit this issue. Did you make any progress on it?. @machei Nevermind. I figured out it was a change I made to the custom NavBar I created.. This worked for me to use text instead of an icon.\n\njsx\n<Scene key=\"event\"\n             tabs\n             tabBarStyle={styles.tabBarStyle}\n             tabBarSelectedItemStyle={styles.tabBarSelectedItemStyle}>\n        <Scene\n          key=\"event_tab\"\n          icon={()=>(<Text>foo</Text>)}\n          iconName=\"md-person\"\n        >\n          <Scene key=\"event_initial\" component={EventFull} title=\"Event Details\" />\n    </Scene>\n</Scene>. @itswaze \u2013 @newah is correct. You have to return a View that has both your Icon and Text components within it.. @Ivykp The original issue was due to the modal being nested in the scene stack. If your view now takes up the full screen, you likely moved it up the hierarchy.\nIn order to provide it with its own NavBar, you'll need to wrap your modal scene in another Scene to nest it back down another level. \nIt's a very fragile hierarchy but one I think iOS developers understand better than JS devs writing their first iOS app. I myself am in that category and have been learning the hard way.\nJust keep playing with the hierarchy. You'll likely be surprised by the outcome of moving Scenes.. @hobly This is a common issue. See if anything in this thread helps you: https://github.com/aksonov/react-native-router-flux/issues/782. @vzhen I use Redux to handle this. I dispatch the product id and the Products reducer pulls it from the list and sets is on a sub-state \"focus\" like so:\njs\nproducts: {\n  list: [{\u2026}],\n  focus: {\u2026}\n}\nThen, the Product component uses mapStateToProps to map the focus state to its props.. @dragfire I'm dealing with a similar issue, where I want to set the NavBar title based on a value in the Redux store. I tried several things that didn't work. I'm considering creating a new Scene component that is connected to the Redux store like so:\n```jsx\nimport React from 'react'; \nimport { Scene } from 'react-native-router-flux';\nimport { connect } from 'react-redux';\nclass SceneWithRedux extends React.Component {\n  render() {\n    return (\n     \n    )\n  }\n}\nfunction mapStateToProps(state) {\n  return {\n    productTitle: state.product.title\n  }\n}\nexport default connect(mapStateToProps)(SceneWithRedux);\n``. @msdark PutrenderBackButton={()=>(null)}on the \"saldos\" Scene.. @MichelKansou I believe the type should a function not an object. Try,renderBackButton={()=>(null)}.. Resolved usingActions.popon theonLeftofevent_form_initial.. @ethaniel Can you close this? Issues isn't really the place to post job offers. If you want to reach Pavel directly, use his email address in the pacakge.json: https://github.com/aksonov/react-native-router-flux/blob/master/package.json#L29. Can anyone provide an example of how to use this? [Custom nav bar for individual scene or even different state of scene (new feature)](https://github.com/aksonov/react-native-router-flux/blob/master/docs/OTHER_INFO.md#custom-nav-bar-for-individual-scene-or-even-different-state-of-scene-new-feature). @stonepreston Use the [Scene's API](https://github.com/aksonov/react-native-router-flux/blob/master/docs/API_CONFIGURATION.md#navigation-bar-right-button), particularly the render functions such asrenderRightButtonto return a Component based on the props. The argument to these methods is the props, however if you're using Redux, this will be a WrapperComponent. The trick is to provide props when executing the scene action, i.e.Actions.myScene({ user: {\u2026}});`.\njsx\nfunction renderProfileRightButton(props) {\n  if (props.user.id === 1) {\n    return <Button><Text>Settings</Text></Button>\n  } else {\n    return null;\n  }\n// Somewhere in your router\n<Scene renderRightButton={renderProfileRightButton} />. @gwest7 I created my own NavBar component that I use as a child within my scene. I hide the NavBar at the router level, using it as a proxy to pass props, and then use those props within my scene component \u2013 providing relevant ones to my child NavBar.\nIt's given me a lot more control over the appearance of my NavBar which relies heavily of state within the scene itself.. @stonepreston: @agarcia17 is correct.\nI recently looked into doing that very thing. I ended up going into the source code and just removing this code myself, because using the renderTitle function would mean you'd have to recreate most of what's being done for you by the library's renderTitle.\nYou won't have access to variables within that function, so you'll have to port more into your own component. Essentially, you want to override the banana, but you have to override the whole gorilla.. @stonepreston Glad to hear it. I should have mentioned, take care when modifying the node_modules files.\nA better solution might be to just copy NavBar.js to your project file directory and reference that file as your NavBar component instead. This way your repo owns the file (and any modifications).\nOtherwise, if another engineer pulled your repo and ran npm install your code changes wouldn't be there since they are not tracked in Git.. Users have the option to use a custom Navbar component. I did that with v3.36.0.\nI'm just going to copy and past the new Navbar into my project and modify it until this is fixed. If I find a clean solution, I'll submit a PR.. @Samueljoli it seems you can simply use react-redux connect function to wrap your scenes. I just discovered this myself in the Switch example. Hope this helps!\njsx\n<Scene\n    key=\"root\"\n    component={connect(state=>({profile:state.profile}))(Switch)}\n    tabs={true}\n    unmountScenes\n    selector={props=>props.profile.sessionID ? \"main\" : \"signUp\"}\n    >\n    <Scene key=\"signUp\" component={SignUp}/>\n    <Scene key=\"main\" component={Main}>\n</Scene>. ",
    "Ross-Landry": "@AndrewHenderson -I'm having the same exact problem. Did you find a solution?. @AndrewHenderson\nTry adding:\ntype={ActionConst.RESET} \nas a prop to your 'Login' scene. You may also have to add the prop to the parent scene, if that's what you navigate to. For example, when I logout I navigate to Actions.auth(), which starts at my login scene. So I had to add type={ActionConst.RESET}  to the Auth scene as well. \nExample:\n            <Scene key=\"auth\" barButtonIconStyle={{ tintColor:'black' }} type={ActionConst.RESET}  >\n              <Scene key=\"login\" \n                                    component={LoginForm} \n                                    title=\"Login\" \n                                    type={ActionConst.RESET} />\n              <Scene key=\"register\" \n                                    component={RegisterForm} \n                                    title=\"Register\" \n                                    onBack={() => this.onBackToLogin() }  />\n            </Scene>\n\nThis worked for me, good luck!. @JeroenNelen \nDoes Scene A always go back to Scene Z when you click the 'back' button on the nav bar? If that's the case then I could suggest a workaround.. @JeroenNelen you can define the scene that the back button navigates to using the 'onBack' prop of the Scene component. \nSo for sceneA set:\nonBack={()=> Actions.sceneZ() } \nOnce you've done this then you can make sceneA type RESET. . ",
    "eseQ": "Use NavigationActions.pop() before push fix it for me, example:\njavascript\n   NavigationActions.pop();\n   setTimeout(()=> NavigationActions[to](options));. @aksonov it is brilliant news! Good luck!. Yeah, that dosnt work. @aksonov awesome. But i have one q: why mobx in dependencies?. Anyone can write migration guide like webpack. ",
    "razvan-tudosa": "Isn't there a cleaner solution? I have to do this in several places in order to avoid the crashes, it's insane!. ",
    "MirGhojam": "Hi, my whole android app's TextInput has the same phenomenon, I would be very grateful if you'd elaborate me on this solution.  Thank You @vonovak . @vonovak oh I see, Thanks anyway :). ",
    "Andreyco": "This is related to scene nesting - which is unique to RNRF as far as I know.\nHaving different hierarchy, it works as expected. Except navbar does not slide with Scene\nTested it with \"plain\" implementation, NavigationExperimental seems to work as expected (ofc, no scene nesting tested)\n. > Could you add nested scenes with \"plain\" implementation?\nNo, I did not attempt to do so. Native/plain implementation rendered scene by simple \"switch\" logic.\n. As stated in release notes NavigationRootContainer is removed. Assuming that, RNRF is completely broken, since Scene makes use of NavigationRootContainer. Or am I wrong?\n. @joenoon oops, it sounded differently as I mentioned that. RNRF works just great as is, with RN 0.26. I meant it's not in shape ready for RN 0.27, which has introduced several breaking changes.\n. ",
    "tsyirvo": "Hey,\nI'm having the same issue when swiping back when the scenes are wrapped inside a tabbar\u2026\nI'm using RNRF v3.22.23 & RN v0.24.1\n. @AshokICreate It's because the Platform.select API is only available on RN since 0.26 and you're using 0.25.1.\n. I had the exact same problem and to fix it, I had to downgrade to an older version of RNRF.\nIf you use v3.26.0, you shouldn't have any problems.\n. So there is no way to get a custom left button while using a tabbar ?\nEven when putting an onBack action, I can't modify the default behavior of the left button\u2026\n. backButton is not changing anything either.\nAfter testing something else, I realized that nowhere in my app, I can put a custom left button... I might be doing something wrong :/\n<Scene key='searchResults' component={SearchResults} title='R\u00e9sultats' titleStyle={{ color: '#7A7A7F' }} leftButtonImage={settingsIcon} onLeft={() => { Actions.filters(); }} rightButtonImage={mapIcon} onRight={() => { Actions.filters(); }} panHandlers={null}/>\nThis is what I'm using inside my tabbar. I'm doing the same for right and left but only right button is working.\n. After upgrading to the latest version of RNRF and RN, I don't seem to have any problems with my navbar.\n. I don't have any problems with the navbar styling but when doing routing from a scene from inside the tabbar to a scene which is outside of the tabbar (a regular scene), the navbar is not displayed a the scene to which i'm routing the user\u2026\nDo I need something specific to jump from the tabbar to a scene outside of it ?\n. Thanks for putting me in the right direction :)  I managed to do what I needed! \nWhen i'll have time, I'll clean my code and submit a PR for this.\n. ",
    "abumostafa": "+1. ",
    "MihaiDamian": "Having the same issue. Swiping randomly navigates to the previous scene in the stack or to the previous scene in the parent stack.. ",
    "arunkumarrmrj": "Use below code on router init\n<Router createReducer={createNavigationReducer}>\n<Scene key=\"auth\" component={RootScene} hideNavBar initial={true} renderBackButton={null} panHandlers={null} />\n  <Scene key=\"sceneLogin\">\n    <Scene key=\"sceneLogin1\" component={LoginScene} title=\"Login\" renderLeftButton={renderLeftButton} renderBackButton={null} panHandlers={null} />\n  </Scene>\n  <Scene key=\"sceneRegister\">\n    <Scene key=\"sceneRegister1\"\n      component={RegistrationScene} title=\"New User\" renderLeftButton={renderLeftButton} renderBackButton={null} panHandlers={null} />\n    <Scene key=\"sceneRegister2\"\n      component={RegistrationScene2} title=\"New User2\" renderBackButton={null} panHandlers={null} />\n  </Scene>\n</Router>. ",
    "DjangoGG": "having the same issue. ",
    "vnovick": "Updated the version. Still the same\n. ",
    "gouxlord": "Got same issue, any idea how to fix it?\n. Same in RN 0.31.0 and RNRF 3.35.0, if you have any idea...\n. ",
    "therealaldo": "Hey everyone, I've had the same issue and I found a quick workaround for the time being. I'm not really sure how viable of a solution it can be.\nWhat I realized was the second go around through the different tabs, an array containing the children would be added to the scene object as well as the index the tab is in that array. I decided to just add a conditional to the routes reducer.\n``` javascript\nswitch(action.type) {\n    case 'focus':\n      if(action.scene.index) {\n        return {\n          ...state,\n          scene: action.scene.children[action.scene.index],\n        }\n      }\n      return {\n        ...state,\n        scene: action.scene,\n      }\ndefault:\n  return state;\n\n}\n```\n. I need help with implementing a custom tab bar as well. ",
    "Herlevsen": "I have the same problem, using the drawer example from the documentation. In my scenario it's just the Drawer that gets focus the second time. Is a fix coming? @aksonov . This is not working anymore. ",
    "diegocouto": "That's great, @therealaldo! This issue was driving me mad, but I could solve this thanks to your workaround. In order to make it work for tabs with index 0 I modified your first condition a little bit:\nif (action.scene.hasOwnProperty('index') && action.scene.children) { ... }. Well, it seems that a possible solution (as pointed by @therealchuckliu) was already merged on react-navigation package, but it's not available on the current version yet (1.0.0-beta.19).. @aksonov I do! On Tab#2_1 the right text is displayed, but not the Tab#1_1 button. It's the same issue with positioning that we faced with the back button. I'm already working on a PR.. @parachute-dev The title is center aligned on iOS only, probably to comply to the material design guidelines.\nWhen defining your scene, you can use titleStyle attribute to define new styles to the scene title. \ud83d\ude03 . Thanks for the fast reply, @aksonov and @hofuchi! I'm going to take the day to investigate this issue a bit further.\nConsidering the current scenario, my initial hypothesis is that the scenes aren't being stacked correctly on Android. It would explain why it can't identify where to go when the app is put back in foreground and also won't pop when expected (or show the back button on header).\nDo you think that this is a valid approach? \ud83d\ude0a. Again, thanks for you help, @hofuchi! I'm already working on it. It seems that the initial issue displaying the back button is related to its positioning, as aksonov initially suggested on #2023.\nThe scenes are being correctly stacked, so the physical back button problem on android is something else. I hope to submit a pull request soon. \ud83d\ude04 . Hey guys, I've just submitted a pull request with a fix for the issue #2023. It seems that, even though different from v3, it's expected that the back button action on android is going to be implemented by the user when using react-navigation (at least, this is what I could take out of this thread). \nFollowing what was suggested by hofuchi and here, I'm handling the physical back button with:\n``` javascript\nimport React, { Component } from 'react'\nimport { BackHandler } from 'react-native'\nimport { Actions } from 'react-native-router-flux'\nclass App extends Component {\n  constructor (props) {\n    super(props);\n  }\ncomponentDidMount () {\n    BackHandler.addEventListener('hardwareBackPress', this.onBackPress);\n  }\ncomponentWillUnmount () {\n    BackHandler.removeEventListener('hardwareBackPress', this.onBackPress);\n  }\nonBackPress () {\n    if (Actions.state.index === 0) {\n      return false;\n    }\nActions.pop();\nreturn true;\n\n}\n// ...\n}\n```. @aksonov Sure, I'm glad to help! . @quarryman Yep! It should look like this:\n\n. Hi, @oeddyo I think that it depends on what you're building. If it's an iOS only app, I'd definitely go with v4 (React Navigation transitions are a delight). On the other hand, if you need Android compatibility, v4 can't be used without workarounds.. @aksonov I can reproduce this same issue described on #2038. I'm working on it right now. \ud83d\ude09 . @aksonov I have added the backHandler to the App component on the Router, but I'm probably getting something wrong about accessing the index of the current scene.\nThe original:\njavascript\nconst App = observer(props => {\n  const AppNavigator = props.navigator;\n  return (\n    <AppNavigator navigation={addNavigationHelpers({ dispatch: navigationStore.dispatch, state: navigationStore.state })} />\n  );\n});\nIs now defined as:\n``` javascript\n@observer\nclass App extends Component {\n  componentDidMount () {\n    BackHandler.addEventListener('hardwareBackPress', this.onBackPress);\n  }\ncomponentWillUnmount () {\n    BackHandler.removeEventListener('hardwareBackPress', this.onBackPress);\n  }\nonBackPress = () => {\n    if (navigationStore.state.index === 0) {\n      return false;\n    }\nnavigationStore.pop();\nreturn true;\n\n}\nrender () {\n    const AppNavigator = this.props.navigator;\n    return (\n      \n    );\n  }\n}\n```\nThe issue here is that navigationStore.state.index is always 0. Do you have an idea about what is going on?\nRegarding #2038, I think that we would only have to update the docs. To make it work on android:\n\n\nIt's important to set showIcon on the tabbar root scene. Icons are disabled on Android by default, as stated here.\n\n\nInstead on defining a scene like:\njavascript\n<Scene \n  key='home' \n  component={Home} \n  title='Home'\n  iconName='ios-home'\n  icon={TabIcon} hideNavBar />\n\n\nThe right way to do it now is:\njavascript\n<Scene \n  key='home'  \n  component={Home} \n  title='Home'\n  tabBarIcon={() => (<TabIcon iconName={'ios-home'} />)} />\n. Thanks for all your help, @hofuchi! I've followed the approach you suggested and everything seems fine.. Thanks again for your fast reply, aksonov! Well, this is a bit embarrassing but, to be honest, I'm still not sure about what is the proper way to do this. On v3, I had a route reducer which would only track the ActionConst.FOCUS.\nThis is my current reducer:\n```javascript\nexport const routes = createReducer({}, {\n  [ActionConst.FOCUS] (state, action) {\n    if (action.scene.hasOwnProperty('index') && action.scene.children) {\n      return {\n        ...state,\n        scene: action.scene.children[action.scene.index]\n      };\n    }\nreturn {\n  scene: action.scene\n};\n\n}\n});\n```\nOn the example project, this is how the reducer is created:\njavascript\nconst reducerCreate = params => {\n  const defaultReducer = new Reducer(params);\n  return (state, action) => {\n    return defaultReducer(state, action);\n  };\n};\nI have unsuccessfully tried something like:\njavascript\nconst reducerCreate = connect()(Router);\nI may be confusing some vary basic concepts so, any idea would be helpful (even though I do understand that this would be more suitable on StackOverflow).. For future reference, I built a custom router component, which is going to be used in place of my last RouterWithRedux.\n``` javascript\nimport React, {Component} from 'react';\nimport {Router, Reducer} from 'react-native-router-flux';\nimport {connect} from 'react-redux';\nclass CustomRouter extends Component {\n  reducerCreate (params) {\n    const defaultReducer = new Reducer(params);\n    return (state, action) => {\n      this.props.dispatch(action);\n      return defaultReducer(state, action);\n    };\n  }\nrender () {\n    return (\n      \n        {this.props.children}\n      \n    );\n  }\n}\nexport default connect()(CustomRouter);\n```\nOn my root component, I just integrate it like this:\njavascript\n<Provider store={store}>\n  <CustomRouter>\n    // Scenes...\n  </CustomRouter>\n</Provider>\nThis approach is completely based on what's described here. I found it on this very interesting thread about the same subject.  \nHope it helps. \ud83d\ude09. Hi, @marcellkiss! To be honest, I didn't try to. We decided to update to v4 due to the smoother transitions but it represented a lot more work than we estimated, so we're dedicated to basic things first. hahaha. Hi, @yordis! I'm glad to see that it's working for you.\nI'm not sure if I could understand what you meant by dispatch the action without passing any state, but the idea here is that an action (and only an action, as you can see here) is dispatched and the store is going to use it to figure out what the next state is going to be.\nAs a reference, this is a reducer that I'm currently using on a project:\n```javascript\nimport {Actions, ActionConst} from 'react-native-router-flux';\nimport * as types from '../actions/types';\nimport createReducer from '../lib/createReducer';\nexport const routes = createReducer({currentScene: null, prevScene: null}, {\n  [ActionConst.FOCUS] (state, action) {\n    return {\n      prevScene: state.currentScene,\n      currentScene: action.routeName\n    };\n  },\n[types.BACK] (state, action) {\n    return {\n      prevScene: state.currentScene,\n      currentScene: Actions.currentScene\n    };\n  }\n});\n```\nAs you can see, I only care about scenes names (I'm going to use it to identify whether I should close my app on Android or not).. Hi, @xahon! No, it is not. As you can see here, pop doesn't expect params.\nTo achieve this behavior, you can refresh after a pop. Take a look on #2047 to get some ideas about how to implement this. \ud83d\ude09 . Hi, @abhaychitnis! I've experienced something similar. Have you tried to add hideNavBar to your Scene with key main?\nRegarding the title not being centered, I think that this is expected by Material design guidelines, but you can always change it with the titleStyle attribute.  What if you tried this:\n``` javascript\ntitleStyle: {\n  color: 'white',\n  fontWeight: 'bold',\n  alignSelf: 'center',\n}\n```. That's good news, @abhaychitnis!\nTo show the back button, maybe you could add the back prop to the OpenJobs scene... but I've never tried it. \ud83d\ude02. @abhaychitnis, well... that's odd. If you try to touch where there should be the back button, does anything happen?\nOff the top of my head, I'd guess that:\n1) The button is right there, but it has the same tint color than the background;\n2) You're using a outdated version of the RNRF, where the button wouldn't show on android (try to update to beta12).. @igorarkhipenko yes, I did! At the time, no luck, but it got fixed already. Thanks for your help! \ud83d\ude04\n@aksonov, thanks for your work! Adding a {type: ActionConst.REPLACE} now won't perform a push anymore. Unfortunately, the issue with the whole navigation stack being cleaned up on replace remains.\nThis issue can actually be seen on the example project. Try:\nlaunch -> register page -> register2 page -> replace -> back.\nThe replace screen should have replaced only the register2 page and, on a back action, should have lead to the register page. What actually happens is that we're redirected to launch, acting as a reset.\nI know that this issue isn't well represented by the original title, should I open another one?. Sure! I don't know if you have a better idea, but I was thinking about rebuilding the stack using the current one (without the current scene, of course) with the new scene on top of it. This would allow us to keep the expected flow. \n. Hey, @paloman! Are you able to reproduce this on the example project? The more details you share, the easier it gets to help you. \ud83d\ude04 . Hi, @ysfkc! Yep, I don't think that they're part of v4 API. To hide the back button, you could use back={false} instead. \ud83d\ude04 \nHope it helps!. Hum... I haven't worked with it myself but, based on the example project, I think you can get the drawer menu icon with the drawer prop.\nYou can see a demo of the project, and here is the line I'm talking about.. ",
    "jpapillon": "+1\n. ",
    "dljcollette": "@texas697 Were you able to fix the issue? Could you share your solution?\n. ",
    "kgritesh": "I am facing the same issue in my project, i see that both scene and focus actions are emitted but the scene doesn't change. I understand that it might be a bug somewhere in my code, but any suggestion on debugging it?\n. Facing the same issue myself. \n. I have submitted a PR to sort out this issue. Have a look. #1366 \n. ",
    "nickleach": "I had the same issue and resolved it by changing navigationState={children[0]} to navigationState={children[children.length - 1]}\n. ",
    "Geoffrey-D": "Thank you SO much @nickleach !!. ",
    "vpasquier": "I closed as #791 is created. Sorry for the spam.\n. ### Version\nTell us which versions you are using (react native 0.26 is required for v3): \n- react-native-router-flux v3.22.0\n- react-native v0.22.2\nExpected behaviour\nNot having warnings when setting null to rightButtonImage or rightTitle\nActual behaviour\nThe opposite\nSteps to reproduce\nExplained in the expected behaviour\nAnother solution would be hide and display those buttons, based on rules.\n. Merci :)\n. ",
    "alextkd": "Indeed there were some space indentation errors, haven't checked eslint to make sure it passes. Thanks for the heads up.\n. Looks good to me. I don't see any problems it can cause. \n. You may want to add from index as well\n. can you make sure it is a function sent ( typeof el.props.onPress === \"function\")\n. I'm wondering why you would need this. navigationState.tabs will never have a component attached to it and this condition is for navigationState.component, or maybe i got it wrong. \n<Scene key=\"my_tabs\" tabs>\n .... your other scenes with components that represent tab views ... \n</Scene>\n. People coming other frameworks where they could just put there the action on the class itself mentioned as a string, onPress='onMyButtonPress' where onMyButtonPress is a method defined within the class :) well i'm sure it will rarely happen, it is more as a sanity check for avoiding type missmatch exception. I do not have anything in mind merging this in like it is though.\n. ",
    "Shinichi52": "@cridenour  Thank you\n. ",
    "ctrlaltdylan": "Thank you, the documentation answers my question as well. How awesome!\n. ",
    "Nethracs": "Can anyone please give me some hint on how to use DrawerLayoutAndroid with redux?. ",
    "BrainTrain3000": "I've experienced this issue, and it seems to occur when Scene 1 is clicked before Scene 2 unmounts (in your gif example). Throw a console.log on componentWillUnmount on Scene 2 and you'll see what I mean. Not sure if that's self-evident or if it helps, but just thought I'd mention it!\n. ",
    "oziks": "And if you put a different key attribute on your <View /> component, you should not have this problem?\n. ",
    "mpochron": "+1 , any solve for that? animation is need for between scenes liistview and view.\n. I got same issue as above, any idea for fixing it?\n. +1 , also here too problem on Android.. @AndrewHenderson I still have this issue, and it isnt closed.. @aksonov please reopen.\nneed solution for it.. +1. ",
    "Parrryy": "+1. Waiting for a solution. . ",
    "unicornRainbows": "Also have seen the issue plenty of times... setting duration={0} solves the issue but then removes the much needed animations. The UX guys are stressing! :). Best answer EVVVAAAA\n. ",
    "exityan": "In my case, passing any value other than 0 to duration, e.g. duration={300}, also worked without sacrificing animation effects.\nI'm on RN 0.37.0 and RNRF 3.37.0.. ",
    "guimello": "I have the same issue using RN 0.37. even if I set duration to 100ms. The animation is the issue here. If you are fast enough, you can see this happening.\nThe problem happens to me when I have a listview, them the user taps an entry and goes to it. Tapping back and tapping an entry on list very fast causes the same scene (and components of course) that is being poped to be reused, therefore no componentWillMount is fired, etc.\nStill looking for a solution other than duration={0} on my transitions . I can even reproduce this weird behaviour with simple steps. Two scenes, A --> B, B then resets to A (Action.A({type: \"reset\"})). This first time scene A is recreated, constructor is called, etc. If you go again to B and try to reset again, A's constructor is not called and the same previous scene is used.. Yes I said in my previous comment you don't need anything special. To scenes A, B. Scene A go to B. B reset to A. A's constructor is called. Do the same thing again. A's constructor is not called.\nAgain you don't need anything special.\nIn the end, In order to fix things by my side I added a nested route wrapping A. Something like:\n```\n\n\n\n\n```\nNow constructors are called always as expected.. Wrapping a scene like my example fixed for me as I said earlier. So you don't need to duplicate the initial property. The problem is that I don't think this should be necessary.\nThe problem happens when you write siblings scenes.\n<Scene key=\"A\" initial={true}/>\n<Scene key=\"B\" />\nThen, B can't reset more than once to A again. Actually it does reset, but only once the A's constructor is actually called. The second time, B is just removed from the hierarchy (pop).\nBTW, I'm resetting with Actions.A({type: 'reset'}).\n. I see, what I did instead was to reset to another scene (which my business logic allowed) and then later I could safely reset to the initial scene.\nLooking at the code I can see that reseting to the to a view which is currently on the stack, just pops the other scenes in front of it. At least this is my understand.\nI'd prefer to be actually \"reset\" the scene being reset, meaning, we should use another instance so the constructor is called again.\nSo, what is the intended behaviour?. @booboothefool Not really, and I don't see how this would work using this lib. Because your first scene is on the stack, this lib just pops until it. Reset does not apply. Actually I don't know why it only works once.\nI did not have time to investigate this further, but this is really a common behaviour.\nWhen I have some time, which sadly will not be soon, I'll create a sample project with this behaviour, and perhaps dig into some code later on.. ",
    "autovalue": "+1, this is a pretty big issue that we've been having for a while now.. https://github.com/aksonov/react-native-router-flux/blob/master/docs/REDUX_FLUX.md#reduxflux. ",
    "Clowning": "+1. Waiting for a solution. It's a big issue!. No news ? I've the same issue!. Same issue!. No news?. You need to downgrade to 3.37 !\n\"react-native-router-flux\": \"3.37.0\"\nIt worked for me. @hellomaya  Yes i guess, but this comportment is not normal ! Component will be unmount just after pop ! No few times after! But yes, with Redux, this issue will be solved !. Yes i know it, i've tried with pure ReactNavigation and it's working ! With RNRF it's not working ! , It's working on IOS but not on ANDROID.\nIOS : \n\nANDROID : \n\nCODE : \n```\nimport React from 'react'\nimport { View } from 'react-native';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport Reducers from '@Redux/Reducers';\nimport scenes from '@scenes';\nimport { Actions, Scene, Router,ActionConst } from 'react-native-router-flux';\nimport IconMaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons';\nimport {ORANGE} from '@Theme/colors'\nimport {\n  Login,\n  Home,\n  Events,\n  EventDetail,\n  CreateEvent,\n  Messages,\n  Notifications,\n  PrivateProfil,\n} from '@Pages';\nconst tabbarConfigStyle= {\n      height: 60,\n      backgroundColor: '#ECF0F1',\n      borderColor: '#ECF0F1',\n};\nconst iconHome = (navigation) => ()\nconst iconNotifications = (navigation) => ()\nconst iconEvents = (navigation) => ()\nconst iconMessages = (navigation) => ()\nconst iconProfil = (navigation) => ()\nconst Kernel = () => (\n  \n\n\n  <Scene key=\"login\" initial hideNavBar>\n    <Scene key=\"welcome\" component={Login} />\n  </Scene>\n\n  <Scene key=\"PrivateProfil\" mode=\"modal\" modal direction=\"vertical\" component={PrivateProfil} title=\"MyProfil\"  />\n\n  <Scene key=\"inapp\"\n  panHandlers={null}\n  tabBarStyle={tabbarConfigStyle}\n  showLabel={false}\n  activeTintColor={ORANGE}\n  tabBar\n  tabs>\n\n    <Scene key=\"Home\" tabBarIcon={iconHome}>\n        <Scene key=\"Home\" component={Home} header={null} title=\"Home\" />\n    </Scene>\n\n    <Scene key=\"Notifications\" icon={iconNotifications} component={Notifications} title=\"Notifications\"  />\n\n    <Scene key=\"Events\" tabBarIcon={iconEvents} >\n      <Scene key=\"Events\" component={Events} title=\"Events\" />\n      <Scene key=\"CreateEvent\" component={CreateEvent} title=\"CreateEvent\" />\n      <Scene key=\"EventDetail\" component={EventDetail} title=\"EventDetail\" />\n    </Scene>\n\n    <Scene key=\"Messages\" icon={iconMessages} component={Messages} title=\"Messages\"  />\n  </Scene>\n\n</Scene>\n\n\n\n)\nexport default Kernel\n```. ",
    "damathryx": "solutions for these?. drawImage, leftButton doesnt work for me. sorry for the noob questions its actually just \nonRight={()=>{Actions.SCENE()}}\n. still a problem. it takes like 3-5 minutes before the animation is finished. using android device:\nHuawei GR3\nAndroid 5.1. using Actions.pop() instead fixes it.. ",
    "vance-liu": "big pro, Waiting for a solution?\n. ",
    "Borisboky": "Setting duration to 0 doesn't remove transition animation in my case. Why?\n<Scene key=\"scene_condition\"\n                   tabs={true}\n                   type=\"reset\"\n                   tabBarStyle={styles.tabBarStyle}\n                   tabBarSelectedItemStyle={styles.tabBarSelectedItemStyle}\n                   navigationBarStyle={styles.navBarStyle}\n                   titleStyle={styles.navBarTitleStyle}\n                   hideTabBar={false}\n                   hideNavBar={true}\n                   tabBarPosition=\"bottom\"\n                   labelStyle={{fontSize: 7}}\n                   title=\"\"\n                   duration={0}>\n                <Scene key=\"scene_condition_car\"\n                       tabBarLabel={gettext(\"Model\")}\n                       title={gettext(\"Model\")}\n                       component={Car}\n                       icon={TabIcon}\n                       iconTittleHidden\n                       iconName=\"directions-car\"\n                       leftButtonIconStyle={styles.moduleButton}\n                       leftButtonImage={require('./img/icons/left.png')}\n                       onLeft={(props) => requestOverview(props.request.id)}\n                       navigationBarStyle={styles.navBarStyle}\n                       titleStyle={styles.navBarTitleStyle}\n                       duration={0}/>\n                <Scene key=\"scene_condition_checks_features\"\n                       tabBarLabel={gettext(\"Equipment\")}\n                       title={gettext(\"Equipment\")}\n                       component={Equipment}\n                       icon={TabIcon}\n                       iconTittleHidden\n                       iconName=\"playlist-add-check\"\n                       leftButtonIconStyle={styles.moduleButton}\n                       leftButtonImage={require('./img/icons/left.png')}\n                       onLeft={(props) => requestOverview(props.request.id)}\n                       navigationBarStyle={styles.navBarStyle}\n                       titleStyle={styles.navBarTitleStyle}\n                       duration={0}/>\n                <Scene key=\"scene_condition_specs\"\n                       tabBarLabel={gettext(\"Specifications\")}\n                       title={gettext(\"Specifications\")}\n                       labelStyle={{fontSize: 18}}\n                       component={CarSpecs}\n                       icon={TabIcon}\n                       iconTittleHidden\n                       iconName=\"control-point-duplicate\"\n                       leftButtonIconStyle={styles.moduleButton}\n                       leftButtonImage={require('./img/icons/left.png')}\n                       onLeft={(props) => requestOverview(props.request.id)}\n                       navigationBarStyle={styles.navBarStyle}\n                       titleStyle={styles.navBarTitleStyle}\n                       duration={0}/>\n                <Scene key=\"scene_condition_picture\"\n                       tabBarLabel={gettext(\"Pictures\")}\n                       title={gettext(\"Pictures\")}\n                       component={CarPicture}\n                       icon={TabIcon}\n                       iconTittleHidden\n                       iconName=\"photo-camera\"\n                       leftButtonIconStyle={styles.moduleButton}\n                       leftButtonImage={require('./img/icons/left.png')}\n                       onLeft={(props) => requestOverview(props.request.id)}\n                       navigationBarStyle={styles.navBarStyle}\n                       titleStyle={styles.navBarTitleStyle}\n                       duration={0}/>\n                <Scene key=\"scene_condition_damages\"\n                       tabBarLabel={gettext(\"Damages\")}\n                       title={gettext(\"Damages\")}\n                       component={Damages}\n                       icon={TabIcon}\n                       iconTittleHidden\n                       iconName=\"broken-image\"\n                       leftButtonIconStyle={styles.moduleButton}\n                       leftButtonImage={require('./img/icons/left.png')}\n                       onLeft={(props) => requestOverview(props.request.id)}\n                       navigationBarStyle={styles.navBarStyle}\n                       titleStyle={styles.navBarTitleStyle}/>\n                <Scene key=\"scene_condition_close\"\n                       tabBarLabel={gettext(\"Close\")}\n                       title={gettext(\"Close\")}\n                       component={Close}\n                       icon={TabIcon}\n                       iconTittleHidden\n                       iconName=\"done\"\n                       leftButtonIconStyle={styles.moduleButton}\n                       leftButtonImage={require('./img/icons/list.png')}\n                       onLeft={(props) => requestOverview(props.request.id)}\n                       navigationBarStyle={styles.navBarStyle}\n                       titleStyle={styles.navBarTitleStyle}/>\n            </Scene>. ",
    "alam-technobd": "How to update the previous Screen on\nActions.pop( { refresh: { data: 'Data after pop', title: 'title after pop' }, key: null } )}\nWhat should I do in my previous screen where pop back.\n. ",
    "Crash--": "Had an issue after upgrading to the 3.26.30 because of this commit. I've a customized tabBarStyle and I want this style applied if I haven't specified a tabBarSelectedItemStyle for the selected item not the 'white' background. Can we replace the current line by this one or do I need to add tabBarSelectedItemStyle to every tabbar I use? \njsx\nselectedIconStyle={[{ backgroundColor: 'white' }, state.tabBarStyle, state.tabBarSelectedItemStyle]}\n. ",
    "Swordsman-Inaction": "@aksonov thanks, man\n. @esutton \nyou can use the PR in #806 \nor you can just use\nActions.pop()\nsetTimeout(() => {Actions.pop()}, 100)\nto pop twice\n. @aksonov @nitsujri @rseemann you guys are awesome\n. @rseemann I'll try it, thanks\n. @aksonov In the Reducer.js, before update is called, action.parent will be assigned, But neither update() or inject use it. So does it matter? If it matters, I think I should update the implement, since the action.parent is wrong if you are popping several scenes.\n. @joenoon @aksonov  #798 is a good feature. But this one is trying to get this (https://github.com/aksonov/react-native-router-flux/issues/39#issuecomment-157990785) back.\nBoth of them are basically trying to do the same thing. If you guys think #798 is enough, then this one can be closed\n. @joenoon action.popNum looks great. I'll fix those\n. @aksonov @joenoon Done\n. @rseemann  Really? I'm using the 3.26.16 version right now. But I'll check the latest version later. I close this PR firstly. \n. @rseemann  I updated the PR's description.\n. @esutton Good point. But RNRF doesn't handle the back key at all right now. It just exits the app whenever you press the button. My way is not very good, should we discuss this and make a better solution? @aksonov \n. @aksonov @joenoon I think we should revert this PR, maybe we can get a better solution later.\n. @cridenour Added.\n. @joenoon works good on my project. handleBackAndroid won't be called on iOS, since BackAndroid.addEventListener('hardwareBackPress', this.handleBackAndroid) just works on android.  I've checked source of react-native, hardwareBackPress only got emitted in code from Android LINK\n. @af7 Check this\n. Check this for help #1049 . And here is the document \nCheck this too\n. You should upgrade RN to 0.32.\nWith this, you can have the global handler   for most scenes. For those special scenes, you can add BackAndroid.addEventListener('hardwareBackPress', this.handleAndroidBack) in them, RN will call the later listener callback first, the global handler would not be called if you return true in the later listener callback. I think it's a better solution. Just remember to remove listener callback.\n. like @mattvot said, RNRF will pop the scene by default. you can also change the default handler. \nBut if you are using RN 0.32 and above, according to this, the later subscription callback will be call first, if the later one return true, the remaining callbacks would not be called any more. So you might call Action.pop() and return false at the same time if you got You are already in the root scene error.\n. @cuitianze @Micjoyce \nYes, we should fix this. A little busy recently, but I'll try to fix this as soon as I can.. My PR #1451 got an error when running jest\nENOENT: no such file or directory, stat '/home/ubuntu/react-native-router-flux/Example/node_modules/react-native/jest/setup.js'\nAny idea? @charpeni . @MechanicKim \nThe Example's pakcage.json file https://github.com/aksonov/react-native-router-flux/blob/master/Example/package.json\nIt does use \"react-native\": \"0.30.0\" and \"jest-react-native\": \"^17.0.3\"\nShould I just delete \"jest-react-native\": \"^17.0.3\"?\nAnd my PR doesn't change the Example, does it mean that the Example's pakcage.json is just wrong at beginning.. @aksonov @charpeni Do I have to past the CI? Seems the Example test configuration has some problem.. Seems like the CI has been disabled. Can we merge this PR now? @charpeni . @aksonov It didn't run. @aksonov Why don't use Travis CI? At lease Travis CI provides Restart Build function so I don't need to commit useless commits. LOL. @aksonov I'll start the setup this week.. @MechanicKim Can you just run yarn eslint or npm eslint to check the errors? I got this:\n```\n$ yarn eslint\nyarn eslint v0.17.10\n$ eslint index.js src/ test/; exit 0;\n/Users/edward/Documents/GitHub/react-native-router-flux/src/Reducer.js\n  182:9   error  Expected indentation of 6 spaces but found 8   indent\n  183:11  error  Expected indentation of 8 spaces but found 10  indent\n  184:11  error  Expected indentation of 8 spaces but found 10  indent\n  185:11  error  Expected indentation of 8 spaces but found 10  indent\n  186:11  error  Expected indentation of 8 spaces but found 10  indent\n\u2716 5 problems (5 errors, 0 warnings)\n\u2728  Done in 3.67s.\n```. Can you check PRs #820 #1049 and #1451 please, that's why I did this. It seems like you got the same issue with #1165, after #1451, this issue has been fixed.. @aksonov  changed\n. ",
    "chapati23": "this should be re-opened. have the exact same problem. only actions that's being dispatched by swipeBack is FOCUS. Narrowed it down: issue only appears when using reactotron and might be caused by circular references in the RNRF state tree. After blacklisting the RNRF actions in reactotron's config the error disappeared.\nI also had to blacklist the RNRF actions in redux-logger because it had a significant performance impact, using the back-button was quite laggy.. sure, thanks. ",
    "kenma9123": "He simply ignore things, if he can't really find a solution :D. ",
    "itcurves": "ok I got it thank you. Is there a simple way to use Tabs? I am trying but bit new thing for me.\n. That what I am following:\nplease check what is wrong:\n\n\n\n</Scene>\n    <Scene key=\"tab2\"  title=\"Tab #2\" >\n    </Scene>\n</Scene>\n<Scene key=\"home\" component={Home} title=\"My Title\" hideNavBar={false}/>\n\ngives me error below:\n[react-native-router-flux] component property is not set for key=tabbar\nsorry really new to these things just trying to learn.\nThank you\n. Did you find any answer?\n. any solution for this guys?\nI am using react native router flux and also react native gifted chat. and kind of stuck :(. ",
    "matthewfbenjamin": "@wachunei any update on how you handled this?. Any word on this? @yasemincidem @mintotsai . I meant, is there any update? Did you solve this issue?. yeah I'm having no problem resetting the tab bar component, my problem is that I want to reset the component inside of the tab bar:\n<Scene key='main' tabs tabBarStyle={{backgroundColor: 'white', height}} >\n      <Scene key='newsfeed' title='newsfeed' type={ActionConst.REFRESH} component={NewsFeed} hideNavBar icon={TabIcon} hideTabBar={false} />\n      <Scene key='explore' title='explore' type={ActionConst.REFRESH} hideNavBar icon={TabIcon} hideTabBar={false}>\n        <Scene key='explorePage' title='explorePage' component={Explore} type={ActionConst.REFRESH} />\n        <Scene key='folder' component={Folder} hideNavBar />\n      </Scene>\n      <Scene key='alerts' title='alerts' type={ActionConst.REFRESH} component={Alerts} hideNavBar icon={TabIcon} hideTabBar={false} />\n      <Scene key='more' title='more' type={ActionConst.REFRESH} component={More} hideNavBar icon={TabIcon} hideTabBar={false} />\n    </Scene>\nWhen I call the functions \nRouterActions.main({type: 'reset'})\nRouterActions.newsfeed()\nI want the newsfeed to start at the top again (since it's a listview). I can do this by resetting the component, but I run into the original issue or one icon in the tab bar.. Check out this issue. Check out Issue 1686. Found answer workaround here: Issue 1686. Just use the type REFRESH . I am still facing this issue. I am using the latest version (3.41.1). Below is a list of my dependecies. \nEDIT: I believe it's an issue with the ex-navigation.\n\"dependencies\": {\n    \"@exponent/react-native-responsive-image\": \"^1.1.0\",\n    \"bad-words\": \"^1.5.1\",\n    \"crypto-js\": \"^3.1.9-1\",\n    \"es6-enum\": \"^1.1.0\",\n    \"inject-tag-style\": \"^1.1.1\",\n    \"lodash\": \"^4.16.5\",\n    \"moment\": \"^2.17.1\",\n    \"next-frame\": \"^0.2.3\",\n    \"react\": \"15.4.2\",\n    \"react-addons-perf\": \"^15.4.2\",\n    \"react-native\": \"~0.42.0\",\n    \"react-native-atoz-list\": \"https://github.com/yuana1/react-native-atoz-list.git\",\n    \"react-native-background-upload\": \"^1.0.0\",\n    \"react-native-bar-collapsible\": \"^1.5.0\",\n    \"react-native-calendar-events\": \"github:mikestek/react-native-calendar-events#9457bcba9fc65f694b6eb8aa14d152467e855c85\",\n    \"react-native-code-push\": \"^1.17.2-beta\",\n    \"react-native-config\": \"github:mikestek/react-native-config#fb691adf47d812b0318c6cc6a17be8c053fdd3dc\",\n    \"react-native-cookies\": \"^2.0.0\",\n    \"react-native-device-info\": \"github:rebeccahughes/react-native-device-info#50e68b4a9766559be6feeb7f7b4a468889ed408b\",\n    \"react-native-dismiss-keyboard\": \"^1.0.0\",\n    \"react-native-display-html\": \"github:mbenjamin618/react-native-display-html#8084be980765485669798e9a59901e6ed09e9044\",\n    \"react-native-extra-dimensions-android\": \"^0.20.1\",\n    \"react-native-fabric\": \"^0.4.1\",\n    \"react-native-file-provider\": \"^1.0.2\",\n    \"react-native-fs\": \"^2.1.0-rc.1\",\n    \"react-native-get-real-path\": \"^1.0.0\",\n    \"react-native-google-analytics-bridge\": \"^5.0.1\",\n    \"react-native-http-cache\": \"github:mbenjamin618/react-native-http-cache#515bcb512863222e31cd57ff7a5e301341b7e958\",\n    \"react-native-i18n\": \"^0.1.1\",\n    \"react-native-image-picker\": \"^0.26.3\",\n    \"react-native-inview\": \"^1.1.2\",\n    \"react-native-keyboard-aware-scroll-view\": \"^0.2.6\",\n    \"react-native-keyboard-spacer\": \"^0.3.1\",\n    \"react-native-lightbox\": \"^0.6.0\",\n    \"react-native-list-view-select\": \"^1.0.4\",\n    \"react-native-looped-carousel\": \"github:mbenjamin618/react-native-looped-carousel#d0af173cf5944151869477ef58a138e8d8586a3c\",\n    \"react-native-mail\": \"^3.0.1\",\n    \"react-native-material-kit\": \"github:mikestek/react-native-material-kit#d40807f9107ac07ffcd9d5895312d004814bc427\",\n    \"react-native-material-ui\": \"github:mbenjamin618/react-native-material-ui#e99717fdebaad026b97adf527769df3ef0c2a260\",\n    \"react-native-menu\": \"^0.20.2\",\n    \"react-native-mimetype\": \"^0.0.7\",\n    \"react-native-mupdf\": \"^0.1.33\",\n    \"react-native-orientation\": \"github:mikestek/react-native-orientation#f1b6d3c70b64affe2fe18e1b70f3f5869cd553a3\",\n    \"react-native-permissions\": \"^0.2.7\",\n    \"react-native-photo-view\": \"1.2.0\",\n    \"react-native-push-notification\": \"github:davearata/react-native-push-notification#b892a2630af0a28ec5b5b74732668c52579e577a\",\n    \"react-native-root-toast\": \"^1.0.3\",\n    \"react-native-router-flux\": \"^3.40.0\",\n    \"react-native-share\": \"github:antmespo/react-native-share#d92669776de263d2691fec29a1d62ab0f150b0eb\",\n    \"react-native-spinkit\": \"^1.0.2\",\n    \"react-native-stylable\": \"github:davearata/react-native-stylable#32739ea0ab565150c9610c88ab611a798748dba4\",\n    \"react-native-vector-icons\": \"^4.0.0\",\n    \"react-native-video\": \"^1.0.0\",\n    \"react-native-video-player\": \"^0.6.1\",\n    \"react-native-webhtmlview\": \"0.0.3\",\n    \"react-native-webkit-localstorage-reader\": \"github:davearata/react-native-webkit-localstorage-reader#cd8eab4ac5f70e3991b47cd632cd1d76cdc3c5ed\",\n    \"react-native-webview-bridge\": \"github:davearata/react-native-webview-bridge#b9212dc477a948c75473ba9385680c412d62d2cb\",\n    \"react-redux\": \"^4.4.6\",\n    \"redux\": \"^3.6.0\",\n    \"redux-persist\": \"^4.0.1\",\n    \"redux-persist-transform-filter\": \"0.0.9\",\n    \"redux-thunk\": \"^2.1.0\",\n    \"superagent\": \"^3.3.1\",\n    \"url-parse\": \"^1.1.7\"\n  },\n  \"devDependencies\": {\n    \"babel-eslint\": \"^7.0.0\",\n    \"babel-plugin-flow-react-proptypes\": \"^0.20.0\",\n    \"babel-preset-es2015\": \"^6.24.1\",\n    \"babel-preset-react-native-stage-0\": \"^1.0.1\",\n    \"babel-preset-stage-0\": \"^6.24.1\",\n    \"chai\": \"^3.5.0\",\n    \"chai-as-promised\": \"^6.0.0\",\n    \"chai-enzyme\": \"^0.5.2\",\n    \"cheerio\": \"^0.22.0\",\n    \"colors\": \"^1.1.2\",\n    \"debug\": \"2.2.0\",\n    \"enzyme\": \"^2.5.1\",\n    \"eslint\": \"^3.8.1\",\n    \"eslint-config-standard\": \"^6.2.0\",\n    \"eslint-config-standard-react\": \"^4.2.0\",\n    \"eslint-plugin-flowtype\": \"^2.29.1\",\n    \"eslint-plugin-promise\": \"^3.3.0\",\n    \"eslint-plugin-react\": \"^6.4.1\",\n    \"eslint-plugin-standard\": \"^2.0.1\",\n    \"flow-bin\": \"^0.38.0\",\n    \"fs-extra\": \"^0.30.0\",\n    \"gulp\": \"^3.9.1\",\n    \"istanbul\": \"^1.1.0-alpha.1\",\n    \"lint-staged\": \"^3.2.1\",\n    \"minimist\": \"^1.2.0\",\n    \"mocha\": \"^3.1.2\",\n    \"nock\": \"^9.0.2\",\n    \"pre-commit\": \"^1.1.3\",\n    \"pre-push\": \"^0.1.1\",\n    \"promised-spawn\": \"0.0.1\",\n    \"react-addons-test-utils\": \"^15.3.2\",\n    \"react-devtools\": \"^2.0.12\",\n    \"react-dom\": \"^15.3.2\",\n    \"react-native-mock\": \"^0.2.7\",\n    \"react-stub-context\": \"^0.7.0\",\n    \"require-dir\": \"^0.3.1\",\n    \"run-sequence\": \"^1.2.2\",\n    \"sinon\": \"^1.17.6\"\n  }\n}. ",
    "abelcha": "@cgreening What version of RN are you using ?\n. ",
    "MillerDix": "Guess he`s using RN:0.25.x  \nSame here, ExperimentalNavigation caused naming collision\nRN:0.25.1 ( 3.30README says RN0.26+ supported, but is there any way i can keep my RN 0.25.1? )\nnpm: 3.7.3\nRemove node_modules and install again doesn`t work.\n. guys, any luck now? It drives me crazy..\n. ",
    "DClark5218": "still an open issue for me. I removed node modules and did the same as @hellogerard recommended. Still not working :(\n. Hey guys, I'm using this fix for now too. Except, I am finding it to look a little clunky and no longer smooth animation for a seamless transition. Does anyone else have this issue?\n. @garrettbland this seems like a really simple solution that could solve the problem. I'm going to refactor my code and let you know how it goes!\n. @garrettbland I tried this, but I get a weird view of the previous scene in the sidebar area? It doesn't seem to work for me.\n. +1 the docs aren't clear on this. A lot of the issues that are open still have references to routes on them when we are upgraded to '' now.\nHelp would be appreciated!\n. Additionally it looks like Navigator.SceneConfigs was a way of doing this, but it has been taken out. Any reason for that @aksonov? Thanks :)\n. ",
    "boorad": "Do you guys think that a problem I'm having with RNRF 3.32.0 and RN 0.29.2 (yes, I'm trying it out) could lead to a TimerMixin error during a transition?\nUnhandled JS Exception: _clearer is not a function. (In '_clearer(id)', '_clearer' is undefined)\nAnd here's the stack I get:\n\nI'm curious if this is relevant to this thread about getting on a more modern RN, and if I'm crazy for even trying 0.29 right now.  Also, I can't find the 0.29-WIP branch that @aksonov mentioned in the OP.\n. ",
    "vinceprofeta": "@aksonov would my custom tabsBar be passed into the parent scene as a footer prop?\n<Scene key=\"home\" footer={CustomFooter} tabs={true} >\n. ",
    "tomprogers": "I'd suggest that improving the documentation is a far more pressing concern than rerolling the semantics or adding new features. The featureset already on offer is unnecessarily difficult to leverage.\nThe existing docs are incomplete and would benefit from being reorganized. The in-depth example is poorly-annotated. Often the only way to discover the \"correct\" way to declare scene organization is by debugging the DefaultRenderer component.\nThorough, reference-grade documentation is especially needed for applyAnimation.\nThe icon prop of Scene should be renamed to something like renderTab, and its signature needs to be documented.\nThe list of action types emitted by RNRF must be enumerated, their payloads described, and the circumstances under which they're emitted must be explained. I'd also suggest namespacing the type values, because focus, push, and BackAction are reasonably likely to collide with app-specific business logic. Redux uses types like @@redux/INIT -- perhaps something like @@rnrf/PUSH, etc.\nThe Redux/Flux tutorial doesn't appear to show how to restore navigation state when the app boots. Apps that persist their redux store to disk (using AsyncStorage) will want to know how to do this. I would also welcome something that shows how to connect the Router to the Store using RNRF's ES7 decorator, @connect((state) => ({ /* ? */ })).\n. ",
    "robclouth": "Yeah, documentation would be brilliant. I know it's the boring bit, but it'll cut down on the number of issues submitted significantly. I would offer to help but I'm still figuring out the basics...\n. Maybe I'll just boil this down to the core question: can you have a nested navigator inside a non full screen popup? It seems like the Router sets the overall width of the scenes (setting sceneStyle={{width: 400}} on individual scenes does nothing). But also I can't get nester Routers to work and @aksonov has suggested that this is impossible in previous issues.\n. ",
    "lideen": "I think it is a bad idea to force the user to have this back button behavior. Maybe it is better to make this optional? In case you want a custom behavior as @esutton and @timzaak presented. I can also think of other use cases where you might want to show a warning or similar if the user is about to navigate back from a scene.\n. ",
    "yanqiw": "@timzaak 's solution help me.\n. I suggest that only throw the error when platform is 'android' and 'state.index===0', and let developer to handle the android back action in application.\n. hi, dose anybody is checking this request?\n. @joenoon @cridenour thx for the comments, i think u are right, i will cancel this request, and find a better way to done this, thx.\n. ",
    "manask88": "I don't think the link helps too much. Some actions like pop or push may be obvious. But I am having a hard time trying to differentiate jump vs replace for example. What about back vs backaction?. Would be nice to document how each of these actions make a change in the navigation stack\n. I face the same issue. In my case, I have a timeout which is cleared when the component is unmounted. Since unmounting is happening late, the mentioned timeout is being cleared late too, and this is causing an undesirable behavior. \nIs there any plan to fix this behavior soon?\nThere are some past issues related:\nhttps://github.com/aksonov/react-native-router-flux/issues/1254\nhttps://github.com/aksonov/react-native-router-flux/issues/800. ",
    "huchenme": "@rturk there is no documentation of pop in the link, and I have seem some examples using popTo but not in the link as well. In addition, it is really confusing of how to use, and what are the differences between different actions,\nfor example, what is the difference between Actions.pop({ type: ActionConst.RESET }) and Actions.popTo('home')?  is Actions.popTo('home') and Actions.home({ type: 'pop' }) the same thing?\n. ",
    "xirc": "I had same problem.\nVersions:\n- react-native-router-flux v3.30.0\n- typing: \"react-native\": \"registry:dt/react-native#0.19.0+20160501140141\"\nI've fixed the problem by #831.\n@AlmaasAre Could you try using it?\n. Sorry, I had a mistake to define Actions.create.\na545cad makes you to be able to write the following code.\nActions.create(\n  <Scene key={\"some_key\"} />\n);\n. Actually, I want to define\ncreate(scene: Scene, wrapBy?: () => any): Object\nBut, using this definition, I cannot write the following code.\nActions.create(\n  <Scene key={\"some_key\"} />\n);\nAre there better way?\n. https://github.com/xirc/react-native-router-flux-sandbox is the example.\n'master' branch uses 69e0ab4\n'fixed-one' branch uses a545cad\n. No problem. Thanks \ud83d\ude04 \n. ",
    "EngineerDiab": "@gmchaturvedi1 Did you figure out how to do it?\n. Nvm the style was transparent inline\n. ",
    "JosephkimOS": "I expect get size of routes or list of routes.\nDo I have to stack or track by myself? \n. ",
    "robotomeister": "I have a tangentially related question, is there a way to get the size of the stack before we do an Actions.pop()?\n. ",
    "guilhermebruzzi": "In my case i want the type PUSH_OR_POP on transitions. And i need to know the size of the stack to know if the action was a pop (and how many scenes it poped) or a push of a new scene.\n. ",
    "walkertong": "Same question. ",
    "duzliang": "+1. ",
    "nonotest": "+1 for this !\n. import NavigationExperimental from 'react-native-experimental-navigation'  for anyone that needs this. yep, either rollback or remove the folder manually, thanks for the workarounds. ",
    "kevando": "Not sure if this is helpful, but you can sorta hack the statusbar to be your own color. You just set the navbar to something like 20 and play with the other style and title style settings.\nHere is what I did to produce this: [Screenshot]\nI'm sure you can change the leftButton bgcolor and get this lookin pretty good.\nconst navBarStyle = {\n  backgroundColor:'red',\n  height:20,\n  padding:10,\n}\nconst navBarTitleStyle = {\n  backgroundColor:'green',\n  color:'#ccc'\n}\n. ",
    "redbaron76": "I'm encountering the same issue/limitation during the development of my navbar-native component. While provinding a \"theme\" prop (dark or light) to different scenes, when a dark scene moves to a light one (StatusBar style changes from white to black). But when the second scene pops back to first again, the StatusBar style keeps the black because it sets it globally and the pop action doesn't re-render the first scene.\nAny suggestion about how to change/avoid this?\nThanks\n. Well... in order to avoid this, I've been forced to create a new component/npm package called navbar-native. You can find it here: navbar-native\n. @ssomnoremac, you can find an implementation of this in a boilerplate project called MeteorNative.\nCheck it out: MeteorNative\n. I did it pretty easily.\nJust add a animationStyle prop to <Router/> like this:\njs\n<RouterWithRedux scenes={scenes} animationStyle={animationStyle}/>\nand create an animationStyle function that will override interpolate values.\nThis is what I currently use in my project:\n``` js\nexport const animationStyle = (props) => {\n    const { layout, position, scene } = props;\nconst direction = (scene.navigationState && scene.navigationState.direction) ?\n    scene.navigationState.direction : 'horizontal';\n\nconst index = scene.index;\nconst inputRange = [index - 1, index, index + 1];\nconst width = layout.initWidth;\nconst height = layout.initHeight;\n\nconst opacity = position.interpolate({\n    inputRange,\n    //default: outputRange: [1, 1, 0.3],\n    outputRange: [1, 1, 0.5],\n});\n\nconst scale = position.interpolate({\n    inputRange,\n    //default: outputRange: [1, 1, 0.95],\n    outputRange: [1, 1, 1],\n});\n\nlet translateX = 0;\nlet translateY = 0;\n\nswitch (direction) {\n    case 'horizontal':\n        translateX = position.interpolate({\n            inputRange,\n            //default: outputRange: [width, 0, -10],\n            outputRange: [width, 0, 0],\n        });\n        break;\n    case 'vertical':\n        translateY = position.interpolate({\n            inputRange,\n            //default: outputRange: [height, 0, -10],\n            outputRange: [height, 0, 0],\n        });\n        break;\n}\n\nreturn {\n    opacity,\n    transform: [\n        { scale },\n        { translateX },\n        { translateY },\n    ],\n};\n\n};\n```\nHappy coding!\n. ",
    "gkrinc": "I can get around this by create a scene for all 8 versions of a particular scene that I can normally handle with a single scene and different store states, but that seems HUGELY inefficient. It sucks that there isn't a way to do this programmatically with a single scene.\n. I tried adding the getSceneStyle prop to my RouterWithRedux, but I get the same problem that @Daniellt1 was getting: \"Objects are not valid as a React child (found: object with keys {...\"\nSo brutal that it's this difficult to get a Modal working :s\nHere's the render method of my index.ios.js file\nrender() {\n  return (\n    <Provider store={store}>\n      <AppDrawersContainer>\n        <RouterWithRedux hideNavBar={true} getSceneStyle={getSceneStyle}>\n          <Scene key=\"modal\" component={Modal}>\n            <Scene key=\"root\" renderTitle={() => { return <AppLogo /> }}>\n              ... other scenes ...\n            </Scene>\n            <Scene key=\"statusModal\" component={StatusModal} />\n          </Scene>\n        </RouterWithRedux>\n      </AppDrawersContainer>\n    </Provider>);\n}\nThe StatusModal is a direct copy of the one provided in the example.\nIf I take this scene out, I don't get the error, but of course the modal won't load\n<Scene key=\"modal\" component={Modal}>\nVersions:\nreact-native: v0.34.0-rc.0\nreact-native-router-flux: v3.34.0 (downgraded from 3.35.0 because of another issue)\n. https://github.com/aksonov/react-native-router-flux/blob/822e83f08f5063cd33bc0c92030311c9acafb2af/Example/Example.js#L107\n. I ended up going with react-native-simple-modal. I liked how easy it was to implement and it handles a queue of modals quite effectively and doesn't cause any weird routing issues that people seem to have come across.\n. This was working in v3.35.0. After updating to v3.36.0 my left button (burger menu icon) stopped rendering.\n. ",
    "brendan-rius": "Ok, ok we need some action here it's been too long; who's up to implement that?. Thanks @holden-caulfield \n@jjhesk, you should take a look at the official documentation of redux-sagas. ",
    "Frexuz": "Still no way around this?. headerTintColor seems correct, but what about size? or, if we want a different back-icon?. <Scene\n                        key='HomePage'\n                        component={HomePage}\n                        renderBackButton={<Icon name='chevron-left' />}\n                      />\nlike this?\n\nrenderBackButton is not a function\n\nUpdate:\nrenderBackButton={() => <Icon name='chevron-left' />} this renders the arrow correctly, but it doesn't do anything when pressed..\nDo we really have to re-implement back functionality ourselves?. Exactly the same problem here. Can't understand the reason why the bar must be displayed while dragging back.\n\n. +1. ",
    "leoskyrocker": "@charpeni I ran into the problem @mickeyinfoshan is having, and it's different from what you're describing here:\n\nIf you remove hideNavBar from the Example (here), you won't be able to swipe back with Android because the scene will be blocked in transition.\n\nThe problem I run into is that the navbar seems to be overlaid on the scene so if I display something at the top of the view it will potentially be covered by the navbar.. ",
    "bestofsong": "+1\nI could use \nrenderBackButton={()=>{return null;}} renderLeftButton={bla~bla~bla} onLeft={bla~bla}\nto render a left button, but I then must put onLeft function into my render function for it to work.\nBy the way, I think is better for onLeft to be  implemented each visible scene, because maybe a scene have to interact with user before calling Actions.pop()?\nAlso, in iOS, if a left button is provided for the navigation bar, the back button is not rendered then, but here things are reversed(https://github.com/aksonov/react-native-router-flux/blob/master/docs/API_CONFIGURATION.md), maybe this is related to the op's issue?\n. ",
    "Shakarang": "I've tried to add it in the scene with these properties : \n- color\n- backgroundColor\n- tintColor\nBut it doesn't work..\n. I guess that I'll never have a response.. Hello,\nYes it works when I set a background color.. \nThank you !\nMaybe you could specify \"breaking changes\" when you do an update to easily see what was updated?\nI use the default color when I don't need to change it now I just had to set the background color everywhere.\n. I did this :\n```\n\n\n```\n. ",
    "sercanov": "Would you try the following @Shakarang \n<Scene ... leftButtonIconStyle = {{ tintColor:'red'}} />\n. ",
    "JaiNatha": "You can always drill down into:\nnode_modules/react-native-router-flux/src/back_chevron.png\nand edit \"back_chevron.png\" however you'd like.. Oh sorry, I misread your initial comment, just realized you're trying to set it for each scene.\nleftButtonIconStyle={{ tintColor: 'green' }} is indeed the way to go. ",
    "indu127pal": "This is not working in my project.  \n\nVersion \n    \"react\": \"16.0.0-alpha.12\",\n    \"react-native\": \"^0.46.3\",\n    \"react-native-router-flux\": \"^4.0.0-beta.12\"\nneed to update back Icon color.. ",
    "jaimecorrea": "Same issue, on RNRF 4.0.0-beta.15 is not working leftButtonIconStyle, neither barButtonIconStyle. Same issue, solved rolling back to 3.38.0 . Same issue here after upgrade RNRF from 3.40.1 to 4.0.0-beta12. Hi,\nI need help on how to migrate my MenuDrawer from v3 to v4, there are many changes, I'm using react-native-drawer inside a MenuDrawer component but I can't use DefaultRenderer.... ",
    "jordenchang55": "```html\n<Scene\n    key=\"root\"\n    headerTintColor=\"#000\"\n\nThis works for me on RNRF@4.0.0-beta.16. Check [here](https://reactnavigation.org/docs/navigators/stack#Screen-Navigation-Options) for styling your nav bar.\nIf you want to change icon, you can useleftButtonImageorrenderBackButtonprop in scene.. The example works well, but when I try to use immutable with redux, it shows cannot update during an existing state transition warning. Here is the screen shot and my [fork](https://github.com/jordenchang55/rnrfSample) from rnrfSample.\nTried the solution of #2063 but not work.\n![simulator screen shot 2017 9 23 9 22 31](https://user-images.githubusercontent.com/8519084/30773571-d59e12a4-a0a5-11e7-8eb7-35cecc88e8a6.png)\n. @zlandau2, Sorry for my poor English. What do you mean figure for a fix?. Not yet, I tried implementingshouldComponentUpdate(), but not work as well. I also got the error and fixed it.javascript\n// it is important to load reducers AFTER actions.create (so no import here)\nconst reducers = require('./reducers').default;\n```\nYou should make sure your implementation import the reducer by correct order. When I changed the above line of code to  the correct place, and it worked.. @ssomnoremac I compared our code, and found that changing your store resolves the problem.\n\njavascript\n// Your code\nconst store = compose(applyMiddleware(...middlewares))(createStore)(reducers);\n// My code\nconst store = createStore(\n  reducers,\n  compose(\n    applyMiddleware(...middlewares)\n  )\n);. ",
    "SSTPIERRE2": "@Frexuz This is an issue I'm wrestling with now as well. All I want is to use something like a package icon for the navigation buttons, rather than an image or text.\nIt seems we have to re-implement the on-touch functionality (most likely routing) ourselves for each scene (i.e. onRight/onLeft doesn't do anything if you choose to use renderBackButton or renderRightButton).. When you say v3 is obsolete now, do you mean that community built features like the fade animation no longer work/apply to v4?\nWith the latest version applying the prop \"animation='fade'\" doesn't work for me/my team.. Now in V4 it seems that styling the nav bar away from its original position results in a black, empty space where it originally was. See screenshot here: https://www.dropbox.com/s/zxccng7az8szo4e/Screenshot%202017-12-01%2009.12.45.png?dl=0. @aksonov is this intended?. Has no one else noticed this?. Okay thanks!. ",
    "kallayyash": "\nheaderTintColor=\"#000\"\n\nits worked me too. > But backTitle sets the text, right?\n\nEDIT\nWhen I set the backTitle, it works, but text becomes blue:\n\n\nuse : headerTintColor=\"black\". use : headerTintColor=\"black\". navBarButtonColor={'#96c41c'}                 use this image button color. ",
    "agumack": "I test on IOS and android. Transitions slow :(\n. ",
    "heat": "react native 0.28 rename the experimental Navigator name, so is RNRF already adapt that ?\n. I have some trouble with Actions.pop() when switch tabs while modal is open.\nIs there a action to close modal or what @charpeni is the best way \n. I'll try stack it again before pop.  Actions.modalApp(); Actions.pop()\n. ",
    "srdjan-kolosek": "@sarovin Have you maybe solved the transition problem on android somehow?\n. ",
    "tquiroga": "Same problem.\nIt's still happening to me 2 years later with RN 0.56 and RNRF@4.0.0-beta.27.. Use <Modal hideNavBar> because <Modal> is gonna add its own navbar so you end up having two with the one from your root scene.. ",
    "praveenperera": "Yes I tried it, but it seems to call the action twice. So if I pass it with 'push' you can see the stack animation for push and then it replaces it. I will try again and post a GIF. Thanks\nEdit: I tried again passing Action.index(), the action is only called once with a type of 'replace'. However calling Action.index({type: 'push'}) calls the action twice, once with type 'push' and again with type 'focus'. Screenshots below\nWith 'push': http://i.imgur.com/CF2zRfY.png\nWithout 'push': http://i.imgur.com/DsWM0zR.png\nEdit 2: Sorry we could probably close this issue, this was caused because I am using the same key to render different components. This was done because we needed dynamic routes. In the above picture the navType: increment is used to dynamically render the scene but the same Action.index() is used.\n. ",
    "manishk-sdei": "\nmy router is working but i want it come from second page home but when i added code for this its shows error\nhere my router code:\nimport React, { Component } from 'react';\nimport { AppRegistry, StyleSheet, Text, View, Image, TextInput, Button, Navigator, TouchableOpacity} from 'react-native';\nimport { Router, Route, Schema, Actions, Scene} from 'react-native-router-flux';\nimport login from './main/login';\nimport home from './main/home';\nimport flexcontent from './main/flexcontent';\nimport SideDrawer from './main/SideDrawer';\nimport Screen1 from './main/Screen1';\nimport Screen2 from './main/Screen2';\nexport default class AwesomeProject extends Component {\nrenderMenuButton = () => {\n        return (\n             this.drawer.open()}\n            >\n                \n        </TouchableOpacity>\n    )\n};\n\nrenderBackButton = () => {\n    return (\n        <TouchableOpacity\n            style={styles.leftButtonContainer}\n            onPress={Actions.pop}\n        >\n            <Image\n                source={require('./main/images/back.png')}\n                style={{height: 24, width: 24}}\n            />\n        </TouchableOpacity>\n    )\n};\n\nrender() {\n    return (\n    \n    <Schema\n     name='boot'\n     sceneConfig={Navigator.SceneConfigs.FloatFromRight}\n     hideNavBar\n     type='replace' // When type='replace' is existing Actions.pop never work\n    />\n\n    <Route name='Login' key='login' component={login} schema='boot' initial title=\"Welcome\" />\n\n\n    <Route name='Drawer' hideNavBar type='reset'>\n        <SideDrawer ref={c => { c ? this.drawer = c.drawer : this.drawer }}>\n         {\n          /*Nested Routes are used for to manage the navbar cases (Route[Home] \\ Router \\ Route[Home_] )\n          React-Native-Reouter-Flux actions use the route names.*/\n         }\n\n          <Router name='drawerRoot'\n           sceneStyle={styles.routerScene}\n           navigationBarStyle={styles.navBar}\n           titleStyle={styles.navTitle}\n          >\n           <Schema\n            name='home'\n            sceneConfig={Navigator.SceneConfigs.FloatFromRight}\n            hideNavBar={false}\n            renderLeftButton={this.renderMenuButton}\n           />\n           <Schema\n            name='interior'\n            sceneConfig={Navigator.SceneConfigs.FloatFromRight}\n            hideNavBar={false}\n            renderLeftButton={this.renderBackButton}\n           />\n\n           <Route name='home' key='home' component={home} schema='home' title='Home' />\n           <Route name='Screen1' key='Screen1' component={Screen1} schema='interior' title='Screen1' />\n           <Route name='Screen2' key='Screen2' component={Screen2} schema='interior' title='Screen2' />\n\n  </Router>\n </SideDrawer>\n</Route>\n\n\n);\n\n}\n}\nconst styles = StyleSheet.create({\nleftButtonContainer: {\n    paddingLeft: 15,\n    paddingRight: 20,\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n},\n\n})\n. ",
    "teyou": "finally... i just bumped into this issue 30 mins ago after upgraded the npm package\n. so this PR will get bumped into version \"3.33.3\" ?\nLooking forward to try this :)\n. edited:\nhttps://github.com/facebook/react-native/pull/11445\nRN has officially deprecated this component :(\nto fix this, just remove below line from your code\nrenderScrollComponent={props => <RecyclerViewBackedScrollView {...props} />}\n\ntried rollback to 3.38.0 and also tried to upgrade from 0.43.4 to 0.44.\nStill throws me an error on RecyclerViewBackedScrollView\nrenderScrollComponent={props => <RecyclerViewBackedScrollView {...props} />}\n. ",
    "badaz": "For me, deleting the node_modules/react-native-router-flux/node_modules/react-native-experimental-navigation/node_modules/react folder completely did the trick.\n. As I said in my first message it's not working on Android, at least in 0.28, I'll try with a more recent version when I'm back from holidays. Anyway, when I wrap anything inside a runAfterInterractions the code is just never triggered. If you follow the link in the page you posted you'll see in the issues that someone is having the same pb with runAfterInterractions. After googling it I found someone who said it does not work in dev mode but works in release... well I don't really want to have to comment out every runAfterInterractions when I dev so I haven't tried it.\n. Yeah I imported it. Maybe a typo (like a missing 's' in InteractionsManager?) Maybe it comes from my code but I doubt it since my code works without it, I'll try in the boilerplate project when I'm back from holydays\n. @carleryd I found a not so elegant solution since then: now I'm using nextFrame https://github.com/corbt/next-frame which force renders a frame whenever you call it, so you can call it in loops that do heavy computing so as to not blocking the UI. Problem is it is async, complex and ugly if you do not use the async/await syntax so you have to rework your code in order to use it, and I don't really like having all those \"await nextFrame()\" bits in my code, but it is working for me so far.. I've got the same pb, what was your solution ? which view should have a containerStyle ?. OK, thanks, definitely not the problem I had. What my problem was is that when migrating from v3 to 4 I hadn't realized that: 1 - the way to connect the router to redux had changed, 2 - the actions sent by the router had changed too.. ",
    "Lukkub": "I'm trying currently to build app and have exactly the same Error.\n\n:app:processReleaseResources\nUnknown source file : /.../android/app/build/intermediates/res/merged/release/drawable-mdpi/node_modules_reactnativerouterflux_node_modules_reactnativeexperimentalnavigation_assets_backicon.png: error: Invalid filename.  Unable to add.\n:app:processReleaseResources FAILED\n\nI'm using:\n- react-native-router-flux v3.30.0\n- react-native v0.27.2\nI didn't use any previous versions and in general this is my first try to build an App with ReactNative so I can not compare this fail.\n. ",
    "asafratzon": "@rturk all 'npm start' does is it runs the React Packager, which is already taken care of by 'react-native run-android' in react-native 0.26.2 and 0.28.\nIn any case I just tried the whole setup again and still building the APK fails with the same error I mentioned.\n. @cridenour thanks for helping.\nIn fact I just now moved to MacBook Pro (which is awesome btw) so I can confirm that this issue doesn't occur on OSX.\nWhat you offer might help for those on Windows but wouldn't it require to modify also react-native-router-flux so it wouldn't keep cloning react-native-experimental-navigation?\n. @cridenour cool, thanks!\n. @cyphire I encountered the same issue, already reported in issue named \"APK building fails with 3.30.0 on windows\".\n. ",
    "Luckygirlllll": "I have the same error. deleting /android/app/build didn't help . @aksonov Okay, and how to do that in version 4? Or this code should work on version 4? . ",
    "yutingjin": "i met the same situation of this method, i cannot dispatch action or update state, due to it is only a static method of component...\n. ",
    "AlexeyToksarov": "@willmcclellan @yutingjin  I'm not sure whether this is a correct solution, but you could pass necessary props with Actions.refresh method:\n```\nstatic renderNavigationBar(props) {\n  props.propName\n}\ncomponentWillMount() {\n  Actions.refresh({propName: this.propName});\n}\n```\n. ",
    "trongan": "Hi,\nLet's assign YourComponent.renderNavigationBar = NavigationBarComponent bellow your component class. It work ok.. ",
    "Roconda": "I agree to @nemosdo. I think your react-native-router-flux version is too new for RN 0.25.1\n. ",
    "masterkrang": "@AshokICreate same problem here. started yesterday.\nRN 0.25.1\nI'm trying to upgrade to RN 0.28 will let you know how it goes\n. @wrozka @aksonov confirmed this fixes frozen ScrollView for me\n\"react-native-router-flux\": \"github:wrozka/react-native-router-flux#e944fbf39197e2f56ff8dbf86eff6a6f83ae29b7\", \n\ud83c\udf89 \n. ",
    "whitmanc": "@AshokICreate I haven't tried upgrading react-native, but I am using RN 0.25.1 and using react-native-router-flux 3.30.0 fixes it for me\n. @cridenour @aksonov How can we find RN version compatibility in this project? I feel like this problem is related to the fact that compatibility isn't clear. I tried looking in the package.json, but that doesn't show RN 0.28.0: https://github.com/aksonov/react-native-router-flux/blob/master/package.json#L66\nExcuse if the answer is obvious, still becoming versed in npm\n. @cridenour tx for the reply & got it. Keep up the good work!\n. ",
    "AshokICreate": "@nemosdo @Roconda yes you both are right it is \"version\": \"3.30.2\". i ll update my RN to 0.28 and let you know.\n. ",
    "Cadiac": "+1 Having the same issue, but setting fontWeight: 'normal' as suggested by mrnahidtalukder solved the issue for now.\n. ",
    "bsy": "seems that calling the Action like so:\n<Icon.Button name=\"users\" backgroundColor=\"#FFCC33\" onPress={() => Actions.invite({...this.props})}>\nwas the cause.\nWhen I remove the params then Actions.invite renders as intended.  @aksonov mind explaining why this is? \n. import {BackAndroid} from 'react-native'\nthen in your component...\ncomponentWillMount() {\n    // Disable back button by just returning true instead of Action.pop()\n    BackAndroid.addEventListener('hardwareBackPress', () => {return true});\n}\n. +1\n. ",
    "cyphire": "Closing issue for asafratzon having same issue, please follow the thread above for this current issue...\n. I'll do that when I get back to my computer.  Most all the code I'd\nsuperfluous to the problem, I deleted almost all of it with same result, I\nshould have sent that in instead.  I've probably spent more time on this\nrouter than any other in my program.  The examples are almost non existent,\nstop short of really explaining how to do something.. It's been a tough\nclimb.  If I understood it better I'd help with the documentation.I think\nwith clear examples and a better documentations this would be much better...\nOn Jun 30, 2016 12:57 PM, \"Chris Ridenour\" notifications@github.com wrote:\nHm, there's a lot going on in your example code. Are you able to produce\nthis in the actual RNRF Example app with leftButtonImage and\nrightButtonImage as the only changes?\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/aksonov/react-native-router-flux/issues/880#issuecomment-229737816,\nor mute the thread\nhttps://github.com/notifications/unsubscribe/AAUnhkdTgTNcys5hnCUYJMjLYQvOb2_Wks5qRAMIgaJpZM4JBOO7\n.\n. Sounds like a plan! 6 weeks ago I could barely write JavaScript, as of\ntoday I've written a fairly complex app and I love react native.\nOn Jun 30, 2016 1:09 PM, \"Chris Ridenour\" notifications@github.com wrote:\n\nUnfortunately using react-native Navigation or NavigationExperimental is\neven more intense IMO. When you think about a mobile app, the UX and flow\nare some of the most important pieces, and one developers expect to be\ncompletely customizable.\nHopefully we can get to the bottom of this, and after you're more\ncomfortable, we'd love the help with documentation!\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/aksonov/react-native-router-flux/issues/880#issuecomment-229741852,\nor mute the thread\nhttps://github.com/notifications/unsubscribe/AAUnhsg7uNQSRVx6RXiSCUvg80K-lwnkks5qRAZRgaJpZM4JBOO7\n.\n. I'm going to close this issue.  With no changes to the code, and just creating an assembleRelease and and installRelease then putting it on an actual device, the error goes away.  Now building with debug in local env. it looks good again.  It is strange that rebuilds sometimes make the problem go away, but it works now!\n\nThanks cridenour!\n. ",
    "believer": "@zelphir How did you go about this? I'm trying to get a transparent background as well, but can't seem to get it. I've managed getting my Scene like a modal but not the transparent part. Please share! \ud83d\ude04 \n. ",
    "Daniellt1": "Same issue.\n@zelphir, please share your code.\n@believer, have you solved that?\n. Hi,\nI have exactly the same code as @brien-crean, but I am getting this kind of error: screenshot.\nWhat I am doing wrong?\nThanks,\nDaniel\n. ",
    "tioback": "@believer and @Daniellt1 , as @zelphir mentioned, just follow the Example\n. ",
    "bpolonia": "I figured it out.\nI'm returning an <Image /> from a function and then just calling that function inside of the title attribute.\n. ",
    "ofermalbin": "look issue #634\n. ",
    "andyschwob": "thanks, my fault i should have linked it\n. I agree that direction is not a suitable name, I'll change it to support both.  Good idea with the type checking to call the function, I'll try to add that in too.\n. @aksonov @joenoon \nupdated DefaultRenderer and docs to include a couple changes:\n- You can now pass in animation=\"fade\" to fade into the next scene.  If a direction is also specified, the direction will take precedence over the fade, if none are specified it defaults to horizontal.\n- You can instead pass your own interpolation function into the scene with animationStyle like: animationStyle={customInterpolationFunction}\n. during the npm install process this is where it's getting installed:\n\u2514\u2500\u2500 react-native-experimental-navigation@0.26.1 (clamp@1.0.1, react@15.2.0, react-addons-pure-render-mixin@15.2.0, fbjs@0.8.3, babel-plugin-syntax-flow@6.8.0, babel-plugin-transform-flow-strip-types@6.8.0, babel-cli@6.10.1, babel-preset-react-native@1.9.0)\n. we can close this, i updated to a newer version of node and did a npm clean and project clean and it's working now.  thanks @rturk \n. ",
    "zsawaf": "Thanks a lot! \nActions.menus() wasn't working, but wrapping it in a function works. Thanks a lot! \n. Yeah, tbh I couldn't get drawer working with the flux navigation. \nI just left it out for now until there's better integration :) \n. ",
    "kristikristo": "I'm having the same issue, the NavBar is not being displayed when using DefaultRenderer.\n. ",
    "mnfgul": "Hi, I have the same issue. The only way that i could overcome is to move  to the top of the scene tree. When drawer scene has any parent scene, the rooting even did not work for me.\n. ",
    "chrisjowen": "+1\n. ",
    "drdeath113": "I was used this method \n<Drawer\n        ref=\"navigation\"\n        open={navigationState.open}\n        onOpen={()=>Actions.refresh({key:navigationState.key, open: true})}\n        onClose={()=>Actions.refresh({key:navigationState.key, open: false})}\n        type=\"displace\"\n        content={<DrawerContent />}\n        tapToClose={true}\n        openDrawerOffset={0.2}\n        panCloseMask={0.2}\n        negotiatePan={true}\n        tweenHandler={(ratio) => ({\n          main: { opacity:Math.max(0.54,1-ratio) }\n        })}>\n<Router>\n  <Scene component ... />\n  <Scene component ... />\n</Router>\n</Drawer>\nit working for me but all scene has drawer\n. ",
    "alfredoreduarte": "I had to use an intermediate scene between drawer and content, as @ronyv89 pointed out.\nIt seems unreasonable, though. Anyway, this should be clarified in the docs.\n<Scene \n    key=\"drawer\" \n    component={DrawerMenu} \n    open={false}\n    >\n    <Scene key=\"extraSceneForNoReason\">\n        <Scene key=\"home\" \n            component={Home}\n            title=\"Title\"\n            renderLeftButton={HamburguerButton}\n            initial={true}\n            titleStyle={styles.navBarTitle}\n            navigationBarStyle={styles.navBar}\n            />\n    </Scene>\n</Scene>\n. ",
    "jiyinyiyong": "You mean <Router> has to be the root component?\n. index.android.js? https://github.com/ElemeFE/template-redux-rn/blob/master/index.android.js\nI don't understand...\n. Oh, no, initial router is still not rendered in Android after moving Router to Provider.\n. ",
    "winkey728": "I think this bug can be solved by dbfb34fe1d27ff1bb5acd37497102421d07aee1b.\n. @cridenour Yes, I'm sure.\nTo fix the issue, just provide your own animationStyle function to scene tab2_1. Like:\n```\n// NavigationCardStackStyleInterpolator.js\nfunction forInitial(props) {\n  const {\n    navigationState,\n    scene,\n  } = props;\nconst focused = navigationState.index === scene.index;\n  const opacity = focused ? 1 : 0;\n  // If not focused, move the scene to the far away.\n  const translate = focused ? 0 : 1000000;\n  return {\n    opacity,\n    transform: [\n      { translateX: translate },\n      { translateY: translate },\n    ],\n  };\n}\nexport function forHorizontal(props) {\n  const {\n    layout,\n    position,\n    scene,\n  } = props;\nif (!layout.isMeasured) {\n    return forInitial(props);\n  }\nconst index = scene.index;\n  const inputRange = [index - 1, index, index + 1];\n  const width = layout.initWidth;\nconst opacity = position.interpolate({\n    inputRange,\n    outputRange: [1, 1, 0],  // Set the last value from 0.3 to 0.\n  });\nconst scale = position.interpolate({\n    inputRange,\n    outputRange: [1, 1, 0.95],\n  });\nconst translateY = 0;\n  const translateX = position.interpolate({\n    inputRange,\n    outputRange: [width, 0, -10],\n  });\nreturn {\n    opacity,\n    transform: [\n      { scale },\n      { translateX },\n      { translateY },\n    ],\n  };\n}\n\n// Example.js\nimport * as NavigationCardStackStyleInterpolator from './NavigationCardStackStyleInterpolator';\n......\n\n    ......\n    \n }\n            animationStyle={NavigationCardStackStyleInterpolator.forHorizontal}\n        />\n         alert('Left button!')}\n            backTitle=\"Left\"\n            duration={1}\n            panHandlers={null}\n        />\n    \n    .......\n\n```\nThe shadow occurs because of the last value of outputRange of opacity in NavigationCardStackStyleInterpolator.js is set to 0.3, just need to change it to 0 to make it transparent.\n. Same issue with type=\"replace\"\n. See 2fff2c9efd410bde2839c894f5e91f2f3b7ae8c6 this commit and #843 this discussion!\nNow the type string is prefixed to namespace them, so the type=\"reset\" now is type=\"REACT_NATIVE_ROUTER_FLUX_RESET\" and type=\"replace\" now is type=\"REACT_NATIVE_ROUTER_FLUX_REPLACE\"\n. ",
    "scriptfans": "@iWinkey thank you very much, this solved my problem:\nhttps://github.com/aksonov/react-native-router-flux/issues/1382\nI removed the scale return value, now the position remains the same. Can you explain the details of 'animationStyle' property? thanks again.\n. It looks like there's a change in position, not a change in height. how to solve this inconsistency? thanks.\n. @aksonov \n. @imarem https://github.com/aksonov/react-native-router-flux/issues/879. Where is the ExampleMobX demo project? I want to learn how to combo RNRF v4 and Mobx work together, thanks very much.. @aksonov Can you explain how to combo RNRF v4 with Mobx? I want to use it, but don't known how to start :(. + 1 for this..  @aksonov but I want to use left-right animation, It now always from bottom to top on android. this is my code:\n`\n\n    <Scene hideNavBar>\n\n      <Scene key=\"launch\" component={Launch} type='reset' initial />\n\n      <Scene key=\"login\" component={Login} type='reset' />\n\n      <Scene key=\"sign_up\" component={Registration} />\n\n      <Scene key=\"home\" component={Home} />\n    </Scene>\n  </Router>\n\n`. thanks for reply, there is no problem with iOS:\n\nI will test the demo code on Android, thanks.. @aksonov Demo code has the same problem on android:\n\nso is it a bug?. omg.. ",
    "joles86": "Same problem here, how did you fix it @tuckerchapin ?\n. ",
    "sham3k": "Calling Actions.ROUTE_KEY({ type: 'jump' }) from inside one of the tabs can switch tabs.\nSo maybe you need to pass the name of tab to switch to, as a prop to the initial tab page, and call Actions.ROUTE_KEY({ type: 'jump' }) from there.\nLet me know if thats what you need. :)\n. ",
    "lifehackett": "Original post updated with NavBar\n. Ok, so I went ahead and tried to use the provided prop interface supplied by RNRF and am getting the same result.  It doesn't seem to matter whether I remove tabs={ true } component={ ModerationTabs } or not.\nTo recap my question:\n1) Why is it necessary to redefine my navbar styles in the 3 scenes (Denied, Unmoderated, Approved) nested under the tabbar?  \nUPDATE: I'm guessing this line from the docs is the answer to this question though sort of seems odd.  The second question is the one that is holding me up.\n\nAll child scenes are wrapped into own navbar.\n\n2) Why in the scenes nested under the tab bar is the back button not rendering?  The issue seems to be that the navigationState is being reset to 0 when passed in to those scenes, but I don't understand why.\nHere is the updated navigation\n```\nexport default class App extends Component {\n  render() {\n    return (\n      \n\n\n\n\n\n\n ProjectSelectors.activeProject(store.getState()).name } sceneStyle={{ marginTop: NAV_BAR_HEIGHT }} panHandlers={ null } { ...navBarButtons }/>\n                 CollectionSelectors.activeCollection(store.getState()).name } panHandlers={ null } >\n                   CollectionSelectors.activeCollection(store.getState()).name } sceneStyle={{ marginTop: 100 }} { ...navBarButtons } { ...navBar }/>\n                   CollectionSelectors.activeCollection(store.getState()).name } sceneStyle={{ marginTop: 100 }} { ...navBarButtons } { ...navBar }/>\n                   CollectionSelectors.activeCollection(store.getState()).name } sceneStyle={{ marginTop: 100 }} { ...navBarButtons } { ...navBar }/>\n                \n\n CollectionSelectors.activeCollection(store.getState()).name } component={ ModerationDetail } panHandlers={ null }/>\n              \n        </Scene>\n      </Scene>\n    </Router>\n  </Provider>\n)\n\n}\n}\nconst navBar = {\n  navigationBarStyle: styles.container,\n  titleStyle: styles.title,\n}\nconst navBarButtons = {\n  renderBackButton(p) {\n    return (\n      \n\n 0 }>\n            \n\n\n\n    )\n  },\n  renderRightButton(p) {\n    return (\n      \n\n\n    )\n  },\n}\n```\n. Thank you for the responses.  Prior to upgrading RN and then RNRF my custom nav bar worked as I've described I would like it to work, so either it seems like a bug that it changed or there was a conscious decision to \"re-root\" navigation when tabs are introduced.\n@joenoon the {...navBar} in my third post was a refactored attempt to use the provided NavBar API as opposed to a custom NavBar (which is the first example I provided).  The {...navBar} is just destructuring the props (included it the snippet) to interact with the provided NavBar.\nIMO it would make sense that tabs occupy a place in the state stack similar to any other scene.  So in my case if you navigated projects > collections > moderation > filters then {index: 0 } = projects, { index: 1 } = collections, and { index: 2 } = moderation[denied, unmoderated, approved] and { index: 3 } = filters.  Clicking a tab would replace the state at index 2 with the tab you selected.  As you navigate the tabs it does not add and index, but replaces the existing one.\n. @joenoon Sorry about that sort of being buried.  I was trying out the approach to see if it would work and didn't put enough effort into readability.  Admittedly, I don't have a great grasp on the RN navigation stuff yet so really appreciate your time and effort; the diagram is most helpful.\nI am heading out of town shortly, but will do this exercise Tuesday and if everything seems to check out will close this thread then it if you don't mind waiting until then.\n. Is there a timeline to upgrade the fork that RNRF depends on?  I am experiencing a bug that in looking through the react-native@0.30.0-rc release notes it may address the issue.  Just want to evaluate my options.\n. The package.json indicates version 26 https://github.com/aksonov/react-native-router-flux/blob/master/package.json\nSo your app may work because the things you are using didn't break between 26 to 29, but others could be using things that changed and broke or in my case there seems to be a bug in 26 that is addressed in 30.\n. There is a difference between working with 0.29 and supporting 0.29.  This DOES work side by side with 0.29, but DOES NOT support 0.29 since the package.json still specifies 0.26\n. ",
    "rohitgoyal": "Has there been any solution to this? \nI am using a drawer and under that i have multiple scenes. I need back button even on the first scene of that drawer's child scenes.. @aksonov The back button just gets disappeared when i try to set backButtonTextStyle for a scene. The issue might be with using drawer.\n<Scene key=\"root\">\n        <Scene key=\"drawer\" drawer contentComponent={SideMenu}\n          drawerOpenRoute= 'DrawerOpen'\n          drawerCloseRoute= 'DrawerClose'\n          drawerToggleRoute= 'DrawerToggle'\n          hideNavBar={true}\n          drawerImage={require('../images/img1.jpg')}\n        >\n          <Scene key=\"main\" navTransparent={true}>\n            <Scene key=\"home\" component={Home} />\n            <Scene key=\"details\" component={Details} hideDrawerButton backButtonTextStyle={{color:'black'}} />\n          </Scene>\n        </Scene>\n      </Scene>\nBut with this the back button just gets disappeared instead of changing color to black. If i remove the backButtonTextStyle prop then back button is shown in blue color. Any ideas?. I got the same issue with this code\nexport default class Screens extends React.Component {\n  render() {\n    return <Router>\n      <Scene key=\"root\">\n        {/* <Scene key=\"register\" component={Register} title=\"Register\"/> */}\n        <Scene key=\"drawer\" drawer contentComponent={SideMenu} >\n          <Scene key=\"main\">\n            <Scene key=\"home\" component={Home} hideNavBar={true}/>\n          </Scene>\n        </Scene>\n      </Scene>\n    </Router>\n  }\n}. @aksonov Can you help?. @UrielShimony \nSo the home scene is the initial scene which is wrapped in a drawer so technically the drawer scene is the first scene. \nNow when i call Actions.help() it goes to the help scene but as you see in the pic my home scene creates another navigation bar in the process which gives the height bump on home scene. \n. So now i have understood the issue more clearly. \nSo I am keeping hideNavbar = true for the initial scene and hideNavBar=false for all the other scenes. \nnow it all works accept during the transition from initial scene to some other scene and vice versa. \nDuring the transition the navigation by default assumes to show the navBar and that is why there is bump in height as well. Because as soon as the transition gets completed initial scene hides the navBar. \nAnybody faced this as well?. Issue got resolved by putting headerMode={'screen'}\nClosing issue.. @aksonov Have any idea about this?. ",
    "satishmane": "Hi,\nCan you please share working example of custom navigation bar? Currently I am using drawer integrated with router-flux. And I want to add few more button on navigation bar. Hence I want to create custom navigation bar with drawer menu icon on left and other buttons on right side of bar. One of the button is refresh to reload same scene again\nthanks\nSatish. I have managed to get custom navigation bar and able to add custom button like 'Refresh' button. But when I try to call Actions., it does not refresh current scene. \nMy requirement is that on click refresh button, it should refresh current home scene. Any idea how to refresh current scene from custom navigation bar. Attached code\nsamplecode.txt\n. ",
    "kishanj918": "@cridenour thanks :+1: \n. ",
    "yashvmbd": "thanks a lot. it worked. :)\n. ",
    "YouYII": "\n$ npm uninstall react-native-router-flux --save\n$ flow --show-all-errors\nLaunching Flow server for /Users/zy/Workspaces/NovelDownloaderReader\nSpawned flow server (child pid=77538)\nLogs will go to /private/tmp/flow/zSUserszSzZyzSWorkspaceszSNovelDownloaderReader.log\nNo errors!\n. \n",
    "rh389": "This is because RNRF pulls in experimental navigation API as a separate package, (almost) duplicating many of the declarations contained in RN itself, and conflicting with others (justification: https://github.com/aksonov/react-native-router-flux/issues/786).\nUnfortunately the new package doesn't quite type check even when RN's own NavigationExperimental is ignored, partly because common declarations (eg ReactElement), and also the version of flow itself have changed in RN since the navigation stuff was copied out and frozen for RNRF.\nSo the only 'workaround' I've found so far is to have flow ignore the react-native-experimental-navigation package by adding \n.*/node_modules/react-native-experimental-navigation/.*\nto the [ignore] section of your .flowconfig.\n. ",
    "kennethlynne": "Just to be clear: I'm a newbie, or else I would send a PR \ud83d\udc4d \n. ",
    "sondremare": "Trying to use modals as the example code shows. And it crashes the entire app (on API level 19) when used with a view with https://github.com/FaridSafi/react-native-gifted-messenger\n. Ended up using a generator to create all my scenes, and added a default onEnter for all scenes.. Done @aksonov . ",
    "omeid": "I have the same problem. The hiding technique in ed28f7f  works but it breaks the Action.pop behaviour, at least for the first call after presenting the modal anyways.\n. One solution for this would be for Actions.ACTION_NAME to return a reference that can be passed on to Actions.pop($REF). Thoughts?\n. ",
    "flare216": "@brien-crean  , i try to hide the modal by Actions. statusModal({hide: true}) but failed, the render of StatusModal indeed returns an empty view, but the modal still on the screen, so weired.\n. 'targetIndex' worked for me! Thanks ! The docs makes me confused .\n. ",
    "danmatthews": "I'm still completely confused by modals with this Router.\nThe detailed example in the documentation shows modals acting like the Modal component of React Native - this is what i want. When i call Actions.login to open my login screen, i want it to pop up over the content of the current page - this means i can check if a user is authenticated, and if not, pop up the login screen to authenticate them in situ.\nIs this possible? It looks easy in the example, but i can't get modals to be anything more than a little chunk of <View> that just appears at the bottom of the screen when triggered.\nWhat am i missing? I would love to know so i can help contribute to the documentation.\n. @cridenour the detailed example shows it appearing using a slide-in-from-bottom animation, and i can't see anything in the example that effects that transition - therefore i assumed that it was part of the router?\nFair enough if it's working, but i think the example makes it seem like you can route to native-looking modals.\n. Beautiful, thank you :) i'll give that a try after i've walked the \ud83d\udc36 \n. ",
    "robinweston": "I had the same issues, but realised I was importing Modal from react-native instead of react-native-router-flux\n. ",
    "liamfd": "@robinweston that was the issue for me as well, thank you for posting that.\nI attempted to make a PR to update the docs to be a bit more informative, not sure if I did it right but I didn't seem to have permission. I suggested that the first code block in the modal example be changed to the following:\n``` jsx\nimport React, { Component } from 'react';\nimport { Text, View, TouchableHighlight } from 'react-native';\nimport {\n  Actions,\n  Router,\n  Scene,\n  Modal // Note that this needs to be our implementation of modal, not React-Native's\n} from 'react-native-router-flux';\nimport StatusModal from './components/StatusModal'\nexport default class App extends Component {\n  render() {\n    return (\n      \n\n\n\n\n\n\n\n\n    );\n  }\n}\nclass Screen1 extends Component {\n  render() {\n    return (\n      \n Actions.statusModal({error: \"Network failed...\", hide: false})}>This is Screen1!\n\n    )\n  }\n}\nclass Screen2 extends Component {\n  render() {\n    return (\n      \n Actions.statusModal({error: \"Network failed...\", hide: false})}>This is Screen2!\n\n    )\n  }\n}\n```\nThat file should be good for a user to copy paste, as long as StatusModal is present and valid. If that is too verbose I think even something as simple as the following would be a big improvement, because I didn't know that this project had a Modal component until I got to this thread.\n``` jsx\nimport { Modal } from 'react-native-router-flux';\nimport StatusModal from './components/StatusModal'\nexport default class App extends Component {\n  render() {\n    return (\n      \n\n\n\n\n\n\n\n\n    );\n  }\n}\n```\nBy the way, I couldn't find the styles that are referenced in the StatusModal component, it might be nice to either remove the references to them or define them in the example, as right now it crashes.\n. ",
    "DiegoGallegos4": "@sibelius Did you find a way to style a transparent background?. Do it like this: \ndrawerImage={{uri: 'menu', height: 20, width: 20, resizeMode:'stretch', color: 'white'}}\nor in your case probably this works : \ndrawerImage={{source: require('../../path'), height: 20, width: 20, resizeMode:'stretch', color: 'white'}}. Expanded image on photoshop. An example to create a navigationBar component should be added.\n. You should pass to the scene the drawerImage prop:\ndrawerImage={{uri: ''}}. Hi, contentModal should be wrapped inside drawer as well. \n. @jeannei I used react-modalbox(or any other modal) and redux. I did not find any other way and I think there is no other way to do it feasibly. You would like to have a flag in the state (e.g modalState) and whenever you click to open the modal you would dispatch an action to change the state.  . ",
    "ryancoughlin": "Is the goal of this modal to be treated like a native modal respective to the device it's running on? I can't seem to get anything more than a view talking up 50% of it's container view. Is that accurate out of the box functionality?\n@danmatthews Were you able to get past that?. >If the view is showing up then the router is doing its job, and that view just needs styling. Position absolute, top, left, right, bottom all at 0.\n@cridenour If that applies styling, could that be proposed to default functionality since that is how modals behave natively? Including a navigation bar.. Oh great, that was super helpful. Seemed like the trick was nesting it within another scene. \nSent from my iPhone\n\nOn Mar 3, 2017, at 5:57 PM, Chris Ridenour notifications@github.com wrote:\n@ryancoughlin That suggestion was for their particular case. If you check out the Example app, the modal example (Login) does not require such styling.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n. I am having the same issue. I can't seem to get it to open up as expected including the navigation bar.. @redbaron76 This is perfect! What's the role of passing index here:\n\nconst index = scene.index\n    const inputRange = [index - 1, index, index + 1]. @casoetan Agreed, I have seen a few interactions that work similar to that and feel very natural. I like the swiping down to dismiss, but maybe add an event on the navigationBar or change the threshold of the responder that listens to the dismiss event.. @Ivykp Were you ever able to get a navigation bar to present with your modal? I am in the same boat here.. Also looking for some examples of this. Docs highlight properties but don't support any examples on how to add in custom transitions.. @hector I am having a similar problem with popping modals. What was the error you noticed in the documentation?. @ahanriat Ok nice! Looking at doing this as well. Do you have a sample of how you were embedding this?. So the exit animation does not listen to the 1 second duration set on the scene?. I ran into the same issue on a few client projects. Option B would be great. I am currently doing Option A on projects that open as a modal with ScrollView. ",
    "laurentnguyen": "Same issue here :)\n. ",
    "ElvisChiang": "FYI,\nchange from \nJavaScript\nimport { Scene, Reducer, Router } from 'react-native-router-flux';\n<Scene key={deviceConfg} type=\"replace' >\n```\nto \n``` JavaScript\nimport { Scene, Reducer, Router } from 'react-native-router-flux';\nimport { PUSH_ACTION, REPLACE_ACTION } from 'react-native-router-flux/src/Actions';\n\n```\n. ",
    "Keksike": "I can't get this reproduced. Can you give me an example of your full component?\n. ",
    "vsrinivas150283": "I have the same issue when trying to change the drawerImage\n. Probably its not working in my case.. ",
    "susan-github": "I have a similar confusion as well, so how do you resolve this?\n. I think you can use Actions.refresh({ hideTabBar: true/false }) to resolve you problems,  when scroll up of the list view, set the value as false.  Setting true when scroll down.\nMaybe you need to do is to find a more appropriate method to get the rolling direction of the scroll bar.\n. If I don't want to upgrade it to v4, what can I do?. ",
    "zibs": "@susan-github nice catch -- this is working for me. thanks :D \n. Is it?. ",
    "nikolas7892": "You can easily do it through redux, just call the action creator on scroll and create a styling reducer.. \ud83d\udc4d . ",
    "K-Leon": "I noticed same thing and could isolate it, but i have no idea how to fix:\nNaviging from one tabbed  component to another tabbed or nested scene on same level like parent => No Left Button => Route Stack is 0 in NavBar Line 224\nNavigating from one tabbed  component to another Scene which is NOT nested but also on same level like parent => Back Button Visible => Stack Size 1 in NavBar Line 224 - Everything works like expected\nWorkaround:\nAdd RightButton with position absolute left:20 and Actions.pop() - this works like expected. So there should be a bug in active stack calculation of Back Button\n. it's nothing that's pressing immidiatly - router flux is using a fork. Even though i would love seeing the usage of RN Router Flux using the new Navigation Project from the inside.. fixed this - i hope. sorry for my bad english.\n. ",
    "carleryd": "I had the same experience @badasve \nI wanted to delay loading my camera component(react-native-camera) on Android.\nThe switch to the tab was much smoother, but in total I would say it took at least 50% longer to get the camera up and running, so something is a bit off unfortunately... I would also guess it has to do with react-native-router-flux since I'm not working with any animation in my camera component.. ",
    "charlesluo2014": "hi,@rturk \nthe case is,when some page dose not need to Authorization and others need,the normal way to Authorization is\n```\n if(isLogin()){\n    Actions.login();\n}else{\n    ....//render\n}\n```\nso it has many page,this code will appear many times.\nis That any way to make it configable?\n. this bug is in the Reducer.js,the old version is:\ncase ActionConst.JUMP:\n      assert(state.tabs, `Parent=${state.key} is not tab bar, jump action is not valid`);\n      ind = -1;\n      state.children.forEach((c, i) => { if (c.sceneKey === action.key) { ind = i; } });\n      assert(ind !== -1, `Cannot find route with key=${action.key} for parent=${state.key}`);\n      return { ...state, index: ind };\nand the new version:\n``\ncase ActionConst.JUMP:\n      assert(state.tabs,Parent=${state.key} is not tab bar, jump action is not valid`);\n      ind = -1;\n      children = getInitialState(props, scenes, ind, action);\n      children = Array.isArray(children) ? children : [children];\n      children.forEach((child, i) => {\n        if (child.sceneKey === action.key) ind = i;\n      });\n  assert(ind !== -1, `Cannot find route with key=${action.key} for parent=${state.key}`);\n\n  if (action.unmountScenes) {\n    resetHistoryStack(state.children[ind]);\n  }\n  return { ...state, index: ind, children };\n\n```\n. ",
    "gregorpilz": "i get 'Check the render method of Router' on 0.29\n. hi guys i have forget to update the package.json :)\nthx\n. ",
    "luhui": "Got native module cannot be null error with 0.29 on iOS,  same code works with 0.27.2, any ideals?\n. Hi @charpeni \nHave you fix this issue?\nI just replace the animation style of left/right with translationX, and it works fine.\n@aksonov, is this a correct workaround? I am not clearly that you set both left & right style at the same time.  Left style only works fine on iOS, for some compatible maybe?\n<Animated.Text\n          lineBreakMode=\"tail\"\n          numberOfLines={1}\n          {...this.props.titleProps}\n          style={[\n            styles.title,\n            this.props.titleStyle,\n            this.props.navigationState.titleStyle,\n            childState.titleStyle,\n            {\n              opacity: this.props.position.interpolate({\n                inputRange: [index - 1, index, index + 1],\n                outputRange: [0, this.props.titleOpacity, 0],\n              }),\n            transform: [{\n                translateX: this.props.position.interpolate({\n                    inputRange: [index - 1, index + 1],\n                    outputRange: [200, -200]\n                })\n            }]\n            },\n          ]}\n        >\n. ",
    "GantMan": "this is working for me in 0.29, is this ticket still live?\n. agreeing with @jhabdas -  For us to promote this library in source code is one thing.  Having to ship a full license with every app we use it on, is a pain.  Let's get a license change on this.  I think their intention was credit where credit is due.  But not to \"Nascar\" every app that uses it.\n. competing libraries are MIT licensed.\n. I think this is what you want:\nhttps://github.com/aksonov/react-native-router-flux/blob/master/docs/OTHER_INFO.md#tabbar\n. ",
    "kaenry": "need too.\n. ",
    "sithobog": "Hi!:P\nI have needed the same feature. So i did something:P\n I'm using 'loading' in state because in other way component will be rendered twice (because i have async action in componentWillMount).\nI have authentication by token, so if i have token in storage so user can be logged and MainVIew is initial scene. If i don't have token LoginView is initial scene.\nYou can use any condition to check if user 'logged in' or whatever you want. You can change ugly loading for some epic animation:D\n```\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      logged: false,\n      loading: true,\n    };\n  };\ncomponentWillMount(){\n    self = this;\n    AsyncStorage.getItem('token')\n    .then( (value) =>{\n        if (value != null){\n          this.setState({\n            logged: true,\n            loading: false,\n          });\n        } else{\n          this.setState({\n            loading: false,\n          })\n        }\n      }\n    );\n  };\nrender() {\n    if (this.state.loading) {\n      return Loading...;\n    }\n    return (\n      \n\n\n\n\n\n    )\n  }\n```\n. ",
    "Den368": "They have already fixed this issue. All you need to do is to provide the direction property because by default the direction is rightToLeft.\nimport { I18nManager } from 'react-native'\nlet directionSide = I18nManager.isRTL ? 'leftToRight' : null\n<Scene key='xXXXX' component={XXXXX} title='XXXXX' direction={directionSide}/>. ",
    "AntonNiklasson": "You should probably change your options from this:\nconst opts = {\n  key: 'settings',\n  title: 'More',\n  icon: { TabIcon }\n};\nto this:\nconst opts = {\n  key: 'settings',\n  title: 'More',\n  icon: TabIcon\n};\n. ",
    "conan52": "i have same issue. I use RN 0.30.0 and react-native-router-flux 3.30.6. When change screen tab component is not re-rendered?\nHow to fix it?\n. +1\n. ",
    "kaminskypavel": "using 3.35 same issue\n. +1\n. ",
    "imWildCat": "This is an issue of React Native, moved to: https://github.com/facebook/react-native/issues/8732\n. \nThanks for your respond. \nI added navigationBarStyle={styles.navigationBarStyle} for tabbar, but it seemed not working too.\n. ",
    "waqas19921": "Having same issue\n. No this problem lies with tabbar changing router sceneStyle changes the background of every scene.\n. You can pass props like this \nNavigationActions.pop( {refresh: {variable: value} })\nthis prop change will be found in \ncomponentWillReceivePropscallback in previous component\n. @aksonov  Please provide a better documentation for v4 as in example The components Lightbox, modal are used and there is no documentation about them and also many changes in props but have nothing documented.. @rgchua your solution done the trick\n. ",
    "ryanoboril": "Overriding getSceneStyle() worked for me.\n<Router\n    getSceneStyle={() => {\n        return {backgroundColor: sceneBackgroundColor};\n    }}>\n. It seems like stack navigation (push transitions) only work within tab container scenes;  if you call a scene from another tab \"stack\", it switches navigation context to that stack, upon which nothing has yet been pushed, so the back button goes back to the initial scene of that tab container scene (in your case, Projects).  However, it is still possible to reuse scene components if you copy them into different scenes that have unique key names, and you parameterize any scene transitions within the reused scene component as props (not shown here as it does not apply to this example).\nFor your example use case, try the following and see if you get your expected behavior:\n<Scene key=\"main\" tabs={true}>\n    <Scene key=\"search_wrapper\" title=\"Search\">\n         <Scene key=\"search\" component={Search}/>\n         <Scene key=\"project\" component={Project}/>\n    </Scene>\n    <Scene key=\"projects_wrapper\" title=\"My Projects\">\n         <Scene key=\"artefact\" component={Artefact}/>\n         <Scene key=\"collection\" component={ProjectCollection}/>\n         <Scene key=\"project2\" component={Project}/>\n         <Scene key=\"projects\" component={Projects} title=\"My Projects\" initial />\n    </Scene>\n</Scene>\n(NOTE: the original Project scene key was renamed to \"project2\" because the keys need to be unique, and I wanted to provide an example that satisfied the presented use case; in practice, you might want to call the project scene in the search_wrapper \"searchProject\" or similar).\n. ",
    "mklb": "For everyone still having the same issue in late 2018 with V4.\nIt happened to me when transitioning from a view with a navigation bar (and a navigationBarStyle obviously) to a scene which had hideNavBar={true}. Setting a navigationBarStyle with backgroundColor transparent for the scene without a nav bar solved it for me. . and animations are missing ..v3 looks better . ",
    "yaronlevi": "Hi, I've updated \"Steps to reproduce\". please ask me if you need more info.\nThanks \n. OK, I found the problem.\nThe problem is me being a total beginner in RN for not knowing to:\nTurn off DEV SETTINGS -> JS Dev Mode\nAfter turning it off everything is smooth and cool.\nSorry for bothering the contributors (-:\n. ",
    "hopglascock": "@yaronlevi did you turn off dev mode? react-native-scrollable-tab-view always stutters for me unless I turn that off\n. @MovingGifts \nOn android from the dev screen it's under DEV SETTINGS -> JS Dev Mode\nOn IOS you cannot change it on the device you can change the flag on this line in AppDelegate\nNSString *fullURL = [NSString stringWithFormat:@\"%@%@\", testURL, @\"index.ios.bundle?platform=ios&dev=true\"];\nwhen you do that you might get this problem https://github.com/facebook/react-native/issues/8663\nprobably not the best solution, but I don't know of a better one\n. ",
    "simontong": "I'm having same issue with one scene loading a bunch of  components. With or without debug mode on is the same staggering effect on the tabs.\n. ",
    "ruandao": "got the same problem on iOS\nwhen I turn on \"Debug JS Remotely\", the Actions.xxx() be in very slow\n. ",
    "kumarpatel": "@yaronlevi Could you share your implementation of react-native-scrollable-tab-view integrated with react-native-router-flux?. Same. I need to know as well.. Same. Need to know how this can be achieved.. +1. @cridenour How do you fire off events from a given Scene component that are defined within NarBar?. @cridenour not sure if I understand your approach.\nHow do you trigger a normal scene transition if you haven't called Actions.reset() yet?\nCould you provide an example?. Workaround:\nAdd this to your package.json\n\"react-native-experimental-navigation\": \"0.26.10\",\nProblem is with react-native-experimental-navigation@0.26.11\nCurrently this repo is set to use the latest version of react-native-experimental-navigation which is 0.26.11\n. @luco Given your routing structure:\n```\n  <Router>\n    <Scene key=\"root\" hideNavBar>\n\n      <Scene key=\"welcome\">\n        <Scene key=\"welcome1\" title=\"\" hideNavBar component={Welcome} />\n      </Scene>\n\n      <Scene key=\"tabbar\" tabBarPosition={'bottom'} tabs >\n\n        <Scene key=\"home\" type=\"reset\" {...sceneConfig}>\n          <Scene key=\"homeMain\" component={Home}/>\n        </Scene>\n\n      </Scene>\n    </Scene>\n\n  </Router>\n\n```\nHow did you reset the stack when navigating from\n1. welcome1 -> homeMain (presumably when logging in, \u00af_(\u30c4)/\u00af)\n2. homeMain -> welcome1 (presumably when logging out, \u00af_(\u30c4)/\u00af). ",
    "asrytis": "The lack of onEnter/onLeave support is very inconvenient. Say I need some data refreshed whenever user gets to the Home screen. I can't think of a better way than doing the following:\n```\ncomponentWillReceiveProps(nextProps) {\n    const scene = this.props.router.scene.key;\n    const nextScene = nextProps.router.scene.key;\nif (scene !== nextScene && nextScene === this.props.sceneKey) {\n    // This component is getting focused\n    this.props.refreshData();\n}\n\n}\n```\nThis is ugly and I don't want to see this code in every component that needs to act on something when the scene gets focused. Few solutions come to my mind neither of which I am happy with:\n1. capture & act upon router actions in custom middleware\n2. create a base class that will run the check and call componentDidFocus()\nAny thoughts on this anyone?\nEdit: I'm using Redux\n. @cridenour I do have reducers but those aren't meant for API calls. The way I'd do this in a web app is either use onEnter hook in a Route definition:\n<Route path=\"home\" component={Home} onEnter={doWhateverAPICallsINeed} />\nor leverage one of component lifecycle methods, such as\ncomponentWillMount() {\n    callWhateverApiINeed();\n}\nThe problem with react native router is I don't have neither of these options. Scenes never get unmounted and there is no alternative to onEnter other than performing the checks I posted above. I went with custom middleware for now but I'd love to hear how others tackle this issue.\n. ",
    "josh-deprogram": "@aksonov It would be a great feature if Scenes where destroyed (Unmounted) on scene change, even if this was not default but a Prop option. Having a lot of scenes constantly mounted also can easily hit performance issues once navigating round an app if you aren't careful with shouldComponentUpdate()\n. @parkerdan the focus method is not reliable if you have sub set Scene such as scenes within tabs, then it is the tab scene container that gets focused . The question I was asking is regarding a way to detect scene change on tab change\n. ",
    "monumentyusuf": "@afilp Because it fires two different object as you can see below;\nObject {key: \"AlbumsTab\", type: \"REACT_NATIVE_ROUTER_FLUX_JUMP\"}\nObject {scene: [Object], type: \"REACT_NATIVE_ROUTER_FLUX_FOCUS\"}\nYou have to check scene object first like;\nif(action.scene){\n  console.log(action.scene.name);\n}\nRNRF v3.37.0. ",
    "booboothefool": "I think this would help my performance issues: https://github.com/aksonov/react-native-router-flux/issues/1659\nUPDATE:\nHoly crap @josh-deprogram, thanks for the shouldComponentUpdate() tip. My app has a ton of tabs with long lists in each, and thanks to what you said, I just discovered that all previously mounted tabs are being re-rendered no matter which tab you go to. \nFor example, \n[Tab 1][Tab 2][Tab 3][ Tab 4][Tab 5][Tab 6]\n1) Go to Tab 4\n2) Go to Tab 2\n=> Tab 4 gets componentWillReceiveProps() and re-render()\nso that means if you:\n1) Go to Tab 1, 2, 3, 4, 5, 6\n2) Go to Tab 3\n=> Tab 1, 2, 4, 5, 6 gets componentWillReceiveProps() and re-render() !!!\nI think that would help explain why when you load all of the tabs in my app, it explodes? It's because when you click on a different tab... it re-renders all tabs that were previously mounted.\nI'm been stuck and unable to figure out these performance issues for months. Might just now have gotten somewhere.\n@afilp My app definitely has huge memory issues. Like tons of people on the Android Google Play store complain that it just eats their RAM and they have to uninstall. I think this may have to do with it...\n. +1 driving me nuts\nno console.logs, production mode, some InteractionManager/ partial rendering optimizations, still too slow \ud83d\ude22 . Hey @guimello. Tried what you said:\n<Scene key=\"discussionsTab\" icon={DiscussionsIcon}>\n                  <Scene key=\"listDiscussions\"\n                    initial={true}\n                    component={Discussions}\n                    title=\"DISCUSSIONS\"\n                  >\n                    <Scene key=\"first\" />\n                  </Scene>\n                  <Scene key=\"createDiscussion\"\n                    component={CreateDiscussion}\n                    title=\"CREATE DISCUSSION\"\n                  />\n                </Scene>\nlistDiscussions -> createDiscussion\nthen Actions.listDiscussions({ type: 'reset' })\nhowever running into the same issue where the reset only works once.\nAny advice?. @ethan605 your code works great!\nI am running into a small issue that seems pretty common. If a Scene has a horizontal ScrollView, the PanResponder will sometimes hijack it and end up doing the swipe to back gesture instead of scrolling the ScrollView.\nDoes anyone know of a way to disable the PanResponder on the current scene while a ScrollView is scrolling?. I'm seeing the same thing. Is it slow on iPhone 7 too? My scenes are super complicated with heavy images, so I was planning on doing some InteractionManager optimizations, but this just seems like a problem if it happens on the simple example.. @salincakli\nMoving some network requests to InteractionManager.runAfterInteractions seemed to help a bit, but not enough.\nAny more things I could try?\nI would also like to mention that this delay seems to happen BEFORE the transition. It's like you click a view to change scenes... 2.5 seconds later... THEN you see the transition. Driving me nuts!. @vnshgrg https://github.com/aksonov/react-native-router-flux/issues/1202. I updated my initial post with a picture to better illustrate what I'm talking about and what my app does. \n@miklschmidt I am using ListViews in most cases. In other cases where the number of items is smaller, like capped to 12 items, I am just doing a map on an array of objects.. ",
    "roots-ai": "\nPlease see the Example app here: https://github.com/aksonov/react-native-router-flux/blob/master/Example/Example.js#L56\nIf you're using redux, you can follow this guide: https://github.com/aksonov/react-native-router-flux/blob/master/docs/REDUX_FLUX.md\n\nLinks are broken.. Hi! Was this issue resolved? How did you finally made the custom slidable tabbar components?\n. The issue still occurs with the latest release! How to handle this?\n. ",
    "Jlexyc": "ComponentWrapper put new background for new scene, so transition effect (like changing only content) is not achieved.\nIdea is to leave the same image on the same place, but change scenes with transparent background in foreground. But i've got that old scene doesn't disappear. So maybe some solution how to make old scene disappear?. Got the same issue.. Did a fix in router-flux to avoid it. DefaultRenderer.js in \"RenderCard\" method reads animationStyle from the wrong scene.... @wachunei i'm using:\nlet panHandlers = selected.panHandlers;\nlet animationStyle = props.scene.navigationState.animationStyle\nBut there still an issue with transition. Like animation is called for both screens with different index. So i'm covering disappearing from old screen and appearing from new one.\nBut made it work in correct way. Animation of POP = reverse animation of PUSH for this screen.\nGot one more issue with panHandlers:\n<Scene getPanHandlers={myPan}>\n<Scene component={myComp1} />\n<Scene component={myComp2} panHandlers={Null}/>\n</Scene>\nHere myPan works everywhere... can't disable it on the rest scenes. Tried to write getPanHandlers for myComp1 only.. but in this case it doesn't work at all..\n. PR: 1618 . Router inside router important too. iOS has ContainerViewControllers as a base - and it's really useful.. I've got it using custom animationStyle function with opacity for old scene. But i've got issue with handling POP/PUSH animation.\nHave issue:\nSCENE1 -(vertical)-> SCENE2 -(horizontal)-> SCENE3\nSo if I set correct animation for VERTICAL - i'm getting it vertical even for POP from Scene 3 to Scene 2.. but there should be horizontal...\nSo i've got that Navigation calls Animation Function for Appeared Scene for both cases push/pop.\nBut logically for POP it should be called reverse animation for current Scene (not for the scene is going to appear)....\nChecked that type is always \"REACT_NATIVE_ROUTER_FLUX_PUSH\".. even for \"Back\" button.\n. ",
    "matAlmeida": "i'm having the same problem @Jlexyc . Did you figured out how to solve?. ",
    "davidyaha": "@maxdub I would like to implement fade transition on a tab the should hide the tab bar.\nHave, you found any solution to this?\nIf so, Could you share it here?\n. ",
    "francisbissonnette": "Why is this issue closed?\n. ",
    "mehcode": "@blackxored This library is built on ex-navigator which is built on Navigator. I've found that if you're doing anything network related or unnecessarily intensive you'll cause the animation to grind to a halt / stutter during the animation as it drops frames to keep up.\nThe solution is:\nInteractionManager.runAfterInteractions(() => {\n  // do stuff here\n})\nYou likely have code that is executing on componentDidMount or in a similar location.\n. ",
    "digitaldavenyc": "I have been experiencing the exact same issue as @blackxored. Animations on our project that animate from a tab view to another view experience a major lag in performance, it's even worse returning to the original tab view. I have made sure that no actions, reducers or other javascript is processing before triggering a RNRF Action animation but the performance hit still persists.\nThere are other elements in our application that use the React Native Animation package and they do not suffer from any performance issues. The problem seems to be contained to RNRF.\nI would be happy to provide any additional information to try and resolve this.\n. I may have solved this issue, sorta. Running RNRF in debug mode will cause major performance hits to Scene transitions, particularly when running on physical device. @blackxored Try running your app as a release and see if that fixes the issue.\n. @atlanteh I am doing something similar with a blank white screen but it's creating a flicker effect after loading rather quickly. How would you tie the AsyncStorage REHYDRATE action to the navigationController middleware RNRF?\n. +1 for this question\n. I have not found a solution to this. @aksonov do you have any recommendations?. Not being able to customize the NavBar would be a huge issue for our app. Our primary view has a search area that is designed in a way that requires a custom NavBar. Is this an optional experimental feature?\n. If it's not released it probably shouldn't be in the docs... no?\n. @danibal did you submit a PR for your fix?. I'm having a different issue, I followed the example almost exactly and getting this error:\n\nMy libraries are:\n\"redux\": \"3.6.0\",\n\"react-redux\": \"5.0.4\",\n\"react\": \"16.2.0\",\n\"react-native\": \"0.51.0\",\n\"react-native-router-flux\": \"^4.0.0-beta.24\",\ncontainers/main.js \n```\nconst ReduxRouter = connect((state) => ({ state: state.route }))(Router);\nimport reducers from '../reducers';\nlet _this;\nconst navigator = Actions.create(\n    \n\n\n\n\n\n)\nexport default class groovemaps extends Component {\n    render() {\n        return (\n            \n\n\n        );\n    }\n}\n```\nreducers/router.js\n```\nimport {Reducer, ActionConst, Actions} from 'react-native-router-flux'\nconst defaultReducer = Reducer();\nexport default (state, action) => {\n    console.log('Reducing action: ', action.type);\n    switch (action.type) {\n        case ActionConst.FOCUS:\n            console.log('FOCUS event fired with scene parameter: ', action.routeName);\n            return defaultReducer(state, action);\n    default:\n        return defaultReducer(state, action);\n}\n\n}\n```\nreducers/index.js\n```\nimport { combineReducers } from 'redux';\nimport router from './router';\nimport user from './user';\nimport settings from './settings';\nexport default combineReducers({\n  router,\n  user,\n  settings\n});\n``. @code-freakz I tried that and I still get the undefined property error onObject.getStateForAction`. @aksonov Are you sure the code sample will work with the latest on master?. @prudhvir3ddy I am sorry but I have had to deprecate our integration with RNRF and Redux. It's creating a fairly serious problem for us and may have to just engineer an undesirable solution.. @prudhvir3ddy We have spent a lot of time converting to RN 4.0 Beta, downgrading isn't really an option for us at this point.. @HemantRMali and @aksonov I'm on \n\"react\": \"16.2.0\",\n\"react-native\": \"0.53.0\",\n\"react-native-router-flux\": \"^4.0.0-beta.28\"\nAnd popTo is still broken. Trying to use it crashes navigation for the entire app.\nI'm calling it from a TabIcon. @aksonov lazy doesn't seem to be working for Scenes either, there's a duplicate issue open on it: https://github.com/aksonov/react-native-router-flux/issues/2846\nJust to be clear, this should work right?\n```\n<Stack key=\"messages\"\n    icon={MessagesTab}\n\n<Scene key=\"messages\"\n    title=\"Messages\"\n    component={Messages}\n    lazy={true}\n    initial={true}\n/>\n<Scene key=\"channel\"\n    component={Channel}\n    hideNavBar={true}\n    hideTabBar={true}\n/>\n\n\n``. Anyone else experiencing this? It's causing some serious performance problems for us. @Samesh I tried addinganimationEnabled={false}to a` and doesn't fix anything.... I'm getting so frustrated by this debating ripping out RNRF and just using React Navigation straight up. +1 for this issue\n\nIt's causing a major lag booting up the app since each tab screen handles a substantial amount of API calls for our app. When loaded one by one it's fine but when we load 6 tabs and their child components at once, it's a lot.. I think this issue is a dup of https://github.com/aksonov/react-native-router-flux/issues/2296. @qmegas can you post a code example?. @priyankverma duplicate of #2846. The repo is still in beta for a reason, every version seems to still have some issues. I would stick to earliest version possible. We're on beta.27. This saved me a bunch of time!. @nica0012 Did u ever figure out a fix for this. I'm having the same issue.. ",
    "andrycodestuffs": "Hi, I also had this problem and running the app as release fixed it.\nThanks @digitaldavenyc!\n. I don't know if I can ask this question here but...\nDo you know how to access the current scene key or title from flux router?\nI have created a Material Design Drawer and I have to retrive the current scene to trigger the 'active' state on a Drawer's section to highlight it\n. I didn't read the full documentation, I found out that there is navBar prop that gives you the ability to use a custom NavBar component.\nSorry, closing the issue\n. ",
    "bunea": "There's a bug when using TextInputs and ScrollViews to scroll to the inputs when the keyboard opens (facebook/react-native/pull/7876).\nWe have an auth flow that goes from a sign in scene to a sign up one and it crashes on iOS. Using replace to navigate to the scene unmounts the previous component and unsubscribes from keyboard events so it doesn't crash any more but there are no animations which is a bummer.\n. Thanks for the response.\nI understand why replace is implemented as it is. This was more of a\nquestion as I could not find too much documentation on transition\nanimations so I thought it was worth a shot.\nI've seen the merge regarding unmounting scenes in a switch component but\nI'd rather not change anything in the library itself to avoid conflicts on\nfuture updates.\nIn the mean time I've found a workaround by tracking router actions and\nstates but thanks for the clarification regarding replace behaviour.\nOn Wednesday, 20 July 2016, Chris Ridenour notifications@github.com wrote:\n\nYea unfortunately this is probably not something we'll add as the whole\nidea of replace is to change the component inline.\nThat said, if you need to force unmount the previous scenes, there was\nwork in #932\nhttps://github.com/aksonov/react-native-router-flux/pull/932 that\nshould interest you. Not sure if it will fix this particular workaround.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/aksonov/react-native-router-flux/issues/939#issuecomment-233974921,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ARWVizuW3igmWl51zYgzxhGBR-31W6VYks5qXjcPgaJpZM4JP4BN\n.\n. \n",
    "anton6": "@brien-crean \nHi, yes I was actually doing that already, but thanks anyway.\n. +1 , thanks for workaround. ",
    "CrashyBang": "@cridenour hmmmm I see okay I will keep digging and will post a solution here when I find one :).\n. After running through this tutorial: http://blog.tylerbuchea.com/renaming-a-react-native-project/\nI found the best way to handle this was to just remove the ios and android folders and run react-native upgrade\nCheers.\n. Shoot sorry, figured out it comes from this package, what would be the best way to disable this?\n. ",
    "jgkim": "@aksonov I guess it should be getSceneStyle={() => ({background:DEFAULT_BACKGROUND})}.\n@Shakarang I've spent several hours, and it turned out that getSceneStyle and sceneStyle are totally different. Their names can mislead.\n. I think RNRF does not depend on a specific React Native version since it uses a separated fork. It can be used with RN 0.26+.\n\nWhile ExperimentalNavigation API is not stable, RNRF uses separated fork of ExperimentalNavigation API to avoid dependency from React Native version. So 3.30 version of RNRF doesn't depend from React Native version, but from that fork (now it is based on 0.26 API). You could use this component with RN0.26+\n. \n",
    "ywongweb": "I am having the same problem.\nI needed a shared background across all scenes so I wrap the Router inside an Image. But I can see the last scene every time I change route. It looks as if the last scene was trying to fade away but got stucked at 0.3 opacity.\n```\nconst getSceneStyle = (props, computedProps) => ({\n  backgroundColor: 'transparent',\n  shadowColor: null,\n  shadowOffset: null,\n  shadowOpacity: null,\n  shadowRadius: null,\n});\nfunction Routes() {\n  return (\n    \n\n    \n  );\n}\nexport default connect()(Routes);\n``\n. @dcolin I ended up usingREPLACE` for all scene change instead. \n. @aksonov Thanks for the link, I will check it out.\nMy use case is that my app has a static background image that doesn't change or move when you navigate between screens. \nIn V3 this was achieved by wrapping the Router component with an Image and setting a transpararent background for every scene. Because the default visual effect for transition is to slide in the new scene while fading out the old one, having a duration means that we can see both scenes durings parts of the transition. \nIn the past I have tried using 'reset' as an alternative and it mostly worked, but I had to manually implement every scene's back behaviour, this can get out of hand very quickly.. ",
    "dcolin": "@ywongweb I have the same problem, did you find a solution to fade to zero opacity ?. @ywongweb I just wrote an animation.js who does horizontal/vertical interpolation, you just need to import it :\nimport animations from './animations';\nand change your animation style like this : \n<Scene animationStyle={animations.forHorizontal} />\nor <Scene animationStyle={animations.forVertical} />\n```\n// animation.js\nimport type  {\n  NavigationSceneRendererProps,\n} from 'NavigationTypeDefinition';\n/*\n * Render the initial style when the initial layout isn't measured yet.\n /\nfunction forInitial(props: NavigationSceneRendererProps): Object {\n  const {\n    navigationState,\n    scene,\n  } = props;\nconst focused = navigationState.index === scene.index;\n  const opacity = focused ? 1 : 0;\n  // If not focused, move the scene to the far away.\n  const translate = focused ? 0 : 1000000;\n  return {\n    opacity,\n    transform: [\n      { translateX: translate },\n      { translateY: translate },\n    ],\n  };\n}\nfunction forHorizontal(props: NavigationSceneRendererProps): Object {\n  const {\n    layout,\n    position,\n    scene,\n  } = props;\nif (!layout.isMeasured) {\n    return forInitial(props);\n  }\nconst index = scene.index;\n  const inputRange = [index - 1, index, index + 1];\n  const width = layout.initWidth;\nconst opacity = position.interpolate({\n    inputRange,\n    outputRange: [1, 1, 0],\n  });\nconst translateY = 0;\n  const translateX = position.interpolate({\n    inputRange,\n    outputRange: [width, 0, -width],\n  });\nreturn {\n    opacity,\n    transform: [\n      { translateX },\n      { translateY },\n    ],\n  };\n}\nfunction forVertical(props: NavigationSceneRendererProps): Object {\n  const {\n    layout,\n    position,\n    scene,\n  } = props;\nif (!layout.isMeasured) {\n    return forInitial(props);\n  }\nconst index = scene.index;\n  const inputRange = [index - 1, index, index + 1];\n  const height = layout.initHeight;\nconst opacity = position.interpolate({\n    inputRange,\n    outputRange: [1, 1, 0],\n  });\nconst translateX = 0;\n  const translateY = position.interpolate({\n    inputRange,\n    outputRange: [height, 0, -height],\n  });\nreturn {\n    opacity,\n    transform: [\n      { translateX },\n      { translateY },\n    ],\n  };\n}\nmodule.exports = {\n  forHorizontal,\n  forVertical,\n};\n``. I have the same problem, did someone find a solution to fade out opacity to zero?. Same problem, it works if you rollback to the previous version:yarn add react-native-router-flux@3.38.0`. If you start a new RN project, you must better use React Navigation. ",
    "herlon214": "Thanks @dcolin , I tried to apply this animation to all scenes mas didn't work.\n```javascript\nrender() {\n    return (\n      \n\n      <Scene key=\"splash\" component={Splashscreen} title=\"Splashscreen\"  hideNavBar initial={true} />\n      <Scene key=\"login\" component={LoginComponent} title=\"Login\"   />\n      <Scene key=\"dashboard\" component={DashboardComponent} title=\"Dashboard\"  hideNavBar />\n\n      <Scene key=\"messages\" component={Messages} title=\"Mensagens\" direction=\"vertical\" />\n      <Scene key=\"openMessage\" component={OpenMessage} title=\"Open Message\" />\n\n      <Scene key=\"favorites\" component={Favorites} title=\"Favoritos\" />\n\n      <Scene key=\"search\" component={Search} title=\"Search\" animationStyle={animations.forHorizontal} />\n      <Scene key=\"searchResult\" component={SearchResult} title=\"Search Result\" />\n      <Scene key=\"openPlace\" component={PlaceComponent} title=\"Login\"   />\n    </Scene>\n  </Router>\n);\n\n}\n```\nAny ideia?\n--------- edit\nI fixed this by moving the animationStyle={animations.forHorizontal} from the Scene to the Router. ",
    "richyzhu": "thanks for the prompt response!\nalso, is there any other way to pass in all my props? currently I'm passing them to the scene using getInitialState, but if my props changes, the scenes would not get the updated props. Im my case, if the list of images get updated, the scene would still render the old ones since i got those props on initialize.\n. ",
    "kanekotic": "so i dont know if you solved @richyzhu , but as also it was difficult for me to find the solution to this second question you had you have to pass {... this.props} to the router not to the scene\n<Router {...this.props} >\n     //your scenes ....\n</Router>\nidea got from #1062 \n. +1. so i manage to nake it work\n```js\nclass AppContainer extends Component {\n    render() {\n            return \n\n\n\n\n\n\n\n        }\n    }\nfunction mapDispatchToProps(dispatch){\n    return bindActionCreators(ActionCreators, dispatch)\n}\nexport default connect(() => {return {}}, mapDispatchToProps)(AppContainer)\n```\nThe behaviour is that Create is broken in v4 and also there is a problem in v4 doing RouterWithRedux because seem that extra level has also an issue with passing the props.\nhope they solve the issues soon.. I can try to do this. If its ok to wait till the weekend.. so there seems to be a problem with Actions.create or the binding with the scene (there must be a small change there from v3).\n```js\nclass AppContainer extends Component {\n    render() {\n            return \n\n\n\n\n\n\n\n        }\n    }\nfunction mapDispatchToProps(dispatch){\n    return bindActionCreators(ActionCreators, dispatch)\n}\nexport default connect(() => {return {}}, mapDispatchToProps)(AppContainer)\n```\nremoving create scenes and the connected router with redux worked for me, but i am still curious, on if this is by design and will it continue working on the future?\nis this somehow related to migration point 1? (No component support for scene containers (that contains children Scene) - you have to use custom navigators (navigator prop) and possibly contentComponent (scenes cannot have both 'component' and 'children')). ",
    "pr-rojan": "Hi @richyzhu \nDid you find answer to your second question?\nI am too struggling with that.\nThank you. ",
    "rbmedia": "hi sarovin, could you solve this?\n. ",
    "jacobcyl": "@enapupe Have you get the answer? I meet the same require as yours. Do you have some better solutions?. @enapupe well, I want to intercept loading scene to check authentication first. How do u\nsolve your problem. If I create a function to handle Actions like what you mentioned above, for example check if user logged in or not , if not jump to login scene. But if logged in and pop back to the prev scene how to remove the login scene in the navigate state?. @enapupe  I found your solution is perfectly ! It works.\n. relate to this topic #1717  let us talk about it.. @CoteViande  @coreyphillips  sorry, my fault, my question had update. I mean if I want to access main access I have to check if I logged in. If not it will switch to userAuth scene to login or signUp. Thanks for your answers.. Let`s talk about the navigation question.  #1717 . ",
    "arthuryeti": "What the status? Did you see the tabbar?\n. ",
    "johnpaulmanoza": "@Atu yeah. I found what is causing the problem and it is because I did not declare the class 'TabbarIcon' at the top of the 'scenes' declaration. I'm still kinda adjusting from compiled language to scripting language, so I forgot this basic thing.\n. ",
    "TheoGit": "Any fixes for this?  I didn't get this error until installing xCode 8 - that's when everything went bad\n. ",
    "jcollum": "This happened to me when I installed with Yarn but not with NPM. . Fixed with this workaround: https://github.com/facebook/react-native/issues/11094#issuecomment-263240420. ",
    "Antonhansel": "Same when using Yarn, works fine with npm. ",
    "gritzko": "Occurs randomly in my case, npm, Xcode 8.. ",
    "ndbroadbent": "@aksonov this is happening because your npm package accidentally includes it's own internal node_modules directory. I ran into this problem when I was trying to fork react-native-experimental-navigation and use my own version.\nCan you please setup the files directive in your package.json to only include the necessary files, and then push a new package to npm? Thanks!. @aksonov Sorry ignore me! The npm packages are fine, I think I was just running into a weird bug with yarn. You're right, you just need to remove node_modules and reinstall.. ",
    "vongohren": "I had this problem today, and I downgraded react-native-router-flux one version. Then it suddenly worked. But I believe that its not the router flux library that is the problem, but some NPM stuff. But you could try to downgrade that, or some random library to see if my thoughts are correct.. ",
    "clevertree": "To solve this problem I had to explicitly state the version\n    \"react-native-router-flux\": \"3.38.0\",\nIf you do:\n    \"react-native-router-flux\": \"^3.38.0\",\nThen the later version with the 127 phantomChildren libraries will be used instead and break building. Corporate sabotage? . @daviscabral I disagree. Plus I have evidence to show the package.json files of older versions of npm libraries may have been modified in such a way that they break continuous integrations like appcenter. You don't seem to be actually debating me, or you seem to be confused, so I suggest you ask me for clarification, if that's what you need. Bad attitude isn't going to help this current widespread problem. . @aksonov I posted a solution to an actual problem that has not been solved, even if the thread is closed. Instead of helping @daviscabral attack me, you could point me at an already open ticket which suggests this solution, as I have found none. If there is none, then I would suggest you leave my solution here, so that other people who found this problem and can't upgrade to @4 can use it. Is that not protocol?. @daviscabral if your \"not knowing what I'm doing\" insult was only meant as a joke, then that's fine. Hard to tell in text FYI. Also this matter happens to be the last straw for many in the RN network. I'll give you the evidence, since you asked. Not expecting much given aksonov's response.\n169packages.txt\npackage.json.txt\n$ npm install\n$ npm install react-native-router-flux@3.37.0 #fixes \n$ npm install react-native-router-flux@^3.37.0 #breaks again\n$ ls node_modules/react-native-router-flux/node_modules/\nEssentially 3.44.1 adds 169 packages including a 'react' folder which can break many automated continuous integration setups like appcenter. The solution I provided gets past this problem. \n. To solve this problem I had to explicitly state the version\n    \"react-native-router-flux\": \"3.38.0\",\nIf you do:\n    \"react-native-router-flux\": \"^3.38.0\",\nThen the later version with the 127 phantomChildren libraries will be used instead and break building. Corporate sabotage? . ",
    "EmrysMyrddin": "Ok, thank you for your answer. In fact, after a little thinking, I just have to make a component to do that... Sorry for the obvious question !\n. ",
    "new-xd": "Look at this https://github.com/facebook/react-native/issues/7814\n. ",
    "derdav3": "I just tried and it worked... can you run \"react-native run-ios\"?\n. ",
    "administerspice": "Tried react-native upgrade and react-native run-ios. Getting the same error. Trying out facebook/react-native#7814\n. Works now!\n- Added babel-preset-react-native to package.json\n- npm install\n- Using npm2, so I had to remove Example/node_modules/react-native-router-flux/node_modules/react-native-experimental-navigation/node_modules/react\n- react-native upgrade + react-native run-ios\n. Works now! Thanks!\n. Yes, that does render the custom button, but how can I attach drawer toggle action?\n. @aksonov Thanks! It works now!\n@berkayk \nIn Drawer component: \ncomponentDidMount() {\n    Actions.refresh({key: 'drawer', ref: this.refs.navigation});\n  }\nIn Button component:\nonPress={() => {Actions.get('drawer').ref.toggle()}}\n. Answered in #1078\n\nIn Drawer component: \ncomponentDidMount() {\n    Actions.refresh({key: 'drawer', ref: this.refs.navigation});\n  }\nIn Button component:\nonPress={() => {Actions.get('drawer').ref.toggle()}}\n. @danieladias I don't see anything wrong with your Drawer. \n\nCould be a react-native version issue. I'm using react-native 0.31.0 instead of 0.32.0. Maybe give that version a try?\nThese are all the changes I made:\nIn Drawer component: \n<Drawer ref=\"navigation\"></Drawer>\ncomponentDidMount() { Actions.refresh({key: 'drawer', ref: this.refs.navigation}); }\nIn MenuButton component:\nonPress={() => {Actions.get('drawer').ref.toggle()}}\nIn Scene:\n<Scene leftButton={Button}>\n. ",
    "sckoh": "have you found the answer? I'm trying to do the same thing\n. have you found the answer?\n. +1\n. ",
    "kristojorg": "FYI all of these scenes are wrapped in a Switch to determine which of traineeAccount and myAccount will be displayed. I don't know if that is influencing this, or if there is a better way to show/hide tabs based on some state...\n. I know @joenoon was working on something related to this. Maybe he has an idea of the problem I am facing?\n. Hi @joenoon thanks so much for the feedback here. Really appreciate it. \nI tried moving the Scene directly inside my top level Switch, but am still seeing the same behavior. I can push it into the stack from within a nested scene lower down, but calling Actions.pop() isn't triggering anything. \nIt would be helpful to debug this if I could see the actual navigation stack. I use Redux, is there a way to plug your reducer and implementation into my store so that I can see the state in my devtools / logger? \nThanks again! \n. @joenoon I found an issue that describes how to user createReducer to connect with Redux. Hopefully this will let me see the internal navigationState as it changes and debug this. Right now I just am subscribed to RNRF Actions, which is useful but doesn't allow me to see the actual navigationState.\nLet me know if you think of anything else that might be causing this. It's getting pretty tough to workaround! Thanks!\n. I just tried importing that Switch and it didn't seem to solve the issue. I can confirm that I'm seeing a BACK ACTION when I pop the route, but nothing else happens... :( \nFor reference, here is my entire router component. You will see I have started defining new scenes for the same screen in many places since clone isn't working for me. This is getting more and more complex, and the current scene I'm trying to clone is key=\"activity\" there near the top after the first switch. \n```\nconst RouterWithRedux = connect()(Router);\nclass Root extends React.Component {\nisLoggedIn(props) {\n    const token = props.me.get('token');\n    const myId = props.me.get('myId');\n    const gu = props.route.get('gu');\n    const guid = props.route.get('guid');\n    const rehydrated = props.route.get('rehydrated');\nif (!rehydrated) return 'splash';\n\nif (token && token !== '' && token !== constants.FETCHING) {\n  if (gu && guid && myId) {\n    return 'drawer';\n  }\n  return 'login';\n}\nreturn 'login';\n\n}\ntabSceneSelector(props) {\n    const myId = props.me.get('myId');\n    const gu = props.route.get('gu');\n    const guid = props.route.get('guid');\nif (gu === 'user') {\n  if (guid === myId) {\n    return 'myAccount';\n  }\n  if (!_.isNil(guid)) return 'traineeAccount';\n}\nif (gu === 'group') return 'groupAccount';\nreturn 'splash';\n\n}\nrender() {\n    return (\n      \n state.get('me').toJS())(Switch)}\n          component={connect(state => ({\n            route: state.get('router'),\n            me: state.get('me'),\n          }))(Switch)}\n          tabs\n          unmountScenes\n          type={ActionConst.REPLACE}\n          selector={props => this.isLoggedIn(props)}\n        >\n          \n      <Scene key=\"login\" component={Login} title=\"Login\" passProps hideNavBar />\n      <Scene key=\"splash\" component={Splash} title=\"Splash\" hideNavBar hideTabBar />\n      <Scene key=\"drawer\" component={Drawer} open={false} >\n        <Scene\n          key=\"tabSwitch\"\n          component={connect(state => ({\n            route: state.get('router'),\n            me: state.get('me'),\n          }))(Switch)}\n          tabs\n          unmountScenes\n          selector={props => this.tabSceneSelector(props)}\n          type={ActionConst.RESET}\n        >\n          <Scene\n            key=\"myAccount\"\n            tabs\n            hideNavBar\n            hideTabBar={false}\n            tabBarStyle={styles.tabBar}\n            tabBarIconContainerStyle={styles.tabBarIconStyle}\n            type={ActionConst.RESET}\n          >\n            <Scene key=\"dashboard\" component={Dashboard} tabTitle=\"Dashboard\" initial icon={TabIcon} hideNavBar hideTabBar={false} />\n            <Scene key=\"myStreamContainer\" tabTitle=\"Stream\" icon={TabIcon} hideNavBar hideTabBar={false}>\n              <Scene key=\"myStream\" component={Stream} hideNavBar hideTabBar={false} />\n              <Scene key=\"myComposer\" component={Composer} hideNavBar hideTabBar type={ActionConst.PUSH} />\n            </Scene>\n            <Scene key=\"myCalendarContainer\" tabTitle=\"Calendar\" icon={TabIcon} hideNavBar hideTabBar={false} >\n              <Scene key=\"myCalendar\" component={Calendar} hideNavBar hideTabBar={false} />\n              <Scene key=\"myActivity\" component={Activity} hideNavBar hideTabBar type={ActionConst.PUSH} />\n              <Scene key=\"actUserResponse\" component={UserResponseView} title=\"Response\" hideTabBar hideNavBar unmountScenes />\n            </Scene>\n            <Scene key=\"recorder\" tabTitle=\"Record\" icon={TabIcon} hideNavBar hideTabBar={false} >\n              <Scene key=\"activityChooserView\" component={ActivityChooserView} hideTabBar={false} initial hideNavBar />\n              <Scene key=\"recorderView\" component={Recorder} title=\"recorder\" hideTabBar hideNavBar unmountScenes />\n              <Scene key=\"userResponseView\" component={UserResponseView} title=\"Response\" hideTabBar hideNavBar unmountScenes />\n            </Scene>\n          </Scene>\n\n          <Scene\n            key=\"traineeAccount\"\n            tabs\n            hideNavBar\n            tabBarStyle={styles.tabBar}\n            tabBarIconContainerStyle={styles.tabBarIconStyle}\n            type={ActionConst.REPLACE}\n          >\n            <Scene key=\"traineeStreamContainer\" tabTitle=\"Stream\" icon={TabIcon} hideNavBar hideTabBar={false}>\n              <Scene key=\"traineeStream\" component={Stream} hideNavBar hideTabBar={false} type={ActionConst.PUSH} />\n              <Scene key=\"traineeComposer\" component={Composer} hideNavBar hideTabBar type={ActionConst.PUSH} />\n            </Scene>\n            <Scene key=\"traineeCalendar\" component={Calendar} tabTitle=\"Calendar\" icon={TabIcon} hideNavBar hideTabBar={false} />\n\n          </Scene>\n\n          <Scene\n            key=\"groupAccount\"\n            tabs\n            hideNavBar\n            tabBarStyle={styles.tabBar}\n            tabBarIconContainerStyle={styles.tabBarIconStyle}\n            type={ActionConst.REPLACE}\n          >\n            <Scene key=\"groupStreamContainer\" tabTitle=\"Stream\" icon={TabIcon} hideNavBar hideTabBar={false}>\n              <Scene key=\"groupStream\" component={Stream} hideNavBar hideTabBar={false} type={ActionConst.PUSH} />\n              <Scene key=\"groupComposer\" component={Composer} hideNavBar hideTabBar type={ActionConst.PUSH} />\n            </Scene>\n            <Scene key=\"groupCalendar\" component={Calendar} tabTitle=\"Calendar\" icon={TabIcon} hideNavBar hideTabBar={false} />\n          </Scene>\n\n        </Scene>\n      </Scene>\n    </Scene>\n  </RouterWithRedux>\n);\n\n}\n}\nfunction mapStateToProps(state) {\n  return {\n    // userName: selectors.getMyName(state),\n    route: selectors.getRoute(state),\n    myId: selectors.getMyId(state),\n  };\n}\nconst RootContainer = connect(\n  mapStateToProps,\n  // mapDispatchToProps\n)(Root);\nexport default Root;\n```\n. THANK YOU SO MUCH!! It worked! \nThis was really quite kind of you. I now see that the problem was not declaring it high enough... when I tried it at the root earlier it kept rendering initially - and obviously I should have added initial to my switcher. \nThanks for the advice on the type props. I have been sort of passively debugging performance problems and tried that in a few places but never took them out. My app gets very slow as you use it. I think it must have to do with my redux selectors being expensive, or with not unmounting scenes when they are navigated away from. My battle plan there is \n1. Memoize redux selectors.\n2. Add shouldComponentUpdate short-circuits to scenes\n3. Try adding requestAnimationFrames to delay js work until after animations (especially drawer open/close). \nIf you have any experience with performance and have any suggestions what to look at I would appreciate the advice! I tried getting react-addons-perf to work so I could measure selector cost but it didn't seem to do much. Anyways, just thought I'd ask if you have any experience there.\nThank you again, owe you one. \n. It seems I'm having a related issue now, however. Trying to push from one cloned scene to another cloned scene. The second scene renders according to my logs but is never actually displayed.... Any thoughts? I tried importing your Switch again but it wasn't that. Should I open a new issue?\n. I figured out my question regarding pushing a second cloned route. Thanks for your help with all this. \nI do have a question about cloning tabs however. In the snippet below, I would like to not have to redeclare the nested Scenes within the tabs, but I have to declare something inside of them so the tab knows what to render initially. \nYou can see in this snippet that I have one tab which is only displayed in the myAccount scene (the key=\"dashboard\" tab). In order to make this happen, I had to duplicate the Calendar and Stream tab scenes and their initial children. I can then push my cloned routes into those tabs, but I can't clone an entire tab because there is no way to define the initial scene for it. \n```\n\n\n\n\n ({\n      route: state.get('router'),\n      me: state.get('me'),\n    }))(Switch)}\n    tabs\n    initial\n    selector={properties => this.tabSceneSelector(properties)}\n\n<Scene key=\"myAccount\" tabs >\n  <Scene key=\"dashboard\" component={Dashboard} />\n  <Scene key=\"myStreamContainer\" icon={TabIcon} >\n    <Scene key=\"traineeStream\" component={Stream} />\n  </Scene>\n  <Scene key=\"myCalendarContainer\" component={Calendar} icon={TabIcon} >\n    <Scene key=\"myCalendar\" component={Calendar} />\n  </Scene>\n</Scene>\n\n<Scene key=\"traineeAccount\" tabs >\n  <Scene key=\"traineeStreamContainer\" icon={TabIcon} >\n    <Scene key=\"traineeStream\" component={Stream} />\n  </Scene>\n  <Scene key=\"traineeCalendarContainer\" component={Calendar} icon={TabIcon} >\n    <Scene key=\"traineeCalendar\" component={Calendar} />\n  </Scene>\n</Scene>\n\n\n\n```\nMy solution to this would be one of two approaches: \n1. A mechanism to show/hide tab scenes based on some redux state (instead of Switch, which requires me to redefine each tab scene for each case) \n2. A mechanism to declare cloned scene groups outside of the Root and then use them within Root... that would look something like: \n```\nconst ClonedStreamTab = (\n  \n\n\n);\nconst ClonedCalendarTab =(\n  \n\n\n);\n\n\n\n\n ({\n      route: state.get('router'),\n      me: state.get('me'),\n    }))(Switch)}\n    tabs\n    initial\n    selector={properties => this.tabSceneSelector(properties)}\n\n<Scene key=\"myAccount\" tabs >\n  <Scene key=\"dashboard\" component={Dashboard} />\n  <ClonedStreamTab />\n  <ClonedCalendarTab />\n</Scene>\n\n<Scene key=\"traineeAccount\" tabs >\n  <ClonedStreamTab />\n  <ClonedCalendarTab />\n</Scene>\n\n\n\n```\nAm curious to hear your thoughts about the best way to handle this type of logic/nesting. \n. ",
    "rclai": "Thanks.\n. ",
    "zoharlevin": "@cridenour can you explain how you would keep track of which scene is displayed on screen through the reducer?  for instance, in the example you linked to, the \"error\" modal would not dispatch a FOCUS action, only a PUSH.  i understand how to track the focused scene, but that doesn't necessarily indicate which scene is actually dispalyed.   What am I missing here?\n. +following\n. @jamielob \nI do call Actions.pop() explicitly and I don't get a FOCUS dispatched, so not sure why that changed anything in your case.\nfor my scenario in the reducer I ended up looking at the PUSH and BACK_ACTION which are dispatched for the modal and FOCUS for other scenes (but I look specifically at the Modal scenes according to key).  I don't think it's a very pretty solution, but it's the best I could come up with for my case.\nstill don't know if this is expected behavior though.. ",
    "bufke": "If using modals and drawers it's very difficult to find the current scene. I can't follow the logic of why sometimes the redux state (I used the example reducer) will contain no scene children at all or perhaps many scene children. Sometimes the children will contain sibling scenes. I can't find any way to accurately determine what scene the user is actually on.. ",
    "pbassut": "Just tried this for hours. \nThis is impossible using this library. Once you think you're getting the hang of it some different behavior while navigating for a few more seconds breaks your logic.\nArgh... . @y2k-shubham He means this one: https://github.com/aksonov/react-native-router-flux/blob/master/docs/v3/DETAILED_EXAMPLE.md. @filipemonteiroth That works. Thanks so much!\nCan't wait for the next release to have that bug fixed.. The problem with this approach though is that everytime you do npm i to install a new dep that node_modules will come back. . I mean, I could write a HOC to suit my needs but come on.. I'm using the passProps approach. Sorry I missed that in the docs.. npm install -g react-native-git-upgrade\nreact-native-git-upgrade\nDoes that solve it?\n. Also, if you're using master you should delete react-native-router-flux's node_modules/ . After every npm install. Unless you stop using the master branch. Yes.. Did you really remove the node_modules from RNRF and ran react-native run-ios/android again?. yes, please, @aksonov. How can we get the current scene? It doesn't have to be the easiest way, just a reliable way of getting the scene the user is looking at.. @blapi what about those that doesn't use redux to manage state? Or doesn't use redux at all. @jeroenbourgois Unfortunately is not that simple. \nI have a drawer, a modal and multiple push scenes.\nMultiple different actions are dispatched upon a single push for a reason I don't know. The most notable and frequent being a drawer's refresh. I could just ignore those, sure.\nSince multiple actions are dispatched and I don't know the order they will be dispatched in different cases, the solution you provided also won't work reliable. But, of course, I could filter out actions of the PUSH type, right? Yeah, sure. \nAlso not every action sends a key with it.\nI ended up coming up with a solution that uses a lot ifs. And here it is:\njavascript\nconst reducerCreate = params => {\n    const defaultReducer = new Reducer(params);\n    let onMatchDetails = false;\n    let onSwipe = false;\n    return (state, action) => {\n        const isDrawer = !!action.scene && action.scene.name == 'drawer';\n        if(action.type == ActionConst.PUSH){\n            onMatchDetails = action.key == \"matchDetails\" && !!action.notification;\n        }else if(onMatchDetails && action.type == ActionConst.BACK_ACTION){\n            onMatchDetails = false;\n        }\n        if(!isDrawer && action.type == ActionConst.FOCUS){\n            onSwipe = action.scene.sceneKey == 'swipe';\n        }\n        if(!onMatchDetails && onSwipe){\n            BackgroundWorker.start();\n        }else{\n            BackgroundWorker.stop();\n        }\n        return defaultReducer(state, action);\n    };\n};\nThe onMatchDetails is the modal, while the onSwipe is where I want to start a backgroundWorker. While on a scene that's not the onSwipe scene, I want to turn it off.\nThis works, but it's ugly.. @jeroenbourgois Oh, and not being tied to redux methodology at all is not entirely true, right. I see a reducer being defined right there.\nA simpler approach for me would be something like Actions.currentSceneKey or a method like Actions.is('myScene'). You're right. But isn't reducers specific to redux/flux?. Same issue. Upgrade to  3.39.1. You could try react-native-git-upgrade to upgrade react-native. That could help. There isn't other way no. It was a bug on the version you're using. And it was fixed on 3.39.0. ",
    "jingoldby": "For anyone who missed the one line where it says how to get the current scene under v4 changes... and ends up here\nActions.currentScene  is what you are looking for.. why would anyone literally ever want the tabs above the nav.... . Oh it's fine I just ended up hiding the nav and putting the nav component in my custom tabs component..... just needed sleep when I posted my last comment \ud83d\ude06 . Ah just also realized that replace is apparently broken.... :|   any work arounds?. @Blapi hey thanks for the heads up! I've downgraded to 0.27 but how do I properly pass props with a replace or refresh? \nActionskey  ?\n. ",
    "nguyenvanphuc2203": "onBackPress(){\n    if (Actions.currentScene == \"Home\") {\n      Alert.alert(\n          'Tho\u00e1t \u1ee9ng d\u1ee5ng',\n          'B\u1ea1n c\u00f3 mu\u1ed1n tho\u00e1t kh\u00f4ng?', [{\n              text: 'Cancel',\n              onPress: () => console.log('Cancel Pressed'),\n              style: 'cancel'\n          }, {\n              text: 'OK',\n              onPress: () => BackHandler.exitApp()\n          }, ], {\n              cancelable: false\n          }\n      )\n      return true;\n    }\n  }. my solution \npass props from drawer to {this.drawer.close() }/>\nand then, in Menupanel Component use this.props.closePanel() .\n<Drawer\n        type=\"overlay\"\n        side=\"right\"  \n        tapToClose={true}\n        openDrawerOffset={0.2}\n        ref={(ref) => this._drawer = ref}\n        content={<ControlPanel  closePanel={ ()=>{this.drawer.close() } />}\n        >\n        </Home>\n</Drawer>. @aksonov it work for me . @Schabaani can you share your params code. ",
    "paulopacitti": "I need a snippet version for v3 without redux :(. ",
    "jingpeng": "I want to use default wrapped navbar in tag , but I find the onRight function cannot update component's state with Actions.refresh(). Besides, I don't want use event/subscribe mechanism, so how can I update component's state?\n. Yes, it seems we can only use refresh to update the props and use componentWillReceiveProps to update state\n. Because I met a case that when clicking right button in NavBar, the internal component need to pop up a modal dialog, so I need to use 'refresh' method. @aksonov thanks for your explanation\n. When I use Actions.push, the left button will be replaced by back button\n. ",
    "sorenburon": "@aksonov What do you mean by \"But for most cases you may use navigationState instead of component's state with RNRF\", and how does it solve @jingpeng challenge?\nRight now I'm using redux for my app state, and when I need to show a dialog when pressing a button in the NavBar I have to update the app state, and then in componentWillReceiveProps check if I should show the dialog or not. Is there any smarter way of doing this, by using navigationState (or any smarter way in general?). Thanks in advance.\n. I'm experiencing the same on RN 0.29.0 and RNRF 3.34.0!\n. ",
    "NazariiStrohush": "@sarovin property top helped me, thanks\n. ",
    "mastermoo": "Hey I would really like to see more \"native\" transitions by default.\nI tried to animate the Push-Transition like in iOS, see below:\n\nThe scaling and opacity transitions are gone, only translateX stayed and the NavigationCard got a shadow which fades out on swipe-end.\nThere are still a few issues, however:\n- The Back Button stays in place (it should slide horizontally like the title of navbar)\n- Vertical Transitions triggers the same transition as the horizontal one, see below gif.\n\nAm I missing something with the vertical transitions?\nPS: Are PRs welcome to make the transitions feel more ios like? If so, I would like to contribute to the project.\n. ",
    "s4x": "@mastermoo Hi! Can you share your code for Push-Transition like in iOS?\n. ",
    "Dean177": "I cant believe there were two pull requests to fix one typo.\nI hope documentation I write isn't so heavily scrutinized.\n. Cant you use componentDidMount of the component you are navigating to?\nWhat are you actually trying to do?\n. There is a section in the react native docs which should help you:\nhttps://facebook.github.io/react-native/docs/performance.html#slow-navigator-transitions\n. No problem, happy to help\n. ",
    "neeboo": "Same problem to me... Did some work on reducer.js and Router.js though... Somehow with ActionsConst.BACKACTION, it will calculate the parent sceneKey, then use the Actions.callback method to dispatch actions.type only... No routes related props will be sent over to redux store...\n. ",
    "rhoffmann": "i found a way that works:\nBasically you need to use Icon.getImageSource from react-native-vector-icons. In some Main component you need to 'preload' these images, as they return a promise, then push them into the state. If you don't have the icons yet, return null or some loader from render. I did it like that, omitting unnecessary parts:\n```\nimport Icon from 'react-native-vector-icons/Ionicons';\n...\nconst App = React.createClass({\ncomponentWillMount() {\n    this.preloadImages();\n  },\n  ...\n  async preloadImages() {\n    const images = await Promise.all([\n      Icon.getImageSource('ios-arrow-back-outline', Metrics.icons.medium, Colors.snow),\n      Icon.getImageSource('ios-menu-outline', Metrics.icons.medium, Colors.snow)\n    ]);\n    this.setState({\n      icons: {\n        backIcon: images[ 0 ],\n        burgerIcon: images[ 1 ]\n      }\n    });\n  },\n ...\n render() {\n    if (!this.state.icons) {\n      return null;\n    }\n    const { icons } = this.state;\n    return (\n      \n      ...\n        }\n          drawerImage={icons.burgerIcon}\n       />\n      ...\n      \n   );\n  }\n});\n```\n. ",
    "santervo": "@rhoffmann \nHave you tested this? Does not work for me, image does not render in navbar.\n. ",
    "cackharot": "drawerImage doesn't work for me either. backButtonImage works.\n<Scene\n   drawerImage={icons.burgerIcon}\n   backButtonImage={icons.backIcon}\n...\n. Use leftButton instead of drawerImage\nrenderMenuButton() {\n    return (\n      <TouchableOpacity style={{ paddingLeft: 15, flex: 1, alignItems: 'flex-start', justifyContent: 'center' }} onPress={() => { Actions.get('drawer').ref.toggle() } }>\n        <Icon name=\"ios-menu-outline\" size={30} color=\"white\"/>\n      </TouchableOpacity>\n    );\n  };\n...\n<Router scenes={scenes} title=\"MyCoolApp\"\n        leftButton={this.renderMenuButton}\n        backButtonImage={icons.backIcon}\n        navigationBarStyle={{ backgroundColor: COLOR.paperPink400.color }}\n        titleStyle={[COLOR.paperGrey50]}\n        sceneStyle={{ flex: 1, backgroundColor: '#F7F7F7' }}>\n</Router>\n. ",
    "roseniltonreis": "Not for me too :/. Same problem :/. Same error.. Same error with me, Did you solved this?. same problem. ",
    "YuriyUlantsev": "@mastermoo Add in this code\n``` javascript\nconst preVerticalDirection = props.scenes[1] ? props.scenes[1].navigationState.direction === \"vertical\" : null;\nif (preVerticalDirection) {\n    const scale = props.position.interpolate({\n      inputRange,\n      outputRange: [1, 1, 0.98],\n    });\n    style.transform = [{scale}];\n    style.opacity = props.position.interpolate({\n      inputRange,\n      outputRange: [1, 1, 0.3],\n    });\n    return style;\n  }\n```\n. @charlesluo2014 Please show the code of your router.\n. @brunolemos This moment has been observed for a long time.\nI use the following decision:\nconst getSceneStyle = (props, computedProps) => {\nconst preVerticalDirection = props.scenes[1] ? props.scenes[1].navigationState.direction === \"vertical\" : null;\nconst idx = props.scene.index;\nconst {direction} = props.scene.navigationState;\nconst inputRange = [idx - 1, idx, idx + 1];\nconst style = {\nflex: 1,\nbackgroundColor: 'white',\n};\nif (direction == 'vertical') {\nconst translateY = props.position.interpolate({\ninputRange,\noutputRange: [SceneHeight, 0, 0],\n});\nstyle.transform = [\n{ scale: 1 },\n{ translateY },\n];\nreturn style;\n}\nif (preVerticalDirection) {\nconst scale = props.position.interpolate({\ninputRange,\noutputRange: [1, 1, 0.95]\n});\nstyle.transform = [{scale}];\nstyle.opacity = props.position.interpolate({\ninputRange,\noutputRange: [1, 1, 0.3],\n});\nreturn style;\n}\nconst translateX = props.position.interpolate({\ninputRange,\noutputRange: [SceneWidth, 0, -SceneWidth/5]\n});\nstyle.transform = [{ translateX }];\nreturn style;\n};\n<Router getSceneStyle={getSceneStyle}/>\n. @liesislukas This specific functionality can be implemented using RenderTitle func. \n. @maphongba008 \nIf needed styles\n...Platform.select({\nios: {\ntop: 64,\n},\nandroid: {\ntop: 54,\n}\n}),\nIf you using ScrollView or ListView\n<ScrollView\ncontentInset={{top: (Platform.OS !== 'ios' ? 54 : 64), left: 0, bottom: 0, right: 0}}\ncontentOffset={{x: 0, y: -(Platform.OS !== 'ios' ? 54 : 64)}}\n/>\n. ",
    "sbourlon": "I am interested in that example too!\n@cridenour https://github.com/aksonov/react-native-router-flux/blob/master/docs/DETAILED_EXAMPLE.md imports TabBar but does not seem to use it, does it?\n. ",
    "danscan": "@jeveloper Have you attempted to reproduce this issue using plan NavigationExperimental (without react-native-router-flux).  Any results?\nIf not, I may try it so to hone in on the real problem.\n. @jeveloper: So I just tested this with NavigationExperimental.CardStack and react-native@0.31 (without react-native-router-flux).  The issue still occurs.\nExample component: \n``` javascript\nimport { NavigationExperimental } from 'react-native';\nimport MapView from 'react-native-maps';\nexport default () => (\n   (\n      \n    )}\n  />\n);\n```\nWhen the index (in the navigationState object) is 0 (i.e. the root route is the current route, and the only route rendered), the map works fine:\n\nWhen the index is 1 (i.e., a second route was pushed, and is now the current route (and the previous route is rendered behind it), the issue occurs:\n\n. @jeveloper It appears to be the Android implementation of MapView only.  It doesn't appear that anything on the JS side is directly at fault... on iOS this behaves as expected.\n. @jeveloper Drilling down even further, it seems like if you have many map view's rendered, and you set their styles to something including position: 'absolute' this issue occurs.\nI imagine something related to drawing the frame contents is at fault.\n. @iiitmahesh In the app that I used react-native-maps in, I had to modify its navigation stack such that nothing would render underneath a map.  This issue turned out to have nothing to do with react-native-router-flux (though I think any user implementing navigation these days should use react-navigation or react-router instead, as they have much cleaner APIs and sources!). ",
    "jeveloper": "Whoa, thank you @danscan , that is pretty serious issue, i can see that RN is tweaking Nav constantly through commits, can i assume that the map lib is at fault of not detecting unmounting or a different type of change?\n. guys, its just a warning , it shouldn't break anything. You'll notice a lot of components for RN have this issue due to enormously quick release cycle of RN.\nDon't forge to enjoy the summer :)\n. Ahhh Greece ! i've been to cyprus a long time ago, still havent been to Greece.\nRN is sometimes very painful even though it exists for way of a year.\nits tangled with watchman, npm (sometimes caching happens) and don't get me started developing for android.\n. ",
    "iiitmahesh": "@jeveloper @danscan I have a same problem. have you solved this??. @andrycodestuffs Can share link exactly where it was. Or please provide code snippet . Oh I found it. \nhttps://github.com/aksonov/react-native-router-flux/blob/master/docs/OTHER_INFO.md. @EmiPC @jonrh   Is this bug resolved in 3.39.1 ??? . @AAverin Did u solved this??. @ChristianTucker  is your problem solved???. ",
    "agnaf": "This issue can be closed now, I do not have the rights to do so.. @edmundito This is interesting, I believe that one of our dependencies cause this but \u0399 do not know which one. In my case, if I remove the react-native-router-flux logic and just render a plain View, it works.\nThis is why I suspected react-native-router-flux (which may use a dependency that you also have and causes this problem).\nCan you please let us know if you also use Windows?. ",
    "mattvot": "Try adding the renderLeftButton prop to all the scenes you want the button to appear.\n. Had the same issue.\nLooks like you no longer need to pop on a hardwareBackPress. See https://github.com/aksonov/react-native-router-flux/commit/0ef1f7a19ca30d99e1892595da5be67a15c8fc22\n. ",
    "lukabers": "Any solution?\n. ",
    "zth": "I have the same issue :)\n. ",
    "moschan": "I sent Pull request (https://github.com/aksonov/react-native-router-flux/pull/1054) for solve this problem, and It was merged. Please check this function when next version bumped :smile_cat:\n. @aksonov Thank you for your review! OK, I will check issues carefully.\n. ",
    "marciobueno1": "My navigationBarStyle is\n{\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'transparent',\n    borderBottomWidth: 0,\n  }\nI also have custom styles for renderTitle (using flex) and renderRightButton (using absolute) and it is broken with 3.36, although it works fine with 3.35. Probably because of this PR...\n. My navigationBarStyle is \n{\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'transparent',\n    borderBottomWidth: 0,\n  }\nSo my renderRightButton style (that uses absolute position) is broken when I use 3.36.0, it is fine with 3.35.0\n. @aksonov Your sample works until 4.0.0-beta.23.\nOn version 4.0.0-beta.24 and later it gives the error shown on fatfatson comment.. ",
    "jschoolcraft": "I have a bunch of similar warnings:\nVersions\n\n\"react\": \"^15.2.0\",\n\"react-native\": \"^\n\"react-native-router-flux\": \"^3.32.0\",\n\nActual behavior\nExceptionsManager.js:76Warning: You are manually calling a React.PropTypes validation function for the left prop on StyleSheet leftButton. This is deprecated and will not work in the next major version. You may be seeing this warning due to a third-party PropTypes library. See https://fb.me/react-warning-dont-call-proptypes for details.\nExceptionsManager.js:76Warning: You are manually calling a React.PropTypes validation function for the fontSize prop on StyleSheet barRightButtonText. This is deprecated and will not work in the next major version. You may be seeing this warning due to a third-party PropTypes library. See https://fb.me/react-warning-dont-call-proptypes for details.\n. ",
    "ziv-moonsite": "Same problem here.\n. ",
    "amos80m": "same issue\n\"react\": \"^15.2.1\"\n\"react-native\": \"^0.31.0\"\n\"react-native-router-flux\": \"^3.34.0\"\n. ",
    "nicksarafa": "Also experiencing this bug. Figure out a solution @shivekkhurana?\n. ",
    "shivekkhurana": "Not yet. \n. For those who are still here, I strongly recommend shifting to facebook's official navigation : https://reactnavigation.org/. ",
    "adamTrz": "+1\nhave samoe error when building production app with Android Studio\n. ",
    "m1kewong": "+1\nThe sample code in react native shows this error as well.. ",
    "galeldar": "+1\nAny updates on this issue? I have been getting a similar error. Also, is this bug related to react-native-router-flux?. ",
    "VikAdvani": "Any updates on this? We are getting it also and have tried nearly everything.. ",
    "bhaumikdesai91": "I want to remove the back button when the scene is presented as modal but, I want to keep the navigation bar. This is also not happening. . ",
    "alsh76": "@Dean177 just want to prevent component rendering during animation. I am using redux and do not manage rendering process manually. If large component is getting rendered in animation time it causes freezes. \nSo would be nice to have a callback for end of animation (transition between scenes). componentDidMountis called when animation starts. It does not help\n. @Dean177 thank you for so useful link. I missed this part of RN docs. \ni have found different solution recently -  just rewrite animation for scenes like this\napplyAnimation={(pos, navState)=>{Animated.timing(....}.start(callback)}\nbut using of InteractionManager.runAfterInteractions looks better and can be applied to resolving other animation issues\n. @iiitmanikanta if tab scenes have type={ActionConst.REFRESH} then REACT_NATIVE_ROUTER_FLUX_JUMP is not triggered anymore when tabs are switched \nthat does not look like right behavior  . same issue\n\n\"react-native\": \"0.43.4\"\n\"react-native-router-flux\": \"^3.38.0\"\n\ndowngrading to v3.32.0 is a workaround . also see https://github.com/aksonov/react-native-router-flux/issues/1770 for another workaround. Correction: swiping does not work for android. It works for ios but with some issues. If I swipe a scene from a tab then a scene before tabs becomes visible  (not a previous scene in navigation stack as expected). ",
    "amitava82": "Can we get an update on this? I'm trying to navigate to a child scene within a tab and it does not work if I do Actions.childSceneKey()\n. Any update?\n. @aksonov checking if you saw this.. ",
    "TroutZen": "experiencing same issue as @amitava82 \n. ",
    "markortiz": "Same here to me on android\n- react-native-router-flux v3.32.0\n- react-native v0.30.0\n. i also experienced this on \n\n\"react-native-router-flux\": \"3.39.2\"\n\"react-native\": \"0.44.0\"\nActions.main({type:ActionConst.RESET})\n <Scene key=\"main\" type=\"replace\" tabs={true}>\n\nUPDATE\nit also happens on \nActions.main()\n <Scene key=\"main\" type=\"reset\" tabs={true}>. ",
    "abakhsh": "+1\n. ",
    "cwbutler": "I was able to fix this problem by keeping my react dependency locked at 15.2.1\n\n\"react\": \"15.2.1\",\n\"react-native\": \"0.31.0\",\n\"react-native-router-flux\": \"^3.30.0\",\n\nreact-native@0.31.0 has a peerDependency for react@15.2.1\nhttps://github.com/facebook/react-native/blob/0.31-stable/package.json#L124\nOnce I did this the warnings went away.\n. ",
    "rakannimer": "Solved in version 3.35.0\n. ",
    "OrianeInMoon": "still appear in v4.0.0-beta.12. julesmoretti solution works with <Router />, but how make it work with ConnectedRouter?. on 4.0.0-beta.15:\nleftTitle is only displayed when no onLeft function is provided.. The same occured using 4.0.0-beta.14.\nIn fact, it only works when using onLeft={Actions.pop}, not when using onLeft={Actions.mypage}\n. So why I can see  the wanted action using console.log(Actions) before the Router declaration !?\nEDIT\nit is due to hot reload... Did you try with the drawerImage prop? (found here). I'm still facing this problem with beta 17 and 18. After downgrading to beta 14, no bug anymore.\nWhen the Drawer close, it will redirect to the first scene (in history, not in the scenes stack). ",
    "einomi": "The problem disappeared for me after upgrade to React 16.0.0. The problem disappeared for me after upgrade to React 16.0.0. ",
    "jaisonveneri": "Hello @shiv86,\nWere you able to use react-native-message-bar with react-native-router-flux?\nThanks!. Hello @uc-asa,\nCan you find a way to access the stack?\nThanks!. Hello @rmnegatives,\nI need to do something like that. Can you resolve that?\nThanks!. @rmnegatives Can you get the correct index in another way? Sorry for the misunderstanding.. Yes, you are right @rmnegatives,\nFor me it seems that in \"key\" has the index inside.\nI needed to know the count stack navigation to show or not a custom back button on a custom navbar. I think that I use this.\nThanks for the reply.. ",
    "patryknowak": "This is how I manage to fix it with v3.33.2:\nbash\nrm -rf node_modules\nnpm cache clean\nnpm install\nMaybe it will help you as well :)\n. ",
    "tetriscode": "npm i -S babel-preset-react-native\n. npm i -S fbjs\n. ",
    "parronator": "@tetriscode Thank you!\n. if you want to hide the navbar you have to add the property hideNavBar={true}\nExample:\n<Scene key=\"foodDetail\" title=\"Food Detail\" component={FootDetailView} hideNavBar={true}/>\nYou can also add transparent background inside styles and borderBottomColor: transparent but the navbar will be there and the corresponding height too, so with this way the content will not be at top or perfectly centered\n. ",
    "arronmabrey": "npm i -S babel-preset-react-native also helped me and I'm on react-native v0.31.0\n. ",
    "takhil": "versions:\nreact-native 0.36.0\nstill facing the same issue \n\n. ",
    "vykumar": "@doomsower , I used the code like Actions.pop({refresh:\"farha\"}) as you suggested but I am not able to get the props in previous screen because there is no any component lifecycle methods triggered. Now, my question is that like which function/method is triggered when previous screen launch on Action.pop().\n. No, I am not using your fork. I just cloned the code from master branch and using version 3.30.2 of RNRF. I used the same code Actions.pop({refresh: {message: this.state.message}}); but it was not working in my project. it's not triggered componentWillRecieveProps.\nCan you please tell me what will be the right solution for my project?\n. ",
    "juanpasolano": "Hi, Any idea when is this going to be publish to npm? \nThank you\n. I checked and there is no Actions.go\nI'm trying to get to a nested scene inside a drawer\n<Scene key=\"root\" hideNavBar={true}>\n    <Scene key=\"drawer\" component={Drawer} open={false}>\n        <Scene key=\"profile\" component={Profile} title=\"Profile\"/>\n        <Scene key=\"workspace\" component={Workspace} initial={true}/>\n    </Scene>\n    <Scene key=\"login\" component={Login} initial={true} type={ActionConst.REPLACE}/>\n</Scene>\ni'm trying to get from the loginto the Actions.workspace(), which it doesn't work I have to use Actions.drawer() (as @fmmajd mentions) and since workspace is the intial it works. However then from the drawer I want to go to Actions.profile() and the only thing that works is Actions.profile({type: 'replace'}) which is not desired since I want to go back.\n@fmmajd I did not understand how you solved it!\n. For anyone interested I managed to get the height working by adding styles to the model like so\n``` javascript\nimport {\n  Dimensions,\n  StatusBar,\n} from 'react-native';\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1, \n    position:'absolute', \n    top:0, \n    left:0, \n    height: Dimensions.get('window').height - StatusBar.currentHeight, \n    width: Dimensions.get('window').width\n  }\n});\n```\n. ",
    "conor909": "This seems to be an issue again: #1381. same here:\nonBack={ () => Actions.pop({ refresh: { test: true } }) }\nDoesn't trigger a refresh of the component\nreact-native v0.43.1\nreact-native-router-flux v3.38.0. ",
    "leafingio": "@pewh\nWith opacity set, you should be able to see a semi-transparent navbar. Maybe the scenario container has paddingTop style and moves the content down the navbar. Please, check the scenario container styles. ",
    "dmueller39": "https://github.com/aksonov/react-native-experimental-navigation/pull/4\n. ",
    "joshg111": "Update:\nI only see this warning once. If I click to other tab and back to the offending tab everything is fine. \n. Before I was using \"Alt\" for state management. There's some mechanism in Alt which allows to listen for state changes from the flux store and propagate those changes to the View component. When the component unmounts there is a call to \"unlisten\" from the store. I'm guessing there's something wrong with that whole mechanism. \nNow I use Apollo Client (which uses Redux) for state management, and I'm not seeing any issue. \nThere's probably some way to fix the Alt related mechanism by using \"connectToStores\" instead of binding to state with listeners directly. It seems these listeners stay alive even though component has been unmounted. . I'm having the same problem. I think my issue is related to my state management Apollo Client (Redux). Perhaps Apollo Client does not auto cleanup state when a component which uses that state unmounts. I guess that's reasonable for Apollo Client. Then, when component which uses that state is mounted again Apollo Client connects all the old/cached state to that component. \nI could manually clean up state when component is unmounted, or it turns out Apollo Client has some forceFetch=true option which will cause it to ignore any cached state, and will refetch the data when component mounts again. \nWhat state management tool are you using? Or is it just component level state? If it's just component level state I feel like it should automatically get cleaned up when component unmounts. \nAlso, how sure are you that the component is getting unmounted? I was looking at the reducer for this routing library, and it seems that popping the component will result in \"from\" getting set with what I think is the \"popped from\" component. If that's true, then there is still a reference to the popped component in memory, so wouldn't that prevent the component from getting unmounted, or at least prevent it from getting cleaned up in memory? According to RN docs it seems that component is destroyed when it is unmounted. . ",
    "juanluisgv1": "I had the same error and I copied the fbjs folder from react into the node_modules from react-native-experimental-navigation. That solved the issue... it's a bad solution but somehow the devDependencies from react-native-experimental-navigation where not fully downloaded. I guess if you change the  \"fbjs\": \"^0.8.1\" to the dependencies it will work.\n. ",
    "DenJohX": "Are  you using a connected router with redux? \nI have the same problem but using Hot Reloading.\nI want to have a connected router (so scenes can have acccess to the current scene data via store), but my problem is that every time I change something in any reducer, the router gets reloaded and resets to the initial scene.\n. Hi @ospfranco \nReally sorry but I switched to react-router-native, so no longer need to solve this. Thanks anyway.\n. ",
    "vairabagni": "This is an error which was thrown when i tried to integrate this library with latest react-native framework.\nAnd this error is because of your library. It is now incompatible with latest react-native. The version info is given above.\n. By installing fbjs, it works now. But can you mention this library as a dependency so that I do not have to install it separately.\n. ",
    "savioseb": "Thanks @tetriscode \n. ",
    "the-simian": "When i got this error one time, the fix was surprisingly simple. I just stopped and restarted the package manager. embarassingly, this was after a very long time fiddling with various package.json dependencies. If you get this, give that a shot- it worked for me.. Its been a month, any chance of making the tiny fix that can end this bug?. I had the same problem as @aksonov  at first. No matter what I sent to the indicatorStyle prop, its seemed to stay the default yellow.\nMy problem is I was trying to only override the color and not also the other properties. When I added the borderBottomWidth property, it started working for me.. ",
    "Talkwondo": "there is:\ntitle='somthing'. i want to put an image instead.\n. What you need to do is to create a function inside and return an image. note that the title has an horizontal animation so it does not so pretty to navigate with this when you have an icon in the left that stay, so i suggest you use const action of jump instead of push.\n. Hi,\nI tried this. and this is the error:\n\n. does not help. I used this RNRF before and for some reason this not the same syntax \nimport { Actions, ActionConst } from 'react-native-router-flux'\nthis is my code:\nsetTimeout(function() {\n                Actions.main({type: ActionConst.REPLACE}) \n            },3000)\n\n. It is now has no Error but there is still animation from right to left. and I tried couple keywords like JUMP and PUSH.... no change. I tried this already... very strange.... ",
    "jianglinchun": "I suggest realm for the storage. The api of realm is blocking.. ",
    "dslounge": "That's not a bug/issue with this package right? It's just incorrect JSX syntax. You're not supposed to put comments inside the children section of the tag. // more scenes ... is in the children section of a tag. \nFrom the docs: You just need to be careful to put {} around the comments when you are within the children section of a tag. https://facebook.github.io/react/docs/jsx-in-depth.html#comments\n. ",
    "hawkrives": "@dslounge is correct. \n. ",
    "stephy": "@wrousseau correct me if I am wrong, but the default direction is from right to left. For my app I really wanted from left to right. Since I added this feature to my app, I figure I would just do a PR as other people may want it from left to right as well. Is there a way to do navigate from left to right? I could not find it.\n. @aksonov I will do that now.\n. @wrousseau I see what you mean, I guess that can get really confusing. I could change the name to 'horizontalLeftToRight'. What do you think?\n. @joenoon I think that's a great suggestion\n. ",
    "quadsurf": "@boghbogh you get that error when you attempt to install deps and run the app from the root dir...\njust cd into the /Example/ dir, install deps, then run it, and you will see the app run without that error. @niklas-palm this actually does work as expected... one caveat though, it only works if you have auth status predetermined (like on a prior screen)... if you are asynchronously determining auth status, it will not work since  instantly needs children. @Maxwell2022 this should help when comparing the two of them...\n\n\nreact native router flux (RNRF) is more mature and less buggy (only 7 out of ~1600 issues are open, versus reactNavigation that has 75% of their ~1000 issues that are still open (not production worthy, and unacceptable in my opinion))\n\n\nif you're just a programmer, reactNavigation is a great choice, but if you're a programmer and a businessman in need of efficiencies, then reactNavigation is a terrible choice (here's why: reactNavigation is more complicated than it needs to be, and has a much longer learning curve, especially when your app has complex nav requirements and insufficient lib documentation leaves you needlessly experimenting for hours ( i agree with @AlmogRnD )... this is great for the programmer looking for a challenge and wanting to improve their troubleshooting skills, but unacceptable for dev shops or business folk where time efficiencies are needed)\n\n\nreactNavigation, at it's core, does have a nice API, but it's needlessly complex ( i agree with @AlmogRnD )... the purpose of this RNRF lib and what @aksonov is doing with v4, is not to compete with or replace reactNavigation, but to abstract away all of reactNavigation's unnecessary complexity\n\n\nif you're a fan of conditional component/screen rendering, which is a very common pattern in React Native, then RNRF is more conducive to this pattern\n\n\nreact native loses its right to call itself an un-opinionated framework when it chooses one library over another (like a government trying to pick corporate winners and losers in the marketplace)... but here we are, in a world where react native chose reactNavigation... i believe aksonov's decision to utilize reactNavigation's api in RNRF v4, was to create \"association\" with react-native's bias, and maintain this library's relevance... a good move i might add\n\n\nreactNavigation does not have a true modal implementation*, where as RNRF does (and by modal i'm referring to a prompt/alert style pop-up with grayed-out background), and when you call yourself a navigation library, this becomes a glaring/blatant omission i might add\n\n\nhttps://github.com/react-community/react-navigation/issues/2031. ",
    "inetfuture": "Now I'm trying to use a custom root scene container, where contains the common ActivityIndicator and all other scenes are nested below:\n<Scene key=\"root\" component={Root}>\n            {SplashScreen}\n            {Login}\n</Scene>\nexport default class Root extends Component {\n  render = () => {\n    return (\n      <View>\n        {this.props.children}\n        <ActivityIndicator />\n      </View>\n    );\n  }\n}\nBut this doesn't work, it complains as ExceptionsManager.js:55 Objects are not valid as a React child (found: object with keys {sceneStyle, dispatch, key, name, sceneKey, parent, type, initial, hideNavBar, component, index}). If you meant to render a collection of children, use an array instead or wrap the object using createFragment(object) from the React add-ons. Check the render method of View\nHow a custom container should be written?\n. I tried this:\n```\nexport default class Root extends Component {\n  render = () => {\n    const children = this.props.navigationState.children;\n    const state = children[children.length - 1];\nreturn (\n  <View style={{flex: 1}}>\n    <DefaultRenderer\n      navigationState={state}\n      key={state.key}\n      {...state}\n      onNavigate={this.props.onNavigate}\n    />\n\n    <ActivityIndicator />\n  </View>\n);\n\n}\n}\n```\nBut navbar is broken\n. Eventually, I solved this by putting <Loading /> right after <Router /> like this:\nrender = () => {\n    return (\n      <Provider store={store}>\n        <View\n          style={styles.container}\n          onStartShouldSetResponderCapture={this._onStartShouldSetResponderCapture}\n        >\n          <Router sceneStyle={styles.scene}>\n            <Scene\n              key=\"root\"\n            >\n              ...\n            </Scene>\n          </Router>\n          <Loading />\n        </View>\n      </Provider>\n    );\n  }\n. ",
    "tomwalters": "I've solved this problem by creating a class of BaseView which knows how to render a loading view, and having all the components I'm using as Scenes inherit from this base class.\n. @inetfuture That's actually what I ended up doing, subclassing in the way I suggested isn't very React-y\n. You need to remove the quotes from the navBar prop:\n<Router navBar={NavBar} \n        navigationBarStyle={styles.navBar}\n        scenes={scenes}\n        {...this.state} />\n. ",
    "vinaynb": "@tomwalters can you show us a sample of your code ?\n. @dannycochran i followed most of the techniques advised in  #199 to improve perf on android and it did improve to acceptable levels, but the core issue now for me is when i need to debug js using breakpoints in chrome remote debugger. Transitions are very slow when remote debug is on. If the screen you are trying to debug is 3-4 levels down the path then navigating to that screen is a real pain in this case.\n. ",
    "Druux": "I am facing the exact same warning. Are there solutions available?\n. ",
    "bberthelemy": "I finaly found out a hack few minutes ago.\n// Dialog\n```\nclass Dialog extends React.Component {\n    constructor() {\n        super();\n    this.state = {\n        visible: false\n    };\n\n    this.onCloseDialog = this.onCloseDialog.bind(this);\n}\n\ncomponentWillReceiveProps(nextProps) {\n    if (nextProps.visible) {\n        this.setState({visible: nextProps.visible});\n    }\n}\n\nonCloseDialog() {\n    this.setState({visible: false});\n}\n\nrender() {\n    return (this.state.visible) ? (\n        <View>\n            ...\n            <TouchableOpacity onPress={this.onCloseDialog}>\n                <Image source={ require(\"../Ressources/Images/interface-croix.png\") }/>\n            </TouchableOpacity>\n        </View>\n    ) : null;\n}\n\n}\nexport default connect(null, {})(Dialog);\n```\n// index.ios.js\n```\n...\n\n\n\n\n            ...\n        \n    {/*Modales*/}\n    <Scene key=\"dialog\" component={Dialog} direction=\"vertical\"/>\n    ...\n\n```\n// Launch\n...\n// Default visible state of dialog is false, it will not show up this time\nActions.dialog();\n// Other components where i need to show the dialog\n...\n// We get the new visible value from componentWillReceiveProps, the dialog will show up this time\nActions.refresh(key: \"dialog\", visible: true, uniqId: new Date().getTime());\nI show the modal when I get the visible prop (sent when using the refresh action).\nI noticed that If I do not send a new prop value (this is why I use the date timestamp), it doesn't go to componentWillReceiveProps and then doesn't re-render.\n. ",
    "joncursi": "Similarly, I'm looking to use a dynamic right button on the navBar that renders an Action Sheet with actions that are dependent on data. Think... Follow userABC123; Block userABC123; etc. Is there a way to dynamically generate the onRight function within a lifecycle hook (i.e. after data is fetched) to produce a custom action sheet?\n. ",
    "compojoom": "@aksonov would you mind commenting on this?\nI was playing with Actions.refresh in my component, but I don't think that this is the correct way to dynamically update properties of the scene. Here are my findings.\n// Note: I'm using an es6 class that extends Component\nIf we place Actions.refresh({title: 'drawer'}); in the constructor, then react complains with this:\n\nWarning: setState(...): Cannot update during an existing state transition (such as within render or another component's constructor). Render methods should be a pure function of props and state; constructor side-effects are an anti-pattern, but can be moved to componentWillMount.\n\nThis is just a warning and we achieve the desired result. However there is a sideffect - the render function is called twice when we do this.\nIf we directly place this in the componentWillMount function, then react doesn't issue any warning, but render is also called twice. \nIf we do this in the constructor:\nthis.props.navigationState.title = 'test';\nthen react won't complain and our navigationBar title will be test. The render method will be called just once. The same goes for calling onRight, onRightTitle etc. Now the thing is according to this https://facebook.github.io/react/docs/jsx-spread.html#mutating-props-is-bad mutating props is bad. \nSo, you can either mutate props which is bad or you can call Actions.refresh and have sideeffects, such as rendering the component twice... Any ideas?\n. I couldn't find any app called com,example on my device, but after changing the app package to com.aksonov.routerflux.example I was able to build and deploy to my device. \n. Closing as my pull request was merged\n. wow! I just ran into something that I think is related, but with the normal Navigation. \nBasically in the parent component I was reacting on componentWillReceiveProps and when the new props are different I was re-rendering the navigation. The issue with that was that my props can change in response of a synchronisation action. \nSo out of that scene I'm navigating to a new Scene. Then few seconds later after the sync action completes the parent scene has new properties and it does Actions.refresh and this changes the navigation on the current page.. pass the following navigation style:\nnavigationBarStyle={{backgroundColor: 'red', bottom: 0, top: null}}\nThe navbar is absolutely positioned at the top. The style is defined in the NavBar.js of router-flux. in the header class the top property is set to 0 and that's why you have the navigation set to the top. Adding a bottom of 0 and resetting top by setting it to null, renders the navigation bar at the bottom.\n. Thanks for the reply. This is how I do it:\n```\nimport React, {Component} from 'react';\nimport {\n    View,\n    Navigator,\n    StyleSheet,\nText\n} from 'react-native';\nimport Fields from '../components/Fields/Fields';\nimport Field  from '../components/Field/Field';\nimport CreateField  from '../components/Field/CreateField';\nimport Company from '../components/Company/Company';\nimport FormCrop from '../components/Crop/FormCrop';\nimport FormCompany from '../components/Company/FormCompany';\nimport Companies from '../components/Companies/Companies';\nimport WaitTime from '../components/WaitTime/WaitTime';\nimport {Actions, Scene, Router, ActionConst} from 'react-native-router-flux';\nconst styles = StyleSheet.create({\n    navigationBarStyle : {\n        backgroundColor: '#81c04d'\n    },\n    titleStyle: {\n        color: '#ffffff',\n        fontSize: 20\n    },\n    rightButtonTextStyle: {\n        color: '#D2F1AC'\n}\n\n});\nexport default class FarmerJoeApp extends Component {\n    render() {\n    return (\n        <Router>\n            <Scene key=\"root\">\n                <Scene key=\"companies\"\n                       {...styles} type={ActionConst.BACK} backButton={false} onRight={() => Actions.formCompany()} rightTitle=\"Neu\" component={Companies}  title=\"Betriebe\"  />\n                <Scene key=\"company\" {...styles} component={Company}  title=\"\"  />\n                <Scene key=\"formCompany\" {...styles} component={FormCompany} />\n\n                <Scene key=\"fields\" {...styles} component={Fields} title=\"Fields\" />\n                <Scene key=\"field\" {...styles} component={Field} title=\"Field\" />\n                <Scene key=\"createField\" type={ActionConst.REPLACE} {...styles} component={CreateField} title=\"Create field\" />\n\n                <Scene key=\"waitTime\" {...styles} onRight={() => Actions.formCompany()} rightTitle=\"speichern\" component={WaitTime} title=\"WaitTime\" />\n                <Scene key=\"formCrop\" {...styles} onRight={() => Actions.formCompany()} rightTitle=\"speichern\" component={FormCrop} title=\"Kultur hinzuf\u00fcgen\" />\n            </Scene>\n        </Router>\n    )\n}\n\n}\n```\nAs you can see with the createField scene I tried it with type={ActionConst.REPLACE}, but this still doesn't work. If I do it with replace then this is what happens.\nThe navigation in my app works like this.\nCompanies -> company -> fields -> createField -> on save -> field. \nNow with replace on the field scene the back button works like this:\nfield -> createField -> company -> companies\nIf I don't use replace, then the back button works like this\nfield -> createField -> fields -> company -> companies. \nAnd all I want to do is this:\nfield -> fields -> company -> companies\nAre my scenes ordered wrong?\n. Thanks for the suggestions.\nUnfortunately as I said above replace doesn't help.\ncompanies -> company -> fields -> createField -> save -> field\nso when createField and field have a replace type, then the back button sends me directly to company? Fields is omitted.\nActually it doesn't matter if I place replace on field or createField -> the backbutton would always send me to company???\nActions.popTo(\"fields\") - that seems to work. If I add\nstatic onBack() {\n        Actions.popTo(\"fields\");\n    }\nI can jump to the fields scene and I won't go through the createFields scene. However as you said using the hardware button on the device will send me through the createFields scene. \nI see that I can pass a backAndroidHandler function to my router, but I have troubles figuring out how to access my scene from there? Normally I would want it to have the default behavior, but if the scene == field, then send the user to fields. Am I possible to use the backAndroidHandler in my Scenes? I wasn't able to call it there. \n. I see, now I finally understand what's going on and that won't work in my case. \nThe issues is this. I have 2 ways to go to field.\n1. fields -> field\n2. fields -> createField -> field\nIf I use replace, then it will work for the second case. But in the first case I'll jump back to company instead of fields as fields has been replaced by field.\nIs there any way for my to dynamically determine if I want to have type replace or the default push?\nAaaaah, wait! I have it. So, in my createField scene when I save I can do Actions.field({type: 'replace'}); Now when save sends me to the field scene the back button sends me back to fields. Awesome! Thanks man! I would not have come to this without your help! Thank you!\n. I couldn't understand what you want to happen from SceneN to SceneA. When you are at sceneA hitting the back button should send you where?. I asked what should happen when you hit the back button? Should you go back to SceneN, or should you stay at sceneA.\nIf you stay at scene A, then at sceneN you could send the user to SceneA by using the reset option. This will clear the stack and you'll be at sceneA. Then the user could initiate a new navigation.. How about overriding the back action on SceneA to always send the user to the dashboard? Then reseting to SceneA shouldt still be able to send you to the dashboard :). well, I'm curious how other people are doing it. \nNormally you can have a scene that says \"new article\" and \"edit article\".\nThe scene would also have a save button in the navigation. How would you do that without dynamic properties? Your component determines the title and the save action. \nBut ok, if react is fast, then I'll ignore it for now.\n. Yes, I have, but to be honest I haven't really understand how to use that. Do we have a tutorial or an example app that uses the sub scenes?\n. I'm running into the same issue. \nIn my case I'm trying to upgrade to 0.46 alpha2. \nThe second I update RNRF to version 3.39.1 I run into the AccessibilityInfo error. @hellomaya - thanks Tom. it seems to work with 3.40.1. - now if I could also get other packages to work....\nWhy is not 3.40.1 listed under releases?. The above error is really strange and I'm starting to believe that it doesn't have anything to do with router flux or other components. I got this error and several other similar errors yesterday when I tried upgrading my project to 0.46.4\nThis thing costed me like 2h to resolve, but I have no idea what fixed it. I tried cleaning caches, updating packages and I was always presented with such an error screen. I killed node. Nothing. Than as last resort - I restarted the computer and it started working... . well, I'm running 0.46.4 with rnrf 4.0.alpha12.... Ah ok. Seems to be the same issue.. @aksonov - how is this fixing the actions.refresh?  I downloaded the 4.0.8 branch and launched the example, but I still can't change the title on the login page. \nThe same happens in a separate project as well. . @aksonov - it seems to partially work. It's changing the title, but nothing more? I was used to the folowing pattern in v3:\n```js\ncomponentDidMount() {\n        console.log('wtffff refressshshhh');\n        let title = 'Analyse1',\n            rightTitle = 'Speichern';\n    if (this.props.editMode) {\n        title = 'Analyse Bearbeiten';\n        rightTitle = 'Fertig';\n    }\n    Actions.refresh({\n        title: title,\n        rightTitle: rightTitle,\n        onRight: () => this.onRight(),\n        backTitle: 'Abbrechen',\n    });\n}\n\n```\nthis seems to work now, but the only thing changing is the title. No right button appears in my navbar.. Hm, okay. Defining onRight and rightTitle on my scene seems to work together with refresh. If I define them on the scene, refresh will override them, but if I don't define them, then nothing happens. I don't see any right button.. I'm wondering if anyone else is experiencing this:\n\nI just open and re-save the image, but I don't understand why this happens at all.. @aksonov - if the scene doesn't have onright and rightTitle, then the refresh action isn't working. (tested with latest version). @aksonov - you were faster https://github.com/compojoom/react-native-router-flux/tree/4.0.0-beta.8-no-refresh . woooohoooo! Let's open the champagne bottle for PR8 \ud83d\udc4d \nEverything seems to work. I'm closing this for now as I can't reproduce it in an example project. Once I figure out what's going on and if it is reproducible I'll open a new issue. \nThanks for your help!. Actually just found what's going on. For other having the same issue check out the headerMode for your scenes. More info here: https://reactnavigation.org/docs/navigators/stack\nheaderMode - Specifies how the header should be rendered:\n\nfloat - Render a single header that stays at the top and animates as screens are changed. This is a common pattern on iOS.\nscreen - Each screen has a header attached to it and the header fades in and out together with the screen. This is a common pattern on Android.\nnone - No header will be rendered.\n\n\nIt seems that for my project the default was float and that's why when you render your own header the reactnativation pushes it down, because it doesn't know that you have a header.. yep, it's pop and not back. But if I do use type={'pop'} navigating to this scene behaves like pop -> it just pops the last scene from the stack. \nAnd since on the scene I am I have a tabbar -> when you navigate between the tabs and then hit the actions.companies() buttons you first switch between the tabs and once they are off the stack you navigate back to hte companies page. And I just want to directly transition back to companies no matter how many screens there are on the stack. \nI tried popTo, but it seems to cause some endless loop or so... The app freezes :). okaay, so adding type={'popTo'} to the scene seems to work fine. \nUsing Actions.popTo({scene: 'companies'}) seems to cause the endless loop. Why does companies need to be a child? It's a parent in this case and I would like to navigate back to the parent?\nAnd what's with refresh now? Can we use it in v4 or not?\nActions.companies({\n    refresh: {\n      goBack: true\n     }\n })\nThis doesn't seem to pass goBack as property to the previous scene. No matter if I use type={'popTo'} or not. It just doesn't seem to pass the property back to the previous scene. ComponentWillReceiveProps is never fired.. Sorry, I'm lost. I don't understand what you mean with \" Stack cannot be presented, you always see some child within the stack.\"\ncompanies is the first scene in the stack. \nI discovered that I can remove the type={'popTo'} from the scene definition. The way then to popTo this scene is by using\nActions.popTo('companies')\ninstead of v3 syntax\nActions.popTo({scene: 'companies'})\nunfortunatly passing params as second argument doesn't do anything. \nI tried it with 2 calls like this:\nActions.popTo('companies');\nActions.companies({wtf: true});\nwtf was auto added to props.navigation.state.params. So we no longer need to use the refresh object?. Yep,that also seems to work. \nAre those 2 the same in behavior? Calling refresh on actions is somehow strange for me as I don't know on which scene the refresh is going to be called.\nActions.popTo('companies');\nActions.refresh({data});\nActions.popTo('companies');\nActions.companies({data});\n. wow! my app seems fast again! Thanks, it seems that the re-rendering issue is gone.. @aksonov would you mind commenting on this? What do you mean with top-level App as stateless component? I'm getting the same error as above and it is coming from mobx form the stacktrace. . I don't understand what I'm doing wrong.\nThis is my original code:\n```js\nclass App extends Component {\nrenderBackButton(nav) {\n   ...\n    return nav.navigationState.index ? (\n            <TouchableOpacity onPress={onPress} style={styles.backButtonStyle}>\n                {button}\n\n            </TouchableOpacity>\n        ) : null;\n}\n\nrender() {\n    let owner = this.props.owner, loggedIn;\n    try {\n        if (owner.user.user_id) {\n            loggedIn = true;\n        }\n    }\n    catch (e) {\n        loggedIn = false;\n    }\n\n    return (\n        <Router>\n            <Scene key=\"root\" headerMode=\"screen\" cardStyle={styles.cardStyle}>\n                <Scene key=\"LoginOrRegister\" hideNavBar component={LoginOrRegister}\n                       initial={loggedIn ? false : true}\n                       title=\"Login or register\"/>\n                <Scene key=\"login\" hideNavBar={true} component={Login} title=\"Login\"/>\n                <Scene key=\"requestPassword\" hideNavBar={true} component={RequestPassword} title=\"Passwort vergessen\"/>\n\n....\n                \n\n        )\n    }\n}\nconst selector = (state) => {\n    return {\n        owner: state.owner\n    }\n};\nexport default connect(selector, actionCreators)(App);\n```\nAnd this is what I transformed it to:\n```js\nconst App = (owner) => {\nconsole.log(owner);\nlet loggedIn;\ntry {\n    if (owner.user.user_id) {\n        loggedIn = true;\n    }\n}\ncatch (e) {\n    loggedIn = false;\n}\nreturn (\n    <Router>\n        <Scene key=\"root\" headerMode=\"screen\" cardStyle={styles.cardStyle}>\n            <Scene key=\"LoginOrRegister\" hideNavBar component={LoginOrRegister}\n                   initial={loggedIn ? false : true}\n                   title=\"Login or register\"/>\n            <Scene key=\"login\" hideNavBar={true} component={Login} title=\"Login\"/>\n            <Scene key=\"requestPassword\" hideNavBar={true} component={RequestPassword} title=\"Passwort vergessen\"/>\n\n......\n            \n\n    )\n}\nclass BlaBla extends Component {\n    render() {\n        return \n    }\n}\nconst selector = (state) => {\n    return {\n        owner: state.owner\n    }\n};\nexport default connect(selector, actionCreators)(BlaBla);\n```\nAny idea what I'm doing wrong?. @aksonov - I just did a little digging. Would you mind explaining why does the component need to be stateless?\nI have an App component that initialises my state, loads the redux store and then passes it to the mainApp which renders the scenes. \nThe mainApp needs to know about part of the state in order to decide which scene to render first. So I'm connecting my mainApp to redux and passing it the part of the state it's interested in. The second that part of the state changes - I get the error. If I connect my component to redux, but subscribe to an empty state - then no error... \nWhy is it now a problem to have a state? one way around this is to pass the state as Prop to my mainApp like:\n\n\n\nThen I can read the part of the state I'm interested in and set which scene to render first, but I don't understand why is it now no go to connect the router to the state in v4? My code worked fine with v3. . ok, Do you have an example?\nI remember trying the static onRight in the past, but the issue was that I didn't have access to my component save function as this was not pointing to the component within the static function. I tried pop and then push, but I'm not sure if it was my components or what, but I was running in a \"max execution callstack\" error.. Actually that seems to be a bug in the demo. You are missing key=\"loginModal\" on the login scene. After adding it there it seems to works properly.. I was also able to reproduce the situation in which the app is hanging for me. Here is a branch with the example app:\nhttps://github.com/compojoom/react-native-router-flux/commit/4c02194051826bda64247815244c70393a4406d4\nTo reproduce press the register button in the tabbar and then press the tabbar1 button.\nFor some reason navigating to a new scene and then trying to go back to the tabbar scene causes this. . Sorry, for the stupid question but why? How can I go back by specifying the scene I want to go to?\nWe can do a Actions.tab1(), then why can't we do Actions.popTo('tab1')? Actions.pop() works, but there are situations where one need to be specific as we don't know how many screens we have visited before tab1.. @aksonov - here is my use case\nA -> B -> C\nC is an edit screen that has a delete option. If I use delete I can't pop to scene B as the object it was showing previously is no longer existing. That's why I want to popTo('A'), but since A is a tab RNRF hangs. \nIf I popTo something that is before scene A, that is not a tab - then it works... Do I need to structure my project differently? The scenes I'm sending the user from the tab are not tabs on their own... They have their own navigation etc.... Where do I add the underscore? to the key or where?. <Tabs key=\"tabbar\" gestureEnabled={false} showLabel={false} tabs tabBarStyle={styles.tabBarStyle} activeBackgroundColor=\"#ddd\">\n                <Stack\n                  key=\"_tab1\"\n                  title=\"Tab #1\"\n                  tabBarLabel=\"TAB #1\"\n                  icon={TabIcon}\n                  navigationBarStyle={{ backgroundColor: 'green' }}\n                  titleStyle={{ color: 'white', alignSelf: 'center' }}\n                >\nlike that? and then Actions.popTo('_tab1')? That doesn't work.. h\u00e4???. :) I didn't understand what you mean, but I'll try to bang my head a little more.... @rathorebs - you are using beta17 and not latest master. Change the package name to the github url with the latest commit and then it should build fine\n\"react-native-router-flux\": \"github:aksonov/react-native-router-flux#c248109ec19576dcdf24b9593d6f9542d9e59608\",\n. @aksonov - I know you said that using componentDidMount is an anti-pattern, but it's the only easy way right now to actually modify the navbar.\nI'm pretty sure other users are doing the following:\n- reading the state to determine if they should desplay: \"edit\" or \"new\" as a title\n- depending on the state - display \"save\" or \"ready\" buttons\n- the save button would call a function on the component that contains the logic to save, update the item\nI'm actually thinking of completely giving up on the build-in navBar as it is too complicated to change the title and what the buttons do. Rendering a custom Navbar in each component looks like less work right now.. try \n\nActions.home(); \nActions.refresh({params}). thanks @davojan - I was installing with npm and didn't notice the yarn.lock file. Yep, I'll do it in few hours. @hjylewis - no, I never got it.. I had a look at this again today and it is achievable without modifications to rn-router-flux\nThe stacknavigator https://reactnavigation.org/docs/stack-navigator.html#navigationoptions-used-by-stacknavigator has a property: headerTitleAllowFontScaling - if this is set to false, then the title is not scaled. And then depending on how you define your scene you can either use your won renderBack and renderRight components. Or if you are providing a function for rightTitle you can pass your own text element and set the allowFontScaling to false. @aksonov - thanks. Using a function for the titles worked.. @asciifaceman - have you tried this yourself? It doesn't work - you cannot have dynamic scene render unless I'm missing something. All your scenes need to be defined in advance. . @aksonov - any comment on this?. I gave up and switched to directly using react navigation, but most probably something similar like this https://reactnavigation.org/docs/en/header-buttons.html#header-interaction-with-its-screen-component. \n",
    "mikaelrosquist": "Any updates on this? I'm having the exact same problem trying to dynamically set navigationBarStyle depending on user props. Specifically I'm trying to change the background color of the navigation bar. Actions.refresh({navigationBarStyle ... }) does not work either. \n<Scene key=\"myScene\"\ncomponent={myComponent}\nrenderTitle={() => { return <NavigationBarTitle title=\"My Title\"/>}}\nsceneStyle={styles.scene}\nnavigationBarStyle={[styles.navBar, this.props.theme.backgroundColor]} <- backgroundColor not updating when state changes\n              onRight={this.pushNoticeFilter}/>\nI've managed to dynamically render different titles and styles in my custom title component of the navigation bar, but navigationBarStyle is not listening to state changes.\nDoes this have something to do with RNRF ignoring re-renders of scenes, where it prints \"Key myScene is already defined!\"?. @OhaiBBQ Thank you! Works perfectly! \ud83d\udc4d . +1. Had the exact same issue. Was able to \"solve\" it by setting a timeout before pushing the SignIn scene.\nActions.SignIn() is not defined at first. Looks like a race condition. . What's the status on this? Is there a simple workaround in the meantime? Really appreciate the work you guys put in. I'm using v4.0.5.. ",
    "ohaibbq": "@mikaelrosquist @compojoom I'm using redux to store the \"themes\" that I fetch from the server. The easiest way I found to do dynamic navigation bar styles to just create a wrapper component.\n```js\nimport React, { Component } from 'react';\nimport { NavBar } from 'react-native-router-flux';\nimport Variables from 'market/app/styles/base';\nclass CircllyNavBar extends Component {\n  render() {\n    return (\n      \n    )\n  }\n}\nexport default CircllyNavBar;\n```\njsx\n<Scene key=\"search_form\" title=\"Search\"\n    component={SearchForm}\n    navBar={CircllyNavBar} />. @mikaelrosquist No problem. One other thing I found interesting (as I'm new to React), was that you can set the default props of a RNRF Scene by using the defaultProps class property of a React Component.\n```js\nclass Scene extends RNRFScene { }\nScene.defaultProps = {\n  navBar: CircllyNavBar\n};\n```. Hi @BrendanBerkley, I believe you're correct.\nI think you were confused as README2.md is the README for v2.x.x of RNRF. Perhaps a pull request to rename README2.md to something like README-FOR-v2.md would be good.. Hi @mykelaballe, from what I've seen, the way to do this is use the refresh action with custom scene props.\ne.g.\n```js\ncomponentWillMount() {\n   Actions.refresh({ onLeft: this.onLeft.bind(this)  });\n}\nonLeft() {\nif(saved) { Actions.pop(); } else { alert(); }\n}\n```. +1\n@JCDJulian @shwetachoudhary06 Do either of you know if this behavior recently started occurring? Was it working in past releases?. I've been digging into this. My scene schema works with v3.36.0. It seems that #1312 reverted functionality that made this work, since there were some other bugs that were introduced by #1057.\nI'll see if I can figure out what issues there were with #1057 & add this functionality back to RNRF.. Just submitted a PR, hopefully it gets merged soon. Waiting for feedback there.. Hi @pbassut, the RNRF way is to use the passProps flag on the parent.\nI, however, don't really like that approach. Instead, I just extend RNRF Scene\ne.g.\njs \nclass StyledScene extends Scene { }\nStyledScene.defaultProps = { sceneStyle: ... }\n. Tests pass locally, I'm not sure what the Jest error on Travis is.. thanks for the merge, @aksonov!. ",
    "vinalys": "Currently facing the same issue after upgrades (react-native 0.31, react-native-router-flux 3.33.2)\n. Sorry, it seems the answer is in this ticket:\nhttps://github.com/aksonov/react-native-router-flux/issues/1015\nnpm i -S babel-preset-react-native\nFixed this problem for me, can you try as well and let's close the ticket if it works.\n. ",
    "jcampbell05": "@vinalys I will have a go, weird though I would have thought I have the transforms already since I use ES6 and JSX.\n. ",
    "aaronhma": "My code is like this:\n'use strict';\nimport React, { Component } from 'react';\nimport { TextInput, View, Text, StyleSheet, Image, TouchableHighlight, ActivityIndicator } from 'react-native';\nimport buffer from 'buffer';\nimport authService from './AuthService';\nconst styles = StyleSheet.create({\n  container: {\n        backgroundColor: '#F5FCFF',\n        paddingTop: 40,\n        padding: 10,\n        alignItems: 'center',\n        flex: 1\n    },\n    logo: {\n        width: 66,\n        height: 55\n    },\n    heading: {\n        fontSize: 30,\n        margin: 10,\n        marginBottom: 20\n    },\n    loginInput: {\n        height: 50,\n        marginTop: 10,\n        padding: 4,\n        fontSize: 18,\n        borderWidth: 1,\n        borderColor: '#48BBEC',\n        borderRadius: 0,\n        color: '#48BBEC'\n    },\n    button: {\n        height: 50,\n        backgroundColor: '#48BBEC',\n        borderColor: '#48BBEC',\n        alignSelf: 'stretch',\n        marginTop: 10,\n        justifyContent: 'center',\n        alignItems: 'center',\n        borderRadius: 5\n    },\n    buttonText: {\n        color: '#fff',\n        fontSize: 24\n    },\n    loader: {\n      marginTop: 20\n    },\n    error: {\n      color: '#ff0000',\n      paddingTop: 10\n    }\n});\nexport default class Login extends Component {\n  constructor(props) {\n    super(props);\nthis.state = {\n  showProgress: false\n}\n\n}\n  render() {\n    let errorCtrl = ;\n    if (!this.state.success && this.state.badCreditials) {\n      errorCtrl = \n        That username and password combination did not work.\n      ;\n    }\n    if (!this.state.success && this.state.unknownError) {\n      errorCtrl = \n        We experienced an unknown issue.\n      ;\n    }\n    return (\n      \n\n\n          Github Browser\n        \n this.setState({username: text})}\n        />\n         this.setState({password: text})}\n          style={styles.input}\n          placeholder=\"Github Password\"\n          secureTextEntry=\"true\"\n        />\n        \n\n            Login\n          \n\n    { errorCtrl }\n\n    <ActivityIndicator\n      animating={this.state.showProgress}\n      size=\"large\"\n      style={styles.loader}\n    />\n  </View>\n);\n\n}\n      onLoginPressed(){\n        console.log('Attempting to log in with username ' + this.state.username);\n        this.setState({showProgress: true});\n    authService.login({\n        username: this.state.username,\n        password: this.state.password\n    }, (results)=> {\n        this.setState(Object.assign({\n            showProgress: false\n        }, results));\n\n        if(results.success && this.props.onLogin) {\n          this.props.onLogin();\n        }\n    });\n}\n\n}\nBut when I test it, it keeps giving me this error: authService.login is not defined.I do have a AuthService.js file like this:\nimport React, { Component } from 'react';\nimport buffer from 'buffer';\nexport default class AuthService extends Component {\n  login(creds, cb) {\n    let b = new buffer.Buffer(creds.username +\n        ':' + creds.password);\n    let encodedAuth = b.toString('base64');\n    fetch('https://api.github.com/user', {\n      headers: {\n        'Authorization' : 'Basic ' + encodedAuth\n      }\n    })\n    .then((response) => {\n      if(response.status >= 200 && response.status < 300) {\n        return response;\n      }\n      throw {\n        badCreditials: response.status == 401,\n        unknownError: response.status != 401\n      }\n    .then((response) => {\n      return response.json();\n    })\n    .then((results) => {\n      return cb({success: true});\n    })\n    .catch((err) => {\n      return cb(err);\n    })\n  })\n  }\n}\nIs there any errors?. ",
    "fgrs": "dope!\n. ",
    "FlaviooLima": "@sheparddw thanks for the reply :) , i already solved the problem, but from what you said i believe that i was doing this in the wrong way.\nAny way i'm gonna save what you said and when i have the chance i will try it :)\n. @vinayr  Yes, no problem.\nTo start the reason that this is happening is because overflow:\"visible\" doesn't  work in React-Native  Android.\nI advice to try to follow @sheparddw response  to solve the problem. but for reference i'm gonna try to explain what i did.\n1- So i render the right button in navBar as the docs says to do it ( renderRightButton={yourFunction()} ).\n2- Than i created a component as you usually create, and i call them in every view that i want the menu (don't forget to give the menu component position absolute or zIndex depending in what you desire ).\n3-in menu component i have a prop.showMenu that if true the menu Height is 560( this value can be anything you want) and if false the menu Height is 0.\n4- ok now the only thing that you need to do is to communicate between the button in nav bar and the menu component, in a way that when you click the button it opens/close the menu.\nfor this i use the Actions.refresh() where i pass the key of the component and the prop like this:\nActions.refresh({key: \"yourKeyName\", showMenu:true })\nthis is line of communication:\nnavbar (do the refresh function) ---> AnyViewWhereCOmponentIs --> menu component \nSo from navBar i refresh the view and pass the prop showMenu to that view as a prop, and in the view i pass again the prop showMenu that i received from the refresh to menu component as a prop, and than you open or close the menu.\nThis response is bad but i don't have much time to explain in a better way, later tonight i'm gonna try to edit and explain it better. In the meantime try to see if you understand what i did from what i said above.\nIf in the meantime you  have any question please post here, so later tonight i can respond.\n. @vinayr Hi, sorry for not reply any sooner, but unfortunately  i didn't had the time.\nDid you solve the problem ?\n. @wkwyatt have you tried @sheparddw and @edy  solution?\n:). Same here\n.  try\nonPress={()=>Actions.register()}\nif do not work try\nonPress={Actions.register()}\n. Try to do Actions.register() in any point of login, not when the button is pressed but for example after the initial render.\n. Do you have any other scene that works ?\n. Roger, but try the recommendations that me and @dragfire gave you, in my code they work.\n. Resolved by adding type={'replace'} to all scenes, i had a few of them without the \"type\", after i put in all of the scenes, it work like a charm. I will close for now, but because the error is not happening every time i cant be sure if this works. if later this happen again i will re open.. ",
    "edy": "After wrapping the Router with MenuContext  i got a white screen. The solution was to add {flex: 1} to the style property of MenuContext.\n. ",
    "wkwyatt": "@flaviotobi Would you provide some example code of your menu dropdown?  I have been trying to get this menu dropdown to work for a week now and I haven't been able to figure out how to display the dropdown or connect the redux actions to the nav button or the dropdown.  I know it's been some time since you posted but hopefully it would help out :). @flaviotobi I haven't, I didn't think to see if it was compatible with RNRF.  I guess the only way to know for sure is to try it. @adarshTS I tried something similar but the navigation bar would not render.  Did you do something special in the Router.js to get the custom navbar to render?. Thanks \ud83d\udc4d\ud83c\udffd I got it working!\nOn Mar 2, 2018 11:33 PM, \"Adarsh Sreeram\" notifications@github.com wrote:\n\n@wkwyatt https://github.com/wkwyatt I did this :  in the\nRouter.js file where NavBar is the custom navbar that I created and don't\nforget to import import NavBar from './components/NavBar';\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/aksonov/react-native-router-flux/issues/2125#issuecomment-370117194,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AMvu5J1ffyV37hFA1hB1mEW9isbUp0Tlks5tah0HgaJpZM4OlIsE\n.\n. \n",
    "RainThinks": "exactly what I am looking for. hope it can be merged soon. \nmy kudos to @wtfil \n. ",
    "sbefort": "I think I have the same issue.  I'm showing a spinner during scene transition while data is loaded from an API, and I do not want data to be displayed until the scene transition finishes.  Sometimes the data is displayed during scene transition and it causes frame rates to drop.\n. ",
    "DeDuckProject": "\nI can see that the stack depth is represented inside scene.key\nBut other than parsing the data myself to determine stack depth, I cannot see anything in the docs about it...\n. reviewing the code, I think the stack depth should be index, right?\nFor some reason it stays on 0 for me, even when I push other scenes on top of it... only the number inside the key changes... wierd?\n. my implementation to detemine stackDepth in my reducer:\n``` javascript\nimport { ActionConst } from 'react-native-router-flux';\nconst initialState = {\n    scene: {},\n    stackDepth: 0\n};\nexport default function routes(state = initialState, action = {}) {\n    switch (action.type) {\n        // focus action is dispatched when a new screen comes into focus\n        case ActionConst.FOCUS:\n            var stackDepth = parseInt(action.scene.key.replace(action.scene.sceneKey,\"\").replace(\"_\",\"\"));\n            return {\n                ...state,\n                scene: action.scene,\n                stackDepth: stackDepth\n            };\n    // ...other actions\n\n    default:\n        return state;\n}\n\n}\n```\n. I see this is still open. any workarounds for this? or we'll just have to live with the annoying warning?. setTimeout doesn't seem like a too bad solution. are there any issues with it?\n. Yeah i totally agree.\n. ",
    "onatm": "@cridenour can you give us a clearer version of the above example?\n. it seems like it is not working inside of Switch\n\ni found out that i should have defined key property while refreshing.\nmy scene structure is like:\n- root\n  - switcher\n    - login\n    - lobbies\nand this is the solution for adding a button to nav bar:\ncomponentWillMount() {\n    Actions.refresh({key: \"lobbies\", onRight: () => this.logout(), rightTitle: \"Logout\" });\n  }\n. @cridenour I wrote the solution on edited post. Should i create another issue and post the solution there?\n. @skyFi have you found any solution? I have same issue.\n. ",
    "veedeo": "waiting for npm release aswell and thanks for the feature\n. its what Im actually using right now, but I want a better integration with react-native-router-flux\n. I came up with quick workaround: create an empty PanResponder with onPanResponderTerminationRequest=>false and add it to MapView container\nSame code fixes this issue for all scrollable components placed into Scene\ncomponentWillMount() {\n    this._panResponder = PanResponder.create({\n      onPanResponderTerminationRequest: (evt, gestureState) => false,\n      onMoveShouldSetPanResponder: (evt, gestureState) => true,\n      onMoveShouldSetPanResponderCapture: (evt, gestureState) => true,\n    });\n  }\nrender() {\n    return (\n       <View {...this._panResponder.panHandlers}>\n        <MapView...\n. ",
    "tadas-subonis": "I will\nOn Mon, Aug 15, 2016 at 12:43 PM, Pavel Aksonov notifications@github.com\nwrote:\n\n@tadas-subonis https://github.com/tadas-subonis Are you going to fix\nerrors?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/aksonov/react-native-router-flux/pull/1050#issuecomment-239765348,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AAPFsk5LXBE2FJr7dFQ_NArStAWUzZE8ks5qgDSkgaJpZM4Ji5W_\n.\n\n\nKind Regards,\nTadas \u0160ubonis\n. Not sure what I can do about failing lint\n. ",
    "weixingsun": "drawerIcon. @Naoto-Ida I got the same issue.  how did you do that? remove the babelRelayPlugin?. ",
    "NachosSs": "Hi, have you find a workaround ?\nI have the same problem.\nThanks.. Thanks, downgrade to 3.37.0 resolve the issue.. ",
    "akshaygore06": "@aksonov :  I am facing the same issue with react-native-router-flux v4.0.4 but only on iOS.\nWhenever I am clicking on a back button, the navbar color changes from blue to white before going back to the previous scene.\n\n. ",
    "nicholeuf": "This feature would be very nice to have!\n. ",
    "cjadhav": "Hi\nfound any solution for this issue??\nI am facing same problem.\nI am unable to select other tabs to open when opening tabbar. Always {initial: true} tab loads.\n. ",
    "ihor": "It is hard to understand what is your problem. I implemented deep linking at work last week, and all I used was Actions[\"<scene key>\"].({ props }).\nI prepared an example which uses the same approach here. Here is my Router which handles open URL, and here are my scenes and URLs to scenes mapping.. I'm having the same issue but I want to display navBar on scroll.. Ok, I resolved this. It is called renderLeftButton now.. @shubham81407 react-navigation@1.0.0-beta.22 was released yesterday.. @Shariaty did you try to use the following dependency?\n\"react-native-router-flux\": \"git+https://github.com/aksonov/react-native-router-flux.git\". ",
    "ailinykh": "It should be something like this\njavascript\n<TouchableHighlight onPress={() => {this.drawer.close(); Actions.about();}}>\nCould you provide some source code for more details\n. @chrissm79 yes, it is. I got exactly same behaviour and i guess it should be proper way to resolve this using navigationState and dispatching appropriate actions. But unfortunately i have not enough time/knowleges to find a better solution than setTimeout\njavascript\n<TouchableHighlight onPress={() => {this.drawer.close(); setTimeout(() => Actions.about(), 500);}}>\nThis is not good solution, but it works\n. Hi @sudugo you can declare onRight as a static method of your Component.\njavascript\nclass MyOwnComponent extends Component\n{\n    static onRight() {\n        alert('Right button pressed!');\n    }\n}\n. The drawerImage property accepts only image path. It renders that inside an <Image> component.\nIf you want to use custom drawer icon component you need to provide renderLeftButton property.\njavascript\n<Scene \n    key=\"dashboard\" \n    component={Dashboard} \n    title=\"DASHBOARD\" \n    type='replace' \n    renderLeftButton={this.menuButton}\n/>\n. ",
    "garrettbland": "I found a solution to this issue. I used componentWillMount in the next scene and close the drawer from there.  Example...\ncomponentWillMount(){\n    Actions.refresh({key: 'drawer', open: value => !value});\n  }\n@wcwhitehead @ailinykh @DClark5218 @chrissm79 \nThe transition is super smooth and not clunky in the slightest\n. What does your router look like?\n. ",
    "Mifayo": "\ncomponentWillMount(){ Actions.refresh({key: 'drawer', open: value => !value}); }\n\nwhich version of router flux \nany solution for version 4.0.5. > tried fix with no luck, any other idea?\n\nI've noticed that the problem only happens if the scene is inside a drawer\n\nput how you build your route to see how it is . any updates ??. ",
    "dragfire": "Yes you can. But when you press BACK it won't go to tabbar 1. \n. Could you please attach a screenshot?\n. @hejiaji https://github.com/aksonov/react-native-router-flux/blob/master/docs/OTHER_INFO.md#tabbar\nThis works for me.\n. What do you mean \"when back\"?\n. Try this.constructor.displayName\n. May be you are looking for Actions.pop()\n. javascript\nthis.props.navigationState\n. Do I have to use redux/flux for this? https://github.com/aksonov/react-native-router-flux/blob/master/docs/REDUX_FLUX.md#reduxflux \n. Thank you @ArtemX9 \n. @ArtemX9 I've implemented the reducer as you suggested. Everything is working as I want but there is a warning: Component's children should not be mutated being thrown in the console.\nHere's my custom reducer:\n``` javascript\nconst reducerCreate = params => {\n    const defaultReducer = new Reducer(params);\n    return (state, action) => {\n    switch (action.type) {\n        case CustomActions.REMOVE_TWO_TABS:\n\n            let childrens = state.children;\n            childrens[1].children.splice(1, 2);\n            console.log('CHILDRENS:', childrens);\n            return Object.assign({}, state, childrens);\n        default:\n            return defaultReducer(state, action);\n    }\n};\n\n};\n```\nIs it a false-positive or am I doing something wrong?\n. Ok thanks!\n. Do like this Actions.Drawer() without {type: 'reset'}.\n. See this issue #1146 \n. Haven't done much on Android. Try this let's see if it works Actions.root({key: 'Login'})\n. on  Logout: Actions.root({key: 'Login', type: 'reset'})\n. Mine is working fine on iOS. IDK.\n. The problem is you have already reset the scene history stack after login so login scene is no longer in the stack, it is empty. And you are looking for a sceneKey which is no longer in the stack.\n. Try this Actions['register']()\n. Yes indeed.\n``` javascript\n// props: {status: 'complete'}\ncomponentWillMount() {\n      if(this.props.status === 'complete') {\n            Actions.refresh({ navigationBarStyle: {backgroundColor: 'green' }})       \n      }\n}\n. javascript\ncomponentWillMount() {\n    console.log(this.props) \n}\n// See the props, everything is there.\n```\n. then in that case do this \n``` javascript\nActions.pop({refresh: {...{hello: 'there'}}})\n// then \n// in your component's\ncomponentWillReceiveProps(newProps) {\n    console.log(newProps, newProps.hello);\n}\n```\n. when it rerenders,\njavascript\ncomponentWillReceiveProps(newProps) {\n    Actions.refresh({title: 'WhatEverYouWant'})\n}\n. I think this will be solved by changing it to { renderLeftButton(navProps) || renderBackButton(navProps)}\n. Have you considered componentWillReceiveProps\n. I think you have to remove some compiler flags from RCTWebsocket.\n. https://github.com/facebook/react-native/issues/8584#issuecomment-236366222\n. Hopefully that should fix it. \n. So if _someFunction() is in Login component then what you could do is:\n``` javascript\n{\n     Actiions.refresh({triggerSomeFunction: true});\n} } />\n// then in your login component\ncomponentWillReceiveProps(props) {\n     if(props.triggerSomeFunction) { \n             // Now you can do\n            this._someFunction();\n     }\n}\n. How about using a customReducer?\n. https://github.com/aksonov/react-native-router-flux/issues/1247 \nHope this will help.\n. I think you can't do like that. A quick solution would be:\n`onRight={ ()=>Actions.refresh({ product: true }) }`\nThen, in your `Product`'s `componentWillReceiveProps`\ncomponentWillReceiveProps (props) {\n    if (props.product) {\n        Actions.productEdit({ product: this.state.product });\n    }\n}\n```. ",
    "max-mykhailenko": "I almost got it with but actions profileWall, profileFollowers revert me to the previous page.\njsx\n      <Provider store={this.state.store}>\n        <Router>\n          <Scene key=\"loginScene\" title=\"Login\" initial={!token}>\n            <Scene key=\"login\" component={Login} title={_('Login')} />\n            <Scene key=\"restorePassword\" component={RestorePassword} title={_('Restore password')} />\n            <Scene key=\"TermsOfUse\" component={TermsOfUse} title={_('Terms of use')} />\n            <Scene key=\"signUp\" component={SignUp} title={_('Sing Up')} />\n          </Scene>\n          <Scene key=\"userScene\" tabs tabBarStyle={styles.tabs} initial={token}>            \n            <Scene key=\"friends\" icon={MenuIcon} component={Feed} title={_('Friends')} />\n            <Scene key=\"profileScene\" icon={MenuIcon} title={_('Me')}>\n              <Scene key=\"profile\" me component={Profile}>\n                <Scene key=\"profileWall\" />\n                <Scene key=\"profileFollowers\" />\n              </Scene>\n            </Scene>\n          </Scene>\n          <Scene key=\"profileSettings\" component={Settings} title={_('Settings')} />\n        </Router>\n      </Provider>\n. ",
    "worldlyjohn": "Actions.pop()\n. ",
    "basdvries": "I'm sorry but that's not what I meant. Navigating from let's say a pincode screen (only use once) to some activity screen would allow you to swipe or navigate back right now. PanHandlers={null} is a nice hack if it worked, but in 3.34 it doesn't. Removing it from the view stack would be much cleaner imo.\nGet Outlook for iOS\nOn Wed, Aug 17, 2016 at 10:01 PM +0200, \"John Brennan\" notifications@github.com wrote:\nActions.pop()\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub, or mute the thread.\n. ",
    "sudugo": "thanks ..that worked.\n. ",
    "mcavaliere": "FYI, I was seeing the same on the below setup, but in my case the scene component was undefined and I didn't realize it. So it might be useful to note that this error can happen in cases like this as well. \n\n\"react-native-router-flux\": \"^3.40.1\"\n\"react-native\": \"^0.45.1\"\n\nIn my case, I was calling the action directly, as in Action.signup() .\n. ",
    "lkag2000": "My entire screen with header moves down when I add drawer sidemenu. Where could be the issue?. My entire screen along with the header/title moves down by 2 cm or so, after i added the side menu on the title. Where could be the problem?. ",
    "remoteportal": "Has Actions.get() been deprecated as a method of Actions?  It's not listed in the API.\nWhen I try it I get:\n\n_reactNativeRouterFlux.Actions.get is not a function\n...  .get is undefined. Are there TWO different versions of Drawer?  Perhaps version 3 and version 4.  The version 4 API  doesn't mesh with many of these examples.. +1. \n",
    "chuyik": "Set backgroundColor: 'transparent' didn't work on Android, still shows a white background.\nAny ideas?. Yeah I wonder what action will be taken when React Native 0.43 released, but it seems like no one thought about this problem.. ",
    "sainthardaway": "Same here, tried to change it in navigationBarStyle and in NavBar.js\nhttps://github.com/aksonov/react-native-router-flux/blob/master/src/NavBar.js#L65 \nand still no luck\n+1. @getnashty  and @rshmiraf i guess, you need to define Schema itself\n<Schema name=\"modal\" sceneConfig={Navigator.SceneConfigs.FloatFromTop}/>\n<Schema name=\"default\" sceneConfig={Navigator.SceneConfigs.FloatFromBottom}/>. ",
    "norbajunior": "Did you guys solve that? I also have this problem.. ",
    "watadarkstar": "Same ^. @abdurrahmanekr @asokol Can we publish this into npm its still showing 3.39.1 as the latest https://www.npmjs.com/package/react-native-router-flux. ",
    "robbporto": "Hey, @aksonov, this is still not working here.. ",
    "mdmush": "Without using renderBackButton, \nyou can change the backButton icon and functionality by simply editing the core NavBar.js file located in ./node_modules/react-native-router-flux/src/NavBar.js\nChange this function in NavBar.js at Line 189 according to your need.\n```\n  renderBackButton() {\n    const state = this.props.navigationState;\n    const childState = state.children[state.index];\n    const BackButton = (childState.component && childState.component.backButton) || state.backButton\n      || childState.backButton;\n    const textButtonStyle = [\n      styles.barBackButtonText,\n      this.props.backButtonTextStyle,\n      state.backButtonTextStyle,\n      childState.backButtonTextStyle,\n    ];\n    const style = [\n      styles.backButton,\n      this.props.leftButtonStyle,\n      state.leftButtonStyle,\n      childState.leftButtonStyle,\n    ];\nif (state.index === 0) {\n  return null;\n}\n\nif (BackButton) {\n  return (\n    <BackButton\n      testID=\"backNavButton\"\n      textButtonStyle={textButtonStyle}\n      {...childState}\n      style={style}\n    />\n  );\n}\nlet buttonImage = childState.backButtonImage ||\n  state.backButtonImage || this.props.backButtonImage;\nlet onPress = childState.onBack || childState.component.onBack;\nif (onPress) {\n  onPress = onPress.bind(null, state);\n} else {\n  onPress = Actions.pop;\n}\n\nlet text = childState.backTitle ?\n  <Text style={textButtonStyle}>\n    {childState.backTitle}\n  </Text>\n  : null;\n\nreturn (\n  <TouchableOpacity\n    testID=\"backNavButton\"\n    style={style}\n    onPress={onPress}\n  >\n    {buttonImage && !childState.hideBackImage &&\n      <Image\n        source={buttonImage}\n        style={[\n          styles.backButtonImage,\n          this.props.leftButtonIconStyle,\n          state.barButtonIconStyle,\n          state.leftButtonIconStyle,\n          childState.leftButtonIconStyle,\n        ]}\n      />\n    }\n    {text}\n  </TouchableOpacity>\n);\n\n}\n```\n. ",
    "batuhan": "Are there any workarounds for this? I've just hit this bug as well.\n. ",
    "m860": "i hava the same problem , whta time can be fixed?\n. ",
    "twavis": "Same issue\n. ",
    "hcrub": "+1\n. ",
    "spltTrevor": "The documentation basically answers this already, with it's current implementation it only works correctly with scenes that have 'tabs={true}'. You can just set tabs to true for the parent scene and it works. So I don't think this is a bug since it is the intended purpose for this component to be used on tabs.\n\nNew feature for 3.x release is custom scene renderer that should be used together with tabs={true} property. It allows to select tab scene to show depending from app state. Add the prop \"unmountScenes\" to your switch scene if the tabs should be unmounted when switched. It could be useful for authentication, restricted scenes, etc. Usually you should wrap Switch with redux connect to pass application state to it: Following example chooses scene depending from sessionID using Redux:\n\n<Scene\n          key=\"root\"\n          component={Switch}\n          selector={() => { return \"scene2\" }}\n          tabs={true}\n        >\n          <Scene key=\"scene1\" component={scene1} />\n          <Scene key=\"scene2\" component={scene2} />\n        </Scene>\n. @mlevkovsky Adding tabs={true} fixes the original issue posted by @nschoen. The switch expected functionality does work with this. Also, when I console log the navigation state using tabs={true}, it does show all of the proper scenes (not just the first one), but @braco is correct in saying using the switch does nest these children further into a scene nested in the switched to scene. It puts Foo into Foo_.\n. ",
    "ptfly": "Guys, is there any way to recognize the requested scene within the Switch selector so I can decide weather to pass that scene (ex. it's public and don't require a valid user):\nSomething like this pseudo Switch selector code:\n` \nif(requestedScene.props.isPublic === true){\n    return requestedScene.key;\n}\n\nreturn props.user.data ? \"home\" : \"start\";`\n\nFor example, I'll have two buttons on start (Register & SignUp) which are public scenes and I'd like to render them.\n@aksonov, the lib looks very promising, thanks for sharing and for the effort supporting it!. ",
    "wuxushun": "i have the same problem, how to solve it?. I also have this problem, when you switch the TAB, can no longer scoll scrollview\n. i have the same issues\ncould you solve it?\n. i have the same problem. set marginTop and marginBottom,I solved it. ",
    "hector": "Same here. @proProbe I am having the same problem (number 1). How did you solve it?. Thanks @proProbe. I found what was happening. The modal is pushed on top of the scenes stack, so if you make it invisible it is actually there. So, you don't need to make it invisible or anything, just do this:\njavascript\nActions.pop();\nIn case you want to add some animation, like fadeOut, delay the action until the animation has finished, for example:\njavascript\nsetTimeout(Actions.pop(), fadeOutDuration);\nI also found a workaround if you do not want to pop your modal. You can change the css opacity of the view to 0 (it will make it invisible) and then add the prop pointerEvents='none' (which will make it not handle any touch). Anyway, I have the impression this solution would lead to some side-problems.. @aksonov I believe the modals example in the documentation is wrong. In case you agree, it should be updated with the procedure of my last comment.. @ryancoughlin I explained it above, but essentially you show the modal scenes with Actions.youModalScene() and hide it with Actions.pop(). There is no need to add conditions to show the modal or not, the router is already responsible for this.. I am sorry @ryancoughlin, I just posted my discoveries when trying to use this library but I don't really know its internals. I am sure the author @aksonov knows it better. ",
    "vnshgrg": "anyone found any solution yet?. ",
    "AdamTyler": "bump. ",
    "idris": "@charpeni did you ever find a solution to this?  I'm running into the same problem.  Navbar will not render if the Scene is wrapped in a Drawer because of DefaultRenderer\n. Nevermind.  I just noticed rnrf uses its own clone of the old NavigationExperimental\n. ",
    "inferusvv": "Checkout ignite framework: https://github.com/infinitered/ignite/tree/master/ignite-base/App/Navigation\n. Found workaround:\ncomponentWillReceiveProps(props) {\n    if (props.navigationState.open) {\n      this._drawer.openDrawer();\n    } else {\n      this._drawer.closeDrawer();\n    }\n  }\nIt should be inside Drawer component.\nBut it is not ok. Problem is that refresh calling in different time. Compare close/open callbacks and drawer component rendering with console.log. With Native and react-native-drawer order of logs will be different.\n. PR: https://github.com/aksonov/react-native-router-flux/pull/1392\n. @aksonov tests fails on __tests__/Example-test.js. It's ok or not?\n. @aksonov Looks like it is not so ease :) I will not do it inside this PR, but if I'll have a time, I'll create a new one.\nI found, that some other opened PRs also fails on that test.\nP.S. Also I want to add that locally test passes. But there is many warnings, which you can see in test details\n. @charpeni Ok, I'll do it. @charpeni Rebased. What about compatibility with old versions?. @zalesky I am looking for answer on this question :). Scenes can be swipe backward by default. Gestures API\nForward seems to be impossible out of the box. But when you press Home button - you don't close app. App just minimizing. Maybe Scenes should be declared like this:\n```\nimport {Actions, Scene, Router} from 'react-native-router-flux';\nconst scenes = Actions.create(\n  \n\n\n\n\n);\n/ ... /\nclass App extends React.Component {\n  render() {\n    return \n  }\n}\n``. @Dani93380 I don't know what share. I just want to preventActions['any_route']` somehow if it is called.. ",
    "anahitsk123": "Sorry, I fixed it. Seemed to be some unmet dependancy issue.\nThanks anyway \n. Hi YazhouMiao.\nAs I mentioned earlier, it was dependancy issues, so, if you still have that problem, use those versions:\n\"react\": \"~15.2.1\",\n\"react-native\": \"0.31.0\",\n\"react-native-router-flux\": \"3.35.0\"\nWith those versions it works for sure.\nHope this helps.\n. ",
    "YazhouMiao": "In my app this problem also happened.How did you resolve it? @charpeni \n. ",
    "fkoester": "Please see my proposed fix in PR https://github.com/aksonov/react-native-router-flux/pull/1093.\n. @charpeni Sure! Sorry, is fixed now. I also rebased against latest master.\n. @charpeni Fixed issue reported by eslint and rebased.\n. @aksonov Sure, done ;-)\n. I rebased against the latest master and added an entry to the API documentation.\n. ",
    "davidroman0O": "I have the same problem. \n- react-native-router-flux ^3.35.0\n- react-native ^0.31.0\nTransition on Android are REALLY REALLY slow and it cause a lot of bugs with input touches.\nI don't know why, i'm searching. If someone know better how to fix this, it could help a lot :)\n. @tomtang539 How did you figured it out? I got the same problem with passing params... :/. Still got the problem on 3.39.1 with RN 0.43.4.\nHope it will be fixed soon !. Ok, if someone find this.\nYou need to know that \"type\" is a reserved param.\nYou should change your naming! . Ok, in fact, when calling Actions.scene({ screenType: \"somestringtoswitch\" }) I don't have the params in this.props on the calling scene.\nI don't find why it's not working. I've update to the last react-router-flux and i still got the problem!. Forget. I've found my issue.\nI was wrapping the view inside another, so the props wasn't pass to the real child component.\nMy fault.. I would like too @aksonov  :p\nIt's a bit annoying that onEnter, onPop, onReplace & onPush don't work anymore.. ",
    "ja-ah": "i have checked with a real phone and everything works well. speed is very good.\nand now i am using genymotion samsung galaxy note 2.. speed is good. but when i turn perf monitor on. speed drops instantly .. i think there is issue with the debug mode.\n. ",
    "himanshusoni": "@ja-ah \ni am also facing similar issue. App is very slow on Android even on a real device.\nMy versions are :\n- react-native-router-flux ^3.35.0\n- react-native ^0.31.0\nI have built a prod version using\ncd android && ./gradlew assembleRelease\n. ",
    "cbrevik": "I see the same problem on Android. Both on emulator and device.\n\nreact-native-router-flux ^3.35.0\nreact-native ^0.37.0\n\nIt is dropping a lot of frames, and going down to 30-40 FPS. This is even while completely idle, does not have to be any transitioning, or any touch events.. Alright, I discovered what my issue was. \nI have a Login-component with an ActivityIndicator which is animating while doing some API calls. After the API calls have completed, I navigate to a new scene. I wasn't aware that components does not get unmounted when you navigate forward, and as such the ActivityIndicator was still running in the background even after navigating.\nIt seems like that animation made me drop a lot of frames on the new scene. Navigating to the new scene with something like Actions.newSceneName({ type: 'reset' }) to reset the stack (and unmount previous components) fixed it. \nIf you have the same issue and cannot unmount previous components, then just stopping the animations before navigating might fix it.. ",
    "MechanicKim": "I think it is correct.\nI tested it on Android and iOS and I confirmed that it is correct.. Thank you for your reply!\n2016-11-16 5:07 GMT+09:00 Lou George notifications@github.com:\n\nGreat fix! Thanks!\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/aksonov/react-native-router-flux/issues/1363#issuecomment-260752356,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ALlkFwmeP1GrKuwF4uxkJYYqkJdONSyOks5q-hD0gaJpZM4KuU9c\n.\n. Oh! Can I fix this issue?\nI just wrote this issue. I didn't fix it.. @joenoon \nI wanna help something as a person who uses this package.\nwhat can I do for it?. First, I'm sorry. I might not know the intention of this react native package well.\nTo build our application, we are using this package. I just felt strange about using navigation bar.\nFor example, some html form tags have their default prop values. If we don't change it, they keep the default value. I have been used to this way.. Yes! I totally understood your explanation that is so clear. ^^\nNo problem in our application. I just felt a little strange.\nIf I can contribute to this project in anyway, I hope to do it.\nThank you so much!\n\nHave a nice day.\n2016-11-25 1:28 GMT+09:00 Joe Noon notifications@github.com:\n\n@MechanicKim https://github.com/MechanicKim no need to be sorry! What\ndo you think about the rest? Does my explanation solve your issue or is\nthere still something that doesn't work for your app?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/aksonov/react-native-router-flux/pull/1406#issuecomment-262812686,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ALlkF8wg2iFLI3x1gdVPOXJtxm1usEoSks5rBbs8gaJpZM4K5JjC\n.\n. I already have a PR. And, I updated react packages to fix Jest Snapshots.\nCould you review my PR #1406 ?. About Update Eslint and Airbnb rules,\nDose this work include fixing style of all source codes or just updating the package?. @Swordsman-Inaction \nIf you use react-native < 0.38, jest version should be 17.0.3.\nMaybe you should fix jest preset.\n\"jest-react-native\" ---> \"react-native\". Okay I'll do that you commented.\nThank you for your review and comments. :-)\n\n2016-12-01 10:19 GMT+09:00 Nicolas Charpentier notifications@github.com:\n\nIn addition, these changes will need to be tested.\nIf someone can confirm that everything works well, unfortunately I can not\nbuild on mobile for now.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/aksonov/react-native-router-flux/pull/1425#issuecomment-264049988,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ALlkF4r_jSeGuMQ53VcnI_4aFOfvuDTsks5rDiCPgaJpZM4K85z3\n.\n. After fixing commented and testing, I confirmed that testing was successful!\nBut, I failed 'npm run jest'. I tried various version of react packages but I got an same error.\nSo, I registed an issue on Facebook/jest(https://github.com/facebook/jest/issues/2208).\n\nI found reasonable package version.\n- Ran jest and updated snapshot\n- Tested Example project. @charpeni I resolved your request. :-). Okay! I'll change and push again! Thank you :-)\n2016-12-05 8:24 GMT+09:00 Nicolas Charpentier notifications@github.com:\n\n@charpeni requested changes on this pull request.\nIn src/DefaultRenderer.js\nhttps://github.com/aksonov/react-native-router-flux/pull/1425#pullrequestreview-11305143\n:\n\n@@ -135,21 +135,21 @@ export default class DefaultRenderer extends Component {\n     }\n   }\n\n\ngetPanHandlers(direction, props) {\nreturn direction === 'vertical' ?\ngetPanHandlers = (direction, props) => (\n\nUnfortunately, the proposal for public class fields & static properties is\nonly at Stage 2.\nIt should be a static function with the keyword static, not an arrow\nfunction.\nSame thing on other methods.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/aksonov/react-native-router-flux/pull/1425#pullrequestreview-11305143,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ALlkF2ErTCWBTD6i_D8GAIMLSCw7Llffks5rE0uegaJpZM4K85z3\n.\n. @charpeni I resolved your request. :-). I tested example project on both platforms.\nWhen I go to the Login2, I get an error because this.props.data is not string.\nthis data is object.\nI will test it one more and I'll let you know when I finish it.\n\nThanks!. @charpeni I found that that is not a problem.\nWhen I go to Login page, send data to Login page.({data:\"Custom data\", title:\"Custom title\" })\nBut, when I go to Login2 page, don't send data to Login2 page. So, red screen is right.\nIf Xcode Build Configuration is 'Release', red screen is not shown.\nI tested iOS and Android project. :-). @charpeni Thank you!\nAs you know, when I press 'Go to Login page' in Launch.js, data is transmitted.\n<Button onPress={()=>Actions.login({data:\"Custom data\", title:\"Custom title\" })}>Go to Login page</Button>\nwhen I press 'Login 2' in Login.js, nothing is transmitted.\n<Button onPress={Actions.loginModal2}>Login 2</Button>\nBut, In Login2.js, it tries to access to data(this.props.data).\n<Text>Login2 page: {this.props.data}</Text>\n'this.props.data' is not undefined.\nSo, I think this error is intended.\nIf you want, I can fix the example project code.. @charpeni Today, I downloaded master branch and tested Example project.\nI got same red screen. Please check 'build configuration' in your Xcode scheme.\nIf this value is 'Release', you can't show red screen!. @charpeni Android is okay! On my branch, no error ^^\nWe can see a red screen on iOS Example.\nBut the red screen is right because 'this.props.data' is not transferred.\nBut only 'Debug' mode. If Xcode configuration value is 'Release', we can't see a red screen.\nTo solve this red screen, we can fix a line in Login.js like this.\nCurrent : <Button onPress={Actions.loginModal2}>Login 2</Button>\nFix : <Button onPress={()=>Actions.login({data:\"Custom data2\", title:\"Custom title2\" })}>Login 2</Button>. @charpeni \nI tested master branch and I confirmed that the results are same each other. :-). @charpeni I fixed Example project.\nI think you might able to understand my change.. I tested passing value(props) on Example project.\nI have no problem.\nI pass the value like this.\n{data:\"Custom data\", title:\"Custom title\", child: {data:\"Child data\"}}\nIn next page, I can get value from this.props.child.data.. Yes! I found the problem in 'Tab'.\nWhen I move to tab page, I can transfer a data but I can't in 'Tab'.\n. @DonnieWest  I have no objection about this fix.. I couldn't find any eslint errors on this file.\n\neslint src/Reducer.js\n\nCan you explain what error did you find and how did you find the error?. ",
    "danieladias": "@wildQueequeg is that the only thing we would need to do? \nI am a noob in reactive native but seems to be saying  I can't access refs in the refresh method. Is that possible?\nHere is a screenshot showing the error I am getting:\n\nVersions\n\"dependencies\": {\n    \"react\": \"15.3.1\",\n    \"react-native\": \"0.32.0\",\n    \"react-native-drawer\": \"^2.3.0\",\n    \"react-native-router-flux\": \"^3.35.0\",\n    \"react-native-vector-icons\": \"^2.1.0\"\n  }\nDrawer\n```\nexport default class NavigationDrawer extends Component {\ncomponentDidMount() {\n    Actions.refresh({key: 'drawer', ref: this.refs.navigationDrawer});\n}\nrender() {\n    const state = this.props.navigationState;\n    const children = state.children;\n    return (\n       Actions.refresh({ key: state.key, open: true })}\n        onClose={() => Actions.refresh({ key: state.key, open: false })}\n        content={}\n        tapToClose\n        openDrawerOffset={150}\n        panOpenMask={10}\n        negotiatePan\n        tweenHandler={(ratio) => ({\n          main: { opacity: Math.max(0.54, 1 - ratio) },\n        })} >\n        \n\n    );\n  }\n}\nNavigationDrawer.propTypes = propTypes;\n```\nButton\nrenderMenuButton() {\n    return (\n      <TouchableOpacity onPress={() => {Actions.get('drawer').ref.toggle()}}>\n        <Icon name=\"ios-menu-outline\" style={styles.navBarMenuIcon} />\n      </TouchableOpacity>\n    );\n  }\n. @alirezavalizade thanks for your help. I tried but still getting the same issue. As soon as I add the line Actions.refresh({key: 'drawer', ref: this.refs.navigation}); to componentDidMount I get the error.\n. @wildQueequeg thanks for your help. Tried with 0.31.0 but no luck. Still the same stateless functions error as soon as I add that line in componentDidMount in my Drawer.\nIf I just print the refs like this console.log(this.refs.navigationDrawer) I can access it fine. My problem is with refresh I think.\nI can also do this:\nthis.refs.navigationDrawer.toggle()\nin componentDidMount and the drawer opens at launch.\n. ",
    "DonovanCharpin": "@wildQueequeg Thanks it works \ud83d\udc4d \n. ",
    "jasmo2": "Until now it renders but doesn't open the drawer.\nI believe is something associated to the references but I'm not sure.\nrouter.js\n```\nimport React, { Component } from 'react';\nimport { Actions, Router, Scene } from 'react-native-router-flux';\nimport Dashboard from './components/dashboard';\nimport Home from './components/home';\nimport ViewCamera from './components/view-camera';\nimport Register from './components/register';\nimport SideDrawer from './components/sideDrawer';\nimport TabIcon from './components/tabIcon';\nfunction openDrawer() {\n  return ( {\n      Actions.refresh({ key: 'drawer', open: true })\n    }}\n  />);\n}\nclass RouterComponent extends Component {\n  render() {\n    return (\n      \n\n\n\n\n\n\n\n\n            {//}\n          \n\n\n    );\n  }\n}\nexport default RouterComponent;\n```\ncomponents/tabIcon.js\n```\nimport React, {\n  Component,\n  PropTypes,\n  StyleSheet\n} from 'react';\nimport {\n  Text,\n} from 'react-native';\nimport MaterialIcons from 'react-native-vector-icons/MaterialIcons';\nimport { Button } from 'native-base';\nimport { Actions } from 'react-native-router-flux';\nconst propTypes = {\n  selected: PropTypes.bool,\n  title: PropTypes.string,\n};\nclass TabIcon extends Component {\n  render() {\n    return (\n      \n\n\n\n\n    );\n  }\n  openDrawer = () => {\n    Actions.get('drawer').ref.toggle();\n  };\n}\nTabIcon.propTypes = propTypes;\nconst styles = {\n  navButton: {\n    alignItems: 'flex-end',\n    flex: 1,\n  }\n};\nexport default TabIcon;\n```\nsideDrawer.js\n```\nimport React, { Component, PropTypes } from 'react';\nimport {\n  BackAndroid,\n  StyleSheet,\n  Text,\n  View,\n} from 'react-native';\nimport { Drawer } from 'native-base';\nimport { DefaultRenderer, Actions } from 'react-native-router-flux';\nimport SideBar from './sidebar';\nconst propTypes = {\n  navigationState: PropTypes.object,\n};\nclass SideDrawer extends Component {\n  static propTypes = {\n    closeDrawer: React.PropTypes.func,\n    drawerState: React.PropTypes.string,\n  }\nconstructor(props) {\n    super(props);\n    this.state = {\n      animatingLoadingSpinner: false,\n      url: 'polls',\n    };\n  }\ncomponentDidMount() {\n    BackAndroid.addEventListener('hardwareBackPress', () => {\n      Actions.pollCreation();\n    });\n  }\nfinishSpinnerAnimation() {\n    this.setState({\n      animatingLoadingSpinner: false\n    });\n  }\nstartSpinnerAnimation() {\n    this.setState({\n      animatingLoadingSpinner: true\n    });\n  }\nnoServerConnection() {\n    return (\n      \n No es posible la conexi\u00f3n con Nuestros servidores \n\n    );\n  }\nrender() {\n    const state = this.props.navigationState;\n    const children = state.children;\n    console.log((Poll) url: ${this.props.url});\n    return (\n      \n (this.drawer = ref)}\n          type=\"overlay\"\n          tweenDuration={150}\n          content={\n             {\n                this.drawer.close();\n         }} />}\n          tapToClose\n          acceptPan={false}\n          openDrawerOffset={0.2}\n          panCloseMask={0.2}\n          styles={{\n            drawer: {\n              shadowColor: '#000000',\n              shadowOpacity: 0.8,\n              shadowRadius: 3,\n            },\n          }}\n          tweenHandler={(ratio) => {  // eslint-disable-line\n            return {\n              drawer: { shadowRadius: ratio < 0.2 ? ratio * 5 * 5 : 5 },\n              main: {\n                opacity: (2 - ratio) / 2,\n              },\n            };\n          }}\n          negotiatePan\n          onOpen={() => Actions.refresh({ key: state.key, open: true })}\n          onClose={() => Actions.refresh({ key: state.key, open: false })}\n        >\n          {//}\n      <DefaultRenderer navigationState={children[0]} onNavigate={this.props.onNavigate} />\n    </Drawer>\n  </View>\n);\n\n}\n}\nlet WEBVIEW_REF = 'webview';\nconst BGWASH = '#F6F6F6';\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: BGWASH,\n  },\n  addressBarRow: {\n    flexDirection: 'row',\n    height: 10,\n  },\n  errorBody: {\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  navButton: {\n    alignItems: 'flex-end',\n    flex: 1,\n  },\n  navText: {\n    fontSize: 18,\n  },\n  navTextContainer: {\n    alignItems: 'center',\n    flex: 8,\n    justifyContent: 'center',\n  },\n});\nSideDrawer.propTypes = propTypes;\nexport default SideDrawer;\n```. Yes I did.\nhere is how I solve it:\nstackoverflow answer \nI case you don't understand comment on stackoverflow. I found the solution:\nissues/460. ```\nconst styles = StyleSheet.create({\n  backButton: {\n    tintColor: 'white'\n  }\n})\n// ...later\n\n```. @cridenour  this is the implementation:\n```\n (true)}\n        leftButtonIconStyle={leftButtonIconStyle}\n        navigationBarStyle={navStyle}\n        titleStyle={titleStyle}\n        schema='withoutAnimation'\n\n\n\n\n\n\n\n\n\nconst styles = StyleSheet.create({\n  leftButtonIconStyle: {\n    tintColor: colors.blueSeamos,\n  },\n  navStyle: {\n    backgroundColor: 'white',\n    paddingTop: 25,\n    height: 100\n  },\n  titleStyle: {\n    color: colors.blueSeamos,\n  }\n});\n. @cridenour thats not the problem\nhere is the another part that shows:\nrender() {\n    const {\n      leftButtonIconStyle, navStyle,\n      titleStyle\n    } = styles;\n    return (\n        ...\n   )\n}\n. here is the full file\nimport React, { Component } from 'react';\nimport { Dimensions, Platform, StyleSheet } from 'react-native';\nimport { Router, Scene, ActionConst } from 'react-native-router-flux';\nimport CameraIcon from './components/cameraIcon';\nimport ExitButton from './components/exitButton';\nimport Dashboard from './components/dashboard'; //eslint-disable-line\nimport Debates from './components/debates'; //eslint-disable-line\nimport GraphResults from './components/graphResults';\nimport Home from './components/home';\nimport IntroPage from './components/introPage';\nimport IndexLoading from './components/indexLoading';\nimport PollsListResults from './components/pollsListResults';\nimport Register from './components/register';\nimport SideDrawer from './components/sideDrawer';\nimport TabIcon from './components/tabIcon';\nimport ViewCamera from './components/view-camera';\nimport { colors } from './utils/colors';\n// const { height, width } = Dimensions.get('window');\nfunction openDrawer() {\n  return ();\n}\nfunction backToCamera() {\n  return (< CameraIcon color='white' />);\n}\nfunction exitButton() {\n  return ();\n}\nclass RouterComponent extends Component {\n  render() {\n    const {\n      leftButtonIconStyle, navStyle,\n      titleStyle\n    } = styles;\n    return (\n       (true)}\n        leftButtonIconStyle={leftButtonIconStyle}\n        navigationBarStyle={navStyle}\n        titleStyle={titleStyle}\n        schema='withoutAnimation'\n      >\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    );\n  }\n}\nconst styles = StyleSheet.create({\n  leftButtonIconStyle: {\n    tintColor: colors.blueSeamos,\n  },\n  navStyle: {\n    backgroundColor: 'white',\n    paddingTop: 25,\n    height: 100\n  },\n  titleStyle: {\n    color: colors.blueSeamos,\n  }\n});\nexport default RouterComponent;\n```. @cridenour I don't know how to style that kind of element.\nThere are no examples...\n. If I remove the image the nav elements take their usual places. just change what you wrote me but still the same issue\n\n;(. Will try and let you know. ",
    "zianwar": "I have exactly the same issue, \nActions.NAME is not working, and when I console log Actions.NAME() it prints undefined.\n\"react\": \"^15.2.1\",\n\"react-native\": \"^0.31.0\",\n\"react-native-router-flux\": \"^3.35.0\",\n. @fmmajd I solved this issue by dispatching the Action.NAME from the store rather than invoking it with Actions.NAME()\nTry this: \ndispatch(Actions.NAME)\n. ",
    "fmmajd": "so I found the solution, and apparently, we can Actions.go to scenes that are not the current scene's sibling. so in my case, I have to use Actions.tabsRoot.\nis there a workaround? is it gonna be added? I think lots of people would appreciate if it was added. \ntnx\n. @Zianwar I actually don't want to complicate my app by adding reducer to routes.\n@lynndylanhurley you can't use Actions.SCENE_KEY to go to a scene that is not current scene's sibling. the two scenes should have the same parent. so in my case, I can't use Actions.home, but I can use Actions.tabsRoot\n. @juanpasolano in your case, I do not know. I just needed one scene and thus I made it initial.\nbut something I can think of for your problem, is that you add a scene in drawers, make it initial, and based on props decide which scene to go.\nlike: \njavascript\n<Scene key=\"decide\" component={Decide} title=\"goSomewhere\"/>\nand then in Decide component constructor:\njavascript\nlet target = this.props.destination;\nif(target === 'profile')\n  Actions.profile({type:'replace');\nelse if(target === 'workspace')\n  Actions.workspace({type:'replace');\nand finally, when in other components you wanna come to drawers scenes:\njavascript\nActions.drawer({destination: 'profile');\nActions.drawer({destination: 'workspace');\nthis is not the perfect solution, it's just a workaround, but it should work.\n. ",
    "tukunangonehub": "any update for this issue?. ",
    "L-Jovi": "@charpeni  hi, how should I pop to the top level component now,\nI try to use Actions.login({ type: 'popTo' }) but failed :(\nthanks for your time.. @nomoreboredom thanks for your reply,\nand I encounter 404 page not found from your link :(. @nomoreboredom  thanks again :). ",
    "Adjective-Object": "If you're trying to return an empty object you need to do \n```\n    create: () => ({}),\n````\ncreate: () => {}, is an empty function scope that does not return, and so returns undefined\n. ",
    "frankandrobot": "+1\nNotice that you're setting \"initial=true\" on the Root... which is probably not intended.\nHowever, I am getting the same error trying to run the Example in the mini-tutorial (where initial=true is set on the first child scene).\nUpdate: I'm using the latest react-native:   \"react-native\": \"0.31.0\"\nUpdate: for me it looks like a JSX issue. The code below started to work once I added React as a dependency:\n``` javascript\n// routes.js\nimport React from 'react' // breaks if you comment this out\nimport MyFlightsContainer from '../flights/MyFlightsContainer'\nexport const mainRoutes = [\n  {\n    id: 'My Flights', title: 'My Flights', component: MyFlightsContainer\n  }\n]\n//app.js\nconst App = () =>\n  \n\n      {mainRoutes.map((route, i) =>\n         )}\n    \n\n```\n@luisfpinto  if you take out the initial property on the root, it should probably work.\n. +1 \nSeeing the same issue. Using\n\"react-native\": \"0.31.0\",\n \"react-native-router-flux\": \"^3.35.0\"\n@ThaJay you don't need a 1000 ms delay. If you use 0, it works as well.\n. How can it be the wrong use case to hook this up to a drawer? This is likely a bug\nThanks!Uriel AvalosLead Developer ConsultantChander Dhall, Inc\n     ---- On Fri, 02 Sep 2016 07:47:05 -0500  notifications@github.com  wrote ----same here, spent some time to figure out that  setTimeout(() => Actions.SCREEN(), 0) is a solution, butl is it a wrong use case or a bug?  \u2014You are receiving this because you commented.Reply to this email directly, view it on GitHub, or mute the thread.\n. ",
    "zichong": "try this:\njavascript\n<Scene\n  component={CustomerCheckListView}\n  title=\"test\" rightTitle=\"confirm\" onRight={(scene, proxy) => {\n    scene.component.WrappedComponent.prototype.confirm();\n  }}\n/>\nand have confirm method in your component.. many developers call Actions.refresh() method in componentWillMount to override onRight/onLeft/onCancel method.\njavascript\nActions.refresh({rightTitle: \"foo\", onRight: this._save});\nu can refer to this issue: https://github.com/aksonov/react-native-router-flux/issues/634\nGiven current Renderer of Scene is stateless, I think this is the only way to get component context in onRight/onLeft method.\nsomeone said this workaround might have side effects like double render?? I haven't tested it since everything works fine and performance is not affected at all...\n. ",
    "suryaiiit": "scene.component.WrappedComponent.prototype.confirm() - worked, but the props of the component are not visible in the called component method, any suggestions!!. Thanks zichong.. ",
    "Mekonom": "Calling Actions.refresh({rightTitle: \"foo\", onRight: this._save}) method in componentWillMount  works but if in your app will you call Actions.NAME_SCENE this will cause  calling scene componentWillMount over and over \n. ",
    "seavan": "@aksonov I have exactly the same problem\n. ",
    "ddolheguy": "Yep I too can confirm this is a bug. Yep can also verify this is a bug in v3.36.0, rightButton works fine but leftButton doesn't get called.\n. Yes @dragfire you're correct.  Can we please close this issue as @dragfire comment is the solution. You should use this:\nActions.pop({ refresh: { test: true }})\nThis will POP the current view off the stack and refresh the previous with the props being passed.\n. In the component where you have the drawer do something like this:\n```\ncomponentDidMount() {\n   Actions.refresh({key: 'drawer', ref: this.refs.navigation});\n}\nrender(){\n        const state = this.props.navigationState;\n        const children = state.children;\n        return (\n            \n\n\n        );\n    }\n```\nThen in your component which you want to close the drawer do this:\nNavigation.Actions.get('drawer').ref.toggle();\nHope this helps :). @sarovin does this PR have anything to do with this issue https://github.com/aksonov/react-native-router-flux/issues/1110?. I'd like to ask the same question?. If you want the animation to come from the bottom up, you can do this:\n```\nimport { Scene, Actions, Modal } from 'react-native-router-flux';\n...\n\n\n\n\n\n```\nNote the direction=\"vertical\" which will cause the animation from bottom wrapped in the Modal component.\nHope this helps :). Ok I've solved this myself.  \nIt looks like a parent Scene cannot contain a component but instead house sub-scenes with components which makes sense. You need to override the \"renderBackButton\" on the Scene with a function which returns the back button.  NOTE:  Depending on your situation you might need to override the \"renderLeftButton\" instead of the back button with the same function.\n```\nconst renderBackButton = () => {\n    return (\n         {}}>\n            \n\nBack\n\n\n    );\n};\n            <Scene\n                key=\"editExpense\"\n                renderBackButton={() => renderBackButton()}\n                component={EditExpenses} title=\"My View\" />\n\n```. No it shouldn't re-render by default.  There are several ways to achieve this though.\n\n\nUse Action.pop({ type: ActionConst.REFRESH })\n\n\nUse the Action.pop({ somedata: 'result' }) with new props and the previous will re-render with the componentWillRecieveProps.. Sorry I figured out how to do this.  For anyone else, you can wrap like this \n\n\n<Drawer\n   ref=\"drawerLeftSide\"\n   ...>\n   <Drawer\n      ref=\"drawerRightSide\"\n      ...>\n      <DefaultRenderer navigationState={children[0]} onNavigate={this.props.onNavigate} />\n   </Drawer\n</Drawer. Hugely appreciate it.  It took a go myself but couldn't work it out.  Was hoping someone was able to get it working with ImmutableJS.. ",
    "hiyahin": "I have the same problem as @guimello too. ",
    "nomoreboredom": "I am experiencing the same issue described here, reset works only once in my case. When you define your scenes, use the property:\nanimationStyle={YourNavigationCardStackStyleInterpolatorFunction}\nwheareas your function should be something like: http://www.reactnativediary.com/2016/12/20/navigation-experimental-custom-transition-1.html. fixed now :)\n. ",
    "hszeto": "I'm experiencing similar issues.... version 3.37.0. ",
    "efratyo": "I am also facing this issue, reset will only work once. ",
    "Rhysjc": "Getting this on RN 0.38.0 RNRF 3.37.0. ",
    "remintz": "Any update or workaround on this? I'm having the same issue!. ",
    "agarcia17": "any update on this? I would too like to disable the 'receding back' animation of the scene. take a look at their renderTitle function and remove any animation they apply, then you can pass your custom renderTitle function. ",
    "Oblongmana": "+1\nIf this has limitations on the react-native version, those should be explicitly called out in the README\n. ",
    "acgourley": "I too would like a workaround if anyone has one, it's really annoying. . ",
    "selenarakowski": "I am also looking for a work around for this.. ",
    "brunolemos": "@veedeo if I use this, the listview doesn't scroll. Do you know a better solution to that?\ncc @asokol \nCreated #1253, possibly related but not duplicated. \n. @rseemann @aksonov  How to do that exactly?\nI tried this: Actions.popTo({ scene: 'myPage', myPropToUpdate: [1, 2, 3]});\nWhere myPropToUpdate is the new value I want the page myPage to refresh.\nBut the new prop is not arriving at myPage.\nI'm using the master branch.\n. Got it working!\nThe props must be in the refresh field and componentWillReceiveProps must be implemented.\nActions.popTo({ scene: 'myPage', refresh: { myPropToUpdate: [1, 2, 3] }});\nmyPage.js\ncomponentWillReceiveProps({ myPropToUpdate }) {\n    if (myPropToUpdate !== this.state. myPropToUpdate) {\n      this.setState({ myPropToUpdate });\n    }\n  }\ncc @rseemann \n. @YuriyUlantsev Sorry, tried your code and it didn't fix the issue.\n. @spreech I'm migrating from aksonov/react-native-router-flux to wix/react-native-navigation as it uses 100% native navigation and doesn't have this problems.\n. @aksonov cool that you are working on it, I think that's the way to go. I'll keep on eye on the project.\n. ",
    "oleolek": "Did panHandler={null} on Scene work for you here? In my case, I just needed to disable swipe up/down for modal\n. ",
    "AkiraXue": "add  NavBar Style change\n. merge commit in akiraXue patch\n. ",
    "linonetwo": "Can you release it on npm? Badly need it!\n. Maybe use type={ActionConst.RESET} or use polling\n. sorry @tuneZola I typo it, of course It 's type={ActionConst.RESET}. I updated my comment, thanks.\n. @MuffinWithJam I have tried tons of ways to get tab reload. Here are some worked workarounds for it:\n1. Actions.pop(); Actions.Tab#1(); // pop to main then reEnter the scene.\n2. move all the setUp work you want this tab to do to redux, in the reducer , watch ActionConst.JUMP, then do some setUp work you want. ( I finally use this one )\n3. use an intermediate page, ActionConst.PUSH to that page then do some setUp work, then pop and jump.\n. ",
    "maksim-harakhovich-itechart": "Hi @charpeni, I followed this doc https://facebook.github.io/jest/docs/tutorial-react-native.html#content.\n Comparing with the example - all looks the same.\nForgot to mention: Jest version is 14.1.0\n. ",
    "sharpred": "I had the same issue as Maksim, I compared my code with Example and saw that the test has\njest.unmock('Image');\nwhich I added and it fixed my issue.  Not quite sure why, but I did see that the error in NavBar.js is thrown at line 155 which is\nbackButtonImage: Image.propTypes.source,\n. ",
    "alphasp": "use drawerImage props.\n. one possible approach is you can show alert after u submit your form.\neg: \ndispatch(login(email, password)).then(() => {\n  const { error } = this.props;\n  if (error) {\n    Alert.alert('Error from SIGNIN');\n  }\n});\n. ",
    "Becherman": "Great! I will write a report when try this approach tonight!\n. ",
    "yoongeemin": "@alphasp Thanks. So the behavior I'm seeing is normal? I looked at a react native auth library called Snowflake, and it seemed like they were handling errors in the render as well..(in src/components/LoginRender.js) thought I was doing something wrong\n. ",
    "apoterenko": "It seems like this is reproduced in v4 :(. \n. ~Two days ago that was working fine.. Works fine with \nnode_js:\n  - \"8.10\"\nbut not with node 8.12v. ",
    "kwoumn3": "@apoterenko Did you ever find a workaround for this?. ",
    "timbielawski": "I have found that when pushing on the same component no life cycle events are called only render.\nSo I would check what is coming into render\n. Ok I found the issue \nMaybe the comment gave a clue :)\n// WARN: it is not working correct. rewrite it.\nfunction checkPropertiesEqual(action, lastAction) {\n  let isEqual = true\n  for (const key of Object.keys(action)) {\n    if (['key', 'type', 'parent'].indexOf(key) === -1) {\n      if (action[key] !== lastAction[key]) {\n        isEqual = false\n      }\n    }\n  }\n  return isEqual\n}\n. ",
    "igorlimansky": "same here, spent some time to figure out that \nsetTimeout(() => Actions.SCREEN(), 0) is a solution, butl is it a wrong use case or a bug?\n. ",
    "vehas": "+1\n. ",
    "raohuaming": "+1\n. ",
    "aminosman": "+1\n. I have this same issue, what I noticed was my events were being called on the parent scene. Let me know if you have figured anything else out.\n. ",
    "satthu565": "+1\n. ",
    "felagund18": "+1. ",
    "jaderYang": "I meet the same question. @dragfire\n\n. I run the example without changing any code, and only the 'MessageBar alert' responds to my click in the LaunchPage. There is something wrong with navigation.\n. ",
    "kachizukanne": "Thanks @charpeni \nWhen does the npm version get this update?\n. ",
    "jfo84": "Would love a new versioning for this, @aksonov. It's not optimal to pull it from Github \ud83d\ude04 Thanks in advance!\n. ",
    "zjaml": "+1, I'm having exactly a same confusion. Would only be natural  to include all child scenes into navigationState prop.  In that way side menu can be built directly from scene configuration. Drawer content switch will be easier too.\n. ",
    "josephan": "Thanks!\n. ",
    "MorDeCaii": "@linonetwo, i'm tryed to do the same, but after clicking on the tab, tab bar begins to show only the tab i clicked (like there is only one scene):\n<Scene key=\"main\" tabs tabBarStyle={{backgroundColor: 'white'}} tabBarSelectedItemStyle={styles.tabBarSelectedItemStyle}>\n    <Scene key=\"Tab#1\" title=\"Tab#1\" initial icon={TabIcon}>\n        <Scene key=\"Tab#1_1\" component={FirstView} title=\"Tab#1_1\" initial icon={TabIcon}/>\n        <Scene key=\"Tab#1_2\" component={SecondView} title=\"Tab#1_2\" icon={TabIcon} renderLeftButton/>\n    </Scene>\n    <Scene key=\"Tab#2\" component={ThirdView} title=\"Tab#2\" icon={TabIcon} initial type={ActionConst.RESET}/>\n    <Scene key=\"Tab#3\" component={FourthView} title=\"Tab#3\" icon={TabIcon} />\n</Scene>\n. ",
    "JohnAntonusMaximus": "@willyyang, what method are you calling to rerender your component if your flag evaluates to true in componentWillReceiveProps? Actions.refresh() doesn't seem to do anything, neither does the react-native API this.forceUpdate(). No, happens regardless of how long the debugger has been left on. Happens instantaneously when you turn debugger on and persists throughout debugger usage.\n. ",
    "anuragalla": "@juanpasolano i had similar problem using modal with drawer. I was able to reposition the scene using your solution. Additionally i cannot get the navigation bar to display in my modal. Is there any way to get the navigation bar to display\n. ",
    "colinramsay": "Also seeing this behaviour. Example:\n<Scene key='apply' component={ApplyWrapper}>\n  <Scene key='address' component={Address} />\n  <Scene key='mobile' component={Mobile} />\n</Scene>\nI think reason for the error is that ApplyWrapper is being passed the scene objects as children and doesn't know what to do with them. A possible solution in the wrapper is to map scenes:\nconst mappedChildren = this.props.children.map(scene => React.createElement(scene.component))\nThis is pretty horrible. I believe a custom renderer might also be a solution but the documentation around this isn't great. Either way it seems daft that ApplyWrapper would need to know about the router - it should just be rendering the component.. ",
    "AlanFoster": "Desired the same functionality with my scene setup as:\njs\nexport default (\n  <Scene key=\"root\" hideNavBar={true} component={Layout}>\n    <Scene key=\"login\" component={Login} />\n  </Scene>\n);\nSolution provided by Colin works with the following versions:\njs\n    \"react\": \"~15.4.0-rc.4\",\n    \"react-native\": \"0.40.0\",\n    \"react-native-router-flux\": \"~3.37.0\",\nAs an aside; Out of interest @afilp - what i18n library are you using within your React app?. As an update; I took a peek under the hood, and I saw DefaultRenderer being used by the Modal component etc, and it's exposed by react-native-router-flux. I was able to provide my wrapping Layout as:\n```js\nimport React, { Component } from 'react';\nimport { Text, View } from 'react-native';\nimport { DefaultRenderer } from 'react-native-router-flux';\nclass Layout extends Component {\n  constructor(props) {\n    super(props)\n  }\nrender() {\n    const children = this.props.navigationState.children;\n    const state = children[0];\nreturn (\n  <View>\n    <Text>Parent Layout</Text>\n    <DefaultRenderer\n      navigationState={state}\n      key={state.key}\n      {...state}\n      onNavigate={this.props.onNavigate}\n    />\n  </View>\n)\n\n}\n}\nexport default Layout;\n```\nI'm not sure if this is the intent of DefaultRenderer, however it is an alternative solution to @colinramsay's answer. ",
    "mariotacke": "I implemented it as you suggested @AlanFoster, but none of my TouchableHighlights work anymore. If I remove the Layout on my root scene, it all works.  Any idea where to look?\n. @axlider Did you have any trouble accessing the passed props in your children scenes? When I map them like you suggest, I lose access to them.. ",
    "axlider": "I had the same problem withe nested Scenes and solution of colinramsay worked for me as well:\n<Provider store={store}>\n        <Router>\n            <Scene key=\"root\" component={App}>\n                <Scene key=\"search\" component={Search} />\n                <Scene key=\"common\" component={Info} />\n            </Scene>\n        </Router>\n    </Provider>\nthat means (in my case) using:\n{this.props.children.map(scene => React.createElement(scene.component))}\ninstead of:\n{this.props.children}\nin {App}.\nI think it would be a good idea to mention this workaround in the docs as nested layouts are very common (drawers, sidebars...). E.g. i use it with react-elements sidebar.. no trouble. The nested components look like this:\n<SideMenu\n                isOpen={true}\n                menu={MenuComponent}>\n                <ScrollView\n                    toggleSideMenu={false}\n                >\n                {this.props.children.map(scene => React.createElement(scene.component))}\n                </ScrollView>\n </SideMenu>\nBut this is just what i can say about my initial view. I didn't try out any dynamic navigation yet.\n. How does it look like in your case (breaking scene transition animations)? \nWhen i open close the drawer in my nested sidebar example i cannot observe anything suspicous.\n. @petermikitsh \nAha. i do the same, but works fine.. ",
    "petermikitsh": "So I've tried out nested scenes using the workarounds mentioned here, but I wouldn't recommend it, since it seems to break scene transition animations.. @axlider All of my transitions were were rendering like REPLACE transitions.. ",
    "leonardgithub": "@colinramsay \nif use \n<Scene key='apply' component={ApplyWrapper}>\n<Scene key='address' component={Address} />\n<Scene key='mobile' component={Mobile} />\n</Scene>\nWhen I call Actions.address({buzzId: 1}) to push into the Address component, I can not get the buzzId by this.props.buzzId in the Address.\nDo you konw how to get the passed params?. @aksonov Can you check this?. @twksos My solution is similar to you.. ",
    "donovantc": "@leonardgithub having the same issue. Did you find a way to resolve to get the props passed on the Action call?. ",
    "torresomar": "@leonardgithub @donovantc have you looked at the data prop from your scene?. ",
    "iDay": "jsx\nconst ionicon = (icon) => Platform.OS == 'ios' ? `ios-${icon}` : `md-${icon}`;\njsx\nrenderBackButton={(nav) => {\n    return nav.navigationState.index ? (\n        <TouchableOpacity onPress={Actions.pop}>\n            <Icon name={ionicon('arrow-back')} size={26} color='#FFFFFF' />\n        </TouchableOpacity>\n    ) : null;\n}}\n. ",
    "haikyuu": "It didn't work for me when i had the renderBackButton in the root Scene.\nBut when i put it inside individual scenes, it works smoothly.\n. Here is a repo if you want to reproduce it locally https://github.com/haikyuu/rnrfBug\n\n. ",
    "ChrisPikul510": "I keep the \"router\" in a separate file...\nviews/index.js\nconst scenes = Actions.create(<Scene key=\"root\" hideNavBar >\n   <Scene key=\"loading\" component={Loading} title=\"Loading\" initial={true} />\n   <Scene key=\"login\" component={Login} title=\"Login\" type={ActionConst.REPLACE} />\n   <Scene key=\"main\" hideNavBar>\n      <Scene key=\"threads\" hideNavBar>\n         <Scene key=\"threadsList\" component={Threads} title=\"Threads\" initial/>\n         <Scene key=\"threadView\" component={ThreadView} title=\"Thread\" />\n      </Scene>\n      /* ... */\n   </Scene>\n   /* ... */\n</Scene>);\nexport default scenes;\nThen it get's imported in the root component\nimport Views from './views/'\nclass App extends React.Component {\n   render() {\n      return <Router scenes={Views} />\n   }\n}\n. ",
    "CoteViande": "\nIt should be top-level component.\n\n@aksonov also got the error, could you clarify what should be a top level component?\n. Hey! I used a 'reset' transition upon finishing my action which has the unhealthy side effect to remove (splice) my auth group, meaning that, while doing the next switch use, the auth group is not there anymore.\n. I have been experimenting with logs a little and apparently, upon switching to AppMain, it resets AppMain and not Auth.\nFYI, I'm logging the elements in resetHistoryStack function in Reducer.js. Upon switching from Auth to AppMain, it displays:\n09-16 04:19:11.635  3001 11903 I ReactNativeJS: 'RESET HISTORY STACK: ', '1_AppMain'\n09-16 04:19:11.635  3001 11903 I ReactNativeJS: 'RESET HISTORY STACK: ', '0_Home'\n09-16 04:19:11.635  3001 11903 I ReactNativeJS: 'RESET HISTORY STACK: ', '1_Profile'\n. No I do not think so. I can't trigger a ComponentWillUnmount on my RegisterEmail component after the Switch.\nIn addition, when I register, then log out and go back to the RegisterEmail scene, I get a navigationState.children[2].key\"scene_RegisterEmail_1_RegisterEmail\" conflicts withanother child!. https://github.com/aksonov/react-native-router-flux/blob/master/docs/API_CONFIGURATION.md#navigation-bar\nIs that good enough?\n. Did you try to add position: 'absolute', top: 0, left: 0, right: 0 to your header_container?. And you may also have to set a margin or padding top on your main content too. That's how I do it so I cannot help on the responsiveness of your navbar. Sorry.. Why do you have two scenes with key set to profile ?. Also, I would try with one switch and 3 sub groups with a (not so much) more complex switch condition.. With redux you can create a custom Middleware like such :\n```js\n// src/middlewares/onRouteChange.middleware.js\nconst onRouteChangeMiddleware = store => next => action => {\n  if (action.type === 'REACT_NATIVE_ROUTER_FLUX_FOCUS') {\n    doStuff(action)\n  }\n  return next(action)\n}\nexport default onRouteChangeMiddleware\n```\nDo not forget to return next(action) and also to link that middleware in your configureStore.js file.. I personally don't do it using a Loading scene but with a component that I plug into existing scenes, with a redux state parameter, as such:\n```js\n// customContainer.js\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport LoadingPage from 'app/src/components/general/LoadingPage'\nlet Container = React.createClass({\n  render() {\n    const { isLoading } = this.props\nif ( isLoading ) {\n  return (\n    <LoadingPage />\n  )\n}\n\nreturn(\n  <MyAwesomeComponent />\n)\n\n}\n})\nconst mapStateToProps = state => ({ isLoading: state.isLoading })\nexport default connect(mapStateToProps)(Container)\n```\nIf you wish to make it globally, I guess you could place your loading page in your App.js container like so:\n```js\n// App.js, inside the render() function\nif (isLoading) {\n  return \n}\nreturn (\n  \n\n\n\n)\n``. I do not get the difference between a loading page and a splash screen. I don't know if it is the best way, but it works for me ;). How do you update your database? How do you signal that the update is complete? What is in your LoadingScreen component?. When using some kind of redux devtools, isdbIsUpdating` changing as you expect it to? (true on initialization (as default) and set to false once done)\nAmong the things I would try:\n\nPlace the LoadingScreen on the top level of your App, where you render your router (so that we are sure that this white screen does not stop appearing as the home component mounts itself)\nTry to reduce your problem to a simpler one by:\nreplacing your updateDb function by a timeout of 2 seconds (async/await) (to make sure you would see your loading screen, then you can also check your devtools to see if the dbUpdated triggers at the right time)\nreplacing your LoadingScreen component with: \njs\n<View style={{ flexGrow:1, justifyContent: 'center', alignItems: 'center' }}>\n    <Text style={{ fontSize: 18, fontWeight: 'bold' }}>\n       LOADING\n     </Text>\n</View>\n\nAfter further analysis of my own app, I do have a white screen for a very short period of time (youTube does not), but I still have my loading screen for 1 second afterwards (while I update my store and set up my app). I am guessing that this is why you have bridges for react native splash screen\nI hope you are going to have better luck with those options.. No problem ;)\nIf you do try out react-native-splash-screen, please let me know how it went and if it does get rid of any white screen.. Maybe you can use a Modal on top of your Scene.. As far as I understand, there are 2 possible cases.\nOne, you want to add an element on top of your navbar, like an image, for, let's say, design purpose. Where the image/circle/shape is above the navbar. In this case I have no idea how to achieve it.\nTwo, you want to use the full screen for UI/UX. If you want to display just one thing in a Modal, full screen, it is gonna work. Such as the add friend to your group input in Messenger that pops above your conversations. So it blocks the content while it is visible then is set to visible: false and you can interract with other contents once again.\nCould you tell us more about what you want to achieve?. ",
    "ducduong": "I also have this issue, not all the times, but after some route change using Actions.key_of_route(). I have a socket waiting for some data from server.\nWhen the data comes:\n- the app to move to a screen\n- user does something in that screen\n- operation is done, app moves to another screen\nIt all works well, until the next event from the socket comes, the red screen shows up with: children[i].key conflicts with another child\nI would love to know the general idea what causes that issue so I can read throw the code and debug my routes.\nThanks.. ",
    "MadeInMoon": "I had the same pb, and fixed it by adding type={ActionConst.REPLACE} props to my Home scene, which triggers the \"go back to the initial scene\". )\nThis is surely not a suitable solution if an animation is needed when landing on the Home scene.\nSee this line in the official exemple. ",
    "Cucurrucho": "Hey, i'm having the same problem and it seems that removing the event handler with the componentWillUnmount method doesnt work with this library, did you find any other solution?\n. ",
    "yasheshkt": "@sarovin - Does this seem some issue with Router Flux?\n. @sarovin - Yes. I have issue in map when i use Map with Router Flux. Did you also face such issue? Like overlapping of one map on other? If yes, did you find some workaround that we could use?\n. ",
    "hubciorz": "@sarovin Could you please tell why did you close the issue? It seems that I am having a similar problem. Did you solve that?\n. Hi @aksonov \n\nMaybe when they renamed Experimental to 'stable' we could start migration.\n\nA few days ago an official RN roadmap was published. The bad thing is, based on the current version, I guess that the whole Navigator stuff is going to be deprecated someday (maybe sooner that we think). \nPlease check this out: https://github.com/facebook/react-native/wiki/Roadmap#user-content-core-libraries\n\nA new standard navigation library. Owners: skevy, ericvicenti. ETA: November\nRight now there are a large number of navigation libraries. We don't think one navigation library will be enough for every use case, but we do think we can make it better. The goal is for this new navigation library to be ideal for apps that handle navigation in JavaScript. Once it is released and stable, we can deprecate Navigator, NavigationExperimental, and ExNavigation.\n. As far as I know, there is also a PR here dannycochran/react-native-experimental-navigation#1 which patches the existing react-native-experimental-navigation clone used by react-native-router-flux in order to use the native driver\n\nCC: @aksonov @dannycochran\n. ",
    "keenltd": "@sarovin Hi, im using react native maps along with router flux. I have 4 tabs in my app. The 3rd tab is the map view. When I click on the 3rd tab and then back to the 1st or 2nd tab that map view will always show above the content of the 1st and 2nd tab. However It will never show above the 4th tab. Is this a similar issue to what you are experiencing?. ",
    "alexicum": "@chetstone mentioned: \n\nThe regression is apparently caused by d03e70b\n(#1057)\n\nUpdate already merged: #1236 \nPlease test latest master version.\n. Version 3.35.0 does not support passing props to tab routes.\n1057 and #1236 appends this functionality, but before official release you could test it by installing RNRF with:\nnpm install --save-dev https://github.com/aksonov/react-native-router-flux.git\nEDIT:\nnpm install --save https://github.com/aksonov/react-native-router-flux.git\n. Found description of this problem: \n\nclick one tab, and the other tabs disapear! #1233\n. @aksonov Fixed eslint errors, but tests failed: could you check what's wrong with them? \n. @charpeni I replaced in ..\\Example__tests____snapshots__\\Example-test.js.snap \n\"fontFamily\": \".HelveticaNeueInterface-MediumP4\",\nby\n\"fontFamily\": \"HelveticaNeue-Medium\",\nand \nnpm run jest -u\n\nreturned:\n\n1 test passed\n\nCould you explain it?\nShould I upload updated Example-test.js.snap ?\n. @ksti please test with Viewpager only.\nI did next test:\nsame Viewpager component on all tabs\nand Viewpager is scrolling on all tabs\nSo may be it is not scrolling only when both Viewpager and ListView are there...\n. @ksti Could you please share your sample?\n. Restoring 0.35 would return #1151 problem:\n\nWhen a tab is clicked, the new scene is shown, but now only the selected tab is shown in the tab bar\n. I can't reproduce problem.\nHere is my test.\nTestForm contains  <ListViewForm />:\n\nAfter tap between tabs ListView is scrolling:\n```\n// TestForm.js\nconst reducerCreate = params => {\n  const defaultReducer = new Reducer(params);\n  return (state, action) => {\n    console.log('ACTION:', action);\n    const res = defaultReducer(state, action);\n    return res;\n  };\n};\nclass MySample extends Component {\n  render() {\n    return (\n      \n\n\n\n\n\n\n\n\n\n\n    );\n  }\n}\n// ListViewForm.js\nexport default class ListViewForm extends Component {\n  constructor() {\n    super();\n    const ds = new ListView.DataSource({ rowHasChanged: (r1, r2) => r1 !== r2 });\n    const dataRows = Array.apply(null, { length: 30 }).map(Number.call, Number);\n    this.state = { dataSource: ds.cloneWithRows(dataRows) };\n  }\n  render() {\n    return (\n       {rowData}} />\n    );\n  }\n}\n```\n. > > However this commit breaks passing props to tabs.\n\n\nand \nRestoring 0.35 would return #1151 problem:\n\n\n@aksonov \nMay be it should be mentioned inside readme.md\n\n\nActions.ACTION_NAME(PARAMS) will call the appropriate action and params will be passed to the scene.\nExcept tabs. (Need help to implement params passing to tabs).\n. \n\n",
    "lukeggchapman": "I'm having the same problem, traced it to that line as well and couldn't get around it.\nHaving to use renderBackButton as a workaround.\n. ",
    "manishtuteja10": "@krishbhattacharyya - were you able to resolve the above issue ? I am getting the same error. :/. It worked for me. I followed the documentation below.\nhttps://github.com/aksonov/react-native-router-flux/blob/master/docs/REDUX_FLUX.md. ",
    "aesmon": "@manishtuteja10 @krishbhattacharyya  - Same issue. Did you guys find any solution yet?. ",
    "iossocket": "@mlevkovsky Hi, I meet the same problem, adding a badge from response. could you please share some example code? Thanks a lot.. @Amurmurmur Thanks a lot \ud83d\udc4d \ud83d\udc4d \ud83d\udc4d . ",
    "CasperMunk": "Under the API there's a function to override the gesture handlers: getPanHandlers \nhttps://github.com/aksonov/react-native-router-flux/blob/master/docs/API_CONFIGURATION.md#gestures\nExample: https://github.com/aksonov/react-native-router-flux/issues/1237. In the bottom there's a link to a working example.. ",
    "RajuPilani": "@charpeni  @sattaman  Why that's BackAndroid not work. Please help me.\n. thanks @sattaman that's works :+1: \n. ",
    "cuitianze": "I meet this issue when i click back button fast.. ",
    "Micjoyce": "I have two page, hom  --> detail, home (Actions.detail()) and detail(Actions.pop()) , If I click fast from home to detail and pop detail to home. At developing environment will get\n\nYou are already in the root scene. \n\nwhen I do release android apk.\nFast click will cause the app quit. \nIt is posiable to fixed this problem.. @Swordsman-Inaction  There is a demo for test, sounds work well.. ",
    "PeterRock": "I think you should use onExitApp for Router\nJust like sattaman did:. ",
    "vladar": "In case if you haven't seen it yet - check out https://github.com/r0b1n/rnrf-relay-renderer\nIt gives some insights on how to do it.. ",
    "leomar-developer": "Can anyone explain why when using \"unmountScenes\" on a tabs scene the TabBar is not rendered? the only way I have been able to make the TabBar appear is to not use the \"unmountScenes\" attribute. I'm using RNRF v3.35.0 and RN 0.35.0. ",
    "ujwal-setlur": "I am seeing this too. unmountScenes does not seem to unmount when the Switch is activated. Components seem to get unmounted later, almost a lazy unmount. . I am having this issue as well! An unmounted scene is getting remounted (but not displayed). I will try 3.37.0. Crap, 3.37.0 does not work with react 0.44. Any ideas? Maybe I can try to see the difference between 3.37.0 and 3.38.0 and apply that patch.... Took a quick look at the diff, and it's not so apparent. I will just have to work around this issue for now, though I am concerned what else is lurking, ie which other component would get mounted when it shouldn't...\nCan this please be addressed ASAP? Happy to help in testing.. react-native-router-flux is not a native solution. It's pure javascript, i believe. The author is working on a native version, but it only supports ios at this time.. Try removing initial from signin. Not sure if that will help. . Is there an alternative to using switch? I also see some cases when switch does not correctly detect that it needs to switch between scene sets.\nI do agree switch is a bit buggy. Is there a way the same can be achieved without Switch component?\n. Did you reset the cache?. Blow away the yarn.lock file and run yarn again. Or use npm install. . I did. It did not help. I essentially used your fork of the repo. I still see the issue. . That's interesting. Did you do this comparison with the same version of react-native-router-flux?\nGet Outlook for iOShttps://aka.ms/o0ukef\n\nFrom: Luke Miles notifications@github.com\nSent: Tuesday, May 16, 2017 5:02:48 PM\nTo: aksonov/react-native-router-flux\nCc: Ujwal Setlur; Author\nSubject: Re: [aksonov/react-native-router-flux] Scenes inside tabs (switch) getting corrently unmounted and then incorrectly re-mounted (#1870)\n(Also, this didn't start happening until we upgraded from React Native 0.42 to 0.44)\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHubhttps://github.com/aksonov/react-native-router-flux/issues/1870#issuecomment-301947902, or mute the threadhttps://github.com/notifications/unsubscribe-auth/AFkMXSc4c5q-TKjwV7uJ93zhEPiSpdR0ks5r6jkogaJpZM4NboZ4.\n. This does not fully resolve things for me. I am on RN 0.49.3, React 16.0.0-beta.5. PropTypes has been deprecated from React and moved to prop-types. This PR addresses some of this, but not completely. react-native-router-flux depends on an old version of react-navigation-experimental which also PropTypes from react. It needs to be get fixed there as well.. Thanks! Will check it out.\nOn Oct 24, 2017, 1:41 PM -0700, Davis Z. Cabral notifications@github.com, wrote:\n\n@ujwal-setlur #2541 address it - and also adds some performance improvements.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n. I think it should be all fixed now. @daviscabral , don't you need to change the import statements to import reactxp-experimental-navigation instead of react-native-experimental-navigation? For example, in Router.js:\n\nimport NavigationExperimental from 'react-native-experimental-navigation';\nI would imagine this import statement would have to change to reference reactxp-experimental-navigation.. Let me know if you need any help. I really want to move to react-native 0.49 and react 16, and this issue is stopping me :). @daviscabral This is not working for me. I took the latest from your dc-use-react-native-experimental-navigation-from-ms branch. I still get the following error: \n\nLooking at the code, it seems you are still importing \"PropTypes\" from react, and not prop-types?. Yay, it works with this now! Thanks!. @daviscabral it looks like react-native-experimental-navigation 0.28.0 uses React.PropTypes. That needs to be cleaned out as well. Bummer, so much cleanup work!. @aksonov thanks! I just forked the repo to make the changes. Glad I don't have to!\n@daviscabral can you update your branch to use 0.29.0? . @aksonov there were duplicate require statements in two files. I have fixed that and raised a pull request: https://github.com/aksonov/react-native-experimental-navigation/pull/32. Yes it refuses to build because of the duplicate require statements. Thanks!. @aksonov thanks for meeting my PR. How about this PR from @daviscabral. I have tested it and it works. @daviscabral needs to update it to use 0.29.1 of react-native-experimental-navigation. Thanks @daviscabral and @aksonov. Will there be a new release?\nAlso, @aksonov, how hard is the migration from v3 to v4? I use switch which I believe is not there in v4?. @daviscabral Oh, OK. I thought 3.42 was published before your merge.. @daviscabral @aksonov I just checked and 3.42.0 does not have this pull request. In DefaultRenderer.js:\nimport React, {\n  PureComponent,\n  PropTypes,\n} from 'react';\nWe need a 3.43.0 or 3.42.1. That was quick \ud83d\udc4d Thanks!. ",
    "markrickert": "I was going to reply here and ask how you solved this issue, then i realized you had tried hideBackImage={false} where it SHOULD be hideBackImage={true} or simply: hideBackImage.\njs\n<Scene key='myScreenWithNoBackButton' component={MyScreenWithNoBackButton} hideBackImage />\n. Thanks @lyoss this really helped. I hadn't thought to embed the right inside the left and everything else inside the right. I was trying to put the right drawer in as just a regular screen route.\nI really appreciate the time you took to put the answer together. I've got it working in my app.\n. ",
    "leocabral": "@AndrewHenderson hey!\ni've hacked this annoying behavior like this:\n<Scene key='myScreenWithNoBackButton' \ncomponent={MyScreenWithNoBackButton} \nhideBackImage  onBack={() => null}/>\nhope it helps you \ud83d\ude03 \nhave a good one!. ",
    "kazimmusani": "import { BackAndroid } from 'react-native';\ncomponentWillMount() {\n        BackAndroid.addEventListener('hardwareBackPress', () => {return true});\n }\n. ",
    "vnhnhm": "Use:\n```js\nimport { ... BackAndroid } from 'react-native';\ncomponentDidMount() {\n  BackAndroid.addEventListener('hardwareBackPress', () => { return true });\n  ...\n}\ncomponentWillMount() {\n  BackAndroid.removeEventListener('hardwareBackPress', () => { return true });\n  ...\n}\n``. Thanks @benvium, I haven't noticed it.. I've \"downgraded\" to\"^3.38.0\"`, and it has worked:\njavascript\n\"dependencies\": {\n    \"react\": \"16.0.0-alpha.6\",\n    \"react-native\": \"0.44.0\",\n    \"react-native-router-flux\": \"^3.38.0\"\n  },. ",
    "benvium": "@vnhnhm A quite note to say that your event handler won't be removed in the code you posted. You're creating a new instance of a closure and passing it to removeEventListener.\nWe use:\n```js\nconstructor(props) {\n  ....\n  this.handleBackAndroid = () => true;\n}\ncomponentDidMount() {\n  BackAndroid.addEventListener('hardwareBackPress', this.handleBackAndroid);\n  ...\n}\ncomponentWillMount() {\n  BackAndroid.removeEventListener('hardwareBackPress', this.handleBackAndroid);\n  ...\n}\n```\n. ",
    "taliasegev": "Hi,\nI happened to me too - \nFatal Exception: com.facebook.react.common.JavascriptException: undefined is not an object (evaluating 'e.children[e.index].sceneKey')\nPlease update us if there is a fix for this subjetct. I'm using \n\"react-native-router-flux\": \"^3.37.0\"\nThanks,\nTalia\n. ",
    "dmwallace": "I'm getting the same error.  It seems to be caused by triggering a scene change action on startup (e.g. showing a nag screen) before the scene object exists.  I have delayed the call until the router's onComponentDidMount function.  The only workaround I've found is delay the scene change using setTimeout\n\"react-native\": \"^0.35.0\",\n \"react-native-router-flux\": \"^3.36.0\",. ",
    "chmiguel": "i have the same problem. ",
    "pocesar": "@jsdario have you managed to solve this? no matter what I do, it always return to root. @Rayji96 how did you do this? I'm trying to create a custom tabbar, but the component won't receive the computedProps from the parent (hideNavBar, hideTabBar, isActive) . same thing. yes, on a Samsung J7, android 6.0.1 . my bad, I forgot I left \"Do not keep activities\" on \"Developers options\" turned on, on the device, it's fine now. . @win45 not that I'm aware of. although I'm using redux and redux-persist, and 'hacking' the createReducer to try to keep at least the minimal state required for the app to funcion. @win45 yes, after you leave the app or restart your phone, the state will be lost, the only way is to persist the current scene somewhere. try to do with nested Scenes, you'll understand the limitation of Actions.pop(). the API.md file is up-to-date? if so, I can hack together a functional typing really quick. but how to create dynamic menus inside the drawer then?. ",
    "kitsune7": "I got mine working great! You just need to have your initial scene's component redirect to the scene stored in redux. I do it in my componentWillMount function. I posted an answer on the stack overflow with more details.. I answered on stack overflow here: https://stackoverflow.com/a/43643282/3991628. ",
    "greenzeal": "kitsune7 please provide with link. worked for me also! thanks!. ",
    "Aldo111": "+1. I actually came here to report pretty much this behavior. Transitioning from a hideNavBar={true} scene to a hideNavBar={false} scene causes the nav bar from the hidden/original scene to briefly show before the new one is animated in. \nAny workarounds? It looks rather unwieldy. Is it something within the router or the Experimental navigator?\n. @binchik Unfortunately no. Although it was more for a lack of trying as I had to switch to another project, which I've been working on since. I'll likely revisit this soon but unfortunately I don't have anything for you at the moment. I believe there are some other navigation bars out there (look for react modules) that may circumvent this issue - although I think I didn't use them because their API/interface wasn't the best or most complete.\n. ",
    "binchik": "@Aldo111 Hi, I'm facing the same problem. Did you come up with a solution?\n. @Aldo111 I came up with a solution yesterday. Just nest your scenes with the weird navigation bar appearance animation into another scene like this:\njavascript\n<Scene hideNavBar key={'shop'} component={ShopScreen} />\n<Scene key={'checkoutFlow'}>\n  <Scene key={'cart'} component={CartScreen} title={'\u041a\u043e\u0440\u0437\u0438\u043d\u0430'} />\n  <Scene key={'checkout'} component={CheckoutScreen} title={'\u041e\u0444\u043e\u0440\u043c\u043b\u0435\u043d\u0438\u0435 \u0437\u0430\u043a\u0430\u0437\u0430'} />\n</Scene>\nThen push your scenes using the root scene's key.\n. @moiri-gamboni, in order to push I used the parent's scene key only. So to navigate to cart I just pushed checkoutFlow, without pushing the cart itself.. @moiri-gamboni sorry, didnt realize you wanted to push the checkout scene. No idea then :( I personally had a situation where the scenes would be pushed in a specific sequence.\nEDIT: I think wrapping the push to checkout inside requestAnimationFrame must do the trick.. ",
    "moiri-gamboni": "@binchik Hi, I'm also having the same issue. I'm trying to implement your fix, but I can't seem to figure out how to navigate from the parent scene to one of the sub-scenes. For example, from 'shop' to 'checkout'. Doing Actions.checkoutFlow() followed by Actions.checkout() doesn't seem to execute the second action and just goes to cart. If I use the reset or replace type on checkoutFlow it will navigate to checkout but without animation. I've tried setting the initial prop on checkout dynamically but to no avail. Any ideas?\nEDIT: Ended up using Switch for 'checkoutFlow' so I could choose the scene dynamically. ",
    "alexcurtis": "Yeah. I just add it at the root level (same as <Router/>).\n<View style={styles.application}>\n  <StatusBar barStyle=\"default\"/>\n  <Router/>\n</View>\n. ",
    "sadika9": "@alexcurtis  I've already tried it. When I wrap Router with a View it does not render at all (white screen)\n. @alexcurtis @coreyphillips Thank you\n. I did what  alexcurtis & coreyphillips said. ",
    "coreyphillips": "@sadika9 you're not going to want to wrap <Router/>. Notice in @alexcurtis' example the StatusBar component is self-closing <StatusBar barStyle=\"default\"/>\nTo expand on the previous example, you will want something similar to this:\n<View style={styles.application}>\n    <StatusBar />\n    <Router>\n        <Scene key=\"root\">\n        <Scene\n            key=\"firstComponent\"\n            component={FirstComponent}\n            title=\"First Component\"\n            initial={true}\n        />\n        <Scene\n            key=\"secondComponent\"\n            component={SecondComponent}\n            title=\"Second Component\"\n        />\n    </Scene>\n    </Router>\n</View>\n. @nonameolsson The error does not appear to be related to react-native-router-flux or redux. The error appears to be reporting that one of your variables is undefined in the App component. Based on the code snippet you provided I would check that the store variable is indeed defined. If it is, I would check other variables you may have in that component. Finding that rogue variable should fix your error.\nAlso, to add to my previous comment, you may need to add a flex: 1 style to the <View> wrapper (Ex. <View style={{ flex: 1 }}>) for it to properly render to the view.. If I understand this correctly, I would move this logic out of <Scene> and into the componentDidMount of the SignUp component. So that it looks like the following:\ncomponentDidMount() {\n    this.props.sessionID ? Actions.main() : false;\n}\nThe above example will navigate the user to the necessary view when within the appropriate component. Placing the logic in the <Scene> component as you initially proposed would risk the condition overriding the app and always direct the user back to the Main component.\nThe logic that you might want to consider inserting in the component where <Scene> is declared is the following:\ncomponentDidMount() {\n    if (!this.props.sessionID) {\n        Actions.signUp({type: 'reset'});\n        //Perform additional actions...\n    }\n}\nThis will re-route the user back to the SignUp component no matter where they are in the app if their sessionId has expired.\nHope this helps!. Here's a list of other lifecycle methods (https://facebook.github.io/react/docs/react-component.html). What exactly are you attempting to do?. ",
    "nonameolsson": "Thanks, very nice!\nBut when I use Redux and wrap my Router in a Provider I get an error. I'm not sure if it has to do with react-native-router-flux or Redux. What do you think?\n<View>\n        <StatusBar\n          backgroundColor='#303F9F'\n          barStyle='light-content'\n        />\n        <Provider store={store}>\n          <Router />\n        </Provider>\n      </View>\n\n. ",
    "QiquWong": "@sadika9 I also encountered this issue about white screen, how do you solve it?. ",
    "anhtuank7c": "add following code to your COMPONENTNAME\n```\nimport React from 'react';\nimport { TouchableOpacity, Text } from 'react-native';\nclass COMPONENTNAME extends React.Component {\nstatic renderLeftButton = (props) => {\n      return (\n          <TouchableOpacity onPress={() => console.log('onLeftPressed')}>\n              <Text>Left Button</Text>\n          </TouchableOpacity>\n      );\n}\n\nstatic renderRightButton = (props) => {\n      return (\n          <TouchableOpacity onPress={() => console.log('onRightPressed')}>\n              <Text>Right Button</Text>\n          </TouchableOpacity>\n      );\n}\n\n}\n```. Resolved:\n```\nimport { Actions } from 'react-native-router-flux';\nclass RingToneComponent extend Component {\n    static renderLeftButton = () => {\n        return (\n             {\n                    const { ringTone } = store.getState().timer;\n                    store.dispatch(TimerActions.backToTimer(ringTone));\n                }} />\n        );\n    }\nstatic renderRightButton = () => {\n    return (\n        <NavBarButton\n            title=\"Set\"\n            onPress={() => {\n                const { tmpRingTone } = store.getState().timer;\n                store.dispatch(TimerActions.changeRingTone(tmpRingTone));\n            }} />\n    );\n}\n\n}\n```\nFull source code: Clock app clone. ",
    "ttdat89": "You can do this\nScene duration={Utils.isIOS() ? transitonDuration(ms) : 0} />\n. ",
    "vojtechnovak": "I suppose this should work:\nlet otherProps = {name: \"frank\"}\n...\n<Scene key=\"home\" component={Home} title=\"Home Page\" initial={true} {...otherProps} />\nnow every scene should have a name prop\n. ",
    "sun2rise": "this would work but i need to change the props after some change in redux state..\nI would not 'connect' my main.js to redux making it a container\nwhat i am trying is this:\njs\n<Scene key=\"modal\" component={Modal}>\n    <Scene key=\"root\">\n      <Scene key=\"app\" component={App}>\n          <Scene key=\"home\" component={Home} title=\"Home Page\" initial />\n          <Scene key=\"page1\" component={Pictures} title=\"page1\" />\n          <Scene key=\"page2\" component={Music} title=\"page2\" />\n          <Scene key=\"page3\" component={Videos} title=\"page3\" />\n        </Scene>\n    </Scene>\n    <Scene key=\"loading\" component={Loader}/>\n  </Scene>\nand inside my App component in pseudocode\n``` js\nclass App extends Component {\n  render() {\n    let children = null;\n    if (this.props.children) {\n      children = React.cloneElement(this.props.children, {\n        myNewProp: 'coming_from_redux'\n      });\n    }\n    return (\n      \n        { children }\n      \n    );\n  }\n}\nexport default connect(mapStateToProps)(App);\n```\nbut i just cannot make it right.. am i doing something wrong? is there another way?\n. ",
    "Scimonster": "I was able to solve this with a componentWillMount handler as well:\ncomponentWillMount() {\n    this.componentWillReceiveProps(this.props);\n}\nCWRP is only called when the props change after it has been mounted, but here it's being mounted for the first time.\n. ",
    "tuxtux00": "Hi there,\nI was able to customize the transition by directly changing the animation in the file \nreact-native-experimental-navigation/NavigationCardStackStyleInterpolator.js \nbut this is not a good practice I guess.\nI also tried to duplicate the function into my own file and use the animationStyle prop but there was bug in the transition but I don't know if I missed something.\nIn the end I might fork react-native-experimental-navigation and use my own transition\n. ",
    "InterStelios": "@redbaron76 Great that works. Thanks.\n. ",
    "cjpwrs": "@redbaron76 Thanks, that was just that I needed for my project!\n. ",
    "codinronan": "@redbaron76 amazing how easily that works.\nFor any newbies reading that, RouterWithRedux is basically:\nconst RouterWithRedux = connect()(Router);\nThen you can create the component as he mentioned. You'll put it in place of your Router.\n. ",
    "stratospark": "I am seeing this with version 3.35.0\nIt works fine in iOS simulator, but very slow in android simulator (qemu).\n. ",
    "crisys11": "+1. ",
    "GeeWee": "+1. ",
    "JReinhold": "+1. this is still a problem with react-native-router-flux v0.39.1 and react-native v0.43.3. ",
    "codebymikey": "+1. ",
    "haibinyu": "I think you can just set duration={0} in \n. experiencing the same issue. \n. any new patch version for the fix?  IMO this is a critical issue.\n. ",
    "scerelli": "it works when you navigate to a certain scene but if it's a generic pop? passing duration: 0 doesn't work @charpeni \n. ",
    "monotv": "I am encountering the same problem with:\nUMI Touch / Android 6\n- react-native-router-flux v^3.35.0\n- react-native v^0.33.0\n- react-native-maps v^0.8.2\n. I think everyone is invited to add documentation :). It seems like Actions.popTo does not empty the history stack to the point of the popped to scene properly. The conflicting children that @martinarroyo is talking about are scenes that were pushed on the stack before using Actions.popTo to pop back to the targeted scene. They should not be in the history stack anymore.\nIt is almost as if only the index gets set by popTo and nothing else, because interestingly, the scene that gets shown after you try to navigate to a screen after using popTo and navigating from there again is the scene that you navigated first to before before calling popTo if that makes sense.\nSomething like this:\n\nIteration\n\nRoot -> SceneA -> SceneB (popTo(Root))\n\nIteration (we came from SceneB)\n\nRoot -> SceneC (does not show SceneC but SceneA from 1st Iteration here)!. ",
    "HonzaHK": "Hello,\nim not sure what do you mean by that, but maybe you are searching for this:\nActions.refresh({key: 'SCENE_KEY', ... }) \nwhich is an alternative to \nActions.SCENE_KEY()\n. I was facing this either, took me very long time to find solution.\nRight now, using context seems to be the best way to achieve redirect & close drawer: \n(i guess you want to call those two statements when selecting an item from the drawer)\n``` javascript\n}\n    .....\n\n    .....\n\n\n\nclass DrawerContent extends Component {\nonHomeSelected(){\n    const drawer = this.context.drawer;\n    drawer.close()\n    Actions.home()\n}\n\nrender() {\n    return (\n        <View>\n            <Text onPress={()=>this.onHomeSelected()}>HOME</Text>\n        </View>\n    )\n}\n\n}\nDrawerContent.contextTypes = {\n    drawer: React.PropTypes.object\n}\n```\nhope this helps you :)\n. ",
    "moaxaca": "I ended up doing something similar with a prop \nSideMenu.js\nclass SideMenu extends Component {\n  static propTypes = {\n    close: PropTypes.func.isRequired\n  }\nDraw.js\n```\nclass AppDrawer extends Component {\n  closeSideMenu() {\n    this._drawer.close()\n  }\nrender(){\n    const state = this.props.navigationState\n    const children = state.children\n  return (\n    <Drawer\n      ref={(ref) => this._drawer = ref}\n      type=\"static\"\n      tapToClose={true}\n      open={state.open}\n      onOpen={()=>Actions.refresh({key:state.key, open: true})}\n      onClose={()=>Actions.refresh({key:state.key, open: false})}\n      content={<SideMenu close={this.closeSideMenu.bind(this)}/>}\n      openDrawerOffset={70}\n      closedDrawerOffset={-3}\n      styles={drawerStyles}>\n      <DefaultRenderer session={session}\n                       navigationState={children[0]}\n                       onNavigate={this.props.onNavigate} />\n    </Drawer>\n  );\n} else {\n  return <Text>Invalid Session</Text>\n}\n\n}\n}\nThank you for the direction helped immensely!\n```\n. Unsure if this is the ideal way to do this but:\nActions.drawer()\nActions.refresh({ key: 'drawer', session: Session })\nWorks. Do certain Actions not allow the passing of props or is something more complex happening under the hood?\n. Saved me a headache!\n. To @peteychuk, @charpeni \nIf you guys need any help with documentation I've written a relatively complex app using your router. Also thank you for open sourcing it :) its been extremely helpful. \n. ",
    "kodatech": "Not sure if this is a good solution but works for me. In your components called from the drawer add this method Actions.refresh({ key: 'drawer', open: false }) to componentWillMount(). ",
    "ptah23": "Nevermind, i got it working with accessiblityLabel\n. ",
    "mmzoo": "As far as I can tell there is no accessibility label on the left and right buttons in the navigation bar. How did you manage to click on those?\n. ",
    "peteychuk": "It's good to use Actions global.\nBut in my opinion, it would be a good opportunity to get Actions from context for complex applications. I believe this to be a valid use case for context.\nFor example:\n```\n// components/MyComponent.js\nimport React, { PropTypes, Text, View } from 'react-native';\nimport { connect } from 'react-redux';\nimport Button from 'react-native-button'\nclass MyComponent extends React.Component {\n  static contextTypes = {\n    routes: PropTypes.object.isRequired,\n  }\nrender () {\n    const {routes} = this.context;\nreturn (\n  <View>\n      <Button onPress={()=>routes.login({data:\"Custom data\", title:'Custom title' })}>Go to Login page</Button>\n      <Button onPress={routes.register}>Go to Register page</Button>\n      <Button onPress={routes.back}>Go back</Button>\n  </View>\n);\n\n}\n}\nexport default MyComponent;\n```\n. @aksonov Agree. Documentation has been updated.\n. ",
    "alizbazar": "This is fixed in 3.36.0. Had the same issue.\n. How and in which use cases clone={true} should be used? I can't find any examples of this in the documentation. API CONFIGURATION page says \"see example\", but doesn't refer to anything.\n. I see, thanks. So now your question is a relevant one for me too: how to remove the old cloned scenes and prevent the route stack from continuing to grow.\n. Cool! That is a little confusing but I'll try \ud83d\udc4d  In my use case I'm navigating to a card which is in the middle of a sequence of N cards. From that card it should be possible to go to previous and next cards. I'd like to generate them dynamically and detach after navigating a few cards past.\nSo now I'm thinking if I should use the react-native-router-flux for this at all, or just create some custom navigator for this (leaning to this one).\nBut thanks for the tips!\n. I'm getting the same issue with react-native version 0.33.0 and react-native-router-flux 3.36.0 on iPhone 5s simulator. I would expect to return to the same subscene after navigating to a different tab and back (same as for.ex. Facebook app is operating).\n-Albert\n. I just tried with the current master and there the issue doesn't seem to exist anymore. \ud83d\udc4d\n. ",
    "florentdestremau": "My bad, took a more detailed look at the example.\n. ",
    "ddeanto": "I am having the same issue. The default blue burger icon is transparent png file in the codebase https://github.com/aksonov/react-native-router-flux/blob/master/src/menu_burger.png\nHowever, there doesn't seem to be a supported way to provide a tintColor to the drawerImage. (tintColor changes the color of all the non-transparent pixels to the tintColor). However, according to the docs, Navigation Bar only has a \"drawerImage\" prop, which only takes an image source and NOTHING else. \nOur problems would be solved if the Navigation Bar had a \"drawerImageStyle\" prop, or a \"drawerImageTintColor\" prop, or, even a way where we could pass in an entire Image tag.\nSorry if I am not making sense, I am a newbie. @MattyK14 barButtonIconStyle={{ tintColor: 'white' }} is not working for me. Can you paste a bit more of your code? Thanks!. @Mattk14 thanks! What is working for me is placing leftButtonIconStyle={{ tintColor: 'white' }} in the Scene with the drawerImage NOT placing barButtonIconStyle={{ tintColor: 'white' }} in <Router>. I am having the same problem, any update?. ",
    "jamielob": "I'm looking for the answer to this also.  It looks like the default is set at 30, but it also looks like setting a prop of gestureResponseDistance should override that. \nLooking at the code, I would expect the following to work:\n<Scene\n  key=\"gray\"\n  component={GrayScreen}\n  title=\"Gray\"\n  gestureResponseDistance=\"200\"\n/>\nThe same way that adding a direction prop works.\n. Ok, so I think one of the causes of this is currently because the version of react-native-experimental-navigation that RNRF uses is out of date.  @aksonov - any blockers for updating it?\nIn the meantime, anyone wanting to make this change globally as a temporary hack can go into their node_modules/react-native-experimental-navigation/NavigationCardStackPanResponder.js and change this line to something higher (e.g. 100).\n. @aksonov Thanks - happy to PR.  Can you tell me why we have to have a react-native-experimental-navigation fork and not just import from react-native?\n. @joeferraro I'm also seeing this - did you have any luck figuring out what was going on?\n. @joeferraro @Almouro - I've found that changing from \nonPress={Actions.otherScene}\nto\nonPress={() => Actions.otherScene()}\nhas removed with these errors.. I've just come up against this too. @zoharlevin - did you figure a workaround?. @zoharlevin - Ok, as with the solution I posted in https://github.com/aksonov/react-native-router-flux/issues/1328 I'm seeing the FOCUS event dispatched if I change from\nonPress={Actions.pop}\nto\n```\nonPress={() => Actions.pop()}\n. @zoharlevin Very strange - it's all working fine for me now, apart from switching between tabs which doesn't seem to dispatch the correct FOCUS action. . In case it helps anyone else, my versions are:\n    \"react-native-router-flux\": \"3.35.0\",\n    \"react\": \"15.3.2\",\n    \"react-native\": \"0.37.0\",\n    \"react-redux\": \"^4.4.5\",\n    \"redux\": \"^3.6.0\",\n```. ",
    "lukemiles": "I was struck by this issue as well and I wanted to share how I fixed it before a proper fix lands.\n\n\nI created a patch (attached here) that changes the sensitivity to 100.\n\n\nI added an install script to our package.json that applies the patch. Below is an example:\n\n\njs\n  \"scripts\": {\n    \"install\": \"git apply sensitivity.patch 2>/dev/null; echo Patched react-native-experimental navigation\"\n  }\nHope this helps someone.\nEDIT: Don't do this, see @ethan605 below.\n. Woof. Thanks for this, @ethan605!. This is happening to us as well. (Also, this didn't start happening until we upgraded from React Native 0.42 to 0.44). I think this behavior you're experiencing is a bug (see #1870). FWIW, this doesn't happen to us on React Native 0.42 so perhaps downgrading React Native to that before it's fixed in RNRF will help.. \"THANK U\". ",
    "ethan605": "Hi, I've found a (pretty simple) way to customize panHandlers without breaking any changes or hacking on react-native-router-flux forked react-native-experimental-navigation. It is tested with react@15.4.1, react-native@0.39.0 & react-native-router-flux@3.37.0. All you need is import and pass getPanHandlers to your Scene's props.\n```javascript\n/\n * @providesModule AppRouter.getPanHandlers\n * @flow\n \n * Custom pan handlers for react-native-router-flux\n * works with react@15.4.1, react-native@0.39.0, react-native-router-flux@3.37.0\n /\n// Use built-in NavigationExperimental comealong with react-native\nimport { Dimensions, NavigationExperimental } from 'react-native';\nimport { Actions } from 'react-native-router-flux';\nconst screenSize = Dimensions.get('window');\nconst {\n  Card: {\n    CardStackPanResponder: NavigationCardStackPanResponder\n  }\n} = NavigationExperimental;\nconst {\n  Directions: {\n    HORIZONTAL\n  }\n} = NavigationCardStackPanResponder;\nconst getPanHandlers = (props: Object) => {\n  let { scene } = props;\nlet direction = (scene.navigationState != null && scene.navigationState.direction != null)\n    ? scene.navigationState.direction\n    : HORIZONTAL;\n// By default, onNavigateBack() should be pop()\n  // but we'll try to obtain current scene's custom onBack method\n  let onNavigateBack = (scene.navigationState != null && scene.navigationState.onBack != null)\n    ? scene.navigationState.onBack\n    : Actions.pop;\n// Enlarge gesture response distance\n  let gestureResponseDistance = direction == HORIZONTAL\n    ? screenSize.width * 0.8\n    : screenSize.height * 0.5;\nlet customProps = Object.assign({}, props, { gestureResponseDistance, onNavigateBack });\n  return direction == HORIZONTAL\n    ? NavigationCardStackPanResponder.forHorizontal(customProps)\n    : NavigationCardStackPanResponder.forVertical(customProps);\n};\nexport default getPanHandlers;\n```\nPass it to your Scene:\n```javascript\nimport getPanHandlers from './getPanHandlers';\n...\n  \n...\n```. @robcalcroft this is also a pain in my project ;(\nThe point is, in my opinions, that the PanResponder configs object for NavigationCardStack (which is based for Scene components) is at the highest priority in the pans stack. I've try something similar to touches swallow to override the navigation card handlers but no lucks. It seems that we have to sacrifice some scenes' gestures to wait until such mechanisms.. @robcalcroft I've updated my snippets here. Hope it helps :). @heyman333 first of all at the moment of this issue, we were using RNRF's embedded NavigationExperimental, so there's no react-native-experimental-navigation imports.\nSecondly, my snippet works with specified react@15.4.2; react-native@0.40.0 & react-native-router-flux@3.37.0, so I doubt that it may break on newer packages.\nLastly, we've moved to use react-navigation for months, so sorry that can't help you out anymore. Hi @ChrisOHu, I've faced this problem. The point is you're wrapping a Router (Routes) inside another connected Router (RouterWithRedux = connect()(Router)).\nTo solve this, you can simply remove RouterWithRedux and connect your Routes with react-redux APIs: RoutesContainer = connect()(Routes). ",
    "robcalcroft": "@ethan605 great work that fixed #1474 . Still, would be nice to have a specific prop like backSwipeGestureEdgeRange @aksonov . @ethan605 Annoyingly this breaks my swipe rows using https://github.com/jemise111/react-native-swipe-list-view, any idea why this could be? I can drag them the tiniest bit but the seem to have too much resistance and won't allow me to open them, its directly related to including the pan responders in the code\nEDIT fixed it by changing the 0.8 value to be dynamic based on the scene \njavascript\nconst horizontalGrabFactor = scene.navigationState.name === 'sceneWithSwipeRow' ? 0.2 : 0.8;. @ethan605 I've actually found the code snippet I used works quite well, but I can see it not scaling very well! . @aksonov Could I get some help with this please, Im getting the same when I push open a modal. I've had no luck fixing this \ud83d\ude22 . Something like http://adrian-philipp.com/post/react-native-navigator-swipe-from-middle, not sure of the config I could use for this project?. ",
    "mcmatan": "NavigationExperimental is deprecated on RN0.44 +, any idea how to use it on later versions?. ",
    "heyman333": "@ethan605 \nHello. I am using versions RN@0.44 RNRF@3.38 React@16.0-alpha \nAnd your code does not work properly in my project :( \ncuz the RN@0.44 has no NavigationExperimental, I imported that from 'react-native-experimental-navigation'. can this cause problems?\n. I got workaround to solve this problem. \nIf you need to lengthen the swipeable distance. try the following\nPHASE 1\nfork a this Github repo and edit the code const RESPOND_POSITION_MAX_HORIZONTAL = 30; of NavigationCardStackPanResponder.js to the distance what you want.\nPHASE 2\nedit version information inpackage.json to your react-native-router-flux's dependency\nPHASE 3\nadd react-native-experimental-navigation to your package.json and Replace the download path with your repository like this \"react-native-experimental-navigation\": \"git+https://github.com/heyman333/react-native-experimental-navigation.git\"\nWhen you have done this, you can download the new repository of react-native-experimental-navigation. ",
    "mahlon-gumbs": "@compojoom  How are your scenes defined? I think your \"single view\" scene should be displayed via ActionConst.REPLACE so that it replaces the form. At that point, the back button would take the user back to list view.\nHope that helps.\n. Hmmm...try one of the following:\n- use type={ActionConst.REPLACE} on both createField and field. Drawback: You won't be able to jump back and forth between these two scenes by default.\n- OR try using Actions.popTo(\"fields\") from within the field component. Drawback: It's not in the overall configuration so the default behavior (from a back swipe gesture for example) would still navigate back scene by scene.\nI believe either of those will get you what you want.\nHope that helps.\n. Hi @compojoom. Sorry. I think I misunderstood the sequence you are trying to achieve. If you want to go forward\ncompanies -> company -> fields -> createField -> field\nand then backward\nfield -> fields -> company -> companies\nThen field is the only one that needs type={ActionConst.REPLACE}.\nThis should cause field to replace createField in the stack. In other words, when you navigate to field, your stack should look as follows:\ncompanies -> company -> fields -> field (createField has been replaced).\nYou won't need Actions.popTo(...) with this approach.\nI hope this is less confusing (since I misread your back sequence in the previous message).\n. Awesome! Glad you got it worked out.\n. ",
    "nazrdogan": "ok .I solved my problem. I need to bind function\n. ",
    "woody87": "Hi Mohamed,\nsame problem for me, solved in this way (I think was a shadow lag):\nconst getSceneStyle = ( props, computedProps) => {\n      const style = {\n          flex: 1,\n          backgroundColor: '#000000',\n          shadowColor: null,\n          shadowOffset: null,\n          shadowOpacity: null,\n          shadowRadius: null,\n      };\n      return style;\n};\n<Router scenes={scenes} getSceneStyle={getSceneStyle}  .......\nHope this works also for you!!!\nWoody. ",
    "aditiasap": "Hi @woody87 \nThat code didn't work for me. seems scenes function is undefined on me. Hope you please show how scenes function looks like.\nAnd why we need passing (props, computedProps) for getSceneStyle ?\nThanks.. ",
    "laeijebor": "Hi @charlesluo2014 - just stumbled on this. I don't have a fix but have just used a workaround, which was to give my modal absolute position attached to the bottom of the screen.\nFor example, a modal component and associated styles could look like the below. (NOTICE THE ABSOLUTE POSITIONING IN THE STYLESHEET):\n```jsx\nconst MyModal = (props) => (\n   { Actions.pop(); }}>\n\nmodal\n\n\n);\nconst styles = StyleSheet.create({\n  modalStyle: { \n    position: \"absolute\",  // LOOK HERE\n    bottom: 0, // LOOK HERE\n    left: 0, // LOOK HERE\n    height: deviceHeight,\n    width: deviceWidth,\n    backgroundColor: \"rgba(0,0,255,0.2)\",\n  }\n})\n```\njsx\n<Router>\n  <Scene key=\"modal\" component={Modal}>\n    <Scene\n      key=\"main\"\n      tabs\n      hideNavBar\n      component={MyMainView}\n    >\n      <Scene key=\"page1\" component={Page1}  title=\"Page 1\" icon={TabIcon} />\n      <Scene key=\"page2\" component={Page2} title=\"Page 2\" icon={TabIcon} />\n    </Scene>\n    <Scene\n       key=\"myModalView\"\n       component={MyModal}\n    />\n    .....\n  </Scene>\n</Router>\nNot very familiar with the source code for react-native-router-flux, but at first glance I think the issue might have something to do with the special treatment of TabBar Components in the supplied DefaultRenderer.. ",
    "dalcib": "Excelent. I was trying to solve this. Thank you.\n. ",
    "jankalfus": "Is there an issue? Can we merge pls?\n. @aksonov There is no reason why they should fail. I've changed two lines in a typescript definition file, nothing else. From the CircleCI report it looks like it ran test for a completely different commit.\n. ",
    "wcandillon": "@jankalfus @charpeni  Is it possible to have a new version of the package that publishes this change?\n. @charpeni thks a lot!\n. @franleplant I think it got fixed into master but they didn't release a new version of the package yet.\n. @charpeni done.. @charpeni Is this PR ok? . @charpeni @aksonov Any chance to merge this soon? Thank you for this great component.. @charpeni @aksonov ping ;-). @aiyidu Thank you for the solution.. Rolling back to 3.38.0 fixed the issue for me, thanks a lot guys!\n. ",
    "damir-sirola": "I did this by implementing scene icon component with TouchableWithoutFeedback wrapper.\nOn press I just did\nActions.myScreen({ type: 'reset' });\nsetTimeout(() => Actions.refresh({ key: 'myScreen' }), 10);\nThis is kinda hacky with setTimeout, but for some reason it didn't work without it (implemented few versions back).\n. Try Actions.refresh({ key: 'SCENE' });\n. Try calling Actions.refresh() after you set new title. I don't know if this is the best way to do it, but it works:\nInside of the component in which you want to have right navbar button put this code\ncomponentWillMount() {\n    Actions.refresh({ onRight: this.search, rightTitle: 'Search' });\n}. ",
    "joeferraro": "@sudugo I'm seeing the opposite behavior. My app is set up with 4 tabs:\na > a1 > a2\nb > b1 > b2\nc > c1 > c2\nd > d1 > d2\nIf I navigate to c2, then tap on d tab, then tap the c tab again, c2 pops automatically back to c1. I'd actually prefer it not pop back to c1. \n@aksonov is this configurable?\nedit: looks like https://github.com/aksonov/react-native-router-flux/issues/1275 is related\n. ",
    "ArtemX9": "@dragfire You have to write your own action and dispatch it. You also need to add action handling in you custom reducer.\n. You can import Reducer from react-native-router-flux, and implement it like this:\njavascript\nconst reducerCreate = params => {\n  const defaultReducer = new Reducer(params);\n  return (state, action) => {\n    switch (action.type) {\n      case '*YOUR_ACTION_NAME*':\n        ....manipulations with the state here....\n        return state;\n      default:\n        return defaultReducer(state, action);\n    }\n  };\n};\nand then call it this way: \njavascript\nACTIONS.*YOUR_SCENE_NAME*({ type: '*YOUR_ACTION_NAME*' });\n. @dragfire try to clone state.children before splicing, because splice mutates the original array. https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/splice\n. ",
    "hoangdoan267": "@dragfire I always have an error at const defaultReducer = new Reducer(params);\nit said undefined is not an object (evaluating ' _ref3.initialState) ? \nP/s: I want to change Tabbar title when pressing a button \n```\nimport { Reducer } from 'react-native-router-flux'\nconst initialState = {\n  tabStatus: \"VN\"\n}\nconst routerReducer = params => {\n  const defaultReducer = new Reducer(params)\n  return (state, action) => {\n    switch (action.type) {\n      case 'CHANGE_LANGE':\n        return {\n          ...state,\n          tabStatus: \"EN\"\n        }\n        break;\n      default:\n         return defaultReducer(state, action);\n    }\n  }\n}\nexport default routerReducer\n```. @SoldierCorp  Thanks for your great example. But how can I do if I want to use react-native-router-flux with redux? I stored the titles of tabs in my reducers.. ",
    "acruis": "Does that mean you can still swipe-to-go-back when passing null to panHandlers?\n. ",
    "Wuyue54": "same here. +1. ",
    "samfoot": "@brunolemos I also have the same issue with a listview in a modal scene. If you drag down slowly on the list it correctly scrolls the listview but if you scroll too fast it then starts to dismiss the modal.\nDo you have any workarounds at the moment?\n. ",
    "casoetan": "This should be easy.\nThis works for me. Notice the panHandlers\njsx\n<Scene\n      key='login'\n      component={LoginComponent}\n      panHandlers={null}\n      direction='vertical'\n      title='Login'>\n. ",
    "jacenko": "@casoetan This helped. Is there a way to still be able to swipe down on the header or a specific component in the scene to dismiss it?. Some troubleshooting steps:\n1) On import Welcome from '../containers/welcome' it would be best to have consistent casing (so import Welcome from '../containers/Welcome').\n2) Inside your Welcome component, make sure you're exporting Welcome (export default Welcome;)\n3) Make sure you have either class Welcome extends Component {...} or const Welcome = () => {...} or whichever fits your case, but with the correct spelling of Welcome.\n4) Make sure your file path is correct. Is it one folder up -> containers -> Welcome?\nAs @pluxain mentioned, since Router is a single element, the surrounding View is most likely not needed.. ",
    "jaronoff97": "I'd also like to know the answer to this please!\n. ",
    "BunHouth": "That's what i looking for too.\n. ",
    "hilkeheremans": "After some fiddling and looking around (see #1082), it seems you can use the following:\nnavigationBarBackgroundImage={{\n            uri: 'navbar-background', // reference to resource\n            width: Dimensions.get('window').width, // make sure the image stretches all the way\n            height: 64, // height of the navbar\n        }}\nNote that you can include this in the Router as well as a Scene, both will work.\nUnfortunately, I could not get this to work with an image that is require'd, only with images that are included manually in (for example) Xcode as a resource (where the resource name should match the string provided to uri). If anyone figures this out, let me know, since I don't have time to research this further.\nAlso, don't forget to set the navigation bar background to transparent, or the image might get hidden behind the navbar.\n. Oh, one more thing: make sure you are using at least v3.36.0!\n. Since not investigating this further came back to bite me in the butt, I submitted #1259 which should resolve this issue. Using this version (npm i https://github.com/tsjing/react-native-router-flux) you should be able to set navigationBarBackgroundImage={require('../img/header.png')}, after which the image will get auto stretched across the entire nav bar.\nFeel free to chime in/add on the PR if you have an additional need for features, but this works fine for me.\nEDIT: There are several issues with this quick fix, so I'll withdraw the PR for now. Feel free to continue based on my fork, but over the coming week I'll rework this a little (and clean up some other code in NavBar as well) so that a backgroundimage can be displayed without all this unnecessary cruft around it.\n. You're absolutely right. Let me close this PR for now and come back with a better version that eliminates this dependency and covers all the scenarios.\nThanks for the reminder to never do late night PRs again. :-)\n. ",
    "Takeno": "@hilkeheremans following your suggestion, here my solution for local images:\n``` javascript\nimport resolveAssetSource from 'resolveAssetSource';\nconst HEADER_PATTERN = resolveAssetSource(require('../assets/header-pattern.png'));\n[...]\n    navigationBarBackgroundImage: {\n        uri: HEADER_PATTERN.uri, // resolved uri\n        scale: HEADER_PATTERN.scale, // resolved scale\n        width: DEVICE_WIDTH, // custom dimensions\n        height: 70,\n    },\n[...]\n```\nProbably, the right way is having another props for navigationBarBackgroundImageStyle.\n. ",
    "filipemonteiroth": "Check this pull request https://github.com/aksonov/react-native-router-flux/pull/1634. The pull request with background image style is now on master.\nhttps://github.com/aksonov/react-native-router-flux/pull/1663. This check that has failed is not about the code I've just pushed. How could we solve it?. @sarovin @wtfil @MechanicKim @aksonov \nCould someone check this pull request?. https://github.com/aksonov/react-native-router-flux/issues/1255. I'm doing it right now!. @aksonov Did the merge, waiting build to complete.. @aksonov I did merge with master, but build keeps failing. Did I make something wrong?\n. @aksonov I haven't seen that logs. Now everything looks ok. Thanks!. @omerdn1  you should set at least width and height on navigationBarTitleImageStyle and it should work fine, already on navbar center.. @m-revetria I'm having this same issue, but I think it is about using git packages on package.json. I'm investigating.. @m-revetria I did it. The problem comes when you install from a git repository. If you just delete the folder node_modules from react-native-router-flux inside your project's node_modules, it will be ok. Let us know if it works.. @jigarmistry I've used the example and it works perfectly.\nNavigationDrawer.js\n```\nimport React, { Component } from 'react';\nimport Drawer from 'react-native-drawer';\nimport SideMenu from './SideMenu';\nimport {Actions, DefaultRenderer} from 'react-native-router-flux';\nexport default class NavigationDrawer extends Component {\n    render(){\n        const state = this.props.navigationState;\n        const children = state.children;\n        return (\n            Actions.refresh({key:state.key, open: true})}\n                onClose={()=>Actions.refresh({key:state.key, open: false})}\n                type=\"displace\"\n                content={}\n                tapToClose={true}\n                openDrawerOffset={0.2}\n                panCloseMask={0.2}\n                negotiatePan={true}\n                styles={drawerStyles}\n                tweenHandler={(ratio) => {\n                  return {\n                    mainOverlay: { opacity: ratio === 0 ? 0 : 0.3, backgroundColor: '#000' }\n                  }\n                }}\n                // tweenHandler={Drawer.tweenPresets.parallax}\n                >\n                \n\n        );\n    }\n}\nconst drawerStyles = {\n    drawer: {\n        shadowColor: '#000', shadowOpacity: 0.3, shadowRadius: 1\n    },\n    main: { paddingLeft: 0 }\n}\n```\nSideMenu.js is a simple component with render method returning a single view.\nSimple route.\nRouter.js\n<Scene key=\"drawer\" type={ActionConst.RESET} component={NavigationDrawer} open={false} >\n          <Scene key=\"main\" initial>\n            <Scene\n              key=\"dashboard\"\n              component={Dashboard}\n              title=\"Dashboard\"\n              hideNavBar={false}\n              initial\n            />\n      </Scene>. ActionConst is a set of strings provided by the lib. Just import it like you do with actions.\nTo call dashboard, I just use Actions.dashboard()\nSomehow if you call something from the menu, it doesn't close when the new screen shows.\nI'm closing the drawer when my component will mount, just like\ncomponentWillMount () {\n    Actions.refresh({key: 'drawer', open: false });\n}. Yeah, working fine.. It should work already without any action.. ",
    "Devikaelangovan": "In my case, image is not stretching across the navbar. How to resolve this issue?\ni set \nnavigationBarBackgroundImage={require('../image.png')}. I am also getting same issue. is it resolved?. ",
    "Iyoss": "Hello!\nI have done this. This can be mistaken, but it works for me :)\nreact-native-drawer - 2.2.2,\nreact-native-router-flux - 3.36.0,\nreact-native - 0.35.0\nindex.js\njavascript\n<Router>\n  <Scene key='root'>\n    <Scene key='leftDrawer' component={LeftDrawer} open={false}>\n      <Scene key='rightDrawer' component={RightDrawer} open={false}>\n        <Scene key='main_wrapper'>\n          <Scene key='main' component={MainPage}\n            title={'test string'}\n            rightButtonImage={require('./filter.png')}\n            onRight={() => Actions.refresh({key: 'rightDrawer', open: value => !value })}\n            leftButtonImage={require('./hamb.png')}\n            onLeft={() => Actions.refresh({key: 'leftDrawer', open: value => !value })}\n          />\n        </Scene>\n      </Scene>\n    </Scene>\n  </Scene>\n</Router>\nRightDrawer.js\njavascript\nexport default class RightDrawer extends Component {\n  render() {\n    const state = this.props.navigationState;\n    const children = state.children;\n    return (\n      <Drawer\n        ref=\"navigation\"\n        open={state.open}\n        onOpen={()=>Actions.refresh({key:state.key, open: true})}\n        onClose={()=>Actions.refresh({key:state.key, open: false})}\n        type=\"displace\"\n        content={<RightContent/>}\n        tapToClose={true}\n        openDrawerOffset={0.2}\n        panCloseMask={0.2}\n        side={'right'}\n        tweenHandler={(ratio) => ({\n                 main: { opacity:Math.max(0.54,1-ratio) }\n            })}\n      >\n          <DefaultRenderer navigationState={children[0]} onNavigate={this.props.onNavigate} />\n      </Drawer>\n    );\n  }\n}\nLeftDrawer.js\njavascript\nexport default class LeftDrawer extends Component {\n  render() {\n    const state = this.props.navigationState;\n    const children = state.children;\n    return (\n      <Drawer\n        ref=\"navigation\"\n        open={state.open}\n        onOpen={()=>Actions.refresh({key:state.key, open: true})}\n        onClose={()=>Actions.refresh({key:state.key, open: false})}\n        type='displace'\n        content={<LeftContent/>}\n        tapToClose={true}\n        openDrawerOffset={0.2}\n        panCloseMask={0.2}\n        tweenHandler={(ratio) => ({ main: { opacity:Math.max(0.54,1-ratio) }})}\n      >\n        <DefaultRenderer navigationState={children[0]} onNavigate={this.props.onNavigate} />\n      </Drawer>\n    );\n  }\n}\nand ManePage.js\njavascript\nexport default class MainPage extends Component {\n  render() {\n    return (\n      <View style={{marginTop: 60}}>\n        <MainList/>\n      </View>\n    );\n  }\n}\n. ",
    "jjhesk": "+1 #1653 . +1111 need some progress on this pls\n. +1 do u have more examples on how saga works? like setting up the sagas . some ideas. ",
    "stanleycyang": "I also noticed the breaking change, and it breaks my left and right button renders. I've managed to fix it for now by locking my version to 3.35.0, but it'd be great not to have to do that\n. ",
    "wangzhuwei212003": "Setting duration to 0 may be not the best way, but it works.\n<RouterWithRedux key=\"root\" animationStyle={animationStyle} duration={0}>\nAnd if you need more animation, thanks for the sharing from redbaron76, check this out:\n\nhttps://github.com/aksonov/react-native-router-flux/issues/1202\n. \n",
    "lovato": "Run into same problem. I upgraded several packages, including RN.\nWhen downgraded to 3.35, navbar become normal again.\n. ",
    "olemikkel": "Same issue here. Sometimes the dataObj is still the correct one here, but since I have some logic in the constructor/componentWillMount they are not called when quickly navigating to the same component as you described.\nFor me the InteractionManager \"solves\" it, but the user experience becomes worse in the sense that it takes longer until I can press something.\nI also made a clean test project with nothing but react-native and react-native-router-flux and still had the same issue.\n. ",
    "yeknava": "Almost same problem here.\nscenario:\n1) Actions.page1(); -> opens page 1\n2) Back with android back button or with Action.pop();\n3) Then opens Actions.page2() quickly -> i will see page1 for almost half second, then page 2 appears.\nmy guess is its happen when Action.pop() didnt finish yet.\n. ",
    "oubeichen": "+1. ",
    "bawn": "+1. @kesjien Thanks. +1. ",
    "meddy": "Looking through the source code, I believe the issues stems from the react-native NavigationExperimental component. There is a method handleNavigation that react-native-router-flux relies on. That method calls setState(), for navigation purposes. I believe the issue that is occurring is the result of the state change not being finished.\nIf handleNavigation could return the 2nd argument of setState() which is a callback when it's finished, we could use that to sync operations and avoid the race condition. Actions.pop() already returns the result of handleNavigation.\nThe problem obviously is that changing NavigationExperimental is not possible from this project, and I don't have the context for why handleNavigation was designed the way it is. So this issue may be fairly challenging to solve.\nI will use @dannycochran 's solution for now.. ",
    "loug38": "+1\nThis is driving me nuts.. Great fix! Thanks!\n. ",
    "ptboyer": "Having the same issue where navigating too fast can have logic like Actions.refresh() in componentWillMount not being executed.\nThe InteractionManager.runAfterInteractions fixes the issue, however as others have stated, it does take longer until you can click something, or if the buttons and title elements even appear for that matter (if setting through Actions.refresh()).\nI've found that defining a method such as onMount() in the component that contains your logic such as Actions.refresh() and then executing that method initially in componentWillMount and then with InteractionManager.runAfterInteractions() seems to act to cover the 90% of cases where my NavBar left and right buttons show initially when navigating, and then fallback when the race-condition is met, running again to make sure my user can actually navigate away through the NavBar.\nWould be great for these component life cycle methods to be better handled when quickly navigating in the future!. ",
    "ranbirkatal": "p = new Promise((resolve, reject) => {\n        setTimeout(resolve, 10, 'foo');\n      });\n    p.then(()=> / action.push first scene here /)\n    .then(()= /action.push Second scene here /))\nworks like charm. ",
    "vladimir-e": "I got this problem too. Tapping \"back\" button and then quickly tapping to another menu item rendered scene with previous props.\nI did as @erikandersson suggested in a related issue:\n<Router duration={150} ...>\nIt solved the problem! And it actually works for any value I tested between 50ms and 400ms, for some reason.... ",
    "mounibec": "@vladimir-e This worked for me as well. Same issue using the same versions of react-native and react-native-router-flux. It's related to this #1466. \nA workaround is to add \"duration\" to the related route  <Router duration={300} ...>. I think 300 is the default... ",
    "i-am-kenny": "It's quite straight forward if you are using mobx/redux to manage your state, or if you have access to your state at the same level where you are defining your Scenes.\n<Scene title=\"scene1\" hideNavBar={() => this.state.hide} />\n. ",
    "GuelorEmanuel": "@i-am-kenny \nThe mentioned solution does not seem to work, is there any documentation on this?\n. ",
    "antoniocapelo": "@i-am-kenny @GuelorEmanuel  that makes sense, but in that case we would have the \"About Key xxx is already defined\" being logged on each route change, right? \nBecause the Router would re-render on each state change. \nI've just moved my scene definition for a const value, but I'm thinking that I might need to check state to decide some navbar UI stuff and I'm afraid I'll have again the log polluting the console... :/\n. ",
    "and01": "Does anyone know how this works? \nIs it possible to change the state of the navbar after it has been initialized?. ",
    "luchillo17": "I can set it to true and effectively it hides the NavBar, though i don't know if it can be done dynamically. . I have it always hidden, why? because it's freaking ugly and i need customization in most of the pages, so each of my pages has it's own NavBar.. ",
    "abdurrahmanekr": "@and01 I'm using this method:\njavascript\n// show\nActions.refresh({ hideNavBar: false });\n// hide\nActions.refresh({ hideNavBar: true });. @aksonov please fix issue. 3.39.2. It also does not work for Actions.Page({\"type: reset\"}). version: 3.41.0. It's worked but when I switch from v3.39.2 to v.4.0.0-beta.*, I get a lot of errors. When will the document be ready for v4?\nThe major problem I'm facing: Router is running and all the Scene constructors are running. How do I avoid it? Thank you . Ok. The other major problem I'm facing : \n- Actions.refresh not working (renderLeftButton, renderTitle, ..)\n- ComponentWillMount and componentWillUnmount are running when the setState update is in the file where the Router is located.\nIf i encounter other problems i will inform you. -  My application starts with start.js :\n```javascript\n...\ncomponentWillMount() {\n  this.isLoggedIn();\n}\nisLoggedIn() {\n  isLoggedIn().then((res) => {\n    if (res)\n      Actions.ChatList({type: 'reset'});\n    else\n      Actions.Login({type: 'reset'});\n  });\n}\n...\nWhen we go to ChatList.js by using \"type: reset\" command, we can come back. (\"Type: reset\" command is not working in v4)\nI am updating the navbar with \"Actions.refresh\" in the **ChatList.js** file:javascript\n...\nActions.refresh({\n  renderLeftButton: () => {\n    return (\n      ...\n    );\n  },\n  renderRightButton: () => {\n    return (\n      ...\n    );\n  }\n})\n...\n```\n:-----------------v3.39.2--------------------:|:------------------v4.0.0-beta.3----------------:\n \u00a0\n- I need to use a view globally. I did this in the index.ios.js file. I do not know if a global view is added on router-flux. That's why I did it in index.ios.js :\n```javascript\n...\nreturn (\n  \n\n<ConferenceCallPopupView\n  name={this.state.conference.name}\n  callHim={this.state.conference.callHim}\n  callingMe={this.state.conference.callingMe}\n  photo={this.state.conference.photo}\n  onSelect={this.onClickConference.bind(this)}\n  model={this.state.conference}\n  show={this.state.conference.show}/>\n\n<MenuContext style={{ flex: 1}}>\n  <StatusBar\n    backgroundColor=\"#295870\"\n    barStyle=\"light-content\"/>\n  {/*routing*/}\n  <Router>\n    <Scene key=\"root\">\n      <Scene key=\"Start\" component={Start} hideNavBar={true} duration={0}/>\n      <Scene key=\"Login\" component={Login} hideNavBar={true}  duration={0}/>\n      <Scene key=\"ChatList\" unmountScenes component={ChatList} duration={0}/>\n    </Scene>\n  </Router>\n  {/*routing*/}\n</MenuContext>\n\n\n);\n...\n```. ",
    "rewieer": "Any solution for this please ?\n. Well hopefully i went to jest after that.\nDoes it mean you have no idea how to solve this, or is ths really intended to be posted on SO ?\nIf you have the answer I could put it on SO and answer it.\n. Here are my 2 cents.\nI've been using RNRF in one of my project for quite a long time, and these are what I faced : \n transition were painful, I had many transition that would take quite a moment (until many seconds) before starting after pressing a button. And i've for sure used Interaction Manager.\n Routing hierarchy was hard to use. I often took hours before setting things right and be able to move from one scene to another\n Still not understanding what the different PUSH/PULL and other stuff actually mean\n Accessing routing as an implicit dependency rather than having it as a props is particular to RNRF and somehow disturbing. It couples the project tightly to navigation.\n* You may say doc are awful about ReactNavigation, but the doc for RNRF is not friendly at all. The Detailed Example never really helped me, and doc doesn't tell much about how it works. ReactNavigation documentation may be broken or some, but I personally never experienced any problem with it, through i'm up to date. I even started to work on a complete rewrite of the doc once but I didn't have enough time to get through it. I believe RNRF doc requires a complete documentation rewrite.\nSince I switched to React Navigation, yes there's quite a lot of thing i'm not using yet, and yes it's really a lot of abstraction which complicates things a lot. But so far the only problem I have with it is how painful it is to implement a login system disabling user from going back. With a bit of hacky code it makes through but still, that's not normal. Let's keep in mind that it's young and driven around specific needs. I believe it will get better.\nNot intending to spit on your work, guys. RNRF is really an awesome choice, back then it was the best i've found, and many articles on google support it. But I really got frustrated by the problems above. And React Navigation solved them enough to me.\n. @typeslower so far it was working fine on emulator but was painfully slow on phone. \nI remember back then I was using Immutable with Redux but the entity base wasn't so heavy. I had Redux-Persist with 200ms debouncing as well. So maybe loading data from state using Immutable with sorts & filters could make a deal but, on list of < 100 elements it's hard to think this could have a this huge impact.\nNever experienced on IOS because I don't have Apple stuff anyway. This has been tested only in Android. But I remember using other navigation tools was fine.. @rodperottoni please tell us more about what kind of complexity you are talking about when you refer to React Navigation, just out of curiosity.. ",
    "wrozka": "I have the same issue, everything worked fine in v3.35.0.\n. @ktsi @aksonov  I've fixed this issue by restoring JUMP handler from 0.35 https://github.com/wrozka/react-native-router-flux/commit/e944fbf39197e2f56ff8dbf86eff6a6f83ae29b7 . Somehow the key of a tabbed scene is different when you navigate to it (PUSH parent_position_name) than when you just switch a tab (JUMP name_position_name). However this commit breaks passing props to tabs.\n. @aksonov Sure, but my commit breaks couple of unit tests for passing props to tabs and I don't have time to fix them, does it work for you?\n. @dmhood I've fixed this issue by restoring JUMP handler from 0.35 https://github.com/wrozka/react-native-router-flux/commit/e944fbf39197e2f56ff8dbf86eff6a6f83ae29b7 . Somehow the key of a tabbed scene is different when you navigate to it (PUSH parent_position_name) than when you just switch a tab (JUMP name_position_name). However this commit breaks passing props to tabs.\n. ",
    "Kaishley": "I have the same issue.\n. #1270 \n. ",
    "ksti": "@alexicum I did the test but still has the issue, in the initial tab Viewpager can auto scroll but you can not scroll it manually.\n. ",
    "brycepavey": "Also getting this with my first tab with 3.36.0. The view seems to be frozen but I can still see the scroll events in the debugger, just nothing changes on screen\n. Thanks for the reply Chris.\nI'll try to give some more info;\nI have a form that contains multiple rows for input, some of these inputs are regular TextInput's but others are items selected from a list. When the user selects one of these multi-selection fields on the form it presents a modal multi-select list. If the user has already selected items, these items are pre-selected from my vals state, otherwise none are selected. \nAs the user selects multiple items I update my tempVals state, I do this because if the user cancels rather than saves then the original form still needs to reflect that no changes were made. \nI can see how your example applies to a basic entry form which I already do similar in other areas, but I can't see how it would be suitable in this case (though I could be wrong!). \nI don't have access to the code right now to pull out the relevant pieces but i'll add them to give some more context in the morning.\n. ",
    "huliyou": "<Scene type={ActionConst.REFRESH}>\nfix my issue\n. ",
    "liesislukas": "ok, thanks will play with it\n. I've done new view for search and when click on search icon from navigation it just changes scene to search and when clicking X to close search, it replaces scene back to position.\n. it just navigates to another view where is no navigation at all and instead of it search field with X icon next to input field, on click X it navigates back. Check out gmail app for android, can't check ios version now, but i think it's same for both OS and click search icon.\n. @marcelmfa sorry but this issue is way too old. That code would be out of date anyway. Almost full year passed, many updates pushed to react native and router during that time.. works well, thanks ;)\n. ",
    "plraphael": "@liesislukas could you be more specific? I did not understand what you did...if you could provide some example code would be great.\nThanks,\nPedro.\n. ",
    "marcelmfa": "@liesislukas could you share your code, please?. The docs probably are outdated. I tried that solution, but didn't work. I found a solution in stackoverflow, if I remember well. Below have my code that works in this last version:\n<Scene key=\"drawer\" drawer contentComponent={SideBar} hideNavBar>\n  <Scene key=\"main\">\n    <Scene key=\"showInbox\" component={Main} title=\"System's name\" initial/>\n  </Scene>\n</Scene>\nI didn't know if it's right way, but it works.. ",
    "munkhorgil": "I made this way, unfortunately, it can't work as expected. Every time I write on Text Input it clears automatically.\njavascript\nrenderTitle = () => {\n    return (\n      <View style={styles.searchContainer}>\n        {\n          this.state.toggleSearch\n          ? <TextInput\n              style={styles.inputStyle}\n              placeholder=\"Search\"\n              value={this.state.searchValue}\n              onChangeText={searchValue => this.onSearch(searchValue)}\n            />\n          : <Text style={styles.titleNavbar}>CONTACT</Text>\n        }\n      </View>\n    );\n  }\nAny solutions?. @lewis-yuburi Of course it updates, I think the problem is it re-renders TextInput.. I have exact same architecture of router with you @edoantonioco, Did you find any solution?. @mcabs3 I got the same problem I don't have any slider, this issue needs to be open. @ssomnoremac Any update on this? When I wrap all my scenes and tab in drawer, All scenes considered as same level that is why it is not stacking and goes back to initial which is tab1. Still no solution.... @syq7970 I got the same issue. How did u solve?\n. ",
    "lewyuburi": "@munkhorgil you need to update the state this.state.searchValue, something like this:\n```javascript\nrenderTitle = () => {\n    return (\n      \n        {\n          this.state.toggleSearch\n          ?  this.onSearch(searchValue)}\n            />\n          : CONTACT\n        }\n      \n    );\n  }\n...\nonSearch(searchValue) {\n  this.setState({ searchValue });\n  ...andTheRestOfMethodCode\n}\n```. ",
    "quoctuams": "I am also facing the similar issue, there is clear animation that the sub-scenes were popped and the initial scenes appeared. Is there any update regarding this?\n. ",
    "TRIPTI-JAIN": "TypeError: Cannot read property 'eventName' of undefined, I got the error while using Actions.root({key: 'Login', type: 'reset'});\nCan Anyone tell me how can i solve it??. ",
    "Blapi": "@TRIPTI-JAIN did you even have a look on the Example project?. #2628 . You should use redux to do this, it's reliable and very easy to implement !\nConnect your component to the router reducer, this way, using this.props.scene will give you your current scene infos (key, name, sceneKey, etc..), do as following :\nFirst, create your router-reducer this way :\n```\nimport { ActionConst } from 'react-native-router-flux'\nconst initialState = {\n  scene: {}\n}\nexport default function routerReducer(state = initialState, action) {\n  switch (action.type) {\n    case ActionConst.FOCUS:\n      return { ...state, scene: action.scene }\n    default:\n      return state\n  }\n}\n```\nCombine it to your root-reducer (let's assume this is your index.js in your reducers directory) :\n```\nimport { combineReducers } from 'redux'\nimport routerReducer from './router-reducer'\nconst rootReducer = combineReducers({\n    routing: routerReducer(,)\n        // other reducer here...\n})\nexport default rootReducer\n```\nYour component name is Launch, then do a LaunchContainer of this component this way :\n```\nimport { connect } from 'react-redux'\nimport Launch from '../presentationals/launch'\nconst mapStateToProps = (state) => {\n  return { ...state.routing }\n}\nconst LaunchContainer = connect(\n  mapStateToProps\n)(Launch)\nexport default LaunchContainer\n```\nFinally, in your app.js or I don't know what file you're using (filename is index.js for me), but the file where you implement your scenes, do this :\n```\nimport React from 'react'\nimport { Router, Scene } from 'react-native-router-flux'\nimport { createStore, applyMiddleware } from 'redux'\nimport { Provider, connect } from 'react-redux'\nimport thunkMiddleware from 'redux-thunk'\nimport createLogger from 'redux-logger'\nimport rootReducer from './reducers'\nimport LaunchContainer from './containers/launch-container'\nconst ReduxRouter = connect()(Router)\nconst logger = createLogger() // helps you to read your state in the console\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware, logger))\nclass App extends React.Component {\n  render() {\n    return (\n      \n\n\n\n\n\n\n    )\n  }\n}\nexport default App\n```\nWith this, you shouldn't have worries to find your current scene, anywhen you need it in a component, do what I did for your component, and you will be able to know your current scene using this.props.scene :smile: \nOrganization of the files (to be clear on it)\n.\n+-- containers\n|   +-- launch-container.js\n+-- presentationals\n|   +-- launch.js\n+-- reducers\n|   +-- router-reducer.js\n|   +-- index.js (containing the rootReducer)\n+-- index.js (containing App.js). Or you can do as it's done there : https://github.com/aksonov/react-native-router-flux/blob/master/docs/REDUX_FLUX.md, I forgot there was an example as I implemented it a while ago. I don't know for this case...\nI saw we were able to know it using Actions.currentRouter.currentRoute but it's not working on my end, it would be very helpful though to use Actions because when you log it, you can see there is all the scenes. I don't understand why you're not using redux.. in your case it will be helpful and your problem will be solved in the next 10 minutes, + you'll optimize what you just showed us.\nUse the example aksonov provided or what I showed you before and you'll get your current scene.\nIf your problem is that your file is not a \"scene\" so you can't access the props but you want to know what scene you're in, you can still export your store and import it so you'll get the currentScene. (store.getState().yourReducerName.scene.theSceneInfosYouWant). I've downgraded my version of react-native-router-flux on 3.37.0 after starting getting this error.\nIf you want it fixed with latest version of RNRF, you should check your version of RN, on 0.44 it should work fine !\n(I have to downgrade RNRF because of some dependencies that require RN < 0.42..). Not really sure about what is your issue here but as you can see in your logs, you have no children defined.\nAs a workaround, you may use Actions._state where routes is defined :\n\n. You write Key with a capital K. It is key. I think this is because of Android behaviour.\nOn my end : When I exit the app with the backButton because my route stack is empty, the app exits but is not killed. If I come back quickly to the app, I will still be on my latest screen (which for me is a home page (with a type reset)).\nIf I open a new app or wait a bit, the app will start again from the beginning.. Nice info to know, thanks. @isaackdamian be sure your Component is a real component, exported and imported correctly.. @Devansh-Sanghvi  check #2628 . @Tanumay92 read the doc : \ncontentComponent | React.Component | \u00a0 | Component used to render the content of the drawer (e.g. navigation items).\n-- | -- | -- | --\n. @iKronyck What do you mean by \"virtual button\" on Android ?. It's from react-native, not react-native-router-flux, check the doc : https://facebook.github.io/react-native/docs/backhandler.html\nAnd of course, this is only for Android.. If you read the doc carefully, you'll see this foe the Router component :\nProperty | Type | Default | Description\n-- | -- | -- | --\nchildren | \u00a0 | required | Scene root element\nwrapBy | Function | \u00a0 | function to wrap each Scene component and nav bar buttons - allows easy MobX integration (by passing\u00a0observer)\nsceneStyle | Style | \u00a0 | Style applied to all scenes (optional)\nbackAndroidHandler | Function | \u00a0 | Allows custom control of hardwareBackPress in Android (optional). For more info check\u00a0BackHandler.\nuriPrefix | string | \u00a0 | A uri prefix to strip from incoming urls for deep linking. For example, if you wanted to support deep linking from\u00a0www.example.com/user/1234/, then you could pass\u00a0example.com\u00a0to only match paths against\u00a0/user/1234/\nUse the backAndroidHandler property, there's already a lot of examples of how to do it on GitHub and SO. @jalilahmed You're using the navigation really bad here, what you should do is something like this : \nonBackPress() {\n    if (Actions.state.index === 0) {\n      return false\n    }\n    Actions.pop()\n    return true\n  }\nAnd then in the Router : \n<Router backAndroidHandler={this.onBackPress}>\nThen, whenever you want to override this function in a component to do a specific thing, just do as following : \n```\ncomponentDid(Will)Mount() {\n    this.myOwnBackPressHandler = BackHandler.addEventListener('myOwnBackPressHandler', () => {\n      if (Actions.currentScene === 'aSpecificScene' && someConditionIsTrue) {\n        Actions.replace('anotherSpecificScene', { someProp: somePropValue }) // THIS IS AN EXAMPLE\n        return true\n      }\n      return false\n    })\n  }\ncomponentWillUnmount() {\n    this.myOwnBackPressHandler.remove()\n  }\n``. @dittmarconsulting downgrade RNRF to .27. You're importingSceenewith 2 'e' instead ofScene` with 1 'e'....\nUPDATE: Ok it's working even with this typo (?!). @abohannon try adding a key to your Modal View ?. as @vishnuc said, add this in your Router code :\nonBackPress() {\n    if (Actions.state.index === 0) {\n      return false\n    }\n    Actions.pop()\n    return true\n  }\n...\n...\n  <Router backAndroidHandler={this.onBackPress}>\nThen, the backButton will be handled by the library and if you want to do a specific action in a component with the backButton, it will override the onBackPress function.\nLike this :\n```\nimport {  BackHandler} from 'react-native'\n...\n...\n  componentWill/DidMount() {\n      this.homeBackPressHandler = BackHandler.addEventListener('homeBackPress', () => {\n        if (Actions.currentScene === 'home' && myCondition) {\n          doStuff()\n          return true\n        }\n        return false\n      })\n  }\ncomponentWillUnmount() {\n    this.homeBackPressHandler.remove()\n  }\n```\nDoing that in my Android app, never had a problem.. @liuzhe429 check #2628 . What's your status there? Little bit confused with your code and your explanations. Did you try to log Actions and see if there's the data you need?. Will check this very soon, thanks for your reply !. So far, I managed to change the navigation transition using this : \n<Stack key='root' hideNavBar\n            transitionConfig={() => ({ screenInterpolator: CardStackStyleInterpolator.forHorizontal })}\n            >\nBut I'm still unable to give a specific transitionConfig for each scenes that I have, the transitionConfig is the same for all the scenes that I have, still working to figure out how I can have a specific transitionConfig for a scene. Anyway, you can at least have a different transitionConfig on your app with giving this prop to the root Scene/Stack/whateverYouHave. @todorone, on your root Scene/Stack, add transitionConfig={() => ({ screenInterpolator: CardStackStyleInterpolator.forInitial })}, you will have no animated transition with this !\nNote that it will be applied for all your scenes, I haven't managed to have a specific animated transition for a specific scene. Ok cool, I checked the issues on the react-navigation library and found this solution : \n<Stack\n            key='root'\n            hideNavBar\n            transitionConfig={() => ({\n              screenInterpolator: (props) => {\n                const { scene } = props\n                switch (scene.route.routeName) {\n                  /* case yourKeyScene:\n                  return theAnimationYouWant(props)*/\n                  case 'groups':\n                    return CardStackStyleInterpolator.forVertical(props)\n                  case 'home':\n                    return CardStackStyleInterpolator.forHorizontal(props)\n                  case 'inbox':\n                    return CardStackStyleInterpolator.forFade(props)\n                  default:\n                    return CardStackStyleInterpolator.forInitial\n                }\n              }\n            })}>\n(groups, inbox and home are some keys of the scenes I have)\nSo it's working on my Android app, but there's just a minor thing because the transitions may overlap each other, it's just a logic thing to do I guess and can be solved easily.\nYou can also implement your own CardStackStyleInterpolator as @aksonov said before, just check the code there https://github.com/react-community/react-navigation/blob/master/src/views/CardStack/CardStackStyleInterpolator.js to see how to create your own transition.\nMy code logic may not be the best one using a switch, I will certainly change it but it was just an example, so do as you wish ! I guess if you check the props of the screenInterpolator, you can find enough informations to build your own logic !\nAnd be careful, the main transitionConfig prop which will do the trick HAS TO BE in your key='root' Scene !. @aksonov sure but I won't have time this week, will do that next week. @aksonov, running late for this PR but will do for sure when I have time.. @MasterDaveh I was working a lot on my app recently as I had to publish it today. Now I will have more time so I will definitely take care of it soon.. Could you show your code @RamkumarBPE please?. Check #2628 , you will find your answer there.. @bm-software it's been 2 months now, are you done with this or do you still need help ? Tell me so I can investigate on this :) . Check #2628 , you will find your solution there.. Where do you implement this? Show your exact code please @remch1990 because it's difficult to help you there. Ok so after investigated on this, the point is that on NavBar.js\nif (!state.backButtonImage) {\n    return (\n      <HeaderBackButton\n        onPress={onPress}\n        title={state.backTitle}\n        titleStyle={textButtonStyle}\n        tintColor={tintColor}\n        truncatedTitle={state.truncatedTitle}\n      />\n    );\n  }\nWhen you don't pass a backButtonImage, it should return this Component from react-navigation but this component is returning an Image with the back-arrow, so the backTitle is ignored.\nSo 2 solutions, either we implement an other Component which will be an other HeaderBackButton with the result we wish (requiring a PR), or either passing a fake path as backButtonImage, so the backTitle will be displayed but with a warning (quick crappy fix).. @CoderHar show your navigation code please, how do you do it ?. Even with Actions.EmployeeCreate() ? Did you try it?. @CoderHar Show more of your code and the error messages because you don't really help here. Please @CoderHar, show your exact code and show the error message. @CoderHar \n<Scene \n                        Key=\"EmployeeCreate\" \n                        component={EmployeeCreate} \n                        title='Employee'  />\nkey and not Key. You wrote key with a capital K on your EmployeeCreate scene, it is key with a lowercased k, not a uppercased k (key !== Key). @CoderHar no problem, I guess you can close this issue ;). @aksonov yep sure I'd like that !. Sure, btw could you help me with this please ? #2628 , more and more users (like me) would love information about this. We can talk about this in DM on Twitter (@olisturbois) if you want, I already follow you. @asciifaceman what do you mean ?\n\n@todorone I've now tested it and found that backAndroidHandler seems to just be ignored.\n\nHow did you handle it?. Hey @tjsaini007 , follow this issue : #2628 , be sure you'll have the informations as soon as possible !. Yes I understood your issue, it is the same for me, I need to do custom animations/transitions. If you recheck the issue #2628 , you will see that aksonov replied to it. I'm about to investigate on what he said and will update my own issue.. You should maybe use this prop in your scene : renderTitle, it should help you doing the logic you want.. renderTitle expects a ReactComponent. Show your error please ?\nMoreover, I think you should add a return in your renderNewTitle function in your TitleNavBar component. Aaah.. I see you're using RNRF V3 and not v4, maybe renderTitle is not available in the V3, you should update RNRF's version!. Show your code please yes !\nAnd I strongly suggest you to upgrade react-native as well, you will have a more powerful API to work with :) (I'm using RN 0.50.3 and the migration was quick enough, don't worry). It is.. weird.. I feel like you should return your Router as it is and not put a Loader (which is not imported?), and then, in your initial scene, you can check if either you should put a Loader or display whatever else you want.\nShow me your app.js (where you put your NavigationRouter) please. Which version of RNRF?. You can use this one 16.0.0. Not related to RNRF but try this : https://github.com/facebook/react-native/issues/13371\nMoreover, I saw you had a problem with a style, in you RootContainer file, where is styles.applicationView coming from?. Update me when you've fixed your issue with your xcode error, looks like it's a problem with the configuration. There's nothing more I can do, I'm an Android user, check the issue I sent you earlier, as I saw it's about the order of the Import. Check also on GitHub or SO some issues related to \"import \".\nThis is not related anymore to RNRF at this point.. Check this if you want to do more with transitions : #2628 . Please give an example of your code or there's nothing we can do to help you!. Do you mean you're having issue with the transitions between your scenes?. Yes there's this issue on Android, @bilalsyed001 provided the good solution to fix this, however you can still manage to fix this adding a style.\nWithout a style : \n\nWith a style leftButtonStyle={{ paddingLeft: 0, left: 0 }}\n. I see a typo in your code, you wrote contentCompoent instead of contentComponent ?\nWhen you're not using your app with a push notification, is Actions.HOME() or Actions.CONFIG() working properly?\nI've never used a Drawer in my Android app but if you still have this issue, I'm gonna give it a try. What is your code when you're handling the Push Notification?. There's nothing we can do to help you with what you're providing, show your code @navneet-sandhu ... I am facing the same problem as I can not help you without an example of your code.. Well well, first, it looks like it's missing some code, I don't see your declaration of the router and no trace of your Scene \"root\".\nThen, you're doing a Actions.option(), where is your Scene with the key \"option\" ??\nPlease, when you send your code, use the triple ` (at the beginning and at the end of your code snippet) so the code will be well formated and easy to read.. Please send me your entire App.js and use ```\u00a0PLEASE like this :\n(insert the 3 backquotes)\ntheCodeYouPaste\n(insert the 3 backquotes)\nSo it looks like\n<myComponent>\n  Oh cool easy to read\n</myComponent>\nok? your App.js was not full.\n. \ncontentComponent | React.Component | \u00a0 | Component used to render the content of the drawer (e.g. navigation items).\n-- | -- | -- | --\nI guess your error is because you use component instead of contentComponent in your Drawer. @navneet-sandhu @amanbadhan what's the status now?. Which code?. Show all your code please, copy paste it because there's a lot of things missing there.. Ok so after checking your code, I saw that you had twice the same Scene with the key \"ComplaintDetails\", try to fix this.\nconst RouterComponent = () => {\n  return (\n    <Router>\n      <Scene key='root'>\n        <Scene key='login' component={Login} title='Login' sceneStyle={{top:55}} />\n        <Scene key=\"tabbar\" tabs={true} hideNavBar={true} tabBarStyle={{ backgroundColor: '#FFFFFF' }}>\n          <Scene key=\"Ticketstatus1\" title=\"Ticketstatus1\" icon={TabIcon}>\n            <Scene key=\"Active\" component={NewTicket}  title=\"Active\"/>\n          </Scene>\n          <Scene key=\"Ticketstatus2\" title=\"Ticketstatus2\" icon={TabIcon1}>\n            <Scene key=\"solved\" component={ResolvedTicket} title=\"Resolved\" />\n          </Scene>\n        </Scene>\n        <Scene key='FrgtPsswd' component={FrgtPsswd} title='FrgtPsswd' />\n        <Scene key='ComplaintDetails' component={ComplaintDetails} title='Complaint Details' /> //THERE\n        <Scene key='Dashboard' component={Dashboard} title='Dashboard' initial />\n        <Drawer\n          hideNavBar\n          key=\"drawer\"\n          contentComponent={DrawerContent}\n          drawerImage={MenuIcon}\n          drawerWidth={300}>\n          <Scene key='ComplaintDetails' component={ComplaintDetails} title='Complaint Details' /> //THERE\n        </Drawer>\n      </Scene>\n    </Router>\n  );\n};. I suggest you to watch the Example project if you still have some issues using this library, the Example project contains a lot of example of how to use the components you might need !. How do you switch to your tab2 ? You're using Actions.tab2() right? Then, just pass the props to the tab2 as you did for tab.. Ok so have you really tried to fetch you value? I just tried with the Example project and when I call the Actions.tabbar({ whateverParam: whateverValue }), If I logActions.currentParams, I can clearly see in all the tabs that I have the whateverParam. Show your code please, your issue is really incomplete. It feels more like you have a problem with displaying your Views as you are new than an issue with this library.. Show me your Routes code please then, and not in a .docx ! GitHub is smart enough to have a way of sharing a snippet of your code in a comment.. Add Reducer in the import from RNRF in Routes.js, then add this outside of your class\nconst reducerCreate = (params) => {\n  const defaultReducer = new Reducer(params)\n  return (state, action) => {\n    console.log('Action :', action)\n    console.log('State :', state)\n    return defaultReducer(state, action)\n  }\n}\nAnd finally, in your <Router>, add this : createReducer={reducerCreate}\nNow, when you launch your app with the debugger, you will see what happens in your navigation, ping me when you have info about how the navigation works when you're using  in your App.js. Have you changed something else? Show me your Routes.js and your App.js please, and the stacktrace of your error. createReducer={reducerCreate} is a prop of Router. <Router createReducer={reducerCreate}>. Just add this and launch your app with the debugger, you will have the logs of what is happening in the navigation as I said earlier.. That's all? And what if you add a log in componentDid/WillMount of your Regitration component, is there something?. Is it logged in the console?. Then it's not a problem with this library. Yep, comment all your code in the render of your Registration Component and just put\n<View style={{ flex: 1, justifyContent: 'center', alignItems: 'center }}>\n  <View style={{ height: 50, width: 50, backgroundColor: 'red' />\n</View>\nIf you see a red square, that means that the problem is within your render code, so check why it's working on iOS and not Android by checking the ScollView documentation, maybe you did something wrong, I don't know iOS.\nIf you really do see the red square, then take your previous code and render it step by step, the issue might be there.\nJust tell me if you see the red square first. # Get the code\ngit clone https://github.com/aksonov/react-native-router-flux.git\ncd react-native-router-flux/Example\nInstall dependencies\nyarn\nRun it\nreact-native run-android\nTry the Example project please. Well, then there's something wrong with your implementation, have a look on how it is done with the Example project because there is no issue with the library, and I haven't seen what you could have done wrong, I can still try to help you if you show me the appropriate code.. Would you mind adding me on your GitHub project so that I can have a better overview on your project? I have to admit that I have some difficulties to find the solution.. Yes sure, feel free to send me a mail on my mail address that you can find on my profile !. Everything will be easier, don't forget to remove node_modules please. Actually, what about you fork your actual repo and put it as public? This is by far the best solution so I won't have your source code on my computer.. The issue you're having is because of the LinearGradient. When you remove it from the App.js, everything works fine. As you can see on the LinearGradient library, there are some issues with react-native v.0.51.0, try downgrading to 0.50.3 or fix the LinearGradient with the PRs available.\nAs said before, this issue is not related with RNRF, I'm closing this now, good luck with your project !. navTransparent | boolean | false | nav bar background transparency\nThis is in https://github.com/aksonov/react-native-router-flux/blob/master/docs/API.md, have you tried this?\n. Try to access to tabBar instead of ActivityDetailWrapper and then, when you pass the props to tabBar, you will have the props in your 3 scenes.. Check #2703 . Show me your navigation code please, and format it well for GitHub, not like your first example unreadable.\nI ran test with the Example project and I have no worries having someProps in all the tabScenes. I meant your code where you do the Actions.jump, what are you doing there ?. If this is OK with your first example, why try with the other one ??. If it's a matter of going to a specific scene, either you use initial on your Scene, either in ComponentWillMount of your Scene, you check the condition and switch to the other Scene like\ncomponentWillMount() {\n    this.props.hasToSwitchScene ? Actions.otherTab() : console.log('All good there')\n  }\nBut use Actions.tabbar({ yourProps }) first. Duplicate #2628 \nNeed to do a PR for that. Next time, check the issues before creating one, thanks.. Is your profile page in your navigation stack?. @digitaldavenyc ?. What about Actions.popTo('screen2') when the user leaves the screen5 ? Seems easier. Not really happy about this hack because I find this ugly but you could do that :\nIn your app.js (or wherever your Router is located), add this :\nconst reducerCreate = (params) => {\n  const defaultReducer = new Reducer(params)\n  return (state, action) => {\n    // console.log('Action :', action)\n    // console.log('State :', state)\n    if (state.routes[state.routes.length - 1].routeName === 'theSceneThatTriggerMyAction') {\n      state.routes.index -= numberOfScenesIWantToRemove\n      state.routes.splice(indexOfTheSceneToStartRemovingTheScenes, numberOfScenesIWantToRemove)      \n    }\n    return defaultReducer(state, action)\n  }\n}\nAnd then your Router should look like this :\n<Router\n          backAndroidHandler={this.onBackPress}\n          createReducer={reducerCreate}>\nYou can do your stuff even if I'm not a huge fan of this trick, but you will just need to adapt your logic of course.. If you have a data coming from the server, you can fetch it within state.routes[state.routes.length - 1].params.dataFetchedFromTheServer (all the params you send to a scene will be there) so you could use this to adapt your logic.. I don't know, I haven't checked. What's the status now?. Yes, is it working well? Did you find a workaround?. You've got a typo in your code (you wrote scene with a lowercase S at a point.\nStill, it's a duplicate of #2718 and it looks like the error is from react-navigation.. Duplicate #2718 . Is it ok with the update @Jahans3 ?. Which version of react-navigation do you have on the RNRF's package.json?. Add this in your app.js (or where your Router is implemented)\nconst reducerCreate = (params) => {\n  const defaultReducer = new Reducer(params)\n  return (state, action) => {\n    console.log('Action :', action)\n    console.log('State :', state)\n    return defaultReducer(state, action)\n  }\n}\nAnd then in your Router : \n<Router\n   backAndroidHandler={this.onBackPress}\n   createReducer={reducerCreate}>\nNew when debugging, check if everything's fine or if there's a problem with the scenes ?. If you had a look at the Example project, you could see that what I sent you previously is being used and without implementing redux.. You need to handle to BackButton within your Router, just add this where you implemeted it : \nonBackPress() {\n    if (Actions.state.index === 0) {\n      return false\n    }\n    Actions.pop()\n    return true\n  }\n...\n...\n<Router\n  backAndroidHandler={this.onBackPress}>\n. This issue is known and duplicated from #2718 . Did you try with hideNavBar in your Drawer ?\n(it is recommended that your first Scene has the key \"root\"). You need to handle to BackButton within your Router, just add this where you implemeted it :\nonBackPress() {\n    if (Actions.state.index === 0) {\n      return false\n    }\n    Actions.pop()\n    return true\n  }\n...\n...\n<Router\n  backAndroidHandler={this.onBackPress}\n  createReducer={reducerCreate}>\nIf you want to do more about the transitions, please check #2628 . If you want to do more about transitions, please have a look at #2628, it will help you with this!\nThe other part with returning to home when pressing backButton is weird.. I see you already implemented the routerReducer, have a look at the logs : is there a list of routes similar as it should be with what you are doing in your navigation logic?. This issue is known and duplicated from #2718. Check #2737 . Show your navigation code please.. Ok.. so what's your issue? If it navigates properly I don't really think it is an issue with the library (because you are doing it well, maybe add an initial scene) but more like a problem with your components. Not related to RNRF, use StackOverflow if you want help with this issue.. The \"replace\" type will not affect the transition, it will affect your navigation stack.\nIf you want to fix your transition issue, please have a look at #2628, I still have to do a PR for this but I'm too busy with my own work... Because this is not really related to RNRF, you should create a template Component with a footer and taking children as params which will be your Components you need.\n```\nimport FooterComponent from 'path'\nclass ParentComponent extends React.Component {\n  render() {\n    return (\n      \n        {this.props.children}\n        \n\n    )\n  }\n}\nexport default ParentComponent\n```\nand then\n```\nimport ParentComponent from 'path'\nclass ChildComponent extends React.Component {\n  render() {\n    return (\n      \n\n          {/ put all the stuff you want /}\n        \n\n    )\n  }\n}\nexport default ChildComponent\n```\nSo then, you create as many differents ChildComponent you need and you pass them as Scene's Component. @melkayam92  what's the status there?. Check #2001, comments are helpful and will give you an overall idea.\nimo, v4 is really fine, better than the v3, more complete and more fluid, I'm really happy to use this library for my Android app !\nClosing this because it's kind of a duplicate of #2001. @SurpassRabbit don't forget to help the community, if you closed this issue because you found the solution, share it ! You might not be the only one with this issue.. That's what I'm using when I need to debug, don't know if there's something else but it's enough for me. Because you wrote \"ket\" instead of \"key\" in your Router. #2628 . You need to import it from react-navigation. You can create your own CardStackStyleInterpolator doing this : \n```\nimport { I18nManager } from 'react-native'\nimport type {\n  NavigationSceneRendererProps,\n  AnimatedViewStyleProp\n} from 'react-navigation/src/TypeDefinition'\nimport getSceneIndicesForInterpolationInputRange from 'react-navigation/src/utils/getSceneIndicesForInterpolationInputRange'\n/*\n * Render the initial style when the initial layout isn't measured yet.\n /\nfunction forInitial(\n  props: NavigationSceneRendererProps\n): AnimatedViewStyleProp {\n  const { navigation, scene } = props\nconst focused = navigation.state.index === scene.index\n  const opacity = focused ? 1 : 0\n  // If not focused, move the scene far away.\n  const translate = focused ? 0 : 1000000\n  return {\n    opacity,\n    transform: [ { translateX: translate }, { translateY: translate } ]\n  }\n}\n/*\n * Custom style slide in from the left\n /\nfunction forHorizontalFromLeft(\n  props: NavigationSceneRendererProps\n): AnimatedViewStyleProp {\n  const { layout, position, scene } = props\nif (!layout.isMeasured) {\n    return forInitial(props)\n  }\n  const interpolate = getSceneIndicesForInterpolationInputRange(props)\nif (!interpolate) return { opacity: 0 }\nconst { first, last } = interpolate\n  const index = scene.index\n  const opacity = position.interpolate({\n    inputRange: [ first, first + 0.01, index, last - 0.01, last ],\n    outputRange: ([ 0, 1, 1, 0.85, 0 ]: Array)\n  })\nconst width = layout.initWidth\n  const translateX = position.interpolate({\n    inputRange: ([ first, index, last ]: Array),\n    outputRange: I18nManager.isRTL\n      ? ([ width, 0, -width * 0.3 ]: Array)\n      : ([ -width, 0, width * 0.3 ]: Array)\n  })\n  const translateY = 0\nreturn {\n    opacity,\n    transform: [ { translateX }, { translateY } ]\n  }\n}\n/*\n * Standard iOS-style slide in from the right.\n /\nfunction forHorizontalFromRight(\n  props: NavigationSceneRendererProps\n): AnimatedViewStyleProp {\n  const { layout, position, scene } = props\nif (!layout.isMeasured) {\n    return forInitial(props)\n  }\n  const interpolate = getSceneIndicesForInterpolationInputRange(props)\nif (!interpolate) return { opacity: 0 }\nconst { first, last } = interpolate\n  const index = scene.index\n  const opacity = position.interpolate({\n    inputRange: [ first, first + 0.01, index, last - 0.01, last ],\n    outputRange: ([ 0, 1, 1, 0.85, 0 ]: Array)\n  })\nconst width = layout.initWidth\n  const translateX = position.interpolate({\n    inputRange: ([ first, index, last ]: Array),\n    outputRange: I18nManager.isRTL\n      ? ([ -width, 0, width * 0.3 ]: Array)\n      : ([ width, 0, width * -0.3 ]: Array)\n  })\n  const translateY = 0\nreturn {\n    opacity,\n    transform: [ { translateX }, { translateY } ]\n  }\n}\n/*\n * Custom style slide in from the top\n /\nfunction forVerticalFromTop(\n  props: NavigationSceneRendererProps\n): AnimatedViewStyleProp {\n  const { layout, position, scene } = props\nif (!layout.isMeasured) {\n    return forInitial(props)\n  }\n  const interpolate = getSceneIndicesForInterpolationInputRange(props)\nif (!interpolate) return { opacity: 0 }\nconst { first, last } = interpolate\n  const index = scene.index\n  const opacity = position.interpolate({\n    inputRange: [ first, first + 0.01, index, last - 0.01, last ],\n    outputRange: ([ 0, 1, 1, 0.85, 0 ]: Array)\n  })\nconst height = layout.initHeight\n  const translateY = position.interpolate({\n    inputRange: ([ first, index, last ]: Array),\n    outputRange: ([ -height, 0, 0 ]: Array)\n  })\n  const translateX = 0\nreturn {\n    opacity,\n    transform: [ { translateX }, { translateY } ]\n  }\n}\n/*\n * Standard iOS-style slide in from the bottom (used for modals).\n /\nfunction forVerticalFromBottom(\n  props: NavigationSceneRendererProps\n): AnimatedViewStyleProp {\n  const { layout, position, scene } = props\nif (!layout.isMeasured) {\n    return forInitial(props)\n  }\n  const interpolate = getSceneIndicesForInterpolationInputRange(props)\nif (!interpolate) return { opacity: 0 }\nconst { first, last } = interpolate\n  const index = scene.index\n  const opacity = position.interpolate({\n    inputRange: [ first, first + 0.01, index, last - 0.01, last ],\n    outputRange: ([ 0, 1, 1, 0.85, 0 ]: Array)\n  })\nconst height = layout.initHeight\n  const translateY = position.interpolate({\n    inputRange: ([ first, index, last ]: Array),\n    outputRange: ([ height, 0, 0 ]: Array)\n  })\n  const translateX = 0\nreturn {\n    opacity,\n    transform: [ { translateX }, { translateY } ]\n  }\n}\n/*\n * Standard Android-style fade in from the bottom.\n /\nfunction forFadeFromBottomAndroid(\n  props: NavigationSceneRendererProps\n): AnimatedViewStyleProp {\n  const { layout, position, scene } = props\nif (!layout.isMeasured) {\n    return forInitial(props)\n  }\n  const interpolate = getSceneIndicesForInterpolationInputRange(props)\nif (!interpolate) return { opacity: 0 }\nconst { first, last } = interpolate\n  const index = scene.index\n  const inputRange = ([ first, index, last - 0.01, last ]: Array)\nconst opacity = position.interpolate({\n    inputRange,\n    outputRange: ([ 0, 1, 1, 0 ]: Array)\n  })\nconst translateY = position.interpolate({\n    inputRange,\n    outputRange: ([ 50, 0, 0, 0 ]: Array)\n  })\n  const translateX = 0\nreturn {\n    opacity,\n    transform: [ { translateX }, { translateY } ]\n  }\n}\n/*\n *  fadeIn and fadeOut\n /\nfunction forFade(props: NavigationSceneRendererProps): AnimatedViewStyleProp {\n  const { layout, position, scene } = props\nif (!layout.isMeasured) {\n    return forInitial(props)\n  }\n  const interpolate = getSceneIndicesForInterpolationInputRange(props)\nif (!interpolate) return { opacity: 0 }\nconst { first, last } = interpolate\n  const index = scene.index\n  const opacity = position.interpolate({\n    inputRange: ([ first, index, last ]: Array),\n    outputRange: ([ 0, 1, 1 ]: Array)\n  })\nreturn {\n    opacity,\n  }\n}\nfunction canUseNativeDriver(): boolean {\n  // The native driver can be enabled for this interpolator animating\n  // opacity, translateX, and translateY is supported by the native animation\n  // driver on iOS and Android.\n  return true\n}\nexport default {\n  forHorizontalFromLeft,\n  forHorizontalFromRight,\n  forVerticalFromTop,\n  forVerticalFromBottom,\n  forFadeFromBottomAndroid,\n  forFade,\n  canUseNativeDriver\n}\n```\nI'm using this and it's working well. Check #2628 . ```\n<Router\n  backAndroidHandler={this.onBackPress.bind(this)}\n  scenes={scenes}\n\n```\n\nWhat is in your scenes prop ?\nAnd is it doing the same when you have more than 1 Scene in your 2nd Stack ?. I was talking about the fact that you had a scenes={scenes} as prop in your Router, not your onBackPressfunction, but you preferred edit your post and remove this..\nAnyway, you have 2 Stack with the same key, there's an issue there. And also, how are you navigating to your Scene ? Are you navigating to the Scene or to the Stack?. Show some code ???. What's the behaviour when you use Router instead of RouterWithRedux ?. That was no what I was not meaning but anyway, can you have more logs about this bug? deep-linking is supposed to work so I'm not sure the issue is with the library. @EvianZhow I'm developing on Android and I'm using react-native-branch-deep-linking on my end, I'm sorry. @EvianZhow what's the status there?. You should use the v4 of RNRF, v3 is not supported anymore.\nIf this is about passing props, you have to read the doc and check the Example project.. Considering your logic, this is the expected behaviour.. As a react-native Android developer, I really recommend you to always test on a production configuration at every big steps of your project. You would be surprised of how big the differences between a debug release and a production release (at least, on Android, no idea about the behaviour on iOS)\nThe process to deploy a release version/signed apk is easy and fast, have a try : https://facebook.github.io/react-native/docs/signed-apk-android.html\nKeep me in touch !. Ok nice, good luck with your app !. rm -rf node_modules\nyarn cache clean\nyarn install. @sharkrice, just upgraded from 0.24 to 0.27 and looks like you're right, I've got the same issue.\n@aksonov, could you have a look on this please?. @aksonov just upgraded and everything looks fine !\n@sharkrice closing this as it's solved, upgrade your RNRF version properly to 0.28. Yeah same for me, I downgraded to 0.24 because it is enough stable for me and I'm in a hurry but yep, I also have these issues as well as some Illegal invocation warnings.\nThe TypeError: Cannot read property 'map' of undefined appeared for me because of the type='replace' in my scenes\n@aksonov I guess @sharkrice gave the good fix?. Yeah I'm now using .27 because .28 is broken with this. This one is stable, be careful to put\n\"react-native-router-flux\": \"4.0.0-beta.27\" and not\n\"react-native-router-flux\": \"^4.0.0-beta.27\"\nBut then, considering the original issue, not sure if this will help you. This is a known issue #2799 \nI'm closing this but if you want to use 0.28, do as what @sharkrice said, otherwise, if you don't need the features from 0.28, I suggest you to downgrade to a stable version (like 0.24 in my case) until it's fixed.. Have a look at this please: #2675 . Giving the solution is a good practice before closing an issue :). Duplicate #2799 . Is it a debug or release version? . If this is on Android, you shouldn't have to worry, I'm developing on Android and the debug is way slower than the release version !\nDon't know about iOS. If you want to implement transitions in your navigation, have a look at #2628 . @v3yr0n what's the status there?. You want your Modal to open from the bottom? If that's right, have a look at #2628 . I don't know I don't use tab bar on my project :/ give it a try and see ? Should be quick to check if it's doable or not :). Use the listener on BackHandler (imported from react-native)\n```\nthis.loginBackPressHandler = BackHandler.addEventListener('loginBackPress', () => {\n  if (yourConditionToNotExitTheApp) {\n    return true\n  }\n  return false\n})\n\n```\nAdd this in your componentDidMount for example. This is not how the library works. You should just add these other Scenes in your first Router and adapt your logic.. Duplicate, downgrade to .27. In your transitionConfig, apply CardStackStyleInterpolator.forInitial to the Scenes where you don't want a transition animation. If there is not transition in push, there will be no transition in pop.\nWhen I gave you the solution, it was working for me as you may expect, and it still works now after testing.\nShow me your transitionConfig and the steps of your navigation.. First, did you really have a look on the Example project??? Because Actions.pop() is very popular and is known to work.. So I'm really convinced you haven't checked how to use it.\nSecond, would you mind showing more of your code please in case of the Example project is not clear enough for you to understand Actions.pop(). You are not even using Actions.pop() and still, you open an issue about it ?!. Maybe because all your scenes are in type='replace' so there is nothing to go back to in your NavigationStack?\nCheck the doc and the Example project before opening an issue please.. Have a look at the Example project next time, it will be very helpful in your case !. Be careful with your packages that you clean the cache before reinstalling them, you might have some troubles.\nAnyway, what is your situation? The Example project is the true example of what you should follow to use this library, especially to just change scenes... rm -rf node_modules\nrm yarn.lock\nyarn cache clean\nyarn install\nIf you're on Android : cd android && ./gradlew clean\nThen run on your device. <View {...this.state._panResponder.panHandlers}\n  style={{\n    width,\n    height,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'white',\n  }}>. Do something like : \nFor Android BackButton : \nthis.usersFavouriteDeviceBackPressHandler = BackHandler.addEventListener('usersFavouriteDeviceBackPress', () => {\n      if (Actions.currentScene === 'usersFavouriteDevice') {\n        Actions.home({ type: 'replace' })\n        return true\n      }\n      return false\n    })\n(don't forget to remove the listener in WillUnmount)\nAnd then, if you're using a back button on your screen, override your code and implement something like the Android code, meaning that instead of pop your scene, you replace it with your home scene. Use the BackButton listener or just a listener, there's already closed issues about it, have a look please.. I don't understand your point here.. You were talking about a back button to kill your app so it's Android.\nNow you're talking about exiting your app when you're on your Home page and on iOS right ? I'm not sure about the iOS experience here, but why would you kill the app if this is on iOS? What does your Home page look like ?\nAnd what's the issue with sliding view you're talking about ?. Duplicate of ~5 existing issues.\nreact-native-router-flux: 4.0.0-beta.27 if you want to make it work.. @safacaki try this ?\ndrawerLockMode | enum('unlocked', 'locked-closed', 'locked-open') | \u00a0 | If a child of a drawer, specifies the lock mode of the drawer (https://facebook.github.io/react-native/docs/drawerlayoutandroid.html#drawerlockmode)\n-- | -- | -- | --\n. It makes sense... I don't really understand your project. Help me please :\nYou have a home screen, where there is a logout button. You click on this button, so you go from the home screen to the login screen.\nWhat is this logout screen?\nWhat do you really want here? When you launch your app, you want to know if you should either go to the Login Screen (to log you in), or to the Home Screen if you're already logged in? Is that right ?. Not related to RNRF.\nRead the react-native docs or use Stackoverflow.. Could you elaborate please?. @panhs what's there status there?. Use the title or renderTitle property.. Could you add more infos please? What are you trying to do? Show some code ?. Try RNRF .27. Hey @dborzouei, please add this in your code so you can see what really happens : \nconst reducerCreate = (params) => {\n  const defaultReducer = new Reducer(params)\n  return (state, action) => {\n    console.log('Action :', action)\n    console.log('State :', state)\n    return defaultReducer(state, action)\n  }\n}\nWhat does your reducerCreate function tells you in the logs? Can you tell me please? Because I see you have it.\nBtw, you need to have your first Scene to have key='root' :) The Scene which contains all your scenes. Well, it's working with Actions.pop() so it's ok no?. So use Actions.pop() no ???? Why keep using navigation.goBack() if it's not working but it's working as expected with Actions.pop() ?!\n. If it is about the transitions, have a look at #2628 please :) You will find your answer here. Ask if you need anything else.. It is on .28, it works on .27. Be careful if you are not in a release mode because the app could respond very slowly when navigating.\nOn my end, my app has no worries with the navigation part. It may be slow but only in debug mode, and even more with the remote debugger active but otherwise it's fine.\nAnd I'm working on an Android device.. @AgNm what's the status there?. Even in a release mode?. First, you should have a Stack/Scene with the key 'root' as a Parent.\nSecond, why are you doing this ?. @KunwarSingh status there?. What if you do this :\nreturn (\n      <Provider store={store}>\n        <Router getSceneStyle={() => styles.sceneStyle} navigationBarStyle={{ backgroundColor: 'transparent', borderBottomWidth: 0 }}>\n            <Scene transitionConfig={TransitionConfiguration} key=\"root\">\n                <Scene key=\"getHomeNoLogin\" initial={true} component={Component1} />\n                <Scene key=\"getLogin\" component={Login} />\n                <Scene key=\"getForgotPassword\" component={ForgotPassword} />\n                <Scene key=\"getSignup\" component={Signup} />\n                <Scene key=\"getHome\" component={Home} />\n                <Scene key=\"getInfo\" component={Info} title=\"INFORMA\u00c7\u00d5ES\" navBar={CustomNavBar} />\n                <Scene key=\"getInfoDashboard\" component={InfoDashboard} navBar={CustomNavBar} />\n                <Scene key=\"getInfoDetails\" component={InfoDetails} navBar={CustomNavBar} />\n                <Scene key=\"getSchedule\" component={Schedules} title=\"Tratamentos\" navBar={CustomNavBar} />\n                <Scene key=\"getAlerts\" component={Alerts} title=\"ALERTAS\" navBar={CustomNavBar} />\n                <Scene key=\"getHistory\" component={History} title=\"HIST\u00d3RICO\" navBar={CustomNavBar} />\n                <Scene key=\"getSettings\" component={Settings} title=\"DEFINI\u00c7\u00d5ES\" navBar={CustomNavBar} />\n            </Scene>\n        </Router>\n      </Provider>\n      );. Yep I'm doing the same, it's just that I don't have a View containing my Router.\nEverything works fine on my Android App when doing this, maybe this is an issue with your Scene Component. No I don't have any video running in background, sorry, but yes, I'm developing on Android.\nAt this point, I am not really sure that the issue is related to RNRF as it works on iOS. Check SO, might have an issue with video and Android. Great! :). It's definitely on your side, you must have done something wrong in your own implementation.\nActions.key works fine on Android.. Tab Scene (child  within Tabs)\nA Scene that is a direct child of Tabs and can use all props listed above in Scene\nProperty | Type | Default | Description\n-- | -- | -- | --\nicon | component | undefined | a React Native component to place as a tab icon\ntabBarLabel | string | \u00a0 | The string to override a tab label\n. Try hideNavBar in your Tab Scene? . Show me your code again please?\nIf you just apply this to your Tab Scene : type={ActionConst.RESET} key=\"tab1\" component={StudentsList}, is it ok?. In your Tab Scenes : \nRemove onRight, rightTitle, title, hideTabBar. Use tabBarLabel instead. You can try to push a new Scene with a type replace or reset instead?\nOr you can handle your Actions.pop according to where you should stop pop.. Well, you pop your Scene D and you replace your C by E then ?. > we can't achieve this by Actions.pop.\nI'm doing this on my own app and I had/have no troubles. Surely because you're in debug mode.\nYou may have troubles getting rid of the transitions animations, but your Scene shouldn't be visible at all, or not that long, when doing this. @bishalshr status there ?. Duplicate #2865 . Not supported\nhttps://github.com/aksonov/react-native-router-flux/issues/2639. ??. Show your main file with all your Scenes, as well as your imports please. And not related to RNRF. It looks solved. \nrenderTitle | React.Component | \u00a0 | React component to render title for nav bar\n-- | -- | -- | --\n. Downgrade to RNRF .27 :). Check the Example project please, it's done there, something like this : \nActions.refresh({title: \"Changed title\", data: \"Changed data\"})}. Not supported\nhttps://github.com/aksonov/react-native-router-flux/issues/2639. It's working well on my end, you must have done something wrong in your code.. It is not related to this library, you must do something wrong in your code. If you still have this problem, go on StackOverflow and check examples on internet. setState works fine as you can see on the example project. What exactly are you doing when you're rendering a new Scene that is not is the expacted behaviour ?\nShow some code (formatted) please, and detail your navigation flow. It is very unclear.. If this is about Scene 1 -> Scene 2 -> Scene 1 and that, when going back to your Scene 1, there should be a change, you should check https://reactjs.org/docs/react-component.html#componentwillreceiveprops, it should help you in your case.\nOf course, it depends on how you handle your store and props.. Also, as you can see in the doc :\nonEnter | Function | \u00a0 | Called when the\u00a0Scene\u00a0is navigated to.\u00a0props\u00a0are provided as a function param. Only scenes with 'component' defined is supported. Your component class may also have\u00a0onEnter\u00a0function\n-- | -- | -- | --\n. I guess you don't handle your store properly, are you using redux or some equivalent ?\nIf no, you should consider using it, you will easily fix your problem as you could use your orders as props and map these props to your state, re-rendering your Scene 1.\nIf yes, you're doing something wrong.. \n\n. #2628 . What are you doing exactly ? Have you cheched the example project to know how to use this library??. No because I don't see the point of using refs on Action. And this might not be defined in Actions.. You've asked on StackOverflow and somebody replied. I will not do your researches for you. I'm here to help you using this library and I asked you more details, which you didn't.\nWhat you could do is :\n\nEither use a HOC\nEither use Redux to pass the same method in your components\nEither use your method as a prop and doing the trick in this way\n\nThere's a large amount of ways of doing what you want. You don't need Actions.refs to do that, which includes there is no need to open an issue on this library, so, YOU HAVE TO DO THE RESEARCHES.\nClosing this.. https://github.com/aksonov/react-native-router-flux/blob/master/docs/API.md\nScene\nrenderTitle | React.Component | \u00a0 | React component to render title for nav bar\n-- | -- | -- | --\n. You can do the trick using https://facebook.github.io/react-native/docs/platform-specific-code.html. This is a known issue, .27 is more stable. Works fine for me, are you sure it really is .27 and that you did nothing wrong in your package.json ?. @NSShentu can you show me your package.json when you're on .27 please? As I said, it's working fine on my app with .27. There's already a lot of issues about this, did you even check ???\nUpgrade to .27.. It is a known issue, check for existing issues before opening one please.. You might have replace the navigation stack at a moment, Actions.pop works just fine, the issue is in your code, not in the library.\nHave a look at the example project, the best practices and the solution for your problems will be there.\nMoreover, check your navigation stack by doing this : \n```\nconst reducerCreate = (params) => {\n  const defaultReducer = new Reducer(params)\n  return (state, action) => {\n    console.log('Action :', action)\n    console.log('State :', state)\n    return defaultReducer(state, action)\n  }\n}\n...\n...\n\n```\nYou will have the best overview to see what's wrong.. You mean <Stack>, no?. Never had the issue while doing it, and this is not related to this library.. \ncomponent | React.Component | semi-required | The\u00a0Component\u00a0to be displayed. Not required when defining a nested\u00a0Scene, see example.\n-- | -- | -- | --\nIt is component with a lowercased c. Show you ScarletScreen component code please. It is because type is a prop already used in this library (i.e. reset, refresh etc..), this is why it was not working.\nA quick look at the API would have helped you.. Downgrade to RNRF .27 and try Actions.search_product() instead please. Can you show your package.json please?. As I was expecting.. you should have a look at this https://docs.npmjs.com/files/package.json#dependencies\nThen, after you had a look and clearly understand this part, do the following steps : \n\nReplace \"react-native-router-flux\": \"^4.0.0-beta.27\" by  \"react-native-router-flux\": \"4.0.0-beta.27\"\nrm -rf node_modules\nrm yarn.lock\nyarn cache clean\nyarn install\nre-run / re-install. Try removing the {} in\n import { Login } from './Login';\nimport { SearchProduct } from './SearchProduct';\nimport { DetailProduct } from './DetailProduct';. Check the version of RNRF in node_modules, it should be .27 and .27 isn't supposed to break.\nCheck that the imports are correct where you create the Router\nShow me how you navigate through your app. Also, is it breaking only when you press on the TouchableOpacity ?. <TouchableOpacity style={Style.btnLogin} onPress={() => Actions.push('search_product')} activeOpacity={0.8}>\n\nIs it still this ?\n. What is you SearchProduct Component ? Is it the same behavior when you navigate to any other screen?. Also, it is hideNavBar and not hidenavbar, but it should not fix your issue. Oh, I just realized you had the react-navigation dependency in your package.json, could you remove it please and retry with a fresh install ?. Upgrade to v.27, this one is stable. What I am doing on my end is : \n<Router\n          backAndroidHandler={this.onBackPress}\n          createReducer={reducerCreate}>\n          <Stack\n            key='root'\n            hideNavBar\n            transitionConfig={() => ({\n              screenInterpolator: (props) => {\n                const { scene, scenes } = props\n                switch (scene.route.routeName) {\n                  case 'myScene':\n                    return theTransitionIWant\n                  default:\n                    return defaultTransition\n                }\n              }\n            })}>\n            <Scene\n              key='myKey'\n              component={myComponent}\n              initial />\n// all my other scenes\n          </Stack>\n        </Router>\nAs I'm not using the Tab, Drawer or Modal, I don't need to use nested scenes, I just put them all inside of my Stack :). Maybe you could provide more details no ??!!. The Scene with key='root' should wrap all your scenes\nAnd please, it's unreadable, check how to format a post.... Show your Router code please, and show an example of how you pass your data.\nAs aksonov said, everything is detailed in the Example project, you obviously did something wrong because passing props works fine.. onBackPress() {\n    if (Actions.state.index === 0 || yourCustomCondition) {\n      return false\n    }\n    Actions.pop()\n    return true\n  }\nand then\n<Router\n          backAndroidHandler={this.onBackPress}>. Just.. why? I don't think it is a good practice at all, and the library is already good enough to do whatever you want, what you're doing is not very appropriated to the library and kind of useless.\nI strongly advise you to check the example project and understand the library. Why would you need to wrap the component instead of passing them as props ?. Use the scene you want to test as initial\nYour issue is actually not an issue.. it is a common behaviour and it totally makes sense. npm ERR! Please check if you have git installed and in your PATH.. There's no code to watch actually.\nMoreover, the error message is clear enough, there should be one wrapper inside of your Router like this : \n<Router>\n  <Stack key='root'>\n    <Scene />\n    <Scene />\n    <Scene />\n    <Scene />\n    <Scene />\n  </Stack>\n</Router>\nCheck the Example project for more infos. If this may help you, when I need to overwrite the backAndroidHandler I'm doing this in the constructor of the Component I want to change the behaviour : \nthis.myComponentBackPressHandler = BackHandler.addEventListener('myComponentBackPress', () => {\n      if (Actions.currentScene === 'myComponentKey' && someCondition) {\n        doSomething()\n        return true\n      }\n      return false\n    })\nAnd of course, I remove the eventListener in the componentWillUnmount()\nWhat I think you're doing wrong is maybe using Actions.state.index there, are you sure that you haven't reset or replace your stack when going to your Password Component ?. Could you please try to put key='root' instead of your key='App' please ?\nAlso, try to put some logs to be sure you overwrite the backAndroidHandler in the Router. You could check with adb logcat while testing your app without the debug mode :). Happy you found the solution. Weird edge case but obviously it was not linked to this library.\n. ",
    "maphongba008": "Tks. I just found the answer at #561\n. ",
    "Gvade": "While working on android implementation of my app, I couldn't find any mention of navigation to be of height 54 in Material UI docs here. Seems that App bar (called NavBar here) should be 56 for mobile portrait layout case.\n\n. ",
    "michaelkclements": "@flaviotobi Still the same unfortunately. \n. No cure from either solution unfortunately.\nTrying to put Actions.register in componentDidMount in App.js to see if it's an onPress issue.\n```\ncomponentDidMount() {\n// Did nothing\n// Actions.register\n// ()=>Actions.register()\n\n// Same Error\n// Actions['register']()\n// Actions.register()\n\n}\n```\n. It turns out the issue was I had a button in Header.js that had onPress={Actions.pop()}\nThat broke that page instead of what I thought was breaking it. Thanks so much for your help though @flaviotobi \nUnfortunately onPress={Actions.pop} won't work either so I need to figure that out, but I'd say this issue is closed.\n. ",
    "feyy": "+1\n. Then I think this is impossible. Because the prev page maybe has been destroyed. And there is not much revenue to do this.. ",
    "icynoangel": "Same here.\nI have scene1 that will do Actions.scene2() when a prop it receives is set.\nThen in scene2 on button press I am doing Actions.scene3(), and somehow the app goes through scene1, I can see scene3 for a second, then I am redirected back to scene2.\n. ",
    "thecachedbyte": "Any work around for this issue? This is happening every time we are doing quick navigation between scenes.. With 3.x version i was able to achieve these requirements. By passing style via getSceneStyle. I used createReducer hook to have a onEnter kind of life cycle.\n```\nconst getSceneStyle = (prop) => {\n  if (prop.scene.navigationState.overlay) {\n    return {\n      backgroundColor: 'transparent',\n      transform: [],\n      opacity: 1\n    };\n  }\n  return {};\n};\nconst AppRouter = () => (\n   {\n      const defaultReducer = Reducer(params);\n      return (state, action) => {\n        // this is how i was able to have a onEnter kind of event lifecycle\n        if (action.scene && action.type === ActionConst.FOCUS && action.scene.component) {\n          const targetComponent = action.scene.component;\n          if (targetComponent.onScreenVisible) {\n            targetComponent.onScreenVisible(action.scene);\n          }\n        }\n        return defaultReducer(state, action);\n      };\n    }}\n\n// normal scenes\n<Scene key=\"home\" component={Home} initial />\n\n\n// scenes with bottom-to-top animation\n<Scene key=\"filter\" direction=\"vertical\" component={Filter} />\n\n// scenes with transparent background (overlay)\n<Scene overlay animationStyle={{}} key=\"error\" component={ErrorToast} />\n\n\n);\n```\nOne of my observation with 3.x when i was using documented way for popups (https://github.com/aksonov/react-native-router-flux/blob/v3/docs/OTHER_INFO.md#modals), there was a significant drop in navigation performance. That was the reason i opted for custom handling for overlay (popups) using getSceneStyle.. @Anandks1993 But ActionConst.REPLACE will only replace the current screen, right?\nBut my requirement is to reset the whole route stack.. Can someone guide how this issue can be solved? Would love to contribute. ",
    "KirMcC": "I'v also created a bare bone test case, using only react-native and react-native-router-flux. The same issue still appears.\n\n. ",
    "Raktima": "I have the same problem! It happens ever since i started using reset function of react navigation\n. ",
    "strommmm": "this issue occurs not only on IOS, but on android, when i upgrade my react-native version to 0.35.0\n. ",
    "zhanbst": "It's not only with ScrollableTabView\nI have this problem too with react-native-meteor Switch feature\nand version react-native 0.35.0\n1311 same issue and ref #1270\nI fixed it with sub-scenes (trick), first sub-scene (tab1_0) on componentWillMount was replaced to tab1_Home (Actions.tab1_Home({type:'replaced'}))\n<Router createReducer={reducerCreate} sceneStyle={{backgroundColor:'#f7f7f7'}} hideNavBar={true}>\n<Scene key=\"modal\" component={Modal} >\n                    <Scene key=\"root\" hideNavBar={true}>\n                    <Scene key=\"launch\" component={Launch} title=\"Launch\" initial={true} style={{flex:1, backgroundColor:'transparent'}}/>\n                    <Scene key=\"tabbar\" tabs={true} hideNavBar={true}>\n                        <Scene key=\"tab1\" initial={true}  title=\"Tab #1\" icon={TabIcon} >\n<Scene key=\"tab1_0\" hideNavBar={false} initial={true}  title=\"Tab #1\" icon={TabIcon}  component={RedirectToHome}>\n<Scene key=\"tab1_Home\" title=\"Launch\" component={HomeScreen} />\n</Scene>\n                        <Scene key=\"tab2\" component={SearchScreen}  hideNavBar={false} title=\"Tab #2\" icon={TabIcon}/>\n                        <Scene key=\"tab3\" hideNavBar={false} component={NotificationScreen} title=\"Tab #3\" icon={TabIcon}/>\n                        <Scene key=\"tab4\" hideNavBar={false} component={ProfileScreen} title=\"Tab #4\" icon={TabIcon}/>\n                    </Scene>\n                    <Scene key=\"error\" component={Error}/>\n                    </Scene>\n                </Scene>\n            </Router>\n. Use this event at initial tab  Actions.calendar({type: ActionConst.REFRESH});\n```\n\n {\n      Actions.myTab_1({type: ActionConst.REFRESH});\n    }}\n\n  <Scene key=\"myTab_1\" component={MyTabComponent} hideNavBar/>\n\n\n\n```\n. may be use style props bottom to renderLeftButton too?\n. \n",
    "phuongpt": "this issue can be fixed by @zhanbst's solution here https://github.com/aksonov/react-native-router-flux/issues/1311#issuecomment-255790686\nbut when access tab from places which not from tab bar (such as side menu), adding type: \"refresh\" causes other issues, for example change tab title or pass props not working\n. thanks @zhanbst \n. @Naoto-Ida I have no problem with back button. I'm getting issue with side menu icon \n. thanks @ddeanto @Mattk14!  it works for me.. ",
    "ilkeraltin": "@dannycochran  It doesn't seem that these are similar problems.\nin feed component i can see re-rendered props with code you can see below, but this time, firstly component renders with old data and after that it renders with new data. double render problem :/\n```\n  componentWillMount() {\n    console.log('componentWillMount', this.state.category);\n      this.fetchNews(this.props.category);\n  }\ncomponentWillReceiveProps(nextProps) {\n    console.log('componentWillReceiveProps', nextProps);\n  this.fetchNews(nextProps.category);\n}\n```\n. @dannycochran  thank you, will check it out.\n. ",
    "Mimicx": "i have the same issue, there is a solution for this ?. What happen if only want the rightButton, there is not a leftTitle, any solution?\n. Same issue\n. Add this gesturesEnabled={false} into the Scene. hi bro, did you solve this?. hey guys, the drawer works fine in Android, but in iOS i can't hide the status bar. Any ideas?\n. Any Solution ?. ",
    "hos4m": "Actions.refresh({ newPropKey: newPropData }). ",
    "johnwiseheart": "This seems like a pretty good solution. The solution I came to was providing the onBack attribute on each navigation call, which wasn't that nice of a way to handle it.\n. ",
    "dmhood": "I fixed this issue by deleting .../java/com/example since .../java/com/aksonov/routerflux/example appeared to be the same thing/the actual package name.\n. @rturk I'm not sure how it is that much different?  The only thing I changed from the example (https://github.com/aksonov/react-native-router-flux/blob/master/Example/components/TabView.js) is that I added the componentDidMount method  in order to track when the component is mounted. \nI'm not talking about hitting those buttons that you refer to (that do duplicate the logic).  They are just part of the original example that is part of this repo.  The component is mounted twice when you actually use the core tabs component to navigate to another tab, and back to the initial component.\n. @wrozka yep, there seems to be a few issues like this that have cropped up with the recent changes to props/tabs.  Maybe we can work with that commit and come up with a good PR?  I don't have time at the moment but am willing sometime next week (although if anyone else can, please do).\n. https://github.com/aksonov/react-native-router-flux/pull/1312 fixes my issue, so I'm going to close...feel free to re-open if any other discussion needs to take place.  Thanks @wrozka !\n. ",
    "csotiriou": "If someone starts investing time into this, would you consider migrating into the react native's core component, even before it was made 'stable'?\n. ",
    "JunFenglee": "+1 happens to me too .\nAdtionally, I change the navigation bar title  with \"Actions.refresh(\"title\":\"changed Title\")\" after mounted the first tab. however, title change to default title after I switch to tab 2 and go back to tap 1. \n. ",
    "czl1378": "@wrozka Thanks for this PR! But found that when I use this with Redux, the scene cannot change.\nHere is my reducer:\n```\nimport { ActionConst } from 'react-native-router-flux'\nconst initialState = {\n  scene: {}\n}\nexport default (state = initialState, action = {}) => {\n  switch (action.type) {\n    case ActionConst.FOCUS:\n      return {\n        ...state,\n        scene: action.scene\n      }\n    default:\n      return state\n  }\n}\n```\n. Thanks for your PR!\n. ",
    "pouu69": "Is the issue resolved? I have the same issue.\n. ",
    "tclain": "you're right :-) I will try this. thanks !\n. ",
    "cmrichards": "Isn't componentWillMount only called when it's first mounted?  So if you went back (pop()) to that screen it wouldn't be called.   I'm looking for a method called whenever it becomes visible again.\n. That will work, but it means you have to remember to add \"refresh:{...\" whenever you pop back to that component.  Feels a tad hacky.\nI think it'd be nicer if another life cycle method something like this existed on the component: \nsceneWillBeDisplayed() {\n    ...refresh anything I please...\n}\n. I don't think the way you're using redux is correct.    There's no reason to switch your tempVals to vals,  just use vals.    You can then clear vals from within a reducer after you have saved the data.\nHere is one way to do what you need :  \nYou'll need to install redux-thunk for this to work.\n```\n// action creators\nfunction createObject(data) {\n    return {\n        type: \"CREATE_OBJECT\",\n                data\n    }\n} \n// One of your reducers would react to this action and clear the vals state\nfunction clearForm() {\n    return {\n        type: \"CLEAR_FORM\"\n    }\n}\nexport function submitForm() {\nreturn (dispatch, getState) => {\n    dispatch(createObject(getState.vals)).then(() => {\n        dispatch(clearForm())\n    }).then(() => { \n                    // After the data has been processed and the form cleared, navigate with react native router flux to a different page\n        Actions.mainPage()\n    })\n}\n\n}\n```\nWithout knowing exactly how your using the data in the form it's not really possible to know how the action creators and reducers should work. \nIf you're saving the data to a server then you'd probably want a \"fetch\" operation in the submitForm() method to send the data to your backend server\n. You wouldn't need to run refresh if the correct parameters were passed as part of the original route.\nBut, if you do really need to run refresh in ComponentDidMount  then it's not really a big deal because React is quick and will only render what has changed, and if that's only text in your navigation bar then it shouldn't take long.\n. Have you read about sub-scenes?\nhttps://github.com/aksonov/react-native-router-flux/blob/master/docs/OTHER_INFO.md\n. ",
    "openmynet": "js\n        <Scene key=\"Demo\"\n          component={Views.Demo}\n          titleStyle={titleStyle}\n          getSceneStyle={getSceneStyle}\n          navigationBarStyle={navStyle}\n          NavigationBarBackgroundImage = {bgimage}\n          renderRightButton={(e) => <RightButton />}\n          renderLeftButton={(e) => <RightButton />}>\n        </Scene>\n. ",
    "cekerholic": "I had the same issue too. Here's what I do:\n``` js\nvar scenes = [\n  {\n    key: 'first',\n    component: First,\n    initial: true\n  },\n  {\n    key: 'second',\n    component: Second\n  }\n]\nvar allScenes = scenes.map((scene) => {\n  return (\n    \n  )\n})\n\n\n    {allScenes}\n  \n\n```\nHope this helps\n. ",
    "Mirodil": "Thanks, I've done similar way\n. ",
    "reinvanspaendonck": "You can send props by adding them to the Scene component. e.g.:\n<Scene key=\"root\" component={MainComponent} title=\"Friends\" icon={TabIcon} customTabProp={'users'} />\n. ",
    "mehdichamouma": "Any solutions ?. ",
    "dininski": "It turns out that it was an issue with the drawer incorrectly calling onClose and refreshing the Main view\n. @gsavvid of course\nIn my case when rotating the device for some reason the Drawer was still \"bound\" to the previous view and was executing the default onOpen and onClose callbacks with the previous Action as a context  trying to refresh the previous view. I used the code from the default sample in the docs:\nonOpen={()=>Actions.refresh({key:state.key, open: true})}\n                onClose={()=>Actions.refresh({key:state.key, open: false})}\nhowever removing those callbacks where I set up my drawer component fixed the issue.\nI was using this - https://github.com/aksonov/react-native-router-flux/blob/master/docs/OTHER_INFO.md#drawer-side-menu-integration but with the onOpen and onClose handlers removed.\n. ",
    "gsavvid": "@dininski I'm having the same problem and I'm suspecting it's also related to the drawer. However, I still can't find the solution. Could you please share what solved it for you?\n. ",
    "WillCoco": "thanks\n. ",
    "leonacky": "@zhanbst Not work with latest version. You can make a root view contain Router.\nIf you don't know how to do it\nI can help you. Pls skype me: tuan.dv2011. ",
    "Ehesp": "Have you left it a while?  There's a known problem with Animations in general when debugger is open causing the app to run very slowly.\n. You should try rendering a placeholder while the animation is in progress, this is mentioned in the core RN docs. See if this helps:\n```\nconstructor() {\n      super();\n      this.state = {\n        renderPlaceholderOnly: true,\n      };\n    }\ncomponentDidMount() {\n  InteractionManager.runAfterInteractions(() => {\n    this.setState({\n      renderPlaceholderOnly: false,\n    });\n  });\n}\n\nrender() {\n    if (this.staterenderPlaceholderOnly) {\n        return null; // render some non-heavy component\n    }\n\n    // render images here\n}\n\n```\n. Yeah you're images should not be MB, they should be <200kb if you can help it.\nCheck out: https://facebook.github.io/react-native/docs/performance.html#slow-navigator-transitions\n. ",
    "Ruzo": "Strangely quiet around this issue. I and at least another student of The Complete React Native and Redux Course on Udemy has the same issue. Seems like JohnAntonusMaximus might be following the same course so there might be something in common with it.\nFor the record, I'm using VS Code with the React Native Tools extension.\n. ",
    "franzherzog": "Same Issue here. Using Nexus5 Emulator.\nBut when I am switching to real device, debug remotely just works fine.. updated emulator and now it is running smoothly :)\nEmulator: \n- Nexus 5 Android 7.1.1 API level 25. ",
    "antoligy": "I'm looking for very similar functionality to this, which seems to have been possible in version 2...\nAs far as I can tell, for the meantime the recommendation is to include custom navigation components within scenes...\n. ",
    "vasilycrespo": "+1. +1 It would be handy to have a function to reset the history programatically (once you are on the Scene), I think it would fit this scenario as well, something like History.reset() or even something that allow to delete a number of previous Scenes for example, only delete the previous Scene but keep the rest, that would be awesome!. ",
    "abologna-r7": "Same here, but looking for persistent elements rather than just navigational elements. . Happens to me as well on a clean react-native project on iOS device.\nVersion\nTell us which versions you are using:\n\nreact-native-router-flux v3.38.1\nreact-native v0.44.0\nreact 16.0.0-alpha.6. Same here:\n\nVersion\nTell us which versions you are using:\n\nreact-native-router-flux v3.38.0 (v3.38.1 still has the Dimension error)\nreact-native v0.44.0\nreact 16.0.0-alpha.6. \n",
    "xyy7260": "Why, not practical /reset/  this method. ",
    "dancomanlive": "This is not working for me on RN 0.48, ReactNavigation 2.0 with     \ncomponentWillMount = () => BackHandler.addEventListener('hardwareBackPress', () => true);. ",
    "christopherhein": "@raminious Did you ever find a way around this?. Ah okay thanks!. ",
    "raminious": "@christopherhein I'm sorry for late response, I changed my app flow to don't depend on componentWillReceiveProps() fn. \ud83d\udc4d Same issue\n. ",
    "qpowell": "@aksonov  @ddolheguy  Is this going to be updated on master, or is the recommended to solution to override Navbar.js and fix it locally? Thanks. @aksonov thanks for the quick response!. ",
    "AndreaRylander": "Hi, I am having a similar problem. renderLeftButton is not rendering the button, but if I use the same code for renderRightButton that button is rendered.\n<Scene\n         key=\"bookingView\"\n                        component={MobileBooking}\n                        title=\"Home\"\n                        type = \"replace\"\n                        renderBackButton={() =>{return null;}}\n                        renderLeftButton={() => {\n                          return(\n                            <View>\n                              <TouchableOpacity>\n                                <Ionicons name=\"md-menu\" size={30} color=\"#fff\" />\n                              </TouchableOpacity>\n                            </View>\n                          );}}\n                    />\nVersions used: \nreact-native-router-flux: 3.38.0,\nreact-native : ^0.43.4. ",
    "gavin-gmlab": "I'm having this problem also\nreact-native-router-flux v3.35.0\nreact-native v0.35.0\n. Didn't work for me. Mine is also nested with wrapper, but the problem seems to be if I have hideNavBar='true' in 2 successive components. Created issue #1330 \n. @peterkruty, thanks - it kinda worked for me, but there were side effects.\nI put the Actions.mainScreen({hideNavBar: false}) into my Button on the loginScreen - seems like this action is called automatically cause it automatically transitions straight to the mainScreen without me having to press anything (I am just doing UI work for now)\nAlso, there was a warning about setState(...): Cannot update during an existing State transition, which wasn't there before. There is no setState in my render() function for either screen. Could be from the Button component - not sure how it is implemented since I am using the one from 'react-native-elements'\n. Similar issue #1330 . Is this going to be officially fixed?. ",
    "kevinlethe": "Try inserting a scene without a component as as a wrapper around the scenes contained within the drawer component.\nSo\n\n\n\n(Sorry for the layout, I'm on mobile)\n. Totally screwed up the layout, but it should be\nScene with drawer component\n  Scene with no component\n    Other scenes with component s\n. ",
    "desmondhume": "@scerelli I managed to disable all transition animations by setting duration={0} on the Router itself.\njsx\n<Router duration={0}>\nMaybe you have to use less scarseria.\n. ",
    "Almouro": "I'm seeing the same thing :\\\n. Thanks @jamielob, this was the problem for me too. :). ",
    "gustavjf": "Thanks @jamielob.\nI wonder why the mini tutorial uses onPress={Actions.Foo} instead. Could there be a reason for that?\n\n. @vzhen \nThere seems to be partial documentation here, but there are still some ActionConst descriptions missing, for example JUMP, POP_TO, POP_AND_REPLACE, etc.\n@aksonov Any chance those descriptions could be updated?\n. @aksonov Safe to say then that v3 docs will not be updated to document missing information? \nThere's quite a few breaking changes for v4, so it's likely not everyone using this package will immediately upgrade. In which case, they would still be stuck with missing documentation for core functionality of v3, wouldn't you agree?. ",
    "EliCDavis": "jamielob's  suggestion fixed the error for me.\nNoob here though, what's going on differently under the hood when you pass it an anonymous function vs an actual reference.. ",
    "CodyBrouwers": "In case anyone else comes across this error and the above doesn't work, I encountered it because I was passing the first argument from onSubmitEditing on a <TextInput> to a function like so:\njavascript\n<TextInput\n  onSubmitEditing={(text) => this.performSearch(text)} // Should be event, not text\n/>\nThat text variable is actually the submit event which is what ended up giving me the message above and a headache debugging for a while.. ",
    "qianmenglin": "event.preventDefault();\nevent.stopPropagation();. ",
    "jay51": "I think the problem is, you're trying to access the event object after it's released and redefined.\nReact Docs => The SyntheticEvent is pooled. This means that the SyntheticEvent object will be reused and all properties will be nullified after the event callback has been invoked. This is for performance reasons. As such, you cannot access the event in an asynchronous way.\nif you need to use an attribute from the event obj then you would have to access it like this \nfunction displayForm(event){\n    console.log(event) // will error\n    console.log(event.type) will work\n    const eventType = evnet.type; \n   // or call event.persist();\nIf you want to access the event properties in an asynchronous way, you should call event.persist() on the event, which will remove the synthetic event from the pool and allow references to the event to be retained by user code.. ",
    "demoran23": "I'm not sure if the cause of this issue has been clearly explained, so please allow me to share my understanding and how I fixed it.\nTouchableWithoutFeedback defines onPress?: (event: GestureResponderEvent) => void;.\nThus, when providing simply the function name, the parameter that is passed in is a GestureResponderEvent - and there's a good chance that isn't what you expect.\nBy changing from the function name to an anonymous function that invokes your function (eg () => yourFunction()), the GestureResponderEvent is not passed through to your function.\n. ",
    "Rayji96": "Have you tried using:\n<Scene key=\"main\" type={ActionConst.RESET}>\nDetails:\nhttps://github.com/aksonov/react-native-router-flux/blob/master/docs/API_CONFIGURATION.md#actionconst\n. From what I understand, RESET unmounts everything except the current scene. When navigating on log out you're calling Actions.authentication, correct?\nOn a side note, is there any reason why your authentication scenes exist on a tabbar with your main scenes?\n. For those who are curious, you can pass in a custom tabBar as a component={} in the tab={true} scene. You can set your custom tabBar to rerender as you please.. ",
    "almirfilho": "Perhaps it has something to do with issue #1293? @nlively \n. @nlively in your code you're setting both scenes as initial={true}, and since you're using a selector, I think you could just try to remove these initial props from them. Have you tried this already? Hope it helps!\n. Looks like that bug returned with the new version (3.38.0). Tab scenes are getting unmounted if you change between tabs and then re-mounted again when you get back. Downgraded to version 3.37.0 and the bug went away. cc @sarovin \n\nreact-native version: 0.42.3. @amhinson I've managed to do it in a, let's say, dirty, ugly way.\nI've implemented a new component that extends NavBar and tweaked its rendering, as follows:\n\n```javascript\nimport React from 'react';\nimport { View } from 'react-native';\nimport { BlurView } from 'react-native-blur';\nimport { NavBar, Util } from 'react-native-router-flux';\nimport Style from './style';\nexport default class CustomNavBar extends NavBar {\n  render(){\n    // render original navbar\n    const renderedNavBar = super.render();\n    // check whether the navbar should be displayed or not\n    const hide = Util.deepestExplicitValueForKey(this.props, 'hideNavBar');\n    // wrap navbar with whatever you want\n    return hide ? renderedNavBar : this.wrap(renderedNavBar);\n  }\nwrap(renderedNavBar){\n    return {\n      ...renderedNavBar,\n      props: {\n        ...renderedNavBar.props,\n        children:\n          \n{renderedNavBar.props.children}\n\n      }\n    };\n  }\n}\n```\nAnd then pass it as your navbar in Router:\njavascript\n<Router navBar={CustomNavBar} // ...\nI really wish to remove this awful pice of code in the future. Hope it help.\n. @amhinson yeah you have to reset its position, sorry xD\njavascript\ncontainer: {\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  right: 0\n}. ",
    "benjaminreid": "Also reporting this as well, downgrading to 3.37.0 fixed this.\nIt seems to occur when having at least 3 tabs.\nClicking between tab 1 => 2 => 1 => 2 was ok, but once you mounted a 3rd, 1 => 2 => 1 => 3 => 2 that's when the mounting issues started.\nWhen you click a tab, the components gets unmounted then immediately remounted.. @sarovin Can this be reopened, there still seems to be some issue with this.. I've been fighting around the same issue. I believe ActionConst.POP_AND_REPLACE does the inverse of this and we need PUSH_AND_REPLACE, so the animations can occur, and then the stack is reset.\nI've not found a neat way to do this other than remove the animations for now.. ",
    "peterkruty": "I have the same problem:\n```\n    \n<Scene\n  key=\"homegym\"\n  component={HomeGym}\n  hideNavBar={false}\n  title=\"Home Gym\"\n/>\n\n```\nSecond one does not have a NavBar.\n. I made it work with:\nActions.homegym({hideNavBar: false})\n. ",
    "shroukkhan": "+1 . currently settings {hideNavBar:false} causes navigation bar to disappear. also putting {hideNavBar:true} causes navigation bar to disappear. basically , the mention of the property hideNavBar causes navigation bar to disappear! using version : react-native-router-flux@3.36.0\n. ",
    "rexlow": "inject custom CSS property into tabBarStyle will do the trick :)\n. I am having the same problem as well.\nThis is my current setup. \na -> b-> c -> d\nIf I try to reset from d to a, it works but screen a would show a blank screen. Do note that this only happen to Android and this bug does not appear consistently. . +1. I have figured out how to configure the scenes properly with Stack.\nApparently, this is only happening to iOS. Android natively pushes up a view from the bottom and will not have this issue.\nI managed to wrap the additional 2 scenes together with their parent inside a Stack and this solved the problem.\nReconfigured router\n<Router style={container}>\n                <Stack key={'root'}>\n                    <Drawer key={'drawer'} \n                        hideNavBar={true} \n                        drawerWidth={width*0.8}\n                        drawerPosition={'left'}\n                        drawerIcon={drawerIcon}\n                        contentComponent={DrawerComponent}>\n                        <Stack>\n                            <Scene \n                                key=\"reservations\" \n                                component={Reservations} \n                                title=\"Reservations\" \n                                titleStyle={titleStyle}\n                                renderRightButton={this.renderReservationRightButton} />\n                            <Scene\n                                key=\"addReservation\" \n                                component={AddReservation} \n                                title=\"Add Reservation\" \n                                titleStyle={titleStyle}\n                                renderLeftButton={this.renderCancelButton}\n                                rightTitle=\"Add\"\n                                rightButtonTextStyle={titleStyle}\n                                onRight={this.addReservation}\n                                navBarButtonColor={CONSTANT.COLOR.THEME.HEX} />\n                            <Scene\n                                key=\"filterReservation\" \n                                component={FilterReservation} \n                                title=\"Filter\" \n                                titleStyle={titleStyle}\n                                renderLeftButton={this.renderCancelButton}\n                                rightTitle=\"Done\"\n                                rightButtonTextStyle={titleStyle}\n                                onRight={this.filterReservation}\n                                navBarButtonColor={CONSTANT.COLOR.THEME.HEX} />\n                        </Stack>\n                        {Other scenes ...}\n                    </Drawer>\n                </Stack>\n            </Router>. ",
    "brobey8": "Nevermind, this was due to my own stupidity, I had my Root class inside of another component. Closing\n. @mmahalwy Hmm.. that first code block that you posted, is that the root js file that gets ran? My problem was that I was wrapping my component that holds my routes (which is the first code block in your comment) in another component, and including that.\n. ",
    "mmahalwy": "@brobey8 have the same problem, but I don't get your solution. Mind sharing a little more? \nI have this and it's not working. The text is not showing up. Driving me crazy\n```\nimport React, { PropTypes } from 'react';\nimport { Scene, Router } from 'react-native-router-flux';\nimport Home from './Home';\nimport Login from './Login';\nexport default class App extends React.Component {\n  render() {\n    return (\n      \n\n\n\n\n\n    );\n  }\n}\n```\nAnd home:\n```\nimport React, { PropTypes } from 'react';\nimport { Text } from 'react-native';\nimport { Actions } from 'react-native-router-flux';\nimport { View, Image, Heading } from '@shoutem/ui';\nexport default class Home extends React.Component {\n  render() {\n    return (\n      \nThis is Pag PageOneThis is PageOne\n\n    );\n  }\n}\n``\n. @gp3gp3gp3 @brobey8 got it fixed. The problem is that you have to be careful with yournesting. In my case, I hadView > Router > Scenesand that did not allow me to render text. Make sure the router is the top most component, unless its HOC components like react-redux'sProvider` . ",
    "gp3gp3gp3": "@mmahalwy Did you ever figure out why this wasn't working?  I'm having the same issue.  The Router is my root component so I'm not seeing why this isn't rendering.. ",
    "LadislavBohm": "I don't know if this is correct solution, but what works for me when setting dynamically navbar icon (which is what you are also doing) is to set it via refresh like this:\n```\nconst source = await Icon.getImageSource('sign-out', 20, 'white');\nActions.refresh({ \n      key: 'main', \n      rightButtonImage: source, \n      rightButtonIconStyle: { width: 18, height:18} });\n```\nI also call this code in componentWillMount \n. Well, the only place I call it is the componentDidMount function. But the only thing that might cause an issue is, that you are setting both rightTitle and rightButtonImage. Try to have main scene like this:\n<Scene         \n            key=\"main\"\n            onRight={() => {console.log('exit'); }}\n          />\nThen update rightButtonImage and rightButtonIconStyle via Actions.refresh.\n. I did not test it, but I would do is use Actions.refresh somewhat like this:\n<Scene key=\"tab1_1\" component={TabView} onRight={()=> Actions.refresh({key:\"drawer\", open: true})} />\nScene definition is taken from https://github.com/aksonov/react-native-router-flux/blob/master/docs/DETAILED_EXAMPLE.md\nProperty key in onRight must reflect Scene key of your drawer, it sets open value to true, which should open the drawer if you have drawer properly set. Drawer example is here and I can verify, that it works fine: https://github.com/aksonov/react-native-router-flux/blob/master/docs/OTHER_INFO.md\n. ",
    "arisAlexis": "Thanks for this. I tried it and it doesn't work but I don't understand why. The object is a {scale,uri}.\n Where else do you call it? I also tried componentDidMount with same results.\n. Yes tried that too, something else must be in place here. \n. narrowing down on the problem if I don't navigate to a route that is marked with type=refresh first, this doesn't happen. \n. ",
    "danielbm": "I am having the same problem, also tried the refresh solution, with no success.\n. ",
    "kirkness": "Adding the rightButtonIconStyle prop got it working for me.\njs\nconst source = await Icon.getImageSource('sign-out', 30, 'white');\nActions.refresh({\n    rightButtonImage: source,\n    rightButtonIconStyle: { width: 30, height: 30 },\n    onRight: () => {},\n});. ",
    "cr2121": "I solved it by set a prop pressOpacity={1}\n. ",
    "david50407": "How did you let the tab hold at the old view?\nI want to leave each tab on the last view user seen. but it always return to the first view \n. It still pop to the first view of the tab when I click on master branch, any idea?\n. ",
    "marceaul": "I experience the exact same behavior as @david50407, if anyone know how to change that.\n. It works perfectly, thank you for your input!\n. ",
    "Dvidan": "Try the latest from the master branch. Looks like this #1312 changed it back \n. ",
    "b8ne": "Thanks mate got it figured.\n. I really need this so may look at it this weekend and submit a pr if it can work. @toaa-media i havent looked at the src code yet but have you got any thoughts on how this should work?\n. Awesome @toaa-media, thanks for sharing.  I havent had a chance to test anything yet but had a quick look at the source and may have another way given that all the data we need is already in the state.  Ill test both over the weekend and let you know how i go. Either way i feel we have a result here so ill close this issue.\n. Hey @toaa-media thats not working for me.  I already had a reducer setup by following the drawer setup docs. So just checked what that was outputting, and I am getting the scene key but then also the root key every time, so obviously the root will override everytime as its 2nd.  Have a feeling it may be to my scene hierarchy so ive included below.  Can you see anything that may fix it?\n```\n\n {\n            console.log(store.getState());\n            /\n            if (store.getState().currentScene.sceneKey == 'home') {\n              return true;\n            }\n            Actions.home();\n            return true;\n          }}\n          /\n          return true;\n        }}\n    >\n      <Scene key=\"root\">\n        <Scene key=\"drawer\" component={NavigationDrawer} open={false}>\n          <Scene key=\"main\" tabs style={tabBarStyles.tabBarStyle} tabBarIconContainerStyle={tabBarStyles.tabContainer}\n          pressOpacity={1}>\n\n            <Scene key=\"home\" initial title=\"HOME\" navigationBarStyle={tabBarStyles.topBar} drawerImage={null}>\n              <Scene\n                key=\"home_1\"\n                component={Home}\n                title=\"Home\"\n                titleStyle={tabBarStyles.titles}\n              />\n            </Scene>\n\n            <Scene key=\"teams\" title=\"TEAMS\" icon={TabIcon} navigationBarStyle={tabBarStyles.topBar} style={tabBarStyles.iconContainer}>\n              <Scene\n                key=\"teams_1\"\n                component={Teams}\n                title=\"Teams\"\n                titleStyle={tabBarStyles.titles}\n                renderBackButton={() => <BackButton back={() => Actions.home()}/>}\n              />\n            </Scene>\n\n            <Scene key=\"news\" title=\"NEWS\" icon={TabIcon} navigationBarStyle={tabBarStyles.topBar} style={tabBarStyles.iconContainer}>\n              <Scene\n                key=\"news_1\"\n                component={NewsList}\n                title=\"News\"\n                titleStyle={tabBarStyles.titles}\n                renderBackButton={() => <BackButton back={() => Actions.home()}/>}\n              />\n              <Scene\n                key=\"news_2\"\n                component={NewsArticle}\n                title=\"News\"\n                titleStyle={tabBarStyles.titles}\n                renderBackButton={() => <BackButton back={() => Actions.pop()}/>}\n              />\n            </Scene>\n\n            <Scene key=\"sponsors\" title=\"SPONSORS\" icon={TabIcon} navigationBarStyle={tabBarStyles.topBar} style={tabBarStyles.iconContainer}>\n              <Scene\n                key=\"sponsors_1\"\n                component={SponsorList}\n                title=\"Sponsors\"\n                titleStyle={tabBarStyles.titles}\n                renderBackButton={() => <BackButton back={() => Actions.home()}/>}\n              />\n              <Scene\n                key=\"sponsors_2\"\n                component={Sponsor}\n                title=\"Sponsor\"\n                titleStyle={tabBarStyles.titles}\n                renderBackButton={() => <BackButton back={() => Actions.pop()}/>}\n              />\n            </Scene>\n\n            <Scene key=\"more\" title=\"MORE\" icon={TabIcon}\n              navigationBarStyle={tabBarStyles.topBar}\n              style={tabBarStyles.iconContainer} tabBarIconContainerStyle={tabBarStyles.moreContainer}\n              component={More}\n              onPress={() => {this.openDrawer()}}\n            />\n\n            <Scene key=\"club\" title=\"CLUB\" navigationBarStyle={tabBarStyles.topBar}>\n              <Scene\n                key=\"club_1\"\n                component={ClubData}\n                title=\"Club\"\n                titleStyle={tabBarStyles.titles}\n                renderBackButton={() => <BackButton back={() => Actions.home()}/>}\n              />\n            </Scene>\n\n            <Scene key=\"lifemember\" title=\"LIFE MEMBERS\" navigationBarStyle={tabBarStyles.topBar}>\n              <Scene\n                key=\"lifemember_1\"\n                component={LifeMember}\n                title=\"Life Members\"\n                titleStyle={tabBarStyles.titles}\n                renderBackButton={() => <BackButton back={() => Actions.home()}/>}\n              />\n            </Scene>\n\n            <Scene key=\"auth\" title=\"LOGIN\" navigationBarStyle={tabBarStyles.topBar}>\n              <Scene\n                key=\"auth_1\"\n                component={Auth}\n                title=\"Login\"\n                titleStyle={tabBarStyles.titles}\n                renderBackButton={() => <BackButton back={() => Actions.home()}/>}\n              />\n              <Scene\n                key=\"login_1\"\n                component={Login}\n                title=\"Login\"\n                titleStyle={tabBarStyles.titles}\n                renderBackButton={() => <BackButton back={() => Actions.pop()}/>}\n              />\n              <Scene\n                key=\"register_1\"\n                component={Register}\n                title=\"Register\"\n                titleStyle={tabBarStyles.titles}\n                renderBackButton={() => <BackButton back={() => Actions.pop()}/>}\n              />\n            </Scene>\n\n          </Scene>\n        </Scene>\n      </Scene>\n    </RouterWithRedux>\n  </Provider>\n\n```\nSo the home scene is initial, but doesnt have a tab, the next 3 scenes are tabbed. the final tab opens the side drawer, which contains the rest of the scenes - if that makes sense.\n. ",
    "charlesbdudley": "@a-koka not sure why this worked, but for me changing the component I was editing from a React.PureComponent to React.Component seemed to make hot reloading work as intended.. ",
    "a-koka": "I haven't tried messing with this since I wrote this post. RN has come a long way and I'm sure there have been many updates to this library. Happy to close this issue if Hot Reloading is no longer a problem.. Would you know which compiler flags @dragfire? I haven't encountered this error before and I'm relatively new to the mobile stack.\nThanks!\n. That did the trick! Thanks @dragfire.\n. ",
    "ncnlinh": "@acruis I don't think you can achieve the behaviour you mentioned. The workaround you mentioned (using setTimeout) is the only solution at the moment. I have the same problem but with pushing multiple scenes.\n. @DeDuckProject I feel that it is just ugly, and there is no documentation for this behavior. Since Actions.<scene_key>() is an imperative call, I feel that it is expected that the call should succeed every time you try to use it.\n. ",
    "tmaximini": "this happens to me also in some cases (in others it works don't know why).\nI circumvented it somehow using\nActions.tabbar({ key: 'tabbar', type: 'reset', onBack: null, hideBackImage: true }); but would also like to know why that happens!. thanks @DonnieWest - this fixes also #563 (tab routes get params). it also fixes the 3 skipped tests in test/Reducer.test.js so you might actually remove the skipping as part of this PR.\n\ud83d\udc4d \nIt does make another test fail though ('switches to a correct tab on JUMP').\nit could be fixed by modifying the test to expect(current.key).to.eq('hello_0_hello_'); (so all pass but I am not sure if that is desired behaviour, I don't understand all internal behaviour of this lib yet) maybe @aksonov can jump in and comment.\nIt would be very cool if this fix landed as I suppose lots of people get frustrated when the expected behaviour (props are passed via Action.whatever(props)) is not working anymore in a TabBar scenario.\n. ",
    "jnmandal": "Thanks for the tip @tmaximini I'm going to try that.. ",
    "ManiSJ": "I don't get it right now what u said. But after reducing the dimension of images and reducing the size of images to few KB navigation is smooth now. Few of my image was in few MB and higher dimensions.\nI will look into what u said since I just now started to explore React Native\n. ",
    "alexsorokoletov": "This should make it to wiki/docs. ",
    "toaa-media": "My question is the same here.\nAnyone has an answer ?\n. Thank you @b8ne \nI have found out a way to get current scene key. Something like this:\n1. Create your own reducer to handle route navigation.\n   this.reducerCreate = params=> {\n   const defaultReducer = Reducer(params);\n   return (state, action)=> {\n       console.log(\"ACTION:\", action);\n       if (action.type == ActionConst.FOCUS) {\n           let scene = action.scene;\n           this.currentScene = scene.sceneKey;\n                      ===>>> this is your current scene.\n       }\n       return defaultReducer(state, action);\n   }\n   };\n2. Add your reducer above to Router.\n   render() {\n       return (\n           <Router createReducer={this.reducerCreate}>\n   ..................................\nThat's all. And it works fine now. :)\n. ",
    "bsiddiqui": "@toaa-media what about Actions.pop? No key is provided with back action. @pocesar what if that scene isn't in the stack?. Just tested this and it doesn't seem to behave any different than Actions.pop(). got it, I misunderstood that this was specific to nested scenes. @daviscabral  here's some sample code from my router. Everything seems to function correctly but I see the warning whenever the drawer is closed and I return to the view that opened the drawer.\n```js\n  \n\n\n}\n              contentComponent={DrawerContainer} >\n            \n        <Scene\n            title='Promotions'\n            key='promotions'\n            component={PromotionsContainer} />\n  </Drawer>\n</Stack>\n\n\n``. @daviscabral theDrawerparent is aStack- I just had the indentation wrong. @daviscabral there's a reference toActionsbut notDrawer`. @wluxion thanks yeah passing all components (contentComponent, renderLeftButton, renderTitle, etc) as fat arrow functions fixed the issue. worked for me on iOS\ndrawerLockMode='locked-closed'. ",
    "code-by": "is there now simple way to determine current scene name?. ",
    "ChristianTucker": "@aksonov  Something like Actions.prevScene would be nice too.. In the mean-time you can remove react-native from the node_modules folder in react-native-router-flux. however ultimately the example dependencies should be removed from the module and added to the examples package.json. @aksonov  I come from react-navigation, and this problem doesn't exist when using a custom component for the TabBar over there. Here is an example of what the transparent background looks like in RNRF, \n\nIt's the gray that cuts off the content. In react-navigation you are able to give your component a absolute position and overlay it on the screen, however in RNRF applying position: \"absolute\" stops the component from displaying. . @aksonov This is actually a problem with an outdated dependency in the version of react-navigation that's being used, as I forced an update to react-native-tabs-view to 0.66 (Currently 0.65) and it fixed this issue. (Of not being able to use position: \"absolute\". This isn't an answer to your question, but why can't you just apply the \"sceneStyle\" to the top-level-component for the Scene? This is what I have always done.\n```javascript\nimport theme from 'application/theme';\nconst styles = { };\nexport default () => (\n    \n        ...\n    \n);\n```\nThis still applies the style to the scene you want to apply it to, plus you can reference the style and use it for a more globalized styling solution this way, (i.e: <Text style={{ color: theme.selected().darkColor }} />)\n. ",
    "vitorlsouza": "@aksonov work perfectly for me. Thank you. @lukaszmalec6 \nHi,\nI am using to issue an alert when the user returns to the login scene.. Using in condition for example.\nif(Actions.currentScene === 'formPrincipal') {\n    here Alert with 2 options, when user click \n    if user click YES return Actions.pop()\n    if user click NO return false\n}. ",
    "lukaszmalec6": "@vitorlsouza Hi, can you tell me more about how you're using Actions.currentScene?. ",
    "yieldnow": "I've made an investigation, problem lies in file src/Navbar.js line 509\n``` js\nconst contents = (\n  \n    {renderTitle ? renderTitle(navProps) : state.children.map(this.renderTitle, this)}\n    {renderBackButton(navProps) || renderLeftButton(navProps)}\n    {renderRightButton(navProps)}\n  \n);\nreturn (\n  <Animated.View\n    style={[\n      styles.header,\n      this.props.navigationBarStyle,\n      state.navigationBarStyle,\n      selected.navigationBarStyle,\n    ]}\n\n{navigationBarBackgroundImage ? (\n  <Image source={navigationBarBackgroundImage}> // wrapping in image causes problems\n    {contents}\n  </Image>\n) : contents}\n\n\n);\n```\n\nBecause title, back, left and right buttons have absolute positioning they are not visible if wrapped by image\n. ",
    "aozisik": "Also experiencing the same issue. ",
    "ZenkStarr": "+1 . @dermeck it seems that this was not yet released on npm (the current version 3.38.0 is from March 1st, the  PR was merged on March 2nd). Theoretically, you could reference the git repo in your package.json, but this causes an Error in the packager because of a naming collision for react-native in @providesModule. @filipemonteiroth - is there this und subsequent updates haven't been published to npm yet?. ",
    "mjsolidarios": "I'm having this problem too. I'm using 3.39.2.. ",
    "javier-artiles": "+1. ",
    "SebasJK": "Hello,\nyes that would work but '_someFunction' is a function of \"class App extends Component{ }\" not of login. the onBack could be attached to any scene.\nIt looks like a scope issue, as the function is not found.\n. This might give a better view of what the issue is\nFirst declare scenes:\n```\nconst scenes = Actions.create(\n  \nthis._someFunction() } />\n    \n\n\n)\n```\nThen within the App:\n```\nclass App extends Component {\n_someFunction() {\n     console.log('Debug message: aFunction called');\n   }\nrender() {\n    return (\n        \n    )\n  }\n}\n```\nThe problem is, that when the button is clicked, it generates the error this._someFunction() is not a function.\nThere is no issue if we do it like this:\n```\nclass App extends Component {\n_someFunction() {\n     console.log('Debug message: aFunction called');\n   }\nrender() {\n    return (\n        \n\nthis._someFunction() } />\n         \n\n\n\n    )\n  }\n}\n```\n. ",
    "Timehello": "just set the drawerImage to false. ",
    "activelogic": "Setting the drawer image to either {{uri: ''}{ or {false} will throw a warning.\nInstead use: drawerImage={{ uri: null }}.\n. @WebStew - Sorry for the delay.  I have not tested my solution on an iPhone emulator (only Android), so cannot confirm whether or not the error is thrown.  . @ssomnoremac, @xufang215 - I came up with a solution for this by detecting the currently active scene and if it's not the active scene, rendering an empty view. \nTo make the current scene object available in my components, I connect the router to redux and catch the ActionConst.FOCUS actions in a reducer that sets the current scene in my redux state as per this guide: https://github.com/aksonov/react-native-router-flux/blob/master/docs/REDUX_FLUX.md. It's definitely not the best solution.  It would be better if the fade effect went to 0 opacity entirely.. ",
    "WebStew": "Hi @activelogic \n\nSetting the drawer image to either {{uri: ''}{ or {false} will throw a warning.\nInstead use: drawerImage={{ uri: null }}. \n\nThis worked perfectly for me on my Android emulator but on iOS iPhone 6 emulator it is throwing a JSON value <null> error when I run it. Any ideas?\n. ",
    "tmaly1980": "There COULD be a better way, but what I did to remove the hamburber navicon was add this to each/every scene:\nrenderLeftButton={()=>{}}\nI am using tabs so it didn't seem to work when assigning to the tabbar or tab scene, only the individual component scenes. The back button still renders, though, when you go forward. If you want to disable the back button as well, you'll have to set:\nrenderBackButton={()=>{}}\nIf there's a better way, I'd love to know. All of the above suggestions didn't work in IOS.. Did anyone figure out how to migrate from the old Switch syntax above (@richTheCreator ) to the new onEnter/onExit v4 approach? I can't figure it out and I'm upgrading my project to React 16.. Is this the best way to approach the v3 equivalent of Switch/selector ?\nBasically, in v3 I had:\n```\n({auth:state.auth, app:state.app}))(Switch)}\n  selector={props=>!props.app.persisted ? \"wait\" : props.auth.token ? \"loggedIn\" : \"auth\"}\n\n```\n\nBasically, if redux has app.persisted truthy, show 'wait', otherwise show 'loggedIn' if auth.token is set, otherwise default to 'auth'.\nThe migration does says \"Switch is removed - you may use onEnter/onExit handlers for more flexible logic.\" - but I don't see any examples, not even in the example app.\nThe confusing part is that onEnter/onExit only seems to work where component is defined in a scene, ie for each subscreen, and not the scene/tab container itself. But it almost seems like onEnter would be an appropriate place to navigate to a specific tab. The problem in my case is that I have multiple levels of scenes deep - there the switch between logged in user and not logged in, among others. \nIt seems like it's doable your way (via componentWillRecieveProps) but then I have to have several nested if statements to do so to manage the distinct tab systems (ie handling post-login welcome screens or not).\nSuggestions?. It looks like you're telling it to not show any text with backTitle=\" \" . Are you expecting the back arrow to resize?. @aksonov So what is the solution here? Why are you working on the next major release when there are serious issues with the current one? I would think it's more important to get the rest of RNRF v4 working with a newer version of react-navigation. Otherwise, the entire v4 is unstable/experimental. \nIt seems like unless there's an easy fix, that one would be unable to use RNRF v4 in a stable production environment and would be better off just going to a different navigator implementation entirely (possibly using react-navigation directly). Not being able to use the tab bar properly (with icons) is pretty big of an issue.\nFYI, current version of react-navigation is 1.5.11 . I've updated it explicitly in my package.json and it seems to work fine, though I haven't looked at the tab bar icons yet.. @AlmogRnD Then why was RNRF v4 developed on it in the first place? And what are the alternatives?\nAlso, I've used it on half a dozen other projects, and although pieces can be annoying to deal with, it's pretty reliable with the newer production versions.. I also set an explicit width/height on a View wrapping Icon, as per @ovaris . I also updated react-navigation explicitly and am not getting any crashing issues that @aksonov mentions. Seems to work fine now. . @AlmogRnD Sure, RN is a pain in the butt across the board. But this is why we get paid more.. @avishayil , My scene looks like:\n<Scene icon={TabIcon} iconName='timer' key=\"tab1\" component={Dashboard} />\nAnd My TabIcon component looks like:\n```\nfunction TabIcon(props) {\n  return (\n  \n\n\n\n\n  )\n}\nconst styles = {\n  container: {\n    width: 48,\n    height: 42,\n    padding: 5,\n    justifyContent: 'center',\n    alignItems: 'center',\n  }\n};\nexport default TabIcon\n```. @uncvrd I'm actually using:\n<Scene tabs={true}> rather than <Stack tabs={true}>\nNot sure if that makes a difference. Also, are you sure 'timer' is a valid icon in your icon library?. @uncvrd Just for test sake, try moving TabIcon to a component file. Other than that, I am not sure. \nThe API actually says it needs to be a component, it might not actually work with functions:\nhttps://github.com/aksonov/react-native-router-flux/blob/master/docs/API.md#tab-scene-child-scene-within-tabs. ",
    "Manuel83": "I figured out that I have to wrap my sub scences with a \"empty\" scene. (...)\nWith this tiny thing of boilerplate code it's working now.\nexport default class App extends Component {\n  render() {\n    return (\n        <View style={{ flex: 1 }}>\n            <StatusBar\n              backgroundColor=\"#ffffff00\"\n              barStyle=\"light-content\"\n              translucent\n            />\n            <Provider store={store}>\n            <RouterWithRedux getSceneStyle={getSceneStyle}>\n              <Scene key=\"drawer\" component={NavigationDrawer}>\n              <Scene key=\"wrapper\">\n                <Scene key=\"main\" initial={true} component={Main} title=\"My APP\"/>\n                <Scene key=\"page1\" component={Main} title=\"Page 2\"/>\n                </Scene>\n              </Scene>\n              </RouterWithRedux>\n            </Provider>\n          </View>\n    )\n  }\n}\nIn general it's document because the example is using tabs in the sub views. My sub view is not using tabs. I think it's valuable if the documentation would contain this small hint. \nhttps://github.com/aksonov/react-native-router-flux/blob/master/docs/OTHER_INFO.md#drawer-side-menu-integration\n. ",
    "xhou": "I got the issue today and used your solution to resolve. Thank you.. @AAverin I got the same issue. I resolved with help of this thread\n https://github.com/aksonov/react-native-router-flux/issues/1354. ",
    "preetampatil3d": "hello @Manuel83 , can you please share sample code for above. . Thanks lot @phantom1299 ,\ni am using \n \"react\": \"16.0.0-alpha.12\",\n \"react-native\": \"^0.46.1\",\n \"react-native-router-flux\": \"^4.0.0-beta.15\",\n \"react-redux\": \"^4.4.5\",\n \"redux\": \"^3.5.2\",\n \"redux-thunk\": \"^2.2.0\"\nI was struggling for drawer, Your example saved me. . .  \nCan you please tell me where can i find documentation for this . ? \nCurrently drawer appear on all pages & on left side but i want drawer for home page(main page) only and on right side.\nThanks in Advance .. @phantom1299 Thanks, I have added back={true} in Scene where want to hide drawer and display 'BACK' icon and its worked. But when i swipe back from inner scene it opens drawer instead of going back. (I need click back button only to go back).  \nCan you please help me with this.\nThanks. @aksonov ,  \nBelow is my Router, \n```\n\n\n\n\n\n\n { return ; }} />\n { return ; }} />\n { return ; }} />          \n\n \n\n\n\n\n```\nCurrent behavior:  Drawer is visible on 'HomeComponent' and i have disabled it on other scenes using \"back={true}\".\nBut on SecondComponent & ThirdComponent swipe back opens drawer and also goes to back page on closing of drawer.\nExpected:\n1. Drawer on all page and back button on all page except HomeComponent.\nOR\n2. Drawer on HomeComponent and back button on rest of the pages . \n(Drawer or back button  back button must be disabled on thease page, to avoid comflict)\nAny solution or any alternate ways to overcome this issue ?\nAnybody please help.\nThanks in advance.\n. Any status on this issue?\n. It worked . . \nOld code :\n onPress={() => { Actions.map() }}\nModified code :\nonPress={() => { Actions.menu();Actions.map() }}\nThanks lot @gagantaneja . same issue.. any updates on this?. ",
    "semiautomatix": "Has this been tested?. Thanks, yes seems to work well. ",
    "leesolway": "I managed to test it awhile back. It was missing the back icons, easily fixable, but worked otherwise. . Tested this solution, it works. As well as adding Windows specific back button images, maybe there should also be some fallback ones for \"other\" platforms (MacOS, Linux etc). I'll look at doing a pull request, if this is acceptable? \nEdit -\nOn further investigation the react-native-experimental-navigation repo has patched in the required assets, however is requires a release of that library. . Same issue as reported.\n didn't work either. ",
    "robbue": "My understanding is that it's a big change, but the improvements would be a big thumbs up :) @aksonov, is there any update on this?\n. ",
    "ronzilca": "Well, finally found my stupid fault.\nThe import of my Sidebar was under curly brackets, after changing this - worked perfect.\nAlthough, I'm thinking that the documentation of the combined drawer and flux is a little bit bad, so I'll try as soon as I can to make a small tutorial.\n. ",
    "williamkuk": "@atlanteh  Thank you! Work like a charm!\n. ",
    "voidale": "+1. ",
    "ericvera": "+1. ",
    "hakunin": "How about using pop() couple of times and then triggering F?. How about this? Using POP_AND_REPLACE action with popNum set to whatever you need.\nhttps://github.com/aksonov/react-native-router-flux/blob/master/src/Reducer.js#L125. > Can we get the current stack depth? That value - 1 would be the required popNum argument.\nI think state should be somewhere attached to the navigator prop, I haven't played with it too much yet :)\nI was playing with custom toolbar and I had access to props.navigationState.children which shows you the stack of scenes.. ",
    "leledumbo": "\nHow about using pop() couple of times and then triggering F?\n\nSuper clear animation, I believe. What is needed is some kind of invisible pop() or trigger F as a new scene stack, discarding existing one silently.. > What is needed is some kind of invisible pop() or trigger F as a new scene stack, discarding existing one silently.\nSorry, my bad. F should not start as a new scene stack, as A is still expected to be the root, with F right on top of it.\n\nHow about this? Using POP_AND_REPLACE action with popNum set to whatever you need.\n\nCan we get the current stack depth? That value - 1 would be the required popNum argument.. > I was playing with custom toolbar and I had access to props.navigationState.children which shows you the stack of scenes.\nI hope it has .length or .size property, will check later. Thanks.. ",
    "Lughino": "@dragfire thanks for the quick answer.\nBut it seems not to be the same situation.\nWhen the application is launched the initial route is already within the TabBar. Also launching Action.home({type: 'REMOVE_TWO_TABS'}) in componentDidMount they remain displayed.\nOnly when I press another tab, children are removed.\nAnother problem is that when I go to another tab, Do I login and back of the home tab, the tab children no longer appear. It seems that this will be permanently erased.\n. Update ..\nBy using the method of removal of children through reducer I think definitely is not the correct solution.\nThe situation is this:\n``` javascript\nconst reducerCreate = (params) => {\n  const defaultReducer = new Reducer(params);\n  return (state, action) => {\n    switch(action.type) {\n      case 'REMOVE_TWO_TABS':\n        const children = _.merge([], state.children);\n        if(children[0].children.length > 2)\n          children[0].children.splice(1, 2);\n    return _.assign({}, state, { children });\n  default:\n    return defaultReducer(state, action);\n}\n\n};\n};\nclass AppNavigator extends Component {\n  render() {\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  }\n}\nclass Home extends Component {\n  componentWillMount() {\n    if(!this.props.isLogged) {\n      setTimeout(() => {\n        Actions.tabbar({ type: 'REMOVE_TWO_TABS' });\n      }, 0);\n    }\n  }\n  // ...\n}\n```\nEven calling the action that removes type in componentDidMount nothing happens, unless use a setTimeout to delay the call to action REMOVE_TWO_TABS.\nBut this means that for a moment I see all tabs.\nThe second issue is that if the user logs in, I have to show all tabs, which means that when I remove the tabs I have to save them somewhere and when the user logs I have to put them ..\nThis does not seem a good behavior ..\nSo, there is a right way to hide / show tab depending on a condition?\nI tried using the \"switch\" component and with this solution but I can not find answer.\nI think what I want to achieve is not a strange thing!\nCould you please tell me the solution to the problem?\n. Insert type={ActionConst.REFRESH} causes multiple problems:\n back button is rendered in all tabs child\n call any scene outside tabs has no effect (call JUMP and REFRESH actions)\n. ",
    "klaussa": "Looking for a solution for this too.. Hi, any news on it ? I am looking at it to.... ",
    "vitorebatista": "I'd like to know how hide navbar too!. \ud83d\ude25 . ",
    "torihuang": "+1. ",
    "ricardokdz": "+1. ",
    "dmbrowne": "nvm. I worked it out. I can create Scene with no component and to wrap the required scenes and  set the wrapping Scene as initial = true\n. ",
    "LukeAvery92": "Might not be the best way but I achieved it by doing:\n~~~~\n_createReducer = (params:Object):Reducer => {\n    const defaultReducer = Reducer(params);\n    return (state:Object, action:Object):Function => {\n      if (action.hasOwnProperty('scene')) {\n        // This is our redux action. We keep a string of currentRoute\n        this.props.setRoute(action.scene.name);\n      }\n      return defaultReducer(state, action);\n    };\n  };\n~~~~\nand then \n~~~~\n\n~~~~. ",
    "iWebi": "@ddolheguy This did not work for me. I used Actions.pop({refresh: {test:true}}). Previous scene was shown but none of the react component lifecycle methods of the component were called.. @ddolheguy This did not work for me.  Previous scene was shown but none of the react component lifecycle methods of the component were called.. ",
    "juancabraal": "@iWebi when you call Actions.pop({refresh: {test:true}}) componentWillReceiveProps is called on the previous scene. ",
    "elzup": "I have the same problem. I use tab scene.. ",
    "abrantes01": "Hello guys, I have the same problem with tab scene too : componentWillReceiveProps is not triggered using Actions.pop({refresh: {...}}). . Got the same issue. Downgrade to 4.0.0-beta.27 \"fixed\" it. . I was facing the same issue after upgrading to 4.0.1. Just restarting packager and rebuilding the app and everything is fine. . ",
    "bkitduy": "I have the same problem with tab scene too :(. ",
    "learnmove": " I resolve               Actions.pop({refresh: {test:Math.random()\n\nyou must put difference data ,it will work\n. ",
    "shreyas1496": "@truckhiem \nI also faced an similar issue. \nYou can write a componentWillUnmount() in scene B, and call the methods that are required to update scene A.  This worked for me.. ",
    "syyam": "The only solution for this is to call the sceneA  Actions.sceneA() \ud83e\udd47 . ",
    "dtwilliams": "that's not ideal as i have to keep track of what page to go back too, which could be several.. ",
    "jan-happy": "I found the only working solution to trigger componentWillReceiveProps on the previous scene here:\nhttps://github.com/aksonov/react-native-router-flux/issues/2047#issuecomment-315976469\nActions.pop();\nsetTimeout(() => {\n          Actions.refresh({\n            someProp: someValue\n          });\n        }, 0);. ",
    "imarem": "Hi @scriptfans \nYou've got to solve the problem? Could you share your solution? I have the same problem. ",
    "tiagoengel": "I don't know if this is the right solution, but as a workaround I'm passing parentIndex={1} to the wrapper scene (don't know how it's called).\nFor example:\njavascript\n<Scene key=\"about\" parentIndex={1}> \n      <Scene key=\"aboutScene\" component={AboutScene} title=\"About\" initial/>\n</Scene>\nI'm not sure if the parentIndex is 1 in this case though. But the idea is the same, maybe you'll have to change to 2.\n. ",
    "duhseekoh": "Can we get this merged?. This sucks.. @satsuki0221 - How did you get infinitely nesting scenes working?. How has this not been merged? And a better question, how did react-native and react ever make it into the project as regular dependencies?. @ezha86 - confirmed that works. 0.43.3 comes with react 16.0.0-alpha.6 -- important to note because you have to downgrade to -alpha.3 for this to work. Definitely not psyched about downgrading react.... So, looks like there was never a version published to npm that includes this compatibility? Latest I see for 3.x is 3.43.0 which was released in October, months before this was merged.\nCan we get this published as 3.44.0?. Do you have 'Slow Animations' checked in your ios sim...? \n\n. ",
    "micabe": "Hi 3.41.0-beta did not fix the issue. tab children are still rendered twice. ",
    "xufang215": "Is there a better solution?. ",
    "timmywil": "I would be happy if I could just disable the fading part of the animation on PUSH, eliminating the transparency that reveals the background.. Really? I don't think that's the best solution we can come up with.... ",
    "stajics": "Look at @redbaron76 response in #1202.\nI have used that animationStyle function, just changed outputRange in opacity to [1, 1, 0.0].\n<Router\n    scenes={scenes}\n    hideNavBar\n    getSceneStyle={getTransparentBgSceneStyle}\n    animationStyle={animationStyle}\n/>\n. ",
    "hamidjafari": "+1 . my problem too . is there any workaround?. @mkjangid , can you place one example code here ?. ",
    "mkjangid": "@hamidjafari, I did not wait for the solution. If you still have this issue, you can define get functions in top level <Router> and those functions can get you whatever props you need when desired. Do not forget to use bind. Attaching a sample code to get the idea \n```\nvar Login = require('Login.js');\nexport default class MyApp extends Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            isConnected:false,\n        };\n    }\ngetMainState(){\n        return this.state;\n}\nrender(){\n    return(\n     \n\n\n    )\n}\n```\nWithin Login scene, the functions defined at Router root are accessible as \nvar parentState = this.props.getMainState();. ",
    "keyeh": "I'm having the same issue. @mkjangid a code example would be very helpful!\nMy workaround is to use Redux and pass keys.... ",
    "fschai89": "@sarovin actually my codes are same as your, my mistake previously. But it still did not work, cant pass the props. It only not work when navigating at drawer. Thanks.. ",
    "cooleyhighcel": "@lin493369 hey \nwhen you use react-native-router-flux\neach scene key tab that holds the scenes  needs to call the Tabicon variable as displayed below.\n\n\n\n\n. ",
    "TsuryKnox": "Also, how do I change the hamburger button on the defaultRenderer?. ",
    "guiherzog": "+1. ",
    "williamtran29": "+1. ",
    "manfredxu99": "+1. ",
    "anthony-skr": "+1. ",
    "rafaelbusetti": "+1. ",
    "georgetroughton": "+1. ",
    "jsphkhan": "Any updates on this please.... ",
    "gastonmorixe": "+1 please!. +1. ",
    "MrDSGC": "\n\n\n\n\n\n",
    "antonkulik": "+1\n. ",
    "laclance": "+1. Sorry, it does say so in the docs.\n\"hides the navigation bar for this scene and any following scenes until explicitly reversed\". I couldn't find a way to style it directly, only to override it.\nSo i changed this:\nbackButtonImage={closeButtonCharcoal}\nto this:\nrenderBackButton={() => <Image style={{flex: 1}} source={closeButtonCharcoal}/>}. ",
    "rad182": "+1. ",
    "MrLyfing": "+1. ",
    "srserx": "+1. ",
    "CDog34": "+1. ",
    "a8c71": "no news on this yet? it seems a recurrent issue. I'm having this issue as well, navigating to tabbarwith param {type: ActionConst.REPLACE} leaves the previous scene on the stack.\n\nreact-native: 0.44.3\nreact-native-router-flux: 4.0.0-beta.22. \n",
    "lucianomlima": "Yeah, it's possible to use the margin (an I use it), but it is the correct behavior?\nWith flex, the container view should use the available space according to the visibility of navBar and tabBar.\nThe current version cause some problems.\nThe view used as a container is covered by nav and tab bars,\nScrollviews do not properly handle the scroll, because the container have the same size as the window, hiding some content.\nAlso, positioning adjustments are required all the times.. I understand. But I'm starting now in React Native and I do not have enough knowledge yet to be able to implement this fix.. Anyone?!. Resolved with Actions.refresh({key: 'home'}); after show banner in componentWillReceiveProps.. Check #1401 . I realized that these options only work with TabBarTop.. ",
    "rpastorelle": "I don't think this should be closed. This is bizarre behavior. Why would you want content underneath those elements? See: \n\n. ",
    "ngocdb": "Where I put the code with Scene ?\n<Schema name=\"modal\" sceneConfig={Navigator.SceneConfigs.FloatFromTop}/> <Schema name=\"default\" sceneConfig={Navigator.SceneConfigs.FloatFromBottom}/>\nPlease add the full code...\nI always get the warning: React.createElement type is invalid.... ",
    "shiqian123": "me too\u3002 use onBackAndroid  cannot refresh \u3002 so  when  action.pop need refesh I use   RCTDeviceEventEmitter.emit()\n  componentWillUnmount() {\n   if(device.android){\n     RCTDeviceEventEmitter.emit('update'Id)\n   }\n  }. @aksonov  when I used 4.0.0-beta.7 it is can login3 to login ,but  login3 to Root ,it is still error,it is died,\n\n   \"react-native\": \"0.44.0\",\n    \"react-native-router-flux\": \"^4.0.0-beta.7\",\n    \"react-navigation\": \"^1.0.0-beta.11\"\n. like this?\n@aksonov \nlogin compoent have test11 function,I want used in onLeft\n\n\n. oh ,thanks. me too. ",
    "kuby": "Ok I just made it, but a little bit differently and \"tricky\", maybe there is a better solution, but at this moment, this is the best I can do.\nSo I used almost everywhere the type: 'reset', and I always check (with the help of redux and other helpers), that if I click on the \"list\" type menu, should it be a redirect, or just a list refresh (refill, refetch)... So if I am not on the \"list\" menu and I click on list menu, that is redirect, and If I am on list menu, and again click on list menu, that is refresh ( I fetch a new data and just refill the dataSource ).. ",
    "agtb": "@charpeni Example deploys/works on Android for me now - thanks!. ",
    "vivaxy": "@Mbompr How did you modify Modal? By passing a props?. ",
    "johnstonmatt": "@charpeni I gave it a try, does that look right?\n. ",
    "rigobcastro": "@proProbe I want the same, any solution? Thanks!. ",
    "therealchuckliu": "Seeing similar issue, did you ever resolve this?. @aksonov would it be possible to have a new release of react-native-tabs with this merged and update the dependency? Although I am sympathetic to the fact that there is a new v4 we should be migrating to, it seems this is also an issue with react-navigation that is pending a merge as well. ",
    "denizs": "Nah not really - I discovered the lines in the code which prohibit the dragging but I wasn't able to dig into it deeper as I'm currently pretty busy \ud83d\ude22 . Did you solve this issue? If you didn't, I'll be glad to write down a quick breakdown of your mistakes \ud83d\udc4d . @spidergears  Sorry for the late reply!\nInfinite red's ignite boilerplate provides a comprehensive example of how to incorporate react native drawer into react-native-router-flux. I have included a preview of the result and a GIF displaying the functionality.\nHowever, apparently I just discovered a bug, wich prevents the drawer from sliding/ staying open after crossing a certain threshold. I am not sure whether this is due to my current setup or actually something universal. I will investigate this topic further and post my results.\nLet me know, whether my snippets worked for you.\nCheers, D\nThe Result\n\nCode Snippets\n```javascript\n// Your routes declaration\n\n // <-- missing\n       // your scenes go here\n  \n\n// Your Drawer.js \nclass NavigationDrawer extends Component {\nrender () {\n    const state = this.props.navigationState\n    const children = state.children\n    return (\n       NavigationActions.refresh({key: state.key, open: true})}\n        onClose={() => NavigationActions.refresh({key: state.key, open: false})}\n        content={}\n        styles={Styles}\n        captureGestures\n        tapToClose\n        openDrawerOffset={100}\n        panCloseMask={0.8}\n        panThreshold={150}\n        negotiatePan\n        tweenHandler={Drawer.tweenPresets.parallax}\n      >\n        \n\n    )\n  }\n}\n```. ",
    "kesjien": "You can use this instead panHandlers={ ( Platform.OS === 'ios' ) ? undefined : null }\nAnd it will get the default handlers for ios.\nif (typeof(panHandlers) === 'undefined') {\n      panHandlers = getPanHandlers ?\n        getPanHandlers(props, direction) :\n        this.getPanHandlers(direction, props);\n    }\n. ",
    "unadlib": "+1. +1. +1\n. +1\n. ",
    "vzhen": "Got it, we need icon={TabIcon}. @AndrewHenderson Ohhh,  got it. Thank you. ",
    "turbobuilt": "For anybody else who comes afterwards, here's how TabIcon is defined in the demo:\njavascript\nclass TabIcon extends React.Component {\n    render(){\n        return (\n            <Text style={{color: this.props.selected ? 'red' :'black'}}>{this.props.title}</Text>\n        );\n    }\n}. My project is not too far advanced so I looked at the react native docs and found the official router: https://reactnavigation.org/docs/intro/\nThis is going to be the official router, so I switched to it and it worked as I had hoped.  It also does a bunch of stuff this library does not do.  It would probably be good to direct people to that router since it will be the official solution in the future.  The react-native-router-flux library definitely helped the community though, so you have my thanks for the work you have done! . ",
    "Sunhat": "Yes. Read the documentation.. ",
    "ahmedNY": "Thanks @Sunhat,\nit will be nice, if the back button was flipped on RTL layout by default, since react-native support RTL on versions  >=0.33,  instead of adding backButtonImage attribute for each Scene. ",
    "DonnieWest": "Ran into this issue at work. Unsure if #1472 is the best solution, but it works for us. @MechanicKim since I can't share my at work project, I'll try to get a minimal project setup that demonstrates the bug based on the example project.\nThe props only don't pass when the parent scene has tabs set and you are passing the props to a sibling like in the example from @ssomnoremac . @MechanicKim does #1472 fix it for you?. @sarovin @MechanicKim is there something I'm doing wrong that I can fix to get #1472 merged in?. Any word on this pull request? If I'm doing something wrong, please let me know :). @aksonov fixed the tests and rebased :). @aksonov any word here? If there are any issues just let me know :). @aksonov sorry to continue to bother you, but, is there anything I can do to get this merged in?. @aksonov this is another fix for #1434 and shouldn't be needed after #1472 was merged. The big difference is that this makes passing props to the child components optional and I think most people who are using this library expect those props to be passed without additional configuration. ",
    "warrenronsiek": "Verified, I have the same problem on a personal project. I can solve the problem if I switch the scenes around, but it doesn't work as I would have expected.\nHere props are undefined when passing from someTab to Modal via Actions.Modal({someProp: theProp}):\n<Scene key=\"Scene\" tabs={true}>\n    <Scene key=\"someTab\" component={SomeTab} title=\"SomeTab\" icon={TabIcon}/>\n    <Scene key=\"Modal\" component={Modal} title=\"Modal\" hideNavBar direction=\"vertical\"/>\n</Scene>\nHere props come in as expected. \n<Scene key=\"Scene\" tabs={true}>\n    <Scene key=\"someTab\" component={SomeTab} title=\"Requests\" icon={TabIcon}/>\n</Scene>\n<Scene key=\"Modal\" component={Modal} title=\"Modal\" hideNavBar direction=\"vertical\"/>. @aksonov, thank you, you are a hero. Problem resolved by:\n\nWrapping all scenes with a 'root' scene.\nReplacing {ActionConst.REPLACE} with 'replace', '{ActionConst.RESET}' with 'reset' etc. \n\nCorrect router config:\n<Provider store={store}>\n  <RouterWithRedux>\n    <Scene key=\"root\">\n      <Scene key=\"login\" component={Login} title=\"Login\"/>\n      <Scene key=\"register\" component={Register} title=\"Register\"/>\n      <Scene key=\"passwordreset\" component={ResetPasswordScene} title=\"Reset Password\"\n             onBack={() => passwordResetOnBack()}/>\n      <Scene key=\"code\" component={ConfirmCodeScene} title=\"Confirm Code\"/>\n      <Scene key=\"nodes\" component={Nodes} title=\"Table Selection\" type={ActionConst.reset}/>\n      <Scene key=\"tabs\" tabs={TabOne} type={ActionConst.reset}>\n        <Scene key=\"tab1\" component={Request} title=\"TabOne\" icon={bell} initial={true}\n               renderBackButton={BackButton}/>\n        <Scene key=\"tab2\" component={TabTwo} title=\"TabTwo\" icon={shoe}\n               renderBackButton={BackButton}/>\n      </Scene>\n      <Scene key=\"placeholder\" component={Placeholder} title=\"Placeholder\"/>\n      <Scene key=\"cart\" component={CartScene} title=\"Cart\"/>\n      <Scene key=\"checkout\" component={CheckoutScene} title=\"Checkout\"/>\n      <Scene key=\"cardForm\" component={CardFormScene} title=\"Card Details\"/>\n    </Scene>\n  </RouterWithRedux>\n</Provider>. Same problem here. \n\nreact-native-router-flux v4.0.0-beta.16.\nreact-native v0.44.0 \n\nTo recreate in Example project move the drawer to wrap only the register scene and then add a custom 'onBack' function to navigate to the base registration scene (or any other scene e.g. tabbar):\n<Router createReducer={reducerCreate}>\n    <Scene key=\"lightbox\" lightbox>\n      <Scene key=\"modal\" modal hideNavBar>\n        <Scene key=\"root\" hideNavBar>\n         <Scene key=\"echo\" back clone component={EchoView} \n                       getTitle={({navigation}) => navigation.state.key}/>\n          <Scene key=\"drawer\" drawer drawerPosition=\"right\" contentComponent={TabView}>\n           <Scene key=\"register\" back>\n             <Scene key=\"_register\" component={Register} title=\"Register\"/>\n             <Scene key=\"register2\" component={Register} title=\"Register2\" \n                           back onBack={() => Actions.register({type: 'reset'})}/>\n             <Scene key=\"home\" component={Home} title=\"Replace\" type='replace'/>\n           </Scene>\n          </Scene>\n....\nPressing the new onBack button in 'register2' will result in the following error:\n\nAddendum: \nAfter some additional exploration I found that having two children of a drawer and navigating between them disables scene transition animations. Below I wrapped registration and tabbar, and pressing onBack will navigate to tabbar without a transition.\n<Router createReducer={reducerCreate}>\n  <Scene key=\"lightbox\" lightbox>\n    <Scene key=\"modal\" modal hideNavBar>\n      <Scene key=\"root\" hideNavBar>\n        <Scene key=\"launch\" component={Launch} title=\"Launch\" initial/>\n        <Scene key=\"echo\" back clone component={EchoView}\n               getTitle={({navigation}) => navigation.state.key}/>\n        <Scene key=\"drawer\" drawer drawerPosition=\"right\" contentComponent={TabView}>\n          <Scene key=\"register\" back>\n            <Scene key=\"_register\" component={Register} title=\"Register\"/>\n            <Scene key=\"register2\" component={Register} title=\"Register2\" back\n                   onBack={() => Actions.tabbar()}/>\n            <Scene key=\"home\" component={Home} title=\"Replace\" type='replace'/>\n          </Scene>\n          <Scene key=\"tabbar\" gestureEnabled={false} tabs tabBarStyle={styles.tabBarStyle} a\n                 ctiveBackgroundColor='#ddd'>\n....\nPotential Solution:\nWrapping all children of a drawer in a 'drawerRoot' (so that the drawer component only has one child) and removing all transition types seems to solve all the problems described above. However, it adds an additional NavBar that I cant seem to get rid of. Also, the reason I had 'reset' action types in the first place was because they enhanced the performance of the app. It works without them now, but it does slow things down (at least in dev).\n<Router createReducer={reducerCreate}>\n  <Scene key=\"lightbox\" lightbox>\n    <Scene key=\"modal\" modal hideNavBar>\n      <Scene key=\"root\" hideNavBar>\n        <Scene key=\"launch\" component={Launch} title=\"Launch\" initial/>\n        <Scene key=\"echo\" back clone component={EchoView}\n               getTitle={({navigation}) => navigation.state.key}/>\n        <Scene key=\"drawer\" drawer drawerPosition=\"right\" contentComponent={TabView}>\n          <Scene key=\"drawerRoot\">\n            <Scene key=\"register\" back>\n              <Scene key=\"_register\" component={Register} title=\"Register\"/>\n              <Scene key=\"register2\" component={Register} title=\"Register2\" back\n                     onBack={() => Actions.tabbar()} />\n              <Scene key=\"home\" component={Home} title=\"Replace\" type='replace'/>\n            </Scene>\n            <Scene key=\"tabbar\" gestureEnabled={false} tabs tabBarStyle={styles.tabBarStyle} a\n                   ctiveBackgroundColor='#ddd'>\n. @aksonov Tried using 'replace' instead, still get a 'route not defined' error. So it probably isn't just the 'reset' type. I don't know if that means the problem is the drawer or actions or what. \nAdditional addendum\nAdding a 'hideNavBar' to the drawerRoot will remove the duplicated NavBar described above. So it looks like a structure in the  'potential solution' solves all the problems so long as it doesn't pass any action types when navigating within a drawer. . ",
    "danclay91": "@DonnieWest it fixed it for me, thanks a bunch!. ",
    "blaketarter": "Since it seems like #1472 fixes this issue is there any chance we can get it merged in?. ",
    "bragur": "+1. Hmm, strange... I'm having an issue with the default push not working, but RESET and REPLACE work fine. On same versions as well. Been trying to debug what's going on all day and pretty much going nuts \ud83d\ude1d  Edit: RN@0.44.2 and RNRF@3.39.2 Sry :). Beautiful! How about further drawer attributes, like drawerPosition, initialRoutename etc.? Where or how would they be declared?. ",
    "rparma": "+1. +1. ",
    "grundmanise": "+1\nI also wanted to create a global <Modal />  component, but I failed.... ",
    "wytheme": "I think i have done that, but this is not the best way , hope there comes a better way.\nmy purpose : a global loading modal overlay on the scenes\nnow is the way:\n\nuse a custom fetching state  \nuse a <Drawer> as the overlay mask\nthe <LoadingContent /> used for the loading\nwhen open equal false , return <DefaultRenderer /> directly\ntweenDuration={0}\n\n```\n  componentWillReceiveProps(nextProps) {\n    //TODO: hack\n    const state = this.props.navigationState\nif (this.state.fetching != nextProps.fetching) {\n  this.setState({\n    fetching: nextProps.fetching\n  })\n  nextProps.fetching ?\n    NavigationActions.refresh({key: state.key, open: true}) :\n    NavigationActions.refresh({key: state.key, open: false})\n}\n\n}\nrender() {\n    const state = this.props.navigationState\n    const children = state.children\n    //TODO: hack\n    if (!state.open) {\n      return \n    }\n    return (\n       NavigationActions.refresh({key: state.key, open: true})}\n        onClose={() => NavigationActions.refresh({key: state.key, open: false})}\n        content={}\n        styles={Styles}\n        tapToClose\n        openDrawerOffset={0}\n        panCloseMask={0}\n        negotiatePan\n        tweenDuration={0}\n        tweenHandler={(ratio) => ({\n          main: {opacity: Math.max(0.54, 1 - ratio)}\n        })}\n      >\n        \n\n    )\n  }\n```\nHope this helps. @sirgalleto  sorry to reply so late\nreturn (\n      <Router>\n        <Scene key='drawer' component={NavigationDrawer} open={false}>\n          <Scene key='drawerChildrenWrapper' navigationBarStyle={Styles.navBar} titleStyle={Styles.title}\n                 leftButtonIconStyle={Styles.leftButton} rightButtonTextStyle={Styles.rightButton}>\n            <Scene initial key='login' component={LoginScreen} title='Login' hideNavBar/>\n          </Scene>\n        </Scene>\n      </Router>\nbut the solution got a problem, router component will mount each time. \n. ",
    "sirgalleto": "@wytheme looks really nice, so how do you put the Drawer into the scenes tree?. @Naoto-ida Not always because the router saves the component in a history for the back feature, and the component only unmount when the component is not interacting with any part of the application. Any way to know if a component will be \"hide\" or update it state into the router history is using onReceiveProps, usign with componentWillUnmount you can create a good flow.. Awwn yeah, I had this error many time so I fix it recently using a component with a DefaultRenderer into a main root like: \nMainView.js\n```\nimport { DefaultRenderer} from 'react-native-router-flux';\n...\nexport default class MainView extends Component {\n ...\n  render(){\n    const state = this.props.navigationState;\n    const children = state.children;\n    return (\n      \n\n\n\n\n    );\n  }\n}\n```\nRoutes.js\n```\n \n\n             //children routes\n        \n\n```\nI hope this will be useful to you. If you have any question only tag me or answer me on twitter @sirgalleto\n. YW @sagarparikh . @aksonov I think you should add a default renderer documentation (if is still unexisting). . \ud83d\udc4d  I have the same problem. \n. @proProbe Not yet, In my case I need to logout and show the Login page, maybe I will re-mount the router or anything like that. . ",
    "wafisher": "I take that back: it's here #1202. I'm going to close this thread but now the issue is searchable on the term \"zoom\" which is what first came to mind for me.. ",
    "mauricius": "Same problem here. By now I solved it by using setTimeout on the navigation call, but I'm aware that this is not the way to go.\n```javascript\nActions.refresh({key: this.props.navigationState.key, open: false});\nsetTimeout(function() {\n    Actions.ROUTE();\n}, 10)\n```. ",
    "ALawliet": "The best way I've found to do this: https://github.com/aksonov/react-native-router-flux/issues/1227\nBasically get the drawer's .close() into your SideMenu component and use that instead of Actions.refresh({ key: 'asdf', open: false }).\nPissed me off for a long time as well. Now I love my drawer. \ud83d\udc4d . ",
    "sodik82": "The solution seems to be create scenes externally via Actions.create and then use it\n<MenuContext>\n         <Router scenes={scenes} />\n       </MenuContext>\nFor more details see https://github.com/instea/react-native-popup-menu/commit/652a29642da4345ea65ca38573f34818dc56509d. ",
    "hortonelectric": "+1 can someone merge this please. It's affecting a lot of things.. ",
    "netsmertia": "I need the same functionality with structure like\nTab 1 (title = \"STARS\")\nTab 2 (title = \"REQUESTS\")\n       |_ Tab 2.1 (Under same title)\n       |_ Tab 2.2 (under same title)\n       |_ Tab 2.3 (under same title)\nTab 3 (title = \"Settigns\")\nI am about to do the same with React-Navigation and result is satisfactory but I want to know is it possible to do the same with RNRF. \nWhen I put tab inside another tab scene, the inner tabs are shown but not clickable and  title bar is not shown (I need \"REQUESTS\" with all nested tabs).. ",
    "cbilgili": "+1. ",
    "joe-re": "Hi, I encountered same problem.\nIt was resolved by creating nested scene and enclosed scenes by it.(Is this correct working..?)\n<Scene key=\"root\">\n    <Scene key=\"Drawer\" component={NavigationDrawer} >\n      <Scene key=\"Main\">\n        <Scene key=\"Scene1\" component={Scene1} initial />\n        <Scene key=\"Scene2\" component={Scene2} />\n        <Scene key=\"Scene3\" component={Scene3} />\n      </Scene>\n    </Scene>\n  </Scene>. ",
    "spidergears": "@denizs Hi Denis, I have a similar problem.\nI referred the docs where it says to create the component and put some code in place where I want to render the drawer. Designing the Drawer component is okay, I am not sure where do the put the following suggested piece of code\nrender() {\n    return (\n        <Router\n            // then wrap your tabs scene with Drawer:\n            <Scene key=\"drawer\" component={NavigationDrawer} open={false} >\n                <Scene key=\"main\" tabs={true} >\n                ....\n            </Scene>\n        </Scene>\n    );\n}\nDrawer component: \n```\nimport React from 'react-native';\nimport Drawer from 'react-native-drawer';\nimport SideMenu from './SideMenu';\nimport {Actions, DefaultRenderer} from 'react-native-router-flux';\nexport default class NavigationDrawer extends Component {\n    render(){\n        const state = this.props.navigationState;\n        const children = state.children;\n        return (\n            Actions.refresh({key:state.key, open: true})}\n                onClose={()=>Actions.refresh({key:state.key, open: false})}\n                type=\"displace\"\n                content={}\n                tapToClose={true}\n                openDrawerOffset={0.2}\n                panCloseMask={0.2}\n                negotiatePan={true}\n                tweenHandler={(ratio) => ({\n                 main: { opacity:Math.max(0.54,1-ratio) }\n            })}>\n                \n\n        );\n    }\n}\n```\nWill be glad if you help with the context above or with the context presented by @bibhor  .\nRef https://github.com/aksonov/react-native-router-flux/blob/master/docs/OTHER_INFO.md#drawer-side-menu-integration. ",
    "ajaykumarramani": "const children = state.children ,  where is 'children' defined\ni got error in this line. ",
    "drewwells": "the API mentions refresh: {propstoset} but these props are not set or present in the componentWillReceiveProps(nextProps) function version 3.36.0. ",
    "ScorpiusZ": "@JeroenNelen  Yes, i just tring to find a callback like android onResume/onPause\nOr ,if there's any other solution to do this... ",
    "NightFarmer": "Any luck with this issue? Also looking for a solution.. +1. +1 . fixed it\nI update npm to the latest version by sudo npm install -g npm\nthen recreate project by react-native init MyProject\nthen npm i react-native-router-flux --save successfully. ",
    "Symous": "+1.. @Amurmurmur Thanks for your reply,the above code is not work but I have achieve this refer to #1646 :\n```js\nexport const animationStyle = (props) => {\n  const { layout, position, scene } = props;\nconst direction = (scene.navigationState && scene.navigationState.direction) ?\n    scene.navigationState.direction : 'horizontal';\nconst index = scene.index;\nconst inputRange = [index - 1, index, index + 1];\n  const width = layout.initWidth;\n  const height = layout.initHeight;\nconst opacity = position.interpolate({\n    inputRange,\n    outputRange: [1, 1, 0.3], //This will prevent the scene from Fading out\n  });\nconst scale = position.interpolate({\n    inputRange,\n    outputRange: [1, 1, 1], //This will keep the scale the same\n  });\nlet translateX = 0;\n  let translateY = 0;\nswitch (direction) {\n    case 'horizontal':\n      translateX = position.interpolate({\n        inputRange,\n        outputRange: [width, 0, -10],\n      });\n      break;\n    case 'vertical':\n      translateY = position.interpolate({\n        inputRange,\n        outputRange: [height, 0, -10],\n      });\n      break;\n  }\nreturn {\n    opacity,\n    backgroundColor: 'transparent', // Fixes white border\n    transform: [\n      { scale },\n      { translateX },\n      { translateY },\n    ],\n  };\n};\n```. Just try to restart your packager or your computer... . +1 ! Help! . @OscarYuen Hi,friend.Have you solve this problem? :-). please I have the same issue! #3102 . @mswokk not yet friend, this only appeared with Android, so I have to write a native module to force to kill the app manually. :(. @aksonov I haven't try with the latest version. I will try and reproduced that later, thank you.. ",
    "abdulmalik97": "You can render the Component by using redux and its reducers, change the state of one of the parameters and it automatically renders the component after we pop out of the child screen.. ",
    "timkendall": "I've been running into this too - super annoying. Going to see if I can come up with a decent solution.. I still am seeing it on real devices unfortunately. . Alright so it looks like if we simply add a transparent background to the NavigationCard component the white lines go away! \nExample:\n<NavigationCard\n      {...props}\n      key={`card_${key}`}\n      style={[animationStyle, style, { backgroundColor: 'transparent' }]}\n      panHandlers={panHandlers}\n      renderScene={this.renderScene}\n    />\nSource:\nhttps://github.com/aksonov/react-native-router-flux/blob/master/src/DefaultRenderer.js#L253. @dwilt doing it now!. @joenoon Oh nice good catch. Yep I changed the order and the fix still works \ud83d\udc4d . @joenoon I'm honestly not too familiar with the project either so not sure.. ",
    "apeque": "I noticed these as well, but only on the iOS emulator. After building to an actual device, it didn't seem to be an issue.. ",
    "Dineshchitta": "@timkendall  Even though I set background color as transparent still flickering occurs. ",
    "bunmiedee": "```\nconst sceneConfig = {\n  cardStyle: {\n    backgroundColor: 'transparent'\n  }\n}\n\n```\nThis worked for me for v4. ",
    "JohnTree": "I have the same issue.but make no sense. But at this point, I don't want to see the default page.how can I do. ",
    "amhinson": "I'm looking to do this exact thing. Have you found an alternative to use react-native-blue in the navbar?. Hmm can't seem to get the wrap function to render anything. It's just returning an empty navbar. Any thoughts? \nEDIT: Actually, whats on your container style?. ",
    "royjkim": "I'm facing to same problems as yours.\nTo solve this, we'd like to look details on react-native-router-flux.\nAnyway, I'm searching another libraries and basic features to solved this problems.. @lin493369 \nI'm not sure it might be help.\n\nYou add a certain property in Scene\nIn the target of icon property of Scene component, you can differentiate each tabs.\nSo, input the image. I used Image component on the sample image.\nI didn't use react-native-vector-icons, despite of that's convenient.\nAFAIK combining many 3rd libraries make side effects. \n\n\n. @AndrewHenderson \nThanks!, You really smart !!.\n@lin493369\nI tried this way(AndrewHenderson said.) with Ionicons of react-native-vector-icons.\nIt works.\n\n. ",
    "andreecosta": "I cant get this to work, I only get the text, not the icon...\nAnd I tried with @AndrewHenderson solution.. any solution on this? I want to update to use FlatLists.\nDowngrading to 0.43.0-rc.3 didn't work for me.\n. @diegorodriguesvieira That is not working for me... that's strange.\nI get this error when I try to use those versions: \"Duplicate module name: react-native-vector-icons\". @aksonov I've added one screen at a time and it worked :) but unfortunetly the lib won't solve the problem I was having... I thought It was a problem with react-navigation, but I guess not.\nEverytime I rotate the device, on a child screen, the transition is not smooth at all. Only on parent screens re-renders smoothly. This is the problem I'm having: https://vid.me/hhE3A\nI know it's not related with this library, but I'm hoping that someone knows how to fix it.. ",
    "newah": "Not sure if still relevant... Could be something like this + styles\n\\\n\n        \\some title\\\n  \\. @manideepcs024 you provide your own view representation :) to skip title, instead of doing:\n\n\nsome title\n\ndo:\n\n\n. ",
    "jonrh": "I had the same warning when navigation animations triggered. Started happening for me in react-native v0.38 (and v0.40 which I ultimately upgraded to). Thanks @jcollum for the linked workaround, it got me on the right path. What worked for me was the info provided in these 3 comments: comment 1 by @henrikra, comment 2 by @knyga, comment 3 by @uriklar.\nFor convenience here are these 3 instructions combined that worked for me:\n\nOpen up your React Native project in Xcode\nOpen up the project navigator (folder icon from the left)\nIn Finder, locate the file RCTAnimation.xcodeproj in /path_to_your_project/node_modules/react-native/Libraries/NativeAnimation\nDrag & drop RCTAnimation.xcodeproj from Finder into your project's Libraries folder in Xcode\nIn Xcode, go to Build Phases -> Link Binary With Libraries -> click the + at the bottom. Select libRCTAnimation.a under the Workspace folder and click Add.\nClean, Build and Run!. Unfortunately it seems multiple routers is not supported, #26, #221, #513.. I ran into this very issue myself (and others as well), couldn't find any solution. Would love to know if this a design limitation or of there is an easy solution.\n\nHere is the very hacky solution I came up with:\n\nOnce language has been changed I write to AsyncStorage two values: languageChangeRestart: true and language: \"language_code\".\nReboot/reload the app with Code Push restartApp()\nStartup code checks for the existence of language and languageChangeRestart: true in AsyncStorage. If so I redirect back to the Settings screen and remove languageChangeRestart the variable from AsyncStorage.\n\n. @arnsa Interesting, thanks for sharing! I'm not using Redux so this never crossed my mind.. Same issue here.\n@sk15973 In your package.json file please make sure that your react-native-router-flux dependency does not include the caret (^) symbol:\njavascript\n\"dependencies\": {\n    \"react-native-router-flux\": \"3.37.0\",   // Good\n    \"react-native-router-flux\": \"^3.37.0\", // Bad\n}\nWith the caret symbol you will actually use v3.38.0 when you do a fresh npm install. This is because react-native-router-flux seems to have broken semver by introducing a change in behaviour in a minor release.\nPlease forgive me @aksonov for tagging you, but I believe this to be somewhat serious because the caret ^ is inserted by default when using npm install react-nativer-router-flux --save. Over time users of this library might find themselves in cryptic troubles after doing fresh npm install. But I totally understand if you don't have the time : ). @iiitmahesh I unfortunately don't know. Version 3.37.0 is the last one I will use of this library, migrating to React Navigation.. @oatcrunch Were you able to figure this out? I'm in a similar situation and looking into BackHandler now.. ",
    "yasaichi": "For my environment, adding .*/node_modules/react-static-container/.* to [ignore] in .flowconfig could solve the problem :). ",
    "Venryx": "I'm getting a similar problem, as seen here: https://github.com/aksonov/react-native-router-flux/issues/1710#issuecomment-306448293\nExcept in my case, the problem is detected by watchman (as enabled for the react-native packager) rather than flow.. Not only is the \"react-static-container\" dependency not needed -- for me it's causing problems, when running the react-native packager (ie. \"react-native start\"), with watchman installed:\n```\nFailed to build DependencyGraph: @providesModule naming collision:\n  Duplicate module name: StaticContainer.react\n  Paths: C:/Root/Apps/@V/LucidLink/Main\\node_modules/react-static-container/lib/StaticContainer.react.js collides with C:\\Root\\Apps\\@V\\LucidLink\\Main\\node_modules\\react-native\\Libraries\\Components\\StaticContainer.js\nThis error is caused by a @providesModule declaration with the same name across two different files.\nError: @providesModule naming collision:\n  Duplicate module name: StaticContainer.react\n  Paths: C:/Root/Apps/@V/LucidLink/Main\\node_modules/react-static-container/lib/StaticContainer.react.js collides with C:\\Root\\Apps\\@V\\LucidLink\\Main\\node_modules\\react-native\\Libraries\\Components\\StaticContainer.js\nThis error is caused by a @providesModule declaration with the same name across two different files.\n    at HasteMap._updateHasteMap (C:/Root/Apps/@V/LucidLink/Main/node_modules/react-native/packager/src/node-haste/DependencyGraph/HasteMap.js:158:13)\n    at module.getName.then.name (C:/Root/Apps/@V/LucidLink/Main/node_modules/react-native/packager/src/node-haste/DependencyGraph/HasteMap.js:119:31)\n```\nI deleted the \"react-static-container\" folder, and that fixed it. However, when I installed the latest version of react-native-router-flux, it reinstalled the react-static-container folder as a dependency.\nSo having the react-native-router-flux package instead just use the version present in react-native itself (react-native\\Libraries\\Components\\StaticContainer.js) would be helpful.. ",
    "jeffreymendez1993": "I am experiencing this same issue right now and trying to find a solution.. ",
    "erikandersson": "I also experienced this exact issue. Seem that if you set the animation duration manually this issue will not appear.\n<Router duration={400} ...>. ",
    "yoga1982": "Yes, I also using the similar solution to fix the issue, but I think it might be not the best solution, the duration may need to be set to the different values in different devices.. I think another solution is use redux to pass the value. ",
    "samsonradu": "+1 Experiencing exactly the same issue as the OP.\nOnly the NavBar title gets updated, content seems somewhat cached and stays the same. ComponentDidMount is not being called. . ",
    "leoJFeng": "same issue. ",
    "luketgriffith": "i am also experiencing slow animations running it, both on the sim and on my phone (same versions as above).. ",
    "stonepreston": "make sure you disable slow animations on the simulator by pressing command + T or toggle the slow animation option in the debug menu on the toolbar.. I'm trying to figure out how to implement state based navbar buttons (such as an edit button that changes to save when pressed)  Anyone have any tips?. @AndrewHenderson  thanks! unfortunately removing those lines does not seem to have any effect. Ive never edited the node_modules source before. Is there something I need to do in order for the changes to be made? The file has been saved and the changes are there. I added a console.log inside the render title function and it doesnt appear to be getting called. Any ideas?. Realized I needed to re run react-native run-ios to rerun the packager and now its working great! thanks guys. ",
    "skellock": "I'm tracking this over on https://github.com/reactotron/reactotron/issues/306 if you want to close this one.  Thanks for reporting this. =). I'm team-mobx and I still want this for my redux compatriots.  Lemme know if I can help at all.. ",
    "wangsha": "suggestion above works (for me).. ",
    "mackeee-orange": "@CoteViande yes, I did it. and NavBar moved to top position.\nBut,\nIf I choose that method, I have to set NavBar's width with px .\nI'd like to make NavBar responsive.\n. ",
    "AlisonWonderlandApps": "I tried setting with position: 'absolute' and my navBar disappears :( Any suggestions? \nRouter.js\n<Scene\n      key=\"api\"\n      hideNavBar={false}\n      navBar={HeaderWithIcon}\n      navigationBarStyle={{position: 'absolute', top: 0, left: 0, right:0 }}\n      component={APITest}\n    />\nHeaderWithIcon.js\n```\nimport React, {Component} from 'react';\nimport { View, Image, Text } from 'react-native';\nimport { menuStyles } from './styles';\nclass HeaderWithIcon extends Component {\nconstructor(props) {\n    super(props);\n  }\nrender() {\n  const icon =\n    require('../../assets/images/myImg.png');\n\nreturn (\n  <View>\n    <View style={[menuStyles.view, this.props.style]}>\n      <Image source={icon} style={[menuStyles.icon, this.props.iconStyle]} />\n    </View>\n  </View>\n);\n\n}\n};\nexport default HeaderWithIcon;\n```\nstyles.js\n```\nimport { HEADER } from '../../global/margins';\nimport { PRIMARY_COLOUR, SHADOW_COLOUR } from '../../global/colours';\nexport const menuStyles = {\n  view: {\n    flexDirection: 'row',\n    //height: HEADER.height,\n    width: null,\n    backgroundColor: PRIMARY_COLOUR,\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 10,\n  //  paddingTop: HEADER.padding,\n    shadowColor: SHADOW_COLOUR,\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.2,\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0\n  },\n  icon: {\n    width: HEADER.icon,\n    height: HEADER.icon,\n    alignSelf: 'center'\n  }\n};\n```\n. Nevermind... I realise that my HeaderView is wrapped in 2 views and I was not styling the outer one but the inner one. Leaving this here as example code for others if allowed.....\nFix:\nIn HeaderWithIcon.js\n```\nreturn (\n<View style={[menuStyles.view, this.props.style]}>\n  <Image source={icon} style={[menuStyles.icon, this.props.iconStyle]} />\n</View>\n\n);\n```. oh i understand now. can use the backgroundImage property. Sorry!. ",
    "dopey2": "@mackeee-orange you can use width:'100%' . This should work:\n```\nonBackFunction()\n{\n  console.log(\"backkkkkkkkkk\")\n  Actions.sceneA()\n}\n\n\n\n\n\n```. Actions.Product({animation : 'fade'}). Hello , can you share your code ?. I think you should set a listener on your Back Button and your link in Drawer Menu then inside your function do your alert before redirecting to other page. ",
    "iramlg": "Had similar trouble those days, ended using renderTitle with the regular styles like this:\nrenderChatTitle(props) {\n        return (\n            <TouchableOpacity \n                style={{\n                    marginTop: 10,\n                    position: 'absolute',\n                    top: 5,\n                    left: 0,\n                    right: 0,\n                }}\n                onPress={()=> console.log('trigger press')} >\n                <Text \n                    style={{\n                        textAlign: 'center',\n                        color: '#FFFFFF',\n                        fontSize: 18,\n                        width: 180,\n                        alignSelf: 'center'\n                    }}\n                    lineBreakMode=\"tail\"\n                    numberOfLines={1}>\n                    {props.title}\n                </Text>\n            </TouchableOpacity>\n        )\n    }\nCurious to know if there is another way!. ",
    "rmnegatives": "@jaisonveneri you mean @aksonov right?. @jaisonveneri  with this specific version notice that key: 'tile_1_tile' you can parse the '1' out. But it seems like index should say 1 as well.. No prob had the same reason! @jaisonveneri . ",
    "Kernael": "Any news on this ?. ",
    "aiyidu": "+1. solution:\nYou need to add RCTLinkingIOS in your pod file, which the documentation didn't mention.. ",
    "femiveys": "I have the same problem. I would want the nav stack to be cleared when switching tabs.. It would be interesting to get an answer on this.\nI work with tabs. Whenever I press a tab it should be in the state as if I pressed the tab for the first time, no matter what happened in the tab. Having the scene unmount as requested here, could be a workaround.. ",
    "arvindmishra1406": "I am stuck with same issue. Can someone help us?. ",
    "jakecraige": "The way I've handled this is by always starting on a custom SplashScreen screen and have it trigger something on componentDidMount. ",
    "valerybodak": "@timkendall When this issue will be resolved? Please fix it. Thank you. \nMy version is: \"react-native-router-flux\": \"3.38.0\". Hi, guys\nI have finally found temporary workaround for remove ugly white borders on scene transitions. I have changed backgroundColor in animatedView's style in DefaultRenederer.js file:\n\\node_modules\\react-native-router-flux\\src\\DefaultRenederer.js\nconst styles = StyleSheet.create({\n     animatedView: {\n       flex: 1,\n       backgroundColor: '#YOUR_COLOR',\n     },\n     sceneStyle: {\n       flex: 1,\n     },\n});\nIt works for me!. @filipemonteiroth \nI try to use react-native-drawer (https://github.com/root-two/react-native-drawer) in my app with react-native-router-flux\nAccording to the documentation I've added my scene with drawer to the Router:\nimport NavigationDrawer from './scenes/NavigationDrawer';\nimport MetricsScene from './scenes/MetricsScene';\n```\n\n\n\n\n\n\n\n\n```\nIn my LoginScene I call:\nActions.metrics({type: ActionConst.RESET});\nafter press on Login button, but NOTHING happens.\nAny ideas? Thanks in advance.. +1. @Chandhru08\nYour solution is not working for me. It is my dependencies:\n\"dependencies\": {\n    \"react\": \"16.0.0-alpha.6\",\n    \"react-native\": \"0.44.0\",\n    \"react-native-localization\": \"^0.1.30\",\n    \"react-native-router-flux\": \"3.38.0\"\n  },\nAfter remove node_modules folder I perform npm install and I see:\n-- react-native-router-flux@3.38.0 +-- UNMET PEER DEPENDENCY react@^0.13.0 || ^0.14.0 || ^15.0.0-- \nCould you please provide your package.json.. ",
    "krishnaff": "Yes, looking for a general way to disable this. Especially on Android to improve frame rate. \nThe header title slide animation is not characteristic to Android, so it makes sense to have a way to disable this.\nThanks. ",
    "jvaclavik": "@vexsnare Probably the best solution is disable transitions for Android:\n```\nimport { Platform } from 'react-native'\n...\n<Scene\n  key='root'\n  duration={Platform.OS === 'android' ? 0 : null}\n\n...\n\n```. \n",
    "ayozemr": "+1\nI have to specify my navbar component on all child scenes because hierarchy does not work when you specify a navBar on a parent scene and child has not one specified.. Now the first time I visit a tab, navbar flashes like its re-rendering or something... Its possible to fix that? Maybe it has an animation we can edit? It happens only on Android, iOS not flashing.\nThanks @aksonov for your time!. ",
    "AAverin": "1752  is related to this one. For me navbar is always invisible if I run on Android.\nAny tips?. ",
    "roadev": "I'm stuck in this too :/. ",
    "qmegas": "+1. @Blapi The example is very simplified version of what is really happens in application. The number of screens to remove decided by separate logic depends on data received from server on screen4. And I don't want to \"remember\" that decision inside screen5 which is have separate complex logic. Also I don't want to control back button on screen5, user can do it with Andoid hardware button.. @Blapi yep, looks ugly, but if that is the only way to manage the stack, then probably I have no choice.\nBy the way, If I change the stack that way, will removed screens be unloaded? In other words: will function componentWillUnmount() be called for them?. @Blapi I have tried code that you suggested.\nGood thing: componentWillUnmount is called for removed screens. \nBad thing: I still see animation of removing these screens before new screen5 appears.. @Blapi now?. @Blapi Yes, it working, but I still see screen removing animation, like if I'm calling Actions.popTo('screen2');. And currently I didn't found a workaround.. @digitaldavenyc Unfortunately one month have passed, so I had to move back to version 3.x, thus I have no example code.. ",
    "vovkasm": "Sorry for interfering, but I can't find Subtitle in Apple docs: https://developer.apple.com/reference/uikit/uinavigationbar\nAnd generally yes, you can place anything in UINavigationItem#titleView, but there is no general style for that.\nThere is very generic guidelines from Apple: https://developer.apple.com/ios/human-interface-guidelines/ui-bars/navigation-bars. ",
    "benjaminb10": "Sorry for the screenshot with a subtitle.\nIt's more about the default background color, button color, font, font size, and animations.\nI use the word \"default\" for the bassic navbar generated in Xcode.. ",
    "denny64": "@crysfel have you found a solution for this yet?. ",
    "peter-jozsa": "@andrispraulitis I changed the order of applied styles as you requested.. @andrispraulitis any updates?. oops sorry \ud83d\ude00then only aksonov can accept it?. Hey there,\nI don't know why nobody reacts to my PR. @aksonov are you here?. ",
    "Justkant": "Hi,\nI would love to see this merge & publish to npm because we need this change too.. Should be fix soon\nhttps://github.com/aksonov/react-native-experimental-navigation/pull/23. ",
    "sealskej": "I've asked the same question on StackOverflow. Please upvote if you' re interested.. ",
    "tenodi": "From the first look, it doesn't seem like a @shoutem/ui problem. However, if you discover some issues with the toolkit, please report it here.. ",
    "akusany2": "I think you should pass it as a function on renderRightButton, something like:\n } onRight={()=>console.log('clicked')}>\n.... @fernandovega  If I delete sceneStyle={{paddingTop: Navigator.NavigationBar.Styles.General.TotalNavHeight}}, the rendered component will be again shift up top behind the NavBar.. ",
    "jimmykwok": "1141 might help you..",
    "Ivykp": "@jimmykwok thank you for the suggestion. Really i have tried using fixed width and height to cover the entire screen and it works, but also i need the NavigationBar; doing that the NavigationBar is not showed even using hideNavBar={false}.. ",
    "wilomgfx": "That would be great, its one thing I've been looking to do.. ",
    "bbc4468": "Also works well with IOS 10.0. ping @aksonov . ",
    "saikrishna321": "@aksonov can you pls help on this, even when we run the automated tests we get the previous screen elements on the DOM. . ",
    "jonolock91": "Was there any resolution to this issue?. Found the issue - I wasn't wrapping my Android index.android.js scenes with the Redux Router.. ",
    "ztplz": "I have a same issue, do  you solved this problem now ?. ",
    "Chren": "It works! I am going to close this issue.. ",
    "affibox": "I actually added the RCTLinkingIOS to my pod file but I'm still getting the same error. Nothing changed.. ",
    "pgonzalez-santiago": "Same error here trying to run the Example. :/\nGet the code\ngit clone https://github.com/aksonov/react-native-router-flux.git\ncd react-native-router-flux/Example\nInstall dependencies\nyarn\nRun it\nreact-native run-ios\n. ok. Thank you. The problem was I had another RN project running on background.. Having the same problem. How did you fix it? @OrianeInMoon . Here you can see the effect with slow animation. You can appreciate it after the back icon button is pressed.\n\n. Sorry for asking but How can I disable the navBar? :/ I know how to hide it, but no how to disable it. @aksonov . RNRF navbar is hidden (disabled) in my case. The main problem is the \"animation\" between two custom navbars or a navbar and a custom navbar. As you can see in the image that I posted it looks like one navbar dissapear, then a black background appears and then the new navbar is rendered. How can I avoid that? Its possible to remove those 'animations'?\nDid you test the transitions between custom navBars?. My fork has been merged. Now the example have some scenes with custom navbar.\nThank you.. @SoldierCorp Did you find any solution? I am having the same problem, I want to fetch the data of a second tab only when this tab is active.. @SoldierCorp I added the prop \"lazy\" in the tabs parent and it works. Fetch data in the componentDidMount() on my second tab is called when I navigate into it. I think this is what you want.. @SoldierCorp Could you paste the code of your scenes/tabs please?. Its solved. Thank you.. Done. Sorry for the delay.\n@mcabs3 Updated. Sorry had a lot of work and I didn't see your message.. Hey @aksonov sorry I didn't answer you to \"Does Example work well with custom navbars?\" Custom navbar works perfectly.. @mcabs3 Done.. Any news regarding this? I wold like to disable gesture in some scenes.. Hi, in my APP I want to show or hide the tabbar depending if the user is logged or not. I have this information in the store so the only thing that I have to do is check if the token exists.\nThis is what I have,\n               <Tabs  key=\"listTabs\"\n                      swipeEnabled={true}\n                      showLabel={true}\n                      lazy={true}\n                      tabBarPosition=\"top\"\n                      hideTabBar={this.props.token === null}\n                >\n                .....\n                </Tabs>\n\n. Same issue here. I need to set a custom action when the physical back button of the android device is pressed. Any ideas?. So what do we do now? I am doing feature that needs fullscreen so I have to hide the navbar.. Thank you @onrige . I have the same problem. Did you find something? \nI didn't see this post and I have created a new issue: https://github.com/aksonov/react-native-router-flux/issues/2913. Finally I got success with a custom navBar, the only problem with it is that I can not refresh the props of the navBar from the child components(tabs).\n\nMy structure:\n<Scene\n              key=\"mediaContainerScreen\">\n              <Tabs\n                  key=\"mediaContainerTabs\"\n                  swipeEnabled\n                  showLabel={true}\n                  tabBarPosition='top'\n                  tabBarStyle={{ backgroundColor: Colors.navBar }}\n                  labelStyle={{ color: Colors.primaryColor }}\n                  indicatorStyle={{ backgroundColor: Colors.primaryColor }}\n                  activeBackgroundColor=\"white\"\n                  navBar={MediaNavBar}\n                  lazy\n                  >\n                    <Scene\n                      key=\"Images\"\n                      component={MediaContainerScreen}\n                      title=\"MediA Images\"\n                      tintColor={Colors.primaryColor}\n                      hideNavBar\n                      back={false}\n                    />\n                    <Scene\n                      key=\"Videos\"\n                      component={MediaVideoContainerScreen}\n                      title=\"MediA VideoS\"\n                      tintColor={Colors.primaryColor}\n                      hideNavBar\n                      back={false}\n                    />\n                    <Scene\n                      key=\"Pdfs\"\n                      component={MediaPdfContainerScreen}\n                      title=\"MediA Pdfs\"\n                      tintColor={Colors.primaryColor}\n                      hideNavBar\n                      back={false}\n                    />\n              </Tabs>\n            </Scene>. Duplicated line, can be removed. My mistake.. Do you want me to remove the line and push the changes?. Done\n. ",
    "hecontreraso": "@ddolheguy Thanks for you fast answer.\nIt finally worked adding:\nrenderBackButton={()=>(null)}\nI'm closing the issue now. ",
    "jobrienski": "Doesn't work. Never mind - I was having trouble not showing the left back arrow. I figured out if I did hideNavBar on the root component, the functionality works as I wanted it to.. Same issue. ",
    "krean93": "Hey\nI am trying to do this, but the back button still shows up unfortunately.\n4.0.0-beta.24\n<Router>\n        <Scene key=\"root\">\n            <Scene\n              key=\"login\"\n              component={LoginForm}\n              title=\"Please Log in\"\n              />\n            <Scene\n              key=\"employeeList\"\n              component={EmployeeList}\n              title=\"Employees\"\n              renderBackButton={()=>(null)}\n              renderLeftButton={()=>(null)}\n              />\n        </Scene>\n      </Router>. ",
    "pistonsky": "@krean93 Try to add tabs to your root scene, and don't forget about hideTabBar.\n<Router>\n  <Scene key=\"root\" tabs>\n    <Scene key=\"login\" component={LoginForm} title=\"Please Log in\" hideTabBar />\n    <Scene key=\"employeeList\" component={EmployeeList} title=\"Employees\" hideTabBar />\n  </Scene>\n</Router>\nLater you can nest your scenes, so that employeeList can lead to a single employee's screen:\n<Router>\n  <Scene key=\"root\" tabs>\n    <Scene key=\"login\" component={LoginForm} title=\"Please Log in\" hideTabBar />\n    <Scene key=\"employees\">\n      <Scene key=\"employeeList\" component={EmployeeList} title=\"Employees\" hideTabBar />\n      <Scene key=\"employee\" component={Employee} hideTabBar />\n    </Scene>\n  </Scene>\n</Router>\n. Damn... This one is dangerous!. What if I have a scene which accepts params, and can navigate to itself, but with a different param? For example, imagine app where you read blog posts. The scene where you read a certain blog post is called \"Post\". Inside of it, you see a hyperlink which basically takes you to another blog post, so the route name doesn't change. If this change gets approved, all those links stop working.\nYou need to add a logic that checks how many milliseconds are passed since user last navigated. If it's really too fast, (less than... 500ms? I'm a fast guy, I tap fast, so maybe 300ms?) - then cancel navigating.\nBut I wouldn't bother. What was the problem you had?. ",
    "jtrein": "This worked for me with 4.0.0-beta.24: https://github.com/aksonov/react-native-router-flux/issues/2006#issuecomment-322423598. ",
    "vinipachecov": "@pistonsky Thank you!!! \nJust need to remember that when you use the call for Actions from react-native-router-flux you need to call it to employees.\nThat worked flawless :). ",
    "fendorio": "To hide the back button on my initial scene, i simply added the 'renderLeftButton' prop, passing in an empty View.\nSee below for some incomplete, example code. \nimport { View } from \"react-native\";\n....\n...\n<Scene initial={true} renderLeftButton={<View></View>}   key=\"timeline\" component={Timeline}   />\n. ",
    "gogh-zaa": "\n. ",
    "ninechung": "\n@ddolheguy Thanks for you fast answer.\nIt finally worked adding:\nrenderBackButton={()=>(null)}\nI'm closing the issue now\n\nand how to disable swipe back?. > Use gesturesEnabled={false} or panHandlers={null}\nits save me, thanks u.. > Try swipeEnabled={false}\nits not working.. ",
    "karlkras": "@pistonsky \n\nYou need to override the \"renderBackButton\" on the Scene with a function which returns the back button. NOTE: Depending on your situation you might need to override the \"renderLeftButton\" instead of the back button with the same function.\n\nThanks for this information. Using renderLeftButton worked for me. Just wondering what the difference of using renderLeftButton vs. renderBackButton is? I tried renderBackButton (with {() => null} and found that it only removed the text of the back button, but not the icon.. ",
    "goncalomarques": "Thanks @ddolheguy, but it didn't work.\nWhen using Action.[key]({type: ActionConst.REFRESH}) , the REACT_NATIVE_ROUTER_FLUX_REFRESH action is dispatched, but there isn't a screen render at all, the app mantains the same component.\nWhen using Action.pop, I get the following error message: You are already in the root scene.. ",
    "leifdenby": "I've been trying to find a workaround for this for ages and finally found a robust method. My approach is to provide my own \"reducer\" for the navigation state and pass a prop to every scene that makes it possible in the scene's componentDidMount to indicate that a method should be called on the scene component when the component is brought into focus. I've put my code on github here: https://github.com/leifdenby/react-native-router-flux-focus-hook. Hope this is useful.. @MovingGifts there might be other actions that I should hook onto when navigating. The easiest way to work this out would be to put in some debugging information in the reducer (https://github.com/leifdenby/react-native-router-flux-focus-hook/blob/master/index.js#L37). Once you find out what is missing I'd be happy to accept a pull request :) . > @leifdenby also, let me know if you wanna merge and I can submit a pr :)\nDefinitely! :). ",
    "markhaasjes": "+1. In my case I need to update the title within the NavBar and this part is doing the trick for me. I found the solution in Issue #1381.\nActions.pop({ refresh: { title: 'new title' } }. ",
    "codeNgamer": "@markhaasjes i followed @leifdenby cue and created https://github.com/codeNgamer/react-native-router-flux-hooks , you can hook into all ActionConst events now, just add what event you want.. @leifdenby also, let me know if you wanna merge and I can submit a pr :). ",
    "shenders13": "Hi all, I was wondering if it would be possible to add a forceRenderOnFocus key on the Scene. For example:\n<Scene key={HomeKey} component={Home} forceRenderOnFocus={true}/>\nAt present I'm using @leifdenby react-native-router-flux-focus-hook to solve the \"Scene isn't re-rendering onFocus after the back button is pressed\" problem.\nBut it means that I can't upgrade from react-native-router-flux \"3.37.0\" as that's what @leifdenby's hook uses. It also means I have to add the following code block to every component I want to renderOnFocus:\n```\n  componentDidMount() {\n    const { navigationStateHandler } = this.props;\n    navigationStateHandler.registerFocusHook(this);\n  }\ncomponentWillUnmount() {\n    const { navigationStateHandler } = this.props;\n    navigationStateHandler.unregisterFocusHook(this);\n  }\nhandleNavigationSceneFocus() {\n    this.forceUpdate();\n  }\n```\nwhich bloats my codebase somewhat.\nVery appreciative for your time in advance.. ",
    "tomerbarak": "<Scene key=\"root\" >\n          <Scene  key=\"sceneA\" component={SceneA} />\n          <Scene  key=\"sceneB\" onBack={() => Actions.sceneA()} component={SceneB} />\n  </Scene>. ",
    "FrenchMajesty": "@shenders13 's solution is a great one.\nIf my scene A is Dashboard and my scene B is Profile.\nUser open Dashboard -> go to Profile -> update Profile (automatically redirected to Dashboard after hitting the Save button).\nNow if user press the back button from the Dashboard on Android then it takes them to the previous Profile page without updating the state and it will show old information.\nHaving the forceRenderOnFocus prop would allow me to have Profile screen refresh whenever user hit the back button and they would see up to date information. . If anybody had this issue, please use the react-navigation API that is provided in this package.\nI wasn't really sure about what the documentation meant when it mentions the API... I guess for people familiar with the package there wouldn't be any need to mention it but the react-navigation API is accessible from Actions object. \nSomething along the lines of:\n```\nimport { Actions } from 'react-native-router-flux';\nActions.push('FiltersList', {type: 'controller'});\n```\n. ",
    "GenesisX": "+1. ",
    "fpruz": "Thank you kind man, haven't seen the PUSH_OR_POP constant in docs. If I just knew.. ",
    "iiitmanikanta": "Instead of hideBackImage, use renderBackButton={()=>(null)}\nIt works. Changing react-native-router-flux from 'v3.37.0' to '3.37.0' worked for me. @diegorodriguesvieira yeah from 3.37 to 3.38. give type={ActionConst.REFRESH} for tab scenes. It solved the issue. ",
    "MichelKansou": "@AndrewHenderson renderBackButton={null} not working for me . @AndrewHenderson here's my rooter when I login in android it work fine but in iOS I always have the back button \n```\n            \n ({account: state.account}))(Switch)}\n                    selector={(props)=> props.account.get('connected') ? \"tab_bar\" : \"login\"}\n                    >\n                    \n\n\n\n\n\n\n. @AndrewHenderson it's working thank you \ud83d\udc4d . ",
    "RobinJayaswal": "Just what I was looking for @AndrewHenderson, thank you!. @jie did you extend react-navigation TabBarBottom? Do you mind posting the code for the custom tabbar you ended up using?. A workaround I can do is making MyDrawerComponent have a navbar directly, and just having hideNavBar on my top level drawer scene. But I am wondering if there is a more natural way to achieve my desired behavior.. ",
    "bishalshr": "renderBackButton is not working on v4. Are there any changes?. @aksonov is there any way to disable the action buttons? I want to disable the buttons when user saves the form.. Great. It worked. Thank you.\nBut there are not mentions of onBack in the doc.. @Blapi Doesn't \"replace\" only replace one scene?\nReset resets the whole stack and we can't achieve this by Actions.pop.\nI am trying to achieve:\nScene A => Scene B => Scene C=> Scene D to Scene A => Scene B => Scene E. I also tried to do the same thing but after Actions.pop is called, Scene C will be visible for 1-2 seconds.. @Blapi \nThere is a bizzare issue here. When I do\nActions.pop();\n  Actions.replace(newScene);\nIt works fine.\nBut If I do\nawait apiCall();\n  Actions.pop();\n  Actions.replace(newScene); it is showing old scene for some seconds.. ",
    "t-nabil": "In RNRF v4.0 : you can use  type={ActionConst.REPLACE} ... > Iam not sure if it will work on older versions.. ",
    "pvroosendaal": "renderBackButton & onBack are not working for me. I tried setting those in the Scene declaration:\n(null)} />\n{}}/>\n\"react-native\": \"0.44.0\",\n\"react-native-router-flux\": \"^4.0.0-beta.17\"\nAny other ideas? \nI'd like to have a push animation, but no back button.. Yes, great! That works.\nThanks very much!\nOn Sun, Aug 13, 2017 at 10:11 PM, Lucas Veiga notifications@github.com\nwrote:\n\n@pvroosendaal https://github.com/pvroosendaal Try this on you scene:\nstatic navigationOptions = {\n    headerLeft:null\n  }\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/aksonov/react-native-router-flux/issues/1517#issuecomment-322064473,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/APyvgZvyh4-ThexshJ-qP5L55QfQ-6R-ks5sX1hqgaJpZM4LcV0Q\n.\n. In the Component class from the Scene, e.g.:\n\n```\nexport default class SomeView extends Component {\n    constructor(props) {\n        super(props)\n    }\nstatic navigationOptions = {\n    headerLeft:null\n}\n\n}\n```. You\u2019re probably on another version then. Try one of the other solutions mentioned in this thread.. Cool! Something I often forget too :)\nBtw, the link gives a 404 for me.. Fixed it by overriding 'hardwareBackPress':\n```\ncomponentDidMount() {\n    BackAndroid.addEventListener('hardwareBackPress', this.handleBackButton)\n}\ncomponentWillUnmount() {\n    BackAndroid.removeEventListener('hardwareBackPress', this.handleBackButton)\n}\nhandleBackButton() {\n    return true\n}\n```. ",
    "miuel": "hey @pvroosendaal , @aksonov , @MichelKansou  I tried whole the different options no one works for me i'm afraid. I'm using \"react-native-router-flux\": \"^4.0.0-beta.22\"\nrenderBackButton={null}\n renderBackButton={()=>(null)}\n onBack={()=>{}}    \n`const RouterComponent = () => {\n    return(\n         \n\n                <Scene key=\"login\" component={LoginForm} hideNavBar />\n\n                <Scene \n                    key=\"employeeList\" \n                    component={EmployeeList} \n                    title={\"Employees\"} \n                    onBack={()=>{}}\n                    renderBackButton={null}\n                    renderBackButton={()=>(null)}\n                /> \n        </Scene>\n    </Router>\n)\n\n}\nexport default RouterComponent;`\nEven this object I'm not able to make works on my const RouterComponent ..., any idea ?\nstatic navigationOptions = {\n        headerLeft:null\n    }\nthanks.... Hello @papsti7 did you finally solve ? I have same problem in this versions: \n\"react\": \"16.0.0-beta.5\",\n\"react-native\": \"0.49.3\",\n\"react-native-router-flux\": \"^3.35.0\",. ",
    "shibbyy": "This worked for me Actions.tabBar({type: ActionConst.RESET}). ",
    "salincakli": "I do this:\n  componentWillReceiveProps(nextProps: Props) {\n        if (this.props.needsRefresh !== nextProps.needsRefresh) {\n            {\n                nextProps.needsRefresh &&\n                InteractionManager.runAfterInteractions(() => {\n                this.getNewData()\n            })\n        }\n    }\n}\n\nand on the previous screen it pops back with:\n        Actions.pop({refresh: {needsRefresh: true}})\n. try doing expensive js operations in here:\ncomponentDidMount() {\n        InteractionManager.runAfterInteractions(() => {\n            // expensive js  -here-\n        })\n    }. ",
    "i8wu": "This looks like a better way to do what I wanted in here https://github.com/aksonov/react-native-tabs/pull/51 could this get merged in?\n. Why'd you close this @Piwaii ?. You could try setting navigationBarStyle for the router. Any idea when the next version of react-native-router-flux is gonna be out? @andkhong . I've got a PR that should fix what you're talking about https://github.com/aksonov/react-native-tabs/pull/51. Why don't you using the tabs that are built into this module? Example/docs explain usage. ",
    "Piwaii": "sorry, I made some modifications locally and forget it would close the PR\nI made a new one : #1888 . ",
    "mu1ex": "3,338 stars and extremely bad documentation.. ",
    "jenessawhite": "This would be IMMENSELY helpful!. Agreed @monotv, but I think the point of asking was because we didn't understand ActionConst otherwise I would love to help add to docs. ",
    "ragnorc": "Using Actions.pop still leads to child conflict when tapping on tab for second time. Any idea on how to fix this?. ",
    "StephanPartzsch": "Alright, my fault ;)\nThe problem was my reference of {TabIcon} for the scene icon. . ",
    "cpruijsen": "@ethaniel happy to help as well \ud83d\udc4d . @ethaniel christopher.pruijsen@gmail.com. ",
    "ethaniel": "@cpruijsen awesome! how can I contact you?. ",
    "gwest7": "Any solution to this yet?. ",
    "DavidKongDesheng": "Same issue here, whenever click the navigator back button, it will take around 4-5 seconds to back to the previous page.. Just found if remove all console.log() and disable logger, everything works fine again.. ",
    "jungchris": "Thanks @DavidKongDesheng, I'll try that.. ",
    "sakarit": "Try\nActions.sceneYouWantToPopTo({type: ActionConst.POP_AND_REPLACE})\nThis should pop to the scene without animation, but it also re-renders the scene.. ",
    "James-Coleman": "I added duration={0} to the scene I'm going back to and that worked.. I added duration={0} to the scene I'm going back to and that worked.. ",
    "jaredmahan": "The switch documentation is outdated. Had to look at the source code to get the correct syntax The following code should work. Keep in mind I am utilizing typescript so you will have to remove the static typing stuff. Also, the ConnectedSwitch should prob be moved out of the render method.\n```\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Router, Scene, Switch } from 'react-native-router-flux';\n// Your internal components\nimport Authentication from '../features/authentication';\nimport Main from '../features/main';\nexport class App extends Component {\n    render() {\n        const ConnectedSwitch = connect((state: any) => {\n            return {\n                selector: () => { return state.authentication.get('isAuthenticated') as boolean ? 'main' : 'auth' },\n                unmountScenes: true,\n            };\n        })(Switch as any);\n        return (\n            \n\n\n\n\n\n        );\n    }\n}. ",
    "hugohow": "I have the same issue with Samsung Galaxy S7 ! It works perfectly on Iphone by the way. ",
    "wm219": "year, me too.Maybe react-native experimental navigator do something works.. ",
    "alanwzou": "any solution without updating to V4? I can not update to the new version at present.\nbtw, does anyone know the cause of the issue?. ",
    "IlyasAbdighni": "Try direction='vertical' for the scene property. Hope it works for you.. ",
    "jaredtibs": "@IlyasAbdighni this did work for me. thank you!. ",
    "mehdyMa": "@IlyasAbdighni What about sliding from left to right? \nI have already tried with direction='left' and direction='right' ... ",
    "dan-katz": "@mehdyMa for left to right try <Scene direction=\"leftToRight\">. ",
    "tuononh": "Seem like direction does not work anymore. Any update on this?. Yes. But seems like it will push firstStack into current stack. Actually I want to have separate stacks (tabs) so user can freely navigate inside that stack.\nAnd swipe back gesture works! . My mistake. 2 detail scenes have the same key.. ",
    "Freego1783": "Thanks for your response,\nActually i forgot to mention that i want my loading screen to also act as a Splash Screen, that would explain why i tried to do it that way.\nBut i'll also try what you suggest and maybe work my way from there.. Finally had time to try what you suggested but i get the exact same result, a white screen for a few seconds and then it's ok.\nI removed the loading scene from my router and i updated the render() of my Home screen to display the Loading component while updating the database.\nKinda strange, i don't get what's happening :/. Here are my actions : \n```\nexport function updateDB() {\n    return (dispatch, getState) => {\n        dispatch(setDBUpdating());\n    var shooters = shootersJson.shooters;\n\n    shooters.forEach(function (shooter) {\n        realm.write(() => {\n            realm.create('Shooter', {\n                name: shooter.name,\n                category: shooter.category,\n                price: shooter.price,\n                strength: shooter.strength,\n                gender: shooter.gender,\n                treachery: shooter.treachery,\n                drinkStyle: shooter.drinkStyle,\n                recipe: shooter.recipe,\n                quote: shooter.quote\n            }, true);\n        });\n    });\n\n    dispatch(setDBUpdated());\n}\n\n}\nexport function setDBUpdating() {\n    return {\n        type: types.UPDATING_DB\n    }\n}\nexport function setDBUpdated() {\n    return {\n        type: types.DB_UPDATED,\n        shooters:realm.objects('Shooter')\n    }\n}\n```\nI have a json file that i parse to populate the database.\nHere are my reducers : \n```\nexport const updatingDB = createReducer(false, {\n    types.UPDATING_DB{\n        let newState={};\n        newState.dbIsUpdating=true;\n        return newState;\n    }\n});\nexport const db = createReducer({}, {\n    types.DB_UPDATED{\n        let newState={};\n        newState.shooters=action.shooters;\n        newState.dbIsUpdating=false;\n        return newState;\n    }\n});\n```\nAnd Here are the relevant parts of my Home screen : \n```\nclass Home extends Component {\nconstructor(props){\n    super(props);\n    this.props.updateDB();\n}\n\nrender() {\n    if(this.props.dbIsUpdating){\n        return(<LoadingScreen/>);\n    }\n\n    return <View style={styles.mainContainer}>\n            //list view with data from Realm\n    </View>\n}\n\n}\nfunction mapStateToProps(state) {\n    return {dbIsUpdating: state.dbIsUpdating}\n}\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators(ActionCreators, dispatch);\n}\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Home);\n```\nI call the action in the constructor, i also tried in componentDidMount() with no luck.\n. There's currently a bug with Realm that prevent me from using Remote Debuging but i think i managed to find what's going on after trying what you suggested.\nI have a feeling that Realm is \"too quick\" or i just have to few data for now. If i wait like 500ms between each Relam Write, i can see my loading component.\nBut still, that white screen bugs me :D\nThanks for your help man.. ",
    "davidsharp": "If your app is guaranteed to pass the login screen, Actions.popTo('login') will work. Otherwise run the Actions.login without the type attribute, and set that as the type on the login <Scene /> in your router, which will reset the nav stack whenever the user ends up on the login screen.. That onPress isn't calling the action. You either want onPress={Actions.newFeed} or onPress={()=>{Actions.newFeed()}}.\nOn a side note, you could instead assign that function to your <Scene key=\"home\"  ... /> using the onRight property. ",
    "superandrew213": "Made PR https://github.com/aksonov/react-native-router-flux/pull/1552. @aksonov can we take this in? It's only a simple change which was intended to be implemented like this.. @aksonov are you sure that it will break existing apps?\nAt the moment if you set the left button, the back button overrides it. So basically you can't set the left button at all at the moment. The back button is set by default and overrides the left button if it is set.\n{renderBackButton(navProps) || renderLeftButton(navProps)}\nThe change would only break apps that have set the left button (mistakenly). Because it is not working at the moment and would only show the back button. After the update the left button would override the back button.. Ah ok, I got you.. ",
    "martijndeh": "This is a problem for me when rendering a sub-scene with edit mode active (in a base scene where a back button is already visible). The expected behaviour is to render a left and right button (with Cancel and Save text), instead a Back button and a Save button are rendered.\nreact-native-router-flux 3.37.0\nreact-native 0.40.0. ",
    "Kielan": "I have the exact same issue. Why is this happening?. possibly related #1534 . ",
    "hasanmumin": "can you try :\n<Router showNavigationBar={false}>\n.........\n</Router>. ",
    "bnol": "+1. ",
    "SoldierCorp": "I'm using the following code to set a dynamic title of my navbar:\nComponentOne.js\n<TouchableNativeFeedback\n        background={TouchableNativeFeedback.SelectableBackground()}\n        onPress={() => Actions.componenttwo({title: 'Food'})}\n      >\n      <View>\n          .......\n      </View>\n</TouchableNativeFeedback>\n\nIn my Router.js where I have my Scenes\n<Scene\n    key=\"componenttwo\"\n    component={ComponentTwo}\n    backTitle={'Component One'}\n    getTitle={props.title} //this is the one\n  />\n\nHope it helps!\n    . @Nautal I cannot see any difference using lazy\n@mcabs3 I want to know if there is a way to detect the tab event to compare if the content has not been loaded, then load the content because I'm using axios to get data from my API\n@pgonzalez-santiago  Not yet u.u. @aksonov I'll check how to use it, thank you!\n@pgonzalez-santiago That's weird, I have that prop and componentDidMount but all of them are being loaded at the same time..     \n\n\n\n    <Scene key='team' hideNavBar='true' backTitle={'Regresar'} component={Team} passProps={true}\n      openSideMenu={props.openSideMenu}\n      closeSideMenu={props.closeSideMenu}\n      type={ActionConst.REPLACE}\n    />\n\n    <Scene  key='business' component={Business} title='INFORMACI\u00d3N' hideNavBar='true' passProps={true} />\n\n    <Scene key='filter' component={Filter} type={ActionConst.PUSH} passProps={true} navigationBarStyle={navBar}\n      title={'Filtros de b\u00fasqueda'}\n      titleStyle={titleStyle}\n      leftButtonImage={ require('./assets/images/icons/close_icon.png') }\n      onLeft={ Actions.pop }\n    />\n\n    {/* Tabs */}\n\n    <Tabs\n      key=\"home\"\n      tabs\n      tabBarStyle={styles.tabBarStyle}\n      hideNavBar=\"true\"\n      showLabel={false}\n      tabBarPosition='bottom'\n      titleStyle={titleStyle}\n      navigationBarStyle={navBar}\n      onLeft={props.openSideMenu}\n      onRight={() => Actions.filter()}\n      rightButtonTextStyle={filterTextStyle}\n      hideBackImage={true}\n      leftButtonImage={ require('./assets/images/icons/menu_trigger.png') }\n      rightButtonImage={ require('./assets/images/icons/filter_icon.png') }\n      activeBackgroundColor=\"#262a62\"\n      inactiveBackgroundColor=\"#444881\"\n    >\n      <Scene\n        key='info'\n        component={BusinessList}\n        icon={TabIcon}\n        openSideMenu={props.openSideMenu}\n        type={ActionConst.REPLACE}\n        title=\"\ud83c\udfec Negocios\"\n      />\n      <Scene\n        key=\"featured\"\n        component={Featured}\n        title=\"\u2665 Destacados\"\n        icon={TabIcon}\n        passProps={true}\n        lazy\n      />\n      <Scene\n        key=\"events\"\n        component={Events}\n        title=\"\ud83c\udf89 Eventos\"\n        icon={TabIcon}\n        passProps={true}\n        lazy\n      />\n    </Tabs>\n  </Stack>\n</Router>. Actually if you check the docs, lazy is in the Scene not in Tabs, please review that part https://github.com/aksonov/react-native-router-flux/blob/master/docs/API.md. I have the same issue, replace is not working,. https://i.gyazo.com/a2afff7d5040d0b03f32e3bff17fbb2b.mp4. Yes, yesterday at morning I realised of it and now I don't have that issue anymore :)\n\nreact-native-drawer was the problem.. +1. I just realised when I pressed on that button, it's entering twice in the business route and in the first call the data is there but not in the second one and I don't know why.\n\nThis my Routes.js file\nThe Drawer is not being used for the splash and the signup screens.\n\n    import React from 'react';\n    import {\n      StyleSheet\n    } from 'react-native';\n    import { Actions, Stack, Scene, Router, ActionConst, Reducer, Tabs, Drawer } from 'react-native-router-flux';\n\n\n    //Components\n    import Splash from './components/Splash';\n    import SignUp from './components/SignUp';\n\n    import Filter from './components/Filter';\n\n    import Contact from './components/Contact';\n    import Tutorial from './components/Tutorial';\n    import Gifts from './components/Gifts';\n    import MyGifts from './components/MyGifts';\n\n    import Team from './components/Team';\n\n    import BusinessList from './components/BusinessList';\n    import Business from './components/Business';\n    import Featured from './components/Featured';\n    import Events from './components/Events';\n\n    import SideMenu from './components/SideMenu';\n\n\n    import TabIcon from './components/TabIcon';\n\n    const RouterComponent = (props) => {\n\n      console.log('ROUTER PROPS', props);\n\n      const reducerCreate = params => {\n        const defaultReducer = new Reducer(params);\n        return (state, action) => {\n          console.log('ACTION:', action);\n          return defaultReducer(state, action);\n        };\n      };\n\n      const {\n        navBar,\n        titleStyle,\n        filterTextStyle\n      } = styles;\n\n      return(\n        <Router createReducer={reducerCreate}>\n          <Stack key='main'>\n            <Scene key='splash' hideNavBar='true' component={Splash} type={ActionConst.REPLACE} />\n            <Scene key='signup' hideNavBar='true' component={SignUp} type={ActionConst.REPLACE} />\n\n            <Drawer\n              hideNavBar\n              key='drawer'\n              contentComponent={SideMenu}\n              drawerImage={require('./assets/images/icons/menu_trigger.png')}\n              drawerWidth={300}\n              type={ActionConst.REPLACE}\n            >\n              {/* Home Tabs */}\n\n              <Tabs\n                key='home'\n                tabs\n                tabBarStyle={styles.tabBarStyle}\n                hideNavBar='true'\n                showLabel={false}\n                tabBarPosition='bottom'\n                titleStyle={titleStyle}\n                navigationBarStyle={navBar}\n                onRight={() => Actions.filter()}\n                rightButtonTextStyle={filterTextStyle}\n                hideBackImage={true}\n                leftButtonImage={require('./assets/images/icons/menu_trigger.png')}\n                rightButtonImage={require('./assets/images/icons/filter_icon.png')}\n                activeBackgroundColor='#262a62'\n                inactiveBackgroundColor='#444881'\n                lazy\n              >\n                <Scene\n                  key='list'\n                  component={BusinessList}\n                  icon={TabIcon}\n                  type={ActionConst.REPLACE}\n                  title='\ud83c\udfec Negocios'\n                />\n                <Scene\n                  key='featured'\n                  component={Featured}\n                  title='\u2665 Destacados'\n                  icon={TabIcon}\n                  type={ActionConst.PUSH}\n                  passProps={true}\n                />\n                <Scene\n                  key='events'\n                  component={Events}\n                  title='\ud83c\udf89 Eventos'\n                  type={ActionConst.PUSH}\n                  icon={TabIcon}\n                  passProps={true}\n                />\n              </Tabs>\n\n              <Scene\n                key='business'\n                component={Business}\n                getTitle={props.title}\n                navigationBarStyle={navBar}\n                titleStyle={titleStyle}\n                navBarButtonColor='#FFF'\n                type={ActionConst.PUSH}\n                passProps={true}\n              />\n\n              <Scene key='contact' hideNavBar='true' backTitle={'Regresar'} component={Contact} passProps={true} type={ActionConst.REPLACE} />\n              <Scene key='tutorial' hideNavBar='true' backTitle={'Regresar'} component={Tutorial} passProps={true} type={ActionConst.REPLACE} />\n              <Scene key='filter' component={Filter} type={ActionConst.PUSH} passProps={true} navigationBarStyle={navBar}\n                title={'Filtros de b\u00fasqueda'}\n                titleStyle={titleStyle}\n                leftButtonImage={require('./assets/images/icons/close_icon.png')}\n                onLeft={Actions.pop}\n              />\n              <Scene key='team' hideNavBar='true' backTitle={'Regresar'} component={Team} passProps={true} type={ActionConst.REPLACE} />\n\n\n\n              {/* Gifts Tabs */}\n\n              <Tabs\n                key='gifts'\n                tabs\n                tabBarStyle={styles.tabBarStyle}\n                hideNavBar='true'\n                showLabel={false}\n                tabBarPosition='bottom'\n                titleStyle={titleStyle}\n                navigationBarStyle={navBar}\n                onLeft={props.openSideMenu}\n                hideBackImage={true}\n                leftButtonImage={require('./assets/images/icons/menu_trigger.png')}\n                activeBackgroundColor='#262a62'\n                inactiveBackgroundColor='#444881'\n                lazy\n              >\n                <Scene\n                  key='allgifts'\n                  component={Gifts}\n                  icon={TabIcon}\n                  type={ActionConst.REPLACE}\n                  title='\ud83c\udf81 Regalos disponibles'\n                />\n                <Scene\n                  key='mygifts'\n                  component={MyGifts}\n                  title='\ud83c\udf81 Mis regalos'\n                  icon={TabIcon}\n                  passProps={true}\n                />\n              </Tabs>\n            </Drawer>\n          </Stack>\n        </Router>\n      );\n    };. Not working for me u.u. Same error but we don't know whether the error belogns to react nativation or this repository.. Thank you, now it's working!\n\nBut I still have the issue regarding the push of the views... the views aren't being pushed, looks like they are being replaced because there is no animation and when I go back after \"push\" 2 views, it's returning to the home and not to the previous one.. The issue I have began when I change from react-native-drawer to use the Drawer of this package, as you can see my index.android.js contains only this render() { return ( <Router /> ); }.\nMy logs are showing that I'm pushing the views not replacing them.\nAnd in order to load the home of my app, I'm loading a very first Scene which is the splash\n<Scene key='splash' hideNavBar='true' type={ActionConst.REPLACE} component={Splash} />\nIn that Component I'm reseting to drawer to avoid the user perform back in home and return to the splash scene with this\nActions.reset('drawer')\nProbably I'm making a mistake there.\nWhat do you think?. Are there any comments regarding my last question?. Regarding the original issue, I just realised that is actually not working... I'm trying to back to a view but always replacing the views to the first one and it's never entering to the onBackPress, don't know why it's failing like that... I started a new project and it's the same.\nI remember with the v3 version everything was working perfectly, I know you cannot reproduce without an example but I'm not the only with that issue and you should to check creating a fresh project and it's actually not working as v3 did.. ",
    "borgand": "I'm using redux too and in my case the rightTitle is a username that is stored in the global redux state. There are several ways this username can change - a user action, a API call, redux-persist dehydrating the store (i.e. changing from null to a value).\nIn all cases the router should refresh the title in the navbar, but it doesn't and I could not figure out the correct way to hook in the Actions.refresh() too.\nBTW, by using Reactotron, I can see that my React component NavigationRouter does receive the props, so I tried even this:\ncomponentWillReceiveProps (newProps) {\n    console.tron.display({preview: \"Received new props\", value: newProps})\n    Actions.refresh()\n  }\nBut that only messed with the navigation flow when the user changed the username, but did not refresh the right title.\nHow can I make the navbar more reactive on the props?. ",
    "mintotsai": "I'm seeing the same with react-native-router-flux v3.37.0. Is there a workaround?. ",
    "dioxmio": "@aksonov can you check this issue? it's been there for a while. It happens to me as well. This isn't really doing anything to me\nActions.tabbar({type: ActionConst.RESET});\nthe component isn't unmounted. I'm still unable to reset navigation with it. anybody is able to help there??. @hasLandon your solution works many thanks :)\n@cridenour a custom tab bar seems an overkill. I could be adding this behaviour through a property if needed. I think it would make more sense to have an option for it instead of this hacky solution. By having it as a property it could be included in documentation and would be more intuitive for people to use.  If you don't like the idea I'll just close the issue.. ",
    "yasemincidem": "@mbenjamin618 i didn't understand what you say. Actually i didn't solve it like i talk about above.But i find a solution like this.Maybe it can help to you.\nFor example you have tabbar scenes like following.\n<Scene\n                key=\"tabbar\"\n                tabs={true}\n                tabBarStyle={styles.tabbarStyles}>\n                <Scene key=\"profile\"\n                       icon={TabIcon}\n                       title=\"chart\"\n                       onPress={()=>{\n                                Actions.tabbar({type: ActionConst.RESET});\n                                Actions.popTo(\"profile\");\n                         }}>\n                    <Scene key=\"tabbar1\" hideNavBar component={Tabbar1} title=\"Tabbar 1\"/>\n                </Scene>\n                <Scene key=\"tabbar2\"\n                       icon={TabIcon} title=\"notebook\">\n                    <Scene key=\"tabbar3\" component={Tabbar3} hideNavBar title=\"Tabbar 3\"/>\n                </Scene>\n                <Scene key=\"tabbar4\" icon={TabIcon} title=\"camera\">\n                    <Scene key=\"tabbar5\" component={Tabbar5} hideNavBar title=\"Tabbar 4\"/>\n                </Scene>\n</Scene>\nI mean when you click each icon on tabbar, you should reset tabbar scene and then you should navigate with popTo to sceneKey that you clicked.\nonPress={()=>{\n                                Actions.tabbar({type: ActionConst.RESET});\n                                Actions.popTo(\"profile\");\n                       }}\nActually i tried method that i mentioned on above.But it does not work for me.So i find another solution like this.I hope it will help to you.. @aksonov can you check this issue ?. Yes,I agree with you for parent key that has one child.But if parent scene called scene3 has multiple children,your recommendation is fail.Let me give an example for this situation that I mean.\n<Scene>\n           <Scene key=\"scene1\">\n                <Scene key=\"scene2\" hideNavBar component={Scene2}/>\n            </Scene>\n            <Scene key=\"scene3\">\n                <Scene key=\"scene4\" hideNavBar component={Scene4}/>\n                <Scene key=\"scene5\" hideNavBar component={Scene5}/>\n                <Scene key=\"scene6\" hideNavBar component={Scene6}/>\n            </Scene>\n</Scene>\nParent scene has multiple children in this example.When I want to navigate from scene2 to scene5,your recommendation is fail because of I use Actions.scene3.if i use this code block ,I go to scene4 not scene5.Because if you navigate parent key of scene3, you will go to the page that parent key has first child.I hope I explain clearly myself.Have you any idea for this situation ?. i have a same problem but i solved following these step:\n\nreact-native-router-flux is removed from dependencies of package.json in Example project\nOther libraries that dependencies of package.json in Example project is installed with npm i  command.\nAfter all that, react-native-router-flux library is installed with npm i react-native-router-flux@3.38.0 --save \nif project does not still work ,you should npm cache clean command in terminal.\n\nI can work example project that in react-native-router-flux project following these steps.I hope this will be help to you.. ",
    "stsiushkevich": "I have the same issue. I found this PR: https://github.com/aksonov/react-native-router-flux/pull/1312. ",
    "barakcoh": "@aksonov are you interested in merging my fix? I'll re-open the PR w/ the just 1st commit if you are. Closing in favor of https://github.com/aksonov/react-native-router-flux/pull/1682. @aksonov here's the updated PR. ",
    "danvk": "This turned out to be due to redux-logger. See https://github.com/evgenyrodionov/redux-logger/issues/32. ",
    "Lxxyx": "same problem, need help.. Try calling Actions.refresh() after you set new title.\nFrom: 'https://github.com/aksonov/react-native-router-flux/issues/1557'. @ooicl just like this.\njavascript\nAction.refresh({title: 'new title'}}. Action.refresh(PARAMS)\nPARAMS is the Scene props.. @ooicl I use redux.. when click a tab, just dispatch an action. Yes, please provide better v4 redux integration docs. Current way is too difficult for me. ",
    "ooicl": "How do you call Actions.refresh() on tab change?. What I meant was, where can we \"detect\" that the tab has changed? \nIn my case, it was about user \"clicking a different tab\", not about changing the title. . The dispatch of tab-click action is not managed by me... it is managed by react-native-router-flux... . ",
    "GopiKrishna10": "@ooicl  have you solved the issue? Because am facing the same issue.Am not using redux.How can i detect the tab-click action. @Blapi ,\nI added this line in my scene  renderTitle={}.getting error be like renderTitle is not a function. Yes, i gave the Component like am sending screen shots as reference\n\n\n. Yes, \nI forgot that before,after that i added that return. i saw the same error @Blapi \n\n. Thanks @Blapi. I will check and let you know.  . Hi Guys and @Blapi ,\nI upgraded the RNRF V3 to V4.After  Running the Project am seeing errors like \n\nShould i need to update the React-native version ?\nam using the React-native -  \"^0.39.0\". you mean that routing part.Here you go.\n\nThere is a dependency to update the RN. Need to update the React version?. Actually i have many lines of code.I removed so much code for sharing purpose.I didn't get the full file screenshot that's why i removed the code.My app.js Code is\n\nHere is RootContainer\n\n. few minutes back i upgraded the RNRF : \"4.0.0-beta.24\",\nNow I update the RN version to 0.50.3. I think for RN 0.50.3 need to update React Version?. After the updating the RN(0.50.3) and React(16.0.0) getting errors while running the project in xcode @Blapi .\n\n. Actually there is a code for styles.applicationView.i removed the code @Blapi . Am showing the main content in single screenShot.The code is\n // Styles\nconst styles = StyleSheet.create({\n  applicationView: {\n    flex: 1\n  }\n});. Sure @Blapi .I will Update you. @Blapi I tried to fix the errors in Xcode which are caused by Version changes.But am not able to fix the errors.Could you please help me.. @Blapi and @aksonov  Guys could you please help me. Sorry @Blapi ,\nAs of now, I solved the issue by using backhandler in react-native.Thanks for your reply.Just small clarification While navigating to the screens how can check if he is loggedIn or Not.\n. ",
    "underaj": "Did you put the unmountScenes props in tabs scene? Removing that would probably stop flashing the first child scene. ",
    "fanyuRN": "I also  meet this problem in android. ",
    "bielcapanema": "same here. It's beacause of: android:windowSoftInputMode=\"adjustResize\"\nbut it is necessary for react-native-gifted-chat . ",
    "liujett": "when your RN app exit but run in the background,the problem will appear\u3002. who know how to solve this problem?. ",
    "foggy1": "On android this is still an issue, especially now that it uses adjustResize in the Android Manifest to make things responsive to the keyboard resizing the window.  It's great that they did that because Android had an issue with this previously, but there should be a way to make tab bar ignore the resizing of the window.. It's a dirty workaround, but you need to Actions.refresh({ your state here }) to load it in as props, which you can then access.  There is no cleaner workaround since it is a class method that will not have access to the instance's state.\nIf you find that to be too funky or inconvenient, I would recommend hiding the navbar and just making your own navbar component to render in instances of your components without this issue.. ",
    "ismjt": "+1. ",
    "jorge627": "any solution for this guys?, thanks. ",
    "zuzuviewer": "@hector ,just Actions.pop(),the modal is still been showed. ",
    "mxmtsk": "I'm dealing with the same issue. The only thing that does work for me is Actions.pop() but I want to transition to a different scene from the modal and tried Actions.popTo('profile') as well as Actions.profile({ type: 'reset' }) which both bring the modal up again as soon as I transition from the profile scene to another scene.. ",
    "mgorabbani": "You can use ActionConst.RESET. \nSee for details https://github.com/aksonov/react-native-router-flux/blob/master/docs/API_CONFIGURATION.md#scene. ",
    "petitmat": "When I do that, the tabbar is reset and there is only one icon on it, the icon I've just clicked on.... ",
    "Miteshdv": "Also followed\nhttps://github.com/aksonov/react-native-router-flux/blob/master/docs/OTHER_INFO.md\nto show Modals , But its not working .\nPlease help us to show a spinner view using react-native-router flux. ",
    "sagarparikh": "@sirgalleto this works. Elegant solution. Thanks. ",
    "a20736377": "top:0. ",
    "superical": "I have tried setting top:0 and it doesn't work. The navbar is still on top of my view. :/. @kelvinlemus Thanks! But in this case, the View is still not on top of the custom NavBar. This is how it looks: Image Link\nIdeally, I have one of the screens which need to have a View overlapping the NavBar.. @albinhubsch @CoteViande Yes, Modal does work. The problem however is that the View I'm working on can be dragged up and down by the user. When the View is dragged down at the bottom of the screen, the user can still interact with other things on the upper part of the screen. \nProblem with Modal is that it will effectively block out all interaction on every elements other than the ones within the Modal. I've tried setting Modal to transparent, but everything else behind the Modal still cannot be interacted. :cry: . @CoteViande Thanks for your replies! Sure, what I'm trying to achieve is something like a slide-up panel akin to what Spotify has in their app. Basically, the user can \"pull\" the panel up from the bottom of the screen. When a user pulls open the panel, it will take up the whole screen. After opening the panel, the user can slide the panel back down to the bottom of the screen. When the panel is slided back down, a tiny part of it is revealed at the bottom of the screen. In other words, this panel is visible throughout the time.\nMy plan was to make this panel a View which responses to PanResponder gestures. However, I can't find a way to get this View to be on top of the NavBar when it slides up.\nUsing Modal does get its child View to appear on top of the NavBar. However, a Modal, when visible, consumes every interaction on the screen to itself. In my case, I need the Modal to be always visible even when the slide-up panel is closed because part of it will stay at the bottom of the screen. This will prevent the users from interacting with anything else behind the Modal on the screen. Since I need the Modal to always be visible, I cannot set its visible to false too.. ",
    "kelvinlemus": "@superical can you try something like this \n\n\ndeclare the static method renderNavigation and make your own navigation bar \nstatic renderNavigationBar(props) {\n    return (\n      <View style={styles.navigationBar}>\n        <Text style={styles.navTitle}>Awesome Nav Bar</Text>\n      </View>\n    )\n  }\n\n\nadd some styles and the views \n<View style={styles.container}>\n            <View style={styles.topView}>\n              <Text>Some Title</Text>\n            </View>\n            <View style={styles.otherView}>\n              <Text>Some Content</Text>\n            </View>\n          </View>\n```\nnavigationBar: {\n    height: 56,\n    position: 'absolute',\n    top: 56,\n    left: 0,\n    right: 0,\n    backgroundColor: 'black',\n  },\n  navTitle: {\n    color: 'white'\n  },\n  topView: {\n    top: 0,\n    position: 'absolute',\n    height: 56,\n    backgroundColor: 'yellow',\n    left: 0,\n    right: 0\n  },\n  otherView: {\n    marginTop: 56\n  }\n\n\n```\nyou should see a block, navbar and otherView in order . ",
    "albinhubsch": "@superical Use <Modal> as @CoteViande proposed! I do it in one of our applications and it works very well!. @sitompul I did this \n```\nconst onBackAndroid = () => {\n    Actions.pop()\n    return true; // Return true to stay, or return false to exit the app.\n};\n\n\n```. ",
    "loregr": "@superical were you been able to make it work?\nThanks. ",
    "bilalsyed001": "@loregr @superical I got similar thing to work using -> https://github.com/magicismight/react-native-root-siblings\nGood Luck!. See https://facebook.github.io/react-native/docs/scrollview.html#keyboardshouldpersisttaps. Try setting headerStyle. This works for me:\n```\n shouldCloseApp = state => {\n    if (state.index > 0) {\n      return false;\n    }\nif (state.routes) {\n  return state.routes.every(this.shouldCloseApp);\n}\n\nreturn true;\n\n}\n```\n```\n  {\n    let { state } = Actions;\nif (state.routes) {\n  // handle drawer\n  if (state.routes[0].index === 1 && state.routes[0].routeName === 'drawer') {\n    Actions.drawerClose();\n    return true;\n  }\n}\n\nif (this.shouldCloseApp(state)) {\n  return false;\n}\n\nActions.pop();\nreturn true;\n\n}}\n\n\n```\ncredit: https://gist.github.com/iesteban/724227c2dc1364066473dee5bbfc304d. \n",
    "BrendanBerkley": "Pretty confident that build error isn't the fault of this PR. Any way to re-run it?. ",
    "lavarajallu": "PLEASE SOLVE THIS MY ISSUE\n. ",
    "skoob13": "Seems like in 0ef1f7a19ca30d99e1892595da5be67a15c8fc22 was firstly introduced this error on Android and removing lines from 121 to 123 fixes this issue.. ",
    "jasan-s": "@skywalker2013  I'm using react-native-tab-view and in a similar situation. Did you figure it out?  I want to keep track of the current nav state using external tab view (like scrollable tab view) . Hope the problem is resolved in next release. . Yup For now now downgrade to v3.38.0. duplicate of #1816 . ",
    "wangghon": "@johnchourajr, I suppose you already find a solution since the issue has been for 20+ days.\nIf not , maybe you can have a try to custom tabIcon, just like the tabIcon in example.. ",
    "marketman400": "\ud83d\udc4d  Same issue here. ",
    "TrymON": "I have the same problem. ",
    "mateusz-poliman": "Have You guys achieved anything in this topic?. as a workaround you can do something like this on notification open:\njavascript\nActions.listScene({ type: 'reset' });\nsetTimeout( () => {\n    Actions.itemScene();\n}, 0);\nthis will actually render both scenes, but you'll end up with stack you wanted.. I've found nothing more, still waiting for that feature... ",
    "LironErman": "Same problem. Is there a way to do that without render the first scene?. ",
    "GibranPolonsky": "Well, thanks for the support. . ",
    "edmundito": "@afilp I've gotten the same problem with 0.39 however I am not using react-native-router-flux. Please let me know if you found a solution.. ",
    "suark": "@afilp Where did you change that? I am having a very similar issue (RN 0.41, windows 10, Android), and it only happens when Hot Reloading is on. Wasn't happening to me before my upgrade from RN 0.35.\nI searched the react-native module folder and didn't find any mention of babel-polyfill except in the package.json.\nThen I searched all of my projects src folder and didn't find any mention of babel-polyfill, as well.. ",
    "HelloDeadline": "I had similar problem but on iPad only. I tested same build on desktop and on Android, but the error occurred only on iPad.  Thanks to @afilp, I checked my webpack config and found that some of dependencies are absent from vendor build. I added them and the problem disappeared.\nNote that I'm using react (not native). . ",
    "vincicat": "Detail example of using clone prop is in #750\nwe need a better example on using tab.. Check the issues with \"lifecycle\" will show you the fact that RNRF does not run the lifecycle methods during tab switching, lifecycle method is called only when:\n1. props change (made by react-redux's mapStateToProps or passing props when loading tabs)\n2. RN unmounted it for saving memory\nSome solutions suggest using your own reducer, or changing the component logics. \nFYI\nThe non-redux Solution is not well mentioned in the docs, require override onPress function of tab (scene with icon) in order to pass your own parameter: \nhttps://github.com/aksonov/react-native-router-flux/blob/master/docs/OTHER_INFO.md#tabbar\n```\n   {\n      Actions.myTab({propsToPass});\n    }}\n\n //...Available Scenes inside \"My Tab\"...//\n\n\n```. See #1717 . \n",
    "niconistal": "I'm trying to do the same. Did you find a solution?. ",
    "baetschjunge": "+1\nhaving the same problem,\neven ActionConst.RESET does not empty the stack and scenes are resulting in conflict with children,\nit does resetting the route at least\n@martinarroyo did u find any answer to popTo?. dirty solution could be\nActions.pop();\nsetTimeout(() => {\nActions.SceneB( passPropWhichTriggersCallback ); // you might have to refresh\n}, 10);\ndidnt try tho. @shukerullah we are also looking for something like this\npopTo should go back to selected screen and also clear stack but (for us) it doesn't at the moment, just pops back\nusing 3.35.0\ndid u find any solution?. ",
    "martinarroyo": "@baetschjunge I rearranged the screen hierarchy so that newGroup and invite are in the same branch of the tree as the \"group\" scene. That way the behaviour seemed to be correct.. ",
    "jettandres": "+1 for this one, too. ",
    "Steviey": "But what would be the benefit? React-Navigation has routing and Redux-compatibility on board.. I understand. Are there any advantages for absolute beginners too?. ",
    "aathapa": "any updates on v4 using react-navigation ?? . ",
    "vesper8": "any update on this? is there going to be a new beta branch opened soon?. ",
    "jemmyphan": "IMO RNRF's API is better than react-navigation. ",
    "mdeprezzo": "+1 I've already used the custom NavBar. It show properly on top. But i think that i missed something else, because the navigation between scenes doesn't affect the custom navbar during the native scene transition.. Maybe my question wasn't clear. I mean, that i'd like to know, how to include the custom navbar, on the slide animation of the scene, like the native android animations.\nBecause right now, only the title is affected from slide animation.\nAnd my first try, to accomplish that, was to include the custom navbar, inside the scene components. But there's something of weird during the transition.. Ok thanks man.\nIl 1 mar 2017 20:33, \"Chris Ridenour\" notifications@github.com ha scritto:\n\nThe real NavBar is an Animated.View instead of a normal one, so I imagine\nthat is requirement number one. However, there's no documented list of\nrequirements for this so I would encourage you to start all Custom NavBars\nby copying the one I linked and customizing from there vs. a fresh\ncomponent.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/aksonov/react-native-router-flux/issues/1648#issuecomment-283444785,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AGSe1tfW464Ts6cYv4MmwrM5KzJHklDkks5rhcgYgaJpZM4MKVLP\n.\n. \n",
    "indatawetrust": "I was having the same problem and I solved it with a small code change.\nhttps://github.com/aksonov/react-native-router-flux/blob/master/src/Reducer.js#L229\nreturn { ...state, index: ind };\nreturn { ...state, index: ind, name: props.name+'ACTIVE' };\nactive tab component is now seen in the following way.\nscene.children.filter(child => child.name.match(/ACTIVE/))[0]\n. ",
    "SiddarthG": "yes that was the problem.. thanks. ",
    "aDEVE": "It should be a router problem architecture ?\nI do like this and it works, ( I'm new, not sure it's the better way) \n```\nsidebarButton   = () => (\n         { Actions.refresh({ key: 'drawer', open: true }); }}>\n            \n\n    );\n\n\n\n\n\n\n```\n. ",
    "weby91": "@aDEVE thanks for pointing the way out, I changed the Router to Class Based Component and then add a function like that and call it from renderLeftButton props like you did. Thanks man. ",
    "pluxain": "Have you tried without the <View /> surrounding the <Router /> component ?\nAre you sure your <Welcome /> component is found in the path you provide in the import statement ? (maybe your file also starts with a capital W, or is nested elsewhere). I suggest using this tip to clean imports rather than use relative paths. Read more about this here\nIn your case, that would mean to place a package.json file in the containers folder and add this code inside :\njson\n{\n    \"name\": \"containers\"\n}\nThen in your import statements you can use directly this from where ever you are :\njavascript\nimport Welcome from 'containers/Welcome';\nYou can further improve the includes by adding and index.js files in the containers folder and list in it all your containers like so:\njavascript\n// containers/index.js\nexport { Welcome } from './';\nThis way you can then include things like this :\njavascript\n// Navigation.js\nimport Welcome from 'containers';\nTo have the index file export working you need to use export class Welcome or export const Welcome rather the export default syntax.. ",
    "natashache": "Thanks everyone for the tips. I shifted the paths around and checked again. The components were correctly imported. I also tried using react-navigation (https://reactnavigation.org) as an alternative navigator, and it's able to pick up the imports with no problem:\n```\nimport { Welcome } from './containers/Welcome'\nimport { Signup } from './containers/SignupScreen'\nimport { Main } from './containers/Main'\nimport { StackNavigator } from 'react-navigation';\nimport { Scene, Router } from 'react-native-router-flux'\nexport const NavigationAlt = StackNavigator({\n  Home: { screen: Welcome },\n  Signup: { screen: Signup }\n});\nexport class Navigation extends Component {\n  render() {\n    return (\n      \n\n\n    )\n  }\n}\n```\nIn the above file, when I comment out the Navigation class and use NavigationAlt, which uses react-navigator, the component shows up. But when I try to use Navigation, it gives me the error that component for 'key=Welcome' is not set.\nNot sure what the problem is. Thinking of just switching to react-navigator. But I'm sure there're problems with that one as well. I just don't know about them yet.. @byennen react-navigation has been working for me so far. Don't know when the other shoe is going to drop, but not going to hold my breath for that :). ",
    "byennen": "@natashache same issue.. I recommend moving react-native to \"devDependencies\" instead of removing it totally.. ",
    "Abdul-majid-ashrafi": "I am also facing this issue . Alrigth. ",
    "UrbanChrisy": "@Abdul-majid-ashrafi Please open a new post on stack overflow with your code and any errors that are happening, its not a bug but a user error.. ",
    "rom1k": "I have the exact same problem.. ",
    "fernandovega": "Delete line 29 \nsceneStyle={{paddingTop: Navigator.NavigationBar.Styles.General.TotalNavHeight}}\nWorks for me. ",
    "deejaygeroso": "my bad guys it does unmount the component. The problem is my React-native ListView component doesn't somehow reset its datasource. Though I'll try to figure it out why it behaves like this.. @joshg111 the component does get unmounted. I just simple checked it by logging using componentWillUnmount. I kind of found out the problem but I still can't figure out how it was happening.\nI'm using Feathers client (redux), the problem is with the redux state. Since I get data of my react component's state from A Redux state using componentWillMount, every changes from my react components state somehow gets reflected to my Redux state without triggering or dispatching actions from my reducers. I really don't know how it was happening. Somehow the memory location of that data from my react components state is pointing to my redux state.\nSo what I did is that everytime I load that component, I just simply fetch new fresh data from my server then store it to my redux state then load it to my component using componentWillMount so i could be sure that i have fresh data when i load the component. \nThen another option is that everytime I unmount from that component i fetch another new data from the server to be stored on my redux state to clear any changes that happened during that time. Hope this helps.. ",
    "tonilopezmr": "@aksonov Yes same in version 3.37.0.\nIf you have a list with items, when fast clicks to details after Actions.pop doesn't call componentWillMount \n. ",
    "swiftmade": "The problem persists in version 3.38.0. ",
    "yreenchan": "Is there any methods to solve this problem ?. ",
    "bilby91": "Same problem here.. @satsuki0221 I tried that and it didn't work!. @satsuki0221 I still have the same problem with:\n\"react-addons-pure-render-mixin\": \"^15.4.2\",\n\"react-static-container\": \"^1.0.1\",\n```\n\u279c  app git:(bump-react-native-0.43.1) \u2717 react-native bundle --platform ios --dev false --entry-file index.ios.js --bundle-output ios/main.jsbundle\nScanning 764 folders for symlinks in /Users/bilby91/Projects/app/node_modules (12ms)\nScanning 764 folders for symlinks in /Users/bilby91/Projects/app/node_modules (12ms)\nLoading dependency graph, done.\nUnable to resolve module react/lib/ReactComponentWithPureRenderMixin from /Users/bilby91/Projects/app/node_modules/react-addons-pure-render-mixin/index.js: Module does not exist in the module map or in these directories:\n  /Users/bilby91/Projects/app/node_modules/react/lib\n,   /Users/bilby91/node_modules/react/lib\nThis might be related to https://github.com/facebook/react-native/issues/4968\nTo resolve try the following:\n  1. Clear watchman watches: watchman watch-del-all.\n  2. Delete the node_modules folder: rm -rf node_modules && npm install.\n  3. Reset packager cache: rm -fr $TMPDIR/react-* or npm start --reset-cache.\n``. @satsuki0221 Thenpm upgradedid the trick. The problem was with the version ofreact-addons-pure-render-mixin, you needreact-addons-pure-render-mixin@15.5.0` in order to run correctly.\nThanks!. So, temporal solution will be to add this to package.json:\n\"react-addons-pure-render-mixin\": \"^15.5.0\",\n\"react-static-container\": \"^1.0.1\",. ",
    "twksos": "We have a temporary solution.\nIn our project, we have an init method for each component to set the state of that component.\nIt will be called in both componentWillMount and componentWillReceiveProps.. @golestanirad \nI think the problem has gone if you upgrade to 4.0.\nHowever, if there's some reason prevent you from upgrade, the old solution would looks like this:\njavascript\nclass SomeView extends Component {\n    componentWillMount() {\n        this.init();\n    }\n    componentWillReceiveProps(nextProps) {\n        this.init();\n    }\n    init() {\n        // read props, set state, init view model ...\n    }\n    render() {\n        // ...\n    }\n}. From our experience, you just need to wrap an View outside your Router, and append your shared component after it with absolute position.. @zxcpoiu , @MechanicKim , @aksonov \nplease let me know if there is any concern on merge this one.. ",
    "kuranari": "This may be related to https://github.com/aksonov/react-native-router-flux/issues/1266. ",
    "jeongmincha": "@aksonov @adrianmcli @brien-crean @dragfire Would you please check this PR? It's one about documentation. I think you don't need much time to decide whether it's necessary or not. \nThank you in advance. I also appreciated this good library for react-native.. ",
    "beiming": "@chris-at-translate thanks. it worked. \n\nScenes marked with clone will be treated as templates and cloned into the current scene's parent when pushed. \n\nIf current scene is home, then Actions.completeInfo(), will clone new completeInfo scene? and homeScene will contain 3 scenes?. Same problem\n\nerror: bundling: UnableToResolveError: \nUnable to resolve module react/lib/ReactComponentWithPureRenderMixin from xxx/node_modules/react-addons-pure-render-mixin/index.js: \nModule does not exist in the module map or in these directories: xxxx/node_modules/react/lib. npm install --save react-native-router-flux to fix, just now.. npm install --save react-native-router-flux to fix, just now.. I have the same issue. and now downgrade version. . I consider replace react-native-router-flux with react-native-navigation\n. \n",
    "saeed2402": "This is how I did what I wanted to do.\nOn child page, added a new item to storage service:\n..\nstorageService.SetItem('isEventJoinedorLeftSearchResult', '1');\n..\nOn my parent page:\ncomponentWillReceiveProps(nextProps) {\n    //this.setState({ isRefreshing: true });\n    let newEvent = storageService.GetItem('isEventJoinedorLeftSearchResult');\n          if (newEvent == '1') {\n            storageService.RemoveItem('isEventJoinedorLeftSearchResult');\n            this.fetchData();\n          }\n}\nHope this helps.\n. ",
    "pqkluan": "Duplicate issue https://github.com/aksonov/react-native-router-flux/issues/1325. ",
    "cpsiaki": "Current scene or current router stack i suppose.. well i'm a dope... i had a different version of RNRF on my original computer. really brain dead today sorry. now to figure out what the difference is.... ",
    "Pylipala": "Well, I do not know the reason but I am going to close the issue.\nIn fact, my project could not hot reload because my component does not directly extends from Component. The example is not work maybe because it is using functional component. Who knows...\nHope it could help someone who come cross the same issue.. Please close the issue if it is solved. Thanks~. @seratonik I tried your PR #2344 in my example case, but it doesn't help.. After some debugging, I found it is popPrevious in State.js is not working correctly. But I have not found how to fix it.. After further debugging, I have created a PR #2356 to fix it. But I am not very sure it is OK for other function.. ",
    "ahanriat": "Sure I'll work on this tonight. ",
    "MaxToyberman": "@cridenour it works but this is not the issue... \nI have a listview each view is unique , if i press the second item and move to an other screen and then something changes my list view on the first screen(removes the second view).\nthe second screen still shows... although it should be popped.\ni solved this issue with ReduxRouter by following my scenes . @cridenour  it would be nice to have such feature. \nThank you. ",
    "maacaro": "I have the same issue, any help?. ",
    "asimolmez": "me too.. ",
    "smaris": "switched to react-navigation.. ",
    "LiquidHelium": "Below is code I pretty much had to figure out by myself by reading the source code so it might not be the best example but it's better than nothing.\nThe documentation for this project could use a lot of work.\n``` \n\nconst animate = props => {\n  const { position, scene } = props;\n  const SCREEN_WIDTH = Dimensions.get(\"window\").width;\nconst index = scene.index;\n  const inputRange = [ index - 1, index + 1 ];\n  const outputRange = [ SCREEN_WIDTH, -SCREEN_WIDTH ];\nconst translateX = position.interpolate({ inputRange, outputRange });\n  return { transform: [ { translateX } ] };\n}\nconst applyAnimation = (pos, navState) => {\n  Animated.spring(pos, { toValue: navState.index, friction: 5 }).start();\n};\n```. ",
    "easydaniel": "Thanks a lot!!!. ",
    "latte-diygame": "+1. ",
    "dermeck": "Hey, how can I use this prop? I tried <Router navigationBarTitleImage={'./img/logo.png'}> and nothing happened. :/. Hi, thank you both for the feedback.\nUnfortunately I'm currently unable to test it yet since I got some problems with dependencies (unmet dependency bla, duplicate module name packager). :( \nI saw sb already opened issues for that.. ",
    "uuau99999": "Hello guys, I just find that version 3.38.1 leads to the naming collision for react-native. But now I need the prop navigationBarTitleImage. Can anyone help me ?. ",
    "mistenkt": "I have this exact problem on Android. When trying to pop av view that slides up vertically from the bottom (and back down when popping)\nreact-native-router-flux@3.38.0\nreact-native@0.42.3\n. Last time i tried the v4 (alpha) it had loads of issue, and would require me to rewrite the whole viewstack. does v4 beta support routes in the same way as they were set up in v3?\nI am trying to do some more research into what is causing this bug, because its only happening when i'm popping this one component and not others. . This is super strange. But i have found the cause.\nAll my components are wrapped with a wrapper component that has a top navbar component. and the views i want to enter/exit vertically send a direction=\"vertical\" prop to the navbar, that then transform rotates the backbutton used to pop the view. Only when this button is rotated does this error happen. the view can still enter/exit vertically as long as the button (arrow) is not rotated.\nApplying the transform on the icon and not the touchableopacity itself fixes the issue for me atleast. . yarn did install the 4.0.0 alpha by default. ",
    "wvicioso": "@julesmoretti I think I'm having a similar issue. Hoping you can shed some light.  I'm trying to keep a static background and animate components over it.  \nthis is my set up:\n<Image source={require('../images/background.jpg')} style={{ flex: 1, width: null, height: null}}>\n        <Router style={getScenceStyle}>\n            <Scene key=\"login\" component={Login} initial={true} hideNavBar />\n            <Scene key=\"signup\" component={Signup} />\n            <Scene key=\"home\" component={Home} />\n            <Scene key=\"event\" component={Event} />\n        </Router>\n      </Image>\n<View style={{flex: 1, backgroundColor: 'transparent',}}>\n       <Text>Login scene</Text>\n   </View>\n<View style={{flex: 1, backgroundColor: 'transparent'}}>\n       <Text>Signup scene</Text>\n   </View>\nThere is a white background behind the components hiding the background image. All components have a wrapping View that has backgroundColor set to transparent.  getSceneStyles has backgroundColor: 'transparent'\nThanks\n. @julesmoretti Setting width and height to null lets me cover the whole screen with an image without oversizing it. Something that I haven't been able to achieve with resizeMode. @julesmoretti  WOW!!!! THANK YOU!!!!!. I fixed this by removing the little ^ symbol in my package.json file in front of the version number of  react-native-router-flux. Removing that symbol forces npm install to install the version indicated instead of the newest version.. use version 3.37.0. React-Native v .45 will work with flux-router 3.38+ but its not released yet.\nUntil then, use version 3.37.0 and make sure your in package.json file it looks like this \n\"react-native-router-flux\": \"3.37.0\",\nNotice that I removed the ^ symbol from the version number. This step is very important as the symbol forces npm install to look for the newest version instead of the version indicated. Cheers!. @jpca999  change \"react-native-router-flux\": \"^3.38.0\", to \"react-native-router-flux\": \"3.37.0\",\nthen delete and reinstall node_modules. @jpca999  Make sure you close the all processes including the packager and delete and reinstall your node-modules. You can do that by running this command rm -rf node_modules && npm install then do react-native run-ios or react-native run-android depending on which you're building for.. Yes. Also very important you delete your node modules folder before you run\nnpm install. Share the error your get if the problem persists and let me\nknow if you're getting the problem on iOS or Android\nOn Tuesday, May 9, 2017, jayp notifications@github.com wrote:\n\n\"Make sure you close the all processes including the packager\"\nPackager means all terminal processes - right ?\nI quit the whole terminal.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/aksonov/react-native-router-flux/issues/1832#issuecomment-300277674,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AS3KkUKdhDk1hGbFEG6jq06FW9x92LFKks5r4MASgaJpZM4NOmSB\n.\n. so you downgraded the react-native version. that's intersting. My projects use react-native .41 and flux-router 3.37. \n",
    "hasLandon": "You could override the onPress prop of the Scene to essentially do nothing. ",
    "holden-caulfield": "I had a similar problem and at least for me using call instead of put did the job\nSo you'd do something like \n```javascript\nimport {Actions as NavigationActions} from 'react-native-router-flux'\nexport function * login({username, password}) {\n  const response = yield call(API.login, username, password)\nif (response.ok) {\n    yield call(NavigationActions.mainScreen) // <----- here\n  }\n  else {\n    yield call(NavifationActions.errorScreen) // <---- here\n  }\n}\n```. ",
    "radvc": "I already figured out what I am missing, Im not passing the state from container to the component.. ",
    "pk2004": "Thank you.. ",
    "lucasleelz": "I want to automatically get the title of the previous scene on the current scene and display the return title in the upper left corner of the current scene.\n. ",
    "Hesamedin": "Thanks @Amurmurmur for your solusion. I am not able to find './leftbutton'. It is not in source folder of v3. Can you provide a link? thanks. ",
    "MilkBiscuit": "Did some modification based on @Amurmurmur 's answer because I don't have leftButton.js\nRouter.js\n...\n\n    <Scene\n      key=\"customRepetition\"\n      component={CustomRepeatPicker}\n      title=\"Custom\"\n      leftTitle=\"Back\"\n      onLeft={() => {\n        console.log('is this one called?');\n        Actions.pop();\n      }}\n    />\n\n\nCustomRepeatPicker.js\nclass CustomRepeatPicker extends React.Component {\n  componentDidMount() {\n    Actions.refresh({\n      onLeft: () => {\n        console.log('it is overriden!');\n      }\n    });\n  }\n. ",
    "shubhang93": "\nThis has been asked here so many times:\nMy personal choice is to use custom Back and right button components.\nSimply go ahead and copy them from the react-native-router-flux src folder, and pass your new component as a prop when for example you create your scenes like so:\n<Scene\n   key=\"MyScene1\"\n   component={MySceneComponent}\n   title=\"MyScene1\"\n   renderBackButton={() => \n            <LeftButton \n               leftButtonIcon={\"arrow-back\"} \n               onLeft={() => Actions.pop()} \n               leftButtonColor={\"white\"} \n               leftButtonIconSize={30} \n             />\n   }\n/>\nYou can do the above inside your Scene component/container component too like so, for example on component mount:\n```\nimport {Actions} from 'react-native-router-flux'\nimport LeftButton from './leftbutton'\ncomponentDidMount(){\nActions.refresh({renderBackButton: () => \n     Actions.pop()} leftButtonColor={\"white\"} \n     leftButtonIconSize={30} \n    />\n})\n}\n```\nAnd I simply use component inside my LeftButton component, that comes with 'react-native-vector-icons'\nHope this helps \ud83d\udc4d\n\nYou Might want to wrap it in a setTimeout. Yes, if Action methods could return a Promise we could popTo a fallback route incase the route we are trying to popTo is not available.. A Simple work around would be\n\nAccess the navigation state using Actions.state\nget the route stack using Actions.state.routes\nfind the routeName you want to popTo using the JS find function \nIf your route exists then popTo that route else popTo an alternative\nlet routeStack = Actions.state.routes\nlet routeNameToPopTo = routeStack.find(({routeName})=>routeName===yourRouteKeyToPopTo)\nif(routeNameToPopTo)\n    Actions.popTo(routeNameToPopTo)\nelse // your alternative route to popTo\nHope this helps, I know it is a little cumbersome, but it provides more flexibility.. Have you declared an onExit handler on your scene like so \n```\n\n\n```\nTurns out that only those props which were already declared on the Scene Component get refreshed , had a similar issue with onBack fixed it by declaring a NOOP onBack to my Scene Component.\n. Yes InteracionManager is a better way to do it than setTimeout. > @shubhang93 Great tips, thanks! It would be great if you can submit documentation PR\nPR submitted, please go through it.. It is not a router flux issue. It is a font issue. Please change your one plus  font from one plus slate to roboto for this issue to go away or bundle the one plus slate font with your app.. ",
    "lappalj4": "Silly me, I needed to pass in my footer component in the NavBar prop.... ",
    "goshasawicka": "I had the same error. \nI had bunch of Scenes under one (\"main\") parent because I wanted to use 'back' functionality. Unfortunately I couldn't use that without this error popping up, so I've put every Scene to a separate parent and used onLeft parameter instead to get back to the 'List' scene. That's a small project I do, so as a temporary solution it works fine. \nI'm using v3.37.0.\n<Scene key=\"main\">\n        <Scene key=\"bookList\">\n            <Scene key=\"bookListScene\" component={ BookList } title=\"Books\" />\n        </Scene>\n        <Scene key=\"bookInfo\">\n            <Scene key=\"bookInfoScene\" component={ BookInfo } leftTitle=\"List\"  onLeft={ () => Actions.bookList()  } />\n        </Scene>\n...\n</Scene>. ",
    "RandelSandel": "@pocesar I'm having some trouble with this. I've ran through the same steps as you, and have \"Do not keep activities\" off. I have also not been able to get this to work with my own examples and various other version combinations.\nDoes keeping nav app state require a specific run environment?\nI've tried via react-native run-android and an APK build. I also can't get it to work on Genymotion.\nDevice: Huawei Nexus 6p, version 7.0\n\"react-native\": \"0.41.2\",\n\"react-native-router-flux\": \"^3.37.0\",. @pocesar Ok, I really wasn't understanding this correctly. I was expecting nav state to persist out of the box using the example code, but by hacking the createReducer your then explicitly storing the nav state before 'background', and fetching it at 'foreground'  - correct?  . ",
    "gustavonecore": "We are facing the same issue with our app. Always start from the root view. ",
    "davebro": "I have the same behavior but I am not using RNRF, I am using React Navigation. Not sure this is a RNRF issue but more of needing to persist the app state in React Native to keep it alive. I am guessing the Redux state could be stored on the device using Async Storage? Not sure what the best way would be.. ",
    "miklschmidt": "Are you using ListViews?. I just only render the router if the user is logged in. Simple and effective :). This is generally a problem with the onRight feature. In my case i need to reuse route params, but since you don't have access to anything, you can't do much with that function.. Apparently navProps is supplied to the renderRightButton function. You could make it a scene prop instead of a state variable. Then you can toggle it by calling Actions.refresh({addVisible: true|false}).. ",
    "codesinghanoop": "I just solved this by sending one unique param from where i am pushing the same scene and checking the previous and nextprops in componentWillReceiveProps(nextProps)  and if there is change in unique param then i simply update my dataSource and new list gets rendered :) . ",
    "yakirbu": "@Amurmurmur \nHi,\nI don't think of something that I can do in these methods that would solve this, since when I close the scene and click on another item the same scene opens with the same data (a new item id wasn't passed as props as it should (       Actions.details( { type: ActionConst.PUSH_OR_POP, id: this.props.item._id } )      ), so I can't manipulate this to work) \n. Hi! To those who encouter the same issue, just set the duration of the animations to 0, but make sure you do that in the router and not scene, as setting animation duration in scene doesn't affect back-button animations. . ",
    "maanick90": "Hi Amurmurmur, thanks for your response. \nI am not using Redux in my development. Is there any way that I can achieve without using Redux?\nI read from https://facebook.github.io/react/docs/react-component.html#componentwillreceiveprops that calling this.setState will not trigger componentWillReceiveProps. ",
    "satsuki0221": "Hi @cridenour\nthank you\nI want to continue without saving ActionConst.PUSH to a children in the state. Hi \nIt was self-solved.\nThank you.. Although it may not be good,\nyarn add react-addons-pure-render-mixin\nI think it will work.. This is necessary as well.\nreact-static-container\nI confirmed that it works with these two\nyarn add react-static-container react-addons-pure-render-mixin\n. @bilby91 \nI had done the following procedure\nyarn upgrade react-native\nyarn upgrade react@16.0.0-alpha.6\nyarn add react-static-container react-addons-pure-render-mixin\nyarn upgrade. ",
    "0mkara": "It would be really nice to have this feature built-in. <Scene>\n           <Scene key=\"scene1\">\n                <Scene key=\"scene2\" hideNavBar component={Scene2}/>\n            </Scene>\n            <Scene key=\"scene3\">\n                <Scene key=\"scene4\" hideNavBar component={Scene4}/>\n                <Scene key=\"scene5\" hideNavBar component={Scene5}/>\n                <Scene key=\"scene6\" hideNavBar component={Scene6}/>\n            </Scene>\n</Scene>\nTo route from scene2 to scene4 you need to do following\nActions.scene3()\nActions.scene4()\nAnother working example\n<Scene key=\"root\">\n    <Scene key=\"auth\" tabs={false} hideNavBar>\n        <Scene key=\"login\" component={LoginComponent} title=\"Login\"/>\n    </Scene>\n    <Scene key=\"drawer\" component={NavigationDrawer} close>\n        <Scene key=\"main\" tabs={false}>\n            <Scene key=\"home\" component={HomeComponent} initial/>\n        </Scene>\n    </Scene>\n</Scene>\nHere to go from login scene to home scene I had to do\nActions.drawer();\nActions.main();\nActions.home();. @kirillpisarev that is true, I think it is costing my app much more time to move from scene to scene. Does anyone else experiences that behaviour ?. ",
    "emipc": "With react-native-router-flux v3.37.0 works as expected (not re-rendering the screen), so it seems a bug with v3.38.0 or its dependencies.. ",
    "ousat": "I face the same issue even in 3.37. @jonrh thank you , I hadnt noticed that , and it works fine now. ",
    "zbtang": "I face the same issue in 3.38. ",
    "thanhlmm": "@cridenour It's actually not working for me. Can you tell me any solution to make it work whenI has route's name is string so I cant do like this Action.ROUTE_NAME. ",
    "chitezh": "I thinkActions[ROUTE_NAME]() should work\n@woodwoodchow @cridenour . ",
    "keith527": "I have meet the same problem,it very slowly when click back.\nI  am not sure your trouble clear , but I found that if I use Actions.popor other Actions.xxfunction to jump ,it run quickly.so, I solved this problem by override some initial jump function likeonBack.. @aksonov I change a demo to use RNRF and Mobx, but I am not sure it use the correct way. Can you give me some advice? ShiWuPai. @aksonov I am so sorry, This api is from a Chinese company, so....I am not sure what's I can help you.. I have the same problem.. ",
    "Chris533": "componentWillMount () {\n    this.fetchCarts()\n    Actions.refresh({\n      rightTitle: 'Edit',\n      onRight: () => {\n        Actions.refresh({isBulkEdit: true})\n        console.log(this.props.isBulkEdit)\n      }\n    })\n }\ncomponentWillReceiveProps (newProps) {\n     if (newProps.isBulkEdit) {\n      this.setState({\n        isBulkEdit: !this.state.isBulkEdit\n      })\n      Actions.refresh({isBulkEdit: false})\n    }\n}. ",
    "Tahir-Bitsol": "@pocesar Can you give me a detailed example \ni am trying\nActions.pop({key: 'checkoutScreen'})\nbut it does not work. i'm also facing the same issue. No navigation happens on button press, but it is working in screen life cycle methods like componetDidMount() and ComponentWillReceiveProps()..\nreact-native-router-flux: '4.0.0-beta.23'\nreact-native: '0.48.4'\nany solution ?. @aksonov can you help us here please ??\n. @aksonov  thanks for your review .\nIt navigates on login success from login screen to landing screen, but nothing happens when i tries to go on nested screen on button click.. ",
    "oatcrunch": "Hi, I tried the Example.js but couldn't reproduce. However, my use case is a little different. Assuming I am in \"Home\" (1 of the tabs in tabbed scene), and I click on a link that will navigate me away to \"Demo\" (tab_1, refer codes below) scene (single page scene). I am able to navigate to that scene, but the moment i rotate my phone orientation, \"Demo\" scene disappears and I return back to \"Home\". However, when I click on the link again in attempt to return to \"Demo\", it crashes. Please help.\nThis is my router:\n<Router createReducer={reducerCreate}>\n            <Scene key=\"modal\" component={Modal} >\n                <Scene key=\"root\" hideNavBar hideTabBar >\n                     <Scene\n                                    key=\"tab1_1\"\n                                    component={Demo}\n                                    title=\"Tab #1_1\"\n                                    onRight={() => alert('Right button')}\n                                    rightTitle=\"Right\"\n                                />\n                    <Scene key=\"launch\" component={Launch} title=\"Launch\" initial />\n                    <Scene key=\"tabbar\" component={NavigationDrawer}>\n                         <Scene\n                                key=\"main\"\n                                tabs\n                                tabBarStyle={styles.tabBarStyle}\n                                tabBarSelectedItemStyle={styles.tabBarSelectedItemStyle}\n                            >\n                              <Scene key=\"home\" component={(props) => {return (<Home {...props} pubSub={PubSub} storage={Storage} />)}} title=\"Home\" initial icon={HomeIcon} navigationBarStyle={Styles.navBarStyle} titleStyle={{color: 'white'}}\n                                renderRightButton={() => {\n                                return <AvatarIcon src={'https://upload.wikimedia.org/wikipedia/en/1/17/Batman-BenAffleck.jpg'} size={40} />\n                                }} drawerImage={{uri: 'https://facebook.github.io/react/img/logo_small.png', width: 38, height: 38}}>\n\n                              </Scene>\n                        </Scene>\n                    </Scene>\n                </Scene>\n            </Scene>\n        </Router>\n\nThis is my Home.js:\n <View style={[Styles.containerBackgroundColor, {flex: 1}]}>\n            <ScrollableTabView\n                style={{marginTop: 50}}\n                initialPage={1}\n                renderTabBar={() => <ScrollableTabBar />}\n                >\n                <View tabLabel=\"test\">\n                    <TouchableHighlight onPress={() => {\n                        Actions.tab1_1();\n                        alert('demo');\n                        }}>\n                        <Text>123</Text>\n                    </TouchableHighlight>\n                </View>\n                <Text tabLabel=\"All\"></Text>\n                <Text tabLabel=\"Eateries\"></Text>\n                <Text tabLabel=\"Accommodations\"></Text>\n                <Text tabLabel=\"Tours\"></Text>\n                <Text tabLabel=\"Misc\"></Text>\n            </ScrollableTabView>\n        </View>.\n",
    "7laria": "Same issue\n. same issue. ",
    "didil": "facing exact same issue with same steps as @oatcrunch. same issue. ",
    "deguchi": "Same issue.\nI wrote a Drawer. sample of document.\n\n       <Drawer\n            ref=\"navigation\"\n            open={state.open}\n            onOpen={()=>Actions.refresh({key:state.key, open: true})}\n            onClose={()=>Actions.refresh({key:state.key, open: false})}\n            type=\"displace\"\n            content={<NavigationMenu />}\n            tapToClose={true}\n            openDrawerOffset={(viewport) => viewport.width - 271}\n            panCloseMask={0.2}\n            panOpenMask={0.2}\n            negotiatePan={true}\n            tweenHandler={(ratio) => ({\n             main: { opacity:Math.max(0.54,1-ratio) }\n            })}\n            tweenEasing={'easeOutCirc'}\n            tweenDuration={200}\n\n            <DefaultRenderer navigationState={children[0]} onNavigate={this.props.onNavigate} />\n        </Drawer>\n\n\nDrawer's onOpen and onClose properties were the cause of this problem.. ",
    "harishsn": "solution ?. ",
    "KamWis": "For all struggling with this issue, here's the solution:\n- Create __mock__ folder in ur app directory.\n- Inside of it, create file called react-native-router-flux.js\n- (Basic) inside of it type: export const Actions = {} and save.\nJest will use provided mock and this will resolve the issue, therefore it will be sufficient for all cases where you imported Actions - in any child etc.\nI don't know Jest very well but I image this could be potentially the place for stubs and spys :). ",
    "bexoss": "I realize there is tabBarSelectedItemStyle props in tabbar. . ",
    "jkvim": "same problem , when I toggle inspector it refresh the app, it make me can not inspect the element that I want  to inspect. @aksonov could you open this issue again? \nVersion\nreact-native-router-flux: ^4.0.0-beta.22\nreact-native v0.48.3. ",
    "sryze": "I have the same problem with 4.0.6, it's impossible to inspect anything because whenever inspector opens my app goes to the initial screen... Is it possible to fix this by changing some configuration? or it's a bug?. You can't call static methods via this, you need to either make the method not static or call it via the class name, i.e. YourComponent.onEnter().. ",
    "luongs3": "got the same.. ",
    "recs182": "For me, it's working this way:\n```\nconst backButton = () => ( Actions.pop()} />);\n\n```. Hi @gpminsuk, see if it can help you: https://github.com/aksonov/react-native-router-flux/issues/1676\nI didn't try it, but it might work for you.. I have problems with this structure too... so far nothing that I tried solved it.. ",
    "GCour": "@renancsoares That's not working either here. It was a style setting, I had it on 'position: absolute' .. Weird it only fails now. ",
    "gpminsuk": "@renancsoares #1676 does not work for me at all.\nI matched react-native and react-native-router-flux version but still no luck... @cridenour The use case is that as below we have < back button and x quit button.\nThe back button should go to the previous scene in the stack and the quit button should go to the initial scene of the scene flow.\n\nSo in above example, we define scene flow starts with Scene B hence\nScene A, [Scene B, Scene C, Scene A], [Scene B, Scene A, Scene C, Scene E, Scene D]\nSo when user clicks x button on Scene D, it should pop back to Scene B.\n. ",
    "AJCrowley": "I've worked around this in the past with the following. If you were navigating from \"signIn\":\nActions.app()\nActions.appointments()\nActions.new()\nIf you were already in the app scene you wouldn't need the first one. Not ideal, but it's worked for me.. Well, I believe I answered my own question.\nAdding type={ActionConst.REFRESH} on to the tab scene prevents the state reset when switching back to that tab.. ",
    "diego3g": "Great! I just changed new to newAppointment because new is a reserved word in javascript. Thanks!. ",
    "delvedor": "Hi, thank you for this awesome module!\nI also have the same issue:\n- react-native v0.42.0\n- react-native-router-flux v3.38.0. Hi guys, any news with this issue? :). ",
    "omerdn1": "Any news about this?. I've tried basically anything, can't get it to work.. Just noticed I wasn't using the latest (master) build. Anyways, for best styling you have to change titleWrapperStyle, navigationBarStyle, and navigationBarTitleImageStyle defaults.\ntitleWrapperStyle: marginTop: 0, position: 'relative', top: 0\nnavigationBarStyle: justifyContent: 'center', alignItems: 'center'\nnavigationBarTitleImageStyle: resizeMode: 'contain' and of course include width, height. @m-revetria You are using the release build, use the master. ",
    "m-revetria": "I'm having the same issue:\n iOS: 10.2 & Android 6.0\n react-native: 0.42.0\n* react-native-router-flux: 0.38.0\n<Scene\n      key=\"Home\"\n      component={Home.App}\n      initial={true}\n      navigationBarTitleImage={require('app/src/assets/images/navigation/titleLogo.png')}\n      type=\"replace\"\n      />\nI cannot see any RCTImageView when debugging the view's hierarchy in Xcode, next is how the nav bar is rendered:\n\nI tried with navigationBarBackgroundImage and it works fine.\n-- EDITED --\nI just tried this in android and it does not working either\n\n. Hi @omerdn1! Thanks for your response.\nI just tried using master but then react-native start started giving this error:\n```\nFailed to build DependencyGraph: @providesModule naming collision:\n  Duplicate module name: jsc-heap-capture\n  Paths: /path-to-app/node_modules/react-native-router-flux/node_modules/react-native/local-cli/server/middleware/heapCapture/package.json collides with /path-to-app/node_modules/react-native/local-cli/server/middleware/heapCapture/package.json\nThis error is caused by a @providesModule declaration with the same name across two different files.\nError: @providesModule naming collision:\n  Duplicate module name: jsc-heap-capture\n  Paths: /path-to-app/node_modules/react-native-router-flux/node_modules/react-native/local-cli/server/middleware/heapCapture/package.json collides with /path-to-app/node_modules/react-native/local-cli/server/middleware/heapCapture/package.json\nThis error is caused by a @providesModule declaration with the same name across two different files.\n    at HasteMap._updateHasteMap (/path-to-app/node_modules/react-native/packager/src/node-haste/DependencyGraph/HasteMap.js:158:13)\n    at /path-to-app/node_modules/react-native/packager/src/node-haste/DependencyGraph/HasteMap.js:133:31\nerror Command failed with exit code 1.\n```\nAny idea on how to solve it?\nRegards. ",
    "sbdm05": "Hello, I have tried to delete the node modules as you said @filipemonteiroth , but the authentication does not seem to work anymore, any idea ?. ",
    "Samueljoli": "Hola! Has there been any updates to this issue? Also, @AndrewHenderson any luck?. ",
    "drgrey87": "created pull request #1691 . ",
    "jariwalabhavesh": "@Dennitz :\nHave you find any solution beacuse i am facing same issue. after integrating react-native-drawer??\n\n. @Dennitz: Thanks,i had totally missed that part. have you any idea how we can manage(show/hide) in some scene(like login and registration not needed sidebar so how to hide it?). +1. @dsandmark :\nNot yet :-(. @aksonov : any update on this issue?\n. ",
    "Dennitz": "@jariwalabhavesh \nI went with surrounding the drawer scene with another scene, so that the drawer scene is not the root scene anymore. Just like described in the opening post. . @jariwalabhavesh \nreact-native-drawer has a prop 'disabled'. Set this to true and then maybe also override the left navigation bar button. ",
    "vmitchell": "@cridenour\nI can confirm this behavior, using Action.create is properly documented, however drawer example doesn't work without a necessary wrapper scene as @Dennitz pointed out.. ",
    "charlle": "@Kris4an7 I would recommend adding a Swiper within your routes.  This library can accomplish vertical and horizontal swiping.  . ",
    "Kris4an7": "Thanks. I tried it but the vertical doesn't work on android. I think it was because PageViewer doesn't support vertical scrolling on Android. I am researching other ways to do it , but for now I have nothing. Any other tips on how i should go about this would be greatly appreciated. . ",
    "comiclee": "+1 \nI found it happens while the animated view has a nav-bar. ",
    "ArtsNCode": "Any workaround!!. ",
    "dsandmark": "Experiencing the same thing. App gets slower and slower as I move between scenes (Android, both Emulator and release APK on device). Perhaps it's due to the stack of scenes not being emptied?. The performance issue disappears if I add hideNavBar to my scenes. It also works to set\n<Scene\n    ...\n    type = {ActionConst.RESET}\n/>\nDid any of you find a solution to this that doesn't require resetting the scene stack? @Quirksmode @comiclee @jariwalabhavesh . ",
    "phanivaranasi": "Hi Team,\nI too ran into same trouble.\n\nAfter executing \nnpm i react-native-router-flux --save\n. ",
    "WillyRamirez": "I get an error on react-native run-android because of this unresolved dependency\nTransforming modules  \u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2591  97.6% (486/492)...(node:\n11676) UnhandledPromiseRejectionWarning: Unhandled promise rejection (rejection\nid: 886): UnableToResolveError: Unable to resolve module ./lib/StaticContainer.\nreact from C:\\projects\\manager\\node_modules\\react-static-container\\index.js:\nDirectory C:\\projects\\manager\\node_modules\\react-static-container\\lib\\StaticCont\nainer.react doesn't exist. Above Fix works btw. @mtt87 Thnx. ",
    "ablankenship10": "This didn't work for me using Node v7.8.0, I think because all the node_modules are in the root folder rather than individually installed per dependency in its own node_modules folder.\nI just added StaticContainer as an import from react-native on the line above\nimport { View, StyleSheet, StaticContainer } from 'react-native';\n. ",
    "Anima-t3d": "@ablankenship10 Unfortunatly didn't work for me. I changed the import  and removed the react-stactic-container package, but I still have the error.. I tried @Chandhru08 solution but I get this red error screen when running the app ({\"type\":\"InternalError\", ...}) and in the terminal:\nLoading dependency graph, done.\nerror: bundling: Error: ENOENT: no such file or directory, open '/Users/xxx/Desktop/testApp/node_modules/react-native-router-flux/node_modules/react-native/Libraries/Components/ActivityIndicator/ActivityIndicator.js'. ",
    "frmdstryr": "Updated to git master and added a navigationBarTitleImageStyle prop, now it works!. ",
    "Kowaio": "Hi guys,\nI'm using router-flux v3.31.2 and I've got a problem swiping back on iOS. The maximum threshold respond position is 30px due to the NavigationCardStackPanResponderclass from react-native-experimental-navigation (https://github.com/aksonov/react-native-experimental-navigation/blob/master/NavigationCardStackPanResponder.js#L47). Is there a way to change that programmatically ? It is very hard to trigger the swipe back gesture right now and i'd like to change the 30px constant to 50.\nThanks a lot for your help!. ",
    "fly486": "Thanks a lot for your help!. ",
    "gdboling": "Hm, so started a new project today. Any ETA on when this will be fixed and are there any work arounds in the meantime?. +1. ",
    "Dev-iL": "It has been removed.. ",
    "valinaga": "No it doesn't. It completely ignores and animate with the default delay.\nI couldn't find where this is set in the code.\n. ",
    "pvsong": "Same problem.\nI add duration={0} to Scene, and when pop() still animated.. ",
    "Cotel": "This is my navigation diagram \n\n. ",
    "tomtang539": "Figured out the problem, it's not with React-router-flux. ",
    "rodperottoni": "This is not an issue. You should use StackOverflow for this type of question.. This is not an issue. You should use StackOverflow for this type of question.. This is not an issue. You should use StackOverflow for this type of question.. This is not an issue. You should use StackOverflow for this type of question.. This is not an issue. You should use StackOverflow for this type of question.. This is not an issue. You should use StackOverflow for this type of question.. You didn't provide any test case or at least investigated what's causing this error. You should use StackOverflow for this type of question.. This is not an issue, and you should ask these types of questions on StackOverflow. It really comes down to how fast you need to deliver your work. I work in an marketing agency environment and RNRF was invaluable to us. There was no time to master the complexity of React Navigation and so we decided to go through with RNRF since day 1. I've had a little bit of pain with the documentation, but nevertheless worked my way through it and delivered apps that are currently running at 60FPS on most devices.\nAgain - my work is to deliver apps on a certain date. I don't care about if RNRF is an abstraction of other tech. I don't care if one project has 100 opened issues and the other 200. I don't care about the underlying bits and pieces of RNRF. It solved all my issues and I'm 100% happy with it. . @Rewieer gladly. \nKeep in mind I'm not against React Navigation. The reason why I use RNRF is because it let's me do the same thing, but faster. I don't know how to explain, but the developer experience is simply... better.\n\nFor me it makes way more sense to declare my routes in pure JSX, like RNRF allows me to. Not only it's simpler, it's also cleaner and easier to read. Now I'm not saying that JS is hard to read (since React Navigation routes are declared in pure js), but sometimes when I have a designer or a project manager reviewing something with me it's way faster for me (and less boring to them) to find a route and make changes to it instantly.\nI truly believe that good naming conventions can make everything easier. I personally like the naming conventions on RNRF more than the ones used on React Navigation. \nAlthough RNRF documentation is not as \"complete\" as React Navigation, I still love it. The GIF's and examples @aksonov put up hooked me up from the first time I was studying this lib. They also got updated recently and are way better then v3's docs.\nLast but not least, trying new libraries take time. RNRF works flawlessly for me, and therefore I don't see value in trying another routing library without a good reason. Maybe if I ran across a major issue I'd consider jumping to another boat, but for the time being I'm pretty happy with RNRF (thanks @aksonov).\n. \n",
    "danstepanov": "I'm also facing this issue.. ",
    "obykoo": "Whn I call Actions.drawer(); It opens home scene , because of: \n<DefaultRenderer navigationState={children[0]} onNavigate={this.props.onNavigate} />\nHowever when I open drawer again , there are old scenes moving around.. ",
    "henrythach": "@blackPeanut Try adding type={ActionConst.REFRESH} to the <Scene>.\nI was having the same issue with react-native-router-flux v3.38.0 + react-native v0.42.0 and this worked for me.\nProps to https://github.com/aksonov/react-native-router-flux/issues/1686.. ",
    "blackPeanut": "Thanks guys @LiangQiao @henrythach. But this issue is more about updating docs, than solving this breaking change  :). ",
    "ays0110": "@blackPeanut I'm not sure that this change was intentional...  I think they tried to implement something that would pop back to initial state when the tab active and then tapped again (https://github.com/aksonov/react-native-router-flux/issues/717), but then accidentally made a change that does even when the tab is not active.  Hoping they'll change it back or make it compatible with both kinds of use cases (ideal!). ",
    "lazyhoneyant": "+1. @giulianok \nI want to see your codes.\nYou mean that to work around this bug(?) you use 'onEnter' method. right?\nI think so that we need to option to not mount the components until we actually enter. \nWhen a tab is switched to another scene, previous tab component needs to be unmounted too.\n. @aksonov \nthank you. lazy option solves this problem.. ",
    "desktp": "Closing this. There was a stray curly brace causing the error.. ",
    "mursang": "How did you resolve this? \nHow did you make a root view containing Router?\nThanks.. @themakerman I have found a solution.  My Router now looks like this:\n<View style={{\u0192lex: 1}}>\n    <Router ..>\n      <My Scenes as usual..../>\n     </Router>\n     <View style={{position: 'absolute', bottom:0, flex:1, left:0, right:0, height:70}}>\n         <Text>THIS IS MY FIXED VIEW :) </Text>\n      </View>\n</View>\nBe sure to place your fixed view after the Router in order to be able to click on it.\nAlso be sure to wrap your router inside a View.\nGood luck!. ",
    "themakerman": "@leonacky hey can u throw in some pseudo code? I am facing a similar problem. I actually implemented this using lightbox.. @abeltje1 how did you solved it? Can you please help me out? Here is my code. \n<Scene key=\"root\" panHandlers={null}>\n          <Scene key=\"splash\" component={SplashScreen} initial />\n          <Scene key=\"Screen1\" component={Screen1} />\n          <Scene key=\"Screen2\" component={Screen2} />\n      </Scene>\n    </Router>\nI dont user to go from Screen1 back to SplashScreen. How can i do that?. @abeltje1 In general no back button at all. Back button should be only at Screen 2. So actual navigation will be between screen 1 and screen2. Splashscreen will be in its own zone.\npanHandlers={null} doesn't solves the issue.\n<Router>\n      <Scene key=\"root\">\n          <Scene key=\"splash\" component={SplashScreen} initial />\n          <Scene key=\"Screen1\" component={Screen1} panHandlers={null} />\n          <Scene key=\"Screen2\" component={Screen2} />\n      </Scene>\n</Router>\nI used to achieve this in previous version of RNRF using Scene buckets. But in this version i cannot write nested scenes.\n. @abeltje1 if i use hideNavBar i can still go back to the splash screen which i don't want. back property is of no help. Can you give me any more pointers?\n. @abeltje1 Are you using the beta version? \nFor me type=\"reset\" prop worked like a charm. panHandlers are not working for me.\n<Router>\n      <Scene key=\"root\">\n          <Scene key=\"splash\" component={SplashScreen} initial />\n          <Scene key=\"Screen1\" component={Screen1} type=\"reset\" hideNavBar />\n          <Scene key=\"Screen2\" component={Screen2} />\n      </Scene>\n</Router>. @raynor85 What does overlaycontentComponent prop does to the Scene?. @aksonov would be grateful if you can do it ASAP as i am using this library on an production APP. Can you please give me any leads on ETA on when you will be able to do it?. Awesome. Finally something that worked. @zainmustafa i wonder why this prop is nowhere in v4 DOCS.. @rathorebs Plz attach  the chrome debugger output. This error comes up when you miss \nkey props for particular scene usually.. @mkayswork haha i understand your pain. @aksonov Once i get free from my production app i can help you with documentation. . @mkayswork Yes but i am more like confused towards defining the view itself. Where should i define it as a component? Should it be nested inside  .......  ? . @mkayswork Great. Thank you so much :). Gonna try it tonight.. @mcabs3 Can you please do basic example for Drawer as well?. @karenYerevan You can use a lightbox to control opacity parameters of the top tittle bar. Wrap the component in the . RNRF won't provide animation from out of the box but only the lightbox component. Make sure to set position to absolute and arrange it at toolbar/tittle bar position.\nYou just have to control the opacity depending upon the gesture swipe which can be accomplished using PanResponders.. @aksonov Sorry i forgot to close the issue. Actually i implemented it using RNRF LightBox.. @aksonov OK I can document it. Will send a PR. A quick question though. By docs you means in the light box section right? Will it be OK to include gif example too? \nThanks. \n  . can you please try using the props getSceneStyle for setting the background? @v3yr0n \n<Router getSceneStyle={() => ({ backgroundColor: 'transparent' })}>\n   <Scene ...>\n   <Scene ...>\n.\n.\n.\n</Router>\nThis is what you must do to keep all the components transparent and the image you have loaded before router will become the common background instead.. @v3yr0n setSceneStyle prop doesn't exists. Its getSceneStyle....i think you saw my older version of comment. Good to know you fixed it.. @v3yr0n so far what i am aware of is rnrf does not supports custom animation. However if you want your scenes to show top-down animation while mounting you can use modal prop in your scene. Check the v4 docs.\nalso refer to #2629. I explain how to use light box component for kind off you would say custom animation. . @v3yr0n Try running in production or turning your debugger off. Lag should go . @v3yr0n r u in simulator environment? cause i have never faced such problem. Maybe @aksonov could be of help.. @chinavane Can you explain the actual scenario you want? Do you want to save redux state so that when you reopen the app the data comes back again? . @aksonov what do you think? This will encourage developers fearful of RN.. @aksonov OKay i'll add new section named hall of fame in docs. Will submit PR as i get free.. facing the same problem when updated to latest RNRF. @kaym0 I checked with my older projects. Its a problem with expo sdk. Anyone else using EXPO here? . @daviscabral As per release docs, 4.0.0-beta.31 is using react-navigation 1.5.8. ",
    "eiosca": "Hi, it's because the component use in modal scene should be unmount.\nCurrently you have to use Actions.pop() which unmount a type scene modal.\nBut i have a problem when i display a modal (i use a modal scene to display a notification anywhere) if i switch to another scene before it is closed, i have the same error.. This works: #1035. Okay, are you call your scene without refresh first. Like\nActions.error()\nThis call mount your component and as you should have in your component on mount, the state should be hide.\nSo at the first launch, nothing should be appear.\nBut when you call Actions.refresh with props, in your componentWillReceiveProps, you can update the state visible. Automatically, they re-renderered. (Sorry for my bad english).\nCould you share the code of your compoment (error) ?. ",
    "dittmarconsulting": "Thank eiosca,\nI tried that but:\nActions.refresh(key: \"error\", visible: true, uniqId: new Date().getTime()); gives me an error because refresh seems to expect an object.\nIf I try Actions.refresh({key: \"error\", visible: true, uniqId: new Date().getTime()}); nothing happens. I can see \"invoked\" in the console but the scene doesn't change\nHere my class:\n```\nimport React from 'react';\nimport {View, Text, StyleSheet} from \"react-native\";\nimport Button from \"react-native-button\";\nimport {Actions} from \"react-native-router-flux\";\nclass Launch extends React.Component {\nconstructor(props) {\n    super(props)\n    this._showModal = this._showModal.bind(this)\n}\n\n_showModal() {\n    console.log('invoked')\n    Actions.refresh({key: \"error\", visible: true, uniqId: new Date().getTime()});\n}\n\nrender(){\n    return (\n        <View {...this.props}  style={styles.container}>\n        <Text>Launch page</Text>\n        <Button onPress={()=>Actions.login({data:\"Custom data\", title:\"Custom title\" })}>Go to Login page</Button>\n        <Button onPress={Actions.register}>Go to Register page</Button>\n        <Button onPress={Actions.register2}>Go to Register page without animation</Button>\n        <Button onPress={this._showModal}>Popup error</Button>\n        <Button onPress={Actions.tabbar}>Go to TabBar page</Button>\n        <Button onPress={Actions.switcher}>Go to switcher page</Button>\n        <Button onPress={Actions.pop}>back</Button>\n        </View>\n    );\n}\n\n}\n```. Hi eiosca,\nAs I said I just use aksonov's original code.\nIf you go to Launch.js I have created an on-click function to open the dialog, which works but I can not use Actions.refresh() at all.\nhttps://github.com/dittmarconsulting/flux-router-example. I tried everything but it doesn't work once you redirect to another page from a modal scene. The solution #1035 works because it doesn't redirect.\nIt sounds crazy but the only solution that works for me is to find the modal object in the nav stack (children) and delete it. Here the hack:\n// traverse through all the child objects and find the modal scene object\nconst purgeAll = (object, target) => {\n    if (object.children) {\n        const keys = Object.keys(target)\n        // overide the children array with the new purged array\n        object.children = object.children.filter(obj =>\n            // ignore the matching object\n            !keys.every(key => target[key] === obj[key]) && purgeAll(obj, target)\n        )\n    }\n    return object\n}\nand use this function in Example.js in the scene reducer function\nconst reducerCreate = params => {\n    const defaultReducer = new Reducer(params);\n    return (state, action) => {\n        // make sure state and scene exist\n        if(state && action.scene) {\n            // once redirected to scene \"register2\" delete the modal object\n            if(action.scene.sceneKey === 'register2') {\n                // purge modal scene from the child arrays\n                purgeAll(state, {\n                    key: 'error_1_error',\n                    sceneKey: 'error'\n                })\n            }\n        }\n        return defaultReducer(state, action)\n    }\n}\nBecause I redirect from the modal to the scene with the key = 'register2' I just monitor when the action  happens and filter the modal dialog with the key = 'error_1_error' or I can re-write the function to just look for the string 'error' with .include('error') or something. Just give the dialog a special unique name. The key will be automatically generated like \"scenekey_(running_number)_something\"\nThis is the only solution that works for me.\nHere the working code: https://github.com/dittmarconsulting/flux-router-example. Yeah, I figured that out.\nI used the react-native-swipe-gestures and wrapped the router. That works really well.\n<GestureRecognizer\n   onSwipeLeft={(state) => ::this.onSwipeLeft(state)}\n   onSwipeRight={(state) => ::this.onSwipeRight(state)}\n   config={config}>\n      <Router createReducer={reducerCreate} animationStyle={animationStyle}>\n          <Scene key=\"root\">\n          </Scene>\n      </Router>\n</GestureRecognizer>\n\n. Thanks Pavel for the quick reply.\nDo you have an example code how to accomplish that? Do I leave the same scene structure as above and just assign the clone property to the <Shared Scene 1/> & <Shared Scene 1/> scenes?. Hi @jasongrishkoff have you tried to send the URL via email or SMS and close the app (iOS swipe up) What happens when you click the link? Will it just open the app or open the app and go to the \"Hello World\" scene?\n. Actions.<scene name>({  type: ActionConst.REPLACE  })\ncauses the following error:\nCannot read property 'map' of undefined\nHere my env\n\"react\": \"16.3.0-alpha.1\",\n\"react-native\": \"0.54.0\",\n\"react-native-router-flux\": \"^4.0.0-beta.28\",\n\"react-redux\": \"^5.0.7\",\n\"redux\": \"^3.7.2\". ",
    "cosmos-sajal": "@aksonov can you check and verify?. ",
    "mattshen": "I have same issue to renderRightButton. \nMy solution is to let the renderRightButton function to return a react component connected with redux store, rather than being the react component.. ",
    "mtt87": "Try this:\n\nCreate your Drwer.js component \n```js\nimport React, { Component } from 'react';\nimport Drawer from 'react-native-drawer';\nimport { Actions, DefaultRenderer } from 'react-native-router-flux';\nimport SideMenu from './SideMenu';\n\nexport default class NavigationDrawer extends Component {\n  render() {\n    const state = this.props.navigationState;\n    const children = state.children;\n    return (\n       {\n          this.navigation = ref;\n        }}\n        openDrawerOffset={0.25} // 20% gap on the right side of drawer\n        panCloseMask={0.25}\n        tweenHandler={ratio => ({\n          main: {\n            opacity: Math.max(0.54, 1 - ratio),\n          },\n        })}\n        open={state.open}\n        onOpen={() => Actions.refresh({ key: state.key, open: true })}\n        onClose={() => Actions.refresh({ key: state.key, open: false })}\n        type=\"displace\"\n        content={}\n        tapToClose\n        negotiatePan\n      >\n        \n\n    );\n  }\n}\n- Wrap everything inside a scene that is the drawer componentjs\n\n\n\n\n\n\n\n\n\n- Add `onSelect` to the last scene to manually control what happens when you pressjs\n Actions.refresh({ key: 'drawer' open: value => !value )})}  />\n```. @aksonov sorry I forgot to mention that I'm still using v3 and your suggestion doesn't seem to work.\nIs it supposed to work with v3 as well?\nIf so, any suggestion on where I could start debugging?\nMany thanks \ud83d\ude04 . With a bit more testing I found that this works:\njs\n        Actions.pop();\n        setTimeout(() => {\n          Actions.refresh({\n            showModalRedeem: true,\n            id: rId,\n          });\n        }, 0);\nAny reason why it doesn't work without the setTimeout ?\nIt's a bit ugly but if it works I'm happy tbh\nThank you. seems like the component is constantly being mounted - unmounted - mounted\nwhenever I trigger a certain redux action\njs\nexport function clearSavedDaily() {\n  return { type: 'CLEAR_SAVED_DAILY' };\n}\njs\n    case 'CLEAR_SAVED_DAILY':\n      return Object.assign({}, state, {\n        savedDaily: {\n          ruleId: -1,\n          couponId: '',\n          createdAt: moment().valueOf(),\n        },\n      });\n```js\nconstructor(props) {\n    super(props);\n    console.log('component created');\n  }\ncomponentWillMount() {\n    console.log('component will mount');\n  }\ncomponentDidMount() {\n    console.log('component mounted');\n  }\n```\nconsole log\n\n. I see componentDidMount called infinitely on my issue as well:\nhttps://github.com/aksonov/react-native-router-flux/issues/2371\nThey might be related.\nSeems like somehow the scene is being unmounted and mounted infinitely. ",
    "adaerodriguez": "Hi, I only get a white screen with your solution @mtt87.\n\"react\": \"16.3.1\",\n\"react-native\": \"0.55.3\",\n\"react-native-router-flux\": \"4.0.0-beta.27\"\nThanks!. I have the same problem with a Tabs, but if I remove the wrapper scene, it works fine!!.... but if I remove the wrapper scene, I have the problem that @aksonov say in the example:\n\n{/ Wrapper Scene needed to fix a bug where the tabs would reload as a modal on top of itself /}\n\n<Scene hideNavBar panHandlers={null}> // <--- If I remove this Scene, works fine!!!\n    <Tabs\n          key={Routing.tabsHome}\n          headerMode='none'\n          tabBarPosition='top'\n          tabs\n          showLabel\n          hideNavBar={false}\n          wrap={false}\n          swipeEnabled={false}\n          lazy={true}\n          renderTitle={NavBarLogoTabs}\n          titleStyle={styles.titleStyle}\n          labelStyle={styles.labelStyle}\n          tabBarStyle={styles.tabBarStyle}\n          navigationBarStyle={styles.navigationBarStyle}\n          backButtonTintColor={Color.white}\n          renderLeftButton={renderLeftButton}\n          renderRightButton={renderNavBarRightMenu}\n      >\n           .....\n     </Tabs\n</Scene>. I found the solution... tabBarOnPress on the Tabs did the trick. This is my code:\n<Drawer\n          key=\"drawer\"\n          contentComponent={DrawerContainer}\n          // drawerIcon={dr}\n          drawerWidth={260}\n          drawerPosition={'right'}\n          drawer={true}\n          hideNavBar\n          drawerImage={ () => <Image source={require('./resources/icons/ic_add.png')} style={{ width: 60, height: 60, tintColor: 'red' }}/>}\n        >\n          <Tabs\n            initial\n            key=\"home\"\n            type={'reset'}\n            headerMode='none'\n            tabBarPosition='bottom'\n            tabs\n            showLabel\n            hideNavBar={true}\n            swipeEnabled={true}\n            lazy={true}\n            wrap={false}\n            tabBarStyle={styles.tabBarStyle}\n            titleStyle={styles.titleStyle}\n            navigationBarStyle={styles.navigationBarStyle}\n            backButtonTintColor={'#FFF'}\n            tabBarOnPress={ ({ scene, jumpToIndex }) => {\n              const { key } = scene.route;\n              if (key === 'tabOptions') {\n                Actions.drawerOpen();\n                return;\n              }\n              if(!scene.focused) {\n                jumpToIndex(scene.index);\n              }\n            }}\n          >\n            <Scene key=\"tabProducts\" tabBarLabel={strings('title.products')} icon={ ({focused}) => renderIconTab(\"tabProducts\", focused) }>\n              <Scene key=\"products\" component={ProductsContainer}/>\n            </Scene>\n            <Scene key=\"tabMyAccount\" tabBarLabel={strings('title.myAccount')} icon={ ({focused}) => renderIconTab(\"tabMyAccount\", focused) }>\n              <Scene key=\"products\" component={ProductsContainer}/>\n            </Scene>\n            <Scene key=\"tabLists\" tabBarLabel={strings('title.lists')} icon={ ({focused}) => renderIconTab(\"tabLists\", focused) }>\n              <Scene key=\"products\" component={ProductsContainer}/>\n            </Scene>\n            <Scene key=\"tabNotifications\" tabBarLabel={strings('title.notifications')} icon={ ({focused}) => renderIconTab(\"tabNotifications\", focused) }\n                   rightButtonImage={ openDrawer() }>\n              <Scene key=\"products\" component={ProductsContainer}/>\n            </Scene>\n            <Scene key=\"tabOptions\" component={Blank} icon={ ({focused}) => renderIconTab(\"tabOptions\", focused) }/>\n          </Tabs>\n        </Drawer>\nI hope this could be helpful for somebody :)\nI close this issue. ",
    "jigarmistry": "Any Help ? Anybody integrate the latest router flux with drawer ?. @filipemonteiroth Thanks for the solution.\nHow do you call the dashboard component using Actions ? I mean if I want to call the dashboard after login then how do I call ?  Actions.dashboard will work ?\nIn my case it is not working. My dashboard component is not the initial one.\nAnd what is ActionConst ?. Thanks,\nBut is it still working if dashboard is not the initial component ? In my case it is not the initial component. I do have a same setup.. Thanks a lot. I will try this way. \nBut in my case when I call Actions.dashboard() nothing happens.  \nHow do you manage to open the drawer from left button click in navigation bar?. Ok. I will try and let you know if I got any problem or I will share a small snippet of code with you for the same. \nThanks for the support and time.. @kyleseaman Thanks for the detailed solution. I appreciate your answer. Its sounds good to me.\n@filipemonteiroth I have tried that and come to know that I have problem in router setup. That is now solved and it is finally working. Thanks a lot. . It is working but its every time taking the first actions as first actions in scene under the drawer.\nIn my case I have following in router.js \n<Scene key=\"drawer\" type={ActionConst.RESET} component={NavigationDrawer} open={false} > \n        <Scene key=\"sidemenu\">\n          <Scene\n            key=\"Dashboard\"\n            component={Dashboard}\n            title=\"Dashboard\"\n            hideNavBar={false}\n          />\n          <Scene\n            key=\"Profile\"\n            component={Profile}\n            title=\"Profile\"\n            hideNavBar={false}\n          />\n          <Scene\n            key=\"Hisotry\"\n            component={Hisotry}\n            title=\"Hisotry\"\n            hideNavBar={false}           \n          />\n        </Scene>\n      </Scene>\nSo when I run the app its every time going into dashboard. but I need to go to history first.\n. I am handling the screen movement in using actions. That is if something true then I need to go to history otherwise login.\nHow I can handle this ?\nif (status) {\n    Actions.History();    \n}else{\n    Actions.SignIn();\n}. Sounds good to me. Can you share me small snippet for that ? How it is actually working ?. What do you mean by In InitialLoad on componentWillMount() ? You mean to the first screen where we need to check ? In our case login ?. And you have this as the initial scene among all the scenes and it is not having anything extra. Is it ?. Yeah.. But what if I do not need a drawer in all the scenes ? Only in History one ?. That's not working.. I think hide the navbar will be the trick.. . ",
    "kyleseaman": "@jigarmistry I use the following to open/close the drawer from any screen\n```\ncloserDrawer = () => {\n    Actions.refresh({key: 'drawer', open: false });\n  };\nopenDrawer = () => {\n    Actions.refresh({key: 'drawer', open: true });\n  }\n```\nMy left button is setup as follows \n<TouchableOpacity onPress={this.openDrawer}>\n  <Image\n    resizeMode='contain'\n    source={{uri: 'menuBtn'}}\n  />\n</TouchableOpacity>\nAnd as mentioned above, once you call Actions.dashboard(), in dashboard call \ncomponentWillMount () {\n    Actions.refresh({key: 'drawer', open: false });\n}\nThere is an issue when calling two Actions in a row, so if you have a component that wants to load a dashboard from the drawer and then close the drawer, you can use the following\nActions.dashboard({ title: title });\nsetTimeout(() => Actions.refresh({ key: 'drawer', open: false }), 0)\nFinally, you can set type='replace' when you create your Scenes if you want the navigation stack to have a new root. For example: \n<Scene key='Login' component={Login} title='Login' hideNavBar type='replace' />. @jigarmistry if you want History to be first, you should pass the initial prop. \nMy scene structure looks like:\n<Scene key='root'>\n  <Scene key='drawer' component={Drawer} open={false}>\n    <Scene key='dashboard' component={Dashboard} type='replace' ... />\n    <Scene key='history' initial component={History} type='replace' ... />\n  </Scene>\n</Scene>. I would suggest having an initial Scene to handle this. I have an <InitialLoad />, which presents a loading screen while determining where to send the user.  Either to Login, Dashboard, History etc. . In InitialLoad on componentWillMount() I have my check for the user and then call the appropriate action, either Action.Login() or Action.OtherRoute(). InitialLoad is a React Component\n<Scene key=`initialLoad` component={InitialLoad} initial type='replace />\nIt's called before anything else, so in it's componentWillMount() I perform the checks necessary to load the proper Scene for the user. . Correct, it looks something like this\n<Scene key='root'>\n  <Scene key='drawer' component={Drawer} open={false}>\n    <Scene key='dashboard' component={Dashboard} type='replace' ... />\n    <Scene key='login' component={Login} type='replace' ... />\n    <Scene key='initialLoad' component={InitialLoad} type='replace' initial ... />\n    <Scene key='history' component={History} type='replace' ... />\n  </Scene>\n</Scene>. You should be able to just nest the other Scenes outside of the Drawer Scene, but I haven't implemented this.  I just hide the Drawer button on the Login scene.. ",
    "swedge218": "@filipemonteiroth Where do I need to place this snippet of code:\n<Scene key=\"drawer\" type={ActionConst.RESET} component={NavigationDrawer} open={false} > <Scene key=\"main\" initial> <Scene key=\"dashboard\" component={Dashboard} title=\"Dashboard\" hideNavBar={false} initial /> </Scene>\nI have put it in my application Router Setup but it does not work. I get the same problem - nothing happens when i call Actions.map from another Component. I have the Drawer Component set up as you showed but it seems I am setting the Router up wrongly.. @valerybodak This issue seems like it affects many people including me. \nWhat I had to do later was to wrap my Router and Scenes in the the  tag. \nSee full details on stackoverflow answer here. ",
    "phantom1299": "Hi, I implemented the Drawer from router-flux v4.0.0-beta.14 like this:\n(I couldnt find any info on how to implement the new version, tried to implement it like in the Example App. Hope this helps other people.)\nRouterComponent.js:\n(This is my root component)\n```\nimport React from 'react';\nimport { Scene, Router } from 'react-native-router-flux';\nimport LoginForm from './components/LoginForm';\nimport Home from './components/Home';\nimport Profile from './components/Profile';\nimport SideMenu from './SideMenu';\nimport Settings from './components/Settings';\nconst RouterComponent = () => {\n    return (\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    );\n};\nexport default RouterComponent;\n```\nWhere Home, Settings, Profile and LoginForm are usual components. And SideMenu is (yes :)) my side-menu.\nSideMenu.js:\n```\nimport React, { Component, PropTypes } from 'react';\nimport { StyleSheet, Text, View, ViewPropTypes } from 'react-native';\nimport { connect } from 'react-redux';\nimport { Actions } from 'react-native-router-flux';\nimport Button from 'react-native-button';\nimport { CardSection } from '../src/components/common';\nconst contextTypes = {\n  drawer: React.PropTypes.object,\n};\nconst propTypes = {\n  name: PropTypes.string,\n  sceneStyle: ViewPropTypes.style,\n  title: PropTypes.string,\n};\nconst styles = StyleSheet.create({\n  viewContainer: {\n    flex: 1,\n    backgroundColor: '#fff'\n  },\n  container: {\n    padding: 15,\n    height: 45,\n    overflow: 'hidden',\n    alignSelf: 'flex-start',\n  },\n  textStyle: {\n    fontSize: 18,\n    color: '#555',\n  },\n  nameContainer: {\n    padding: 15,\n    height: 45,\n    overflow: 'hidden',\n    alignSelf: 'flex-start',\n  },\n  name: {\n    fontSize: 22,\n    color: '#555',\n    fontWeight: '400',\n  }\n});\nclass SideMenu extends Component {\n  render() {\n    return (\n      \n\n { Actions.profile(); }}\n          >User Name\n\n\n { Actions.home(); }}\n          >Home Page\n\n\n Actions.settings()}\n          >Settings\n Actions.auth()}\n          >Log Out\n\n\n    );\n  }\n}\nSideMenu.contextTypes = contextTypes;\nSideMenu.propTypes = propTypes;\nexport default SideMenu;\n```\nCardSection is just a custom component for styling.\nCardSection.js:\n```\nimport React from 'react';\nimport { View } from 'react-native';\nconst CardSection = (props) => {\n    return (\n        \n            {props.children}\n        \n    );\n};\nconst styles = {\n    containerStyle: {\n        borderBottomWidth: 1,\n        padding: 5,\n        backgroundColor: '#fff',\n        justifyContent: 'flex-start',\n        flexDirection: 'row',\n        borderColor: '#ddd',\n        position: 'relative'\n    }\n};\nexport { CardSection };\n```\nVersion:\n\"react\": \"16.0.0-alpha.12\",\n    \"react-native\": \"0.46.4\",\n    \"react-native-button\": \"^2.1.0\",\n    \"react-native-router-flux\": \"^4.0.0-beta.14\",. Sorry for the late reply, I somehow didn't see the email notifcation send to me by github.\n@GazizovRuslan, I cant say anything without more information, maybe you forgot to export one of your components as it says in the error message.\n@preetampatil3d, glad I could save you the struggle^^.\nAll child scenes of a scene with the drawer property will have the drawer and the drawer button. You can add the \"back\" property on a scene so it doesn't has the drawer button (but you will still be able to bring the drawer by sliding). I don't know how to make the drawer button on the right, checked the docs a little bit with no success.\nIn the router flux repository, there are different branches and one of them, the v4-docs branch seems to have more information about router-flux v4. Maybe you can find it there. I didn't check the other branches but experimenting with the example can help.. @SunSet1219 I never used v3 so I don't know what changed, but the example AndrewMarkley send you should help.\n@traxx10 hmm, can you show your router component? Maybe you navigate to a Scene which has the \"hidenavbar\" property set to true?. ",
    "GazizovRuslan": "@phantom1299, Did everything according to your example, but I have such an error \n\n. ",
    "kbrssmsn": "@phantom1299 Thanks. It worked :)) You saved my project . ",
    "SunSet1219": "@phantom1299  How to use Drawer on react-native-router-flux V4?\nI am going to upgrade RNRF to V4 from V3.\n\n. ",
    "AndrewMarkley": "@SunSet1219 \nCheck out this example from the breaking changes section\nhttps://github.com/aksonov/react-native-router-flux/blob/v4/Example/Example.js\nchange component => contentComponent. ",
    "traxx10": "i tried your solution but then when i toggle my navigation, i dont have a nav bar. ",
    "vijaychouhan-rails": "@jigarmistry \nFind the example at https://github.com/vijaychouhan-rails/AllInOne. @aksonov \nI know but I want to use react-native-drawer because I need to use displace screen feature but in-build drawer does not provide this.. same problem me too. ",
    "ishaqashraf": "@preetampatil3d\nyou need to add the onback function like this \n Actions.pop()}\n                            backButtonTintColor=\"white\"\n                    />\n\n. same situation with me with version 4 ,, please someone solve this issue. ",
    "GGWacky": "@phantom1299 @ishaqashraf \nI'm having an issue using react-native-router-flux along with react-native-drawer. The code compiles but the drawer does not open for some reason. The render method in the Drawer component never seems to execute. I've been stuck for hours on this bug, and couldn't find any similar issues on the internet. Just wondering if I could have missed.\nDrawer.js\n`export default class MyDrawer extends Component<{}> {\n  drawerContent() {\n    return (...//drawerContent//...);\n  }\n  render() {\n    const state = this.props.navigationState;\n    const children = state.children;\nreturn (\n  <Drawer\n    open={state.open}\n    onOpen={()=>Actions.refresh({key:state.key, open: true})}\n    onClose={()=>Actions.refresh({key:state.key, open: false})}\n    content={this.drawerContent()}\n    tapToClose={true}\n    openDrawerOffset={0.2}\n    panCloseMask={0.2}\n    closedDrawerOffset={-3}\n  >\n    <DefaultRenderer navigationState={children[0]} onNavigate={this.props.onNavigate} />\n  </Drawer>\n);\n\n}\n}`\nexport default class App extends Component<{}> {\n  render() {\n    return (\n      <Router>\n        <Scene key=\"root\">\n          <Scene key=\"pageThatCallsDrawer\" component={PageThatCallsDrawer}/>\n          <Scene key=\"myDrawer\" type={ActionConst.RESET} contentComponent={MyDrawer} open={true}>\n            <Scene key=\"firstOption\" component={FirstOption}/>\n            <Scene key=\"secondOption\" component={SecondOption}/>\n            <Scene key=\"thirdOption\" component={ThirdOption}/>\n          </Scene>\n        </Scene>\n      </Router>\n    );\n  }\n}\n. ",
    "jaysassyinfotech": "@phantom1299 @jigarmistry @filipemonteiroth @AAverin \nSideBar.js\n```\nimport React from \"react\";\nimport { AppRegistry, Image, StatusBar, ImageBackground } from \"react-native\";\nimport {\n    Button,\n    Text,\n    Container,\n    List,\n    ListItem,\n    Content,\n    Icon\n} from \"native-base\";\nconst routes = [\"Home\", \"Profile\",\"NextPage\"];\nexport default class SideBar extends React.Component {\n    render() {\n        return (\n            \n\n\n\n\n\n\n        );\n    }\n}\n**NavigationDrawer.js**\nimport React, { Component } from 'react';\nimport Drawer from 'react-native-drawer';\nimport SideBar from './SideBar';\nimport {Actions, DefaultRenderer} from 'react-native-router-flux';\nexport default class NavigationDrawer extends Component {\n    render(){\n        const state = this.props.navigationState;\n        const children = state.children;\n        console.log(\"NavigationDrawer >> state >>\",state)\n        console.log(\"NavigationDrawer >> children >>\",children)\n        return (\n            Actions.refresh({key:state.key, open: true})}\n                onClose={()=>Actions.refresh({key:state.key, open: false})}\n                type=\"displace\"\n                content={}\n                tapToClose={true}\n                openDrawerOffset={0.2}\n                panCloseMask={0.2}\n                negotiatePan={true}\n                styles={drawerStyles}\n                tweenHandler={(ratio) => {\n                  return {\n                    mainOverlay: { opacity: ratio === 0 ? 0 : 0.3, backgroundColor: '#000' }\n                  }\n                }}\n                >\n                \n\n        );\n    }\n}\nconst drawerStyles = {\n    drawer: {\n        shadowColor: '#000', shadowOpacity: 0.3, shadowRadius: 1\n    },\n    main: { paddingLeft: 0 }\n}\n**Applications.js**\nimport React from 'react';\nimport { Router, Scene,Drawer,ActionConst } from 'react-native-router-flux';\nimport Login from './Login/Login';\nimport Profile from './Profile/Profile';\nimport NextPage from './NextPage/NextPage';\nimport Home from './Home/Home';\nimport SideBar from './Home/SideBar';\nimport NavigationDrawer from './Home/NavigationDrawer';\nclass Appllication extends React.Component {\n    render() {\n        return (\n            \n\n\n\n\n\n\n\n\n\n\n\n        );\n    }\n}\nexport default Appllication;\n```\nHear i include 3 file Applications.js , NavigationDrawer.js  and Side bar js. When i click on drawer button using this  Actions.drawer() } >. Drawer not open in view some error face TypeError: undefined is not an object (evaluating 'state.children').  How to solve that?\n.  Actions.refresh({ key: Actions.currentScene }); not working second time\nhttps://github.com/aksonov/react-native-router-flux/issues/2862\n@aksonov . i refresh same page second time. \nFirst time - Actions.refresh({ key: 'Wallet'}); \nSecond time - Actions.refresh({ key: 'Wallet'});\nAny solution for second time same page refresh?. ",
    "kamilski81": "Have you tried setting the navBar explicitly on the scene? . ",
    "HelloEdit": "Ok so now I use react-navigation. ",
    "LuisRizo": "Make a function that does this: \ndismissModal(){\n    this.setState({hide: true});\n    Actions.pop();\n  }\nconstructor(props){\n    super(props);\n    this.state={\n      hide: props.hide,\n    }\n    this.dismissModal = this.dismissModal.bind(this);\n  }\nAnd have your modal call that function somehow:\nrender(){\n   if (!this.state.hide) {\n      return(\n          <TouchableOpacity style={styles.MainContainerModal} onPress={this.dismissModal}>\n          ...\n          </TouchableOpacity>\n      )\n   }else{\n      return ( <View/> )\n   }\n}\n. ",
    "gabrielgomesferraz": "+1. Same issue on https://github.com/aksonov/react-native-router-flux/issues/1761\n. +1. +1. ",
    "iscarecrow": "+1. ",
    "sporteman": "+1. Any workaround ? . Perfect! It works like a charm!  Thanks a lot @diegorodriguesvieira . ",
    "Kaihuang724": "+1 - I've had to downgrade to react-native@0.42.0 to get it working again. Code for scenes:\n```\n'use strict'\nimport React from 'react';\nimport { Actions, ActionConst, Scene } from 'react-native-router-flux';\nimport { Auth0Login } from './components/Authenticate/Auth0Login'\n//Routes\nimport {\n  LoginContainer\n} from './containers/index';\nconst scenes = Actions.create(\n  \n\n      // \n\n\n\n)\nexport default scenes;\n```. Hi @aksonov,\nThanks for the reply. I checked the latest version and copied the latest Example project, but still getting the same error. Could you tell me which part of the project I should be focused on - I'm not too sure why it's still throwing the error.\nThanks!. ",
    "anuragsimgeker": "+1. ",
    "georgest": "+1. ",
    "windwang": "+1. +1. see #2225 . +1. ",
    "bowoekren": "+1. ",
    "mykonwest": "+1, woof. ",
    "ShMcK": "It may be that React 16 alpha.3+ no longer supports mixins. The React team have hinted at deprecating mixins for a while now.\nAccording to the PureRenderMixin docs:\n\nUnder the hood, the mixin implements shouldComponentUpdate, in which it compares the current props and state with the next ones and returns false if the equalities pass.\n\nThe solution may be something as simple as Dan Abramov's shallowEqual used in react-pure-render and replacing the mixin uses with the following.\njs\nshouldComponentUpdate() {\n  return !shallowEqual(this.props, nextProps) || !shallowEqual(this.state, nextState);\n}\nThis would accomplish the same goal: checking for reference and/or deep equality between the old and next props.. Definitely.. I believe I may have a hint to the cause of this. \"React-native-router-flux\" is now tied to the frequently changing beta APIs of \"react-navigation\".\nWithin \"react-navigation\", drawerIcon does not actually refer to the menu icon controlling the drawer. \"React-navigation\" uses the API to autogenerate menu items in a drawer, with optional (drawer) icons. This is not clear from the current docs.\nSee the react-navigation drawer example.. I'm not sure how to get this to work with \"react-native-router-flux\". In my own project, I've switched to \"react-navigation\" instead.. ",
    "wjnxiang": "+1. ",
    "sushant6309": "+1\n. ",
    "stefan0s": "it has dependency with \"react-addons-pure-render-mixin\" which it is removed from React 16.alpha3. I don't see any progress, so we will uninstall and move on react-navigation \nhttps://github.com/react-community/react-navigation. ",
    "Silvercast": "+1. it's 3.39.2 now. ",
    "wuyunqiang": "how to fix it,me to. ok it's work.. me too ,you know why?. ",
    "jjdp": "@satsuki solution is working fine. ",
    "zalesky": "Try to inspect layers and you will see what layers is over your input. Then decrease height of this layer or shift it.\nMore about debugging and Inspector https://facebook.github.io/react-native/docs/debugging.html. I solved it via setting a state in NavigationDrawerList component. \nChange state on item in list press and compare state in style.. @inferusvv Do you have any ideas?. @i8wu It's not the same. ",
    "OscarYuen": "I have the same issue. Any way to deal with it?\nMy case is a tab view under the parent scene. The tab view is unable to refresh. @Symous My temporary workaround is to discard the parent-children scene. I separate the tab view from the children scene and add it as a component inside the the parent scene component. componentWillReceiveProps would be triggered in that tab view component. . ",
    "NickAlvesX": "I solved this problem. I realize that I was looking for the wrong things. This isn't a Flux problem. I followed the Scenario #2 of this Stack Overflow answer:\nhttp://stackoverflow.com/questions/21285923/reactjs-two-components-communicating\nThis helped me a lot to: http://andrewhfarmer.com/component-communication/#5-parent-component (5. Parent Component). ",
    "GrishmaM": "can anyone help on this ?. Im facing the same issues whenever i route from one scene to another always the first scene renders, im using the below mentioned versions.\n\nreact-native-router-flux v4.0.6\nreact v16.6.0\nreact-native v0.57.7\n\nand the way im using the senes is mentioned below.\n<Scene key=\"root\">\n   <Scene component={one} key={\"one\"} passProps={true} type={\"REACT_NATIVE_ROUTER_FLUX_RESET\"}/>\n   <Scene component={two} key={\"two\"} passProps={true} type={\"REACT_NATIVE_ROUTER_FLUX_RESET\"}/>\n   <Scene component={three} key={\"three\"} passProps={true} type={\"REACT_NATIVE_ROUTER_FLUX_RESET\"}/>\n </Scene>\n. ",
    "lxooxl": "you can add <Text>{props.title}</Text> under Image. ",
    "LJ8116": "you can define your scene like this:(use clone)\n . ",
    "Jahans3": "I have got it working by using the clone prop but this didn't work when it's inside a tab bar, so I had to duplicate the scene outside the tab bar which isn't ideal. +1. @Blapi I will check when I have some free time and report back here! . @nachofregeiro @Blapi I can\u2019t find an update higher than 4.0.0-beta24, are you sure it\u2019s on npm or shall I checkout the latest branch?. @Donhv I'm sure it was working in an earlier 4.x release\n@JoePaulsenLyraHealth we add a lazy prop \ud83d\ude09. ",
    "thanhtr": "+1. @lattuguini Thank you for your suggestion. I'd try it out now and let you know the result :). After clear the node_modules, installing babel-plugin-transform-decorators-legacy and declare as plugin in .babelrc as instructed from the site you suggested I got into this error. So I don't know if it is still result of the fact that I use typescript.\n\n. I will downgrade stabler version of router flux. This one seems to be really alpha and maybe it's not the time yet.. For now I just declare a MyScene = Scene as any to override this. I will close this issue.. ",
    "vinhhrv": "i have the same issue. ",
    "Chatharaju": "+1. ",
    "jorgesantana": "+1. Thanks @kumarpatel  :). ",
    "lf-achyutpkl": "i also encounter same issue.. Thank you, it worked :). ",
    "aryo": "Just adding to what @kumarpatel said... RN experimental navigation version wasn't pinned in RNRF's package.json, so when the new version of experimental navigation was pushed to npmjs (very recently, I assume), all new builds were suddenly having this issue.. ",
    "Techdojo": "+1 on the issue for me as well.\nThanks @kumarpatel your solution worked for me as well :). ",
    "shizhenbin": "I get same issue when upgrade RN to 0.45.1, and \"react-native-experimental-navigation\": \"0.26.11\", doesn't work anymore. Please help. ",
    "valeriik": "I found out that the problem with intagrated NavigationDrawer component. When I commented this line:\n<Scene key='drawer' component={NavigationDrawer} open={false}>\nthe bug disappear (as well as Drawer of course). FYI: also \"internal\" Drawer pretty much lagging unfortunately. When I implemented  separate way independence 'react-native-drawer' component it rendered much faster without visual render lags.\n. ",
    "privateOmega": "_ => Actions.Trip({_id: this.state._id,role: this.state.role})  in the onclick solves the auto redirect bug. Any idea why?. @lightninglu10 any updates? I am looking for the same answer.  Tried switching to react-router native version, couldn't make sense out of anything. . @lightninglu10 can I also perform authentication check using that solution?. ",
    "lxfriday": "update the props of scenes does nothing, I want to hide tabbar when I scroll the ListView. Maybe that is the only way. Hide the tab in your router,and You make a tab youself.. ",
    "isaacsun86": "Hide the tabbar and make a bar in your next view. That's what I did.. ",
    "supportclik": "@isaacsun86  how to do it?. ",
    "pratomchaip": "Have you tried popTo()?\nActions.popTo('SceneA'). SceneA -> SceneB -> SceneC -> popTo('SceneA')\nIf you mean, will it trigger componentWillUnmount on SceneB and SceneC... yes.. I see... hmm, then what about:\nActions.homeScreen({type: 'reset'}) ?. ",
    "hectorsc": "I have this same problem. When you return to the parent scene, the other scenes can be see turn, and it's very annoying. :S\nI have tested with:\n-  Actions.pop({ key: 'myScene' })  It doesn't work\n-  Actions.myScene({type: ActionConst.POP_TO})  It doesn't work\n-  Actions.myScene({ type: 'pop' })  It doesn't work\nIs there any solution? :( \n. ",
    "KevinHu2014": "If you want to navigate from scene2 to scene4.\nYou should try from scene2 to scene3 instead.\n. ",
    "yusmarcastro": "I had the same problem!!! any solution guys?????????????????\nplease @aksonov how can we do this???. ",
    "kirillpisarev": "Same problem. I tried to set initial scene prop of nested scenes dynamically to point the navigator which nested scene to render when navigating to the parent but has no luck. Has anyone any appropriate solution?\ndirty solution is to perform 2 transitions:\nActions.scene3({type: ActionConst.RESET})\nActions.scene4({type: ActionConst.RESET}')\nThe problem is that we initialise the Scene3 component before we move to the scene4 and i cant sleep with that. @0mkara as i wrote above this solution has much overhead. ",
    "jamalx31": "+1. ",
    "petervavro": "Really don't like double , triple calling ... Is there better solution ? Thanks. ",
    "Vladislav-Vinnikov-Narvar": "+1. ",
    "ravalikarumuri": "Hello  Aksonov,\nI want to send data from one router child to another router child in React Native Router flux, the call is happening after sometime, meanwhile the page is rendering, so I am not getting data populated, Can you help me to fix this issue.\nHere is how my router  structure.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n. ",
    "brrr": "there is a tricky way:\n\nregister event listener inside your component\n```\ncomponentDidMount(){\n    this.listener = RCTDeviceEventEmitter.addListener(Constants.EVENT_REMOVE_FRIEND,(value)=>{\n      console.log('...............'); \n    });\n    console.log('listener is added.....'); \n  }\n\ncomponentWillUnmount(){\n    if (this.listener) {\n      this.listener.remove();\n      console.log('listener is removed.....')\n    }\n  }\n```\n2.pull the trigger \n```\n          RCTDeviceEventEmitter.emit(Constants.EVENT_REMOVE_FRIEND)}/>\n```. ",
    "agustinaliagac": "@brrr I'll definitely give it a try and post my results here. Thanks !! . ",
    "lRoMYl": "Here is how I customize the navigation bar button individually from the scene itself. Defining the style and button for the navigationBar from NavigationRouter.js are extremely messy.\nInstead of defining the rightTitle/onRight in the NavigationRouter.js, you can define the right button from the scene itself. \nDuring the scene configuration in NavigationRouter.js, access the custom button through the route parameters in the renderRightButton method. I wish there is a similar way available to retrieve the navigationBarStyle through pure function, then I would also be able to customize the navigationBar style individually from the scene itself instead of hardcoded styling in NavigationRouterStyle.js\nNavigationRouter.js:\n { return route.albumButton }} />\nCameraScannerScreen.js:\n```\ncomponentDidMount () {\n    Actions.refresh({\n      albumButton: this.renderAlbumButton()\n    })\n}\nrenderAlbumButton () {\n    return (\n       console.tron.log('Your action here')}>\n        {I18n.t('_camera_scanner_album')}\n\n    )\n  }\n```. ",
    "SRandazzo": "Came here to post the same issue, looks like it was accidentally added to the dependencies in this commit: https://github.com/aksonov/react-native-router-flux/commit/34e2d7ac7eb09489c2fd7f19844bd38e27e969fc\nI believe It should be listed as a peerDependency instead. ",
    "lahaxearnaud": "Same issue. Waiting for the fix I rollback to react-native-router-flux@3.30.1 . ",
    "TimothePearce": "Same here, please update the package. ",
    "n8stowell82": "yeah this has been destroying my day as well.  as a quick work around, you can just go delete the dupe of react-native out of the node_modules folder within react-native-router-flux.  Ugly, but will at least get you up and running for the time being\n. ",
    "sil218": "reinstall 3.38.0 for now\nnpm install --save react-native-router-flux@3.38.0. ",
    "rashtay": "It's not related to yarn I believe. Because even if I install it with npm I get the same issue. I deleted my node_modules folder and cleared the npm cache, but the issue was persistent. Currently, I went ahead with a workaround which I read on a GitHub issue where I have to delete the node_modules/react-native-router-flux/node_modules/react-native package. I hope they fix this issue soon.. ",
    "Tonacatecuhtli": "same here. @nazaslater  fix your version to \"react-native-router-flux\": \"3.38.0\", you have 3.38.1. ",
    "joalisson": "same here. ",
    "otech47": "Got wrecked by this too. Fixed with the rollback to 3.38.0\nwatchman watch-del-all\nrm -rf node_modules && npm install\nnpm uninstall react-native-router-flux\nnpm install --save react-native-router-flux@3.38.0\nrm -fr $TMPDIR/react-*\nnpm cache clean\nnpm start -- --reset-cache. ",
    "uncledent": "Same by me, had to remove the react-native directory inside react-native-router-flux manually to make things work.. I have the same problem on android, rn 0.42, react-native-router-flux 3.38.0.\nIt works on 3.37.0\nAny news on this case?. ",
    "minhcasi": "same issue, please help to fix . ",
    "lrnlyra": "Same here, back to 3.38.0 fixed it. Thank you!. ",
    "davidhenley": "+1. The beta 7 RN will give you the same problem. You need to use beta 8 if you are using the latest version of React.. ",
    "jamesjara": "thanks! . ",
    "QuantumInformation": "I'll get the champagne ready!. ",
    "prtkkmrsngh": "Rolling back to v0.38.0 or just deleting the react-native folder inside react-native-router-flux/node_modules/ and also delete symlink to react-native inside react-native-router-flux/node_modules/.bin/ will work for now.. @geecurve got the same error and nothing npm cache clean, yarn cache clean, even rm -rf node_modules got it working. What I find out that original project directory was dead so created new one with small case. Executed yarn install and project was ready to build and test.. @MattyK14  revert to 3.38.0 and upgraded RN to 0.44. ",
    "fewspider": "stuck just now\uff0cthanks. ",
    "aolowude": "What worked for me was this sequence:\nwatchman watch-del-all\nrm -rf node_modules && npm install\nnpm uninstall react-native-router-flux\nnpm install --save react-native-router-flux@3.38.0\nrm -fr $TMPDIR/react-*\nnpm cache clean\nnpm install --save react@16.0.0-alpha.6\nnpm start -- --reset-cache. ",
    "harshattray": "Tried all the above steps and the errors went away but the router doesnt and scenes donot render the components. Double checked if they are being fetched properly and they are . Not sure why . I'm not sure if this helps but if you call type={ActionConst.RESET} to the Scene, It will prevent the default behavior of the hardware back button.\n<Router>\n                <Scene>\n                    <Scene key=\"root\" component={sceneRoot} type={ActionConst.RESET} />\n                </Scene>\n            </Router> \nTry this and let me know. ",
    "geecurve": "Tried command line's fix and this worked to get my build working without errors but when i run my unit tests with jest its complaining it can not find the node_module folders in the react-native-router-flux folder. Looks like jest is still getting a reference to these folders :(\nDoes anyone know where Jest reference's this from ?\nENOENT: no such file or directory, stat '/{projectDirectory}/node_modules/react-native-router-flux/node_modules/react-native/Libraries/Core/ErrorUtils.js. ",
    "nazaslater": "Please guys, \nhow to a can resolver this error?\n\nreact-native-router-flux@3.38.1\n  \u251c\u2500\u2500 lodash.isequal@4.5.0\n  \u251c\u2500\u2500 UNMET PEER DEPENDENCY react@15.5.4\n  \u251c\u2500\u2500 react-addons-pure-render-mixin@15.5.2\n  \u251c\u2500\u252c react-dom@15.5.4\n  \u2502 \u2514\u2500\u2500 prop-types@15.5.9\n  \u251c\u2500\u252c react-native@0.41.2\n  \u2502 \u2514\u2500\u252c jest-haste-map@18.0.0\n  \u2502   \u251c\u2500\u252c fb-watchman@1.9.2\n  \u2502   \u2502 \u2514\u2500\u2500 bser@1.0.2\n  \u2502   \u2514\u2500\u2500 multimatch@2.1.0\n  \u251c\u2500\u252c react-native-experimental-navigation@0.26.12\n  \u2502 \u2514\u2500\u2500 clamp@1.0.1\n  \u2514\u2500\u2500 react-static-container@1.0.1. Thanks @Tonacatecuhtli. ",
    "devkhan": "https://github.com/facebook/react-native/issues/7384. ",
    "karltaylor": "I'd check out https://github.com/reactjs/prop-types, they've removed it from the main react package.. ",
    "iegik": "Jest test failed:\n```\nTypeError: Cannot read property 'style' of undefined\n  at Object.<anonymous> (node_modules/react-native-router-flux/src/Scene.js:30:106)\n  at Object.<anonymous> (node_modules/react-native-router-flux/src/Actions.js:10:12)\n  at Object.<anonymous> (node_modules/react-native-router-flux/index.js:1:398)\n\n``. > If you were using @provides NameOfModule, you should now switch to @providesModule\nhttps://github.com/facebook/react-native/releases/tag/v0.44.0. Have You tried kill all background-running \"react-native packager\" processes andnpm start --reset-cache` again?. The only solution is to disable this check in Preferences.... ",
    "saidmoya12": "Still this problem.\nWhy no is implemented yet?. ",
    "ohtangza": "This is very important for some project because it is causing the following error:\n\n. I guess this should be moved to peerDependency as submitted here: https://github.com/aksonov/react-native-router-flux/pull/1808. Sadly, I switched back to the official react navigation, which works very good so far for me.. ",
    "leyuan": "I have tried to remove them and move them to devDependencies and peerDependencies, but I got the following errors\n```bash\n FAIL  tests/xxx-test.js\n  \u25cf Test suite failed to run\nENOENT: no such file or directory, stat '{projectDir}/node_modules/react-native-router-flux/node_modules/react-native/Libraries/Core/ErrorUtils.js'\n    at Error (native)\n\n  at Object.fs.statSync (fs.js:1000:11)\n  at Object.statSync (node_modules/graceful-fs/polyfills.js:297:22)\n  at Object.<anonymous> (node_modules/react-native/jest/setup.js:64:532)\n\n```\nAm I missing something here? I don't understand how it is trying to find react-native under react-native-router-flux\nEDIT\nIf you run into this issue, clear the cache of Jest by running jest --no-cache, I can't believe I waste few hours on this one.. \n. Also is React a needed dependency? It caused me react-ref-owner-error, removed it seems to fix it.. Hey @itinance it seems like the yarn.lock file needs update too, thanks for the good work!. @byennen why we want to keep it as a devDependency? I don't think it's being used anywhere..\nIn #1809 \n\nIn the mean-time you can remove react-native from the node_modules folder in react-native-router-flux. however ultimately the example dependencies should be removed from the module and added to the examples package.json\n\nIf we want to keep it we should keep it as Peer Dependency\n@itinance yeah sorry I didn't notice it's in dev dep right now, I mean if we want to totally remove it, we also need to remove it from lock file.. hmm not sure for now!\n. @itinance I could be wrong.. but if we keep it as a dev dep, it will still get installed into the node_modules under react-native-router-flux right? I think we will have two versions of react-native again... ",
    "pckz": "\nnpm i react-native-router-flux@3.38.0 --save\nnpm cache clean\nreact-native run-ios. wow, I never thought it could be a bug\n\nThe version of my project and components are:\nreact-native --version\nreact-native-cli: 2.0.1\nreact-native: 0.43.3\nnpm list --depth=0\n\u251c\u2500\u2500 @remobile/react-native-refresh-infinite-listview@1.0.6\n\u251c\u2500\u2500 babel-jest@19.0.0\n\u251c\u2500\u2500 babel-preset-react-native@1.9.1\n\u251c\u2500\u2500 jest@19.0.2\n\u251c\u2500\u2500 react@16.0.0-alpha.6\n\u251c\u2500\u2500 react-native@0.43.3\n\u251c\u2500\u2500 react-native-button@1.8.2\n\u251c\u2500\u2500 react-native-circle-button@1.0.4\n\u251c\u2500\u2500 react-native-drawer@2.3.0\n\u251c\u2500\u2500 react-native-fast-image@0.0.9\n\u251c\u2500\u2500 react-native-fit-image@1.4.8\n\u251c\u2500\u2500 react-native-htmlview@0.9.0\n\u251c\u2500\u2500 react-native-image-fit@0.9.10\n\u251c\u2500\u2500 react-native-image-progress@0.6.0\n\u251c\u2500\u2500 react-native-image-to-base64@0.1.0\n\u251c\u2500\u2500 react-native-infinite-scroll-view@0.4.2\n\u251c\u2500\u2500 react-native-loading-spinner-overlay@0.4.4\n\u251c\u2500\u2500 react-native-material-design@0.3.7\n\u251c\u2500\u2500 react-native-modalbox@1.3.9\n\u251c\u2500\u2500 react-native-photo-view@1.2.0\n\u251c\u2500\u2500 react-native-radio-buttons@0.14.0\n\u251c\u2500\u2500 react-native-router-flux@3.38.0\n\u251c\u2500\u2500 react-native-share@1.0.20\n\u251c\u2500\u2500 react-native-side-menu@0.20.1\n\u251c\u2500\u2500 react-native-simple-router@0.12.0\n\u251c\u2500\u2500 react-native-tabs@1.0.9\n\u251c\u2500\u2500 react-native-tooltip@5.0.0\n\u251c\u2500\u2500 react-native-tooltip-menu@1.0.8\n\u251c\u2500\u2500 react-native-vector-icons@4.0.1\n\u251c\u2500\u2500 react-native-webview-autoheight@1.0.4\n\u2514\u2500\u2500 react-test-renderer@16.0.0-alpha.6. @mantir could you fix it?\nI need same behaviour for my app and I have no idea how to do that. ",
    "SY102134": "+1. +1. +1. +1. ",
    "fumiyasac": "In addition, I tried to do sudo option when I do snapshot test.\nAlso snapshop test occurs a error.\nIs it related to this incident...?\n```\nsakaifuiyanoMBP:TravelMemo sakaifumiya$ sudo npm test\nPassword:\n\nTravelMemo@0.0.1 test /Users/sakaifumiya/Desktop/reactNativeApp/TravelMemo\njest\n\nFAIL  tests/src/components/common/CommonHeader.js\n  \u25cf Test suite failed to run\nInvariant Violation: Native module cannot be null.\n\n  at invariant (node_modules/fbjs/lib/invariant.js:44:7)\n  at Linking.NativeEventEmitter (node_modules/react-native/Libraries/EventEmitter/NativeEventEmitter.js:32:1)\n  at new Linking (node_modules/react-native/Libraries/Linking/Linking.js:119:141)\n  at Object.<anonymous> (node_modules/react-native/Libraries/Linking/Linking.js:191:16)\n  at Object.get Linking [as Linking] (node_modules/react-native/Libraries/react-native/react-native-implementation.js:95:22)\n  at Object.<anonymous> (node_modules/react-native-experimental-navigation/NavigationRootContainer.js:15:36)\n\n```. ",
    "Moyal17": "same problem\n. ",
    "sock-osg": "I have the same problem, can be the issue related to OS? In Ubuntu it's working fine but on Linux Mint it's not working.. ",
    "unger1984": "same problem. ",
    "trikyas": "Same problem. ",
    "Joel-Mercier": "Yep same, does anyone have a package.json file locked with the latest working pair of react, react-native and react-native-router-flux ?. I fixed this thanks to #1803 and added the 3.38.0 version of react-native-router-flux. ",
    "dylannlaw": "Version 3.38.1 is having issue. By following @wvicioso solution, it should temporary fixes the problem.. ",
    "ThiagoLottici": "Even after installing react-native-router-flux@3.38.0 I was getting a dependency issue with react-static-container. To solve this I followed this https://github.com/aksonov/react-native-router-flux/issues/1710 . Go to react-native-router-flux/src/TabbedView.js and replace the third line of this file with:\nconst StaticContainer = require('react-native/Libraries/Components/StaticContainer.react'); You can check this file in the path location inside react-native module. Doing this you will remove the react-native-router-flux dependency with react-static-container. Now remove the react-static-container folder from your modules (if it doesn't have any other dependency with other modules). This worked for me.. ",
    "ridhwandaud": "I use yarn install , and @wvicioso solution + react-native 0.43.2. work perfectly.\n. ",
    "foxsent": "same problem. ",
    "jolinkomo-code": "same problem. ",
    "brimes": "Same problem. . ",
    "razki": "+1. ",
    "connordear": "+1. ",
    "Spookykiller": "+1. ",
    "akibe": "+1. ",
    "Bing-Xia": "\n1 with version 0.38.1. \n",
    "bvn13": "UNMET PEER DEPENDENCY react@15.5.3. ",
    "encantador-coder": "Solution provided by @ThiagoLottici above works for me. It is at least a temporary fix until the react-native-router-flux library comes up with a newer version which fixes this issue.. Same issue here. Also, getting an additional warning:\nView.propTypes has been deprecated and will be removed in a future version of ReactNative. Use ViewPropTypes instead.\nVersion:\nreact-native-router-flux v3.38.0 (v3.38.1 still has the Dimension error)\nreact-native v0.44.0\nreact 16.0.0-alpha.6\n\n. ",
    "shortdistance": "same problem.. ",
    "arpitcrest": "same problem.. ",
    "ntvinh11586": "I had same problem, but I resolved it by upgrading NPM to the newest version (v5.0) and after that I installed the lastest react-native-router-flux with no UNMET PEER DEPENDENCY error.. ",
    "pbialy": "I fixed this by updating react and npm.. ",
    "jolipixel": "Reinstalling yarn did the trick.\nnpm install -g yarn. ",
    "cavemanbravo": "yarn add whatever dependency. \nIf you are using expo, you may encounter an error. Restart your expo. . ",
    "LeonidKokhnovich": "+1. None of the fixes above worked for me with npm.. ",
    "Jogibaer1963": "+1 same issue with react-flip-move\nnpm 5.5.1 \nmeteor 1.5.2.2\nreact 16.0.0\n\n. ",
    "queli1990": "npm install -g yarn\nthen create-react-app AppName\nthen npm install react-router\n(sudo npm install -g npm). ",
    "radko93": "It's the same case with react dependency. I got problems with duplicate installation.. @cronos88 no. Warnings are disabled by default in release mode.. @j8jacobs you would probably need to replace this with master branch from github https://github.com/aksonov/react-native-router-flux/blob/master/package.json#L41. ",
    "Mikaila94": "Any update on this?. ",
    "msqar": "anyone knows how to fix this? i still can't use this dependency :( . Damn @Anima-t3d  im getting the exact same error!!! any solution yet? This dependency broke my app, i can't even make it work without that react-native-router-flux that packager still tries to grab a file from that directory! when it DOESN'T exist!!!. ",
    "raoulj": "Encountering something similar.  Is this nested promise solution the best solution you found?  Did you isolate why this was happening?. Also moving towards react-native-navigation after this issue. ",
    "ashikjs": "@MattyK14 as you thing is it duplicate but I was not understand those solution and not solve those solution of my error or problem thes why I was make this issue . \nBy the way i got this solution from make a in  stackoverflow  . This is Solution\n. ",
    "andkhong": "RN .43 uses React 16.0 Alpha while react-native-router-flux uses react 15.5.. I don't think it's recommended using the current version of react-native-router-flux with RN .43 until a more stable version of react-native-router-flux is out. ",
    "iamrommel": "reverting to \"react-native-router-flux\": \"3.38.0\", works for me. thanks @diegorodriguesvieira . ",
    "maltz": "@diegorodriguesvieira works great thanks!!\nHow did you find this solution?. ",
    "persyl": "Same problem here and needed to use version 3.38.0 to get it to work.. ",
    "bz123": "@dcolin pretty new with react-native etc, we are building a production app, atm using react-native-router-flux with redux.\nIs navigator mature enough to use and can you do the same things you can do with redux?. ",
    "jsplaine": "@yasemincidem Thanks - your suggestion worked\n. ",
    "vmatt": "if non of these helped, you can delete the node_modules/react-native-router-flux/node_modules/react-native folder.\nBut it's the worst way to solve this problem!. ",
    "ezos86": "re-installed node modules to fix other issue, then hit this, now back to the other problem, with Pods and React-native.. \n:/. ",
    "blackavec": "@iegik i used 0.44.0.\nstill has bug on  react-native-router-flux@3.38.1\ni just downgraded to react-native-router-flux@3.38.0 and it works like a charm.\nbtw, i had the similar problem with camera component and on every version it has shown me this, out of nowhere i just added a global platform on podfile: platform :ios, '9.0'\nif fixed all of my problems, except react-native-router-flux@3.28.1\ni'm going to test other ios versions to see maybe it would be compatible for 3.38.1. ",
    "hafizali05": "This helped\nhttp://stackoverflow.com/questions/42163164/react-native-providesmodule-declaration-with-the-same-name-across-two-differen/43875440#43875440\n. ",
    "GregTheGreek": "@hafizali05 works...\ndeleting react-native from the following path:\n\nProjectName > node_modules > react-native-router-flux > node_modules > react-native\n\nworks... but this should be fixed.... Back in the day, i created a startup script with bash to remove a duplicate declaration of react_native within the package. I've since upgraded to the latest version (highly recommend), although it took 2 weeks to resolve conflicts it was highly worth it.\nStartup script was something like... (dobule check the path of the node_modules within router-flux)\nyarn install && rm -rf ./node_modules/react-native-router-flux/node_modules/react-native. bump. ",
    "alexlevy0": "+1. remove all node_modules and run again dont work for me but \nrm -r node_modules/react-native-video/node_modules/react-native-windows/  worked. ",
    "pazcur": "@diegorodriguesvieira \nsorry, nooby here... how do you implement your work around?. what if I don't have a node_modules folder in react-native-router-flux?\n. ",
    "zhoffice": "OK I resolve it by import React, {Component} from 'react';. ",
    "Palisand": "Do you mean navbar? If you do, then just use the hideNavBar={false} prop on the Scene component for which you would like to hide it. Also, the API readme has answered most of my rnrf questions (including this one).. ",
    "areeb111": "Fixed here: https://github.com/aksonov/react-native-router-flux/issues/1842#issuecomment-313804400. I have fixed that manually,\nEdit /node_modules/react-native-router-flux/src/Router.js\nFind and replace each \"BackAndroid\" with \"BackHandler\" with the following lines:\n\nLine 13\nLine 55\nLine 64\n\nFinal updated code should be like this: \nimport { BackHandler } from 'react-native';\n...\n...\ncomponentDidMount() {\n    BackHandler.addEventListener('hardwareBackPress', this.handleBackAndroid);\n  }\n...\n...\ncomponentWillUnmount() {\n    BackHandler.removeEventListener('hardwareBackPress', this.handleBackAndroid);\n  }\nI hope this will help you \ud83d\udc4d . ",
    "ye4ever": "still no update :(. ",
    "EgaSetya": "I have the same issue just today, @ye4ever how do you solve this issue?\n. ",
    "schingeldi": "Save issue here:\n\"react\": \"15.4.1\",\n\"react-native\": \"0.42.0\",\n\"react-native-router-flux\": \"3.38.0\",. ",
    "crajesh238": "Same issue here too.. \n\"react\": \"16.0.0-alpha.12\",\n\"react-native\": \"0.47.2\",\n\"react-native-router-flux\": \"^3.35.0\"\n. ",
    "lightninglu10": "@privateOmega I haven't had time to do it yet, but I think @twksos's advice is good. Just put it outside of the Router, and you can use Redux to send signals of when / when not to display the component you want.. @privateOmega What's your use case / flow? I have an authentication check without keeping the component live. \nIt goes in my flow that first your check if a user is authenticated or not in a Home.js container (basically a splash screen), and then that container pushes you to the auth screen if you're not authenticated or to the main app if you are.. Issue resolved: put the component you want to never re-render on a scene change outside of the router.. ",
    "dhavrosh": "@lightninglu10  was it working OK? Cause when i put it outside of router, it appeared but the router started to work incorrectly (with pushing new scene design become broken). Thank you,\nIs here some way to not open modal on full screen?\nLike in version 3.* we have animationStyle, where I can set translateY of scenes. Okay, thank you!. ",
    "eemebarbe": "Having the same issue. @themarsguy exactly. I also logged something or in the constructor and that is also being called.. ",
    "hellomaya": "This time, redux or mobx will be useful addition, for example, if you are using mobx, then try to observer the item in your detail page, and change the item data at list, it will work just fine.. @Clowning \nAgree, as the component is managed to be unmounted by RN asynchronously, I saw this happened a lot, try use unmountScenes in your <Scene/>, could help, but not much.\n. I have used WebStorm 2016.3.3 version, and a lot component it can't resolve, even some of them I have build with same code but different name, it could be IDE bug, which I have googled, and know probably it is.. My idea, try make a tab icon and observe the state, when the state change, change the tab icon somehow, by using mobx, is pretty easy, by using redux, actually pretty much same thing, just different way. All of them will call render for tab icon.. Try 3.38.0, I have tried 3.37 and 3.38.1, both not working with latest react native. . @compojoom \nTry 3.40.1, it probably work, as it will not depend on react-native explicitly. . @compojoom \ngood to know it works, I really don't know why, but I got to have same problem, and tried 3.40.1 lately, from my reading, the code is much better compatible with latest react/react-native. I hope they will release soon.. the latest V3 in master branch do support it, it is 3.41.0. https://github.com/aksonov/react-native-router-flux/blob/master/package.json. I would say sorry because I am still in the opposite of V4, as I think V3 still the best.\n\nV3 provide consistency in navigation user experiences across device & system, which I would prefer to the most.\nYes, in V3 react-native-experimental-navigation is out of date a long time ago, but it still valid to maintain, even though V3 wasn't maintained any longer, I will try my best to maintain a fork copy of V3.\nV3 doc was not good enough? Indeed, it's not a problem, as we can get a slow start, but sooner or later we will figure out everything, it's good, for me it's not enough at begin, not now.\nV4 is pretty much necessary and I understand all of the purpose, but react-navigation is a big concern right now, as I am not ready to dive into it with production app.\n\nBy the way, @Rewieer, I have seen the same issue, and I make a bit change to achieve better transition among scenes in navigation, delayed the Animiated.timing in DefaultReducer, to render and finish the scene will go back and forth between javascript core and native code, if they both start same time, this could be a interference. Of cause, to keep major content view show-up only after it finished in Interaction Manager.\nAnyway, I still very supportive for the new version, but for now stick to the V3 instead. As I really like that consistency among different device. \n. ",
    "426-330": "+1. ",
    "kenvandemar": "I figured it out. Thanks to Redux, All I need is create another Action creator and then pass rowData to it, after that I dispatch action again to receive state back. \nIf you guys meet problem like this, you can contact me.. ",
    "ArcadeRenegade": "awesome. thank you so much I will give this a try!. out of curiosity, will this method work with animating the navbbar when the scene slides back out?. @aksonov i couldn't find it in the docs. i was at a loss of why selected prop wasn't working until i found this thread . ",
    "pedro-mass": "Looks like deleting react-native-router-flux's node_modules/ fixed it, but I did run it after installing and running react-native-git-upgrade.\nIs this something that has to be done after every clean install?. the master branch for react-native-router-flux?. ",
    "fbacker": "Same issue\n\"react\": \"15.5.4\",\n\"react-native\": \"0.44.0\",\n\"react-native-router-flux\": \"^3.38.1\",. ",
    "akinolu52": "same issue on v4\n\"react-native-router-flux\": \"^4.0.0-beta.32\",\n@aksonov any help?\nerror: bundling failed: Error: Unable to resolve module mobx-react/native from /Users/mac/madabox/node_modules/react-native-router-flux/dist/Router.js: Module mobx-react/native does not exist in the Haste module map\n. Yeah; That is what I used @colorfulberry. ",
    "yongmz": "\nsame issue on v4\n\"react-native-router-flux\": \"^4.0.0-beta.32\",\n@aksonov any help?\nerror: bundling failed: Error: Unable to resolve module mobx-react/native from /Users/mac/madabox/node_modules/react-native-router-flux/dist/Router.js: Module mobx-react/native does not exist in the Haste module map\n\nI have encountered the same problem, upgraded to version 4.0.5, the problem disappeared.. ",
    "Un3qual": "Same thing that @m-revetria mentioned at #1687. Yes. When I remove the mode_modules folder, it complains that it can't import packages:\nerror: bundling: Error: ENOENT: no such file or directory, open '/Users/admin/Desktop/Programming/RN/myAppV9/node_modules/react-native-router-flux/node_modules/react-native/Libraries/Components/AccessibilityInfo/AccessibilityInfo.ios.js'\n    at Object.fs.openSync (fs.js:583:18)\n    at Object.fs.readFileSync (fs.js:490:33)\n    at Module._readSourceCode (/Users/admin/Desktop/Programming/RN/myAppV9/node_modules/react-native/packager/src/node-haste/Module.js:200:29)\n    at Module._getCacheProps (/Users/admin/Desktop/Programming/RN/myAppV9/node_modules/react-native/packager/src/node-haste/Module.js:420:29)\n    at Module._readFromTransformCache (/Users/admin/Desktop/Programming/RN/myAppV9/node_modules/react-native/packager/src/node-haste/Module.js:376:29)\n    at Module.readCached (/Users/admin/Desktop/Programming/RN/myAppV9/node_modules/react-native/packager/src/node-haste/Module.js:363:25)\n    at Promise.resolve.then (/Users/admin/Desktop/Programming/RN/myAppV9/node_modules/react-native/packager/src/node-haste/DependencyGraph/ResolutionRequest.js:167:29)\n    at process._tickCallback (internal/process/next_tick.js:109:7)\nBundling `index.ios.js`  89.1% (1508/1598), failed.\nError: ENOENT: no such file or directory, open '/Users/admin/Desktop/Programming/RN/myAppV9/node_modules/react-native-router-flux/node_modules/react-native/Libraries/Components/AccessibilityInfo/AccessibilityInfo.ios.js'\n    at Object.fs.openSync (fs.js:583:18)\n    at Object.fs.readFileSync (fs.js:490:33)\n    at Module._readSourceCode (/Users/admin/Desktop/Programming/RN/myAppV9/node_modules/react-native/packager/src/node-haste/Module.js:200:29)\n    at Module._getCacheProps (/Users/admin/Desktop/Programming/RN/myAppV9/node_modules/react-native/packager/src/node-haste/Module.js:420:29)\n    at Module._readFromTransformCache (/Users/admin/Desktop/Programming/RN/myAppV9/node_modules/react-native/packager/src/node-haste/Module.js:376:29)\n    at Module.readCached (/Users/admin/Desktop/Programming/RN/myAppV9/node_modules/react-native/packager/src/node-haste/Module.js:363:25)\n    at Promise.resolve.then (/Users/admin/Desktop/Programming/RN/myAppV9/node_modules/react-native/packager/src/node-haste/DependencyGraph/ResolutionRequest.js:167:29)\n    at process._tickCallback (internal/process/next_tick.js:109:7)\nActually, I get that error message regardless of whether or not I remove myAppv9/node_modules/react-native-router-flux/node_modules.. ",
    "eyu0415": "+1. ",
    "georgberecz": "+1. ",
    "kokokenada": "+1. +1. ",
    "gtsbgogss": "+1. ",
    "hnq90": "+1\nSame problem.. @rodrigocipriani It's not duplicated.\nThe only correct solution is using previous version (3.38.0).... ",
    "rodrigocipriani": "1809 Duplicated. @hnq90 I wrote Duplicated because #1809 has the answer..",
    "corymayer": "1862 Uploaded a new PR that also relaxes the version requirement on react-native. Same error with ActivityIndicator on v0.39.1 (react-native 0.44.0 and react 16.0.0-alpha.6)\nUpdate: the only way I could get this module working again is to downgrade to react-native 0.43.0 and react-native-router-flux 0.38.0. ",
    "atmortensen": "You need to revert to 3.38.0\nhttps://github.com/aksonov/react-native-router-flux/issues/1816. ",
    "christopherread": "@atmortensen  Reverting to 3.38.0 generates a new error \n-- react-native-router-flux@3.38.0 \n    -- UNMET PEER DEPENDENCY react@^0.13.0 || ^0.14.0 || ^15.0.0\nI think this is because react-native-router-flux 3.38.0 depends on react-static-container 1.0.1 which depends on react ^0.13.0 || ^0.14.0 || ^15.0.0, but react-native 0.44.0 depends on react 16.0.0-alpha.6. I followed @ThiagoLottici solution in comment from issue #1811 in which he references #1710 as a workaround. This worked for me with version 3.38.0.. ",
    "gamingumar": "i am having the same issue :(. ",
    "buptkang": "I have the same issue, it is pain. . ",
    "Chandhru08": "im having the same problem :\n-- react-native-router-flux@3.38.0\n  +-- UNMET PEER DEPENDENCY react@^0.13.0 || ^0.14.0 || ^15.0.0-- react-native-experimental-navigation@0.26.12\n    `-- react-addons-pure-render-mixin@15.5.2\n\"dependencies\": {\n    \"firebase\": \"^3.9.0\",\n    \"react\": \"16.0.0-alpha.6\",\n    \"react-native\": \"0.44.0\",\n    \"react-native-router-flux\": \"^3.38.0\",\n    \"redux-thunk\": \"^2.2.0\"\n  }. I got it worked by following below steps.\n1.Remove the \"^\" symbol from dependencies in package.json.\nIt should be like this  \"react-native-router-flux\": \"3.38.0\"\n2. Install v 3.38.0.\nEven though some warning are thrown after this step, it is working for me.. @lastxtemplar have you installed react-native-router-flux 3.38.0 after removing \"^\" from dependencies?. @valerybodak  please find my complee JSON text below,\nnote: after installing react native router flux again the \"^\" symbol replaced automatically\n{\n  \"name\": \"manager\",\n  \"version\": \"0.0.1\",\n  \"private\": true,\n  \"scripts\": {\n    \"start\": \"node node_modules/react-native/local-cli/cli.js start\",\n    \"test\": \"jest\"\n  },\n  \"dependencies\": {\n    \"firebase\": \"^3.9.0\",\n    \"react\": \"16.0.0-alpha.6\",\n    \"react-native\": \"0.44.0\",\n    \"react-native-router-flux\": \"^3.38.0\",\n    \"redux-thunk\": \"^2.2.0\"\n  },\n  \"devDependencies\": {\n    \"babel-jest\": \"19.0.0\",\n    \"babel-preset-react-native\": \"1.9.1\",\n    \"eslint-config-rallycoding\": \"^3.2.0\",\n    \"jest\": \"19.0.2\",\n    \"react-test-renderer\": \"16.0.0-alpha.6\"\n  },\n  \"jest\": {\n    \"preset\": \"react-native\"\n  }\n}\nI have removed \"^\"  before installing react native router flux.\nTo install specific version-> npm install --save react-native-router-flux@3.38.0\n(some warnings may occur... ignore those\nIf you run android application after installing this, it will work. ",
    "DavideValdo": "+1. ",
    "LastxTemplar": "I am experiencing the same problem. Strangely enough the same project works on my Mac with run-ios, but after bringing the project to my PC and running run-android I started getting this issue. \nHere is my package.json:\n\"dependencies\": {\n    \"firebase\": \"^3.9.0\",\n    \"react\": \"16.0.0-alpha.6\",\n    \"react-native\": \"0.44.0\",\n    \"react-native-router-flux\": \"3.38.0\",\n    \"react-redux\": \"^5.0.4\",\n    \"redux\": \"^3.6.0\",\n    \"redux-thunk\": \"^2.2.0\"\n  },. ",
    "cesarmal": "Take a look at https://github.com/facebook/react-native/issues/13758. Particularly at the commentaries from @rkbhochalya and @mattdufeu. Check if you have other projects running (or were running on the same session - because rebooting solved for me). . ",
    "rkbhochalya": "Try clearing cache https://gist.github.com/jmoses89/c2e4786fd342b3444f3bc6beff32098d. If you have yarn installed this would be much faster watchman watch-del-all && rm -rf node_modules/ && npm cache clean && yarn install && npm start -- --reset-cache. ",
    "MasseElch": "I needed to restart my Mac and to run the commands provided by @rkbhochalya and now its working with the following deps in my package.json:\n\"dependencies\": {\n    \"react\": \"16.0.0-alpha.6\",\n    \"react-native\": \"0.44.0\",\n    \"react-native-router-flux\": \"^3.38.1\"\n}. @rahmanazhar have you tried deleting the yarn.lock before running yarn install? Or running npm iinstead?. ",
    "jsRuner": "the same question . it not work when i try above method.   first project is work but other is not work. it  work after i restart pc;  . ",
    "rahmanazhar": "i have done @Chandhru08 and @rkbhochalya steps. It is not working. I am working on windows. \nInstead this command\nwatchman watch-del-all && rm -rf node_modules/ && npm cache clean && yarn install && npm start -- --reset-cache\nI do \nrd /s /q node_modules && npm cache clean && yarn install && npm start -- --reset-cache\nThe error is still no dimension is set for key window. I wonder why.\nMy package.json as below.\n{\n    \"react\": \"16.0.0-alpha.6\",\n    \"react-native\": \"0.44.0\",\n    \"react-native-router-flux\": \"^3.38.0\",\n    \"react-redux\": \"^5.0.1\",\n    \"realm\": \"^0.15.4\",\n    \"redux\": \"^3.6.0\",\n    \"redux-persist\": \"^4.0.0-alpha7\",\n    \"redux-thunk\": \"^2.1.0\",\n }. ",
    "jpca999": "I keep getting this issue too, here's my package file. \n\n[{\n  \"name\": \"manager\",\n  \"version\": \"0.0.1\",\n  \"private\": true,\n  \"scripts\": {\n    \"start\": \"node node_modules/react-native/local-cli/cli.js start\",\n    \"test\": \"jest\"\n  },\n  \"dependencies\": {\n    \"firebase\": \"^3.9.0\",\n    \"react\": \"16.0.0-alpha.6\",\n    \"react-native\": \"0.44.0\",\n    \"react-native-router-flux\": \"^3.38.0\",\n    \"react-redux\": \"^5.0.4\",\n    \"redux\": \"^3.6.0\",\n    \"redux-thunk\": \"^2.2.0\"\n  },\n  \"devDependencies\": {\n    \"babel-jest\": \"19.0.0\",\n    \"babel-preset-react-native\": \"1.9.1\",\n    \"jest\": \"19.0.2\",\n    \"react-test-renderer\": \"16.0.0-alpha.6\"\n  },\n  \"jest\": {\n    \"preset\": \"react-native\"\n  }\n}\n](url). @wvicioso \nHere's my updated package. \n{\n  \"name\": \"manager\",\n  \"version\": \"0.0.1\",\n  \"private\": true,\n  \"scripts\": {\n    \"start\": \"node node_modules/react-native/local-cli/cli.js start\",\n    \"test\": \"jest\"\n  },\n  \"dependencies\": {\n    \"firebase\": \"^3.9.0\",\n    \"react\": \"16.0.0-alpha.6\",\n    \"react-native\": \"0.44.0\",\n    \"react-native-router-flux\": \"3.37.0\",\n    \"react-redux\": \"^5.0.4\",\n    \"redux\": \"^3.6.0\",\n    \"redux-thunk\": \"^2.2.0\"\n  },\n  \"devDependencies\": {\n    \"babel-jest\": \"19.0.0\",\n    \"babel-preset-react-native\": \"1.9.1\",\n    \"jest\": \"19.0.2\",\n    \"react-test-renderer\": \"16.0.0-alpha.6\"\n  },\n  \"jest\": {\n    \"preset\": \"react-native\"\n  }\n}\nNow the app doesnt even open on simulator. \n. \"Make sure you close the all processes including the packager\"\nPackager means all terminal processes - right ?\nI quit the whole terminal.  \nthis I hit cmd q \n\n. hmm i do delete the whole node modules folder, & then npm i \nI'm running on ios. \nThanks: ) \nHere's the error: \n\n{\n  \"name\": \"manager\",\n  \"version\": \"0.0.1\",\n  \"private\": true,\n  \"scripts\": {\n    \"start\": \"node node_modules/react-native/local-cli/cli.js start\",\n    \"test\": \"jest\"\n  },\n  \"dependencies\": {\n    \"firebase\": \"^3.9.0\",\n    \"react\": \"16.0.0-alpha.6\",\n    \"react-native\": \"0.44.0\",\n    \"react-native-router-flux\": \"3.37.0\",\n    \"react-redux\": \"^5.0.4\",\n    \"redux\": \"^3.6.0\",\n    \"redux-thunk\": \"^2.2.0\"\n  },\n  \"devDependencies\": {\n    \"babel-jest\": \"19.0.0\",\n    \"babel-preset-react-native\": \"1.9.1\",\n    \"jest\": \"19.0.2\",\n    \"react-test-renderer\": \"16.0.0-alpha.6\"\n  },\n  \"jest\": {\n    \"preset\": \"react-native\"\n  }\n}\nthe app wouldnt even open,  after i click it , it just closes in 2 seconds. \n\n\n. It's a package issue not my code issue . Give me a pcakcage file that works for other people... . @wvicioso. resolved here https://github.com/aksonov/react-native-router-flux/issues/1816\n\"react\": \"16.0.0-alpha.6\",\n    \"react-addons-pure-render-mixin\": \"15.5.2\",\n    \"react-native\": \"0.43.3\",\n    \"react-native-router-flux\": \"3.38.0\",\n    \"react-static-container\": \"^1.0.1\",. Resolved, just try changing the versions\n\nOn May 10, 2017, at 7:59 PM, Diego Rodrigues Vieira notifications@github.com wrote:\n+1\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n. How's it working out ? \nOn May 12, 2017, at 8:43 AM, Diego Rodrigues Vieira notifications@github.com wrote:\nIt seems to me that this project is not being maintained, I am now using react-navigation...\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n. \n",
    "tibbus": "I had this issue on a clean react-native project, I don't even use flux.\nIt happened when I switch to another react-native project and back. I fixed by killing emulator, terminal, Xcode, remove node_modules and it worked.. ",
    "Ethan0007": "The same issue.\n\nI'm configuring now our IOS Platform, unfortunately I'm encountering with this issue. . @airman00  yes sir, if you're configuring IOS please set your Dimensions.get('window'); instead of Dimensions.get('screen');. make sure that you replace them all. then try to npm start --reset-cache. replace Dimensions.get('screen') with Dimensions.get('window') if you are configuring IOS.. ",
    "airman00": "@Ethan0007 : any luck fixing it? I'm stuck on the same issue , tried everything suggested. Himm I tried replacing all Dimensions.get('window') with Dimensions.get('screen'), now I just get this error\nNo dimension set for key screen', reason: 'Unhandled JS Exception: No dimension set for key screen\nI also tried replacing all Dimensions.get('screen') were Dimensions.get('window') and that just gets you\nNo dimension set for key screen', reason: 'Unhandled JS Exception: No dimension set for key screen\nAny ideas what to try next?. Sorry, to be clear - you replaced all  Dimensions.get('window') with Dimensions.get('screen')  for your solution?\nOr you replaced all  Dimensions.get('screen') with Dimensions.get('window')  for your solution?. ",
    "mackenziemance": "@KunwarSingh Did you find a way to accomplish this ?. @mcabs3 Any updates on popAndPush implementation, thanks in advance.. My mistake, nesting redux connects was the source of this issue. Thanks @aksonov.\n  . Yepp I reproduced, Actions.replace() seems to be broken with beta.28. ",
    "jan4984": "make a global place to keep the component instance. do set in mount and unset in unmount.. ",
    "MaximusBaton": "you should use redux and this example. ",
    "SunflowerGJ": "@jasan-s Yes, I did it ! . ",
    "svallen": "Is there an ETA on an updated so that we don't have to downgrade?. Any update on how to get this fixed with an override of some sort?. I tried this outside and inside the Router structure but that didn't work.\nStill not able to get the statusbar color to update. Always stays black.. After using Expo/Snack I finally determined that it is not a router-flux issue. It was the use of NativeBase's Header component that is overriding the statusbar theme.  . ",
    "D1no": "I ran into the same problem today!! needed to force fix to v3.38.0. Please fix. Has the situation improved since? We are in the situation to drop RNRF v3 because RN 49 uses react 16, which has no more the depreciated prop-types. Hence, react-native-router-flux v3 wont compile.\nNow we have to update / switch. I looked into V4 and as it seems, conditional tab hiding does not work. That is a blocker for us. From the migration guide this issue still persists.\nWe would love to stay with RNRF because of the native redux integration; but are now evaluating to switch to https://github.com/wix/react-native-navigation due to 0 confidence into the proper maintenance of react-navigation. On the other hand, react-native-navigation is in a \"do it yourself\" redux state and in the middle of v2.\nAny advise? . Thanks @stereodenis \u2014 the progress looks promising. Two things I still worry about:\n- Has the performance problems on android been addressed lately?\n- Is the problem with tabBarHiding solved? See Migration Guide\n\nMigration Guide from RNRF V3 to V4\nNo support for partial hiding of tab bar for some tabs because of react navigation bug (react navigation issue): https://github.com/react-community/react-navigation/issues/1584\n\nThat is not very eminent to see from the contribution pulse. All this would be easier of course, if RNRF would support other navigator engines \u2014 such as wix/react-native-navigation.. ",
    "MrChe": "@dittmarconsulting  you have full preview example? This solution its very good for me but i need see full example if its possible! Thank you). Soultion\n<Scene key=\"tabs\" tabs hideNavBar >\n      <Scene key=\"home_tab\" title=\"home\" icon={TabIcon} schema=\"tab\" hideNavBar >\n        <Scene key=\"home\" component={Home} />\n      </Scene>\n      <Scene key=\"fileExplorer_tab\" title=\"fileExplorer\" icon={TabIcon} schema=\"tab\" hideNavBar initial >\n        <Scene key=\"fileExplorer\" component={FileExplorer} />\n      </Scene>\n      <Scene key=\"mediaView_tab\" title=\"mediaView\" icon={TabIcon} schema=\"tab\" hideNavBar >\n        <Scene key=\"mediaView\" component={MediaView} />\n      </Scene>\n      <Scene key=\"settings_tab\" title=\"settings\" icon={TabIcon} schema=\"tab\" hideNavBar >\n        <Scene key=\"settings\" component={Settings} initial />\n        <Scene key=\"account\" component={Account} />\n        <Scene key=\"passwordChange\" component={PasswordChange} />\n        <Scene key=\"apps\" component={Apps} />\n        <Scene key=\"appDetail\" component={AppDetail} />\n        <Scene key=\"device\" component={Device} />\n        <Scene key=\"backup\" component={Backup} />\n        <Scene key=\"about\" component={About} />\n        <Scene key=\"users\" component={Users} />\n      </Scene>\n    </Scene>\nclose this issue. ",
    "DailyIncome": "Have any good news for this issue?. ",
    "brunsy": "@kesha-antonov has already created a PR for this: https://github.com/aksonov/react-native-router-flux/pull/1819. @diogoarm Why was this closed?. ",
    "beastwinside": "so am I,I guess the react-native 0.44 has conflict with react-native-router-flux,for i saw a demo used r-n-r-f with  0.38 version of  the react-native run well.. 0.42version\uff0c rectify. my version of react-native is 0.44,has the same problem as yours.\nthe rn version has conflict with the rnrf version,I suggest u rollback the rn version to 0.42 . a fool way to hack it,\nsee my js,the scene called \u2018noback\u2019\uff1b\nhttps://github.com/beastwinside/DUHAPP/blob/master/meituan/src/RootScene.js. ",
    "ruler47": "Still got the problem.\nreact-native-router-flux: 3.39.1\nreact-native: 0.44\nreact: 16.0.0-alpha.6. ",
    "kishorekanala-innoplexus": "I also have the same issue. I tried downgrading the version but still getting the same error.. ",
    "hama": "me too. ",
    "AviramCohen": "I also have this. And that's after downgrading from 3.38.1 to 3.38.0 cause of other error. ",
    "marcoj": "+1. @aksonov if ReactNavigation is hard to improve (because of slow PR merge and all) isn't that going to be a problem for v4?. Well I'm implementing the react-native-router-flux on a project right now and I'm keeping v3 for now. I tried V4 and it broke the whole thing.\nI think I'll wait a bit for v4 to be a bit more mature and then I'll give it another go.\nMeanwhile I'll create a side project to play around with v4 and see if I can be helpful in any way.. Same issue... \nhad a project implemented 3 days ago, navigation was working perfectly.\nMeanwhile had to install react-native-router-flux again (yesterday), and with the new version it doesn't work. \nI'm sure it's something related to  Dec 19, 2017 or  Dec 20, 2017 commits.\nSo, I've cloned react-native-router-flux again, tested the example and confirmed that I can't navigate to any scene inside the Drawer.\nPlease fix.. same here, just updated to 4.0.1. ",
    "ddereszewski": "On version 0.39.1 and react-native 0.44.0\nLoading dependency graph, done.\nerror: bundling: Error: ENOENT: no such file or directory, open '/Users/dawid/Sites/TennisApp/node_modules/react-native-router-flux/node_modules/react-native/Libraries/Utilities/BackAndroid.android.js'. Running packager like that resolves problem for me\nreact-native start --reset-cache --verbose\nVerbose just to see what is happening\n. \nSame happens with the image on android \nSettings \n<Scene key='player' component={PlayerScreen} rightButtonImage={require('../Images/Icons/message-icon-btn.png')}  back={true} />. ",
    "FMGordillo": "+1. If you mean npm cache clear then yes, i've done that.\nAlso I've deleted all the content where I installed all the npm install --global just in case.. I recall deleting the yarn-lock file, but seems that now it worked!\nDunno.. but... thanks!\nWe can close now. ",
    "adamnator92": "@ddereszewski life saver. ",
    "Liqiankun": "@ddereszewski  You saved my ass!\n. ",
    "renanalvesdev": "@ddereszewski Thanks ! . ",
    "stephenjen": "Our design call for immersive mode without the soft buttons and navigation bar, so, luckily we don't have to deal with this problem.  . ",
    "OlivierFortin": "I have the same exception, the error append when I slide up or down on the screen/simulator.\n\nreact-native-router-flux 3.38.1\nreact-native v0.44.0. Just found that this function was removed on Feb 14 in react-native. here\n\nAnd the function was moved to another class .\n. Just fix the problem by upgrading dependency of react-native-router-flux in package.json\nWith \n\"dependencies\": {\n    \"lodash.isequal\": \"^4.5.0\",\n    \"react\": \"^16.0.0-alpha.12\",\n    \"react-addons-pure-render-mixin\": \"^15.4.2\",\n    \"react-dom\": \"^15.4.2\",\n    \"react-native\": \"^0.44.0\",\n    \"react-native-experimental-navigation\": \"0.26.x\",\n    \"react-native-tabs\": \"^1.0.9\",\n    \"react-static-container\": \"1.0.1\"\n  },\nAnd I do a npm install in the ./node_modules/react-native-router-flux folder.\n. @rzhaider86 It's because BackAndroid is deprecated in react-native 0.44.\nCheck in your code if you use BackAndroid.\nTo remove it from react-native-router-flux you can check the  fork I did the last two commit will remove any reference to BackAndroid. \n. ",
    "imalik8088": "Same here\n.....\n\"native-base\": \"^2.1.3\",\n\"react\": \"16.0.0-alpha.6\",\n\"react-dom\": \"^15.5.4\",\n\"react-native\": \"0.44.0\",\n\"react-native-router-flux\": \"^3.38.1\",\n\"react-native-simple-store\": \"^1.2.0\",\n\"react-native-vector-icons\": \"^4.1.1\",\n..... Same here\n\nverision\n\"react-native\": \"0.44.0\",\n    \"react-native-router-flux\": \"^3.38.1\",\n    \"react-native-simple-store\": \"^1.2.0\",\n    \"react-native-vector-icons\": \"^4.1.1\",\nshell output\n```\nThis warning is caused by a @providesModule declaration with the same name across two different files.\nLoading dependency graph, done.\nwarning: the transform cache was reset.\nbundle: start\nbundle: finish\nbundle: Writing bundle output to: /Users/imalik/code/IdeaProjects/..../android/app/build/intermediates/assets/release/index.android.bundle\nbundle: Copying 12 asset files\nbundle: Done writing bundle output\nbundle: Done copying assets\n:app:processReleaseManifest UP-TO-DATE\n:app:processReleaseResources\n/Users/imalik/code/IdeaProjects/..../android/app/build/intermediates/res/merged/release/drawable-mdpi/node_modules_reactnativerouterflux_node_modules_reactnative_libraries_customcomponents_navigationexperimental_assets_backicon.png: error: Invalid filename.  Unable to add.\n:app:processReleaseResources FAILED\nFAILURE: Build failed with an exception.\n\nWhat went wrong:\nExecution failed for task ':app:processReleaseResources'.\ncom.android.ide.common.process.ProcessException: Failed to execute aapt\n```. Does this have to do something with maximum byte number?\nsee: https://github.com/aksonov/react-native-experimental-navigation/issues/1#issuecomment-301360042. \n\n\n",
    "rishimukherjee": "Same here. \n\nreact-native-router-flux 3.38.0\nreact-native v0.44.0. \n",
    "nidheesh-p": "same here\n\"react\": \"16.0.0-alpha.6\",\n\"react-native\": \"0.44.0\",\n\"react-native-router-flux\": \"^3.38.0\",. ",
    "rzhaider86": "Thanks for the responses.\n@danibal I tried to do what you suggested and updated package.json dependencies under ./node_modules/react-native-router-flux however I am getting new errors when I start up my app.\nWhen I run 'react-native run-ios', I get a bunch of warnings such as the following:\nThis warning is caused by a @providesModule declaration with the same name across two different files.\njest-haste-map: @providesModule naming collision:\n  Duplicate module name: react-native\n  Paths: /Users/user/Development/myApp/node_modules/react-native-router-flux/node_modules/react-native/package.json collides with /Users/user/Development/myApp/node_modules/react-native/package.json\nEventually I get this error:\nThis warning is caused by a @providesModule declaration with the same name across two different files.\nLoading dependency graph, done.\nerror: bundling: Error: ENOENT: no such file or directory, open '/Users/user/Development/myApp/node_modules/react-native-router-flux/node_modules/react-native/Libraries/Utilities/BackAndroid.ios.js'\n    at Error (native)\n    at Object.fs.openSync (fs.js:634:18)\n    at Object.fs.readFileSync (fs.js:502:33)\n    at Module._readSourceCode (/Users/user/Development/myApp/node_modules/react-native/packager/src/node-haste/Module.js:200:29)\n    at Module._getCacheProps (/Users/user/Development/myApp/node_modules/react-native/packager/src/node-haste/Module.js:420:29)\n    at Module._readFromTransformCache (/Users/user/Development/myApp/node_modules/react-native/packager/src/node-haste/Module.js:376:29)\n    at Module.readCached (/Users/user/Development/myApp/node_modules/react-native/packager/src/node-haste/Module.js:363:25)\n    at Promise.resolve.then (/Users/user/Development/myApp/node_modules/react-native/packager/src/node-haste/DependencyGraph/ResolutionRequest.js:167:29)\n    at process._tickCallback (internal/process/next_tick.js:103:7)\nBundling index.ios.js  99.6% (541/542), failed.\nError: ENOENT: no such file or directory, open '/Users/user/Development/myApp/node_modules/react-native-router-flux/node_modules/react-native/Libraries/Utilities/BackAndroid.ios.js'\n    at Error (native)\n    at Object.fs.openSync (fs.js:634:18)\n    at Object.fs.readFileSync (fs.js:502:33)\n    at Module._readSourceCode (/Users/user/Development/myApp/node_modules/react-native/packager/src/node-haste/Module.js:200:29)\n    at Module._getCacheProps (/Users/user/Development/myApp/node_modules/react-native/packager/src/node-haste/Module.js:420:29)\n    at Module._readFromTransformCache (/Users/user/Development/myApp/node_modules/react-native/packager/src/node-haste/Module.js:376:29)\n    at Module.readCached (/Users/user/Development/myApp/node_modules/react-native/packager/src/node-haste/Module.js:363:25)\n    at Promise.resolve.then (/Users/user/Development/myApp/node_modules/react-native/packager/src/node-haste/DependencyGraph/ResolutionRequest.js:167:29)\n    at process._tickCallback (internal/process/next_tick.js:103:7)\n. Thanks a lot @danibal for your responses.\nI got it to work. I had to reboot my laptop and it solved the problem i was having. Maybe I needed to clear the cache for my ios simulator? . ",
    "JulioOrellana": "Need to know aswell. Just fixed it. Any clue about why is this happening?. @aksonov can you help me in here? have been a while since no one answers, this behavior only happens on Android. Have you tried Actions.(yourScreenName)({ type: ActionsConst.REPLACE })\nYou must import { Actions, ActionsConst } from 'react-native-router-flux'\ni.e: Actions.home({ type: ActionsConst.REPLACE }). Hello, I am so sorry, it is ActionConst, not ActionsConst (mind the \"s\")\n\n. What's your version of RNRF? if it is beta.28, change it for beta.27.\nnpm uninstall --save react-native-router-flux\nnpm install --save react-native-router-flux@4.0.0-beta.27. Then, try Actions.replace(\"main\"). you can place duration in <Router duration={50}>. @nica0012 you must place your Scenes inside your drawer\n```\n\n      <Drawer\n        hideNavBar\n        key=\"drawer\"\n        contentComponent={DrawerContent}\n        drawerImage={MenuIcon}\n        drawerWidth={300}\n      >\n        <Scene\n          key=\"StringListList\"\n          component={StringList}\n          renderTitle={() => { return <AppLogo />; }}\n          panHandlers={null}\n          navigationBarStyle={styles.stringListNav}\n        />\n      <Scene\n            key=\"StringDetails\"\n            component={StringDetail}\n            title=\"Specs\"\n            navigationBarStyle={styles.stringListNav}\n        />\n        <Scene\n            key=\"adjustScale\"\n            component={AdjustScale}\n            title=\"String Adjustment\"\n        />\n        <Scene\n            key=\"themes\"\n            component={Themes}\n            title=\"Themes\"\n            backTitle=' '\n        />\n      </Drawer>\n\n\n```. ",
    "tgaff2x": "I seem to have the same issue.. ",
    "Ledbelly2142": "I have the same issue.. ",
    "danqing-jin": "Same on Mac with react-native-router-flux 3.39.1.. ",
    "ezha86": "can confirm it. all scenes do re rendering while clicking between tabs.\nadded: working this way without or with \"Switch\".  i had to downgrade router-flux for now. my deps:\n      \"react\": \"16.0.0-alpha.3\",\n      \"react-native\": \"0.43.3\",\n     \"react-native-router-flux\": \"3.37.0\".\nworks for me. ",
    "chenqiang1121": "@mbenjamin618   thank you , you are right!. ",
    "redhelix": "+1. ",
    "atljoseph": "question was asked...issue was closed...no data on solution for original issue... useless forum. @aksonov the guy asked a question and did not get a commensurate response. If you take the time to answer a question, do it fully please.. ",
    "ac1dr3d": "https://gist.github.com/yanqiw/31aaa7502b74a51c3467d080409257ab\nwill try this.. ",
    "caiokf": "@Dani93380 Thank you for your answer, but this works only coming from a different route. If I am already at a Product scene, no animation happens.. ",
    "rodolph66": "Prior to the last update, which resolved the 'BackAndroid replace with BackHandler' warning, the react-native-router-flux worked properly, now it doesn't and my case seems identical to the above mentioned reset issue.\nUsing same versions as above.. ",
    "xiongcaichang": "\n. ",
    "ebaynaud": "We definitely need to merge that one for 3.39.2.. So many thanks. Any proper fix somewhere to this issue? I mean not modifying node_modules manually?. @CptFabulouso could you please explain how did you find the origin of the issue? After renaming TabRouter to tabRouter I still get the r.default issue...\nimport tabRouter from '../routers/TabRouter';\nconst contentRouter = tabRouter(routeConfigs, tabsConfig);\nAlso tried to do that in all other Navigators without success...\nIf you explain how you did find the issue, I may be able to find what's still wrong.\nStill getting for now: ReactNativeJS: undefined is not an object (evaluating 'r.default'). Ok got it working now, only doing what you suggested editing these 3 lines in node_modules/react-navigation/src/navigators/DrawerNavigator.js:\nimport tabRouter from '../routers/TabRouter';\n  const contentRouter = tabRouter(routeConfigs, tabsConfig);\n  const drawerRouter = tabRouter(. Would be great to find the route cause and fix it because now the only (not so) clean solution I found is:\n- forking react-navigation\n- commiting modifications in DrawerNavigator react-navigation in 1.x branch\n- add this to my package.json:\n\"resolutions\": {\n    \"react-native-router-flux/**/react-navigation\": \"https://github.com/ebaynaud/react-navigation.git#1.x\"\n  },\nHad also submit a PR on react-navigation: https://github.com/react-navigation/react-navigation/pull/4699. Initially that was the one specified in current RNRF dependencies, so 1.5.8.\nNow I forked the last one in react-navigation 1.x branch (latest release is 1.5.11) and performed the modifications in my fork: https://github.com/ebaynaud/react-navigation.git#1.x. Unfortunately my PR https://github.com/react-navigation/react-navigation/pull/4699 was rejected due to the lack of information provided. Do someone can explain this?. @aksonov still getting this error when running examples/react-native on ios with 4.0.6. ",
    "tareq0065": "Thank you, buddy, that you replied.\nI also posted it on StackOverflow (). But I have solved it by removing all componentDidMount from all of my js files for now. I have attached all of the class codes on the URL I attached. Also attaching here below.\nApp.js\n`   import React, { Component } from 'react';\n    import {\n             View,\n             Text,\n             StyleSheet,\n             AsyncStorage,\n          } from 'react-native';\n import Login from './components/Login'\n import Register from './components/Register'\n import Home from './components/Home'\n import { Scene, Router, TabBar, Modal, Schema, Actions, Reducer, ActionConst } from 'react-native-router-flux'\n\nconst reducerCreate = params=>{\n    const defaultReducer = Reducer(params);\n    return (state, action)=>{\n        console.log(\"ACTION:\", action);\n        return defaultReducer(state, action);\n    }\n};\n\nexport default class App extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n            logged: false,\n            loading: true,\n        };\n    };\n\n    componentWillMount(){\n        self = this;\n        AsyncStorage.getItem('token')\n        .then( (value) =>{\n            if (value != null){\n                this.setState({\n                    logged: true,\n                    loading: false,\n                });\n            }\n            else {\n                this.setState({\n                    loading: false,\n                })\n            }\n        });\n    };\n\n    render() {\n        if (this.state.loading) {\n            return <View><Text>Loading</Text></View>;\n        }\n        return (\n            <Router>\n                <Scene hideNavBar={true} key=\"root\">\n                    <Scene key=\"logIn\" component={Login} title=\"Login\" initial={!this.state.logged}/>\n                    <Scene key=\"regisTer\" component={Register} title=\"Register\"/>\n                    <Scene key=\"home\" component={Home} title=\"home\"  initial={this.state.logged}/>\n                </Scene>\n            </Router>\n        )\n    }\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n    },\n});`\n\nLogin.js\n` \n        / @flow /\nimport React, { Component } from 'react';\n\nimport {\n    View,\n    StyleSheet,\n    Image,\n    ScrollView,\n    TextInput,\n    Text,\n    TouchableHighlight,\n    Alert,\n} from 'react-native';\nimport { Container, Content, InputGroup, Input, Icon, Item } from 'native-base';\nimport Button from 'react-native-button'\nimport {Actions} from 'react-native-router-flux'\nimport ResponsiveImage from 'react-native-responsive-image'\n\nexport default class Login extends Component {\n\n    constructor(props){\n        super(props)\n        this.state = {\n            email: '',\n            password: '',\n            data: '',\n        }\n    }\n\n    fetchData() {\n        fetch('http://allstariq.tbltechnerds.com/api/login/?username=andress&password=23434')\n        .then((response) => response.json())\n        .then((responseData) => {\n            this.setState({\n                data: responseData.movies,\n            });\n        })\n        .done();\n    }\n\n    render() {\n        return (\n            <View style={styles.container}>\n\n            <ScrollView>\n\n                <View style={ styles.logoContainer }>\n\n                    <View style={{flexDirection: 'row',}}>\n                        <ResponsiveImage\n                        source={require('../assets/logo.png')}\n                        initWidth=\"300\"\n                        initHeight=\"160\" />\n                    </View>\n\n                </View>\n\n                <View style={ styles.formContainer }>\n                    <Item>\n                        <Icon active name='mail' />\n                        <Input\n                            onChangeText={(text) => this.setState({email: text})}\n                            value={this.state.email}\n                            placeholder='Email'/>\n                    </Item>\n\n                    <Item>\n                        <Icon active name='key' />\n                        <Input\n                            onChangeText={(text) => this.setState({password: text})}\n                            value={this.state.password}\n                            placeholder='Password'/>\n                    </Item>\n                    <TouchableHighlight\n                        style={ styles.loginButton }\n                        onPress={ () => this.fetchData() }>\n                        <Text style={ styles.btnText}>Login</Text>\n                    </TouchableHighlight>\n                </View>\n\n                <View style={ styles.bottomContainer }>\n                    <Text style={ styles.cenText }>Dont worry if you haven't an account yet . . </Text>\n                    <Text\n                    style={ styles.blueText}\n                    onPress={ Actions.regisTer }\n                    >Register Now</Text>\n                </View>\n\n            </ScrollView>\n\n            </View>\n        );\n    }\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n    },\n    logoContainer: {\n        flex: .5,\n        padding: 10,\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    logoItem: {\n        width: null,\n        height: null,\n        resizeMode: 'cover',\n    },\n    formContainer: {\n        flex: 4,\n        padding: 10,\n    },\n    inputelm: {\n        marginBottom: 10,\n        backgroundColor: '#999',\n        borderWidth: 0,\n        fontSize: 20,\n        color: '#FFF',\n        fontFamily: 'AmaticSC-Bold',\n    },\n    loginButton: {\n        borderRadius: 3,\n        marginBottom: 20,\n        marginTop: 20,\n        paddingLeft: 10,\n        paddingRight: 10,\n        backgroundColor: '#2196f3',\n        elevation: 4,\n    },\n    signupButton: {\n        borderRadius: 3,\n        marginBottom: 20,\n        marginTop: 20,\n        paddingLeft: 10,\n        paddingRight: 10,\n        backgroundColor: '#7cb342',\n        elevation: 4,\n    },\n    btnText: {\n        textAlign: 'center',\n        color: '#FFF',\n        fontSize: 30,\n        lineHeight: 40,\n    },\n    blueText: {\n        textAlign: 'center',\n        color: '#2196f3',\n        fontSize: 20,\n        lineHeight: 40,\n    },\n    bottomContainer: {\n        flex: 1,\n        padding: 10,\n    },\n    cenText: {\n        textAlign: 'center',\n        fontSize: 16,\n    },\n});`\n\n. ",
    "BipinBhandari": "me too!\n\"react\": \"16.0.0-alpha.6\",\n\"react-native\": \"0.44.0\",\n\"react-native-router-flux\": \"3.39.1\",.\n",
    "jchesne": "I have the same problem.\n\"react\": \"16.0.0-alpha.6\",\n\"react-native\": \"0.44.0\",\n\"react-native-router-flux\": \"3.38.0\"\n. ",
    "minsooshin": "I have the same issue.\njson\n\"react\": \"16.0.0-alpha.6\",\n\"react-native\": \"0.44.2\",\n\"react-native-router-flux\": \"^3.39.1\",. I just tried with removing node_modules. It still doesn't work and have same error message.. ",
    "wzy911229": "today,I removed the node_modules directory and run npm install again . it works!. ",
    "iit2008047": "i have the same error, Removed node_module and ran npm i, still same issue, pease help\n. ",
    "felipesousa": "SAME ISSUE! </3. ",
    "rajit": "In my case I fixed this issue by deleting $TMPDIR/haste-map-react-native-package-*.. ",
    "lfallet": "react-native-router-flux explicitly references react-native v0.44.0 (instead of a more tolerant0.44.x or ^0.44.0)\nTherefore it can't live along newer versions of react-native from 0.44.1 to 0.44.3.\nYou need to add a resolution in your package.json\n\"resolutions\": {\n    \"**/react-native\": \"0.44.3\"\n  },\n. ",
    "konstantin-mohin": "have a similar problem...\n.  as friends suggested to me, so you need do this \n```\nimport { \n    InteractionsManager\n} from 'react-native'\ncomponentDidMount() {\n  InteractionManager.runAfterInteractions(() => {\n    this.setState({ ready: true })\n  })\n}\n```. same,\nI have no the DrawerNavigator.js file.. ",
    "maxaleks": "@konstantin-mohin, thanks for the reply. I will try this solution. ",
    "tiaanduplessis": "@konstantin-mohin worked great for me thanks. ",
    "skyrbe": "I am facing the same issue when I try to use BackHandler . Any ideas where I should be putting the BackHandler event listener. My code currently looks like this\n`\nimport React from 'react';\nimport { Actions, Scene, ActionConst } from 'react-native-router-flux';\n// Consts and Libs\nimport { AppConfig } from '@constants/';\n// Components\nimport Drawer from '@containers/ui/DrawerContainer';\n// Scenes\nimport AppLaunch from '@containers/Launch/LaunchContainer';\nimport AuthScenes from './auth';\nimport TabsScenes from './tabs';\nimport HomeContainer from '@containers/Home/HomeContainer';\nimport {\n  StyleSheet,\n} from 'react-native';\n/ Styles ==================================================================== /\nconst styles = StyleSheet.create({\n  navBarTitle: {\n    textAlign:'left'\n  }\n});\n/ Routes ==================================================================== /\nexport default Actions.create(\n  \n\n{/* Auth */}\n{AuthScenes}\n\n{/* Main App */}\n<Scene key={'app'} {...AppConfig.navbarProps} title={AppConfig.appName} hideNavBar={false} type={ActionConst.RESET}>\n  {/* Drawer Side Menu */ }\n  <Scene key={'home'} component={Drawer} initial={'tabBar'}>\n    {/* Tabbar */}\n    {TabsScenes}\n  </Scene>\n</Scene>\n\n\n);\n`\n. ",
    "nilliu": "+1. ",
    "SuperKareem": "+1. ",
    "sdotson": "+1. ",
    "ReactDevBeginner": "Hello everyone\nPlease I use native base, I want to skip the line after \"Analyst\", I used the code above.\nTo jump the line I used: {'\\ n'} between the two lines.\nThe problem is that I can not change the margin between the text?\n\n\nThanks\n. ",
    "menthena": "The issue is resolved by just upgrading Xcode to version 8 (iOS10).. ",
    "Kennytian": "same issue +1. same issue other guys https://github.com/facebook/react-native/issues/14209. Good news, I love you!!. ",
    "arabscimitar": "same issue on android . ",
    "Irosshipaz": "Very same on Android, and it doesn't let me continue a paid course...\nHate when things like this happen.. ",
    "killinit": "Same issue. Same issue. :-(. I have changed in package.json\nReact-native to 0.44.0\nnpm install.\nIt helped!\n29.05.2017 3:30 PM \"Jeyloh\" notifications@github.com napisa\u0142(a):\n\nMy solution was to rollback to my old versions of everything and modify\nandroid/build.gradle with\nallprojects { configurations.all { resolutionStrategy { eachDependency {\nDependencyResolveDetails details -> if (details.requested.group ==\n'com.facebook.react' && details.requested.name == 'react-native') {\ndetails.useVersion \"0.44.2\" // Your real React Native version here } } } } }\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/aksonov/react-native-router-flux/issues/1904#issuecomment-304661739,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AEFK4YohN7btlynRWvL4mey32BqtqPy2ks5r-siMgaJpZM4Noc4-\n.\n. \n",
    "milesaylward": "Got mine to work some research. Ended up having to downgrade my react-native and use a specific version of RNRF. Delete your node modules folder. Paste the code below into your package.json and npm install everything. Make sure you close your simulator and additional terminal windows. \n{\n  \"name\": \"manager\",\n  \"version\": \"0.0.1\",\n  \"private\": true,\n  \"scripts\": {\n    \"start\": \"node node_modules/react-native/local-cli/cli.js start\",\n    \"test\": \"jest\"\n  },\n  \"dependencies\": {\n    \"react\": \"16.0.0-alpha.6\",\n    \"react-native\": \"0.43.0\",\n    \"react-native-router-flux\": \"3.38.0\",\n    \"react-redux\": \"^5.0.4\",\n    \"redux\": \"^3.6.0\",\n    \"redux-thunk\": \"^2.2.0\",\n    \"firebase\": \"^3.9.0\"\n  },\n  \"devDependencies\": {\n    \"babel-jest\": \"20.0.0\",\n    \"babel-preset-react-native\": \"1.9.1\",\n    \"eslint-config-rallycoding\": \"^3.2.0\",\n    \"jest\": \"20.0.0\",\n    \"react-test-renderer\": \"16.0.0-alpha.6\"\n  },\n  \"jest\": {\n    \"preset\": \"react-native\"\n  }\n}. ",
    "bernardakl": "Many issues with react native router flux and few have found solutions!. No it's probably a react-native-router-flux issue, \nwhen i downgraded to version 3.38.0 problem was fixed. . ",
    "huhu521241": "delete you node_module and npm install    then success  . ",
    "RohanVB": "Similar result on simulator as we have on https://github.com/aksonov/react-native-router-flux/issues/1903. I think a workaround for this would be changing the version in the dependencies, yarn.lock file line:4172 to 4174 (in react-native-router-flux repo) as:\nreact@^16.0.0-alpha.6:\n  version \"^16.0.0-alpha.6\"\n  resolved \"https://registry.yarnpkg.com/react/-/react-^16.0.0-alpha.6.tgz#41f7991b26185392ba9bae96c8889e7e018397ef\"\nand then save it and do yarn add react@^16.0.0-alpha.6\nor if you use npm, npm install react@^16.0.0-alpha.6\nwould be the workaround if your other packages depend on 16.0.0-alpha.6. @antzshrek issue obsolete and closed already :) . ",
    "Jeyloh": "Is there a solution to this? Any compatible versions or workarounds? We have to present our mobile app for our customer in 2 days and this is really hindering the team! . Already tried to install the latest version. This is my current package.json:\n{\n  \"name\": \"MobFamKal\",\n  \"version\": \"0.0.4\",\n  \"private\": true,\n  \"scripts\": {\n    \"start\": \"node node_modules/react-native/local-cli/cli.js start\",\n    \"test\": \"jest\"\n  },\n  \"dependencies\": {\n    \"firebase\": \"^3.9.0\",\n    \"moment\": \"^2.18.1\",\n    \"native-base\": \"2.1.4\",\n    \"react\": \"16.0.0-alpha.6\",\n    \"react-native\": \"^0.44.2\",\n    \"react-native-calendar\": \"^0.11.0\",\n    \"react-native-modalbox\": \"^1.3.9\",\n    \"react-native-onesignal\": \"^3.0.3\",\n    \"react-native-osd-simple-button\": \"^1.1.0\",\n    \"react-native-router-flux\": \"3.38.0\",\n    \"react-native-vector-icons\": \"4.1.1\",\n    \"react-redux\": \"^5.0.4\",\n    \"redux\": \"^3.6.0\",\n    \"redux-logger\": \"^3.0.1\",\n    \"redux-saga\": \"^0.15.3\",\n    \"redux-thunk\": \"^2.2.0\"\n  },\n  \"devDependencies\": {\n    \"babel-jest\": \"19.0.0\",\n    \"babel-preset-react-native\": \"1.9.1\",\n    \"jest\": \"19.0.2\",\n    \"react-test-renderer\": \"16.0.0-alpha.6\",\n    \"redux-mock-store\": \"^1.2.3\"\n  },\n  \"jest\": {\n    \"preset\": \"react-native\"\n  }\n}\nI've tried to run react-native-git-upgrade as well. Is there anything else obvious I can do? I've tried this whole thing:\nrm -rf node_modules\nwatchman watch-del-all\nnpm install\nnpm start -- --reset-cache\nsource: https://github.com/facebook/react-native/issues/7022 \nAnything else I can provide? \nHere is a link to my last bug screen!\n. My solution was to rollback to my old versions of everything and modify android/build.gradle with\nallprojects {\n    configurations.all {\n      resolutionStrategy {\n        eachDependency { DependencyResolveDetails details ->\n          if (details.requested.group == 'com.facebook.react' && details.requested.name == 'react-native') {\n            details.useVersion \"0.44.2\" // Your real React Native version here\n          }\n        }\n      }\n    }\n}\npackage.json\n``` javascript\n{\n  \"name\": \"MobFamKal\",\n  \"version\": \"0.0.4\",\n  \"private\": true,\n  \"scripts\": {\n    \"start\": \"node node_modules/react-native/local-cli/cli.js start\",\n    \"test\": \"jest\"\n  },\n  \"dependencies\": {\n    \"firebase\": \"^3.9.0\",\n    \"moment\": \"^2.18.1\",\n    \"native-base\": \"2.1.0\",\n    \"react\": \"~15.4.1\",\n    \"react-native\": \"0.42.3\",\n    \"react-native-calendar\": \"^0.11.0\",\n    \"react-native-modalbox\": \"^1.3.9\",\n    \"react-native-onesignal\": \"^3.0.3\",\n    \"react-native-osd-simple-button\": \"^1.1.0\",\n    \"react-native-router-flux\": \"3.38.0\",\n    \"react-native-vector-icons\": \"4.1.1\",\n    \"react-redux\": \"^5.0.4\",\n    \"redux\": \"^3.6.0\",\n    \"redux-logger\": \"^3.0.1\",\n    \"redux-saga\": \"^0.15.3\",\n    \"redux-thunk\": \"^2.2.0\"\n  },\n  \"devDependencies\": {\n    \"babel-jest\": \"19.0.0\",\n    \"babel-preset-react-native\": \"1.9.1\",\n    \"jest\": \"19.0.2\",\n    \"react-test-renderer\": \"~15.4.1\",\n    \"redux-mock-store\": \"^1.2.3\"\n  },\n  \"jest\": {\n    \"preset\": \"react-native\"\n  }\n}\n``` . ",
    "toanlv92": "npm i react-native-router-flux --save\napplxandroid@0.0.1 D:\\Code\\applxandroid\n-- react-native-router-flux@3.39.2\n  +-- lodash.isequal@4.5.0\n  +-- UNMET PEER DEPENDENCY react@^0.13.0 || ^0.14.0 || ^15.0.0\n  +-- react-native-experimental-navigation@0.27.0\n  |-- clamp@1.0.1\n  +-- react-native-tabs@1.0.9\n  `-- react-static-container@1.0.1\nnpm WARN react-static-container@1.0.1 requires a peer of react@^0.13.0 || ^0.14.0 || ^15.0.0 but none was installed.\nPlease help me fix this warning. ",
    "hynese": "Please try:\nkill any lingering node processes:\nsudo kill -9 ```pgrep node``` \nrm -rf ./node_modules\nnpm update\nCommand window 1: npm run start\nCommand window 2:react-native run-ios\nPreviously, I just had to do react-native run-ios, but now I have to do an explicit npm run start. ",
    "antzshrek": "as @hynese said, try killing any lingering node processes by running these codes:\nsudo kill -9 ```pgrep node```\nrm -rf ./node_modules\nnpm update\nthen you should try running the codes again.\n*:~$ sudo npm install --save react@16.0.0-alpha.6\nIt should show you this after it installs successfully \n+ react@16.0.0-alpha.6\n\nadded 16 packages in 35.241s\n\nand \n*:~$ npm i react-native-router-flux --save\n+ react-native-router-flux@4.0.0-beta.21\nadded 72 packages in 82.299s\n\n. ",
    "mantir": "Sorry for the late answer:\nI'm storing the current tab name when the scene is changed:\nreducerCreate(params) {\n      const defaultReducer = new Reducer(params);\n      return (state, action) => {\n        if(action.scene && action.scene.parent) {\n          const par = action.scene.parent;\n          this.currentTabPage[par] = action.scene.name;\n          if(['games', 'menu_container'].indexOf(par) > -1) this.currentTab = par;\n        }\n        return defaultReducer(state, action);\n      };\n    }\nAnd in the onPress event of the tab I figure out if it is already set and reset the tab to the initial view or if not, just switch to the tab:\n<Scene key=\"main\" tabs>\n            <Scene\n              initial\n              key=\"games\"\n              title=\"Title\"\n              icon={TabIcon}\n              onPress={() => {\n                const current = this.currentTabPage.games;\n                if(this.currentTab == 'games') {\n                  Actions.games_list({type:ActionConst.RESET});\n                } else (current ? Actions[current]({type:ActionConst.REFRESH}) : Actions.games_list({type:ActionConst.RESET}));\n              }}\n              >\n              <Scene\n                key=\"games_list\"\n                component={Games}\n                title=\"Games\"\n                />\n              <Scene\n                key=\"game\"\n                component={Game}\n                title=\"Game\"\n                />\n            </Scene>\n            <Scene\n              key=\"menu_container\"\n              title=\"Menu\"\n              icon={TabIcon}\n              >\n              <Scene key=\"menu\" component={Menu} title=\"Menu\" />\n            </Scene>\n          </Scene>. ",
    "adhenrique": "I have a similar need.\nIs it possible to create a navigation like that: https://prnt.sc/j2lb1c\nI wanted to keep the links fixed at the top, and clicking on them swapped only the form scene (between login and register form). And not the root scene.. ",
    "HuffingSnowy": "@inferusvv Yes the app is minimizing.Though the app is minimizing, clicking on the app icon again, the navigation component is re-mounted i.e it starts again from the root component.\nThis happens with a new react-native app created following the mini-tutorial too. . ",
    "efournival": "Is there any known workaround for this issue?. ",
    "mleung": "Hey guys, I know this ticket is closed, but in case anyone else runs into this problem--this actually solved it for me:\nhttps://stackoverflow.com/questions/39657029/react-native-android-several-apps-instances-running-at-the-same-time-as-result\nBasically, if you don't manually set android:launchMode=\"singleInstance\", your route file and entire app will get created over and over coming from the background.. ",
    "jasongrishkoff": "This one's bugging me too -- the singleInstance or singleTask solution doesn't seem to work. If you minimize the app and re-open it, everything remounts.. @pewh here's a working link: http://ihor.burlachenko.com/deep-linking-with-react-native/. ",
    "g4laura": "Thanks. I was hoping there was an another way because when I tried to upgrade it, I got an error, which would probably be resolved by upgrading react native, but upgrading react native leads to more errors. So, I was hoping there was a temporary work around. Oh well. Thanks for the reply!. @aksonov when I do backTitle=' ' , the back button always displays, including when there isn't a scene to navigate back to. @y2k-shubham when I do that , the back button always displays, including when there isn't a scene to navigate back to. ",
    "jmcdonald-ut": "@aksonov My project depends on this functionality.  I know you're probably busy and it must be hard to maintain a project of this size.  Is there anything I can do to make this PR easier to review?. ",
    "haipengz": "I think one of the reasons is that the docs of this package is far from completed, in fact it is rather awful and outdated, but no one seems to complete that docs. And it causes lots of confusion, which leads to tons of unresolved issues.. ",
    "jameskhamil": "@haipengz Do you think there more contributors needed or is this project just too personally locked in by repo owner?. ",
    "waheed25": "my issue is almost same i have page which connects to internet and than display the login page but when internet is not connected it shows a page which say internet error i want to integrate a button on error page to refresh the page which display a login page if internet is connected and if internet is doesn't connected it should display again same error page ...is there any solution of that problem???. i am using actions.refresh() to refresh a page it works fine after login screen or in the main app but if my internet is off and i open the app it displays the error on login screen and actions.refresh does't work if even  i connects with internet it remains on the same page and refresh button looks like disable\n. Actually my bad i was calling pop function without pressing the button. ",
    "sud218": "I am facing the same issue. Has anyone able get the project running by rolling back to a previous version. Please suggest.. I fixed it by fixing the version to 3.38.0. ",
    "scotthollandjr": "Issue was solved by updating all versions, and removing ^ from RNRF version. Also, clearing cache and deleting DerivedData from xcode project, while also deleting the reinstalling the app from the simulator.\n\"firebase\": \"4.1.1\",\n    \"lodash\": \"4.17.4\",\n    \"react\": \"16.0.0-alpha.6\",\n    \"react-native\": \"0.44.3\",\n    \"react-native-maps\": \"0.15.2\",\n    \"react-native-router-flux\": \"3.39.2\",\n    \"react-redux\": \"5.0.5\",\n    \"realm\": \"^1.3.1\",\n    \"redux\": \"3.6.0\",\n    \"redux-thunk\": \"2.2.0\". ",
    "gregjw": "I have the latest version and I'm still getting this error.\nWas any solution found?. ",
    "jephjohnson": "Thanks @alsh76 - I ended up refactoring and using react native navigation for the time being :/. ",
    "zhmeng": "I have the same problem , and how to resolve it ? . is it support  react 16 ? \nilkkzm@ilkkzm-Inspiron-7460:~/Projects/Own/MiniDai$ npm install\nnpm WARN react-static-container@1.0.1 requires a peer of react@^0.13.0 || ^0.14.0 || ^15.0.0 but none was installed.\n\"dependencies\": {\n    \"react\": \"16.0.0-alpha.12\",\n    \"react-native\": \"0.45.0\",\n    \"react-native-router-flux\": \"^3.39.1\". ok , thank you . @Justkant . ",
    "janfix": "Same question. Thank you!. ",
    "cronos88": "If I publish my app in Play Store, this warning appear in consumers' phones?. ",
    "j8jacobs": "i just included react native flux router into my project today, but there has already been a commit and merge on the issue. how do i get the latest code to fix this issue?\n. ",
    "guysegal": "is a release with the fix is expected soon?. Amazing Work!\nI have a few questions though:\n\n\nWhen is documentation for v4 is expected? Will it contain a tutorial for migration from v3 to v4?\n\n\nif a future release of react-native will break something in v3, will it be fixed in v3 patch releases?\n\n\nThanks. ",
    "diogoarm": "@brunsy was closed to adjust the code to pass by eslint constraints.. ",
    "mymachine8": "you cannot refer to 'this' in a static method. ",
    "hasancanozkan": "I changed it on my own, in case someone needs, you can ask. if you use topToBottom, the reverse move is basically in the direction of swiping up, isnt it?. ",
    "tobiaslins": "@hasancanozkan Are you searching for the topToBottom option? \nI only can't figure out how to close it by swiping up. ",
    "fossage": "Not sure why this would be happening, but you might want to try running rm -rf on your node_modules directory, then running yarn cache clean && yarn install to ensure all of your modules are installed correctly.  If that still doesn't work you can try running yarn upgrade to see if upgrading some of the dependencies does the trick.  If all of that fails and you just need a workaround, you can add the following to the top of your node_modules/react-native-router-flux/src/Scene.js file after the import statements:\njs\nif(!View.propTypes) View.propTypes = {}\nIt's not a great solution and you will lose any runtime prop-type checking for the scene components, but it will at least get you up and running again. Try passing {type: 'reset'} into your call to Actions.home(). You can pass your own navbar into the scene through the navBar prop.. I definitely noticed a larger performance improvement on iOS(haven't built out an Android version of our app yet).  In the old version, there were a lot of places I was having to wrap my componentWillMount/DidMount functionality with calls to InteractionsManager.runAfterInteractions to keep transitions smooth, but now I don't have any issues.. ",
    "jfajardo": "I solved it with:\n```\nimport { StatusBar } from 'react-native';\n\n```. ",
    "IamAlchemist": "same problem. I ran into the same case. ",
    "LukasNavickas": "Doesn't work with React 16 :(. ",
    "olegdev": "I get same issue with tabs!\ncomponentDidMount not always get called and scene not always refreshes with new props when I switch between tabs.\n. ",
    "douglasjunior": "Same problem here, not just with the tabs.. ",
    "nmfzone": "What I've faced, componentDidMount only called when we go to more than 1 scene..I don't think if It's an issue... +1 Struggling with this issue... Yep, same here @thanhtr. I just realized it. Downgrade to 3.39.1 should fixed this issue.. ",
    "RHinderiks": "@Devikaelangovan It might not even be an issue since ios is always rendered from the absolute top. You can solve it by setting your own padding but i'm not quiet sure how much and if it differs from device to device (especially on android with all kinds of ratios etc.). ",
    "rthor": "It's componentWillUnmount not componentWillUnMount.. ",
    "MarcusHurney": "Also wondering why components do not unmount when using Actions.pop?. ",
    "woodpav": "Ok I got it.\nI can access the current bar style using StatusBar._defaultProps.barStyle.value. (e.g. light-content or dark-content).\nThis means I can save the current style in componentWillMount() then reset it in componentWillUnmount()\nKind of hacky but it works.\nFrom inside react-native:\nstatic setBarStyle(style: StatusBarStyle, animated?: boolean) {\n  animated = animated || false;\n  StatusBar._defaultProps.barStyle.value = style;\n  if (Platform.OS === 'ios') {\n    StatusBarManager.setStyle(style, animated);\n  } else if (Platform.OS === 'android') {\n    StatusBarManager.setStyle(style);\n  }\n}\n\nEdit: here's a snippet for ya\ncomponentDidMount() {\n  this.previousStatusBarStyle = StatusBar._defaultProps.barStyle.value;\n  StatusBar.setBarStyle('light-content');\n}\n\ncomponentWillUnmount() {\n  StatusBar.setBarStyle(this.previousStatusBarStyle);\n}. The migration guide says\n\n\nNo component support for scene containers (that contains children Scene) - you have to use custom navigator.\n\nWhat does that mean?. Switching to tabs works (the problem is with reset). However, the original (unauthenticated) component never unmounts. \nhttps://github.com/tywoodpav/react-native-router-flux. I did. Check link on previous comment. Running will throw the same error. . I figured it out.\nAccording to https://github.com/react-community/react-navigation/issues/1127, you need to set key: null in the reset action.\nHere's a demo I put together\nhttps://github.com/tywoodpav/reset-nested-navigators-react-native-navigation. I think there is a bug. It works occasionally but every once in a while it throws the same error. I'm using ^4.0.0-beta.12. I'll try putting together some code to demonstrate.\nIn my previous structure, it transitions correctly to authenticated but throws the same error when transitioning to unauthenticated. . > Could you try latest master? Not beta.12\nNice. My mistake. Thanks!. Original bug was fixed, but a new one was created. When I try to transition between scenes in the same container (i.e. authenticated), the same error is thrown. I'm guessing this is because key: null\nHere is a demo: https://github.com/tywoodpav/rnrf-4.0.0-nested-2066\nThe structure:\n<Scene key=\"splash\" component={SplashScreen} initial />\n\n<Scene key=\"unauthenticated\" type=\"reset>\n   ...\n</Scene>\n\n<Scene key=\"authenticated\" type=\"reset\">\n  <Scene key=\"home\" component={HomeScreen} title=\"Auth'd Home\" initial />\n  <Scene key=\"profile\" component={ProfileScreen} title=\"Auth'd Profile\" />\n</Scene>\n\nWhen calling Actions.profile() from HomeScreen I get\n\nThere is no route defined for key profile. Must be one of 'splash', 'authenticated', 'unauthenticated'.\n   . Here's a link to the updated repo with react-navigation https://github.com/tywoodpav/reset-nested-navigators-react-native-navigation\n\nI think the problem is when RNRF detects what type of action to dispatch, it defaults to the one highest up in the tree. This makes reset work but when you navigate to a scene within the stack it still thinks you want a reset action when you actually just want to push normally. \nI'd love to help, but I think I'll have to change navigationStore and I have trouble following how params are parsed. Maybe some comments would help? ;)\n. That works. Thanks!. I wanted to do something similar. Calling Actions.refresh() in the transitioning scene rerenders the new scene so you could put something in componentWillReceiveProps. ",
    "imhenoch": "I had the same problem, if you go to navigationStore you can see @autobind, that's the problem, I solved the issue with this: \nhttps://moduscreate.com/using-es2016-decorators-in-react-native/\nBut I'm not sure if this gonna work to you because I don't use Typescript!. @thanhtr, after my \"solving\" method I had another issue :( So I downgraded my version to 3.40.1 and now I don't have any problem.t. ",
    "winnerliu": "+1\n. ",
    "ryohlan": "+1. ",
    "peter-pogocarshare": "@thanhtr I've gotten \"Cannot read property 'style' of undefined for this module before but for a different issue. I was able to correct that issue with react-native-git-upgrade.\nI've yet to solve this thread's issue for my project. I'd rather not downgrade... will touch base when I get it resolved on my end.. ",
    "tonytamps": "I'm curious why \n\nv4-alpha version was published to npm from a branch \nthe latest master is 3.40.1 \nthe latest release on github is 3.39.1.\n\nThe v4-alpha is clearly not ready yet. The release process seems a bit messy.. ",
    "wateentaleb": "I was having the same problem nonetheless I found the fix. \nSolution\n\n\nOnce you download the react-native-router-flux package, a package-lock.json file will be generated, move it out of the folder, do not delete it.  \n\n\nRun m -rf node_modules && npm install\n\n\nreact-native should be in your /node_modules file now\n\n\nRun your code using run-android or run-ios and it's now fixed. \n\n\n. ",
    "xang555": "thanks guy! i fixed this problem by using old npm version to install react-native-router-flux. it is work for me. ",
    "lanarahim30": "i fixed use yarn install. ",
    "montao": "I reinstalled react-native. Ridiculous but it worked. . ",
    "booker-laputa": "@aksonov Tried, it is broken, once 'react-native-router-flux' is imported, as ViewPropTypes.style is undefined in RN0.43.1\nI have tried all and finally found 3.38.0 is the latest working with RN0.43.1. ",
    "shaoyuancc": "Notes Regarding Pop and Refresh using react-native-router-flux\nInteraction between multiGraphScene, sensorChoiceModal and index.js, where sensorChoiceModal is instantiated. \nDesired behaviour: Open Modal from Scene, complete Modal, pop modal and refresh Scene with new props. \nMethods tried:\n1)  Method:\n        - Open Modal with standard \n            \"   Actions.SensorChoiceModal({currentPageIndex:currentPageIndex, mode:'graph'});   \"\n            from Scene\n        - In final function of modal:\n            \"   Actions.pop();\n                Actions.MultiGraphScene({launchRefresh:true, type:ActionConst.REFRESH});    \"\n        Outcome:\n        - Modal will close, Scene will receive new props in \" componentWillReceiveProps(nextProps) \"\n        - When Modal is next launched from the same scene, get navigationState.Children.key conflicts with another child error\n        - What i suspect is that the Modal is not popping properly\n        - See Actions error and navigationState.children conflicts with another child!\n            (https://github.com/aksonov/react-native-router-flux/issues/782)\n2) Method:\n        - Open Modal with standard \n            \"   Actions.SensorChoiceModal({currentPageIndex:currentPageIndex, mode:'graph'});   \"\n            from Scene\n        - In final function of modal:\n            \"   Actions.MultiGraphScene({launchRefresh:true, type:ActionConst.REFRESH});\n                Actions.pop();  \"\n        Outcome:\n        - Modal will close, Scene will not receive new props in \" componentWillReceiveProps(nextProps) \"\n        - When Modal is next launched from the same scene, it is fine\n        - What i suspect is that the Refresh is not occuring\n3) Method:\n        - Open Modal with standard \n            \"   Actions.SensorChoiceModal({currentPageIndex:currentPageIndex, mode:'graph'});   \"\n            from Scene\n        - In final function of modal:\n            \"   Actions.pop({refresh{launchRefresh:true}}); \"\n        Outcome:\n        - Modal will close, Scene will not receive new props in \" componentWillReceiveProps(nextProps) \"\n        - When Modal is next launched from the same scene, it is fine\n        - What i suspect is that the Refresh is not occuring\n        - See Actions.pop(refresh: { }) cannot trigger componentWillReceiveProps at children scene\n            (https://github.com/aksonov/react-native-router-flux/issues/1965)\n4) Method:\n        - Open Modal with standard \n            \"   Actions.SensorChoiceModal({currentPageIndex:currentPageIndex, mode:'graph'});   \"\n            from Scene\n        - In final function of modal:\n            \"   Actions.MultiGraphScene({launchRefresh:true, type:ActionConst.RESET});  \"\n            Or\n            \"   Actions.MultiGraphScene({launchRefresh:true, type:ActionConst.REPLACE});    \"\n        Outcome:\n        - Modal will not close\n        - What i suspect is that the navigation stack is cleared so the scene is no longer there to go back to\n        - Same issue with trying to launch it with type RESET or REPLACE.\n5) Method:\n        - In index.js instantiate Modal with type = \"ActionConst.PUSH_OR_POP\"\n        - Open Modal with standard \n            \"   Actions.SensorChoiceModal({currentPageIndex:currentPageIndex, mode:'graph'});   \"\n            from Scene\n        - In final function of modal:\n            \"   Actions.MultiGraphScene({launchRefresh:true, type:ActionConst.REFRESH});\n                Actions.pop();  \"\n        Outcome:\n        - Modal will close, Scene will refresh, seems very promising, but the first time you complete the Modal and close it, it is not unmounted. When Modal is next launched, \" componentWillReceiveProps(nextProps) \" is not called, it is not reconstructed, its almost as if a JUMP has occurred. On second close, it will be unmounted. \n        - I have no idea what is happening here\nFINAL WORK AROUND SOLUTION\n    Method:\n        - Open Modal with standard Actions, but pass it a callback function! (almost like passing it \"componentWillReceiveProps\")\n            \"   Actions.SensorChoiceModal({currentPageIndex:currentPageIndex, mode:'graph',callbackFunction:this.onSensorChoiceComplete});\"\n        - Make sure to bind function in constructor:\n            \" this.onSensorChoiceComplete = this.onSensorChoiceComplete.bind(this); \"\n        - In final function of modal:\n            \"   this.props.callbackFunction(arg); \n                Actions.pop(); \"\n        Outcome:\n        - Modal will close, callback function will run and it will receive arguments passed to it, thereby acting as \" componentWillReceiveProps(nextProps) \"\n        - callback function can then initiate refresh\nHope this helps someone, I spent hours trying to figure it out :). ",
    "MichaelPintos": "setTimeout(()=> {Actions.refresh({refresh: true})}, 500);\n  Actions.pop();\nnow can use componentWillReceiveProps() for refresh the data.. <Scene key=\"myView\" component={myView} hideNavBar={true}/>\nin myView you will need to create your own navigation bar.\n<View style={styles.container}>\n        {this.state.renderNav && (\n          <View>\n            <Text>NavBar</Text>\n          </View>\n        )}\n        <Text>MyView</Text>\n        <TouchableHighlight onPress={() => this.setState({ renderNav: !this.state.renderNav })}>\n          <Text>Toggle Nav</Text>\n        </TouchableHighlight>\n </View>\n. ",
    "JSMRajesh": "This will work. Actions.pop({refresh: {refresh:Math.random()}});. ",
    "drsounds": "A better way is to call the fetchXXX function you use in the parent container directly in the component that fetch new info and updates the underlying view directly through redux instead of messing with the navigator, like this.\nonSubmit() => {\n doTheAction().then((result) => {\nActions.pop();\nfetchXXX(); // The fetch function you call in the container of the parent container(layout)\n})\n}\n. ",
    "Gary-Li": "I'm sorry for create it by accident.. ",
    "sofianegargouri": "Same here. ",
    "AlmogRnD": "How do you install version 4, I'm not seeing a tag or release for it?. Thanks this is perfect . Hi off topic have you had a chance to look at my githup issue with redux\nbeen stuck and can't move forward\nOn Jul 9, 2017 23:24, \"Pavel Aksonov\" notifications@github.com wrote:\n\n@Dictory https://github.com/dictory mobx manages navigation state and\nreload navigators after state changes.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/aksonov/react-native-router-flux/issues/1974#issuecomment-314016322,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AAKWI6WV67Cc7UfOZmFjIdEe2ulQCPXYks5sMcOwgaJpZM4OOgfQ\n.\n. Thanks appreciate it, getting behind\n\nOn Jul 9, 2017 23:27, \"Pavel Aksonov\" notifications@github.com wrote:\n\n@AlmogRnD https://github.com/almogrnd Will do it today.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/aksonov/react-native-router-flux/issues/1974#issuecomment-314016653,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AAKWI1YiJnxYbHD5yl7PTtK9n5u4RIJRks5sMcRDgaJpZM4OOgfQ\n.\n. I did that and now I'm getting the following error \"Failed prop type: Invalid prop children of type array supplied to Provider, expected a single ReactElement.\" \n\nI understand that provider needs to wrap everything \nHere is my update app index.js file \nrender() {\n        return (\n            <Provider store={store} >\n                /* Breaking changes with react-native-router-flux all\n                   routes need to be here and not in a separate routing file, check back for support.\n                */\n                <Router>\n                    <Scene key=\"root\">\n                        <Scene key=\"login\" component={Login} />\n                        <Scene key=\"ResetPassword\" component={ResetPassword} />\n                    </Scene>\n                </Router>\n            </Provider>\n        );\n    }. I'm having issues setting icons per tab, does anyone have an example of this with V4? . That's crazy never even thought about that. MobX looks good but I need redux they have redux offline which I need thanks for the quick support    . I believe this is the same issue or related to my issue as well, something to so with the redux integration - https://github.com/aksonov/react-native-router-flux/issues/1998. I started with React Navigation and had lot's of issues getting it up and running mostly due to lack of good documentation for complex examples and use cases. I also had different bugs. With all that I also got the very little support I even sent feedback about and question why FB made React Navigation the official router lib, I don't think it should be.   \nI see React Native Router as a wrapper over the React Navigation API making it much easier to use and better support. . That does not solve the issue if I have hideNavBar={true} it hides the login and home. On the home scene/view, I should just see the home header without the back button. . To clarify by example TapBar you mean - https://github.com/aksonov/react-native-router-flux/blob/master/Example/Example.js. Thanks, I got it I had the hideNavBar={true} on the tabs but on the main component but I can still use gesture to gesture back the login back is there a way to disable that? . @aksonov I just tested gestureEnabled={false} and it's not working . +1 but I'm on beta 6, couldn't update for some reason . I just tested panHandlers={null} and it does not work, @aksonov can you reopen this. . Were is LightboxNavigator.js? . I'm not sure I fully understand what would be the content of doing this in react-native-router-flux? Is there any docs around this?  . Well, it works the same with redux and also I still want the tab for home to show up for teams IE teams is under home? \nThis seems a bit overkill and over complex, it would be nice to have a much easier way to call child views maybe something like Actions.Child(Teams); and just register it under home just a suggestion. \nRight now I don't fully understand LightingboxNavigator? Also If I understand what your saying I need to create a container IE \"main\" which holds home and team view (team becomes a pop-up/overlay view) This has the tabs as part of the container how then is this loaded in the app.js with redux is it the same as just loading another component . I guess I need to see an example or code for \"Then pass it as navigator prop for container Scene.\" \nThe example code you have don't show this, are there complex examples showing nested scenes . MainNavigator is the same code as LightboxNavigator? If I think I'm starting to understand. \nI'm also glad to help with documentation or examples especial on things that I'm doing   . I have tried the following \n<Scene key='lightbox' lightbox>\n                            <Scene key=\"tabBar\" tabs hideNavBar={true}>\n                                <Scene key='Home' component={Home} title='Home' initial={true} >\n                                    <Scene key='Teams' component={Teams} title='Teams' initial={false} />\n                                </Scene>\n                                <Scene key='Photos' component={Photos} title='Photos' initial={false} />\n                                <Scene key='SiteDiary' component={SiteDiary} title='SiteDiary' initial={false} />\n                            </Scene>\n                        </Scene>\nWhen I click any one of the tabs i.e. like photos I get the following error \n\n. I also tried this \n<Scene key='lightbox' lightbox>\n                            <Scene key='Home' component={Home} />\n                            <Scene key='Teams' component={Teams} title='Teams' initial={false} />\n                        </Scene>\nWhich works fine, so I would say it's not working inside tabs . I also tried it this way and it did not work \n```\n\n\n\n\n\n\n                        <Scene key='Photos' component={Photos} title='Photos' initial={false} />\n                        <Scene key='SiteDiary' component={SiteDiary} title='SiteDiary' initial={false} />\n                    </Scene>\n\n```. Does lightbox load a model? or it loads a page/view just like home? . Yea fixed it deleted the comment, it's 3am here :) \nWhat I don't understand is in the example you have this working and when I do the same thing it's not. . The only difference is I'm using Redux can that be causing the issue? . @aksonov I was able to recreate the issue in the example code this is the example code \n<Scene key=\"lightbox\" lightbox>\n              <Scene key=\"root\" hideNavBar hideTabBar>\n                <Scene key=\"tabbar\" gestureEnabled={false} tabs tabBarStyle={styles.tabBarStyle} activeBackgroundColor='#ddd'>\n                  <Scene key=\"tab1\" title=\"Tab #1\" tabBarLabel=\"TAB #1\" icon={TabIcon} navigationBarStyle={{backgroundColor: 'red'}} titleStyle={{color: 'white'}}>\n                    <Scene key=\"tab1_1\" component={TabView} title=\"Tab #1_1\" onRight={() => alert('Right button')} rightTitle=\"Right\"/>\n                    <Scene key=\"tab1_2\" component={TabView} title=\"Tab #1_2\" back titleStyle={{color: 'black'}}/>\n                  </Scene>\n                  <Scene key=\"tab2\" initial title=\"Tab #2\" icon={TabIcon}>\n                    <Scene\n                      key=\"tab2_1\"\n                      component={TabView}\n                      title=\"Tab #2_1\"\n                      renderRightButton={() => <Text>Right</Text>}\n                    />\n                  </Scene>\n                </Scene>\n              </Scene>\n        </Scene>\nI removed \n<Scene key=\"modal\" modal hideNavBar>\n<Scene key=\"drawer\" drawer contentComponent={TabView} >. Here is the gist of the example file - https://gist.github.com/AlmogRnD/a395e6212d702d151d23e4661b68e5fa\nand same error \n\n. Yes that is my mistake but it still does not with within my code only difference is I'm using redux \nI have it wrapped up in \n<Provider store={store}>\n                <ConnectedRouter>. My code is the same as the example code expect the provider and connect router \nhere it is \n<Provider store={store}>\n                <ConnectedRouter>\n                    <Scene key=\"lightbox\" lightbox>\n                        <Scene key=\"modal\" modal hideNavBar>\n                            <Scene key=\"drawer\" drawer contentComponent={Photos} >\n                            <Scene key=\"root\">\n                                <Scene key=\"login\" component={Login} initial={true} title={'Login'} />\n                                <Scene key=\"ResetPassword\" component={ResetPassword} title={'Reset Password'} />\n                                <Scene key=\"tabBar\" tabs hideNavBar={true}>\n                                    <Scene key='Home' component={Home} title='Home' initial={true} >\n                                        <Scene key='teams' component={Teams} title='Teams' initial={false} />\n                                    </Scene>\n                                    <Scene key='Photos' component={Photos} title='Photos' initial={false} />\n                                    <Scene key='SiteDiary' component={SiteDiary} title='SiteDiary' initial={false} />\n                                </Scene>\n                            </Scene>\n                        </Scene>\n                    </Scene>\n                    </Scene>\n                </ConnectedRouter>\n            </Provider>. So the only way is to use Custom Navigators but then why doesn't the lightbox work, if I wrap it inside that it should work? \nAlso If I create Custom Navigators how do I define \"static router = MyRouter;\"? \nAlso, I copied LightboxNavigator.js and I get the following error \n\nDo you have a working example of this or how to do this, I getting fragments . @aksonov can you send me the example you have with redux would be glad to look at and see why it's not working for me. I can't send the current project, but it's not working you see the error message and you see my code its exactly like the example . Ok I was able to recreate the issue within the example project attached code base - https://www.dropbox.com/s/f7cfrvsllaqd054/Example.zip?dl=0\nHere is the issue \n\n. I think in your example that is working, the reason that it's working is because you're loading the same component TabView\nIn the code I sent I'm loading different components \n<Scene\n\u00a0 key=\"tab1_1\"\n\u00a0  component={TabView}\n\u00a0  title=\"Tab #1_1\"\n\u00a0  onRight={() => alert('Right button')}\n\u00a0  rightTitle=\"Right\"\n\u00a0  />\n\u00a0  <Scene\n\u00a0  key=\"tab1_2\"\n\u00a0  component={TabView}\n\u00a0  title=\"Tab #1_2\"\n\u00a0  back\n\u00a0  titleStyle={{color: 'black'}}\n\u00a0  />\n. @aksonov hi you have great and I really appreciate you taking the time and helping. And I plan on helping with docs or tutorials. I have to say your explanation just wasn't clear maybe it's because I'm working late or we were both thinking of different things when referring to something. \nAlso, I'm not sure why you couldn't have to sent a something like this \n```\n\n\n\n\n\n                        <Scene key='Photos' component={Photos} title='Photos' initial={false} />\n                        <Scene key='SiteDiary' component={SiteDiary} title='SiteDiary' initial={false} />\n                    </Scene>\n\n``\nThe issue was that I did not have\n`\nIt would have been much clear to explain that by saying you need to wrap it up in like so. \nNo worries, I do appreciate the help . beta v6 works - npm i react-native-router-flux@4.0.0-beta.6 --save. @aksonov thanks, Yarn works . No problem \"react-native-router-flux\": \"4.0.0-beta.7\",. Same issue with 8. I did that was the first thing I check as you can see it renders twice \n\n. Isn't the example code outdated for version 4? . My code is different than the example code more, I'm not going to rewrite the entire example to like mine and just because the example is not showing this issue does not mean it's not a bug. \nAnd this is a bug . I debugged the issue, I don't think we need to create examples for each issue if you look at the code that should help, this is how StackOverflow works when you ask for help. \nThis is definitely a bug \nIf I'm for example a login screen and have \nActions.Home();\nWhich is a component inside a tab bar, the first one you get that issue because the lib loads the tab bar and the home component. \nIf you do the following\nActions.tabBar();\nIt loads the tab bar which in turn loads the fist component, or it just gets loaded once. \n. I already fixed it, just did Actions.tabBar(); . No, I still think it's a bug, but you can explain. \nI have a 3 tabs each have 1 view component \nHow do I navigate between tabs because if I do \nActions.Photos();\nThe second tab it loads the photos component tab twice . To follow up it seems that if your component is inside a tabs scene and you use Actions.xx to call it for some reason it loads that component twice . Can you reopen this, it's definitely an issue. Did you understand how it's happing . @aksonov I understood that I was saying we should keep it open until 476 is fixed . Tried testing it, PR has an issue . I can confirm this still happens with beta 9 and I'm on  \"react-navigation\": \"^1.0.0-beta.11\", I'm calling \n Actions.Photos(); which is inside a tab bar . How do I do that? What is the code? . Thanks perfect and working great . Issue with this PR \n\n. I did that, does nothing same error/issue . Possible it's a ReactNavigation behavior but I didn't have this issue when I using React Navigation.\nLet me explain \nI have the home tab which has to two internal pages home and teams if I navigate to teams and then to the photos tabs and then click the home tab at the bottom the app goes or loads the teams component i.e. the last I was on it should load the home view. . I would suggest using initialRoute I believe that is more of the expected behavior . I just did yarn add react-native-router-flux@4.0.0-beta.9 \nmaybe it only happens when you update but there is an issue . Same thing with npm install react-native-router-flux@4.0.0-beta.9 --save. I did yarn remove and then yarn add works now . No, I have not how do I set that? or is there an example or docs? . Thanks lazy does it . I think it's a react-navigation issue, I can't reproduce it right now but I think this is the same issue - https://github.com/aksonov/react-native-router-flux/issues/723 . I was able to find out what's going on. It has nothing to do with the back button but\nActions.tab2();\nSo when you call Actions tabs it renders the component then if you click the back button and then run again \nActions.tab2();\nIt does not re mount the component, for some reason its saved in memory so it pushes the component to the front of the view but does not re run any of the code. \nIf I run the following Actions.Photos(); it works as expected but then you get the issue with were the component twice. . You can also see this issue by just clicking the tabbar in the example, it mounts the first time but does not mount again. There should be a way to force it to remount . @aksonov I have tested this and it's not working. on enter only first the first time the router is loaded. \n<Scene key='Photos' component={Photos} title='Photos' back backTitle='Back' initial={false} onEnter={alert('aaa')} />\nAnd I can't use componentWillReceiveProps as I'm not passing any props but just using redux state\nCan you please example how to use BLUR/FOCUS  . I did a workaround not really sure this is the correct way or best way but I just used \nredux-subscriber \nWhich subs to the change and re runs my function . I just tested it based on the example you provided with overlay it did not work for me I got the following error \nThere is no route defined for key messageBar. \nI was able to get it to work by doing the following \n<View style={styles.container}>\n                <Provider store={store}>\n                    <ConnectedRouter>\n                        <Scene key=\"root\" hideNavBar hideTabBar>\n                            <Scene key=\"public\">\n                                <Scene key=\"login\" component={Login} initial={true} title={'Login'} />\n                                <Scene key=\"ResetPassword\" component={ResetPassword} title={'Reset Password'} />\n                            </Scene>\n                            <Scene key=\"tabBar\" tabs lazy>\n                                <Scene key=\"tab1\" title=\"Home\" tabBarLabel=\"Home\" icon={HomeTabIcon}>\n                                    <Scene key='Home' component={Home} title='Home' initial={true}  panHandlers={null}/>\n                                    <Scene key='Teams' component={Teams} title='Teams' initial={false} />\n                                </Scene>\n                                <Scene key=\"tab2\" title=\"Photos\" tabBarLabel=\"Photos\" icon={PhotosTabIcon}>\n                                    <Scene key='Photos' component={Photos} title='Photos' back backTitle='Back' initial={false} />\n                                    <Scene key='SinglePhoto' component={SinglePhoto} title='' back backTitle='Back' initial={false} />\n                                </Scene>\n                                <Scene key=\"tab3\" title=\"Site Diary\" tabBarLabel=\"Site Diary\" icon={SiteDiaryTabIcon}>\n                                    <Scene key='SiteDiary' component={SiteDiary} title='SiteDiary' initial={false} />\n                                </Scene>\n                            </Scene>\n                        </Scene>\n                    </ConnectedRouter>\n                </Provider>\n                <MessageBar/>\n            </View>. Closing this just need to make sure the view had a container style . @badaz I did the following \nrender() {\n        return (\n            <View style={styles.container}>\n                <Provider store={store}>\n                    <ConnectedRouter>\n                        <Scene key=\"root\" hideNavBar hideTabBar>\n                            <Scene key=\"public\">\n                                <Scene key=\"login\" component={Login} initial={true} title={'Login'} />\n                                <Scene key=\"ResetPassword\" component={ResetPassword} title={'Reset Password'} />\n                            </Scene>\n                            <Scene key=\"tabBar\" tabs lazy>\n                                <Scene key=\"tab1\" title=\"Home\" tabBarLabel=\"Home\" icon={HomeTabIcon}>\n                                    <Scene key='Home' component={Home} title='Home' initial={true}  panHandlers={null}/>\n                                    <Scene key='Teams' component={Teams} title='Teams' initial={false} />\n                                </Scene>\n                                <Scene key=\"tab2\" title=\"Photos\" tabBarLabel=\"Photos\" icon={PhotosTabIcon}>\n                                    <Scene key='Photos' component={Photos} title='Photos' back backTitle='Back' initial={false} />\n                                    <Scene key='SinglePhoto' component={SinglePhoto} title='' back backTitle='Back' initial={false} />\n                                </Scene>\n                                <Scene key=\"tab3\" title=\"Site Diary\" tabBarLabel=\"Site Diary\" icon={SiteDiaryTabIcon}>\n                                    <Scene key='SiteDiary' component={SiteDiary} title='SiteDiary' initial={false} />\n                                </Scene>\n                            </Scene>\n                        </Scene>\n                    </ConnectedRouter>\n                </Provider>\n                <MessageBar/>\n            </View>\n        );\n    }\nconst styles = StyleSheet.create({\n    container: {\n        padding: 0,\n        flex: 1,\n        flexDirection: 'column'\n    },\n})\nYou need the container style . None if this is working, anyone have any ideas here is my code \n```\nrender() {\n        return (\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        );\n    }\n}\n//progress={this.state.overlayProgress} indeterminate={this.state.indeterminate}\n//\nconst styles = StyleSheet.create({\n    container: {\n        padding: 0,\n        flex: 1,\n        flexDirection: 'column'\n    },\n    backgroundImage: {\n        flex: 1,\n        width: null,\n        height: null,\n}\n\n})\n```. It's not working, is there a correct way or example? . @aksonov it doesn't work you don't need to fork an example. Right now I had to set background for each scene. . @aksonov I think you have a mistake you have the following code \n<Overlay>\n                    <Scene component={BackgroundView} />\n                    <Scene\n                      key=\"tab1_1\"\n                      component={TabView}\n                      title=\"Tab #1_1\"\n                      onRight={() => alert('Right button')}\n                      rightTitle=\"Right\"\n                    />\n                  </Overlay>\nbut I don't see BackgroundView component anywhere? . Never mind I see it . I tried Actions.refresh it doesn't help in this case  . Yea I'm using Redux, the core issue is with the EasyListView package that I'm using, which is not rendering when props . No I don't think so, my idea was to see if I can force an unmount and mount which would make it work . I thought RNRF back button should unmount the tab compount . Ok I thought I was on the latest version  . I have it working closing out, for anyone else this is how you do it \n<Scene key=\"tabBar\" tabs lazy showLabel={false} inactiveBackgroundColor={'#30393F'} activeBackgroundColor={'#25abf9'}>. Ok, how would I do a custom style that has the top text i.e. Alex Smith and then the bottom test which is smaller, right now in nav bar I can just set the title and the back button text but I can't set a custom component that has both texts unless I'm missing something? . I thought the title prop for the back button can only accept string i.e. back backTitle={this.props.title}\nHow would you set ? . I was able to get it working, need to set icon to true . @esb1 I'm not sure I understand the following \"you have to set it together with drawer prop\"\nAnd is this correct \ndrawerImage={{require('../../images/icon.png')}}. Thanks this is perfect . \n@mcabs3 yes that is correct but when I try the following \"popAndPush\" and \"popTo\" they don't work, nothing happens. \n@aksonov  can you please reopen this, I think there needs to be a way to unmount and not just push the scene . I don't understand the docs say \npopTo | Function | (sceneKey: String, props: Object)\n-- | -- | --\n. +1. Seemed to be caused by doing  Actions.PhotoUpload({images:images, camType:'camera'}); in my code the key is defined . I was able to fix this, it seems that everything needs a key . My setup\n<View style={styles.container}>\n                <StatusBar/>\n                <Provider store={store}>\n                    <ConnectedRouter navigationBarStyle={{backgroundColor:'#25abf9'}} titleStyle={{color:'white'}} headerTintColor=\"#FFF\">\n                        <Scene key=\"root\" hideNavBar hideTabBar>\n                            <Scene key=\"public\">\n                                <Scene key=\"login\" component={Login} initial={true} title={'Login'}  />\n                                <Scene key=\"ResetPassword\" component={ResetPassword} title={'Reset Password'} />\n                            </Scene>\n                            <Drawer contentComponent={CustomDrawer} drawerImage={require('./images/ic_menu_white_24dp_2x.png')}>\n                                <Scene key='Photos' component={Photos} title={'Home'}  initial={false} navBar={CustomNavBar} />\n                                <Scene key='SinglePhoto' component={SinglePhoto} title={'Photo'} photoDate={null} initial={false} navBar={CustomNavBarPhotos} />\n                                <Scene key='PhotoDraw' component={PhotoDraw} title='Photo Edit'  photoDate={null} initial={false} navBar={CustomNavBarUpload} />\n                                <Scene key='PhotoUpload' component={PhotoUpload} title='Upload Photo' photoDate={null} initial={false} navBar={CustomNavBarUpload} />\n                                <Scene key='Sync' component={Sync} title='Syncing Data' initial={false}  hideTabBar hideNavBar />\n                            </Drawer>\n                        </Scene>\n                    </ConnectedRouter>\n                </Provider>\n                <MessageBar/>\n            </View>. I was able to fix this, it seems that everything needs a key . If I remove    than everything is fine . Been debugging seems to be a caching issue of some kind, when the app goes to the background and then to the front again it mounts everything twice but not when you first load the app from a clean install . @nicovak not a real option, a lot of issues were fixed from that version. Yes I can't I'm using some of the new methods, this is a major issue . How did you change it, can you send a code example? . @aksonov have you had a chance to look at this, pretty much a major issue? \n@jankarres if I understand you correctly what you're saying is that the issue is cased when the router loads components that then load internal components?\nFor example, I have a drawer \n<Drawer key=\"drawer\" contentComponent={CustomDrawer} drawerImage={require('./images/ic_menu_white_24dp_2x.png')}>\nThat loads CustomDrawer which loads another component NavMenue\n<View style={styles.container}>\n                <NavMenu/>\n                <Button style={{paddingBottom:15}} backgroundColor=\"red\" title='Logout' onPress={() => {this._validateLogout()}}/>\n            </View>\nIs that correct? \nI tried what you suggested but then I get\nTypeError: _reactNativeRouterFlux.Actions.photos is not a function \nWhen I call Actions.photos. @jankarres I see, my understanding each time update the state react does render or run will update in the component lifecycle that is the expected behavior. \nMy issue is different and should not happen . @aksonov that doesn't do anything my project is different, the routing is different, I'm using redux, ect.... So maybe the example project works but that does not mean there are no issues with the lib. . @aksonov I checked react-navigation while there is a similar issue it's different it happens on the back button, not on loading like my issue, second if I downgrade to an older version of react-navigation-flux this does not happen so it's with the new updates. \nI can't create a demo up like what I have to create the issue as I'm code is already big but I might be able to give you access to my project for you to test . @aksonov I think it has to do with init happing twice, check out the screenshot \n\n. @aksonov I did some more debugging, seems the issue is caused by the drawer or at least it's related. \nI have <Drawer key=\"drawer\" contentComponent={CustomDrawer} drawerImage={require('./images/ic_menu_white_24dp_2x.png')}>\nIf I remove the key everything is fine \n<Drawer contentComponent={CustomDrawer} drawerImage={require('./images/ic_menu_white_24dp_2x.png')}>\nBut the issue with that is that I get a new error \nPossible Unhandled Promise Rejection (id: 0):\nInvariant Violation: There is no route defined for key key1.\nMust be one of: 'public','key2'\nInvariant Violation: There is no route defined for key key1.\nMust be one of: 'public','key2'. @aksonov by the way this only happens on reload, i.e. when app the loads for the first time no problem. But if the app goes to the background or I reload vis sim this issue happens . @aksonov I believe this is the same issue https://github.com/wix/react-native-navigation/issues/800 \n. For now my workaround is not to run the set state method while it's loading, this solves the issue with the errors and I just have the overhead issue of running redux calls twice but not a big deal for now. @mcabs3 thanks want to help out but don't have time for a pr right now we need to launch our app, redux is might be an option don't like it but I guess that is the only option. . Thanks . @delia-m thanks that did it . I just did a workaround, not the best option but I'm using redux-subscriber to listen to my redux change and based on renderer the component \n```\n// Subscribers to selected team change\n        this.subToSelectedTeamChangeApps = subscribe('selectedTeam', state => {\n            const random = Math.random() * (100 - 15) + 15;\n        // Updates the state with a random key so the list view will force an update\n        this.setState({key: random}, function () {\n        }.bind(this));\n    });\n\n```\n<WebView\n                    key={this.state.key}\n                    ref={'WEBVIEW_REF'}\n                    source={{uri: Config.APP_TEMP_URL+selectedTeam +'?token='+accessToken}}\n                />. @ovaris did that it didn't work, @aksonov can you merge that PR from the main package so we can fix this? . Anyone have any news regarding this, we really can't launch without this . @aksonov no I tested on 0.53 same issue, the version which it was fine was 0.51 where on 0.54 had to upgrade due to testing  . The following PR https://github.com/react-navigation/react-navigation/pull/3650 \nfrom react-navigation, I think it was already merged so you just need to upgrade react-navigation to 1.5.1 . @aksonov what other issues? Are you saying you can't upgrade react-navigation because of breaking changes at some point it would need to be updated as react is getting many changes a lot of them fixes for issues and support for new ios  . @tmaly1980 the problem is that react-navigation is also not really good or reliable . @tmaly1980 Yea for me this is the  biggest core issue with react-native I think FB should have routing as part of the core package . ",
    "southerneer": "@AlmogRnD in package.json it would be:\n\"react-native-router-flux\": \"^4.0.0-beta.5\",. OK cool. Yeah, I think switching v4 to master and current to v3 makes sense. Once v4 is master then Github pages will pick up docs/index.md and the site will be live.. ~I tried adding static nav options on Example/components/Register.js and they weren't overriding the RNRF options...~ Example.js is currently using beta.7\n. I put the Echo view at the bottom of the router component to test clones and RNRF choked on the JSON.stringify call. When I commented it out it worked great...adding a commit.. All the other changes/fixes seemed to work for me!. Yes, this PR works in our project. I did get a babel decorator-support error yesterday when pointed to the beta.8 branch that went away when I pointed to my local copy. Looks like you changed that in this PR though.. I moved breaking changes to the \"migrating from v3\" page. I just wanted to pare down the amount of info on the main README.. more concise/clear version:\nif (dontInheritKeys.includes(pkey) && !parentProps[pkey]) {. ",
    "saimonmoore": "@aksonov I just upgraded a really simple app from v3 to v4 (4.0.0-beta.17) and navigation just stopped working (no errors or anything in the console). I checked the breaking changes and migration file but I didn't see anything that affected my app so I haven't really changed anything. Not sure how to proceed:\n\n(onPress for each song would execute this: const goToSongScene = () => Actions.song({song: this.props.song});). The callback executes but the Action call does nothing.\nIs there anything there that you can see offhand? Or tips to go about debugging this? \nVery much appreciate any help with this. \nThanks.\n. Nm thanks, I switched to react-navigation pure. ",
    "tejacoder": "how to add icon in v4 ? . ",
    "igorarkhipenko": "@aksonov and when I remove this prop from root, scene with tabs has two navbars with empty first one. What am I doing wrong there?. @aksonov sure, I've already tried that before and get this kind of behavior:\n\nCan I get rid of this buffer empty navbar when route is changing somehow?\n. @aksonov it didn't help, but thank you for trying. At least now I know that the problem is in react-navigation but not in my router. . @aksonov but components dispatched from tabs are doing right the way I'm looking for. I thought this is the native behavior.\n\nWhy does tab scene require additional struggles then?. Seems like leftButtonTextStyle and backButtonTextStyle props don't work either. Can someone approve that?. @aksonov I forgot to mention that I've tried 'color' before as well as the same object assigned to prop rightButtonTextStyle with component rightButton={<Text>right</Text>}.\n\nAm I doing something completely wrong?. Did you try Actions.loggedIn({type: 'replace'})?. Seems like this issue is related to react-navigation package. But it's unbelievable there's not any workaround with that. Did someone solve this problem?. I wonder if I'm doing something wrong or nobody else uses this kind of simple transition between scenes. If so, could you guys give me any advice about that please?. ",
    "rochapablo": "Which v4? Isn't 3.41.0 the last one?\nNever mind.. Shouldn't this be working?\n<Scene key=\"login\" component={Login} title=\"Login\" onEnter={this.doSomething} />. Yep, you're right! I may be doing something wrong. Thank you.. ",
    "MaxwellGover": "Adding a <View> tag instead of a TabBar w/ a height of 60 and background of black works fine.\n\n. No prob. I just wrapped icons in a React native view instead and works\nfine. Not a big deal. Thanks for everything you do!\nOn Sat, Jul 8, 2017 at 12:43 AM Pavel Aksonov notifications@github.com\nwrote:\n\nI can't just run your example, please provide github demo. Check Example\nproject, it renders tabbar normally.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/aksonov/react-native-router-flux/issues/1985#issuecomment-313833376,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AK_fA6udwCKA5LmEdtrFTXD3lzfTNV2Zks5sLwj5gaJpZM4ORkF1\n.\n. \n",
    "ajaykumar97": "You an use your custom transition effects like as follow:\nimport StackViewStyleInterpolator from 'react-navigation-stack';\n\n<Scene\nkey='main'\nhideNavBar\ntransitionConfig={transitionConfig}\n>\n\n...more scenes\n\n</Scene>\n\nconst MyTransitionSpec = ({\n    duration: 1000,\n    // easing: Easing.bezier(0.2833, 0.99, 0.31833, 0.99),\n    // timing: Animated.timing,\n});\n\nconst transitionConfig = () => ({\n    transitionSpec: MyTransitionSpec,\n    // screenInterpolator: StackViewStyleInterpolator.forFadeFromBottomAndroid,\n    screenInterpolator: sceneProps => {\n        const { layout, position, scene } = sceneProps;\n        const { index } = scene;\n        const width = layout.initWidth;\n\n        //right to left by replacing bottom scene\n        // return {\n        //     transform: [{\n        //         translateX: position.interpolate({\n        //             inputRange: [index - 1, index, index + 1],\n        //             outputRange: [width, 0, -width],\n        //         }),\n        //     }]\n        // };\n\n        const inputRange = [index - 1, index, index + 1];\n\n        const opacity = position.interpolate({\n            inputRange,\n            outputRange: ([0, 1, 0]),\n        });\n\n        const translateX = position.interpolate({\n            inputRange,\n            outputRange: ([width, 0, 0]),\n        });\n\n        return {\n            opacity,\n            transform: [\n                { translateX }\n            ],\n        };\n\n        //from center to corners\n        // const inputRange = [index - 1, index, index + 1];\n        // const opacity = position.interpolate({\n        //     inputRange,\n        //     outputRange: [0.8, 1, 1],\n        // });\n\n        // const scaleY = position.interpolate({\n        //     inputRange,\n        //     outputRange: ([0.8, 1, 1]),\n        // });\n\n        // return {\n        //     opacity,\n        //     transform: [\n        //         { scaleY }\n        //     ]\n        // };\n    }\n});. How to navigate to other tab in custom tabbar?. Thanks for your reply @micahkatz . You an use your custom transition effects like as follow:\n\nimport StackViewStyleInterpolator from 'react-navigation-stack';\n\n<Scene\nkey='main'\nhideNavBar\ntransitionConfig={transitionConfig}\n>\n\n...more scenes\n\n</Scene>\n\nconst MyTransitionSpec = ({\n    duration: 1000,\n    // easing: Easing.bezier(0.2833, 0.99, 0.31833, 0.99),\n    // timing: Animated.timing,\n});\n\nconst transitionConfig = () => ({\n    transitionSpec: MyTransitionSpec,\n    // screenInterpolator: StackViewStyleInterpolator.forFadeFromBottomAndroid,\n    screenInterpolator: sceneProps => {\n        const { layout, position, scene } = sceneProps;\n        const { index } = scene;\n        const width = layout.initWidth;\n\n        //right to left by replacing bottom scene\n        // return {\n        //     transform: [{\n        //         translateX: position.interpolate({\n        //             inputRange: [index - 1, index, index + 1],\n        //             outputRange: [width, 0, -width],\n        //         }),\n        //     }]\n        // };\n\n        const inputRange = [index - 1, index, index + 1];\n\n        const opacity = position.interpolate({\n            inputRange,\n            outputRange: ([0, 1, 0]),\n        });\n\n        const translateX = position.interpolate({\n            inputRange,\n            outputRange: ([width, 0, 0]),\n        });\n\n        return {\n            opacity,\n            transform: [\n                { translateX }\n            ],\n        };\n\n        //from center to corners\n        // const inputRange = [index - 1, index, index + 1];\n        // const opacity = position.interpolate({\n        //     inputRange,\n        //     outputRange: [0.8, 1, 1],\n        // });\n\n        // const scaleY = position.interpolate({\n        //     inputRange,\n        //     outputRange: ([0.8, 1, 1]),\n        // });\n\n        // return {\n        //     opacity,\n        //     transform: [\n        //         { scaleY }\n        //     ]\n        // };\n    }\n});. You an use your custom transition effects like as follow:\n\nimport StackViewStyleInterpolator from 'react-navigation-stack';\n\n<Scene\nkey='main'\nhideNavBar\ntransitionConfig={transitionConfig}\n>\n\n...more scenes\n\n</Scene>\n\nconst MyTransitionSpec = ({\n    duration: 1000,\n    // easing: Easing.bezier(0.2833, 0.99, 0.31833, 0.99),\n    // timing: Animated.timing,\n});\n\nconst transitionConfig = () => ({\n    transitionSpec: MyTransitionSpec,\n    // screenInterpolator: StackViewStyleInterpolator.forFadeFromBottomAndroid,\n    screenInterpolator: sceneProps => {\n        const { layout, position, scene } = sceneProps;\n        const { index } = scene;\n        const width = layout.initWidth;\n\n        //right to left by replacing bottom scene\n        // return {\n        //     transform: [{\n        //         translateX: position.interpolate({\n        //             inputRange: [index - 1, index, index + 1],\n        //             outputRange: [width, 0, -width],\n        //         }),\n        //     }]\n        // };\n\n        const inputRange = [index - 1, index, index + 1];\n\n        const opacity = position.interpolate({\n            inputRange,\n            outputRange: ([0, 1, 0]),\n        });\n\n        const translateX = position.interpolate({\n            inputRange,\n            outputRange: ([width, 0, 0]),\n        });\n\n        return {\n            opacity,\n            transform: [\n                { translateX }\n            ],\n        };\n\n        //from center to corners\n        // const inputRange = [index - 1, index, index + 1];\n        // const opacity = position.interpolate({\n        //     inputRange,\n        //     outputRange: [0.8, 1, 1],\n        // });\n\n        // const scaleY = position.interpolate({\n        //     inputRange,\n        //     outputRange: ([0.8, 1, 1]),\n        // });\n\n        // return {\n        //     opacity,\n        //     transform: [\n        //         { scaleY }\n        //     ]\n        // };\n    }\n});\n\n. You an use your custom transition effects like as follow:\nimport StackViewStyleInterpolator from 'react-navigation-stack';\n\n<Scene\nkey='main'\nhideNavBar\ntransitionConfig={transitionConfig}\n>\n\n...more scenes\n\n</Scene>\n\nconst MyTransitionSpec = ({\n    duration: 1000,\n    // easing: Easing.bezier(0.2833, 0.99, 0.31833, 0.99),\n    // timing: Animated.timing,\n});\n\nconst transitionConfig = () => ({\n    transitionSpec: MyTransitionSpec,\n    // screenInterpolator: StackViewStyleInterpolator.forFadeFromBottomAndroid,\n    screenInterpolator: sceneProps => {\n        const { layout, position, scene } = sceneProps;\n        const { index } = scene;\n        const width = layout.initWidth;\n\n        //right to left by replacing bottom scene\n        // return {\n        //     transform: [{\n        //         translateX: position.interpolate({\n        //             inputRange: [index - 1, index, index + 1],\n        //             outputRange: [width, 0, -width],\n        //         }),\n        //     }]\n        // };\n\n        const inputRange = [index - 1, index, index + 1];\n\n        const opacity = position.interpolate({\n            inputRange,\n            outputRange: ([0, 1, 0]),\n        });\n\n        const translateX = position.interpolate({\n            inputRange,\n            outputRange: ([width, 0, 0]),\n        });\n\n        return {\n            opacity,\n            transform: [\n                { translateX }\n            ],\n        };\n\n        //from center to corners\n        // const inputRange = [index - 1, index, index + 1];\n        // const opacity = position.interpolate({\n        //     inputRange,\n        //     outputRange: [0.8, 1, 1],\n        // });\n\n        // const scaleY = position.interpolate({\n        //     inputRange,\n        //     outputRange: ([0.8, 1, 1]),\n        // });\n\n        // return {\n        //     opacity,\n        //     transform: [\n        //         { scaleY }\n        //     ]\n        // };\n    }\n});. You an use your custom transition effects like as follow:\n\nimport StackViewStyleInterpolator from 'react-navigation-stack';\n\n<Scene\nkey='main'\nhideNavBar\ntransitionConfig={transitionConfig}\n>\n\n...more scenes\n\n</Scene>\n\nconst MyTransitionSpec = ({\n    duration: 1000,\n    // easing: Easing.bezier(0.2833, 0.99, 0.31833, 0.99),\n    // timing: Animated.timing,\n});\n\nconst transitionConfig = () => ({\n    transitionSpec: MyTransitionSpec,\n    // screenInterpolator: StackViewStyleInterpolator.forFadeFromBottomAndroid,\n    screenInterpolator: sceneProps => {\n        const { layout, position, scene } = sceneProps;\n        const { index } = scene;\n        const width = layout.initWidth;\n\n        //right to left by replacing bottom scene\n        // return {\n        //     transform: [{\n        //         translateX: position.interpolate({\n        //             inputRange: [index - 1, index, index + 1],\n        //             outputRange: [width, 0, -width],\n        //         }),\n        //     }]\n        // };\n\n        const inputRange = [index - 1, index, index + 1];\n\n        const opacity = position.interpolate({\n            inputRange,\n            outputRange: ([0, 1, 0]),\n        });\n\n        const translateX = position.interpolate({\n            inputRange,\n            outputRange: ([width, 0, 0]),\n        });\n\n        return {\n            opacity,\n            transform: [\n                { translateX }\n            ],\n        };\n\n        //from center to corners\n        // const inputRange = [index - 1, index, index + 1];\n        // const opacity = position.interpolate({\n        //     inputRange,\n        //     outputRange: [0.8, 1, 1],\n        // });\n\n        // const scaleY = position.interpolate({\n        //     inputRange,\n        //     outputRange: ([0.8, 1, 1]),\n        // });\n\n        // return {\n        //     opacity,\n        //     transform: [\n        //         { scaleY }\n        //     ]\n        // };\n    }\n});. You can set a check on the name of particular scene inside the transitionConfig like:\n\n```\nif (scene.route.routeName === 'myScene') {\nconst inputRange = [index - 1, index, index + 1];\n    const opacity = position.interpolate({\n        inputRange,\n        outputRange: ([0, 1, 0]),\n    });\n\n    const translateX = position.interpolate({\n        inputRange,\n        outputRange: ([width, 0, 0]),\n    });\n\n    return {\n        opacity,\n        transform: [\n            { translateX }\n        ],\n    };\n\n}\n```. ",
    "kalraneeraj24550": "thanks sir, sir will this only work in root scene . if i want to have this transition only to particular screen. that not working. but i apply transition config to root scene only then it is working.\n<Router\n  >\n    <Scene\n      key=\"root\"\n      hideNavBar\n      transitionConfig={transitionConfig}      \n    >\n      <Scene key=\"SplashScreen\" component={SplashScreen} hideNavBar />\n      <Scene key=\"LandingScreen\" component={LandingScreen} hideNavBar\n      transitionConfig={transitionConfig}\n      />\n      <Scene key=\"Login\" component={Login} hideNavBar\n      />\n      <Scene key=\"SignUp\" component={SignUp} hideNavBar\n      />\n      <Scene key=\"ForgotPassword\" component={ForgotPassword} hideNavBar />\n      <Scene key=\"EditProfile\" component={EditProfile} hideNavBar />\n\n\n</Router\n. thanks @aksonov sir, your solution worked for me.. ",
    "alexchia": "thanks!\nplease check out:\nhttps://github.com/alexchia/react-native-router-flux\nOnly changes are in Example/components/TabView.js\nTo replicate,\nGo to TabBar page>next screen for tab2_1>Logout and back to Launch screen\nAt tab2_2, there doesn't seem to be any way to pop back to the Launch screen.\nCan't even hack my way back there.\nDoing Actions.launch() would be incorrect there because it would push Launch instead of popping down back to launch.. @aksonov thanks for so quickly pushing a fix!\ncould you deploy it to npm so I can test it with the complex Scene hierarchy I have in my app right now?. works great in beta7. amazing work!\nthanks @aksonov . okay i can confirm that works. thanks!\nplease include in future documentation.. you can put panHandlers={null} in a parent/root Scene to disable this behavior.. Found that the issue happens when I use different TabIcon classes for each tab.\nSolved when I have all the tabs use the same TabIcon class.. ",
    "jaumebosch": "Keep informed, I'll do the testing :D. tested on beta7\nnavigationBarStyle={[STYLES.navBar]} -> working\nnavigationBarTitleImage={require('../img/logo.png')} -> working!!\nnavigationBarTitleImageStyle={[STYLES.navBarLogo]} -> working!!\ndrawerImage={require('../img/burger.png')} -> not working\nGreat job!\nI've noticed on beta6 that the drawerImage import on navBar.js isn't used anywhere. yep! I was setting once per scene, instead in the drawer scene.\nAlmost perfect!, but the icon is too low, is there any way to pass a \"drawerImageStyle\" ??. you're right\nI've check again on V3 documentation and I can use \"leftButtonIconStyle\", which also applies to drawerImage. I think we can close it, everything resolved!. activeBackgroundColor works, but with tabBarSelectedItemStyle you could also set the active text color.\nAnother thing we've lost is the that the property \"title\" now is rendered as a subtitle in small font size at the bottom of the tab. If we don't set an icon, the title must be rendered at the middle of the tab in normal font size. But if you don't set an icon, the text must be centered and bigger, mustn't it?. nope, and it works now!\nthanks a lot.\nBy the way, where can I find the documentation for the tabs? Haven't seen \"lazy\" option, and also I need to refresh onChangeTab.\nThanks again!. tried  fix with no luck, any other idea?\nI've noticed that the problem only happens if the scene is inside a drawer. Here you have.\nThe scene which, if inside the drawer, doesn't receive this.props is \"LawyerEnquiryDetails\"\nCheers\n```\n \n\n\n\n                <Scene key=\"ClientMain\">\n                    <Scene key=\"ClientMainBody\"\n                           component={ClientMain}\n                           panHandlers={null}\n                           leftButtonImage={require('./images/back.png')}\n                           onLeft={() => Actions.pop()}\n                           navigationBarStyle={[STYLES.navBar]}\n                           leftButtonIconStyle={[STYLES.navBarButton, STYLES.navBarLeftButton]}\n                           navigationBarTitleImage={require('./images/logo.png')}\n                           navigationBarTitleImageStyle={[STYLES.navBarLogo]}>\n                    </Scene>\n                </Scene>\n\n                <Scene key=\"ClientGreetings\">\n                    <Scene key=\"ClientGreetingsBody\"\n                           component={ClientGreetings}\n                           panHandlers={null}\n                           leftButtonImage={require('./images/back.png')}\n                           onLeft={() => Actions.Main()}\n                           navigationBarStyle={[STYLES.navBar]}\n                           leftButtonIconStyle={[STYLES.navBarButton, STYLES.navBarLeftButton]}\n                           navigationBarTitleImage={require('./images/logo.png')}\n                           navigationBarTitleImageStyle={[STYLES.navBarLogo]}>\n                    </Scene>\n                </Scene>\n\n                <Scene key=\"LawyerTerms\">\n                    <Scene key=\"LawyerTermsBody\"\n                           component={LawyerTerms}\n                           panHandlers={null}\n                           leftButtonImage={require('./images/back.png')}\n                           onLeft={() => Actions.pop()}\n                           navigationBarStyle={[STYLES.navBar]}\n                           leftButtonIconStyle={[STYLES.navBarButton, STYLES.navBarLeftButton]}\n                           navigationBarTitleImage={require('./images/logo.png')}\n                           navigationBarTitleImageStyle={[STYLES.navBarLogo]}>\n                    </Scene>\n                </Scene>\n\n                <Scene key=\"LawyerMain\" component={LawyerMain} hideNavBar />\n                <Scene key=\"LawyerForgot\" component={LawyerForgot} hideNavBar />\n                <Scene key=\"LawyerSignupStep1\" component={LawyerSignupStep1} hideNavBar />\n                <Scene key=\"LawyerSignupStep2\" component={LawyerSignupStep2} hideNavBar />\n                <Scene key=\"LawyerSignupGreetings\" component={LawyerSignupGreetings} hideNavBar />\n\n                <Drawer key=\"Drawer\" drawer contentComponent={Drawer}\n                        drawerImage={require('./images/burger.png')}\n                        navigationBarStyle={[STYLES.navBar]}\n                        leftButtonIconStyle={[STYLES.navBarButton, STYLES.navBarLeftButton]}\n                        rightButtonTextStyle={[STYLES.navBarRightText]}\n                        rightButtonIconStyle={[STYLES.navBarButton, STYLES.navBarRightButton]}\n                        navigationBarTitleImage={require('./images/logo.png')}\n                        navigationBarTitleImageStyle={[STYLES.navBarLogo]}>\n                    <Scene key=\"LawyerMyEnquiries\" component={LawyerMyEnquiries} panHandlers={null} />\n\n                    <Scene key=\"LawyerEnquiries\" tabBarPosition={'bottom'} tabs={true} default=\"tab1\" tabBarSelectedItemStyle={STYLES.tabSelected} showLabel={false} tabBarStyle={STYLES.tabBar}>\n                        <Scene  key=\"tab1\"\n                                title={I18n.t('myAreas')}\n                                iconName=\"folder-open-o\"\n                                icon={TabIcon}\n                                component={LawyerAvailableEnquiries}\n                                initial={true}\n                        />\n                        <Scene  key=\"tab2\"\n                                title={I18n.t('otherAreas')}\n                                iconName=\"archive\"\n                                icon={TabIcon}\n                                component={LawyerOtherEnquiries}\n                        />\n                    </Scene>\n\n                    <Scene key=\"LawyerReviews\"\n                           component={LawyerReviews}\n                           panHandlers={null} />\n                    <Scene key=\"LawyerProfile\"\n                           rightTitle={I18n.t('save')}\n                           onRight={()=>Actions.refresh({ save: true }) }\n                           component={LawyerProfile}\n                           panHandlers={null}\n                           passProps={true} />\n                    <Scene key=\"LawyerPlans\"\n                           component={LawyerPlans}\n                           panHandlers={null} />\n                    <Scene key=\"LawyerAdvisor\"\n                           component={LawyerAdvisor}\n                           panHandlers={null} />\n\n                    <Scene key=\"LawyerEnquiryDetails\"\n                           leftButtonImage={require('./images/back.png')}\n                           onLeft={() => Actions.LawyerMyEnquiries()}\n                           component={LawyerEnquiryDetails}\n                           panHandlers={null} />\n                </Drawer>\n            </Scene>\n        </Router>\n\n```. @davidinhong The scene which, if inside the drawer, doesn't receive this.props is \"LawyerEnquiryDetails\"\n. no news?. new info:\nadding an \"onStateChange\" I see this on console.log:\nreducer: ACTION: {type: \"Navigation/NAVIGATE\", routeName: \"LawyerEnquiryDetails\", \nparams: {\u2026}}\nparams: drawer: true\ndrawerImage: 9\nerror: \"\"\nidEnquiry: 274\ninit: true\nleftButtonIconStyle: (2)\u00a0[{\u2026}, {\u2026}]\nleftButtonImage: 7\nnavigationBarStyle: [{\u2026}]\nnavigationBarTitleImage: 8\nnavigationBarTitleImageStyle: [{\u2026}]\nonLeft: \u0192 onLeft()panHandlers: null\nrightButtonIconStyle: (2)\u00a0[{\u2026}, {\u2026}]\nrightButtonTextStyle: [{\u2026}]\nrouteName: \"LawyerEnquiryDetails\"__proto__: ObjectrouteName: \"LawyerEnquiryDetails\"\ntype: \"Navigation/NAVIGATE\"__proto__: Object\nEnquiryDetails.js:26\nand in the scene EnquiryDetails, when ask for this.props.idEnquiry I get\n undefined. Yep, I've noticed that, but I need the drawer. umm strange situation, in previous versions it worked flawlessly, but after upgrade it begin to fail.\nCan we do any kind of test to help you?\ncheers. Ok, when is it planned to adopt RN 3.x?. Thanks @edoantonioco it worked quite well!. ",
    "astulip": "OK. Hard work, it is already possible.\n. console.error: \"Error handling:Error: [mobx] Invariant failed: Since strict-mode is enabled, changing observed observable values outside actions is not allowed. Please wrap the code in an action if this change is intended. Tried to modify: NavigationStore@4._onEnterHandlerExecuted\"\nversion: 4.0.0-beta.14. I am through the version of the installation of yarn, it is not easy to test. If you follow the latest release version. I can try. I have now closed mobx strict mode. Okay, after i'm released, I'll try it.. I am in China, do you look at this git address (https://git.oschina.net/stulip/react-native-template) Can you visit?\nProject catalog\nAdb install build / android / iyimu-main-debug-0.1.17.apk\nYarn && yarn start\nHome click Android or iOS text.. There is also this problem.\nIf you can access my project git. After you update git can run on ios above\nScript: react-native run-ios. Yes, I changed your example:\nadd code in TabView.js\n<Button onPress={Actions.home}>home</Button>\nYou can reproduce the problem.\nShould be Action.pop bug. ",
    "prashoor-dev": "To be honest, I am not sure what the last comment means.\nCan you elaborate more @aksonov ?. @Dgs-asohail4 RNRF has now its own drawer.\nreact-native-drawer can be removed and simple RNRF's drawer can be used.\nIt's easy to use and manage. You might need to refactor your routing file though.\nAnd this.props.navigationState is now available as this.props.navigation.state.. @delia-m , I am not using a container to pass props. The component is directly assigned to the scene.. @aksonov Can you help me out ?. I have already gone through every usage of Actions in the Example project, however @aksonov, I am not able to send any piece of data to the other scene.. This is an excerpt from Router\n```jsx\n        \n\n\n                <Scene\n                    key=\"loginScreen\"\n                    component={LoginScreen}\n                    type={ActionConst.RESET}\n                    hideNavBar\n                    />\n\n                <Drawer key=\"drawer\" hideNavBar={true} type={ActionConst.RESET} contentComponent={NavigationDrawer}  open={false} drawerWidth={drawerWidth}>\n                    <Scene key=\"wrapper\">\n                        <Scene\n                            key=\"dashboardScreen\"\n                            title={Constant.strings.kDashboard}\n                            hideNavBar={true}\n                            component={DashboardScreen}\n                            type={ActionConst.REPLACE}\n                            initial\n                        />\n                        <Scene key=\"teamNav\" navigationBarStyle={styles.navBar} titleStyle={styles.navBarTitle} type={ActionConst.REPLACE}>\n                            <Scene\n                                key=\"teamOverview\"\n                                title={\"Team Overview\"}\n                                hideNavBar={true}\n                                type={ActionConst.PUSH}\n                                component={TeamOverviewDetailScreen}\n                            />\n                            <Scene\n                                key=\"teamDetail\"\n                                title={\"Team Detail\"}\n                                hideNavBar={true}\n                                type={ActionConst.PUSH}\n                                component={TeamDetailScreen}\n                                />\n                        </Scene>\n                    </Scene>\n                </Drawer>\n            </Scene>\n        </Router>\n\nWhen I am on **Team Overview** screen and I try to move to **Team Detail** Screen with some data,\ni.e.;js\nActions.teamDetail({team: teamObject})\n```\nI successfully navigate to the screen, but no data is sent.\nIn earlier version (v3) I was able to receive this data, on detail screen.. @Blapi Please check my earlier comment. Hi Everyone, I made another attempt to migrate my project again from scratch, and now everything works. I am not sure about what I did wrong earlier. But I am closing this issue for as it is hard to maintain issues for @aksonov.. ",
    "amang8662": "Yeah, even I don't understand the meaning behind the last comment @aksonov . Can you please explain it?. I am trying to implement react-native-drawer in rnrf and using this.props.navigation.state instead of this.props.navigationState but facing following error.\n\nthe props i am gettting are\n\nMy Code is:\nNavigationDrawer.js\n\nRoutes.js\n\nWhat should i pass to DefaultRenderer component to make it work?. I want to know about the parameters to be passed to navigationState & onNavigate props of DefaultRenderer. Anything other than children[0] which i pass to navigationState returns error like this.\n\nData i'm getting from Actions._state in NavigationDrawer.js\n\n. ",
    "temadev": "Stuck on the same place. I think we have to extend somehow children[0] by data from Actions._state, but have no idea how can we do that trick. Looks like we still need some kind of DefaultRenderer component to render it together. Hello, @foyarash!\nWhen I'm using {this.props.children[0]} in overlayed drawer component and changing scenes via Actions.someSceneKey() it doesn't change a scene, but I see that Actions.currentScene is changed.\nI think we have to update this.props.children[0] with new data to make it work but can't find a solution for that. I'm just thinking, maybe we can inject somehow data from Actions instead of using this.props.children[0]?. ",
    "Dgs-asohail4": "Strange this is still not fixed\n. ",
    "mirrorshades": "Regarding slow transitions:\n@Rewieer are you passing a lot of props or loading data from state via Redux or something similar? Also was this tested only in iOS or android simulators?\nI ask because haven't had any problems with transitions. The only time I noticed a slow transition was when I had some buggy code in my react native projects. Something sounds off though.\nSorry for going off topic.. @aitemr react-native-router-flux ^3.37.0 is a terrible fix if you are using a react-native ^0.48.3 since it calls proptypes the old way.\nimport React, {\n  PropTypes,\n} from 'react';. Add the lazy prop to your tab component. It's in the docs. https://github.com/aksonov/react-native-router-flux/blob/master/docs/API.md#tabs-tabs-or-scene-tabs\n```\n<Tabs\n    {...props}\n    lazy\n\n```. \n",
    "omprakash1989": "@aksonov: Sorry...my bad.. ",
    "abeltje1": "I've also tried panHandlers={null} but it's not working. On another note: is it possible to only disable certain scenes within a parent scene? (i.e. I have 3 child-scenes and want only two of them to have the swipe-back)?. Nevermind, It was a mistake on my end: everything works great, sorry!. You mean with swipe right? or just in general no back-button?\ntry setting panHandlers={null} on screen1. panHandler={null} is for touchevents. If you want to disable the back button you should use the back property on the scene, or if you want to hide the navbar altogether you should use hideNavBar. I'll try, though I'm confused a lot of times with RNRF myself - just started developing with RN and Redux and it's a little much, so excuse me if I'm wrong. \nLet me ask a few questions to understand better what's going on, okay?\n1: When in screen 1, can you still swipe from the left side of the screen to go to the splash screen?\n2: If you use hideNavBar do you still see a back button?\nI tried it myself and with hideNavBar there is no back button left. Secondly I also tried panHandlers={null} and that disables the swipe. To me it looks like this piece of code below should disable going back altogether. can you confirm this does not work and if that's the case: can you tell me which back option still works (back button in header OR swipe OR both)?\n<Router>\n      <Scene key=\"root\">\n          <Scene key=\"splash\" component={SplashScreen} initial />\n          <Scene key=\"Screen1\" component={Screen1} panHandlers={null} hideNavBar />\n          <Scene key=\"Screen2\" component={Screen2} />\n      </Scene>\n</Router>\ncheers. Works like a charm indeed (even though panHandlers worked for me too). do you perhaps know how to disable the drawer but not the swipe left? @themakerman . Thanks for your quick reply and help! I will try to figure it out. cheers!. I decided sticking with v3, It gave me too much of a headache hehe. I'll check back in a few weeks time..still getting used to RN and Redux.. @aksonov you're right, on my simulator I couldnt swipe for some reason but on phone it actually works, sorry. Is the reverse also possible? (Disable drawer swipe but not back swipe)?\nThanks for your response! \n. To further clarify this issue I made a GIF of the example project, @aksonov could you maybe take a look at this?\n\n. @aksonov great thanks! I'll check it out in a few minutes, will let you know. You really can't reproduce? that's weird..I was using iOS 10 emulator too (XCode 8.3.3). \nCheers\n. @aksonov I tried your latest commits but it didn't work :( Clicking in very rapid succession still opens a screen twice.. Hmm, I don't fully understand what you're trying to say. In my own app it happens on literally every button to which I have bound Actions.key. In the example it's also happening on every possible transition (as you can see in the GIF, it's not only on login but also on register). How can it be that it's because of the componentDidMount of login but also appears on other scenes? \nI'm sorry if I don't understand it correctly, but I'm having a hard time figuring this out. . You're right, it's a react navigation issue. But what should we do now? wait for them until they fix it (with the current issue-handling state of React Navigation can take ages lol)? Or fix it inside RNRF? Or should all developers implement their own solutions until React Navigation fixes the issue?\nWhat do you suggest?\nCheers. will do, thanks for the help!. It works for all Actions except for pop (calling pop manually), so great progress!. I think you could use type='replace' to achieve this, not sure though. \nWhen navigation from B to C, you'd use type='replace' and from C to D again.  Then I think you can use pop to go from D to A.\nonce again: not sure.. But he wants to control the 'user phone home back button', which I think is the back button on android. Is it even possible to bind popTo to that button?\n. Have you tried A nested tabbar?. ",
    "SourceCipher": "@haythamakl solution works, but dont forget to import ActionConst from the react-native-router-flux. @aksonov I switched the app navigator to the React Navigation, but I will test on my backed up app to see if there are any differences in speed at all. Ok I just fixed by doing this \"cheat\". To make tabs to swipe, make sure you have set tabBarPosition='top'. \nTo disable the tabBarComponent you have to return null as a component. To do so just do tabBarComponent={() => null}\nBy adding these 2 to a Tabs component it will make your tabs swiping without even setting swipeEnabled={true} . @aksonov I have been trying to make my app with this navigation to work perfectly but its struggling to do the job and its a shame as its a very good library, easy to use as well. \nBut after the latest update a lot of features not working anymore. I implemented my custom header in navBar I think which works fine, but checking the current screens in different components is a mess as it will never return the current screen but the one is being mounted from. And the back button on the android is not working as well. \n. @aksonov Thanks for your help! Because I am using a custom header, all the logic goes there as well and without keeping a track in the header what screen is mounted is pretty hard to handle all the logic.. @aksonov  I implemented the current screen logic and all works fine.. The problem is still the long delay between the card press and the screen mount. It takes a while for the screen to appear for some reason. @daviscabral Which should make screens switching super fast, but thats not the case. I have a custom header component and there is a profile icon. when you press it it simply calls this onPress={() => Actions.profile()}. Now once I press it, its not switched instantly the same way it would do If I press on the tabs. @daviscabral  you mean v4.0.0?. @aksonov  I am using mobx but I dont think adding with observables is a good idea. I will try using navigation.state even tho not really sure how to implement it :/ But using Actions.currentScene on componentDidMount is still showing the wrong scene tho. @aksonov  oh I see.. I think I can do that with the mobx the same way as well\nUpdated: Your solution worked after I used this with Mobx. Well done. @matthewkwong2  I added backAndroidHandler in my route with the function \nonBackPress = () => {\n        if (Actions.state.index === 0) {\n          return false\n        }\n        Actions.pop()\n        return true\n    }\nAnd it works fine for now, but I did not needed to do that before the new update . Same issue here as I want to add different width to each tab but I cant seem to find a way to do it.\nI was about to add the issue that the tabStyle is not working at all as it says Override the style for an individual tab of the tabbar but having this  tabStyle  in each tab component which is a child of the Tabs or Scene with the tabs={true}will not take any custom styling whatsoever . @dextermb I think thats what I did similar to it as I saw a tutorial for the custom Tabs, but nothing worked at all, but I will try your sample later and let you know. ",
    "rodrigofbm": "Nothing work. Can someone help?. @yeomann Yeah! Work's, thanks por sharing!. @lupino22 \nAfter I added type={ActionConst.REPLACE} the scene does not load anymore. Just type='reset' works, but it minizes the app. ",
    "chirag773": "\nwhat do you mean mate? @rodrigofbm both v3 and v4 works now. mind sharing your implementation? I am using type={ActionConst.RESET} in Scenes and it's been working since.\n\nI'm also facing the same problem. ",
    "sdv1812": "\n\nwhat do you mean mate? @rodrigofbm both v3 and v4 works now. mind sharing your implementation? I am using type={ActionConst.RESET} in Scenes and it's been working since.\n\nI'm also facing the same problem\n\n@chirag773  What problem are you facing? You can provide the prop type={ActionConst.RESET} to the scene from which you don't want to go back. You can also use Actions.reset('Screen1') in the SplashScreen component (from the example above). . I am facing the same issue. Cannot style the header title with custom font. Its working in iOS but its not working in android. Its not that the font is not working, I am able to use it inside the scenes for both iOS and android. Its only in the RNRF header of Android its not working. . ",
    "FaizalMalik": "@aksonov  I am also facing the same issue \n````\n\n\n\n\n\n                    </Drawer>    \n                </Scene>\n            </RouterWithRedux>\n\n````\nI have given  type={ActionConst.RESET}  in Home Scene, Still after login when i press back , It take User Back to Login screen. \nI have two screens - Login and Home. after successful login , do not take user back to Login screen .\nCan some one help me ? . ",
    "Sonu654": "App.js \nrender(){\n  return(\n     <Provider store={store}>\n      <Router navigationBarStyle={styles.navBar}\n        titleStyle={styles.navBarTitle}\n        barButtonTextStyle={styles.barButtonTextStyle}\n        barButtonIconStyle={styles.barButtonIconStyle}\n        back\n        navBarButtonColor={{ color: '#fff' }}\n      >\n          <Stack key=\"root\" hideNavBar>\n                  <Stack key=\"loginStack\"> \n                      <Scene Key=\"login\" component={Login} title=\"Please Login\"/>\n                      <Scene Key=\"register\" component={Register} title=\"Register\"/>\n                  </Stack> \n                  <Stack key=\"dashboardStack\">\n                    <Scene Key=\"home\" component={Home} title=\"Home\"/>\n                    <Scene Key=\"list\" component={List} title=\"List\"/>\n                    <Scene Key=\"details\" component={Details} title=\"Details\"/>\n                  </Stack>\n            </Stack> \n      </Router>\n    </Provider>\n  );\n}\n\nLogin.js \nrender() {\n      return (\n        \n\n\nActions.register()} title='Click Me'>\n\n       <View style={styles.formContainer}>\n              <LoginForm />\n       </View>\n\n    </View>\n\n)\n\n}\nissue is \n_reactNativeRouterFlux.Actions.register is not a function.(in '__reactNativeRouterFlux.Actions.register()', \n__reactNativeRouterFlux.Actions.register' is undefined)\n. ",
    "xdamman": "Thanks for bringing my attention to this. What node version are you using? On a Mac?\nI cannot reproduce it yet.\nThis is what I see . and actually all the answers to my questions where in the log above \u00af_(\u30c4)_/\u00af\nnode v6.9.5\nnpm v3.10.10\nStill digging into this.. works for me with node v6.95 and npm v.3.10.10 \ud83e\udd14\nand opencollective is not in my PATH. Not sure what else I can try.... So basically, this means that somehow it didn't link ./node_modules/.bin/opencollective to ./node_modules/opencollective/dist/bin/opencollective.js OR that it doesn't add automatically ./node_modules/.bin/ to the PATH when running npm install. . Does it work for you locally when you change the postinstall script to that command? (I couldn't reproduce the issue so cannot test). Good to know that it solved the issue. That's weird that somehow npm is not considering ./node_modules/.bin as a source of executable files in your setup (but it does in mine). Curious if others have the same issue. \nThanks for spending the time to figure this out \ud83d\udc4d. ",
    "DineshRajput21": "I am facing same issue and don't have any Idea how I can resolve it, could you please explain me why it's happening ? . ",
    "quarryman": "@aksonov Are you referencing this change?\n\n\nContainer scenes (that has children) cannot have component (or it will be considered as child!). If you want to customize containers, use react navigation custom navigators and pass it as navigator prop.\n. @aksonov Is there a chance you guys will give an example of usage?\n\n\nGiven we have a structure\n<Scene key='drawer' type={} component={NavigationDrawer} open={false}>\n  <Scene />\n  <Scene />\n</Scene>\nNavigationDrawer component was rendering children.\nWhat must it render since new version?. try using type={'back'} instead.. @aksonov I will take a look and tell if i can narrow it down.. @aksonov I can not confirm this has been fixed for Android on master. \nLooking into PR now\n. PR merged fixed the issue.\nStill it was merged to master and Example rely on beta.xxx currently.. @diegocouto did you check it with Example app? . @diegocouto  are you on master or your PR branch?. Just did clean install on master and back button is still not there. @aksonov that was the issue. \nIt works after switching example router dependency to master\nDo you think it makes sense to merge this fix into beta branch not to confuse new users trying example app.\nIt will at least prevent this issue reports from being submitted by those who try example.\n@diegocouto thanx for a fix. might be duplicate of closed one\nhttps://github.com/aksonov/react-native-router-flux/issues/2017. ",
    "Venumteam": "this helps https://github.com/aksonov/react-native-router-flux/blob/v4/Example/Example.js\nthanks for your feedback. ",
    "nishiltamboli": "I had similar issue. I was switching to router flux from react navigation. I then completely removed react navigation and reinstalled router flux and cleaned watchman logs. You may as well try uninstalling the app if yours is a case similar to mine. I did that also for safer side. And then, this error went away without any change in code. Thanks @aksonov for this library. I have always admired router flux and the work you put in. And good job with clearing soo many open issues in such less time! Appreciate it.. @sitompul I have the exact same issue! Did you find a fix for this? I am planning to use an older version instead but I dont intend to do that. I like the platform specific overrides of Screen to Screen nav animation! And what version of RN are you using? Mine is 0.50.4. Also my RNRF version is the same as yours.. ",
    "whayler1": "I'm having the same issue. ",
    "cadudragon": "rightTitle only works with onRight?\nI've changed my project and still don wokrs.\nLet me show my cenario.\nThis is my Router Component:\n<Router>\n            <Scene key=\"root\" modal hideNavBar>\n                <Scene\n                    key=\"auth\"\n                    initial title=\"Please Login\"\n                    onRight={() => console.log('Right button')}\n                    rightTitle=\"Right\"\n                >\n                    <Scene key=\"login\" component={LoginForm} />\n                </Scene>\n                <Scene key=\"main\">\n                    <Scene\n                        renderRightButton={() => <Text onPress={() => { console.log('Add'); }}>Add</Text>}\n                        key=\"employeeList\"\n                        component={EmployeeList}\n                        title=\"Employeessss\"\n                        onRight={() => alert('Right button')}\n                    />\n                </Scene>\n            </Scene>\n        </Router>\nI'm trying to use rightTitle in the  key Scene and doesnt show:\n\nAm I doing somenthing wrong?\nFor now I'm using renderRightButton instead of rightTitle.\n. I'm still newbie with git and npm, but I think I've done right:\nnpm install aksonov/react-native-router-flux#pull/2015/head\nMy dependencies look like this:\n\nAfter rerun the rightTitle still not appearing. v4 beta.8 also not showing the output of right/leftTitle. . ",
    "parachute-dev": "Still seem to have the same issue - no text appearing - tried rightTitle & leftTitle (using onLeft & onRight too). Currently using ^4.0.0-beta.11\nThis is with the android emulator on Windows. \n\"dependencies\": {\n    \"firebase\": \"^4.1.3\",\n    \"mobx\": \"^3.2.1\",\n    \"mobx-react\": \"^4.2.2\",\n    \"prop-types\": \"^15.5.10\",\n    \"react\": \"16.0.0-alpha.12\",\n    \"react-native\": \"0.46.3\",\n    \"react-native-router-flux\": \"^4.0.0-beta.11\",\n    \"react-navigation\": \"^1.0.0-beta.11\",\n    \"react-redux\": \"^5.0.5\",\n    \"redux\": \"^3.7.2\",\n    \"redux-thunk\": \"^2.2.0\"\n  },\n  \"devDependencies\": {\n    \"babel-jest\": \"20.0.3\",\n    \"babel-preset-react-native\": \"2.1.0\",\n    \"eslint-config-rallycoding\": \"^3.2.0\",\n    \"jest\": \"20.0.4\",\n    \"react-test-renderer\": \"16.0.0-alpha.12\"\n  },\n  \"jest\": {\n    \"preset\": \"react-native\"\n  }\n}\n. Hi there - yes of course, thanks for the response - as below.\n\n\n\n\n console.log('left')}\n                            title=\"Please Login\"\n                        />\n                    \n\n console.log('right')}\n                            component={EmployeeList}\n                            title=\"Employees\"\n                        />\n                    \n\n\n\n\n. Hey - sorry - have done so now. Still not seeing what I expect on tab1_1 It should show a right title? \nrenderRightButton does work however on tab2_1\n\n. @diegocouto Thanks - also noticed that the alignment isn't in the centre for the header - not sure if there's another flag to change this in the API? . Thanks!\n[image: Parachute] http://www.thisisparachute.com/ David R. Bova -\nTechnical\nDirector at Parachute\nAddress: 4 Lansdowne Crescent, Glasgow G20 6NQ\nTel: 0141 357 4556 | Mobile: 07514 645179\ndavid@thisisparachute.com | http://www.thisisparachute.com\nhttp://thisisparachute.com/\n[image: Twitter] http://twitter.com/thisisparachute[image: Facebook]\nhttp://www.facebook.com/thisisparachute[image: Pinterest]\nhttp://pinterest.com/thisisparachute\nConfidentiality Note: This email may contain confidential and/or private\ninformation. If you received this email in error please delete and notify\nsender.\nOn 17 July 2017 at 12:25, Diego Couto notifications@github.com wrote:\n\n@parachute-dev https://github.com/parachute-dev The title is center\naligned on iOS only, probably to comply to the material design guidelines\nhttps://material.io/guidelines/layout/structure.html#structure-app-bar.\nWhen defining your scene, you can use titleStyle attribute to define new\nstyles to the scene title. \ud83d\ude03\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/aksonov/react-native-router-flux/issues/2019#issuecomment-315729562,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AHaiFEtgoVS2_WG7Ils9fcqTovjPKCumks5sO0S1gaJpZM4OVyZY\n.\n. \n",
    "safurabahrami": "Thank u for your response, The other question is with this lazy attribute the componentsDidMount is fired just once on the first load, what if my data changes and I need to fire componentDidMount again?. Is it possible to give me an example of that?\nI was looking at source code (NavigationStore.js) and saw that we have just\nparams in onEnter. So How can I set state or props for my component from\nscene within onEnter?\nOn Thu, Jul 13, 2017 at 12:42 AM Pavel Aksonov notifications@github.com\nwrote:\n\ncomponenetDidMount is not good place.\nUse on (or onEnter) function for Scene. It will be run every time when\nscene is active.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/aksonov/react-native-router-flux/issues/2021#issuecomment-314998499,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ADTveuT7GXkqHe93tUJa7YpOuXKUS2rqks5sNcpwgaJpZM4OWJ75\n.\n-- \nSent from My iPhone :D\n. \u200b\nI want to manage my drawer by going to drawerMng Scene but I get \"FAILURE\nNULL RES\" as a result of my OnEnter function. How can I manage my drawer\nfrom this tab?\n\nOn Thu, Jul 13, 2017 at 8:49 AM, Pavel Aksonov notifications@github.com\nwrote:\n\nClosed #2021\nhttps://github.com/aksonov/react-native-router-flux/issues/2021.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/aksonov/react-native-router-flux/issues/2021#event-1162841096,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ADTvekYzunAqGHzf1wvzlty1UonXvDt0ks5sNjyigaJpZM4OWJ75\n.\n. \n",
    "TareqElMasri": "@aksonov I tried to use Actions.refresh inside onEnter and it giving me an error \"Both onRight and rightTitle/rightButtonImage must be specified for the scene: undefined\". Same\n. Solve it by downgrading to 4.0.0-beta.20. ",
    "tendolukwago": "@aksonov @luco did you ever find an answer to this?. @aksonov going to start an issue specifically based off this.. @aksonov I tried modifying the example by setting the second login screen's backTitle prop to an empty string and it defaulted to the previous page's title.\n\n\n. @luco setting headerLeft in the static navigationOptions object allowed me to hide the left title, but broke the navigationBarStyle option in RNRF.. @luco I ended up setting the headerStyle option on naviationOptions. It worked. Thanks for pointing me in the right direction!. @y2k-shubham thanks for the follow up. i'll try that out.. ",
    "mswokk": "I found workaround in v3.\nJust calling setTimeout(Actions.pop) works.\nIn my original post, I made some mistakes. \nsetTimeout(Action.pop, N) should works.\n. Dear @aksonov. Thank you for awesome library\nBut I think it's not the mobx problem.\nI have the same issue and mobx itself works well by annotating or wrapping a component with observer.\nI hope you to check this problem in detail. \nI used\nRNRF : 4.0.0-beta25\n\"mobx\": \"3.4.1\",\n\"mobx-react\": \"4.3.5\",\n(mobxes are latest)\nThank you.. Did you find any workaround for this issue?. Same here. RNRF 4.0.2.\nBack button or Actions.pop() both not working to exit app on Android.\nAny other workaround for now?. @aksonov @daviscabral \nPlease reopen this issue. It's not fixed in 4.0.5 yet\nHere is minimal project to reproduce\nCheck InitialScreen\nAndroid hardware backkey or Actions.pop() won't finish android app. \nNot working\n. Same here. \n RN 0.54.0\n RNRF 4.0.1\nUnder 4.0.0-beta.31 has no problem. \nAfter upgrading to 4.0.1 it throws error.\nHere is my hierarchy and error message\n```\n\n\n\n\n\n                  (... ommit)\n                \n            <Scene\n                hideNavBar\n                key=\"dialog\"\n                component={YDialog}\n            />\n\n            <Scene\n                hideNavBar\n                key=\"bottomDrawer\"\n                component={BottomDrawer}\n            />\n\n            <Scene\n                hideNavBar\n                isModal\n                key=\"questionnaireResultModal\"\n                component={QuestionnaireResult}\n            />\n      </LightBox>\n\n\n```\nAnd I called Actions.appOnboarding() from  EntryScreen which is initial scene\nError says .... \n```\n Error: Error: There is no route defined for key appOnboarding.\n Must be one of: 'rootScene','dialog','bottomDrawer','questionnaireResultModal'\nThis error is located at:\n     in Navigator (at createNavigationContainer.js:376)\n     in NavigationContainer (at Router.js:97)\n     in App (at Router.js:122)\n```\nIt looks doesn't recognize child   s more then 2 depth\n. I create a minimal project to reproduce this bug.\nhttps://github.com/mswokk/RNRF4_test/commits/master\nI found using LightBox + ActionType.RESET => this combination makes problem.\n. Due to critical bugs in 4.0.1, I'm still in 4.0.0-beta.31. I think 4.0.0 is not stabilized yet. I agree with @daviscabral . ",
    "buncismamen": "how to use master in my project?\nI've tried with \nyarn add https://github.com/aksonov/react-native-router-flux.git#master \nbut it keep using the latest release\n. I put the commit ID \nyarn add https://github.com/aksonov/react-native-router-flux.git#d4fff5036653e723a697f8ab28d0ce9ee387ffb8\nand got this \n```\n Warning: Installed version 4.0.0-beta.11 of 'react-native-router-flux' does not satisfy required version https://github.com/aksonov/react-native-router-flux.git#d4fff5036653e723a697f8ab28d0ce9ee387ffb8\nIf there is an issue running your project, please run npm install in /home/user/nav-playground and restart.\n```\nalready did the npm install but the warning keep shown.\nwhen is the next beta release btw?\nit's just released\nI'm using beta 12 the back button on hardware and in header is working properly now. ",
    "ShawSmall": "The bottom navigation switch, the page is reloaded, resulting in slow switching and waste of traffic. i have the same problem,use Actions.pop({refresh: {update: new Date()}})\u3002what i should do. yes,i have the issue.. i have solved the problem;\n_backAndroidHandler = () => {\n    const scene = Actions.currentScene;\n    // alert(scene)\n    if (scene === 'index' || scene === '_Main' || scene === 'Main') {\n      BackHandler.exitApp();\n      return true;\n    }\n    Actions.pop();\n    return true;\n  };\n. thanks,I added a time parameter that can be updated. //navigationStore.js\nthis.refresh = function (data) {\n        InteractionManager.runAfterInteractions(() => {\n          var key = (0, _State.getActiveState)(_this2._state).key;\n          var params = filterParam(data);\n          _this2.dispatch(_reactNavigation.NavigationActions.setParams({key: key, params: params}));\n        })\n      };\ncan solve the problem . ",
    "Norfeldt": "Would you mind sharing a code snippet of the solution? I can't seem to make it work..\n\n\n```\nimport React, { Component } from 'react'\nimport { AppRegistry, Text } from 'react-native'\nimport { Router, Stack, Scene } from 'react-native-router-flux'\nimport Events from './src/components/Events'\nimport Details from './src/components/Details'\nconst App = () => (\n  <Router\n    navigationBarStyle={{ backgroundColor: '#669966' }}\n    titleStyle={{\n      fontFamily: 'Pacifico-Regular',\n      fontSize: 22,\n      color: '#003300',\n    }}\n    navBarButtonColor={{ color: '#003300' }}\n\n<Stack key=\"root\">\n  <Scene init key=\"events\" component={Events} title=\"Event Expert\" />\n  <Scene key=\"details\" component={Details} title=\"Details\" />\n</Stack>\n\n\n)\n\nAppRegistry.registerComponent('EventExpert', () => App)\n```\n. ",
    "lcleite": "@Norfeldt write navBarButtonColor='#003300' instead of navBarButtonColor={{ color: '#003300' }} and it's gonna work. ",
    "Daredevll": "navBarButtonColor='#ffffff' does not work for me, tried all the options/variants mentioned above.. ",
    "fercho0": "\nSolution :)\n\nbarButtonIconStyle={{ tintColor: 'red' }}\nEXAMPLE\n<Router renderLeftButton={data} barButtonIconStyle={{ tintColor: 'red' }} navigationBarStyle={styles.navigationBarStyle}  titleStyle={styles.title}>\n            <Scene key=\"root\" >\n              .... ?\n            </Scene>\n</Router>. ",
    "rsp8055": "titleStyle={{\n      fontFamily: 'Pacifico-Regular',    //  fontFamily: 'Filson_Soft_W03_Book',\n      fontSize: 22,\n      color: '#003300',\n    }}\nfontFamily is not working, why?. Yes, I have. I just found that any fontFamily is not applicable to the title of the nav bar.. ",
    "albertoarraco": "Have you imported the font 'Pacifico-Regular' in your project?. ",
    "d7laungani": "The  line does import everything including this code, which has the scene like this.\n```\nrender() {\n   return (\n     \n\n\n    <Scene\n        key=\"tabbar\"\n        gestureEnabled={false}\n        tabs\n        activeBackgroundColor='#ddd'\n        initial\n    >\n        <Scene key=\"tab1\" component={TabView} title=\"Tab #3\" />\n    </Scene>\n</Scene>\n    </Router>\n </Provider>\n\n)\n }\n```\nhence it is in the router code. Correct me if I am wrong. I appreciate your quick response.. Thanks. Issue Fixed !. do what @luco did exactly. An additional thing i had to do is also add the {...sceneconfig} line to all other routes beneath it too.. Had to remove node modules and restart package manager. Sorry for stupid issue.. Ty, it works now. I love how much you care about this library and how fast you fix issues.. I just tried that and it doesn't seem to work.. @seratonik Have you managed to fix this issue and if so how did you do it ?. Same problem. Anyone find a solution?\n. Same @kholiavko-roman did you end up finding a solution?. ",
    "danieljvdm": "For any others who get this error, I solved it by wrapping my scenes in a root scene <Scene key=\"root\">. I can't find this mentioned anywhere in the documentation, but there has to be a root Scene wrapping everything.. This still doesn't work.\n<Router>\n    <Scene key=\"modal\" modal>\n      <Scene key=\"root\" hideNavBar hideTabBar>\n        <Scene key=\"tabBar\" tabs>\n          <Scene key=\"listings\" component={Listings} title=\"Listings\" initial right={MapButton} />\n          <Scene key=\"favorites\" component={Favorites} title=\"Favorites\" />\n          <Scene key=\"messages\" component={Messages} title=\"Messages\" />\n          <Scene key=\"profile\" component={Profile} title=\"Profile\" />\n        </Scene>\n        <Scene key=\"map\" component={Map} title=\"Map\" hideNavBar />\n        <Scene key=\"listingDetail\" component={ListingDetail} title=\"Listing Detail\" clone />\n      </Scene>\n    </Scene>\n  </Router>\nIt doesn't make any sense to me that wrapping everything in the modal scene would make one specific scene modal when I don't want the rest (like ListingDetail) to be modal. Is there a specific parameter in Actions.map that I need to use?. So are you saying that there is no way to support a modal iOS transition? I.e. one that slides from the bottom?. Ok but you also said my code looks fine..... I've tried my best to follow the Example but because there's no documentation I can't tell what the reason for everything being there is. I can't just copy and paste that code since obviously my routes are different.. I'm happy to provide more code samples if you let me know what you need. Actions.map works, it just transitions in from the side inside of what I expect to be from the bottom.\nAre you saying that you can't have both push and modal transitions in the same app?. Thanks, this fixes the issue. How do you expect me to understand something when there isn't a line of documentation about it? There have been many people opening issues about this modal feature, maybe that is indicative of the need for docs.... Ok, it would be useful if you also mentioned that this was a mistake in the example, not my mistake.\nhttps://github.com/aksonov/react-native-router-flux/commit/e8c5a428bfe1de72036e71db7ec6d7b17475325f#diff-32afed19f718c82f2588a4adaa45100e. ",
    "ivorscott": "@danieljvdm  your suggestion still works. Now in 4.0.0-beta it's done like this:\n```\nimport { Stack, Scene, Router } from 'react-native-router-flux';\n....\nreturn ( \n\n\n\n\n\n\n\n);\n```. ",
    "thiagoh": "@danieljvdm, it actually doesn't have to be key(ed) as root. This worked for me:\n```\nconst RouterComponent = () => {\n  return (\n    \n\n\n\n\n  );\n};\n```. ",
    "A86S": "Thanks @thiagoh , I got this error because i am writing code like this\n<Router>\n     <Scene key=\"login\" component={LoginForm} title=\"Please login\" />\n</Router>. ",
    "Amin52J": "@aksonov The cardStyle solution that @luco suggested doesn't solve the issue, any other suggestions?. you can check it out in the issue I opened before: #2039 . I also noticed that barButtonTextStyle, barButtonIconStyle and leftButtonIconStyle don't work either.. ",
    "appdevtim": "I know this issue was closed a few weeks ago, but I am having the same issue since upgrading to version 4 and haven't been able to find a solution. Can someone explain to me how sceneConfig works? I can't seem to make that solution work for me. I am currently  which worked fine in version 3, but now my app has the default gray color and I can't seem to change it.. ",
    "mcneilsimon": "@luco worked for me too, can you explain as to how this works though? As in where does the cardStyle come from. ",
    "jairbj": "@d7laungani , I've added this style to my router component and it has solved for me.\nExample:\n```\nconst RouterComponent = () => {\n  return (\n    \n\n\n\n\n  );\n};\nvar sceneConfig = {\n  cardStyle: {\n    backgroundColor: 'white'\n  }\n}\n```. ",
    "kunaldodiya": "would you please give example for CustomTabBarComponent as i want to render tabs inside custom component, i am able to render \"hello\" when i use tabBarComponent={CustomTabBarComponent} but instead i want to render tabs view with tap and slide effect, please help\n```\nimport React from 'react'\nimport {Text, View} from \"react-native\";\nexport default class CustomTabBarComponent extends React.Component {\n    render() {\n        return (\n            hello\n        )\n    }\n}\n```\n. i want to add a ui like on top left back arrow, right side two icons 1) search 2) more (three dots)\nand bottom the 3 tabs => Home,  Profile, Settings\nIf I use tabs i can render tabs but can't set custom header upside, and slide effect working  but tap on any tab does not work work :) your guidance  would be great help. @cicer1 i am no more using this module.. I am now using react navigation . ",
    "cicer1": "@kunaldodiya can you please share your CustomTabBarComponent? . ",
    "bruno-edo": "I was able to make a custom tab bar following the method @thngdude described.\nI'll prepare an example and submit a PR to add it to the docs. Meanwhile here's some code that should give some idea on how to implement the custom tab bar:\n```javascript\nimport { MaterialTopTabBar } from 'react-navigation-tabs';\nclass testbar extends MaterialTopTabBar {\n    static propTypes = {\n}\n\nrender() {\n  return (\n      <View>\n        {\n            this.props.navigationState.routes.map((element) => {\n              return (\n                  <TouchableOpacity key={element.key} onPress={() => console.log(element.key)}>\n                        <Text>{element.key}</Text>\n                  </TouchableOpacity>\n              );\n            })\n        }\n    </View>\n  );\n}\n\n}\nexport default testbar;\n```\n. Facing same problem.\nUpgraded to 4.0.6 and my app won't go to background when I return false in backAndroidHandler's function like it did in the v4 beta versions.. ",
    "rgchua": "@Clowning Please add showIcon={true} to your tabBar. RNRF v4 is built on top of react-navigation, do check their docs for the props.. ",
    "susegroj": "I have the same issue but the oposite, for me is not working on iOS :( Does anyone why? I tried showIcon={true} with no success. For Android is looking good.. ",
    "hofuchi": "A workaround for the Android hardware back button closing the app is to use react-native's BackHandler. Would be something like this:\nDocs are here: https://facebook.github.io/react-native/releases/0.45/docs/backhandler.html\n```javascript\nimport React, { Component } from 'react'\nimport { BackHandler } from 'react-native'\nimport { Actions } from 'react-native-router-flux'\nexport default class Page extends Component {\n  constructor (props) {\n    super(props)\n  }\ncomponentDidMount () {\n    BackHandler.addEventListener('hardwareBackPress', () => this.backAndroid()) // Listen for the hardware back button on Android to be pressed\n  }\ncomponentWillUnmount () {\n    BackHandler.removeEventListener('hardwareBackPress', () => this.backAndroid()) // Remove listener\n  }\nbackAndroid () {\n    Actions.pop() // Return to previous screen\n    return true // Needed so BackHandler knows that you are overriding the default action and that it should not close the app\n  }\n// ...other stuff\n}\n. How about something where if the scenes don't change: exit the app\nfor your `onBackPress()`javascript\nonBackPress = () => {\n  navigationStore.pop();\n  if (navigationStore.currentScene === navigationStore.prevScene) {\n    return false; // Exit the app if you're at the root scene\n  } else {\n    return true; // Keep the current popped scene\n  }\n}\n``. Uninstall the app on your device and rebuild. Oradb uninstall 'com.yourapp.packagename'`. See here: https://stackoverflow.com/questions/26794862/failure-install-failed-update-incompatible-even-if-app-appears-to-not-be-insta\nIt's possible that a remnant of the failed build is hindering the new install\nTry either:\nadb uninstall com.example\nOr / And : \n\nWhat worked was\n- On your device go to to Settings->Apps\n- Select your app, and in the menu select \"Uninstall for all users\"\nEven if I had previously uninstalled the app it was still in the list there.\n\n. Sorry Ignore this. I was trying to update my forked repository without knowing how. React-native won't update a scene unless the state is changed. If the state doesn't change when the screen size does, react-native won't acknowledge the new screen size\nYou could implement a wrapper view which listens for a layout (orientation) change and adjusts accordingly (or just sets the state)\nhtml\n<View style={styles.wrapper} onLayout={(event) => this.onLayout(event)}>\n    ...\n</View>\nthen \n```javascript\nexport default class Example extends Component {\n  constructor (props) {\n    super(props)\n  }\nonLayout (event) {\n    // if (this.state.height) return // Layout was already called\n    let {width, height} = event.nativeEvent.layout // Gets the width and height of device screen\n    this.setState({height: height, width: width})\n  }\n}\n``` . ",
    "ecavalcanti": "The Actions.state.index always has the same value in the onBackPress (). This solution does not work for me.. I solved this way:\n<Router backAndroidHandler={this.onBackPress}>\nand:\nonBackPress = () => {\n    if (Actions.state.index === 0) {\n      return false\n    }\n    Actions.pop()\n    return true\n}\n. I solved this way:\n<Router backAndroidHandler={this.onBackPress}>\nand:\nonBackPress = () => {\n    if (Actions.state.index === 0) {\n      return false\n    }\n    Actions.pop()\n    return true\n}\n. ",
    "Salehjarad": "In  \"react-native-router-flux\" version ( 3.41.0 )\nYou can use ActionConst.RESET to exit the app from any Component.\npython\nimport { Router, Scene , ActionConst } from 'react-native-router-flux'\n<Router>\n    <Scene duration={0} key=\"main\" type={ActionConst.RESET}>\n</Router>. ",
    "ernanielyjr": "```\nconst onBackAndroid = () => {\n  return Actions.pop();\n};\n\n\n```. ",
    "policz": "Firstly my BackHandler works fine, but when i'm on Home screen (consider as one or last screen) the app actually navigating to Sign in page(it's throwing the user out of application)\nBelow are my files\n### AppNavigatorContainer.js\nclass AppNavigatorContainer extends Component {\naddListener = createReduxBoundAddListener(\"root\")\nconstructor(props) {\nsuper(props)\nthis.state = {\ndidReceiveNotificationThatCanBeHandled: false,\nnotification: null,\ndidNetworkBecomeUnreachable: false\n}\nthis.onBackPress = this.onBackPress.bind(this)\n}\ncomponentWillReceiveProps(nextProps) {\n//TODO: Uncomment once VPN problem is fixed\n// if (nextProps.isNetworkReachable !== this.props.isNetworkReachable) {\n// this.state.didNetworkBecomeUnreachable = !nextProps.isNetworkReachable\n// }\n}\ncomponentWillMount() {\nBackHandler.addEventListener('hardwareBackPress', this.onBackPress)\n}\ncomponentWillUnmount() {\nBackHandler.removeEventListener('hardwareBackPress', this.onBackPress)\n//TODO: Uncomment once VPN problem is fixed\n// stopListening()\n}\nonBackPress() {\nconsole.log(this.props);\nconst { dispatch, navigationState } = this.props\ndispatch(NavigationActions.back());\nreturn true;\n}\nAppNavigator.js\nimport React from 'react'\nimport {\nStackNavigator,\naddNavigationHelpers\n} from 'react-navigation';\nimport stackConfiguration from './stackConfiguration'\nimport routeConfiguration from './routeConfiguration'\nexport const AppNavigator = StackNavigator(\nrouteConfiguration,\nstackConfiguration\n);\nexport default ({\ndispatch,\nnavigationState,\naddListener\n}) => {\nreturn (\n\n)\n}. can anyone respond to my previous comment please. Firstly my BackHandler works fine, but when i'm on Home screen (consider as one or last screen) the app actually navigating to Sign in page(it's throwing the user out of application)\nBelow are my files\n### AppNavigatorContainer.js\nclass AppNavigatorContainer extends Component {\naddListener = createReduxBoundAddListener(\"root\")\nconstructor(props) {\nsuper(props)\nthis.state = {\ndidReceiveNotificationThatCanBeHandled: false,\nnotification: null,\ndidNetworkBecomeUnreachable: false\n}\nthis.onBackPress = this.onBackPress.bind(this)\n}\ncomponentWillReceiveProps(nextProps) {\n//TODO: Uncomment once VPN problem is fixed\n// if (nextProps.isNetworkReachable !== this.props.isNetworkReachable) {\n// this.state.didNetworkBecomeUnreachable = !nextProps.isNetworkReachable\n// }\n}\ncomponentWillMount() {\nBackHandler.addEventListener('hardwareBackPress', this.onBackPress)\n}\ncomponentWillUnmount() {\nBackHandler.removeEventListener('hardwareBackPress', this.onBackPress)\n//TODO: Uncomment once VPN problem is fixed\n// stopListening()\n}\nonBackPress() {\nconsole.log(this.props);\nconst { dispatch, navigationState } = this.props\ndispatch(NavigationActions.back());\nreturn true;\n}\n### AppNavigator.js\nimport React from 'react'\nimport {\nStackNavigator,\naddNavigationHelpers\n} from 'react-navigation';\nimport stackConfiguration from './stackConfiguration'\nimport routeConfiguration from './routeConfiguration'\nexport const AppNavigator = StackNavigator(\nrouteConfiguration,\nstackConfiguration\n);\nexport default ({\ndispatch,\nnavigationState,\naddListener\n}) => {\nreturn (\n\n)\n}. ",
    "oeddyo": "To be more specific, in V3's doc page, the API page is giving 404. And in V4's doc page, seems the author is still working on it :|. Thanks a lot @diegocouto for commenting!\nWe are actually building for both android & ios. Thus I guess the option for us is to go with v3 then... \nThank you!. ",
    "alexwasner": "@aksonov I created a simple PR for adding transitionConfig to the Navigator. #2062. @aksonov Oops. I thought I had copied exactly, but I had it at the modal level. Thanks. @aksonov You would pass transitionConfig to the Router and all navigators would get it\n<Router transitionConfig={TransitionConfiguration} createReducer={reducerCreate}>\nI also realized this doesn't work with the LightboxNavigator yet so I'll dig into that. I've tried a few things to get LightboxNavigator working with this, but out of ideas. It's being passed in createNavigator under the tabsConfig, but have a feeling TabRouter is just ignoring it.. This is actually already working without my changes when you just pass it to router as transitionConfig. I'll see if I can find a workaround for the duration thing. Perhaps something with navigationStore to cache the state or something. Closing this and will open a new PR with that\ud83d\ude02 . Oh and @aksonov, you can also just pass the default params like this: \nconst TransitionConfiguration = () => {\n    return {\n        transitionSpec: {\n            duration: 250,\n            easing: Easing.out(Easing.poly(4)),\n            timing: Animated.timing,\n        },\n        screenInterpolator: (sceneProps) => {\n            const {position, scene} = sceneProps;\n            const {index, route} = scene\n            const params = route.params || {};\n            const transition = params.transition || 'default';\n            console.log(CardStackStyleInterpolator.forHorizontal(sceneProps));\n            return {\n                myCustomTransition: MyCustomTransition(index, position),\n                modal: CardStackStyleInterpolator.forVertical(sceneProps),\n                default: CardStackStyleInterpolator.forHorizontal(sceneProps)\n            }[transition];\n        }\n    }\n};. I haven\u2019t found a way to override transitionSpec per view yet, but still digging. One way to do it on a route is to just put type='reset' in the Scene, but that doesnt allow you to call a reset when you navigate. I too would like to know the new standard for doing this. That fixes it, but now drawUnderNavBar={true} is ignored. as well as navTransparent. I guess I had it on the wrong item. @aksonov Didn't work as I'm not using a reset here. I have an intermediary screen that calls \nLocalStorage.getItem('@UserStore.authenticated').then((val) => {\n            if (val && val.isLoggedIn) {\n                Actions.a()\n            } else {\n                Actions.b()\n            }\n        }). Oh on the actual Scene itself. Gotcha. That fixed it. Why does reset crash it though?. So @aksonov How do I have two routes that can perform a reset? I also tried POP_AND_PUSH and it seems to just do a push. I need to clear the entire stack when logging out and its not doing anything. Here's a gif of whats happening with the following setup: \n1. Login calls Actions.home({type:ActionConst.REPLACE}) and it does a hard cut without animation. \n2. Clicking Logout on Home calls this.props.navigation.navigate(login{type:ActionConst.REPLACE}) and it does a PUSH.\n3. I am able to swipe back to Home\n4. Upon second login, the exact same Actions.home({type:ActionConst.REPLACE}) looks like a POP\n\n. I can't share this repo as it's work related and had to remove a bunch of styles just to get that gif to show. If I get time in the next few days, I can strip it down to the bare bones and send a link to that. @aksonov Here is an example of the navigation bug from the gif above. https://github.com/alexwasner/react-native-router-flux/commit/faf4e7439dc5a1db31d205e8bebf6f3e5346d4e9\nIf you launch the app, you can follow exactly with the gif I provided. If you click the \"Go to Launch page\" on the Home page, and try to click on the the links, you will see the original bug I listed.. I'm running into this same issue and @jordanfloyd is correct on the back vs the circle for my case as well. Just subscribing to this to see if anyone has any solutions. I tried putting a hack in componentDidMount with a key on my AppState store, and while it fixes the issue, it seems I now have a ghost Router hanging out in cyber space listening to events and causing issues.. Guessing this is also related to #2651 . Figured it out. Closing. If you wanted it re-opened to add getPanHandlers to V4, I can re-open. Noticing the same behavior. The constructor is called twice. If I navigate from one stack to another, it will mount the initial Scene of the second stack before mounting the scene I'm trying to navigate to.. ",
    "JoshStaff": "Did this get resolved? Interested in contributing to this.. I'll do the above when I get a mo. It's incredibly frustrating as it should be extremely simple. If it isn't immediately obvious to you I think it'll be something to do with react-navigation. I'll look further into this asap.. ",
    "SpadarShut": "I call it by tapping a button when everything is rendered long ago. I'm not migrating from v3, just strted new project from 4.b11. Would be\ncool to have docs for v4 where it's written what's allowed and what's not.\n17.7.2017 12.25 \u043f\u0430\u0441\u043b\u044f \u043f\u0430\u045e\u0434\u043d\u044f \u043a\u0430\u0440\u044b\u0441\u0442\u0430\u043b\u044c\u043d\u0456\u043a \"Pavel Aksonov\" \nnotifications@github.com \u043d\u0430\u043f\u0456\u0441\u0430\u045e:\nClosed #2045\nhttps://github.com/aksonov/react-native-router-flux/issues/2045.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/aksonov/react-native-router-flux/issues/2045#event-1166100135,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AAtFljwNYBtpcb6oEvsln-yzAeaSNkTaks5sOyiVgaJpZM4OZZX4\n.\n. This is possible for a custom button, but how can I pass {refresh: DATA} when back in header is pressed?. Same thing would be very useful for onLeft & onRight (onBack?) callbacks . ",
    "BhoomikaVG911": "Hi...\nI had tried this for page1->page2->page1\nActions.pop();\n        setTimeout(() => {\n          Actions.refresh({\n           param : value\n          });\n        }, 0);\nFirst time it is working fine and componentWillReceiveProps() called in page1. but second time I had again tried this.But it does not go in componentWillReceiveProps() in page1.\nAnyone can help?\nThanks\n. ",
    "augusto-altman": "@diegocouto Thanks man, it is working perfect :+1: . ",
    "yordis": "\ud83d\udd30\n@aksonov would you put some example for Redux integration on the readme. I am new into RN/RNRF/Redux and this thread is the one that explained something that I could understand what I was doing wrong. \nI read the readme but I wouldn't figure out what I was doing wrong because of my short experience on it.\n@aksonov for people like me, could you add some working example with redux? \ud83d\ude4f I think probably 90% of the people that works with React use Redux  \ud83d\ude04 . @diegocouto \ud83d\udd30\ud83d\udd30\ud83d\udd30 why do I have to dispatch the action without passing any state?. btw, I just notice that a lot of tutorials on the internet are wrong, because the lookup in the action for the wrong key on the reducer.\nThis would be the final reducer\n```javascript\nexport default (state = DEFAULT_STATE, action) => {\n  switch (action.type) {\n    case ActionConst.FOCUS:\n      return { ...state, scene: action.params } // <---- Notice that I am doing the lookup on params\ndefault:\n  return state\n\n}\n}\n```. @aksonov what if I want to track the previous screen? How would that look like with MobX?. I would flag you for such of language and useless issue. The last I would want is OOS contributors deal with you and get frustrated.. I think the issue is affecting all the properties or most of them because something tells me is related to https://github.com/aksonov/react-native-router-flux/issues/2598#issuecomment-342375932\nIt doesn't work for me either.. @1fabiopereira if you figure it out please give me some updates because we are two already. I am using either Stack or Scene with Scenes inside does this thing.\nThere is a option you could pass hideNavBar but it does hide everything and dont let me show the menu per scene at least ..... @foyarash \njsx\n<Stack hideNavBar> // I expect to hide the main nav bar\n  <Scene hideNavBar={false}/> // I expect to show the sub nav bar\n  <Scene hideNavBar={false}/>\n</Stack>\nbut it just hide everything. @foyarash you would have 2 nav bar then. @aksonov I dont want to open another issue but I saw that you closed this one https://github.com/aksonov/react-native-router-flux/issues/2598#issuecomment-342375932\nI am having some issues with any override properties on the child views, and I am still having this issue.\nI had to reverse back to 3.x . ",
    "jaschaio": "Hey @diegocouto, thanks for posting your solution here. This is nice, but redux replay still doesn't work. I can change the state but the state has no effect on my router. Even if I change the state my router stays the same. So this is not really working as one would expect it to work with Redux. Not sure if I am overseeing something, but I am not sure why this issue has been closed by @aksonov. I have yet to see a working solution with Redux. \nNot sure if someone got a working example? CC @BerndWessels @marcellkiss @deoqc @augusto-altman . Thanks @aksonov for referencing #2115. The example given indeed works for me and I couldn't find it before. A one liner linking to the Redux example repo and related issue would probably already be enough for now.. Having the same issue, both with Tabs, Drawers or Modals. #2449, #2382 and #2388 are probably related. The lazy property as suggested in #2440 helped with the other Tabs, but the inital one is still mounted twice.. Having the same problem, on both iOS and Android. ",
    "ranasing": "Can you explain what you mean by this, 'container scene as root'? I am getting the same error. Thanks . Ok, I'm not getting the error any more, but it only shows a blank screen on my Android simulator. Here is the relevant code:\nimport React, { Component } from 'react';\nimport { Scene, Router } from 'react-native-router-flux';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport LoginForm from './components/LoginForm';\nrender() {\n    const store = createStore(reducers, {}, applyMiddleware(ReduxThunk));\nreturn (\n  <Provider store={store}>\n    <Router>\n      <Scene key='login' component={LoginForm} title='Login' />\n    </Router>\n  </Provider>\n);\n\n}\n**** Only showing render method, because if I take out  components and replace with just LoginForm component, it will render correctly.. Ok thank you! I\u2019ll give that a try.\nFrom: mikaello [mailto:notifications@github.com]\nSent: Tuesday, August 01, 2017 1:38 PM\nTo: aksonov/react-native-router-flux\nCc: ranasing; Author\nSubject: Re: [aksonov/react-native-router-flux] Can't read property 'router' of null #2049 (#2158)\nI think container scene as root means that you should have a Scene-component directly under Router-component with key='root that encapsulates all your other scenes:\nrender() {\nconst store = createStore(reducers, {}, applyMiddleware(ReduxThunk));\nreturn (\n<Provider store={store}>\n\n  <Router>\n\n    <Scene key='root'>\n\n      <Scene key='login' component={LoginForm} title='Login' initial />\n\n    </Scene>\n\n  </Router>\n\n</Provider>\n\n);\n}\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHubhttps://github.com/aksonov/react-native-router-flux/issues/2158#issuecomment-319442578, or mute the threadhttps://github.com/notifications/unsubscribe-auth/AV_K-IU62DU1fKoJ0Q5s48sOy8tqun6Bks5sT2KUgaJpZM4OqBm_.\n. ",
    "alfchee": "@ranasing you should check the documentation, you need to nest all you scenes in the root scene as in the example:\n<Router>\n    <Scene key=\"root\">\n      <Scene key=\"login\" component={Login} title=\"Login\"/>\n      <Scene key=\"home\" component={Home}/>\n    </Scene>\n  </Router>. ",
    "mariobermudezjr": "@alfchee This solved it, thank you so much!! I am two weeks into the Udemy course The Complete React Native and Redux Course by Stephen Grider.\nHe does the code on his example like @ranasing showed here.. Bye bye react-native-router-flux and Hello react-navigation by the react-community :D. ",
    "SarasArya": "@TeslaMotors91 came here after that course as well. This does it. He doesn't use the \"root\" thing. Hence the issue.. ",
    "muhammedbasilsk": "@alfchee thanks for the help...\n<Router>\n    <Scene key=\"root\">\n      <Scene key=\"login\" component={Login} title=\"Login\"/>\n      <Scene key=\"home\" component={Home}/>\n    </Scene>\n </Router>. ",
    "lichao0817": "@alfchee This is really helpful!. ",
    "obetomuniz": "@TeslaMotors91 @SarasArya In the Stephen Grider course, he is using a different version of this library.. ",
    "blackinitial": "Sthepen Grider use 3.35.0 version, but i choose to use last version and got same error like this issue..\nThanks for all, for the answer.... ok, solved.\nI use Actions.scene({ params: valueHere }). @aaron25mt Thanks for your reply, i was do it but the top nav goes missing.. ",
    "yatessss": "@aksonov  thx i will check this . @aksonov  when i run react-native run-android\nconsole this :\nScanning 589 folders for symlinks in /Users/yatesmiao/project/react-native-router-flux/Example/node_modules (7ms)\nJS server already running.\nBuilding and installing the app on the device (cd android && ./gradlew installDebug)...\nIncremental java compilation is an incubating feature.\n:app:preBuild UP-TO-DATE\n:app:preDebugBuild UP-TO-DATE\n:app:checkDebugManifest\n:app:preReleaseBuild UP-TO-DATE\n:app:prepareComAndroidSupportAppcompatV72301Library UP-TO-DATE\n:app:prepareComAndroidSupportSupportV42301Library UP-TO-DATE\n:app:prepareComFacebookFbuiTextlayoutbuilderTextlayoutbuilder100Library UP-TO-DATE\n:app:prepareComFacebookFrescoDrawee101Library UP-TO-DATE\n:app:prepareComFacebookFrescoFbcore101Library UP-TO-DATE\n:app:prepareComFacebookFrescoFresco101Library UP-TO-DATE\n:app:prepareComFacebookFrescoImagepipeline101Library UP-TO-DATE\n:app:prepareComFacebookFrescoImagepipelineBase101Library UP-TO-DATE\n:app:prepareComFacebookFrescoImagepipelineOkhttp3101Library UP-TO-DATE\n:app:prepareComFacebookReactReactNative0440Library UP-TO-DATE\n:app:prepareComFacebookSoloaderSoloader010Library UP-TO-DATE\n:app:prepareOrgWebkitAndroidJscR174650Library UP-TO-DATE\n:app:prepareDebugDependencies\n:app:compileDebugAidl UP-TO-DATE\n:app:compileDebugRenderscript UP-TO-DATE\n:app:generateDebugBuildConfig UP-TO-DATE\n:app:mergeDebugShaders UP-TO-DATE\n:app:compileDebugShaders UP-TO-DATE\n:app:generateDebugAssets UP-TO-DATE\n:app:mergeDebugAssets UP-TO-DATE\n:app:generateDebugResValues UP-TO-DATE\n:app:generateDebugResources UP-TO-DATE\n:app:mergeDebugResources UP-TO-DATE\n:app:bundleDebugJsAndAssets SKIPPED\n:app:processDebugManifest UP-TO-DATE\n:app:processDebugResources UP-TO-DATE\n:app:generateDebugSources UP-TO-DATE\n:app:incrementalDebugJavaCompilationSafeguard UP-TO-DATE\n:app:compileDebugJavaWithJavac UP-TO-DATE\n:app:compileDebugNdk UP-TO-DATE\n:app:compileDebugSources UP-TO-DATE\n:app:transformClassesWithDexForDebug UP-TO-DATE\n:app:mergeDebugJniLibFolders UP-TO-DATE\n:app:transformNative_libsWithMergeJniLibsForDebug UP-TO-DATE\n:app:processDebugJavaRes UP-TO-DATE\n:app:transformResourcesWithMergeJavaResForDebug UP-TO-DATE\n:app:validateSigningDebug\n:app:packageDebug UP-TO-DATE\n:app:assembleDebug UP-TO-DATE\n:app:installDebug\nInstalling APK 'app-debug.apk' on 'x600 - 6.0' for app:debug\n07:26:03 E/SplitApkInstaller: Failed to finalize session : -26: Package com.example new target SDK 22 doesn't support runtime permissions but the old target SDK 23 does.\nUnable to install /Users/yatesmiao/project/react-native-router-flux/Example/android/app/build/outputs/apk/app-debug.apk\ncom.android.ddmlib.InstallException: Failed to finalize session : -26: Package com.example new target SDK 22 doesn't support runtime permissions but the old target SDK 23 does.\n        at com.android.ddmlib.SplitApkInstaller.install(SplitApkInstaller.java:85)\n        at com.android.ddmlib.Device.installPackages(Device.java:904)\n        at com.android.builder.testing.ConnectedDevice.installPackages(ConnectedDevice.java:137)\n        at com.android.build.gradle.internal.tasks.InstallVariantTask.install(InstallVariantTask.java:134)\n        at org.gradle.internal.reflect.JavaMethod.invoke(JavaMethod.java:75)\n        at org.gradle.api.internal.project.taskfactory.AnnotationProcessingTaskFactory$StandardTaskAction.doExecute(AnnotationProcessingTaskFactory.java:228)\n        at org.gradle.api.internal.project.taskfactory.AnnotationProcessingTaskFactory$StandardTaskAction.execute(AnnotationProcessingTaskFactory.java:221)\n        at org.gradle.api.internal.project.taskfactory.AnnotationProcessingTaskFactory$StandardTaskAction.execute(AnnotationProcessingTaskFactory.java:210)\n        at org.gradle.api.internal.AbstractTask$TaskActionWrapper.execute(AbstractTask.java:621)\n        at org.gradle.api.internal.AbstractTask$TaskActionWrapper.execute(AbstractTask.java:604)\n        at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeAction(ExecuteActionsTaskExecuter.java:80)\n        at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeActions(ExecuteActionsTaskExecuter.java:61)\n        at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.execute(ExecuteActionsTaskExecuter.java:46)\n        at org.gradle.api.internal.tasks.execution.PostExecutionAnalysisTaskExecuter.execute(PostExecutionAnalysisTaskExecuter.java:35)\n        at org.gradle.api.internal.tasks.execution.SkipUpToDateTaskExecuter.execute(SkipUpToDateTaskExecuter.java:66)\n        at org.gradle.api.internal.tasks.execution.ValidatingTaskExecuter.execute(ValidatingTaskExecuter.java:58)\n        at org.gradle.api.internal.tasks.execution.SkipEmptySourceFilesTaskExecuter.execute(SkipEmptySourceFilesTaskExecuter.java:52)\n        at org.gradle.api.internal.tasks.execution.SkipTaskWithNoActionsExecuter.execute(SkipTaskWithNoActionsExecuter.java:52)\n        at org.gradle.api.internal.tasks.execution.SkipOnlyIfTaskExecuter.execute(SkipOnlyIfTaskExecuter.java:53)\n        at org.gradle.api.internal.tasks.execution.ExecuteAtMostOnceTaskExecuter.execute(ExecuteAtMostOnceTaskExecuter.java:43)\n        at org.gradle.execution.taskgraph.DefaultTaskGraphExecuter$EventFiringTaskWorker.execute(DefaultTaskGraphExecuter.java:203)\n        at org.gradle.execution.taskgraph.DefaultTaskGraphExecuter$EventFiringTaskWorker.execute(DefaultTaskGraphExecuter.java:185)\n        at org.gradle.execution.taskgraph.AbstractTaskPlanExecutor$TaskExecutorWorker.processTask(AbstractTaskPlanExecutor.java:66)\n        at org.gradle.execution.taskgraph.AbstractTaskPlanExecutor$TaskExecutorWorker.run(AbstractTaskPlanExecutor.java:50)\n        at org.gradle.execution.taskgraph.DefaultTaskPlanExecutor.process(DefaultTaskPlanExecutor.java:25)\n        at org.gradle.execution.taskgraph.DefaultTaskGraphExecuter.execute(DefaultTaskGraphExecuter.java:110)\n        at org.gradle.execution.SelectedTaskExecutionAction.execute(SelectedTaskExecutionAction.java:37)\n        at org.gradle.execution.DefaultBuildExecuter.execute(DefaultBuildExecuter.java:37)\n        at org.gradle.execution.DefaultBuildExecuter.access$000(DefaultBuildExecuter.java:23)\n        at org.gradle.execution.DefaultBuildExecuter$1.proceed(DefaultBuildExecuter.java:43)\n        at org.gradle.execution.DryRunBuildExecutionAction.execute(DryRunBuildExecutionAction.java:32)\n        at org.gradle.execution.DefaultBuildExecuter.execute(DefaultBuildExecuter.java:37)\n        at org.gradle.execution.DefaultBuildExecuter.execute(DefaultBuildExecuter.java:30)\n        at org.gradle.initialization.DefaultGradleLauncher$4.run(DefaultGradleLauncher.java:153)\n        at org.gradle.internal.Factories$1.create(Factories.java:22)\n        at org.gradle.internal.progress.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:91)\n        at org.gradle.internal.progress.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:53)\n        at org.gradle.initialization.DefaultGradleLauncher.doBuildStages(DefaultGradleLauncher.java:150)\n        at org.gradle.initialization.DefaultGradleLauncher.access$200(DefaultGradleLauncher.java:32)\n        at org.gradle.initialization.DefaultGradleLauncher$1.create(DefaultGradleLauncher.java:98)\n        at org.gradle.initialization.DefaultGradleLauncher$1.create(DefaultGradleLauncher.java:92)\n        at org.gradle.internal.progress.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:91)\n        at org.gradle.internal.progress.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:63)\n        at org.gradle.initialization.DefaultGradleLauncher.doBuild(DefaultGradleLauncher.java:92)\n        at org.gradle.initialization.DefaultGradleLauncher.run(DefaultGradleLauncher.java:83)\n        at org.gradle.launcher.exec.InProcessBuildActionExecuter$DefaultBuildController.run(InProcessBuildActionExecuter.java:99)\n        at org.gradle.tooling.internal.provider.ExecuteBuildActionRunner.run(ExecuteBuildActionRunner.java:28)\n        at org.gradle.launcher.exec.ChainingBuildActionRunner.run(ChainingBuildActionRunner.java:35)\n        at org.gradle.launcher.exec.InProcessBuildActionExecuter.execute(InProcessBuildActionExecuter.java:48)\n        at org.gradle.launcher.exec.InProcessBuildActionExecuter.execute(InProcessBuildActionExecuter.java:30)\n        at org.gradle.launcher.exec.ContinuousBuildActionExecuter.execute(ContinuousBuildActionExecuter.java:81)\n        at org.gradle.launcher.exec.ContinuousBuildActionExecuter.execute(ContinuousBuildActionExecuter.java:46)\n        at org.gradle.launcher.exec.DaemonUsageSuggestingBuildActionExecuter.execute(DaemonUsageSuggestingBuildActionExecuter.java:51)\n        at org.gradle.launcher.exec.DaemonUsageSuggestingBuildActionExecuter.execute(DaemonUsageSuggestingBuildActionExecuter.java:28)\n        at org.gradle.launcher.cli.RunBuildAction.run(RunBuildAction.java:43)\n        at org.gradle.internal.Actions$RunnableActionAdapter.execute(Actions.java:173)\n        at org.gradle.launcher.cli.CommandLineActionFactory$ParseAndBuildAction.execute(CommandLineActionFactory.java:239)\n        at org.gradle.launcher.cli.CommandLineActionFactory$ParseAndBuildAction.execute(CommandLineActionFactory.java:212)\n        at org.gradle.launcher.cli.JavaRuntimeValidationAction.execute(JavaRuntimeValidationAction.java:35)\n        at org.gradle.launcher.cli.JavaRuntimeValidationAction.execute(JavaRuntimeValidationAction.java:24)\n        at org.gradle.launcher.cli.ExceptionReportingAction.execute(ExceptionReportingAction.java:33)\n        at org.gradle.launcher.cli.ExceptionReportingAction.execute(ExceptionReportingAction.java:22)\n        at org.gradle.launcher.cli.CommandLineActionFactory$WithLogging.execute(CommandLineActionFactory.java:205)\n        at org.gradle.launcher.cli.CommandLineActionFactory$WithLogging.execute(CommandLineActionFactory.java:169)\n        at org.gradle.launcher.Main.doAction(Main.java:33)\n        at org.gradle.launcher.bootstrap.EntryPoint.run(EntryPoint.java:45)\n        at org.gradle.launcher.bootstrap.ProcessBootstrap.runNoExit(ProcessBootstrap.java:55)\n        at org.gradle.launcher.bootstrap.ProcessBootstrap.run(ProcessBootstrap.java:36)\n        at org.gradle.launcher.GradleMain.main(GradleMain.java:23)\n        at org.gradle.wrapper.BootstrapMainStarter.start(BootstrapMainStarter.java:30)\n        at org.gradle.wrapper.WrapperExecutor.execute(WrapperExecutor.java:127)\n        at org.gradle.wrapper.GradleWrapperMain.main(GradleWrapperMain.java:61)\n:app:installDebug FAILED\nFAILURE: Build failed with an exception.\n\n\nWhat went wrong:\nExecution failed for task ':app:installDebug'.\n\ncom.android.builder.testing.api.DeviceException: com.android.ddmlib.InstallException: Failed to finalize session : -26: Package com.example new target SDK 22 doesn't support runtime permissions but the old target SDK 23 does.\n\n\n\nTry:\nRun with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output.\n\n\nBUILD FAILED\nTotal time: 14.546 secs\nCould not install the app on the device, read the error above for details.\nMake sure you have an Android emulator running or a device connected and have\nset up your Android development environment:\nhttps://facebook.github.io/react-native/docs/android-setup.html\n. @aksonov \nAccording to this error i try to chang build.gradle like this \njava\ndefaultConfig {\n        applicationId \"com.example\"\n        minSdkVersion 16\n        targetSdkVersion 23   <---------- change this\n        versionCode 1\n        versionName \"1.0\"\n        ndk {\n            abiFilters \"armeabi-v7a\", \"x86\"\n        }\n    }\nnow console this :\nFAILURE: Build failed with an exception.\n\n\nWhat went wrong:\nExecution failed for task ':app:installDebug'.\n\ncom.android.builder.testing.api.DeviceException: com.android.ddmlib.InstallException: Failed to finalize session : INSTALL_FAILED_UPDATE_INCOMPATIBLE: Package com.example signatures do not match the previously installed version; ignoring!\n\n\n\nTry:\nRun with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output.\n\n\nBUILD FAILED\nTotal time: 22.802 secs\nCould not install the app on the device, read the error above for details.\nMake sure you have an Android emulator running or a device connected and have\nset up your Android development environment:\n. @hofuchi  i can't install the app now, so i can't uninstall.  \ni try to run adb install ./react-native-router-flux/Example/android/app/build/outputs/apk/app-debug.apk console this\nPlease select on your phone whether can install the app by The ADB command?\n    pkg: /data/local/tmp/app-debug.apk\nFailure [INSTALL_FAILED_UPDATE_INCOMPATIBLE]\nbut i run adb install can install other apk. @hofuchi  well i fix this \nfirst, i try to run adb uninstall com.example but not working console this  Failure [DELETE_FAILED_INTERNAL_ERROR]\nthen i change build.gradle like this \njava \ndefaultConfig {\n        applicationId \"com.example.demo\"    <-------------- change \n        minSdkVersion 16\n        targetSdkVersion 23\n        versionCode 1\n        versionName \"1.0\"\n        ndk {\n            abiFilters \"armeabi-v7a\", \"x86\"\n        }\n    }\nnow  can install \ud83d\ude00. ",
    "heartgamer": "@luco It works! Thank you. . ",
    "soulwu": "I print the state diff in reducer, I think the problem could be the second DrawerOpen action, also maybe a bug for react-navigation?\n\n. @aksonov Drawer must be parent for tabs? But how can I make Drawer only enabled while user switch to Home tab?. ",
    "DayaramK": "hi how can i integrate Drawer using react-native-router-flux: 4.0.0-beta21 . ",
    "necsoft": "I've tried with this similar code and it doesn't happen:\n```javascript\nimport React, { Component } from 'react';\nimport {\n    AppRegistry,\n    StyleSheet,\n    Text,\n    View,\n    Button\n} from 'react-native';\nimport { StackNavigator } from 'react-navigation';\nclass HomeScreen extends Component {\nstatic navigationOptions = {\n    title: 'Home',\n};\n\nrender() {\n    const { navigate } = this.props.navigation;\n    return (\n        <View style={styles.container_home}>\n        <Text style={styles.welcome}>\n        Home Screen\n        </Text>\n        <Button\n        onPress={() => navigate('Details')}\n        title=\"Details\"\n        color=\"#ffffff\"\n        />\n        </View>\n    );\n}\n\n}\nclass DetailsScreen extends Component {\nstatic navigationOptions = {\n    title: 'Details',\n};\n\nrender() {\n    return (\n        <View style={styles.container_details}>\n        <Text style={styles.welcome}>\n        Details Screen\n        </Text>\n        </View>\n    );\n}\n\n}\nconst styles = StyleSheet.create({\n    container_home: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: '#333333',\n    },\n    container_details: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: 'gray',\n    },\n    welcome: {\n        fontSize: 20,\n        textAlign: 'center',\n        margin: 10,\n        color:'#FFC300'\n    },\n});\nconst SimpleApp = StackNavigator({\n    Home: { screen: HomeScreen },\n    Details: { screen: DetailsScreen },\n});\nAppRegistry.registerComponent('react_navigation_test', () => SimpleApp);\n```. I'm sorry but I don't understand what do you mean with stateless render. How can I avoid that message in my example?. This is working now:\n```javascript\nimport React, { Component } from 'react';\nimport {\n  AppRegistry,\n  StyleSheet,\n  Text,\n  Button,\n  View\n} from 'react-native';\nimport {\n  Scene,\n  Router,\n  Actions\n} from 'react-native-router-flux';\nconst App = () => {\n    return (\n      \n\n\n\n\n\n    );\n}\nclass Home extends Component {\n  render() {\n    return (\n      \n\n          Home Screen\n        \nActions.details()}\n          title=\"Details\"\n          color=\"#ffffff\"\n        />\n      \n    );\n  }\n}\nclass Details extends Component {\n  render() {\n    return (\n      \n\n          Details Screen\n        \n\n    );\n  }\n}\nconst styles = StyleSheet.create({\n  container_home: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#333333',\n  },\n  container_details: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'gray',\n  },\n  welcome: {\n    fontSize: 20,\n    textAlign: 'center',\n    margin: 10,\n    color:'#FFC300'\n  },\n});\nAppRegistry.registerComponent('react_native_router_flux', () => App);\n```. ",
    "UlfR": "In case of me it this warning have next stacktrace:\nreactConsoleErrorHandler    ExceptionsManager.js:71\n   console.error    YellowBox.js:67\n   printWarning    warning.js:36\n   warning    warning.js:60\n   getInternalInstanceReadyForUpdate    ReactNativeStack-dev.js:1535\n   enqueueForceUpdate    ReactNativeStack-dev.js:1552\n   ReactComponent.forceUpdate    react.development.js:185\n   (anonymous)    native.js:621\n   Reaction.runReaction    mobx.js:2935\n   runReactionsHelper    mobx.js:3062\n   reactionScheduler    mobx.js:3040\n   (anonymous)    mobx.js:3069\n   batchedUpdates    ReactNativeStack-dev.js:2106\n   batchedUpdates$1    ReactNativeStack-dev.js:1465\n   reactionScheduler    mobx.js:3069\n   runReactions    mobx.js:3045\n   endBatch    mobx.js:2602\n   endAction    mobx.js:903\n   executeAction    mobx.js:870\n   res    mobx.js:858\n   NavigationStore.dispatch    navigationStore.js:134\n   set    navigationStore.js:76\n   Router    Router.js:279\n   StatelessComponent.render    ReactNativeStack-dev.js:1610\n   (anonymous)    ReactNativeStack-dev.js:1881\n   measureLifeCyclePerf    ReactNativeStack-dev.js:1625\n   _renderValidatedComponentWithoutOwnerOrContext    ReactNativeStack-dev.js:1880\n   _renderValidatedComponent    ReactNativeStack-dev.js:1890\n   _updateRenderedComponent    ReactNativeStack-dev.js:1854\n   _performComponentUpdate    ReactNativeStack-dev.js:1838\n   updateComponent    ReactNativeStack-dev.js:1819\n   receiveComponent    ReactNativeStack-dev.js:1784\n   receiveComponent    ReactNativeStack-dev.js:1349\n   updateChildren    ReactNativeStack-dev.js:2677\n   _reconcilerUpdateChildren    ReactNativeStack-dev.js:2817\n   _updateChildren    ReactNativeStack-dev.js:2852\n   updateChildren    ReactNativeStack-dev.js:2849\n   receiveComponent    ReactNativeStack-dev.js:2915\n   receiveComponent    ReactNativeStack-dev.js:1349\n   _updateRenderedComponentWithNextElement    ReactNativeStack-dev.js:1859\n   _updateRenderedComponent    ReactNativeStack-dev.js:1855\n   _performComponentUpdate    ReactNativeStack-dev.js:1838\n   updateComponent    ReactNativeStack-dev.js:1819\n   receiveComponent    ReactNativeStack-dev.js:1784\n   receiveComponent    ReactNativeStack-dev.js:1349\n   updateChildren    ReactNativeStack-dev.js:2677\n   _reconcilerUpdateChildren    ReactNativeStack-dev.js:2817\n   _updateChildren    ReactNativeStack-dev.js:2852\n   updateChildren    ReactNativeStack-dev.js:2849\n   receiveComponent    ReactNativeStack-dev.js:2915\n   receiveComponent    ReactNativeStack-dev.js:1349\n   _updateRenderedComponentWithNextElement    ReactNativeStack-dev.js:1859\n   _updateRenderedComponent    ReactNativeStack-dev.js:1855\n   _performComponentUpdate    ReactNativeStack-dev.js:1838\n   updateComponent    ReactNativeStack-dev.js:1819\n   receiveComponent    ReactNativeStack-dev.js:1784\n   receiveComponent    ReactNativeStack-dev.js:1349\n   _updateRenderedComponentWithNextElement    ReactNativeStack-dev.js:1859\n   _updateRenderedComponent    ReactNativeStack-dev.js:1855\n   _performComponentUpdate    ReactNativeStack-dev.js:1838\n   updateComponent    ReactNativeStack-dev.js:1819\n   receiveComponent    ReactNativeStack-dev.js:1784\n   receiveComponent    ReactNativeStack-dev.js:1349\n   _updateRenderedComponentWithNextElement    ReactNativeStack-dev.js:1859\n   _updateRenderedComponent    ReactNativeStack-dev.js:1855\n   _performComponentUpdate    ReactNativeStack-dev.js:1838\n   updateComponent    ReactNativeStack-dev.js:1819\n   receiveComponent    ReactNativeStack-dev.js:1784\n   receiveComponent    ReactNativeStack-dev.js:1349\n   updateChildren    ReactNativeStack-dev.js:2677\n   _reconcilerUpdateChildren    ReactNativeStack-dev.js:2817\n   _updateChildren    ReactNativeStack-dev.js:2852\n   updateChildren    ReactNativeStack-dev.js:2849\n   receiveComponent    ReactNativeStack-dev.js:2915\n   receiveComponent    ReactNativeStack-dev.js:1349\n   _updateRenderedComponentWithNextElement    ReactNativeStack-dev.js:1859\n   _updateRenderedComponent    ReactNativeStack-dev.js:1855\n   _performComponentUpdate    ReactNativeStack-dev.js:1838\n   updateComponent    ReactNativeStack-dev.js:1819\n   receiveComponent    ReactNativeStack-dev.js:1784\n   receiveComponent    ReactNativeStack-dev.js:1349\n   _updateRenderedComponentWithNextElement    ReactNativeStack-dev.js:1859\n   _updateRenderedComponent    ReactNativeStack-dev.js:1855\n   _performComponentUpdate    ReactNativeStack-dev.js:1838\n   updateComponent    ReactNativeStack-dev.js:1819\n   receiveComponent    ReactNativeStack-dev.js:1784\n   receiveComponent    ReactNativeStack-dev.js:1349\n   _updateRenderedComponentWithNextElement    ReactNativeStack-dev.js:1859\n   _updateRenderedComponent    ReactNativeStack-dev.js:1855\n   _performComponentUpdate    ReactNativeStack-dev.js:1838\n   updateComponent    ReactNativeStack-dev.js:1819\n   receiveComponent    ReactNativeStack-dev.js:1784\n   receiveComponent    ReactNativeStack-dev.js:1349\n   _updateRenderedComponentWithNextElement    ReactNativeStack-dev.js:1859\n   _updateRenderedComponent    ReactNativeStack-dev.js:1855\n   _performComponentUpdate    ReactNativeStack-dev.js:1838\n   updateComponent    ReactNativeStack-dev.js:1819\n   receiveComponent    ReactNativeStack-dev.js:1784\n   receiveComponent    ReactNativeStack-dev.js:1349\n   _updateRenderedComponentWithNextElement    ReactNativeStack-dev.js:1859\n   _updateRenderedComponent    ReactNativeStack-dev.js:1855\n   _performComponentUpdate    ReactNativeStack-dev.js:1838\n   updateComponent    ReactNativeStack-dev.js:1819\n   performUpdateIfNecessary    ReactNativeStack-dev.js:1787\n   performUpdateIfNecessary    ReactNativeStack-dev.js:1357\n   runBatchedUpdates    ReactNativeStack-dev.js:1483\n   perform    ReactNativeStack-dev.js:1391\n   perform    ReactNativeStack-dev.js:1391\n   perform    ReactNativeStack-dev.js:1460\n   flushBatchedUpdates    ReactNativeStack-dev.js:1491\n   closeAll    ReactNativeStack-dev.js:1421\n   perform    ReactNativeStack-dev.js:1397\n   batchedUpdates    ReactNativeStack-dev.js:2106\n   enqueueUpdate$1    ReactNativeStack-dev.js:1496\n   enqueueUpdate    ReactNativeStack-dev.js:1525\n   enqueueSetState    ReactNativeStack-dev.js:1571\n   ReactComponent.setState    react.development.js:167\n   onStateChange    connectAdvanced.js:222\n   dispatch    createStore.js:186\n   (anonymous)    redux-logger.js:1\n   (anonymous)    middleware.js:72\n   dispatch    applyMiddleware.js:45\n   (anonymous)    utils.js:265\n   (anonymous)    proc.js:491\n   exec    scheduler.js:25\n   flush    scheduler.js:66\n   asap    scheduler.js:39\n   (anonymous)    channel.js:197\n   emit    channel.js:38\n   (anonymous)    middleware.js:73\n   (anonymous)    persistStore.js:55\n   complete    getStoredState.js:73\n   (anonymous)    getStoredState.js:52\n   (anonymous)    AsyncStorage.js:86\n   __invokeCallback    MessageQueue.js:301\n   (anonymous)    MessageQueue.js:118\n   __guard    MessageQueue.js:228\n   invokeCallbackAndReturnFlushedQueue    MessageQueue.js:117\n   (anonymous)    debuggerWorker.js:71\n. Confirm. There are no warns, if top-level component with Router in render is stateless and rendered only once.. ",
    "Stophface": "I am having the same problem. As suggested rewriting it as stateless component is no option for me because I pass props down from another component.. @aksonov Basically I am writing this https://www.grok-interactive.com/blog/react-native-selection-list/ inside a DrawerNavigation from react navigation as a contentComponent. When I am, lets say, two screens \"deep\" as shown in the example, I need to close the DrawerNavigation on a Press of a Button. That only works when I pass down the props of this.props.navigation in order to call onRight={() => navigate('DrawerClose')}. \n. @aksonov so there is actually no way to render Scenes from a list of scenes? I have to hardcode every scene? There is absolutely no way?!. @aksonov  Hm... How would you set up a navigation if you do not know how \"deep\" it goes, how many layers it has etc?. @aksonov okay. thanks for your quick help!. @aksonov thanks!\nIs there a way to wrap <Router> <Scene .../>...</Router> in a <Scrollview>? When I do it, everything disappears.\n. @aksonov sorry. i did not find that in the docs... Maybe add it? Further, how do I set the backgroundColor of the whole thing? When you look at this image http://imgur.com/s6Ahg1k it defaults to white. Here its grey http://imgur.com/Ls2vXmz. Same goes for the text color of the header.. @aksonov That\n<Router sceneStyle = {styles.container}> ... </Router> \nwith\n```\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"#FFF\"\n  },\n  header: {\n    backgroundColor: \"#108EE9\",\n  },\n});\n```\nis not getting applied. Does it need a different style object? Further, is the textcolor of the header modifiable as well?. @aksonov sorry, I had a typo there with the titleStyle.\nI am looking at the example.\n<Router createReducer={reducerCreate} tintColor=\"red\" getSceneStyle={getSceneStyle}>\nand const getSceneStyle = () => ({\n  backgroundColor: \"white\",\n  shadowOpacity: 1,\n  shadowRadius: 3,\n});\nBut copy & pasting that into my <Router.../> does not do any good. . @aksonov yes :) But I want to set the backgroundColor for the whole router - not the header. \nHere its all white  http://imgur.com/s6Ahg1k while its grey here http://imgur.com/Ls2vXmz. \nI dont want the backgroundColor of the header white, but everything else (where the text is and everything below it). And that\n<Router sceneStyle = {styles.container}> ... </Router>\nwith\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"#FFF\"\n  },  \n  header: {\n    backgroundColor: \"#108EE9\",\n  },\n});\nDoes not do the trick.\n. No, I dont see any backgroundColor when I add sceneStyle to <Router>\nI can exchange\n...container: {\n    backgroundColor: \"#FFF\"\n  },... \nwith backgroundColor: \"red\" and it does not change. I am using react-native-router-flux 4.0.0-beta.16 which is the most recent I assume?. @aksonov I will submit PR for adding this to the docs. Thought I point towards it though.. @aksonov might be easier this way for changes that small.\nAPI and Configuration\nAvailable imports\n\nRouter\nScene\nActions\nActionConst\n\nRouter:\n| Property | Type | Default | Description |\n|-------------|----------|--------------|----------------------------------------------------------------|\n| children |  | required | Scene root element |\n| wrapBy   | Function |  | allows integration of state management schemes like Redux (connect) and Mobx (observer) |\n| sceneStyle     | Style |  | Style applied to all scenes (optional) |\nScene:\n| Property | Type | Default | Description |\n|-----------|----------|----------|--------------------------------------------|\n| key \u00a0 \u00a0 \u00a0 | string | required | Will be used to call screen transition, for example, Actions.name(params). Must be unique. |\n| type \u00a0 | string | push | Optional type of navigation action. You could use replace to replace current scene with this scene |\n| component | React.Component | semi-required | The Component to be displayed. Not required when defining a nested Scene, see example. |\n| headerMode | string | float | Specifies how the header should be rendered: float (render a single header that stays at the top and animates as screens are changed. This is a common pattern on iOS.), screen (each screen has a header attached to it and the header fades in and out together with the screen. This is a common pattern on Android) or none (No header will be rendered) |\n| initial \u00a0 | boolean | false | Set to true if this is the first scene to display among its sibling Scenes |\n| modal \u00a0 \u00a0 | boolean | false |  Defines scene container as 'modal' one, i.e. all children scenes will have bottom-to-top animation. It is applicable only for containers (different from v3 syntax) |\n| clone \u00a0 \u00a0 | boolean | false | Scenes marked with clone will be treated as templates and cloned into the current scene's parent when pushed. See example. |\n| on     | Function | | aka onEnter. Called when the Scene is navigated to. props are provided as a function param |\n| onExit     | Function | | Called when the Scene is navigated away from. |\n| success     | Function | | If on returns a \"truthy\" value then success is called. |\n| failure     | Function | | If on returns a \"falsey\" value then failure is called. |\n| tabs \u00a0 \u00a0 | boolean | false | load child scenes as TabNavigator. Other Tab Navigator  props also apply here. |\n| lazy \u00a0 \u00a0 | boolean | false | whether to lazily render tabs as needed as opposed to rendering them upfront |\n| hideTabBar \u00a0 \u00a0 | boolean | false | hide the tab bar (only applies to scenes with tabs specified) |\n| tabBarPosition \u00a0 \u00a0 | string |  | Specifies tabbar position. Defaults to bottom on iOS and top on Android. |\n| activeTintColor \u00a0 \u00a0 | string |  | Specifies the active tint color for tabbar icons |\n| tabBarComponent     | React.Component |  | React component to render custom tab bar |\n| navBar | React.Component| | React component to render custom NavBar |\n| swipeEnabled \u00a0 \u00a0 | boolean | true | Enable or disable swiping tabs. |\n| animationEnabled \u00a0 \u00a0 | boolean | true | Enable or disable animating tabs on switch. |\n| showLabel \u00a0 \u00a0 | boolean | true  | Boolean to show or not the tabbar icons labels |\n| drawer \u00a0 \u00a0 | boolean | false | load child scenes inside DrawerNavigator |\n| drawerImage     | Image |  | Image to substitute drawer 'hamburger' icon, you have to set it together with drawer prop |\n| contentComponent     | React.Component |  | Component used to render the content of the drawer (e.g. navigation items). |\n| onLeft \u00a0 \u00a0 | boolean | false | load child scenes as DrawerNavigator |\n| navTransparent \u00a0 \u00a0 | boolean | false | nav bar background transparency |\n| navigationBarStyle \u00a0 \u00a0 | Style | | Style applied to nav bar |\n| hideNavBar \u00a0 \u00a0 | boolean | false | hide the nav bar |\n| title     | string |  | Text to be displayed in the center of the nav bar. |\n| titleStyle     | Style |  | Style applied to the title |\n| onLeft     | Function |  | Called when the left nav bar button is pressed. |\n| onRight     | Function |  | Called when the right nav bar button is pressed. |\n| leftButtonImage     | Image |  | Image to substitute for the left nav bar button |\n| leftButtonTextStyle     | Style |  | Style applied to left button text |\n| rightButtonImage     | Image |  | Image to substitute for the right nav bar button |\n| rightButtonTextStyle     | Style |  | Style applied to right button text |\n| headerBackTitle     | string |  | Specifies the back button title for scene |\n| back \u00a0 \u00a0 | boolean | false | Show a back button on the left side of the nav bar that calls Actions.pop on press. |\n| all other props     |  |  | Any other props not listed here will be pass on to the specified Scene's component |\nActions\n| Property | Type | Default | Description |\n|-----------------|----------|----------|--------------------------------------------|\n| [key]       | Function |  | Scenes are \"automagically\" added as functions on the Actions object by key. To navigate to a scene, call Actions.{key}. The function takes an Object which gets passed to the Scene as React props. |\n| pop       | Function |  | Go back to the previous scene by \"popping\" the current scene off the nav stack |\n| refresh       | Function |  | \"Refresh\" the current scene. The function takes an Object which gets passed to the Scene as React props. |\n. That solved it. Thanks for the awesome support!. I do it that way and do not get any complaints\n<Router>\n    <Scene key = \"root\">\n          <Scene \n            key = \"index\"\n            component = {one}\n            title = \"Whatever\"\n            navigationBarStyle = {styles.header}\n            titleStyle = {styles.text}\n            onRight={() => alert(\"hello\")}\n            rightTitle = {SomeIconComponent} \n            initial\n            />\n   </Scene>\n</Router>. ",
    "1335382915": "@luco Now you can see the demo. @aksonov  Thank you. ",
    "pengyanb": "@aksonov It worked after I use 'reset' as parameter last night. I Will pull from master tonight. Thanks for the help. . ",
    "gardner": "I am getting this too. How did you fix it?. ",
    "NickBefore": "1974\nhttps://github.com/aksonov/react-native-router-flux/tree/v4. ",
    "peter017": "I had this issue, fortunately for me it indicated the undefined import statement. I was missing \"export\" in the imported subcomponent. Therefore the import failed and my  was undefined. So first thing, try to check for this. Maybe that helps someone.. ",
    "isaackdamian": "@gardner  did you find a fix? I'm currently stuck with the same error. @felixzxk Did you find a fix? Please help i'm having the same problem.. ",
    "psycura": "Ohh, thanks ))\nwhat about 2nd question?. Oh, sorry, now the back button is gone.\nIssue closed. ",
    "xuananpham93": "I love you #luco. ",
    "mukunzidd": "I love u @luco  u saved my ass. Stephen Grider too? @aksonov . ",
    "silasakk": "thanks @luco \n. ",
    "hastishb": "Hey! \nI'm also going through Stephen Grider's tutorials and I just had this problem. the hidNavBar thing didn't work for me. But I realized that sceneStyle={{ paddingTop: 65 }} on the Router caused it. without it there's no problem. I guess you should do the styling for the nested scenes only. Setting it in the Router also applies it to root and it doubles.\nI notice that you didn't use the styling in your router but there is one in Stephen's example. \nthought it could help others. . ",
    "abhaychitnis": "@diegocouto  \nThe alignSelf did work ! Thanks !\nHowever if I add hideNavBar to 'main' screen, it will hide the top line in the navigation bar. Which means I do not get the back functionality. So the issue remains open......\n. Nope that did not work. Interesting though after adding the back prop, the title of the screen shifted to the right little bit. Now the screen looks like,\n\n. @paloman If I add navTransparent instead of hideNavBar to 'main' screen, I do get both the title and back button on a single row. However now the screen looks like this !!!!\n\n. Yup ! That worked. I updated the version to beta12. The screen now looks like,\n\n I will work on styling a little bit more...\n@diegocouto  rocks ! Thanks you !. Are you referring to the bottom Tab Bar ? Its a standard TabBar with\nstyling. Please check the code I have posted.\nOn Fri, Jul 21, 2017 at 10:14 AM, paloman notifications@github.com wrote:\n\n@abhaychitnis https://github.com/abhaychitnis jus out of curriosity\nwhat did you use for the bottom bar?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/aksonov/react-native-router-flux/issues/2080#issuecomment-316901306,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AbTagNcPSG-0sW4S5qFh_QB1PsHrP7p-ks5sQCzGgaJpZM4OeZyo\n.\n. Hi @paloman \n\nI think this is similar to the issue #2080 that I have reported. I have the same problem.\n. I am stuck in getting the example project to clone and run ! Are there any instructions on how to clone the project and run ? I am probable missing something basic. But I really don't have time to debug a new project.. Upgraded to Beta 17. But the issues remains. I still do not see the custom image. If I remove the drawerImage option, I can see the the default image. Also as I have written earlier, the space in the navigation bar where the image is supposed to appear is responsive to touch and opens the drawer component as desired, even though the there is no image.\n\nAs can be seen in the merged image above, the upper part is the render using custom drawerImage and the lower part is by not using the drawerImage option\nI have tried using different images and different formats (png , jpg), but there is no effect.\n. OK. The issues seems to be with the image size. I reduced the size of the custom image (.png) and this time it seemed to work. Here is the render \n\nIs there a way I can set width and height of the drawerImage ? I think that will work.\n. ",
    "PrGauvreau": "I see the same thing, but what i noticed when messing with their example is that is you send the navTransparent prop it fixes the problem and you can have the back button show without the navebar... however, I cant get the navTransparent prop to work outside their example js file..... not sure why\n. Hi @diegocouto it worked on the example, but throughs an error in my project...\n. import React from 'react';\nimport { Scene, Router, Actions, Reducer, ActionConst } from 'react-native-router-flux';\nimport LoginForm from './components/auth/LoginForm';\nimport NameSignup from './components/auth/signup/Name';\nimport UsernameSignup from './components/auth/signup/Username';\nimport BirthdaySignup from './components/auth/signup/Birthday';\nimport VerificationSignup from './components/auth/signup/Verification';\nconst RouterComponent = () => {\n    return (\n    \n\n\n\n Actions.pop()}\n      //back={true}\n      >\n        \n\n\n\n\n\n Actions.employeeCreate()}\n          rightTitle=\"Add\"\n          key=\"employeeList\"\n          component={EmployeeList}\n          title=\"Employees\"\n          initial\n        />\n        \n\n\n\n  );\n};\nexport default RouterComponent;\n. See it doesn't make the navbar transparent..... how do I update to beta 12? @diegocouto . \n. ",
    "NelGarbuzova": "Is there such event listener for Drawer? I need to listen for Drawer opens/closes. I can't find this in docs.. +1. +1. @aksonov what is PR?. ",
    "xaamin": "Actions.replace('routeName') works. Thanks for your help @aksonov . ",
    "Rojeena-maharjan": "Is this solved yet??\n. ",
    "alfonsosn": "Any progress on this issue? I found this answer helpful: 1516. ",
    "fukuball": "I write some code to prevent the issue I describe above:\n```\nconst popToRoute = (route, route_callback) => {\n  popping = true;\n  if (.includes(navHistory, route)) {\n    let find = false;\n    while (!find) {\n      if (.last(navHistory) == route) {\n        find = true;\n      } else {\n        navHistory.pop();\n      }\n    }\n    Actions.popTo(route);\n  } else {\n    navHistory.push(route);\n    route_callback();\n  }\n  console.log(navHistory);\n  setTimeout(function (){\n    popping = false;\n  }, 1000);\n};\nconst goToLaunch = () => {\n  navHistory = ['launch'];\n  Actions.popTo('launch');\n};\nconst goToLogin = () => {\n  if (!popping) {\n    var route_callback = function(){\n      Actions.login();\n    };\n    popToRoute('login', route_callback);\n  }\n};\nconst goToLogout = () => {\n  if (!popping) {\n    var route_callback = function(){\n      Actions.logout();\n    };\n    popToRoute('logout', route_callback);\n  }\n};\nconst goToRegister = () => {\n  if (!popping) {\n    var route_callback = function(){\n      Actions.register();\n    };\n    popToRoute('register', route_callback);\n  }\n}\n```\nAnyone have better way?. ",
    "ysfkc": "Ok. but what should i do two button back and drawer menu icon?\n. Solution:\nMy component: ContentDetail\n```\nimport React, {Component} from 'react';\nimport { StackNavigator } from 'react-navigation';\nclass ContentDetail extends Component {\n    static navigationOptions  = {\n        headerStyle: {backgroundColor:'#000'},\n        headerLeft: ,\n        headerRight: ,\n}\n\n}\n```\n. ",
    "FredyC": "@aksonov I am not sure what are you asking me for. I've already shown relevant code except for store itself, but that's just a couple of observable properties, nothing special about it.\nYou are saying that only way of using within MobX app is to be careful about disposing of autorun? :) That feels like a rather big source of problems to me.. Ok, I think I've got some partial solution.  This essentially works for the \"load\" scene where it can decide which way to go based on auth. However, I am struggling with redirecting to \"menu\" scene after the moment user gets authenticated. Apparently onEnter of the \"auth\" scene is not rerun when state changes.\n```js\nfunction Main() {\n  if (stores.preloadStore.loading) {\n    return \n  }\nconst guardAuth = () => {\n    const { authStore } = stores\n    if (authStore.isInitializing) {\n      return false\n    }\n    return authStore.isAuthenticated\n  }\nreturn (\n    \n\n\n\n\n\n\n\n\n  )\n}\n```\nEdit: Updated example to use string for success/failure. Ok, that's nice feature, although undocumented ;)\nThe main problem still remains though. Where to do navigation when a user gets authenticated? I guess that only viable solution is autorun in componentDidMount of AuthScene. It's not very nice, but I am unable to come up with anything else.. @aksonov Any other idea how to solve the problem at hand?\nI think that things would great if on/onEntry/onExit would actually be automatic observers or even have a separate property for that to run success/failure based on that.\nMaybe I am missing something out here, but due to the fact, that with MobX it's not about re-rendering whole component tree, it shouldn't be probably build around events on a particular scene/route. Those are not executed when something in MobX store changes. It could be simple autorun that is setup before entering scene and disposed on exiting it.. @aksonov But autorun is what I had initially and it means I need to be careful about disposing it otherwise I might end up with endless loop. Not even mentioning it's ugly as hell and goes against philosophy of this package, doesn't it? I mean navigation logic in one place.\nI can imagine something like this which would use autorun  underneath that would be setup when you enter the scene and disposed when you leave it. Whenever observable yields a change, the result of it would use success/failure as usual. Does that make a sense?\n<Scene observe={() => user.isAuthenticated} success=\"menu\" failure=\"login\" />. Yea, it needs some more thinking through. Maybe if it would work on parent scenes too and then you would have a nice declarative guard that would go to login whenever user loses authentication. \nIf it would be on a nested scene ten auto dispose would keep logic sane and essentially just used to declaratively say where to go next. For example, you would change currentItem in your store and guard on the scene would catch that and redirect to a detail scene. Something like that...\nAnyway, I am afraid I cannot help you with the demo, because I simply don't understand how to do it yet. Using autorun in componentDidMount feels so awfully dirty... And the onEnter/onExit does not really work well with MobX based store. I am clueless how it's intended to work really.. @luco sorry, but how is that relevant to my problem ? :). @aksonov So I need this ... https://github.com/react-community/react-navigation/blob/master/src/views/TabView/TabView.js#L80\nUnfortunately, last time I checked, there was no router in props of my BottomTabBar component.. ",
    "radha-bacancy": "@aksonov is there anyway that we can check whether the drawer is open or not?\n. ",
    "KamranKhankhail": "@ChristianTucker was you able to fix that grey area issue on android? if yes, can you please share how you did it?\nalso for your above comment, I've checked there is no dependancy of react-native-tabs-view in react-navigation, instead it has react-navigation-tabs.. ",
    "karanwadhwa": "'replace' Pops the current scene from the stack and pushes the new scene to the navigation stack. *No transition will occur.. I've been facing a similar issue. \n```jsx\n      \n\n    {/* Authentication Bucket */}\n    <Scene key=\"auth\" >\n      <Scene key=\"login\" component={LoginForm} title=\"ManagerLogin\" initial />\n    </Scene>\n\n    {/* Main Bucket */}\n    <Scene key=\"main\" >\n      <Scene \n        rightTitle=\" Add\"\n        onRight={() => Actions.AddEmployee()} \n        key=\"employeeList\" \n        component={EmployeeList} \n        title=\"Employee List\" \n        initial\n      />\n      <Scene key=\"addEmloyee\" component={AddEmployee} title=\"Add Employee\" />  \n    </Scene>\n\n     {/* Test Bucket */}\n    <Scene key=\"moo\" >\n      <Scene key=\"add\" component={AddEmployee} title=\"Add Employee\" />  \n      <Scene key=\"emp\" component={EmployeeList} title=\"Employee\" />\n    </Scene>\n\n  </Scene>\n</Router>\n\n```\nin the above code when I click on rightTitle it gives me the following error: `undefined is not a function (evaluating '_reactNativeRouterFlux.Actions.addEmployee()')\n\nCase2:\nwhen I call Action.key directly from the body like so:\n<Text onPress={Actions.moo}>EmployeeList</Text>\nit works perfectly and navigates to the first scene in the 'moo' scene.\nbut if i change it to <Text onPress={() => Actions.moo()}>EmployeeList</Text> it doesn't work\n\nCase 2.1:\nsimilarly, if I want to access the addEmployee nested within moo neither of the options below work:\n<Text onPress={Actions.addEmployee}>EmployeeList</Text>\n<Text onPress={() => Actions.addEmployee()}>EmployeeList</Text>\n\nCase 3:\nActions.key() works fine in this scenario:\nfirebase.auth().signInWithEmailAndPassword(email, password)\n      .then(user => {\n        dispatch({ type: LOGIN_USER_SUCCESS, payload: user });\n        Actions.main();\n      })\n\nP.S. i only get an error when i add Actions.key to onRight whereas there's simply no response in other cases.\nI might be wrong and probably theres nothing broken in RNRF but i just cant seem to figure this out.. hey @aksonov that doesn't solve my issue. I don't have component defined in my container.. AddEmployee is the component name while addEmployee is the key so Actions.addEmployee() should work but it doesnt. . no i didnt. please refer to this\n\nI've been facing a similar issue. \n```jsx\n      \n\n\n    {/* Authentication Bucket */}\n    <Scene key=\"auth\" >\n      <Scene key=\"login\" component={LoginForm} title=\"ManagerLogin\" initial />\n    </Scene>\n\n    {/* Main Bucket */}\n    <Scene key=\"main\" >\n      <Scene \n        rightTitle=\" Add\"\n        onRight={() => Actions.AddEmployee()} \n        key=\"employeeList\" \n        component={EmployeeList} \n        title=\"Employee List\" \n        initial\n      />\n      <Scene key=\"addEmloyee\" component={AddEmployee} title=\"Add Employee\" />  \n    </Scene>\n\n     {/* Test Bucket */}\n    <Scene key=\"moo\" >\n      <Scene key=\"add\" component={AddEmployee} title=\"Add Employee\" />  \n      <Scene key=\"emp\" component={EmployeeList} title=\"Employee\" />\n    </Scene>\n\n  </Scene>\n</Router>\n\n```\nin the above code when I click on rightTitle it gives me the following error: `undefined is not a function (evaluating '_reactNativeRouterFlux.Actions.addEmployee()')\n\nCase2:\nwhen I call Action.key directly from the body like so:\n<Text onPress={Actions.moo}>EmployeeList</Text>\nit works perfectly and navigates to the first scene in the 'moo' scene.\nbut if i change it to <Text onPress={() => Actions.moo()}>EmployeeList</Text> it doesn't work\n\nCase 2.1:\nsimilarly, if I want to access the addEmployee nested within moo neither of the options below work:\n<Text onPress={Actions.addEmployee}>EmployeeList</Text>\n<Text onPress={() => Actions.addEmployee()}>EmployeeList</Text>\n\nCase 3:\nActions.key() works fine in this scenario:\nfirebase.auth().signInWithEmailAndPassword(email, password)\n      .then(user => {\n        dispatch({ type: LOGIN_USER_SUCCESS, payload: user });\n        Actions.main();\n      })\n\nP.S. i only get an error when i add Actions.key to onRight whereas there's simply no response in other cases.\nI might be wrong and probably theres nothing broken in RNRF but i just cant seem to figure this out.. ",
    "webdevsyd": "@aksonov Im currently encountering this. Any straight forward solution for this issue? When I click the message Icon as you can see below in the code, same thing happen to with my navigation \nHere's what I have.\n\n. @aksonov Docs is still not updated. It still says renderRightButton. ",
    "anasmp4": "Actions.usersList({ type:'replace' }). ",
    "BartInTheField": "In react-navigation it is possible to add a headerleft to get the effect \nexport const HomeStack = StackNavigator ({\n    Home: {\n        screen: HomeScreen,\n        navigationOptions : ({ navigation }) => ({\n            title: 'Glasportaal',\n            headerTintColor: 'white',\n            headerStyle: {\n                backgroundColor: '#C62828',\n            },\n            headerTitleStyle: {\n                alignSelf: 'center',\n                marginRight: 56\n            },\n            headerLeft: <View\n                        style={styles.icon}> \n                            <Icon \n                            name= 'menu'\n                            size = {24} \n                            color = 'white'\n                            onPress = { () => navigation.navigate('DrawerOpen') }/>\n                        </View>,\n        })\n    }\nand adding it to my drawer stack\nexport const Drawer = DrawerNavigator ({\n    HomeScreen: {\n        screen: HomeStack,\n        navigationOptions : {\n            drawerLabel: 'Home',\n            drawerIcon: ({ tintColor }) => (\n            <Icon\n            name= 'email'\n            size = {24}\n            color = {tintColor}\n            />\n        ),\n        }\n    },\n    InformationScreen: {\n        screen : InformationStack,\n        navigationOptions : {\n            drawerLabel: 'Information',\n            drawerIcon: ({ tintColor }) => (\n            <Icon\n            name= 'info'\n            size = {24}\n            color = {tintColor}\n            />\n        ),\n        }\n    },\n    AccountScreen: {\n        screen : AccountStack,\n        navigationOptions : {\n            drawerLabel: 'Account',\n            drawerIcon: ({ tintColor }) => (\n            <Icon\n            name= 'person'\n            size = {24}\n            color = {tintColor}\n            />\n        ),\n        }\n    },\n    SettingsScreen: {\n        screen : SettingsStack,\n        navigationOptions : {\n            drawerLabel: 'Settings',\n            drawerIcon: ({ tintColor }) => (\n            <Icon\n            name= 'settings'\n            size = {24}\n            color = {tintColor}\n            />\n        ),\n        }\n    }, LogoutScreen: {\n        screen : LogoutStack,\n        navigationOptions : {\n            drawerLabel: 'Logout',\n            drawerIcon: ({ tintColor }) => (\n            <Icon\n            name= 'exit-to-app'\n            size = {24}\n            color = {tintColor}\n            />\n        ),\n        }\n    }\n},{\n    contentOptions:{\n        activeTintColor: '#FFB300',\n    },\n    drawerWidth: 250,\n    contentComponent: props => \n    <View>\n        <View style={styles.container}>\n        <View style={styles.drawerIconContainer}>\n            <Icon \n            name= 'account-circle'\n            size= {46}\n            color= 'white'\n            />\n            <Text style={styles.drawerText}>dummyaccount@live.nl</Text>\n        </View>\n        </View>\n        <DrawerItems {...props}/>\n    </View>\n}). So you are saying I should add a drawerIcon here aswell?\n<Scene\n        key='drawer'\n        drawer={true}\n        contentComponent={DrawerComponent}\n        hideBackImage\n        drawerIcon = ... //Like this?\n        drawerImage = {Hamburger}\n        hideNavBar>. If I removed the icons from the pure react nav solution there just wouldn't be any icons in the drawer... <Scene\n                        key='drawer'\n                        drawer={true}\n                        contentComponent={DrawerComponent}\n                        hideBackImage\n                        drawerIcon= {null}\n                        drawerImage={Hamburger}\n                        hideNavBar\n                        contentOptions={{ activeTintColor: Colors.ACCENT }}>\n                        <Scene\n                            key=\"order\"\n                            component={OrderScreen}\n                            drawerIcon= {({ tintColor }) => (\n                            <Icon name= 'email' size = {24} color = {tintColor}/>)}\n                            title=\"Order\" />\nstill makes the drawerimage disapear. {/*Home  */}\n                    <Scene\n                        key='drawer'\n                        drawer={true}\n                        contentComponent={DrawerComponent}\n                        hideBackImage\n                        drawerIcon= {({ tintColor }) => (\n                        <Icon name= 'email' size = {24} color = {tintColor}/>)}\n                        drawerImage={Hamburger}\n                        hideNavBar\n                        contentOptions={{ activeTintColor: Colors.ACCENT }}>\n                        <Scene\n                            key=\"order\"\n                            component={OrderScreen}\n                            title=\"Order\" />\nAnd this just makes every icon 'email' and still removes drawerImage\n\n\n. Is this a bug or should I do something different?\n. I fixed my issue by using the unicode for a menu icon \n{/*Home  */}\n                    <Scene\n                        key='drawer'\n                        drawer={true}\n                        contentComponent={DrawerComponent}\n                        hideNavBar\n                        onLeft = {() =>  Actions.drawerOpen()}\n                        leftTitle='&#9776;'\n                        leftButtonTextStyle={styles.Hamburger}\n                        contentOptions={{ activeTintColor: Colors.ACCENT }}>. You can even just put a  from 'React-native-vector-icon'\n<Scene\n                        key='drawer'\n                        drawer={true}\n                        contentComponent={DrawerComponent}\n                        hideNavBar\n                        onLeft = {() =>  Actions.drawerOpen()}\n                        leftTitle= {({ color }) => (\n                        <Icon name= 'menu' size = {24} color = {color}/>)}\n                        leftButtonTextStyle={styles.Hamburger}\n                        contentOptions={{ activeTintColor: Colors.ACCENT }}>. Sorry I don't have the time to give a forked repo\n. I have the same problem and as far as I know (because I checked) there is noting stated in the pure react-navigation documentation.. Stated as in: 'They are saying nothing about it' (This problem). It's an issue in react-navigation I tested it. ",
    "rollymaduk": "Thanks a lot, I appreciate your help, cheers. :)\nOn Wed, Jul 26, 2017 at 6:34 AM, Pavel Aksonov notifications@github.com\nwrote:\n\nJust pass wrapBy={observer} for MobX. Not sure how to apply it to Redux,\nbecause Redux wrapper is different (connect(...)) for each component, so\nyou have to wrap it within the component.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/aksonov/react-native-router-flux/issues/2113#issuecomment-317952514,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ACpHG_lzHEgpxoun-T3MtNt4hoPcjf3-ks5sRs_pgaJpZM4Oi--c\n.\n\n\n-- \nRegardsRonald Maduka\n. ",
    "avishayil": "I dont get this either, if I use wrapBy in the Router component, the store will be automatically binded to this.props inside the scene?\nBecause if this is the intended behavior it's not working.. Same problem here. @tmaly1980 Can you please explain exactly what you did, what files did you change?. ",
    "dustturtle": "@aksonov need demostrate about this feature. Watching this issue.... ",
    "fkanout": "Any updates on this ???. ",
    "rasmniel": "I am certainly not using an older version - I'm currently running 4.0.0-beta.14 as stated above.\nI can get it to print out a FOCUS event using this code with the Router's createReducer prop:\nconst reducerCreate = (params) => {\n    const defaultReducer = new Reducer();\n    return (state, action) => {\n        console.warn('Action', action); // <-- this line prints the desired events!\n        return defaultReducer(state, action);\n    };\n};\n... or by just putting my own reducer directly into a function and returning it to the createReducer prop.\nconst reducerCreate = (params) => {\n    return routeReducer;\n};\nBut I don't know where to go from here, since I'm using Redux and it's not apparent to me how I utilize the data when I don't have access to them from my Redux reducers. At this point I'm not using the connect function, which makes me think I'm going incorrectly about integrating with Redux. As you can see in my initial post I keep state persistent which is the point with the router too, but it looks like the scenes are on a different state with this configuration.. @aksonov I have constructed a little react-native project to demonstrate the issue.\nYou will find that the router behaves exactly as described above.\nI hope this is sufficient to assist you in fixing the issue, otherwise let me know.\nThanks for your effort!. I am afraid I don't have the answer, but in regards to initializing state, I found this Redux library, which might contain some code that could serve as an inspiration: redux-async-initial-state\nI'm guessing you will be able to create an initial state for the Router, which is then be injected into the Redux store as an enhancer, through the applyMiddelwareor compose functions, but this is where my knowledge about react-native ends, I reckon.... I don't mind that syntax - so if it enables storing navigation state inside Redux without breaking new functionality, I say do it!. There you go! This works as expected, and events are now firing properly within Redux.\nYou can safely push the changes to the next release, imo \ud83d\udc4d \nThanks for the solution! :). ",
    "hellsan631": "I am also having issues and am currently not able to persist the router state because of this. Its not showing up in redux at all. It doesn't seem like the connect function connects the state of the router with the store.\n. @aksonov how do you persist the router state when your application closes? My Idea for a work-around was to keep track of a state change on the router and during rehydration (loading of an existing state) I could navigate the router to the desired component, but it throws errors about setting state during a router transition.. ",
    "willymulyana": "I tried the sample project and it works fine, really need RNRF + Redux.\nStill not actually use it in my production, but by changing RNRF version from ^4.0.0-beta.21 to github:aksonov/react-native-router-flux#redux first thing I notice is the tabs Scene's child seem not read the icon prop (for styling purpose). So I guess the intended version of RNRF to work together with Redux is not sliced from ^4.0.0-beta.21 or maybe accidental coding that makes icon prop not working.\nActually I was trying to show header above tabs Scene to no avail. It's first time I use tabs in RNRF, not sure if can show header too in RNRF prior to 4. To achieve this, a stackoverflow direct me to use static header Component (placed as sibling to RNRF Router), it's easy, but the problem is, I need a Scene that isn't included in tabs to not show this static header. And that's the reason I need RNRF + Redux, to make the static header Component know which Scene is in focus and not rendered on certain Scene(s).\n. I think with https://github.com/aksonov/react-native-router-flux/issues/2151 I should stick with ^4.0.0-beta.21.. I can make it works with ^4.0.0-beta.21, however to access current Scene I use routeReducer.routes[routeReducer.index].routeName, so not using Actions.currentScene as in the example as it show previous scene in focus. Not sure why it differ, but I can go on with current method.. Try to use crossroads follow this: http://ihor.burlachenko.com/deep-linking-with-react-native/. I was try it with v4 and it works well. Hope it help.. ",
    "zlandau2": "@jordenchang55, did you happen to figure out a fix for the warning about not updating during a render?. Ah I mean, did you find a way to stop the warning about updating during a render?. ",
    "RadiksMan": "when i update test project (https://github.com/aksonov/rnrfSample) to  \"react\": \"16.0.0-beta.5\",\n    \"react-native\": \"0.49.5\" (my current version)    -   the project does not start. Update all, but the error still remains (\nhttp://joxi.ru/EA46PPyuw7z5em. @kajm  No. ",
    "kajm": "@RadiksMan have you solved it? . @aksonov I did the smallest possible example from your example (https://github.com/aksonov/rnrfSample) and i got this error. What do you think cause this error?\n\n. @gsulloa i actually ended up with react-native-navigation by wix instead. Works good in my opinion. . ",
    "code-freakz": "@digitaldavenyc \ntry \"import reducers from '../reducers';\" after actions.create. ",
    "gsulloa": "@kajm same here.\nThe only way I can avoid it, is not giving the state. But when I do it, the navigation state is not in my redux store.\nAny solution or idea to solve it?. ",
    "fatfatson": "will github:aksonov/react-native-router-flux#redux be merged back to master?\n@aksonov . @code-freakz import sentence will be auto moved to the top of file, use require instead.\n. @aksonov yes I have downloaded that sample and ran it ok, but it has to be configuared depending on the special branch instead of latest mater, so I ask if(when) that branch will be merged back.. \n@aksonov get this error after replacing the RNRF to either npm latest or git master. Actions.state. ",
    "YangYouYong": "@fatfatson I get the same error. ",
    "prudhvir3ddy": "@digitaldavenyc  did you find anything ?  iam getting the same error . please help me\n. @digitaldavenyc  3.43.0 is working good with latest RN you can try that . @avencat is it working on beta 23 ? and any solution please tell me . thanks for reply @aksonov  working good closing issue. ",
    "antoantonyk": "if any one knew which version working correctly? i tried beta 23,25,27 and 31 sadly nothing seems working, Please help. ",
    "abhigupta92": "Hi, I am using following configuration for my project :\nreact : 16.6.3\nreact-native : 0.57.4\nreact-native-router-flux: 4.0.6\nSo I am trying to integrate redux with my scenes.\nMy Scene Component\n```\nclass Login extends Component {\nconst mapDispatchToProps = dispatch => {\n    return {\n      otpSend: () => dispatch(otpSend())\n    };\n  };\nconst mapStateToProps = state => {\n    return {\n      routes: state.routes,\n      otp: state.login.otp\n    };\n  };\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Login);\n}\n```\nMy App.js Class ( Starting Class )\n```\nimport Routes from \"./src/screens/routes\";\nconst store = configureStore();\nexport default class App extends Component {\n  render() {\n    return (\n      \n\n\n    );\n  }\n}\nMy Routes Class :\nclass Routes extends React.Component {reducerCreate(params) {\n    const defaultReducer = Reducer(params);return (state, action) => {\n      this.props.dispatch(action);return defaultReducer(state, action);\n    };}\nrender() {\n    return (\n      \n\n\n\n\n\n    );\n   }\n}\nexport default connect()(Routes);\n```\nSo my otpSend dispatch method is triggered as expected.\nWhat doesn't work : My props are not getting updated in my Login Scene Component.\nThe componentDidUpdate method is not triggered. \nI am not sure what I am missing or if it is not supported at all by RNRF. Could someone please help me out here \ud83d\ude4f \nUpdate : I got it to work.. Just upgraded libraries and it started to work :|. ",
    "impuulse": "Yes last version, like this? \n<Router>\n      <Scene key=\"root\">\n        <Scene key=\"loginForm\" component={LoginForm} hideNavBar={true}/>\n        <Scene key=\"selectScene\" component={SelectScene} hideNavBar={true}/>\n        <Scene key=\"pastingList\" component={PastingList} title=\"\u0420\u0430\u0441\u043f\u0438\u0441\u0430\u043d\u0438\u0435\" titleStyle={{color: '#fff'}} navigationBarStyle={{backgroundColor: '#150529'}}/>\n      </Scene>\n    </Router>\nalso not work :(. https://youtu.be/XQm78UnecGk\n. ",
    "aditya-sodhani": "@aksonov you duplicated #2118 for #2112 and #2112 for #2118. lol.. ",
    "smartworld-dm": "Hi, I am Ito,\nPlease provide me your result(router.js).\nIt would be a great help to me. ",
    "nakulkundaliya": "Me too\nI am not able to change icon's image and remove tab name .\nPlease help me.. @aksonov Thank you for replay.\nI have try with your demo project..\nExample.js File\nconst Example = () => {\n  return (\n    <Router createReducer={reducerCreate} tintColor='red' getSceneStyle={getSceneStyle}>\n          <Scene key=\"root\" hideNavBar hideTabBar>\n              <Scene\n                key=\"tabbar\"\n                gestureEnabled={false}\n                tabs\n                type='reset'\n                tabBarStyle={styles.tabBarStyle}\n                  initial>\n                <Scene key=\"tab1\" component={TabView} icon={TabIcon}  title='Tab1' />\n                <Scene key=\"tab2\" component={TabView} icon={TabIcon} title='Tab2'/>\n                <Scene key=\"tab3\" component={TabView} icon={TabIcon} title='Tab3'/>\n                <Scene key=\"tab4\" component={TabView} hideNavBar icon={TabIcon}/>\n                <Scene key=\"tab5\" component={TabView} icon={TabIcon}/>\n            </Scene>\n        </Scene>\n    </Router>\n  );\n}\nTabIcon.js File\n```\nimport React from 'react';\nimport {PropTypes} from \"react\";\nimport {StyleSheet, Text, View, ViewPropTypes} from \"react-native\";\nimport Button from 'react-native-button';\nimport { Actions } from 'react-native-router-flux';\nconst contextTypes = {\n  drawer: React.PropTypes.object,\n};\nconst propTypes = {\n  name: PropTypes.string,\n  sceneStyle: ViewPropTypes.style,\n  title: PropTypes.string,\n};\nconst TabIcon = (props) => {\nconsole.log(\"===props===\",props); // getting undefine\n  return (\n    \n      {props.title}\n    \n  );\n};\nconst styles = StyleSheet.create({\n  icon:{\n    height:24,\n    width:21,\n  }\n})\nTabIcon.contextTypes = contextTypes;\nTabIcon.propTypes = propTypes;\nexport default TabIcon;\n```\nTabView.js File\n```\nimport React from 'react';\nimport {PropTypes} from \"react\";\nimport {StyleSheet, Text, View, ViewPropTypes} from \"react-native\";\nimport Button from 'react-native-button';\nimport { Actions } from 'react-native-router-flux';\nconst contextTypes = {\n  drawer: React.PropTypes.object,\n};\nconst propTypes = {\n  name: PropTypes.string,\n  sceneStyle: ViewPropTypes.style,\n  title: PropTypes.string,\n};\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\nconst TabView = (props) => {\n  console.log(\"====props==\",props) // Getting props\nreturn (\n    \nTab title:{props.title} name:{props.name}\nTab data:{props.iconName}\n\n  );\n};\nTabView.contextTypes = contextTypes;\nTabView.propTypes = propTypes;\nexport default TabView;\n```\nPlease let me know what is wrong with my code? . Okay,\nWhat do you suggest if I want to remove text below the tab icons? and also need to change icon image Is it possible to do with your library?.\nAs i have mentioned in following image.\n\n. @aksonov Any update?\nIf you want my code, then let me know will push on github.. Yes, I tried it, but getting undefined.\nIf you have any demo link then please share with me. . i tried with your demo code.\nMay i know why it's not working in your demo example?. Thanks for link\nBut i used 'react-native-router-flux' for page nevigation. let me know how it's possible to use  'react-navigation'. Okay,\nSo how Can i fixed it. you have any idea about this?. @aksonov  i agree with @luco tab is appear but not display properly. \nHow can i set tabbar at bottom ( Android)?\nOne more thing if i set showLabel={true} then tab is appear with label but its display at top of the screen.. Can you please suggest to me how can i fixed it?\nHere is my router code\n```\n<Scene\n  key=\"tabbar\"\n  gestureEnabled={false}\n  showLabel={false}\n  tabs\n  tabBarStyle={{backgroundColor:'red',marginTop:50}}\n  initial\n\n\n\n\n\n\n\n Save}\n    />\n  \n```         . @aksonov  Finally, i got the solution. \n\nNeed to add showIcon={true} in \n```\n<Scene\n  key=\"tabbar\"\n  gestureEnabled={false}\n  showLabel={false}\n  tabs\n  showIcon={true}\n  tabBarPosition='bottom'\n  swipeEnabled={false}\n  activeTintColor='black'\n  activeBackgroundColor='transparent'\n  tabBarStyle={{backgroundColor:'black'}}\n  initial\n\n``. @aksonov  Sure i will do it. @SurpassRabbit  You can passheaderMode=\"screen\"inside `\n\nExample\n```\n<Scene\n  key=\"tabbar\"\n  headerMode=\"screen\"\n  gestureEnabled={false}\n  showLabel={false}\n  tabs\n  showIcon={true}\n  tabBarPosition='bottom'\n  swipeEnabled={false}\n  activeTintColor='black'\n  activeBackgroundColor='transparent'\n  tabBarStyle={{backgroundColor:'black'}}\n  pressColor=\"black\"\n  indicatorStyle={{backgroundColor:'black'}}\n  initial\n\n```\n\nI hope it's work for you.. Yes i have tried it\n. You mean it's not possible in react-native-router-flux. @aksonov I fixed it \nI forgot to removed component from the root tab\nThat's why sub tabs are not showing.\nThanks. @tasharofi  you can find demo from \nhttps://github.com/nakulkundaliya/react-native-router-flux/. ```\n<Scene\n  key=\"tab1\"\n  title=\"Tab #1\"\n  tabBarLabel=\"TAB #1\"\n  icon={TabIcon}\n  navigationBarStyle={{backgroundColor: 'red'}}\n  titleStyle={{color: 'white', alignSelf: 'center'}}\n\n alert('Right button')}\n    rightTitle=\"Right\"\n  />\n  \n\n\n Right}\n  />\n   alert('onBack button!')}\n    backTitle=\"Back!\"\n    panHandlers={null}\n  />\n\n```. \n",
    "giulianok": "Same here, I'm trying to render icons instead of text, but looks like you can't remove the text below the icon.\nI was able to remove the text creating a custom Tab using tabBarComponent, but I couldn't find (yet) how to get which is the active tab :(\nExample of my custom tab bar, maybe it helps for some people\n```\nimport _ from 'lodash/fp'\nimport React from 'react'\nimport {StyleSheet, View, Image, Text, TouchableOpacity} from 'react-native'\nimport {Actions} from 'react-native-router-flux'\nconst getIcon = name => {\n  const height = 24\n  switch (name) {\n    // Currectly hating this repetition... oh.. react-native\n    case 'home': return \n    case 'search': return \n    case 'classes': return \n    case 'account': return \n  }\n  return null\n}\nconst styles = StyleSheet.create({\n  container: {\n    display: 'flex',\n    flexDirection: 'row',\n    backgroundColor: '#555555' // Move it to config styles\n  },\n  button: {\n    flexGrow: 1,\n    alignItems: 'center',\n    padding: 10\n  }\n})\nconst CustomTabBar = ({navigationState: {routes}}) => \n  {_.map(({key}) => (\n    \n      {getIcon(key)}\n    \n  ), routes)}\n\nexport default CustomTabBar\n```. Same here\nI had to move the <Scene> to the tab component, return it inside of a function and call it where I need the scene. Then, I used onEnter instead of componentWillMount or componentDidMount.\nI can show you the code if you need it\nBesides, we should have the option to not mount the components until we enter. ",
    "raynor85": "I have successfully implemented it. The CustomDrawer must specify this.props.children in the render function in order to display its nested Scenes. The only problem I am experiencing now is removing the animation transitions. In my implementation, using type=\"reset\" to CustomDrawer> avoid the initial transition. Maybe the approach mentioned here could be useful to get rid of unwanted animated transitions.\nhttps://github.com/aksonov/react-native-router-flux/pull/2062. @foyarash, maybe this is related to https://github.com/aksonov/react-native-router-flux/issues/2496\nTry the version beta.17, since the overlay seems to be removed in beta.18, and let me know. @themakerman it is just a wrapper used to add a component in the top of the app. @foyarash OverlayNavigator is indeed present in beta.22, but no longer accept contentComponent as a prop. My pr #2578 solves that.. It's true that overlayComponent has been added, but for some reason the implementation I was using in react-native-router-flux v4.0.0-beta.17 no longer works in react-native-router-flux v4.0.0-beta.22.\n\n. After some digging I realised that the following code:\n<Scene key=\"main\" overlay contentComponent={Main} type=\"reset\">\nv4.0.0-beta.17:\nthe Main component is rendered and has access to the children property\nv4.0.0-beta.22:\nthe Main component is not rendered\nAfter checking the Example.js, I tried to change the code with the following:\n<Scene key=\"main\" overlay component={Main} type=\"reset\">\nThe Main component is rendered, but this time children is undefined. I need the children prop inside the Main component. How can I achieve that in v4.0.0-beta.22?. After looking at the code, I realised that OverlayNavigator no longer accept contentComponent as parameter, as it used to be in version v4.0.0-beta.17. My pull request restores that, so you can call overlay with contentComponent as it used to be.. Yes. It has been merged onto master too.\nOn Wed, 8 Nov 2017 at 16:16, foyarash notifications@github.com wrote:\n\n@raynor85 https://github.com/raynor85 how did you manage to open /\nclose the drawer?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/aksonov/react-native-router-flux/issues/2496#issuecomment-342868555,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AFjD9YzH3WtAbSe5JHQvDI8Caz-q7zxOks5s0dP6gaJpZM4P2YRR\n.\n. @foyarash it is worth nothing that if you need a simple drawer, you should rely on the Drawer available within the library (see https://github.com/aksonov/react-native-router-flux/blob/master/Example/Example.js#L127). What I did was integrating https://github.com/root-two/react-native-drawer with this library. If you are sure you need this, because you need extra customisation, keep reading.\nTo make it work, I did something like this:\n\nmain.js\njsx\n<Router>\n  <Scene key=\"root\" hideNavBar={true}>\n    <Scene key=\"main\" overlay contentComponent={Drawer} type=\"reset\">\n      <Scene key=\"mainNav\" hideNavBar={true}>\n        <Scene key=\"projects\" component={Projects} type=\"replace\" initial=\"true\" />\n        <Scene key=\"allReferences\" component={AllReferences} panHandlers={null} />\n      </Scene>\n    </Scene>\n  </Scene>\n</Router>\nThe Drawer component contains the implementation of https://github.com/root-two/react-native-drawer, and at the bare minimum, you should do something like that in its render function:\ndrawer.js\njsx\n<Drawer\n  type=\"overlay\"\n  onOpen={this.openDrawer}\n  onClose={this.closeDrawer}\n  open={isDrawerOpen}\n  content={content}>\n    {children}\n</Drawer>;\nThe important thing to notice here is the presence of children prop inside the Drawer, and since in the Scene we defined projects Scene to be the initial with initial=\"true\", that will be the first Scene to be loaded. content prop represents the content of the Drawer rendered when you open it. If you want to open the Drawer programmatically, you can toggle the variable isDrawerOpen passed to open prop within the Drawer. You will probably use redux to save and retrieve isDrawerOpen state.. I can access it from the Drawer component using this.props.children. I wrote children instead of the proper name because at the top level I implied having something like this:\nconst { children, content, isDrawerOpen } = this.props;\nPS: it is worth nothing that Drawer must be your own component, not the one from 'react-native-drawer'.\n. @mightym It should be there honestly. Just be sure you have the right version of the plugin. Apart from that, I have no clue, it should just work.. My changes are included, so it should work.\nhttps://github.com/aksonov/react-native-router-flux/blob/4.0.0-beta.27/src/navigationStore.js#L544. There isn't enough information to see where the problem is honestly, but my suggestion is to be sure to dismiss everything in your components when you hit the back button. I had the same problem when the keyboard was involved. I was able to remove the warning using Keyboard.dismiss() when tapping on the back button. It is probably not what is happening int your case, but I thought it was worth give you a hint.. Should be related to https://github.com/facebook/react-native/issues/10471. ",
    "foyarash": "Hello,\nI don't receive the children in the props, how can I retrieve them?. OverlayNavigator is actually present in beta.22 . @raynor85 how did you manage to open / close the drawer?. Yeah i saw your PR has been merged, but my question was about how did you managed to make the drawer opening from the navbar?. Using hideNavBar does the trick for me\nWhat\u2019s your code?. What if you just remove the hideNavBar from the Stack?. 1 - Use contentComponent instead of component\n2 - Set your scene as an Overlay using either the overlay prop or just the Overlay component\n3 - Just use this.props.children[0] in your MyDrawer.js instead of the DefaultRenderer. ",
    "mightym": "How do I receive the the children there? . Same issue here. \n\"react-native-router-flux\": \"^4.0.0-beta.31\",\nAll scenes and stacks have a unique key. Btw. I'm encountering this since around beta.18 from time to time. The only way to reproduce it is to do a long time nothing with the app. Happens also on iOS simulator. Wonder if its happening when the app returns from background/sleep sometimes.\n\n. @raynor85 This look promising! I'm currently trying to implement react-native-drawer  with react-native-router-flux ... the only part I dont get is how to access {children) in my drawer. I'm using your <Scene key=\"main\" overlay contentComponent={Drawer} type=\"reset\"> part but it seems like there are no children or other props available in the contentComponent. Do you have a hint for me?. @raynor85 yes I know. thanks for your explanation. But this.props.children is empty for me in main. Is there something special how you passed the children to main? Or should it be automatically there? . @raynor85 your version was react-native-router-flux v4.0.0-beta.17 were it worked? Maybe this is the issue, I'm on v4.0.0-beta.27. Same issue here. rebuild my whole setup with react-navigation. No issue. \nHere is the issue, assume the following structure:\n<Tabs key='tabbar'>\n    <Stack key='tab_1'}>\n        <Scene key='home'>\n        <Scene key='list'>\n        <Scene key='detail'>\n    </Stack>\n    <Stack key='tab_2'}>\n        <Scene key='profile'>\n    </Stack>\n</Tabs>\nand now navigate to tabbar or to home. and you will see componentWillMount will be called multiple times. Not sure why this solves somehow the issue, but I leave this here as a solution:\nIf you use proportional dimension that fits the origin aspect ratio of the image you can scale it down or up. Like if the origin image is 200x50 you can use 100x25 to scale it down. But if you use 20x20 its crops the original image.\n. Same issue here on the Back Button. In my case even the complete view doesn't respond to any click . Just to ensure: this question is not about handling content in the drawer like you do by https://github.com/aksonov/react-native-router-flux/blob/master/Example/components/drawer/DrawerContent.js in the example.\nThe question was: is is possible to use as content of a drawer its own routing. Like that a drawer could hold 3 scenes.. @aksonov I my case I want to have a 3 steps in the drawer. \nFirst step -> Scene 1, Second step -> Scene 2 , Third step -> Scene 3\nI tried to use a own stack with scenes in the component that got passed here https://github.com/aksonov/react-native-router-flux/blob/master/Example/Example.js#L131\nBut this didn't work. So as you closed this I assume its not possible? . Thanks!. @aksonov Does this mean onEnter is never called inside any scene inside tabs? \nI have this setup:\n<Tabs key='tabbar'>\n                    <Stack key='tab_1'>\n                      <Scene key='home'\n                             component={HomeView}/>\n                    </Stack>\n                    <Stack key='tab_2'>\n                     <Scene key='start_create'\n                            component={HomeCreateView}/>\n                    </Stack>\n                  </Tabs>\nand basically in ever Scene \nstatic onEnter() {\n    console.log('On Enter')\n  };\ngets not fired.. Its the initial scene. It just gets rendered. No Actions involved. And the issue is not about that its mounting initially twice. The issue is about the scence getting remounted twice when the app goes to background/is getting inactive.. ",
    "thg303": "I need deep linking! :(. I used react-router. it supports deep linking. ",
    "xinhash": "\nWhen I put drawer lower\n\nI get following error :\n. You don't have a scene with key=\"root\" . It will be parent to key=\"home and key=\"test\" . Check Example/Example.js for better understanding. ",
    "JaxGit": "@jaimecorrea try to replace the <DefaultRenderer/> with your app's main Navigator node (which upgraded to v4), nest all nodes in this structure: app --- Drawers --- main Navigator which is using router-flux v4, then manage your drawer states in redux by yourself. \nThis strategy I use works with plain react-navigation, and I just verified that it also works with router-flux v4.\nThe advantage of keeping react-native-drawer instead of using react-navigation official drawer: \nyou can safely integrate router-flux/react-navigation (for bottom tabs, disable tab swiping), react-scrollable-tab-view (for upper tabs) and react-native-drawer without freezing the nested scrollable-tab-view on Android. . Thanks for your explanation~\nWe are currently time restricted and may not have time for extension either, also our case may be a bit rare and single Router with react-navigation built-in drawer is sufficient for most of the cases. However we verified the following workaround for us which is faster:\n\nUpgrade to router-flux v4, keep using it for main navigations and track main nav states in redux by createReducer prop;\nUse pure react-navigation Navigator and manage drawer nav states in redux.. \n",
    "SXQJSL": "thank u. ",
    "rota-rossi": "I 'solved' the issue by downgrading my mobx and mobx-react versions for the same used by RNRF.. I don't know if it would be just that. \nThe proper way (as I understood) is actually to change the mobx packages to be a peer dependency here. But this way, the users will need to install by hand mobx and mobx-react, even if they do not plan to use it (peerDependencies are not installed by default).\nShould I proceed on this path?. will add mobx and mobx-react to devDependencies too.. ",
    "rubycon": "Thanks. How do I import the transpiled version directly in my code?. I just figured out why, I updated my version from the master branch where package.json still point to the root index.js (not dist) but use ES7 decorators : https://github.com/aksonov/react-native-router-flux/blob/master/package.json#L10. Sorry, put the wrong link (that was the 4.0.0-beta.15 tagged branch). I fixed it.. Great! Thank you very much.. ",
    "mikaello": "I think container scene as root means that you should have a Scene-component directly under Router-component with key='root' that encapsulates all your other scenes:\njavascript\nrender() {\n  const store = createStore(reducers, {}, applyMiddleware(ReduxThunk));\n  return (\n    <Provider store={store}>\n      <Router>\n        <Scene key='root'>\n          <Scene key='login' component={LoginForm} title='Login' initial />\n        </Scene>\n      </Router>\n    </Provider>\n  );\n}. I am experiencing the same thing. Samsung S7, Android 7.0.. It looks like showIcon={true} is default on iOS, but not on Android. See screenshot of Example-app for iOS and Android:\n. Ah, thanks! \njavascript\n<Scene\n  ...\n  titleStyle={{alignSelf: 'center'}} \n/>\n... solved the issue.. I created a PR #2172 with the example updated with this prop, if that is wanted in the example.. ",
    "mdusza": "@aksonov \n1. yes and it works, I was just wondering if there is a way that won't make me add bottom padding everywhere in order to prevent navbar from overlapping the content.\n\nit doesn't change anything, can you tell me where it can be found in the sources? I think I've looked everywhere but didn't find anything...\n\nThanks in advance. @aksonov \nSorry, I didn't have time to focus on that more, but your answer actually helped to get me a better understanding :)\nThanks for a quick help\nCheers. ",
    "HemantRMali": "Actions.popTo works fine,\nUse it as  Actions.popTo(\"sceneName\");\nVersion: \n  \"react\": \"16.0.0\",\n  \"react-native\": \"^0.51.0\",\n  \"react-native-router-flux\": \"^4.0.0-beta.28\",. ",
    "MakeAndyBetter": "I started the project with RNRF 3.38 and it worked perfectly apart from being sluggish in debug mode. But also I've noticed that in v4 the tabs mount together where before a tab mounted on request. . Thank you lazy helped me not rewrite some redux. Although the automatic tab back is still happening. . I'll give that a try when I've got a little more time on my hands. However it does look like the issue is connected to hot-loading. I'll confirm soonest. Thanks.. It uses a separate styling : See below\n```\n\nconst styles = {\n tabBarStyle: {\n        backgroundColor: '#eeeeee',\n},\nindicatorStyle:{\n    backgroundColor:'#de1d3e'\n  },\n};\n``. trybackBehavior=\"none\"on your scene with thetabs` . A couple of things you could do\nwhen you nav to the scene:\nActions.TABSCENE({type:ActionConst.RESET});\nOR when you set up your router:\n<Scene key='TABSCENE' type={ActionConst.RESET}/>\nOR to initiate reset when on tab scene\nconst resetAction = NavigationActions.reset({\n          index: 0,\n          actions: [\n            NavigationActions.navigate({ routeName: 'TABSCENE' })\n          ]\n        });\n        setTimeout(this.props.navigation.dispatch.bind(null, resetAction), 200);. attach the reset action to a timeout - within your own method for onTabClick I've had to do this from my navdrawer. Perhaps try use the specific tab key instead of the tab scene key\nconst resetAction = NavigationActions.reset({\n          index: 0,\n          actions: [\n            NavigationActions.navigate({ routeName: 'TABSCENE' })\n          ]\n        });\n        setTimeout(this.props.navigation.dispatch.bind(null, resetAction), 200);. ",
    "krishan-kumar-mourya": "For me it worked with \n<Scene\n    ...\n    titleStyle={{ textAlign: 'center', flex: 1 }}\n/>. ",
    "mybolide": "<Router>\n            <Scene\n                  key=\"tabbar\"\n                  gestureEnabled={false}\n                  showLabel={false}\n                  tabs={true}\n                  tabBarPosition={'bottom'}\n                  animationEnabled={false}\n                  tabBarComponent={TabIcon}\n                  activeTintColor={\"#ff9900\"}\n                >\n                <Scene key=\"Index\" tabs={true} component={Index} title=\"\" hideNavBar initial/>\n                <Scene key=\"Company\" component={Company} title=\"\" hideNavBar/>\n                <Scene key=\"Designer\" component={Designer} title=\"\" hideNavBar/>\n                <Scene key=\"Offer\" component={Offer} title=\"\" hideNavBar/>\n                <Scene key=\"User\" component={User} title=\"\" hideNavBar/>\n              </Scene>\n        </Router>\n<Footer>\n        <FooterTab>\n          <Button vertical onPress={()=>{alert(0)}}>\n            <Icon name=\"apps\" />\n            <Text>Apps</Text>\n          </Button>\n          <Button vertical>\n            <Icon name=\"camera\" onPress={()=>{alert(1)}}/>\n            <Text>Camera</Text>\n          </Button>\n          <Button vertical>\n            <Icon active name=\"navigate\" onPress={()=>{alert(2)}}/>\n            <Text>Navigate</Text>\n          </Button>\n          <Button vertical>\n            <Icon name=\"person\" onPress={()=>{alert(3)}}/>\n            <Text>Contact</Text>\n          </Button>\n        </FooterTab>\n      </Footer>\nWhen clicked, the Android machine sometimes has no response@aksonov. The new version does not seem to support the icon property. ",
    "irvanniz": "it's work for me\nconst tabMaterial = createMaterialTopTabNavigator(\n  {\n    option1: Option1Screen,\n    option2: Option2Screen\n  },\n  {\n    tabBarOptions: {\n      indicatorStyle: {\n        backgroundColor: \"#ffffff\"\n      }\n    }\n  }\n);. ",
    "PiotrKujawa": "Hi, \nalignSelf will only work if there's no left or right titles/buttons. Otherwise the title is not centered.\nAny solution for this? Or maybe I'm doing something wrong?\n\n. \n\"react-native\": \"0.51.0\",\n    \"react-native-router-flux\": \"^4.0.0-beta.25\",. ",
    "kamranyounis12": "a simple workaround can be providing rightTitle=\" \" in the props of scene.\n<Scene key='yourKey' component={YourComponent} titleStyle={{alignSelf='center'}} title=\"your_title\" rightTitle=\" \"/>. I'm suffering from same issue with RNRF 4.0.0-beta.27. @daviscabral  any update?. ",
    "mdelclaro": "@PiotrKujawa were you able to resolve this issue?. ",
    "pedrogyn": "Hi,\nworked for me\n<Router navigationBarStyle={{backgroundColor: '#FF5722'}} titleStyle={{color: '#fff'}}>\n        <Modal>\n            <Stack key=\"root\">\n                <Scene key='login_screen' component={LoginScreen} title='login' hideNavBar={true} />\n            </Stack>\n            <Scene key='cadastro_screen' component={CadastroScreen} title='Cadastro' hideNavBar={false} />\n        </Modal>\n</Router>. #EDIT\nAssim funcionou ok:\n<Scene  navBarButtonColor='white' \n                    left={\n                            <TouchableHighlight underlayColor='transparent' onPress={()=>{Actions.pop()}}>\n                                <Image style={{width: 15, height: 15, marginLeft: 8}} source={require('./imgs/icons/close.png')}/> \n                            </TouchableHighlight>\n                        }   \n                    key='cadastro_screen' component={CadastroScreen} title='Cadastro' hideNavBar={false} />\n=====================================\nOl\u00e1,\nEu tentei assim: <Scene navBarButtonColor='white' left={<Image style={{width: 15, height: 15, marginLeft: 8}}source={require('./imgs/icons/close.png')}/>} key='cadastro_screen' component={CadastroScreen} title='Cadastro' hideNavBar={false} />\nO bot\u00e3o apareceu mas o click deixou de funcionar. Hello, \nI had the same problem. How did you solve it? \nWhen I request the modal page the navigation bar disappears :(\n. Hello, \nCan solve by doing the following:\n<Router navigationBarStyle={{backgroundColor: '#FF5722'}} titleStyle={{color: '#fff', fontWeight: '600', fontSize: 20}}>\n        <Modal>\n            <Stack hideNavBar >\n                <Scene key=\"root\">\n                    <Scene key='login_screen' component={LoginScreen} title='login' hideNavBar={true} />\n                    <Scene key='estabelecimento_screen' component={EstabelecimentoScreen} title='Estabelecimentos' />\n                </Scene>\n            </Stack>\n            <Scene  navBarButtonColor='white' \n                    left={\n                            <TouchableHighlight underlayColor='transparent' onPress={()=>{Actions.pop()}}>\n                                <Image style={{width: 13, height: 13, marginLeft: 20}} source={require('./imgs/icons/close.png')}/> \n                            </TouchableHighlight>\n                        }   \n                    key='cadastro_screen' component={CadastroScreen} title='Cadastro' hideNavBar={false} />\n        </Modal>\n    </Router>. Thanks for the answer @hungdev :D\nI have made all the settings that the react-native-maps library shows in the documentation and even then the screen is still blank. I tested in a separate project just the map and it worked ok.\n\n. @hungdev I was able to solve using the command react-native link react-native-maps. The problem was not connected to the RNRF library. ",
    "hugoh59": "When I add the modal wrapper I then get 2 navbar on the top of my view, when I add hideNavBar both of them disappear. How can I solve this issue I want one tab bar only not two obviously... ?. lazy doesnt work for me, I've set it up in a scene and it's not working....\n<Scene lazy key=\"auth\" component={Auth} title=\"Facebook login\"/>. @ericklarac you can customize most attributes of the nav bar check out the doc otherwise you can hide it with hideNavBar and create a custom component to replace it instead. I've set lazy=\"true\" in my scene but it still loads the componentDidMount method. How can we fix this?. Ok, sorry about that I found a fix! The lazy attribute is in fact working. My problem was coming from the fact that I was calling a onPress={this.connectWithFacebook()} instead of onPress={() => this.connectWithFacebook()} which was calling the function automatically. If this can help anyone in the future. Sorry about that! . I already have a key for all my scenes but still getting that error.. @aksonov do you know if this is linked to RNRF or to updates in newer version or React Nativation?. I managed to fix this issue simply by upgrading to the latest version of React Native, which was a tedious process by the way but quite worth it.. ",
    "Devansh-Sanghvi": "i am facing the same, is it possible for us to change transition animation\n. ",
    "exos": "worst resolution ever. ",
    "ahmadms1": "I'm having the same problem. Even tried to override it with BackHandler but it will still directly exit from application.. On second thought, I applied the BackHandler wrongly. Please take a look at the workaround suggested in #2040 using BackHandler. Cheers! . ",
    "cporawat": "Thanks for your help, @ahmadms1. This workaround solve my problem. ",
    "durgesh387": "i was unable to solve the problem even after the work around suggested in #2040.. ",
    "avorochenko": "I did everything as you wrote. Warning disappeared. As a result, the application crashes. In the console I see that there is a bunch of requests to the API via Reducer. I encountered this problem earlier and solved it with the help of \"Actions.create\". @aksonov @pewh thanks for help!. ",
    "m-vdb": "using RESET worked for me!. Have you tried using Actions.a({type: ActionConst.RESET})? It will force reseting the navigation stack. I had a similar issue than you I guess, since my user navigated from logged-out state to logged-in state, and I have 2 separate trees for the two states.\nAlso @asokol don't you think it's worth documenting that somewhere? It's pretty useful and almost every app will implement login/logout. Experiencing this as well. Having multiple URI schemes is not uncommon at all... @aksonov can you cherry-pick this commit https://github.com/EvianZhow/react-native-router-flux/commit/685d0151fbbe811d9a64adc5dc9e886755332e0a in your repo? I guess you would want tests for that as well?. Having the same issue. Only on Android. Here is what worked for me:\n```javascript\nconst styles = StyleSheet.create({\n     navigationBarTitleStyle: {\n       // centering for Android\n      flex: 1,\n      textAlign: 'center'\n  }\n});\n...\n<Scene\n    titleStyle={styles.navigationBarTitleStyle}\n    ...\n...\n``. same problem here too, version4.0.6`. ",
    "hassanelsherpiny": "Actions.pop() will do what you want. ",
    "Assem-Hafez": "This solved my problem\n {return Actions.pop()} }>\n. If you want to have the expected behavior use the following\n<Router backAndroidHandler={() => { return Actions.pop(); }}>\n</Router>\nThis will make the back button pops the scenes of the stack without exiting until there are no scenes to pop then the app will exit.. ",
    "CptFabulouso": "For me It works for expected on version \n\"react-native-router-flux\": \"^4.0.0-beta.15\", \n\"react-native\": \"0.46.4\",. This is actually problem of react-native-tab-view, which react-navigation is using for tabs. But in react-navigation is this example of custom tabs, which just renders current screen and custom tab bar and no screens around. \nSo we could recreate that logic, use TabView components of react-navigation so it looks like current Tabs navigation and use that if swipeEnabled = {false}. We don't need pages rendered next to each other, if we don't swipe between them. I would love to do that, but Iam quite confused how this library even works.. To add to this, drawer is not the problem here, but the key property, which has to be specified for every component (Scene, Tabs, Stack, etc.), except Router.. In my case it was caused by drawer. I found this issue in react-navigation that solved it.\nSo now my drawer component looks like this \n```\n<Drawer \n    key='drawer' \n    contentComponent={NavigationDrawer} \n    drawerWidth = {0.8*Metrics.screenWidth}\n    //following props added to fix the issue\n    drawerOpenRoute = 'DrawerOpen'\n    drawerCloseRoute = 'DrawerClose'\n    drawerToggleRoute = 'DrawerToggle'\n\n```\n\nmaybe it will help someone\n. So the cause of error is just stupid.\nIn node_modules/react-navigation/src/navigators/DrawerNavigator.js there is imported TabRouter, which seems like component (starts with upper case), but in reality is just function, so when the code reaches const contentRouter = TabRouter(routeConfigs, tabsConfig); it throws that error because it does not resolve it as function? It does not even run it.\nThis is some new babel config stuff or something, which is just weird space of js for me...\nSo one way to fix this is to rename all TabRouter in that file to tabRouter. I hate to modify node_modules files, I bet there must be way to say to compiler (or whatever) that TabRouter as function is ok?. I used console logs (viewed them in android studio) to track where the code throws error. Did you also fix the next line after contentRouter?\nconst contentRouter = tabRouter(routeConfigs, tabsConfig);\nconst drawerRouter = tabRouter(. May this be related to this?. This may be a more proper workaround for this problem. I've seen it work in a project, not have tried in one of mine yet.. ",
    "littlejohn19": "Where may I find the solution for this issue?. ",
    "zeeshanjan82": "still facing the same issue. Any fix yet?. ",
    "wayne1203": "@asokol Hi, how can I install the latest master? \nI'm in beta16 now, but seems not the latest master version.. Thanks @asokol , it's work~. Thanks for reply, I have tried \"lazy\" before.\nI think it's not fully work.\nIn my situation, \"Tab 1\" is loading some data and in the same time I go to \"Tab 3\".  \"Tab 3\" show normally now. But I back to \"Tab 1\", will see blank page. I made a workaround for this issue, \njust scroll by program when tab force\n```\nconst reducerCreate = params => {\n  const defaultReducer = new Reducer(params);\n  return (state, action) => {\n    //console.log(\"ACTION:\", action);\n// Special handle for iOS tab blank bug\nif (action.type == \"REACT_NATIVE_ROUTER_FLUX_FOCUS\" && Platform.OS === \"ios\") {\n  if (action.routeName == \"chat\" || action.routeName == \"mainPostList\" ) {\n    if (typeof Utils.a_listView[action.routeName] != \"undefined\") {\n\n      const scrollPosition = Utils.a_listView[action.routeName].scrollProperties.offset;\n      Utils.a_listView[action.routeName].scrollTo({y: scrollPosition+0.5});\n      Utils.a_listView[action.routeName].scrollTo({y: scrollPosition-0.5});\n    }\n  }\n}\nreturn defaultReducer(state, action);\n\n};\n}; \n```. I found this solution too and I trued before it will slow when too much items.. Thanks #2981, I'll try it.. ",
    "cobarx": "Working properly here as well. Thanks for the quick fix!. ",
    "tasharofi": "@aksonov can you please share sample code block on how to do the nested tabs here? I am also looking to do the similar thing. Would be great if you can do that. thanks. @nakulkundaliya thanks but I dont see the nested tabs section? I am running the \"Example\" project. Can you tell me where to find it please?. @aksonov is this feature still not supported? it would be a huge help if we can do a conditional scene rendering.... Great thanks that was it. Closing the issue. I am having a same problem. Any updates? . For those who are experiencing the same issue, here is the solution:\n<TabViewAnimated\n      lazy\n      style={[styles.tabContainer]}\n      renderScene={this.renderScene}\n      renderHeader={this.renderHeader}\n      navigationState={this.state.navigation}\n      onIndexChange={this.handleChangeTab}\n      renderPager={this._renderPager}\n    />\nand \n_renderPager = (props) => {\n   return (Platform.OS === 'ios') ? <TabViewPagerScroll {...props} /> : <TabViewPagerPan {...props} />\n  }\nBasically TabViewPagerScroll does not behave fine on Android when it comes to the nested tab views.. ",
    "wluxion": "For others looking at this: you may be able to achieve what you want with headerMode (none/float).. Running into this as well -- started happening when I added a renderLeftButton to a nested Stack (even if I only do this: <Stack key=\"abc\" renderLeftButton={<View />} ...>).\nUPDATE: Changing to <Stack key=\"abc\" renderLeftButton={() => <View />} ...> fixed this -- perhaps the same for drawerIcon above?. ",
    "MaxInMoon": "@aksonov the schema is very trivial. In fact MyReduxForm is a children of the Scene component's PageHome\n. @aksonov did you ever used/encountered a real working exemple with redux-form?. @aksonov I'll do my best to provide one before tomorrow. y2k-shubham's trick worked for me with:\n\"react-native\": \"0.53.3\",\n\"react-native-router-flux\": \"^4.0.0-beta.28\",. After 1 day of struggle I found a way.\nI\u2019ll give you a functional link to help you (let me 3 days). Could the use of PureComponent (instead of functional components) can improve the performance when changing the scene?. @AgNm did you try to make a prod build and to test it on real devices (both iOS and Android?). @AgNm indeed it's weird \ud83d\ude29 \njust two questions\n1- why: null, {} in connect(null, {})(Home); \n2 - when building on iOS from xCode, did you triple checked that you selected release build scheme? (shortcut: control + < )\n. ?. I think this is a very important issue, which is easily mergeable, and could lead to a beta 28.1 or whatever.\nHaving no feedback since 30 days, this is my last call. . After testing the expo app on iOS, I observed that the modal has a opacity-bug when it appears or leaves:\n\nDoes this issue concerns this repo or another? \nThanks.\n. See https://github.com/aksonov/react-native-router-flux/issues/2981. Actions.replace works with 4.0.0-beta.31. @FacuAcosta thanks for the fix which also fixes with react-native@0.55.0. @nfq6612 I'm thinking about something like this:\n```javascript\nonPress={() => {\n  const currentScene = Actions.currentScene;\n  if (currentScene !== 'login') {\n    Actions.push('login');\n  }\n}}\n```. If your app breaks after upgrading to > 4.0.2, you should maybe re-consider your router declaration when app starts, as done here in the example. ",
    "AlbertoIHP": "@aksonov Can you try to help us please, i have this same issue :(. @andela-Jaderibigbe  Man, what did you do to fix this issue ???? help :(. ",
    "Apak00": "Same error here. ",
    "tusharv-bidchat": "With right the button gets rendered button if width is large then it gets cut off.\nBut if I use renderRightButton as Scene prop in Router then it does not get cut off.\nAny idea about this?. Hi\nI made it work as follows:\n<Scene\n                            initial\n                            key=\"home\"\n                            navTransparent\n                            component={Home}\n                            icon={TabIcon}\n                            renderLeftButton={renderLeftButton}\n                        />\nconst renderLeftButton = () => {\n    return (\n        <Image\n            style={styles.navBarIconStyle}\n            resizeMode={UIConst.RESIZE_MODE.COVER}\n            source={chatIcon}\n        />\n    );\n};\nBut I wanted to render the button from inside the scene component.\nI tried using\nActions.refresh({\n        renderLeftButton: () => <Image\n            style={styles.navBarIconStyle}\n            resizeMode={UIConst.RESIZE_MODE.COVER}\n            source={chatIcon}\n        />\n});\nbut its not working.. Fixed the issue by using following:\nconst reducerCreate = params => {\n    const defaultReducer = new Reducer(params);\n    return (state, action) => {\n        console.log('ACTION:', action, Actions.currentScene);\n        if (action.type === 'Navigation/BACK') {\n            console.log(TAG, 'Back Pressed');\n            if (Actions.currentScene === 'home') {\n                BackHandler.exitApp();\n            }\n        }\n        if (action.type === 'Navigation/INIT') {\n            Actions.auth();\n        }\n        return defaultReducer(state, action);\n    };\n};. ",
    "pdavid0": "I would love to give more details but I don't have more to share ... ?\nI just start the app after an upgrade to 0.47 and it crashes without telling me what's up.\n. ",
    "aitemr": "@aksonov Could you share how to create custom navigation bar?. @shukerullah  You can use \"react-native-router-flux\": \"^3.37.0\", and you can pass backgroundImage props.\n. @shukerullah I said react-native-router-flux\": \"^3.37.0 version. ",
    "Dhrupal": "Does this issue resolved in latest, because following code is not changing left title to image.:\nActions.refresh({\n          leftButtonImage:src,\n          onLeft: () => {\n            this.props.onRefresh()\n          },\n        });\nNote:\nreact-native-router-flux ^4.0.0-beta.22\nreact-native ^0.47.2. Actually mine is working now, i have added this, which is not allowing to access left in ios\nstatic navigationOptions =Platform.OS =='ios' && {\n    headerLeft: (\n    \n Actions.pop()} >Cancel\n)\n  }\n. Using Actions['key'].call({data: 'hello'}), not able to get in props in next screen. ",
    "hatemjaber": "onLeft is not working for me either. I have tried quite a few things and cannot control the < in the header to run custom code within it. I wrote a custom component and it only worked for the > 'right' button which worked with both 'renderRightButton' and 'right'. \n<Scene\n            key=\"employeeList\"\n            component={EmployeeList}\n            title=\"Employees\"\n            right={() => {\n              return (\n                <RightButton onPress={() => Actions.employeeCreate()}>\n                  Add\n                </RightButton>\n              );\n            }}\n            initial\n          />\n          <Scene\n            key=\"employeeCreate\"\n            component={EmployeeCreate}\n            title=\"Create Employee\"\n            onLeft={() => console.log('backbutton from create pressed....')}\n          />\n          <Scene\n            key=\"employeeEdit\"\n            component={EmployeeEdit}\n            title=\"Edit Employee\"\n            onLeft={() => {\n              console.log('backbutton from edit pressed....');\n            }}\n          />\n        </Scene>\nwhat is the proper way to go back and to customize the functionality?. Is it possible to use the LeftButton, RightButton, etc... in the NavBar.js file and pass properties to it? I was hoping there is a way to access it so that I can pass it along to the renderRightButton property or right property in order to use it rather than creating one from scratch. Please advise how I can go about doing that.. ",
    "tbarmann": "I don't see init in the docs. Can you explain?. ",
    "fxhereng": "This setting doesn't solve my problem, it deactivates the behavior to select the initial tab on back when you have no routes in your stack. But it doesn't clear the stack on changing tabs.. Thanks for response, \nThe type={ActionConst.RESET} on the scene doesn't seem to work for me.\nOther solution would work I suppose but how do you override the onTabClick event?\nI saw there was a onTabPress={(scene) => {}} call back from react navigation but it doesn't override the navigation action.\nDo you see what I mean?. Thanks for those precisions,\nBut how do you override the onTabClickevent? Is there a callback for this?\nI understand I can call it from outside if needed, but when you click on the tabs explicitely, how do you override this onPress event?\nCheers,. What's your tabs configuration? \nBecause If I do your solution, it recreates a new scene and stacked it up, and what I want to do is to jump to the existing tab (like when you click manually on the tab).\nThanks,. Thanks for answering!\nWhen doing Actions.tabs_tab2() it creates a new tab scene and add it to the tab's navigation stack. So I have, after it, two scenes tabs_tab2, and I don't want that kind of behavior.\nI found out that the jumpoption is doing the same, it creates a new tab instead of jumping to the existing one.\nThe resetoption makes app crash.\nFinally the solution I found was to do an Actions.replace('tabs_tab2'), it goes to the tab2 and doesn't add up scene to the stack navigation. It refreshes the scene as well, in my case I didn't care but it can be useful too.\nCheers,\nEDIT: I have the version 4.0.0-beta21, maybe the behavior could have change in between. Pretty similar with yours:\nversion: 4.0.0-beta21\njavascript\n<Scene key=\"root\">\n    <Tabs key=\"tabs\" showLabel={true} swipeEnabled={false} lazy={true} backBehavior={'initialRoute'}>\n        <Scene key=\"tabs_tab1\" />\n        <Scene key=\"tabs_tab2\" />\n    </Tabs>\n</Scene>\nDoing Actions.tabs_tab2() or Actions.jump('tabs_tab2') adds scene to the navigation stack and duplicates scene.\nActions.replace('tabs_tab2')avoids duplicating the scenes. ",
    "feiooos": "Can you explain to us the reason why this needs to be initiated in this order? We're having a hard time grasping how to the upgrade.\nThe performance part was just a gut reaction.. Thanks for the explanation. ",
    "pukhalski": "Made it work with a nasty trick of making a wrapper of zero height:\n<ImageBackground source={require('./Background.png')} style={style.bg}>\n        <View style={{\n          position: 'absolute',\n          width: '100%' }}>\n            ...Router\n        </View>\n      </ImageBackground>\n. @devvtms, thanks! any ideas on how to fix #2220 by a chance? :) \nI need it only for some part of my scenes, not for all of them.. @aksonov, thanks. It'd be really great since it is a show stopper for us to use it on a real project for now.\n. ",
    "dbvt10": "simple try this:\n```js\n<Image\n    style={{\n      flex: 1,\n      width: null,\n      height: null,\n      resizeMode: 'cover',\n    }}\n    source={{\n      uri:'',\n    }}\n\n ({ backgroundColor: 'transparent' )}>\n          \n\n\n```\nfor me working. Interesting, need same solution elsewhere,  i deal with in these days :). hy @coolmic,  can give any solution or workaround?. \n",
    "pigflymoon": "@y2k-shubham  @tendolukwago\nI tried  init={false}( If it is\u00a0true\u00a0back button will not be displayed), but it didn't work, so I tried backTitle=\" \",Yeah! it works perfect. I have no idea what is the right way to hide back button. So I ended it up with backTitle = \"\"\n. ",
    "ajkhatibi": "@tendolukwago Thanks for point this out. I too am having this issue. Can you explain a few things to me? What do you mean by, \"setting the headerStyle option on naviationOptions\"? I'm not familiar with headerStyle or navigationOptions in RNRF.. ",
    "js1599": "Can confirm that setting BackTile to an empty string WITH A space ON THE SCENE YOU WANT IT REMOVED FROM does work. So for example: \n<routes.Scene backTitle = \" \" key=\"Reply\" component={Reply} title=\"Replies\" />. ",
    "oakis": "Solved it with the code below.. maybe not best practice but it works.\n```jsx\n {\n        return (\n             Actions.pop()}\n            >\n                \n\n\n\n        );\n    }}\n\n```. Is there any better way to solve this? Please let me know... \n",
    "luqmanrom": "@aksonov You are right. It is selected in v4. Thanks!. ",
    "zainmustafa": "Try adding type=\"replace in drawer Scene. \nThis works for me. \n<Scene key=\"drawer\" drawer contentComponent={SideBar} type=\"replace\" hideNavBar={true}>\n      <Scene key=\"main\" >\n          <Scene key=\"scarlet\" component={ScarletScreen} title=\"Scarlet\" />\n    </Scene>\n</Scene>. You can use `type=\"replace\"` in Screen1 scene to stop users going back to splash screen.\n\nTry this for Scene1 \n<Scene key=\"Screen1\" type=\"replace\" component={Screen1} />. Yeah, it has to be there in docs. Glad it helped. . ",
    "alex-shevchenko": "@preetampatil3d did you found any solution for your case?. ",
    "jorred": "@abeltje1 did you find a way to fix this? I didn't even notice it before but after trying I noticed the same issue. Now I need to fix it because it's major UX bug.  . ",
    "wcmboy": "I also have the problem. ",
    "rogoja": "I still have the same problem\nreact-native-router-flux v4.0.0-beta.18 \nreact-native v0.46.4. @aksonov Help. How to install the latest master?. @aksonov it's not exactly what I want. How to make a 'navbar' a global component? That is, it did not redraw when switching between scenes.. I just deleted the code responsible for returning to the previous scene when I presses hardware back button. And wrote my code what to do when I click hardware back button.. ",
    "YoranRoels": "I've been keep tracking of this issue for a very long time and I noticed that recently react-navigation added support for idempotent navigation (https://github.com/react-navigation/react-navigation/pull/3393), which would solve this problem. Is this version of react-navigation already supported in the latest react-native-router-flux beta?. Thanks for your reply, do you have a course of action to fix this problem until that time comes or an ETA for a stable 1.0?. Works for me by passing drawerLockMode={'locked-closed'} to the Drawer's child component (Tabs in my case).\nCredits: https://github.com/aksonov/react-native-router-flux/issues/2566#issuecomment-355879991\nOnly tested on iOS, someone might have to confirm for Android - don't have much time at the moment.. ",
    "SofianeToumert": "This is a workaround I use for the moment:\nFor every button that triggers a navigation action, you can wrap all of it process in a if condition like so:\nif(Actions.currentScene == currentSceneKey) {\n// Do your treatement here\n}\nWhere currentSceneKey is the key of the scene from where the action is triggered.\nThis only triggers once since when you do it for the first time, it is still on the current scene, but for all the other extra taps you could perform, the stack scene is already updated (by adding the new scene you navigate to or by popping the current scene if you navigate back) therefore Actions.currentScene won't be equal to the current scene more than once.\nFor a cleaner code, I have created a structure that holds all my scene keys I use in Router.js and for this trick, It allows me to easily handle  key scene renaming and adding new scenes:\nimport { sceneKeys } from './const/sceneKeys'\nif(Actions.currentScene == sceneKeys.currentSceneKey) {\n// Do your treatement here\n}\nIt also work for the header buttons defined directly in the Router.js (I prefer defining them in their own scene trough static navigation).\nNote: Works with tabbar scenes too, but be aware that the key generated by Actions.currentScenes for tabbar scenes is the key you specified for it in Router.js prefixed with '_' so be sure to add it in your currentSceneKey\nHope it will help you ;) . ",
    "hammooooody": "Probably the simplest workaround used for every Actions.xxx() instance\n<Button onPress={() => Actions.currentScene !== \"page1\" ? Actions.page1() : {}} >Page 1</Button>\nEnjoy\n. Lovely @e10a!. ",
    "e10a": "@hammooooody this worked nicely for me.\nRead through https://github.com/react-navigation/react-navigation/pull/3393 but couldn't find any built-in way to get it to work - could have missed something obvious...(?)\nI'm following your workaround by using a helper file to define a method that can be used globally. \nExample Usage\n```javascript\nimport * as actions from './config/actions';\n\n        actions.push('venueItemView', { id, summary: this.props.venueData })\n    }\n\n```\n\nactions.js (helper file)\n```javascript\nimport { Actions } from 'react-native-router-flux';\nexport const push = (destinationScene, props) => {\n    // console.log('push', destinationScene, Actions.currentScene, props);\n    if (Actions.currentScene === destinationScene) {\n        return;\n    }\n    return ActionsdestinationScene;\n};\n```\n. For anyone else following this issue, I am seeing this as fixed on 4.0.6. Came across the issue on 4.0.5. Thanks @aksonov!. ",
    "radding": "Hello! I just fixed this issue, even tho I did it a little differently. I put hideNavBar on my root scene and it got rid of the double navBar. . ",
    "pinsoneatra": "Quick solution:\n on root scene set hideNavBar={true}\n on scene you want to show header or navigator back set hideNavBar={false}. ",
    "hanxk": "@aksonov thanks. ",
    "duguying": "@aksonov It's useless in 4.0.0-beta.21.. ",
    "kyoyadmoon": "I have tried cardStyle prop in both 4.0.0-beta.27 and 4.0.0-beta.28\ncardStyle prop dose not work on Router component, but did work on Stack and Scene\nso I wrap Scenes with a root Stack like this\n<Router>\n  <Stack key=\"root\" cardStyle={{backgroundColor: '#FFF'}}>\n    <Scene key=\"scene1\" />\n    <Scene key=\"scene2\" />\n  </Stack>\n</Router>\n. ",
    "rathorebs": "You mean master branch, I have downloaded and try again but I'm still facing same issue.. Thanks Pavel !!! \nNow it's working fine.\n. Hi,\nCan you help me out on below issue.\nActually \n\nI'm unable to run \"Example\" project under react-native-router-flux repo.\nPlease see attached screen-grab.\nThanks,\nBhanwar. I'm using latest master and still facing same issue.. Thanks!!!\nNow it's working as fine...\n. Yes, but it's not working.  . ",
    "Aamirali86": "I still facing this issue. ",
    "davojan": "I have yarn 0.27.5 but hardly it's about yarn.\nMay be babel or node version is important? Please tell yours:\nnode --version\nbabel --version. per-scene (not per-navigator) modal configuration\nhttps://github.com/react-community/react-navigation/pull/2308. In beta20 default tabBar position for iOS is broken. TabBar is on top by default.. @compojoom you forgot to update yarn.lock. Nope. Also whole bunch of custom styling is involved and backTitle should never be shown on android.\nCan you tell what was the intention of introducing the custom BackButton. Only ability to customise the icon or something else?. @aksonov This causes React warning if the Component is stateless:\nWarning: Stateless function components cannot be given refs. Attempts to access this ref will fail.. This seems odd to me, back == false should not hide left button according to API docs. \nProper support for changing back param via Action.refresh would look like this:\njs\nif (navigationParams.back || (navigationParams.back !== false && back)) {\n  res.headerLeft = (renderBackButton && renderBackButton(state)) || <BackNavBarButton {...state} />;\n}\nBut this will not hide back button in all cases I believe.. Not sure but I think with my code above Action.refresh({back: false}) should work for you if you haven't defined any of those left-related options for the scene (leftButton, onLeft, leftTitle an so on, see https://github.com/onrige/react-native-router-flux/blob/226f3b645da2b9ef298e57eb2e8296f817880a50/src/navigationStore.js#L182).\nIf you want to hide left-button (not back-button) I think the right way is left=false or something like that, but back=false doesn't make sense in this case.. ",
    "arribbar": "Thanks for your quick reply. It might be indeed a duplicate from #2063.\nI have the bug with:\n- AppState. I added two listeners which can change the state\n- check which view to display first, either login or dashboard.\nHow would you solve this ? By adding a new scene checking which view to be displayed ?. Ok, I tried to the solution from #2063 and it works. Thanks @aksonov :)\nBut I have still an issue with my listeners about net Info and app state. How would you do it ?. Ok, I did it differently. Works fine for me.\nThanks @aksonov . Well, I do not think it is the best answer but what I did to resolve my but:\n- Make router component a stateless component\n- Create a init scene in which I set up all my listeners. I check also if my user is connected before redirecting to the right scene. It is of course the first scene to be loaded in order to do all the setup. Well, it was working with an old version of RNRF, 3.38.0\nIt is not due to stateless components as I thought before, I have still the bug.\nI do not have the bug on iOS. This is only for Android.\n. @aksonov Any idea to help me, please ?. Questions, is it due to react-navigation or react-native-router-flux ?\nAnd what would you advise? Go back to v3.38 or do without router for the share part ?. Well, RNRF is built on top of react-native-navigation. So it is the same, you cannot generate screens dynamically.. I still got the problem.\nI tried your solution @daviscabral but it didn't work in my case. I'll try to investigate in the next few days, starting by your updated example.\nThank you for your time :). ",
    "GenericJam": "This may be helpful for others or not. I didn't have this problem until I started tracking state changes in redux myself. These values are fed into the pages as props. When the props are changing at the same time as the component is changing, react interprets this as an error (warning actually). This is unavoidable in my situation without a significant rewrite so I chose to suppress this specific warning with a line like this:\nconsole.ignoredYellowBox = [\n      \"Warning: Cannot update during an existing state transition (such as within `render` or another component's constructor). Render methods should be a pure function of props and state; constructor side-effects are an anti-pattern, but can be moved to `componentWillMount`.\"\n    ];\nBy suppressing only this warning I will still receive others. \nGenerally speaking I don't recommend suppressing warnings.. As a workaround, you can get a hold of the action and test for 'Navigation/BACK' in the reducer. Then you can call BackHandler.exitApp(). Obviously, this solution is sub optimal but it does work if you're stuck as the listener doesn't fire but the events are still coming through the reducer.\nHere is the reducer from the sample project amended for this purpose:\nconst reducerCreate = params => {\n  const defaultReducer = new Reducer(params);\n  return (state, action) => {\n    if(action.type === 'Navigation/BACK' && state.index === 0){\n        BackHandler.exitApp()\n    }\n    console.log('ACTION:', action);\n    return defaultReducer(state, action);\n  };\n};\n\nOfficially, I don't recommend this but I didn't find any other way to make it happen.. ",
    "stuffmattdoes": "Hey Pavel, thanks for your replies!\nI do currently pop twice in an attempt to navigate back two screens after deleting the item. The code snippet I posted above should catch if the list exists or not (since that scene is still mounted before/after the deletion) but the component still renders before pop() happens.\nAs for the reset - how would you recommend handling this? I have <Scene ...props type='reset' /> which does replace the screen without the transition animation, but throws the same errors I've been seeing immediately following. It's as if the stack is reset but the components have not yet been unmounted.\nAs far as architecture, I'll probably rework it as you suggested. Instead of deleting the item immediately, I'll throw it into a queue and resolve the queue once I've reached the initial scene in the stack after pop(). Sounds good. Alternatively, I've begun to check if certain props exist in shouldComponentUpdate.  Thank you for your help!. ",
    "signorekai": "After some diagnosing, I realise the type='reset' is the one causing the issue. Does anyone have any idea on how to fix this?. Hey @aksonov, not sure why I haven't tried this previously but using type={ActionConst.REPLACE} fixed the issue. Will submit a PR for the docs. Thank you!. ",
    "JanSros1": "hello\nhow are you?\ndid you solve error???\n. hello\nHow are you?\nso did you solve error?. \n. ",
    "ZeroCool00": "anyone solve this error..  replace is not working.. @daviscabral i open this issue here #3104 . any solution yet?. ",
    "ShiiRochi": "UPD:\nDowngraded to version 3.41.0 and the code is working, so the issue persisting in version 4.0.0-beta.18. It helped, thanks. ",
    "Tanumay92": "Just Add in root scene a prop drawer={true}. Can anyone tell me how to customize the drawer which is added in root scene\n??. Can you explain a Bit @sujayjaju . ",
    "sujayjaju": "@Tanumay92 \nYou can define your own component for the drawer\njs\n<Drawer key=\"app\" contentComponent={DrawerContent} drawerWidth={300} >. ",
    "baxri": "Worked also for me, good job :). ",
    "JorgeCeja": "Hello, I have been searching but I cannot find an example of how to use Actions.refs.SCENENAME to handle onExit from inside the component. Can someone please point me to an example? Thanks!. ",
    "EskelCz": "Can confirm, I have the exact same problem.. ",
    "todorone": "@aksonov I've tried to add hideNavBar to all tab children, but it didn't work. Anyway, I'll use workaround with invisible component as navBar prop until bug is fixed. Thanks a lot for Your efforts with rnrf.. @aksonov Thanks a lot for hint. Works great for onExit hook, but unfortunately, there is no component instance in Actions.refs yet on onEnter hook. Is there any workaround?. @aksonov Thanks a lot for recent onEnter / onExit as scene's instances methods implementation. Unfortunately, onEnterbehavior is little bit of quirky - it works only when component is mounted(created first time), but when, for-example, a user navigates to already created scene, the scene is entered but onEnter is not invoked so it may be misleading...\nHope what I've described makes sense... \ud83d\ude3a \n  . @aksonov Btw, fixed onExit which is never invoked right now - #2759 \n  . @aksonov Sorry, missed it. #2760 . @aksonov Pretty good news. At last, lifecycle events system is currently being implemented in react-navigation so hopefully, with next release, we can reimplement onEnter/onExit hooks in more reliable and elegant way.\nhttps://github.com/react-navigation/react-navigation/pull/3345. Yoohooo!\nWe have latest React Navigation release with exciting blur/focus events system.\nNo more hacks and inconsistent onEnter/onExit behavior, we just need to adopt the new system to RNRF.. BTW, is it possible at the moment to push the new screen to stack navigator w/o any animated transition, like reset does?. @Blapi \nThanks for the hint, I've also figured out it. I've also figured out that adding duration={0} as prop, we also disabling transition. But figure out how to control specific transition is really needed.... @compojoom As a workaround, You can re-render top-level component which contains Router component with whole navigation tree, then probably all title props will be recalculated?. @asciifaceman You can override the default behavior of back button by passing function handler to Router component via backAndroidHandler prop.. I use it in production, it performs pretty good, while all basic features do work, some features don't work as expected.... @Blapi Thanks. It's more than enough, I just want to make sure it's kind of approved API so it won't break with next release.... ",
    "romk1n": "@aksonov thanks, is there a place for all of the props ? it seems in the example you using it in Tabs, but it would work in scene as well?. ",
    "mkayswork": "@aksonov gestureEnabled is not working but panHandlers is (using version 4.0.0-beta.21). What's the difference between those props???. @themakerman you could call the drawer via Actions.drawerOpen(). @aksonov within the example there is nothing about to read or see about the drawer.. You mean the view that should be displayed as drawer a.k.a. side menu? You could define a Scene  which contains the drawer like so ( version 4 of this project, not version 3):\n<Scene key='drawer' drawer contentComponent={YourSideMenu} hideNavBar>\n</Scene>\nAnd within this tag you nest in the the views which should access the side menu. Let's assume you have a view which contains a button on the left side of the navBar:\n<Scene key='sampleView' onLeft={() => this.openSideMenu()} leftButtonImage={require('your image source'}/>\nSomewhere inside your component's class you have this function\nopenSideMenu() {\n  Actions.drawerOpen()\n}\nHope this helps you.. ",
    "lpetkovic": "@mkayswork I believe that is because gestureEnabled is a typo :)\nIt should be gesturesEnabled (plural). ",
    "iKronyck": "Hi, how could I disable the virtual button to go back android, any ideas?. Thanks!! I'll read about that. ",
    "dancham86": "@iKronyck Do you mean the hardware back button? You need to implement the BackHandler . ",
    "mrded": "Just curious, why is gesturesEnabled and panHandlers are not documented?. ",
    "asatour": "Try swipeEnabled={false}. ",
    "VB10": "\nJust curious, why is gesturesEnabled and panHandlers are not documented?\n\n++++. add props \"hideNavBar\" for tabs component (it's without props  generate warning rn ts project). navbar prop need.. ",
    "Julinar": "same here\n\n. ",
    "spencercarli": "I would have to agree with @charpeni here - I'm not a huge fan of splitting because it would greatly increase confusion for anyone getting started (do they choose React Navigation, react-native-router-flux, react-native-router-flux's fork of React Navigation --- in addition to the plethora of options already out there).\nThat being said I understand the desire/need to fork react-navigation for certain things, and especially the frustration with fixes not landing in master & new releases. Fortunately the project has some new blood that's pushing the project forward. The original maintainers have a ton of projects (that are heavily relied on by the community) but only have so much time, thus react-navigation has fallen a bit behind.\nAs you can see by the project pulse a lot of issues have been closed over the last few weeks! That's our primary goal right now - get out from under the mountain of issues - and we're almost there!\nHere's a quick run down of our game plan:\n\nTriage all issues\nClose duplicate issues\nMerge \"easy\" PRs (documentation, small bug fixes)\nFigure out new path to 1.0 (what bugs exists, most requested features - the links you all have posted are very helpful in weighing that)\nStart merging PRs/putting together PRs that get us closer to 1.0\nRepeat step 5 until completion\nRelease 1.0 \ud83c\udf89 \n\nIt's definitely a process and the new contributors (myself included) are still getting ramped up so it's taking us a bit of time but I hope that you see the project is coming out of hibernation and we want to put together an incredible navigation solution.. ",
    "hysan": "@charpeni Could you go through all of the PRs that have been linked in this issue and merge them? It would be a great start and restore confidence in the original project to see long standing PRs finally being addressed.. ",
    "michaelduminy": "Same problem here. Ah okay, that seems to fix it. I used to use onBackAndroid.. ",
    "AntonDatsik": "@aksonov \nHelp me please, as I understood, onBackAndroid works only on Android?\nHow to resolve this problem on IOS?. Oh, sorry)\nI use only Android.. ",
    "rmevans9": "Hey @aksonov!\nWe are still working out those details but after looking through the code it doesn't seem like an unattainable goal. @skellock @RWOverdijk and I will be working through a few of the options we have talked about in the next few days.. Hey @aksonov - I have gotten some work done on playing around with the proposal that @RWOverdijk suggested. I haven't opened a PR on this repo yet as there is a looottt of cleanup to do in addition to getting a good example of the ReduxEngine in place. I created a PR on my fork of this repo so @skellock and @RWOverdijk could see/contribute to our proposed solution. In the mean time please feel free to take a look at the direction it is heading:\nhttps://github.com/rmevans9/react-native-router-flux/pull/1\nThe current state of it is - it works! I was easily able to pull MobX out of Router and navigationStore while still providing access back into them so navigation still works. I also built out a ReduxEngine that also works but requires a little bit more setup then the MobX one. I personally think I can improve the API that it is currently using to make the setup a little bit better on the redux side.\nI want to play with a few more thoughts I have on this code before opening a PR here. The one big thing I want to try and figure out is making this not be a breaking change. As it stands if this were to be merged everyone would need to suddenly pull in either MobXEngine or ReduxEngine and pass it to Router. The hangup I have with just defaulting to MobXEngine is that might make the RN packager not optimize out MobX which means your bundle would get bloated with it even if you do pass in a custom engine. One option is make react-native-router-flux state more like how they handle it internally in react-navigation and only use a local component state unless you specifically pass a dispatch and state object. That route might take a lot more refactoring of navigationState but might be worth it.. I worked a bit more on this and I think I am close. Here is a quick summary of updates:\n\nOn the redux side I broke down and built an middleware to handle the additional dispatches that react-native-router-flux does. The wire up of it is simple enough and if someone is using redux they likely already have a middleware in place.\nI couldn't find a good way to default out the MobXEngine but noted you have v4 in beta so I am hoping that I might convince you a breaking change for it isn't such a bad idea.\nI have done a bit more testing and so far haven't found any issues with either the MobXEngine or the ReduxEngine thus far. I am happy with them both at this point.\nThere is code in navigationStore that could likely be removed with this change but I didn't want to pollute this PR too much so I will likely follow up later with another PR.\n\nHere is an example for an end user to wire up the MobXEngine (basically to get the functionality of today) - NOTE: I am omitting unchanged things which is pretty much everything...\nimport MobXEngine from \"react-native-router-flux/dist/Engines/MobXEngine\";\n{...}\n<Router engine={MobXEngine} {...}>\nHere is an example for an end user to wire up the ReduxEngine:\n```\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport ReduxEngine, { navReducer, navMiddleware } from \"react-native-router-flux/dist/Engines/ReduxEngine\";\n{...}\nconst store = createStore(combineReducers({\n  nav: navReducer,\n}), applyMiddleware(\n  navMiddleware,\n));\n{...}\n\n  <Router engine={ReduxEngine(store)} {...}\n{...}\n```\nObviously the redux one is slightly more involved but as an avid redux user myself this does not seem unreasonable. I could make ReduxEngine take in store.dispatch if that helps put any minds more at ease with this change.\nI plan to open a PR against this repo likely tomorrow.. I will give it another shot tonight and see if I can gain any traction.. Hey @aksonov - sorry it took a bit to get back to this. It turns out that the react native packager doesn't want to optimize mobx out at all if you have it in as a dependency of react-native-router-flux. So as I see it the options are:\n\nDo nothing - let mobx be a dep and if someone wants to use this lib they have to accept that\nMake this breaking change which should remove the dep, if it doesn't you might need to pull the packages out to their own packages that depend on a core library.\nFigure out the best plan to remove all external state tree implementations.\n\nI feel like the 3rd option would be the absolute best plan moving forward from here but would require the most work likely.. I can work on that in the coming week. I have updated this PR with the first pass at providing a \"PureEngine\" which is just regular 'ol state. Because of the way the navigationStore is setup there is some working around that happens but I think that can be worked out to be better in time.\nThings I still want to do:\n1. Test this more.\n2. Figure out the best way to ship the other two engines in separate packages. (Different Repos that depend on this one? Setup for them to be shipped as individual packages?) - Guidance from @aksonov would be appreciated here since ultimately it will be him that has to manage this.\n3. Review the code I wrote this morning a bit more to see if I can do things better and not in such a round about way.. Merged in master to resolve conflicts. I put it on my todo list to test out #2382 but won't have time till tonight or possibly tomorrow.. @aksonov The Drawerer still gets mounted multiple times even with the \"PureEngine\". I will spend a little bit of time digging into why that might be.. Scratch that - I was seeing the issue because of the fact that in the example TabView is actually used for basically all the tabs so it really was mounting multiple for each tab. I do not see it mounting multiple times incorrectly once I switched the wrapper to its own component.. @aksonov I am actually going to close this PR. Although it was a direction to resolve the mobx dependency I actually found a better why to implement it. I will be opening a new PR in the next week that will remove any mobx code from RNRF and let react-navigation handle the state internally unless a user provides their own state and dispatch functions. The change will likely effect anyone passing in a state and dispatch function but should be something that is transparent to users that are not.. @aksonov I haven't had much time to work on the issues with this PR. I hope to in the next week or two.. I have updated this to master, found out why \"Back and Refresh\" was not working and put in a fix for that (a kinda hacky one). I have not been able to get a MobX or Redux implementation going with this new setup but that is solely because I haven't spent any time on it yet. I am not sure how much more time I will be able to dedicate to this PR so if someone wants to pick up the torch by all means.. @kesha-antonov One of the biggest reasons I did this work is to just remove the hard dependency on it for every app that uses Redux. If you use react-native-router-flux you now have a mobx dependency even if you didn't want it. . @aksonov if you can see if you can get the failure you are seeing happening in the Example I am more then happy to take a look at that as I think it should be a simple fix. Probably just a timing issue.. @aksonov Got it. I will see what is going on there.. @aksonov the issue seems to be related to the fact that the initial screen doesn't have the onNavigationStateChange called by react-navigation. I set it on the Register screen and it appeared to work and even having it on the initial screen then navigating to a different screen then going back triggers the event correctly.\nAll that should need to happen is to figure out how to trigger a onNavigationStateChange upon initial load of the app I believe.. I've pushed up the merge but I basically threw out the deep link things because it would likely require some manual intervention. So we will need to re-implement that in the new way that Router is setup. Shouldn't be hard to pull off.\nI think dumping the dist folder from git makes a lot of sense. I can go ahead and do that in this PR if you like.. Looks like there is also a test failing post merge. I will sort that out tonight.. Ah - the test is failing because it is actually incompatible with the way the state is being tracked now. The tests tries to look at it directly but with the new setup lets react-navigation handle the store. So the test needs to be rewritten most likely.. Updated the original comment with a running list of things that I think are still left for this PR.. Got the pop command working again which fixed the test. Initial screen getting the FOCUS and the onEnter event getting called now. I have added deep linking back based on the PR but have not tested.. I can certainly update the package.json to point to src.\nI did remove currentScene, prevScene and storing the state locally since the point of this change was to offload the state management to react-navigation. We can keep state locally and try and keep them in sync between the two. The reason I avoided that was because whenever I have tried to keep two sets of state in sync in other cases you always run into edge cases that could get them out of sync. Thinking through the use case here I think it could work though. That would remove the need for using the hidden navigator._navigation.state use as well.\nI am doing some work to make sure this works with Redux and going to try and do MobX next. After I wrap that up I will see about adjusting the way we handle the state here.. Got it working with a Redux state setup! I haven't played with getting MobX to work yet but I suspect it should be pretty easy now that I got the kinks worked out to get it working with Redux.. @aksonov The last few changes left are:\n- Don't use the _navigation.state internals.\n- Re-add Actions.currentScene and Actions.prevScene\nFor avoiding the use of _navigation.state we could tap into the state of the AppNavigator (which ends up being whatever the root level navigator is). I personally like that more because 1. we are no longer using some internals of react-navigation and 2. We are not duplicating the state in two places.\nFor Actions.currentScene and Actions.prevScene we can track that easily but it won't be MobX observable or anything like that. Does that work?. I've went ahead and implemented the prevScene and currentScene. I have also switched how I am using the state from react-navigation.. Ah I missed this one. I will see if I can get this one out of here too.. I am trying to avoid having our own state because it brings little benefit to try and maintain it ourselves vs letting react-navigation handle it. \nWithout MobX or something of that nature I don't think you will be able to easily cause a re-render when prevScene or currentScene change. . ",
    "Megamind2301": "+1. Is there a way to change state and props of rendered component with onEnter/onExit? Currently i can only read pros and state with onExit/onEnter hook using Action.refs.SCENE_NAME @aksonov . ",
    "seratonik": "+1. I experienced this issue as well, and type reset wasn't finding nested keys. I submitted PR #2344 which was my workaround, but I'm not sure if I'm breaking some other intended behaviour.. @aksonov @mcabs3 Thank you both for the suggestions, I'll give those a try and see if they get me up and running.. @d7laungani Sorry for delay getting back, I built a custom component to use as a tab bar and passed it to the tabBarComponent prop of the  scene.\nThe upstream PR for react-navigation that I mentioned in this issue has now been merged, so perhaps it could be used in the future when its makes it into this project?. @mcabs3 shoot, I haven't experienced that yet in my project. I use the reset upon login, and cold-boots to send people to a tabbed area asynchronously, and then once again when they logout to go back to a guest experience and it seems okay right now.. ",
    "aVozgrin": "+1. ",
    "sachithamh": "+1. @aksonov  can you update the package version also pls. @aksonov  yes I checked it, its working :) . ",
    "ValentinBlokhin": "Waiting for new npm version, thanks. It's not first tab, I removed some tabs from code example, it's 3 tab. I do not have transition on Action.reset.\nHow to enable it?. In case of animations and refresh props, it's better to use \nconst params = { onBack: this.onBack, onRight: this.onRight }\nInteractionManager.runAfterInteractions(() => {\n    Actions.refresh(params);\n  });\nbecause \n\nInteractionManager allows long-running work to be scheduled after any interactions/animations have completed. \n",
    "Nairolf92": "I upgraded my project from V3 to V4 beta 19 and have the same issue, this must be related to RNRF.. It seems that I'm lacking this knowledge. What do you mean by pure Javascript objects ?\nI am actually using JSON.stringify like this ;\nthis.saveItem('idBeneficiaire', JSON.stringify(this.state.json[0].idBeneficiaire));. I used actions like this : \n<CardItem button  onPress={() => Actions.intervenants()}>\nAnd here is the scene : \n<Scene key=\"intervenants\" component={Intervenants} renderTitle={() => { return <IntervenantsTitle />; }} rightTitle={<Text/>} onRight={()=> console.log('ok')}/>. I can give it a try. ",
    "yogeshR5": "@aksonov  Same issue happened here while using \nwheelCanvas = this.updateCanvas();\nctx.drawImage(wheelCanvas, wheelCanvas.width / 2, wheelCanvas.height / 2);\nupdateCanvas() {\n    var outsideRadius = 120;\n    var textRadius = 100;\n    var insideRadius = 30;\n    var canvas = this.refs.canvasRoulette;\n    let ctx = canvas.getContext(\"2d\");\n    canvas.width = canvas.height = outsideRadius * 2 + 6;\nvar x = outsideRadius + 3;\nvar y = outsideRadius + 3;\n\nctx.font = \"bold 18px Helvetica, Arial\";\n\nfor (var i = 0; i < rouletteSize; i++) {\n  var angle = i * arc;\n  ctx.fillStyle = colors[i];\n  ctx.beginPath();\n  ctx.arc(x, y, outsideRadius, angle, angle + arc, false);\n  ctx.arc(x, y, insideRadius, angle + arc, angle, true);\n  ctx.strokeStyle = \"#fff\";\n  ctx.lineWidth = 1;\n  ctx.stroke();\n  ctx.fill();\n  ctx.save();\n  ctx.shadowOffsetX = -1;\n  ctx.shadowOffsetY = -1;\n  ctx.shadowBlur = 0;\n  ctx.shadowColor = \"rgb(220,220,220)\";\n  ctx.fillStyle = \"#fff\";\n  ctx.translate(\n    x + Math.cos(angle + arc / 2) * textRadius,\n    y + Math.sin(angle + arc / 2) * textRadius\n  );\n\n  ctx.rotate(angle + arc / 2 + Math.PI);\n  var text = numbers[i];\n  ctx.fillText(text, -ctx.measureText(text).width / 2, 5);\n  ctx.restore();\n}\nreturn canvas;\n\n}. ",
    "Nautal": "And it's possible to get an example?\nThanks a lot. Would be great, at least in my case. I show user info in the drawer and when he updates the info on the profile scene, I must refresh the drawer info.. have you tried the \"lazy\" property ?. ",
    "Samesh": "Yeap doesn't work properly, I'm guessing. Just in case, this is my code\nDoesn't load on initial refresh, but keeps loading when navigating to a sister route. When I navigate to home, the friends component is mounted. I even tried adding tabs to all scenes. Still doesn't work. Please let me know if anyone finds a solution to this.\n<Provider store={store}>\n                <RouterWithRedux>\n                    <Scene key=\"root\">\n                        <Scene\n                            tabs={true}\n                            tabBarComponent={BottomNavigation}\n                            tabBarPosition=\"bottom\"\n                            lazy={true}\n                        >\n                            <Scene key=\"profile\" path=\"/profile/:userId\" component={PostProfileContainer}/>\n                            <Scene key=\"reviewers\" path=\"/reviewers/:userId\" component={ReviewersProfileContainer}\n                                   title=\"Reviewers\" back={true}/>\n                            <Scene key=\"home\" component={HomePageContainer}/>\n                        </Scene>\n                        <Scene key=\"signUp\" component={SignUp} title=\"SignUp\"/>\n                        <Scene key=\"traitsSelect\" component={TraitsPageContainer} hideNavBar/>\n                        <Scene key=\"landing\" component={LandingPageContainer} hideNavBar/>\n                    </Scene>\n                </RouterWithRedux>\n            </Provider>\n. Hey animationEnabled={false} worked for me. . `\n\n\n\n console.log('onExit')}\n                                leftTitle=\"Cancel\"\n                                onLeft={Actions.pop}\n                            />\n                        \n                <Scene key=\"root\">\n                    <Scene hideNavBar panHandlers={null}>\n                        <Tabs\n                            key=\"tabbar\"\n                            showLabel={false}\n                            tabBarComponent={BottomNavigation}\n                            tabBarPosition=\"bottom\"\n                            animationEnabled={false}\n                            lazy\n                        >\n                            <Stack key=\"tab_1\">\n                                <Scene key=\"home\" component={HomePageContainer} hideNavBar/>\n                                <Scene key=\"comments\" path=\"/comments/:postIdParam\" component={CommentsContainer} title=\"Comments\" hideTabBar/>\n                                <Scene key=\"notifications\" component={NotificationsContainer} title=\"Notifications\"/>\n                                <Scene key=\"singlePost\" component={SinglePagePostContainer}/>\n                                <Scene key=\"pendingComments\" path=\"/pending_comments/:postIdParam\" component={PendingCommentsContainer} title=\"Pending comments\" hideTabBar/>\n                                <Scene key=\"search\" component={SearchPageContainer} navBar={SearchNavBar}/>\n                                <Scene key=\"profile\" path=\"/profile/posts/:userIdParam\" component={PostProfileContainer}/>\n                                <Scene key=\"reviewers\" path=\"/profile/reviewers/:userIdParam\" component={ReviewersProfileContainer} title=\"Reviewers\"/>\n                            </Stack>\n\n                        </Tabs>\n                        <Scene key=\"signUp\" component={SignUp} title=\"SignUp\"/>\n                        <Scene key=\"traitsSelect\" component={TraitsPageContainer} hideNavBar/>\n                        <Scene key=\"landing\" component={LandingPageContainer} hideNavBar/>\n                    </Scene>\n                </Scene>\n\n                </Modal>\n            </RouterWithRedux>\n        </Provider>`\n\nThis is what works for me @digitaldavenyc. I don't really understand well as to how this works either but one thing is that the first nested route is rendered initially.. Hey so did you find a solution @Ilario17? I'm also struggling with the same problem.. ",
    "Tomatoo": "can i use define non-static onEnter/onExit methods now?. if i have two same screen in my routestack,for example A B A C,when i back A from C, how can i discriminate which A i focus?. i use react native's own navigator now(version 0.39), it has a api called getcurrentroutes, this can get a list include all pushed routes, and i cannot found a similar api in rnrf.. ",
    "jf4444": "with the same problem with @Tomatoo ,My routestack is A->A->A->A->A,with different programs,but the Actions.refs just have one instance with A,So I doesn't know which A pop and Which Enter.. same problem. ",
    "wangfaguo": "@aksonov ( Yes, use Actions.refs.SCENE_NAME to refer to your component instance)\ncan you show me the code please?  I still have no idea\n. ",
    "zi6xuan": "render() {\n    return (\n      <Router>\n        <Stack key=\"root\">\n          <Scene key=\"login\" hideNavBar={true} component={LoginPanel} />\n          <Tabs key=\"table\" tabBarPosition='bottom' headerMode='screen' titleStyle={{ alignSelf: 'center' }}>\n            <Scene key=\"TimeCard\" onEnter={() => this.onEnter()} title='TimeCard' component={FirstScreen} />\n            <Scene key=\"Joho\" onEnter={() => this.onEnter()} title='Joho' component={MeisaiJoho} />\n            <Scene key=\"Me\" onEnter={() => this.onEnter()} title='Me' component={MePanel} />\n          </Tabs>\n          <Scene key=\"Change\" component={MeisaiChange} />\n          <Scene key=\"Me2\" component={MePanel2} />\n        </Stack>\n      </Router>\n    );\n  }\nonEnter() {\n    Actions.refresh({action:new Date().getTime()});\n  }\ncomponentWillReceiveProps(nextProps: Readonly<P>, nextContext: any){\n    console.log(\"FirstScreen ReceiveProps\");\n  }\nThis can be achieved refresh function, Actions.refresh ({action: new Date (). GetTime ()}); The value passed must be changed, otherwise it will not trigger the componentWillReceiveProps event\nNow I found that this method works only on android, ios does not work. When is it released? onEnter={() => this.onEnter()}Why is it working fine in android, but not in ios?\n@aksonov . I think about this questions,use redux can fix all of them. You must like this Actions.product({ time: new Date() });to input the props\n@socialcode-rob1 . ",
    "maac4422": "@aksonov can show me a example how to use Actions.refs.SCENE_NAME. Thanks @Paul-Todd  you save my life. ",
    "JonathanLouw": "\n@aksonov can show me a example how to use Actions.refs.SCENE_NAME\n\nNot sure if this will help but I solved this in my case where i wanted an api to be called every time i enter a screen that has already been mounted:\njavascript\nstatic onEnter() {\n    if (Actions.refs.itemList !== undefined) {\n        Actions.refs.itemList.selector.props.searchItems()\n    }\n}\nWhere searchItems is a redux action mapped using connect(mapStateToProps, {searchItems}) in the same component. ",
    "TdfGomes": "@JonathanLouw  Thanks!! This also work for me. In my case the object structure was a bit different the what you're showing here but work it! Thanks one more time!. ",
    "riccardonuzz": "\n\n@aksonov can show me a example how to use Actions.refs.SCENE_NAME\n\nNot sure if this will help but I solved this in my case where i wanted an api to be called every time i enter a screen that has already been mounted:\njs\nstatic onEnter() {\n    if (Actions.refs.itemList !== undefined) {\n        Actions.refs.itemList.selector.props.searchItems()\n    }\n}\nWhere searchItems is a redux action mapped using connect(mapStateToProps, {searchItems}) in the same component\n\nI spent 5 hours trying to solve this problem and your solution is the only one which worked. The only change I made is putting that code into the onEnter prop of the Scene, here is my code:\n<Scene \n       key=\"careers\"\n       component={Careers}\n       onEnter={() => {\n              if (Actions.refs.careers !== undefined) {\n                    Actions.refs.careers.selector.props.fetchCareersList();\n              }\n        }}\n/>. ",
    "lexarno": "\n\n@aksonov can show me a example how to use Actions.refs.SCENE_NAME\n\nNot sure if this will help but I solved this in my case where i wanted an api to be called every time i enter a screen that has already been mounted:\njs\nstatic onEnter() {\n    if (Actions.refs.itemList !== undefined) {\n        Actions.refs.itemList.selector.props.searchItems()\n    }\n}\nWhere searchItems is a redux action mapped using connect(mapStateToProps, {searchItems}) in the same component\n\nThank you my friend! You saved my day. For me it worked perfectly!. ",
    "TalkTek": "thanks for the reply. \nI added the modal prop into my root Scene, like this\n<Router createReducer={reducerCreate} tintColor='white'>\n  <Scene overlay>\n    <Scene\n       key='popOutBar'\n       component={PopOutBar}\n    />\n    <Scene key='modal' hideNavBar initial>\n      <Scene  key='root'  hideNavBar hideTabBar initial modal> // <-----here\n        <Scene key='launch' component={Launch} initial hideNavBar hideTabBar />\n        <Scene key='play' direction='vertical'>\n          <Scene key='audio' component={PlayAudioScreen} />\n        </Scene>\n        <Scene key='login' component={Login} hideNavBar />\n        ...\nI noticed that every screen coming out at bottom, but that is not I want.\nI just want one screen popped out at the bottom, not every screen.\nso I tried another case, like this\n<Router createReducer={reducerCreate} tintColor='white'>\n  <Scene overlay>\n    <Scene\n       key='popOutBar'\n       component={PopOutBar}\n    />\n    <Scene key='modal' modal hideNavBar initial>\n      <Scene  key='root'  hideNavBar hideTabBar initial>\n        <Scene key='launch' component={Launch} initial hideNavBar hideTabBar />\n        <Scene key='play' direction='vertical' modal> // <--------here\n          <Scene key='audio' component={PlayAudioScreen} /> // <----the only screen that I hope it can pop out at bottom \n        </Scene>                                                                         \n        <Scene key='login' component={Login} hideNavBar />\n        ...\nIt doesn't work either. \nCould you please help me?. ",
    "varun-raj": "Where is the documentation for breaking change?. ",
    "ericklarac": "@pgonzalez-santiago Hey, how do you modify the navBar on react-native-router-flux, I mean how do you set a custom navBar.\nWish you could help me.. ",
    "esb1": "\nIt seems to me there is a prop you can pass to Scene when declaring it, unless I misunderstood your question. \nImage is from Docs - API. ",
    "ptquang86": "i tried\nstatic rightTitle = (params) => { ... }\nbut params is not a props/state. thanks for your feedback @aksonov\ni tried popTo tabs with no luck\nmy flow is: tabs > login > back to tabs\nDo you have any suggest?\nSorry for my stupid questions.\nIf possible, please add more examples to prevent the newbies like me to bother you :)\n. feedView works\nthank you\nHow about currentTab or activeTab?. ",
    "taylorgoolsby": "Does this work?\nimport { Actions } from 'react-native-router-flux';\nActions.reset('SCENE_NAME'). ",
    "zacharygcook": "I just want to know a good way to check that the user is authenticated (from a route navigation perspective) using react-native-router-flux v4. \nFor example, a recommendation on how to use onEnter in combination with the  and  components to check their authentication status before showing protected routes.\nThe creator must have some good ideas on how to handle it as in the main README he mentions:\nCombining onEnter, onExit, success, and failure makes patterns like authentication, data validation, and conditional transitions simple and intuitive.\nBasically a recommended pattern that would work. I'm asking if there is an example or tutorial anywhere like that on the internet for me to follow for my first app?\n. Not someone actually telling me how to check, via localStorage or whatever, how to check if the user is logged in, but a recommended way (from anyone) on how to handle the very basic routing for a rudimentary / barebones mobile app that has authentication.\nAn example answer (though totally wrong cuz obviously I don't know how to do it) would be something like this:\nfunction isLoggedIn() {\n   if (isAuth === true) {\n        // what to do?\n   } else {\n        // call failure somehow?\n   }\n }\n\nfunction doSuccess() {\n   // IDK\n}\n\nfunction doFailure() {\n   // IDK\n}\n\n<Stack key=\"root\">\n    <Scene key=\"login\" component={LoginScreen} />\n\n    <Scene key=\"homepage\" component={HomeScreen} onEnter={isLoggedIn}\n          onSuccess={doSuccess} onFailure={doFailure} component{HomeScreen} >\n\n</Stack>\n\nSo not telling me how to do the step where authentication is actually checked (from local storage or something) but an example / tutorial for the rest of it.\nHaven't found anything like that anywhere for react-native-router-flux. Previously I have been able to find such a tutorial or example in other front-end frameworks.. @mcabs3 does that help? Doing my best to give you context... Btw if I do figure out a good solution that everyone approves I'll gladly do a pull request and try to add it to the Example project! Could help other noobs after me :)\nAnd I'm going to figure it out one way or the other, just started working on this about 24 hrs ago. I'll let you know the way I do end up implementing it. Its just likely my implementation will be suboptimal given how little I know about RN-router-flux, React Navigation, and react-native in general. This is my first react-native mobile app project ever.. ",
    "frankcary": "\"react\": \"16.0.0-alpha.6\",\n\"react-native\": \"0.43.2\",\n \"react-native-router-flux\": \"^4.0.0-beta.21\". ",
    "Salman18": "Where we have to override this.\nIn code ?\nAny Dependencies need to be installed. yeah. I am using android only.\nBut I am using react-native router flux for navigation.\nmy application gets closed if I press back button on Android.\nany Suggestions?\n. okay thanks\n will look on this,. ",
    "amitbravo": "@hugoh1995 so , is \"lazy\" a solution to get rid of this problem ? I have similar problem , my app is like land on signin page first and then after logged in user lands to 4tabs e.g. news , photos , videos and other , when user successfully logged in , it takes around 3-4 seconds pause from landing signin page to tab group because big heap of data is fetched , renders along with images , so I want user when he lands on main tabs which is news only this data should be loaded , rest of other 3 tabs data should get whenever we hit on them. . My Actions.currentScene is giving me previous currentScene name .. Do you still experience this problem ?. ",
    "Kiozak": "i found the solution , when i installed both the modules i didn't add --save at the last of the command , sorry guys thanks for your time\n. Sorry if i didn't answer you , but can you show me a sample how did you made that drawer please !??\n. ",
    "schlaegerz": "Did you ever figure out this issue? I'm having similar problems. I am having the same problem. Happened when I tried to move to the beta since 3.38 does not work on RN 0.49. Checked out your branch, it still doesn't completely work. It appears there are a few remaining propTypes declared incorrectly. I tried using this branch and it doesn't seem to work. \nRouter.js is doing the following:\nconst {\n  RootContainer: NavigationRootContainer,\n} = NavigationExperimental;\nAnd the branch you are using doesn't have RootContainer defined as part of NavigationExperimental. Thank you so much! After fixing the last of the PropTypes issues and using this branch I was finally able to get it all working again.. There were some leftover propTypes, i branched this one myself, if you want to just test out a temporary branch  https://github.com/schlaegerz/react-native-router-flux/tree/dc-use-react-native-experimental-navigation-from-ms. I've tried it with Scene, and Stack and nothing changes.. Sorry the Modal was not right in my origianl pot \nThis also doesn't work:\nconst scenes = Actions.create(\n    <Stack key=\"root\">\n      <Scene key='Loading'\n          component={Loading}\n          title=\"Loading\"/>\n      <Scene key='HomeScene'\n              component={MainView}\n              title=\"APP\"/>\n        <Scene key='Detailed'\n            component={DetailedItemScene}\n            title=\"APP\"/>\n      </Stack>\n). I had tried to do that, and it didn't change anything.\nI managed to get v3 working again so I'm not bothering with this bug anymore, but there is definitely something wrong here and this is preventing me from getting v4 working. There are a quite a few similar issues like this that have been closed with no real resolution.. Really confused by this, I was playing around with my installed packages and then it just started to work, there must be some weird caching that prevented it from working, I had been trying this on and off for months and never got it to work until now.. I was basing it off the example. There does appear to be a weird caching thing that prevented it from working. I don't understand why.. So it was working for me, then after I was messing with packages again and trying to get a production build of my app, it completely stopped working again.\nMy code didn't change at all, I only updated some unrelated packages.. Yeah I was using the Example project, the issue is entirely a caching issue which is very weird. It has happened to me multiple times, and is probably happening to other people. What commands would you suggest to clear the cache?\n. It appears that directly installing Mobx and Mobx-react in my project fixed the issue.. ",
    "omarvgdev": "Im experience the same issue, and still happening, after #2364 . ",
    "donnes": "@asokol I upgraded to the latest version and tried the solution that @mcabs3 mentioned and the problem still happening.\nDo you have any idea why this occurs?. @mcabs3 I tried to wrap my scenes inside the drawer.\nMy current scenes code:\nI'm navigating using simple Actions.ROUTE_KEY()\n```\nconst scenes = Actions.create(\n  \n\n }\n        hideNavBar\n        hideTabBar\n      >\n        \n    <Scene key=\"auth\">\n      <Scene key=\"login\" component={requireNotAuth(Login)} hideNavBar />\n      <Scene\n        key=\"loginSelection\"\n        component={requireNotAuth(Selection)}\n        hideNavBar\n      />\n    </Scene>\n\n    <Scene\n      key=\"drawer\"\n      drawer\n      contentComponent={Sidebar}\n      renderLeftButton={() => <DrawerButton />}\n      hideNavBar\n    >\n      <Scene key=\"main\">\n        <Scene key=\"list\" component={requireAuth(List)} />\n        <Scene key=\"detail\" component={requireAuth(Detail)} back />\n        <Scene\n          key=\"components\"\n          component={requireAuth(ComponentsList)}\n          title=\"Components List\"\n        />\n      </Scene>\n    </Scene>\n\n    <Scene key=\"filter\" back>\n      <Scene\n        key=\"filterModal\"\n        component={Filter}\n        title={I18n.t('titles.filterModal')}\n      />\n    </Scene>\n  </Stack>\n</Scene>\n\n\n);\n```. +1. ",
    "ovaris": "I need similar functionality and I would not like to build a custom tab bar :( @aksonov onEnter does not work because it's only called when entering scene/tab, not when it pressed for the second time. I also tried to add this to scene component:\nstatic navigationOptions = (props) => {\n    return {\n      tabBarOnPress: (tab, jumpToIndex) => {\n        if (!tab.focused) {\n          jumpToIndex(tab.index);\n        } else {\n          if (_scrollView) {\n            _scrollView.scrollTo({ x: 0, y: 0, animated: true })\n          }\n        }\n      },\n    };\n  };\nwhich would be a perfect solution because I need ref to scrollView BUT adding navigationOptions to scene component will make Icon to disappear. Any further ideas howto implement this? I could use onTabPress handler in Scene but I would need to hae ref to scroll view.... My hack(ish) solution:\nonTabPress(scene) {\n    const { focused, route } = scene;\n    if (route.key === 'feed' && focused) {\n      return this.feedRef.scrollToTop();\n    }\n    return Actions[route.key].call();\n}\n....\n                   <Tabs\n                      initial\n                      key=\"tabs\"\n                      showLabel={false}\n                      activeBackgroundColor=\"white\"\n                      inactiveBackgroundColor=\"white\"\n                      tabBarPosition=\"bottom\"\n                      animationEnabled\n                      hideNavBar\n                      tabBarOnPress={this.onTabPress} // THIS\n                    >\n                      <Scene\n                        key=\"feed\"\n                        component={() => ( // AND THIS\n                          <Feed ref={component => {\n                            this.feedRef = component && component.wrappedInstance;\n                          }}\n                          />)}\n                        iconName=\"ios-home\"\n                        icon={TabIcon}\n                      />\n.... Found it: upperCaseLabel={false}. Just set width and height for Icon as a temporary fix. ",
    "Mike96Angelo": "Is there any plan to support this?  It would be extremely useful.  Was using this in v3 to refresh data for the scene view, but now with v4 its not working.. ",
    "RazerTang": "\nI think  you should pass props to the scene.. ",
    "vhoen": "I didn't have to that in v3 and I was hoping wouldn't have to do this. My scenes are imported from several files and there are a bunch of scenes so it would be quite time consuming.\nThanks for your answer.. You seem to call startsWith method on something that is undefined. I don't think backHandler is responsible for this error. Could you check if error is not occuring elsewhere ?. ",
    "alexandersch": "As a temporary workaround, this still works for me:\nstatic navigationOptions = (props) => {\n    return ({ \n        headerLeft: <BackButton {...props} />,\n        drawerLockMode: 'locked-closed'\n    })\n  }\n. @GuillaumeMunsch\nYes this is from react-navigation. But this still works.\n@omeraplak\nI've added this snippet to my Scene component class. No need to import stuff from react-navigation. Because RNRF is using the react-navigation API in the background.\n. ",
    "omeraplak": "@Alexandersch \nHello,\nCan you more explain how we can use?. +1\ni want to use renderBackButton from scene. My example code,\njavascript\npublic componentWillMount (): void {\n               Actions.refresh({\n            renderBackButton: this.renderBackButton.bind(this),\n            onRight: this.onRightButtonPress.bind(this)\n        });\n}\nIt's not working. I think it's same issue.. @kesha-antonov It's not working. I create new issue for this.. I have same issue but i found temp solution.\nI suggest try this;\nAdd Scene under drawer.\nExample;\n<Scene key=\"drawer\" drawer contentComponent={SideMenu}>\n   <Scene key=\"App\">\n              ... your scenes\n   </Scene>\n</Scene>\n. @sayhei can you give more information or screenshot? My application looks good on iphone x.. ",
    "ital0": "Also having the same issue.\nTried solution provided by @Alexandersch, but I can't disable swipe gesture :( probably I've did something wrong.. ",
    "BenFausch": "@YoranRoels you saved me! I see it working in a nexus 5 android emulator. . ",
    "gupta-ji6": "Try this: \nconst AppNavigator = StackNavigator(\n  {\n    // Drawer: { screen: Drawer },\n    Register: {\n      screen: Register,\n      navigationOptions: ({ navigation }) => ({\n        drawerLockMode: \"locked-closed\",\n      })\n    },\n    TabHome: { screen: TabHome },\n    Album: { screen: Album },\n    offlineContent: { screen: offlineContent },\n    changePassword: { screen: changePassword },\n    Player: {screen: Player},\n  },\n  {\n    initialRouteName: \"TabHome\",\n    // header: null\n  }\n);. ",
    "as123456py": "I have the same promble.\nAt present,I can only use the title key of the Scene,and in custom navBar component ,I only render icon image.\nI hope it works for you. Hi,you can try showLabel={false}  ,like this:\n<Scene key='upPortal'  lazy={true} tabs={true}  showLabel={false}>\n//other Scene\n</Scene>\nthat will hide all the default title under the Scene. @pgonzalez-santiago \nHi,I want to show or hide one of tabbar's children.When hideTabBar is true ,there will hide all of them.. Can anyone help me ?. @tasharofi @thebergamo \nthere is one solution for me which can help you.\n1\u3001Create a separate componet that contains your tabbars\n2\u3001In this componet,deal with your business\n3\u3001Import this componet in your business componet\nthis is my CustomTabBar\n```\nconst defaultIcon = [require('../../images/Index.png'),\n               require('../../images/Business.png'),\n               require('../../images/Tourists.png'),\n               require('../../images/My.png')];\nconst activeInco = [require('../../images/ActiveIndex.png'),\n                require('../../images/ActiveBusiness.png'),\n                require('../../images/ActiveTourists.png'),\n                require('../../images/ActiveMy.png')];\nconst titleInfo = ['\u9996\u9875','\u4e1a\u52a1','\u5ba2\u6e90','\u6211\u7684'];\nconst styles = StyleSheet.create({\ntabView:{\n  position:\"absolute\",\n  backgroundColor:\"#fff\",\n  bottom:0,\n  left:0,\n  width:Dimensions.get('window').width,\n  flexDirection:\"row\",\n  paddingTop:10,\n  borderTopWidth:1,\n  borderColor:\"#ececec\"\n},\nmarginTop10:{\n  marginTop:5,\n  marginBottom:5,\n},\nredIcon:{\n  width:10,\n  height:10,\n  backgroundColor:'red',\n  position:'absolute',\n  right:25,\n  top:5,\n  borderRadius:5,\n},\n\n})\nconst sonViewStyle4 = StyleSheet.create({\n    sonView:{\n      alignItems:\"center\",\n      justifyContent:\"center\",\n      width:(Dimensions.get('window').width)/3\n    }\n})\nconst sonViewStyle5 = StyleSheet.create({\n    sonView:{\n      alignItems:\"center\",\n      justifyContent:\"center\",\n      width:(Dimensions.get('window').width)/4\n    }\n})\nexport default class CustomTabBar extends Component {\n  constructor(props){\n    super(props);\n    this.state={\n      active:this.props.focused,\n      barIndex:this.props.barIndex,\n      isProject:false,\n      checkIndex:this.props.checkIndex,\n      user:{},\n      sonViewStyle:sonViewStyle4,\n      redFlag:false,\n    };\n  }\ncomponentDidMount(){\n    this.loadCurrentUser()\n  }\ncomponentWillReceiveProps(nextprops){\n    if(nextprops && nextprops.isNeedRefresh == 1){\n      this.loadCurrentUser()\n    }\n  }\nloadCurrentUser(){\n    storage.load({\n      key:keys.currentUser\n    }).then(user=>{\n      if (user) {\n        if (user.projectManager) { //Different roles have different permissions\n          this.setState({user:user,isProject:true,sonViewStyle:sonViewStyle5});\n        }else {\n          this.setState({user:user,isProject:false,sonViewStyle:sonViewStyle4});\n        }\n      }else {\n        this.setState({user:null,isProject:false,sonViewStyle:sonViewStyle4});\n      }\n    }).catch(error=>{\n      this.setState({user:null,isProject:false,sonViewStyle:sonViewStyle4});\n    })\n  }\nrenderTab(item,index){\n    if (!this.state.sonViewStyle) {\n      return null;\n    }\n    if (!this.state.isProject&&index===1) {\n      return null;\n    }\n    if (this.state.checkIndex === index) {\n      return \n\n\n{titleInfo[index]}\n\n\n    }else {\n      return {this.checkPress(index)}}>\n            \n\n{titleInfo[index]}\n\n\n    }\n  }\n  checkPress(checkIndex){\n    switch (checkIndex) {\n      case 0:\n        Actions.reset('Index',{});\n        break;\n      case 1:\n        Actions.reset('MyProject',{});\n        break;\n      case 2:\n        Actions.reset('TouristIndex',{});\n        break;\n      case 3:\n        Actions.reset('PersonalIndex',{});\n        break;\n      default:\n        Actions.reset('Index',{});\n    }\n  }\n  render() {\n    return (\n      \n            {\n              activeInco.map((item,key)=>{\n                return this.renderTab(item,key)\n              })\n            }\n      \n    );\n  }\n}\n```\nand then import CustomTabBar in the business Componet\n```\nimport CustomTabBar from '../../commonComponents/tabBar/CustomTabBar';\n...\nrender() {\n    return (\n    \n )\n}\n```\nThere is a problem that can't be solved.When press tab icon ,business component will refresh everytime.it can not cache data.\nHope to be useful to you. Duplicate of #2349\nhope to be useful to you. Duplicate of #2349\nhope to be useful . ",
    "thebergamo": "@aksonov but it's supported by v4? Or will be? Can you share some information about how to implement this kind of thing in v4? Or directions to open a PR for it?. @hungdev the issue is related to the NavBar (In this case, NavBar is a shortcut for some configurations in Scene).\nWe can set images and styles for the back button, but if I want to add more behaviors I can't just using a fully custom \"backButton\" . @mcabs3 you can close this issue at this moment. I back using the v3. The v4 demands a lot of refactoring that unfortunately we don't have time to do. :(. ",
    "lelup": "you can duplicate  and  control tabbar when you click button loggin:\n       <Scene key='upPortal' lazy={true} tabs={true} hideNavBar={true}  >\n               <Scene key='index' title='index' hideNavBar={true} >\n                    //other scene\n               </Scene>\n               <Scene key='project'  title='project'  hideNavBar={true} >\n                   //other scene\n               </Scene>\n                 <Scene key='business'   title='business' hideNavBar={true} >\n                        //other scene\n                 </Scene>\n               <Scene key='custom' title='custom'  hideNavBar={true} >\n                       //other scene\n               </Scene>\n               <Scene key=\"myhome\" title=\"myhome\" hideNavBar={true} >\n                   //other scene\n                </Scene>\n       </Scene>\n\n        <Scene key='upPortal2' lazy={true} tabs={true} hideNavBar={true}  >\n               <Scene key='index' title='index' hideNavBar={true} >\n                    //other scene\n               </Scene>\n               <Scene key='project'  title='project'  hideNavBar={true} >\n                   //other scene\n               </Scene>\n               <Scene key='custom' title='custom'  hideNavBar={true} >\n                       //other scene\n               </Scene>\n               <Scene key=\"myhome\" title=\"myhome\" hideNavBar={true} >\n                   //other scene\n                </Scene>\n       </Scene>\n\n....\n_checkTabbar() {\n  if (condition) {\n      Action.upPortal();\n   }\n      Action.upPortal2();\n}. you can duplicate and control tabbar when you click button loggin:\n   <Scene key='upPortal' lazy={true} tabs={true} hideNavBar={true}  >\n           <Scene key='index' title='index' hideNavBar={true} >\n                //other scene\n           </Scene>\n           <Scene key='project'  title='project'  hideNavBar={true} >\n               //other scene\n           </Scene>\n             <Scene key='business'   title='business' hideNavBar={true} >\n                    //other scene\n             </Scene>\n           <Scene key='custom' title='custom'  hideNavBar={true} >\n                   //other scene\n           </Scene>\n           <Scene key=\"myhome\" title=\"myhome\" hideNavBar={true} >\n               //other scene\n            </Scene>\n   </Scene>\n\n    <Scene key='upPortal2' lazy={true} tabs={true} hideNavBar={true}  >\n           <Scene key='index' title='index' hideNavBar={true} >\n                //other scene\n           </Scene>\n           <Scene key='project'  title='project'  hideNavBar={true} >\n               //other scene\n           </Scene>\n           <Scene key='custom' title='custom'  hideNavBar={true} >\n                   //other scene\n           </Scene>\n           <Scene key=\"myhome\" title=\"myhome\" hideNavBar={true} >\n               //other scene\n            </Scene>\n   </Scene>\n\n....\n_checkTabbar() {\nif (condition) {\nAction.upPortal();\n}\nAction.upPortal2();\n}. ",
    "eugrdn": "Another variant is to use tabBarComponent prop, that will render links for needed scenes dynamically.. ",
    "gusti-andika": "I've also got this when doing 'toggle inspector' from dev menu\n\n. ",
    "rvasoya": "You likey forgot to add the key.. I also want to know how to push the screen to the right side when the drawer is open.\nhttps://github.com/react-navigation/react-navigation/issues/939\nI'm using \n\"react-native\": \"0.55.4\",\n\"react-native-router-flux\": \"^4.0.0-beta.31\"\nAs given changes, I got it working.. ",
    "sy-tian": "Can anyone help me?. ",
    "ynsgnr": "I tried but no luck on RN 0.48 and react-native-router-flux v4beta21 on Android 7.0.\nIt does run componentwillreciveprops function but it doesnt add that values to components maybe i should use something like super(props) in componentwillreciveprops ?. `componentDidMount(){ \n  BackHandler.addEventListener('hardwareBackPress', this.handleAndroidBack)\n  }\ncomponentWillUnmount(){\n    BackHandler.removeEventListener('hardwareBackPress', this.handleAndroidBack)\n  }\nhandleAndroidBack = () =>{\n    //Add desired function here (onBack in this case)\n    Actions.pop();\n    return true\n  }`. You  can try to override BackHandler from react native in root component\n`componentDidMount(){\nBackHandler.addEventListener('hardwareBackPress', BackHandler.exitApp)\n}\ncomponentWillUnmount(){\nBackHandler.removeEventListener('hardwareBackPress', BackHandler.exitApp)\n}'. ",
    "SurpassRabbit": "What is your solution? Can I provide the code?. I'm add the code in the Example \uff0c Did not do anything else @vhoen . @ynsgnr  I was in the Example Launch  to add your code, click the Android return button can not be used. If I want to hide hideTabBar, the first success, the second failed.\n_editPress = () => {\nthis.setState({\n            hideTabBar: !this.state.hideTabBar\n            }, () => {\n                Actions.refresh({\n                    hideTabBar: this.state.hideTabBar\n                });\n            }\n        );\n}\n  . ",
    "althurzard": "I tried sir but it didnt work either! @mcabs3 \nonPress = (userInfo) => {\n  var avatar = (\n    <Image\n      style = {{width:30,height:30,backgroundColor:'black'}}\n      source = {{uri:userInfo.profileUrl}}\n      resizeMode = 'contain'\n    />\n  )\n   Actions.chat({userInfo:userInfo,localUser:this.props.localUser, navigationBarTitleImage: avatar})\n }\n\nI took a look in navigationStore.js and saw that it only receives an object, doesnt it? \nif (navigationBarTitleImage) {\n      res.headerTitle = <Image source={navigationBarTitleImage} style={navigationBarTitleImageStyle} />;\n }. ",
    "piloulac": "Ok thank you!!. ",
    "vishnuc": "same problem. same thing happens to me. Actual solution is to use backAndroidHandler in <Router> and return false only in home scene to exit.. you can get current scene by Actions.currentScene. ",
    "tikkichan4": "same problem too. onExitApp seems removed in v4. Looking for the fix because It is important for me.... Workaround (change the push method in navigationStore.js\n```\n  push = (routeName, data) => {\n    const params = filterParam(data);\n    this.dispatch({ type: StackActions.PUSH, routeName, params });\n  };\n```\nHope this help.. ",
    "Seventhly": "Hi\nIf you use left={}\uff0cthe refresh can working in the scene component.\nlike its\nActions.refresh({\n      left : ()=> {\n        return (\n          <TouchableOpacity onPress={()=>{\n            alert('In the scene component.')\n          }}>\n            <Text style={{fontSize: 14,marginLeft: 10,}} >leftButton</Text>\n          </TouchableOpacity>\n        )\n      } ,\n    })\n. ",
    "Nigh7Sh4de": "+1. This may be coming from within react-native itself. You can add the following to get rid of the warning until version 0.56 lands.\nimport { YellowBox } from 'react-native'\nYellowBox.ignoreWarnings(['Warning: isMounted(...) is deprecated'])\nhttps://github.com/facebook/react-native/issues/18868#issuecomment-396631905. ",
    "mkhuda": "+1. The error occurs on beta 28, but beta 27 works fine.\nTypeError: Cannot read property 'map' of undefined. ",
    "Leadrive": "+1. +1\nhttps://github.com/SurpassRabbit/react-native-template\nIf you add\n    componentDidMount() {\n        console.log('Test1 componentDidMount')\n    }\ninto Test1.js\nyou can see twice componentDidMount. ",
    "PaulCotterell": "I don't know if you have already solved this, as it has been a few months, but I found that I needed to add the key property to EVERY tag and I can see that you have a Scene tag without a key.. ",
    "geniuscd": "Thank you for your reply.  I already read #2115 and didn't understand the fact that i need to call ACTION.... in the reducer? for now it's working but is it the correct way to do it?\ncase 'user_login_success': Actions.profile(); return state;. @aksonov I tried to implement from this demo link but i was getting an error in the getStateForAction. I guess because it was returning defaultReducer(state, action); instead of return { ...state, PARAMS } \nI will try to integrate what you said above and see what will happen.\nin the reducer case ActionConst.FOCUS: is only called if and only if Action.PARAMS is called from a view.\n. @ssomnoremac yes :P i used react-navigation. ",
    "joel611": "I have experience same problem on my project that the screen show 2 nav bars. I guess one of the nav bar is from parent scene.\n1. Add hideNavBar to root Scene.\n2. Add hideNavBar={false} to the scene require nav bar.. Check out where the api said.\nStack:\nA component to group Scenes together for its own stack based navigation. Using this will create a separate havigator for this stack, so expect two navbars to appear unless you add hideNavBar.. Every scene needs a key. Try add key to scene within tabs(myitem, feed, saveditem). ",
    "rhk10": "It seems to happen only when Actions.refresh({anything}) called on SceneC.\nPerhaps back event is overwritten for some reason.. ",
    "fmoessle": "+1. does no one has this problem too?\nIs it posible to disable the transition-animation via a transition-config?. ",
    "gabrielbull": "@ValentinBlokhin that's the normal behavior, to get animations you should use push or pop. \nReset has a bug where it has an animation when used in a stack where, for example, you push to the stack and then reset it will play the pop animation.. ",
    "willbattel": "This is still a problem in beta 28. The docs say there will be no transition but, like gabrielbull said there is one in some cases.. I'm having the same issue with:\nreact-native-router-flux: ^4.0.0-beta.23\nreact-native 0.50.3\nEdit: Nevermind, for some reason an entirely different package was messing with this.. @Rarer Yes, but the problem wasn't related to this package. Something weird was going on with my react-native-fbsdk authentication setup after I updated React Native.. Okay, I'll take a look. Thanks!. ",
    "amansahil": "Is there any update on this issue ?. ",
    "maurobender": "I'm having the same problem. Was anyone able to find a solution or workaround for this?. ",
    "GeekRishabh": "@aksonov  i am not able to figureOut any work around .\nAs the rootView contain react-native-maps that is common in the other screen (home, confirm & booked) . any lead will be appreciated\nv3.38 is laggy with RN V48.x thats why i need to upgrade the RNRF version .. @Blapi  I guess because RNRF uses React Navigation  as its dependency \nhttps://github.com/react-navigation/react-navigation/issues/3416\nhttps://github.com/infinitered/ignite/issues/1225\nFew days back everything was working fine the same code but when i tried to do npm i and started the project this error comes.. ",
    "nicovak": "Got same issue. But the first component is mounted 3 times.. Switched to ^3.39.1 and everything works fine.. @AlmogRnD Yes I know but I also had an issue like clicking in TextInput was remounting the component... I didn't have these issues with 3.39. I fixed my TextInput  by using react-navigation Drawer instead of react-native-drawer.\nStill getting the first component mounted twice. Other components are mounted once.. Sure, I didnt change that much:\n```js\nimport React, { Component } from \"react\";\nimport {\n  Actions,\n  Scene,\n  Router,\n  Stack,\n  Drawer\n} from \"react-native-router-flux\";\nimport { View, TouchableHighlight, StatusBar, StyleSheet } from \"react-native\";\nimport Icon from \"react-native-vector-icons/Ionicons\";\nimport SideMenu from \"./components/common/SideMenu\";\nimport Root from \"./components/Root\";\nimport Login from \"./components/Login\";\nimport Notifications from \"./components/Notifications\";\nimport Contact from \"./components/Contact\";\nimport Mentions from \"./components/Mentions\";\nimport { navbarHeight, statusBarheight } from \"./components/common/Config\";\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\nthis.state = {\n  openDrawer: false\n};\n\n}\nhandleDrawer() {\n    this.state.openDrawer ? Actions.drawerClose() : Actions.drawerOpen();\n  }\ncloseDrawer() {\n    Actions.drawerClose();\n  }\nrender() {\n    StatusBar.setBarStyle(\"light-content\", true);\nreturn (\n  <Router\n    hideNavBar={false}\n    titleStyle={styles.title}\n    navigationBarStyle={styles.navBar}\n    renderLeftButton={this._renderLeftButton()}\n    renderRightButton={this._renderRightButton()}\n  >\n    <Drawer hideNavBar key=\"drawer\" contentComponent={SideMenu}>\n      <Stack key=\"root\">\n        <Scene\n          key=\"home\"\n          hideNavBar\n          component={Root}\n          renderLeftButton={null}\n          renderRightButton={null}\n        />\n        <Scene\n          key=\"login\"\n          hideNavBar\n          component={Login}\n          renderLeftButton={null}\n          renderRightButton={null}\n        />\n        <Scene\n          key=\"notifications\"\n          component={Notifications}\n          title=\"Notifications\"\n        />\n        <Scene key=\"contact\" component={Contact} title=\"Contact\" />\n        <Scene\n          key=\"mentions\"\n          component={Mentions}\n          title=\"Mentions l\u00e9gales\"\n        />\n      </Stack>\n    </Drawer>\n  </Router>\n);\n\n}\n_renderLeftButton() {\n    return (\n       this.handleDrawer()}\n      >\n        \n          {this.renderOpenOrCloseIcon()}\n        \n\n    );\n  }\n_renderRightButton() {\n    return (\n       {\n          Actions.pop({ refresh: true });\n        }}\n      >\n        \n\n\n\n    );\n  }\nrenderOpenOrCloseIcon() {\n    if (this.state.openDrawer) {\n      return ;\n    } else {\n      return ;\n    }\n  }\n}\nconst styles = StyleSheet.create({\n  navBar: {\n    justifyContent: \"flex-start\",\n    height: navbarHeight + statusBarheight\n  },\n  title: {\n    alignSelf: \"center\"\n  },\n  buttons: {\n    padding: 13\n  },\n  buttonNav: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    alignSelf: \"center\"\n  }\n});\n```. ",
    "jankarres": "I have a similar issue. I have outside of the Router component other components (alerts). If their states are updated, the Router component will be re-rendered, but it Router re-mount the current scene, which followers to the lost of the current state. Seems to be very similar to the onPress event of our TextInput, @nicovak.\nAccording to my experience, which happens when React components have no keys and React can not find the component on re-rendering. It creates a new component instance for the current rendering. I investigated the code to find the rendering of the component in the router scenes.\nsrc/navigationStore.js:314 (processScene()) is the method where all scenes \"get hooked\". In src/navigationStore.js:368 starts the iteration over all scenes and in src/navigationStore.js:391 the scenes get wrapped by createWrapper() (see src/navigationStore.js:209). In my point of view this is necessary to pass the props to the scene component.\nIn createWrapper() are two options for stateless components and not stateless component. In both cased (see definitions below) I run into the stateless component path. I tried to add a extra key there for React at the definition of this instance, but without any change. What you should notice there is, that in both cases the returned component instance is wrapped by the props wrapper function, which is defined in src/navigationStore.js:303 as:\nwrapBy = props => props\nThats the point where I stopped understanding the behavior if the code. Actually this helps to solve the issue.\nScene definition with stateless component\n<Scene\n    key=\"LandingEmail\"\n    component={(props) => (\n        <SceneLandingEmail\n        key=\"SceneLandingEmail\"\n        setAlertMessages={this.props.setAlertMessages}\n        userSignedIn={this.props.userSignedIn}\n        />\n    )}\n    hideNavBar={true}\n/>\nScene definition without stateless component\n<Scene\n    key=\"LandingEmail\"\n    component={SceneLandingEmail}\n    hideNavBar={true}\n/>. @AlmogRnD Thanks for your reply. No, I think you have not git the point. I created a very simplified example project.\nnpm install && npm start\nIn the app, you can type a text into the TextInput, which is saved to the state of the SceneExample. If you click on the button below, the arrow function will call the setter of App and set new alert messages, which are rendered in Alert.\nShould: React re-renders the Alert component with new props\nActual: React re-renders the Alert component with new props and remount the SceneExample component\nThis behavior sound similar to yours issue, but more similar to @nicovak's app behaviour.\nProject: react-native-router-flux_issue_2382_example_2017_09_14.zip\n. @AlmogRnD You are right that \"each time update the state react does render or run will update in the component lifecycle\", but it should not unmount and remount the component, if a key is specified. If I use the same code without the router, this behaviour will not appear.\nActually it is a different issue. For this reason I opened a own issue.. Short update: I built a workaround for this issue by storing the problematic states (in the example not in the App component), but in e.g. the Alert component (set via refs). This works, but is ugly code.\nDue to other issues I decided to switch to react-navigation, which do not have this issue. Without this issue you will get a tremendous better performance. Due to this, I would highly recommend using another router until this issue is fixed.. ",
    "ferminmoli": "I've found a pretty simple workaround. The router will be triggered if the next scene is not the current.\nfor example:\nitemPress() {\n        if (Actions.currentScene == \"ItemScene\") return;\n    Actions.ItemScene();\n}.\n",
    "golles": "I had the same issue when I did it like this:\n<Scene\n...\ndrawerIcon={<DrawerButton/>}>\nrenderRightButton={<RightButton/>}\n...\n/>\nI fixed it by doing it like this:\n<Scene\n...\ndrawerIcon={() => <DrawerButton/>}>\nrenderRightButton={() => <RightButton/>}\n...\n/>\n(I'm new to RN so this might be trivial to do it like that, maybe it helps anyone fixing the problems as well). Same here with RN 55.2 RNRF 4.0.0-beta.28\nAndroid is indeed fine. ",
    "jalilahmed": "I am using BackHandler.addEventListener to manually overwrite Back Button Press. but If I use, Actions.pop() in BackHandler.addEventListener callback function. and use Actions.push('Screen'). Every Screen is MOUNTING - UNMOUNTING and then MOUNTING again. \nBackHandler.addEventListener('hardwareBackPress', () => {\n               Actions.pop();\n               Actions.push(store.getState().goBackScreen);\n                return true;\n            }. ",
    "gigby": "@aksonov \nI had the same issue (all components were mounting twice and even more times). I did\n1) rm -rf $TMPDIR/react-* && rm -rf node_modules/ && npm cache clean && npm install && npm start -- --reset-cache\n2) cd android && ./gradlew clean\nAfter this I could only reproduced double mounting of one scene with \"inital\" prop.\nI'am shore this bug is related to building of react-native itself. ",
    "aliszafar1": "this library has solved my issue\nhttps://github.com/wumke/react-native-exit-app. ",
    "jmatsushita": "This is the remote debugging stack.\ndebugger-ui:172 Console was cleared\nExceptionsManager.js:71 Warning: PropTypes has been moved to a separate package. Accessing React.PropTypes is no longer supported and will be removed completely in React 16. Use the prop-types package on npm instead. (https://fb.me/migrating-from-react-proptypes)\nreactConsoleErrorHandler @ ExceptionsManager.js:71\nprintWarning @ warning.js:36\nwarning @ warning.js:60\nget @ react.development.js:2133\n(anonymous) @ LayoutPropTypes.js:14\nloadModuleImplementation @ require.js:174\nguardedLoadModule @ require.js:126\n_require @ require.js:110\n(anonymous) @ ImageStylePropTypes.js:15\nloadModuleImplementation @ require.js:174\nguardedLoadModule @ require.js:126\n_require @ require.js:110\n(anonymous) @ ReactNativeStyleAttributes.js:15\nloadModuleImplementation @ require.js:174\nguardedLoadModule @ require.js:126\n_require @ require.js:110\n(anonymous) @ StyleSheet.js:16\nloadModuleImplementation @ require.js:174\nguardedLoadModule @ require.js:126\n_require @ require.js:110\nget StyleSheet @ react-native-implementation.js:94\n(anonymous) @ NavBar.js:220\nloadModuleImplementation @ require.js:174\nguardedLoadModule @ require.js:126\n_require @ require.js:110\n(anonymous) @ navigationStore.js:7\nloadModuleImplementation @ require.js:174\nguardedLoadModule @ require.js:126\n_require @ require.js:110\n(anonymous) @ Reducer.js:74\nloadModuleImplementation @ require.js:174\nguardedLoadModule @ require.js:126\n_require @ require.js:110\n(anonymous) @ index.js:2\nloadModuleImplementation @ require.js:174\nguardedLoadModule @ require.js:126\n_require @ require.js:110\n(anonymous) @ Launch.js:3\nloadModuleImplementation @ require.js:174\nguardedLoadModule @ require.js:126\n_require @ require.js:110\n(anonymous) @ Example.js:3\nloadModuleImplementation @ require.js:174\nguardedLoadModule @ require.js:126\n_require @ require.js:110\n(anonymous) @ index.android.js:3\nloadModuleImplementation @ require.js:174\nguardedLoadModule @ require.js:119\n_require @ require.js:110\n(anonymous) @ BaseLightbox.js:66\nexecuteApplicationScript @ debuggerWorker.js:40\n(anonymous) @ debuggerWorker.js:65\nExceptionsManager.js:71 Warning: React.createClass is no longer supported. Use a plain JavaScript class instead. If you're not yet ready to migrate, create-react-class is available on npm as a drop-in replacement. (https://fb.me/migrating-from-react-create-class)\nreactConsoleErrorHandler @ ExceptionsManager.js:71\nprintWarning @ warning.js:36\nwarning @ warning.js:60\nget @ react.development.js:2125\n(anonymous) @ View.js:84\nloadModuleImplementation @ require.js:174\nguardedLoadModule @ require.js:126\n_require @ require.js:110\n(anonymous) @ Image.android.js:24\nloadModuleImplementation @ require.js:174\nguardedLoadModule @ require.js:126\n_require @ require.js:110\n(anonymous) @ Animated.js:16\nloadModuleImplementation @ require.js:174\nguardedLoadModule @ require.js:126\n_require @ require.js:110\n(anonymous) @ TouchableOpacity.js:16\nloadModuleImplementation @ require.js:174\nguardedLoadModule @ require.js:126\n_require @ require.js:110\nget TouchableOpacity @ react-native-implementation.js:67\n(anonymous) @ Button.js:17\nloadModuleImplementation @ require.js:174\nguardedLoadModule @ require.js:126\n_require @ require.js:110\n(anonymous) @ Register.js:3\nloadModuleImplementation @ require.js:174\nguardedLoadModule @ require.js:126\n_require @ require.js:110\n(anonymous) @ Example.js:4\nloadModuleImplementation @ require.js:174\nguardedLoadModule @ require.js:126\n_require @ require.js:110\n(anonymous) @ index.android.js:3\nloadModuleImplementation @ require.js:174\nguardedLoadModule @ require.js:119\n_require @ require.js:110\n(anonymous) @ BaseLightbox.js:66\nexecuteApplicationScript @ debuggerWorker.js:40\n(anonymous) @ debuggerWorker.js:65\ninfoLog.js:17 Running application \"Example\" with appParams: {\"initialProps\":{},\"rootTag\":1}. __DEV__ === true, development-level warning are ON, performance optimizations are OFF\nExceptionsManager.js:63 addComponentAsRefTo(...): Only a ReactOwner can have refs. You might be adding a ref to a component that was not created inside a component's `render` method, or you have multiple copies of React loaded (details: https://fb.me/react-refs-must-have-owner).\nhandleException @ ExceptionsManager.js:63\nhandleError @ InitializeCore.js:125\nreportFatalError @ error-guard.js:44\n__guard @ MessageQueue.js:215\ncallFunctionReturnFlushedQueue @ MessageQueue.js:100\n(anonymous) @ debuggerWorker.js:71\nYellowBox.js:76 Remote debugger is in a background tab which may cause apps to perform slowly. Fix this by foregrounding the tab (or opening it in a separate window).\nconsole.warn @ YellowBox.js:76\n(anonymous) @ debuggerWorker.js:25\n(anonymous) @ debuggerWorker.js:53. The image version is probably easier to parse:\n\n. ",
    "zyfccc": "I have this issue too. Just clone the repo, install dependencies for Example, try to run it on ios simulator and it does not work. Any idea?. ",
    "icaromagalhaes": "Hey, i was facing this issue and fixed it just by installing the Example project dependencies with yarn instead of npm install command. Hope it helps.. ",
    "patrickdronk": "And you will get a double navbar\n\n. ",
    "quanpotato": "Yes, if I using <Scene key=\"root\" hideNavBar>, the top navBar disappear. However, the back button is still here. ",
    "ArtemAstakhov": "same issue, I'm using Actions.employeeList() to navigate. ",
    "centaurreader": "I am having the exact same issue. Keys don't seem to make a difference with regard to re-rendering vs. completely remounting the component. ",
    "aquile": "Have faced with that issue too.\nThe reason was\nActions.jump(sceneKeys[someScene]);\nThe fix is replacing it on \nActions.pop();\nreact-native-router-flux v4.0.0-beta.28\nreact-native v0.54.2. ",
    "rfogar2": "@aksonov Forcing Router to be the top-level component was a strange design choice. It really breaks the architecture of React Native that Router unmounts and remounts children components whenever a parent component of Router updates. Can you explain why this was a necessity for the library to work? Perhaps we can come up with a fix so that Router does not need to be top-level.\nBit of info for my use case: I want to wrap my router in a component like the following\nclass UserInteractionBlocker extends React.Component {\n    render() {\n        return (\n            <View pointerEvents={this.props.active ? \"none\" : \"auto\"}>\n                {this.props.children}\n            </View>\n        )\n    }\n}\nWhenever an async call is made in the app, redux updates this.props.active so that the entire screen becomes disabled to the user. When the async call finishes, redux updates active again so the screen is once again enabled. Another option I considered would be to make this a BaseComponent and have all my components extend it; however, this doesn't solve the navBar issue (navBar buttons would still be interactable). For this reason, I need UserInteractionBlocker to be the parent of Router in order to block all user interaction.. ",
    "tanthanh289": "@tusharv-bidchat \n```\nconst onBackAndroid = () => {\n    return false; // Return true to stay, or return false to exit the app.\n};\n\n\n```\nrefer https://github.com/aksonov/react-native-router-flux/blob/master/src/Router.js#L23\n. ",
    "sitompul": "@tanthanh289 @tusharv-bidchat do we need to write on every scene about the hardware back procedure? because on my case, pressing hardware back on reset scene won't do nothing, while pressing hardware back on normal scene will exit the app\nIs there any better solution? or a stable release per se?. @albinhubsch Thanks i already implemented that. It's working fine now. I have the same issue, here is my router\n```\nconst ConnectRouter = connect()(Router);\nconst Routes = () => (\n  \n\n\n\n\n\n\n\n\n\n\n\n);\n```\nWhen i'm at my reset scenes, nothing happened when i touch the physical android button, but when im at my normal scenes, the app will exit if i press the physical back button.\nim using version 4.0.0-beta.24.. @rajeshbatth-gommt @nishiltamboli look for @Blapi 's comment at #2737. ",
    "StanislavSergeev": "How can I make dynamically set status bar color using Router-flux?. ",
    "mindhivefi": "The problem is that package is missing image files. I managed to make it work just be copyining the images -folder with its contents from here to its place in node_modules/react-native-router-flux/ -folder.\n@aksonov, I guess this will be fixed, if you can make a package with /images/ -folder included. \n. Didn't help. But I still can use it when I copy the folder. So this is something that I can cope with.. ",
    "mtford90": "This is quite annoying - i've had to create a post_install script that copies images into the node_modules folder as everytime I install a new package, this breaks.. ",
    "Juan1ll0": "Could be something like this #2567 ?. Only occurs with \"yarn install\" not with \"npm install\". Hi, I found the solution to my problem. There is a \".yarnclean\" file in the root folder of the project that have an entry \"images\". The package installs the images but yarn delete then in post-procesing. Comment or delete that line solved the problem\nSorry for your time and thank you for your response.\nBest regards.. ",
    "guarani": "@onrige your suggestion did work for me, thank you.\nI do think that the documentation is incorrect - it states:\n\nActions.pop() will pop the current screen. It accepts following optional params:\n{popNum: [number]} allows to pop multiple screens at once\n\nBut in my tests, and as reported by @mmaschenko, passing popNum does not work:\nActions.pop({popNum: 2})  // Only pops back one screen\n. Your 100% right, I was looking at (v3) docs and using (v4) \ud83d\ude43, sorry.. ",
    "huowenxuan": "Why not support popNum\uff1fv4. ",
    "SaffaShujah": "how did you implement popNum functionality in v4?. ",
    "pureandfresh": "@SaffaShujah \npop: function (props) {\n        const {popNum} = props || {}\n        if (popNum > 1) {\n            const routes = Actions._state && Actions._state.routes\n            if (routes && routes.length > popNum) {\n                const route = routes[routes.length - popNum - 1]\n                //v4 not support props refresh, not sure futrue\n                Actions.popTo(route.routeName, props)\n                if (Object.keys(props).length > 1) {\n                    Actions.refresh(props)\n                }\n            }\n        } else {\n            Actions.pop()\n            if (props) {\n                Actions.refresh(props)\n            }\n        }\n    },. ",
    "wsxyeah": "I get a workaround here.\nadd following code to your reducer\nif (action.type.includes('/BACK') && state === newState) {\n  BackHandler.exitApp()\n}. @mcabs3 Yes.\nAdd a key for the container in Example.js (just like the LightBox).\nThen choose the RN menu Toggle Inspector on the device, you will see the crash.\njavascript\n<Router>\n  <Modal>\n    <LightBox key=\"lightbox_top\"> // here\n      <Stack key=\"root\"/>\n      // other scenes \u2026\n    </LightBox>\n  </Modal>\n</Router>\n. @mcabs3 Oh, I found the root cause now.\nSine the OverlayNavigator passed wrong state to its child overlay components, the children will never get this.props.navigation.state.routeName.\n. @mcabs3 fixed. ",
    "itwangyu": "@wsxyeah  newState\u6211\u4e0d\u77e5\u9053\u662f\u4ece\u54ea\u6765\u7684 ,\u4e0d\u8fc7\u6211\u901a\u8fc7\u5224\u65adroutes\u91cc\u9762\u7684routeName\u6765\u8fd4\u56de\u4e86. I have sovled the problem by the following code:\n if (action.type === 'Navigation/BACK' && state.routes[state.routes.length - 1].routeName === \"MainPage\") {\n        if (this.lastBackPressed && this.lastBackPressed + 2000 >= Date.now()) {\n            //\u6700\u8fd12\u79d2\u5185\u6309\u8fc7back\u952e\uff0c\u53ef\u4ee5\u9000\u51fa\u5e94\u7528\u3002\n            NativeModules.MyNativeMoudle.exitApp();\n        }\n        this.lastBackPressed = Date.now();\n        ToastAndroid.show('\u518d\u6309\u4e00\u6b21\u9000\u51fa\u5e94\u7528', ToastAndroid.SHORT);\n    }.\n",
    "mcatmos": "I need the same but for tabBar. Running the same issue.. Running with the same issue.. ",
    "nielsmadan": "Fixed it. I guess the stack acts as the tabscene in this setup? What was it complaining about, though, when everything looked correct?. ",
    "lalitindoria": "I am facing the same issue where a reset throws an error saying that no route was defined and a replace doesn't actually replace the current scene.. ",
    "c3098051": "Having same issue. . ",
    "Rootedy": "+1. +1. ",
    "mm-goswami": "facing same issue. ",
    "UberMC": "With the React-native-redux-flux stack use\nActions.pop()\nsee documentation on\nhttps://github.com/aksonov/react-native-router-flux\n// go back (i.e. pop the current screen off the nav stack)\nActions.pop(). ",
    "niktonic21": "Also I would expect allowFontScaling on tabbar Label.. I have same issue and its between the scenes.. ",
    "James2516": "Yes. Alternatively, being able to restore just the last scene might suffice.\nEg. the app has initial scene at Scene 1, which goes to Scene 2 with a button press. \nIf the user goes to Scene 2 then quit the app, the app should display Scene 2 directly (skipping Scene 1) when the user opens the app again.. ",
    "asciifaceman": "I wonder if this might be possible using deep links combined with an AsyncStorage call to change your location on reload. It's not as good as the native approach, but it miiiight work? . @James2516 imho it's not an entirely bad look to load the first view and then push the next one. You can make it look more official with an overlay. Just my 2 cents that it won't detract the user experience. . I run into the same problem currently swiping back at the first tab in a , it pops back to the initial scene before it ?. Actually, would this be a case of using \nBackHandler.addEventListener('hardwareBackPress', function() {\n});\nto ensure it returns to the central tab? Would this not interfere when you navigate away from the tab view to single purpose push/pop scenes? . Thanks for the info @todorone I'll play around with it. Do you know of any projects with this that I could reference for a better idea? . @todorone I've now tested it and found that backAndroidHandler seems to just be ignored.. Yeah I can provide some more details later, but when I was playing around with it I found that for some reason my state index was always 0 so  I Couldn't seem to write any logic around when back should pop or when it should exit. I wanted to write a somewhat elegant back handler for android. . Did you add the back prop? I'll grok it a bit. I know this isn't the appropriate place, but could you also give me a a very very quick/brief idea of what the Reducer is for? . Yeah I'm looking at the example just doesn't explain context of things. I only asked that as an aside because I saw it around but couldn't grok it.\nThe back stuff I'll test tonight. I solved this by just writing some backHandler logic. It's a little . Can you explain why you want a whole new router in that way? It is kind of counter intuitive, I would think you would want to use Stacks instead in the original file and build them all out, then you transition between. \nI don't mean for you to use this code exactly, but demonstrating that you should utilize Stacks:\n```\n {\n    console.log('back...');\n    console.log(Actions.state);\n    Actions.pop();\n    return true;\n  }}\n\n\n\n\n\n\n\n\n\n \n\n\n\n```\nThis may help you organize so it is less confusing. Note: Initial is per stack iirc\n\nI don't think there is a use case for multiple routers personally, as it is the highest order of container for all routing. . Yeah I've had a ton of issues with everything after 22, I even had to back up my react-native lib to keep everything working right. Hmm, out of curiosity, if it isn't too inconvenient, and you feel up to it, could you see if you can reproduce on ^4.0.0-beta.22? It's purely for my own curiosity, since thats the last version I've been able to use without weirdness. . What are you going for? They are separate because they do slightly different things. The example demonstrates using both, albeit not rendering at the same time IIRC. . Could you do an iter where you are defining your routing stack JSX and render them dynamically at app-load? \nSomething like\n```\nRenderTabsDynamic() {\n    return somedata.map(function(tab, i) {\n        \n    });\n}\nrender() {\n  return(\n    \n      {this.RenderTabsDynamic()}\n    \n  )\n}\n```\nI know this is light on details, just to demonstrate the concept.. Hmm, I had never tried it in the router stack but obviously it is a pattern for rendering other objects in Views so assumed it might work. \nI mean a kind of junk way you could handle it would be to have two sets of identically functioning tabs, one with 3 and one with 2, and you only push one or the other depending on the state. But thats a lot of copied code and is not elegant in any way. It might get you to point B for now.. not quite enough information. Are you working in an emulator or a physical device? . Can you reformat your post using tripple ticks ``` which should make it a bit more readable.\nI'm also not quiiiiite following what you are trying to do. I think I have an idea, but could you elaborate before I make suggestions? . I'm trying to understand the flow of what is going on here.\nYou are rendering Basic inside the drawer are you not? And it looks like you were trying to pass in isOpen with YourProps? . I would be curious to think around and see if Actions can return promises so you could do something like\nActions.reset('componentKey')\n.then((promise) => {\n    if (promise) {\n        // Do a thing\n    }\n})\nBut I haven't thought this out entirely. . @aksonov If I can get something together would you accept a PR for other directions? No promises, but I have it working in a project and might be able to abstract it to RNRF. Doing some cursory searching around, it looks like ripple is a common thing to break - especially with react navigation.\nex. https://github.com/react-navigation/react-navigation/issues/2329\nI wonder if it is because the scene is changing faster than the animation can fire? . Yeah it looks like it gives just enough time for the ripple to occur before the transition is fired.. \nThe way I've begun handling this personally is to use a Launch.js that loads first. This view simply checks to see if the app is already logged in, if it isn't, then it goes to LoginView. If it IS then it continues to the authenticated view.\nAfter a login, I pop the user back to Launch.js which rechecks and then shunts to the authenticated view.\nThis is helpful because even if the user somehow manages to \"go back to the beginning\" it just rechecks auth and sends them back to their view. LoginView is ONLY accessible if you are not authenticated.\n\nhope this helps. onEnter:\nIn stack definition:\n<Scene key=\"SomeView\"\n                           component={SomeView}\n                           onEnter={this.onEnterSomeView}\n                    />\nIn SomeView:\n```\nexport default class SomeView extends Component {\nstatic onEnterSomeView = () => {\n    Actions.refresh({\n      enterTime: new Date()\n    });\n  }\ncomponentWillReceiveProps (nextProps) {\n    console.log(this.props.enterTime);\n    console.log(nextProps.enterTime);   // for you to see what is happening\n    if (this.props.enterTime !== nextProps.enterTime) {\n      this.setState({something: nextProps.enterTime}); // a function that changes the state to re-render\n    }\n  }\nrender() {\n    return (\n        \n{this.state.something}\n\n    )\n}\n```\nWhat is going on here is that when you navigate to a View, onEnter is fired. This even works if you are going back and forth between tabs. The refresh line refreshes the view setting enterTime to that time. If there is a delta between enterTime and the and the next enterTime, it will fire whatever is in that function or whatever you put there. \nThis can be expensive if you are doing heavy lifting.\nYou also have to change the state (setState) of something that is rendered to trigger it. (someone could correct me here, but I'm 90% sure you have to change state of something rendered) . What are you doing specifically? . Refresh isn't quite what you think it is. It wont rerender the view unless you are passing in fresh props to change the state of what is rendered. Or if you use onEnter and a time delta to poll the backend to rerender.\n. This is an android-specific issue and there is usually something wrong with your syntax (technically ios is extremely lenient and lets you get away with shit that doesn't work). This is because Android's Yoga is much more strict than IOS when it comes to formatting/syntax - sometimes you will get this error just for having extra whitespace and it can be horrendous to track down.\nIn the original code you pasted above @syntaxiom , you may have to wrap the text inside your TouchableOpacity in <Text> because Yoga gets very upset about raw text inside a render. Also stray commas, comments inside render, etc all can piss it off as well. \nThats the only thing I can spot that should offer up a yoga node error. \n. Also usually when you see an error like that (often seen with say Actions.reset) its because it doesn't see the route on the layer it looks. Actions.reset, for example, can only reset to the top level views of the router/top scene etc. \nIt's hard to say without seeing your code . This is a little over my head, so sorry if this isn't helpful, but maybe? https://facebook.github.io/react-native/docs/communication-ios.html. Can you give your code examples? \nActions.pop() will only work if you were using Actions.push() to add new views, if you are using replace for example it clears the routing stack.\nAlso IOS or Android as their \"back\" functionality is different.. There is unfortunately some crazy things going on upstream, https://github.com/react-navigation/react-navigation/issues/3416\nTo get you going, and just for my own curiosity, can you try to uninstall the react-native-router-flux package in the project and then install the version pinned 4.0.0-beta.28 or 4.0.0-beta.22\n. createReducer is largely for REDUX integration, and the Example is meant to be more of a documentation on how to create a reducer. The prop isn't super well documented outside of that.. Ah crap I thought I had a code example for this, digging around still... \nCan you try setting up a reducer:\nconst reducerCreate = params => {\n  const defaultReducer = new Reducer(params);\n  return (state, action) => {\n    console.log('ACTION:', action);\n    return defaultReducer(state, action);\n  };\n};\nAttach it like so:\n<Router\n        ...\n        createReducer={reducerCreate}\n      >\nNow you can console.log(state) in the function and move around its tree, I think what you are looking for is in there IIRC\nLooking through the source it doesn't look like currentRouter exists anymore (there IS a currentScene), I'd be curious what you need it for to maybe guide you to an alternate solution? . ",
    "techyrajeev": "is it even possible? . ",
    "ASheikhi82": "Same issue here.. ",
    "kholiavko-roman": "@ShMcK, and how to set up drawerIcon now ?\nI tried to do as in example that you show, using navigationOptions, on page, but it does not work too.. Actions.currentScene\n. Hey guys, did you found a solution for that ?. I use this module for creating tabs. https://github.com/react-native-community/react-native-tab-view. I try to change title using Actions.push, but prams didn't apply. \nActions.push('settings', {\n    title: Strings.interface.settings.title,\n});. @d7laungani, I did like this:\nActions.settings({ title: 'settings title' });\nAnd when defined all routes of the app, you need set some default value for this params:\n<Scene title='my page' />. ",
    "gabrielbuzziv": "This is not working for me aswell, someone have a light?. ",
    "hannanstd": "drawerIcon={<DrawerIcon/>} works for me. ",
    "RobTS": "Same for me.... ",
    "mikesol": "Same here.... ",
    "jash90": "javascript\n<Router\n                backAndroidHandler={() => {\n                if (Actions.currentScene == \"name your Scene\") {\n                    if (backLoginScene == false) {\n                        ToastAndroid.show(\"Click back again to exit.\", ToastAndroid.SHORT);\n                        backLoginScene = !backLoginScene;\n                        return true;\n                    } else {\n                        backLoginScene = false;\n                        BackHandler.exitApp();\n                    }\n                    return false;\n                }}}>. You must add backAndroidHandler in Router\n. ",
    "Maxitk": "my version is 4.0.0-beta.23\ni have add Router,but it doesn't run backAndroidHandler when i press back. @aksonov ok\uff0ci will try it tomorrow,thanks.... @aksonov i have tried it a moment ago,but the same as before\nI have deleted other 'backHandler' in my code and I try to do two things :\n1\u3001I add <Router backAndroidHandler...\n2\u3001I add backHandler.addEventListener in initial page\nboth of them didn't work. I have the same problem,how can I solve?\nI have checked all my codes,there are no backHandler at all.. has it solved in current version?. ",
    "liukaixin01": "please try it. {}}>. ",
    "vikrantnegi": "I'm having the same problem. \nHere is the StackOverflow question. \nhttps://stackoverflow.com/questions/47898965/exist-app-when-clicked-back-on-home-screen. I'm having an issue with exiting the app when navigation from other screens work on initial load though.\nhttps://stackoverflow.com/questions/47898965/exist-app-when-clicked-back-on-home-screen. @Blapi I'm not using redux on this app. Any non-redux equivalent debugging code?. @Blapi Thanks.\n weirdly enough but everything now seems to be working. I reinstalled the node modules and then everything started working.\nThanks a lot. . ",
    "remch1990": "https://github.com/skv-headless/react-native-scrollable-tab-view. how i cant put a button in the tabbar to open and close the drawer? like the image.  RNRF V4. with the Example code backTitle don't works on Android, this with the last update RNRF, with version 22 it works.\n<Scene\n            key=\"loginModal2\"\n            component={Login2}\n            title=\"Login2\"\n            backTitle=\"Back\"\n            panHandlers={null}\n            duration={1}\n          />. ??\n. ",
    "andreaskarantzas": "Where exactly do you use the data? If it is outside the render can you try if props.data works?\n. I faced the same issue. You can try to use animationEnabled={false}. Worked for me in addition with \"lazy\" and swipeEnabled={false}. As @aksonov said you can also check the documentation of https://reactnavigation.org/docs/tab-navigator.html\n. ",
    "jeffzing": "sent someone to save me.. man,your code works for me,You did help me out. @duyluonglc the lazy prop did not help,whether there has lazy ,the component only mounted once\n\n\n\n\n. @duyluonglc static onEnter = () => { \n  } I wrote onEnter method like you, but onEnter not executed.. @duyluonglc now executed, thank you. ",
    "paullinator": "Yes, please we'd super appreciate a response on how to get this to work. Doesn't seem like anyone has gotten this working yet.. ",
    "richTheCreator": "Anyone figure this out?\n. Ok, thanks for update. How would you recommend migrating from Switch?\nOld syntax that handled the main auth routing:\ncomponent={connect(state => ({ profile: state.auth }))(Switch)}\nselector={props => props.profile.user_id ? 'SignedIn' : 'onBoard'}\nThanks!\n. ",
    "christianbach": "any updates on this?. ",
    "teacher987": "I just tried this, it doesn't help. Although, I think this should be the expected behavior in that case as RESET resets the stack, which I don't want to do, I want to go back.\nThanks anyway.. ",
    "am-een": "I fixed it by doing this:\nBackHandler.addEventListener('hardwareBackPress', this.handleHardwareBack);\n...\nhandleHardwareBack = () => {\n    Actions.pop();\n    return true;\n  }. ",
    "g33ktony": "Same here but I'm using LightBox. ",
    "Koshub": "Same issue using:\n- react-native-router-flux@4.0.0-beta.28\n- react-native: 0.51.0\n\n\n. Haha, cool - it's working without warnings with correct name Scene.\nThank you.. Same thing - { type: 'reset' } is not working. It works until I wrap all into the Modal scene.\nUpdate\nI think this is because you could reset only in scope of some root. By using modal I started to place scenes out of root scope so it is not work as expected.. @asciifaceman because in iOS it is currently a trend to make modal transparent transition, especially with blured background. modal is required to be natively according to iOS UIKit components transitions, but the transparent background is a bit like feature here. Look at mail app in iOS11 when new  message  is creating - it is something like what I'm talking about but without blured background.. @aksonov Why it is closed?. ",
    "mysiar": "it is just the begining and all I have in the router is above app fires up and displays BookList component but with wrong header title. I found soultion \n<Router>\n      <Stack key=\"root\" hideNavBar>\n        <Stack key=\"books\" >\n           <Scene key=\"BookList\" component={BookList} title=\"Book List\"  />\n        </Stack>\n        <Scene key=\"Home\" component={Home} title=\"Home\"/>\n      </Stack>\n</Router>\nI will see how it goes when I use more  &  components. ",
    "SuperBesse": "Maybe the problem comes from listview, not from router : https://stackoverflow.com/questions/44022857/listview-not-displayed-unless-i-scroll-on-it. ",
    "yuletodim": "same problem. ",
    "viktormmarkov": "Hey,\nThanks for taking time to respond. I don't think the issue is connected to Modals. If I were to remove the Modal from the architecture of the app, I would get a similar result.  \nMore concrete example:\n```javascript\nconst Example = () => (\n  <Router\n    createReducer={reducerCreate}\n    getSceneStyle={getSceneStyle}\n\n<Scene key=\"main\" hideNavBar>\n      <Scene\n        key=\"loginModal\"\n        component={Login}\n        title=\"Login\"\n        hideNavBar\n        default\n        onExit={() => console.log('onExit')}\n        leftTitle=\"Cancel\"\n      />\n      <Scene\n        hideNavBar={false}\n        key=\"loginModal2\"\n        backTitle=\"Back\"\n        component={Login2}\n        title=\"Login2\"\n      />\n      <Scene\n        key=\"loginModal3\"\n        hideNavBar\n        component={Login3}\n        title=\"Login3\"\n        panHandlers={null}\n        duration={1}\n      />\n  <Scene component={MessageBar} />\n</Scene>\n\n\n);\n```\n\nI would expect the login2 screen to have a navBar. I 'hacked' it by adding type=\"replace\" in the scene that the navigation wasn't present. Hope it helps you. It partially works for me. I'm still trying to configure it properly :) . ",
    "brandonjyuhas": "@joel611 that worked! Thanks so much!. ",
    "hossein-kheirabadi": "@joel611 that worked! Thanks so much!. ",
    "shamanking": "I have same issue, this is my code:\n`\n  <Scene key=\"root\" hideNavBar >\n    <Scene key=\"auth\">\n      <Scene key=\"login\" component={LoginForm} title=\"Please Login\" />\n    </Scene>\n    <Scene key=\"main\">\n      <Scene\n        key=\"employeeList\"\n        rightTitle=\"Add\"\n        onRight={() => { Actions.employeeCreate(); }}\n        component={EmployeeList}\n        title=\"Employees\"\n      />\n      <Scene key=\"employeeCreate\" component={EmployeeCreate} title=\"Employee Create\" />\n    </Scene>\n  </Scene>\n</Router>`\n\nWhen I try: Actions.employeeList({ type: 'reset' });\nIt has error: there is no route define for key employeeList, must be one of 'auth', 'main'. @chelseaisgood : Thank you. I call employeeList from Scene employeeCreate. In Scene employeeCreate, I call action like:\n` \nexport const employeeDelete = ({ uid }) => { \nconst { currentUser } = firebase.auth();\nreturn () => {\n   firebase.database().ref(`/users/${currentUser.uid}/employees/${uid}`)\n     .remove()\n     .then(() => {\n         Actions.employeeList();\n      });\n };\n\n};\n`\nIf I try:  Actions.employeeList({ type: 'reset' }); It has error.. ",
    "chelseaisgood": "@shamanking Same here. I used Actions.main or Actions.pop to resolve this. But I do want to know how to navigate to some scene like employeeList, not the direct sub-scene of the root scene.. ",
    "selvesandev": "@shamanking Did you solve this issue ?. ",
    "abohannon": "I am also getting this error. \nThere is no route defined for key key1. Must be one of: 'key2'\nWas working fine until I introduced the modal + the additional 'rootPrivate' scene as the docs detail for setting up the modal.\n<Router getSceneStyle={this.getSceneStyle}>\n        <Scene key=\"root\" hideNavBar>\n          <Scene key=\"public\">\n            <Scene\n              key=\"login\"\n              component={LoginForm}\n              title=\"Please Login\"\n              rightTitle=\"Sign up\"\n              onRight={() => Actions.signup()}\n              hideNavBar\n            />\n            <Scene\n              key=\"signup\"\n              component={SignupForm}\n              title=\"Create Account\"\n              hideNavBar\n            />\n          </Scene>\n          <Scene key=\"private\" hideNavBar>\n            <Modal>\n              <Scene key=\"rootPrivate\">\n                <Scene\n                  key=\"nearby\"\n                  component={Nearby}\n                  title=\"Nearby\"\n                  leftTitle=\"Settings\"\n                  onLeft={() => Actions.push('settings')}\n                  rightTitle=\"My places\"\n                  onRight={() => Actions.userDash()}\n                  titleStyle={styles.titleStyle}\n                  rightButtonTextStyle={{ color: GREY_DARK }}\n                />\n                <Scene\n                  key=\"userDash\"\n                  component={MyPlaces}\n                  title=\"My places\"\n                  titleStyle={styles.titleStyle}\n                  backTitle=\"Nearby\"\n                  backButtonTextStyle={{ color: GREY_DARK }}\n                  navBarButtonColor={GREY_DARK}\n                />\n              </Scene>\n              <Scene\n                key=\"settings\"\n                component={Settings}\n                title=\"Settings\"\n                titleStyle={styles.titleStyle}\n                rightTitle=\"Nearby\"\n                onRight={() => Actions.pop()}\n                direction=\"leftToRight\"\n              />\n            </Modal>\n          </Scene>\n        </Scene>\n      </Router>. ",
    "saurabhabh": "@shamanking @selvesandev  I am facing the same issue. Any suggestions as to how to fix it? . Thank you so much.\nOn Wed, Jul 4, 2018, 4:32 AM jwilliamson1 notifications@github.com wrote:\n\n@shamanking https://github.com/shamanking @saurabhabh\nhttps://github.com/saurabhabh and anyone else who is having this\nproblem, and is probably also doing Stephen Grider's React-Native course\nthat this example seems to be from. You need to call Actions.pop() or\nActions.main(), to go back on instead of using Actions.employeeList({\ntype: 'reset' });.\ntry the following if the key is named main:\n`export const employeeSave = ({ name, phone, shift, uid }) => {\nconst { currentUser } = firebase.auth();\nreturn () => {\nfirebase.database().ref(/users/${currentUser.uid}/employees/${uid})\n.set({ name, phone, shift })\n.then(() => {\nActions.main();\n});\n};\n};`\nor this if you just want to go back one; they both should have the same\nresult:\n`export const employeeSave = ({ name, phone, shift, uid }) => {\nconst { currentUser } = firebase.auth();\nreturn () => {\nfirebase.database().ref(/users/${currentUser.uid}/employees/${uid})\n.set({ name, phone, shift })\n.then(() => {\nActions.pop();\n});\n};\n};`\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/aksonov/react-native-router-flux/issues/2439#issuecomment-402315814,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AITZsaNeYCYWM_MoVTM-S2jdHxzOwE1jks5uC_gYgaJpZM4PksAU\n.\n. \n",
    "tlesick": "Try Action.pop(). ",
    "jwilliamson1": "@shamanking @saurabhabh and anyone else who is having this problem, and is probably also doing Stephen Grider's React-Native course that this example seems to be from. You need to call Actions.pop() or Actions.main(), to go back on instead of using Actions.employeeList({ type: 'reset' });.\ntry the following if the key is named main:\n`export const employeeSave = ({ name, phone, shift, uid }) => {\n  const { currentUser } = firebase.auth();\nreturn () => {\n    firebase.database().ref(/users/${currentUser.uid}/employees/${uid})\n      .set({ name, phone, shift })\n      .then(() => {\n        Actions.main();\n      });\n  };\n};`\nor this if you just want to go back one; they both should have the same result:\n`export const employeeSave = ({ name, phone, shift, uid }) => {\n  const { currentUser } = firebase.auth();\nreturn () => {\n    firebase.database().ref(/users/${currentUser.uid}/employees/${uid})\n      .set({ name, phone, shift })\n      .then(() => {\n        Actions.pop();\n      });\n  };\n};`. ",
    "duyluonglc": "My experience use \"lazy\" props\njs\n        <Tabs\n          key='home'\n          tabs\n          tabBarPosition='bottom'\n          animationEnabled={false}\n          gestureEnabled={false}\n          showLabel={false}\n          swipeEnabled={false}\n          hideNavBar\n          tabBarStyle={styles.tabBarStyle}\n          navigationBarStyle={styles.navBarStyle}\n          lazy\n        >. Yes the component will mount once time. You can use onEnter prop to know when the tab is focused\nMy example everytime focus to favorite tab I do reload favorite data\n```js\nclass Favorite extends Component {\n  static onEnter = () => {\n    Actions.refresh({\n      enterTime: new Date()\n    })\n  }\ncomponentWillReceiveProps (nextProps) {\n    this.forceUpdate()\n    if (this.props.enterTime !== nextProps.enterTime) {\n      this.getFavorites()\n    }\n  }\n```. ",
    "santiblanko": "This is a good solution if you want to reload on pop.. ",
    "thiemo--bleeken": "have the same issue. how can we hide the navbar?. please merge. ",
    "alexhoo": "Same issue here :(. ",
    "jaywalklabs": "This can be solved using a custom nav bar\n```\n\n....\n\nexport default class CustomNavBar extends Component {\n    render() {\n        const { title, hideNavBar } = this.props;\n        if(hideNavBar === true) return \n        return (\n            \n{title}\n\n        );\n    }\n}\n```\nthen whenever you can set\nActions.refresh({hideNavBar:true})\n. https://github.com/aksonov/react-native-router-flux/blob/master/docs/API.md#scene\nnavBar | React.Component | \u00a0 | Optional React component to render custom NavBar\n-- | -- | -- | --\ni.e. set the navbar to be a custom React component\nthen put \n<Scene navBar={CustomNavBar} />\n. not sure what your flow is but you can use \nActions.refresh({status:xyz})\nor render based on whats inActons.currentScene\nor look in to the life cycles using onEnter,onLeave, onLeft, onRight etc. ",
    "m-sanduka": "same issue here, when I updated the router-flux to version v4.0.0-beta.21 the problem started to happen on android keyboard ... did u find the issue ?!. ",
    "koblinec": "\"react-native\": \"^0.48.4\"\n\"react-native-router-flux\": \"^4.0.0-beta.22\"\nmy problem was the react-native-drawer component. I replaced this component in the react-native-router-flux drawer and everything works perfectly. ",
    "syq7970": "@SoldierCorp I have the same issual, could you please tell me how to fix this? thx. @fauzzi Thanks! actually I using IndicatorViewPager too, after check my scene, issue just solved.. @munkhorgil Answer in #2442 , In my case, IndicatorViewPager or something like ViewPager with autoPlay will trigger this issue. I found a workaround.\nJust render StackNavigator in a SceneComponent.. ",
    "fauzzi": "Hi @syq7970, @SoldierCorp I have same issue for dismiss keyboard in Android, for IOS this fine.\nThe issue is I have Slider using IndicatorViewPager with autoPlayEnable is true. My router flux using Tab. I set the Slider in dashboard. May be you can check each your Scene that have some autopalay active or not, \n . ",
    "jbrod22": "I ended up downgrading to v3 and it worked fine. Thanks!\nOn Sep 29, 2017 7:59 PM, \"Miguel\" notifications@github.com wrote:\n\nI don't see anything in your Navigation Router. what is your application\nrouter setup?\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/aksonov/react-native-router-flux/issues/2444#issuecomment-333265208,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AVgb4AGiEx4IJz97qSQeg9aQ_5SkWOb8ks5snYR8gaJpZM4PnhSo\n.\n. \n",
    "ghoshabhi": "I also want to look at a clean example of just tabbed navigation.. @dwilt Thanks for the example. Just had a small question. How do I change the scene being rendered based on the tab click ? Just usual Action.sceneKey() ?\nThanks.\nSorry forgot we had access to the component prop! \ud83e\udd15 Thanks again!. ",
    "hapo-nghialt": "thank you very much!. I change props.focused for props.selected. It's worked.. ",
    "wincod75": "Does this still work? My text label is not showing...\nicon={({ focused }) => (\n            home3}\n                text={My Account}\n            />\n        )}. @uncvrd No luck, can't get anything to display either.. ",
    "uncvrd": "@wincod75 any luck after a day? I'm just running into this issue as well and cannot get anything to display. @wincod75 ugh well keep me posted if you do. I'll keep searching. Hey @tmaly1980 so I'm actually running into the same issue, posted about it on Stack Overflow. I tried incorporating your method with no luck. If you have a sec, any thoughts as to why your method doesn't work within my code? https://stackoverflow.com/questions/50057970/icons-do-not-load-in-tab-bar-scene-stack\nmostly puzzled by the fact that calling icon={TabIcon} does not run the function in my case... @tmaly1980 thanks for the response, unfortunately it doesn't. I put an alert in the TabIcon function to see if it event runs, but nothing is triggered \ud83d\ude22 . @tmaly1980 sure do appreciate the suggestion. Moved component to different file, exported it. Then imported it in my route.js and called it in my Scene with icon={TabIcon} with no luck. My code is a carbon copy of yours since you mentioned it worked for you. Guess it just isn't meant to be \ud83e\udd13 . ",
    "webjyh": "@uncvrd @wincod75 \n```javascript\nconst TabIcon = (props) => {\n    console.log({...props});\n    return (\n        \n{JSON.stringify(props.focused)}\n\n    )\n};\n\n```. ",
    "bjarkof": "I solved this by adding showIcon={false} to the Tabs component. I dont know why, but even though I had not provided an icon prop on the child scenes, there was visually left \"room\" for the icons, so that the labels were not centered at the tabs. . ",
    "crossRT": "got it. \nThank you so much. @mvanroon @mcabs3 \n=). ",
    "josiahres": "I am also getting this error. Can't navigate to another scene and no error is displayed. RN 0.48.3, react-native-router-flux 4.0.0-beta.21. I also get this issue. Before it worked fine on React-native-router-flux 3.38. I then updated to the latest version of react-native-router-flux and now as mentioned in this open issue, I can't change scenes using ACTIONS.KEY. I tried with RN 0.48.3 and 0.48.4 and I get the same issue. ",
    "renatofilipov": "I also get the same issue... when I run the \"demo app\", it works. But when I import to my working (ejected) app, it doesn't.\nAny hints?\nThanks!. Yes, I have just solved it. Thanks!\nEm 5 de dez de 2017 18:16, \"Jeovany\" notifications@github.com escreveu:\n\n@karanwadhwa https://github.com/karanwadhwa did you solved this?\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/aksonov/react-native-router-flux/issues/2452#issuecomment-349473903,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AF_I2LLdXlKj4VUpcLOWNGnRx4uWdlXqks5s9c7igaJpZM4Pq_EX\n.\n. \n",
    "jeomora": "@karanwadhwa did you solve this?. ",
    "gagantaneja": "Running into exactly same issue . It ran smoothly for me earlier with the same code but when i created a new project with the same code, it stopped working on some places . Please do help.. > I also get the same issue... when I run the \"demo app\", it works. But when I import to my working (ejected) app, it doesn't.\n\nAny hints?\nThanks!\nYes, I have just solved it. Thanks! Em 5 de dez de 2017 18:16, \"Jeovany\" notifications@github.com escreveu:\n\u2026\n@karanwadhwa https://github.com/karanwadhwa did you solved this? \u2014 You are receiving this because you commented. Reply to this email directly, view it on GitHub <#2452 (comment)>, or mute the thread https://github.com/notifications/unsubscribe-auth/AF_I2LLdXlKj4VUpcLOWNGnRx4uWdlXqks5s9c7igaJpZM4Pq_EX .\n\nCan you please tell me how to solve this?\n. This is an issue with the latest update of the library. Trying adding both the scenes under the same parent scene. If both of them exist under different scenes. Try : Actions.parentKey; Actions.scene. \n\ntry using requestAnimationFrame rather than setTimeout. \n",
    "tedkimzikto": "having same issue :( . ",
    "JessieYF": "I encountered this issue as well. What I do is adding a placeholder for left button and right button on root Scene. When the child Scene has any left/right button, override the property.\nrenderPlaceholder = () => <View />\n<Scene\n     key=\"root\"\n     renderLeftButton={this.renderPlaceholder}\n     renderRightButton={this.renderPlaceholder}\n/ >\neg: child Scene\n<Scene\n     key=\"sub\"\n     title=\"sub\"\n     component={PageComponent}\n     hideTabBar\n     renderLeftButton={() => <BackButton />}\n/>. The issue is fixed in version 4.0.0-beta.24.. ",
    "sagark1510": "@aksonov it's still the same on android. Do I have to add any props to scene to get reflection or it should work automatically? . ",
    "Albinzr": "Will this be fixed?,I cant push the app to production without a fix.. ",
    "Gulci": "This issue is also present on React Native v. 0.54.2 with react-native-router-flux v. 4.0.0-beta.28.. ",
    "acollazomayer": "@davidcabral Is this going to get fixed?? Thank You. @daviscabral Thank you! I manage to solve the issue making a custom nav bar. However this is better! Thanks!! Good luck with the company transition!. same here!. @aksonov same here. Just upgrade from beta to 4.0.6 and push is not working\n. @aksonov I Love how this was closed. This was not the issue though. Is still not working. Something that was working after the update everything broke. However i am switching the navigation library.\nThanks it was really good while it last. ",
    "xbogdan": "I'm still having this issues with react-native 0.55 and react-native-router-flux 4.0.0-beta.31 .\nWas this fixed or should I follow @acollazomayer solution ?\n. ",
    "massimopibiri": "The solution written by @JessieYF works good. ",
    "og24715": "This issue still exists with RNRF v4.0.5. Im not able to open it, but I think that it have to be open.. @aksonov Still happen on v4.0.1 \ud83d\ude21\nDo you mean what this issue was solved on only beta40, but pending on v4.0.1? I was tried v4.0.1 and v4.0.2-dev. However, both not work for me.\nYou can try reproduce this issue by add tabBarOnPress with backToInitial in your Example project. . Please bump version. \ud83d\ude02. ",
    "sanjeevkse": "Need the same.. ",
    "serialbandicoot": "Great thanks, i tried the following and at least started making progress. \n```\nclass CustomNavBar extends Component {\n    render() {\n        return (\n            \n\n\n\n        );\n    }\n}\n```. A bit of a followup question, but how would you enable and disable the TextInput from being displayed, after clicking Left/Right Button on the nav?. That's great, I went with a slightly different option by using SearchBar from the library 'react-native-searchbar', as it's got an easy method to hide.\n\nUser can exit the search routine if required.\n\nHappy to leave a code snippet if anyone is interested...I'll close the ticket otherwise as my question has been answered - :) . Just the following inside the Scene:\nonLeft={ () => Actions.search() } leftButtonImage={require(\"./images/img.png\")}\n. So I tried the following and although it does kind of what I'm after the displaying of the nav bar is awful. It just keeps sliding up and down.\n<Scene>\n   <Drawer>\n         <Scene key=\"home_screen\" component={ HomeScreen } title=\"App\"  initial/>\n    </Drawer>\n   <Scene key=\"article_screen\" component={ ArticleScreen } title=\"App\"  backTitle={' '}/>\n </Scene>. After a bit of fiddling around, you can use hideDrawerButton, however it then means the back button uses the last title, which cannot be overwritten with backTitle.\n<Router>\n                <Drawer key=\"drawer\" contentComponent={DrawerContent} drawerWidth={300} >\n                     <Scene hideNavBar>\n                         <Stack>\n                             <Scene key=\"home_screen\" component={ HomeScreen } title=\"App\" initial/>\n                             <Scene key=\"article_screen\" component={ SecondScreen } title=\"App\" hideDrawerButton/>\n                         </Stack>\n                     </Scene>\n                </Drawer>\n            </Router>. ",
    "jordanfloyd": "So I don't think this is an issue with this library as much as it is with Android and React Native. The behavior is actually different if you press the hardware back arrow than if you press the circle (minimize), at least for us. So what is happening is that the root component of React Native is getting unmounted when you use the backArrow instead of the circle, so you have to handle this case just like an app launch. There are tricks you can do like hook into the componentDidMount of the root component to know when its a launch vs a resume.\nIf someone hasn't had this issue or has an easier solution, I'd be interested to see how their app is setup.. This is a great use case for a side effect library like redux-saga: https://redux-saga.js.org/. Essentially actions that would modify the store like a user set action can also be picked up by the middleware and trigger some other functionality like a navigation change. You can setup a generator function that watches for actions of a certain type to come in, and when they do then go get data from the store and use that data to inform your navigation action, like the presence or absence of a token. You don't necessarily have to use redux-saga, but it fits in nicely with the architecture if you are already using redux. \nExample implementation:\n```\n    function * watchForAuthChanges() {\n       while(true) {\n         const action = yield take([\n           UserTypes.LOG_IN,\n           UserTypes.LOG_OUT\n         ])\n     const user = yield select(UserSelectors.get)\n     if (user.token) {\n       yield call(Navigation.Actions.Main)\n     }\n     yield call(Navigation.Actions.Other)\n }\n\n}\n```. ",
    "axelphunter": "Found a method to achieve the above feature. Create a custom Nav and Tab bar and add the conditions for rendering within.. ",
    "nursultan1201b": "Yes, I tried, but what if this component is universal and I want to change its style depending on where it was called?\n. ",
    "psyycker": "Did you succeed to do it ?. ",
    "dreamteryst": "I found solution, just use BackHandler.exitApp() instead of return false\nMy code : \n```\nconstructor(props) {\n    super(props);\n    this.state = {\n      doubleBackToExitPressedOnce: false\n    }\n  }\ncomponentDidMount() {\n    BackHandler.addEventListener('hardwareBackPress', this.handleBackButton);\n  }\ncomponentWillUnmount() {\n    BackHandler.removeEventListener('hardwareBackPress', this.handleBackButton);\n  }\nonButtonPress = () => {\n    BackHandler.removeEventListener('hardwareBackPress', this.handleBackButton);\n    // then navigate\n    // navigate('NewScreen');\n  }\nhandleBackButton = () => {\n    if(this.state.doubleBackToExitPressedOnce) {\n      BackHandler.exitApp();\n    }\n    ToastAndroid.show('Press back again to exit', ToastAndroid.SHORT);\n    this.setState({ doubleBackToExitPressedOnce: true });\n    setTimeout(() => {\n      this.setState({ doubleBackToExitPressedOnce: false });\n    }, 2000);\n    return true;\n  }\n```. ",
    "Abhishekgarg727": "Hope this will help : https://gist.github.com/Abhishekgarg727/447727a32e284c24346ec6d1a83feefe . Error i get when using RNRF\npackage.json\n{\n  \"name\": \"ABC\",\n  \"version\": \"0.0.1\",\n  \"private\": true,\n  \"scripts\": {\n    \"start\": \"node node_modules/react-native/local-cli/cli.js start\"\n  },\n  \"dependencies\": {\n    \"axios\": \"^0.18.0\",\n    \"eslint\": \"^5.2.0\",\n    \"native-base\": \"2.6.1\",\n    \"react\": \"16.3.1\",\n    \"react-native\": \"0.54.0\",\n    \"react-native-router-flux\": \"^4.0.1\",\n    \"react-native-timeline-listview\": \"^0.2.3\",\n    \"react-redux\": \"^5.0.7\",\n    \"redux\": \"^4.0.0\",\n    \"redux-logger\": \"^3.0.6\",\n    \"redux-thunk\": \"^2.3.0\"\n  },\n  \"rnpm\": {\n    \"assets\": [\n      \"app/resources/fonts\",\n      \"app/resources/img\"\n    ]\n  }\n}\nindex.js\nimport React from 'react';\nimport { AppRegistry } from 'react-native';\n// Root for enabling Toast\nimport { Root } from \"native-base\";\nimport { Router, Scene } from 'react-native-router-flux';\nimport { Provider } from 'react-redux';\nimport store from './app/store/store';\nimport PostAd from './app/components/PostAd';\nimport SignUp from './app/components/SignUp';\nconst App = () => ( \n  \n\n\n \n\n\n\n \n);\nAppRegistry.registerComponent('ABC', () => App);\nlog:\n08-13 13:17:09.919 23416 23416 D ReactNative: ReactInstanceManager.onJSBundleLoadedFromServer()\n08-13 13:17:09.919 23416 23416 D ReactNative: ReactInstanceManager.recreateReactContextInBackground()\n08-13 13:17:09.919 23416 23416 D ReactNative: ReactInstanceManager.runCreateReactContextOnNewThread()\n08-13 13:17:09.919 23416 23416 D ReactNative: ReactInstanceManager.tearDownReactContext()\n08-13 13:17:09.919 23416 23416 D ReactNative: CatalystInstanceImpl.destroy() start\n08-13 13:17:09.924 23416 23531 D ReactNative: ReactInstanceManager.createReactContext()\n08-13 13:17:10.054 23416 23531 D ReactNative: Initializing React Xplat Bridge.\n08-13 13:17:10.064 23416 23531 D ReactNative: Initializing React Xplat Bridge before initializeBridge\n08-13 13:17:10.109 23416 23534 D ReactNative: CatalystInstanceImpl.destroy() end\n08-13 13:17:10.114 23416 23531 D ReactNative: Initializing React Xplat Bridge after initializeBridge\n08-13 13:17:10.114 23416 23531 D ReactNative: CatalystInstanceImpl.runJSBundle()\n08-13 13:17:10.114 23416 23536 D ReactNative: ReactInstanceManager.setupReactContext()\n08-13 13:17:10.114 23416 23536 D ReactNative: CatalystInstanceImpl.initialize()\n08-13 13:17:10.114 23416 23536 D ReactNative: ReactInstanceManager.attachRootViewToInstance()\n08-13 13:17:11.729 23416 23535 I ReactNativeJS: Running application \"PINTP2P\" with appParams: {\"rootTag\":11}. DEV === true, development-level warning are ON, performance optimizations are OFF\n08-13 13:17:11.909 23416 23535 E ReactNativeJS: TypeError: undefined is not an object (evaluating 'context.changedBits')\n08-13 13:17:11.909 23416 23535 E ReactNativeJS:\n08-13 13:17:11.909 23416 23535 E ReactNativeJS: This error is located at:\n08-13 13:17:11.909 23416 23535 E ReactNativeJS:     in SceneView (at StackViewLayout.js:563)\n08-13 13:17:11.909 23416 23535 E ReactNativeJS:     in RCTView (at View.js:78)\n08-13 13:17:11.909 23416 23535 E ReactNativeJS:     in View (at StackViewLayout.js:562)\n08-13 13:17:11.909 23416 23535 E ReactNativeJS:     in RCTView (at View.js:78)\n08-13 13:17:11.909 23416 23535 E ReactNativeJS:     in View (at StackViewLayout.js:561)\n08-13 13:17:11.909 23416 23535 E ReactNativeJS:     in RCTView (at View.js:78)\n08-13 13:17:11.909 23416 23535 E ReactNativeJS:     in View (at createAnimatedComponent.js:147)\n08-13 13:17:11.909 23416 23535 E ReactNativeJS:     in AnimatedComponent (at StackViewCard.js:12)\n08-13 13:17:11.909 23416 23535 E ReactNativeJS:     in Card (at createPointerEventsContainer.js:28)\n08-13 13:17:11.909 23416 23535 E ReactNativeJS:     in Container (at StackViewLayout.js:612)\n08-13 13:17:11.909 23416 23535 E ReactNativeJS:     in RCTView (at View.js:78)\n08-13 13:17:11.909 23416 23535 E ReactNativeJS:     in View (at StackViewLayout.js:470)\n08-13 13:17:11.909 23416 23535 E ReactNativeJS:     in RCTView (at View.js:78)\n08-13 13:17:11.909 23416 23535 E ReactNativeJS:     in View (at StackViewLayout.js:469)\n08-13 13:17:11.909 23416 23535 E ReactNativeJS:     in StackViewLayout (at withOrientation.js:30)\n08-13 13:17:11.909 23416 23535 E ReactNativeJS:     in withOrientation (at StackView.js:63)\n08-13 13:17:11.909 23416 23535 E ReactNativeJS:     in RCTView (at View.js:78)\n08-13 13:17:11.909 23416 23535 E ReactNativeJS:     in View (at Transitioner.js:169)\n08-13 13:17:11.909 23416 23535 E ReactNativeJS:     in Transitioner (at StackView.js:21)\n08-13 13:17:11.909 23416 23535 E ReactNativeJS:     in StackView (at createNavigator.js:59)\n08-13 13:17:11.909 23416 23535 E ReactNativeJS:     in Navigator (at createKeyboardAwareNavigator.js:11)\n08-13 13:17:11.909 23416 23535 E ReactNativeJS:     in KeyboardAwareNavigator (at createNavigationContainer.js:376)\n08-13 13:17:11.909 23416 23535 E ReactNativeJS:     in NavigationContainer (at Router.js:97)\n08-13 13:17:11.909 23416 23535 E ReactNativeJS:     in App (at Router.js:122)\n08-13 13:17:11.909 23416 23535 E ReactNativeJS:     in Router (at index.js:16)\n08-13 13:17:11.909 23416 23535 E ReactNativeJS:     in Provider (at index.js:15)\n08-13 13:17:11.909 23416 23535 E ReactNativeJS:     in App (at renderApplication.js:35)\n08-13 13:17:11.909 23416 23535 E ReactNativeJS:     in RCTView (at View.js:78)\n08-13 13:17:11.909 23416 23535 E ReactNativeJS:     in View (at AppContainer.js:102)\n08-13 13:17:11.909 23416 23535 E ReactNativeJS:     in RCTView (at View.js:78)\n08-13 13:17:11.909 23416 23535 E ReactNativeJS:     in View (at AppContainer.js:122)\n08-13 13:17:11.909 23416 23535 E ReactNativeJS:     in AppContainer (at renderApplication.js:34)\n08-13 13:17:11.929 23416 23535 W ReactNativeJS: Warning: Unexpected pop.\n08-13 13:17:11.939 23416 23535 E ReactNativeJS: TypeError: Attempted to assign to readonly property.\n08-13 13:17:11.939 23416 23535 E ReactNativeJS:\n08-13 13:17:11.939 23416 23535 E ReactNativeJS: This error is located at:\n08-13 13:17:11.939 23416 23535 E ReactNativeJS:     in SceneView (at StackViewLayout.js:563)\n08-13 13:17:11.939 23416 23535 E ReactNativeJS:     in RCTView (at View.js:78)\n08-13 13:17:11.939 23416 23535 E ReactNativeJS:     in View (at StackViewLayout.js:562)\n08-13 13:17:11.939 23416 23535 E ReactNativeJS:     in RCTView (at View.js:78)\n08-13 13:17:11.939 23416 23535 E ReactNativeJS:     in View (at StackViewLayout.js:561)\n08-13 13:17:11.939 23416 23535 E ReactNativeJS:     in RCTView (at View.js:78)\n08-13 13:17:11.939 23416 23535 E ReactNativeJS:     in View (at createAnimatedComponent.js:147)\n08-13 13:17:11.939 23416 23535 E ReactNativeJS:     in AnimatedComponent (at StackViewCard.js:12)\n08-13 13:17:11.939 23416 23535 E ReactNativeJS:     in Card (at createPointerEventsContainer.js:28)\n08-13 13:17:11.939 23416 23535 E ReactNativeJS:     in Container (at StackViewLayout.js:612)\n08-13 13:17:11.939 23416 23535 E ReactNativeJS:     in RCTView (at View.js:78)\n08-13 13:17:11.939 23416 23535 E ReactNativeJS:     in View (at StackViewLayout.js:470)\n08-13 13:17:11.939 23416 23535 E ReactNativeJS:     in RCTView (at View.js:78)\n08-13 13:17:11.939 23416 23535 E ReactNativeJS:     in View (at StackViewLayout.js:469)\n08-13 13:17:11.939 23416 23535 E ReactNativeJS:     in StackViewLayout (at withOrientation.js:30)\n08-13 13:17:11.939 23416 23535 E ReactNativeJS:     in withOrientation (at StackView.js:63)\n08-13 13:17:11.939 23416 23535 E ReactNativeJS:     in RCTView (at View.js:78)\n08-13 13:17:11.939 23416 23535 E ReactNativeJS:     in View (at Transitioner.js:169)\n08-13 13:17:11.939 23416 23535 E ReactNativeJS:     in Transitioner (at StackView.js:21)\n08-13 13:17:11.939 23416 23535 E ReactNativeJS:     in StackView (at createNavigator.js:59)\n08-13 13:17:11.939 23416 23535 E ReactNativeJS:     in Navigator (at createKeyboardAwareNavigator.js:11)\n08-13 13:17:11.939 23416 23535 E ReactNativeJS:     in KeyboardAwareNavigator (at createNavigationContainer.js:376)\n08-13 13:17:11.939 23416 23535 E ReactNativeJS:     in NavigationContainer (at Router.js:97)\n08-13 13:17:11.939 23416 23535 E ReactNativeJS:     in App (at Router.js:122)\n08-13 13:17:11.939 23416 23535 E ReactNativeJS:     in Router (at index.js:16)\n08-13 13:17:11.939 23416 23535 E ReactNativeJS:     in Provider (at index.js:15)\n08-13 13:17:11.939 23416 23535 E ReactNativeJS:     in App (at renderApplication.js:35)\n08-13 13:17:11.939 23416 23535 E ReactNativeJS:     in RCTView (at View.js:78)\n08-13 13:17:11.939 23416 23535 E ReactNativeJS:     in View (at AppContainer.js:102)\n08-13 13:17:11.939 23416 23535 E ReactNativeJS:     in RCTView (at View.js:78)\n08-13 13:17:11.939 23416 23535 E ReactNativeJS:     in View (at AppContainer.js:122)\n08-13 13:17:11.939 23416 23535 E ReactNativeJS:     in AppContainer (at renderApplication.js:34)\n08-13 13:17:11.949 23416 23535 W ReactNativeJS: Warning: Unexpected pop.\n08-13 13:17:11.949 23416 23535 E ReactNativeJS: Should have found an error boundary. This error is likely caused by a bug in React. Please file an issue.. ?. @daviscabral  yeah it is simple just create sample two screens using react native than attach your whole react native code in android app , when we simply use RNRF for the navigating from one screen to another it show above log. \ncould tell what is possible problem will causing this , by reading log i mentioned above.\nThank you.. @daviscabral  can you put this JSON in your  read me docs, so that future beginners don't need to struggle and also save time. below is my updated package.json which work flawlessly with android.\nBecause only using react-native-router-flux as dependency does not work. \n```js\n{\n  \"name\": \"Example\",\n  \"version\": \"0.0.1\",\n  \"private\": true,\n  \"scripts\": {\n    \"start\": \"node node_modules/react-native/local-cli/cli.js start\",\n    \"test\": \"jest\"\n  },\n  \"resolutions\": {\n    \"/@babel/cli\": \"7.0.0-beta.54\",\n    \"/@babel/core\": \"7.0.0-beta.54\",\n    \"*/@babel/code-frame\": \"7.0.0-beta.54\"\n  },\n  \"dependencies\": {\n    \"eslint\": \"^5.2.0\",\n    \"prop-types\": \"^15.6.2\",\n    \"react\": \"16.3.1\",\n    \"react-native\": \"0.55.4\",\n    \"react-native-router-flux\": \"^4.0.1\",\n    \"react-navigation\": \"^2.11.2\",\n    \"react-redux\": \"^5.0.7\",\n    \"redux\": \"^4.0.0\",\n    \"redux-logger\": \"^3.0.6\",\n    \"redux-thunk\": \"^2.3.0\"\n  },\n  \"devDependencies\": {\n    \"babel-jest\": \"23.4.2\",\n    \"babel-preset-react-native\": \"4.0.0\",\n    \"jest\": \"23.5.0\",\n    \"react-test-renderer\": \"16.4.1\"\n  },\n  \"jest\": {\n    \"preset\": \"react-native\"\n  }\n}\n``. @daviscabral  i am not saying that it is a bug, that is what **LOG** says. . @daviscabral Is usingbabel-preset-react-native` will resolve it?. @daviscabral  Is those changes are available in example . i really need to use RNRF in my current project , any boilerplate or example will thankful .. use jump instead of popTo in case of tabs. popTo not works when you do not have screen in already stack you want to\ngo. For example if i replace screen A from screen B and i use popTo(A) it\nwill show undefined route name or it does exist.\nas a workaround Using replace or jump you can pass new props data , by\nkeeping maintaing props data from going one screen to another one\nOn Tue, 5 Mar 2019, 11:28 p.m. chris, notifications@github.com wrote:\n\nI want to retain the data which has been passed by props and by using\nAction.jump('someScreen'), props gets undefined. Same is the case with\nthe Actions.replace('someScreen').\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/aksonov/react-native-router-flux/issues/3410#issuecomment-469785257,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/Act_AuR_o2RXbuGT6ZCIRJvTggwEJHIjks5vTrAogaJpZM4aUH0E\n.\n. \n",
    "nwaughachukwuma": "\nI found solution, just use BackHandler.exitApp() instead of return false\nMy code :\n```\nconstructor(props) {\n    super(props);\n    this.state = {\n      doubleBackToExitPressedOnce: false\n    }\n  }\ncomponentDidMount() {\n    BackHandler.addEventListener('hardwareBackPress', this.handleBackButton);\n  }\ncomponentWillUnmount() {\n    BackHandler.removeEventListener('hardwareBackPress', this.handleBackButton);\n  }\nonButtonPress = () => {\n    BackHandler.removeEventListener('hardwareBackPress', this.handleBackButton);\n    // then navigate\n    // navigate('NewScreen');\n  }\nhandleBackButton = () => {\n    if(this.state.doubleBackToExitPressedOnce) {\n      BackHandler.exitApp();\n    }\n    ToastAndroid.show('Press back again to exit', ToastAndroid.SHORT);\n    this.setState({ doubleBackToExitPressedOnce: true });\n    setTimeout(() => {\n      this.setState({ doubleBackToExitPressedOnce: false });\n    }, 2000);\n    return true;\n  }\n```\n@dreamteryst how can this be made to work when there's an app drawer? My challenge is that subsequent screens continue to see Home screen, as this.props.navigation.state.routeName === 'Home'.\n. \n",
    "fadlykayo": "@sina-mirhejazi hello, any success with unmounting the tab on leaving?. @kesha-antonov hi, do you found any solution for this? my current workaround is by adding setTimeout(() => { Actions.productListing({type: 'replace'}), 0);. But it still give me flicker effect. Another workaround is by adding a custom loader before the next scene mounted. But the loader will always be rendered everytime the next scene is called.\nUPDATE: \nFound the best solution so far by rendering an empty View, before navigating to the next scene.\n```\nshouldComponentUpdate(nextProps, nextState) {\n    if (nextProps.status === 'ACTIVE') {\n      Actions.productListing({ type: 'replace' });\n    };\nreturn true;\n\n};\nrender() {\n    if (this.props.status === 'ACTIVE') {\n      return ;\n    } else {\n      return this.renderSubmitRegistration();\n    }\n  };\n```. ",
    "sina-mirhejazi": "@fadlykayo Hi. No, I didn't find a way to unmount them. But I cannot remember what did I do to overcome the problem! It was like a year ago. ",
    "niantuo": "why?. ",
    "nisheetsun": "my bad, I was not \"truly\" returning from onEnter/on.. ",
    "maulikdhameliya": "I have tested and it works properly with scenes also .\ninstall react-navigation\nimport CardStackStyleInterpolator from 'react-navigation/src/views/CardStack/CardStackStyleInterpolator';\n<Router>\n   <Scene key=\"root\" transitionConfig={() => ({screenInterpolator: CardStackStyleInterpolator.forHorizontal})}>\n       <Scene key=\"OnBoarding\" hideNavBar={true} component={OnBoarding} type={'reset'}/>\n       <Scene key=\"CreateAccount\" hideNavBar={true} component={CreateAccount}/>\n    </Scene>\n</Router>\nso I am able to get iOS style transition animation for all the scenes . deleted all node_modules and installed all modules again. And this error is gone\n   \"react\": \"16.3.1\",\n    \"react-native\": \"0.55.3\",\n    \"react-native-router-flux\": \"^4.0.0-beta.28\",\n    \"react-navigation\": \"^1.5.11\". ",
    "dccmmtop": "@maulikdhameliya  thank you very much. ",
    "bkniya": "I found the mistake\nThe scene moved to the second row and disappeared. I found another mistake: scene 1 to scene 2 and again to scene1...\nFor example: scene 1> scene 2> scene 1> scene 2> scene 1 ...\nin this case the first scene1 and scene2 are popTo ('home') but after that the popTo does not work\nconsole.log is writing action but not a process in app. Thank you for the answer\nit works fine @daviscabral . @yasinugrl can you put your router here and say react-native version ?. I also new in router-flux but why your router not have key = \"root\"\nCould this be the source of the problem?\n\"react\": \"16.0.0-beta.5\",\n\"react-native\": \"0.49.1\",\n\"react-native-router-flux\": \"^4.0.0-beta.21\". <Router key=\"root\">\n      <Drawer key=\"drawer\" contentComponent={MenuPage}>\n        <Overlay>\n          <Modal hideNavBar>\n            <Lightbox>\n              <Stack hideNavBar >\n                <Scene key=\"firstLoad\" component={FirstLoad} title=\"Please Login\" initial />\n                <Scene key=\"startApp\" component={StartApp} title=\"Start app\" panHandlers={null}/>\n                <Scene key=\"signUp\" component={SignUp} title=\"Please Sign up\" panHandlers={null}/>\n                <Scene key=\"login\" component={Login} title=\"Please Login\" panHandlers={null}/>\n                <Scene key=\"forgetPassword\" component={ForgetPassword} title=\"Forget password\" panHandlers={null}/>\n              </Stack>\n            </Lightbox>\n            <Stack hideNavBar >\n              <Scene key=\"testPage\" component={TestPage} title=\"Species List\" />\n              <Scene key=\"observationNewRoot\" component={ObservationNewRoot} title=\" Observation Root\" panHandlers={null}/>\n            </Stack>\n          </Modal>\n        </Overlay>\n      </Drawer>\n    </Router>\nand this is my button for open Drawer\n<TouchableOpacity onPress={()=>{Actions.drawerOpen()}}>\n            </TouchableOpacity>\n. ",
    "parthgandhi7": "Link to related react-navigation issue to keep track of the progress : #780. Can you suggest me any kind of possible workaround or something for this?. How to do that? i have custom drawer component with code as follows:\nDrawerLeft.js\n```\nimport React, { Component } from 'react';\nimport {View, Text } from 'react-native';\nimport { connect } from 'react-redux';\nimport Drawer from 'react-native-drawer';\nimport { Actions, DefaultRenderer } from 'react-native-router-flux';\nimport LeftDrawerContent from '../LeftDrawerContent';\nimport { openLeftDrawer, closeLeftDrawer } from '../../actions';\nconst mapStateToProps = (state) => ({\n  isLeftDrawerOpen: state.global.isLeftDrawerOpen,\n});\nclass DrawerLeft extends Component {\nonDrawerOpen = () => {\n    const { dispatch } = this.props;\n    dispatch(openLeftDrawer());\n  }\nonDrawerClose = () => {\n    const { dispatch } = this.props;\n    dispatch(closeLeftDrawer());\n  }\nrender() {\n    // const state = this.props.navigationState;\n    // const children = state.children;\n    // const state = this.props.navigation.state;\n    // console.log(\"Drawer left askjdksjdk\");\n    // const children = state.routes || [];\n    console.log(\"drawer left rendered\");\n    return (\n       { this.drawer = ref; }}\n        open={this.props.isLeftDrawerOpen}\n        onOpen={this.onDrawerOpen}\n        onClose={this.onDrawerClose}\n        type=\"overlay\"\n        elevation={4}\n        content={}\n        tapToClose={true}\n        openDrawerOffset={0.2}\n        panCloseMask={0.2}\n        negotiatePan={true}\n        acceptPan={true}\n        panOpenMask={0.25}\n        tweenHandler={(ratio) => ({\n          main: { opacity: Math.max(0.2, 1 - ratio) },\n        })}\n      >\n        {/  /}\n      \n    );\n  }\n}\nexport default connect(mapStateToProps)(DrawerLeft);\n```\nHow do i use this component in the scene code of react native router flux( as specified above)..\nThis used to work in older versions of router flux with \n```\n  <Scene\n    key=\"drawerLeft\"\n    component={DrawerLeft}\n    open={false}\n  >\n\n```\nBut i am not sure how to do it in this version.Can you help me out?\n\nreact-native-router-flux 4.0.0-beta.22\nreact-native 0.49.3\n. Using this scene code: \n<Scene key=\"root\" hideNavBar>\n    <Scene\n      key=\"loggedIn\"\n      hideNavBar\n      type={ActionConst.RESET}\n    >\n      <Scene\n        key=\"drawerLeft\"\n        component={DrawerLeft}\n        drawer={true}\n        renderTitle={<Toolbar />}\n        open={false}\n      >\n          <Scene\n            key=\"dashboard\"\n            component={Home}\n            type={ActionConst.REPLACE}\n            initial={true}\n          />\n           <Scene\n            key=\"orders\"\n            type={ActionConst.REPLACE}\n            component={Orders}\n          />\n         </Scene>\n      </Scene>\n</Scene>\nhelps render my custom drawer component but it does not allow child components to be used . i.e. when i hit Actions.orders() , it says\n_reactNativeRouterFlux.Actions.orders is not a function\n\nAlso this documentation says that component props is not required while specifying nested components.\n. Anyone wanting to implement this thing with latest react navigation can try this work around which i implemented and is working perfectly fine. I implemented two drawers seperately. One with react-router-flux and the other drawer (right drawer) on each page using seperate drawer component (eg, drawer from native base , react-native-drawer etc.).. ",
    "bushev": "I added:\nto package.json\n\"babel-preset-react-native-stage-0\": \"1.0.1\"\nto .babelrc\n\"react-native-stage-0/decorator-support\"\nIt helps me.. ",
    "catrieldapice": "+1. +1 I have a similar problem, I think the problem is because of the ordering of scenes. ",
    "papsti7": "When I try this, it is crashing in TabbedView: \nstatic propTypes = {\n    navigationState: PropTypes.object.isRequired,\n    renderScene: PropTypes.func.isRequired,\n    style: View.propTypes.style,\n  };\n\nOn 18 Oct 2017, at 11:43, Michiel van Roon notifications@github.com wrote:\ntry Text.proptypes.string instead of PropTypes.string\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub https://github.com/aksonov/react-native-router-flux/issues/2517#issuecomment-337528034, or mute the thread https://github.com/notifications/unsubscribe-auth/AKfuC2pD2CpCUffsTR9pK3sAtK_VhDYKks5stcgjgaJpZM4P8VrE.\n\n\n. @mvanroon Still there with react-native-router-flux@3.41.0. \nIf I try Text.proptypes.string instead of PropTypes.string in Scene.js, it doesn't crash in TabbedView, but in NavigationContainer.js. . It's working at version 3.41.0 after replace the deprecated PropTypes import from React to prop-types everywhere it crashes. . @mvanroon Ok, next time I'll ask it there. \nI upgraded to 4.0.0-beta.22, but then I got this error.\n\n. ",
    "peterchen08": "public componentWillMount (): void {\n              this.props.navigation.setParams({\n                     onRight: () => {this.myOnRight();},\n                     rightTitle:'newTitle',\n             });\n}\nIt working for me.. ",
    "MeisterTea": "Jesus, I came here looking for an answer for the original issue.\nPlease, try not to piggyback on non related issues !. ",
    "Alp4ga": "Hi\nI have the same problem ... When i try to refresh with Actions.refresh() nothing happen\n```\nimport React, { Component } from 'react';\nimport {\n    View,\n    Text,\n    Button,\n} from 'react-native';\nimport { Actions } from 'react-native-router-flux';\nexport default class Types extends Component {\nconstructor(props) {\n    super(props);\n    console.log(\"Constructor Types\")\n}\n\ncomponentWillMount() {\n    console.log('Will mount Types')\n}\n\ncomponentWillUpdate() {\n    console.log(\"Will Update Types\")\n}\n\ncomponentWillUnmount() {\n    console.log(\"will Unmont Types\")\n}\nrender() {\n    console.log(\"render Types\")\n    return (\n        <Button title='refresh' onPress={() => Actions.refresh()}/>\n    )\n}\n\n}\n```. Hi,\nI found an other solution, you change in file react-native-router-flux/dist/navigationStore.js line 245\njumpToIndex(tab.index);\nby \ntab.jumpToIndex(tab.scene.index);\nEDIT:\nif you want to patch all the function replace the condition line 230 backToInitial by\nif(backToInitial){\n        res.tabBarOnPress=function(tab){\n        if(tab.scene.focused){\n            if(tab.scene.route.index !== 0){\n                for(var i=1 ; i<tab.scene.route.routes.length; ++i){\n                    navigation.dispatch(_reactNavigation.NavigationActions.back());\n                }\n            }\n        } else {\n            tab.jumpToIndex(tab.scene.index);\n            if(tab.scene.route.index !== 0){\n                for(var i=1 ; i<tab.scene.route.routes.length; ++i){\n                    navigation.dispatch(_reactNavigation.NavigationActions.back());\n                }\n            }\n        }\n        };\n    }. ",
    "cosinus84": "@jaysassyinfotech \nActions.refresh({ key: Actions.currentScene }); not working second time\nIt works if you do like this :)\nActions.refresh({key: Math.random()}). ",
    "katiachumakova": "@cosinus84 You sir are a lifesaver.\n. ",
    "kjskjs": "@cosinus84 It is really work. wow \nBut is there any explaination why Math.random() does all the tricks?. ",
    "hanishcodebrew": "@cosinus84 you rock man (y) . ",
    "SalviShahzad": "@aksonov Please can you list down the props (with their functions ) that we can use in Actions.refresh() as the Scene props don't seem to be working here.. Yes, it is working fine but I suggest you to make a list of props to be used with refresh calls as we may not know which one to use when. \nFor example to render the back button we need to use leftButton prop but I did not know that until I read the comment of @kesha-antonov . ",
    "preetluv": "its working. ",
    "C0dekid": "@preetluv mind telling me how you fixed it?. Still not working for me!\nWhen using this\nActions.refresh({ title: \"New title\" });\nThe title should change, but it does nothing!\n\n\"react-native\":  \"0.58.6\"\n \"react-native-router-flux\": \"^4.0.6\"\n\nAlso it ignores the swipeEnabled property, the transition/animation also being ignored.. ",
    "oleole90": "@preetluv see cosinus84's answer. react-navigation v2.16.0\nIf you want me to run any experiments I can do that and share here. Like set breakpoints in RNRF's code on action dispatches within my app.\nHere is what my routes looks like:\nhttps://gist.github.com/oleole90/a3f2b9acc8d7c612a3b13809d8f56b3c\nSplash > Intro (fails silently)\nSplash > Demo (works fine)\nBoth works fine on 4.0.1\n\nSplash.js\n```\nimport { Actions as NavigationActions } from 'react-native-router-flux';\n// after login\nNavigationActions.Intro();\n```. Nope\nimport {\n    Scene,\n    Router,\n    Actions,\n    Reducer,\n    ActionConst,\n    Overlay,\n    Tabs,\n    Modal,\n    Drawer,\n    Stack,\n    Lightbox\n} from 'react-native-router-flux';. Not fixed. Going back to digging how RNRF works on provided Example app then hopefully find out why Navigation/SET_PARAMS isn't firing in my app. (3 days and counting...I'm in deep trouble!)\nClosed this issue because it was a question and you've answered it.\nAny advice will be appreciated. ",
    "chris-topher19": "you can do following:-\n\nActions.pop()\nsetTimeout(()=> Actions.refresh({\"somePropToRefresh\":Math.random(),\"yourProp\":\"to refresh the \nprevious screen on going back\"}),0.5);\n\nYou can check the \"yourProp\" in componentWillReceiveProps in previus screen after doing back.. Facing the same issue while using Actions.popTo(\"sceneKeyName\")  in router-flux v4.0.6  and react-native version 0.54.3. . I want to retain the data which has been passed by props and by using Action.jump('someScreen'), props gets undefined. Same is the case with the Actions.replace('someScreen').. ",
    "aipsel": "Sorry, it doesn't work.\nAnd, I found that the Tabs Scene was rendered twice.. ",
    "zhouzhiqiangzzq": "+1\n\nreact-native: 0.51.0\nreact-native-router-flux\": 4.0.0-beta.28. \n",
    "CarbonC": "Tested a little bit more options, it really seems to be a bug inherent to the stack navigator. The tab navigator is working well.... Yeah, i just updated the babel-react-native-preset version right now and it fixed it. Thanks!. ",
    "cmeiller": "Same here. @CarbonC I solved my problem by importing babel-polyfill, can you try this?. ",
    "sfreeman28": "@CarbonC Hi, I just started trying out React and having trouble with Navigation.\nI got TabNavigator working, but not StackNavigator.\nCan you please state which version of babel-react-native-preset you updated to fix the issue?\nFor reference these are my versions:\n{\n  \"name\": \"SimpleApp\",\n  \"version\": \"0.0.1\",\n  \"private\": true,\n  \"scripts\": {\n    \"start\": \"node node_modules/react-native/local-cli/cli.js start\",\n    \"test\": \"jest\"\n  },\n  \"dependencies\": {\n    \"react\": \"16.0.0-beta.5\",\n    \"react-native\": \"0.49.5\",\n    \"react-navigation\": \"^1.0.0-beta.16\"\n  },\n  \"devDependencies\": {\n    \"babel-jest\": \"21.2.0\",\n    \"babel-preset-react-native\": \"4.0.0\",\n    \"jest\": \"21.2.1\",\n    \"react-test-renderer\": \"16.0.0-beta.5\"\n  },\n  \"jest\": {\n    \"preset\": \"react-native\"\n  }\n}\nThanks. @skicson Yea thanks I just saw that Issue report and looks like what I am getting. Thanks for the help. ",
    "skicson": "@sfreeman28 - your error is probably related to this issue.. ",
    "erichua23": "shell\nnpm install --save babel-polyfill\nand add \njs\nimport \"babel-polyfill\"\nto your entry file.\nThis work for me on Android.\n. ",
    "ovr": "Find strange comment on the network:\n\nWarning: View.propTypes has been deprecated and will be removed in a future version of ReactNative. Use ViewPropTypes instead.\n\nI will review... \n. onRef(ref) { -> onRef = (ref) => { you can use this instead of bind manually inside constructor, what do you think?. https://babeljs.io/repl/#?babili=false&browsers=&build=&builtIns=false&code_lz=MYGwhgzhAECC0G8BQBIAZgVwHbAC4EsB7LAIXywBMSBPWAJzsIHdoBeaACgEo2A-RJNCHRBwgL5IJSUJBgkBQ4MQi46GPITrcF0FLgAW-CADpcAUxVtoBo6Yu5jAI3IUONiFwDcoiUNHmVbQQJKQA3MDprAAYrAAczOjRNAFswHDNjLGZubyQkyI4QM1xofCsoz1LoAB5oAEYoxsr8AGoWnmRhaCwzFlgcySQkcMjcOriE_NT0zOyvIfzOIpKy9gqq2oam0raO0SEelhIBsIjrACYJxJS04AyspgHpZUIi4xBCAHMOACI6gC4ftAWpwxtAALTRHggoHJfAgEBGMxKSgQAA00HOgOBoMukLGXC4QA&debug=false&circleciRepo=&evaluate=true&lineWrap=true&presets=es2015%2Ces2015-loose%2Ces2016%2Ces2017%2Creact%2Cstage-0%2Cstage-1%2Cstage-2%2Cstage-3&targets=&version=6.26.0\n\n1:0.4900000000000091 vs 2:0.3149999999999409\n. ",
    "aglio": "I hope so too.. ",
    "Assiance": "I built out the stack incorrectly. ",
    "rahulmishra-goibibo": "@onrige Thanks for your quick reply. It worked. ",
    "karenYerevan": "but redux and react-redux doesn't exist in example folder.. ok\ni will done it is .... \nplease say me it is wrong or correctly?\n```\nreducer/index.js\nimport { combineReducers } from 'redux';\nimport { ActionConst } from 'react-native-router-flux';\nconst sceneReducer = (state = {}, {type, scene}) => {\n    switch(type){\n        case ActionConst.FOCUS:\n            return { ...state, scene };\n        default:\n            return state;\n    }\n}\nexport const appReducer = combineReducers({\n    sceneReducer\n})\n```\n```\nApp.js\nimport { Provider, connect } from 'react-redux';\nimport { createStore } from 'redux';\nimport { Actions, ActionConst, Router, Scene,Stack,Overlay,Modal,Tabs } from 'react-native-router-flux';\nimport { appReducer } from './src/reducer';\nconst Scenes = Actions.create(\n    \n\n\n\n            ........\n            \n\n    </Overlay>\n</Modal>\n\n);\nconst ConnectedRouter = connect()(Router);\nconst store = createStore(appReducer);\nexport default class App extends Component<{}> {\n    constructor(props) {\n        super(props);\n    }\n    render() {\n        return(\n            \n\n\n        )\n    }\n}\n. i fixed this problem.\nI removed\n\n\n```. ",
    "yasinugrl": "hey @daviscabral can you help me?\nI can add this line in Button componenet\nconst sidebarButton = () => {\n    return (\n      <TouchableHighlight\n        onPress={() => { Actions.drawerOpen(); }} underlayColor=\"black\"\n      >\n          <Image\n          style={styles.menuIconStyle}\n          source={\n            require('./Menu/menu.png')}\n          />\n       </TouchableHighlight>\n    );\n};\nbut it is not work for me. Menu is not open. I add NavigationDrawer componenet. \nHow can I fix it?\n```\nclass NavigationDrawer extends React.Component {\n  componentDidMount() {\n    Actions.refresh({ key: 'test', ref: this.refs.navigation });\n  }\nrender() {\n    const state = this.props.navigationState;\n    const children = state.children;\n    return (\n       Actions.refresh({ key: state.key, open: true })}\n        onClose={() => Actions.refresh({ key: state.key, open: false })}\n        content={}\n        tapToClose\n        openDrawerOffset={0.4}\n        // panCloseMask={0}\n        // negotiatePan\n        tweenHandler={(ratio) => ({\n          main: { opacity: Math.max(0.54, 1 - ratio), transforMatrix: 0.5 },\n        })}\n      >\n        \n\n    );\n  }\n}\n```.   \"react-native\": \"0.49.3\",\n```\nconst RouterComponent = () => {\n  return (\n    \n\n { return ; }}\n                inital\n                type=\"replace\"\n                // title=\"\u00d6\u011frenci Listesi\"\n            />\n      </Scene>\n\n\n    );\n};\n```. can you share with me your Router file for drawer button? @bkniya . Actually this is very different my code. Can you share router.js file for me. I dont know Drawer Modal Lightbox Stack Component import where?. Hi everyone,\nCan you know that how to set openDrawerOffset with Drawer componenet in v4. ",
    "rajeshbatth-gommt": "Any update on this issue?? Even I'm getting this on 4.0.0-beta.24. ",
    "rudyryk": "@onrige Actually as I now understand it can be handled with generic thing. Is it possible to change stack state inside [not current] tab programmatically? In other words, how to \"navigate\" to scene inside [not current] tab without real switching to that scene?\n. @onrige Thank you for the hint! Seems like React Navigation has Reset feature for such scenarios: https://reactnavigation.org/docs/navigators/navigation-actions#Reset - so we could produce arbitrary navigation state if I understand correctly. But I can's find such kind of stuff in router flux.. https://github.com/react-navigation/react-navigation/issues/2749. ",
    "GianniGM": "Try to put a Stack or a Scene over Modal:\n<Scene key ='root' >\n    <Modal key='modal'>\n      [...]\n    </Modal>\n</Scene>. @SurpassRabbit i have the same issue may you post the solution?. ",
    "juanfer0002": "any update on this?. ",
    "yangningBU": "I'm having the same problem as well. No custom handler set. I do believe it started happening when once I added a nested , but I will try to attach a reproducible package.. I believe this is a dupe of #2540 . ",
    "Timson020": "yes, I try it . but it can't work, I mean  can't touch and alert\nI try add it in signin page, like it \n<Scene key=\"signIn\" component={SignIn} {...signStyle} renderRightButton={<Setting style={styles.marginRight} />}  />\ncan touch, and alert \nso I'm too puzzled\nthen I add it in tabBar Scene like it \n<Router getSceneStyle={getSceneStyle}>\n                <Overlay>\n                    <Lightbox>\n                        <Scene key=\"root\" headerMode=\"screen\" titleStyle={{ color: 'white' }} {...normalNav} {...hidenBack}>\n                            <Scene key=\"tabBar\" tabs={true} initial={true} navTransparent={true} activeTintColor={Utils.themeColor} renderLeftButton={<View />} renderRightButton={<Setting style={styles.marginRight} />}>\n                                <Scene key=\"home\" title=\"home\" component={Home} icon={TabBarIcon} image={[HomeIcon, HomeSelect]} hideNavBar />\n                                <Scene key=\"message\" title=\"message\" component={Message} icon={TabBarIcon} image={[MessageIcon, MessageSelect]} />\n                                <Scene key=\"user\" title=\"\" component={User} icon={TabBarIcon} image={[UserIcon, UserSelect]} />\n                            </Scene>\n                            <Scene key=\"signIn\" component={SignIn} {...signStyle} />\ncan work. Actions.xxx({ renderRight: () =>  }). @onrige thank\nthe shadow is remove\nbut the border for bottom is no remove\nmy code like it \n```\nconst normalNav = { navigationBarStyle: { backgroundColor: Utils.themeColor, borderBottomWidth: 0, elevation: 0 } }\n...\n\n```\nis not work. ",
    "romandubrov": "I have same problem with touch events\nconst RightButtonBar = (props) => (\n    <View style={{flexDirection: 'row'}}>\n        <TouchableNativeFeedback onPress={() => { console.log('bath')}}><Icon name={'bath'} style={{fontSize: 22, paddingHorizontal: 3}}/></TouchableNativeFeedback>\n        <TouchableNativeFeedback onPress={() => { console.log('bus')}}><Icon name={'bus'} style={{fontSize: 22, paddingHorizontal: 3}}/></TouchableNativeFeedback>\n        <TouchableNativeFeedback onPress={() => { console.log('bomb')}}><Icon name={'bomb'} style={{fontSize: 22, paddingHorizontal: 3}}/></TouchableNativeFeedback>\n    </View>\n);\nrender\n<Router>\n    <Scene key=\"root\">\n        <Scene key=\"main\" component={MainScreen} title=\"Main\" initial={true} rightButton={RightButtonBar}/>\n        <Scene key=\"secondary\" component={SecondaryScreen} title=\"Secondary\" back={true}/>\n    </Scene>\n</Router>\nThe icons are displayed, but there is no visual feedback on touch and onPress handler doesn't seem to be called\nAny ideas? . ",
    "godofmadness": "So, any resolution to this issue? . @ebaynaud what version of react-navigation you using?. @ebaynaud solution worked for me, will wait for PR submttion. @Anujmoglix  what version of RN you using?. ",
    "curliq": "Having the same issue. Have you found a solution?. We have to wrap the Router with a View with flex 1, i.e.:\n<View style={{flex:1}}>\n<Router>\n    <Lightbox>\n        <Scene key=\"root\" navBar={Navbar} setBarStyle={'blue'}>\n            <Scene key=\"initial\" initial={true} component={InitialPage} />\n            // Rest of scenes\n         </Scene>\n         <Scene key=\"settings\" hideNavBar={true} component={SettingsModal} />\n    </Lightbox>\n</Router>\n</View>. Also getting:\nTypeError: undefined is not an object (evaluating 'resetAction.actions.map')\nWith 24, 27 and 28.. ",
    "NathHorrigan": "Nope - No response from the Gitter either. Do update the issue if you find one :). @crazyhatfish  Yep - that worked!!. ",
    "crazyhatfish": "That didn't work for me. I just had to set the lightbox view position to absolute:\n<View style={styles.container}>  \n          <Text>Hello, World</Text>   \n      </View>\ncontainer: {\n    backgroundColor: '#0000000A',\n    position: 'absolute',\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    justifyContent: 'center',\n    alignItems: 'center',\n  }. ",
    "diaraujo13": "@afilp Did you find a solution?. ",
    "rey-an-papa-ext": "@aksonov I have the same issue with @afilp. Please assist us.. ",
    "rahmanmarija": "Yes, I've already tried that but nothing happens. Action is dispatched and called but no rerouting to the login screen.. ",
    "rareinator": "When i try something similar, it crashes the app, and comes with the error:\nundefined is not a function (evaluating '_reactNativeRouterFlux.Actions.test'). @wbattel4607 so you got it to work? . ",
    "dannyk08": "Running into the same problem.. my app spikes the CPU when I click on a \"link\",\nTheres a warning along the lines of \"no memory left\"\nI've tried downgrading versions , clearing cache, reinstalling , restarting my laptop, another version of expo... nothing works \nthese are my deps\n\"react\": \"^16.0.0\",\n\"react-native\": \"^0.49.3\",\n\"react-native-router-flux\": \"^4.0.0-beta.24\",\nthis is a file in my develop branch\nedit\nI'm trying to go from this view to this view\nI've stuck for 2 days with this problem. nothing seems to let the routes work\n. ",
    "PhoebePan": "this is my solution.  \nmy lightbox lightbox.js\n```\nconst TargetDetailLightbox = children => (\n  \n\n{children.title}\n Actions.pop()}>X\n\n\n\n Actions.chatScreen({ title: children.title })}\n      />\n    \n\n);\nexport default TargetDetailLightbox;\n```\nmy app.js\n<Scene\n              key=\"chatScreen\"\n              component={ChatScreen}\n              navBarButtonColor=\"white\"\n              onEnter={props => alert(JSON.stringify(props.title))}\n            />. ",
    "hjylewis": "Was this PR ever submitted?. ",
    "mienaikoe": "I had this error too. I was rendering more than one <Modal /> element in the same root node. After adding code to unmount the first one before opening the second one, the problem went away.. ",
    "blindbox": "If anyone didn't manage to get this to work, that's because you're supposed to put drawerLockMode into the children of <Drawer />, not the parent itself.. @sujitpk-perennial I don't know, I haven't got the time to give iOS a try. Anyway, I've changed the way that I'm doing my drawer. Currently, I only wrap Drawer around Scenes that requires the drawer, so drawerLockMode isn't actually needed.. ",
    "sujitpk-perennial": "@blindbox as per doc drawerLockMode not support in iOS. Is it working for you?. ",
    "fisherwise": "Thank you Juan. @aksonov I feel it could be a common problem for people using yarn and has the default yarnclean.. ",
    "iDuuck": "The lazy property isn't working for me at the moment. Will open another issue for this.. ",
    "malithjkmt": "<Router sceneStyle={styles.main}>\n    <Tabs\n        key=\"tabs\"\n        showLabel={false}\n        icon={TabIcon}>\n        <Scene\n            key=\"tab1\"\n            component={PostJobView}\n            title='A' />\n        <Scene\n            key=\"tab2\"\n            component={ProfileView}\n            title='B' />\n    </Tabs>\n</Router>\nTabIcon function is called twice for each Scene.\nI checked that router renders only once.\n\nreact: 16.4.1\n react-native: 0.56.0\nTested for all react-native-router-flux: 4.0.0-beta.31, 4.0.0-beta.40, and the latest version - 4.0.6\n. ",
    "11et401012": "Please help  how to  solve it this problem.       \ni  Am  putting style  inside in tabs  but  he  doesn,t  work. where  we  write code . not right now .. ",
    "HenryHengZJ": "is this solved yet?. ",
    "matthieupinte": "I tried something that seems to work, if you have the problem just add a \"new stack\" between the root and your other scenes :\n```jsx\n\n  <Stack\n    key=\"root\"\n    navigationBarTitleStyle={styles.navBar}\n    hideNavBar\n\n<Stack key=\"main\" initial>\n  <Scene key=\"home\" component={Home} initial hideNavBar />\n  <Scene key=\"sceneOne\" component={SceneOne} />\n  <Scene key=\"sceneTwo\" component={SceneTwo} />\n</Stack>\n<Stack key=\"register\" back>\n  <Scene key=\"login\" component={Login} title=\"Se connecter\" />\n</Stack>\n\n\n\n```. \n",
    "caiorios": "Hey @aksonov, I've been trying to integrate RNRF with FluidTransitions with no success. Could you provide a example?. ",
    "mregan59": "@caiorios were you able to implement Fluid transitions with RNRF? I found https://github.com/IjzerenHein/react-native-magic-move that works with RNRF but React Navigation's Fluid Transitions has a lot more functionality that I'd like to have access to. ",
    "pjconcepcion": "Try using <Scene tabs> . Mine's working with that code.\n```\n<Scene \n                    key = 'list' \n                    tabs \n                    tabBarPosition = 'top'\n                    showLabel = {true}\n                    title = 'List'                        \n                    icon = {searchIcon}\n                    tabBarStyle = {styles.tabBarStyle} \n                    labelStyle = {styles.txtLabel}\n                    indicatorStyle = {styles.indicatorStyle}\n\n . . . . . .\n\n\n```. \n",
    "cjcheshire": "Trying to update from V3 to V4.  Also having the same problem. ",
    "shiftrtech": "I am facing the same issue using this:\n\n\n\n  ....\n\n//package,json\n\"react-native-router-flux\": \"^4.0.5\",. > I am facing the same issue using this:\n\n....\n//package,json\n\"react-native-router-flux\": \"^4.0.5\",\n\nI use \"navBarButtonColor\" property and works \ud83d\udc4d . @Pauligrinder Thak you, i am trying what you said me (at the end i did upate the chat regardless too, but i have reac-redux v6, so, now withRef it doesnt works the same, i am try to get a good implementation example of forwardRef\n\nThe withRef option to connect has been replaced with forwardRef. If {forwardRef : true} has been passed to connect, adding a ref to the connected wrapper component will actually return the instance of the wrapped component.. \n",
    "rodribet3": "I'm having the same problem as @g4laura. I want to remove the back button titles but when I add backTitle = \" \" the back button start showing in every screen even if there wasn't one before adding that property. Is there any solution in which the back button doesn't show when is not suppose to?. ",
    "1fabiopereira": "@yordis you can leave, if I find out something, I'll let you know.. I solved my problem by putting a hideNavBar in the Drawer.\njsx\n<Router>\n   \u00a0<Stack key=\"root\">\n        <Scene\n             component={Loading}\n             hideNavBar\n             key=\"loading\"\n             panHandlers={null}\n        />        \n        <Drawer\n             contentComponent={Index}\n             key=\"menu\"\n             hideNavBar\n         >\n              <Scene\n                   component={Home}\n                   key=\"home\"\n                   panHandlers={null}\n                   title={I18n.t(\"pagina_home\")}\n                />\n           </Drawer>\n      </Stack>\n</Router>. ",
    "mikeevstropov": "@sondremare Are you mean you added onEnter to each <Scene>?. ",
    "AutomaticWaffle": "Been having this problem for the past two weeks, fixed it with @andreaskarantzas's method.\nThank you @andreaskarantzas!\n<Tabs lazy animationEnabled={false} swipeEnabled={false}>. ",
    "lighthugger": "You can see in src/navigationStore.js that navTransparent will use preset styling with elevation set 1, and will also disregard any other styling you might've passed with navigationBarStyle:\nif (navTransparent) {\n      res.headerStyle = { position: 'absolute', backgroundColor: 'transparent', zIndex: 100, top: 0, left: 0, right: 0,\n        borderBottomWidth: 0, elevation: 1 };\n    }\nUse navigationBarStyle with elevation: 0 instead of navTransparent.\n```\n<Scene\n  // your scene settings\n  navigationBarStyle = {{\n    position: 'absolute', backgroundColor: 'transparent', zIndex: 100, top: 0, left: 0, right: 0,\n    borderBottomWidth: 0, elevation: 0\n  }}\n\n...\n\n```\nThis fixed my issue with elevation shadow on Android, haven't tested on iOS.. \n",
    "BhaumikSurani": "I Have same issue.\ni'm defined Scene as clone and use\nActions.MyScreen({ randomParam: randomValue })\nBut still not working. It Every time update value. \nHow to Resolve this issue?. ",
    "jwh70": "yes can have a pr with docs later today!. yes! you are correct!. ",
    "toblerpwn": "@aksonov Thank you. It does work (no crash & functions correctly) with static.onEnter(), fwiw.. ",
    "v3yr0n": "@aksonov Am I doing something wrong?. @themakerman not sure what you mean, but I tried to add the setSceneStyle prop and nothing happened. BTW, sceneStyle or setSceneStyle should do the same, right?. and I manage to solve the issue with \n<View style={{ flex: 1, backgroundColor: 'white'}}>\n        <Router getSceneStyle={()=>styles.sceneStyle} navigationBarStyle={{backgroundColor: 'transparent', borderBottomWidth: 0 }}>\n          <Scene>\n            <Scene sceneStyle={styles.sceneStyle} key=\"scene1\" component={Component1} initial />\n            <Scene sceneStyle={styles.sceneStyle} key=\"scene2\" component={Component2}/>\n            <Scene sceneStyle={styles.sceneStyle} key=\"scene3\" component={Component3} />\n            <Scene sceneStyle={styles.sceneStyle} key=\"scene4\" component={Component4} />\n          </Scene>\n        </Router>\n        <Image\n    style={{\n      zIndex: -1,\n      resizeMode: 'cover',\n      height: '100%',\n      width: '100%'\n   }}\n   source={require('./images/background.png')}\n   />\n      </View>\nThe magic here is the zIndex: -1\nNot sure if this is the best approach, but at least it works :). And now i'm having some other issue. I was using the animationStyle prop to set the horizontal animation to show and hide scenes, but on v4 this is now available. \nThis is what is happening: \n\nAs you can see the exit animation is a bit laggy. Any idea of how to solve this?\nThanks!. Debug. @themakerman that's solved. What I need now is to solve the exit animation, when the scene exits (check the gif). Any idea of how to do that? \nShould I use transitionConfig={() => ({ screenInterpolator: something})} ?. @themakerman thanks for answering. Well, i really need the animation like I demonstrated in the gif. I just want to make the exit of the scene more smooth. Any way I can do that @aksonov ? Thanks!. No, same issue... . ",
    "veer3383": "did you get this working?\n. Its just a small hack, not a solution. @esutton  Yes, It can refresh a particular view only once, until and unless that particular view is reloaded again. Router flux didn't seem to help here. I dumped Router flux and used react navigation with Redux in my next React project. ",
    "hawx1993": "yes,it works.   . ",
    "jota-info": "hawx1993 how did you solve this?. ",
    "jomaint": "For those whos looking for a temporary solution:\nAdd this right after Actions.popTo\nActions.refresh({ propName: value })\nHope it helps someone. ",
    "VicFrolov": "Same issue here. ",
    "EthanDM": "\nFor those whos looking for a temporary solution:\nAdd this right after Actions.popTo\nActions.refresh({ propName: value })\nHope it helps someone\n\nFYI for anyone using the RNRF v4.x (non beta) with React Navigation 2.0, you'll need to wrap Actions.refresh({ propName: value }) in a setTimeout for it to work:\nActions.popTo('scene'); setTimeout(() => Actions.refresh({ propName: value }));\n. @aksonov @daviscabral I'm having this issue as well and I think I've narrowed it down:\nonBackPress = () => navigationStore.pop();\nhttps://github.com/RNRF/react-native-router-flux/blob/master/src/Router.js#L36\ncalls:\npop = ({ timeout, key, ...params } = {}) => {\n    const res = filterParam(params);\n    if (timeout) {\n      setTimeout(() => this.pop(params), timeout);\n    } else {\n      this.dispatch(NavigationActions.back({ key }));\n      if (res.refresh) {\n        this.refresh(res.refresh);\n      }\n    }\n    return true;\n  };\nhttps://github.com/RNRF/react-native-router-flux/blob/master/src/navigationStore.js#L952\nThis issue is that it needs to return false if the states are equal to exit the app, like it did with with 4.0.0 beta's:\nreturn !isEqual(previous, getActiveState(this.state));\nhttps://github.com/RNRF/react-native-router-flux/blob/4.0.0-beta.31/src/navigationStore.js#L1040\nEdit: Making this change seems to be resetting the navigation state but not killing the whole app.\nEdit2: ^ That might be unrelated as I am having that issue with the home button too.. I am also having this issue. I was previously on 4.0.0-beta.28 which used React Navigation 1.5 and worked fine. I am now trying to upgrade to 4.0.5 to support iPhone XS Max etc.\nI'm not sure why there is a closed issue on this - it's definitely a bug.. ",
    "douglasheldpacito": "I had that issue\n\"dependencies\": {\n    \"@expo/vector-icons\": \"^9.0.0\",\n    \"axios\": \"^0.18.0\",\n    \"expo\": \"^32.0.0\",\n    \"moment\": \"^2.23.0\",\n    \"native-base\": \"^2.10.0\",\n    \"qs\": \"^6.6.0\",\n    \"react\": \"16.5.0\",\n    \"react-moment\": \"^0.8.4\",\n    \"react-native\": \"https://github.com/expo/react-native/archive/sdk-32.0.0.tar.gz\",\n    \"react-native-router-flux\": \"^4.0.6\"\n  }\n```\nWarning: Can't call setState (or forceUpdate) on an unmounted component. This is a no-op, but it indicates a memory leak in your application. To fix, cancel all subscriptions and asynchronous tasks in the componentWillUnmount method.%s, \n    in NotaFiscal (at navigationStore.js:448)\n    in Wrapped (at SceneView.js:9)\n    in SceneView (at StackViewLayout.js:478)\n    in RCTView (at View.js:44)\n    in RCTView (at View.js:44)\n    in RCTView (at View.js:44)\n    in AnimatedComponent (at screens.native.js:59)\n    in Screen (at StackViewCard.js:42)\n    in Card (at createPointerEventsContainer.js:26)\n    in Container (at StackViewLayout.js:507)\nStack trace:\n  node_modules\\react-native\\Libraries\\YellowBox\\YellowBox.js:59:8 in error\n  node_modules\\react-native\\Libraries\\Renderer\\oss\\ReactNativeRenderer-dev.js:619:8 in warningWithoutStack\n  node_modules\\react-native\\Libraries\\Renderer\\oss\\ReactNativeRenderer-dev.js:13205:6 in warnAboutUpdateOnUnmounted\n  node_modules\\react-native\\Libraries\\Renderer\\oss\\ReactNativeRenderer-dev.js:14683:33 in scheduleWork\n  node_modules\\react-native\\Libraries\\Renderer\\oss\\ReactNativeRenderer-dev.js:7700:17 in enqueueSetState\n  node_modules\\react\\cjs\\react.development.js:364:31 in setState\n  imports\\ui\\Screens\\NotasFiscais\\NotaFiscal.js:38:26 in \n  imports\\database\\Database.js:286:25 in \n  node_modules\\@expo\\websql\\lib\\websql\\WebSQLTransaction.js:70:30 in \n  node_modules\\expo\\build\\SQLite.js:16:21 in \n```. ",
    "delia-m": "I was hack around of same issue.. \nTitle color is for title text on the top, \nfor tab label, use need to use inactiveTintColor and activeTintColor\ncheck API. You look have typo in your code.\nIf you want to return profile component\nyou should do like this (change curly brackets)\nActions.refresh({ renderLeftButton: () => (profile) })\nrenderLeftButton: () => { profile } won't return profile . Pass some value as a prop on refresh rather than pass function itself\ntry this \nrenderRightButton={(props) =>  { \n    console.log(props);\n    // you can handle return components here by props\n    return (<DrawIcon />)\n}}\nand refresh it with your own prop\nActions.refresh({ extraProp: 'refresh' });. leftButtonImage shouldn't be a function...\ntry this leftButtonImage={require('./assets/image.png')}. try swipeEnabled={false} this works for me.\nhttps://github.com/aksonov/react-native-router-flux/blob/master/docs/API.md#tabs-tabs-or-scene-tabs. Not sure you want this, but you could try popTo()\nhttps://github.com/aksonov/react-native-router-flux/blob/master/docs/API.md#actions. If you have container to pass props to component,\nyou need to check props in render() of container and pass them to components. Not sure it's my issue is related with this, \nbut I have similar issue. props doesn't pass into component with Actions\nThis worked in 4.0.0-beta.32 and doesn't work after I update to 4.0.1\nFor example \ncall Actions.profile({ reset: true });\nand this.props.reset in profile component is never true\nI tried with 4.0.2 already but it doesn't work neither.\n. I realised that this is happening only I called more than once in parallel from same action.\nResolved as action navigate on right state. ",
    "sofaws": "I have the same issue. \nHow shoud i use wrapBy? \nThanks. ",
    "megabayt": "Same issue here. ",
    "farkob": "oops it was supposed to be inside the fork sorry. ",
    "aronse": "@aksonov @Blapi any update on this?. ",
    "MasterDaveh": "Hey @Blapi, any updates on this? :). ",
    "sambwest": "To anyone who stumbles on to this thread - to get the old direction= behaviour back you can just add the following to your root scene... :)\nimport CardStackStyleInterpolator from 'react-navigation/src/views/CardStack/CardStackStyleInterpolator';\n```\n...\n ({\n        screenInterpolator: (props) => {\n            switch (props.scene.route.params.direction) {\n                case 'vertical':\n                    return CardStackStyleInterpolator.forVertical(props);\n                case 'fade':\n                    return CardStackStyleInterpolator.forFade(props);\n                case 'none':\n                    return CardStackStyleInterpolator.forInitial\n                case 'horizontal':\n                default:\n                    return CardStackStyleInterpolator.forHorizontal(props)\n            }\n        }\n    })}>\n    \n...\n\n...\n```\n. ",
    "ranjithkumar8352": "\nimport CardStackStyleInterpolator from 'react-navigation/src/views/CardStack/CardStackStyleInterpolator';\n\nPath has been changed now. Use import CardStackStyleInterpolator from \"react-navigation-stack/dist/views/StackView/StackViewStyleInterpolator\"; in the latest version.. ",
    "wodCZ": "See this commit: https://github.com/aksonov/react-native-router-flux/commit/03ea875b554d6857289274dea4b3c37b117bebca#diff-06256c97a1b294653af6f5dfc597dcaaR14\nIt already has hitSlop ( documentation ). \nThis change is already present in version you are using, so maybe try tweaking these numbers on your local copy - at least file referenced in link above should be place to start.. You are using version 3.43, which is not supported.\nAlso, steps to reproduce are too generic. Without specific code example (like one created using https://snack.expo.io/) you will probably not get any help.. @aksonov I wasn't an author of the PR I've referenced (@ulentini was). But I'll have a look if I can re-submit that change.. ",
    "wmonecke": "I am having this same issue right now, only that I have 4 Scenes which I want to 'popBack' to.\nThey all have different keys.\nVersion\n\n\"react-native-router-flux\": \"^4.0.0-beta.22\"\n. Thank you, @aksonov! Could you please elaborate more on your answer? I am still stuck on this.. @Blapi Will do, thanks!\n. @Blapi Indeed it does behave as expected. The debug version is just SO much slower. Thank you very much for your help :). @howieyoung  I did this too and helped me exit the app. However I cannot register eventListener to react natives BackHandler. Somehow the callback function does not get called. It works with older RNRF versions.\n\n\"react\": \"16.6.3\",\n    \"react-native\": \"0.57.8\",\n    \"react-native-router-flux\": \"^4.0.6\",\nThis is quiet annoying since I want to NOT exit the app directly (f.e. close a side menu if its opened) depending on the state of my component.. @aksonov  @daviscabral  Any ideas?. ",
    "ulentini": "I just resubmitted the PR, hope it helps.. ",
    "davidgeilfus": "Hi @thirddimensionstudios, did you find a solution to this? I have the exact same problem. Thanks. Thank you @aksonov, I'll have a look at #2115\u2026 Is Example app Redux-based?. ",
    "trevburley": "@davidgeilfus Not really, instead I 'bodged' it temporarily by creating my own state to track the navigation and to dispatch navigation events. Not pretty at all but it gets the job done.. ",
    "hpbl": "I am having the same problem as well :/. ",
    "smyth64": "I solved this issue using my own Header using native-base.. ",
    "kenhkelly": "I'm getting the same behavior. ",
    "PerspectivesLab": "i get the same, but sometimes on other devices its works\ni guess it comes from TabBarBottom.js :\n<TouchableWithoutFeedback\n                key={route.key}\n                testID={testID}\n                accessibilityLabel={accessibilityLabel}\n                onPress={() =>\n                  onPress\n                    ? onPress({ previousScene, scene, jumpToIndex })\n                    : jumpToIndex(index)}\n              >\n                <Animated.View\n                  style={[\n                    styles.tab,\n                    isLandscape && useHorizontalTabs && styles.tabLandscape,\n                    !isLandscape && useHorizontalTabs && styles.tabPortrait,\n                    { backgroundColor },\n                    tabStyle,\n                  ]}\n                >\n                  {this._renderIcon(scene)}\n                  {this._renderLabel(scene)}\n                </Animated.View>\n              </TouchableWithoutFeedback>\nits supposed to send an object, from docs : \nhttps://reactnavigation.org/docs/navigators/tab\n```\ntabBarOnPress\nCallback to handle tap events; the argument is an object containing:\nthe previousScene: { route, index } which is the scene we are leaving\nthe scene: { route, index } that was tapped\nthe jumpToIndex method that can perform the navigation for you\n\n```\ndid you try like this?: \ntabBarOnPress: ( data  ) => {\n                    var previousScene = data.previousScene;\n                    var scene = data.scene;\n                    data.jumpToIndex( scene.index );\n                },\n. ",
    "mtreilly": "\nUse @PerspectivesLab  method, or you can use destructuring like this\ntabBarOnPress: ({scene, jumpToIndex, previousScene}). ",
    "bilalma": "Is there any one can solve this problem i'm also facing this problem.\n. ",
    "Anurag690": "@frangeris  Then how to prevent a scene to go to the upward scene.. @frangeris  I mean how can i prevent going to the previous screen on press of back button?\nAlso, in the doc it is written if we use stack then two navbars can appear but I am using scene in place of stack even then i am getting two nav bars. can you tell me what is wrong here?. ",
    "alexpopa-work": "Set hideNavBar on the root scene and you should be ok. It will hide the main navbar and with it the back button, leaving only your nested scene's navbars.\n. ",
    "kyhnlbyrk": "I had the exact problem. I solved it with a wrapper scene. \n\n\n\n\n\n\n\n\n        </RouterWithRedux>\n\nand, when you are calling that scene, you should write Actions.wrapperScene(). Its already in that way, but I have to do conditional tab change. I.E if(condition) -> open ActivityDetailWrapper else  open tab2 . \n\n Actions.pop() }\n                  rightButtonImage={require('./src/components/img/plus.png')}\n                  hideNavBar={false}\n                  navigationBarStyle={{\n                    ...Platform.select({\n                      android: { marginTop: Constants.statusBarHeight },\n                    }),\n                  }}\n                  back\n                  onBack={() => Actions.pop()} >\n                \n\n\n Actions.popTo('activitiesDrawer')}>\n                \n\n\n Actions.pop() }\n                  rightButtonImage={require('./src/components/img/plus.png')}\n                  back\n                  onBack={() => Actions.popTo('activitiesDrawer')}>\n              \n\n\nThe problem is when I use Actions.jump, and then change the tab, the props is not there.. \nif (response.activity.hasNotes === 0) {\n    parentActivities = ''; //Preview parent activity\n    childActivities =  '';\n    Actions.tabBar({\n     text: text,\n     activity: activity,\n     user: user,\n     sort: sort,\n     childActivities: response.activity.activities,\n     parentActivities: response.activity,\n   });\n\n } else {\n   Actions.tabBar({\n     text: text,\n     activity: activity,\n     user: user,\n     sort: sort,\n     childActivities: response.activity.activities,\n     parentActivities: response.activity,\n   });\n }\n\nOkay here. Now it goes tabBar, but when I write\nActions.jump('activityDetail', ({ someProps });\n\nsomePropbs do not send to the other tabs. . As I said, I need open the tabs conditionally.. if response.activity.hasNotes equals 0, then I need to go activityDetail. if not I need to go tabBar... Ok, I will try thank you !. @aksonov do you know this kind of issue? I need urgent help... <Scene\nkey = \"tabBar\"\n            tabs\n            tabBarPosition={'bottom'}\n            activeTintColor=\"#b78300\"\n            labelStyle={styles.labelStyle}\n            tabBarStyle={styles.tabBar}\n            onRight={null}\n            rightButtonImage={null}\n          >\n              <Scene key=\"activitiesMain\" component={Activities} hideNavBar={true} headerTintColor=\"#fff\">\nLike this, I pass a prop to the tabBar, but I can not read that prop in activitiesMain. issue #3049.zip\nThis the issue that I was talking about. You can find the app in the link. The app is on Expo..  It created with create-react-native-app code. node modules are not in the file.. Hmm ok. Well, any roadmap for this maybe ? When will it be released?. ",
    "davidwadge": "Also having this issue with react-native: 0.48.4 / react-native-router-flux: 4.0.0-beta.22, yet to find a workaround either.. I've finally managed to stop my component mounting twice by adding type={ActionConst.REPLACE} onto the scene in my routes file.\nActions.create(\n    <Scene navBar={NavigationBar} hideNavBar>\n        <Stack key=\"PreLoginStack\">\n            <Scene key=\"Home\" component={Home} type={ActionConst.REPLACE} hideNavBar/>\n        </Stack>\n    </Scene>\n).\n",
    "vijaya06": "Also having this issue with react-native: 0.54.0/ react-native-router-flux: 4.0.0-beta.28. . ",
    "KELiON": "Ok, I found solution. If anyone interested: we can group content of first Scene into another Stack and add List and ListItem to that stack, like this:\n```jsx\n\n\n    { / ... /}\n    \n\n\n\n\n\n        { / three more tabs here/ }\n      \n</Stack>\n{ /* ... */ }\n\n\n\n```. ",
    "tal952": "Actually, i found a solution.\nIf i set 'lazy' to the top bar, it just works.\nAnother solution is to set for one of the bars:\njavascript\nswipeEnabled={false} animationEnabled={false}\nIs that how i suppose to use it?. ",
    "BatDroid": "@aksonov would please tell how to do it?. @shukerullah thanks but it seems that onEnter onExit is added to beta.27 but neither of them works even if i want to call them like this its not working \n X.onEnter()}/>. ",
    "bm-software": "@Blapi I've \"solved\" the issue using classic react-navigation TabNavigator so If you could investigate on this I would really appreciate :). I've created a new PR for this.. I notice that the problem is cause by setting type={SceneType.RESET as ActionConstShort} on signIn scene.\nWhy is this happening? I really need to be able to set type reset in signIn scene. \nCould anyone help me?\nMOREOVER\nI'm experiencing some problems with my \"autologin\" logic. I have the following code in my root component: \n...\n\nexport default class App extends Component<Props, State> {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            isStoreLoading: false,\n            store: store\n        }\n    }\n\n    ...\n\n    autoLogin() {\n        if (authSelectors.isAuthInvalidOrExpired(store.getState())) {\n            authService.clearAuth().then(() => {\n                Navigation.signIn()\n                store.dispatch(authActionCreators.update(null))\n            })\n        } else {\n            authService.refresh().then((auth: IAuth) => {\n                Navigation.home()\n                store.dispatch(authActionCreators.update(auth))\n            }).catch(() => {\n                Navigation.signIn()\n            })\n        }\n    }\n\n    onBeforeLift = () => {\n        console.log('PersistGate:onBeforeLift')\n\n        this.autoLogin()\n        this.setState({isStoreLoading: false})\n    }\n\n    render() {\n        return (\n            <Root>\n                <StatusBar\n                    backgroundColor={config.style.colors.primary}\n                    barStyle='light-content'\n                    translucent={true}\n                />\n                <Provider store={this.state.store}>\n                    <PersistGate\n                        loading={<SplashScreen />}\n                        onBeforeLift={this.onBeforeLift}\n                        persistor={persistor}>\n                        <AppRouter />\n                    </PersistGate>\n                </Provider>\n            </Root>\n        )\n    }\n}\n\nand this is the AppRouter:\n...\n\nconst onBackPress = () => {\n    let goBackOnly: boolean = ['home', 'splash', 'signIn']\n        .every((scene: string) => Navigation.currentScene !== scene)\n    Navigation.pop()\n    return goBackOnly // return 'false' to close app and 'true' otherwise\n}\n\n// const RouterWithRedux = connect()(Router as any)\nconst createReducer = (params) => {\n    const defaultReducer = new Reducer(params)\n    return (state, action) => {\n      return defaultReducer(state, action)\n    }\n}\n\nconst stateHandler = (prevState, newState, action) => {\n    console.log('onStateChange: ACTION:', action)\n}\n\nconst getSceneStyle = () => ({\n    shadowOpacity: 1,\n    shadowRadius: 3\n})\n\n// on Android, the URI prefix typically contains a host in addition to scheme\nconst prefix = Platform.OS === 'android' ? 'app://app/' : 'app://'\n\n// transitionConfig={() => ({screenInterpolator: CardStackStyleInterpolator.forHorizontal})}\nconst scenes = Navigation.create(\n    <Overlay key='overlay'>\n        <Modal key='modal' hideNavBar transitionConfig={() => ({ screenInterpolator: CardStackStyleInterpolator.forHorizontal })}>\n            <Lightbox key='lightbox'>\n                <Stack key='root' navigationBarStyle={sharedStyles.header} titleStyle={{alignSelf: 'center'}}>\n                    <Scene key='landing' component={LandingScreen} initial\n                        type={SceneType.RESET as ActionConstShort}\n                        hideNavBar/>\n                    <Scene key='signIn' component={SignInScreen} init\n                        // type={SceneType.RESET as ActionConstShort}\n                        hideNavBar />\n                    <Scene key='home' component={HomeScreen} init\n                        // type={SceneType.RESET as ActionConstShort}\n                        title={config.app.name}\n                        titleStyle={sharedStyles.headerTitle}\n                        renderLeftButton={null}\n                        renderRightButton={() => <HomeHeaderRight onAccount={() => {Navigation.account()}} onAbout={() => {Navigation.about()}} />}/>\n                    <Scene key='account' component={AccountScreen}\n                        title='Gestione Account'\n                        titleStyle={sharedStyles.headerTitle}\n                        headerTintColor='white'/>\n                </Stack>\n\n                {/* <Scene key='login' component={LoginLightbox}\n                    title='Accedi'\n                    titleStyle={sharedStyles.headerTitle}/> */}\n            </Lightbox>\n\n            <Scene key='login' component={LoginScreen}/>\n            <Scene key='about' component={AboutModal}/>\n        </Modal>\n\n        <Scene component={MessageBar} />\n    </Overlay>\n  )\n\n// https://github.com/aksonov/react-native-router-flux/blob/master/docs/API.md\nconst AppRouter: StatelessComponent<{ dispatch }> = ({ dispatch }) => (\n    <Router createReducer={createReducer}\n        scenes={scenes}\n        backAndroidHandler={onBackPress}\n        onStateChange={stateHandler}\n        getSceneStyle={getSceneStyle}\n        uriPrefix={prefix}/>\n)\n\n...\n\nLogically, if I open the app and the user is not logged in the signIn scene is loaded (this works).\nIf the user is logged in the autoLogin method should redirect to the home scene with Navigation.home()  but this doesn't happen and the initial screen (landing) is loaded.\nAny help? :(. ",
    "morfsys": "Use Actions.refresh. You are probably using a custom NavBar and inside it some code such as Actions.pop()\nYou must change this code to Actions.pop only\nLet me know if that helps.. ",
    "LaloHao": "Not with router-flux. \nI switched entirely to react-navigation, which is what router-flux is based on.\nIf you're interested, here is what i did:\njs\nimport React, { Component } from 'react';\n...\nimport Router from './Router.js';\n...\n            <Provider store={store}>\n              <Router/>\n            </Provider>\nInstead of Stacks and Scenes create your own router:\nRouter.js\n```js\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { StackNavigator } from 'react-navigation';\nimport LoginScreen from './LoginScreen';\nimport ForgotPasswordScreen from './ForgotPasswordScreen';\nimport TodoScreen from './TodoScreen';\nimport TodoScreenWithTasks from './TodoScreenWithTasks';\nconst Main = StackNavigator(\n  {\n    Todo: {screen: TodoScreen},\n    TodoWithTasks: {screen: TodoScreenWithTasks},\n  }, {headerMode: () => null}\n);\nconst Auth = StackNavigator(\n  {\n    Login: {screen: LoginScreen},\n    ForgotPassword: {screen: ForgotPasswordScreen},\n  }, {headerMode: () => null}\n);\nexport const Router = StackNavigator(\n  {\n    Auth: {screen: Auth},\n    Main: {screen: Main}\n  }, {headerMode: () => null}\n);\nimport { addNavigationHelpers } from 'react-navigation';\nimport {\n  Sidebar,\n  Colors,\n} from './components';\n@connect(\n  ({ router }) => ({\n    nav: router\n  })\n)\nexport default class App extends Component {\n  constructor(props){\n    super(props);\nthis.state = {\n  isOpen: false\n};\n\n}\nrender() {\n    return (\n      \n\n\n\n\n    );\n  }\n};\n```\nSidebar.js\n```js\nimport React, {Component} from 'react';\n...\nclass Menu extends Component {\n    render () {\n        return (\n            \n\n                Test\n              \n\n        );\n    }\n}\nimport Drawer from 'react-native-drawer';\nimport {\n  sidebarOpen,\n  sidebarClose,\n} from '../actions';\nimport { connect } from 'react-redux';\n@connect(\n  ({ sidebar: {\n    isEnabled,\n    isOpen\n  } }) => ({\n    isEnabled,\n    isOpen\n  }), {\n    sidebarOpen,\n    sidebarClose,\n  }\n)\nexport class Sidebar extends Component {\n  render () {\n    return (\n      }\n        tapToClose={true}\n        openDrawerOffset={0.2}\n        panCloseMask={0.2}\n        negotiatePan={true}\n        tweenHandler={Drawer.tweenPresets.parallax}\n        >\n        {this.props.children}\n      \n    );\n  }\n}\n```\nOf course the @connect decorator is optional just like the redux state handling the sidebar, you could use a singleton/global variable\nThe react-navigation documentation is pretty good IMO. ",
    "kckunal2612": "So is there really no way we can add this animation (slide content to right) using react-native router flux ? Because my production app depends wholly on Flux and I don't want to make so many changes to the architecture just for the sake of adding one animation.. ",
    "iCodePup": "Maybe someone can tell me how can i submit one form with props inside my component from a button inside my custom navbar ?\nSo, maybe i can access all form props in my component with Actions.refs.MyComponent and submit form with a method inside navbar ?\nShould i use redux/mobx or  native react-router-flux can do the trick ? \n. Hello @markmorcos ,no i put the navigation bar component directly into the main component... But i think the best way is to use redux/ mobx . Btw i am not using rnrf anymore... ",
    "markmorcos": "@iCodePup did you manage to reach a solution? I am facing the same problem and I'm not sure what is the best practice.. @iCodePup That's what I ended up doing; adding the navigation bar component in my component. Can you explain how it could be done using Redux? I need to pass values from my component's React state to the Redux action.. ",
    "Moshikol": "that fixed my issue\nrender() {\n    return (\n      <View style={{flex: 1}}>\n       <Router />\n      </View>\n    );\n  };. @aksonov  I did check the example project but I didn't find a way to use the overlay component only on my scenes that under the tabs parent scene . ",
    "tevatahiti": "It does work with:\n-react-native: 0.50.4\n-\"react-native-router-flux\": \"^4.0.0-beta.24\"\n<Router sceneStyle={{ backgroundColor: '#fff' }}>. I believe the doc for v4 is not yet ready as version is still in beta. Which version do you use? (in version 4.0.0-beta.24 you need to add a parent Stack with key='root' I think). @CoderHar I see onRight={()=>console.log(\"error\")}  in your EmployeeList scene\nThe function should call Actions.EmployeeCreate() (in actionsCreator if you use Redux). ",
    "den666": "thanks @tevatahiti ; now, how i can change the default background or styles on scenes or router, have some documentation for this version. ",
    "CoderHar": "@tevatahiti \ni use 3.43.0 and couldnt find out what the problem is yet\n. i updated my router flux version to 4.0.0 and used stack to wrap up the scenes now  the error is now gone \nbut i could not navigate from EmployeeList to EmployeeCreate using onRight and Actions. @tevatahiti im sorry it was actually used for checking whether the onRight works or not.even if i change onRight to Actions.EmployeeCreate it doesnt work. @Blapi see i want to put my navigation to emplyeecreate in theat onRight part but i couldnt do it with Actions.EmployeeCreate so that i put there a console.. @Blapi Check out the code that i have chenged and the employeeCreate component\n        import React,{Component}from 'react';\n        import { Scene, Router,Actions,Stack } from 'react-native-router-flux';\n        import LoginForm from '../src/LoginForm';\n        import EmployeeList from '../src/EmployeeList'\n        import EmployeeCreate from '../src/EmployeeCreate'\n        import * as actions from './actions'\n        import { connect } from 'react-redux';\n   class RouterComponent extends Component{\n\n       render(){\n        return(\n            <Router sceneStyle={{paddingTop:0}}>\n                <Stack key='root'>\n                    <Scene \n                        key=\"Login\" \n                        component={LoginForm} \n                        title='Login' />\n\n                    <Scene \n                        key=\"EmployeeList\" \n                        component={EmployeeList} \n                        title='EmployeeList'\n                        rightTitle=\"ADD\"\n                        onRight={()=>Actions.EmployeeCreate()}  />\n\n\n                    <Scene \n                        Key=\"EmployeeCreate\" \n                        component={EmployeeCreate} \n                        title='Employee'  />\n\n                </Stack>\n            </Router>\n        );\n    }\n    }\n   /*const mapStateToProps=state=>{\n      return  {authentication:state.authentication}\n    } */\n\nexport default connect(null,actions )(RouterComponent);. import React,{Component} from 'react'\nimport {Text, View} from 'react-native'\n class EmployeeCreate extends React.Component{\n     render(){\n         return(\n            \n         );\n     }\n }\nexport default EmployeeCreate;. @Blapi  the error is the Actions.EmployeeCreate is not a function. @Blapi  could you please be more specific i couldnt get you\n. really really thank you @Blapi  . @Blapi sure . ",
    "eli0shin": "I am having a similar issue. I need to add a handler when leaving a tab, in addition, nested scenes change the status bar color but being that they are still mounted at a higher level when i navigate to another tab the status bar color does not update to the color defined by the new scene.. I realized that using ActionssceneName solves the main problem, however due to components not unmounting when switching scenes I am still having an issue with the statusBar having the color of the original route and not updating due to the component not unmounting.\nI guess my current problem is that I need a handler I can call from within the component when I navigate away from it. ",
    "tjsaini007": "Hello @Blapi , thanks for your instant reply but the provided link #2628 , does not work for me as I am not talking about the default \"Left to Right\" or \"Bottom to Top\" animation provided by react-native-router-flux. All I need is to animate two screens with some blur ,fade, focus in, focus out, bounce etc. effects , which are to be customized at our end. So i need help with some source code or demo regarding the same and this issue can not be closed now as the problem still prevails.. ",
    "glebez": "I had the same issue today and it seems that setting showLabel to true can help with the top navbar. Otherwise it collapses.. ",
    "udarts": "Thanks for your reply.\nI am using: react-native-navbar\nOn the NavigationBar setting the handler (of the leftButton): Actions.pop, but still is causing the revert.. I figured out why the revert is happening, it is because I use a setInterval instead of setTimeout. Now it seems to work.\nCheers,. ",
    "Dorentin1997": "Solved!\nI placed  the duration : 0 to the stack component instead of router. \n. Okay. Can i use this on specific scenes or it`s in general for all scenes ?. I made react-native-router-flux on this version:\n\"react-native-router-flux\": \"^4.0.0-beta.26\"\nIt worked well.. Import this at the file you register scenes. \nimport CardStackStyleInterpolator from 'react-navigation/src/views/CardStack/CardStackStyleInterpolator';\nAnd Add this to transitionConfig={() => ({ screenInterpolator: CardStackStyleInterpolator.forHorizontal })}\nto your stack like this : \n ({ screenInterpolator: CardStackStyleInterpolator.forHorizontal })}> \nEdit :  this error may occur of react-native-router-flux version i had this error before. I am using version \n\"react-native-router-flux\": \"^4.0.0-beta.26\", now and it`s working  perfectly fine.. ",
    "JanidHam": "In my App.js i have this:\nconst profile = <Image source={{ uri: avatar }} style={ styles.profile }/>\n<Stack key=\"mainStack\" hideNavBar>\n          <Scene key=\"main\" component={MainView} hideNavBar={false}\n            navigationBarStyle={{backgroundColor: '#5cd9ff'}}\n            title={'Amarentas'}\n            renderRightButton={profile}\n            renderLeftButton={profile}\n          />\n        </Stack>\nand the left button shows fine, but if i try to change the left button in other component with \nconst profile = <Image source={{ uri: 'uriofOtherImage' }} style={ styles.profile }/>\nActions.refresh({ renderLeftButton: () => {profile} })\nis not working. I already tried like you said and nothing :(\n\n. Thanks !! it work fine \ud83d\udc4d . ",
    "AmeerTgh": "please review!. yes, swipe back on rtl layout not work, only tap on back button work. ",
    "samcole1992": "I also experienced this, add hideNavBar to root should fix the double nav bar. See also #2375. ",
    "zhaonian": "maybe try this prop rightButtonStyle={{ right: 0 }}?. ",
    "ilteoood": "+1 here. ",
    "russellgoldman": "Got this issue but fixed it with {{ marginLeft: 5, marginRight: 5 }} (doesn't have to be 5, just something to balance out the marginLeft shift). ",
    "quoc-axiadids": "I apologize, that is a typo in my own writing. The actual code is spelled correctly. \nYes, I can navigate properly. Everything worked fine until I integrated Push Notifications and tested opening the application in the background.. I override the onMessageReceived function in Java and just print the message.\n@Override\npublic void onMessageReceived(RemoteMessage remoteMessage) {\nSystem.out.println(\"Test\" + remoteMessage.getNotification());\n}\nThese are the results in the following states:\nforeground - Message is received and seen in logcat\nbackground w/o Drawer - Application is opened successfully and message is not received through the onMessageReceived method.\nbackground w/ Drawer - Application is opened and throws \"... no route defined for key0 Must be one of key3...\"\n*Note every additional time I try to open the application via push notification key0 increments (key1, key2...). Another experiment I did was creating a custom drawer component using react-native-drawer.\nI wrapped the <Router> in a custom-drawer component, and it works fine.\nIt could be an implementation problem that I have, because I noticed that once I bring the app to the background from anything other than the initial Scene. I will also get the same \"... no route defined for key0\" message.\n*** update - after removing the Drawer component again, I was able to access the correct scene from the background. There seems to be something with nesting scenes into a drawer component.\nI would prefer not to expand my dependencies if react-native-router-flux already has logic to support a drawer.\n. After some monkey testing, I seem to have figured out that the <Drawer /> component also requires a key property..\nOnce I place <Drawer key=\"drawer\">...</Drawer> the application opened as intended. Closing the issue.. ",
    "amanbadhan": "I am facing the same issue. :(. HI I am posting code here.\nimport React from 'react';\nimport { StyleSheet, Text, View, Image, TouchableOpacity } from 'react-native';\nimport {\n  Scene,\n  Router,\n  Stack,\n  Drawer,Actions,ActionConst\n} from 'react-native-router-flux';\nimport login from './login';\nimport signup from './sign';\nimport option from './option';\nimport Welcome from './Welcome'\n import side from './side';\nimport NavigationDrawer from './NavigationDrawer';\nexport default class App extends React.Component {\n  render() {\n    return (\n      \n\n             {  }\n        \n\n\n       {/  /}\n   <Scene key=\"signscreen\" component={signup} hideNavBar={true} />\n      <Scene key=\"loginscreen\" component={login} hideNavBar={true} />\n\n\n\n\n      {/* </Drawer> */}\n    </Scene>\n    </Scene>\n    </Scene>\n  </Router>\n);\n\n}\n}\nSecond component where we call actions is mentioned below;\nimport React from 'react';\nimport { StyleSheet, Text, View ,Image,TouchableOpacity,AsyncStorage } from 'react-native';\nimport {\n    Scene,\n    Router,\n    Stack,\n    Actions\n  } from 'react-native-router-flux';\n // import option from './option';\nexport default class side extends React.Component {\n  abc()\n  {\n    //AsyncStorage.clear();\n    console.log(\"aman\");\n    Actions.option();\n  }\nrender() {\n      console.log(\"in side drawer\");\n    return (\n  <View style={styles.container}>\n\n  <Text>Hello</Text> \n  <TouchableOpacity onPress={()=>Actions.option()} activeOpacity={0.8} style={{ flexDirection: 'row', justifyContent: 'space-between' }}>\n      <Text>\n      Dummy\n      </Text>\n\n    </TouchableOpacity>\n  </View>\n);\n\n}\n}\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#706c69',\n    alignItems: 'center',\n    justifyContent: 'center',\n},\n});\n. @Blapi  Sorry I forget to mentioned that.Kindly check below mentioned missing part of the code\nimport React from 'react';\nimport { StyleSheet, Text, View ,Image,TouchableOpacity,AsyncStorage} from 'react-native';\nimport {\n    Scene,\n    Router,\n    Stack,\n    Actions\n  } from 'react-native-router-flux';\n  import Drawer from 'react-native-drawer';\n  import NavigationDrawer from './NavigationDrawer';\nexport default class option extends React.Component {\n    _onPressButton()\n    {\n        //Actions.loginscreen();\n}\ncomponentWillMount()\n{\n  AsyncStorage.clear();\n    AsyncStorage.getItem(\"NameKey\").then((value) => {\n        console.log(\"\" + value);\n        debugger;\n        if (value != null) {\n            alert('Welcome '+ value+ 'You signed in')\n        }\n    })\n}\n\n_onpressign()\n{\n  //AsyncStorage.clear();\n  Actions.signscreen();\n}\n\nrender() {\n    return (\n      \n Actions.refresh({ key: 'navigationdrawer', open: value => !value })}>\n         Click \n            {/  /}\n          \n  <Image style= {{width :300,height:300}}\n      source={require('./img/lion.png')}\n\n    />\n    <TouchableOpacity onPress={this._onPressButton}>\n      <Image style= {{width :200,height:49,marginTop:80}}\n        source={require('./img/in.png')}\n      />\n    </TouchableOpacity>\n    <TouchableOpacity onPress={ this._onpressign}>\n      <Image style= {{width :200,height:49,marginTop:10}}\n        source={require('./img/up.png')}\n      />\n    </TouchableOpacity>\n  </View>\n);\n\n}\n}\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#706c69',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n. ```\nimport React from 'react';\nimport { StyleSheet, Text, View, Image, TouchableOpacity } from 'react-native';\nimport {\n  Scene,\n  Router,\n  Stack,\n  Drawer, Actions, ActionConst\n} from 'react-native-router-flux';\nimport login from './login';\nimport signup from './sign';\nimport option from './option';\nimport Welcome from './Welcome'\nimport side from './side';\nimport NavigationDrawer from './NavigationDrawer';\nexport default class App extends React.Component {\n  render() {\n    return (\n      \n\n          {}\n          \n\n\n              {/  /}\n          <Scene key=\"signscreen\" component={signup} hideNavBar={true} />\n          <Scene key=\"loginscreen\" component={login} hideNavBar={true} />\n\n\n\n\n          {/* </Drawer> */}\n        </Scene>\n      </Scene>\n    </Scene>\n  </Router>\n);\n\n}\n}\n```. ",
    "RadhaSwathi": "<Drawer\n                hideNavBar\n                key=\"drawer\"\n                contentComponent={DrawerContent}\n                drawerImage={MenuIcon}\n                drawerWidth={300}\n<Scene key='ComplaintDetails' component={ComplaintDetails} title='Complaint Details' /\n              </Drawer\nI have closed all tag but my code doesnt appear with that here so i have removed it. index.txt\n. That issue is fixed. If I use my scene component outside drawer it works . It doesn't work inside drawer component. . \nI use Actions.tabbar() and it take me to first tab. I can directly switch to my second one by clicking tab2 . ",
    "Selvamhibiz": "I have attached my app.js and registration.js source code. Also check with the attached screenshots.  I can display subviews without router flux in both iOS and android (Screenshot without Router Flux by having \u201cRegistration\u201d @ line.no 37 in App.js). If i set registration view as initial view in router class,  the subviews are not displayed in android (Screenshot with Router Flux by having \u201cRoutes\u201d @ line.no 37 in App.js). But still it works fine in iOS without any issues.\napp.docx\nregistration.docx\n\n\n. import React, { Component } from 'react';\nimport {Router,  Stack, Scene} from 'react-native-router-flux';\nimport Login from './pages/Login';\nimport Registration from './pages/Registration';\nimport Home from './pages/Home';\nexport default class Routes extends Component<{}> {\nrender() {\n    return (\n        <Router>\n            <Stack key=\"root\" hideNavBar={true} >\n              <Scene key=\"login\" component={Login} title=\"Login\"/>\n              <Scene key=\"register\" component={Registration} title=\"Register\" initial={true}/>\n              <Scene key=\"home\" component={Home} title=\"Home\" />\n               </Stack>\n        </Router>\n)\n\n}\n}. Added as per your instruction. But, now it throws an error stating as \"Undefined is not an object. evaluating 'child.props.clone\"\n. Routes.js\nimport React, { Component } from 'react';\nimport {Router,  Stack, Scene, Reducer} from 'react-native-router-flux';\nimport Login from './pages/Login';\nimport Registration from './pages/Registration';\nimport Home from './pages/Home';\nimport AddCoverage from './pages/AddCoverage';\nconst reducerCreate = (params) => {\n  const defaultReducer = new Reducer(params)\n  return (state, action) => {\n    console.log('Action :', action)\n    console.log('State :', state)\n    return defaultReducer(state, action)\n  }\n}\nexport default class Routes extends Component<{}> {\nrender() {\n    return (\n        <Router>\n\n            <Stack key=\"root\" hideNavBar={true} >\n\n                createReducer={reducerCreate}\n              <Scene key=\"login\" component={Login} title=\"Login\"/>\n              <Scene key=\"register\" component={Registration} title=\"Register\" initial={true}/>\n              <Scene key=\"home\" component={Home} title=\"Home\" />\n              <Scene key=\"addCoverage\" component={AddCoverage} title=\"AddCoverage\"/>\n            </Stack>\n        </Router>\n)\n\n}\n}\nApp.js\nimport React, { Component } from 'react';\nimport {\n  StyleSheet,\n  Text,\n  View,\n  StatusBar\n} from 'react-native';\nimport LinearGradient from 'react-native-linear-gradient';\nimport Routes from './src/Routes';\nimport Registration from './src/pages/Registration';\nimport Login from './src/pages/Login';\nimport Home from './src/pages/Home';\nimport AddCoverage from './src/pages/AddCoverage';\nexport default class App extends Component<{}> {\nrender() {\nreturn (\n\n  <LinearGradient colors={['#491ab5', '#3667ad', '#268f95', '#22a790']} style={styles.linearGradient}>\n\n       <View style={styles.container}>\n\n            <StatusBar \n               backgroundColor=\"#1c313a\"\n               barStyle=\"light-content\"\n            />\n\n            <Routes/>\n\n      </View>\n\n  </LinearGradient>\n\n);\n\n}\n}\nconst styles = StyleSheet.create({\ncontainer: {\n    flex: 1,\n    backgroundColor: 'transparent',\n  },\n  linearGradient: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n},\n});\n\n. okay, where should i have to add 'createReducer={reducerCreate}'. As createReducer={reducerCreate} is a prop of Router, let me know, whether i need to add it in  or anywhere else. 'Action :', { type: 'Navigation/INIT' }\n'State :', { index: 0,\n  routes: \n   [ { routeName: 'register',\n       key: 'Init-id-1513248334309-0',\n       params: { title: 'Register', init: true } } ] }. i added \"console.log('SetUp Registration View');\" in render() method of registration component. . yes. okay, can you give any suggestion to fix this . no change in android. still empty screen is showing. But in iOS i can see red square. When i removed this library, i can run my app in both iOS and android.  . okay,. I have run the sample project in my system, seems navigation is working in both android and ios.. Below is my registration screen source code. Kindly check and let me know what i have done wrong. I had already shown my app.js and routes.js code. If required please let me know i will post it again here\nimport React, { Component } from 'react';\nimport {\n  Platform,\n  StyleSheet,\n  Image,\n  Text,\n  Button,\n  TextInput,\n  ScrollView,\n  View,\n  Alert,\n} from 'react-native';\nimport LinearGradient from 'react-native-linear-gradient';\nimport {Actions} from 'react-native-router-flux';\nexport default class Registration extends Component<{}> {\nconstructor(props){\n    super(props)\nthis.state = {\n  firstName: '',\n  lastName: '',\n  email:'',\n  mobile:'',\n  password: '',\n  confirmPassword: '',\n  country:'',\n  state:'',\n  city: '',\n  gender:'',\n  dob:'',\n}\n\n}\nonPress() {\nActions.login();\n}\n_onPressSearchCare() {\n  Alert.alert('Account Exist, Load Login View');\n}\nrender() {\nconsole.log('SetUp Registration View');\nreturn (\n\n  <LinearGradient colors={['#491ab5', '#3667ad', '#268f95', '#22a790']} style={styles.linearGradient}>\n\n  <View style = {styles.baseContainer}>\n\n    <ScrollView showVerticalScrollIndicator = {false} automaticallyAdjustContentInsets={true} contentContainerStyle={styles.contentContainer}>\n\n      <View style = {styles.imageBgView}>\n\n        <Image style={[styles. profileImage, {tintColor: \"#27A19C\"}]} source={{uri:\"/Users/punitha/Documents/Punitha/React Project Workout/Sample/AwesomeProject/assets/camera/camera.png\"}} />\n      </View>\n\n      <TextInput style={styles. fnTextField}\n          placeholder='First Name'\n          placeholderTextColor = '#C4C4C4'\n          underlineColorAndroid='transparent'\n          onChangeText={(text) => this.setState({firstName:text})}\n        />\n\n        <View style = {styles.lineStyle}></View>\n\n        <TextInput style={styles. commonTextField}\n          placeholder='Last Name'\n          placeholderTextColor = '#C4C4C4'\n          underlineColorAndroid='transparent'\n          onChangeText={(text) => this.setState({lastName:text})}\n        />\n\n        <View style = {styles.lineStyle}></View>\n\n\n        <TextInput style={styles. commonTextField}\n          placeholder='Email'\n          keyboardType = 'email-address'\n          placeholderTextColor = '#C4C4C4'\n          underlineColorAndroid='transparent'\n          onChangeText={(text) => this.setState({email:text})}\n        />\n\n        <View style = {styles.lineStyle}></View>\n\n         <TextInput style={styles. commonTextField}\n          placeholder='Mobile'\n          keyboardType = 'phone-pad'\n          placeholderTextColor = '#C4C4C4'\n          underlineColorAndroid='transparent'\n          onChangeText={(text) => this.setState({mobile:text})}\n        />\n\n        <View style = {styles.lineStyle}></View>\n\n        <TextInput style={styles. commonTextField}\n          placeholder='Password'\n          placeholderTextColor = '#C4C4C4'\n          secureTextEntry={true}\n          underlineColorAndroid='transparent'\n          onChangeText={(text) => this.setState({password:text})}\n        />\n\n        <View style = {styles.lineStyle}></View>\n\n\n        <TextInput style={styles. commonTextField}\n          placeholder='Confirm Password'\n          placeholderTextColor = '#C4C4C4'\n          secureTextEntry={true}\n          underlineColorAndroid='transparent'\n          onChangeText={(text) => this.setState({confirmPassword:text})}\n        />\n\n        <View style = {styles.lineStyle}></View>\n\n         <TextInput style={styles. commonTextField}\n          placeholder='United States'\n          placeholderTextColor = '#C4C4C4'\n          underlineColorAndroid='transparent'\n          onChangeText={(text) => this.setState({country:text})}\n        />\n\n        <View style = {styles.lineStyle}></View>\n\n        <TextInput style={styles. commonTextField}\n          placeholder='State'\n          placeholderTextColor = '#C4C4C4'\n          underlineColorAndroid='transparent'\n          onChangeText={(text) => this.setState({state:text})}\n        />\n\n        <View style = {styles.lineStyle}></View>\n\n\n        <TextInput style={styles. commonTextField}\n          placeholder='City'\n          placeholderTextColor = '#C4C4C4'\n          underlineColorAndroid='transparent'\n          onChangeText={(text) => this.setState({city:text})}\n        />\n\n        <View style = {styles.lineStyle}></View>\n\n        <TextInput style={styles. commonTextField}\n          placeholder='Gender'\n          placeholderTextColor = '#C4C4C4'\n          underlineColorAndroid='transparent'\n          onChangeText={(text) => this.setState({gender:text})}\n        />\n\n        <View style = {styles.lineStyle}></View>\n\n\n        <TextInput style={styles. commonTextField}\n          placeholder='Date of Birth'\n          placeholderTextColor = '#C4C4C4'\n          underlineColorAndroid='transparent'\n          onChangeText={(text) => this.setState({dob:text})}\n        />\n\n        <View style = {styles.lineStyle}></View>\n\n        <View style = {styles.buttonContainer}>\n            <Button onPress={this.onPress.bind(this)} title=\"Register\" color=\"#27A19C\" accessibilityLabel=\"Tap on Me\"/>\n        </View>\n\n    </ScrollView>\n\n  </View>\n\n</LinearGradient>\n\n\n);\n\n}\n}\nconst styles = StyleSheet.create({\nlinearGradient: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  baseContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'stretch',\n    backgroundColor: 'transparent',\n    height: Platform.OS === 'ios' ? 900 : 1100,\n    width: Platform.OS === 'ios' ? 375 : 355,\n  },\n  contentContainer: {\n    paddingVertical: 20,\n    justifyContent: 'center',\n    alignItems: 'stretch',\n    backgroundColor: 'transparent',\n    height: Platform.OS === 'ios' ? 900 : 1100,\n    width: Platform.OS === 'ios' ? 375 : 355,\n  },\n  buttonContainer: {\n    backgroundColor: Platform.OS === 'ios' ? '#FFFFFF' : 'transparent',\n    borderRadius: 10,\n    padding:5,\n    marginLeft:60,\n    marginRight:60,\n    marginTop:20\n  },\n  profileImage: {\n    width: 100,\n    height: 100,\n  },\n  imageBgView: {\n    width: 100,\n    height: 100,\n    marginTop: 80,\n    marginLeft: Platform.OS === 'ios' ? 145 : 130,\n    backgroundColor: '#FFFFFF',\n    borderRadius: 50\n  },\n  fnTextField: {\n    fontFamily:'Comfortaa-Regular',\n    fontSize: 18,\n    textAlign: 'left',\n    color: '#FFFFFF',\n    marginTop: 60,\n      marginLeft: 10,\n      marginRight: 10,\n  },\n  commonTextField: {\n    fontFamily:'Comfortaa-Regular',\n    fontSize: 18,\n    textAlign: 'left',\n    color: '#FFFFFF',\n    marginTop: 13,\n      marginLeft: 10,\n      marginRight: 10,\n  },\n  lineStyle:{\n    borderWidth: 0.5,\n    borderColor:'#C4C4C4',\n    marginLeft:10,\n    marginRight:10,\n    marginTop:Platform.OS === 'ios' ? 10 : 3\n  },\n  searchCare: {\n    marginTop: 10,\n  },\n  searchLineStyle:{\n    borderWidth: 0.5,\n    borderColor:'#FFFFFF',\n    marginLeft:164,\n    marginRight:115,\n    marginTop:-7\n  },\n});. Sorry, i cannot add you on my GitHub repository. Shall i give my source code in .zip format?. okay, shall i send only app.js, routes.js and registration.js class file or the entire source code. No i can't make it as public. So, I have sent the source code through email from my mail address (punitha.s.e1@gmail.com). . okay, thanks. ",
    "whyAto8": "Just tried that if i add  \"back\" or \"backTitle\" to this scene, it made it work. Strange, seems like onBack needs another attr to make it working.. ",
    "MatthieuCoelho": "This is still not working on : \"react-native-router-flux\": \"^4.0.6\"\nYou're workaround still works but it is inconvenient when we have dynamic backTitle. ",
    "andidev": "This is just ridiculous, I know React Navigation does not support this but how can that be so? This is a typical use case.\nI tried to use popTo and it works okey expect that using autofocus on TextInputs makes the keyboard jump up and down since the scenes seems to mount and unmount when they are poped.\n@aksonov is it possible to remove scenes from stack in the 3.0 version?. I have this issue in ios devices as well. @daviscabral @aksonov \nCould you reopen this? This is still there in latest release 4.0.6. I have been having this bug a long time know not able to figure out what was triggering it.\nI also found out another situation when this bug occurs. \n1) Open app\n2) Click on a InputText that the keyboard displays\n3) Open drawer\n4) Open new scene from drawer\n5) Close scene with hardware back button\n  (note that this closes both the scene and the drawer, though the scene component never get unmounted, i.e. componentWillUnmount is never called)\n6) Open the drawer again\n7) Try to open a scene from the drawer and it is now not possible\nThis may be related to \nhttps://github.com/facebook/react-native/issues/21316\nI would love to assist further. I could create an example project If needed or test a fix.\n. Okey I just migrated a part of my code to React Navigation and it looks like this issue is there as well (in both rohitgoyal case and my case). One difference though. When closing the scene from drawer (step 4), the opened modal is still visible (so that would somewhat explain that componentWillUnmount is never called).\nSo I guess this is a React Navigation bug.. ",
    "hongwei78": "remove dependencies mobx,mobx-react. It's done.. ",
    "Anandks1993": "I getting the same issue with the following code\n<Router\n                titleStyle={{ color: '#FFFFFF' }}\n                navigationBarStyle={{\n                    backgroundColor: '#2FA5FF',\n                }}\n                sceneStyle={{ backgroundColor: '#F5FCFF' }}\n                backAndroidHandler={this.onBackPress}>\n                <Scene key=\"root\">\n                    <Drawer\n                        title=\"Menu Options\"\n                        key=\"drawer\"\n                        contentComponent={DrawerContent}\n                        drawerWidth={250}\n                        drawerImage={MenuButton}\n                    >\n                        <Scene\n                            headerTintColor=\"#FFFFFF\"\n                            key=\"Home\"\n                            initial\n                            title=\"Home\"\n                            component={Home} />\n                        <Scene\n                            headerTintColor=\"#FFFFFF\"\n                            key=\"pairedDevices\"\n                            title=\"Paired Devices\"\n                            component={PairedDevices} />\n                        <Scene\n                            headerTintColor=\"#FFFFFF\"\n                            key=\"chart\"\n                            title=\"Chart\"\n                            component={TimeSeriesLineChartScreen} />\n                        <Scene\n                            headerTintColor=\"#FFFFFF\"\n                            key=\"blemanager\"\n                            title=\"BLE Manager\"\n                            component={BLEManager} />\n                    </Drawer>\n                </Scene>\n            </Router>\nBut it was working 2 hours before, I installed react-navigation and then I uninstalled immediately, After that I was stuck with this issue.. @Shariaty How did you downgrade react-navigation  particularly? Because it is installed as dependency for react-native-router-flux right ?\n. Okay, for me too now it is working after downgrading react-navigation. Thank you. @shubham81407 Did you check what version of react-navigation is installed ? Now it should work as the version is locked to react-navigation@1.0.0-beta.21.. @shubham81407 Downgrade to react-navigation@1.0.0-beta.21, It will solve the issue.. @shubham81407 I don't know, May be some kind of bug :neutral_face:. Try using ActionConst.REPLACE instead of ActionConst.RESET. #2189 . Yeah you are right, it seems react-navigation's reset is not working well here, you can try push_or_pop and if possible look at 2189 issue you may get solution there. \ud83d\ude03 . ",
    "Shariaty": "I have the same issue here , downgrade to react-navigation v1.0.0-beta.21 solved the problem for now. @Anandks1993 replace the node_modules with one of my older projects that has the react-navigation beta.21 and  router flux \"^4.0.0-beta.24\",  it is a temporary fix.. The error still exist when installing a new fresh router-flux or run npm install !!?\nhow should i install my other packages !!\nmy other package after installation dose not recognize react-native link command , and it says I should run npm install , after that link works but router flux and my drawer crash.. ",
    "padmanabanSampath": "@Balpi thankyou for referencing, i just did it and worked . ",
    "carlosalber24": "Running npm install git+https://github.com/aksonov/react-native-router-flux.git#37c6553 should work temporarily for you. It will install react navigation@1.0.0-beta.21 or do it through the package.json as well.. ",
    "gopaldevra": "Same issue, and the  same library is flagged failed on the npm website.. ",
    "ducnhat": "@ihor \nI found this solution https://github.com/react-navigation/react-navigation/issues/3148#issuecomment-352778884.. ",
    "mjstelly": "Your reply begs the question: When will 4.x be stabilized for production? Hitting a moving target while trying to get an app to market is risky business.\nAlso, upgrading to \"react-native-router-flux\": \"4.0.0-beta.32\" did not fix the problem.\n\n. \"react\": \"16.3.0-alpha.1\",\n\"react-native\": \"0.54.2\",\n\"react-native-button\": \"^2.0.0\",\n\"react-native-message-bar\": \"^1.6.0\",\n\"react-native-router-flux\": \"4.0.0-beta.30\",\n\"react-navigation\": \"1.5.8\"\nI tried the rm -rf node_modules && yarn as mentioned above. I get the same error Unhandled JS Exception: TypeError: addListener is not a function. @Blapi I downgraded from .28 to .27. The app crashes at launch now. So, I don't think that's a viable solution.. ",
    "vibhavagarwal5": "try this drawer component \n                 . Its not a bug @AKMaS but a lack of documentation in this repo and in the example given! . @aksonov do check the request.\nthis solves many problem for beginners (Faced in the example app). ",
    "AKMaS": "@vibhavagarwal5    thanks,it works for me.is it a bug or?. ",
    "tsvetann": "I have the same issue when trying setup a Drawer component.\n<Scene key=\"drawer\" type={ActionConst.REPLACE} component={NavigationDrawer} open={false} > \n                <Scene key=\"home\" component={RecordsListScreen} title=\"Records\" />\n              </Scene>\nError: There is no route defined for key home.\nMust be one of: 'load','login','register','drawer','record'\nNot sure but looks related. ",
    "ryanmr": "I acknowledge this issue is closed, but I wanted to chime in here too. I tried implementing the drawer to divide up routes/screens that should be available as an unauthenticated and authenticated user, but came across this same error. I'm sure there is a technical problem with my setup that caused this. I hope with React Navigation's 1.0 release and stabilization of their feature set make this possible to revisit and possibly fix in the near future.\nThanks again.. I don't know if this will solve your problem. onEnter needs a function reference, while you gave it this.isLogged(isAuth) which resolves to undefined (which is not a function).\nTry this: onEnter={() => this.isLogged(isAuth)}. Note, it is unclear what isAuth is or if it's even in scope.. ",
    "busheezy": "I'm running into this.\nedit: for some reason, <Scene drawer> works.. oh, I'm sorry. I didn't have my comment formatted correctly and my code was invisible. I used <Scene drawer> instead of <Drawer>, I believe.. ",
    "csmtcy": "@busheezy would you mind to share your code ? because i running into the same problem also. Thanks. Still getting the same error . @NSShentu I used your solution and added the new plugin react navigation. It does work. . ",
    "gitsuraj": "same error . ",
    "nachofregeiro": "Do npm i, there was an update on react-navigation\n\n. Sorry I forgot to say, point to the master branch in your package.json until there is a new release.\n\"react-native-router-flux\": \"git+https://github.com/aksonov/react-native-router-flux.git\",. ",
    "bachphuc": "Hi, \nThank you so much! I think I did it wrong :)\nSo sorry about this.. Today, latest version 4.0.0-beta.28 is not working, Beta 27 is working. Anybody can look into it? with new newbie that's really challenge.. ",
    "JJMoon": "For somebody who are unfamiliar npm module system. (me too.)\nDelete yarn.lock and edit package.json as follow.\n\"react-native-router-flux\": \"git+https://github.com/aksonov/react-native-router-flux.git#30f65a5\",\n. Forget it.\nI looked up the source code, and couldn't find the method. I guess it is implemented after 4.0.0 beta.\nI should upgrade to 4.0.X . ",
    "aelallam": "I added hideNavBar in the scene  with the drawer (key = eng) however this hides the navbar of all the children. Why is it treating the drawer as a scene?. I fixed this issue by adding a hideNavBar={false} for each child screen.. A temporary fix is to add the prop hideDrawerButton along with the scenes that have a back prop when the drawer is positioned to the right. . Although this works just fine with left drawer, doing the following to the right positioned drawer  fixed the issue (remove the federal function): \n<Scene key=\"arb\"\n          drawer\n          drawerIcon={<MenuButton />}\n          drawerWidth={200}\n          hideNavBar\n          drawerPosition='right'\n          contentComponent={MenuContentAr}\n        >. @aksonov Please tell me how to resolve this? As you can see my setting button is not an image nor a title. . ",
    "mingca": "Same issue here. ",
    "binonxia": "Same issue here. ",
    "welson327": "same problem for several days @@\"\n\n. ",
    "Maradox-D-Krypt": "Same here and i keep getting an error that says:\nTypeError: undefine is not a function (evaluating \"instant.render()\")\nthe error is located at:\nin Routes(at App.js)\nin RCTView(at View.js:112)\netc...\nIs this a problem relating to this component not working?. ",
    "FarihulR": "Same the problem. How to Fix ?. ",
    "kmatias": "2628.",
    "sohagfaruquebd": "@ajaykumar97 bro it only works if i add it to root.But what if i want to change for a single scene ? . ",
    "Avinashranjan21": "Need to add RCTLinkingIOS in your pod file. It wasn't mention in readme.. ",
    "piubellofelipe": "hey @fatfatson , did you resolve this yet?\nI managed an workaround for this, hope this help you:\nMy idea is to wrap my Router in an external Class, and simply return false from shouldComponentUpdate. it's something like this:\n```\nrender() {\n    return (\n        }\n          tapToClose\n          onClose={() => this.props.closeDrawer()}\n        >\n          \n\n    );\n  }\n}\nclass MyRouter extends Component {\n  shouldComponentUpdate () {\n    // so we keep our state when opening the drawer!!!\n    return false;\n  }\n  render (){\n    return (\n          \n\n              ...\n            \n\n    )\n  }\n}\n```\nNote that I was facing this issue because opening my drawer was unmounting and mounting again any scene that was being rendered in background. Can't tell if my solution is classy at all, but it's working fine for now. @jsrbn I truly recommend using an state management tool like redux for this, will easy things a lot for you. ",
    "DevNamedZed": "Updating the example as per below fixes\n```\n            \n```\nto \n```\n\n```. ",
    "NSShentu": "I add this to Actions.  emmmm...\nfunction resetTo(routeName, params) {\n    const resetAct = NavigationActions.reset({\n        index: 0,\n        actions: [\n            NavigationActions.navigate({routeName: routeName}, {\n                params: params\n            })\n        ]\n    });\n    Actions.dispatch(resetAct);\n}\nActions.resetTo = resetTo;. @sajaddp i setup my project without redux, why still has the addListener problem?. @sajaddp your code is simple enough...  my Router is more complex...  now i just try not to use the Actions.replace .... in my old project, use:\n\"react-native-router-flux\": \"4.0.0-beta.24\",\n \"react-navigation\": \"1.0.0-beta.21\",\nthey work well.. sure , i  find the problem , too.   So, how to deal it. evaluating 'resetAction.actions.map' , undefined is not an object~~~~~   . @Blapi  i  update .28 for Actions.popTo  can be used normally\nHowever .28  Actions.replace is broken\nCan you give me a solution ehhhhhhhhhhhhhhhh. @Blapi \n    \"react\": \"16.0.0\",\n    \"react-native\": \"0.51.0\",\n    \"react-native-router-flux\": \"4.0.0-beta.27\",\n    \"react-navigation\": \"1.0.0-beta.21\",\nreplace function is ok\nwhen in several same page case\uff0cpopTo function is broken.\nwhether my package.json is some wrong?. ",
    "mn7676": "Can you get your router code too? @afilp. ",
    "Michael-xiaojie": "I think we should rewrite the tabBarStyle style. This is manipulating GIF\uff1a\n\nThis is the code\uff1a\n`import { Router, Scene, Actions, Tabs, Stack } from 'react-native-router-flux'\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux'\nimport { connect, Provider } from 'react-redux'\nimport thunkMiddleware from 'redux-thunk'\n// \u5168\u5c40\u5f02\u5e38\u5904\u7406\nimport ErrorUtils from 'ErrorUtils'\nErrorUtils.setGlobalHandler(e => {\n    console.log('\u9519\u8bef\u5904\u7406',e);\n})\nimport React, { Component,PropTypes } from 'react';\nimport {\n  StyleSheet,\n  Text,\n  View\n} from 'react-native';\nimport TabIcon from './app/components/tabIcon'\nimport Index from './app/components/index'\nimport My from './app/components/my'\nimport * as reducers from './app/reducers'\n// http://www.redux.org.cn/docs/api/combineReducers.html\nconst reducer = combineReducers({\n  ...reducers,\n})\nconst RouterWithRedux = connect()(Router)\nconst middleware = [thunkMiddleware]\n// compose(...functions)\u4ece\u53f3\u5230\u5de6\u6765\u7ec4\u5408\u591a\u4e2a\u51fd\u6570 ,\u5f53\u9700\u8981\u628a\u591a\u4e2a store \u589e\u5f3a\u5668 \u4f9d\u6b21\u6267\u884c\u7684\u65f6\u5019\uff0c\u9700\u8981\u7528\u5230\u5b83,http://www.redux.org.cn/docs/api/compose.html\nconst store = compose(\n// http://www.redux.org.cn/docs/api/applyMiddleware.html\n    applyMiddleware(...middleware)\n)(createStore)(reducer)\nexport default class App extends Component<{}> {\nrender() {\n    return (\n        <Provider store={store}>\n            <RouterWithRedux scenes={scenes} >\n            </RouterWithRedux>\n        </Provider>\n    );\n}\n\n}\nconst scenes = Actions.create(\n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n)\nconst styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center',\n      backgroundColor: '#F5FCFF',\n    }\n});\n// \u5982\u679c\u4e0d\u662f\u5f00\u53d1\u73af\u5883\uff0c\u63d0\u793a\u4e3a\u7a7a\nif (!DEV) {\n    global.console = {\n        info: () => {},\n        log: () => {},\n        warn: () => {},\n        debug: () => {},\n        error: () => {},\n    };\n}\n`\nI don't know why some code is missing, I added a picture to fill the code\n\n. ",
    "jamesDZ": "I use this libaray in my code and it is working but only 1st screen is navigating properly. \n2nd and 3rd screen navigating as a drawl. \n. This is Route.js file\nimport React, { Component } from 'react';\nimport {Router,Stack,Scene} from 'react-native-router-flux';\nimport HomeScreen from './Screens/HomeScreen';\nimport LandingScreen from './Screens/LandingScreen';\nimport PhoneRegister from './Screens/PhoneRegister';\nimport OtpScreen from './Screens/OtpScreen';\nexport default class Routes extends Component{\nrender(){\n    return(\n        <Router>\n        <Stack key=\"root\" hideNavBar={true}>\n          <Scene key=\"HomeScreen\" component={HomeScreen} title=\"Home\"/>\n          <Scene key=\"LandingScreen\" component={LandingScreen} title=\"Login\"/>\n          <Scene key=\"PhoneRegister\" component={PhoneRegister} title=\"Register\"/>\n          <Scene key=\"OtpScreen\" component={OtpScreen} title=\"Register\"/>\n          {/* <Scene key=\"home\" component={Home}/> */}\n        </Stack>\n      </Router>\n    )\n}\n\n}\nOn Buttons click I am calling these functions like this :- \nAlready imported this:- \nimport { Actions } from 'react-native-router-flux';\nanonymus(){\n      Actions.LandingScreen()\n  }\nPhoneRregister(){\nActions.PhoneRegister();\n\n}\nfbLogin(){\nActions.OtpScreen()\n\n}\nProblem occuring from Here :- \n\n\n. That is I am not able to identify why it is taking Drawable Menu.. I want it navigate like the previous screens but it is not happening can you help me on that. . ",
    "asd8855": "@14076156deiefyp @recs182  how to solve it?. when I use \"Action.reset(\"xxx\")\",it will show. Did you solve this problem in version 4.0.5? I still had this problem in version 4.0.5\nError: There is no route defined for key main.\nMust be one of: 'root','confirmDialog'\n. @aksonov  Replace 'reset' with 'replace'?. @hsynlove the 'Root' is empty page\uff1f. ths. Did you solve this problem in version 4.0.5? I still had this problem in version 4.0.5. @daviscabral . ",
    "barghi": "same issue here\n\nreact-native: ^0.52.0\nreact-native-router-flux:  ^4.0.0-beta.31. + 1\nsame issue here\nbehavior of android back button is strange\nbut default back button works fine. \n",
    "firdousali86": "Can easily produce this on:\n\"react-native\": \"^0.55.3\"\n\"react-native-router-flux\": \"^4.0.1\". ",
    "mcguiretj": "I am using the same version of RNRF. You can use the focused props...depending on which tab they selected you can use that to highlight or let the user know they selected that specific tab. This is some pseudocode to give you an idea.\n```\nconst TabBarIcon = props => {\n  return (\n    \n      {props.focused ? (\n        \n      ) : (\n        \n      )}\n    \n  );\n};\nconst HomeIcon = props => ;\nconst BrowseIcon = props => (\n  \n);\nconst TechIcon = props => ;\nconst ProfileIcon = props => ;\n```. ",
    "erkrapide": "I see, you are absolutely right. I missed the Tabs (<Tabs> or <Scene tabs>) part. I was using <Scene tabs> construction.. @aksonov could you bump the version, please?. ",
    "maxencehenneron": "Right, but shouldn't we deprecate the old syntax and update the docs to remove all the  ? It's kind of confusing for typescript users . ",
    "NahuelBordon": "Hello again, I really need your help to resolve this, \nI couldn't find anything to fix it.\nDo you have any idea about it ?\n@aksonov . ",
    "DavitVosk": "You can see my code here: \nhttps://gist.github.com/anonymous/ff055125c32f40903842578cc431c6cf\n  . ",
    "melkayam92": "I know I can do that, but it doesn't what I asked for. \nWhat you saying is that for every scene I want the footer I will wrap in that staff, and no , I wanted to do that in  one place. Please look at my example above!. ",
    "ivanquirino": "thanks!. ",
    "cicada1993": "\nI did not find the function guideHomePage in Actions when debugging. ",
    "digitaldangal": "That was redux implementation issue,Sorry for wasting  your time. . ",
    "Jun711": "@Blapi \nIt is the same function as the snippet above. \n```\n onBackPress() {\n    console.log('Actions.state: ', Actions.state)\n    if (Actions.state.index !== 0) {\n      Actions.pop();\n      return true;\n    }\nreturn false;\n\n}\n```\nand, yes, I have tried with 2 scenes in the second stack, the first scene on the second stack was duplicated but the second scene on the second stack was not duplicated. The structure is as below:\n```\n<Router\n  backAndroidHandler={this.onBackPress.bind(this)}\n\n<Stack\n    hideNavBar\n    key='root'\n    titleStyle={{alignSelf: 'center'}}\n<Scene key='home' component={HomeContainer} title='home' initial/>\n<Stack\n      hideNavBar\n      key='root'  // typo: it was '_about'\n      titleStyle={{alignSelf: 'center'}}\n\n      <Scene hideNavBar key='about' component={AboutContainer} title='about' />\n      <Scene\n        hideNavBar={false}\n        key='faq'\n        component={FaqContainer}\n        title='FAQ'\n        titleStyle={{alignSelf: 'flex-start'}}\n        back={true}\n      />\n</Stack>\n\n\n\n```. @Blapi sorry, scenes prop was because all the scenes were imported like the following so I forgot to remove them when I put them together. That was also a mistake when I tried to reproduce the error. The key of the stack can be different and still produce duplicated first scene. \n\n```\nimport scenes from '../routes/scenes';\n\n``\n I am navigating to the first scene on the second stack.Actions.about` . yes, that is the problem. Thanks @Blapi . @dwilt You probably need to have a key prop for Tab\nCheck out the example\nhttps://github.com/aksonov/react-native-router-flux/blob/master/Example/Example.js. ",
    "sadi304": "Update:\n  BETA.27\nSame goes for OnEnter\n. ",
    "fonov": "<Provider store={store}>\n                <RouterWithRedux uriPrefix={'google.ru'}>\n                    <Lightbox>\n                        <Scene key=\"root\" hideNavBar hideTabBar>\n                            <Scene key='Institution' component={Institution} path={\"/institution/:id/\"} />\n                        </Scene>\n                        <Scene key=\"SpinnerLightbox\" component={SpinnerLightbox} />\n                    </Lightbox>\n                </RouterWithRedux>\n            </Provider>. const RouterWithRedux = connect()(Router);. ",
    "EvianZhow": "@aksonov I've encountered this issue. Since @mounlion doesn't provide any useful information or its scenario, I tell mine. \nMy iOS app was registered with two URL schema, one called myApp:// and another called stripeOrAnythingElsePayment://, in App component, I registered myApp:// prefix and it handles all the routing logic in my own app, that's fine. But then coming to payment, my app jump out into third-party to finish its payment process. After success, third-party will call stripeOrAnythingElsePayment:// to return to my own App, and at that time, app crashed due to this issue. \nSimple to reproduce, just create a project with two different URL schema and register App with one, then open another using xcrun simctl openurl booted \"ANOTHER_URL://. \nHope it helps. . @Blapi Please have a glimpse at what I've explained. . @Blapi Fixed in latest version. @simonso3 I encountered this when calling Actions.refresh() both on componentDidMount and componentWillReceiveProps. Former is to set a default navigation bar component, latter is to update it. If Actions.refresh() fired too quickly, RNRF will loop in Navigation/SET_PARAMS and cause app to freeze. . Just some snippet from my code base. \nFirst try to wrap the BaseLightbox into TouchableWithoutFeedback. Then customized the _panResponder to handle the correct touch event so that if user clicked inside the lightbox, it won't got disappeared. \n```\nrender() {\n  const { clickBackgroundToDismiss = true } = this.props;\nreturn (\n    \n\n        {this._renderLightBox()}\n      \n\n  );\n}\n```\n```\nconstructor(props: Props) {\n  super(props);\nthis.state = {\n    opacity: new Animated.Value(0),\n    _panResponder: PanResponder.create({\n      onStartShouldSetPanResponder: this._handleStartShouldSetPanResponder,\n    }),\n  };\n}\n_handleStartShouldSetPanResponder = (e: Object, gestureState: Object): boolean => {\n  return true;\n}\n```\nAnd insider _renderLightBox, inject {...this.state._panResponder.panHandlers} props into the most upper component. . I thought I've made it clear. \nPanHandlers should works like this: \n_renderLightBox = () => {\n    return (\n      <View\n        {this.state._panResponder.panHandlers}>\n        {children}\n        <Button title={strings('text.close')} onPress={this.closeModal} />\n      </View>\n    );\n  }. Naive fix here: https://github.com/EvianZhow/react-native-router-flux/tree/fix-multi-url-types. @m-vdb @aksonov https://github.com/aksonov/react-native-router-flux/pull/3009. My commit derived from version 4.0.0-beta.27, so I re-build dist/ after fixed this issue. It seems conflict with the master, so if I need to revert https://github.com/aksonov/react-native-router-flux/pull/3009/commits/779a25fab7a2537a50688d409cf1687c214c9719 please just reply. . ",
    "simonso3": "I encountered similar problem after migrated to v4, especially when doing Action.refresh in componentDidMount. The setTimeout temporary workaround seems to have worked for me.\nsetTimeout(() => {\n  Actions.refresh({\n    param1: 'blah1',\n    param1: 'blah2',\n  });\n}, 0);. Are you calling it multiple times relatively quickly? I had the same problem when I discovered a bug in my code that I was calling refresh multiple times unnecessarily..\n",
    "sujay-bidchat": "@simonso3 that workaround do not seam to work for me.. ",
    "Schabaani": "```\n    \n\n\n\n        <Scene\n            key=\"codeValidationScreen\"\n            component={CodeValidationScreen}\n        />\n\n        <Drawer\n            hideNavBar\n            key=\"drawerMenu\"\n            contentComponent={SideMenu}\n            drawerWidth={250}\n            drawerPosition=\"right\"\n        >\n            <Scene\n                key=\"profileScreen\"\n                component={ProfileScreen}\n\n            />\n            <Scene\n                key=\"carsListScreen\"\n                component={CarsListScreen}\n            />\n\n            <Scene\n                key=\"carViewScreen\"\n                component={CarViewScreen}\n            />\n\n        </Drawer>\n    </Scene>\n\n\n\n\n\n</Router>);\n\n``\nAnd:Actions.drawerMenu(params)`\nAnd there is no need to Drawer.js. @nguyenvanphuc2203 and @wayne811 , unfortunately this is the old code and I don't have access to it.. I am using redux for passing data and react-native-router-flux only for navigation.. ",
    "wayne811": "can you share your code for me.\n. ",
    "jaypeng2015": "Same here. This was discussed in  https://github.com/aksonov/react-native-router-flux/issues/2576 but I think there are some misleading comments there.. ",
    "cihanbas": "##Solved\n```\n{menu ? menu.map((item, idx) =>\n Actions[item.screen].call();}\n                    key={idx}\n                    title={item.title}\n                    item={item}}/>\n            ) : void 0\n            }\n\n```. ",
    "sharkrice": "@Blapi I try that, didn't work,so I dowloaded the package,codes are still differences\nhttps://registry.npmjs.org/react-native-router-flux/-/react-native-router-flux-4.0.0-beta.27.tgz. @Blapi @aksonov \nanother strange problem, i upgrade my RNRF to 0.28, but React Native throw an error\n\n[mobx] Encountered an uncaught exception that was thrown by a reaction or observer component, in: 'Reaction[Autorun@10]\nExceptionsManager.js:73\nTypeError: Cannot read property 'map' of undefined\nExceptionsManager.js:73\nCannot read property 'map' of undefined\n\nSo I copied node_modules\\react-native-router-flux outside and builded it, and then i copied new dist to node_modules\\react-native-router-flux overwrite old dist folder, and then it fixed, react-native didn't throw error.\nI cleared cache and deleted node_modules folder several times, it always happens.\nMy Computer OS is WIN 10.. ",
    "FacuAcosta": "Had the same bug on 4.0.0-beta.28 when using Actions.replace('screen'). Downgrading to 4.0.0-beta.27 fixed it but the last version is broken. @kesha-antonov . ",
    "marcosmartinez7": "Same problem here with beta 28\nim getting: \n\nTypeError: undefined is not an object (evaluating 'resetAction.actions.map')\n\nwhen doing this:\nActions[this.props.targetScene].call()\nwhere targetScene is just the scene to redirect\nIm using redux too, now i've just download the beta 26 version that has the react-navigation version fixed, could you please check at this too? https://github.com/aksonov/react-native-router-flux/issues/2865 \nbecause if we need to go for the beta 24 version for using redux we need to use the fixed version of react-navigation, i mean:\n\"react-navigation\": \"1.0.0-beta.22\"\n\ninstead of\n\"react-navigation\": \"^1.0.0-beta.19\" (this willl result in 1.0.0 nowadays)\n\nkind regards\n. i have tried RNRF beta 28 with react nativation 1.0.0 but im having troubles with the redux, same problem as my last comment here..\nTypeError: undefined is not an object (evaluating 'resetAction.actions.map')\nis this an issue with 1.0.0 version of react-navigation or RNRF doesnt provide support for this new release? Because the RNRF beta 28 version uses 1.0.0-beta.22 version of react-navigation .. \n. so i realice that you are using a fixed version of react navigation in your last release (1.0.0-22.beta)\nso the question is, is there a way to still using RNRF 4.0.0-beta.24 BUT using a fixed version (like 1.0.0-27.beta for example) ? because i need to use  RNRF 4.0.0-beta.24 ,  i cannot upgrade to  RNRF 4.0.0-beta.28 \ni mean, i think that is make no sence that 4.0.0-beta.24 uses ^1.0.0-beta19 (that will result in the installation of the last 1.0.0 release) and a newer version like 4.0.0-beta.28 uses a fixed lower version (1.0.0-beta.22)\nThe main point of the issue is if you guys can mantain compatibility with the related dependencies\nkind regards. Workaround for now:\nhttps://stackoverflow.com/questions/48672906/react-native-router-flux-typeerror-undefined-is-not-a-function-evaluating-ad. @filipemerker , @NSShentu , this doesnt help? https://stackoverflow.com/questions/48672906/react-native-router-flux-typeerror-undefined-is-not-a-function-evaluating-ad. I have posted the same issue here https://github.com/aksonov/react-native-router-flux/issues/2865\ni think that is more important to have compatibility with previous versions, i mean, RNRF beta 24 is using the last react-navigation, and RNRF beta 28 is using 10.0.0-beta22. react navigation is preparing v2, do u guys have a plan to keep supporting the RN changes? \ncan u guys post some guidance in order to help with that?. Great! let us know if we can colaborate in something in particular. . This seems to be a problem with react-navigation, they are planning to resolve this issue on IOs in v2, but RNRF only supports v1.. \nsource: \nhttps://github.com/wix/react-native-navigation/issues/358. Same problem here! . ",
    "Ekhui": "in 0.27 the PopTo method is not fixed and then in 0.28 the replace breaks... . @LiuTing0403 \u6211\u75280.22\u52300.28\u90fd\u8bd5\u4e86\u4e00\u904d \u4ecd\u7136\u5b58\u5728\u8fd9\u4e2a\u95ee\u9898 \u662f\u4e0d\u662f\u548cRN\u7684\u7248\u672c\u6709\u5173\u5462 \u6211\u7684\u662f0.52.2. ",
    "famadori": "Here work only type: \"replace\" in beta 27. ",
    "chaipipatP": "Thanks guys\nBeta 27 is working. ",
    "aayushis12": "I am getting the same error on beta27. The scene is like this\n<Scene\n                  key=\"myScreen\"\n                  component={screen}\n                  initial\n                />\nAnd I have a function for navigation like this\n```\nonPress={() => Actions.myScreen({ type: ActionConst.REPLACE })\n```\nor when I am using it like this Actions.replace('myScreen') then also I get the same error.. ",
    "jsaguiar": "4.0.0-beta.27 works for me! . ",
    "kylethebaker": "We started running into this too on the latest version using Actions.reset('someScene').\nThe full error that I get is:\nTypeError: Cannot read property 'map' of undefined\n    at Object.getStateForAction (StackRouter.js:263)\n    at reducer (Reducer.js:74)\n    at NavigationStore.nextState (navigationStore.js:550)\n    at NavigationStore.dispatch (navigationStore.js:553)\n    at NavigationStore.replace (navigationStore.js:675)\n    at AuthActions.js:185\n    at tryCallOne (core.js:37)\n    at core.js:123\n    at JSTimers.js:301\n    at _callTimer (JSTimers.js:154)\n. In the meantime I've rolled back to beta25 and it appears to be working. It looks like react-navigation was upped from beta.21 to beta.22 in this version which could have caused the regression. That is the earliest version back where I saw a change that might be having an effect and the stack trace shows the error as coming from react-navigation. That is my hunch to what the cause is at least, I haven't investigated too much.. I have been able to reproduce this in an empty project using the latest version of React Native Router Flux with a simple Tabs component. I have also been unable to reproduce this on a simple project using vanilla React Navigation, so it appears to me at the moment that this is a bug with Router Flux.\nI've created a Proof Of Concept repo here where you can reproduce this bug: https://github.com/kylethebaker/router-flux-tabs-poc\nYou can run  both the Router Flux and React Navigation applications, changing the topPosition property to see how they each behave.\nYou will find that Router Flux doesn't respect the activeBackgroundColor or inactiveBackgroundColor property when tabPosition is top, but React Navigation does.. I've found a work around for this problem, though I'm not really sure at what layer of the stack the bug occurs on.\nIt looks like Router Flux looks at the tabBarPosition and creates either a TabBarTop or TabBarBottom component which then gets passed to the React Navigation TabNavigator constructor as a tabBarComponent property (see the code here).\nReact Navigation on the other hand uses a default tabBarComponent based on the platform (TabBarTop for android, TabBarBottom for ios). Meaning that if you don't explicitly pass a tabBarComponent it will always use TabBarTop on android or TabBarBottom on ios regardless of what tabBarPosition is set to. So if you pass tabBarPosition: top on ios you will get a TabBarBottom component that appears on the top (see the code here).\nAs a work around to get styling to apply to the top tabs I need to pass: {tabBarPosition: 'top', tabBarComponent: TabBarBottom } where TabBarBottom is imported from react-navigation;\nSo I'm not sure if React Navigation should be basing it's default tab bar (either TabBarTop or TabBarBottom) based on the tabBarPosition rather than the platform, or if the modules are just oddly named and should instead be TabBarAndroid and TabBarIOS.\nI'm thinking too the issue may be due to the fact that TabBarTop actually comes from an external module that React Navigation pulls in (react-native-tab-view) and this external module doesn't understand the styling properties used by Router Flux and React Navigation.\nI'm going to open up a companion issue on React Navigation concerning this and see if I can get clarification.. Since onRight is static you don't have access to this or any other internal component state. It is essentially just a regular function, external from the component.\nThis was a limitation for us as well. We weren't able to come up with a reasonable solution for changing the state, but maybe someone else can chime in with ideas.. @timeturnback If I'm understanding the solution correctly you don't create a ref yourself but rather use the one provided by the router. It should be Actions.refs[yourSceneName], where yourSceneName is the identifier for the scene that you set up in the router. . My hunch is that we just need to let showIcon pass through to the createTabBarOptions() function in navigationStore.js\nSee here: https://github.com/aksonov/react-native-router-flux/blob/master/src/navigationStore.js#L110\nI will see if this works and put together a PR if so.. The showIcon prop on the TabBar component is only supported in newer versions of react navigation. Currently in router flux there is no way to hide the icons (that I can find at least). I've tried using a 'null component' (() => null) or undefined as my icon prop, but all of the padding and containers are still added which still leaves an empty space where the icon would be (it still renders the <TabBarIcon> component).\nMy workaround for now is to copy TabBarBottom from the latest release of react-navigation and use it as a custom component.. I think if we compiled a list of the necessary changes it would make it\neasier to collaborate. I guess a good place to start would be to bump the\nversion of the dependency and see what breaks?\nOn Mar 16, 2018 5:00 AM, \"Pavel Aksonov\" notifications@github.com wrote:\n\nIt would be great if you could make RNRF work with v1. I can't add where I\nhave to add 'addListener'\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/aksonov/react-native-router-flux/issues/2893#issuecomment-373646949,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AEtO_HHx_JheG2PZFPltrBxEeGOy4_UDks5te39KgaJpZM4SLI3U\n.\n. I'll play around with the current master this week and see if I can make any progress, I will use the example projects as a base and then when we start making progress I will try the latest version on my ongoing application.. \n",
    "rxicon": "Same react-native-router-flux 4.0.0-beta.28  had this problem. ",
    "holasebas": "4.0.0-beta.27 works for me!. ",
    "LiuTing0403": "got issue for 4.0.0-beta.24 with node v7.10.0, upgrade to 4.0.0-beta.27 works for me.\nupgrade node to v8.9.4 with 4.0.0-beta.24 also worked.. ",
    "arif2009": "@Blapi In my case BackButton shows and works fine but problem is 1st row it shows BackButton and 2nd row it shows Title like my screenshot, they are not showing together. I update my screenshot you can consider it again.. I got my solution. I solved it by adding hideNavBar={true} on parent and hideNavBar={false} on child Scene.\n```\nconst RouterComponent = () => {\n    return(\n        \n\n\n\n\n            <Scene key=\"main\" hideNavBar={true}>\n                <Scene key=\"userList\" hideNavBar={false} component={UserList} title=\"NUMBER OF DONOR : XX\" />\n            </Scene>\n        </Scene>\n    </Router>\n);\n\n};\nexport default RouterComponent;\n```. ",
    "chinavane": "When I switch the scene, I will trigger the onExit method. At this time, I want to store some data in redux store, for example, the rolling position of flatlist. But onExit is a static method, and the static method can't get the this object, so it's not good to operate this.state. ",
    "bas00445": "I have the same problem with you ... no solution for me yet. ",
    "eahema": "not yet, looking some help from group. ",
    "AndrejZdravev": "in the root scene hideNavBar in Tab Scene hideNavBar={false}\n<Scene  key=\"root\" hideNavBar ><Scene key=\"ResultslistScene\">\n                <Scene key=\"Results\"\n                    tabs={true}\n                    hideNavBar={false}\n                    headerMode='none'\n                    wrap={false}\n                    title=\"Results list\"\n                    lazy\n                >\n                    <Scene key=\"Resultslist\" component={ResultslistScene} title=\"Results list\" />\n                    <Scene key=\"Favorites\" component={InfoScene} title=\"Favorites\" />\n                </Scene></Scene></Scene>. Thanks @asciifaceman for your help, but when i use this code i get warning \"Warning: Can only update a mounted or mounting component. This usually means you called setState, replaceState, or forceUpdate on an unmounted component. This is a no-op.\". ",
    "NdozHH": "It's already fixed, using #2040 thanks to @hofuchi comment.\n. Thanks for the answer. I used your example and it only works in debug mode, go back to the previous screen, but if I close the debug mode it still minimizes the application.. @Blapi It still doesn't work, I've done everything you recommended but it's still minimizing the application\nChange my App.js \n\nAnd I added the code to my ForgotPassword component constructor, plus, i checked that the if condition was true and it is, but it still works only in debug mode, i don't understand why or if i'm doing something wrong\n\n. I was looking for and I found several people who had the same thing happen to them as to me about the events in the back button, which also worked in debugg mode but not in development mode, and I found this answer that worked for me\nhttps://github.com/facebook/react-native/issues/3223#issuecomment-355064410\nIt may be useful for someone else or for RNRF managers to make future modifications. Thanks for the help.. ",
    "HessiPard": "I fixed the issue just by calling Actions.drawerClose() before Actions.register!. Maybe duplicate of #2817. > Sadly calling drawerClose() before Actions.screen() didn't work.\nUse 4.0.0-beta.31.. ",
    "snrn-Pontus": "Did you find a way around this? I am having the same issue when my tabs are lazyloaded. . ",
    "lishine": "Nop. Using directly react navigation. ",
    "mechabyte": "Have you checked out the modal component in the project's Example app? Accomplished something similar with an alert popup for a work task. The example covers a lot of different possibilities if you comb through it.. The example app contains this case and some similar ones. I would try something similar to this:\n<Modal key=\"modal\" hideNavBar>\n  <Stack key=\"root\">\n    <Scene key=\"sceneWithNavBar\" component={ViewWithNavBar} rightTitle=\"Trigger Modal\" onRight={() => Actions.demoModal()} />\n  </Stack>\n  <Scene key=\"demoModal\" component={DemoModal} />\n</Modal>. It isn't really advertised in the docs, but the author also forked react-native-starter-app and hooked it up to router flux as well-- found here. It shows off some cool tricks hooked into the on events in routes. \nYou edited your original post from launching a modal from a header button, but with the animation provided I think you're referring to something like this?\n<Modal>\n    <Tabs key=\"tabBar\">\n        <Scene key=\"tab1\" component={TabView} />\n        <Scene key=\"tab2\" component={TabView} />\n        <Scene key=\"tab3_LaunchModal\" component={Placeholder} onEnter={Actions.modalView} />\n        <Scene key=\"tab4\" component={TabView} />\n        <Scene key=\"tab5\" component={TabView} />\n    </Tabs>\n    <Scene key=\"modalView\" component={ModalView} backTitle={'Close'} />\n</Modal>. For the fadeUp transition, you could do something with the React Native animated API similar to the Error modal in the example . @rayray-py Sorry I missed your previous comment, but glad you got it working!. I would try refreshing the current navigation scene's state through Actions.refresh(). You could wire it up to a text input like so:\n```\n Actions.refresh({ hideTabBar: true })}\n  onEndEditing=>{() => Actions.refresh({ hideTabBar: false })}\n  value={this.state.etc}\n/>\n```\nRN TextInput docs: onFocus, onEndEditing. ",
    "sfrribeiro": "Show @mechabyte.\nI'll test in the Example App and give a return.\nthank you\n. I used Lightbox with ActivityIndicator and it worked perfectly.. ",
    "rayray-py": "@mechabyte \nSorry, I mean this screen transition\nhttps://video.twimg.com/tweet_video/DHR7zyEV0AEmhYI.mp4. @Blapi \nThanks for your reply.\nI read #2628, and understood 'transitionConfig'.\nBut, is it available even for a scene which is directly under tab bar?. I tried it like this, but a scene was rendered without vertical transition.\n(I use transitionConfig in Stack component instead of root scene, because routeName prop doesn't match a key of tab scene in the case of that root scene has transitionConfig)\n```\n  <Tabs\n    key=\"tabBar\"\n    tabBarPosition=\"bottom\"\n    swipeEnabled={false}\n    backToInitial\n\n<Scene\n  key=\"home\"\n  component={Home}\n/>\n<Stack\n  key=\"selectMyDiary\"\n  transitionConfig={() => ({\n    screenInterpolator: (props: { scene: any }) => {\n      const { scene } = props;\n      console.log(scene);\n\n\n      switch (scene.route.routeName) {\n        case 'selectMyDiary':\n          return CardStackStyleInterpolator.forVertical(props);\n        default:\n          return CardStackStyleInterpolator.forInitial\n      }\n    },\n  })}\n>\n  <Scene key=\"selectMyDiary\" component={SelectMyDiary} />\n  <Scene key=\"createDiary\" component={CreateDiary} />\n</Stack>\n<Scene\n  key=\"reservation\"\n  component={Reservation}\n/>\n\n\n```\n. @mechabyte \nThanks for your advice:)\nI tried your sample code, and succeeded in opening a modal from tab bar.\nBut, there is one problem:(\nWhen I tap the tab icon, the Placeholder scene is rendered under a modal.\nSo, when I close that modal scene, the Placeholder scene appears instead of the scene that was rendered when I tapped the tab icon.\nDo you have any idea?\ud83d\ude22. it worked by using tabBarOnPress.\nThanks :). ",
    "fedealconada": "@rayray-py can you provide a sample of your working solution? Thanks!. ",
    "ahmadvaroqua": "@fedealconada You've probably already figured this out by now, but I struggled with this a little so I'm posting my solution for anybody else landing here:\n```\n  \n\n\n    {/* Tab Bar */}\n    <Scene hideNavBar panHandlers={null} animationEnabled={false} key=\"tabs\">\n\n      <Tabs\n        key=\"tabbar\"\n        swipeEnabled={false}\n        showLabel={true}\n        tabBarStyle={styles.tabBarStyle}\n        activeTintColor=\"#000000\"\n        activeBackgroundColor=\"white\"\n        inactiveBackgroundColor=\"rgba(255, 255, 255, 0.5)\"\n        tabBarPosition=\"bottom\"\n      >\n\n        <Scene key=\"Home\" component={Home} title=\"Home\" />\n        <Scene key=\"search\" component={Search} title=\"Search\"/>\n\n        <Scene key=\"placeholder\" component={Placeholder} title=\"Post\"\n          tabBarOnPress={() => {\n            return Actions.post();\n          }}\n        />\n\n        <Scene key=\"profile\" component={Profile} title=\"Profile\" />\n        <Scene key=\"more\" component={More} title=\"More\"/>\n      </Tabs>\n    </Scene>\n\n  </Stack>\n\n  {/* Modal Scenes */}\n  <Scene key=\"post\" component={Post} title=\"Post\" hideNavBar={true}/>\n\n</Scene>\n\n\n```\nWorking sample app can be found here:\nhttps://github.com/ahmadvaroqua/RnrfTabModal. ",
    "mnogueron": "Hi @matt33, have you been able to find a solution to your problem? \nI'm in the same situation and I would be really interested if you have one!. @matt33 Really like your solution, but it seems to not work when you try to switch between two stacks. Just before moving to the next stack, it pops and try to render the previous page in the stack, thus render things that may not be available anymore (for example in the case of a logout).\nI will continue to look for a solution, but it would be awesome to be able to switch between stack as you describe it, in next versions!. @matt33 I've ben trying to get your solution working with our product, but I always get stuck at the moment where I need to switch between two stacks. Your solution is working fine when you don't have multiple scenes pushed in the history and that depend on an object from the reducer that can be changed.\nI explain my self:\n-> LoginStack\n-> UserStack\n----> Profile (Is displaying content of object X)\n--------> Settings\nIf we consider that architecture (Settings is pushed on top of Profile), and that you can log out from Settings. Logging out will remove content of object X that may be displayed in Profile. Then when you log out in Settings, the app will try to render Profile with data that don't exist anymore before switching to the LoginStack, leading to a crash.\nBefore, we were switching the Routers for each stack, thus not rendering the empty content on stack change, but now I would have to add a verification process to almost all my components to be sure that the content is not empty.... ",
    "matt33": "Hey @mnogueron , I did a workaround that I thought would be the most beneficial in terms of keeping all the redirection logic within router component (meaning keeping the navigation component a pure function of state) like this:\n```\nclass NavigationRouter extends Component {\ncomponentWillReceiveProps(nextProps) {\n    const {appStarting, notLoggedIn} = nextProps\n    if (appStarting)\n      return\nif (notLoggedIn) {\n  Actions.welcomeScreen()\n  return\n}\n\n}\n//do not rerender\n  componentShouldUpdate() {\n    return false\n  }\nrender() {\n    return (\n      \n\n\n\n\n\n\n\n      )\n  }\n}\nconst mapStateToProps = state => ({\n  appStarting: state.appStarting,\n  notLoggedIn: !state.loggedIn,\n})\nexport default connect(mapStateToProps)(NavigationRouter)\n. @mnogueron Sorry for late response - yes I've came across the same problem. The solution is either not using type='reset' for scenes in another stack but rather using 'replace'. \nAlso another solution is to use this to navigate between 2 stacks (can be done so just from the components that are included as a component in Scene and therefore are getting navigation in props):\nthis.props.navigation.navigate('someScreen')\ninstead of:\nActions.someScreen()\n```. @mnogueron I understand your problem, was dealing with the same one - had to change my app logic cause of that which was fortunately just an easy change for me but believe it might not be for other cases.\nAnyway with v4 update quality of this library went rapidly down and while I understand it is still in beta it might be a time to look around for different solutions cause a lot of problems are caused by underlying react-navigation package, which is anything but useful as of now.. ",
    "wallace7souza": "This is happening with me. On IOS it's ok but on android it's reloading the state when a textInput get focus and the keyboard appears.. ",
    "macanhajc": "I fix it using type={ActionConst.RESET} on the Scene where it happens, but i'm not sure if this is the right thing to do and doing this i loose my stack and i cant use pop.\n<Scene hideNavBar key=\"verificaProduto\" component={VerificaProduto} type={ActionConst.RESET} />. ",
    "bmikaili": "This is not a permanent fix, as the back navigation disappear when doing this.. Sadly calling drawerClose() before Actions.screen() didn't work.. I fixed it by not using router-flux and just using regular routing. Rewrote my entire routing.\n\nEl 5 oct 2018, a las 3:06, roden1999 notifications@github.com escribi\u00f3:\nI have the same problem. When I press my input the keyboard will show and disappear after 1 seconds then go back to my initial route scene. How do I fix it.?\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub, or mute the thread.\n. \n",
    "roden1999": "I have the same problem. When I press my input the keyboard will show and disappear after 1 seconds then go back to my initial route scene. How do I fix it.?  . ",
    "bl4ze": "Using Actions.reset('someSceneName') disposes all the pages in the stack and thus not calling their render method each time. \nI navigate to my main page by using reset to clear the stack.\nPressing back makes the app exit but that's okay in my case.. ",
    "iChaosren": "Turns out, using the createReducer function can cause some... Issues.... ",
    "UrielShimony": "your explanation for the problem is A bit confusing but i assume that the problem is  when you call 'Action.home()'  you need to empty your scene stack.\nthe function you need to call is Action.pop() and then Action.home or with Action.reset()\nlook at the action API Action.https://github.com/aksonov/react-native-router-flux/blob/master/docs/API.md#actions\nif this is not the problem so try to rap Try to wrap differently the scenes and the drawer:\"\n\n. ",
    "ljmkimqx": "I resolved it. Don't use navTransparent. use\nnavigationBarStyle={{\n                  position: 'absolute',\n                  backgroundColor: 'transparent',\n                  zIndex: 100,\n                  top: 0,\n                  left: 0,\n                  right: 0,\n                  borderBottomWidth: 0,\n                  elevation: 0,\n              }}\nlike this:\n />. I know this, I often use these methods\u3002But I mean when I slide back right, not when I click back\u3002For example, A->B->C, in the C page, I hope that when I can slide right, I will return the A page instead of the B page. The reason why I have this requirement is because I don't want users to ban right slides on C pages (I don't want to use panHandlers={null}). I personally think that prohibiting right slip is not very friendly.  Is there a way to solve this problem? If there is no better way, I will use panHandlers={null}. Thanks.. How to use onBack in the right swipe gesture, I found a lot of information not found, I hope to provide reference code, thank you.. I found that ios's right-sliding back and Android's hardware back button won't trigger the onBack method.. Yes, but thank you for answering me.. Not a problem with BackHandler.  I mean when I slide back right, not when I click back\u3002For example, A->B->C, in the C page, I hope that when I can slide right, I will return the A page instead of the B page. The reason why I have this requirement is because I don't want users to ban right slides on C pages (I don't want to use panHandlers={null}). I personally think that prohibiting right slip is not very friendly. Is there a way to solve this problem? If there is no better way, I will use panHandlers={null}. Thanks..  Is there a way to solve this problem?  thanks. thanks\uff0cI'll look at the use of React Native Gesture Handler, but I have an idea of \u200b\u200bdirectly manipulating Actions.state to see if I can delete a page in state, so I don't have to modify the swipe gesture, but it feels so dangerous.. ",
    "wulala": "https://github.com/aksonov/react-native-router-flux/blob/v4/docs/OTHER_INFO.md#split-your-scenes-to-smaller-parts-if-needed \nIt works for me. . ",
    "felixzxk": "@wulala \u8c22\u8c22. @isaackdamian \n@wulala told the fix, Split your scenes to smaller parts if needed\nhttps://github.com/aksonov/react-native-router-flux/blob/v4/docs/OTHER_INFO.md#split-your-scenes-to-smaller-parts-if-needed. ",
    "taichi-jp": "How to use Component to divide routers?. I'm getting the same issue.\nI wanna divide Tabs component using component to connect the divided tabs to redux.. I've encountered the same issue using iOS simulator.\nIt works after I shutdown the app, but when the app is running in background, it only reopens the app, not directing to the page. I used the following command:\n$ xcrun simctl openurl booted \"my-app://path/to/the/page\". @j3rin \nI resolved the problem, it works now!\nCheck out the configuration in AppDelegate.m .\nhttps://facebook.github.io/react-native/docs/linking. ",
    "Sushant-Sardeshpande": "Getting the same error as well with beta 31, the v3 method no longer works and the link above throws a  404 error. After some more debugging, found out that it's got to do with property updates some how. The router resides within a component that is connected with redux and when these properties are updated it is causing the router to remount after which navigation to a tab component does not reflect.\nAlso, tried moving from TabBarBottom which is deprecated to BottomTabBar as well as upgrading react-navigation to 3.0.9 and react-navigation-tabs to 1.0.2.. Had similar issues with a class component. Worked as a function.\nexport const HomeTab = () => {\n    return (\n        <Scene />\n          ...\n        </Scene>\n    );\n}\nAnd then calling it as:\n<Root>\n    <Router backAndroidHandler={onBackPress}>\n        <Scene key=\"foobar\">\n            <Scene hideNavBar key=\"splash\" component={SplashPage} initial />\n            {\n                HomeTab()\n            }\n        </Scene>\n    </Router>\n</Root>\nOn a side note preferred grouping them into objects and using,\n<Scene>\n    {Drawer.settings()}\n    {Drawer.profile()}\n</Scene>\nGets the modularity required.. Any reason why you are trying to change the title of one scene from another?\nYou could call Actions.refresh({title: 'ABC'}) on mounting of scene D.\nAdditionally, if for some reason the title stays the same and you want to force a refresh, pass a key with a random value in it.. ",
    "uguraktas": "is this problem still going on ? . ",
    "hussainwali74": "seriously ! please don't write packages if you can't maintain them, fix the issues. ",
    "timqha": "Try this:\n```\n ({\n          elevation: 0,\n          shadowOpacity: 0,\n          borderBottomWidth: 0,\n        })}\n\n```\n. \n",
    "VasiliyPolyakov": "@timqha Thank you. It is awesome. It helped me and I fixed this problem related to internal shadow.. ",
    "toinfinityandbeyond": "That doesn't resolve my issue :/ @Blapi Like I said before, it only works transitionConfig on the root scene...\n. I tried this solution from #2628 \n<Stack\n            key='root'\n            hideNavBar\n            transitionConfig={() => ({\n              screenInterpolator: (props) => {\n                const { scene } = props\n                switch (scene.route.routeName) {\n                  /* case yourKeyScene:\n                  return theAnimationYouWant(props)*/\n                  case 'groups':\n                    return CardStackStyleInterpolator.forVertical(props)\n                  case 'home':\n                    return CardStackStyleInterpolator.forHorizontal(props)\n                  case 'inbox':\n                    return CardStackStyleInterpolator.forFade(props)\n                  default:\n                    return CardStackStyleInterpolator.forInitial\n                }\n              }\n            })}>\nBut like I said, it works ok when you do push, but when it does pop it makes all the transitions from all scenes you passed through ... and it looks weird.. Reviewing my navigation stack, I managed to resolve it at last. It looks like there was something wrong on the way I was nesting my scenes. Anyway I had to put it on my root scene, but at least now works and doesn't look weird.\nThank you so much for your attention @Blapi . ",
    "blackstar217": "Here is my code snippet\n. in the above code, the NavigationActions.pop() = Actions.pop()\nimport { Actions as NavigationActions } from 'react-native-router-flux' \nI can use the other functions such as Actions.focus or Actions.refresh, just can't use the pop(). Oh, sorry, It's my mistakes.\nThanks. ",
    "Q8hma": "hello \nfirst thnx for ur help but i got error\n```\nFailed to load bundle(http://localhost:8081/index.bundle?platform=ios&dev=true&minify=false) with error:(SyntaxError in /Users/HMD/Desktop/Mobile-Project/q8hb/src/BaseLightbox.js: /Users/HMD/Desktop/Mobile-Project/q8hb/src/BaseLightbox.js: Invalid left-hand side in arrow function parameters (44:21) (null))\n38-[RCTCxxBridge loadSource:onProgress:]_block_invoke.242\n    RCTCxxBridge.mm:419\nZL36attemptAsynchronousLoadOfBundleAtURLP5NSURLU13blockpointerFvP18RCTLoadingProgressEU13block_pointerFvP7NSErrorP9RCTSourceE_block_invoke.118\n80-[RCTMultipartDataTask URLSession:streamTask:didBecomeInputStream:outputStream:]_block_invoke\n-[RCTMultipartStreamReader emitChunk:headers:callback:done:]\n-[RCTMultipartStreamReader readAllPartsWithCompletionCallback:progressCallback:]\n-[RCTMultipartDataTask URLSession:streamTask:didBecomeInputStream:outputStream:]\n__88-[NSURLSession delegate_streamTask:didBecomeInputStream:outputStream:completionHandler:]_block_invoke\n__NSBLOCKOPERATION_IS_CALLING_OUT_TO_A_BLOCK\n-[NSBlockOperation main]\n-[__NSOperationInternal _start:]\n_dispatch_client_callout\n_dispatch_block_invoke_direct\n_dispatch_client_callout\n_dispatch_block_invoke_direct\ndispatch_block_perform\n__NSOQSchedule_f\n_dispatch_client_callout\n_dispatch_continuation_pop\n_dispatch_async_redirect_invoke\n_dispatch_root_queue_drain\n_dispatch_worker_thread3\n_pthread_wqthread\nstart_wqthread\n```\nthis is my code\n```\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { View, StyleSheet, Animated, Dimensions, Button,TouchableWithoutFeedback } from 'react-native';\nimport { Actions } from 'react-native-router-flux';\nimport { strings } from '../locales/I18n';\nconst { height: deviceHeight, width: deviceWidth } = Dimensions.get('window');\nexport default class BaseLightbox extends Component {\n  static propTypes = {\n    children: PropTypes.any,\n    horizontalPercent: PropTypes.number,\n    verticalPercent: PropTypes.number,\n  }\nconstructor(props: Props) {\n  super(props);\nthis.state = {\n    opacity: new Animated.Value(0),\n    _panResponder: PanResponder.create({\n      onStartShouldSetPanResponder: this._handleStartShouldSetPanResponder,\n    }),\n  };\n}\n_handleStartShouldSetPanResponder = (e: Object, gestureState: Object): boolean => {\n  return true;\n}\n  componentDidMount() {\n    Animated.timing(this.state.opacity, {\n      duration: 100,\n      toValue: 1,\n    }).start();\n  }\ncloseModal = () => {\n    Animated.timing(this.state.opacity, {\n      duration: 100,\n      toValue: 0,\n    }).start(Actions.pop);\n  }\n_renderLightBox = (this.state._panResponder.panHandlers) => {\n    const { children, horizontalPercent = 1, verticalPercent = 1 } = this.props;\n    const height = verticalPercent ? deviceHeight * verticalPercent : deviceHeight;\n    const width = horizontalPercent ? deviceWidth * horizontalPercent : deviceWidth;\n    return (\n      \n        {children}\n        \n\n    );\n  }\nrender() {\n    const { clickBackgroundToDismiss = true } = this.props;\n    return (\n    \n\n        {this._renderLightBox()}\n      \n\n    );\n  }\n}\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: 'rgba(52,52,52,0.5)',\n    position: 'absolute',\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n```\n. Any help guys ?\nThanks and best regards . thanks for your reply and im very sorry because im new in RN im sorry but i got this error \n`Failed to load bundle(http://localhost:8081/index.bundle?platform=ios&dev=true&minify=false) with error:(SyntaxError in /Users/HMD/Desktop/Mobile-Project/q8hb/src/BaseLightbox.js: /Users/HMD/Desktop/Mobile-Project/q8hb/src/BaseLightbox.js: Unexpected token, expected ... (49:13) (null))\n38-[RCTCxxBridge loadSource:onProgress:]_block_invoke.242\n    RCTCxxBridge.mm:419\nZL36attemptAsynchronousLoadOfBundleAtURLP5NSURLU13blockpointerFvP18RCTLoadingProgressEU13block_pointerFvP7NSErrorP9RCTSourceE_block_invoke.118\n80-[RCTMultipartDataTask URLSession:streamTask:didBecomeInputStream:outputStream:]_block_invoke\n-[RCTMultipartStreamReader emitChunk:headers:callback:done:]\n-[RCTMultipartStreamReader readAllPartsWithCompletionCallback:progressCallback:]\n-[RCTMultipartDataTask URLSession:streamTask:didBecomeInputStream:outputStream:]\n__88-[NSURLSession delegate_streamTask:didBecomeInputStream:outputStream:completionHandler:]_block_invoke\n__NSBLOCKOPERATION_IS_CALLING_OUT_TO_A_BLOCK\n-[NSBlockOperation main]\n-[__NSOperationInternal _start:]\n_dispatch_client_callout\n_dispatch_block_invoke_direct\n_dispatch_client_callout\n_dispatch_block_invoke_direct\ndispatch_block_perform\n__NSOQSchedule_f\n_dispatch_client_callout\n_dispatch_continuation_pop\n_dispatch_async_redirect_invoke\n_dispatch_root_queue_drain\n_dispatch_worker_thread3\n_pthread_wqthread\nstart_wqthread\n`\nthis is the code\n`import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { View, StyleSheet, Animated, Dimensions, Button } from 'react-native';\nimport { Actions } from 'react-native-router-flux';\nimport { strings } from '../locales/I18n';\nconst { height: deviceHeight, width: deviceWidth } = Dimensions.get('window');\nexport default class BaseLightbox extends Component {\n  static propTypes = {\n    children: PropTypes.any,\n    horizontalPercent: PropTypes.number,\n    verticalPercent: PropTypes.number,\n  }\nconstructor(props: Props) {\n  super(props);\nthis.state = {\n    opacity: new Animated.Value(0),\n    _panResponder: PanResponder.create({\n      onStartShouldSetPanResponder: this._handleStartShouldSetPanResponder,\n    }),\n  };\n}\n_handleStartShouldSetPanResponder = (e: Object, gestureState: Object): boolean => {\n  return true;\n}\ncomponentDidMount() {\n    Animated.timing(this.state.opacity, {\n      duration: 100,\n      toValue: 1,\n    }).start();\n  }\ncloseModal = () => {\n    Animated.timing(this.state.opacity, {\n      duration: 100,\n      toValue: 0,\n    }).start(Actions.pop);\n  }\n_renderLightBox = () => {\n    const { children, horizontalPercent = 1, verticalPercent = 1 } = this.props;\n    const height = verticalPercent ? deviceHeight * verticalPercent : deviceHeight;\n    const width = horizontalPercent ? deviceWidth * horizontalPercent : deviceWidth;\n    return (\n      \n        {children}\n        \n\n    );\n  }\nrender() {\n  const { clickBackgroundToDismiss = true } = this.props;\n  return (\n    \n\n        {this._renderLightBox()}\n      \n\n  );\n}\n}\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: 'rgba(52,52,52,0.5)',\n    position: 'absolute',\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n`\nthanks and im so sorry. thnx it work after i forgot to add \"panResponder\" :). i used action.SceneName\ni test it on ios not android. thnx alot and i fix it by move Drawer over ()\nnew code :\n<Router hideNavBar= \"true\" createReducer={reducerCreate}>\n<Drawer key=\"drawer\" contentComponent={DrawerContent} drawerWidth={250} hideNavBar>\n        <Scene key=\"root\" hideNavBar>\n          <Scene key=\"home_page\"  component={home_page}  title=\"home_page\" initial={true} hideNavBar/>\n          <Scene key=\"search_page\"  component={search_page}  title=\"search_page\" hideNavBar/>\n          <Scene key=\"cats_page\"  component={cats_page}  title=\"cats_page\" hideNavBar/>\n          <Scene key=\"tops_page\"  component={tops_page}  title=\"tops_page\" hideNavBar/>\n          <Scene key=\"sound_page\"  component={sound_page}  title=\"sound_page\" hideNavBar />\n          <Scene key=\"sounds_page\"  component={sounds_page}  title=\"sounds_page\" hideNavBar />\n          <Scene key=\"aboutus_page\"  component={aboutus_page}  title=\"aboutus_page\" hideNavBar />\n        </Scene>\n</Drawer>\n      </Router>\nold code :\n<Router hideNavBar= \"true\" createReducer={reducerCreate}>\n        <Scene key=\"root\" hideNavBar>\n<Drawer key=\"drawer\" contentComponent={DrawerContent} drawerWidth={250} hideNavBar>\n          <Scene key=\"home_page\"  component={home_page}  title=\"home_page\" initial={true} hideNavBar/>\n          <Scene key=\"search_page\"  component={search_page}  title=\"search_page\" hideNavBar/>\n          <Scene key=\"cats_page\"  component={cats_page}  title=\"cats_page\" hideNavBar/>\n          <Scene key=\"tops_page\"  component={tops_page}  title=\"tops_page\" hideNavBar/>\n          <Scene key=\"sound_page\"  component={sound_page}  title=\"sound_page\" hideNavBar />\n          <Scene key=\"sounds_page\"  component={sounds_page}  title=\"sounds_page\" hideNavBar />\n          <Scene key=\"aboutus_page\"  component={aboutus_page}  title=\"aboutus_page\" hideNavBar />\n</Drawer>\n        </Scene>\n      </Router>\nthnx alot u help me. hello any update ?\nim in 4.0.6 and still same bug\nthnx. any help here please ??\nthnx. > I don't know why, but I had the same problem and I solved in this way\n\nIt was like this:\n<Scene key=\"myScene\" title=\"myTitle\" component={myComponent} />\nIt become like this:\n<Stack key=\"myScene\">\n    <Scene key=\"myScene_inner\" title=\"myTitle\" component={myComponent} />\n</Stack>\nAnd the Action is always Actions.myScene({...}), not Actions.myScene_inner({...})\ntry and let me know!!!\n\ni think it bug ,, because if i have 20 screen i need to do 20 Stack , it is not good \ni hope the developer help us. > yes, i think it's a bug to however, has this solved Your problem? Il giorno gio 13 dic 2018, 19:08 HAMAD ADHBIYAH notifications@github.com ha scritto:\n\n\u2026\nI don't know why, but I had the same problem and I solved in this way It was like this:  It become like this:    And the Action is always Actions.myScene({...}), not Actions.myScene_inner({...}) try and let me know!!! i think it bug ,, because if i have 20 screen i need to do 20 Stack , it is not good i hope the developer help us \u2014 You are receiving this because you are subscribed to this thread. Reply to this email directly, view it on GitHub <#3374 (comment)>, or mute the thread https://github.com/notifications/unsubscribe-auth/Ah4tmF9nJB0I_vhnDWCPCs4RY-Ee5TXPks5u4peTgaJpZM4ZJZ5n .\n\nyes if i change Scene to Stack \n            <Stack key=\"main\" component={main} title=\"main\" initial={true} hideNavBar/>\n\n. i hope it fix fast. any help here please ??\nI used last v4.0.6 and same refresh not work\nthnx. ",
    "b1acKr0se": "@EvianZhow The scrolling inside the Lightbox is disabled following this approach. Do you know how to make it work?. ",
    "sajaddp": "same problem. Unfortunately, the RNRF has a poor documentation. In the 4.0.0-beta.30 version, even without using redux, there is an 'addListener' error.\nDoes the new version of RNRF work only with redux?. @NSShentu,\nThis is my test code:\ntype Props = {};\nexport default class App extends Component<Props> {\n    render() {\n        return (\n            <Router>\n                <Stack hideNavBar>\n                    <Scene key=\"root\" component={TestPage} initial/>\n                </Stack>\n            </Router>\n        )\n    }\n}\nCan you get me a simple example?\npackage.json:\n\"react\": \"16.3.0-alpha.1\",\n\"react-native\": \"0.54.3\"\n\"react-native-router-flux\": \"^4.0.0-beta.30\". ",
    "alittletf": "hey @matteocollina  - I am having a similar problem right now and I know this post is very old, I was curious what you meant by your solution. When you said \"and then I can pass data to \"show_player_from_team\" with \"Actions.push(\"show_player_from_team\",{player: player})\" \nAre you making 2 Action calls to pass data to \"show_player_from_team\" ?. @matteocollina what versions are you on for: \nReact-native-router-flux:\nReact: \nRedux:\nReact-Redux: \nThank you so much in advance! . @ahanriat can you elaborate on what HOC means? . its Actions not Action...\nActions.key(); as well as Actions[key](); should work on v4.0.6. ",
    "Donhv": "Lazy was removed . @alejandropinson you should use react-native-drawer. it work well with router-flux v4. @asciifaceman  thanks for reply :D. ",
    "JoePaulsenLyraHealth": "It's still in the API docs. Which now begs the question...how do we get content per component in a tabbed scene setup instead of mounting all of the components and making their requests all at once? Not sure how to accomplish this.. ",
    "BGrayDevelopment": "Thanks for your ideas, I ended up creating a flag that is set if the homePage is loaded to the stack or not. Then created a backhandler like:\njavascript\nif (this.props.homePageLoaded) {\n        //else we can pop to it\n        Actions.pop();\n    }\n    else {\n        //if home page is not loaded in the stack we need to navigate to it\n        Actions.Home();\n    }\n    return true;\n}\nThen on the ComponentWillMount on the Home page I set the homePageLoaded to true. Otherwise it's default is false. . ",
    "shyam1211": "Hi Blapi \nThanks for your reply It is working for android.But in ios there are no back button ,there are some issue with sliding view.\nso can i resolved it?\n. ",
    "coolmic": "Same error here, I upgraded from \n4.0.0-beta.23 to 4.0.0-beta.28 .\nBefore, it works with \njavascript\nconst mapStateToProps = state => ({ state: state.nav });\nconst ReduxRouter = connect(mapStateToProps)(Router);\nexport default ReduxRouter;\nWith the last version, I have this weird error : \n\nThis navigator has both navigation and container props, so it is unclear if it should own its own state. Remove props: \"uriPrefix\" if the navigator should get its state from the navigation prop. If the navigator should maintain its own state, do not pass a navigation prop.\n\nFor some reason, createNavigationContainer/NavigationContainer/_validateProps trigger an error because it receive a { uriPrefix: undefined } in the props.\nIf I remove the mapStateToProps, I have no error, but the router does not dispatch actions, and don't react to state change.\n. React-navigation will stop supporting redux in the near future.\nhttps://github.com/react-navigation/react-navigation/issues/4490\nhttps://reactnavigation.org/docs/en/redux-integration.html\n\nWarning: in the next major version of React Navigation, to be released in Fall 2018, we will no longer provide any information about how to integrate with Redux and it may cease to work. Issues related to Redux that are posted on the React Navigation issue tracker will be immediately closed. Redux integration may continue to work but it will not be tested against or considered when making any design decisions for the library.\n\nI decided to refactor my app, so it doesn't use redux for navigation.\n. ",
    "rovnyart": "same error,  4.0.0-beta.28\nreact-redux v.5.0.6\nNot connecting to state at all, no actions dispatched, no errors occured.. ",
    "rikur": "+1. ",
    "luizguilhermefr": "+1. Figured out that the problem was:\nBefore upgrade I used to have a \"marginTop\" attribute in my screen, so the content doesn't get rendered below the navBar, because the reference was the StatusBar.\nSeems like in V4 the reference is not the StatusBar anymore, but the NavBar itself, making this margin not useful.. ",
    "bialasik": "+1. And even if I'll do some pushes on this same scene but with different parameters, I can go back to old state?. ",
    "fbaskara": "+1. ",
    "DavidPineda": "Conflicts resolved. ",
    "avencat": "Hi, any news on this? :/ I have the same error after upgrading from beta 23 to 28.... @prudhvir3ddy yes it's working on beta 23! ;). ",
    "rooque": "@arnsa I'm having the same issue, can you provide the code you used to fix it ? Thank you. Also, you can reopen the issue, this can affect more people and it's not a normal behavior.. ",
    "fredpinon": "Hi, I am running into the same issue. \nIt does not seem to be a double tap but a single tap followed by a swipe-left gesture. If this swipe gesture happens early enough after a tap on the menu button, the menu closes while the app thinks it is open (the DrawerClose action is not fired). \nThis bug is fairly easy to reproduce and confusing to users, it would be great if the drawer state could be properly updated to handle that case.. ",
    "safacaki": "Sorry my english is a bit bad, my codes are in the problem I asked. I do not want the drawer to work on a screen with a blue background. That is my login screen and the drawer screen should not work on the login screen. ",
    "dborzouei": "hi @safacaki \nyou can use this code \n```\n  static navigationOptions = ({navigation}) => {\n        return {\n            ...\n            drawerLockMode: 'locked-closed'\n    }\n}\n\n. @aksonov , @charpeni . hi @Blapi , thanks for reply , i fixed `key='root'`\nfor first Scene\nmy modified code is\nconst reducerCreate = (params) => {\n  const defaultReducer = new Reducer(params)\n  return (state, action) => {\n    console.log('Action :', action)\n    console.log('State :', state)\n    return defaultReducer(state, action)\n  }\n}\n\n\n\n }\n                        drawerPosition=\"right\"\n                        hideNavBar\n                        drawerUnderNavBar={true}\n                        initial\n                    >\n                        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        </Router>\n\n``\nwhen i go to Login Screen and usenavigation.goBackto back ScreenSearchStep1Action \n![image1](https://user-images.githubusercontent.com/8321129/36339537-7e686862-13dd-11e8-84d3-8ce0a88ff68b.jpg)\nnever returned !!! \nbut when i useActions.pop()` or back button hardware on emulator \n\n. hi @Blapi \nI'm waiting for the result. no , this not work . When I'm pressed the back button 2 times . this work \nOf course, with the code Actions.pop(). in first time not back to main screen . \nif i use navigation.goBack() , this never back . ",
    "sojimon": "@safacaki I have the same issue.Are you solved this issue?. @dborzouei  Hi, I am using react-native router-flux for routing.Is your suggestion valid in my case? I used react-native-router-flux for routing and native-base for drawer.. And my App.js is as follows,\n```\n render() {\n    return (\n      \n { this.drawer = ref; }}\n          content={}\n          onClose={() => this.closeDrawer()}\n          panHandlers={null}\n          openDrawerOffset={0.2}\n          panOpenMask={0.20}\n    >\n      <RouterWithRedux>\n        <Scene key=\"root\">\n          <Scene key=\"signIn\" component={SignIn} title='Sign In' hideNavBar={true} panHandlers={null} renderBackButton={() => (null)} ></Scene>\n          <Scene key=\"retailers\" component={Retailer} hideNavBar={false} title='Retailers' panHandlers={null} openDrawer={this.openDrawer} closeDrawerHome={this.closeDrawer} renderbackButton={() => (null)} renderLeftButton={<View></View>}></Scene>\n          <Scene key=\"retailerDetails\" component={RetailerDetails} hideNavBar={false} title='Retailer Details' panHandlers={null} openDrawer={this.openDrawer} closeDrawerHome={this.closeDrawer}></Scene>\n          <Scene key=\"dashboard\" component={Dashboard} hideNavBar={false} title='dashboard' openDrawer={this.openDrawer} panHandlers={null} closeDrawerHome={this.closeDrawer}></Scene>\n        </Scene>\n      </RouterWithRedux>\n    </Drawer>\n  </Provider>\n);\n\n}\n```. ",
    "zurez": "I am having same issue, \nI tried to console.log the prop inside the componentWillReceiveProps\nFirst time I can see the prop value\nSecond time the console.log is not run. So nothing is displayed.. Okay I found the issue f and fixed my problem.\nThe problem is that if you pass the same parameter to Actions.refresh, then the refresh doesn't happen, so I have added one more variable and gave it a \"Math.random()\" value. which makes sure the view is updated everytime.\n. https://files.slack.com/files-tmb/T491AE9NX-FALHQHGTZ-1af647b5d2/screenshot_20180507-204320_1024.jpg. . ",
    "filipemerker": "@aksonov I'm not using redux, and I'm getting the same error. How can I get rid of this error? I'm only using react-native-router-flux. ",
    "alejandropinson": "@Donhv Did you make it work? Im having the same issue... @daviscabral how can I access the DrawerView?. ",
    "NN01010101": "Had the same problem with iOS (grey / white) line at the bottom. Fixed with borderBottomWidth: 0 in navigationBarStyle. ",
    "sendyputra": "this is work for me \n<StatusBar barStyle=\"light-content\"/>. ",
    "M3po": "Having same problem, same versions. ",
    "alexey-pelykh": "It's irrelevant if it's a function, tried all ways possible\nThis works:\n```\n  static get rightButtonImage () {\n    return require('./assets/correct-darkblue.png');\n  }\nstatic get onRight () {\n    return () => Actions.editprofile();\n  }\n```\nThis does not:\n```\nstatic get leftButtonImage () {\n    return require('./assets/done.png');\n  }\nstatic get onLeft () {\n    return () => Actions.about();\n  }\n``. @delia-m fyi: https://github.com/aksonov/react-native-router-flux/blob/master/src/NavBar.js#L79 is the reason whyleftButtonImage` may be a function. ",
    "ahmadw": "don't warp your Router with SafeAreaView just warp your content . ",
    "ThadeuBrito": "same here : (. ",
    "divye11": "Do you have any network requests executed at any scenes? . \nOften heavy network requests make it difficult to load, posting the code might help more for me to understand.. Could you show the code? I have built a simple login with facebook auth flow and navigator seems fine here.\n\n. ",
    "AgNm": "Thank you for your replies, I have just static data in my code, no API callings, no console log. \nI have run the below command:\nwatchman watch-del-all && rm -rf $TMPDIR/react-* && rm -rf node_modules/ && npm cache clean && npm install && npm start -- --reset-cache\nDue to this, performance is better than earlier but still the navigation took around 2 seconds to move to another scene.\nI am checking in Android right now (release build). Below is my Code:\npackage.json\n```\n{\n  \"name\": \"Test\",\n  \"version\": \"0.0.1\",\n  \"private\": true,\n  \"scripts\": {\n    \"start\": \"node node_modules/react-native/local-cli/cli.js start\",\n    \"test\": \"jest\"\n  },\n  \"dependencies\": {\n    \"axios\": \"^0.17.1\",\n    \"lodash\": \"^4.17.4\",\n    \"native-base\": \"^2.3.5\",\n    \"react\": \"16.2.0\",\n    \"react-native\": \"0.52.2\",\n    \"react-native-action-button\": \"^2.8.4\",\n    \"react-native-datepicker\": \"^1.6.0\",\n    \"react-native-easy-grid\": \"^0.1.17\",\n    \"react-native-modal\": \"^5.0.0\",\n    \"react-native-router-flux\": \"^4.0.0-beta.28\",\n    \"react-native-splash-screen\": \"^3.0.6\",\n    \"react-native-table-component\": \"^1.1.3\",\n    \"react-native-vector-icons\": \"^4.5.0\",\n    \"react-navigation\": \"^1.0.3\",\n    \"react-redux\": \"^5.0.6\",\n    \"redux\": \"^3.7.2\",\n    \"redux-thunk\": \"^2.2.0\"\n  },\n  \"devDependencies\": {\n    \"babel-jest\": \"22.1.0\",\n    \"babel-preset-react-native\": \"4.0.0\",\n    \"jest\": \"22.1.4\",\n    \"react-test-renderer\": \"16.2.0\"\n  },\n  \"jest\": {\n    \"preset\": \"react-native\"\n  },\n  \"rnpm\": {\n    \"assets\": [\n      \"./assets/fonts/\"\n    ]\n  }\n}\n```\nRouter.js\n```\nimport React from 'react';\nimport { Scene, Router, Actions } from 'react-native-router-flux';\nimport Dashboard from './components/Home/Dashboard';\nconst RouterComponent = () => {\n  return (\n    \n\n\n\n\n\n\n  );\n};\nconst styles = {\n  header: {\n    backgroundColor: '#5cafec',\n  },\n}\nexport default RouterComponent;\n```\nSideMenu.js:\n```\nimport React from 'react';\nimport {View,TouchableOpacity,ScrollView,Alert,ImageBackground} from 'react-native';\nimport {Container,Thumbnail,Content,Icon,CardItem,Item,Card,Text,Header,Drawer,Button} from 'native-base';\nimport {Menus} from './common';\nimport {Actions} from 'react-native-router-flux';\nimport _ from 'lodash';\nconst SideMenu =({children,isMenuActive,onSideMenuChange})=>\n{\nconst {currentUser} = '';\n  return (\n     { drawer = ref; }}\n      open={isMenuActive}\n      content={MenuComponent(currentUser)}\n      >\n      {children}\n    \n  )\n}\nconst onRowPress=(val)=>{\nif(val)\n  {\nif(val == \"Dashboard\")\n{\n  Actions.Dashboard();\n}\n\n}\n}\nconst MenuComponent=(currentUser) => {\n  return(\n    \n      {\n        _.map(Menus.menu,(val)=>{\n          if(Actions.currentScene == val.link)\n          {\n            return(\n              {\n                  onRowPress(val.link);\n                }}>\n                \n\n{val.name}\n\n\n            )\n          }\n          else\n          {\n            return(\n              {\n                  onRowPress(val.link);\n                }}>\n                \n\n{val.name}\n\n\n            )\n          }\n        })\n      }\n    \n  );\n}\nconst styles = {\n  nameStyle : {\n    paddingLeft:10,\n    color:'#F1BE24',\n    fontSize : 20,\n  },\n  employeeCodeStyle : {\n    paddingLeft:10,\n    color:'#fff',\n    fontSize : 15,\n  },\n  companyNameStyle : {\n    paddingLeft:10,\n    color:'#F1BE24',\n    fontSize : 15,\n  },\n  menuTextStyle : {\n    color:'#626B78',\n    fontSize : 17,\n  }\n}\nconst TouchableLink = {\n  backgroundColor: '#ebebef'\n}\nexport {SideMenu};\n```\nMenu.js\nconst Menus =\n    {\n        menu:\n            [\n                {name: 'Dashboard', link: 'Dashboard',icon:\"ios-grid-outline\"},\n            ]\n    }\nexport {Menus};\nHome.js (The page in which I am adding the side menu. I could add the whole code of this file as it is too large)\n```\nimport _ from 'lodash';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { StyleSheet,Text,View,Image,AppRegistry,TouchableHighlight,ListView,TextInput,NativeModules } from 'react-native';\nimport { Container,Fab,Body,Input,Header,Icon,Content,Right,Button,List,Item,Card,Left,Title, ListItem,Radio } from 'native-base';\nimport Modal from \"react-native-modal\";\nimport {Actions} from 'react-native-router-flux';\nimport ActionButton from 'react-native-action-button';\nimport { Col, Row, Grid } from \"react-native-easy-grid\";\nimport { SideMenu } from '../SideMenu';\nclass Home extends Component {\nconstructor(props) {\n    super(props);\n    this.state = {\n      menuActive: false,\n      visibleModal: 0,\n    };\n  }\ncomponentWillMount() {\n  }\nrender() {\n  return (\n    \n\n\nTest\n\n\n\n  );\n}\nonSideMenuChange() {\n  this.setState({menuActive: true});\n}\n}\nconst styles = {\n  textStyle : {\n    fontSize: 16,\n    marginTop : 10,\n    marginLeft : 15,\n  },\n  actionButtonIcon: {\n    fontSize: 28,\n    height: 28,\n    color: 'white',\n  },\n  modalContent: {\n    backgroundColor: 'white',\n    padding: 10\n  },\n  iconStyle : {\n    color : '#0F6940',\n    fontSize: 23,\n  },\n};\nexport default connect(null, {})(Home);\n```\nAlso Please let me know what should I use router-flux or react-navigation? Which one is better?. I have observed in my app, when data is more on the page, navigation takes time in router flux.\nCurrently I have hard coded Cards, ListView, Items, Grid in my app. . @MaxInMoon yes I tried on both Android & iOS , I am amazed to see that app is working really well on Simulators but very slow on real devices in both platforms. I am fade up of it now.. @MaxInMoon 1. Actually I am creating views right now, no redux. That why I have set it to null. \n2. Yes, I have checked. \nI have used native-base throughout my app.\nThe issue is I have created Cards, Grid, ListView, Items hardcoded on my page, The page which contains large data is taking around 2 3 seconds to load.\nA weird pause is there before every page load.. I have added <Root> tag, the performance is improved somehow but still there is some lagging \n<Provider store={store}>\n          <StyleProvider style={getTheme(material)}>\n            <Root>\n              <Router toggle={false}/>\n            </Root>\n          </StyleProvider>\n        </Provider>. yes. ",
    "k30r88": "@AgNm Have you tried using <Tab> </Tab> instead just <Scene></Scene> ? It will be much faster. I experienced similar issues and found solutions after I checked example code from this repo with <Tab> </Tab>  . ",
    "KunwarSingh": "For now I have resolved this by returning false from shouldComponentUpdate  in Parent. I think its not feasible to re-render the component where u declared Router. Still issue is there now Parent Component where Router is defined doesn't re-renders, but some the active scene does following on redux state change which is connected to parent component\nWillMount\nRender\nWillUnmount\nDidMount\n. ",
    "talakoski": "Thanks @kylethebaker for demystifying the logic :) My goal was to make a top bar with same background color for both inactive and active tabs and an indicator bottom line for active tab. After some time reading issues here and react-navigation I came up below solution. Hopefully this is helpful for others who are looking solution for the same problem.\n```javascript\nimport { Router, Stack, Scene, Tabs } from 'react-native-router-flux';\nimport { TabBar } from 'react-native-tab-view';\n {/ this needs to be declared to avoid warning.../ }}\n    tabBarComponent={(props) =>\n        \n    }\n\n<Scene\n    title=\"One\"\n    key=\"one\"\n    hideNavBar={true}\n    component={OneContainer} />\n<Scene\n    title=\"Two\"\n    key=\"two\"\n    hideNavBar={true}\n    component={TwoContainer} />\n<Scene\n    title=\"Three\"\n    key=\"three\"\n    hideNavBar={true}\n    component={ThreeContainer} />\n\n\n```\n\nVersions:\nreact-native-router-flux 4.0.6 \nreact-native 0.55.3. ",
    "xMaarf": "@Blapi I get the same result, but I need to provide the store in App.js because I have a component <BackgroundVideo />  that is going to be displayed in the background on all my components and it requires the <Provide store={store}>. . And you were able to get video working behind the router?\nWell, this is my SceneStyle, I'm using negative marginTop that contains the height of the window: \nsceneStyle: {\n      backgroundColor: 'transparent',\n      shadowColor: null,\n      shadowOffset: null,\n      shadowOpacity: null,\n      shadowRadius: null,\n      zIndex: 1,\n      position: 'absolute',\n      marginTop: -height,\n      justifyContent: 'center'. I was able to get it working by removing the negative marginTop, seems like React-Native in android doesn't supports it.\nI also had to set my video style to: \nposition: 'absolute',\n        top: 0,\n        left: 0,\n        bottom: 0,\n        right: 0\n. ",
    "luisbenan": "Thanks. That makes total sense, I knew I was missing something/breaking some rules. Hopefully there's a work around. Anybody?. ",
    "wardjk87": "I was able to user Paul-Todd comment and (https://stackoverflow.com/questions/34004331/react-es6-how-to-access-child-component-functions-via-refs) to finally get my onRight method to call my component's method using redux without having to use static method on my class.\nI didn't have mapDispatchToProps but only mapStateToProps, so I used the following export line:\nexport default connect(mapStateToProps, null, null, {withRef: true})(NewStatusPage);\nI called the submitStatusPost() method on NewStatusPage component from my scene using the following:\nonRight={()=> {                         \n        Actions.refs.newStatus.getWrappedInstance().submitStatusPost();\n}}\nThe getWrappedInstance method returned my current mapStateToProps values in my redux store for NewStatusPage. Also newStatus is the key to my scene using NewStatusPage as its component.\n. ",
    "timeturnback": "hi @wardjk87 . where do you put your ref ? . I have try\nconstructor(props) {\n        super(props);\n        this.subjectInfo = React.createRef();}\nreturn (\n            <View style={styles.container} ref='subjectInfo'>\n)\nit doesn't work. Ok. I understand I have my way to fix that problems . Just wanna report to dev team about the issue that when you pop and then go to the scene right away , the scene is render twice or triple with the old props , then the new props . This may cause some malfunction. ",
    "MERTKIRKALI": "@Blapi Thank you a lot ! But how about the hide tabs navigation bar  ? When i use hideNavBar, it is hide all NavBar. I want only hide tabs navigationbar.\nBest regards.. @Blapi  I already did. It is hide all navbar. I want to stay my top NavBar.. @Blapi Image MyCodes. ",
    "200even": "We are also experiencing this issue. We have a modal that links back to a second root scene but that scene transitions as a modal.\njs\n<Modal>\n  <Scene key='root'>\n    <Scene\n      key='Home'\n      component={ Home }\n      initial\n      hideNavBar\n    />\n    // this scene should transition from 'searchModal' as a normal scene\n    <Scene\n      key='searchResults'\n      component={ Results }\n      hideNavBar\n    />\n  </Scene>\n  <Scene\n    key='searchModal'\n    component={ Search }\n    hideNavBar\n  />\n</Modal>. ",
    "atennapel": "Fixed it with renderTitle and a custom Text component.. ",
    "rstims": "I haven't tried it but perhaps you could build out your own navbar component and add it to the Scene using the navbar prop or the renderTitle prop, see https://github.com/aksonov/react-native-router-flux/blob/master/docs/API.md#scene. @bacancy-suresh thank you, I will try that.. @cjbutcher you rock, that was the trick.\nDupe of #2981. ",
    "Twinbird24": "@Dorentin1997 upgrading react-native-router-flux from v4.0.0-beta.22 to 4.0.0-beta.26 fixed it for me, thank you!  Closing issue.. ",
    "schneems": "Seems like you've got enough badges, and this made the line wrap. Instead put a link in the CONTRIBUTING.md where there as already a bit about triaging issues.\n. ",
    "qiruiqq3": "how to fix this issue? tks. invalid. ",
    "tkalejaiye": "Would appear setting to false didn't resolve the issue either actually. Using left={null} to get around the issue now. ",
    "imMayankRaj": "The issue still persists in ^4.0.0-beta.31. As mentioned by @tkalejaiye doingleft={null} is the workaround.. ",
    "chiragsheta": "This is not working inside View\nuse \nreturn <Routes />\ninsted of \nreturn (\n      <View style={styles.container}>\n          <StatusBar\n              backgroundColor=\"#6b9b37\"\n              barStyle=\"light-content\"\n          />\n          <View style={{ flex:1 }}>\n              <Routes />\n          </View>\n      </View>\n    );\n. Or you can do one thing\njust remove alignItems:'center', from style it will fix your problems.. ",
    "prchy": "Thank you so much\nDne 1. 3. 2018 6:49 dop. napsal u\u017eivatel \"chiragsheta\" \nnotifications@github.com:\n\nOr you can do one thing\njust remove alignItems:'center', from style it will fix your problems.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/aksonov/react-native-router-flux/issues/2909#issuecomment-369481361,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AZ36nRxXb-1-3MEAfSFb59EZL-A4EB6oks5tZ4v-gaJpZM4SWhKJ\n.\n. \n",
    "tadeuaugusto": "@chiragsheta \nCould you explain why removing alignItems:'center' fix the problem?\nI was stuck with my code.. Did that and it's working now!\nThanks. ",
    "Pallavgarg": "After that background color is not showing \n. ",
    "filiipake": "same here. ",
    "thomashagstrom": "~~I don't get any tabs at all on Android. Tabs are there, you can swipe between them, but icon and title doesn't show.\nWorks fine on iOS.~~\nWorks fine as long as you don't put flex: 1 style on <Tabs> component. Try flex: 1 style on everything except the tabs, since that will break their design and hide them. Dito. Very annoying. ",
    "julien-mustiere": "adding wrap={false} to tabs component save me !!\nex.\n````\n<Stack\n title=\"Events\"\n ....\n panHandlers={null}\n\n<Tabs\n...\nheaderMode=\"screen\"\nwrap={false}\n\n  <Scene/>\n  <Scene/>\n\n\n\n````. \n",
    "thegourav": "@pgonzalez-santiago  Thanks buddy u saved my DAY i too had the same probs. ",
    "Mozartted": "@GreenCame thanks man... the wraps props was definitely the best way to solve it, but take care to avoid a Scene or a Stack on the outside in order to avoid another navbar above the Tab's navbar\n```js\n<Tabs\n       swipeEnabled\n       type=\"replace\"\n    key=\"tribeSummary\"\n    title=\"Tribe summary\"\n    showLabel={false}\n    back\n    wrap={false}\n\n<Scene key=\"overview\" title=\"overview\" icon={TabIcon} component={TribeOverviewComponent} />\n    <Scene key=\"harvest\" title=\"harvest\" icon={TabIcon} component={TribeHarvestComponent} />\n    <Scene key=\"seeds\" title=\"seeds\" icon={TabIcon} component={TribeSeedsComponent} />\n\n\n\n```. ",
    "bacancy-suresh": "Try Actions.currentParams. you can get Object of all params for current scene.. ",
    "Almaju": "I have the exact same issue with react-native-router-flux@4.0.0-beta.27, but when animationEnabled is set to false. I had to put animationEnabled: true to solve it.\nI use Apollo and every time a query is ran the screen does this white blinks.\nOnly on Android, not iOS though.. I just did a test and this works perfectly:\njs\n<TouchableNativeFeedback\n    onPress={() => {\n        setTimeout(() => { Actions.AnotherView(); }, 0);\n    }}\n/>. Here is the fix I ended up doing (it works):\n```js\nimport React from 'react';\nimport { Platform, TouchableOpacity, TouchableNativeFeedback, View } from 'react-native';\nimport _ from 'lodash';\nconst Touchable = (props) => {\n  const { ...other } = props;\nif (Platform.OS === 'ios' || Platform.Version < 21) {\n    return (\n      \n        {other.children}\n      \n    );\n  }\nif (_.isFunction(props.onPress)) {\n    other.onPress = () => {\n      setTimeout(() => { props.onPress(); }, 0);\n    };\n  }\n  return (\n    \n\n        {other.children}\n      \n\n  );\n};\n```. ",
    "jaychenjun": "I have the same issue, and I am not using tabs, this both happens on Android and IOS, emulator and physical device. This is not easy to notice when you have a light color theme, my app has a night theme, when everything goes to dark, this white flickering became very annoying.\nAnyone have a solution yet?. One thing to note, when I put all the scenes inside the Drawer, doesn't have this issue.. ",
    "hosembafer": "Any news around that? I'm starting a new application with v4 and want to know how to use redux?. @southerneer the author of previous [docs/v3/REDUX_FLUX.md] documentation, maybe he can help.. ",
    "JosePBrotons": "+1. ",
    "k0sukey": "https://github.com/react-navigation/react-navigation/pull/3650\nI found this PRs, maybe this is the cause?. ",
    "sofwu": "+1 Tab bar buttons disappear on iOS\nafter yarn add react-native@v0.54.0-rc.3\n    \"react\": \"^16.2.0\",\n    \"react-native\": \"v0.54.0-rc.3\",\n    \"react-native-router-flux\": \"4.0.0-beta.27\",. +1.\n",
    "yousseftarekkh": "I am having the same issue, i tried to upgrade my \"react-navigation\" to the latest in order to get my icons to work (previously suggested) but then i get the 'addListener' error, when i go back to my last version of react-navigation, no existing icons. Just refer me to a solution if found, please. Thanks!. Have you tried putting \u2018initial\u2019 to any of the example scenes' props? Might be irrelevant but worth a try.\nSuch as:\n<Scene key=\"example1\" component={Example1} initial />\n<Scene key=\"example2\" component={Example2}/>\nIt mainly tells the router which screen to render first.. ",
    "co2nut": "@ovaris could you give an example?\nfix . by setting the style to the icon component. ",
    "ibraheamkh": "I use Expo and I just upgraded to Expo 26 and faced this issue, just set height, width manually as @ovaris said\n`\nclass TabIcon extends Component {\nrender() {\n    const color = this.props.focused ? Colors.mainColor : Colors.lightGray;\n    return (\n        <View\n            style={{\n                flex: 1,\n                flexDirection: 'column',\n                alignItems: 'center',\n                alignSelf: 'center',\n                justifyContent: 'center',\n\n            }}\n        >\n            <Icon\n                style={{ color, width: 25, height: 25 }}\n                name={this.props.iconName || 'circle'}\n                size={25}\n            />\n        </View>\n    );\n} \n}\n\n`\nI did not find anything about iconName prop in the docs but its their\n. Custom transition can be achieved by writing your own or using  Animations defined in \n CardStackStyleInterpolator from react-navigation library as used in the Sample Project.\nRefer to these issues to know how to write custom animations:\n#2628\nThis one is in react-navigation repo but it has really good example for writing custom animation\nreact-navigation-issue1490\nalso you must use transitionConfig in all scenes to apply the transition\n. ",
    "magnattic-agency": "The icon needs to be wrapped with a View that has a set width and height. That works\n. ",
    "kaym0": "Is this working yet? Still seems to be an issue for me.. +1. Yes, out now I will post what had to be changed once I get home.\nOn Mon, May 21, 2018, 03:51 Alireza Jangi notifications@github.com wrote:\n\n@kaym0 https://github.com/kaym0 Did you found any solution?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/aksonov/react-native-router-flux/issues/3021#issuecomment-390564023,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AS02m8KmQAhgTvTmGVQJJXIog4p890Ovks5t0lz2gaJpZM4TxuyX\n.\n. \n",
    "totegsito": "@uncvrd try replacing \n<Scene icon={TabIcon} iconName='timer' key=\"tab1\" component={Dashboard} />\nwith \n<Scene icon={() => <TabIcon iconName=\"timer\"/>}  key=\"tab1\" component={Dashboard} />\nit worked for me.. ",
    "dextermb": "\nJust set width and height for Icon as a temporary fix\n\n\ud83e\udd14 \ud83d\udcad . I've found myself needing an answer for this too. That or being able to render tabs from a scene that is not nested within Tabs.. Use showLabel:\n<Tabs showLabel={false}/>. @Koshukey \ud83d\udc4d be sure to close this thread then. There doesn't seem to be a difference. Check out the API table here.\n| Property | Type | Value | Shorthand |\n|-----------------|----------|----------|--------------------------------------------|\n| ActionConst.BACK | string | 'REACT_NATIVE_ROUTER_FLUX_BACK' | pop |\n| ActionConst.BACK_ACTION | string | 'REACT_NATIVE_ROUTER_FLUX_BACK_ACTION' | pop |. Within the API docs it suggests using the lazy prop on Tabs.\n\nSource. I guess this isn't possible without having a ref to the ScrollView unless you were to loop through elements in a component recursively.\nNote that this can be done like so:\n<ScrollView ref={ref => this.scroll_view = ref}/>\nscrollToTop() {\n     this.scroll_view.scrollTo({ y: 0 });\n}. I attempted to add a function for a Scene's onEnter:\nconst refresh = () => {\n    Actions.refresh({\n        enterTime: Math.random()\n    });\n};\ncomponentDidUpdate(prev_props) {\n    if (this.props.enterTime !== prev_props.enterTime) {\n        this.init();\n    }\n}\nBut this doesn't seem to work either.. @atifplus Most features were broken after 4.0.0 (and I think ^4.0.0-beta.31) as that is when it changed to react-navigation ^2.0.\nThere's a pull request that is being worked on which will hopefully resolve these issues soon.\nhttps://github.com/aksonov/react-native-router-flux/pull/3240. Couldn't you do this through icon? Or at least this is how I am doing it?\n<Tabs>\n    // ...\n    <Scene\n        key={'Challenges'} headerMode={'none'}\n        hideNavBar={true} component={Challenges}\n        onEnter={refresh}\n        icon={({ focused }) => (\n            <TabbarIcon\n                active={focused} style={{ width: 100 }}\n                text={'Challenges'} icon={'challenges'}\n            />\n        )}\n    />\n    // ...\n</Tabs>\nThen in TabbarIcon:\n<View style={[_Tabbar.item, style]}>\n    {icon &&\n     <Image\n         style={[\n             _Tabbar.item_icon,\n             active ? { opacity: 1 } : {}\n         ]}\n         source={icon}\n     />}\n    <Text\n        style={[\n            _Tabbar.item_text,\n            active ? { color: '#c8367a' } : {}\n        ]}\n    >{text}</Text>\n</View>\nThoughts?. @daviscabral, will test tomorrow. @daviscabral #3198 . I had attempted to do with previously with React 16.4.2 and React Native 0.54.0, but alas, no luck as the application wouldn't even launch. @daviscabral Thanks for helping me work through this. We're slowing making progress. I'm now using react-native-router-flux off master.\nWhile I am still having the original problem of the software back button still skipping views, I've also noticed that tapping through the tabbar, and pressing back, will take you to the first tab. Not the previously selected ones.\n<Router>\n    <Drawer key={'root'} contentComponent={...}>\n        <Tabs>\n            <Scene key={'page_1'} initial={true} component={...}/>\n            <Scene key={'page_2'} component={...}/>\n            <Scene key={'page_3'} component={...}/>\n        </Tabs>\n    </Drawer>\n</Router>\nGoing from page_1 to 2 then 3, hitting the back button will take you back to page_1 rather than 2. Any ideas?. Interesting. @daviscabral, you'd suggest keeping my own stack of views and then just going back to the previous one? \nDoes the onStateChange prop work for Router, this way I could get the current route and push it whenever navigation happens?. This does not seem to get triggered \ud83d\ude28 \njs\nexport default class App extends React.Component {\n    render() {\n        return (\n            <Router \n                scenes={Routes} \n                onStateChange={() => console.warn('changed')}\n            />\n        );\n    }\n}. @daviscabral yeah, haha. Good stuff! I think this thread can be closed now \ud83c\udf89 Thanks again.\nI'll come up with a nice example for the back button and update the docs.. ```js\nclass App extends React.Component {\n    constructor() {\n        super();\n    this.state = {};\n    this.state.routes = [Actions.currentScene.replace('_', '')];\n    this.state.logged_in = false;\n}\n\nasync onStateChange() {\n    const route = Actions.currentScene.replace('_', '');\n    const routes = this.state.routes;\n\n    if (route !== routes[routes.length - 1]) {\n        routes.push(route);\n\n        console.warn('pushed', routes);\n\n        await this.setState({ routes });\n    }\n}\n\nasync hardwareBackPress() {\n    const { routes, logged_in } = this.state;\n\n    if (!!routes.length) {\n        const last_route = routes[routes.length - 2];\n\n        if (logged_in && last_route === 'Login') {\n            return true;\n        }\n\n        routes.pop();\n\n        await this.setState({ routes });\n\n\n        Actions[last_route]();\n    }\n\n    return true;\n}\n\ncomponentDidMount() {\n    Auth.isAuthenticated().then(logged_in => this.setState({ logged_in }));\n\n    BackAndroid.addEventListener('hardwareBackPress', () => this.hardwareBackPress());\n}\n\ncomponentWillMount() {\n    BackAndroid.removeEventListener('hardwareBackPress', () => this.hardwareBackPress());\n}\n\nrender() {\n    return (\n        <Router scenes={Routes} onStateChange={() => this.onStateChange()}/>\n    );\n}\n\n}\n```\n@daviscabral Here's what I am doing to make the back button work as expected \ud83d\ude38 . I am already on React ^16.4.2 but updating from React Native 0.54.0 to 0.55.0 doesn't seem to want to play nice. I get React Native version mismatch even after resetting cache with:\nreact-native-scripts start --reset-cache\nAny ideas, @daviscabral?. In reference to updating README, I think that most of the documentation around this package needs updating. For example in the latest versions there's an onStateChange prop for Router but it's not documented (and I bet this is one that people ask about a lot).. @daviscabral Thanks for the help! The dependencies seem to work working properly now:\n\"dependencies\": {\n    \"base-64\": \"^0.1.0\",\n    \"crypto-js\": \"^3.1.9-1\",\n    \"d3\": \"^5.0.0\",\n    \"d3-shape\": \"latest\",\n    \"expo\": \"^26.0.0\",\n    \"moment\": \"^2.22.2\",\n    \"prop-types\": \"latest\",\n    \"react\": \"^16.3.1\",\n    \"react-native\": \"^0.55.4\",\n    \"react-native-datepicker\": \"^1.7.1\",\n    \"react-native-keyboard-spacer\": \"^0.4.1\",\n    \"react-native-picker-select\": \"^3.1.2\",\n    \"react-native-render-html\": \"^3.10.0\",\n    \"react-native-router-flux\": \"github:aksonov/react-native-router-flux\",\n    \"react-native-svg-charts\": \"^4.2.0\",\n    \"react-navigation\": \"^2.11.2\"\n}. I am also noticing that my props are not being populated\n```\n Actions'ChallengeDetails'}\n\n// ...\n\n\n```\n\nOutput from this.props within componentDidMount:\nObject {\n  \"animationEnabled\": false,\n  \"drawerImage\": 2,\n  \"drawerPosition\": \"right\",\n  \"headerMode\": \"none\",\n  \"init\": true,\n  \"name\": \"_ChallengeDetails\",\n  \"navigation\": Object {\n    \"actions\": Object {\n      \"closeDrawer\": [Function closeDrawer],\n      \"dismiss\": [Function dismiss],\n      \"goBack\": [Function goBack],\n      \"navigate\": [Function navigate],\n      \"openDrawer\": [Function openDrawer],\n      \"pop\": [Function pop],\n      \"popToTop\": [Function popToTop],\n      \"push\": [Function push],\n      \"replace\": [Function replace],\n      \"reset\": [Function reset],\n      \"setParams\": [Function setParams],\n      \"toggleDrawer\": [Function toggleDrawer],\n    },\n    \"addListener\": [Function addListener],\n    \"closeDrawer\": [Function anonymous],\n    \"dangerouslyGetParent\": [Function anonymous],\n    \"dismiss\": [Function anonymous],\n    \"dispatch\": [Function anonymous],\n    \"getChildNavigation\": [Function getChildNavigation],\n    \"getParam\": [Function anonymous],\n    \"getScreenProps\": [Function anonymous],\n    \"goBack\": [Function anonymous],\n    \"isFocused\": [Function isFocused],\n    \"navigate\": [Function anonymous],\n    \"openDrawer\": [Function anonymous],\n    \"pop\": [Function anonymous],\n    \"popToTop\": [Function anonymous],\n    \"push\": [Function anonymous],\n    \"replace\": [Function anonymous],\n    \"reset\": [Function anonymous],\n    \"router\": undefined,\n    \"setParams\": [Function anonymous],\n    \"state\": Object {\n      \"key\": \"id-1535028451888-41\",\n      \"params\": Object {\n        \"animationEnabled\": false,\n        \"drawerImage\": 2,\n        \"drawerPosition\": \"right\",\n        \"headerMode\": \"none\",\n        \"init\": true,\n        \"panHandlers\": null,\n      },\n      \"routeName\": \"_ChallengeDetails\",\n    },\n    \"toggleDrawer\": [Function anonymous],\n  },\n  \"panHandlers\": null,\n  \"screenProps\": undefined,\n}\nI do not see challenge prop \ud83d\ude28 . @daviscabral Any ideas where I can find the code that might be causing this within the source?. @daviscabral is this an issue with this library or react navigation? Maybe it's worth creating an issue in react-navigation if it is something to do with them. I'm need an app pushing out sometime today, but obviously I can't do that if navigation isn't working properly.. @daviscabral hmm alright. My issue is that I need onStateChange which is in the latest releases. When does onStateChange get implemented into react-nativation? Maybe we could do a branch from flux's beta 27 and just introduce onStateChange into it until these issues are resolved?. @tuxity Unfortunately I'm using the onStateChange on Router and in 4.0.0-beta.31 it doesn't have it yet. Any updates on a potential fix, @daviscabral?. @daviscabral master seems to have props working again. Perhaps the version bump for react-navigation resolved the issue?. @daviscabral Nevermind. This isn't resolved.\n```\n Actions'ChallengeDetails'}\n\n// ...\n\n\n```\n\n\ud83d\udc4e . @aksonov We've confirmed that it's an bug with how React Native Router Flux communicates with the latest React Navigation versions. @aksonov Do you have a snack example making it easier for us to show examples?. @aksonov Seem like your app.json in the example doesn't even work with Expo without making changes to it.\nError: Missing app.json. See https://docs.expo.io/\nFrom what I've noticed it's because you're missing required attributes.. @aksonov Is there any documentation on how to run it without Expo? I'd rather try and get functionality working properly before converting the example to Expo. @daviscabral Cool, I'll give it a go and let you know \ud83d\udc83 . @daviscabral I'll continue the discussion in the PR thread. Do you need to make the menu transparent or the backdrop of the menu?. According to the API Documentation you can pass a custom navbar component with the prop navBar on a Scene or forfeit the gradient and just change the styles with the prop navigationBarStyle. @asd8855 If this resolved your issue can you close this thread.. For the sake of keeping things easy to read, could you post code snippets using the <> icon in the editor rather than screenshots.. You can do this using Drawer, which is a togglable sidebar. Set it as your root, give it a component for contentComponent and put all your other Scenes within it.\n```jsx\n<Drawer\n    key={'root'}\n    contentComponent={ContentForDrawer}\n\n<Scene key={...} component={...}/>\n<Scene key={...} component={...}/>\n\n\n```\n\nIs this what you were looking for?. \ud83d\ude32cant wait to see everything functional again, @daviscabral @aksonov . @daviscabral you've managed to resolve the param issue?. @daviscabral I will test it now and see if it works in my testcase. @daviscabral Attempted to see if it worked with the example I posted a while ago (challenge). But it didn't seem to get passed down \ud83e\udd15 . @daviscabral I've created a gist with the example I gave, along with the routes structure.\n. @daviscabral Can do, but after installing this branch then swapping back to master my app doesn't load the initial scene anymore. Trying to debug that \ud83d\ude28 . I've been trying to debug it myself from reading through code, but wouldn't the issues be happening with:\njs\n      if (!this[key]) {\n        this[key] = new Function(\n          'actions',\n          'props',\n          'type',\n          `return function ${\n            key.replace(/\\W/g, '_') // eslint-disable-line no-new-func\n          }(params){ actions.execute(type, '${key}', props, params)}`,\n        )(this, { error: '', ...commonProps, ...props }, type);\n      }\n\nSource. @daviscabral Alright, ive cloned down my app again. npm i then going to build and test with Expo. @daviscabral Isn't that magic function the point where it degregates props into the other functions then down to react-navigation?. @daviscabral \ud83d\ude1b im trying to confirm it for you but my app doesn't want to play nice after changing versions. Was unable to get the app working again after trying different things, so i'm transplanting things into an application that uses React Navigation for now. According to the API documentation, there is a second parameter on popTo that is an object for your props.\n| Property | Type | Parameters | Description |\n|-----------------|----------|----------|--------------------------------------------|\n| [key] | Function | Object | The Actions object \"automagically\" uses the Scene's key prop in the Router to navigate. To navigate to a scene, call Actions.key() or Actions[key].call(). |\n| currentScene | String | | Returns the current scene that is active |\n| jump | Function | (sceneKey: String, props: Object) | used to switch to a new tab. For Tabs only. |\n| pop | Function | | Go back to the previous scene by \"popping\" the current scene off the nav stack |\n| popTo | Function | (sceneKey: String, props: Object) | Pops the navigation stack until the Scene with the specified key is reached. |\n| push | Function | (sceneKey: String, props: Object) | Pushes the scene to the stack, performing a transition to the new scene. |\n| refresh | Function | (props: Object) | Reloads the current scene by loading new props into the Scene |\n| replace | Function | (sceneKey: String, props: Object) |  Pops the current scene from the stack and pushes the new scene to the navigation stack. No transition will occur. |\n| reset | Function | (sceneKey: String, props: Object) | Clears the routing stack and pushes the scene into the first index. No transition will occur.* |\n| drawerOpen | Function | | Opens the Drawer if applicable |\n| drawerClose | Function | | Closes the Drawer if applicable |\n| create | React.Element | pass Scene to create your app navigator. It is alternative router creation method mostly used for Redux integration |\n. @arfaWong Probably in relation to #3206.\ncc @daviscabral @aksonov . ",
    "freddneos": "\n@tmaly1980 thanks for the response, unfortunately it doesn't. I put an alert in the TabIcon function to see if it event runs, but nothing is triggered \ud83d\ude22\n\nHey man... same here on android...\ncan you help me ?. ",
    "badarshahzad": "\n@uncvrd try replacing\n<Scene icon={TabIcon} iconName='timer' key=\"tab1\" component={Dashboard} />\nwith\n<Scene icon={() => <TabIcon iconName=\"timer\"/>} key=\"tab1\" component={Dashboard} />\nit worked for me.\n\n:+1:  I like your trick. ",
    "blah1234": "@ChristianTucker , yes, your example is what I ended up doing now with the removal of the \"sceneStyle\" property on the Scene element.  \nPreviously in v3.X, it was just nice in terms of visibility (especially in multi-person teams) to apply the style in a single file to all the Scenes in the Scene tree definition for the Router, rather than applying the style to each component for the Scene over multiple files.. ",
    "telmen": "?. In API documentation, it has onBack prop but there's no API in source code.. I mean yeah, but I want to control it from either previous scene navigating to my desired scene or inside my scene. Like Actions.myscene({ onBack: () => {} }). But it doesn't work. . Nevermind, my bad. I was rendering custom back button and didn't pass props onback on onPress prop. Closing this issue.. ",
    "heralight": "I don't have this problem with android.\nI don't change any code line from Example directory, except the App.js for Expo, and I don't add or remove any style...\nProbably this problem appears in Example for ios too.\n. A far more better option is to change these dependencies to peer dependencies ... \nMobx Issue and related docs:\nhttps://github.com/mobxjs/mobx/issues/1082\nMobx docs:\n1. If there should be only one mobx instance (libraries should cooperate & react to each other)\nUse peer dependencies\nAnother point: your commit missing updated yarn.lock and not failed ci.... Sorry, I missed your question...\nIn recent versions peer dependencies will not be installed automatically, but user will be pointed out that he should install them. So he has to install yarn mobx mobx-react. But it is the only correct thing to do, otherwise he cannot (properly) update mobx versions etc without you releasing a different version from rnrf.\n. I already done this (my fork, my push, as you can see in this push request, I use it directly in my projects). but how it's done actually in  react-native-router-mobx with  normal mobx dependencies, it's clearly not the right direction. and I don't understand the limitation for everybody who don't use mobx, it's one line to set up to have flexibility and no more mobx maintenance.... ",
    "simonso-nzme": "@asciifaceman Thanks for the reply! I was using LoginScreen to simplified my example, is actually a loading screen that initialise the app. The approach you mentioned is a good solution, though I would prefer having the RESET functionality to work properly so I don't have to worry about it once the user got to HomeScreen. I've been looking around but it seems that the bug still exists in  RESET and I haven't found a way to pass props from Tabs to its children Scenes. :(. ",
    "amarkovits": "I also have this problem. Cant reset/replace to a tabs scene because the props are not passed to the children. ",
    "ANKITGUPTAMMT": "Happening for me too. Pls help. ",
    "ranjanrhunt": "Please help..happening for me as well. Need it urgently.. ",
    "XHTeng": "+1. ",
    "syntaxiom": "Unfortunately, I still have the same error. My App function now looks like this:\nconst App = () => (\n  <Router>\n    <Scene key=\"root\">\n      <Scene key=\"example1\" component={Example1} initial/>\n      <Scene key=\"example2\" component={Example2}/>\n    </Scene>\n  </Router>\n);\nI even tried explicitly typing initial={true}, but that doesn't work either.. Just as an update (sorry to anyone viewing this from Google), I don't use React Native anymore. I'll leave this issue open in case someone properly solves it later on however. It wouldn't be fair to close it if someone could benefit from this. Thanks everyone so far for the suggestions.. ",
    "parkdcom": "I've had the same issue for a long time now. . ",
    "GuidoSchweizer": "717 seems to be unresolved. Non of the workarounds described there worked for me.",
    "highread": "same problem. ",
    "ibrahimsenan": "@Blapi I have checked the code many times  but the screen never update or change the view after I navigate to another one and get back to it, it got disabled some home, I am depending on socket to update the status, do you have any idea about that.\n@Blapi thank you . @Blapi , the problem on first initializing the project I have Scene 1 with drawer, when I navigate from drawer to  Scene  2 and then back to --> Scene 1, if I get any socket or SetState it will not update in Scene 1, new orders will never shows up, only notification.\n\n. I did not understand, why Scene  1, interact well at the first time and it updates the UI and it showing the new orders as received from the socket normally, but when I go to other Sence from the drawer,  Scene 1 stop updating the UI totally, even when the state changes but Ui not responding, Listview it stopped totally. I tried to do ForceUpdate but nothing worked. \nThank you @Blapi  for your great help.. ",
    "EiderDiaz": "same issue here,  @baonguyen2604 did you find any solution or a workaround?. ",
    "direwolf424": "same issue here.. ",
    "pakkibokati2012": "I also encountered this issue. I recommend using Actions.jump('main', {user_id: json.user_id}).\n. \n. You saved me from myself!. Thanks\nOn Tue, May 15, 2018 at 8:40 PM, Davis Z. Cabral notifications@github.com\nwrote:\n\nClosed #3034\nhttps://github.com/aksonov/react-native-router-flux/issues/3034.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/aksonov/react-native-router-flux/issues/3034#event-1627425387,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/Ag8Tz1OuF47r_O3Aq71RHE_FkRSivZRFks5tyuxZgaJpZM4T_A5E\n.\n. <Scene key=\"tabbar\" tabs tabBarPosition='bottom'>\n          <Scene key='StepList' title='Steps' icon={TabIcon} back component={StepList} iconName=\"list-ul\"\n           swipeEnabled />\n            <Scene key=\"See Site on Map\" title=\"See Site on Map\" icon={TabIcon} back component=\n           {ShowMap} iconName=\"map-marker\" swipeEnabled />\n            <Scene key='Show Documents' title=\"Site Documents\" icon={TabIcon} back component=\n            {DocumentList} iconName=\"file-pdf-o\" swipeEnabled />\n</Scene>. \n",
    "Royalone-mobile": "Yes, of course.\nDo you have experience really how to do like my way?. Nope, You need to google before answer my question.\nsince I had seen it is working in previous version when I first implement it.\nbut After adding some packages and modified code, it doesn't work.\nand i have no that version code so I wanted to get help.\n. ",
    "igorsantos07": "~Not sure if renderTitle solves this matter, but it was mentioned by OP - even though he solved in another way... Is it possible to set the title dynamically, from inside the Scene's component? E.g. my component's title is based on a field of a prop it receives.~\nGoing to submit a PR with an example to illustrate this. Found how to do it:\nrenderTitle={({prop}) => 'List: ${prop.name}'}. I also tried to organize my router in a more logical way, and got crazy issues with navigation moving into a blank screen. Example code:\n```jsx\n\n\n\n\n<Modal key=\"lists\" hideNavBar initial={logged}>\n  <Scene key=\"showLists\"  hideNavBar={false} component={ShowListsScreen} title=\"Your To-Do lists\"/>\n  <Scene key=\"createList\" hideNavBar={false} component={CreateListScreen} title=\"New To-Do List\"/>\n</Modal>\n\n<Modal key=\"toDos\" hideNavBar>\n  <Scene key=\"showToDos\"  hideNavBar={false} component={ShowToDosScreen} renderTitle={AppRouter.toDoTitle}/>\n  <Scene key=\"createToDo\" hideNavBar={false} component={CreateToDosScreen} renderTitle={AppRouter.toDoTitle}/>\n</Modal>\n\n\n\n```\nUsing Actions.createToDo() and then pressing the back button would bring me to an empty screen, which is probably generated by that <Modal key=\"toDos\"> with no component.. ",
    "janaka120": "@blackinitial How to access to params in the screen. . ",
    "guanbiao33": "the same\uff0cdid you fixed it\uff1fthank you. ",
    "liweijieok": "@asciifaceman thank you for your advice, but it doesn't seem to work, the proplem is that i try to use double router to different page(purpose for native to RN page)\uff0cbut they opened the same page.It will display normal when I manually refresh by double R.\n. I use ReactNative Navigation instead of RNRF to solve this problem.. ",
    "drailanjohngss": "im also experiencing this problem. . ",
    "IronTony": "Tried with 4.0.0-beta.28 and it works. @ryanmr Thank you for the answer. It was my fault in the upper code.\nThe only problem I get now is that the isAuth prop (is a value that I set in the store/persist) is not received as true when moving from Login to Home  when I log in.. I will test and let you know, thank you!. ",
    "Koshukey": "Me, too !\ud83d\ude2d. Does anyone know how to fix this???. @smhassan90 \nThanks, I was able to resolve! .  ```\n\n\n\n                        rightTitle=\"Yours\"\n                        title=\"Ranking\"\n                        key=\"showmessages\"\n                        component={ShowMessages}                                   />\n                <Scene\n                    title=\"MyPage\"\n                    key=\"mypage\"\n                    component={MyPage}\n                    direction='vertical'                     \n                />\n\n            </Tabs>\n            </Scene>\n            <Scene key=\"sub\">\n            <Scene\n                title = \"Yours\"\n                key=\"showyourmessages\"\n                component={ShowYourMessages}\n            />\n             <Scene\n                 title = \"Details\"\n                 key=\"showdetails\"\n                 component={ShowDetails}            \n             />\n            <Scene\n                title = \"MyMap\"\n                key=\"showmymap\"\n                component={MypageMap}\n\n            />\n        </Scene>\n\n```\nI did like this. i made another scene which does not have tag element and I put what i do not wanna show tabs there.. @dextermb  Thanks it worked !!!. ",
    "smhassan90": "I fixed it by making it a child of some scene. Let me know if you need more clarification.. How did you resolve? I want to know if there is some good work around. ",
    "eddiesigner": "In my case I had to set the height as well (react-native@0.54.4). ",
    "cjbutcher": "Add width and height style properties to the icon. See #2981.. ",
    "riwu": "Change to \"react-native-router-flux\": \"4.0.0-beta.27\" (remove ^) otherwise your package manager will still install the .28 version (unless you have a .lock at .27). ",
    "Sharcoux": "Related to #2799. ",
    "socialcode-rob1": "same as #2923 . @CZHach did you figure out the cause?. ",
    "lingster": "Have you tried including <Icon height:20 width:20... /> before the text in your tab icon component? . ",
    "charles-salmon": "Branched off changes from PR, and have created new PR here. Closing.. ",
    "AzizUrRehman1": "it' not work\n. ",
    "0xngoubou": "fixed:\non the edit-profile.js\ncomponentDidMount() {\n        this.props.navigation.setParams({onRight: this.updateProfile });\n    }. ",
    "serjek": "please see https://github.com/aksonov/react-native-router-flux/issues/2976. ",
    "isamuhiro": "@daviscabral yeah, I just declared an Header component into the navBar props on <Stack/> component. It should be the pattern component of <Tabs/>. \nShould be something like this:\n<Stack key=\"app\" navBar={Header}>\n  <Tabs>\n    //Your scene components containing a fixed header \n  </Tabs>\n</Stack> \n. ",
    "alexgas": "Try to remove the dependency and add it again. \nyarn remove react-native-router-flux || npm remove react-native-router-flux\nyarn add react-native-router-flux || npm install react-native-router-flux\nIt works for me.\n. ",
    "LeviWilliams": "I've been having this issue every since I updated react native as well. This is a widespread issue all over github for react-navigation. No clue how to fix it I've tried everything.\nEDIT:  I reinstalled/updated react native, linked the packages, and npm removed and install router flux and it began working again. I believe the problem lies if you update router flux past 0.28. Only way to do this is using the panHandlers={null} prop. You can switch up how your scenes are nested or only specify that prop on certain scenes to ensure the rest of your application still has the expected swipe back behavior.. Many solutions to this have been shown in this repository for auth protecting scenes. One example: #1668. ",
    "Pitty91": "I solved my issue by removing ^ from the package.json \n\"react-native-router-flux\": \"4.0.0-beta.27\",\nso I am closing it . ",
    "midas-gufei": "PageA\ncomponentWillReceiveProps ()  {\n  this.onRefresh()\n }\nPageB\nActions.pop({refresh: {}});\n. ",
    "flashimxd": "I wanna know this as well.... ",
    "zhangjingzhu19930808": "you can try Actions.drawerOpen();. ",
    "tianling536": "try tabBarPosition='bottom',example:\n<Tabs  key='tabBar'\n           swipeEnabled\n           showIcon={true}\n           showLabel={false}\n           tabBarPosition='bottom'\n           hideNavBar\n           type={ActionConst.RESET}\n           inactiveTintColor=\"#999999\"\n           initial={false}\n           default='home'>\n   your Scenes...\n</Tabs>. ",
    "kr0000": "The same issue. @jie any progress here? i have the same issue.. @aksonov i have the same problem - how can i hide icon on menu any ideas?. ",
    "ajangi": "Guys, I have the same issue! How can we fix it?. @kaym0 Did you found any solution?. @januswel @andrew @daviscabral @joenoon Is there any solution for this guys?. @guangyuzhihun What do you mean bro? Is there any solutions for this issue? did you fixed it?. @aksonov How can I solve this issue dear Pavel? \nThanks!. @daviscabral Thanks buddy.\nBut I don't wanna ignore the warning and want to solve it. The warning says that it might cause memory leakage.\n . ",
    "guangyuzhihun": "Warning: isMounted(...) is deprecated in plain JavaScript React classes. Instead, make sure to clean up subscriptions and pending requests in componentWillUnmount to prevent memory leaks.. ",
    "xuho": "I have the same issue too.. ",
    "RijaAdrian": "Same issues here !  . ",
    "gaearon": "Should be fixed in 0.57.. ",
    "baldeweb": "@Blapi it does not work for me. {\n  \"name\": \"XPTO\",\n  \"version\": \"0.1.0-ALPHA\",\n  \"private\": true,\n  \"devDependencies\": {\n    \"babel-preset-react-native-stage-0\": \"^1.0.1\",\n    \"jest\": \"^22.4.3\",\n    \"jest-react-native\": \"^18.0.0\",\n    \"react-test-renderer\": \"16.3.1\"\n  },\n  \"scripts\": {\n    \"start\": \"react-native start\",\n    \"android\": \"react-native run-android\",\n    \"ios\": \"react-native run-ios\",\n    \"test\": \"jest\"\n  },\n  \"jest\": {\n    \"preset\": \"react-native\"\n  },\n  \"dependencies\": {\n    \"react\": \"16.3.1\",\n    \"react-native\": \"~0.55.2\",\n    \"react-native-layout-provider\": \"^1.2.1\",\n    \"react-native-router-flux\": \"^4.0.0-beta.27\",\n    \"react-navigation\": \"^1.5.12\",\n    \"recyclerlistview\": \"^1.3.4\",\n    \"watchman\": \"^1.0.0\"\n  }\n}. @Blapi Still not working :(. @Blapi  Hahaha nothing... I'm almost losing my hope in this.... #### Check the version of RNRF in node_modules, it should be .27 and .27 isn't supposed to break.\n- Yes, it's in 4.0.0-beta.27\nCheck that the imports are correct where you create the Router\n\nYes, they are correct\n\nShow me how you navigate through your app. Also, is it breaking only when you press on the TouchableOpacity ?\n\nYes, it only breaks when I tap the TouchableOpacity. I trying to navigate from Login to SearchProduct (next Screen that I created), . Yes, But I also tried to change to ...onPress={() => Actions.search_product()}... but the error is still here. The code of my SearchProduct:\n```\nimport React from 'react';\nimport { StyleSheet, Text, View, StatusBar, Button, Image, TouchableOpacity, Alert, TextInput, ImageBackground } from 'react-native';\n\nexport default class SearchProduct extends React.Component {\n  render() {\n    return (    \n\n\n    {/* CAMPO DE LOGIN */}        \n    <ImageBackground source={require('../imgs/etc/busca_bg.png')} style={{width: '100%', height: '100%'}}>\n      <View style={Style.baseSearch} >\n        <View style={Style.baseLogos}>\n            <Image source={require('../imgs/logos/logo_img.png')} style={Style.imgLogo} />\n            <Image source={require('../imgs/logos/logo_cent_peq.png')} style={Style.imgLogo} />\n        </View>\n\n        <TextInput style={Style.inputSearch} placeholder={'C\u00f3digo do produto'} placeholderTextColor={'#9E9E9E'} multiline={false} numberOfLines={1}/>\n        <TouchableOpacity style={Style.btnSearch} onPress={onSearch} activeOpacity={0.8}>\n          <Text style={Style.txtBtnSearch}>BUSCAR</Text>\n        </TouchableOpacity>\n      </View>\n    </ImageBackground>\n\n  </View>\n);\n\n}\n}\n```. #### What is you SearchProduct Component ? Is it the same behavior when you navigate to any other screen?\n- I'm only trying to make the action in Login -> SearchProduct, the other screen there's not an action button\nAlso, it is hideNavBar and not hidenavbar, but it should not fix your issue\n\nI changed this too, but nothing. I removed, and... Same thing :/ . \n",
    "nallbradley": "Any updates on this? I am seeing this behavior as well.. ",
    "fawadjadeedid": "react-native . ",
    "webtaculars": "I too had the same issue with \"4.0.0-beta.26\". So I downgraded react-native-router-flux to v3.43.0 for a temporary fix.  . ",
    "ranadeep47": "I have upgraded it to react-native-router-flux\": \"^4.0.0-beta.30 and still the issue persists. For now i have managed to get this working by using https://github.com/react-native-community/react-native-tab-view. ",
    "lorcanluo": "I have the same problem.. ",
    "JackGZY": "I have the same problem,too.. @aksonov  When to release the next version? I need to use this.. ",
    "Hgq1001": "@daviscabral i have updated it  to 4.0.0-beta.31,but that does not work,too\uff01. ",
    "rayj10": "@daviscabral not from within ScrollableTabBar... besides it would be weird if say Home is not the only child of the scene with ScrollableTabBar wouldn't it? \nI have changed my structure anyhow because I found a better way of achieving what I wanted to. But just for future reference I would still like to know how can I access the array of children and their props from a component loaded onto parent scene i.e. ScrollableTabBar?\nI know that usually it's available via this.props.children but thats if I have something like:\n<ScrollableTabBar>\n            <Child1>\n            <Child2>\nbut if I have this:\n<Scene tabBarComponent={ScrollableTabBar}>\n            <Child1>\n            <Child2>\nthis.props.children is returning undefined from within ScrollableTabBar. UPDATE: turns out this problem only occurs when I'm auto logged in (i.e. skipped the Auth stack and straight into the Main stack), it seems something went wrong between the reloading and componentWillUnmount or componentDidMount not being called and BackHandlers from previous reloads collide somehow.\nBecause if I try this scenario:\nlogin --> Setting/Help/QR tab --> hardware back to Home it doesn't cause the problem\nbut if I do:\nautoLogin(login using stored token) --> Setting/Help/QR tab --> hardware back to Home the default BackHandler will be called, but if I press back once again, the desired BackHandler is called and I'm logged out, then if I try to login again, everything works perfectly!\nHope this helps narrowing down my problem. not related to RNRF, problem was with componentDidMount called again after hot reloading without componentWillUnmount ever called causing listener stack to act weird. \n. turns out to be react-native problem that's still not fixed until 4 days ago, sorry, closing this here. ",
    "kirkjoan": "@b1acKr0se \nHave you tried this? Actions.root({ type: ActionConst.RESET }) This one will put you back to the initial scene.. @delia-m popTo() will close the scenes along the way.. ",
    "lupino22": "You can use\nimport { Scene, Router, ActionConst } from 'react-native-router-flux'; \nthen\n<Scene key=\"someScene\" type={ActionConst.REPLACE} />\nScene will be disabled doing swipe back.. ",
    "faheem121": "just put the  gestureEnabled={false} in scene tag \nexample:its work for me after login switch to home scene and now never swipe back\n. \n. ",
    "adeamos83": "You must use \"drawerLockMode='locked-closed' gesturesEnabled={false}\" together inorder for the swipe action to be fully disabled\n<Scene key=\"home\" drawerLockMode='locked-closed' gesturesEnabled={false} component={HomeContainer}/>. ",
    "AE0011": "@adeamos83 Thanks it works. ",
    "lafiosca": "Why was this issue closed? I have been digging through the documentation and code for quite a while now and trying various things, but I haven't found a way to pass the forceInset param through the Scene, other than perhaps constructing my own navBar.. I finally realized you can just pass headerForceInset directly as a property of the Scene:\n<Scene\n    key=\"foo\"\n    component={Foo}\n    hideNavBar={false}\n    title=\"Foo\"\n    headerForceInset={{ top: 'never' }}\n    navigationBarStyle={{ backgroundColor: '#ffffff' }}\n/>. @compojoom Did you ever determine answers to this?. ",
    "EnginYilmaz": "import { StatusBar} from 'react-native';at top of your file and in your render() function\n<StatusBar hidden={true} />\nshould work. ",
    "jie": "@kr0000 I use custom tabbar instead. @RobinJayaswal \nNo, I don't use react-navigation,\nhere is the code:\n``` javascript\n                                \n```\nTabBar is a React.Component. ",
    "TheRealDerek": "Just encase anyone else was having the same issue I managed to resolve it by changing the structure of my scenes. This now works perfectly and can navigate between tabs and scenes with no issues.\n```\nrender() {\n    console.log(\"**** ON RENDER: \" + JSON.stringify(this.state));\n    if (this.state.loading) {\n      return ;\n    } else {\n      return (\n       \n\n\n\n\n\n\n\n\n\n            </Tabs>\n            <Scene\n              key=\"Chat\"\n              component={Chat}\n              title=\"Chat\"\n              titleStyle={{ alignSelf: \"center\" }}\n              hideTabBar={true}\n              tabs={false}\n            />\n            <Scene\n              initial={this.state.auth}\n              key='auth'\n              component={Auth}\n            />\n            <Scene\n              key='codeValidation'\n              component={CodeValidation}\n            />\n            <Scene\n              initial={this.state.profile}\n              key='profile'\n              component={Profile}\n            />\n          </Scene>\n        </Stack>\n      </Router>\n    </Root >\n\n)\n```. ",
    "madhavgaba": "It is still not working, I tried commenting the part above key='root'. ",
    "gyf19": "I want to know what version of react-native is required after the upgrade?\n. ",
    "haddow777": "The problem with aligning the title manually is that it becomes lopsided once icons like the back button are added. It is centered in an element that has been pushed over by the icon element.\nBlah. Okay, I found it out. Don't style the title to center it, as I mentioned before, it will look ugly once icons added to back title text.\nheaderLayoutPreset=\"center\"\nPlace the above in your top level scene. For some reason, on Android the title is defaulted to the left, even though the documentation says it's supposed to default to the center. Here's mine:\n```\n<Scene\n  key=\"root\"\n  headerLayoutPreset=\"center\"\n\n```. \n",
    "ferdelcorro": "I have the same issue that @prashoor-dev , this example is beautiful.\nv4.0.1. ",
    "wolverineks": "Wow, tell me how you really feel.... i prefer passing components as children whenever possible. It's understandable that you might disagree with this style, but im still asking, is it possible?\nor more to the point\nwhy does this work\n<Scene key={'myScene'} component={MyComponent} />\nbut this doesnt\nconst MyScene = () => <Scene key={'myScene'} component={MyComponent} />\n...\n  <MyScene />\n...\n. ",
    "mohammad1374": "\u062f\u0627\u062f\u0627\u0634 \u06af\u06cc\u062a \u0648 \u062f\u0627\u0646\u0644\u0648\u062f \u06a9\u0646 \u0648 \u0646\u0635\u0628 \u06a9\u0646 \u0628\u0639\u062f\u0634 \u0627\u06cc\u0646 \u062f\u0633\u062a\u0648\u0631 \u0648 \u062a\u0648\u06cc \u062a\u0631\u0645\u06cc\u0646\u0627\u0644 \u0648\u06cc\u0646\u062f\u0648\u0632 \u0628\u0632\u0646 \u0627\u0648\u06a9\u06cc \u0645\u06cc\u0634\u0647\ndownload and install git then enter this command in cmd. ",
    "nfq6612": "When I double click ,the page opening two times.\nonclick=()=>{\nActions.push('login');\n}\n. ",
    "AlexCatch": "From a UX perspective, you're looking a modal rather than replacing a tab screen, only scenes inside a tab bar will be rendered with a tab bar because they're the core sceeens of the app.\nAny additional views like edit profile screens etc should be presented as modals.. ",
    "Maxence-Machu": "Same here. ",
    "Hypothesis-github": "I looked into this issue, and the only way around it is to not use react-native-router-flux and find an alternative apparently . @aTable the latest is 4.0.0-beta.31, I cannot see 32 in the release list https://github.com/aksonov/react-native-router-flux/releases. I added event listeners to my code and this in away does it on android \n```\n componentDidMount() {\n        BackHandler.addEventListener('hardwareBackPress', this.props.store.resetProps);\n      }\n  componentWillUnmount() {\n    BackHandler.removeEventListener('hardwareBackPress', this.props.store.resetProps);\n  }\n\n```\n. ",
    "McMainsLiam": "I'm having the same problem. Would love to see this issue addressed. \nCurrently using versions:\n\"mobx\": \"^5.0.3\",\n\"mobx-react\": \"^5.2.3\",\n\"react-native-router-flux\": \"^4.0.0-beta.31\"\nAny help would be appreciated! Thank you!\nEDIT:\nI fixed the problem by reverting my mobx and mobx-react versions to the same versions that react-native-router-flux uses. Currently these are:\n\"mobx\": \"4.1.1\",\n\"mobx-react\": \"5.0.0\"\nRemoving the ^ symbol in front of the version number will keep mobx and mobx-react from automatically updating to the next major version. \nHope this helps someone!. ",
    "catherinetcai": "If you're using yarn, you can follow this, which resolved my issue.\nAlso beta.32 apparently resolves this issue: #3100 . If for some reason you don't feel like bumping the version, I was able to workaround this using yarn and resolutions, as outlined here.. Is this the same issue as https://github.com/aksonov/react-native-router-flux/issues/3100? . ",
    "china-english": "Same issue here.\n\n\"react\": \"16.3.1\"\n\"react-native\": \"0.55.4\"\n\"react-native-router-flux\": \"^4.0.0-beta.31\"\n\n. ",
    "rayjadore": "same issue. ",
    "aTable": "Your version of react-native-router-flux ^4.0.0-beta.31\" doesn't properly include mobx which is fixed in ^4.0.0-beta.32. This problematic version is the default on npm so, at this time, you'll need to manually upgrade to the latest and this issue is gone. \nThe creator of mobx outlines the method for properly including mobx in code intended for shared libraries. I guess it's an unofficial beta at this stage\nnpm i react-native-router-flux@4.0.0-beta.32. ",
    "ekoooo": "e.g. image = require('../assets/form-icon.png');. ",
    "radjivF": "thx @ekoooo, but unfortunately I have tried this too and I get \n```\nViolation: Element type is invalid: \nexpected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.\nCheck the render method of TabIcon.\n```\n. ",
    "jcoulaud": "\nthx @ekoooo, but unfortunately I have tried this too and I get\nViolation: Element type is invalid: \nexpected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.\nCheck the render method of TabIcon.\n\nI had the same thing when using the Image component from React Native Elements. Switched to the Image component from React Native and it fixed the problem ;). ",
    "m-ochyra": "Is this trick posible for Actions.popTo()? I need to go few scenes back and refresh last one. I thing this is not correct solution but it works:\nActions.pop();\nActions.pop();\nActions.pop({ refresh: data });\n\nreact-native-router-flux v4.0.0-beta.31\nreact-native: v0.55.4. \n",
    "luanbitar": "you need to import Actions as an object, like this:\n    import {Actions} from \"react-native-router-flux\";. ",
    "zouminhuababa": "using right insteadof renderRightButton. ",
    "Rynxiao": "using setTimeout my be help\njavascript\n componentDidMount() {\n    setTimeout(() => {\n        Actions.refresh({ renderRightButton: this.renderRightButton });\n    }, delayTime)\n  }\nthe scene key is prev navigation's  when redux update data\nthe code in navigationStore.js Line 930\njavascript\nconst { key } = getActiveState(this.state);. ",
    "rupvm": "@CptFabulouso right ..its working..thank you. ",
    "danielzzz": "@ebaynaud  thanks for the fix, it worked for me!. I execute this command from the project root, to fix it:\nsed -i -e 's/TabRouter/tabRouter/g' node_modules/react-navigation/src/navigators/DrawerNavigator.js\nsed -i -e 's/\\/routers\\/tabRouter/\\/routers\\/TabRouter/g' node_modules/react-navigation/src/navigators/DrawerNavigator.js. ",
    "TwilightOwl": "this is because babel plugin which allows instance creation without \"new\" keyword is removed from babel 7 https://babeljs.io/docs/en/babel-plugin-transform-class-constructor-call. ",
    "Amnesthesia": "I'm hitting this too :( This was insanely confusing to debug. I've already done that \u2014 works in debug mode, still crashes in release. ",
    "pavjacko": "run this package.json snippet in postinstall or manually before release:\nFor older react-navigation (where SwitchRouter is not available)\n{\n  \"scripts\": {\n    \"fix:react-navigation\": \"sed -i '' 's/ TabRouter/ tabRouter/g' ./node_modules/react-navigation/src/navigators/DrawerNavigator.js && sed -i '' 's/ StackRouter/ stackRouter/g' ./node_modules/react-navigation/src/navigators/StackNavigator.js && sed -i '' 's/ TabRouter/ tabRouter/g' ./node_modules/react-navigation/src/navigators/TabNavigator.js\"\n  }\n}\nFor newer react-navigation (where SwitchRouter is available)\n{\n  \"scripts\": {\n    \"fix:react-navigation\": \"sed -i '' 's/ TabRouter/ tabRouter/g' ./node_modules/react-navigation/src/navigators/DrawerNavigator.js && sed -i '' 's/ StackRouter/ stackRouter/g' ./node_modules/react-navigation/src/navigators/StackNavigator.js && sed -i '' 's/ TabRouter/ tabRouter/g' ./node_modules/react-navigation/src/navigators/TabNavigator.js && sed -i '' 's/ SwitchRouter/ switchRouter/g' ./node_modules/react-navigation/src/navigators/SwitchNavigator.js\"\n  }\n}\nshould fix the issue until react-navigation releases patch for this. ",
    "bulatshafigullin": "@pavjacko With these fixes applied, still can't run it in release mode (debug mode is ok)\n2018-08-07 15:24:35.636 [error][tid:com.facebook.react.JavaScript] TypeError: undefined is not an object (evaluating 't.default'). ",
    "rishiankush": "I am facing the same issue, I tried everything mentioned above, nothing worked for me.\nDebug mode is working fine. Problem occurs in release mode.\nRN version: 0.56.0. ",
    "Anujmoglix": "I tried all solution but no luck . Worked for me .  :) . @VesperDev  i tried with https://github.com/adamivancza/react-navigation/commit/db8be7cc0b4ac738242ce82bcc2d1f3254a028c0#comments . check it .. 0.56. ",
    "VesperDev": "i sorry but ever have problem. which of all the solutions worked for you or what did you do. Thanks this works.. ",
    "Pruthvirajcodewave": "Thank you guys, renaming TabRouter to tabRouter  in \"node_modules/react-navigation/src/navigators/DrawerNavigator.js\" file worked for me.. ",
    "skokon": "\nThank you guys, renaming TabRouter to tabRouter in \"node_modules/react-navigation/src/navigators/DrawerNavigator.js\" file worked for me.\n\nThank you so much!!!!!!!!\n. ",
    "ericjordanmossman": "\n. Fix is hideNavBar in parent scene.. ",
    "Maple13": "I also encountered this problem, is there a solution? My version is 4.0.0-beta.31. @Twinbird24  Hey! You can look at #504, Use indicatorStyle can cover underscore. ",
    "muhamad-rizki": "@daviscabral well here is code I used in my App.js:\n<MenuProvider ref={v => this.optionsMenu = v}>\n                <View style={{\n                    flex: 1\n                }}>\n                    <StatusBar\n                        translucent={true}\n                        backgroundColor=\"rgba(0,0,0,0)\"\n                        barStyle=\"light-content\" />\n                    <Router uriPrefix=\"stiami.ac.id\">\n                        <Lightbox key=\"lightbox\">\n                            <Stack key=\"root\" hideNavBar transitionConfig={() => fadeIn(500)}>\n                                <Scene key=\"splash\" component={SplashScreen} hideNavBar initial={true} />\n                                <Scene key=\"home\" hideNavBar type={ActionConst.RESET}>\n                                    <Scene key=\"dashboard\" component={HomeScreen} hideNavBar />\n                                </Scene>\n                                <Scene path=\"/info\" navTransparent key=\"info\" component={InfoScreen} />\n                            </Stack>\n                            <Scene navTransparent key=\"downloadDetail\" component={DownloadDetail} />\n                        </Lightbox>\n                    </Router>\n                </View>\n            </MenuProvider>\nthen I tried access link from my phone http://stiami.ac.id/info but it's still open a web browser.\nis there anything I should configure on android folder? because the documentation is not clear enough,\nI read on some website about deep linking on react native and it need to configure the AndroidManifest.xml (http://ihor.burlachenko.com/deep-linking-with-react-native/) I add intent filter:\n```\n\n\n\n\n    <data android:scheme=\"http\" />\n    <data android:scheme=\"https\" />\n    <data android:host=\"stiami.ac.id\" />\n    <data android:pathPrefix=\"/\" />\n\n\n```\nAfter that I tried to open a link and the apps is shown, but not triggering the linking on rnrf, only show the home screen, on the website I found it looks like I have to use RN Linking library, but when I see the RNRF source code I see that this Linking is already there, but did nothing, is there something went wrong with my code? Maybe I missed something, thanks for your help. allright then. ",
    "mobdim": "@aksonov \nHello,\nSame error. After upgrade to beta.42 error is gone, but could not change a scene. I had to roll back to the version beta.31.\nThis work in beta.31:\n```\nconst scenes = Actions.create(\n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<Scene key=\"select_country\" component={SelectCountryScreen}/>\n<Scene key=\"indicator\" component={IndicatorScreen}/>\n<Scene key=\"phonepad\" component={PhonePadScreen} modal/>\n<Scene key=\"call\" component={CallScreen} modal/>\n<Scene key=\"new_account\" component={NewAccountScreen} modal/>\n\n\n)\nexport default class AppNavigator extends Component {\n  render() {\n    return (\n      \n    )\n  }\n}\n``\nAnd I can change a scene likeActions.drawer()`.\nWhat changes need to be made to the beta version.42 working?. @aksonov Yes, I created test repository\nIf call change a scene from componentWillMount() not work in beta.42, but work in beta.31.\nThis line.. @aksonov Ok, I rewrite line, but the scene don't change in function componentWillMount. . @aksonov Yes, it's work. But this is a bad thing )) Let me remind you that in version 31 it worked. . @aksonov Thanks for the clarification. I'm mostly a native developer, so I'm still not good at redux and react native, I think about other patterns (like viper, mvvm etc).. ",
    "fcpauldiaz": "When I enable, swipe, the tab bar goes to top in Android, even with the setting tabBarPosition: 'bottom', how do I fix this?. ",
    "rajkishoreandia": "Can anybody help me how to refresh or reload the back stack scenes in react-native-router-flux?\nThanks. ",
    "HengCC": "@aksonov  thanks,\nBut I mean, when I execute Actions.popToMark(), I don't know what the point I am marking. This point is automatically maintained in memory only when I execute Actions.mark().\nFor example:\nActions.mark(),\nActions[key1].call(),\nActions[key1].call(),....Actions[keyN].call(),\nWhen Actions.popToMark() is executed again, it will return to the position of key1.. i try this, but got an error:\nCannot read property 'routes of undefined'. i read the source code . I found the scene just as a container, it's not really rendered, So the above solution is not feasible. Is there any other solution that can handle the onEnter event of all routes uniformly?. @daviscabral   thanks! I have tried your idea, but it still doesn't work. \nMy current solution is to add the onEnter event to each Scene.. I haven't tried this method yet, maybe it's feasible, but I don't think there is any difference between this method and the way that the onEnter event is added directly on the Scene, and this implementation is intrusive to the component. I am not sure if such demand is universal,  if it is, as you said, Adding a unified onEnter on the Router may be a better solution. \n. ",
    "matthewkwong2": "Same issue, when in the initial page, the hardware back button has no effect at all.\nYou may implement the BackHandler yourself, if you really need it right now.\nhttps://facebook.github.io/react-native/docs/backhandler. Try to do the following:\nIn your Scene  1:\n```\nupdateTask = (value) => {\n    this.setState({\n        task: value\n    });  \n};\n// ...\n\n```\nWhen you want to pass the value to another scene, let say you want to navigate to Scene 2 on button press,\nonPress = () => {\n    Actions.push(\"scene2\", {incomingTask: this.state.task}); // passing state.task of Scene 1 to props.incomingTask of Scene 2\n}\n. OK... I'm confused, do you want the Drawer to appear from the left or right?. This is because the transition config of react navigation (that's what this library based on) has set a black bg in default when the OS is ios. To solve that: \n```\ntransitionEffect = () => ({\n        containerStyle: {\n            backgroundColor: \"transparent\"\n        }\n});\n// some code...\n<Stack\n    key=\"rootStack\"\n    transitionConfig={this.transitionEffect}\n\n// some code ...\n\n```. OK, from the offical doc of react navigation, the key feature of Switch Navigation is \nto only ever show one screen at a time. By default, it does not handle back actions and it resets routes to their default state when you switch away. \n\nYou may try to look at Actions.reset() \nhttps://github.com/aksonov/react-native-router-flux/blob/master/docs/API.md#actions\nwhich seems like something you are looking for. The downside though is no transition animation will be fired. If you want to keep the animation while simply prevent users going back to the previous page, try back={false} in the corresponding Scene and override the BackHandler (Android only, ios doesn't have a hardware back button) for that particular scene. https://facebook.github.io/react-native/docs/backhandler\nYou may call Actions.popTo(\"sceneKey\") or Actions.push(\"sceneKey\") in your backhandler and implement onBack in your Scene according to your need.\n. call \nActions.push(\"sceneKey\",  {props to pass to the scene});\nif you want to navigate to a specific page.\nOr, \nActions.popTo(\"sceneKey\", {props to pass to the scene});\nIf you want to return to a specific page.\nThese methods can be called in everywhere, including any kind of listeners (e.g. onPress).\ntake at look at here\nhttps://github.com/aksonov/react-native-router-flux/blob/master/docs/API.md#actions\nI never tried to use swipe gesture to navigate between pages, but you may also tried to implement the onBack listener.\ne.g. \n<Scene\n   key=\"whateverKey\"\n   onBack={() => Actions.popTo(\"sceneKey\")}\n/>\n. How about onBack? Does it work for swipe gesture as well?. That's the point, I'm not sure whether onBack handles the swipe gesture in iOS, but it DOES handle the back button in the nav bar AND the hardware back button in Android devices.\nYou may try\n<Scene\n   key=\"whateverKey\"\n   onBack={() => Actions.popTo(\"sceneKey\")}\n/>. Too bad.\nFor android, you can implement the backhandler\nFor ios though, still searching. OK, I think none of the libraries will be able to provide an elegant solution, since even iOS native doesn't provide a high level api for that. \nSee https://stackoverflow.com/questions/50471658/overriding-back-swipe-gesture-in-uinavigationcontroller\nYou may try to take reference from that, override the pan gesture and call Actions.popTo() when user swipe back. You may have a look at React Native Gesture Handler, which is a high level gesture handling api with full documentation. This should make your life easier.. Basically, this is what I'm trying to do:\nI have to allow user to select multiple items and delete them, similar to the file manager. You have a delete button on the right, when clicked, the left button will be replaced with a \"select all\" check box. If the user press cancel or confirm, the left button will be reverted back to a normal \"back\" button.\nThis is the only way I can think of doing it. Please feel free to suggest any better solution, if this is not how it suppose to do.. ",
    "howieyoung": "Same issue with \"react-native-router-flux\": \"^4.0.6\"\nHowever, I fixed it after I tried to set the backHandler to false manually:\n<Router\n        sceneStyle={{ backgroundColor: '#fff' }}\n        /*\n        backAndroidHandler return true to stay in the app and return false to exit the app.\n        Default handler will pop a scene and exit the app at last when the back key is pressed on Android.\n        */\n        backAndroidHandler={() => (false)}\n      >\n\nI wish that's something helpful for you guys.. ",
    "mog3n": "@SourceCipher @aksonov were you able to get it working? I have the same problem as you- when a call Actions.jump('key'), it does not seem to animate (transition left/right) to the appropriate tab.\nScreen shot of code: https://imgur.com/bJ5oGiy\nVideo of problem: https://media.giphy.com/media/5e21EuevXL8hS6AAyI/giphy.gif\n`\n                <Scene title=\"messages\" icon={Icon}>\n                    <Scene  key=\"chat\" initial component={Chats}/>\n                    <Scene key=\"chatDetail\" component={ChatScreen} />\n                </Scene>\n\n                <Scene key=\"home\" title=\"home\" icon={Icon} initial component={Home} />\n\n                <Scene title=\"me\" icon={Icon}>\n                    <Scene key=\"profile\" initial component={Profile} />\n                    <Scene key=\"editBio\" component={EditBio} />\n                </Scene>\n\n            </Scene>`\n\nIn the Scene home, I'm able to swipe left and right (using my finger) to transition between screens, but when I call the function Actions.jump('messages'), it does not show the sliding transition. Is there something wrong with my code?. ",
    "fcabrera23": "Hi, I\u2019m having the some problem! Will try to downgrade flux to see if it\u2019s fixed . ",
    "alejandroclvi": "Hi, I'm having the same problem, and I'm using react native v0.50.3, any ideas of why? . ",
    "firehand33": "i'm using:\n\"react\": \"^16.4.2\",\n\"react-native\": \"^0.51.1\",. ",
    "atifplus": "\"react\": \"16.4.1\",\n    \"react-native\": \"0.56.0\",\n    \"react-native-router-flux\": \"4.0.0-beta.31\",  This is working for me had the same issue with 4.0.1. ",
    "jiushicheng": "my Version react 16.4.1 react-native 0.56.0 react native router flux 4.0.5  the problem still exists @aksonov . ",
    "Asinox": "The same thing here!\nVersion\nTell us which versions you are using:\nreact-native-router-flux 4.0.1\nreact-native 0.56.0. ",
    "abhimanyuPathania": "Same here\nreact-native-router-flux 4.0.0-beta-40\nreact-native 0.51.0\nIt behaves as if calling Actions.refresh and just re-renders the same screen with new props.\nThis is probably because of the 'less pushy' breaking change in react-navigation V2\nhttps://reactnavigation.org/blog/#navigateroutename-in-stacknavigator-is-less-pushy\nBut react-navigation still exposes older push actions. Here the change seems to be in Actions.push, and I could not find any alternative to it that uses old push behaviour.\nhttps://github.com/aksonov/react-native-router-flux/commit/d61960c6bf0139150a327a161b3d9374c6d6772f#diff-2c2bc1d792d94da8f451749a3b894588R840\nI think Actions.push should default to older push behaviour and maybe we can have an Actions.navigate for the new behaviour.. ",
    "cmeredith": "The fix is working in that it will now push the same scene more than once; however, pushing with different props is NOT working. Pushing the same scene on the stack will cause that scene to always use the props of the very first scene instance.\nIs there a workaround for this? @daviscabral . ",
    "Agby": "Thank you :). I had the same issue too\nVersion\nreact-native-router-flux v4.0.1 \nseems broke after 4.0.0-beta.40 \n<Drawer\n      key=\"root\"\n      contentComponent={Sidebar}\n      headerMode=\"none\"\n    >\n      <Tabs key=\"myTabBar\">\n        <Scene key=\"tab_1\" tabBarLabel=\"home\">\n          <Stack>\n            <Scene key=\"home\" component={Home} />\n            <Scene key=\"blankPage\" component={BlankPage} />\n            <Scene key=\"listPage\" component={ListPage} hideTabBar={true} /> // not work\n          </Stack>\n        </Scene>\n        <Scene key=\"tab_2\" tabBarLabel=\"BlankPage\">\n          <Stack>\n            <Scene key=\"blankPage\" component={BlankPage} />\n          </Stack>\n        </Scene>\n      </Tabs>\n    </Drawer>\n. ",
    "arbabi2010": "@matthewkwong2 I wanted to open it from right but it had a bug when i was using from genymotion. i use from my mobile device and it's ok right now. thank you.. ",
    "ThomasLarge": "@dextermb I did try something like that but the active state is on the issue with the icons as they have this build in. \nI want to change the borderTopColor on active state. I'm able to set the tabStyle to add the styling but can't find away to get add a styleProp for the tabStyle on active state. \n\nThis is what I have I just need to add the borderTopColor. (I also need to fix the icon colours but this isn't a problem\n. Hi @daviscabral I haven\u2019t yet, I don\u2019t really want to make a custom component as I would have to route all of the push / pops. \nIf the lib could have a active style prop for the container / single tab of the tab view that would be great. As you can see above I have added a border top to the whole container but I want to add it every tab and then change it to white when active. \nWhen I have some time I\u2019m going to have a look though the code and see if I can work it out. If so I will make a PR. . I haven't had the chance to look into this as much as I would of liked but if someone could explain how the active state works on the title colors. I'm sure we will be able to add a new prop for the activeTabStyle. @daviscabral was you able to create a PR to show me how you have done this?. @microxiong I was having the same issue but I have found the work around. \nif you console.log the props on the PageTwo and look at the \"name\" prop. This is the tab name but it will have a underscore with it for example \nname: _two\"\nIf you then write your onPress event like this it should work.\n```\n{\nActions.jump('_two', {data: 'parameter'});\n }}>\n```\nLet me know if you have any issues \ud83d\udc4d . @aksonov are you able to give me a example? . ",
    "blackbing": "Hi @daviscabral no problem. Do you mean yarn add eslint-config-airbnb instead of file:../airbnb-style/packages/eslint-config-airbnb ? Actually I don't understand why not add eslint-config-airbnb dependency directly instead of adding it from outside clone. \nIt still shows the same error with https://circleci.com/gh/VeryBuy/react-native-router-flux/1. . ok, check it out on this commit https://github.com/VeryBuy/react-native-router-flux/commit/8b5361547a45e567f794f3e1c60e346b0775b291, and the build passed.\nhttps://circleci.com/gh/VeryBuy/react-native-router-flux/4. @forsen  Confirm that hideTabBar inStack is worked, but it still not worked in Scene Props.. ",
    "aniltirola": "ok, thanks; currently I solved everything with a customreducer;. ",
    "Kiran0791": "I installed the latest package today \"react-native-router-flux\": \"^4.0.1\" but i don't find the above fix.\nCan someone help me on how to pull these changes. > aksonov/react-native-router-flux\nEven after this reset not working. Its says There is no route defined for key signup.\nMust be one of: 'lightbox'. When lightbox is used it throws this error. ",
    "RodrigoCS": "@Kiran0791 \nI believe the last changes are not on npm, right now you could do react-native-router-flux@https://github.com/aksonov/react-native-router-flux/. ",
    "yqz0203": "@daviscabral I installed aksonov/react-native-router-flux but not working\u3002\ud83d\ude02\ud83d\ude02. ",
    "hsynlove": "@aksonov I have the same problem when i update my version to 4.0.5, for some reason i have to use 'reset' instead of 'replace'. What can i do?.  I find a way to avoid this problem by add a new scene 'Route'  in the first place of 'Pages'. \n<Lightbox>\n            <Scene initial key=\"Start\" component={StartScreen}/>\n            <Scene key=\"Pages\">\n                <Scene key=\"Route\" component={Route}/>\n                <Scene key=\"Login\" component={Login}/>\n                <Scene key=\"Main\" component={Main}/>\n            </Scene>\n</Lightbox>\n```\nimport {Actions} from 'react-native-router-flux';\nconst Route = (props) => {\n    const {target, params} = props;\n    Actions.replace(target, params);\n    return null;\n};\nconst {reset} = Actions;\nActions.reset = (target, params) => {\n    const props = {target};\n    if (params) {\n        props.params = params;\n    }\n    reset('Pages', props);\n};\nexport default Route;\n```\nthen I can use Actions.reset('Login') or Actions.reset('Main') normally. I hope this can help. @asd8855 yes, and this page can resolve this problem though it doesn't look elegant.. ",
    "ayushnawani": "facing the same issue here. reset not working for nested scenes with lightbox.. ",
    "spadgeaki": "@aksonov Hi, we are still experiencing the same issue in latest version.. ",
    "keneseu": "Hi,\nThank you for your help! Could you provide me with the complete code for\nthe Tab 5 example, as I still could not get it work somehow?\nLook forward.\nOn Thu, Aug 23, 2018 at 4:35 PM Davis Z. Cabral notifications@github.com\nwrote:\n\nClosed #3196\nhttps://github.com/aksonov/react-native-router-flux/issues/3196.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/aksonov/react-native-router-flux/issues/3196#event-1804664234,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AT-HOiYbANKCNfczic81JJ67iEefkcjOks5uTmlfgaJpZM4WFa3K\n.\n. \n",
    "R1ckye": "@daviscabral I'm sorry but I don't really see the hideTabBar in your screenshot of code (Cmd+F didn't work so I can't be sure), both of us above provided broken examples, mine is straight out of the Example app. But to make it straightforward, here's the full modified Example app: https://github.com/R1ckye/rnrf-broken\nJust go to the register screen, it should hide the tab bar (it has hideTabBar) but it doesn't.\n\n. \n. @daviscabral That issue is more than a year old, and as mentioned above by both of us, it was working exactly this way in late betas of 4.0.0, but not anymore. I pinpointed the issue, it was broken in this commit, when react-navigation was bumped from 1.5.8 to 2.8.0\nhttps://github.com/aksonov/react-native-router-flux/commit/d61960c6bf0139150a327a161b3d9374c6d6772f\nCan you please reopen, as it's clearly a valid, existing issue?. ",
    "nicolas-rohricht": "In my case, I use Actions.refresh({ hideTabBar: true }) dinamically inside of the scene.\nLike when the keyboard shows up, or under an onPress Button event...\nWith the RF 4.0.1, this option was not working.\nDowngraded to 4.0.0-beta.28 and my problem got fixed.. ",
    "brickion": "confirmed that it doesn't work for me also. ",
    "thatjuan": "@mikaelrosquist - I added Actions.SignIn() to the onPress of a button to rule that out. It never redirects, so we may be running into different issues.. ",
    "anishroff": "@daviscabral Apologise for delay. It doesn't work this way as well. How can I help to find the issue, please assist.. ",
    "lordenas": "In the loginForm.js function myoutput() after a response is received, makes the transition to Action.Account_list({token: this.state.token, userName:this.state.userName})\nBut Account_list.js stopped seeing these props. Something went wrong... I went back to yesterday's version and everything worked. Somehow ceased to be transferred to the props... If you go back to version 4.0.0-beta.31, everything works fine.... @aksonov, as I said, there is a problem in passing parameters.\nloginpage.js\nAction.Account_list({test: 'test'})\nAccount_list.js\nconsole.log(this.props.test) = undefined\nAll this occurred after upgrading to version 4.0.2 (4.01 same problem). The props just are not transferred to the other component.\n. ",
    "tuxity": "There is an ugly fix we can use until it's fixed ?\nEDIT: I switched back to 4.0.0-beta.31 and it's working again. ",
    "pehagg": "Was able to fix this by adding flex: 1 to the style definition of the custom title component. Got inspiration from https://github.com/react-navigation/react-navigation/issues/544. Using titleStyle doesn't seem to have any effect. Closing issue.. ",
    "Hannibal2": "@dextermb the backdrop. ",
    "rikochet": "This issue only seems to affect Android.. You can see the difference before and after my patch in the attached illustration. iOS seems to display fine both with and without a StatusBar height..\n\n. ",
    "ptmaroct": "I am getting the exact same issue.. @daviscabral I understand. I will try to make a detailed submission soon. . Having the same issue. Initially the issue was that swipe gesture was not working for tabs so I enabled the legacy flag. Now the tabbar stays at top no matter what is set in tabBarPosition.. Hey, if anyone comes here for this issue, I have made a repository which is forked from \"react-navigation-deprecated-tab-navigator\". I have hardcoded the position so the tabbar stays at bottom.\nHere is the repo with the modifications\nSo what you have to do is just install this package and React Navigation will pick it up.\nLet me know if there are any issues.. > I also had this problem\nYou can try installing my forked repo. ",
    "nagacoder": "some problem with me. i was solved this problem : \n1. change my project to another dir\n2. rf -rf node_modules, ios, android\n3. i am using yarn to install all packages not npm\ni hope you try my solution hehe. ",
    "QingYong": "I fixed it by upgrade react-navigation > 2.0.0 \nWith react native version of 0.51\n\"react-navigation\": \"^2.0.0\",. ",
    "michaelVictoriaDev": "same problem :(\nfrom \"^3.43.0\". ",
    "jamesholcomb": "Here is how I worked around it\n<Scene\n          back\n          key={routes.PROFILE}\n          component={ProfileScene}\n          renderRightButton={\n            <MoreButton\n              onPress={() => Actions.refs.profile.wrappedInstance.onMorePress()}\n            />\n          }\n          title=\"Profile\"\n        />. > Actions.refresh should be used just to update navigational state (i.e. pass values not functions)\nI am attempting to upgrade a 3.X project to 4.0.  Actions.refresh is used throughout the app to wire up navbar buttons to their scene handlers based on data/conditions that are determined within the scene.\nThe example does not seem to demonstrate how to go about this and the migration guide does not mention it.\nCan you elaborate or point to an example?. ",
    "avivajohnson": "\nActions.refresh is used throughout the app to wire up navbar buttons to their scene handlers based on data/conditions that are determined within the scene.\n\nI would also be interested in seeing an example of how to accomplish this with 4.0.. ",
    "pierol": "I made an example code to show you what i mean go here: https://github.com/pierol/rnrf-example it's an EXPO example try to open it in a ios simulator. Make login inside the app with these credentials: pierol and pw: giulia09. You have to swtch the version of react-native-router-flux from 4.0.0.beta.27 and 4.0.1 to see the two different behaviours. There is a console log in the DayList componenetWillMount method this component is part of the first Scene. After the Login is successfully i will make an Actions.choorHour() call to return to the first Scene, the one with the Daylist component. Only using 4.0.0.beta.27 will reload the component DayList when i return to the main scene from the Login form.. In general i think that it's not the right behaviour do not refresh the components of a scene when you focus on it. The component could have in its componentWiilMount a fetch like in the example i made. Another solution could be to set in the  an atttribute that specify if refresh or not, but it should refresh as default behaviour.. Yes i understand what you mean : \n\nI believe it's more flexible and less problematic to allow users works with it in the ways that might be the best for them. \n\nThats's right it could be a attribute in the Scene tag like : \n<Scene .... refreshOnFocus={true} ... />. Sorry but with onEnter={Action.refresh} in the example code i made it doesn't work.. Sorry i didn't update the react-native-router-flux to the version 4.0.4, now it works with onEnter={Actions.refresh}, thank you for the support. ",
    "ggunti": "\"react\": \"16.3.1\",\n\"react-native\": \"0.55.4\",\n\"react-native-router-flux\": \"^4.0.1\",\nThe routes class which I use:\n\nThe component:\n\nthis.props.takePicture is actually the function which I attached on my previous comment, where I call Actions.sketch(). \nIt is strange that the new scene (sketch - in my case) keep showing a little portion of the previous/initial scene (the camera).. The problem is\n<CameraKitCamera\n    style={styles.preview}\n    ref={this.props.cameraRef}\n/>\nIf I remove CameraKitCamera, then the problem disappear, but I do not want to remove it and I don't know why CameraKitCamera causes this problem.\nstyles.preview is actually this: {\n    flex: 1,\n    justifyContent: 'flex-end',\n    alignItems: 'center'\n  }\nTried to use Actions.sketch({ type: 'reset' }), but the problem do not disappear.\nI also noticed that if I lock the screen and after unlock it, then the problem disappear, but obviously this is not a solution.\n@daviscabral Can you reproduce the bug?. ",
    "EyreGe": "I solved the problem: \n  const routeName = obj.navigation.state.key;\n  obj.navigation.navigate(obj.navigation.state.routeName);. ",
    "thomas-yancey": "you were right it was unrelated to this library, my mistake and thanks for responding. ",
    "vygandas": "React version I've used is 16.3.1. All app was created by create-react-native-app, so it should be ok I guess.\nActions.selfie is called from child component. Chain would bee something like:\nFeedScreen (custom component) -> FlatList (RN component) -> RenderedItem (custom component). And it's used in onPress.\nLooked into a changes but do not see what would relate to this issue.\n. Great, thanks for info.\nI've also found that I'm able to pass params to scene that is not nested deeper e.g. under Tabs. My case scene like settings is receiving props.. Yea, I understand. Maybe I have time someday, not sure. Currently have a lot of work... \nBtw another notice that when navigating, after component is rendered it doesn't fire onEnter or shouldComponentUpdate anymore.. ",
    "alimahmoodvand": "I upgrade my router flux to 4.0.1 version but my problem yet exist in pop navigation. ",
    "wheatleyjj": "Can't wait to get this update! Thanks @daviscabral . ",
    "arfaWong": "@dextermb I have seen that API documentation, but it doesn't seem to work.\n. ",
    "js1121302139": "why\uff1f build android apk show Error\uff1f android/app/build/intermediates/res/merged/release/drawable-mdpi/node_modules_reactnativerouterflux_node_modules_reactnavigationstack_dist_views_assets_backiconmask.png: error: Invalid filename.  Unable to add.\n \"react\": \"16.4.0\",\n    \"react-native\": \"0.55.4\",\n    \"react-native-router-flux\": \"^4.0.1\",. @Luckygirlllll   #3264. Solution: \nnode_modules->react-native-router-flux->node_modules->react-navigation-stack->dist->views->assets->backiconmask.png find backiconmask.png delete\uff0c to  node_modules->react-native-router-flux->node_modules->react-navigation-stack->dist->views->assets->Header->Header.js change line 334 . ",
    "davidwu220": "So apparently after upgrading to react-native 0.57 fixed the issue (I also installed react-navigation 2.16, but I imported SafeAreaView from react-native, so I don't think this is related). Thanks for the help!. ",
    "liri321": "onEnter not working inside the contentComponent of the Drawer, for example:\nThis works fine:\n<Drawer\n                                contentComponent={SideMenu}\n                                onEnter={() => console.log(\"Drawer Opened\")}\n                            >\nbut when I try to declare onEnter inside SideMenu component it won't be executed.\nexport default class SideMenu extends Component {\n    onEnter() {\n        console.log('Drawer Opened');\n    }\n}. ",
    "Echelpoel": "Updating to latest version of react-navigation fixed this warning.. ",
    "arghyaExicube": "Is there any solution for now to naviagte between tabs with props?\n. Is there any solution for now to naviagte between tabs with props?. @daviscabral No, It's generating the same error. \nCan I solve this by downgrading the version?\nIf yes, which version?. ",
    "d12544": "GesuturesEnabled* . It was a typo. Not working. ",
    "renanogueira": "Yeah.. I tested it, but it was working some weeks ago.\nSo, how can I dinamically change the lock mode for scenes that I want to show?. I am trying to perform this operation but it is returning me an error in the state change on the fly..\n```\nexport default class App extends Component {\n    state = { lockMode: \"locked-closed\" };\n_handleStateChange() {\n    if (scenesBloqueadas.some(scene => scene === Actions.currentScene))\n        this.setState({ lockMode: \"locked-closed\" });\n    else this.setState({ lockMode: \"unlocked\" });\n}\n\nrender() {\n    return (\n        <Provider\n            store={createStore(\n                reducers,\n                composeWithDevTools(applyMiddleware(thunk))\n            )}>\n            <StyleProvider style={getTheme(platform)}>\n                <Root>\n                    <Router onStateChange={this._handleStateChange.bind(this)}>\n                        ... drawer/scenes\n                    </Router>\n                </Root>\n            </StyleProvider>\n        </Provider>\n    );\n}\n\n}\n```\n\nDoes anyone have a better idea for me to implement in my code?. ",
    "iamsee": "@aksonov @nickfla1 \nsame issue when set drawer below tabs like this \n\n\nit's broken on android. @daviscabral \nyes,but the example code  tab scene is inside the drawer\n\nthen set drawer inside the tabs \n\nonly the mask show  on android\n\nbut it's fine on ios\n\n. @daviscabral\ni try that\n\n\nsame result\n. thx a lot. ",
    "SwitchDestiny": "\n3.43 is not supported anymore, sorry\n\nOK\uff0cthank you. ",
    "yoyo0427": "I modified the example project.This problem is repeated.\nreact v16.2.0\nreact-native v0.52.0\n\n\n\n. @aksonov . ",
    "GunnarAK": "I am getting the same warnings on RN 57 with my own screen components.\nVersions\n\"react\": \"16.5\",\n\"react-native\": \"0.57.0\",\n```\nRequire cycle: js/components/index.js -> js/components/HomeScreen.js -> js/componentes/index.js\nRequire cycles are allowed, but can result in uninitialized values. Consider refactoring to remove the need for a cycle.\n```\nStack:\nmetroRequire\n<unknown>\nloadModuleImplementation\nguardedLoadModule\n<unknown>\nloadModuleImplementation\nguardedLoadModule\nmetroRequire\n<unknown>\nloadModuleImplementation. ",
    "ramibaraka": "@aksonov Pls bump the React-navigation version. The latest version depends on a newer version of react-native-safe-area-view with this issue fixed. ",
    "mahyar33": "I couldn't handle onEnter with your solution\nI want to create PrivateSeen if the user didn't authorize, it redirects them to login scene\ncan you give me an example please?. I have the same problem and I receive this error\n\n. I want to create the private scene which redirects User to the login page\nCan you make an example, please?. ",
    "Hauglid": "How does this help? The example app still uses latest from github (4.0.2) and not from npm (4.0.1) \nTry setting version number to ^4.0.1 (and not specify folder path), and then use yarn install. \nSwiping between tabs does not work on the latest released version, so the example app shows features not available. . ",
    "jonathanchrisp": "@aksonov thanks for the quick turnaround, if possible can you give me an ETA as to when you'll push this version to npm?. Hey @aksonov, thanks for pushing this so quickly. I've tested and found a new issue when building the project. We get a naming collision as defined below. I'm running the latest version of react-native.\nLoading dependency graph...(node:45537) UnhandledPromiseRejectionWarning: Error: jest-haste-map: @providesModule naming collision:\n  Duplicate module name: Sample\n  Paths: /Users/jonathanchrisp/development/xxxx/xxxx/node_modules/react-native-router-flux/ReduxExample/node_modules/react-native/Libraries/Sample/package.json collides with /Users/jonathanchrisp/development/xxxx/xxxx/node_modules/react-native/Libraries/Sample/package.json\nThis error is caused by a @providesModule declaration with the same name across two different files.\nWeirdly, looking at the current v3 branch I can't see this ReduxExample folder. Has this been added accidentally?. Just to note, upon removing the folder everything builds as expected.. Hi @aksonov, just to make sure, I just ran npm pack locally and didn't get the ReduxExample folder added to the tar package. If possible was this added by mistake when you pused the version earlier? I can't see how this got here otherwise, are you able to check whether you had this within your directory when you published the project?  . Hey @aksonov, just pulled down and retested/rebuilt and looks to be working as expected now. Thanks again for the prompt updates, we're looking to move off version 3 soon, hopefully one day you'll be able to remove this branch! \ud83c\udf7b . ",
    "Komalov": "It's simple model of what I have. I drop unnecessary component props, but all other is in place\n```\n<Stack\n  key=\"app\"\n  {...navigationProps} // tabs={true} for iOS, drawer={true} with contentComponent for android\n  lazy={true}\n  tabBarStyle={styles.tabBar}\n  activeTintColor=\"#f55c6e\"\n  inactiveTintColor=\"#cbcfd3\"\n  hideNavBar={true}\n  initial={true}\n  backToInitial\n\n }\n<Scene\n  key=\"scene 1\"\n  component={() => <SceneComponent\n    /* component props */\n  />}\n  on={() => {\n    InteractionManager.runAfterInteractions(/* fetches for scene */)\n  }}\n/>\n\n... another scenes ...\n  \n}\n<Scene\n  key=\"scene 2\"\n  component={() => <SceneComponent\n    /* component props */\n  />}\n  on={() => {\n    InteractionManager.runAfterInteractions(/* fetches for scene */)\n  }}\n/>\n... another scenes ...\n\n\n\n```\nI am not sure this is stackOverflow question like it labeled, cos there is no description about this behaviour in docks and it is actually important thing for ux. Thanks a lot for helping so fast! v4 works just great. > Sorry - is that already working? I mean, with the last version? 4.0.3?\n\nPardon, I mean it's cool it's gonna be resolved. I'll be in touch about this thing, maybe I could find a solution. @Q8hma \nEverything is cool, there was a little misundertanding. If you want to preserve the behavior which  backToInitial did erlier, just remove it from stack property. This is the default behaviour for now. If your goal is to reset scene and pop initial every time you touch tabbar, add backToInitial.\nSo just remove backToInitial was fine for me. @daviscabral I think this issue can be closed if what I describe above is acceptable. ",
    "BS-Tao": "I have the same issue.hideTabBar doesn't work in nested stack scenes.. @aksonov I have check latest master , hideTabBar is worked!   Please publish this at next release.. ",
    "forsen": "We're having this issue on Android as well (ref ios label). . Try to give the Modal component a key prop, and navigate to that one instead. Navigating to the first scene in a Stack, Modal or Tabs would (at least in earlier versions) mount the scene twice, so navigating to the Stack/Modal/Tab directly to open the first scene is a better approach. . How do you navigate to that stack? If you navigate directly to the scene, Actions.push('start'), the scene will be mounted twice. To avoid that the first scene is mounted twice, one should navigate to the stack, not the first scene. Try pushing the stack instead, Actions.push('root'), and see if that helps. . ",
    "youngcao2015": "@aksonov checked lastest 4.0.6, but it still not worked in Scene Props.. ",
    "MarsLuo": "@aksonov checked lastest 4.0.6, but it not worked in Scene Props.\nTry this, not work.\n```\nActions.jump(SceneKey.SomeScreen, {\n          title: name,\n        });\n````\nBut try this, it works. \nActions[SceneKey.SomeScreen]()\nHope can provide same useful infomation.. I find that, when we change screen the way just like jump, push, replace, RNRF could not pass the scene param in to function, so  jump function can't get the param like hideTabBar, so the feature could not work.. ",
    "alprtv": "I have the same error when upgrading from 4.0.1 to  4.0.2/4.0.3\n```\nTypeError: navigationStore.getStateForAction is not a function. (In 'navigationStore.getStateForAction(action, state)', 'navigationStore.getStateForAction' is undefined)\nThis error is located at:\n    in NavigationContainer (at Router.js:97)\n    in App (at Router.js:122)\n```\npackage.json\n\"react\": \"16.5.2\",\n\"react-native\": \"0.57.1\",\n\"react-native-router-flux\": \"^4.0.3\",\nVersion 4.0.1  is work fine.\n. ",
    "dalba1992": "It was working well on android, but it is not working on only ios. ",
    "shiqkuangsan": "@aksonov me too, still getting this error when running examples/react-native on ios with V4.0.6. ",
    "RtzX": "me too.version: 4.0.4!\n\ncode:\n\n. I also had this problem. I tried this method. @Sunil Patel .But I don't know if it's right?\n componentWillMount() {\n    this.props.navigation.setParams({\n        'onRight': this.handleIconTouch,\n        'title':'test',\n        rightTitle:'save',\n    })\n}\n\nhttps://stackoverflow.com/questions/39034340/how-to-make-right-button-in-navigation-bar-using-react-native-router-flux/44134096#44134096. ",
    "JinnL": "#. thanks  a lot . but how to change tabBarLabel text color?. thanks again.i have find the  attribute activeTintColor  . .",
    "duanyachao": "\n@duanyachao please check latest master now\n\n@aksonov  what part should be latest master?\ni'm sure it's latest master. but  i didn't understood  the  failure info and  how can i do now.  i just  run the demo on the simulator.it show red info again  like this : \n\n. ",
    "isrdoc": "I have tried a fresh clone and install, but am also getting this error like @duanyachao. Can you please verify that you can get a working react native example going on, @daviscabral? Thnx!. @aksonov, that did it, yes! Don't know why yarn pulled the 4.0.4  version instead. Thank you!. While comparing my react native app with the example app provided I found out that I \"ate-up\" my component's props in a HOC - because I didn't pass them with {...this.props}:\n<WrappedComponent {...customProps} {...this.props} />\nThis, of course, was the reason why the props in the RNRF action also didn't get through.. ",
    "zainmusani": "@codepressd The problem is that we've updated react-native-router-flux in package.json but implementation is still conventional. I found several changes in latest example. If you follow example, it will definitely work.. @codepressd if you are send props to TABS?. ",
    "codepressd": "@zainmusani Ok thanks. I will check it out in the morning. . I just got back to this but I'm still having the issue. I upgraded to 4.0.5.\nHere is the object I get back from my component as props after if fire \nActions.activeItem({anything: \"hello\"}) and if I try Actions.activeItem({screenProps:{anything: \"hello\"}}):\n{\n   \"drawerIcon\": [Function Hamburger],\n   \"drawerImage\": 2,\n   \"init\": true,\n   \"name\": \"_activeItem\",\n   \"navigation\": Object {\n     \"actions\": Object {\n       \"closeDrawer\": [Function closeDrawer],\n       \"dismiss\": [Function dismiss],\n       \"goBack\": [Function goBack],\n       \"navigate\": [Function navigate],\n       \"openDrawer\": [Function openDrawer],\n       \"pop\": [Function pop],\n       \"popToTop\": [Function popToTop],\n       \"push\": [Function push],\n       \"replace\": [Function replace],\n       \"reset\": [Function reset],\n       \"setParams\": [Function setParams],\n       \"toggleDrawer\": [Function toggleDrawer],\n     },\n     \"addListener\": [Function addListener],\n     \"closeDrawer\": [Function anonymous],\n     \"dangerouslyGetParent\": [Function anonymous],\n     \"dismiss\": [Function anonymous],\n     \"dispatch\": [Function anonymous],\n     \"getChildNavigation\": [Function getChildNavigation],\n     \"getParam\": [Function anonymous],\n     \"getScreenProps\": [Function anonymous],\n     \"goBack\": [Function anonymous],\n     \"isFocused\": [Function isFocused],\n     \"navigate\": [Function anonymous],\n     \"openDrawer\": [Function anonymous],\n     \"pop\": [Function anonymous],\n     \"popToTop\": [Function anonymous],\n     \"push\": [Function anonymous],\n     \"replace\": [Function anonymous],\n     \"reset\": [Function anonymous],\n     \"router\": undefined,\n     \"setParams\": [Function anonymous],\n     \"state\": Object {\n       \"key\": \"id-1539447390240-6\",\n       \"params\": Object {\n         \"drawerIcon\": [Function Hamburger],\n         \"drawerImage\": 2,\n         \"init\": true,\n         \"renderRightButton\": [Function Activity],\n       },\n       \"routeName\": \"_activeItem\",\n     },\n     \"toggleDrawer\": [Function anonymous],\n   },\n   \"renderRightButton\": [Function Activity],\n   \"screenProps\": undefined,\n }\nI'm wondering if there is some flag I'm missing? If I put the prop directly in to the screen component it works fine. I'm using mobx and I thought it could be an issue with a decorator going off of @isrdoc, so I made this one without any decorators but I still have the issue.\n. ",
    "gradam": "@codepressd If you have your screens nested try Actions._wishlistDetails(props) (note added _).. ",
    "hophoppoppop": "My Repo\nSo i try to see why this happen and then i find it that on navigationStore.js. When function createTabNavigator is called the tabBarPosition parameter not included as parameter.\nyou can try my repository if you want. ",
    "tunm1228": "Tabbar position on Android always at the top, Please help me. ",
    "vorasudh": "+1. ",
    "frontend-qin": "+1\uff0cThe same problem, the timer I am using for the time being, prohibits continuous clicks, allowing you to click the second time after 2 seconds.. ",
    "hdsenevi": "Why is there no way to override the default behaviour?. I see everywhere people are replying \"it's not a bug, it's a feature\". Or your app is suppose to keep track of how many times a user taps on a button not the navigation lib. But that's absurd. This is a very common use case and coming from native mobile application development I'm baffled by this.\nI get why you want to keep the existing functionality as it is, but give us a way to override it. I'm trying to handle this \"block multi taps on buttons bringing up multiple scenes\" issue in an elegant manner for almost 1 day now without success. My last resort is to add debounce to all the navigation buttons, but that seems yuk. I wanted to handle it either in the navigation lib or redux middleware or reducer type of scenario. \nSorry for the rant, if anyones's got a solution I'd much appreciate it.. ",
    "jepicode": "I have updated to lastest version, and it's still same error occured.\nand I can have autoredirect in componentdidmount, I don't know why, but it doesn't work. ",
    "hackpar": "+1. ",
    "vlatri": "Same here. Anything?. ",
    "cameronbell": "Thanks! #3165 was helpful for getting the currentScene within the children scenes of my Tabs scene.\nIt's still unclear to me how to properly use the current scene stored in mobx to create dynamic tab items, because when renderRightButton is called the value of the observable 'scene' variable in mobx hasn't been updated yet. \nIs there a way to refresh the props of the parent Tabs scene from a child scene? \nI'm currently calling Actions.refresh() at the top of the render function of my child scene which is working, but I'm not sure if this is the ideal way of achieving this. . Just noticed that calling Actions.refresh() at the top of the render function like that is giving me the following warning:\nWarning: Cannot update during an existing state transition (such as within `render` or another component's constructor). Render methods should be a pure function of props and state; constructor side-effects are an anti-pattern, but can be moved to `componentWillMount`.\nThanks for your help. ",
    "wh1t3cAt1k": "@daviscabral hey, just wanted to ping about any news.. @daviscabral , anyone? Still very much needed and no clue how to achieve.. ",
    "koalex": "Any updates ? I would also like to see an example of implementation with Redux + Immutable.js. ",
    "shuxinhuang": "how to run the example on android?    the error says  Android project not found. Maybe run react-native android first? . ",
    "wisejin": "@RtzX me too!!!. ",
    "craftgear": "Sorry to bother, this isn't necessary.\nI find I can use transitionConfig attribute.. ",
    "EdwardtoGitHub": "Reproducible Demo\nCode Example which provided in the lastest rnrf\n\n\n\nLog\nlogin => login2 => login3\n\n\n. ",
    "Stewiey": "I just faced similar issue\nhttps://github.com/RNRF/react-native-router-flux/issues/3302\nThe answer seemed a bit weird to me, let's say that's the only solution so what's count as a safe and minimal amount to pass to setTimeout.\nThanks.. @ledarky, I just faced the same issue, I solved it by wrapping the Scene with another Scene that has hideNavBar prop. (it's like the parent of the specific Scene decides).. ",
    "handoff": "Thank you @forsen. That worked.. Your await AsyncStorage will not block the entire componentWillMount function as you are currently assuming. When the await is hit the component will continue its business and call the render function. Later, when the await returns your local state will get updated by your call to setState, and the component will have its render function called again... . ",
    "marciobera": "@Kazn, it worked for me (using the v4.0.5) in this way:\n```\n\n\n\n\n\n    ...\n  \n. > I m not using in tabs.have you checked in iphone as well\nTry use this:\n<Scene key=\"home\" component={home} hideNavBar  swipeEnabled={false} animationEnabled={false} panHandlers={null} />\nIt worked on both iOS and Android for me. (I'm using the 4.0.5 react native router flux version).. ",
    "Kazn": "I m not using in tabs.have you checked in iphone as well. ",
    "ben-snaize": "+1 for this bug fix. ",
    "FibreFoX": "On some older version (e.g. 4.0.1) just calling Actions.feedback() worked, but now this does not work anymore. Maybe similar issue like this: https://github.com/aksonov/react-native-router-flux/issues/3330\n@devon did you check what the app is doing using some older version like 4.0.1 ?. After some digging, it seems that between in  4.0.2 this change in behaviour was introduced, using 4.0.1 still works for me.. @aksonov It was already broken since 4.0.2, will try to check each commit after 4.0.1, but it'll take some time.. ",
    "jackychanfox": "How to close drawer manually?\nAfter navigation to another scene, when I close drawer, original scene is displaying again.\nCould you explain in detail?. ",
    "NayanPious": "I have found out solution by getting props.navigation.isFocused()... Then we would get the correct values.\n. ",
    "adongy": "I have the same issue and found the same behavior to fix it, seems like the ineer key and the exposed key do not accept props the same way.. ",
    "yrjwcharm": "\u53ef\u4ee5 \u52a0\u4e2a\u65f6\u95f4\u6233 Actions.pop({refresh:{date:new Date()}); \u5c31\u53ef\u89e3\u51b3\u3002. ",
    "chenyi05": "\n\u53ef\u4ee5 \u52a0\u4e2a\u65f6\u95f4\u6233 Actions.pop({refresh:{date:new Date()}); \u5c31\u53ef\u89e3\u51b3\u3002\n\nare you sure?. ",
    "gancheng": "Actions.pop({refresh: {}, timeout: 1}). ",
    "RukaiJohn": "Actions.pop({refresh: {}, timeout: 1})\nthis stops the app for 1 second so you really can't click or do anything. ",
    "saibharani": "if anyone else has the same problem i have a temporary workaround for this problem. Add the following code to the class where you declare your router. That way you can have a way to exit app by using back button in Android\n```\nimport {BackHandler} from 'react-native'\n  componentDidMount(){\n  BackHandler.addEventListener('hardwareBackPress', function() {\n  if (Actions.currentScene == 'your home screen name')\n    BackHandler.exitApp()\n});\n  }\ncomponentWillUnmount(){\n  BackHandler.removeEventListener('hardwareBackPress', function() {\n    if (Actions.currentScene == 'your home screen name')\n      BackHandler.exitApp()\n  })\n}\n```\nand remember to change 'your home screen name' to the home screen key of your app.. ",
    "DiegoSalas27": "I believe the problem comes to nesting scenes in a drawer. So if I wanted to update the title of the album list from my genre component, I can't do that because even when calling Actions.albumList({ title: this.props.genre }) It won't make any effect, because albumList is wrapped in the drawer. But when I go from my genre Scene to my profile scene and call Actions.profile({ title: this.props.genre }), then I am able to update the title of the navbar. . ",
    "Sharanagouda": "Hi I am also facing same issue, \nWhen I press logout button from setting screen\nlogoutUser = () => {\n      Alert.alert(\n          \"\",\n          \"Please confirm if you want to logout of the application\",\n          [\n              {\n                  text: \"Cancel\",\n                  onPress: () => console.log(\"Cancel Pressed\"),\n                  style: \"cancel\"\n              },\n              {\n                  text: \"Confirm\",\n                  onPress: () => {\n                      navigateTo(\"login\",{ comingFrom: \"prehome\" });\n                  }\n              }\n          ],\n          {cancelable: false}\n      );\n  };\nthe home page will appear for several seconds before jumping to the login page.\nI tried to pass only \n   navigateTo(\"login\");\nnot worked . ",
    "harikanammi": "hi @JohnTree, can you resolve this issue??? because i am having same issue. \nI used this code for navigating to login screen after clicking the logout button:- Actions.popTo(\"login). This code is worked only for initial flow i.e., [login screen]-> [home screen]->[Logout]->[login screen]. After removing the instance of app and opens again If user exists it displays home screen.  popTo(\"login\") code is not worked for this flow [home screen]-> [logout]. Any solution for this issue. Please help me\n. ",
    "trgiansanchez": "\nA Simple work around would be\n\nAccess the navigation state using Actions.state\nget the route stack using Actions.state.routes\nfind the routeName you want to popTo using the JS find function\nIf your route exists then popTo that route else popTo an alternative\n\nlet routeStack = Actions.state.routes\nlet routeNameToPopTo = routeStack.find(({routeName})=>routeName===yourRouteKeyToPopTo)\nif(routeNameToPopTo)\n    Actions.popTo(routeNameToPopTo)\nelse // your alternative route to popTo\nHope this helps, I know it is a little cumbersome, but it provides more flexibility.\n\nIt's a great help.\nThanks for this! Will try it out. . ",
    "adelowo": "I can confirm this bug exists on 4.0.6  ..  \nFriendly ping @aksonov . . I have downgraded to 4.0.0-beta.31. Actions.refresh works with that version though. \nI will most likely be migrating to react-native-nagivation later on in the week. . @nani92, an older version isn't good for me either but I needed to submit the app to the app store yesterday :) .\nI will try your fix later on in the week. If it works, fine. If it doesn\u2019t I will go on with using another navigation library. . In my experience, on iOS, the swipe back gesture is supported.. ",
    "nani92": "Hi! :) Had same issue. When I've downgraded to version mentioned by @adelowo it worked perfect. But using older version was not good solution for our project.\nFinally I managed to refresh rightTitle with this code:\nActions.replace(Actions.currentScene, {rightTitle: 'CONTINUE'})\nHope it helps! :) . ",
    "owenhope": "Thanks @adelowo ... I am hoping we can get this resolved @aksonov please!. ",
    "eduardo-schork": "\nYou have to wrap refresh with setTimeout if you use it from componentDidMount\n\nthis solution doesn't work for me \nso, this is my solution to render my right button: \n```\nclass Companies extends Component {\ncomponentDidMount(){\n    this.props.navigation.setParams({\n      right: () => (\n          <MaterialIcons\n            name={'mail'}\n            size={48}\n            color={'black'} />\n      )\n    })\n }\n\nrender(){\n  ...\n}\n\n}\n```. ",
    "fanlide": "I have this problem, too. which appeared after react-native-router-flux@4.0.0-beta.32. ",
    "lvst09": "            {/*<Provider store={store}>*/}\n                {/*<Router hideNavBar={true}>*/}\n                    {/*<Stack key=\"root\" hideNavBar={true} >*/}\n                        {/*<Scene key='RootTab'*/}\n                               {/*component={RootTabRD}*/}\n                               {/*duration={1}/>*/}.\n",
    "chaudhryjunaid": "\ud83d\udc4d same here. in fact the initial scene component in a nested stack loaded for the first time is also mounted twice. @aksonov this is deal-breaking for us in using this library. Could you please help?. @aksonov there are multiple components mounted twice issues in this repo but none open of the same nature in React Navigation which tells me either the React Native base navigation version needs to be updated or something wrong with this module itself instead of some bug in React Navigation.. Reference issues are: https://github.com/aksonov/react-native-router-flux/issues/3349\nhttps://github.com/aksonov/react-native-router-flux/issues/2651\nhttps://github.com/aksonov/react-native-router-flux/issues/2382\nAnd another possibly related issue: https://github.com/aksonov/react-native-router-flux/issues/2254\nEven the closed ones present no solutions or PRs targeted towards solving this problem.. Perhaps moving to React Navigation 3.x will fix this.. ",
    "BurakKartal1": "I had the same problem but not for same reason i believe. i was using AsyncStorage to get saved localization and using states to make it wait to render Router component. The problem i had was not rendering anything when loading.\nif (this.state.isLoading == true) {\n    return (\n        <ActivityIndicator/>\n    )\n} else {\n    return (\n        <Router>\nso this kind of logic worked for me.. I have reopened the issue because i figured that when i use Actions to navigate to that Scene instead of using \"Back\" button there is no problem.\nSo i have a feeling that there must be something wrong with the Back button process.. ",
    "davidinhong": "I don't know why, but I had the same problem and I solved in this way\nIt was like this:\n<Scene key=\"myScene\" title=\"myTitle\" component={myComponent} />\nIt become like this:\n<Stack key=\"myScene\">\n    <Scene key=\"myScene_inner\" title=\"myTitle\" component={myComponent} />\n</Stack>\nAnd the Action is always Actions.myScene({...}), not Actions.myScene_inner({...})\ntry and let me know!!!. yes, i think it's a bug to\nhowever, has this solved Your problem?\nIl giorno gio 13 dic 2018, 19:08 HAMAD ADHBIYAH notifications@github.com\nha scritto:\n\nI don't know why, but I had the same problem and I solved in this way\nIt was like this:\n\nIt become like this:\n\n\n\nAnd the Action is always Actions.myScene({...}), not\nActions.myScene_inner({...})\ntry and let me know!!!\ni think it bug ,, because if i have 20 screen i need to do 20 Stack , it\nis not good\ni hope the developer help us\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/aksonov/react-native-router-flux/issues/3374#issuecomment-447065307,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/Ah4tmF9nJB0I_vhnDWCPCs4RY-Ee5TXPks5u4peTgaJpZM4ZJZ5n\n.\n. which is the scene that has the problem?\n\nIl giorno sab 15 dic 2018, 00:28 Jaume Bosch notifications@github.com ha\nscritto:\n\n`class App extends Component {\nrender() {\nreturn (\n            <Scene key=\"ClientMain\">\n                <Scene key=\"ClientMainBody\"\n                       component={ClientMain}\n                       panHandlers={null}\n                       leftButtonImage={require('./images/back.png')}\n                       onLeft={() => Actions.pop()}\n                       navigationBarStyle={[STYLES.navBar]}\n                       leftButtonIconStyle={[STYLES.navBarButton, STYLES.navBarLeftButton]}\n                       navigationBarTitleImage={require('./images/logo.png')}\n                       navigationBarTitleImageStyle={[STYLES.navBarLogo]}>\n                </Scene>\n            </Scene>\n\n            <Scene key=\"ClientGreetings\">\n                <Scene key=\"ClientGreetingsBody\"\n                       component={ClientGreetings}\n                       panHandlers={null}\n                       leftButtonImage={require('./images/back.png')}\n                       onLeft={() => Actions.Main()}\n                       navigationBarStyle={[STYLES.navBar]}\n                       leftButtonIconStyle={[STYLES.navBarButton, STYLES.navBarLeftButton]}\n                       navigationBarTitleImage={require('./images/logo.png')}\n                       navigationBarTitleImageStyle={[STYLES.navBarLogo]}>\n                </Scene>\n            </Scene>\n\n            <Scene key=\"LawyerTerms\">\n                <Scene key=\"LawyerTermsBody\"\n                       component={LawyerTerms}\n                       panHandlers={null}\n                       leftButtonImage={require('./images/back.png')}\n                       onLeft={() => Actions.pop()}\n                       navigationBarStyle={[STYLES.navBar]}\n                       leftButtonIconStyle={[STYLES.navBarButton, STYLES.navBarLeftButton]}\n                       navigationBarTitleImage={require('./images/logo.png')}\n                       navigationBarTitleImageStyle={[STYLES.navBarLogo]}>\n                </Scene>\n            </Scene>\n\n            <Scene key=\"LawyerMain\" component={LawyerMain} hideNavBar />\n            <Scene key=\"LawyerForgot\" component={LawyerForgot} hideNavBar />\n            <Scene key=\"LawyerSignupStep1\" component={LawyerSignupStep1} hideNavBar />\n            <Scene key=\"LawyerSignupStep2\" component={LawyerSignupStep2} hideNavBar />\n            <Scene key=\"LawyerSignupGreetings\" component={LawyerSignupGreetings} hideNavBar />\n\n            <Drawer key=\"Drawer\" drawer contentComponent={Drawer}\n                    drawerImage={require('./images/burger.png')}\n                    navigationBarStyle={[STYLES.navBar]}\n                    leftButtonIconStyle={[STYLES.navBarButton, STYLES.navBarLeftButton]}\n                    rightButtonTextStyle={[STYLES.navBarRightText]}\n                    rightButtonIconStyle={[STYLES.navBarButton, STYLES.navBarRightButton]}\n                    navigationBarTitleImage={require('./images/logo.png')}\n                    navigationBarTitleImageStyle={[STYLES.navBarLogo]}>\n                <Scene key=\"LawyerMyEnquiries\" component={LawyerMyEnquiries} panHandlers={null} />\n\n                <Scene key=\"LawyerEnquiries\" tabBarPosition={'bottom'} tabs={true} default=\"tab1\" tabBarSelectedItemStyle={STYLES.tabSelected} showLabel={false} tabBarStyle={STYLES.tabBar}>\n\n\n                    <Scene  key=\"tab2\"\n                            title={I18n.t('otherAreas')}\n                            iconName=\"archive\"\n                            icon={TabIcon}\n                            component={LawyerOtherEnquiries}\n                    />\n                </Scene>\n\n                <Scene key=\"LawyerReviews\"\n                       component={LawyerReviews}\n                       panHandlers={null} />\n                <Scene key=\"LawyerProfile\"\n                       rightTitle={I18n.t('save')}\n                       onRight={()=>Actions.refresh({ save: true }) }\n                       component={LawyerProfile}\n                       panHandlers={null}\n                       passProps={true} />\n                <Scene key=\"LawyerPlans\"\n                       component={LawyerPlans}\n                       panHandlers={null} />\n                <Scene key=\"LawyerAdvisor\"\n                       component={LawyerAdvisor}\n                       panHandlers={null} />\n\n                <Scene key=\"LawyerEnquiryDetails\"\n                       leftButtonImage={require('./images/back.png')}\n                       onLeft={() => Actions.LawyerMyEnquiries()}\n                       component={LawyerEnquiryDetails}\n                       panHandlers={null} />\n            </Drawer>\n        </Scene>\n    </Router>\n);\n\n}\n}`\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/aksonov/react-native-router-flux/issues/3374#issuecomment-447509204,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/Ah4tmCbi9HDJH412-37lrrDrCrZkiPfqks5u5DQpgaJpZM4ZJZ5n\n.\n. \n",
    "astutetechnp": "Facing same problem. Removing Drawer solved the problem. Hope to see some solution with the Drawer.. ",
    "bradley2W1DL": "Thank you @edoantonioco \ud83d\ude4f This issue had been driving me crazy.  I had removed a root scene within a Drawer because I deemed it unnecessary without realizing that it would break this.  Adding that wrapping scene back in fixed things.. ",
    "raffij": "Looks like it applies the refresh props to the current scene, rather than the new scene.. ",
    "strindhaug": "Just how long timeout is needed for it to work?\nI've tried this with no success\njsx\n      <Scene\n        key=\"manualSteps\"\n        component={relayRenderer(ManualSteps)}\n        queries={viewerQueries}\n        title=\"Change steps (Initial)\"\n        hideTabBar\n        clone\n        backButtonImage={quitButton}\n        //renderRightButton={renderDummySaveButton}\n        direction=\"vertical\"\n      />\nI've tried with or without an initial rightbutton dummy, it makes no difference.\nIn ManualSteps:\njsx\n  componentDidMount() {\n    setTimeout(() => {\n      Actions.refresh({\n        title: 'Change steps (Mounted)',\n        onBack: this.onCancelPress,\n        renderRightButton: this.renderRightNavBarButton,\n      });\n    }, 1000);\n  }\nThe title actually does change after 1 second but the rightButton is unchanged.\nIt seems like refresh simply ignores all props that contain style or components. But I can't see anything that appears to filter it out in the source code...\n. Ahh, it seems that:\n- renderLeftButton is ignored if left or leftButton is non falsy,\n- renderRightButton is ignored if right or rightButton is non falsy,\n- navigationBarStyle is ignored if headerStyle is non-falsy, etc...\nbecause of these:\nhttps://github.com/aksonov/react-native-router-flux/blob/20050c4c2ef0abf4d507c200e5a6a66bf2c62541/src/navigationStore.js#L209-L214\nPresumably some of the values earlier in these OR-chains is always non-falsy causing it to ignore the params from refresh().\nSo for instance to change the navigationBarStyle using refresh you should refresh with the undocumented prop headerStyle as well (I would set both in case this bug is fixed later). \nI've only tried navigationBarStyle so far but I assume this would work for some of the others.. ",
    "xinfang": "+1. ",
    "FirdousNath": "thanks a lot buddy, it really helped :+1: . ",
    "youngList": "hello, I had a same question, please help me see my question,\nhttps://github.com/aksonov/react-native-router-flux/issues/3405. some code is:\n<Router>\n<Scene>\n<Scene key=\"login\" component={Login} title=\"Login\"><Scene>\n<Stack>\n<Scene key=\"home\" component={Home} title=\"home\"/>\n<Scene key=\"home1\" component={Home1} title=\"home1\"/>\n</Stack>\n</Scene>\n</Router>\ni want to go page of home1 from page of login, i do Actions.home1() at page of login,but no effect . <Router>\n<Scene key=\"root\">\n<Scene key=\"login\" component={Login} title=\"Login\"></Scene>\n<Scene key=\"register\" component={Register} title=\"Register\"></Scene>\n<Stack key=\"main\">\n<Scene key=\"home\" component={Home} title=\"Home\"></Scene>\n<Scene key=\"home1\" component={Home1} title=\"Home1\"></Scene>\n</Stack>\n</Scene>\n</Router>\nActions.push('home1') is also no effect . Actions.relplace('home1') is effect. <Router>\n            <Stack key=\"root\">\n                <Scene key=\"login\" component={Login} title=\"Login\"></Scene>\n                <Scene key=\"register\" component={Register} title=\"Register\"></Scene>\n                <Stack key=\"homeStack\">\n                    <Scene key=\"home\" component={Home} title=\"Home\" hideNavbar></Scene>\n                    <Scene key=\"home1\" component={Home1} title=\"Home1\" hideNavbar></Scene>\n                </Stack>\n                <Scene key=\"tabs\" tabs initial hideNavBar>\n                    <Scene key='square' component={Square} title=\"\u5e7f\u573a\"/>\n                    <Scene key='collection' component={Collection} title=\"\u6536\u85cf\"></Scene>\n                    <Scene key='contact' component={Contact} title=\"\u8054\u7cfb\u4eba\"></Scene>\n                    <Scene key='me' component={Me} title=\"\u6211\"></Scene>\n                </Scene>\n            </Stack>\n        </Router>\nbut i do Actions.replace('me') at page of home, it's no effect,  and show me An error: there is no router defined for key undefinede.Must be one of: 'square','collection','contact','me'.\nSo how can i do?. > DId you try Actions.main() first to go to main stack and then try to navigate to home1?\nActions.main() first is to go home page by default, but i want to go home1 directly. ",
    "adkaushik": "DId you try Actions.main() first to go to main stack and then try to navigate to home1?. ",
    "Ash-faq": "can some one help me on this???. @aksonov  can you help me on this???. @andrew @daviscabral @joenoon @januswel  can someone answer this? . @joenoon thanks for your reply. scroll is working fine in mobile but when iam running the same app in windows using react-native-windows the scroll is not working. > @joenoon thanks for your reply. scroll is working fine in mobile but when iam running the same app in windows using react-native-windows the scroll is not working\n@aksonov . ",
    "Pauligrinder": "Here's how I handled a similar situation (I update the chat regardless, but I only want to show a notification if another chat or a different view is open):\n```\nimport { Actions } from \"react-native-router-flux\";\nthis goes inside the notification handler. notif is the notification object that comes from FCM.\nvar chatView = null;\n                    try {\n                        chatView = Actions.refs.chatView.getWrappedInstance();\n                    } catch (e) {\n                        console.log(\"chatview not open\");\n                    }\n                    if (\n                        chatView != null\n                                ? chatView.props.id !== notif.chat_id\n                            : true\n                    ) {\n                        showNotification(notif); // this is a function that calls FCM.presentLocalNotification()\n                    }\n```\nIn your case you would invert it to chatView.props.id === notif.chat_id (or whatever your parameters are called). Now since you have a reference to chatView, you can call an update function where I'm calling showNotification(). \nOh and by the way. For this to work, you must define { withRef: true } in the ChatView. Here's how my export looks:\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n    null,\n    { withRef: true }\n)(ChatView);. > @Pauligrinder Thak you, i am trying what you said me (at the end i did upate the chat regardless too, but i have reac-redux v6, so, now withRef it doesnt works the same, i am try to get a good implementation example of forwardRef\n\n\nThe withRef option to connect has been replaced with forwardRef. If {forwardRef : true} has been passed to connect, adding a ref to the connected wrapper component will actually return the instance of the wrapped component.\n\n\nYeah, I noticed this now too. I haven't updated myself so I can't try it, but I'd assume all you need to do is remove getWrappedInstance() from the call. . ",
    "gunduzcihat": "Anyone?. ",
    "bearer-syntaxerror": "After further investigation, it appears that React Native's backAndroidHandler behavior may have changed. Returning true now apparently overrides the default hardware back button behavior. Furthermore, the hardware back button would background the app when the back button was disabled, this is no longer the case. This appears to be entirely on the React Native side.. ",
    "IjzerenHein": "I'm experiencing the same issue.. I do think I've found a workaround though. Try passing hideTabBar: true to Actions.push like this:\njs\nActions.push('detail', {hideTabBar: true});. ",
    "mengerpiao": "@IjzerenHein \n  Thanks a lot . but it's the same issue\u3002\n  _onPressContent = (item) => {\n    Actions.push('ModelDetail',item,{hideTabBar: true});\n}. @IjzerenHein @aksonov\n\nI init a new project, I found the cause of the error: Ations.push can not carry parameters\u3002but it's need to take {hideTabBar: true} in the Actions\n_onPressContent = (item) => {\n    Actions.push('ModelDetail',{hideTabBar: true});\n}\ni guess bacause React-Navigation upgrade to 3.x\n. and i tried to use Actions.'ScreenKey' ,is normal\nex:\n_onPressContent(item){\n    // Actions.push('ModelDetail',item,{hideTabBar :true});\n    Actions.ModelDetail({data:item})\n}\n\n. ",
    "kashanshah": "Facing the same issue.. even when the keyboard pops up, navigated to the root scene!. ",
    "MosesEsan": "@handoff Did you find a solution for this?. ",
    "marcojr": "Sorry...I don't know how to format properly using this editor.. ",
    "ankitsihora": "I think you should try HOC which contain your router. I have used redux provider with store and it works for me.. You are using pop which pops out your screen with given params. use Actions.refresh().\nread this carefully. ",
    "octopusbaba": "Actions.refresh({\n      right  : this.renderRightButton,\n    })\nrenderRightButton() {\n    return (\n      \n\n\n    )\n  }\nThank me later. \n. ",
    "omair2010": "same issue im looking for reason . did u import the {Actions} from 'react-native-flux-router' ?. also u can do this\n```\n <Scene key=\"info\" title=\"Minha Conta\" icon={({title,focused}) => <FontAwesome name=\"user\" color={focused?\"red\":\"black\"} size={28} />}>\n        <Scene key=\"account\" component={Account} title=\"Meus dados\" initial />\n        <Scene key=\"address\" component={Address} title=\"Endere\u00e7os\" />\n        <Scene key=\"products\" component={Products} title=\"Produtos\" on={GlobalData.userData.LoggedUser} succes=\"account\" />\n      </Scene>  \n```\ni dont know exactly in any component u wanna add this i just gived u exemple u can use to do the same thing. ",
    "FernandoBravo": "Hi there, any good soul could help me on that ?\nasync componentDidMount(){\n    await this.getUserData('userdata');\n    if(GlobalData.userData.LoggedUser){\n      Actions.account();\n    }\n  }\nI have the getUserData working fine, GlobalData.userData.LoggedUser comes back set to true\nActions.account() is defined on my App.js \n      <Scene key=\"info\" title=\"Minha Conta\" icon={({title,focused}) => <FontAwesome name=\"user\" color={focused?\"red\":\"black\"} size={28} />}>\n        <Scene key=\"account\" component={Account} title=\"Meus dados\" initial />\n        <Scene key=\"address\" component={Address} title=\"Endere\u00e7os\" />\n        <Scene key=\"products\" component={Products} title=\"Produtos\" />\n      </Scene>\n\nand then I get this\n[Unhandled promise rejection: TypeError: _reactNativeRouterFlux.Actions.account is not a function. (In '_reactNativeRouterFlux.Actions.account()', '_reactNativeRouterFlux.Actions.account' is undefined)]\n* src\\components\\Form.js:19:6 in componentDidMount$\n- node_modules\\@babel\\runtime\\node_modules\\regenerator-runtime\\runtime.js:62:44 in tryCatch\n- node_modules\\@babel\\runtime\\node_modules\\regenerator-runtime\\runtime.js:288:30 in invoke\n- ... 13 more stack frames from framework internals\n. ",
    "andoru": "Fixed.\n. ",
    "xseignard": "Why not something like this instead this return false;:\nreturn typeof this.handleAndroidExit === 'function' ? this.handleAndroidExit() : false;\nWhere the handleAndroidExit() is a function passed as a props to the Router. Like this people would be able to define custom exit behavior and/or rely to the default one.\nThis would do the trick I guess.\n. ",
    "benstepp": "Good looking out. It just seemed like the way to go with all of the shallow slices pointing back to previous state objects, and direct setting of state vars here and here.\nThis does give me a change to better cover edge cases though. I noticed when nesting tabs things stop behaving as expected. I'm thinking at least tests for double nested tab routes should cover it. I'll take another stab at it this weekend.\n. ",
    "ps0305": "nope,it got misplaced !.  Flexible Nav bar customization, currently not allowed by React Navigation:. sure. "
}