{
    "Maxhy": "Mh some issue with the driver code signing certificate from GoDaddy. You will have to wait few more days sorry :\\\n. Ok I updated the installation package with fixed signed drivers. Could you redownload the release and try again? Thanks.\n. Ok great :)\nYes this is excepted, it's coming from the intermediate certificates embedded when signing.\n. Is this the same behavior with the provided release? https://github.com/Maxhy/dokany/releases\n. I tried on a similar machine and I cannot reproduce your issue, I believe this is a local issue (we don't do more on our side excepting the signing process).\nTry to clean all temporary file, get latest commits and rebuild the solution.\n. Indeed, fixed in latest commit. Thanks for the report.\n. Ok thanks for the report.\n- Does this is also happening on legacy Dokan version?\n- If not and as we try to by synced with DokanX for now, could you confirm this bug also occurs on DokanX project?\nThank you.\n. Mhh reading yours log I don't have too much idea. But I don't have much time neither right now, I will take a deeper look in few days.\nI would also said it's related to your wrapper, during this time could give a try with legacy dokan version just to be sure it is not a bug related to dokany? Thanks!\n. You simply need a valid certificate for that (cost $$$), and then sign the file in command line (for instance https://github.com/Maxhy/dokany/blob/master/sign.bat is the script we use to sign drivers in dokany, but we cannot provide the certificate unfortunately).\nI know ReactOS did it a few time for open source projects but I'm not sure they are still doing that (or it could takes weeks I believe, better to be sure about your release ;)).\nHope it heps.\n. Closing this then, feel free to suggest any PR, any help will be highly appreciated ;)\n. DotNet wrapper changed drastically based on the apaka review. This issue is not valid anymore I believe and C# discussion should continue on https://github.com/dokan-dev/dokan-dotnet\n. Thanks for this good PR. Merged.\n. @dimov-cz I will hijack a bit this thread but I didn't found any other way to contact you.\nCould you send me an email so we can discuss about SSH File System future directly? Thanks.\n. Thanks for your proposol @necrose99.\nI don't think we should disperse our effort on translation here but focus on English language improvement.\n. Ok why not, I don't have any experience with necrose99 but I will give a try.\nI invited you as a team manager if you want to take care about the initial step. Thank you.\n. Discussion should continue on Transifex, https://www.transifex.com/projects/p/dokany/\n. Good catch, thanks!\n. For me the best place for discussion is still the original Dokan Google Groups https://groups.google.com/forum/#!forum/dokan\nEven if the captain left the boat it doesn't mean we can't drive it ;)\n. What do you attempt to achieve?\nI believe your changes was working (you can run in debug and set a breakpoint just for the test to be sure it is called). If TEMP isn't a registry key then methods FindFiles and GetFileInformation will fail after that.\n. Indeed, much better explanation. Thanks.\n. Yes this part of the documentation requires Visual Studio Professional.\nThis was just a shortcut, you can build manually all Release Win32/x64 one by one and it will result the same.\n. Indeed this is good practice here, thanks.\n. Oh indeed, Vista is not officially supported anymore as we focus on WDK version >= 8.1 Update\nThis because drivers are not compiled for this target.\n. I noticed the behavior too but I don't get it.\ndef file should be optional, both ways should end to the same result and it is on x64 build but not x86. I believe you didn't find out way neither as you moved to def file?\n. Ok thanks for the explanation this makes the behavior clearer.\nI merged your PR, thanks for the changes!\n. Looks like @marinkobabic fixes resolved this issue. I cannot reproduce your BSOD with these changes whereas I was with previous versions. Could you try this pre-release and let me know if you still have BSOD? https://github.com/dokan-dev/dokany/releases/tag/0.7.3-RC2\nThanks.\n. @don-Pardon could you give a try with https://github.com/dokan-dev/dokany/releases/tag/0.7.3-RC3? Thanks.\n. @marinkobabic thank you for your implication, you're helping a lot on Dokan community but if only few people are testing your driver here I believe it is because you just posted binaries without any explanation of your changes. Proceeding like this is not community oriented, and more important it even violates Dokan sys project LGPL license (=> distributing a modified version of the project without the source code). This is definitely not the way it should be done. You should fork the repositories and create a different branch for each of  your test.\n. Ok I took a look on your changes @marinkobabic. These look really good, you even removed few code duplication on irp completion and few bugs will be fixed indeed.\nI'm just wondering about one fix, the one related to DokanStopCheckThreadInternal / DokanStopEventNotificationThreadInternal functions. I believe you did these changes and use IoQueueWorkItem routine to fix OS shutdown BSOD? Is that because IRQL is higher at shutdown? What's your investigation result here? Thank you.\n. Ok I'm confident with your changes now, thank you for the publication and explanations. I ported your fixes to Dokany with commit https://github.com/dokan-dev/dokany/commit/837633ab019a4b8b2b4181b318eb5de38e869327\nThanks @marinkobabic.\n. @mapomme1108 could you try with https://github.com/dokan-dev/dokany/releases/tag/0.7.3-RC2? I wasn't able to reproduce your BSOD with previous version so if this is fixed with this pre-release which include @marinkobabic, please close this issue.\n. Thanks for the analyze @jbrads. Is that a complete/kernel memory dump or a small memory dump (minidump)? If minidump, could you share your dump file for analyze on my side too? Otherwise here is the pdb file for Dokan 0.7.3 RC2 Windows 8.1 x64 driver file: http://wikisend.com/download/541738/dokan.pdb (I tried to use SymbolSource.org to automate symbols publication but it is a bit complicated if you're not using NuGet...). My source files are stored on F:\\dev\\dokan\\dokany.\n. Thanks for the analyze @jbrads, the issue identification @marinkobabic and the fix @Liryna.\nMy mistake, I failed the merge and didn't encounter the problem on my tests...\nI just published signed drivers @jbrads if you want to test again with latest changes: https://github.com/dokan-dev/dokany/releases/tag/0.7.3-RC3\n. Ok to warn for this issue I just pushed commit https://github.com/dokan-dev/dokany/commit/a4762f4aa01063ed0188290db43d7cf310a38fc1 which do VC++ 2013 prerequisite check at installation and ask to open Microsoft download page if missing (no check done in silent mode).\n. Yes. And on a x64 system the installer check for both prerequisites (VC++ 2013 x86 and x64) because both Dokan Libraries files sets are installed.\n. Yes it's the same issue. I'm closing this, please continue discussion on #27.\n. I agree, it is a race condition on mirror sample (not on driver neither on the library).\nI dont think handle should be closed on MirrorCloseFile but only on Cleanup, could you try by removing the code on MirrorCloseFile (just return 0)? I will give a try later.\n. I just took a look on this issue, I did some progress with commit https://github.com/dokan-dev/dokany/commit/08b09a3910dbac0e902a81ad9e9ae1a06d4a6d90 but it still doesn't work if you change DOKAN_ALLOCATION_UNIT_SIZE to another value (eg. 2048) and rebuild driver/library.\nFor me, it seems that correct sector/allocation unit volume information are returned if requested and then the issue doesn't lies on disk device IOCTL neither FileFsSizeInformation.\nYour test is to check file size on disk after creation, which as far as I know doesn't request the volume generally but is based on AllocationSize field returned on file information. I tried to fix it by aligning returned AllocationSize value (changes with ALIGN_ALLOCATION_SIZE function call) ; which should have been the case btw ; but I think an implementation is missing...\n. Just tested it again and I can safely say this is now fixed thanks to latest drive mount changes (it was a side effect). Closing it then, thanks for the report :smile:.\n. I'm going to close this as it is not a real issue/feature request about Dokan.\nFeel free to post it on the group instead for discussion. Thanks!\n. I just updated NSIS script to optionally embed VC++ redistributable (https://github.com/dokan-dev/dokany/commit/f3a3ab465424251cffc80eef5f01397df659f5c9).\nOn next releases we will provide two installers:\n- DokanInstall_0.x.x.exe which is around 700KB and doesn't embed VC++ redistributable. If VC++ runtime is missing it will open Microsoft download webpage\n- DokanInstall_0.x.x_redist.exe which is around 14MB and embed VC++ redistributable (x86 & x64). If VC++ runtime is missing it will be silently installed\n. After setting up a Checked Win8.1 OS, I end up to the same assertion than describe on OSROnline thread.\nAssertion: (((PVOLUME_DEVICE_EXTENSION)((DeviceObject)->DeviceExtension))->Type.Signature) == 0xF107\nWe should focus on the workaround provided by Max.\n. I fixed it on temporary mountmanager branch.\nBasically the problem is simple: the same device object cannot be File System Device and Volume Device anymore since Windows Vista thanks to an undocumented Filter Manager (mini-filters) behavior.\nDokan was working this way because the File System Device itself is related to a Disk Device which is dedicated per user-mode file system instance ; there was no need to distinguish the device objects.\nThe solution was to create a new Volume Device Object. VCB is of course allocated to VDO and I created a specific FSCB (_DokanFileSystemControlBlock) on FSDO which is a simple Device Extension just to keep track of DCB for IOCTL handling.\nBut this didn't resolve mini filter driver attachment. I believe it will not work as long we don't really support mount manager. I will create a specific issue for mount manager as it could require discussion.\n. I agree this is not explicitly said somewhere by Microsoft. After hours of testing that's my conclusion but maybe I missed something :). I don't know any project outside Dokan that was working this way, all projects/samples that I'm aware of use a different device for file system and volume.\nI isolated the issue to filter manager as I explained and I believe this is coming from an undocumented assertion the filter manager is doing about volume device object. Using a separate volume device fixed it.\nBut if I take a look again on the documentation https://msdn.microsoft.com/en-us/library/windows/hardware/ff543147(v=vs.85).aspx, Vpb field:\nA pointer to the volume parameter block (VPB) that is associated with the device object. For file system drivers, the VPB can provide a connection to any unnamed logical device object that represents an instance of a mounted volume. This is an opaque member.\nKey word here is unnamed. By using the same device object you break one rule: File System device object must be named and Volume device object shouldn't be. Not explicitly said but looking for an official answer... yeah not perfect, better if you found something else or even correct me if I'm wrong ^^.\n. That's it. But some additional stuffs are required to handle correctly the independent file system object which will also receive IOCTL on his own.\nI did it on mountmanager branch as you can see on https://github.com/dokan-dev/dokany/tree/mountmanager. Volume device is currently created on DokanCreateDiskDevice because his lifetime is the same but could have been init on IRP_MN_MOUNT_VOLUME as you suggested.\n. @marinkobabic I got your point but for me:\n- File System device should be named, see cdfs sample: https://github.com/Microsoft/Windows-driver-samples/blob/3528ffbb369fa0611aefd14c97bdd6ac5ee50c41/filesys/cdfs/cdinit.c#L100\n- Volume device shouldn't be named, see cdfs sample: https://github.com/Microsoft/Windows-driver-samples/blob/3528ffbb369fa0611aefd14c97bdd6ac5ee50c41/filesys/cdfs/fsctrl.c#L795\nI will do the test later but I think file system should be named for IoRegisterFileSystem registration (not sure) and anyway it would be an issue if it is not named for network file system (see https://github.com/dokan-dev/dokany/blob/62447bf97171e2187325ac30834e6bc15ef4d084/sys/init.c#L335). Isn't it?\n. Oh... I didn't saw it that way...\nSo what about FsRtlRegisterUncProvider in that case, should we create a specific network redirector device then?\n. That's right. Maybe this should be removed from stable code and a specific branch created for this development purpose if requested.\nOtherwise, using IoCreateDeviceSecure for unnamed driver object is not possible, IoCreateDevice must be used.\n. @marinkobabic after testing your assumptions I'm not sure you're right as the issue remains with your unique set of changes. Did you have a chance to test it on your side?\n. I'm testing on Win8.1 x64.\nNo special configuration required. Basically just set volume device name to NULL and call IoRegisterFileSystem / IoUnregisterFileSystem.\nOr see following patch that I used for my latest test: https://gist.github.com/Maxhy/5bcfec9c4350352c45aa\n. Mhhh good that's a progress but I still have some points to discuss.\n- For what I can see IoRegisterFileSystem is required to have Filter Manager support. Just for that I believe it cannot be avoided.\n- The File System device to register cannot be created in DeviceEntry because his type (FILE_DEVICE_NETWORK_FILE_SYSTEM / FILE_DEVICE_DISK_FILE_SYSTEM) must match volume device and is not yet known at this time.\n. That's a way to do it indeed :)\nI first found it conceptually better to have one file system control device per user-mode file system, but that would be overkill for what it is used for. I guess you're again right here.\nI will make the change on the branch (https://github.com/dokan-dev/dokany/blob/master/sys/fscontrol.c#L326 check will need to be changed too, maybe based on disk device name through ObQueryNameString) and let you know.\nEDIT: about priorities, mount manager support is really important for me, then yes maybe oplock. PR are also highly appreciated ;)\n. @marinkobabic @Liryna @kenjiuno I had the opportunity to work again on mount manager support. The part related to this specific issue is completed and I would love to have your feedback on this before going further on mount manager support (mntmgr is basically working but improvements are still required to work 100% as excepted). See current changes on https://github.com/dokan-dev/dokany/tree/mountmanager branch. Thanks.\n. Ok thanks for the quick review.\nYes removing dokan_mounter is one of the following step. I believe I will work on this specific step in two weeks when I get some free time again.\n. Ok closing this here as it is part of #50, continue discussion on this last thread.\n. I just added it with a new EnumerateNamedStreams callback on DokanOperations (because of that next Dokan release will be 0.8.0).\nmirror.c sample was updated to implement this callback as an example.\nYou can easily try with mirror.c using the following DOS commands on your volume:\necho test1>>myfile.txt:stream1\necho test2>>myfile.txt:stream2\ndir /r\ntype myfile.txt:stream2\nDo not forget to set DOKAN_OPTION_ALT_STREAM on DokanOptions to enable alternative stream on your FS.\n. @Liryna The changes are wrong.\nAmong other things it breaks directory rename when the directory is located at root drive.\n. Reverted the 'empty filename change' only which was a wrong fix and cause the new bug, with commit https://github.com/dokan-dev/dokany/commit/4496617e47dabf2123020e7732ddc15264005260.\n. About Volume Links on current branch state.\nI successfully created drive letter with SetVolumeMountPoint (IOCTL_MOUNTMGR_CREATE_POINT is behind) which make it visible on mountvol DOS utility with the associated \\??\\Volume{x} link. But diskpart, fltmc or diskmgmt.msc can't still list it. Moreover FileSpy result to a timeout when attaching to the drive (probably related to fltmc error). Current Dokan code is wrong because it still allocate a custom \\??\\Volume{x} in addition to the one created by Mount Manager, this could be the reason.\nMoreover Mount Manager keep links permanent after a reboot which can result to a current drive letter use error if the computer/dokanmounter was improperly shutdown. DokanLibrary should be able to recover from it and reuse the letter.\n. mountmanager branch is now stable enough to be tested :).\nAnyone interested about it, feedbacks would be great if you can allocate some time for code review (don't take care about git history, just the general diff with master) and tests before the merge.\nSpecial ping to @marinkobabic @accorp @kenjiuno @js69  :smile:\nThanks!\n. @Liryna ok thanks. Network drive only or even regular virtual drive doesn't show up without explorer kill?\n. Ok @Liryna, I believe it is related to https://msdn.microsoft.com/en-us/library/windows/hardware/ff560461%28v=vs.85%29.aspx\nIf the input to this IOCTL is (\"\\DosDevices\\X:\", NULL, NULL) where X is the current drive letter for the volume indicated in the input triple, the mount manager adds a special entry to its database indicating that the client does not require a drive letter. On subsequent reboots, the mount manager will not assign a default drive letter to the volume.\n. @kenjiuno, following your https://github.com/dokan-dev/dokany/issues/47#issuecomment-136343578  you will be interested to know that latest commit fb32a62a4b179c47c8106df14d8498e71c422cd7 on mountmanager branch implements correctly UNC provider now.\nAfter building latest change, you can use the mirror this way: mirror.exe /r c:\\test /l m /n /u \\localhost\\myunc\nThen you will be able to access it through M drive or \\\\localhost\\myunc\\.\n@Liryna this commit should also fix your issue. Be aware that mountmanager is now an option. To use it you should start the mirror with /g parameter.\n. Thank you for your positive feedback marinkobabic.\n- If DokanOptions->MountPoint and DokanOptions->UNCName is null then you have two cases:\n  - you're using Mount Manager, Windows will automatically assign a drive and notify Dokan through IOCTL_MOUNTDEV_LINK_CREATED.\n  - you're not using Mount Manager, you will have a working volume but no way to access it directly. That's said, it could be excepted for some use (ok not a lot of people want to do that).\n- I will try to add more logs but feel free to suggest what is missing if you see something\n- Yes, having an option to mount the drive globally or for current user session was on my mind too :smile:. But I want to do that after mountmanager branch merge.\n- Dokan debugging functions is a mess from the original code. Some cleanup should be done but this should be a separate discussion.\n- Indeed, I'm gonna to remove the duplicate code on DokanSendVolumeArrivalNotification (test artifacts). Thank you!\n. This has always bothered me too, a new issue should be opened for this. Please feel free to create it, it will be handled when I will get some free time again or if someone is willing to do it through a PR. But I agree with your comment.\n. I'm glad to say after 6 months that this is now merged :).\n. I took the liberty to rename your issue, I like dedicated issue when possible :smile: \nIcon is not really a file system feature but a Windows Explorer feature ; maybe we can provide an helper on DokanLibrary yes.\nTwo ways that I know to change drive icon:\n- The hard way: using icon overlay shell extension\n- The simple way: changing registry key like HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\DriveIcons\\M\\DefaultIcon where M is your dokan drive by setting default value to your icon path for instance\nOn current OS versions, I don't see any reason to use the hard way as setting registry key do the trick and work well with Dokan drives too.\n. Right, thanks for the additional information everybody.\n@shlatchz That's not possible as far as I know. If you visually want a different icon you will only be able to do that on the same ico file based on the different embedded sizes.\n. Loop device is not the purpose of Dokan and is now natively supported on Windows since 7 https://en.wikipedia.org/wiki/Loop_device#Availability\n. Hu, could you explain your use case here?\n. And why would you like to do that? Your user-mode file system will not be loaded yet at boot time.\nCould you describe more than one line what you attempt to achieve? Thanks.\n. I agree with @Liryna and I just tested to be sure.\nI cannot reproduce your behavior @acapola, could you analyze again on your side and give more information? Thanks.\n. @acapola You're probably right but we cannot reproduce the issue on our side.\nWhich operating system are you using? Which file system are you mirroring (NTFS I believe)?\n. At first look/test this is good!\nYou really did an amazing quick job, thanks for this PR. I'm gonna merge it but additional tests would be preferable to be sure it breaks nothing. Lets consider master as unstable for now ;).\n. Much better architecture, thanks again @marinkobabic ;)\n. That's probably because your command prompt is not executed with administrator rights. That's how Windows work with UAC... not really user friendly I agree.\nYou should run CMD with administrator rights before running dokanctl exe file.\n. Fixed with b48fd83ab9297dea600f4cf43a527d63e44d54dd.\nThe issue was on Dokan driver using FileObject->RelatedFileObject->FileName which is not safe (FileName buffer integrity is not guaranteed outside the associated file object pre-create routine). Fixed by using cached filename from dokan file context.\n. Yes this is related to mount manager, see #50. Work in progress, I just need more free time to finish it.\n. Done with mount manager merge.\n. @andreyloktev thanks you for this PR. But I'm wondering if this shouldn't be only handled kernel side so user mode file system don't have to care about it. What's the value to handle it partially on user land?\nAlso it looks to me that you committed some duplicate code, see https://github.com/andreyloktev/dokany/blob/master/dokan_mirror/mirror.c#L526 and following lines which looks duplicated to the previous ones.\n. This should be handled with #47 and #50 according to the following discussion https://www.osronline.com/showthread.cfm?link=250353\n. @EpsilonXX mount manager branch with correct file system registering was merged. Your issue should now be fixed, could you confirm?\n. Indeed... I thought that filter manager would attach itself to the device with the latest changes but it is not the case. This is outside by knowledge now, any help would be appreciated...\n. Mhh this is because of DokanInitVpb on DokanCreateDiskDevice (https://github.com/dokan-dev/dokany/blob/c4a0ae2c8620cdbeeb4c6b0297e983d4eb7a711a/sys/init.c#L938) I believe.\nVpb initialization should now only be done on IRP_MN_MOUNT_VOLUME, now that the file system is correctly registered. I'm gonna fix that later.\n. Fixed thanks to everybody. You can build yourself to test it or wait for the next beta in the coming days.\n. Well I don't think so. I think here the problem is more an inconsistent call to Unmount user-mode callback function.\nRight now it is only called in case of IRP_MJ_SHUTDOWN if I'm correct.\n. Indeed this looks like an old issue.\nFixed, thanks!\n. @TheSustainables @Grepsy @psaghelyi mountmanager branch was just merged, this debug case should be more stable now. Could you confirm?\n. Indeed in case of dokannp, this can be run by explorer. The (un)installer should handle this case, maybe an update on the coming WiX-based installer.\nAbout backward compatibility now. This is an interesting subject.\nDokany should be backward compatible from 0.6.0 to 0.7.4. In that case you should just have the latest version installed and both software (the one using 0.6.0 and the other one using 0.7.4) should work correctly.\nHere the issue could come from Paragon ExtFS. I was aware of this product and checking it was on my TODO. Because of compatibility issue, because they are repackaging the mounter and all libraries, and because they are providing Win10 compatibility with signed drivers, without source code, I believe they could violate Dokan licenses.\nAnyone from Paragon ExtFS watching this repo who could bring some details?\nOtherwise I will contact them to ensure there is no mistake on license use.\n. Concerning binary names, I also agree we should rename dll/driver with version number on filenames, but only major version number (dokan1.dll, dokan2.dll, ...). This means we should start to respect Semantic Versioning.\nOk @andreyloktev @feoff3. I would also be interested to see your changes, could you share it somewhere? I don't want to rush you but remember that this is excepted by Dokan licenses. Thank you!\n. @andreyloktev, I reviewed your changes since Dokan 0.6.0.\nWith current Dokany state, your changes doesn't have any value except what you already submitted on PR #64 (which cannot be merged unfortunately because unstable/incomplete). Thank you for the license respect and source code share!\n. Just talking about FUSE in general here (but your PR looks great, I will let Liryna handle the review :smile:).\nI don't have enough experience about fuse and I also believe a fuse mirror sample would be great, with associated documentation on the wiki of course.\nDo you think you could handle this @toksaitov? This would consolidate fuse support and ideally allow fuse unit testing.\n. Not sure if it is related but you can give a try by yourself using mountmanager branch if you want. The branch is quite stable now, only network drives are not working and need to be fixed.\n. Indeed after further investigation this is kind of normal (Windows point of view :skull:). Any file system name can be set here, but since Windows Vista (since UAC strangely...) it seems that Windows doesn't start elevated processes from file systems other than NTFS and FAT, and from what I read but not tested FAT32, CDFS, NPFS, MSFS or UDF would be fine too. Probably for security reasons at start and the implementation was simplified by Microsoft engineers.\nI will update the documentation and mirror sample.\nThanks for the investigation @js69 @Liryna, and thanks a lot for the issue identification @marinkobabic.\nEDIT with sources:\nhttps://www.osronline.com/showthread.cfm?link=168276\nhttp://www.osronline.com/showthread.cfm?link=166472\nhttp://www.osronline.com/showThread.cfm?link=129811\nhttp://www.osronline.com/showThread.cfm?link=121274\n. No you cannot. Some stuff need to be installed and this include a driver in kernel mode. This is technically not possible.\n. Dokan logs are required here. See https://github.com/dokan-dev/dokany/wiki/How-to-Debug-Dokan\n. Thank you for your PR @BoRiSGz, it has the benefits to point out the core issue.\nI will close your PR as it requires a more advanced approach (to answer your question, it is not the system that unmount the device but dokan dll or other threads), but be sure it wasn't done for nothing! See the current discussion it generated on @marinkobabic PR #140 which re-embed your fix as you can see. Your feedback would be helpful.\nThanks again.\n. For me on Win8.1 x64 it is not automatically unmount but it doesn't seems to fix socket issue at the end (I tried with ping.exe).\nAnyway this mount process should be improved as suggest here and by @BoRiSGz.\nI was thinking about improving WaitForMount but I can only think about similar solution (sending specific IOCTL to Dokan driver => will be similar to what is currently done with IOCTL_EVENT_INFO, waiting kernel side at DokanStart for IRP_MN_MOUNT_VOLUME completion? Not sure it would be better...).\n. @marinkobabic I took a quick look on your changes. I believe mount manager is not working as excepted because DokanSendVolumeArrivalNotification is still called on DokanCreateDiskDevice whereas it should now be on DokanMountVolume. Just guessing, I cannot give a try before several days unfortunately.\nThank you :).\n. Working much better now thank you.\nAbout mount manager, I fixed it locally so don't worry about it, this is quickly corrected (following my previous comment instructions).\nI don't think IRP_MN_QUERY_DEVICE_RELATIONS is necessary here or I'm missing some information. Do you have some sources link to share to instruct myself?\nI'm gonna clean some code and merge it as FsRtlNotifyVolumeEvent issue is not directly related to this PR and already present in master.\nEDIT: OK maybe because of IoGetRelatedDeviceObject call at reactos implementation you shared. Not sure it is really working this way on Windows. Need to dig this subject...\n. Regarding your last comment, I don't know why Mount Manager doesn't refresh explorer, I thought it was part of its job..\nSo you want to move back mount point creation to user mode to use DefineDosDevice? I would like to avoid that if possible.\nFor reminder we can keep NotifyAllApps (dokan driver) and NotifyExplorer (dokan lib) but those should be removed once explorer notification corrected.\nAnyway we should merge it but the git history is a mess. Could you move DokanSendVolumeArrivalNotification/DokanCreateMountPoint to DokanMountVolume and then cleanup git history to have an unique commit?\neg:\n// Create mount point for the volume\n   if (dcb->UseMountManager) {\n      status = DokanSendVolumeArrivalNotification(dcb->DiskDeviceName);\n      if (!NT_SUCCESS(status)) {\n         DDbgPrint(\"  DokanSendVolumeArrivalNotification failed: 0x%x\\n\", status);\n      }\n   }\n   DokanCreateMountPoint(dcb);\nThank you.\n. Ok thank you, I'm looking forward for your cleanup changes so it can be merged in a proper way.\nAbout mounting to current user only, this shouldn't impact mount manager decision. Mount manager should remains optional, some people want to mount a volume for all users but to not use mntmgr. Indeed DefineDosDevice is justified here for this purpose.\nI will handle this part and do appropriate testing, please don't include such behavior on this PR changes :). Then you can also remove NotifyAllApps / NotifyExplorer code I believe.\n. Ok I did the change on kernel mode. Because everything was already here, you will understand by seeing the commit.\nThis means explorer is still not notified, we could fix it by moving back symbolic link creation to user mode but it is not a real solution as the problem will remains when using mount manager...\nBut, and this is a big BUT, we cannot mount the drive for a specific user but only for specific session (current session), and not Windows Logon session but authenticated session (identified by Authentication Id). We mixed-up some concepts on previous discussion.\nConcretely it means that if you mount a drive using Run As or UAC elevation, it will not be available through explorer of the same logon session. It also means that impersonation is not possible (maybe we could found a way to mount for a specific Authentication Id other than the one in calling thread but I'm not sure this would be useful for anyone, or at least not until #136).\nSee 3083fdda2e04d8fc798a7d6cb9eafceafa8bdbaa.\n. I agree.\nCould you just clean up the git history to have only one unique commit (rework history locally then force push on your repo, it is supported by github). This to keep it clean when possible. Thank you.\n. OK I merged it after fixed some mistakes that wasn't present on original PR. I believe this is because you copy/pasted your changes.\nI will take the opportunity to talk about that, when we encounter this situation, the PR shouldn't be closed and a new one created, but git history cleaned using git commands to squash your commits for instance and then changes force pushed to your branch. This avoid splitting the discussion and ensure you will not miss something due to copy/past. Nothing mandatory here, just to let you know in case you are not familiar with git :smile:.\nAnyway, thank you again for this change and the constructive discussion, this is a major issue that I'm glad to be fixed.\nI just noticed a small issue few minutes after the merge... Mounting a network drive sometime fail due to timing issue on mount irp. That's because the named device is the volume in this case and not the disk. It also probably means that UNC registration should be done at mount and not disk device init.\n. In addition to @marinkobabic tests, latest oplock changes first attempted to also implement shared access. The code is currently partially implemented and commented, see https://github.com/dokan-dev/dokany/blob/master/sys/create.c#L829\n. Fixed with #165 :smile: (you can build the driver yourself for testing or wait for next RC release).\n. :+1: \n. I'm going to love this release, it will fix so many things excepted since years!\nThank you again @marinkobabic, I would have done the same for this network mount issue fix :smile:, good work.\nInteresting things about boot sector you made here, I'm just not 100% sure about your File System Recognizer read request check here, wouldn't if (fileObject == NULL && Irp->MdlAddress != NULL) { match other cases?\n. I'm doing few tests about oplock support, a little bit more complicated than excepted as shared access and file lock/unlock is also badly implemented. I will take the opportunity to implement correctly shared access in the same time, please don't be in a hurry :smile:.\nBut I'm wondering if current Lock/Unlock operation exposed to user mode is really useful. Anyone using it correctly on his user mode file system right now? Shouldn't this be managed transparently by the driver (= removing lock/unlock operation callbacks from user mode)?\n. I agree with your remarks about Win8 OS check and FsRtlOplockFsctrl. In fact I did some test work yesterday based on FastFat, see https://github.com/dokan-dev/dokany/tree/oplock branch. Far for complete / being tested.\nI'm basing oplock counter check on Fcb->FileCount whereas a new UncleanCount counter should be used, but it will do the trick for now.\nI think https://github.com/dokan-dev/dokany/blob/9eda5f0272992f2f585a6e177ca3048862ebc775/sys/fscontrol.c#L126 cannot be handled correctly as long as file Lock/Unlock is managed user-mode and I don't see any value to do it user-mode, but I could be wrong. I'm not sure to understand your IsLocked routine suggestion, in which case would it be used?\nAlso about PDF Edge reader issue, not sure it is related to Oplock. CdFs doesn't support FILE_OPEN_REQUIRING_OPLOCK on IRP_MJ_CREATE for instance.\n. Ok that was also my thoughts, good to know you share it :wink:. I will deprecate Lock/Unlock operations on user mode library and implement it in driver then. Let's wait for more feedback a few days in case someone would like to express a different opinion.\n. Current implementation with latest commits on oplock branch should be stable enough and even fix #154 according to my tests.\nI will gladly wait for your tests @marinkobabic, thanks!\n. Fixed and I just merged oplock branch to master.\nThanks for discussions, inputs and feedbacks @marinkobabic @Liryna.\n. And what about 1.0.0-RC1? I will give a try to Virtual CloneDrive later to see the behavior.\n. Yes this is excepted.\nComplete new installers, new file versions, etc... Both version could theoretically be installed side by side.\n. Because of FltpDoFilterNotificationForNewVolume I would say that a new volume arrived, but even so I cannot reproduce your issue. Any indication on how to reproduce it would be helpful indeed.\n. Looks like the mount point is not mounted globally, which shouldn't be the case as /c is not in argument list... Could you try to run mirror.exe without elevated privileges?\n. @marinkobabic I tend to agree with you and DefineDosDevice should be run in user mode if mounted for current session only. The only thing that bother me is that we are not really sure technically why this issue is only happening on few computers, the workaround will work but we will not know the root issue. I don't see alternatives anyway.\n. Related to your other issue #191.\n. Is https://drive.google.com/folderview?id=0B3E9tU82h-RMMmh3RkJFamM4WTA&usp=sharing working (drive version because of possible bsod issue in rc1 once mounted)? If so it's a sign issue.\n. Please don't flood, this will give us some confidence that you tried before posting :wink:.\nAnyway, your issue is related to driver signing: you build the driver by yourself which is fine but means you will have to sign it or enable test-signed drivers to be loaded on your system. See https://github.com/dokan-dev/dokany/wiki/Build#signing.\n. I think it never worked on Win8/8.1/10. I remember this is an old issue even if it wasn't created on Dokany issue tracker until now, there is similar reports on archived google code issue tracker https://code.google.com/archive/p/dokan/issues/302\nNeed to be fixed.\n. Ok I accidentally found something related to this issue during another test.\nIf Filetrace (from FileSpy) mini filter driver is attached to the volume, then sharing will work... It's a side effect but it looks like something is not correctly initialized until it got attached.\nAny hints would be helpful. @marinkobabic? @js69? @Liryna?\n. Fixed with b6060d437b975b712432412c1cbc6f8e0298d4bc thanks to @Kerbox!\n. This is general to network drives. I think NPEnumResource must be implemented to support this, maybe more.\n. I'm currently doing some experimentation on Network Provider, see temporary branch https://github.com/dokan-dev/dokany/tree/networkprovider.\nThis is now working and it fix your net use issue but it has to be improved before merge :smile:. It is strongly related to UNC feature and will not work without it (/u on mirror sample).\nListing on network provider should be optional. Default sharing to other computers should be supported and optional. IOCTL_REDIR_QUERY_PATH should be improved to handle properly all kind of path requests and not be stuck to one unique Dokan instance.\n. @gvonkreisler thank you for your quick test! As @Liryna said, it's currently in development.\nBut I just committed some changes that should make it stable enough now, feel free to give feedback.\nBtw, what's your use case to have it listed on net use?\n. The problem is not FileSystemName[1], this is a common way to have dynamic structure size on Windows kernel. Structure size is checked at https://github.com/dokan-dev/dokany/blob/master/sys/volume.c#L165 and if too small, a bigger memory should be allocated thanks to FsAttrInfo->FileSystemNameLength and STATUS_BUFFER_OVERFLOW.\nProblem is that this is wrongly done (checking for 8 bytes whereas copying 10, using null-terminal string whereas it is not excepted, having FileSystemName set to Dokan instead of default NTFS as changed recently on other places/samples). @marinkobabic those was your changes, I believe it's a mistake? I'm gonna fix it later today (already made the change localy, just waiting for your feedback).\n. @Stefitzky it seems you have several issues here\n- Requests Timeout: that's your original issue, I believe we are not tolerant enough here and should found a way to distinguish stressful conditions and a dead user-mode file system.\n- FUSE MAX_PATH: this could easily be isolated on fuse wrapper. It makes several uses to MAX_PATH define which is 260 length, I beilieve this is related.\n- BSODs: crash minidump or analyze would be really helpful here\nThanks.\n. Interesting discussion you started @Corillian. Current threading model was always a bother to me so I'm glad to see suggestions. My opinion is that it currently works and only result to performance issue so even if I totally agree, I will personally do on it after few others issues / bug fixes. Or maybe you already planned to work on it on your side as you already contributed several times? Better to know it to avoid work duplicate as happened with WiX installer :smile:.\n@suy For now, most current language Dokan libraries (C#, Java, ...) are wrapping the C resulting dynamic library dokan1.dll. I currently prefer this way to avoid user-mode handling work duplicate (libraries would have to through native win32 call anyway to talk to the driver). But documenting the protocol to talk to kernel device should be done for the sake of documentation indeed!\n. I'm not sure to understand your requests here, sorry.\n- Could you details what you mean by portable? I don't see how a driver could become portable as it has to be registered to the system at some point. Moreover several other features also require some kind of registration (network provider, ...)\n- User variables serialization? I don't get it, what are you talking about?\n. Indeed, I can reproduce your issue but this is related to network option. If you don't mount as a network drive (eg. remove /n on mirror sample) it will work fine. I believe there is a bug on latest Network Provider changes, I'm gonna check.\n. Fixed with d3ecfb0e5d327092113430bfd7b27ee605860081, thanks for the report.\n. Thanks for your report and patch @shashiu, after review and few tests I also agree to this change (commit 55db24ddb1fe9d6ebc2a270b24d3edf4ec3e99d7).\nPull request would be better to handle than patches as pointed out by @marinkobabic , but patch is still appreciated of course :smile:.\n. Oh indeed. This is related on how global kernel objects are accessible from Windows Terminal Services as you pointed out, so yes @marinkobabic this will always fail I believe as we try to access the global device directly.\n@shashiu your fix is fine as all these object access are currently done on the same session than the mount application. For the sake of knowledge, could you just confirm that changing https://github.com/dokan-dev/dokany/blob/55db24ddb1fe9d6ebc2a270b24d3edf4ec3e99d7/dokan/dokan.c#L339 to wcscpy_s(DestinationBuffer, DestinationBufferSizeInElements, L\"\\\\\\\\.\\\\Global\"); also fix this issue (I cannot test TSE right now)? Thanks.\n. @marinkobabic as you seems to have noticed in your 17 days ago explanation, Device Object are created globally and only mount point is created global or according to the session.\nIt's why I asked about the \\Global prefix test.\nAfter testing by myself, adding this prefix as I specified doesn't change anything. It's not that it fails, it's just literally the same thing that without it on current OS versions, even when using Remote Desktop connection.\nThen I found out that I can reproduce @shashiu behavior but only if the session was created remotely (not a disconnect from console/connect remotely), and only at the first attempt. Second attempt will mount successfully. Definitely not a namespace issue.\nAfter investigation it seems to be related to BroadcastSystemMessage taking a lot of time (something like 30sec on my side). I don't know why here and it may be related to the system on something out of Dokan scope. Anyway KeepAlive and Loop threads should be created before forcing all applications to realize about the new mount point ; and this seems to fix the issue (BroadcastSystemMessage will still hang but mount will not fail).\nSee https://github.com/dokan-dev/dokany/commit/e43052006c96bc440dc9b6481b3863aac30bc9da.\n@shashiu @gh223682 please test and confirm, thanks.\n. I cannot help neither. I believe you should be able to identify the fix by applying commits one after another from 0.7.4 and making the same test for each change.\nI'm gonna close this as it is not a current issue anymore. Good hunt ;)!\n. Two remarks:\n- I think you're setting volume name from registry because you don't want to use UNC here or didn't registered the Network Provider (there is indeed a small today, to setup a custom volume name on network mount point, you have to setup a UNC redirector)? If so, this shouldn't be specific to FUSE but generally available on Dokan Library. But I also believe it would be better to refactor UNC redirector setup logic to avoid to use registry and duplication with Network Provider (be aware of current bug https://github.com/dokan-dev/dokany/issues/236#issuecomment-219688455). What do you think?\n- When your PR is ready, is better to clean git history to one commit per change compared to base (see https://ariejan.net/2011/07/05/git-squash-your-latests-commits-into-one/).\nThanks @gang929.\n. I updated the wiki to explain better how a network drive label could be setup: https://github.com/dokan-dev/dokany/wiki/API#network-provider\nI agree your code to setup drive label from registry could have its interest, but it shouldn't be on fuse library only then.\nOtherwise, I'm not sure to understand your binary compatibility change here. I know it is related to #234 but could you explain what the issue is in details and how your changes are fixing it? I don't see the value of these kind of defines here, probably just a lack of knowledge from my side. Thanks.\n. Ok according to the discussion I will summarize this PR state as following:\n- Network label name: current method to set network label name is using UNC and proposed registry method should be avoided for now. A buffer related bug seems to exist and should be fixed.\n- stat64_cygwin structure is incompatible between compilers but this shouldn't be changed. This struct is generally used by fuse fs implementation with system function (eg. lstat), those are also dependent to each compiler (cygwin, msys2, ...). Your fuse fs should link with dokanfuse built with the same compiler.\n- My opinion about network option on libfuse is that it should indeed be implemented as fuse_config structure doesn't impact fs implementation (and if using Windows only fuse options a #ifdef check could be done).\n. Vote up! \ud83d\ude04\nBecause we have to change the logo which is currently not one, and I also like it.. Same, I like it as well. But the previous one too so I will follow the community vote :).. #211 is definitely a hack fix but does the job as long extended attributes (to do ACL mapping) are not handled.\nBut then I believe it would be better for now to avoid a recursive call to the file system (which is hanging here btw) and create a permissive new security descriptor.\n@matepek as it is related to your PR do you think you could handle this new change again with appropriate tests? You may be inspired by https://msdn.microsoft.com/en-US/library/windows/desktop/aa446595(v=vs.85).aspx but for Directory object type. Thanks!\n. Indeed this is much better.\nThank you for this fix, and thanks a lot for your good explanation :+1:.\n. Coming 2nd August Win10 update will become a nightmare for those deploying their user-mode file system in production as this feature will be enabled by default.\nEnd of the world will start tomorrow and we will see, but basically we will have to change our signing certificate (more expensive and can be bought at Micro$oft friends only: Symantec & DigiCert, but that's the easy part), then we will have to pass WHQL certification (more work!).\nThis is a long time process but I believe it cannot be ignored anymore.\n@Microsoft, always a pleasure to work on your system! :confused: \n. Thanks for your test @js69. Seems that it is not enforced if it is an update, maybe only on new installations, or if you enable it manually as on @EcmaXp case.\n. Short file name (= alternate file name, DOS 8.3...) may be mandatory for few features, symlink, hardlink and reparse points seems to be ones of them.\nI believe fsutil 8dot3name query E: (where E: is your dokan drive) returns volume state 0? This means 8dot3 name is enabled. Could you try to change it with fsutil 8dot3name set 2 and then fsutil 8dot3name set E: 1 to disable short name for this volume just to see the system behavior in this case (I'm not able to test it right now sorry).\nShort file name is not supported on Dokan today. This should be done here and here.\nThen user-mode callback structure should be extended to allow user-mode file system to define this value (this shouldn't be handled by the driver with RtlGenerate8dot3Name). Maybe a new\n``` c++\ndefine DOKAN_OPTION_SHORTNAME 512 // short name is supported\n```\nshould also be added. It will be the user-mode driver responsibility to resolve short file name on IRP_MJ_CREATE.\n. https://support.microsoft.com/en-us/help/17588/fix-problems-that-block-programs-from-being-installed-or-removed?\n. I cannot reproduce your issue (Win 8.1). This is working on my side, I can open video file on mounted drive (with both 1.0.0-RC4 and latest commits). It is indeed failing through \\localhost UNC path but this is kind of 'normal' as VLC also failed with this kind of path without Dokan as you both noticed.\n. Looks like this is coming from https://github.com/dokan-dev/dokany/blob/2c6ca3a6594741d0edc5c21f7116ffffee9fa579/sys/timeout.c#L326 as the timeout thread is running in system context.\nNot sure about how we should handle this specific case. Maybe by storing the global dosdevice path with session information (eg. \\Sessions\\0\\DosDevices\\M) on device extension, but I don't think kernel mode naming supports it, neither how to get it if it does. @marinkobabic?\n. That's two other solutions :smile:. I thought about option 1 but I currently don't know how to do as you suggested in code. It may require some investigation.\nOption 2 could do the trick if we keep references to a list of 'mount point to be removed' when the drive is mounted on current session. It's not perfect as the unavailable dos device will remains until the user try to mount the drive again ; but better than nothing.\n. This was a known issue but should be fixed today thanks to mount manager (/o on mirror sample) and oplock support.\n. I missed that one when trying to fix it months ago...\nAfter testing, it is indeed working. Thanks a lot, good job!\n. XP is not supported anymore, this system version is dropped voluntary.\nDokan code may still be compatible with it but not tested since two years on this platform. You will probably have to change build setup and tools.\nLatest  released version supporting XP is the old 0.6.0. At first sight it could be a nice feature as I personally already needed it to perform driver specific features.\nBut I'm asking myself about the following points, to discuss:\n - we are in user mode, specific features could be implemented and used another way\n - current trend is to make the user mode API simpler. The API doesn't have any IOCTL knowledge, this would a little bit kill the abstraction layer\n - I'm concerned about isolation. Ideally Dokan will one day be able to handle and check all user-mode data before sending corrupted information to kernel components, to avoid BSOD. We will never be able to do that with custom IOCTL. The issue here is not related to Mount manager but to I/O manager. It is general to all Dokan mount method so this check shouldn't be done.\n. It is an interesting way to solve it :smile:.\nBut as you said it looks like a hack. Wouldn't be better to handle this wait through RegisterDeviceNotification  to be notified of FSRTL_VOLUME_MOUNT?\nOr wait kernel side for the mount before returning from DokanEventStart?\nNot sure here, just thinking.\n. This and associated release call will fail if vcb is null (see vcb check on next line).\n. Wow, I thought this was automatically done by I/O manager once we returned success from IRP_MN_MOUNT_VOLUME. Looks like it is needed indeed (see https://github.com/dokan-dev/dokany/pull/140/files#r49822003).\n. What do you attempt to do here? I may be wrong but this check looks invalid to me.\n. Could you add an explanation here for the sake of better code reading? Thanks!\n. But MountControl is not a pointer only mountEntry is, it can be zero-filled but its address will never be NULL.\n. I'm more talking about this specific > 3 check, it's not self explanatory and you have to read a lot of code to get why there is such check.\n. ",
    "t4-ravenbird": "Yes, installs cleanly now, thanks!\n(I notice size of download changed surprisingly much ; http://postimg.org/image/f0jamjqfz/ - dont know if that is expected)\n. ",
    "superhq": "Yes, I try the provided release,  and install failed also. \n1. install DokanInstall_0.7.0.exe\n2. dokanctl /r a\n3. dokanctl /i a\nThe result:\nC:\\Program Files (x86)\\Dokan\\DokanLibrary>dokanctl.exe /i a\nmounter path C:\\Program Files (x86)\\Dokan\\DokanLibrary\\mounter.exe\ndriver path C:\\Windows\\system32\\drivers\\dokan.sys\ndriver install failedmounter install ok\n. Sorry. I install  DokanInstall_0.7.0.exe success. \nBut use dokanctrl /r a  and then dokanctrl /i a  is failed. I reboot ws and try again, failed also.\nAnd my compiled version is failed always. \n. \uff29 install DokanInstall_0.7.0.exe and then use:\ndokanctl /r a to remove all server.\nrestart windows, and then:\ndokanctl /i a\nsuccess. I think  when we remove dokan service, the service is only marked for delete,and we need reboot windows for delete it completely.\nBut my own compile version still install failed.\nI put dokan.sys into  the C:\\windows\\system32\\driver folder, and dokan.dll into the C:\\windows\\syswow64 folder, and then use: dokanctl /i a. The result is\uff1a\nService  (Dokan) installed\nfailed to start service (Dokan): 127\nService (Dokan) start failed\ndriver install failed\n... ...\n(I set g_UserStdErr=TRUE.)\nI have disabled windows driver signature when start windows, and I also try to use signing certificates to sign it, but failed all.\nerron 127 is means:ERROR_PROC_NOT_FOUND:The specified procedure could not be found.. I don't know how to fix it.\n. dokan.sys can install in WS 2008 now. I misused the build environments.  win7 Release is the right configure for WS 2008.\nThank you for all your help.\n. @Liryna I try to use CreateFile with share mode FILE_SHARE_READ|FILE_SHARE_WRITE|FILE_SHARE_DELETE in MirrorGetFileInformation function, but result dose not change.\nI set a breakpoint in\n https://github.com/dokan-dev/dokany/blob/master/samples/dokan_mirror/mirror.c#L632\nbut it is not tirggered when I save the .docx file.\nI think some parameters may be incorrect when calling MirrorCreateFile, but I am not sure, and need more test. \n. ",
    "Liryna": "I cannot reproduce the error, can you try to give some debug information if possible ?\nThe driver can only be installed if it is signed by a Trusted company.\nCan you try to disable driver signature ?\nhttps://learn.sparkfun.com/tutorials/disabling-driver-signature-on-windows-8/disabling-signed-driver-enforcement-on-windows-8\n. I had the same issue on dokan when the IO was very slow (or during Debugging for exemple).\nFor me, you don't need to read/write exactly the amount of data the system is asking you.\nBut you need the read/write the number of data you are able to perform in a appropriate time. (Do not forget to return the size of your data)\nRight after, the system will call you until the read/write is complete.\nI am not a expert on this but for me it would make sense.\n. @opendedup Since there is no update from you, I will close the issue.\n. Yes, I wanted to add NTSTATUS in the release but I have some issue with it :(\nI will probably make a 7.5.0 during this week.\n. nop\n. This have still not be investigated with all the work we have to :cry:\n. Hi,\nDid you sign the driver you have build with a valid certificate ?\nor have you disable the Driver Signature Verification ?\n. It is exactly that :)\nsee: https://github.com/Maxhy/dokany/issues/8\n. Yes the DateTime declaration has changed 46d7789bf5ceb969e73195785e74cfc2a91a8764.\nIn Dokan 0.6.0, DateTime was equal to DateTime.MinValue when dokan failed.\nMake DateTime nullable give a better detection of dokan failure.\nWhat is your build error ? \n. Oh yes well found ! it looks like this dokanx feature has been missed.\nWe will check about it and probably make a signed release during the next week :)\n. You are right, I made more test.\nMount \"M://\" generate a DOKAN_MOUNT_POINT_ERROR but not \"M:\".\n. Using Unmount or RemoveMountPoint make no difference.\nBut I agree with you. Unmount have no really meaning otherwise that simply propose to Unmount by giving a letter and not a path. A simple helper :yum: \n. I agree with you!\nYour proposal seems to be fine!\nAppending a colon sign and backslash and upper case, would make it easier\nWe would keep the Unmount for compatibility and call RemoveMountPoint directly with this changes.\nThis should fix all misunderstanding.\n(If no one here see a potential wrong behaviour)\n. @suy \"FILE_FLAG_DELETE_ON_CLOSE in the dwFlagsAndAttributes parameter of CreateFile. Dokan doesn't support that out of the box, but there are easy to work around.\"\nIf I remember Dokan already give you the information during CreateFile.\nhttps://github.com/dokan-dev/dokany/blob/8b7742fae5b78af4a21ee42201a7fcb1517a2004/dokan/create.c#L98\nThis Windows 10 (= 8.1) sample give us a over view of the officiel behaviour for detecting the delete file operation.\nhttps://github.com/Microsoft/Windows-driver-samples/tree/master/filesys/miniFilter/delete\n\nIt monitors IRP_MJ_CREATE requests for the FILE_DELETE_ON_CLOSE flag. Also, it detects IRP_MJ_SET_INFORMATION requests for setting FileDispositionInformation. The sample also illustrates how to handle racing deletes (in the form of multiple parallel IRP_MJ_SET_INFORMATION operations), and how to distinguish deletion of an entire file from deletion of just one stream of the file.\n\nI also think that it is the application that should keep a information to handle automaticaly the delete on close.\nMaybe we even should remove the flag during CloseFile for the < 8 Windows version to have a \"standard\" behaviour ?\n. You are right. Remove the flag would break compatibility.\nI have look how to add the flag during close event on Win > 8.\nDeleteOnClose is set from the EventContext information:\nhttps://github.com/dokan-dev/dokany/blob/741198c10b52bd1bf38eb389197d5c8bb9682f01/dokan/dokan.c#L448\nThe EvenContext come from DeviceIoControl (dokan driver).\nhttps://github.com/dokan-dev/dokany/blob/741198c10b52bd1bf38eb389197d5c8bb9682f01/dokan/dokan.c#L291\nI guess Windows break the compatibility :D or the officiel behaviour never was to check delete on close.\nThe EvenContext is a new instance for every IO call. Thats why it is impossible to store the DeleteOnClose inside.\nWe should find a way to store it in a clean way inside the DokanLoop\n. Added with 770d2a76a97f7cf86002660d44c9aaeba8f474f0 from https://github.com/BenjaminKim/dokanx/pull/45\nThe logic is different and more simple :smile:  and it work ! :+1: \nThanks @marinkobabic\n. Does the test folder exist ?\nThere is only one reason for you to get this error: https://github.com/dokan-dev/dokany/blob/22cf77c32594ec74e12038e9bc470e57524b8e9e/dokan/dokan.c#L111\nCan you make a test with a valid drive letter that is available ?\n. I have really no idea :(\nYou should only get this error only if the folder does not exist.\nNo links with \"share\" as I know :(\nI keep open for some days in case you find a strange behaviour that I can reproduce.\n. Hi !\nI already had such BSOD, the device is not unmount and nobody controle it so the system become unstable until the os crash.\nI think the service should force unmount when killed/restart and also contact mirrorfs to forward that the device is killed.\nWe should even probably add a ping system from the service to mirrorfs in case that something goes wrong for one of them.\nIt is only suggestion because I do not know if the driver have such security already but it seems not.\n(I hope that I have properly understand your ticket)\n. I think we should see the service as a guard. If someone ask him to restart or stop he should clean everything before leaving.\n\nOn the other hand service restart doesn't affect mounted FS, it is still mounted and is working properly, so why turn it off?..\n\nI have never tested such case :smiley: but as there will be nobody to clean the device...we will get a BSOD. Better to give the possibility to the mirror for handling it that break the OS.\nFor me if the service restart, it mean that something goes wrong or someone that have forget to clean his running \"mirror\" properly and none of this reason are normal use-case.\n. Have you already use DOKAN_OPTION_KEEP_ALIVE ? it say that it is for auto unmount.\nWhen enabled it perform IOCTL_KEEPALIVE to the kernel driver for updating a internal timer.\nIf the timer is reach the device is unmount. https://github.com/dokan-dev/dokany/blob/22cf77c32594ec74e12038e9bc470e57524b8e9e/sys/timeout.c#L80\nIf this really work, killing the service with the option should work.\nCan you test with this option ?\n. @don-Pardon Oh ok I see ><\n. Big thank you @marinkobabic ! Your contributions are always welcomed !\nI made a Pre-release with your changes.\n@viciousviper could you test with this version ? and make a report using WinDbg as marinkobabic explained ?\nhttps://github.com/dokan-dev/dokany/releases/tag/v0.7.3-RC4\n. Maybe I am missing something but the crash report is from devenv.exe\nPROCESS_NAME: devenv.exe\nAre you debugging dokan with VS when you run it ? If yes, could you run dokan without VS and make a new crash report ?\n. Oh sorry! I missed this information :smile: haha\nSo for now, you have never been able to make a crash without VS ?\nFor me, the crash with VS is much more related to the current VS 2015 RC stability.\n. Sorry @viciousviper, The pdb files have been erased by a new build :cry: .\nCould you install this version of 0.7.3-RC4 and reproduct the crash ?\nhttp://download.islog.com/dokan/\nThe sys pdf files of this build are in x64.rar.\nFor the next releases, I will add the pdb files next to the installer in the download page.\n. Thats a good report! Do you know exactly how to reproduct it ?\nIt seems that there is corruption of one IRP in the pending irp list causing the crash.\nAll PendingIrp are protected with a KeAcquireSpinLock but at this part of the code a new list with complete pendings irp is create and unprotected.\n@marinkobabic I would like your advice about it since you seems to know more than me :yum: \nShould we move the KeReleaseSpinLock right after the while ? (L208)\nhttps://github.com/marinkobabic/dokanx/blob/Windows8DeleteIssue/sys/timeout.c#L199\nThis could protect the IRP pointer used by IoCompleteRequest.\nThe documentation about IoCompleteRequest say:\n\"Never call IoCompleteRequest while holding a spin lock. Attempting to complete an IRP while holding a spin lock can cause deadlocks.\"\nAre they talking about every spin lock or the spin lock of the IRP ?\nEDIT: I just found that RemoveTailList is never used :O does that mean the PendingIrp is really never cleaned from irp completed ? if we clean it, the source of this BSOD will be removed.\n. Does the analysis of the memory dump gave more informations ?\n. @voltagex Thank you for the dump. Unfortunatly, the crash happen in ntoskrnl.exe.\nWinDbg can tell you from which software it come from.\nhttps://github.com/dokan-dev/dokany/wiki/How-to-Debug-Dokan#crash-report-bsod\nIn case you succeed to get the crash in dokan, I would be glad to look at the report.\nI have try to open DokanTest.7z but SevenZippedFile.cs is full of '\\0'.\n. But @voltagex ... you have implemented nothing :neutral_face:.\nPlease provide a crash report of dokan when you will have finished your implementation.\n. @marinkobabic I have made the same test as you. DokanTest more than 25 times with CTRL + C very fast or slowly.\nI got no crash and no zombie device. System was still stable after.\n@voltagex If you can make a crash, please use WinDbg to see in which software it crashed.\n. @voltagex Perfect report ! I have been able to repoduce the issue (Win 8.1) but not the crash.\nI have follow your steps, and after Make your application unmount the drive \n```\nM:>dir\nThe parameter is incorrect.\nM:>c:\nC:\\Users\\Liryna\\Desktop\\dokan>m:\nThe system cannot find the path specified.\n```\nBUT I still see the M driver in explorer.\nEdit: After restart of the service, the device is still alive and the mirror is still connected to the device. The issue happen when the mirror is killed DokanRemoveMountPoint failed. This could be fixed if during stop, the service would force to unmount.\n@marinkobabic I totally agree with you. It is worth to try.\nThe timeout thread completes the Irp requests in a loop for a device which no longer exists and here we have an invalid Irp which is completed. In which part of the code you think this happen ?\n. @marinkobabic Thank you\nOtherwise I have try to force unmount when the service is stop by adding:\n```\n//Force Unmount every device\nEnterCriticalSection(&g_CriticalSection);\nPLIST_ENTRY     listEntry;\nPMOUNT_ENTRY    mountEntry = NULL;\nfor (listEntry = g_MountList.Flink; listEntry != &g_MountList; listEntry = listEntry->Flink) {\n    mountEntry = CONTAINING_RECORD(listEntry, MOUNT_ENTRY, ListEntry);\n    DbgPrintW(mountEntry->MountControl.MountPoint);\nZeroMemory(&unmount, sizeof(DOKAN_CONTROL));\nunmount.Type = DOKAN_CONTROL_UNMOUNT;\nwcscpy_s(unmount.DeviceName, sizeof(unmount.DeviceName) / sizeof(WCHAR),\n    mountEntry->MountControl.DeviceName);\nDokanControl(&unmount);\n\n}\nLeaveCriticalSection(&g_CriticalSection);\n```\nHere: https://github.com/dokan-dev/dokany/blob/bdc64b0cdce4f6a2b7b4a046c7eca73818d378ed/dokan_mount/mounter.c#L406\nThe device is well unmount but the mirror is not notified of it and keep running.\nDo you have a idea why ?\n. @marinkobabic I have try what you say, but since the service has lost all mount informations during the restart. FindMountEntry cannot retrieve the MountPoint from the DeviceName so the Unmount, even with force flag, fail.\nhttps://github.com/dokan-dev/dokany/blob/master/dokan_mount/mounter.c#L74\nI totally agree with you, the service seems to be useless compared to the issue that it create.\nHave you already used Mount Manager ?\n. @marinkobabic DokanControlUnmount(Control->MountPoint) MountPoint is empty :cry: only DeviceName is set by the sys driver.\n(Sorry my first description was misleading)\nCan we get the MountPoint at this part of the code ?\nhttps://github.com/dokan-dev/dokany/blob/master/sys/timeout.c#L61\nI just tested with the native pdf viewer: \"There is a problem with the file format.\"\n. @marinkobabic \nOk I will add QueryDosDevice in FindMountEntry later.\nWhat do you mean by catching all exception on one place ?\nI agree, we are discovering that dokan need a lots of changes to achieve his goal.\nI create a new issue with a TODO list by priority, I will add every changes we found interesting and keep it update.\nFeel free to suggest any ideas.\nhttps://github.com/dokan-dev/dokany/issues/45\n. Hello\nCan you give me some more informations ?\nDo you still have mounted driver when you shutdown ?\nCan you make a test with mirror ?\n. In your dokan folder you should have a mirror.exe\nhttps://github.com/dokan-dev/dokany/blob/master/dokan_mirror/mirror.c#L1065\n. What happen if you shutdown when it is mounted ?\n. Ok\nAnd if only run mirror.exe without launching at all FISSH ?\n. Thank you  @marinkobabic but I am not a big fan to installing something that I do not know :cry:\nIs it possible to commit the changes in your repository ?\n. @marinkobabic About your pull request,  DokanY has sync the part of your pull request that keep the current logic. For us, we think your request is closed.\nBut as you can see DokanX is practically unmaintained so it gonna be open for a while.\nIf you want to have feedback and test in your new changes, I highly suggest you to provide a pull request to DokanY.\n. @marinkobabic Good news ! Thank you alot :) !\n@landrix Thank for the quick link !\nI will be glad to look at it in the next days :smiley: \n. 2- Ok so if I understand well, DokanStopEventNotificationThread will not block but KeWaitForSingleObject in DokanStopEventNotificationThreadInternal will still hangs forever ?\n. It is right that TrueCrypt have a windows driver but dokan work differently :(\n. @marinkobabic Well find :smile: !\nI removed it, will make a RC monday.\n. Hi,\nI made a test on my 64-bit Windows 8.1 VM with the mirror.\nC:\\Program Files\\Dokan\\DokanLibrary\\sample\\mirror>mirror.exe /r C:\\Users /l m\nSuccess\nand in another shell\nC:\\Program Files\\Dokan\\DokanLibrary>dokanctl.exe /u m\nmounter path C:\\Program Files\\Dokan\\DokanLibrary\\mounter.exe\ndriver path C:\\Windows\\system32\\drivers\\dokan.sys\nUnmount status = 1\nCan you try it ?\n. It is normal that mirror.exe hangs. It control the device and when it die, it close it.\nBut I never seen dokanctrl return 0 in a such simple test :O\nSorry to ask but just to be sure, What is the dokan version that you are using ? CueMounter propose the 0.5.3 but we have the 0.7.3\n. I am really sorry that I cannot help you more :(\nI will let the ticket open if anybody have the same behaviour.\n. Hi,\nI already had such behaviour too.\nDoes it work If you use the dokanctl to reinstall the driver & service ?\nHave you run the install in Administrator ?\n. > On that note: dokanctl is a really small application that calls some functions that are available in the library, but have no public header (are in dokanc.h). The DokanService* functions might be useful for application developers, e.g. for their own installers. Do you have an opinion about those?\nExport DokanService functions can be a good idea for people who need it.\n\nNot explicitly. I thought it would ask for Administrator rights if needed.\n\nSorry, I made a mistake. Yes normally it should always ask you the admin rights.\nI made a test again and the driver and services was not installed because  the Packages redistribuables Visual C++ 2013 was not installed. The installation was alright but dokanctl command failed in silence.\nDo you think it could be the same case as you ?\n. :O\nYes, if you can have some more details about it ! it is a strange behaviour that you describe.\n. Ok great ! I will close it so :+1: \n. Windows Kernel controls dokan driver. Dokan driver only forward the kernel call to user land.\nThe Kernel should take care of the situation that you described.\nBut some illogique call can also be made form him and it is your userland code that should handle it.\n. Is it your software that is crashing or mirrorfs ?\nCould you provide mirrorfs logs ?\n. Thank for the logs !\nBut what do you expect to happen ? Your file is open with FILE_SHARE_DELETE.\nThe file has been moved, it is normal that the read fail.\nI do not see your point sorry :(\n. OK I see,\nDo you run mirrorfs with more than a thread ?\n. I guess this could come from IRP race in kernel driver.\nWe should look at https://msdn.microsoft.com/en-us/library/windows/hardware/ff560773%28v=vs.85%29.aspx\n. @suy I am doing the same as you.\nMore informations about cleanup/close difference:\nhttps://support.microsoft.com/en-us/kb/120170\nFrom what I have understand:\nCleanup IRP is called with CloseHandle and when no other softwares are using the same file.\nBut the handle created during CreateFile have to be closed only in Close IRP.\nLast part of IRP_MJ_CLOSE: \nThe close routine is not called until all of the outstanding I/O requests are completed. Apparently, if the driver performs as planned in the IRP_MJ_CLEANUP routine, as discussed earlier, the IRP_MJ_CLOSE routine is called at the right time.\nDoes this could be the @storzinc case ?\n. Sorry for the delay @storzinc .\nHere is the debug output after two run:\n```\n[DokanFS] ==> DokanCreate\n[DokanFS]   ProcessId 2172\n[DokanFS]   FileName:\\test.txt\n[DokanFS]    IdType = VCB\n[DokanFS]   IrpSp->Flags = 0\n[DokanFS]   Allocate FCB\n[DokanFS] <== DokanCreate\n[DokanFS] ==> DokanWrite\n[DokanFS]   ProcessId 2172\n[DokanFS]   FileName: \\test.txt FCB.FileName: \\test.txt\n[DokanFS]   use MdlAddress\n[DokanFS]   Synchronous IO\n[DokanFS]    Offset 0:0, Length 1\n[DokanFS] <== DokanWrite\n[DokanFS] ==> DokanQueryInformation\n[DokanFS]   FileInfoClass 5\n[DokanFS]   ProcessId 2172\n[DokanFS]   FileName: \\test.txt FCB.FileName: \\test.txt\n[DokanFS]   FileStandardInformation\n[DokanFS] ==> DokanCleanup\n[DokanFS]   ProcessId 2172\n[DokanFS]   FileName: \\test.txt FCB.FileName: \\test.txt\n[DokanFS] <== DokanCleanup\n[DokanFS] ==> DokanRead\n[DokanFS]   ProcessId 2172\n[DokanFS]   FileName: \\test.txt FCB.FileName: \\test.txt\n[DokanFS]   ByteCount:4096 ByteOffset:0\n[DokanFS]   Paging IO\n[DokanFS]   Synchronous IO\n[DokanFS]   Nocache\n[DokanFS] <== DokanRead\n[DokanFS] ==> DokanCreate\n[DokanFS]   ProcessId 2380\n[DokanFS]   FileName:\\test.txt\n[DokanFS]    IdType = VCB\n[DokanFS]   IrpSp->Flags = 0\n[DokanFS] <== DokanCreate\n[DokanFS] ==> DokanWrite\n[DokanFS]   ProcessId 2380\n[DokanFS]   FileName: \\test.txt FCB.FileName: \\test.txt\n[DokanFS]   use MdlAddress\n[DokanFS]   Synchronous IO\n[DokanFS]    Offset 0:0, Length 1\n[DokanFS] <== DokanWrite\n[DokanFS] ==> DokanQueryInformation\n[DokanFS]   FileInfoClass 5\n[DokanFS]   ProcessId 2380\n[DokanFS]   FileName: \\test.txt FCB.FileName: \\test.txt\n[DokanFS]   FileStandardInformation\n[DokanFS] <== DokanQueryInformation\n[DokanFS] ==> DokanCleanup\n[DokanFS]   ProcessId 2380\n[DokanFS]   FileName: \\test.txt FCB.FileName: \\test.txt\n[DokanFS] <== DokanCleanup\n[DokanFS] ==> DokanClose\n[DokanFS]   ProcessId 2380\n[DokanFS]   FileName: \\test.txt FCB.FileName: \\test.txt\n[DokanFS]    UserContext:2C8D10E0\n[DokanFS]    Free CCB:2FA3D460\n[DokanFS]   status = STATUS_SUCCESS\n[DokanFS] <== DokanClose\n```\nMirroFS\n```\nCreate 0005\nCreateDisposition 0x00000005\nCreateFile : C:\\Users\\test.txt\n  AccountName: Liryna, DomainName: WIN-9RM07VT4S97\n        CREATE_ALWAYS\n        ShareMode = 0x1\n        FILE_SHARE_READ\n        AccessMode = 0x12019f\n        FILE_READ_DATA\n        FILE_READ_ATTRIBUTES\n        FILE_READ_EA\n        READ_CONTROL\n        FILE_WRITE_DATA\n        FILE_WRITE_ATTRIBUTES\n        FILE_WRITE_EA\n        FILE_APPEND_DATA\n        SYNCHRONIZE\n        STANDARD_RIGHTS_READ\n        STANDARD_RIGHTS_WRITE\n        STANDARD_RIGHTS_EXECUTE\n        FlagsAndAttributes = 0x0\nCreateFile status = 0\nWriteFile 0005\nWriteFile : C:\\Users\\test.txt, offset 0, length 1\n        write 1, offset 0\nGetFileInfo 0005\nGetFileInfo : C:\\Users\\test.txt\n        GetFileInformationByHandle success, file size = 1\nCleanup 0005\nCleanup: C:\\Users\\test.txt\nRead 0005\nReadFile : C:\\Users\\test.txt\n        invalid handle, cleanuped?\n        read 1, offset 0\nCreate 0006\nCreateDisposition 0x00000005\nCreateFile : C:\\Users\\test.txt\n  AccountName: Liryna, DomainName: WIN-9RM07VT4S97\n        CREATE_ALWAYS\n        ShareMode = 0x1\n        FILE_SHARE_READ\n        AccessMode = 0x12019f\n        FILE_READ_DATA\n        FILE_READ_ATTRIBUTES\n        FILE_READ_EA\n        READ_CONTROL\n        FILE_WRITE_DATA\n        FILE_WRITE_ATTRIBUTES\n        FILE_WRITE_EA\n        FILE_APPEND_DATA\n        SYNCHRONIZE\n        STANDARD_RIGHTS_READ\n        STANDARD_RIGHTS_WRITE\n        STANDARD_RIGHTS_EXECUTE\n        FlagsAndAttributes = 0x0\nCreateFile status = 0\nWriteFile 0006\nWriteFile : C:\\Users\\test.txt, offset 0, length 1\n        write 1, offset 0\nGetFileInfo 0006\nGetFileInfo : C:\\Users\\test.txt\n        GetFileInformationByHandle success, file size = 1\nCleanup 0006\nCleanup: C:\\Users\\test.txt\nClose 0006\nClose: C:\\Users\\test.txt\n```\nThe Dokan seems to be never called to Close the first handle by Windows Kernel for an unknown reason.\n. @storzinc I solved the issue by moving UnmapViewOfFile before CloseHandle.\n``` c++\ninclude \ninclude \nchar file1 = \"m:\\test.txt\";\nint main(int nargs, char args[])\n{\n    HANDLE hFile = CreateFile(L\"m:\\test2.txt\", GENERIC_WRITE | GENERIC_READ, FILE_SHARE_READ, 0, CREATE_ALWAYS, FILE_FLAG_SEQUENTIAL_SCAN, 0);\n    printf(\"%x %x\\n\", hFile, GetLastError());\n    if (hFile == INVALID_HANDLE_VALUE)\n        return 0;\nDWORD tmp;\nWriteFile(hFile, \"1\", 1, &tmp, 0);\nHANDLE hMap = CreateFileMapping(hFile, 0, PAGE_READWRITE, 0, 0, 0);\nchar *buf = (char*)MapViewOfFile(hMap, FILE_MAP_WRITE, 0, 0, 0);\n\nprintf(\"%c\\n\", buf[0]);\n\nUnmapViewOfFile(buf);\nCloseHandle(hFile);\nCloseHandle(hMap);\n\n}\n```\nI successfully get a call from close after the cleanup at each launch of this test code.\nObservation about your example:\nIt is right that close in not called after cleanup but this only happening for the first test, every other run successfully get a call from close after the cleanup.\nTherefore, to fully close a file mapping object, an application must unmap all mapped views\nof the file mapping object by calling UnmapViewOfFile and close the file mapping object\nhandle by calling CloseHandle. These functions can be called in any order.\nhttps://msdn.microsoft.com/en-us/library/windows/desktop/aa366537%28v=vs.85%29.aspx\nSo even if the Microsoft documentation say that it can be called in any order, it seems that there is a different behaviour in the windows kernel when UnmapViewOfFile is called after CloseHandle.\nDoes this seems alright for you ?\n. It is right that close in not called after cleanup but this only happening for the first test, every other run successfully get a call from close after the cleanup.\nThis part of the observation is not related to dokan but every file system driver.\nIf you take a look at dokan code, you will understand from the kernel logs I have provide that Dokan is not called at ALL by the kernel for the first file of the file system.\nIf you have any informations/fix to provide, let me know and I will look more about it. For me this issue is related to Windows and it should forward to them.\n. Ah you are right :smile: !\nIt is the FS that have to handle STATUS_SHARING_VIOLATION by checking the count reference.\nhttps://github.com/Microsoft/Windows-driver-samples/blob/2e757e5eea3cecf70d1f2b3030bb5ce55540cd3c/filesys/fastfat/create.c#L2229-L2242\nI just do not get the difference of OpenCount (ReferenceCount ?) & OpenFileCount(OpendHandleCount ?) in their example for now.\nReadOnlyCount has to been handle as well.\n. @marinkobabic I think CreateFileMapping is using the file context of CreateFile since the handle is given as argument. The issue come from CreateFileMapping is not cleaning well  the context of the file in some case, so it stay open for the file system.\nYou are right about the second statement.\nDokan does not check if there is a sharing acces conflict in CreateFile with the previous calls.\n. @marinkobabic I do not see new commit in your fork :cry: \n. @marinkobabic  Do you have a direct link ?\nBecause I see nothing in your old fork https://github.com/marinkobabic/dokanx/tree/Windows8DeleteIssue \n. @marinkobabic Oh sorry\nI have add your changes to the develop branch:\nhttps://github.com/dokan-dev/dokany/commit/ac016e96d3381f207969ff0893accefd5a547b01\nOutput of the ConsoleApplication3 (it is the last example of @storzinc)\n1\n3c 0\nffffffff 20\nDokanFS Logs http://pastebin.com/np96j8rb\nWe can see that STATUS_SHARING_VIOLATION is return for the last createfile.\nBut normally it should be the second who return STATUS_SHARING_VIOLATION and the third to succeed.\n. Yes it is right but if I run it on NTFS:\n1\nffffffff 20\n3c b7\nThe STATUS_SHARING_VIOLATION happen in the second createfile.\n. I was thinking ReferenceCount should do the job.\nSince the first close is called after the second createfile. We could manage to check in the second createfile that there is a sharing issue and we would return the error ourself.\n. From what it worth, fat32 have the same behaviour.\n. @marinkobabic Since your changes \"implement shareaccess\" does not affect this issue, have you seen some case where it work ?\nI just wanna know if this changes should be include in the next release.\n. Thank you for the clear description ! Added to the TODO\n. I have created a ticket with the main issue we face here(#152)\n. What do you mean by port dokan in another high-level language ?\nWrapping dokan api like https://github.com/dokan-dev/dokan-dotnet for C# ?\nOr mirror.c like @sherter told :+1: \n. https://github.com/dokan-dev/dokany/wiki/API#api-wrapping\n. mirror.c is a simple example of dokan in C using the C API.\n. No,\nWhat is the command line that you are using ?\ncould you give us more informations ?\n. Could you give us more informations ?\n\"the vm is stopped\" do you mean that DokanStart return ? what is the return value ?\nHave you enabled debug output ? What is the result ?\nIt looks like you have only implement one DokanOperation.\nPlease look at https://github.com/dokan-dev/dokany/wiki/API\nIf you see something missing please tell me and I will add it.\nMirror.c is enough to understand how dokan work and with the different wrapper as exemples, it is going to be very easy.\n. https://github.com/dokan-dev/dokany/blob/master/dokan/dokan.c#L142\nYou should begin to make it work with 1.\nhttps://github.com/dokan-dev/dokany/blob/22cf77c32594ec74e12038e9bc470e57524b8e9e/dokan/dokan.c#L111\nIf your CreateFile fail, you will get this error.\nThere is no default routine for the operations, so if you do not implement them, it is normal that it doesn't work.\n. https://github.com/Rollercops/Dart-Dokany/blob/master/example/extension.dart#L10\nTry to simply implement all Operations and simplify print the name of functions called.\nIt's at me to implement CreateFile?\nYour dart wrapper no, but the example that use your wrapper, yes.\nAs Mirror.c does with the C API!\n. https://github.com/dokan-dev/dokan-java/blob/master/src/main/java/com/github/dokandev/dokanjava/DokanOperations.java#L24\nhttps://github.com/dokan-dev/dokan-delphi/blob/master/Mirror.dpr#L704\nhttps://github.com/dokan-dev/dokan-dotnet/blob/master/DokanNet/DokanOperationProxy.cs#L13\nhttps://github.com/dokan-dev/dokany/wiki/API#how-to-create-your-file-systems\nPlease.\nPrivate joke: OK, l'ann\u00e9e \u00e0 l'international on glande pendant 1 an, mais ce n'est pas une excuse pour oublier ce que tu as appris pendant les piscines ! :smile: \n. About your wrapper, dokan operations should stay abstract and force the user to implement it.\nWhen the drive start correctly, it should call every endpoint of your wrapper (CreateFile, Cleanup, close,...).\nYou probably want that Dart C code forwards the operation to javascript no ? \n. filesystem debug: opening file `K:\\[HorribleSubs] Fate Stay Night - Unlimited Blade Works - 25 [720p].mkv\nfilesystem error: read error: Invalid argument\nI guess you have a read issue.\nYou should print CreateFile arguments and see the return of it.\n. Calls does not seems to be specials, are you sure of the data returned by your implementation ?\n. Still looks like a read error.\nIt can happen that some softwares ask to read a offset/size but expect to read a different size.\nThis could be the case.\nI do not think it is a dokan issue and I do not have your code, so I cannot help you more :(\n. Nop,\nMetadata are gotten by the read function.\nAs an example, when you see the preview of a picture or the icon of a exe, it is explorer.exe that open every files of the directory and extract informations with read.\n. @shlatchz \nAlso, I just noticed that when you try to customize a folder and change it from \"General items\" to \"Pictures\", explorer.exe crashes.\nDoes it happen to you guys?\nI have made a test with last Dokan/Mirror release on Win8.1 and It worked :(\nThere is a big chance that @suy is right :smiley: !\nWe probably should add good practice to the documentation to explain such case of failure.\nSuy, did you faced other case like this ?\n. Mapping at every call of ReadFile does not make it faster, it even make it slower.\nYou should map the file in CreateFile, keep it somewhere and clean it on close.\n. VLC logs should help you.\n. @bryanbabel you need to investigate on this discussion and special about how shlatchz have resolved it.\nMirror have no issue, it purpose is to stay clean and simple. We will add not advanced reading feature in it. But I agree that making a new sample for such case could be helpful.\n. Hi!\nWell found :smiley: !\nThe DOKAN_ALLOCATION_UNIT_SIZE is used for BytesPerSector of FileFsSizeInformation call. it seems to be skipped for a reason.\nThe size on disk 512 bytes that you see is probably a default value.\nProbably FileFsSectorSizeInformation is made by the OS for this information. I will make a test to see if it is called.\nhttps://github.com/dokan-dev/dokany/blob/22cf77c32594ec74e12038e9bc470e57524b8e9e/sys/volume.c#L73\nhttps://msdn.microsoft.com/en-us/library/windows/hardware/ff543443%28v=vs.85%29.aspx\n. @shlatchz On what OS are you testing ?\nIt seems that FileFsSectorSizeInformation is used only for Win8.\nhttps://github.com/Microsoft/Windows-driver-samples/blob/3528ffbb369fa0611aefd14c97bdd6ac5ee50c41/filesys/cdfs/volinfo.c#L182\nI made a test in Win7&8 and both do not care about BytesPerSector values.\n. For now, it seems that there is a issue.\nIt need more research for making it work.\n. @marinkobabic, do you think we should implement FileFsSectorSizeInformation to add sector size option ?\n. Did you rebuild encfs4win ?\nNormally we have not broke compatibility with Dokan 6.0. if you rebuild it should work.\nI will not be able to help you much more and It looks like encfs4win is unmaintained.\nIf you have the possibility to maintained it, it would be great !\n. Without rebuild it is for sure that you will have a issue :(\nBinary compatibility changed since we have moved to Visual Studio 2013.\nEncfs4win seems to be a good projet. If someone want to maintain it, I would be glad to add it to the dokan-dev ! \n. Ah that's great ! You will be able to debug it now.\nIt would be nice if you could fork encfs4win with the fix.\n. @Owyn Have you been able to make encfs4win work with dokany ?\n. So I will close this issue if you don't mind. I think it is related to encfs4win.\nIt is pretty sad that even with a good number of users, nobody is willing to maintain it.\nI hope someone will take the flag in a near future !\n. Hi @jetwhiz ,\nThis is interesting, does C mirror also get FILE.TXT when mounted to C:\\myfiles\\mountpoint ?\n. I created an issue related to it https://github.com/dokan-dev/dokany/issues/293\nI am unable to see for now if it is a dokan issue or it is the system that request such names because of the reparse point.\n. Hi,\nThats a very Great PR you have made :+1: \nI see no problem of adding the fuse header with the installer.\nDo you need all headers of dokan_fuse/include/ ?\nI will add them into \\Dokan\\DokanLibrary\\include\\fuse if you see no objection.\nI will make the changes when your PR will be merged.\n. Well done for your merged. :trophy: \nI will add includes in the next release as you asked.\n. :smile: Thank you\n. Thank you for the contribution !\nWell found ! I have never faced this issue since I never did such operation :yum: \nYou PR seems to be great but is their a reason for removing this ?\nhttps://github.com/dokan-dev/dokany/pull/39/files#diff-a8f32b6fd8169cac1606e8d8b0f497c1L184\nNow we have warning C4800: 'unsigned long' : forcing value to bool 'true' or 'false' (performance warning) during the build :cry: \n. Perfect !\nThanks for the informations :) !\n. Thank you @suy you are correct as always :smiley: \nThank again @arekbulski for your review ! Always great to have a external eyes :+1: \nAbout wiki changes, how can we manage the merge without github accepting PR ?\n. Wow amazing ! Great job ! :heart: \n. Thank you again ! :trophy: \n. This seems to be a well structured start with a lot of good ambition ! Wish you the best !\nI will follow it and do my best to help you :smiley: \n. encfs4win seems to have some issue but work #36 for now.\nIf you have the possibility to maintained it, it would be great !\nEdit: Sorry my bad, see my second answer.\n. We are using reparse point for mounting dokan driver.\nIt seems that windows does not enable indexing for reparse point.\nhttps://social.technet.microsoft.com/Forums/windowsserver/en-US/d8c9c5b1-fc38-476d-a780-e14910edcf6f/widows-search-not-working-with-data-deduplication?forum=winserverfiles\nhttps://social.technet.microsoft.com/Forums/windowsserver/en-US/91bc5fff-70fc-4939-bbdc-9267c0a41a27/2012-r2-indexing-vs-dedup?forum=winserverfiles\n. It is the base of dokan :smiley: \nBut I am open to any suggestion.\n. We are using NSIS (Nullsoft Scriptable Install System) as system to create Windows installers.\nhttp://nsis.sourceforge.net/Main_Page\nI have never faced such issue and I cannot do much about it.\nI can only redirect you to them about the bug that you describe.\nFor command line options:\nhttp://nsis.sourceforge.net/Which_command_line_parameters_can_be_used_to_configure_installers\n. @voltagex DokanUninstall.exe was never created/installed\nDid you check in $PROGRAMFILES32\\Dokan\\DokanLibrary\\ ?\nEven for 64bit the `DokanUninstall.exe is in C:\\Program Files (x86)\nSometimes the uninstaller cannot remove dokan.sys & dokannp.dll  because currently use. if you delete it you should be able to reinstall.\n. The installer propose to open the web page for downloading install the VC++ redist.\nBut I agree that including it would be better. Last time I checked, doing this was making the config file very ugly.\n. Hi @marinkobabic,\nI am currently changing NTSTATUS as plained. (https://github.com/dokan-dev/dokany/compare/NTSTATUS)\nI am facing a issue with CreateFile that it seems you faced too :smiley: \n```\nCreate 0000\nCreateDisposition 0x00000001\nCreateFile : C:\\Users\\autorun.inf\n  AccountName: Adrien, DomainName: WIN-9RM07VT4S97\n        OPEN_EXISTING\n        ShareMode = 0x7\n        FILE_SHARE_READ\n        FILE_SHARE_WRITE\n        FILE_SHARE_DELETE\n        AccessMode = 0x80\n        FILE_READ_ATTRIBUTES\n        FlagsAndAttributes = 0x0\n        error code = 2\nCreateFile status = 2\nerror openInfo is NULL\nGetFileInfo -001\nGetFileInfo : C:\\Users\\autorun.inf\n        invalid handle\nMIRROR CRASH\n```\nThis happened since in mirror I return the error from getLastError.\nhttps://github.com/dokan-dev/dokany/blob/NTSTATUS/dokan_mirror/mirror.c#L220\nerror openInfo is NULL happen here\nhttps://github.com/dokan-dev/dokany/blob/NTSTATUS/dokan/dokan.c#L487\nbecause openInfo is free here\nhttps://github.com/dokan-dev/dokany/blob/NTSTATUS/dokan/create.c#L212\nBy removing the free like you, I was surprised to have no crash.\nhttps://github.com/marinkobabic/dokanx/commit/eeb692ac28e8a648be8c3bfadeebcfd1b4325d59#diff-d7735925422d2f0b4a057d4f1ec7a0d5R261\nIt seems that dokanx have chosen to fix it in a different way...\nhttps://github.com/BenjaminKim/dokanx/blob/develop/mirrorfs/mirrorfs.cpp#L227\nBy the way, the comment say that Close is never called...but I get a Cleanup and close after GetFileInfo.\nDo you have a reason for removing this lines ? Are they important ?\nOtherwise mirror is correctly running without problem. I will run dokan-net.Test before merging it.\n. Thank you for the clear answer :+1: \nDo you think we should let the user return Win32 error and we convert it in NTSTATUS (dokan.dll)?\n. Ok ! I agree :smiley: \nI remove the free and continue the changes.\n. @marinkobabic, I finished the NTSTATUS changes. I tested it with the mirror and it seems to work good / without crash.\nI would like your review before merging it :smiley: and know if it fit your request ! (and If you have the time ofc)\nhttps://github.com/dokan-dev/dokany/compare/NTSTATUS\n. Thank @marinkobabic for your feedback and informations !\nI made the changes as you suggested !\nI will merge it in master when I finish to change dokan-net with NtStatus.\n. The todo has been split to different tickets.\n. can you try with https://github.com/dokan-dev/dokany/wiki/Use%20Mirror%20exemple ?\n. I am currently working on the .NET wrapper (Win 10) and I probably face the same issue as you.\nIt seems that the sys driver is still alive even if the application is \"break\" or stopped. The device is like a zombie and does not unmount as it should.\nIn my case, I stop DokanNetMirror during debugging/breakpoint, the Dokan drive will still hang but impossible to access and the system become unstable until crash.\n. @marinkobabic DokanOptions.KeepAlive :+1: I always forget Thank you :smile: \nI also changed DokanError to long type (since there is negative value).\n. :persevere:!\nWhy this have been done...\nBut changing this would break compatibility ...\n. About @voltagex first issue with Attach windbg to mirror.exe so it halts.\nWindbg does not only break mirror but also the service. (or in a unstable situation)\nThis make the sys driver impossible to contact the service for unmounting.\nI have to restart the service to make it work again.\n. Dokan is using a service to mount and unmount the device.\nWhen you enable DOKAN_OPTION_KEEP_ALIVE option https://github.com/dokan-dev/dokany/blob/master/dokan_mirror/mirror.c#L1126\nThe sys drive is checking if the userland software is still here X times.\nWhen it doesn't, the sys drive contact the service to force unmount.\nBut when you attach to mirror with windbg, the service become unsuable for a reason (no idea why). This make the driver unable to unmount.\nThe drive stay alive and answer to every call \"not enough resources\".\nSome software (CCleaner, cmd.exe) that try to access it, become unstable as well because they do not get a proper answer for them.\nAs @marinkobabic explained in another post, this could be fix by removing the service. See #45\n. @marinkobabic Are you testing on Win8.1 ?\nIt is impossible for me reproduce it on Win8.1. The device is pratically instantly removed.\nThe behaviour that I discribed was on my Win10. I will try on it later.\nI agree that we could give the ability to the user to set the IRP timeout and ResetTimeout.\nOtherwise, it seems that every crash reported it is for a Device Name request.\n@voltagex Could you try to build mirror.c and change dokanOperations->GetVolumeInformation = MirrorGetVolumeInformation; to dokanOperations->GetVolumeInformation = NULL; ?\nhttps://github.com/dokan-dev/dokany/blob/master/dokan_mirror/mirror.c#L1152\nAnd try to reproduce the crash.\nThis will make the driver able to answer to the Device Name request himself.\nProbably this function should never fail ?\n. @marinkobabic hahaha ! exactly ! I thought the same !\nI think it is the same answer as why NTSTATUS * -1\nIf you see no reason also, we should force the KeepAlive .\n. Done.\nWe will do both in the same time :)\nIt would be nice to fix this BSOD before beginning the TODO. Like that we will start on a \"stable\" release.\n. https://github.com/dokan-dev/dokany/pull/55\nIt has been done but no release has been made for now, we are waiting more changes to release 8.0.0.\n. @voltagex https://github.com/dokan-dev/dokany/releases/tag/v0.8.0\nThis is a pre-release, so probably unstable - We would like some feedback about it !\n. Fixed and release with #55 and the pre-release 0.8.0.\nFeel free to reopen in case you face a timeout issue.\n. This should make the work.\n(I was not able to reproduce the \"\\Dir\\\" to test).\n. Beta release added: https://github.com/dokan-dev/dokany/releases/tag/v0.8.1-beta\nIt is a quick build so I did not changed the version of the binaries.\n@Maxhy , I tested on my win10 and I have to kill explorer to see the device :(\n. My fault ! I had to clean my register. Everything work (just have to f5 on explorer to see it)\n. @Maxhy \nIssue: Same as what I faced before - Mirror is started but device is not mounted.\n1-Play with dokan: mount / unmount a couple of times with mirror.exe (mirror.exe /r C:\\Users /l m)\n->Reboot\n1-Mount with mirror.exe - mirror.exe /r C:\\Users /l m\n2>m:\n2>dir\n...work\n1- ctrl +c the mirror.exe\n2>dir\nThe system cannot find the path specified. (normal)\n1- mirror.exe /r C:\\Users /l m\n2>dir <- In the same shell as the first dir\nThe system cannot find the path specified.\nLogs of second mount after reboot: http://pastebin.com/ACMqb0uN\nI have to clean register by removing all key starting by # in HKLM/SYSTEM/MountedDevices to be able to mount again.\nThank you @viciousviper, so no changes to make to the wrapper :+1: \n. :beer: \n. This feature request is valid :+1:\nBut the Dokan team have other issues to manage for now.\nSo if someone have a great :heart: to propose a pull request.\nI would be happy to review it personally !\n. Since it is related to https://github.com/dokan-dev/dokan-dotnet/issues/16, I close it.\n. Do you have a example that can produce the behaviour you describe ?\nBecause I have made this test a lots of times. When you create an empty folder, you should have . & .. files.\n. 4a8863e022d28ae0d4875ae989b7344140fc103a\nDone.\nAs @acapola say, FindFirstFile can fail for any reason and a check should be add.\nAll other FindFirstFile in mirror.c was already protected.\n. Very very nice PR @marinkobabic TY :heart:  !\nI updated the TODO and will update the .NET wrapper as you requested for the next release :) !\n. @marinkobabic \nTimeout has been added https://github.com/dokan-dev/dokan-dotnet/blob/master/DokanNet/Native/DOKAN_OPTIONS.cs#L15\nResetTimeout was already there https://github.com/dokan-dev/dokan-dotnet/blob/master/DokanNet/Native/NativeMethods.cs#L25\n. Can you provide some logs ?\nhttps://github.com/dokan-dev/dokany/wiki/How-to-Debug-Dokan\nDoes Mirror.exe work ?\nhttps://github.com/dokan-dev/dokany/wiki/Use%20Mirror%20exemple\n. Since we have no update from you @Corillian .\n. Good to have news from you :) !!!\nThanks for the logs but for me it seems to be ok\nmy service was hung due to the inability to unmount Dokan\nYou think the thread is lock somewhere ?\nJust to be sure I understand well:\ndokanctl.exe /u M /f does make your device disapear from your computer ?\nif DokainMain does not return, it mean some thread are still running.\nDokanUnmount() returns false DokanUnmount call DokanRemoveMountPoint and DokanMountControl\nhttps://github.com/dokan-dev/dokany/blob/master/dokan/mount.c#L122\nIf you can add some logs and see where it fail and why, it would be nice !\nSorry for taking your time but you are the only personn who has repport this issue :cry: \n. Oh this part of the code has been changed not so long time ago.\nHave you seen https://github.com/dokan-dev/dokany/commit/a28a9159569e60a4be9ecd19e3214a40e9030504 and https://github.com/dokan-dev/dokany/pull/14 ?\n. @Corillian, Yes I see your point !\nI totally agree about you idea to normalizing mount paths.\n(I continue the discution in your PR)\n. Fixed with https://github.com/dokan-dev/dokany/pull/79\n. Hi @kuaaan ,\nThanks for your report ! Always good to have a code review!\nBut it seems that Fcb is well protected with ExAcquireResourceExclusiveLite.\nhttps://github.com/dokan-dev/dokany/blob/master/sys/create.c#L175\nDon't you think ?\n. Windows launch a popup asking you the admin rights :smile: \nIt is your UAC configuration that have disable it.\n. it is not a redirection.\nWindows start dokanct.exe in another shell with admin rights and close it after the run.\nIt mean dokanct.exe never was launched, even not a part in your user cmd.\n. It is a cool idea guys but there is not STDOUT  option :relaxed:\ndokanctl always write in stdout.\nThere is two possibility:\n- add an option to wait before quit getchar() or system(\"PAUSE\") (like @suy say :heart: )\n- use a very simple bat script like:\ncall dokanctl /v\npause\nI think the second option is more simple and let dokanctl more clean.\n. Hi andreyloktev,\nThanks for your report !\nDoes the second code is a fix of the two bug reported ?\n. Oh, this is really great !\nI will be glad to review your pull request ! :+1: \nIt is right that a testing software for the C code would be great! \nAnd if it is possible, I would add it to appveyor.\n. Hi @andreyloktev ,\nSorry for the long delay :cry:\nThank you for your contribution, very appreciate ! It work like a charm !\nYou changes has been merged to the master https://github.com/dokan-dev/dokany/commit/1d53d9ae44e7b95563739729959f764812870d3d\n. Hi,\nThank for the report !\nYes it seems to come from dokan.\nMount.exe will be removed in dokan 8.0.0 see https://github.com/dokan-dev/dokany/issues/50\nTherefore we will not investigate in this crash.\nSorry for the inconvenient.\n(I let the ticket open until 8.0.0 release)\n. Normally when you put a breakpoint in the .NET API, the driver should see that the userland code timeout and will try to unmount himself (it is a normal behaviour).\n(Otherwise the system will continuously try to use the device until windows get slow and probably crash).\nI can only suggest you to use debug print :disappointed:\nAbout your crash, It is an unknown issue even if we know that mounter.exe is a source of instability.\nI have not work-around that I can propose you sorry :(\n. Hi @andreyloktev ,\nThank you for the pull request !\nI will try to review it when I get free time but at first look it look really nice :+1: \n(there is the visual studio configuration debug/Win32/x64 that seems to be wrong of fsx but I can fix it)\nAbout fsx, do you know/have used some other commands ? (even a list would be nice :D)\nI will try to add them as unit test in appveyor.\n. @andreyloktev , I didn't forget you ! I just have couple of things to do and busy with the pre-release :(\nI will try to do it at least at the end of the week.\n. merged with https://github.com/dokan-dev/dokany/commit/1d53d9ae44e7b95563739729959f764812870d3d\n. This commit was in branch since some weeks now, I had one issue that I have only  been able to correct yesterday.\nyou can find some information to convert your Win32 error here:\nhttps://support.microsoft.com/en-us/kb/113996\nor here, but you should be very careful because like @marinkobabic told, there is specific case where you cannot answer what you want.\nSo this switch case should only be used as example of error conversion.\nhttps://www.eldos.com/forum/read.php?PAGEN_1=4&TID=688\n```\n    NTSTATUS\n    Error2NtStatus(\n        IN ULONG Win32ErrorCode            \n        )\n    {\n        switch(Win32ErrorCode)\n        {\n        case ERROR_SUCCESS:\n            return STATUS_SUCCESS;\n    case ERROR_ACCESS_DENIED:\n        return STATUS_ACCESS_DENIED;\n\n    case ERROR_NOACCESS:\n        return STATUS_ACCESS_VIOLATION;\n\n    case ERROR_NOT_SUPPORTED:\n        return STATUS_NOT_SUPPORTED;\n\n    case ERROR_INVALID_PARAMETER:\n        return STATUS_INVALID_PARAMETER;\n\n    case ERROR_INVALID_HANDLE:\n        return STATUS_INVALID_HANDLE;\n\n    case ERROR_NOT_LOCKED:\n        return STATUS_NOT_LOCKED;\n\n    case ERROR_NO_SYSTEM_RESOURCES:\n        return STATUS_INSUFFICIENT_RESOURCES;\n\n    case ERROR_NOT_ENOUGH_MEMORY:\n        return STATUS_NO_MEMORY;\n\n    case ERROR_MORE_DATA:\n        return STATUS_BUFFER_OVERFLOW;\n\n    case ERROR_INSUFFICIENT_BUFFER:\n        return STATUS_BUFFER_TOO_SMALL;\n\n    case ERROR_NO_MORE_FILES:\n        return STATUS_NO_MORE_FILES;\n\n    case ERROR_FILE_NOT_FOUND:    \n        return STATUS_NO_SUCH_FILE;\n\n    case ERROR_INVALID_FUNCTION:\n        return STATUS_NOT_SUPPORTED;\n\n    case ERROR_CALL_NOT_IMPLEMENTED:\n        return STATUS_NOT_IMPLEMENTED;\n\n    case ERROR_HANDLE_EOF:\n        return STATUS_END_OF_FILE;\n\n    case ERROR_INVALID_NAME:\n        return STATUS_OBJECT_NAME_INVALID;\n\n    case ERROR_DISK_FULL:\n        return STATUS_DISK_FULL;\n\n    case ERROR_DISK_CORRUPT:\n        return STATUS_DISK_CORRUPT_ERROR;\n\n    case ERROR_BAD_COMMAND:\n        return STATUS_INVALID_DEVICE_STATE;\n\n    case ERROR_FILE_EXISTS:\n        return STATUS_OBJECT_NAME_COLLISION;\n\n    case ERROR_ALREADY_EXISTS:\n        return STATUS_OBJECT_NAME_COLLISION;\n\n    case ERROR_CANNOT_MAKE:\n        return STATUS_CANNOT_MAKE;\n\n    case ERROR_PROC_NOT_FOUND:\n        return STATUS_PROCEDURE_NOT_FOUND;\n\n    case ERROR_OPERATION_ABORTED:\n        return STATUS_CANCELLED;\n\n    case ERROR_IO_DEVICE:\n    case TYPE_E_IOERROR:\n        return STATUS_IO_DEVICE_ERROR;\n\n    case ERROR_BAD_UNIT:\n        return STATUS_NO_SUCH_DEVICE; //STATUS_DEVICE_DOES_NOT_EXIST\n\n    case ERROR_BAD_ARGUMENTS:\n        return STATUS_INVALID_PARAMETER;\n\n    case ERROR_BAD_EXE_FORMAT:\n        return STATUS_INVALID_IMAGE_FORMAT;\n\n    case ERROR_WAIT_NO_CHILDREN:\n        return STATUS_NOT_FOUND;\n\n    case ERROR_RETRY:\n        return STATUS_RETRY;\n\n    case ERROR_INVALID_ADDRESS:\n        return STATUS_CONFLICTING_ADDRESSES;\n\n    case ERROR_BUSY:\n        return STATUS_DEVICE_BUSY;\n\n    case ERROR_DIRECTORY:\n        return STATUS_NOT_A_DIRECTORY;\n\n    case ERROR_TOO_MANY_OPEN_FILES:\n        return STATUS_TOO_MANY_OPENED_FILES;\n\n    case ERROR_EA_TABLE_FULL:\n        return STATUS_EA_TOO_LARGE;\n\n    case ERROR_FILE_INVALID:\n        return STATUS_FILE_INVALID;\n\n    case ERROR_CONNECTION_UNAVAIL:\n        return STATUS_CONNECTION_DISCONNECTED; //STATUS_DFS_UNAVAILABLE\n\n    case ERROR_TOO_MANY_LINKS:\n        return STATUS_TOO_MANY_LINKS;\n\n    case ERROR_BROKEN_PIPE:\n        return STATUS_PIPE_BROKEN;\n\n    case ERROR_ARITHMETIC_OVERFLOW:\n        return STATUS_INTEGER_OVERFLOW;\n\n    case ERROR_POSSIBLE_DEADLOCK:\n        return STATUS_POSSIBLE_DEADLOCK;\n\n    case ERROR_BUFFER_OVERFLOW:\n        return STATUS_NAME_TOO_LONG;\n\n    case ERROR_TOO_MANY_SEMAPHORES:\n        return STATUS_INSUFFICIENT_RESOURCES;\n\n    case ERROR_DIR_NOT_EMPTY:\n        return STATUS_DIRECTORY_NOT_EMPTY;\n\n    case ERROR_PATH_NOT_FOUND:\n        return STATUS_OBJECT_PATH_NOT_FOUND;\n\n    case ERROR_ARENA_TRASHED:\n        return STATUS_DISK_CORRUPT_ERROR;\n\n    case ERROR_INVALID_BLOCK:\n        return STATUS_INVALID_ADDRESS;\n\n    case ERROR_BAD_ENVIRONMENT:\n        return STATUS_VARIABLE_NOT_FOUND;\n\n    case ERROR_SHARING_VIOLATION:\n        return STATUS_SHARING_VIOLATION;\n\n    case ERROR_FILENAME_EXCED_RANGE:\n        return STATUS_NAME_TOO_LONG;\n\n    case ERROR_NOT_READY:\n        return STATUS_DEVICE_NOT_READY; //or STATUS_NO_MEDIA_IN_DEVICE, STATUS_VOLUME_DISMOUNTED\n\n    case ERROR_FILE_OFFLINE:\n        return STATUS_FILE_IS_OFFLINE;\n\n    case ERROR_REMOTE_STORAGE_NOT_ACTIVE:\n        return STATUS_REMOTE_STORAGE_NOT_ACTIVE;\n\n    //\n    // Winsock errors\n    //\n\n    case WSAEINTR:\n        return STATUS_CANCELLED;\n\n    case WSAEBADF:\n        return STATUS_INVALID_HANDLE;\n\n    case WSATRY_AGAIN:\n        return STATUS_RETRY;\n\n    default:\n        return STATUS_UNSUCCESSFUL;\n    }\n}\n\n```\n. @rustyx Without using NTSTATUS error, dokan would not be able to answer correctly to the kernel windows (Kernel Windows does not use Win32 error). Before dokan was answering the same dummy ntstatus error whatever the user was returning a GetLastError(). Now the mirror sample is much more stable and answer correctly to all request.\nWith the mirror sample and microsoft documentation of this pagen there is no difficulty to make the changes.\nIf you was using win32_error_to_errno (replaced by ntstatus_error_to_errno) you was anyway already using a switch/case -> https://github.com/dokan-dev/dokany/blob/15343707589097d1b6941946506a5b9dac5d4eda/dokan_fuse/src/utils.cpp#L265-L312\nthat I updated.\nThere is not changes for you if you was already using the wrapper fuse.\n. Helper DokanNtStatusFromWin32 has been added in Dokan Library and can be used to translate Win32 Error code to the NtStatus code's corresponding\n. Hello Bruce Wayne,\nI take a look.\n. I have updated the pre-release with https://github.com/dokan-dev/dokany/commit/1f94c875bc90c339b1f7bb2e57dcbac514e0a6bc\nCan you make a test ?\n. Yes I seen with your request :(\nI tried to add additional include folders in the project to have only #include \"dokan.h\" but it seems to has not effects.\nCan you try on your side ?\n. I tried to set the include path in the project settings but stil wasn't able to build. Have no time to make more test for now :(\nThank for your PR ! Always glad to see people contributing :)\n. Done in https://github.com/dokan-dev/dokany/releases/tag/v0.8.0-RC1\nBut we should probably move the project to a solution.\n. It is a NSIS (http://nsis.sourceforge.net/Main_Page) issue. I dont know if they have a option to delete file after reboot.\n. Ah! this could make it !\nIt would be nice if you could PR this change :D !\n. Done :+1: \nNext pre-release will have it.\n. Thank you and well found :) !\nI never seen dokan.dll lock for now so would not need for now.\n. :+1: \n. Good :D ?\n. I wanted to know if you have any other typo to fix.\n. Oh ok :D !\n. You are right, files are only delete in cleanup when open with deleteonclose flag.\nAbout read only, if you change right access when MirrorGetFileInformation is requested. It should make the work.\n. Thanks !\nI will test it in the next days :)\nEdit: I will make a release for you today\n. Sorry but I wasn't able to make it work :cry: \n`\n\nmirror.exe /d /s /o /r C:\\Users /l m\n...\nWriteFile : C:\\Users\\liryna\\Desktop\\New Text Document.txt, offset 0, length 17\n        write 17, offset 0`\n\nIs there something I made wrong ?\n. @marinkobabic, I was able to write in a file from the dokan device with the read only option.\nI didn't look more after.\nI think the Step 2 you describe is not implemented here.\n. I would be glad to review your PR @canardos :) !\n. I close since https://github.com/dokan-dev/dokany/pull/105 has been merged.\n. :+1:\n. Thank you !\nDId you faced an issue with MirrorFindFiles ?\nEven if the changes are simple in dokan_fuse, did you test it ? (I have no projet with fuse :( )\nAbout https://github.com/dokan-dev/dokany/blob/217f3163bdb28ee8928fc02c359939a4dad347e8/dokan_fuse/src/docanfuse.cpp#L462\nDokanMain does not free it, so there is probably a leak here :dancer: \nAs you can see dokan_fuse has no maintainer :( the projet was only imported here because abandonned.\nSo if someone is ready to maintain it :+1: !!!\n. After review, it seems to be safe changes even without test.\nThanks as usual :smiley: \n. Thank you, what is the name of your vs extension ?\n. See release changelog: New installer embed VC++ redistributable - DokanInstall_X.X.X_redist.exe\nIf vcredist are not installed and you are using the installer without vcredist embedded, the install will fail like this.\n. Could you run the mirror first https://github.com/dokan-dev/dokany/wiki/Use%20Mirror%20exemple\nJust to see if it come from DokanNet or not.\n. Can you test the mirror in dokannet ?\nI have to say that I didnt run RegistoryFS since 0.8.0 :(\nOr did you run it in admin ?\n. Ok, are you able to debug RegistoryFS  and have some information about the error ?\n. Or can you rebuild RegistoryFS and replace NtStatus.Error by NtStatus.AccessDenied ?\n. Fixed with https://github.com/dokan-dev/dokan-dotnet/commit/463bf08dc4ebf396854b8cdbf2a4d4de4ee85e19\n. Hi,\nThanks for the feed back :+1: !!!\nAbout your issue, normaly \"Uninstall\\DokanLibrary\" should be removed by NSIS :(\nhttps://github.com/dokan-dev/dokany/blob/master/dokan_install/install.nsi#L270\nEdit: Same behaviour on my computer\n. I made a test and worked properly.\nNext release will fix it :)\n. Yes it seems but during DeleteRegKey HKLM, I think NSIS was targeting the wrong HKLM folder (probably the x86).\nI am pretty sure this issue does not happen in 32bit.\n. Thanks for this PR :heart: and taking the time in your issue :D !\nTo finish to normalizing mount paths, don't you think we should also change the mount function to force the M:\\ ?\nhttps://github.com/Corillian/dokany/blob/InvestigateHang/dokan_mount/mount.c#L263\nAnd also fix the mirror :smile: https://github.com/Corillian/dokany/blob/InvestigateHang/dokan_mirror/mirror.c#L51\n. Thank you @Corillian and for taking the time !\nI will try to take a look this weekend :)\n. Perfectly working on my side after test !\nThank a lot @Corillian for your contributions in the dokan project !\nNormalizing the mount point will help a lot the dev & users of dokan !\n. Sorry, I have overridden them :cry:\nWe should create another installer for the pdb.\n. Yes, that why I propose to create another NSIS installer :D\nIf someone could do it, it would help me !\n. Done with https://github.com/dokan-dev/dokany/commit/fc600988ae7b2945cdcfb032a299804058dee671\nThe next pre-release:\nhttps://github.com/dokan-dev/dokany/releases/tag/v0.8.0-RC1\nDoes this fit the request ?\n. Indeed @marinkobabic, I made some other tests.\nif the device is really unmount, STATUS_DEVICE_DOES_NOT_EXIST is returned by DeviceIoControl.\nBUT I found the device does not unmount properly in a specific case that can be easily reproduce.\nIf you launch the mirror.exe with DOKAN_OPTION_NETWORK:\nmirror.exe /d /s /n /r C:\\Users /l m\nand in another shell you run:\ndokanctl.exe /u m\nThe device will be unmount but not totally. DeviceIoControl will be able to connect to the device event when it is unmount.\nIt mean that there is a issue with the unmount of a DOKAN_OPTION_NETWORK.\n```\n\nmirror.exe /d /s /n /r C:\\Users /l m\n...\nIoctl failed for wait with code 1450. //STATUS_INSUFFICIENT_RESOURCES\nProcessing will continue\nIoctl failed for wait with code 1450. //STATUS_INSUFFICIENT_RESOURCES\nProcessing will continue\n```\n\n```\n\ndokanctl.exe /u m\nUnmount status = 0\n```\n. I have not changed the code for now. I try to understand what is happening.\nIt is still https://github.com/dokan-dev/dokany/blob/master/sys/event.c#L119 that return STATUS_INSUFFICIENT_RESOURCES.\n\nHere is some fresh logs:\n[DokanFS]   status = STATUS_SUCCESS\n[DokanFS] ==> DokanDispatchIoControl\n[DokanFS]   ProcessId 5428\n[DokanFS]    => DokanGlobalDeviceControl\n[DokanFS] DokanRegisterPendingIrpForService\n[DokanFS] ==> DokanRegisterPendingIrpMain\n[DokanFS] <== DokanRegisterPendingIrpMain\n[DokanFS]    <= DokanGlobalDeviceControl\n[DokanFS] <== DokanDispatchIoControl\n[DokanFS] => NotificationLoop\n[DokanFS] <= NotificationLoop\n[DokanFS] ==> DokanCreate\n[DokanFS]   ProcessId 5020\n[DokanFS]   FileName:(null)\n[DokanFS]    IdType = VCB\n[DokanFS]   IrpSp->Flags = 0\n[DokanFS]    request for FS device\n[DokanFS]   status = STATUS_SUCCESS\n[DokanFS] <== DokanCreate\n[DokanFS] ==> DokanDispatchIoControl\n[DokanFS]   ProcessId 5020\n[DokanFS]   IOCTL_EVENT_RELEASE\n[DokanFS]   status = STATUS_SUCCESS\n[DokanFS]   status = STATUS_SUCCESS\n[DokanFS]   status = STATUS_SUCCESS\n[DokanFS]   status = STATUS_SUCCESS\n[DokanFS]   status = STATUS_SUCCESS\n[DokanFS] ==> DokanStopCheckThread\n[DokanFS] ==> DokanStopCheckThreadInternal\n[DokanFS] <== DokanStopCheckThread\n[DokanFS] ==> DokanStopEventNotificationThread\n[DokanFS] ==> DokanStopEventNotificationThreadInternal\n[DokanFS] <== DokanStopEventNotificationThread\n[DokanFS] ==> DokanClose\n[DokanFS]   ProcessId 5020\n[DokanFS]   FileName: (null) FCB.FileName: (null)\n[DokanFS]    IdType = DCB\n[DokanFS]    ccb is NULL\n[DokanFS]   status = STATUS_SUCCESS\n[DokanFS] <== DokanClose\n[DokanFS]   Delete Symbolic Name: \\DosDevices\\Global\\DokanRedirector{d6cc17c5-1722-4085-bce7-964f1e9f5de9}\n[DokanFS]   FCB allocated: 17\n[DokanFS]   FCB     freed: 17\n[DokanFS]   CCB allocated: 25\n[DokanFS]   CCB     freed: 25\n[DokanFS]   Delete DeviceObject\n[DokanFS]   Delete Disk DeviceObject\n[DokanFS]   status = STATUS_SUCCESS\n[DokanFS]   status = STATUS_SUCCESS\n[DokanFS] <== DokanDispatchIoControl\n[DokanFS] ==> DokanCleanup\n[DokanFS]   ProcessId 5020\n[DokanFS]   FileName: (null) FCB.FileName: (null)\n[DokanFS]    IdType = DCB\n[DokanFS]    ccb is NULL\n[DokanFS]   status = STATUS_SUCCESS\n[DokanFS] <== DokanCleanup\n[DokanFS] ==> DokanClose\n[DokanFS]   ProcessId 5020\n[DokanFS]   FileName: (null) FCB.FileName: (null)\n[DokanFS]    IdType = DCB\n[DokanFS]    ccb is NULL\n[DokanFS]   status = STATUS_SUCCESS\n[DokanFS] <== DokanClose\n[DokanFS]   DokanTimeoutThread catched KillEvent\n[DokanFS] <== DokanTimeoutThread\n[DokanFS] <== DokanStopCheckThreadInternal\n[DokanFS] <== NotificationThread\n[DokanFS] <== DokanStopEventNotificationThreadInternal\n[DokanFS] ==> DokanRegisterPendingIrpMain\n[DokanFS]  device is not mounted\n[DokanFS]   status = STATUS_INSUFFICIENT_RESOURCES\n[DokanFS] ==> DokanRegisterPendingIrpMain\n[DokanFS]  device is not mounted\n[DokanFS]   status = STATUS_INSUFFICIENT_RESOURCES\n[DokanFS] ==> DokanRegisterPendingIrpMain\n[DokanFS]  device is not mounted\n[DokanFS]   status = STATUS_INSUFFICIENT_RESOURCES\n[DokanFS] ==> DokanRegisterPendingIrpMain\n[DokanFS]  device is not mounted\n[DokanFS]   status = STATUS_INSUFFICIENT_RESOURCES\n[DokanFS] ==> DokanRegisterPendingIrpMain\n[DokanFS]  device is not mounted\n[DokanFS]   status = STATUS_INSUFFICIENT_RESOURCES\n[DokanFS] ==> DokanRegisterPendingIrpMain\n[DokanFS]  device is not mounted\n[DokanFS]   status = STATUS_INSUFFICIENT_RESOURCES\n[DokanFS] ==> DokanRegisterPendingIrpMain\n[DokanFS]  device is not mounted\n[DokanFS]   status = STATUS_INSUFFICIENT_RESOURCES\n[DokanFS] ==> DokanRegisterPendingIrpMain\n[DokanFS]  device is not mounted\n[DokanFS]   status = STATUS_INSUFFICIENT_RESOURCES\n[DokanFS] ==> DokanRegisterPendingIrpMain\n[DokanFS]  device is not mounted\n[DokanFS]   status = STATUS_INSUFFICIENT_RESOURCES\n[DokanFS] ==> DokanRegisterPendingIrpMain\n[DokanFS]  device is not mounted\n[DokanFS]   status = STATUS_INSUFFICIENT_RESOURCES\n[DokanFS] ==> DokanRegisterPendingIrpMain\n[DokanFS]  device is not mounted\n[DokanFS]   status = STATUS_INSUFFICIENT_RESOURCES\n[DokanFS] ==> DokanRegisterPendingIrpMain\n[DokanFS]  device is not mounted\n[DokanFS]   status = STATUS_INSUFFICIENT_RESOURCES\n[DokanFS] ==> DokanRegisterPendingIrpMain\n[DokanFS]  device is not mounted\n[DokanFS]   status = STATUS_INSUFFICIENT_RESOURCES\n[DokanFS] ==> DokanRegisterPendingIrpMain\n[DokanFS]  device is not mounted\n[DokanFS]   status = STATUS_INSUFFICIENT_RESOURCES\n[DokanFS] ==> DokanRegisterPendingIrpMain\n[DokanFS]  device is not mounted\n[DokanFS]   status = STATUS_INSUFFICIENT_RESOURCES\n[DokanFS] ==> DokanRegisterPendingIrpMain\n[DokanFS]  device is not mounted\n[DokanFS]   status = STATUS_INSUFFICIENT_RESOURCES\n[DokanFS] ==> DokanRegisterPendingIrpMain\n[DokanFS]  device is not mounted\n[DokanFS]   status = STATUS_INSUFFICIENT_RESOURCES\n[DokanFS] ==> DokanRegisterPendingIrpMain\n[DokanFS]  device is not mounted\n[DokanFS]   status = STATUS_INSUFFICIENT_RESOURCES\n[DokanFS] ==> DokanRegisterPendingIrpMain\n[DokanFS]  device is not mounted\n[DokanFS]   status = STATUS_INSUFFICIENT_RESOURCES\n[DokanFS] ==> DokanRegisterPendingIrpMain\n[DokanFS]  device is not mounted\n[DokanFS]   status = STATUS_INSUFFICIENT_RESOURCES\n[DokanFS] ==> DokanRegisterPendingIrpMain\n[DokanFS]  device is not mounted\n[DokanFS]   status = STATUS_INSUFFICIENT_RESOURCES\n[DokanFS] ==> DokanRegisterPendingIrpMain\n[DokanFS]  device is not mounted\n[DokanFS]   status = STATUS_INSUFFICIENT_RESOURCES\n[DokanFS] ==> DokanRegisterPendingIrpMain\n[DokanFS]  device is not mounted\n[DokanFS]   status = STATUS_INSUFFICIENT_RESOURCES\n[DokanFS] ==> DokanRegisterPendingIrpMain\n[DokanFS]  device is not mounted\n[DokanFS]   status = STATUS_INSUFFICIENT_RESOURCES\n[DokanFS] ==> DokanRegisterPendingIrpMain\n[DokanFS]  device is not mounted\n[DokanFS]   status = STATUS_INSUFFICIENT_RESOURCES\n[DokanFS] ==> DokanRegisterPendingIrpMain\n[DokanFS]  device is not mounted\n[DokanFS]   status = STATUS_INSUFFICIENT_RESOURCES\n[DokanFS] ==> DokanRegisterPendingIrpMain\n[DokanFS]  device is not mounted\n[DokanFS]   status = STATUS_INSUFFICIENT_RESOURCES\n[DokanFS] ==> DokanRegisterPendingIrpMain\n[DokanFS]  device is not mounted\n[DokanFS]   status = STATUS_INSUFFICIENT_RESOURCES\n[DokanFS] ==> DokanRegisterPendingIrpMain\n[DokanFS]  device is not mounted\n[DokanFS]   status = STATUS_INSUFFICIENT_RESOURCES\n[DokanFS] ==> DokanRegisterPendingIrpMain\n[DokanFS]  device is not mounted\n[DokanFS]   status = STATUS_INSUFFICIENT_RESOURCES\n[DokanFS] ==> DokanRegisterPendingIrpMain\n[DokanFS]  device is not mounted\n[DokanFS]   status = STATUS_INSUFFICIENT_RESOURCES\n[DokanFS] ==> DokanRegisterPendingIrpMain\n[DokanFS]  device is not mounted\n[DokanFS]   status = STATUS_INSUFFICIENT_RESOURCES\n[DokanFS] ==> DokanRegisterPendingIrpMain\n[DokanFS]  device is not mounted\n[DokanFS]   status = STATUS_INSUFFICIENT_RESOURCES\n[DokanFS] ==> DokanRegisterPendingIrpMain\n[DokanFS]  device is not mounted\n[DokanFS]   status = STATUS_INSUFFICIENT_RESOURCES\n[DokanFS] ==> DokanRegisterPendingIrpMain\n[DokanFS]  device is not mounted\n[DokanFS]   status = STATUS_INSUFFICIENT_RESOURCES\n**FLOOD OF STATUS_INSUFFICIENT_RESOURCES ***\nLogs after I force exit the userland code:\n[DokanFS] ==> DokanDispatchIoControl\n[DokanFS]   ProcessId 5428\n[DokanFS]    => DokanGlobalDeviceControl\n[DokanFS] DokanRegisterPendingIrpForService\n[DokanFS] ==> DokanRegisterPendingIrpMain\n[DokanFS] <== DokanRegisterPendingIrpMain\n[DokanFS]    <= DokanGlobalDeviceControl\n[DokanFS] <== DokanDispatchIoControl\n[DokanFS] ==> DokanCleanup\n[DokanFS]   ProcessId 5144\n[DokanFS]   FileName: (null) FCB.FileName: (null)\n[DokanFS]   status = STATUS_SUCCESS\n[DokanFS] <== DokanCleanup\n[DokanFS] ==> DokanClose\n[DokanFS]   ProcessId 5144\n[DokanFS]   FileName: (null) FCB.FileName: (null)\n[DokanFS]   status = STATUS_SUCCESS\n[DokanFS] <== DokanClose\n[DokanFS] ==> DokanCleanup\n[DokanFS]   ProcessId 5144\n[DokanFS]   FileName: (null) FCB.FileName: (null)\n[DokanFS]    IdType = DCB\n[DokanFS]    ccb is NULL\n[DokanFS]   status = STATUS_SUCCESS\n[DokanFS] <== DokanCleanup\n[DokanFS] ==> DokanClose\n[DokanFS]   ProcessId 5144\n[DokanFS]   FileName: (null) FCB.FileName: (null)\n[DokanFS]    IdType = DCB\n[DokanFS]    ccb is NULL\n[DokanFS]   status = STATUS_SUCCESS\n[DokanFS] <== DokanClose\n[DokanFS] ==> DokanCleanup\n[DokanFS]   ProcessId 5144\n[DokanFS]   FileName: (null) FCB.FileName: (null)\n[DokanFS]    IdType = DCB\n[DokanFS]    ccb is NULL\n[DokanFS]   status = STATUS_SUCCESS\n[DokanFS] <== DokanCleanup\n[DokanFS] ==> DokanClose\n[DokanFS]   ProcessId 5144\n[DokanFS]   FileName: (null) FCB.FileName: (null)\n[DokanFS]    IdType = DCB\n[DokanFS]    ccb is NULL\n[DokanFS]   status = STATUS_SUCCESS\n[DokanFS] <== DokanClose\n[DokanFS] ==> DokanCleanup\n[DokanFS]   ProcessId 5144\n[DokanFS]   FileName: (null) FCB.FileName: (null)\n[DokanFS]    IdType = DCB\n[DokanFS]    ccb is NULL\n[DokanFS]   status = STATUS_SUCCESS\n[DokanFS] <== DokanCleanup\n[DokanFS] ==> DokanClose\n[DokanFS]   ProcessId 5144\n[DokanFS]   FileName: (null) FCB.FileName: (null)\n[DokanFS]    IdType = DCB\n[DokanFS]    ccb is NULL\n[DokanFS]   status = STATUS_SUCCESS\n[DokanFS] <== DokanClose\n[DokanFS] ==> DokanCleanup\n[DokanFS]   ProcessId 5144\n[DokanFS]   FileName: (null) FCB.FileName: (null)\n[DokanFS]    IdType = DCB\n[DokanFS]    ccb is NULL\n[DokanFS]   status = STATUS_SUCCESS\n[DokanFS] <== DokanCleanup\n[DokanFS] ==> DokanClose\n[DokanFS]   ProcessId 5144\n[DokanFS]   FileName: (null) FCB.FileName: (null)\n[DokanFS]    IdType = DCB\n[DokanFS]    ccb is NULL\n[DokanFS]   status = STATUS_SUCCESS\n[DokanFS] <== DokanClose\n[DokanFS] ==> DokanCleanup\n[DokanFS]   ProcessId 5144\n[DokanFS]   FileName: (null) FCB.FileName: (null)\n[DokanFS]    IdType = DCB\n[DokanFS]    ccb is NULL\n[DokanFS]   status = STATUS_SUCCESS\n[DokanFS] <== DokanCleanup\n[DokanFS] ==> DokanClose\n[DokanFS]   ProcessId 5144\n[DokanFS]   FileName: (null) FCB.FileName: (null)\n[DokanFS]    IdType = DCB\n[DokanFS]    ccb is NULL\n[DokanFS]   status = STATUS_SUCCESS\n[DokanFS] <== DokanClose\n[DokanFS] ==> DokanCleanup\n[DokanFS]   ProcessId 5144\n[DokanFS]   FileName: (null) FCB.FileName: (null)\n[DokanFS]    IdType = DCB\n[DokanFS]    ccb is NULL\n[DokanFS]   status = STATUS_SUCCESS\n[DokanFS] <== DokanCleanup\n[DokanFS] ==> DokanClose\n[DokanFS]   ProcessId 5144\n[DokanFS]   FileName: (null) FCB.FileName: (null)\n[DokanFS]    IdType = DCB\n[DokanFS]    ccb is NULL\n[DokanFS]   status = STATUS_SUCCESS\n[DokanFS] <== DokanClose\n**NOTHING MORE***\n. I guess so :smiley: \nBut is it normal that the device in kernel side still answer ?\n(I dont really know this part for now)\n. Ok :+1: \nThanks to make it more clear. I still do not know much about this part of dokan :(\n. Hi,\nCan you provide the output of dokanctl.exe /i a ?\nEdit: it seems that installer is broke :+1: there is so missing files\n. Should be fix with ed5ab8ceb7ed66ae465e34e88e4c7265f3eb2e8c\nI will make a release tomorrow\n. New release with the fix: https://github.com/dokan-dev/dokany/releases/tag/v0.8.0-RC2\nCould you take a look and tell me if your issue is fixed :) ?\n. If too much informations are lost in the current CreateFile(), I see no problem to break the compatibility.\nI would even accept to put it in the 0.8.0 since it already break the compatibility and still a pre-release.\n. Hello @Corillian & @billziss-gh,\nYou have both proposed a pull request for the same purpose but in different implementation.\nbillziss-gh seems to be the same as Corillian but without the lpSecurityAttributes that he have prefer to keep empty.\nTo quote billziss-gh\n```\nI have reviewed this patch and have found that it presents a rather complex interface to the file system implementor (DOKAN_IO_SECURITY_CONTEXT).\nThe documentation has this to say about lpSecurityAttributes:\nThe lpSecurityDescriptor member of the structure specifies a SECURITY_DESCRIPTOR for\na file or device. If this member is NULL, the file or device associated with the returned\nhandle is assigned a default security descriptor.\nCreateFile ignores the lpSecurityDescriptor member when opening an existing file or device.\n\nSo when creating a new file it is possible to attach a security descriptor to it. This capability does not seem to exist in Dokan currently. This is why I added the Reserved security descriptor parameter, so that we can pass it at a later time from the driver.\n```\nI agree that DOKAN_IO_SECURITY_CONTEXT is complex but, if we keep it, will it be usefull in the futur ? or  would we need to rewrite it anyway ?\nAnd also bill has not override the CreateFile, but propose a CreateFileEx, that's really something I like !\nCorillian has created DokanMapKernelToUserCreateFileFlags that I would like to keep in any case to help the dev.\nI am saying this because you have made both a great work and you have both good ideas. It would be great if you could both work together to have one proposition.\n. Thank you @billziss-gh, @Corillian & @xgid for all your inputs !\nSuch talks are very important for being able to make the right moves.\nSo I think we all agree that:\n- Since 0.8.0 already break compatibility with NtStatus and some flags removed. We can afford to continue the changes since 0.8.0 is in pre-release for now.\n  If we replace/rewrite a DokanOperation, it have to keep the same complexity.\n  If the new DokanOperation is too different and complex, it need to be separated and optional.\n- @Corillian (with the helpers) & @billziss-gh have the same level of complexity. From what we see in both PR, mirror.c has not really moved so anybody can easily make the migration.\n  But we probably should (like @Corillian said at first :yum: ) rename CreateFile to ZwCreateFile for not missleading the dev and inform guide him to the correct msdn documentations.\n- @Corillian implementation is more advanced since he have already begin to manage security context.\n  But I agree with @billziss-gh, I think a lots of users will not care about security context so it have to be optional to manage it some how.\n- Since we add the security context parameter, it have to be implemented right now to prevent to make changes in the futur.\n- We should right now merge CreateFile, CreateDirectory, OpenDirectory to the single fonction ZwCreateFile. Does everyone agree with it ?\nIf what I wrote is ok for everyone:\n@Corillian , Could you rename CreateFile to ZwCreateFile ?\nAlso, do you think you can implement IO_SECURITY_CONTEXT totally  ? (and give a simple exemple of test :smiley: )\n@billziss-gh , does winfstest have already a stable release ? I really would like to add it to Appveyor CI !\n. @billziss-gh , I consider everything proposition. Removing CreateDirectory & OpenDirectory is one of your.\nCould you create different issues for the different points that you have talk in your last post ?\nI just would like to finish the CreateFile talk first.\nBut quickly: I am totally open to discuss about NtStatus. I agree that NtStatus is a big mess for now in dispatchcreate and it need to be changed. It is such part of the code that hard to change without breaking everything. But now that there is winfstest, we can rewrite this part from 0 and test it !\n(About Standardize code format, I seen your message and I will do it after this PR also)\nAbout ZwCreateFile name, it is right that it is not going to be exactly ZwCreateFile but since NtCreateFile documentation say : This function is the user-mode equivalent to the ZwCreateFile and we keep the same name of some parameters. The dev will be able to understand from msdn what is the purpose of them :smiley:  no ?\nI also think eventInfo should not be dynamically allocated. And I am sure there is a lot of such in all dokan :cry: \nAbout winfstest, it is a great news!  Appveyor have normally python installed. So I will add it in the futur.\nAbout ShareAccess, @Corillian , I also think that it have to be optional when it gonna be made.\n@billziss-gh , does every of you ShareAccess test fail with the mirror ? do you think the mirror could be fix without big changes ? (I prefer to keep it simple)\n. @billziss-gh Thank for the feed back !\nCould you just create a issue for each issue you see ? (you NTSTATUS implementation, DeleteFile, the lucky mirror with ShareAccess and add winfstest to appveyor)\nI will look into them one by one :smile: \n. #91 has been merged\n. Thank you !\nThis is perfectly working !\nAlways glad to see such contribution and special when it is about helping dokan stability and safety ! \n. For me, this is totally not related to dokan :o\nIt seems that it come from a lock in the tcp.\nIf you can reproduce this issue by using dokan, reopen the ticket and we will look into it.\n. I have revert to https://github.com/dokan-dev/dokany/commit/8989997fcbef13b5aeadd38cacfb495739449fc2 and I have the same behaviour.\nProbably Win10 have another behaviour ?\n. Hi @x1596357 , Dokan Fuse is a wrapper library that makes Dokan compatible with FUSE API. The goal is to give the possbility to use your LINUX fuse application without changes. So Yes, it is designed to be compatible with Linux FUSE. I am not a user of the FUSE API personnaly but I know that there is already a couple of wrapper (like here in javascript : https://github.com/mafintosh/fuse-bindings) that propose to use dokan as windows alternative, so it means that dokan fuse implementation is working (fully or partially, I cannot say). There is no main maintainer currently for this part of the code. So if you are sure that there is an issue with struct FUSE_STAT, please provide a pull request.\n. dokanfuse.lib is a static library and already installed in \"Dokan\\DokanLibrary\\lib\"\n. Oh, right! yes it could be interesting !\nIf you could make a PR for it, it would be nice :)\n. Hi @x1596357 ,\nThanks alot for the contribution !\nEverything seems to be alright :+1:\nI just wanted to ask of you could change the place of st_blksize and st_blocks for having the same memory struct than the linux struct stat ?\nBy the way, I will change dokan fuse to become a dynamic library as you asked.\n. Oh ok ! Well yes, as you made it seems to be the best choice :)\nCould you add this build directive to the dokan fuse wiki https://github.com/dokan-dev/dokany/wiki/FUSE ?\nDokan fuse has been changed to dynamic library: https://github.com/dokan-dev/dokany/commit/4953160a92fc7eba1a51ceab3012278ab6768eab\nSince I do not use it, could you tell me if it is enough or do we have to add some export ?\n. Perfect ! Thanks a lot ! :heart: \n. Hi @c-klapaucius ,\nI understand the issue with this flags and the ability to create read-only files.\nSince I am not a user of dokan fuse, could you provide a pull request with the appropriate changes tested ?\n. Fixed with https://github.com/dokan-dev/dokany/pull/90\n. Thank you @c-klapaucius for you contribution !\nIf you seen any changes that should be done in dokan fuse, I would be happy to review it !\nDo you have other example as \"hello\" FUSE that could help to know the stat of dokan fuse ?\n. Hi @Corillian ,\nThanks for the contribution.\nI am testing it in my Win8.1 with mirror.c and I am unable to save a .txt file.\nI get the error: \"The parameter is incorrect\"\nIs it stable in your environment ?\n. Hi @Corillian ,\nDoes this last commit fix the issue ?\nJust poke me when I can test it :yum:\nOtherwise I just seen also that you have add \"options\" param. That's really great ! It will fix a request from the dokan group:\nhttps://groups.google.com/forum/#!topic/dokan/Phwd15PMXOw\n. Yes, it seems to be better ! Thank you !\nMirror was perfectly working for me.\nI just would like to test with the .net test project before merging it but I have to update the wrapper in the same times :D\n. Hi @Corillian ,\nAfter review, it is right that this pull request give more informations to the dev during createfile but it give more complexity to use dokan.\nWe have to keep in mind that a normal dokan dev should need noknowledge in kernel to use it.\nWhat I mean, it is that in mirror.c,\nThe dev should not need to convert flags like here:\nhttps://github.com/dokan-dev/dokany/pull/91/files#diff-210b81c018cd0036b1a9abb162fb97b9R154\nor\nhttps://github.com/dokan-dev/dokany/pull/91/files#diff-210b81c018cd0036b1a9abb162fb97b9R244\nI agree that such informations can be usefull for advanced dev but probably we should make this convertion in kernel side ?\nAlso, this convertion make the implementation of wrapper (C#, java,...) more complex.\n. Is it not possible to have directly FileAttributes filled by MirrorMapBit ?\nAbout CreateDisposition should we not directly convert it to CREATE_NEW,...? Is there was case where knowing CreateDisposition == FILE_CREATE is usefull ? (I ask because I do not have all the vision/knowledge of it)\nIt just seems for me that everyuser will have to make this \"translate\" no ?\n. Yes, @Corillian I agree with you!\nWe should propose a helper in dokan.dll that retrieve a variable fully populated with the user land flags that have \"kernel friend\" (like FILE_FLAG_WRITE_THROUGH == FILE_WRITE_THROUGH).\nand another one for FILE_CREATE == CREATE_NEW.\nCould you just add it in your PR :cry: \nSorry, last time I bother you ! I promise !\nThanks again for your precise answers and the great work !\n. Thank you @Corillian !\nI will try to review it quickly :heart:\n. it work perfectly with the test I made :) Thank you @Corillian !\nI will change the c# wrapper and run our test.\nDo you have an exemple for testing the security context ?\n. Hi @Corillian ,\nIt seems that there is a dead code here: https://github.com/dokan-dev/dokany/pull/91/files#diff-210b81c018cd0036b1a9abb162fb97b9R333\nThe status can only be equal to SUCCESS in this part of the code. What can of parameters did you wanted to check ? \"Invalid directory ZwCreateFile parameters\"\n. This part https://github.com/dokan-dev/dokany/blob/master/dokan_mirror/mirror.c#L333\n. My link has moved with last commits :(\nStatus is equal to STATUS_SUCCESS here\nhttps://github.com/dokan-dev/dokany/blob/master/dokan_mirror/mirror.c#L207\nso\nhttps://github.com/dokan-dev/dokany/blob/master/dokan_mirror/mirror.c#L320\nIs impossible since status is never changed before\n. it is the code before CreateDirectory():\n// It is a create directory request\n    if (status != STATUS_SUCCESS) { //status is initialized line 207 with the value STATUS_SUCCESS\n                                    // so this condition is impossible \n      DbgPrint(L\"\\tInvalid directory ZwCreateFile parameters.\\n\\n\");\n      return status;\n    }\n. Oh :cry: so i remove it ? \n. The release with the possible fix: https://github.com/dokan-dev/dokany/releases/tag/v1.0.0-BETA1\n. Hi @Niko-O,\nCan you try the WDK10-VS2015 branch ? I am personnally using it with my vs2015.\nIt is made to use the wdk 10 and vs2015. (this branch is not always updated so merge the master in it to get the update)\n. Sorry @Niko-O I never used GitHub Desktop.\nBut for the command lines:\ncd dokany\ngit checkout -b WDK10-VS2015 //move to WDK10-VS2015\ngit pull master //pull master into your WDK10-VS2015 branch\n. and git pull origin master?\n. @Niko-O , I have updated the WDK10-VS2015 with the master for you.\nUpdate your repository and use directly the WDK10-VS2015 branch.\n. Great :+1: \n. @Niko-O , I moved the master to VS 2018 :)\n. Fixed in RC2 https://github.com/dokan-dev/dokany/issues/78\n. Thank you :smile: \n. Nice to see you here Bill :) Thanks for the PR \nI have not found the time to test but at first look:\nIt seems that your implementations jump all NtStatus checker:\nhttps://github.com/billziss-gh/dokany/blob/CreateFileEx/dokan/create.c#L267\nI do not really like to have two fonction in one. Is it possible to refractor the code or can you move this part of the code in a DispatchCreateEx ?\nhttps://github.com/billziss-gh/dokany/blob/CreateFileEx/dokan/create.c#L81\nMake the condition here:\nhttps://github.com/billziss-gh/dokany/blob/CreateFileEx/dokan/dokan.c#L333\nAnd add a space here https://github.com/dokan-dev/dokany/pull/96/files#diff-784a504eea06dc6c849c0ca118117afdR109 :smile: \nOtherwise, I have to look more precisly about the utility of the security context.\n. @billziss-gh Directly at the beginning of dispatchcreate is alright for me too :)\n. I close since #104 has been merged.\n. Hello,\nThanks for the report !\nThis has already been reported in a discussion of a closed ticket.\nhttps://github.com/dokan-dev/dokany/issues/26#issuecomment-133009331\nThe possible fix has been added to the TODO of dokan (see Add Oplock Semantics)\nhttps://github.com/dokan-dev/dokany/issues/45\nIf you can provide patch to add the implementation it would be really great !\n. Fixed with https://github.com/dokan-dev/dokany/commit/731a6279dc8e67460a6169e56886475225f9d8b8\n. Hi @js69 ,\nI think your issue is more related to https://github.com/dokan-dev/dokany/issues/154\nBefore the fix of this issue, you was absolutly not able to open a picture at all.\n. Hi @billziss-gh ,\nI have try to build winfstest but I have the error:\n```\n\nnmake Nmakefile\n\nMicrosoft (R) Program Maintenance Utility Version 14.00.23026.0\nCopyright (C) Microsoft Corporation.  All rights reserved.\n    cl /MT /W2 winfstest.c /link /subsystem:console\n\nMicrosoft (R) C/C++ Optimizing Compiler Version 19.00.23026 for x64\nCopyright (C) Microsoft Corporation.  All rights reserved.\nwinfstest.c\nwinfstest.c(34): fatal error C1083: Cannot open include file: 'windows.h': No such file or directory\nNMAKE : fatal error U1077: '\"C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\BIN\\x86_amd64\\cl.EXE\"' : return code '0x2'\nStop.\n```\nIs there any documentation how to build/run the test ?\n. Thanks @billziss-gh, I have faced the same issue with another project so I made the changes in my environement.\nI will try to see how to add it in appveyor.\n. 167/171 success is not bad :smiley: !\nDo we know what is the 4/171 failing ?\n. Ok that's not big deal.\nIt is simply that DeleteFile and RemoveDirectory does not answer the correct error in the mirror.\nFor CreateFile, dokan does not handle SharedAccess https://github.com/dokan-dev/dokany/issues/152\nIt would be interesting to add it to appveyor if someone is interested to do it.\n. Done with: https://github.com/dokan-dev/dokany/commit/c462b105a3e2768ee8dd64992bed066a03a97983\n@js69 @dimov-cz \nI have correct some error\nThere is only one test that fail now:\nnot ok 17 - expect \"CreateFile b:\\tmp\\fce5cd08 GENERIC_READ 0 0 OPEN_EXISTING FILE_FLAG_BACKUP_SEMANTICS 0\" ERROR_SHARING_VIOLATION - got 0\nFrom: https://github.com/Liryna/winfstest/blob/master/TestSuite/t/base/09.t#L29-L30\nI don't really understand why it should return ERROR_SHARING_VIOLATION since both open with GENERIC_READ.\nDo you have an idea ? \n. It is right that NTFS return ERROR_SHARING_VIOLATION in such case.\nHANDLE tmp1 = CreateFile(L\"M:\\\\test\", GENERIC_READ, 0, 0, OPEN_EXISTING, FILE_FLAG_BACKUP_SEMANTICS, 0);\n    std::cout << GetLastError() << std::endl;\n    HANDLE tmp2 = CreateFile(L\"M:\\\\test\", GENERIC_READ, 0, 0, OPEN_EXISTING, FILE_FLAG_BACKUP_SEMANTICS, 0);\n    std::cout << GetLastError() << std::endl;\n    CloseHandle(tmp1);\n    CloseHandle(tmp2);\n...\n0\n0 //it should be 32 - ERROR_SHARING_VIOLATION\nMirror logs when it happen:\n```\nCreate 0000\nCreateFile : C:\\Users\\Liryna\\test\\test\n  AccountName: liryna, DomainName: DESKTOP-RBPTIQA\n        ShareMode = 0x0\n        AccessMode = 0x120089\n        FILE_READ_DATA\n        FILE_READ_ATTRIBUTES\n        FILE_READ_EA\n        READ_CONTROL\n        SYNCHRONIZE\n        STANDARD_RIGHTS_READ\n        STANDARD_RIGHTS_WRITE\n        STANDARD_RIGHTS_EXECUTE\n        FlagsAndAttributes = 0x2000000\n        FILE_FLAG_BACKUP_SEMANTICS\n        OPEN_EXISTING\nCreateFile status = 0 - lastError = 0\nQueryVolumeInfo -001\nGetFileInfo 0000\nGetFileInfo : C:\\Users\\Liryna\\test\\test\n        GetFileInformationByHandle success, file size = 0\n    result =  0\n\nunknown type:54\n        DispatchQueryInformation result =  3221225485\nGetFileInfo 0000\nGetFileInfo : C:\\Users\\Liryna\\test\\test\n        GetFileInformationByHandle success, file size = 0\n    result =  0\n    FileStandardInformation\n    DispatchQueryInformation result =  0\n\nGetFileInfo 0000\nGetFileInfo : C:\\Users\\Liryna\\test\\test\n        GetFileInformationByHandle success, file size = 0\n    result =  0\n    FileBasicInformation\n    DispatchQueryInformation result =  0\n\nGetFileInfo 0000\nGetFileInfo : C:\\Users\\Liryna\\test\\test\n        GetFileInformationByHandle success, file size = 0\n    result =  0\n    FileStandardInformation\n    DispatchQueryInformation result =  0\n\nCreate 0001\nCreateFile : C:\\Users\\Liryna\\test\\test\n  AccountName: liryna, DomainName: DESKTOP-RBPTIQA\n        ShareMode = 0x0\n        AccessMode = 0x120089\n        FILE_READ_DATA\n        FILE_READ_ATTRIBUTES\n        FILE_READ_EA\n        READ_CONTROL\n        SYNCHRONIZE\n        STANDARD_RIGHTS_READ\n        STANDARD_RIGHTS_WRITE\n        STANDARD_RIGHTS_EXECUTE\n        FlagsAndAttributes = 0x2000000\n        FILE_FLAG_BACKUP_SEMANTICS\n        OPEN_EXISTING\nCreateFile status = 0 - lastError = 0\nGetFileInfo 0001\nGetFileInfo : C:\\Users\\Liryna\\test\\test\n        GetFileInformationByHandle success, file size = 0\n    result =  0\n    FileBasicInformation\n    DispatchQueryInformation result =  0\n\nGetFileInfo 0001\nGetFileInfo : C:\\Users\\Liryna\\test\\test\n        GetFileInformationByHandle success, file size = 0\n    result =  0\n    FileStandardInformation\n    DispatchQueryInformation result =  0\n\nCleanup 0000\nCleanup: C:\\Users\\Liryna\\test\\test\nClose 0000\nClose: C:\\Users\\Liryna\\test\\test\nCleanup 0001\nCleanup: C:\\Users\\Liryna\\test\\test\nClose 0001\nClose: C:\\Users\\Liryna\\test\\test\n```\n. I just found that parameters was not used during directory open :smile:  (old code)\nFixed with: https://github.com/dokan-dev/dokany/commit/7f73c616ae2f510381dda4e565d25e1f95516525\nAll 471 tests are passing now :sunglasses: \nThank you @billziss-gh and @dimov-cz for your work on winfstest \n@billziss-gh I hope you will find the time to continue your great project :cry: \n. @billziss-gh , I will begin to review the issue since createfile has been changed.\nOtherwise, could you rerun your test suite to see if everything is still ok ? Thank you\n. - EventInfo has been changed Thank you :+1:  https://github.com/dokan-dev/dokany/commit/54f859232a2819675f5e698b6f96338fc5c3864a\n- I agree that this part of the code should be cleaned: https://github.com/dokan-dev/dokany/blob/master/dokan/create.c#L180\n  But the code that you proposed does not handle all the case.\n  FILE_OPEN_IF = FILE_OPENED & FILE_OVERWRITE/FILE_OVERWRITE_IF = FILE_OVERWRITTEN always  is wrong. it is important for the system to know if you have opened or created the file. (Depending of the last error ERROR_ALREADY_EXISTS now)\n- Using SetLastError(ERROR_ALREADY_EXISTS); seems to be a good idea that I will test ! Edit: I have made the changes https://github.com/dokan-dev/dokany/commit/1039c0adcd413733399995df0169010d17c01dde\n- I agree that SL_OPEN_TARGET_DIRECTORY is not handled properly but I do not know how :cry: \n- I have added it to the issue TODO\n. @billziss-gh , feel free to reopen the issue if you want.\nI have created different tickets with your feedback.\n. Ok great! Thank you :+1: \n. Hi @Corillian,\nDo you think GetSystemDirectory is returning a wrong path ?\nhttps://github.com/dokan-dev/dokany/blob/master/dokan_control/dokanctl.c#L145\nWe should check the return value of GetSystemDirectory but it is still strange that you get \\??\\ in front of the path.\n. Fixed with https://github.com/dokan-dev/dokany/pull/104\nThank again @Corillian for your contribution, It work perfectly.!\n. :+1: I agree\nI will take a look for improving the informations\n. Hi,\nCould you provide some logs ?\n. Can you try with the C mirror and tell me if it is better ?\nhttps://github.com/dokan-dev/dokany/wiki/Use%20Mirror%20exemple\n. Ah great news ! \nC# wrapper is made to be very simple so he manage less case than the C mirror.\n. Hard to say like that.\nYour logs are limited only the the write part, not the the hash (read).\nBut since it is a hash issue, it is probably one of the ReadFile is wrong.\n+1 @marinkobabic \n. I think he mean something like:\nhttp://stackoverflow.com/questions/3984138/hash-string-in-c-sharp\n. Ok @sehang , to know if it is a read or write issue, you should take the 200-300mb file to your local dd, hash it and compare with torrent file informations (expected hash).\nIf the hash is correct, it mean your file is healthy but mirror c# does not provide correctly information to utorrent for making a correct hash.\nOtherwise, it simply mean the file has not been written correctly.\n. @sehang , have you been able to make the test ?\n. I have been able to reproduce the issue with this C# code:\n```\nstring filename = @\"N:\\Users\\liryna\\Desktop\\test\";\n//write file\nusing (var stream = File.Open(filename, FileMode.Create))\n{ \nfor (int y = 0; (126 * y) < 6000; ++y)\n{\nbyte[] test = new byte[126];\nfor (byte x = (byte)0; x < 126; ++x)\n   test[x] = x;\nif (y % 2 == 0)\n  stream.Position /= 2;\nConsole.WriteLine(\"position: \" + stream.Position);\nstream.Write(test, 0, 126); }\n}\n//hash it\nusing (var sha256 = SHA256.Create())\n{\n using (var stream = File.OpenRead(filename))\n {\n string result = ByteArrayToString(sha256.ComputeHash(stream));\n Console.WriteLine(result);\n }\n}\n```\nI have observed that the hash is not the issue but it is the writing part and more precisely the Position.\nIf you remove the part of this exemple where you change the position of the write, the hash is going to be correct.\nSo for a reason, the Mirror C# handle bad the case where you write in the middle of the file.\nFor information, the size of the file does not matter.\nEdit:\nTesting code write position requested (each write of size 126):\nposition: 0\nposition: 126\nposition: 126\nposition: 252\nposition: 189\nposition: 315\nposition: 220\nposition: 346\nposition: 236\nposition: 362\nposition: 244\nposition: 370\nposition: 248\nposition: 374\nposition: 250\nposition: 376\nposition: 251\nposition: 377\nposition: 251\nposition: 377\nposition: 251\nposition: 377\nposition: 251\nposition: 377\nposition: 251\nposition: 377\nposition: 251\nposition: 377\nposition: 251\nposition: 377\nposition: 251\nposition: 377\nposition: 251\nposition: 377\nposition: 251\nposition: 377\nposition: 251\nposition: 377\nposition: 251\nposition: 377\nposition: 251\nposition: 377\nposition: 251\nposition: 377\nposition: 251\nposition: 377\nposition: 251\nposition: 377\nDokan.dll output of the C# Mirror\n(I have add the offset at this DbgPrint https://github.com/dokan-dev/dokany/blob/master/dokan/write.c#L80 )\nDokan.dll ###CreateFile status = 0 - lastError = 183\nDokan.dll ###WriteFile 0007 size 252 position: 0\nMirrorC# position: 0 bufferSize: 252 bytesWritten: 252\nDokan.dll ###WriteFile SUCCESS written: 252\nDokan.dll ###WriteFile 0007 size 252 position: 126\nMirrorC# position: 126 bufferSize: 252 bytesWritten: 252\nDokan.dll ###WriteFile SUCCESS written: 252\nDokan.dll ###WriteFile 0007 size 252 position: 189\nMirrorC# position: 189 bufferSize: 252 bytesWritten: 252\nDokan.dll ###WriteFile SUCCESS written: 252\nDokan.dll ###WriteFile 0007 size 252 position: 220\nMirrorC# position: 220 bufferSize: 252 bytesWritten: 252\nDokan.dll ###WriteFile SUCCESS written: 252\nDokan.dll ###WriteFile 0007 size 252 position: 236\nMirrorC# position: 236 bufferSize: 252 bytesWritten: 252\nDokan.dll ###WriteFile SUCCESS written: 252\nDokan.dll ###WriteFile 0007 size 252 position: 244\nMirrorC# position: 244 bufferSize: 252 bytesWritten: 252\nDokan.dll ###WriteFile SUCCESS written: 252\nDokan.dll ###WriteFile 0007 size 252 position: 248\nMirrorC# position: 248 bufferSize: 252 bytesWritten: 252\nDokan.dll ###WriteFile SUCCESS written: 252\nDokan.dll ###WriteFile 0007 size 252 position: 250\nMirrorC# position: 250 bufferSize: 252 bytesWritten: 252\nDokan.dll ###WriteFile SUCCESS written: 252\nDokan.dll ###WriteFile 0007 size 252 position: 251\nMirrorC# position: 251 bufferSize: 252 bytesWritten: 252\nDokan.dll ###WriteFile SUCCESS written: 252\nDokan.dll ###WriteFile 0007 size 252 position: 251\nMirrorC# position: 251 bufferSize: 252 bytesWritten: 252\nDokan.dll ###WriteFile SUCCESS written: 252\nDokan.dll ###WriteFile 0007 size 252 position: 251\nMirrorC# position: 251 bufferSize: 252 bytesWritten: 252\nDokan.dll ###WriteFile SUCCESS written: 252\nDokan.dll ###WriteFile 0007 size 252 position: 251\nMirrorC# position: 251 bufferSize: 252 bytesWritten: 252\nDokan.dll ###WriteFile SUCCESS written: 252\nDokan.dll ###WriteFile 0007 size 252 position: 251\nMirrorC# position: 251 bufferSize: 252 bytesWritten: 252\nDokan.dll ###WriteFile SUCCESS written: 252\nDokan.dll ###WriteFile 0007 size 252 position: 251\nMirrorC# position: 251 bufferSize: 252 bytesWritten: 252\nDokan.dll ###WriteFile SUCCESS written: 252\nDokan.dll ###WriteFile 0007 size 252 position: 251\nMirrorC# position: 251 bufferSize: 252 bytesWritten: 252\nDokan.dll ###WriteFile SUCCESS written: 252\nDokan.dll ###WriteFile 0007 size 252 position: 251\nMirrorC# position: 251 bufferSize: 252 bytesWritten: 252\nDokan.dll ###WriteFile SUCCESS written: 252\nDokan.dll ###WriteFile 0007 size 252 position: 251\nMirrorC# position: 251 bufferSize: 252 bytesWritten: 252\nDokan.dll ###WriteFile SUCCESS written: 252\nDokan.dll ###WriteFile 0007 size 252 position: 251\nMirrorC# position: 251 bufferSize: 252 bytesWritten: 252\nDokan.dll ###WriteFile SUCCESS written: 252\nDokan.dll ###WriteFile 0007 size 252 position: 251\nMirrorC# position: 251 bufferSize: 252 bytesWritten: 252\nDokan.dll ###WriteFile SUCCESS written: 252\nDokan.dll ###WriteFile 0007 size 252 position: 251\nMirrorC# position: 251 bufferSize: 252 bytesWritten: 252\nDokan.dll ###WriteFile SUCCESS written: 252\nDokan.dll ###WriteFile 0007 size 252 position: 251\nMirrorC# position: 251 bufferSize: 252 bytesWritten: 252\nDokan.dll ###WriteFile SUCCESS written: 252\nDokan.dll ###WriteFile 0007 size 252 position: 251\nMirrorC# position: 251 bufferSize: 252 bytesWritten: 252\nDokan.dll ###WriteFile SUCCESS written: 252\nDokan.dll ###WriteFile 0007 size 252 position: 251\nMirrorC# position: 251 bufferSize: 252 bytesWritten: 252\nDokan.dll ###WriteFile SUCCESS written: 252\nDokan.dll ###WriteFile 0007 size 252 position: 251\nMirrorC# position: 251 bufferSize: 252 bytesWritten: 252\nDokan.dll ###WriteFile SUCCESS written: 252\nDokan.dll ###Cleanup 0007\nDokan.dll ###Close 0007\n. :rage::rage::rage::rage::rage::rage::rage:OMG:rage::rage::rage::rage::rage::rage::rage:\n@sehang , can you make your test again in case of :smile:  ?\n. Tested and work perfectly for me :trophy: !\nThank a lot for your contribution @canardos , I think you made implementation how it has to be done.\n. Can you provide logs from mirror ?\nhttps://github.com/dokan-dev/dokany/wiki/How-to-Debug-Dokan#mirrorfs\n. Oh ho, this is strange. Normally mirror c support more features.\n. Hum hard to say but I guess one of the call is probably failing or the information is not correctly provided. Have you seen this behaviour in the mirror ?\nYou should enable the dokan driver logs to help you during your dev:\nhttps://github.com/dokan-dev/dokany/wiki/How-to-Debug-Dokan#dokan-driver\n. I made the test of the ZIP file with the mirror C and it work on my side (direct opening with explorer and extract all).\nThere should be something that your code make different from the mirror. Add some logs on your code and be sure about the information that you provide to the driver.\nDokan only forward the information you gave him to the kernel.\n. @shi-yan , @suy is right. Could you use the mailing list/group for getting help in your implementation ?\nIf you don't want to use the Windows API, there is the dokan FUSE https://github.com/dokan-dev/dokany/wiki/FUSE\n```\nCreate 0016\nCreateFile status = 3221225626 == 0xC000009A //STATUS_INSUFFICIENT_RESOURCES\n```\nAbout Qt and boost, I am sure there is enough exemple how to convert Win32 define to their API on internet.\n. That is well seen :) ! even code analyser haven't found  it!\nThank you @canardos again !\n. Hi,\nA simple script has been added to help during the release and also provide a zip.\nhttps://github.com/dokan-dev/dokany/commit/06fe345a7ae0d33878066a39ea01fca0629c8673\nI have also added a zip to this release.\nhttps://github.com/dokan-dev/dokany/releases/tag/v0.8.0-RC3\n. Hi,\nAre you talking about your code or the C# mirror ?\nWhat are your observation regarding the logs ?\n. If the Mirror C# work, you should compare the difference in the behaviour with your implementation.\nI am sorry I do not have personally the time to review your logs or code. But I know that there is probably some people who would be glad to help you on the dokan group/mailing, could you create a discussion there and report your issue ?\n. Here is the mailing list/group: https://groups.google.com/forum/#!forum/dokan\n. NP, I will try to take a look If I can this weekend.\n. Glad to hear it :+1: \nOtherwise, did you try to return NtStatus.NotImplemented; in GetFileSecurity & SetFileSecurity  ?\n. Hello @shi-yan ,\nThanks for the report !\nBut this has already been reported in different discussions (#26 (comment), #97)\nIt is not really a bug but more a new feature. Some windows app are using different WIn32 function than CreateFile that is currently not implemented in dokany.\nThe possible fix has been added to the TODO of dokan (see Add Oplock Semantics)\n45\nIf you can provide patch to add the implementation it would be really great !\n. Fixed with https://github.com/dokan-dev/dokany/commit/731a6279dc8e67460a6169e56886475225f9d8b8\n. Hi @kenjiuno ,\nYes it is VS 2015 runtime. The link to download the runtime was not updated.\nThis has already been fixed with: https://github.com/dokan-dev/dokany/commit/78324e9fd5391c7ad3df1619c4e00f991fc0669c\n. Explorer: Did you try something like: http://www.howtogeek.com/howto/windows-vista/hide-drives-from-your-computer-in-windows-vista/ ?\nDokan is not a real volume for windows for now.\nBut with https://github.com/dokan-dev/dokany/issues/50,  Dokan volumes are going to be visible from disk management.\n. You can also return acces denied to all explorer.exe calls.\nSee DOKAN_FILE_INFO: https://github.com/dokan-dev/dokany/blob/a15e41bfbaa34d47854b7e303fd1d012aaf8a21f/dokan/dokan.h#L72\nThe device will be visible by explorer but all action will be denied.\nOtherwise, I think it is more a explorer configuration that a dokan feature.\n. Thank you ! :+1: \n. :+1: for the python wrapper or even if someone could share his experience with a fuse-python wrapper and  dokany !\n(Ruby wrapper is kind of not maintained, so if someone want to take care of it :p)\n. Hi @arekbulski,\nI just seen that there is an implementation of dokan.\nhttp://docs.pyfilesystem.org/en/latest/expose/dokan.html\nIt is probably old and abandonned, but it is better than nothing for a start (probably).\n. @Corillian I agree totally that we have to move to msi. But we are more focusing in the stability of dokany for now. \nThis feature will only be available if someone make a pull request.\n. I just got a contribution by mail. I made a quick test and it seems to work.\nI will continue the test and add it to the repository for the 0.8.0 stable release. \n. We prefer to add it in the next release 0.8.1\n. Thank you @Corillian for your PR, I will try to check both PR this weekend.\nIs it possible to make two installer like now ? (with & without redist embedded)\nI am not a big fan that the installer would fail if the serveur is down.\nOtherwise Git LFS would be not bad if there is a way to use it with WiX.\n. Oh, I was not aware of the bandwidth limit :cry: \nCan we not just continue to copy the redist our self in the WiX folder ? \nAnd WiX will create one installer with and another wihtout redist.\nI agree that it would be cool to have the installer that download everything automatically but in case your install is without internet, you will be trap.\n. Oh great ! I will test it the sooner as I can!\nYou can test the network provider by running mirror.exe /n /r C:\\Users /l m (/n network provider)\n. I am not sure that I understood correctly your question.\nMounting your dokan device as network device is only an option. You don't need to implement something.\nPeople use this option because the behaviour of the read/write are different and also better when your implementation access network data.\nI have never try to acces it from another computer so I cannot say...\nAlso cince 1.0.0, there is also an new option mirror.exe /n /r C:\\Users /l m /n /u \\localhost\\users -> Win + R: \\\\localhost\\users\\js69 will open in explorer C:\\Users\\js69\n. There is a 'bug' for now on Win10, try to acces with the subfolder directly \\\\localhost\\users\\myuser\n. WiX installer has been added to the repository https://github.com/dokan-dev/dokany/commit/943a5d5c6551bc5085317c50d975bd8db55e73ac\nThanks to all of you for the help & contribution !\n. Hi @accorp ,\nYou are right, Unmount is never called for now but it is better to keep it in case we handle it in the futur.\nMount() could be add and called before operations starts but it would be the same as you calling it before DokanMain().\nIf dokan call you during the initialization of your device, it doesn't mean that the mount has been successful since there is still some job to do (like starting the operations for examples).\n. @accorp , I have not seen that DokanMain do not check _beginthreadex ><\nSo you are right! we can do it :smiley: \nCould you create a pull request with your changes ? :heart: \n@suy , I have never used dokan_fuse myself :( I am sorry, I cannot help you for it\n. https://github.com/dokan-dev/dokany/pull/121\nAbout Unmount not called, @Maxhy , do you think that mountmanager would fix it ? (getting proper IRP when disk is unmount/eject).\n. Ok, so I imagine we could just call Unmount here:\nhttps://github.com/dokan-dev/dokany/blob/master/dokan/dokan.c#L247\nAnd remove the IRP_MJ_SHUTDOWN, I think this never happend at all.\n. @accorp , I have made a new RC with Unmounted call when device is removed & also renamed mount to mounted. Can you try it and share your feelings about it ?\nhttps://github.com/dokan-dev/dokany/releases/tag/v0.8.0-RC4\n. Hello @Smjert ,\nit is normal that you have BSOD, win-sshfs only support dokany 0.7.4.\n0.8.0 break compatibility, they need to update their code to be able to run under 0.8.0 >=.\n. Oh ok so it is different :D !\nWe have faced this bug also :D and fixed it in mountmanager-041015 branch.\nI have updated the master with the fix.\nThank you for your great report ! :heart: \n. Hello @exaptations ,\nCould you recreate this ticket in the dokan-java repository ?\nhttps://github.com/dokan-dev/dokan-java\nIt is @sherter that handle the java part of dokan.\nYou can also propose a pull request to update the wrapper, I am sure he would be glad to get some help on it !\n. Hi @jgressmann ,\nIn dokan 0.8.0-RC3 there is no more OpenDirectory.\nSee: https://github.com/dokan-dev/dokany/releases/tag/v0.8.0-RC3\nCreateDirectory & OpenDirectory have been merged with CreateFileW\n. :smile: \nTry with the RC3, I think something that sounds like what you have report has been fixed in it.\n. Could you give the command that you are using with mirror.exe and also the DOS command to reproduce the issue ?\n```\n\nmirror.exe /r C:\\Users\\Liryna\\Desktop /l m\nm:\nmove a.txt b.txt\n 1 file(s) moved.\nrename b.txt a.txt\n```\n\nI cannot reproduce it with the mirror in windows 10.\n. The name is provided directly by windows kernel.\nI don't think it is a good idea to change the windows behaviour, it could break other features.\n. We have already try to add a \\ but it has been revert\nSee: https://github.com/dokan-dev/dokany/commit/4496617e47dabf2123020e7732ddc15264005260\n. Thank you @accorp for your contribution !\n. Exactly :smiley: I was going to write it\n. Hello @accorp ,\nI removed the useless check as you proposed: https://github.com/dokan-dev/dokany/commit/c92df756e5aadfc13b3fdb56f4d88a3da97f5c46\nThanks again for your contributions ! :+1: \n. :+1: \n. Hello @js69 ,\nI have some error to build the installer :cry:\nI only build the solution, am I doing something wrong ?\n```\n1>------ Rebuild All started: Project: WiXCA, Configuration: Debug x86 ------\n1>  Searching for custom action entry points in WiXCA.dll\n1>      Loaded dependent assembly: C:\\Program Files (x86)\\WiX Toolset v3.10\\SDK\\Microsoft.Deployment.WindowsInstaller.dll\n1>      CheckDokanNSISInstalled=WiXCA!WiXCA.CustomActions.CheckDokanNSISInstalled\n1>      ExecuteInstall=WiXCA!WiXCA.CustomActions.ExecuteInstall\n1>      ExecuteUninstall=WiXCA!WiXCA.CustomActions.ExecuteUninstall\n1>      DeleteBundleItems=WiXCA!WiXCA.CustomActions.DeleteBundleItems\n1>  Searching for an embedded UI class in WiXCA.dll\n1>  Modifying SfxCA.dll stub\n1>  Copying file version info from C:\\Users\\liryna\\Desktop\\dokany\\dokan_wix\\WiXCA\\obj\\x86\\Debug\\WiXCA.dll to C:\\Users\\liryna\\Desktop\\dokany\\dokan_wix\\WiXCA\\obj\\x86\\Debug\\WiXCA.CA.dll\n1>  Packaging files\n1>      WiXCA.dll\n1>      Microsoft.Deployment.WindowsInstaller.dll\n1>      CustomAction.config\n1>  MakeSfxCA finished: C:\\Users\\liryna\\Desktop\\dokany\\dokan_wix\\WiXCA\\obj\\x86\\Debug\\WiXCA.CA.dll\n1>  WiXCA -> C:\\Users\\liryna\\Desktop\\dokany\\dokan_wix\\WiXCA\\bin\\Debug\\WiXCA.dll\n2>------ Rebuild All started: Project: DokanMSI_x86, Configuration: Debug x86 ------\n2>  C:\\Program Files (x86)\\WiX Toolset v3.10\\bin\\candle.exe -dSourceDir=.\\Sources -d\"DevEnvDir=C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\Common7\\IDE\\\" -dSolutionDir=C:\\Users\\liryna\\Desktop\\dokany\\dokan_wix\\ -dSolutionExt=.sln -dSolutionFileName=Dokan_WiX.sln -dSolutionName=Dokan_WiX -dSolutionPath=C:\\Users\\liryna\\Desktop\\dokany\\dokan_wix\\Dokan_WiX.sln -dConfiguration=Debug -dOutDir=bin\\x86\\Debug\\ -dPlatform=x86 -dProjectDir=C:\\Users\\liryna\\Desktop\\dokany\\dokan_wix\\ -dProjectExt=.wixproj -dProjectFileName=DokanMSI_x86.wixproj -dProjectName=DokanMSI_x86 -dProjectPath=C:\\Users\\liryna\\Desktop\\dokany\\dokan_wix\\DokanMSI_x86.wixproj -dTargetDir=C:\\Users\\liryna\\Desktop\\dokany\\dokan_wix\\bin\\x86\\Debug\\ -dTargetExt=.msi -dTargetFileName=Dokan_x86.msi -dTargetName=Dokan_x86 -dTargetPath=C:\\Users\\liryna\\Desktop\\dokany\\dokan_wix\\bin\\x86\\Debug\\Dokan_x86.msi -out obj\\x86\\Debug\\ -arch x86 -ext \"C:\\Program Files (x86)\\WiX Toolset v3.10\\bin\\WixDifxAppExtension.dll\" -ext \"C:\\Program Files (x86)\\WiX Toolset v3.10\\bin\\WixUtilExtension.dll\" Dokan_x86.wxs\n2>  C:\\Program Files (x86)\\WiX Toolset v3.10\\bin\\Light.exe -out C:\\Users\\liryna\\Desktop\\dokany\\dokan_wix\\bin\\x86\\Debug\\Dokan_x86.msi -pdbout C:\\Users\\liryna\\Desktop\\dokany\\dokan_wix\\bin\\x86\\Debug\\Dokan_x86.wixpdb -cultures:null -ext \"C:\\Program Files (x86)\\WiX Toolset v3.10\\bin\\WixDifxAppExtension.dll\" -ext \"C:\\Program Files (x86)\\WiX Toolset v3.10\\bin\\WixUtilExtension.dll\" -sice:ICE30 -contentsfile obj\\x86\\Debug\\DokanMSI_x86.wixproj.BindContentsFileListnull.txt -outputsfile obj\\x86\\Debug\\DokanMSI_x86.wixproj.BindOutputsFileListnull.txt -builtoutputsfile obj\\x86\\Debug\\DokanMSI_x86.wixproj.BindBuiltOutputsFileListnull.txt -wixprojectfile C:\\Users\\liryna\\Desktop\\dokany\\dokan_wix\\DokanMSI_x86.wixproj -sw1137 obj\\x86\\Debug\\Dokan_x86.wixobj\n2>C:\\Users\\liryna\\Desktop\\dokany\\dokan_wix\\Dokan_x86.wxs(209,0): error LGHT0094: Unresolved reference to symbol 'CustomAction:MsiProcessDrivers' in section 'Product:{65A3A986-3DC3-4C7A-82C3-35DDEE92359D}'.\n2>C:\\Users\\liryna\\Desktop\\dokany\\dokan_wix\\Dokan_x86.wxs(219,0): error LGHT0094: Unresolved reference to symbol 'CustomAction:MsiProcessDrivers' in section 'Product:{65A3A986-3DC3-4C7A-82C3-35DDEE92359D}'.\n2>C:\\Users\\liryna\\Desktop\\dokany\\dokan_wix\\Dokan_x86.wxs(229,0): error LGHT0094: Unresolved reference to symbol 'CustomAction:MsiProcessDrivers' in section 'Product:{65A3A986-3DC3-4C7A-82C3-35DDEE92359D}'.\n2>C:\\Users\\liryna\\Desktop\\dokany\\dokan_wix\\Dokan_x86.wxs(239,0): error LGHT0094: Unresolved reference to symbol 'CustomAction:MsiProcessDrivers' in section 'Product:{65A3A986-3DC3-4C7A-82C3-35DDEE92359D}'.\n2>Done building project \"DokanMSI_x86.wixproj\" -- FAILED.\n2>\n3>------ Rebuild All started: Project: DokanMSI_x64, Configuration: Debug x64 ------\n3>  C:\\Program Files (x86)\\WiX Toolset v3.10\\bin\\candle.exe -dSourceDir=.\\Sources -d\"DevEnvDir=C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\Common7\\IDE\\\" -dSolutionDir=C:\\Users\\liryna\\Desktop\\dokany\\dokan_wix\\ -dSolutionExt=.sln -dSolutionFileName=Dokan_WiX.sln -dSolutionName=Dokan_WiX -dSolutionPath=C:\\Users\\liryna\\Desktop\\dokany\\dokan_wix\\Dokan_WiX.sln -dConfiguration=Debug -dOutDir=bin\\x64\\Debug\\ -dPlatform=x64 -dProjectDir=C:\\Users\\liryna\\Desktop\\dokany\\dokan_wix\\ -dProjectExt=.wixproj -dProjectFileName=DokanMSI_x64.wixproj -dProjectName=DokanMSI_x64 -dProjectPath=C:\\Users\\liryna\\Desktop\\dokany\\dokan_wix\\DokanMSI_x64.wixproj -dTargetDir=C:\\Users\\liryna\\Desktop\\dokany\\dokan_wix\\bin\\x64\\Debug\\ -dTargetExt=.msi -dTargetFileName=Dokan_x64.msi -dTargetName=Dokan_x64 -dTargetPath=C:\\Users\\liryna\\Desktop\\dokany\\dokan_wix\\bin\\x64\\Debug\\Dokan_x64.msi -out obj\\x64\\Debug\\ -arch x64 -ext \"C:\\Program Files (x86)\\WiX Toolset v3.10\\bin\\WixDifxAppExtension.dll\" -ext \"C:\\Program Files (x86)\\WiX Toolset v3.10\\bin\\WixUtilExtension.dll\" -sw1077 Dokan_x64.wxs\n3>  C:\\Program Files (x86)\\WiX Toolset v3.10\\bin\\Light.exe -out C:\\Users\\liryna\\Desktop\\dokany\\dokan_wix\\bin\\x64\\Debug\\Dokan_x64.msi -pdbout C:\\Users\\liryna\\Desktop\\dokany\\dokan_wix\\bin\\x64\\Debug\\Dokan_x64.wixpdb -cultures:null -ext \"C:\\Program Files (x86)\\WiX Toolset v3.10\\bin\\WixDifxAppExtension.dll\" -ext \"C:\\Program Files (x86)\\WiX Toolset v3.10\\bin\\WixUtilExtension.dll\" -sice:ICE30 -contentsfile obj\\x64\\Debug\\DokanMSI_x64.wixproj.BindContentsFileListnull.txt -outputsfile obj\\x64\\Debug\\DokanMSI_x64.wixproj.BindOutputsFileListnull.txt -builtoutputsfile obj\\x64\\Debug\\DokanMSI_x64.wixproj.BindBuiltOutputsFileListnull.txt -wixprojectfile C:\\Users\\liryna\\Desktop\\dokany\\dokan_wix\\DokanMSI_x64.wixproj -sw1137 obj\\x64\\Debug\\Dokan_x64.wixobj\n3>C:\\Users\\liryna\\Desktop\\dokany\\dokan_wix\\Dokan_x64.wxs(210,0): error LGHT0094: Unresolved reference to symbol 'CustomAction:MsiProcessDrivers' in section 'Product:{65A3A964-3DC3-4C7A-82C3-35DDEE92359D}'.\n3>C:\\Users\\liryna\\Desktop\\dokany\\dokan_wix\\Dokan_x64.wxs(220,0): error LGHT0094: Unresolved reference to symbol 'CustomAction:MsiProcessDrivers' in section 'Product:{65A3A964-3DC3-4C7A-82C3-35DDEE92359D}'.\n3>C:\\Users\\liryna\\Desktop\\dokany\\dokan_wix\\Dokan_x64.wxs(230,0): error LGHT0094: Unresolved reference to symbol 'CustomAction:MsiProcessDrivers' in section 'Product:{65A3A964-3DC3-4C7A-82C3-35DDEE92359D}'.\n3>C:\\Users\\liryna\\Desktop\\dokany\\dokan_wix\\Dokan_x64.wxs(240,0): error LGHT0094: Unresolved reference to symbol 'CustomAction:MsiProcessDrivers' in section 'Product:{65A3A964-3DC3-4C7A-82C3-35DDEE92359D}'.\n3>Done building project \"DokanMSI_x64.wixproj\" -- FAILED.\n3>\n4>------ Rebuild All started: Project: Bootstrapper, Configuration: Debug x86 ------\n4>  C:\\Program Files (x86)\\WiX Toolset v3.10\\bin\\candle.exe -dDebug -d\"DevEnvDir=C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\Common7\\IDE\\\" -dSolutionDir=C:\\Users\\liryna\\Desktop\\dokany\\dokan_wix\\ -dSolutionExt=.sln -dSolutionFileName=Dokan_WiX.sln -dSolutionName=Dokan_WiX -dSolutionPath=C:\\Users\\liryna\\Desktop\\dokany\\dokan_wix\\Dokan_WiX.sln -dConfiguration=Debug -dOutDir=bin\\Debug\\ -dPlatform=x86 -dProjectDir=C:\\Users\\liryna\\Desktop\\dokany\\dokan_wix\\Bootstrapper\\ -dProjectExt=.wixproj -dProjectFileName=Bootstrapper.wixproj -dProjectName=Bootstrapper -dProjectPath=C:\\Users\\liryna\\Desktop\\dokany\\dokan_wix\\Bootstrapper\\Bootstrapper.wixproj -dTargetDir=C:\\Users\\liryna\\Desktop\\dokany\\dokan_wix\\Bootstrapper\\bin\\Debug\\ -dTargetExt=.exe -dTargetFileName=DokanSetup.exe -dTargetName=DokanSetup -dTargetPath=C:\\Users\\liryna\\Desktop\\dokany\\dokan_wix\\Bootstrapper\\bin\\Debug\\DokanSetup.exe -out obj\\Debug\\ -arch x86 -ext \"C:\\Program Files (x86)\\WiX Toolset v3.10\\bin\\WixDependencyExtension.dll\" -ext \"C:\\Program Files (x86)\\WiX Toolset v3.10\\bin\\WixUtilExtension.dll\" -ext \"C:\\Program Files (x86)\\WiX Toolset v3.10\\bin\\WixNetFxExtension.dll\" -ext \"C:\\Program Files (x86)\\WiX Toolset v3.10\\bin\\WixBalExtension.dll\" Bundle.wxs\n4>  C:\\Program Files (x86)\\WiX Toolset v3.10\\bin\\Light.exe -out C:\\Users\\liryna\\Desktop\\dokany\\dokan_wix\\Bootstrapper\\bin\\Debug\\DokanSetup.exe -pdbout C:\\Users\\liryna\\Desktop\\dokany\\dokan_wix\\Bootstrapper\\bin\\Debug\\DokanSetup.wixpdb -ext \"C:\\Program Files (x86)\\WiX Toolset v3.10\\bin\\WixDependencyExtension.dll\" -ext \"C:\\Program Files (x86)\\WiX Toolset v3.10\\bin\\WixUtilExtension.dll\" -ext \"C:\\Program Files (x86)\\WiX Toolset v3.10\\bin\\WixNetFxExtension.dll\" -ext \"C:\\Program Files (x86)\\WiX Toolset v3.10\\bin\\WixBalExtension.dll\" -contentsfile obj\\Debug\\Bootstrapper.wixproj.BindContentsFileList.txt -outputsfile obj\\Debug\\Bootstrapper.wixproj.BindOutputsFileList.txt -builtoutputsfile obj\\Debug\\Bootstrapper.wixproj.BindBuiltOutputsFileList.txt -wixprojectfile C:\\Users\\liryna\\Desktop\\dokany\\dokan_wix\\Bootstrapper\\Bootstrapper.wixproj obj\\Debug\\Bundle.wixobj\n4>C:\\Users\\liryna\\Desktop\\dokany\\dokan_wix\\Bootstrapper\\Bundle.wxs(77,0): error LGHT0103: The system cannot find the file '..\\bin\\x86\\Debug\\Dokan_x86.msi'.\n4>C:\\Users\\liryna\\Desktop\\dokany\\dokan_wix\\Bootstrapper\\Bundle.wxs(87,0): error LGHT0103: The system cannot find the file '..\\bin\\x64\\Debug\\Dokan_x64.msi'.\n4>Done building project \"Bootstrapper.wixproj\" -- FAILED.\n4>\n========== Rebuild All: 1 succeeded, 3 failed, 0 skipped ==========\n```\nEdit: Release build is working. Is it possible to have the debug that build installer with debug binaries ?\n. :open_mouth: binary into a repository ?\nI think this could be replace by a powershell script in the build event that use Invoke-WebRequest\nhttp://superuser.com/questions/362152/native-alternative-to-wget-in-windows-powershell\nOtherwise thank you for the Debug build !\nI will make test when I can !\n. @js69 , sorry for taking time for review your pull request.\nI have started to looking into it (also made a pull request on your repository https://github.com/js69/dokany/pull/1).\nWe want to finish the mount manager feature and after I will make a full test of your installer.\nI will need your help about https://github.com/dokan-dev/dokany/issues/129#issuecomment-167096764 \n. Hi @js69 ,\nHere my review of the installer:\n- If the driver is not installed correctly (because not signed driver for exemple). There is not error displayed. The install succeed and propose to reboot when it should fail.\n- Does dokan.inf and dokan.pdb in system32\\drivers could be move into install folder ?\n- The x86 binaries (dokan.dll mirror.exe,...) seems to not be installed on x64 system.\n- DokanSetup.exe ADDLOCAL=All does not seems to install PDB files in Dokan\\DokanLibrary\\pdb. \n- Does the installer could be tag to run as Admin ?\nOtherwise the installer seems to work perfectly :+1: Great job !\n. @js69 , I just made all changes https://github.com/dokan-dev/dokany/commit/78b94934eb6a9e1eaea7db358959fe8bb0473126 . It would be great if you could make the changes also in your installer.\nSee install.nsichanges\n. Yes, it is for developer who want to build a x86 application using dokan on their x64 system.\nI am not sure they will want to clone the repository with a specific tag and rebuild the library.\nIt is more simple for them to find directly the library build and include in the installer as we now do.\n. Thank you @js69 , I will try to review your changes in the next days !\nIs there a reason that you dual-sign sha1/sha2 for prod ? sha2 is compativle with all supported OS from what I see.\nhttp://blogs.technet.com/b/pki/archive/2010/09/30/sha2-and-windows.aspx\n. Strange because I am already signed it with sha256 myself\nhttps://github.com/dokan-dev/dokany/commit/16d78c69b1e6ef365313fc8a51d34113f81142a2\n. Didn't test with Visual studio. Directly with https://github.com/dokan-dev/dokany/blob/master/sign.bat\n. The script is using directly our certificat. I gave the script as exemple.\nYou should try to build with auto sign from VS and after sign yourself to be sure that it is correctly made.\n. Our cert is SHA2. I made the test again. I can assure you that it work.\n. I installed driver by hand with dokanctl. can you try with it ?\nI didn't test with installer for now.\nOur certif has been renew some days before and is now sha2. (the last \nbeta use the old one)\nLe 01/02/2016 18:26, js69 a \u00e9crit :\n\nWith SHA2-only signed and timestamped driver file on Win10 the \n\"Digitally signed driver\" error appears.\nDIFXAPP: INFO: ENTER: DriverPackageInstallW\nDIFXAPP: INFO: Copied 'dokan.inf' to driver store...\nDIFXAPP: INFO: Commiting queue...\nDIFXAPP: INFO: Copied file: 'C:\\Program\nFiles\\Dokan\\DokanLibrary\\driver\\dokan-1.sys' ->\n'C:\\Windows\\system32\\DRVSTORE\\dokan_527DE26DAC757CA445D6E4F281C532388DFF74E4\\dokan-1.sys'.\nDIFXAPP: INFO: Installing INF file\n\"C:\\Windows\\system32\\DRVSTORE\\dokan_527DE26DAC757CA445D6E4F281C532388DFF74E4\\dokan.inf\"\nof Type 2.\nDIFXAPP: INFO: Installing File System Driver\n'C:\\Windows\\system32\\DRVSTORE\\dokan_527DE26DAC757CA445D6E4F281C532388DFF74E4\\dokan.inf'\nDIFXAPP: ERROR: Unable to start service 'dokan' because of error 0x241\nWith a dual SHA1 and SHA2 driver this does not happen.\nIf your certifcate is the one present on the Dokan beta installers \nwith thumbprint \u200e3e c9 3b f9 43 a8 34 27 ef 6c b7 c9 cd ec 54 44 75 0d \n30 a8, it is still SHA1.\n\u2014\nReply to this email directly or view it on GitHub \nhttps://github.com/dokan-dev/dokany/pull/124#issuecomment-178081704.\n. Hi @js69 ,\n\nI have added your installer into the master https://github.com/dokan-dev/dokany/commit/943a5d5c6551bc5085317c50d975bd8db55e73ac\nI had to import the installer myself because the pull request history issue with past merge (64 files changed not linked with the installer).\nIt work very well for me ! There is probably some files that I will move later. But it is ready for use !\nOtherwise I had to rewrite post build sign to fit our cert :cry: I also made the test with driver sign sha1/sha2. On my win10, I have no problem when the drive is only signed sha2. For the next release, it would be nice if you can tell me if it work on your side too.\nThank you again for all the time you have taken for making this installer ! We finally did it :smile: \n. Hi @Corillian ,\nThank you for the pull request !\nI am having issue to build the installer:\n1>------ Skipped Build: Project: DokanInstaller_x64, Configuration: Release x86 ------\n1>Project not selected to build for this solution configuration \n2>------ Skipped Build: Project: DokanInstaller_x86, Configuration: Release x86 ------\n2>Project not selected to build for this solution configuration \n3>------ Build started: Project: DokanInstaller_Bootstrapper, Configuration: Release x86 ------\n3>  C:\\Program Files (x86)\\WiX Toolset v3.10\\bin\\candle.exe -d\"DevEnvDir=C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\Common7\\IDE\\\\\" -dSolutionDir=C:\\Users\\liryna\\Desktop\\dokany\\ -dSolutionExt=.sln -dSolutionFileName=dokan.sln -dSolutionName=dokan -dSolutionPath=C:\\Users\\liryna\\Desktop\\dokany\\dokan.sln -dConfiguration=Release -dOutDir=bin\\Release\\ -dPlatform=x86 -dProjectDir=C:\\Users\\liryna\\Desktop\\dokany\\dokan_install\\DokanInstaller_Bootstrapper\\ -dProjectExt=.wixproj -dProjectFileName=DokanInstaller_Bootstrapper.wixproj -dProjectName=DokanInstaller_Bootstrapper -dProjectPath=C:\\Users\\liryna\\Desktop\\dokany\\dokan_install\\DokanInstaller_Bootstrapper\\DokanInstaller_Bootstrapper.wixproj -dTargetDir=C:\\Users\\liryna\\Desktop\\dokany\\dokan_install\\DokanInstaller_Bootstrapper\\bin\\Release\\ -dTargetExt=.exe -dTargetFileName=DokanInstaller_Bootstrapper.exe -dTargetName=DokanInstaller_Bootstrapper -dTargetPath=C:\\Users\\liryna\\Desktop\\dokany\\dokan_install\\DokanInstaller_Bootstrapper\\bin\\Release\\DokanInstaller_Bootstrapper.exe -dDokan.BootstrapperUX.Configuration=Release -d\"Dokan.BootstrapperUX.FullConfiguration=Release|AnyCPU\" -dDokan.BootstrapperUX.Platform=AnyCPU -dDokan.BootstrapperUX.ProjectDir=C:\\Users\\liryna\\Desktop\\dokany\\dokan_install\\Dokan.BootstrapperUX\\ -dDokan.BootstrapperUX.ProjectExt=.csproj -dDokan.BootstrapperUX.ProjectFileName=Dokan.BootstrapperUX.csproj -dDokan.BootstrapperUX.ProjectName=Dokan.BootstrapperUX -dDokan.BootstrapperUX.ProjectPath=C:\\Users\\liryna\\Desktop\\dokany\\dokan_install\\Dokan.BootstrapperUX\\Dokan.BootstrapperUX.csproj -dDokan.BootstrapperUX.TargetDir=C:\\Users\\liryna\\Desktop\\dokany\\dokan_install\\Dokan.BootstrapperUX\\bin\\Release\\ -dDokan.BootstrapperUX.TargetExt=.dll -dDokan.BootstrapperUX.TargetFileName=Dokan.BootstrapperUX.dll -dDokan.BootstrapperUX.TargetName=Dokan.BootstrapperUX -dDokan.BootstrapperUX.TargetPath=C:\\Users\\liryna\\Desktop\\dokany\\dokan_install\\Dokan.BootstrapperUX\\bin\\Release\\Dokan.BootstrapperUX.dll -dDokanInstaller_x64.Configuration=Release -d\"DokanInstaller_x64.FullConfiguration=Release|x86\" -dDokanInstaller_x64.Platform=x86 -dDokanInstaller_x64.ProjectDir=C:\\Users\\liryna\\Desktop\\dokany\\dokan_install\\DokanInstaller_x64\\ -dDokanInstaller_x64.ProjectExt=.wixproj -dDokanInstaller_x64.ProjectFileName=DokanInstaller_x64.wixproj -dDokanInstaller_x64.ProjectName=DokanInstaller_x64 -dDokanInstaller_x64.ProjectPath=C:\\Users\\liryna\\Desktop\\dokany\\dokan_install\\DokanInstaller_x64\\DokanInstaller_x64.wixproj -dDokanInstaller_x64.TargetDir=C:\\Users\\liryna\\Desktop\\dokany\\dokan_install\\DokanInstaller_x64\\bin\\Release\\ -dDokanInstaller_x64.TargetExt=.msi -dDokanInstaller_x64.TargetFileName=DokanInstaller_x64.msi -dDokanInstaller_x64.TargetName=DokanInstaller_x64 -dDokanInstaller_x64.TargetPath=C:\\Users\\liryna\\Desktop\\dokany\\dokan_install\\DokanInstaller_x64\\bin\\Release\\DokanInstaller_x64.msi -dDokanInstaller_x86.Configuration=Release -d\"DokanInstaller_x86.FullConfiguration=Release|x86\" -dDokanInstaller_x86.Platform=x86 -dDokanInstaller_x86.ProjectDir=C:\\Users\\liryna\\Desktop\\dokany\\dokan_install\\DokanInstaller_x86\\ -dDokanInstaller_x86.ProjectExt=.wixproj -dDokanInstaller_x86.ProjectFileName=DokanInstaller_x86.wixproj -dDokanInstaller_x86.ProjectName=DokanInstaller_x86 -dDokanInstaller_x86.ProjectPath=C:\\Users\\liryna\\Desktop\\dokany\\dokan_install\\DokanInstaller_x86\\DokanInstaller_x86.wixproj -dDokanInstaller_x86.TargetDir=C:\\Users\\liryna\\Desktop\\dokany\\dokan_install\\DokanInstaller_x86\\bin\\Release\\ -dDokanInstaller_x86.TargetExt=.msi -dDokanInstaller_x86.TargetFileName=DokanInstaller_x86.msi -dDokanInstaller_x86.TargetName=DokanInstaller_x86 -dDokanInstaller_x86.TargetPath=C:\\Users\\liryna\\Desktop\\dokany\\dokan_install\\DokanInstaller_x86\\bin\\Release\\DokanInstaller_x86.msi -out obj\\Release\\ -arch x86 -ext \"C:\\Program Files (x86)\\WiX Toolset v3.10\\bin\\\\WixUtilExtension.dll\" -ext \"C:\\Program Files (x86)\\WiX Toolset v3.10\\bin\\\\WixBalExtension.dll\" Bundle.wxs\n3>  C:\\Program Files (x86)\\WiX Toolset v3.10\\bin\\Light.exe -out C:\\Users\\liryna\\Desktop\\dokany\\dokan_install\\DokanInstaller_Bootstrapper\\bin\\Release\\DokanInstaller_Bootstrapper.exe -pdbout C:\\Users\\liryna\\Desktop\\dokany\\dokan_install\\DokanInstaller_Bootstrapper\\bin\\Release\\DokanInstaller_Bootstrapper.wixpdb -ext \"C:\\Program Files (x86)\\WiX Toolset v3.10\\bin\\\\WixUtilExtension.dll\" -ext \"C:\\Program Files (x86)\\WiX Toolset v3.10\\bin\\\\WixBalExtension.dll\" -contentsfile obj\\Release\\DokanInstaller_Bootstrapper.wixproj.BindContentsFileList.txt -outputsfile obj\\Release\\DokanInstaller_Bootstrapper.wixproj.BindOutputsFileList.txt -builtoutputsfile obj\\Release\\DokanInstaller_Bootstrapper.wixproj.BindBuiltOutputsFileList.txt -wixprojectfile C:\\Users\\liryna\\Desktop\\dokany\\dokan_install\\DokanInstaller_Bootstrapper\\DokanInstaller_Bootstrapper.wixproj obj\\Release\\Bundle.wixobj\n3>C:\\Users\\liryna\\Desktop\\dokany\\dokan_install\\DokanInstaller_Bootstrapper\\Bundle.wxs(54,0): error LGHT0103: The system cannot find the file 'C:\\Users\\liryna\\Desktop\\dokany\\dokan_install\\DokanInstaller_x64\\bin\\Release\\DokanInstaller_x64.msi'.\n3>C:\\Users\\liryna\\Desktop\\dokany\\dokan_install\\DokanInstaller_Bootstrapper\\Bundle.wxs(55,0): error LGHT0103: The system cannot find the file 'C:\\Users\\liryna\\Desktop\\dokany\\dokan_install\\DokanInstaller_x86\\bin\\Release\\DokanInstaller_x86.msi'.\n3>Done building project \"DokanInstaller_Bootstrapper.wixproj\" -- FAILED.\n3>\n========== Build: 0 succeeded, 1 failed, 1 up-to-date, 2 skipped ==========\nFor information, your installer need Framework 2.0 to be build. See http://wixtoolset.org/issues/3872/\nDoes this could be fixed ?\nI really think the redist exe should not be part of the repository at all.\nAdding 30mb at each VS version...it is unacceptable.\nOtherwise, where did you got this version of the SDK ? (you have update WindowsTargetPlatformVersion of dokan_fuse and sys)\nMy VS have update 1 and impossible to find it.\nhttps://github.com/dokan-dev/dokany/pull/125/files#diff-e8401a5bc872189984bafceb1cf636a5L77\n. @js69 , @Corillian , I love both of your PR.\nI have not been able to fully test them but as I first seen,\nthe UI of js69 seems to be more friendly and easy.\n@Corillian seems to have been more deep in the driver installation feature as I understood.\nCould you both mix your pull request to create one great installer ?\n. is it not because Express/Community does not support plugins ?\n. Hi @Corillian ,\n@js69 WiX Installer with your changes has been merged https://github.com/dokan-dev/dokany/commit/943a5d5c6551bc5085317c50d975bd8db55e73ac \nThank you again for your help and your contribution it has been very helpful !\n. Hello,\nCan you give the result of the command:\nhttps://github.com/dokan-dev/dokany/wiki/How-to-Debug-Dokan#crash-report-bsod\n. Hello @Grepsy ,\nSorry for the delay, we will focus on the mountermanager for the next release and it gonna normally fix this issue in the same time.\nDid you was able to reproduce it easily ?\n. The release with the possible fix: https://github.com/dokan-dev/dokany/releases/tag/v1.0.0-BETA1\n. Ah that's a great news ! Thank you for your feedback !\n. :+1: Thank you @Corillian !\n. https://github.com/dokan-dev/dokany/compare/v0.8.0-RC4...v0.8.0\nDoes Unmounted is called with 0.8.0 Final ?\n. Surprising, can you try the C# sample ?\n. @js69 DispatchUnmount was a dead code. IRP_MJ_SHUTDOWN was never send from dokan sys to dokan.dll.\nSo you say that process detach is never called with environment.exit? \nOtherwise even if unmounted is not called. I don't think it is the reason that you still get the process running.\n. Can you try to rebuild the dokan.dll, remove https://github.com/dokan-dev/dokany/blob/master/dokan/dokan.c#L659 and see if fix your issue ?\n. I was able to reprocude it with the mirror\n```\nMirror mirror = new Mirror(\"C:\");\nThread workerThread = new Thread(() =>\n{\n    mirror.Mount(\"n:\\\", DokanOptions.DebugMode, 5);\n});\nworkerThread.Start();\nThread.Sleep(1000);\nEnvironment.Exit(0);\n```\nhttps://github.com/dokan-dev/dokany/blob/master/dokan/dokan.c#L663\nUnmounted seems to block the process. C# API is not called...\n. In C#, the object seems to no longer be here during DLL_PROCESS_DETACH.\nI think this part of the code should be removed. Anyway if a application exit, is should clean the resource before.\n. :+1: @Maxhy, @js69\n@Paragon-Software-Group, @SteamDragon, @feoff3, @kontlex, can you enlighten us if Paragon/dokan 0.6.0 is modified version of dokan 0.6.0 ?\n. Hi @andreyloktev, @feoff3 ,\nThank you for your answers ! \nIt would be great that dokany get the improvement that you made.\nI would be interesting to see the fix of \"MirrortUnmount is not called\". We have made some changes in the 0.8.0 but I think it can be improved.\nAbout several versions of Dokan cohabiting on the same system, I agree with @marinkobabic.\nSo what we have to do (if everyone agree):\n- Add version in dokan driver like dokan-0.8.sys (without minor version since major are used when compatibility is break)\n- Move install folder Dokan\\DokanLibrary to Dokan\\DokanLibrary-{version}\n- Add version to service name\n- Add version to pipe name and other constant in the driver\nEdit:\n- Add version in dokan.dll like dokan-0.8.0.dll ( @marinkobabic answer)\nI also question myself about dokannp.dll and dokan.dll in system32. Do we add version in the name also ?\nOr even, does they really need to be there ? should we just not keep them in the install directory ? About dokan.dll, the software will anyway embedded his own dll no ?\n. If we move to semantic versioning, we should therefore move to a Dokan 1.0.0 at least.\n. Thank you a lot @andreyloktev !\nWe will look into your changes :+1: when we can \n. Great @js69 !\nAbout using the same naming for all files, I agree for the dll but for the kernel, I think we should only use the MAJOR version.\nMAJOR version is used when incompatible API changes. Therefore, it mean that a dokan-1.6.dll can work with dokan-1.sys. Or even if someone update the dokan sys, all application with the same major version will  continue to work.\n. The service has been removed with the mountmanager feature https://github.com/dokan-dev/dokany/commit/c4a0ae2c8620cdbeeb4c6b0297e983d4eb7a711a https://github.com/dokan-dev/dokany/issues/50  so there is no more problem about it :smiley: \nUpdate: So what we have to do (if everyone agree):\n- [x] We move to Semantic Versioning - Therefore dokan next release have to be 1.0.0\n- [x] Add MAJOR version in dokan driver & dll like dokan-1.sys dokan-1.dll dokanfuse-1.dll\n- [x] Add full version into dll resources MAJOR.MINOR.PATCH\n- [x] Move install folder Dokan\\DokanLibrary to Dokan\\DokanLibrary-{version}\n- [x] Do not install dokan.dll into system32 anymore - Application embedded there own dokan dll\n- [x] Add MAJOR version to pipe name and other constant in the driver\n- [x] Add MAJOR version to driver service\n- [ ] Move dokannp to install folder (will need to also change registry)\nUsing only MAJOR version of the driver and the pipe name, it will give the ability to an application using an older dokan.dll but same MAJOR version enjoy the driver fix. By simply installing the new dokan.\nThis is my point of view but seems for me a good flexibility.\nEdit: Already moved to semantic versioning https://github.com/dokan-dev/dokany/commit/662cb4b68da175046fa74dacc94858ce295f11cf and adding MAJOR version into constant driver and pipe but I still have not changed dll name and such.\n. @Corillian Oh ok I see ! So yes the the MAJOR version has to be in the driver service name (added to my list). About your question with the communication between user-mode DLL and filesystem, they use DOKAN_GLOBAL_DEVICE_NAME to 'communicate'.\nFor exemple in the last commit I added the MAJOR version in the dll and kernel https://github.com/dokan-dev/dokany/commit/662cb4b68da175046fa74dacc94858ce295f11cf#diff-059764d049d447be862f6329b2c10bb7L31. It already mean that the new dokan.dll 1.0.0 is no longer able to request a mount from the 0.8.0 dokan.sys.\n. Version has been made here: https://github.com/dokan-dev/dokany/commit/78b94934eb6a9e1eaea7db358959fe8bb0473126\nI would like some feedback about it (see if everything work for everyone, if some part can be improved...)\nThere is just the dokannp.dll that I didn't moved from system folder to the install folder.\n. Yes !\nOr you can directly use the branch I made with the changes: https://github.com/dokan-dev/dokan-dotnet/tree/1.0.0\n. Yes, we will keep compatibility with 0.8.0 API.\nYou will just need to change dokan library link name from dokan.dll to dokan-1.dll and embedded it to your installer.\nhttps://github.com/dokan-dev/dokany/releases/tag/v1.0.0-BETA1 Release does not contain the changes made from this issue.\n. Dokan is now able to be install beside Dokan legacy.\n https://github.com/dokan-dev/dokany/releases/tag/v1.0.0-RC1\nThanks all of you for your input/suggestion and moreover your help :heart: !\n. We made the choice to remove it from system32 for forcing application to embedded the dll.\nWe have changed our mind and since there is no issue to have dlls in system32 when application embedded it. We are going to put them back in it and give the choice to the devs.\n. Hello @toksaitov ,\nThank you for your pull request ! \nAlways great to see people using the FUSE API !\nAbout https://github.com/toksaitov/dokany/commit/030fcf791e8e830ce1b98072f6428da7c4fcaa2a, it is great that you have add it ! \nAccording to Windows development documentation for the\n`CreateFile` function, for a similar case with a disposition set to\n`FILE_CREATE`, we have to set the last error to `ERROR_FILE_EXISTS`.\nThis is currently not handle :smiley: but I will add it.\nAccording to Windows development documentation for the `CreateFile` function, in\ncase a call to `CreateFile` with a `CreateDisposition` set to `FILE_OPEN` or\n`FILE_OVERWRITE` can\u2019t find a file to open or truncate, we have to set the last\nerror to `ERROR_FILE_NOT_FOUND `.\nWe are always setting FILE_DOES_NOT_EXIST in case of createfile error. https://github.com/dokan-dev/dokany/blob/master/dokan/create.c#L219\nI will look if this have to be changed.\nFor https://github.com/toksaitov/dokany/commit/3f2f5de91554802c3bf4c27c5c01cc7e76b45e7d, could you show me the ReactOS code ? I have no fuse sample so I will trust you on this.\nhttps://github.com/toksaitov/dokany/commit/566ff428631162d25322a32c82ef88290b09a0fe#diff-a8f32b6fd8169cac1606e8d8b0f497c1R400 Does calling delete during createfile is the correct workflow for FUSE ?\nVery great PR ! Otherwise than dokan_fuse issue, did you had to change a lot of your fuse driver to make it work with dokan ?\n. Thank @toksaitov for your answer, it is more clear!\nI will look later for making dokan handle the new setlasterror that you have added.\nI am ready to accept your PR as it is. But as requested by @Maxhy, it would be very great if you could add a fuse mirror sample :heart: to your PR.\n. That's a good news @toksaitov ! Can't wait to see it :) !\n. Just for information @toksaitov , I checked dokan code about SetLastError. We only use the value for OPEN_ALWAYS & CREATE_ALWAYS. Otherwise the value is even not used BUT the kernel is correctly notified for the different case as described in the createfile documentation.\nSo SetLastError(ERROR_FILE_EXISTS); and SetLastError(ERROR_FILE_NOT_FOUND); are not used.\n. hi @js69 ,\nHave you made the test it with the C mirror also ?\nC# mirror is kind of very simple so there could be some mistakes.\n. I have been able to reproduce the issue that you describe but didn't find the reason for now :cry: \nxcopy return a error but the copy has been made.\nYou can have the debug information by adding the stdoutput flag and set the thread to 1 (less flood)\nmirror.Mount(\"n:\\\\\", DokanOptions.DebugMode | DokanOptions.StderrOutput, 1);\n. @js69 Yes I was thinking the same but had no time to do something that work. It would be nice if you can PR a fix for it \u2764\ufe0f\n. You was right, adding \".\" and \"..\" fixed the problem for me.\nCould you tell me it worked for you too ?\n. Do you have an example of executables that create such behaviour that I can test ?\n. Can you reclone the repository and retry the branch. An old branch with the same name was existing some days ago. (you probably link to the old branch)\nI just tested and the installer work.\n. Ok !\nJust pull the branch, I commit a BSOD fix some minutes ago :D\n. @js69 I have reproced your issue. I made it work by launching it from a cmd.exe with admin rights.\n. Yes, I can just say that it is not a dokan issue but more a behaviour in the mirror.exe that is wrongly handled for this case since by command line with admin rights it work. (Explorer run as current user)\n. @js69, The BufferOverflow is normal and also happen in the mirror.exe.\nThe system call GetFileSecurity with a buffer of length 0. It is offen made by the system to get the buffer LengthNeeded. (You can see that he call after with a buffer size correct)\nOtherwise I do not know what is happening. I see that the security informations requested are different from the admin to the user.\nBUT If you set GetFileSecurity to return STATUS_NOT_IMPLEMENTED, the same behaviour happen. Admin OK - User Error.\nTherefore I would say that GetFileSecurity is working but it is another call that the system dont like.\nI have not really the time to look on it with the mountmanager branch that need to be finished, if someone could look at this it would be great !\n. Hi @marinkobabic ,\nI tested https://technet.microsoft.com/en-us/library/ee844140(v=ws.10).aspx  and got the same behaviour.\nnotepad iview441g_x64_setup.exe:Zone.Identifier\nGive me:\n[ZoneTransfer]\nAppZoneId=4\n```\n\nStreams -d -s .\n\nStreams v1.56 - Enumerate alternate NTFS data streams\nCopyright (C) 1999-2007 Mark Russinovich\nSysinternals - www.sysinternals.com\nC:\\Users\\liryna\\Desktop\\iview441g_x64_setup.exe:\n   Deleted :Zone.Identifier:$DATA\n```\n```\n\ndir /R iview441g_x64_setup.exe\n Volume in drive M is DOKAN\n Volume Serial Number is 1983-1116\n\nDirectory of M:\\liryna\\Desktop\n01/09/2016  10:56 PM         3,617,120 iview441g_x64_setup.exe\n               1 File(s)      3,617,120 bytes\n               0 Dir(s)     536,870,912 bytes free\n```\nI tried to start it but unfortunately the behaviour is the same :cry: \n. Oh @marinkobabic :kissing: !!!\nIt work perfectly :smile: Funny that is it so 'simple'.\nShould we rename the FileSystemNameBuffer to FAT in the mirror by default ?\nAnd also in dokan.dll https://github.com/dokan-dev/dokany/blob/15343707589097d1b6941946506a5b9dac5d4eda/dokan/volume.c#L51\n. Ok perfect !\nSo I have restore the old DokanStopEventNotificationThread and added the ASSERT(KeGetCurrentIrql() <= APC_LEVEL);.\nAfter a couple of mount / unmount, the condition seems to be alright. No bsod made by the assert.\nEdit: I have try to kill the mirror during big load / fast mount / unmount. Otherwise that device take more time to disappear, I have no crash.\n. Never had this behaviour :open_mouth: Now that you say it, I agree that it can be possible but it also mean that you have a very slow computer.\nFor me, it is not a problem that having dokan that block all the time that it is mount. But If we can make it easily non-blocking, I am not against it.\n. @marinkobabic , I have restore old code for now https://github.com/dokan-dev/dokany/commit/b458284013bc8262d18ef98bef80e8ea27c3b76b\nDo you still think there is a possibility of BSOD with this code ?\n. Ok I will do that !\nDoes DokanStopCheckThread should also be restore ?\n. Done: https://github.com/dokan-dev/dokany/commit/f1312b70d8f705836ee6046d3d006a9f1d36d208\n. Oh thats interesting ! I was not aware of it!\nMaybe this is even the reason why Dinesh Ramalingam had an issue to install \nhttps://groups.google.com/forum/#!topic/dokan/ngQOghks5g4\nTherefore I agree with you, The next WiX installer should be able to check it.\nmay be easier to check for and install this through Windows Update Do you mean that WiX can launch the install of it from the Windows Update ?\n. :+1: After WiX installer merged, we have to find a solution for it before releasing it.\nI hope I get time to review js69 pull request this weekend. Since you have more knowledge in WiX than me :smiley: do you think to have time to take a look on it ?\n. Oh that would be great !!! :+1: \n. @js69 This seems to be correct according to microsoft information.\nWhat is the size of the installer when everything is embedded ?\n(your branch seems to not be updated :smiley: )\n. I think this will be more simple yes :smile: Microsoft didn't make it well at all \n. You mean Redistribuable Visual C++ from VC 2015 SP1 ?\nWe gave him the direct link so I think he had them.\n. This has been made with @js69 WiX installer.\nhttps://github.com/dokan-dev/dokany/commit/943a5d5c6551bc5085317c50d975bd8db55e73ac\nIt has not been heavily tested but 'should' work.\n. You seems to be right @Corillian \nhttp://wixtoolset.org/documentation/manual/v3/howtos/redistributables_and_install_checks/block_install_on_os.html\nVersionNT is a interger and it should be changed.\nhttps://msdn.microsoft.com/en-us/library/windows/desktop/aa370556%28v=vs.85%29.aspx\n. @archenroot  What happen when you install VC++ 2015 x64 Runtime ? any error message ?. @JokerQyou This is strange because both check for x64 and x86 are the same about the version \nhttps://github.com/dokan-dev/dokany/blob/master/dokan_wix/Dokan_x86.wxs#L124\nhttps://github.com/dokan-dev/dokany/blob/master/dokan_wix/Dokan_x64.wxs#L135-L136. I think this issue should be done for 1.0.0 to fix stability issue when Antivirus (or else) are contacting dokan driver for the new mounted device even if dokan has not finished to create it and this create BSOD.\nMessage from @marinkobabic \n```\nI have installed Windows 7 x64 and I have been able to reproduce lot of various BSODs running your code. Then I tried to fix each of them. After a lot of time I have realized what is there going on and that it makes definitely no sense to fix the BSODs at this point. Before fixing any of the BSODs the driver must be redesigned the following way:\nWhen usermode is doing a mount, the code should not return until the mount is really finished. Actually the device is created, mounting is in progress and during this process the device is deleted which causes a lot of problems\nWhen usermode is doing an unmount and the mounting is still in progress, the STATUS_DEVICE_IN_NOT_READY should be returned or the code should wait until the mounting is finished.\nThen we can start to fix the remaining BSODs, if any still there. An device can also be unmounted by the timer automatically and there is the same code executed like we are doing the unmount manually.\nI thing those changes should be done here #136 and one of the tests should be your code above.\n```\nAV Issue reported https://groups.google.com/forum/#!msg/dokan/7ahNxJ7XNOI/52bTIV-HEQAJ\n. Impossible to reproduce with new dokan version. Even while opening > 50 photo applications at the same time.\n. @js69 After \"Success\" it never go out ?\nIt is probably a FCB unlock missing somewhere. Can you just try with the 792 ? https://ci.appveyor.com/project/Maxhy/dokany/build/1.0.1-792/job/ngmqqek5m92mrdx6/artifacts\nThere is a unlock that has been added.\nIf it still dont work, can you open another issue and I will look into it \ud83d\udc4d \n. This error is happening in the driver.\nCan you enabled kernel logs and look what is happening here: https://github.com/dokan-dev/dokany/blob/15343707589097d1b6941946506a5b9dac5d4eda/sys/access.c#L24  ?\nThis code has not changed with the release. Look if you have clean well the 0.8.0.\n. This is the user mode logs. See https://github.com/dokan-dev/dokany/wiki/How-to-Debug-Dokan#enable-logs for kernel logs.\nAttempting to add SE_SECURITY_NAME privilege to process token this is a normal output.\nhttps://github.com/dokan-dev/dokany/blob/c4a0ae2c8620cdbeeb4c6b0297e983d4eb7a711a/dokan_mirror/mirror.c#L147\nDoes that mean it sometimes work ?\nClean all #{... from HKEY_LOCAL_MACHINE\\SYSTEM\\MountedDevices\n. Ok, feel free to reopen if you have more informations.\n. Can you access it from shell ?\nIf you kill explorer and relaunch it, does it appear ?\n. Ok I see what is happening for you.\nWe are possibily fixing this behaviour in another pull request.\nhttps://github.com/dokan-dev/dokany/pull/141\nExplorer is not notified of the new mount.\nThis should make it work: https://github.com/dokan-dev/dokany/pull/141/files#diff-0d281a5a20ad484e35eb5d133d0af346R162\n. Thank you @BoRiSGz you are right this should not be change by us !\nAbout your changes, I guess the second parameter of RtlStringCbCopyW should be Vpb->VolumeLabelLength and param DiskDevice can be remove.\nHowever your pull request breaks dokan so I cannot accept it as it is. It make the device mount->unmont instantly.\n@Maxhy has already try this changes and moved DokanInitVpb in IRP_MN_MOUNT_VOLUME but face the same issue of instant unmount.\nIf you have an idea @BoRiSGz why this is happening, it would be very helpful !\n. Hi @marinkobabic ,\nThank you for your contribution ! This will fix a major issue :+1: \nFirst review:\n- Is it possible that WaitForMount does not exist because the device did'nt mount for a reason ? \n- What happen when IoCreateStreamFileObjectLite`` fail ? Application are just notified and system keep stable ?\n- DoesVolumeFileObjectshould cleaned withObDereferenceObject` ?\nI will test it during my break otherwise.\n. Thank you for the changes and your anwers !\nI have an error with the mirror:\n```\nAttempting to add SE_SECURITY_NAME privilege to process token\nsuccess: privilege already present\nDokan: debug mode on\nDokan: use stderr\ndevice opened\nWaitForMount Ioctl failed for wait with code 1.\nWaitForMount we got different error 0\nmounted: m -> \\Volume{d6cc17c5-1734-4085-bce7-964f1e9f5de9}\nMounted\nIoctl failed for wait with code 1.\nIoctl failed for wait with code 1.\nIoctl failed for wait with code 1.\nIoctl failed for wait with code 1.\nIoctl failed for wait with code 1.\nThread will be terminated\nThread will be terminated\nThread will be terminated\nThread will be terminated\nThread will be terminated\nUnmounted\nunload\nSuccess\n```\nThere is also a build issue with your changes.\n. I am testing on Win10.\nKernel logs: http://pastebin.com/sr8WPADN\nThe device is 'here' but the mirror is not connected to it.\nMaybe it come from the fix I had to make to build it.\nhttps://github.com/dokan-dev/dokany/pull/141/files#diff-274947e5f66fdb61ecebf171c9967e28R391 Unknow NT_STATUS -> I changed to NT_SUCCESS\nEdit: IRP_MN_MOUNT_VOLUME is not called so It don't come from my changes\n. :anguished: Oh \nHere is with mount manager option (I have the same behaviour):\n```\n\nmirror.exe /r C:\\Users /l m /g /d /s\n\nAttempting to add SE_SECURITY_NAME privilege to process token\nsuccess: privilege already present\nDokan: debug mode on\nDokan: use stderr\ndevice opened\nWaitForMount Ioctl failed for wait with code 1.\nmounted: m -> \\Volume{d6cc17c5-1737-4085-bce7-964f1e9f5de9}\nMounted\nIoctl failed for wait with code 1.\nThread will be terminated\nIoctl failed for wait with code 1.\nThread will be terminated\nIoctl failed for wait with code 1.\nIoctl failed for wait with code 1.\nIoctl failed for wait with code 1.\nThread will be terminated\nThread will be terminated\nThread will be terminated\nUnmounted\nunload\nSuccess\n```\n(I have build your last commit)\nKernel logs: http://pastebin.com/HgNJG16Y\n. I made the test without mount manager with your changes @marinkobabic .\nThe mount is extramly slow but ping seems to work !\nThe disk appear in the first seconds but he is inaccessible. None of the calls are forwarded to the mirror during the first 12 seconds.\nIn the kernel logs there 12 secondes without logs at line 51/52 even if I refresh explorer without stopping.\nKernel logs: http://pastebin.com/rpP72HR8\nMirror:\n```\nC:\\Users\\liryna\\Desktop\\dokany2\\x64\\Win10 Debug>mirror.exe /r C:\\Users /l m /d /s\nAttempting to add SE_SECURITY_NAME privilege to process token\nsuccess: privilege already present\nDokan: debug mode on\nDokan: use stderr\ndevice opened\nmounted: m -> \\Volume{d6cc17c5-1735-4085-bce7-964f1e9f5de9}\nMounted\n------------------------->Wait 12 secondes<------------------------\nCreate 0000\nCreate 0000\nQueryVolumeInfo -001\nQueryVolumeInfo -001\nQueryVolumeInfo -001\nCreate 0002\nCreateFile : C:\\Users\\\nCreateFile : C:\\Users\\\nCreateFile : C:\\Users\\\n  AccountName: liryna, DomainName: DESKTOP-RBPTIQA\n  AccountName: liryna, DomainName: DESKTOP-RBPTIQA\n        ShareMode = 0x0\n        AccessMode = 0x100000\n        SYNCHRONIZE\n        FlagsAndAttributes = 0x2000000\n        FILE_FLAG_BACKUP_SEMANTICS\n        ShareMode = 0x7\n        FILE_SHARE_READ\n        FILE_SHARE_WRITE\n        FILE_SHARE_DELETE\n        OPEN_EXISTING\n    AccessMode = 0x80\n    FILE_READ_ATTRIBUTES\n\nAccountName: liryna, DomainName: DESKTOP-RBPTIQA\n...\n```\n. Thank you @marinkobabic for your contribution as always ! Very glad to have you with us !\nDo you have an idea how to fix the network driver mount ? Or even a patch :smiley: ?\n. Search for dokan.dll or dokan.sys in the system32.\nI think you will find dokan.sys.\nRemove it and it should be alright.\n. Oh yes sorry I forgot it >< and already removed, I cannot upload it back.\nAre you sure it is not in the Prog x68\\Dokan\\DokanLibrary\\lib ?\n. @acavalheiro Hi, \nThis is a know issue, pdf reader work but edge have some issues. \nCould you share your test code? I will try to reproduce it and see what is happening. \nOtherwise did you test with the mirror C? Did it worked?\n. Logs would be great yes.\nOr if you can provide a small code that reproduce read a file directly from a filestream it hangs ups.. It would be great !\n. Just to be sure,\nDo you say that an external software reading a file in dokan device with \nvar file = new FileStream(path, FileMode.Open, FileAccess.Read, FileShare.Read);\nit will not work but with:\nMemoryStream fileStream = new MemoryStream() using (var file = new FileStream(path, FileMode.Open, FileAccess.Read, FileShare.Read)) file.CopyTo(fileStream)\nIt will work ?\n. @acavalheiro , I have tested you example with the C mirror and I get proper calls:\n```\nvar file = new FileStream(path, FileMode.Open, FileAccess.Read, FileShare.Read);\nvar buffer = new byte[10000];\nint readed = file.Read(buffer, 0, 10000);\n//readed = 10000\n....\nCreate 0011\nCreateFile : C:\\Users\\liryna\\Desktop\\test\\pdf\\plaquette_de_presentation_sfa.pdf\n  AccountName: liryna, DomainName: DESKTOP-RBPTIQA\n        ShareMode = 0x1\n        FILE_SHARE_READ\n        AccessMode = 0x120089\n        FILE_READ_DATA\n        FILE_READ_ATTRIBUTES\n        FILE_READ_EA\n        READ_CONTROL\n        SYNCHRONIZE\n        STANDARD_RIGHTS_READ\n        STANDARD_RIGHTS_WRITE\n        STANDARD_RIGHTS_EXECUTE\n        FlagsAndAttributes = 0x0\n        OPEN_EXISTING\nCreateFile status = 0 - lastError = 0\nRead 0011\nReadFile : C:\\Users\\liryna\\Desktop\\test\\pdf\\plaquette_de_presentation_sfa.pdf\n        read 10000, offset 0\n```\n```\nMemoryStream fileStream = new MemoryStream();\n using (var file = new FileStream(path, FileMode.Open, FileAccess.Read, FileShare.Read))\n{\n  file.CopyTo(fileStream);\n}\n// file.Length = 396315\n....\nCreate 0009\nCreateFile : C:\\Users\\liryna\\Desktop\\test\\pdf\\plaquette_de_presentation_sfa.pdf\n  AccountName: liryna, DomainName: DESKTOP-RBPTIQA\n        ShareMode = 0x1\n        FILE_SHARE_READ\n        AccessMode = 0x120089\n        FILE_READ_DATA\n        FILE_READ_ATTRIBUTES\n        FILE_READ_EA\n        READ_CONTROL\n        SYNCHRONIZE\n        STANDARD_RIGHTS_READ\n        STANDARD_RIGHTS_WRITE\n        STANDARD_RIGHTS_EXECUTE\n        FlagsAndAttributes = 0x0\n        OPEN_EXISTING\nCreateFile status = 0 - lastError = 0\nRead 0009\nReadFile : C:\\Users\\liryna\\Desktop\\test\\pdf\\plaquette_de_presentation_sfa.pdf\n        read 81920, offset 0\nRead 0009\nReadFile : C:\\Users\\liryna\\Desktop\\test\\pdf\\plaquette_de_presentation_sfa.pdf\n        read 81920, offset 81920\nRead 0009\nReadFile : C:\\Users\\liryna\\Desktop\\test\\pdf\\plaquette_de_presentation_sfa.pdf\n        read 81920, offset 163840\nRead 0009\nReadFile : C:\\Users\\liryna\\Desktop\\test\\pdf\\plaquette_de_presentation_sfa.pdf\n        read 81920, offset 245760\nRead 0009\nReadFile : C:\\Users\\liryna\\Desktop\\test\\pdf\\plaquette_de_presentation_sfa.pdf\n        read 68635, offset 327680\nRead 0009\nReadFile : C:\\Users\\liryna\\Desktop\\test\\pdf\\plaquette_de_presentation_sfa.pdf\n        read 0, offset 396315\nGetFileInfo 0009\nGetFileInfo : C:\\Users\\liryna\\Desktop\\test\\pdf\\plaquette_de_presentation_sfa.pdf\n        GetFileInformationByHandle success, file size = 396315\n```\nCould you give the full code of your test that fail in dokan Mirror ?\n. Feel free to reopen if you have new informations.\n. Hi @MarkR1 ,\nIt would question should be more in the dokan google group but I will answer it\nYes, this is possible but you will have to do it in your user land code (your proxy exe).\nWhen you open Document.pdf in your dokan Virtual Device mounted by the 'proxy exe', you will get a request of ReadFile that request to fill a buffer with specific size.\nThis buffer can contain what ever you want, in your case it can be data that you got from local file or to a remote \nDoes this answer your request ?\n. Humm this behaviour of an external .exe is not possible as I know.\nI am often getting timeouts reading files that are several mb's.\nDid you try to use DokanResetTimeout during such request ?\n. IRP_MJ_QUERY_VOLUME_INFORMATION does not provide, like IRP_MJ_CREATE, a SecurityContext with user request information.\nSee https://github.com/dokan-dev/dokany/blob/master/sys/access.c#L86\n. I guess your goal is to totally hide the volume to some users. This have to be done in another way.\nFor now dokany mount the device in global for all the system, this should be changed.\nSee TODO Add option for normal user to mount device as Global\nhttps://github.com/dokan-dev/dokany/issues/45\nYour request is kind of related to it.\n. @taruti \nThey are talking about it in the same time here:\nhttps://github.com/dokan-dev/dokany/pull/141#issuecomment-177520984\n. @taruti , there is now a new dokan option DOKAN_OPTION_CURRENT_SESSION\nIt make the device only available for the current session.\nhttps://github.com/dokan-dev/dokany/commit/3083fdda2e04d8fc798a7d6cb9eafceafa8bdbaa\n. Hi @marinkobabic ,\nI am looking for changing the most ExAllocatePool in the kernel driver by LookasideList.\nFor now I have only found the struct DokanCCB and DokanFCB allocated every CreateFile.\nhttps://github.com/dokan-dev/dokany/blob/4ec77fd4d4aa149910a02cd8d4b8c9b0daa92ceb/sys/create.c#L202\nhttps://github.com/dokan-dev/dokany/blob/4ec77fd4d4aa149910a02cd8d4b8c9b0daa92ceb/sys/create.c#L30\nDo you have any suggestion of ExAllocatePool that we should replace by LookasideList ?\n. Thank you @marinkobabic :heart: \nIt is done with https://github.com/dokan-dev/dokany/commit/26b9652e7b9435910227f0473bd6ca8cd28c99c3\n. SL_OPEN_TARGET_DIRECTORY fixed by https://github.com/dokan-dev/dokany/pull/273\n. SL_CASE_SENSITIVE is now handle on kernel side https://github.com/dokan-dev/dokany/commit/43645604556714cb586cf00127bb1f447ceba9f7\n. Done with https://github.com/dokan-dev/dokany/commit/ccd2043aebac799b592fc98fb799877e3d4b5a06\n. Duplicate with https://github.com/dokan-dev/dokany/issues/62 :disappointed: \n. DokanCheckShareAccess has been fixed and enabled. It seems to work with issues but more testing should be done to be sure that all cases are handled.\n. IFSTest ShareAccessTest pass \ud83d\udc4d all seems to be good !. Hi @accorp,\nThank you for your pull request !\nI understand in which case this fix could be useful but,\nis it not 'strange' that the FindFilesWithPattern would be implemented and return STATUS_NOT_IMPLEMENTED ?\nDid you faced it ?\n. Ok that make it more clean :+1: \nThanks for the clear answer !\nIt even looks more as how we use EnumerateNamedStreams in .NET as you say.\nI have also add a ticket for the Dokan.NET wrapper FindFilesWithPattern that is missing for now.\nhttps://github.com/dokan-dev/dokan-dotnet/issues/60\n. Same issue as https://github.com/dokan-dev/dokan-dotnet/issues/52\nI have been able to reproduce the issue but I cannot find the reason for it.\nIf you can see what could be the source of it would be nice !\n. It seems that the issue only happen with a specific 'zoom'.\nAlso It looks like the file cannot be open with paint.\nThere is a request to that I have fake implemented:\nhttps://github.com/dokan-dev/dokany/commit/afaf3569e96d0da4f21a3141a93a3f3cb70f2daa\nBut now he request FileRemoteProtocolInformation & FileStandardLinkInformation that probably need to be implemented to fix this issue.\n. :disappointed: I had to test before.\n. From what I see in the logs, it seems that explorer begin to read the file for the thumbnail but stop it for a reason that we have to find.\nThere is a lot of request to GetFileInfo, so probably it come from there.\n(probably FileNetworkOpenInformation)\n. Humm I just made a change https://github.com/dokan-dev/dokany/commit/8def16d6b0efed1c24f026d0b0b713dfd82039ca that could speed up if you was browsing a big folder.\nOtherwise If it change nothing, it would be interesting to bench with and without oplock.\n. Hi @accorp ,\nThank you again for your contributions !\nYou changes seems to be correct and I like the idea that all functions can return STATUS_NOT_IMPLEMENTED (even if should not :smile: ).\nAbout DokanSetAllocationInformation, I agree with you, this should be rewrite. Can add it to your PR?\n. hi @accorp ,\nYes, I think this is the normal behaviour that should be for SetAllocation!\nThank you again for you contribution !\n(I have failed my merge :cry: so I had to commit your changes myself https://github.com/dokan-dev/dokany/commit/a87dddd0e69051f99ce0d4c54efa7165f79ffc7b sorry for it)\n. Hi @Driim ,\nThat's a good initiative !\nThis function exist into dokan_fuse but they don't seems to be exported.\nCould you look with http://www.dependencywalker.com/ the exported fonctions ?\n. Ok thank you,\nI am going to add this functions to the .def file. Is it alright for you ?\nutf8_to_wchar_buf_old\nutf8_to_wchar_buf\nwchar_to_utf8_cstr\nunixify\nextract_file_name\nextract_dir_name\nunixTimeToFiletime\nfiletimeToUnixTime\nis_filetime_set\n. Done https://github.com/dokan-dev/dokany/commit/b16cb156b057c6f58537725e0116bbd4dc6ce0f6\nBut you will have to wait next beta for it :disappointed: \n. Hi @marinkobabic ,\nIt is already the case in the NSIS installer but it is right that the changes was made after 1.0.0-BETA1.\nhttps://github.com/dokan-dev/dokany/blob/master/dokan_install/install.nsi#L118\nNext BETA are going to be with the NSIS changes or with WiX installer (both installer handle dokan-1.sys).\nhttps://github.com/dokan-dev/dokany/pull/124\nI am just waiting the the network driver mount fix (https://github.com/dokan-dev/dokany/pull/141#issuecomment-177953501) before releasing a second beta.\n. Hi back :smiley: \nDo you mean without https://github.com/dokan-dev/dokany/pull/130 it work ?\nMy knowledge with fuse are limited so if you could take a look :cry: \n. Oh ! haha ok I understood now :smile: \nWe have change the dokan driver name after 1.0.0-BETA1.\nSo the error you have is because it try to use \\\\.\\Dokan1 device but you have \\\\.\\Dokan device installed.\nI think you should continue with 0.8.0 + patch to not mix version in your system.\nYour issue is going to be fixed by himself next release :smiley: \n. Hi @marinkobabic ,\nI totally agree :smiley: : with you. It was a bad idea to put a -\nEven in the dll, I never seen someone who was doing it.\nI am going to remove it from every name later.\n. Done with https://github.com/dokan-dev/dokany/commit/e9cd1d598707874357b12664cb45c4499a9426a6\n. Hi @marinkobabic ,\nThank you for the pull request!\nI never faced this issue but I can easily imagine what is happening. Your fix seems to be a good solution but I just would like to understand why the use of ((DOKAN_CHECK_INTERVAL + 2000) * 10000) and not directly 1 minute (for ex) ? \n. Alright thank for your clear answer !\nBut ((DOKAN_CHECK_INTERVAL + 2000) * 10000) ->  ((5x1000 + 2000) x 10000) = 70000000 milliseconds -> 70000 seconds, am I wrong ? * 10000 should be remove no ?\n. Ok, I see now :smile: \nThank you @marinkobabic :))\n. Dokan logs are required here. See https://github.com/dokan-dev/dokany/wiki/How-to-Debug-Dokan\nAre you using network device option ?\nCan be linked with https://groups.google.com/forum/#!topic/dokan/genn_4KA7bg\nSee last answers from Lubos Kresta.\n. I also think it is linked to https://github.com/dokan-dev/dokany/issues/154\n. Hey @marinkobabic \nThis work perfectly ! :relaxed: \nYour last contributions have really improved alot dokan and fixed the main issues ! :heart:\nI will try to make a beta2 tomorrow with the new installer since the 1.0.0 have reached all milestones.\n. @marinkobabic I agree with you there is a lot to do !\nBut we can already be proud for having reborn Dokan project and bring him at this level of device implementation !\nAs you seen, I have create different issues related to your todo list :smiley:\nAbout pnp and redirector, could you create issues with somes informations ? (I don't really know what to do)\nThis would give opportunities to contributors to help us.\n. Hi @marinkobabic ,\nI am currently looking for this ticket to integrate it in the 1.0.0.\nI was thinking that DOKAN_SECTOR_SIZE was only used in the library but it seems like in the kernel also...https://github.com/dokan-dev/dokany/blob/e370ff8196a521c8fc56e71f5ec32d5655fe82cc/sys/device.c#L104\nhttps://github.com/dokan-dev/dokany/blob/e370ff8196a521c8fc56e71f5ec32d5655fe82cc/sys/device.c#L232\nFor me the DokanPopulateDiskGeometry and DiskDeviceControl are strange because they use DOKAN_DISK_SIZE that could be incorrect if the user has set his own size.\nDo you think the values should be updated ? for now it don't seems to create an issue :smile: \n. See https://github.com/dokan-dev/dokany/compare/ClusterSizeOption?expand=1 with the current changes\n. Thank you for your input @marinkobabic !\nTherefore I have changed nothing in the kernel.\nThis has been done and can be tested with mirror option by creating a file with 1 byte and observing the real file size changing depending of the value used.\nhttps://github.com/dokan-dev/dokany/commit/4ab27c66142884a54887027874444fa86af38700\n. @Maxhy There is some issue with the oplock branch at the mount and unmount.\nWhen mounting from an admin cmd.exe, the device is not visible (like with the /s option).\nThis is probably related of MountGlobally that has been moved. https://github.com/dokan-dev/dokany/compare/master...oplock#diff-8c36b3beeaf36d353d6fa5cfa7eb5f6eL892\nAlso when I unmount, the device is still in explorer but inaccesible. Therefore it is impossible to mount with the same letter Can't assign a drive letter.\n. @Maxhy mount issue has been correctly fixed Ty !\nBut copie past a file don't work anymore :cry:\n. I wanted to copy df.txt\nMirror logs: http://pastebin.com/FYxqqe7K\nKernel: http://pastebin.com/PC7qvBfQ\n[DokanFS] ==> DokanCreate\n[DokanFS]   ProcessId 2572\n[DokanFS]   FileName:\\liryna\\Desktop\\coucou\\fd.txt\n[DokanFS]    IdType = VCB\n[DokanFS]   IrpSp->Flags = 0\n[DokanFS]    DokanCheckShareAccess failed with 0xc0000043\n[DokanFS]   status = 0xc0000043\n[DokanFS]   status = STATUS_SHARING_VIOLATION\n[DokanFS] <== DokanCreate\n. Hi @matepek ,\nIn the Dokan/Windows logic, the delete should only happen in the cleanup. delete_directory should only check if the directory can be removed.\nhttps://github.com/tresorit/dokany/blob/fix/fuse-deletedirectory/dokan_fuse/src/fusemain.cpp#L404\nThis is never call in your case ?\n@toksaitov since you made the changes with delete directory, does is changes are needed ?\n. Hi @matepek ,\nThis could be the case indeed !\nBut it seems that it could be a context in the case that a opendir exist\nhttps://github.com/dokan-dev/dokany/blob/master/dokan_fuse/src/fusemain.cpp#L120\nhttps://github.com/dokan-dev/dokany/blob/master/dokan_fuse/src/fusemain.cpp#L367\nDo you have an opendir in your test ?\n. From what I see and if we want to keep the logic, we should do something like this:\nif (dokan_file_info->Context\n    || (dokan_file_info->IsDirectory && !ops_.opendir)) { // No context when ops_.opendir is not set\n    if (dokan_file_info->DeleteOnClose) {\n      close_file(file_name, dokan_file_info);\n      if (dokan_file_info->IsDirectory) {\n        do_delete_directory(file_name, dokan_file_info);\n      } else {\n        do_delete_file(file_name, dokan_file_info);\n      }\n    }\n  }\nDo you agree with it ?\nOtherwise: About fuse wrapper, what is the benefit to not implement opendir ?\n. You can update your pull request :)\n(with clean history)\n. Thank you @matepek for your contribution and your time !\n. @g3gg0 Hi g3gg0, \nThis behavior that you describe is made by the windows kernel. \nWe have face the same issue as you during moving file with the dokan fuse wrapper yesterday (with this fix). \nThe wrapper need to be debug to understand what is happening exactly. Workflow of the kernel calls on the file... Etc\n. It is not use that choose when to open/read/close files :smiley: It is the kernel that ask us to do it.\nTo know what is happening wrong in the wrapper. We need to see what is the difference in the calls order and result between the C mirror and with the dokanfuse.\nI think there is something that the dokanfuse handle wrong (for example return error where it should succeed or something like).\n. I don't really have time for it right now :smile: so it gonna take times\nI created an issue related to it: https://github.com/dokan-dev/dokany/issues/178\n. Hi @matepek ,\nThank you for your pull request !\nYou are right, the fuse API was missing this option :smiley: !\n. @shlatchz Dokan dll is no longer installed into system32. You will now need to copie it from the dokan install folder to your runtime folder. (And for your release, to embedded it)\nBut I will probably add it for the mirror in the release.\nSee release note.\n. I made the test on my side and it worked.\nCould you check if you have the rights to user E:\\Temp or even if it really exist ?\nIs it the only one command that don't work for you ?\n. @shlatchz New mirror does not need administration rights be sure that your user have access to the folder.\n. If you kill/restart explorer does it work ?\n. Humm...normally you should not get this behaviour.\nWithout the /o do you have the same behaviour ?\n(Are you sure you have install the RC1 ?)\n. Ok, could you add some logs here:\nhttps://github.com/dokan-dev/dokany/commit/bfc57e716d76ea7c694a64b1ea7d2b67231a436a#diff-08219a05f4fe629d8ee8975f81ac9012R434\nand here:\nhttps://github.com/dokan-dev/dokany/commit/bfc57e716d76ea7c694a64b1ea7d2b67231a436a#diff-08219a05f4fe629d8ee8975f81ac9012R474\nAnd see if everything is working well ?\n(this part of code is made to notify explorer for arrival of new device)\n. @shlatchz , there was a fix after the release of RC1 that could help your issue.\nCan you rebuild the dokan.dll yourself and try with it ?\nIf not, we will needs logs as requested in my last message\n. @shlatchz can you try with one of this installer:\nhttps://drive.google.com/folderview?id=0B3E9tU82h-RMMmh3RkJFamM4WTA&usp=sharing\nRemove previous dokan-1.0.0 RC1 before installing it\n. Done with https://github.com/dokan-dev/dokany/commit/e4ad8dcfcec858e8e934e698fc016569340eae5c\n. Normally old installer should cleanup the dokannp (or it was bugged \ud83d\ude22 )\nI don't think we should clean it in the new installer because this would mean to detect with older version is installed / used and if there is remaining files.\nIf fill that this is mandatory, contributions are very appreciated and I would be glad to help you on this \ud83d\udc4d \n. Hi @marinkobabic,\nThere is no reasons , I just never tought about it :smiley: \nThis would be interesting for handling the version automatically !\nAbout signing, we sign the binary ourself with the bat script in the repository.\nDoes the .cat is really usefull ? we are using Driver directive of WiX\nhttp://wixtoolset.org/documentation/manual/v3/xsd/difxapp/driver.html\n. Hi @marinkobabic ,\nI have add the .inf in the solution as you told.\nhttps://github.com/dokan-dev/dokany/commit/9dec989f43a12c062514d4d14b9445792241cb8e\nNow visual studio correctly set the version automatically.\nThe installer now also embedded the .inf and .cat even if I have not found now how to use them with WiX for installing them.\nEdit found info: https://kobyk.wordpress.com/2008/10/21/installing-filter-drivers-with-difxapp-and-a-wix-v3-msi/\nAbout signing, the visual studio configuration is only local and it is impossible to cross sign sha1/sha2...so I think I will keep my sign script for now :smiley: \n. Done with https://github.com/dokan-dev/dokany/commit/a9e0cff1be23258aff49bf5025421ea8c1da56d3\n. This happen because all installer of this release have the same GUID.\nWhen you run the dbg installer, he think that he is already installed kind of.\nWe can create 4 GUID for normal/Dbg with and without redist installer.\nhttps://github.com/dokan-dev/dokany/blob/master/dokan_wix/version.xml\n. 1.0 RC1 look if dokan1.sys is present in system32/drivers. To be sure that there is no other dokan installation with the same API already installed.\n1.0 beta1 still had the driver named dokan.sys so it has not been detected here.\n. Fixed with https://github.com/dokan-dev/dokany/pull/188 by @js69 !\n. You are right @g3gg0 \nx86 library was missing from the installer x64.\nThis has been added with https://github.com/dokan-dev/dokany/commit/18c344b88bcb679934b1c264a3795645d35f774d\nCould you try with one of the installer if you have any issues ?\nhttps://drive.google.com/folderview?id=0B3E9tU82h-RMMmh3RkJFamM4WTA&usp=sharing \n. @Driim and @g3gg0 thank you for your feedback :+1: \nAbout GUID issue, something has to be found but I have no idea for now.\nBecause even if it has the same GUID, I think it should have propose you to remove and not to install over :(\n. Hi @g3gg0 \nWell found ! :disappointed: How could I missed it.\nFixed with https://github.com/dokan-dev/dokany/commit/3a7f0c1c450523aa67587799db86a208f1fe979e\nThank you !\n. Hi @peci1 ,\nThis is interesting !\nThere could be a link with dokan I agree but we need more information about it to see exactly what is happening.\nDo you think you could find how to reproduce the issue easily ?\n. @peci1 Could you remove the dokan 1.0.0-RC1 you have installed and try with \nhttps://drive.google.com/folderview?id=0B3E9tU82h-RMMmh3RkJFamM4WTA&usp=sharing\nto see if there is a difference.\nThere was a structure not zeromemory. It could probably be the source of the issue you have with the RC\n. @peci1 be sure to remove the old installer and also check if there is no dokan files in C:\\Windows\\System32 and  C:\\Windows\\System32\\drivers\n. @peci1 , Have you been able to make a test ?\n. Hi @peci1 ,\nThank you for your feedback and glad that it fixed your issue.\nThe fix was in the dokan1.dll that's why you needed to remplace it to get the fix.\nIn the 1.0.0, the dokan1.dll was not in the system32 (that's why @dimov-cz had to include it in his installer) but it has been restore with the version you are testing.\n. Hi @Goster ,\nCould you remove the dokan 1.0.0-RC1 you have installed and try with \nhttps://drive.google.com/folderview?id=0B3E9tU82h-RMMmh3RkJFamM4WTA&usp=sharing\nto see if there is a difference.\n. Ok, could you add some logs here:\nhttps://github.com/dokan-dev/dokany/commit/bfc57e716d76ea7c694a64b1ea7d2b67231a436a#diff-08219a05f4fe629d8ee8975f81ac9012R434\nand here:\nhttps://github.com/dokan-dev/dokany/commit/bfc57e716d76ea7c694a64b1ea7d2b67231a436a#diff-08219a05f4fe629d8ee8975f81ac9012R474\n(this part of code is made to notify explorer for arrival of new device)\n. Hi @Matroschker ,\nCould you test it with network option:\nmirror.exe /r c:\\temp /l m /d /s /n\n. @Matroschker your issue seems to be different than other people.\nCould you test this version https://drive.google.com/folderview?id=0B3E9tU82h-RMMmh3RkJFamM4WTA&usp=sharing see if it fix your issue.\n@taruti , what OS are you using ?\n@Goster , I will try to make the test on Win7 also\n. I have not been able to reproduce the issue.\nWe need kernel logs here https://github.com/dokan-dev/dokany/wiki/How-to-Debug-Dokan#enable-logs\n. Thank you @taruti for the logs !\nIt seems that now it request a storage query property that we do not handle.\n[DokanFS]   IOCTL_STORAGE_QUERY_PROPERTY\n[DokanFS]     PropertyStandardQuery Unknown\nThe PropertyStandardQuery requested is StorageAccessAlignmentProperty.\nI don't know if this request is the source of the issue unfortunatly :cry: \n@marinkobabic , what do you think about it ?\n(I have been able to reproduce the issue in local)\n. @taruti @marinkobabic here is a release with your changes https://github.com/dokan-dev/dokany/commit/e370ff8196a521c8fc56e71f5ec32d5655fe82cc\nhttps://drive.google.com/folderview?id=0B3E9tU82h-RMMmh3RkJFamM4WTA&usp=sharing\nIf people who faced the issue could test and bring the log in case of failure it would be great :+1: \n. I still face the issue with my win 7 :disappointed: \nKernel logs at mount:\nhttp://pastebin.com/jGyPSZUY\nKernel logs when try to access it:\nhttp://pastebin.com/x7HG2eqA\nMirror logs:\nhttp://pastebin.com/5BXB5SGX\nKernel logs after explorer reboot and access succeed:\nhttp://pastebin.com/qudV5F4e\nMirror logs:\nhttp://pastebin.com/brJKuw1S\n. We got something here @marinkobabic ! :trophy: \nAt first, I tried with uppercase ... it does not change the issue.\nSo I tested VfdBroadcastLink and it worked !!!\nI also added SHChangeNotify since I have not found if BroadcastSystemMessage does the SHChangeNotify job or not: https://github.com/dokan-dev/dokany/commit/c7a7a0d5401ff1751a879e3dfb5145092e14d90f\nAlso BroadcastSystemMessage use BSM_APPLICATIONS, do you think it is enough or BSM_ALLCOMPONENTS should be use ?\nhttps://msdn.microsoft.com/en-us/library/windows/desktop/ms644952%28v=vs.85%29.aspx\nI made a new release. if @taruti @Goster @Matroschker could test it and give a feedback it would be nice !\nhttps://drive.google.com/folderview?id=0B3E9tU82h-RMMmh3RkJFamM4WTA&usp=sharing\n. Fixed :disappointed: \nIt is the same drive link.\n. @marinkobabic I just made the test and with current session mount flag it does not work :cry: \n. Hi @Matroschker ,\nCould you create another issue with dokan logs (Mirror & Kernel logs from Dbg build DokanSetupDbg.exe).\nhttps://github.com/dokan-dev/dokany/wiki/How-to-Debug-Dokan#enable-logs\nThank you in advance,\n. Oh really ? It always have worked for me on my Windows 10.\n. I remade the test with old and new notification functions.\nWith both code on Windows 10 x64, I see the drive X: appeared without doing something. If I browse the device and quit mirror, the explorer window close automatically as you described. \n. Oh, my bad :(\nSo I did the test with /c and it also work.\n. @marinkobabic From what I see this is right (I only have tested it on win 10 & 7). \nI can only make a test on win8 next week.\n. @marinkobabic I face the issue only on Win7 32bit as far as I can see.\nI tested with the codeproject software that you provided. \n\nmirror.exe /r C:\\Users /l m /d /s /c\nDrive arrived M:\\\nDrive removed M:\\ <-- When I ctrl+c\nSo your software see correctly the device coming and leaving.\n\nBut it still cannot be seen in explorer even if killed.\n. @js69 Did you try with /c option?\n. @marinkobabic \n\nyou type in explorer M:\\ then it works fine?\n\nWindows can't find 'm:\\'\n\nWe are totally sure that this is the only affected os version? Windows 10 x86 and Windows 8.1 x86 work fine?\n\nI do not have other x86 system. Does anyone else could test it ?\n\nThis means that the broadcast is sent properly but the explorer just ignores it. It makes no difference if UAC is turned off?\n\nChange nothing :(\n\nAfter restarting explorer the drive must be there normally. The only reason that it's not there can be that the symbolic link is not created. This can be verified using the WinObj.exe\n\nHe seems to be here:\n\n. @marinkobabic :disappointed: My bad...it was my test that was wrong.\n@accorp made me understood my mistake with mirror and explorer different privileges.\nIt is perfectly working on my Win7 32bit. Mirror run with simple user rights, the explorer see it.\nIf run the mirror and notepad with admin rights, notepad see correctly the device but not explorer as expected.\nThis can be closed and sorry again for the testing failure :cry: \n\n@js69 Other observation: CTRL+C on mirror.exe does not close correctly (with and without parameter /c), it creates an error \"mirror.exe doesn't work anymore\", stderr output shows as last line:\nDokanBroadcastLink: Begin SHChangeNotify\n\nI have the same behaviour with my Win7. See https://github.com/dokan-dev/dokany/blob/c7a7a0d5401ff1751a879e3dfb5145092e14d90f/dokan/mount.c#L454\nI will make some test and probably disable the call for Win7.\n. @accorp , Are you testing on Win 7 x86 ? Do you face the issue with the mirror ?\nFor me it is really SHChangeNotify during removal that it happen. If I remove it I have no issues.\n. hum :cry: Ok I see.\nDo you have the possibilities to attach a debugger to see where the mirror crash ?\n. @g3gg0 , This issue is about rename.\nDo you have a problem with remove ?\nI tested it with the fuse mirror and I was able to remove without problem https://github.com/dokan-dev/dokany/blob/master/samples/fuse_mirror/fusexmp.c\n. The rename function had no issue.\nIt is simply the fuse mirror that use a API version more reasant.\nIt has been fixed by\nhttps://github.com/dokan-dev/dokany/commit/7995c8444802c9625553e321d565d3a67f7e17e5\nThe fuse wrapper should be updated to the new API version. I create another issue related to it.\n@g3gg0 , I think this come from your code yes. I remade the test with the fuse mirror and it worked :cry: If you can reproduce the issue with the fuse mirror feel free to open a new issue.\n. @g3gg0 , I see your point of view and I agree that there is a issue with delete unlink since Windows work differently with the handle.\nHowever, in the fuse documentation it say Optionally open may also return an arbitrary filehandle in the fuse_file_info structure, which will be passed to all file operations.\nhttp://libfuse.github.io/doxygen/structfuse__operations.html\nSo the exemple is not wrong, it is just not using the feature.\nOtherwise I am just wondering if there is not a possibility to get the information that the file is going to be delete and in this case to not open. It would fix the issue.\n. There could be probably some hack to do but I have nothing in mind for now so I added informations in the Wiki about it.\nhttps://github.com/dokan-dev/dokany/wiki/FUSE#rename--remove-issue\n. Hi @kyanha ,\nThis could be an idea but it would mean that all your files can be remove at any moment without any restrictions.\nIf Windows request to not share delete it is probably for a reason most of the cases.\n. @netheril96 In your case (data structures in memory), there is going to be no issue.\nThe FUSE issue only happen when in your implementation: Files cannot be deleted when opened in another request.\n. Hi @jetwhiz ,\nDoes you windows 7 is updated ? Is it a 32bit ?\nCould you look at 'C:\\Windows\\system32\\drivers\\dokan1.sys signature details ? (A screenshot would be nice :smiley: )\nERROR_PROC_NOT_FOUND\n    127 (0x7F)\n    The specified procedure could not be found.\nIt is the first time you try it with Win7 ?\n. Thank you for the informations @jetwhiz \nCould you screen the Digital Signatures window ?\nI am installing a Win7 32bit to test it :smiley: \n. Ok so that's not a sign issue.\nThere should be a problem with the installer. Probably it does not install the correct files.\nI will look into it.\n. After some tests, this is not linked to the installer.\n. After testing on Win7 32bit:\nThe issue with the commit https://github.com/dokan-dev/dokany/commit/c4a0ae2c8620cdbeeb4c6b0297e983d4eb7a711a -> Add Mount Manager support\nThe commit just before https://github.com/dokan-dev/dokany/commit/797d5961f68821bda9c194c6ea77ae70730d5bb2 work perfectly..\nI have not found the source of the issue... @marinkobabic do you have an idea ? The build seems to be correct. Could it be a issue when windows try to 'register' it ?\n. The issue does not happen on Win7 64bit.\nDoes anyone have another Windows 32bit to test it ? It would be interesting to know if it is a 32bit issue.\n. Yes, I made a simple Win7 32-bit install and faced the issue directly.\n. @marinkobabic \n```\n\ndokanctl.exe /i d\nDriver path: 'C:\\Windows\\system32\\drivers\\dokan1.sys'\nInstalling driver...\nDokanServiceInstall: Service (Dokan1) installed\nDokanServiceControl: Failed to start service (Dokan1). error = 127\nDokanServiceInstall: Service (Dokan1) start failed\nDriver install failed\nnet start Dokan1\nSystem error 127 has occurred.\n\nThe specified procedure could not be found.\n```\n. Same behaviour :cry: \nTest on Windows 8 x86 would be interesting indeed !\n. My Win7 does not really like it :smile: \nHe directly reboot on repair mode.\n. I will look to make the changes.\nYou Win8 is x64 or x86 ?\n. :p Ok good to know that it is not all x86\nDo you have any idea what in https://github.com/dokan-dev/dokany/commit/c4a0ae2c8620cdbeeb4c6b0297e983d4eb7a711a could 'break' Win7 32 bit ?\n. @marinkobabic I have been able to get debug logs DriverEntry in the commit https://github.com/dokan-dev/dokany/commit/797d5961f68821bda9c194c6ea77ae70730d5bb2 before https://github.com/dokan-dev/dokany/commit/c4a0ae2c8620cdbeeb4c6b0297e983d4eb7a711a -> Add Mount Manager support\n[DokanFS] ==> DriverEntry ver.190, Feb 23 2016 13:46:36\n[DokanFS] DokanGlobalDevice: \\Device\\Dokan created\n[DokanFS] SymbolicLink: \\Device\\Dokan -> \\DosDevices\\Global\\Dokan created\n[DokanFS] <== DriverEntry\nBut with Add Mount Manager support there is absolutly not logs at all. DriverEntry is even not called.\nI can definitly say that there is something in the sys/ code that make WinXP 32bit unable to call DriverEntry.\n. Ok I found that the issue come from the file device.c in this commit https://github.com/dokan-dev/dokany/commit/c4a0ae2c8620cdbeeb4c6b0297e983d4eb7a711a\nThe change is big but the issue is inside.\n. Ok I will look into it :+1: \n. @marinkobabic  I found the guilty line:\nmemcmp(mountdevName->Name, dcb->MountPoint->Buffer,\n                     mountdevName->NameLength) == 0\nhttps://github.com/dokan-dev/dokany/blob/master/sys/device.c#L538\nIf I remove this memcmp form the if, the driver is correctly installed O_o\nI have no idea why and what to do with it...\n. Done with https://github.com/dokan-dev/dokany/commit/58bc43b0576a2406c2bad3075230283869070c35\n@jetwhiz could you try this release to see if it work for you:\nhttps://drive.google.com/folderview?id=0B3E9tU82h-RMMmh3RkJFamM4WTA&usp=sharing\n. Thank you :smile: ! Had no issue during the install and mirror worked fine ?\n(I have some trouble on my side and special that the mirror crash when I CTRL +C but It can be linked to another issue)\n. Yes I agree !\nAlso I found that, if the installation fail when it was installing the driver, it does not remove the dokan.sys. Is it possible to have a action that always remove it ?\n. @js69 I think it is more my logic to check if dokan1.sys is installed that is wrong https://github.com/dokan-dev/dokany/blob/master/dokan_wix/Dokan_x64.wxs#L68\nIs there any way to 'play' with Product/ Update Codes to have one product by API like that we know that dokan 1 is already installed and therefore we refuse to install ? \n. Hi @jetwhiz ,\nCould you give a example how your software mount ?\nThe service was just here to remember mount point and was source of instability.\nMoreover the mount.exe was only using the dokan.dll api that are still here.\n. @jetwhiz I don't really understand what you are saying. There is more service. Which service are you stopping?\n. @jetwhiz No, it has been removed and the logic code has been moved to the kernel like marinko say. I think your software is using the wrong dll and you are still running with old dokan version. \nBe sure to use dokan1.dll and dokanfuse1.dll\n. Hi @matepek ,\nIt is a error that I have to fix dont worry :smile: \nI will look into your PR when I get the time  !\nThank you !\n. Well it seems to be correct :+1: \nThank you again @matepek for you contributions !!! :trophy: \n. Hi @marinkobabic ,\nThank you for your contribution and for hunting this bug :trophy: !!!\n. @matepek @toksaitov do you now if there is a lot to do for updating it ?\n. Hi @jetwhiz ,\nUnfortunatly this is not related. The rename issue come from how Linux and Windows handle the mechanisme.\nSee for more informations: https://github.com/dokan-dev/dokany/wiki/FUSE#rename--remove-issue\nHere @g3gg0 explained how he made it work: https://github.com/dokan-dev/dokany/issues/178#issuecomment-187881947\n. Good to know @jimtang9527 but wrong place to ask it !\nGoogle group is here for such talks: https://groups.google.com/forum/#!forum/dokan\n. You are using the installer without redist embedded (therefore it will download it) and your system does not have the redist installed.\nHash mismatch for path: C:\\ProgramData\\Package Cache.unverified\\vcredist_2015_x64.exe, expected: 9A19A51D1F40CD5CD5ECB6E4E4F978F18DA8212A, actual: 3155CB0F146B927FCC30647C1A904CD162548C8C\n9A19A51D1F40CD5CD5ECB6E4E4F978F18DA8212A is VC 2015 Update 1 x64\n3155CB0F146B927FCC30647C1A904CD162548C8C is VC 2015  x64 (old version)\n@tbhalla , did you download yourself C:\\Users\\Tarun\\Downloads\\vc_redist.x64.exe ?\nIt seems that he use your vc_redist because it is side by side to the installer. ( @js69 correct me if I am wrong )\n@marinkobabic , about avast issue, do you think this could be reproduce ?\n. Feel free to reopen @tbhalla when you have more informations\n. Hi @js69 ,\nI had a report by mail about this issue from another poeple.\n[10A4:20C4][2016-05-10T09:32:03]i320: Registering bundle dependency provider: {5F030BFA-CE6E-408A-9694-F593B319DBBE}, version: 1.0.0.102\n[10A4:20C4][2016-05-10T09:32:03]i371: Updating session, registration key: SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\{ad6e21e1-1407-4df9-bb4c-573c6005215d}, resume: Active, restart initiated: No, disable resume: No\n[083C:1CFC][2016-05-10T09:32:03]i338: Acquiring package: vcredist_2015_x64.exe, payload: vcredist_2015_x64.exe, copy from: C:\\Users\\MyUser\\Downloads\\vc_redist.x64.exe\n[083C:1CFC][2016-05-10T09:32:03]i000: Setting string variable 'WixBundleLastUsedSource' to value 'C:\\Users\\MyUser\\Downloads\\'\n[10A4:1E88][2016-05-10T09:32:03]e000: Error 0x80091007: Hash mismatch for path: C:\\ProgramData\\Package Cache\\.unverified\\vcredist_2015_x64.exe, expected: 9A19A51D1F40CD5CD5ECB6E4E4F978F18DA8212A, actual: 3155CB0F146B927FCC30647C1A904CD162548C8C\n[10A4:1E88][2016-05-10T09:32:03]e000: Error 0x80091007: Failed to verify hash of payload: vcredist_2015_x64.exe\nDo you think there is something possible to do about it ?\n(The installer that does not embedded redist is looking for the redist in the current folder. If he found a redist with a wrong version (hash) -> there is an error and the installation totally fail)\n. +1 @js69 Thank you for the clear answer ! :heart: \n. @lefty74 Hi,\nWhy did you not just start the install of the redist?\n. The error you face come from Microsoft update the binary installer in the same link so the hash was different that the binary some weeks ago :( \n. @Rondom No :( they even remove old one\n. Sorry :cry: @taruti \nThank you for your contribution !\n. Hi @matepek ,\nThank you for your contribution, very appreciate!\nI see well the behaviour you describe here. I guess there is no equivalent function in FUSE ?\n. Ok :+1:  was just to be sure.\nThank you again for your great work !\n. Did you update you windows 7 ?\nThe drivers are signed SHA1/SHA2, you can see it in the file properties.\n. Yes, Thanks this is what I am talking about.\nThere should be two signature but since your system is not updated it only see the SHA1 that is Microsoft deprecated....since 2016.\n. I question myself about the dokan signature process....\nWe are using SHA2 certificate to sign SHA1 & SHA2.\nI am wondering if we need a SHA1 cert to sign SHA1 and cert SHA2 to sign SHA2.\n@js69 do you know something about it ?\nBecause it is strange that @qaisjp see a mix of SHA1/SHA2.\nOur sign script:\nhttps://github.com/dokan-dev/dokany/blob/master/sign.ps1#L3\n. 0.7.x will work because there was sign SHA1 before 2016.\nThis is a Microsoft limitations, I don't think we can do much with it sorry.\n. It seems that we will need to do it yes. it is really strange that even without this patch it cannot validate the SHA1....\n. @js69 Thank you for the test !\nI think your solution of showing an error on Win7 would be the best solution as you said !\n. Thank you @js69 for you contribution !\nThats is indeed something we need :smile: !\nI will test it as soon as I can :+1: \nOtherwise, do you have an idea how to check well that an already dokan version with the same major API version is installed ?\n. Ok good to know !\nDOKANSYSALREADYINSTALLED is 'working' but when dokan driver install fail, it can happen that dokan1.sys is not removed...so you will get an error that can only be fixed if you removed it by hand.\nIf what you describe is working, we do not need DOKANSYSALREADYINSTALLED. I am going to remove it.\nAbout dokan fork, they will have to change driver name and such to work in parallelle of dokan.\n. It seems you have remove that .cat from the installer in your last commit https://github.com/js69/dokany/commit/686744343aea93f0dc025134af8fdc0b3b20bb78#diff-29b04a548dd83489fcf856ec411749aeL168\n. Hi @js69 ,\nI tested it and it seems to work very well :+1: Well done it gonna be a great help !\nI just have a question about https://github.com/dokan-dev/dokany/pull/188/files#diff-29b04a548dd83489fcf856ec411749aeR28\nI have this during the build This product should remove only o\nlder versions of itself. The Maximum version is not less than the current product. (1.x.x.100 1.x.x.100)\nDoes the restriction work like that:\n- If any dokan version with API 1 is installed -> it propose to uninstall/install ? \n- If you have a Dokan 1 installer and Dokan API 2 already installed -> it accept to install Dokan 1 ?\nIf not, do you think you could include it in your PR ? :heart: \n(Also rebase all commit in one)\n. Ok clear to me !  :relaxed:\nA little rebase of your commit and I merge it :heart: \n. Here is how to rebase all your commit into one:\ngit reset --soft HEAD~7\ngit commit\n. I will merge your pullrequest myself.\nI will tag you in the commit message if thats alright for you.\n. Merged with https://github.com/dokan-dev/dokany/commit/15dfb9a3549891d5ff54cfc9a45c7617997f7c70\nThank you @js69 for your contributions ! very appreciate ! :trophy: \n. what happen if you try to stop it ?\nnet Dokan1 stop\n. @gvonkreisler , please uninstall & remove all binaries that you have installed and build.\nUse the install that Maxhy gave you and test the mirror that has been installed.\nIf it work, use the dokan.dll and header from the installer for your application.\n. Ok, Does your system is fully updated ?\n. If it is not build, WiX will fail.\nIs it possible to make the files optional for WiX ?\n. Build is now disabled if cygwin not installed: https://github.com/dokan-dev/dokany/commit/71301f46b5a555632ef4beaeaefeb93d94cfddbc\nI would prefere that if WiX does not find the files because they was not build, he skip them. It would be more easy to maintaint that another installer/zip.\nI will update the build documentation when we will make the final release. Otherwise there is the appveyor that already have all informations to create the environement.\n. That can be a solution !\nI will take a look and will probably set \"BuildCygwin\" from the build install script.\nThank you @js69 !\n. @js69 I have include your patch in the repository https://github.com/dokan-dev/dokany/commit/5ee8e215b04525abc0f759994354d8f0aeb95bff\nThank you again for your contribution :smiley: \nRC2 is coming soon :+1: \n. :+1: This had to be done long time before.\nThank you @accorp !!!\n. Thank you for your testing @accorp .\nI agree with your observations ! :heart: \nTherefore I will remove it. I just don't know that seems on Win 8/10 it seems that there is no crash, maybe I should just disable it for Win7 ?\nWhat do you think about it ? Have you also only faced the issue on Win7 ?\n. Does you delphi run in a shell as the mirror does ?\n. Yes It has to be a story of timing/call order during the uninit.\nI have remove it for Win7 https://github.com/dokan-dev/dokany/commit/df8e4d5a2dc31c2913c9be133c31bd6784f2aec8\nThank you again @accorp for your input, very appreciate !\n. Hi @accorp ,\nSo If I understood well, even by adding ole32.dll in import table, it is possible that it get unload before we get the change to call SHChangeNotify ?\nOr does adding ole32.dll in import table 'force' to unload at the end of DLL_PROCESS_DETACH ?\n. I begin to think that we should just remove it during remove. We are already lucky to not have the crash in other systems.\nAnd It is so much badly documented....that I cannot say if BroadcastSystemMessage does not already to the SHChangeNotify job.\n. Done with https://github.com/dokan-dev/dokany/commit/cebf6ca1fc4e2b3ed2f7204d5e62b4d4cc992187.\nIf we see users having issue like the device is not removed for explorer or such, we will try to find another way to notify.\n. Hi @x1596357 ,\nThank you for your contribution !\nGood luck for vramfs-on-Windows and feel free to ask for adding it to dokan homepage when it is read ^^\n. Oh ! you succeed to make it build totally ?\nDoes it run properly ?\nI had some issues for building it with msys2 also and had no time to look into it.\n. Hi @csobchuk,\nDo you get the message during the install or when you launch the installer ?\nCan you install: https://www.microsoft.com/en-us/download/details.aspx?id=46078\n. Ok, your description seems to be the same as https://github.com/dokan-dev/dokany/issues/187\nThe update should do the job. Everything in the release is signed, it is only a Windows issue.\n. Hi @Casimir666 ,\nIf I understood well, you are asking Windows to load a VHD device that is inside the mirror device ?\nit seems that you have a CreateFile sharing violation.\n```\nCreate 0008\nCreateFile : c:\\Temp\\1-Empty.vhd\n  AccountName: administrator, DomainName: BM-FOREST\n    ShareMode = 0x1\n    FILE_SHARE_READ\n    AccessMode = 0x120089\n    FILE_READ_DATA\n    FILE_READ_ATTRIBUTES\n    FILE_READ_EA\n    READ_CONTROL\n    SYNCHRONIZE\n    STANDARD_RIGHTS_READ\n    STANDARD_RIGHTS_WRITE\n    STANDARD_RIGHTS_EXECUTE\n    FlagsAndAttributes = 0x20000080\n    FILE_ATTRIBUTE_NORMAL\n    FILE_FLAG_NO_BUFFERING\n    OPEN_EXISTING\nCreateFile status = 0 - lastError = 0\nLock 0007\nLockFile c:\\Temp\\1-Empty.vhd\n    success\nGetFileInfo 0007\nGetFileInfo : c:\\Temp\\1-Empty.vhd\n    GetFileInformationByHandle success, file size = 10486272\nresult =  0\nFileStandardInformation\nDispatchQueryInformation result =  0\n\nGetFileInfo 0007\nGetFileInfo : c:\\Temp\\1-Empty.vhd\n    GetFileInformationByHandle success, file size = 10486272\nresult =  0\nFileStandardInformation\nDispatchQueryInformation result =  0\n\nRead 0007\nReadFile : c:\\Temp\\1-Empty.vhd\n    Byte to read: 512, Byte read 512, offset 10485760\nCleanup 0006\nCleanup: c:\\Temp\\1-Empty.vhd\nClose 0006\nClose: c:\\Temp\\1-Empty.vhd\nCreate 0009\nCreateFile : c:\\Temp\\1-Empty.vhd\n  AccountName: administrator, DomainName: BM-FOREST\n    ShareMode = 0x3\n    FILE_SHARE_READ\n    FILE_SHARE_WRITE\n    AccessMode = 0x12019f\n    FILE_READ_DATA\n    FILE_READ_ATTRIBUTES\n    FILE_READ_EA\n    READ_CONTROL\n    FILE_WRITE_DATA\n    FILE_WRITE_ATTRIBUTES\n    FILE_WRITE_EA\n    FILE_APPEND_DATA\n    SYNCHRONIZE\n    STANDARD_RIGHTS_READ\n    STANDARD_RIGHTS_WRITE\n    STANDARD_RIGHTS_EXECUTE\n    FlagsAndAttributes = 0x80\n    FILE_ATTRIBUTE_NORMAL\n    OPEN_EXISTING\n    error code = 32\nCreateFile status = c0000043 - lastError = 32\n```\nRequest 0008 ask FILE_SHARE_READ and just after request 0009 ask for FILE_SHARE_READ FILE_SHARE_WRITE that is logically denied.\nStrange behaviour from windows to request this.\nCan you try to run the mirror with one thread /t 1 ?\n. I have changed mirror code on my side to always return success for lock/unlock.\nI have helped...until I get a bsod.\nThis can be reproduced easily.\n```\nkd> !analyze -v\n\n\n*\nBugcheck Analysis                                    *\n*\n\n\nPNP_DETECTED_FATAL_ERROR (ca)\nPnP encountered a severe error, either as a result of a problem in a driver or\na problem in PnP itself.  The first argument describes the nature of the\nproblem, the second argument is the address of the PDO.  The other arguments\nvary depending on argument 1.\nArguments:\nArg1: 0000000000000002, Invalid PDO\n    An API which requires a PDO has been called with either an FDO,\n    a PDO which hasn't been initialized yet (returned to PnP in a\n    QueryDeviceRelation/BusRelations), or some random piece of\n    memory.\nArg2: ffffe0001cbf6080, Purported PDO.\nArg3: 0000000000000000, Driver object.\nArg4: 0000000000000000\nDebugging Details:\nADDITIONAL_DEBUG_TEXT:\nYou can run '.symfix; .reload' to try to fix the symbol path and load symbols.\nMODULE_NAME: nt\nFAULTING_MODULE: fffff8035c475000 nt\nDEBUG_FLR_IMAGE_TIMESTAMP:  56cd4410\nBUGCHECK_STR:  0xCA_2\nDEVICE_OBJECT: ffffe0001cbf6080\nDEFAULT_BUCKET_ID:  WIN8_DRIVER_FAULT\nCURRENT_IRQL:  0\nANALYSIS_VERSION: 6.3.9600.17336 (debuggers(dbg).150226-1500) amd64fre\nLAST_CONTROL_TRANSFER:  from fffff8035ca4a88c to fffff8035c5b7760\nSTACK_TEXT:\nffffd000f2f0fa48 fffff8035ca4a88c : 00000000000000ca 0000000000000002 ffffe0001cbf6080 0000000000000000 : nt!KeBugCheckEx\nffffd000f2f0fa50 fffff8035c54d9ba : 0000000000000000 0000000000000000 ffffc000eab3b1f0 ffffe0001cfa7210 : nt!NtVdmControl+0x8f918\nffffd000f2f0fab0 fffff8035c4c66a9 : ffffe0001cfe5040 fffff8035c76aee0 fffff8035c808340 fffff8035c808340 : nt!PsGetCurrentThreadTeb+0x6d2\nffffd000f2f0fb80 fffff8035c558895 : 0069005400090105 0000000000000080 ffffe0001c452700 ffffe0001cfe5040 : nt!CcCopyWriteWontFlush+0xc39\nffffd000f2f0fc10 fffff8035c5bc906 : fffff8035c792180 ffffe0001cfe5040 fffff8035c558854 00010d0200680074 : nt!EtwProviderEnabled+0x1025\nffffd000f2f0fc60 0000000000000000 : ffffd000f2f10000 ffffd000f2f0a000 0000000000000000 0000000000000000 : nt!KeSynchronizeExecution+0x44f6\nSTACK_COMMAND:  kb\nFOLLOWUP_IP: \nnt!NtVdmControl+8f918\nfffff803`5ca4a88c cc              int     3\nSYMBOL_STACK_INDEX:  1\nSYMBOL_NAME:  nt!NtVdmControl+8f918\nFOLLOWUP_NAME:  MachineOwner\nIMAGE_NAME:  ntkrnlmp.exe\nBUCKET_ID:  WRONG_SYMBOLS\nFAILURE_BUCKET_ID:  WRONG_SYMBOLS\nANALYSIS_SOURCE:  KM\nFAILURE_ID_HASH_STRING:  km:wrong_symbols\nFAILURE_ID_HASH:  {70b057e8-2462-896f-28e7-ac72d4d365f8}\nFollowup: MachineOwner\n```\n. Thank you @Casimir666 for noticing the error :smiley: \nChanges has been made https://github.com/dokan-dev/dokany/commit/db2a55587d68776d0920b63e68e89a6e01cfdea4\nAbout your issue, I have no idea for now why does windows is requested this order for lock/unlock.\nDid you try to override createfile calls with full sharing ? To see if after the lock issue it work\n. I have created a sample that does the CreateFile that fail (pointed by @marinkobabic )\nThere is a conflict with FILE_FLAG_NO_BUFFERING and FILE_APPEND_DATA flags.\nIf we remove one of these flags, the CreateFile will succeed.\nWe set FILE_FLAG_NO_BUFFERING when FILE_NO_INTERMEDIATE_BUFFERING is requested by CreateFile Kernel.\nhttps://github.com/dokan-dev/dokany/blob/b84eace71a92fc5e0d4ceda75d986834dff7d415/dokan/dokan.c#L849-L850\nhttps://msdn.microsoft.com/en-us/library/bb432380(v=vs.85).aspx\nFILE_NO_INTERMEDIATE_BUFFERING\nThe file cannot be cached or buffered in a driver's internal buffers. This flag is incompatible with the DesiredAccess FILE_APPEND_DATA flag.\nI have tested to remove FILE_FLAG_NO_BUFFERING and dokan is able to mount VHD without issues at all. I can do whatever I want with the VHD from dokan mounted without issues.\nI have no idea if one of these flags should be removed by dokan driver or does this request should fail with another error.\nFileSpy crash when VHD from C: is attached so hard to see the normal behaviour.\nPing @Corillian\n```\ninclude \ninclude \ninclude \nint main()\n{\n    ACCESS_MASK DesiredAccess = FILE_READ_DATA //FILE_GENERIC_READ\n        | FILE_READ_ATTRIBUTES //FILE_GENERIC_READ\n        | FILE_READ_EA //FILE_GENERIC_READ\n        | READ_CONTROL\n        | FILE_WRITE_DATA //FILE_GENERIC_WRITE\n        | FILE_WRITE_ATTRIBUTES //FILE_GENERIC_WRITE\n        | FILE_WRITE_EA //FILE_GENERIC_WRITE\n        | FILE_APPEND_DATA //FILE_GENERIC_WRITE\n        | SYNCHRONIZE //FILE_GENERIC_READ - FILE_GENERIC_WRITE\n        | STANDARD_RIGHTS_READ //FILE_GENERIC_READ\n        | STANDARD_RIGHTS_WRITE //FILE_GENERIC_WRITE\n        | STANDARD_RIGHTS_EXECUTE;\n// DesiredAccess = 0x12019f; // Mirror create file\n\nHANDLE handle =\n    CreateFile(L\"C:\\\\Users\\\\liryna\\\\Desktop\\\\test.vhd\",\n        DesiredAccess,\n        FILE_SHARE_READ,\n        NULL, // security attribute\n        OPEN_EXISTING,\n        FILE_ATTRIBUTE_NORMAL | FILE_FLAG_NO_BUFFERING, \n        NULL);\n\nif (handle == INVALID_HANDLE_VALUE) {\n    std::cout << \"error code = \" << GetLastError() << std::endl;\n}\nelse {\n    std::cout << \"GOOD\" << std::endl;\n    CloseHandle(handle);\n}\nreturn 0;\n\n}\n```\n. @marinkobabic what software did you used to get output:\nDesired Access: Generic Read/Write\nDisposition: Open\nOptions: No Buffering, Non-Directory File\nAttributes: N\nShareMode: Read\nAllocationSize: n/a\nImpersonating: DESKTOP-3HHOR7G\\liadmin\nFileSpy always crash when I try to get the irp :(\n. Thank you @marinkobabic \nHere is the result of the CreateFile on local NTFS without FILE_FLAG_NO_BUFFERING (otherwise the CreateFile does even not show on ProcessMonitor O_o):\nDesired Access: Generic Read/Write\nDisposition:    Open\nOptions:    Synchronous IO Non-Alert, Non-Directory File\nAttributes: N\nShareMode:  Read\nAllocationSize: n/a\nOpenResult: Opened\nSame with FILE_FLAG_NO_BUFFERING and without FILE_APPEND_DATA\nDesired Access: Generic Read, Write Data/Add File, Write EA, Write Attributes\nDisposition:    Open\nOptions:    No Buffering, Synchronous IO Non-Alert, Non-Directory File\nAttributes: N\nShareMode:  Read\nAllocationSize: n/a\nOpenResult: Opened\nI think our Desired Access is correct since it shows Generic Read/Write like when VHD attach is proceeding.\nMy concern would be on Options param that always have Synchronous IO Non-Alert, I have not been able to make a CreateFile without this option and since I have no other idea...I probably think this additional option is the source of the failure.\nDoes anyone know how to make a CreateFile without Synchronous IO Non-Alert option ?\nMy guess would be that dokan forward the param properly by user land CreateFile is too limited ?\n. pyfs ignore that two flags FILE_FLAG_NO_BUFFERING  and FILE_APPEND_DATA so the issue is not faced.\nMirror can be fixed to mount the VHD by simply removing FILE_FLAG_NO_BUFFERING\nNormally dokany driver should directly return STATUS_INVALID_PARAMETER when there is this two flags like reactos does:\nhttp://code.reactos.org/rdiff/reactos?csid=60045&u&N\nBut when i tried it...the vhd failed to mount becayse or the status.\nThere is discution about this two flags on osronline:\nhttp://www.osronline.com/ShowThread.cfm?link=148297\nIt seems to be normal to return an error when this two flags are present \ud83d\ude22 \n. Ok I think I understood what is happening here.\nWe are using DesiredAccess directly from the IRP_MJ_CREATE.\nThis DesiredAccess has been converted from generic rights (user CreateFile request) to standard rights.\nThe actual mapping of generic rights to standard and specific rights for file objects is defined by the I/O manager. This mapping can be retrieved by a file system using IoGetFileObjectGenericMapping. Normally, this mapping is done during IRP_MJ_CREATE processing by the I/O manager prior to calling the file system. But this might be done by a file system checking security on specific operations (specialized FSCTL operations, for example).\nhttps://msdn.microsoft.com/windows/hardware/drivers/ifs/access-mask\nI think we need to convert back this DesiredAccess to the generic rights (Createfile DesiredAccess).\nSee ZwCreateFile DesiredAccess  mapping https://msdn.microsoft.com/en-us/library/windows/hardware/ff566424(v=vs.85).aspx\nI pushed DokanMapStandardToGenericAccess that convert the DesiredAccess to generic rights and keep other flags https://github.com/dokan-dev/dokany/commit/9197ed333ea2a5e2217ac1690439e66ed668e1ab\nThis fix the issue and does seems to break nothing on my side.\nI would like some input here to be sure I am not doing a mistake \u2764\ufe0f \n@marinkobabic @Rondom @Casimir666 @Corillian\n. Thanks for you feedback @Corillian :+1: \nYes it should be part https://github.com/dokan-dev/dokany/commit/9197ed333ea2a5e2217ac1690439e66ed668e1ab#diff-0d281a5a20ad484e35eb5d133d0af346R839\nBut it would broke compatibility so I am only going to do it in 1.1.0 :heart: \n. I think you made a mistake here @gvonkreisler \n. Hi @gvonkreisler ,\nYes there is a network provider (dokannp1.dll that you can find in system32).\nYou can find the source here: https://github.com/dokan-dev/dokany/blob/master/dokan_np/dokannp.c\nAnd it is registered by: https://github.com/dokan-dev/dokany/blob/master/dokan/mount.c#L242\n(For you informations, since the release you are using, I have changed the code to move dokannp1.dll in the same folder as dokanctl.exe that why the path is taken by GetModuleFileName)\nIt is a very simple implementation just made to have the device as 'Connected' (that it seems to not working in your case).\n. :+1: @marinkobabic Thank you it work perfectly with Dokan1 as you told.\nDone with https://github.com/dokan-dev/dokany/commit/0c7f85a15bced8b42b7d1c6a9d92e95f955e5d85\nI think it was my mistake when I have updated the name :cry: with api version.\nAbout #200, I have currently not been able to make net share succeed even with the change.\n. This is the job of the network provider (dokannp1.dll).\nYou can find the source here: https://github.com/dokan-dev/dokany/blob/master/dokan_np/dokannp.c\nIt is a very simple implementation and it is probably now outdated for new systems after Win7 as you describe.\nI think it need to be reviewed/rewrite.\n. @shino0729 do you have the possibility to change registry:\n[HKEY_LOCAL_MACHINE\\SYSTEM\\ControlSet001\\Control\\NetworkProvider\\HwOrder]\n[HKEY_LOCAL_MACHINE\\SYSTEM\\ControlSet001\\Control\\NetworkProvider\\Order]\nRename in ProviderOrder DokanNP1 to Dokan1 and make your test again ?\nI am currently not able to use net share on my VM:\n```\n\nnet share test=m:\\ /grant:MyUser,FULL\nThe operation is invalid on a redirected resource.\n```\n\nAm I doing something wrong ?\n@js69, this could be a good example yes !\n. !>< Ok I did without /n and it worked on my windows 10 but I face the same issue as you :cry: \nI am not sure this is related to network provider therefore.\nDid you try to access directly a subfolder : \\127.0.0.1\\test ?\n@Maxhy If I remember there is a trick here like with the UNC  ?\n. I made a test @Maxhy with Filespy and have not been able to make it work even after attaching it :cry: \nFrom my test:\n```\n\nmirror.exe /r c:\\Users /l m\nnet share test=m:\\ /grant:Everyone,full\n```\n\nThe device is 'well' shared. You can see it even from a remote computer without issue.\nBUT when you try to acces it from local (\\127.0.0.1\\test ) or remote (\\NAME\\test ), it does not work.\nYou have an error \"device is not ready\".\nMirror logs: http://pastebin.com/YPnqdbhz\nWith UNC:\n```\n\nmirror.exe /r c:\\Users /l m /n /u \\localhost\\mytest\n```\n\nIt work perfectly from local with \\\\localhost\\mytest.\nWhen UNC is used, it is only available from local computer even if UNC used is /u \\NAME\\mytest\n. @marinkobabic I have been able to reproduce what @Maxhy explained.\nMirror need to use the mount manager option /o for making it work with filespy.\n```\n\nmirror.exe /r c:\\Users /l m /o\nnet share test=m:\\ /grant:Everyone,full\n\n//attach with FileSpy\n-> \\localhost\\mytest - WORK !\n```\nEven after detach, it still work.\n. Logs:\nAccess without FileSpy attached (error): http://pastebin.com/pzSyEkix\nFileSpy Attaching: http://pastebin.com/bwDJ62JD\nAccess with FileSpy attached (success): http://pastebin.com/jSycWhpU\n. Hi @Deathspike ,\nI do not have much more information unfortunately. My guess would be that one of the request made by the system to the kernel is wrong/denied/not supported and the system does not like it.\nSince it only happen on 2012 R2, I would guess that it is an unsupported new request.\nIf you need any help on it, feel free to ask !\n. Hi @siegelpeter ,\nWindows server 2012 R2 and Windows 8 have the same kernel, thats why you also had the issue.\nThe only possibility is to dig in what the system request or to know what microsoft changed in windows 8 behaviour for net share.\n. @gvonkreisler it is currently in developement, for now you need to add the UNC\ntry by adding /u:\nmirror.exe /r C:\\Users /l m /n /u \\Dokan\\mirror\n. @gvonkreisler , we don't see your images like that.\nPlease use github directly the most that you can\n. Did you register the new network provider that you builded ? (please check in the registry to be sure)\nAlso there is new commit that has just been push :smiley: with different fix and improvement\n. Hi @gvonkreisler ,\nBe sure to install well the dokanprovider you have build with:\n//In your build folder (where there is the new dokanctl and dokannp build\ndokanctl.exe /r n\ndokanctl.exe /i n\nStart the mirror:\nmirror.exe /r C:\\Users /l m /n /u \\Dokan\\Mirror\nNet use\n```\n\nnet use\nNew connections will be remembered.\n\nStatus       Local     Remote                    Network\n\n         M:        \\\\Dokan\\Mirror            Dokan1\n\nThe command completed successfully.\n```\nYou can acces it by explorer with: \\\\Dokan\\Mirror\nList all mount point with explorer: \\\\Dokan\n. @gvonkreisler , Be also sure to pull last changes from this morning.\n. Happy easter you too !\nOk sorry, I made a mistake :cry: You need to rebuild the kernel driver to make netuse work.\nRemove the one before: dokanctl /r d\nInstall selfsigned driver:\n```\nCertMgr.exe /add x64\\Win10Debug\\dokan1.cer /s /r localMachine root\nCertMgr.exe /add x64\\Win10Debug\\dokan1.cer /s /r localMachine trustedpublisher\nBcdedit.exe -set TESTSIGNING ON\n//Reboot computer to enable the changes\n``\n. Does dokanctl /l work ?\nIf yes, it mean you have the correct version\n. Doesdokanctl /l` work ?\n. It should print more information. You don't have the correct version installed.\nAre you sure to clone the \"networkprovider\" branch ? (your folder is dokany-master)\nhttps://github.com/dokan-dev/dokany/tree/networkprovider\n. Please download this so: https://github.com/dokan-dev/dokany/archive/networkprovider.zip\nYou are currently downloading the branch MASTER of the project instead of networkprovider that have the changes.\n. yes for now did not changed it.\nCould you just try again:\ndokanctl.exe /r n\ndokanctl.exe /i n\nIf it show offline, it mean the provider is not correctly registered.\n. @gvonkreisler , this is not a chat. Edit your message if you want to make your message clear.\nI understood absolutely nothing of what you told.\nThere was no difference in the name / path compared to the two version you was testing.\nHere your error it is that the dll is not correctly registered, can you look at the registry if everything is ok ?\n. HKEY_LOCAL_MACHINE\nSystem\\CurrentControlSet\\Services\\dokan1\\NetworkProvider\nSystem\\CurrentControlSet\\Control\\NetworkProvider\\Order\nWhat do you have in this two ?\nAlso, did you try to restart explorer ?\n. Yes it is correct, before it was DokanNP1 and it was wrong.\nWhat about ?\nSystem\\CurrentControlSet\\Services\\dokan1\\NetworkProvider\n[HKEY_LOCAL_MACHINE\\SYSTEM\\ControlSet001\\Control\\NetworkProvider\\HwOrder]\n[HKEY_LOCAL_MACHINE\\SYSTEM\\ControlSet001\\Control\\NetworkProvider\\Order]\n. Ok it should work :(\nCan you try to rename Dokan1 to dokan1 so ?\n[HKEY_LOCAL_MACHINE\\SYSTEM\\ControlSet001\\Control\\NetworkProvider\\HwOrder]\n[HKEY_LOCAL_MACHINE\\SYSTEM\\ControlSet001\\Control\\NetworkProvider\\Order]\n. Yes, we have used virtualbox np as exemple.\nOtherwise I have no idea why does it not work for you :cry: \nIf you want to look into it, if you attach de debugger to explorer.exe you are going to be able to see if the dokan network provider is call by setting breakpoint in the code.\nIf it does not, it mean there is still an issue with the registry. Could you compare the registry from the two versions ?\n. networkprovider branch has been merged into the master.\n. Hi,\nDid you try the already build sample in c:\\Program Files\\Dokan\\Dokan Library-1.0.0\\samples\\fuse_mirror ?\nOtherwise, could try try to copy cygdokanfuse1.dll and dokan1.dll in the same folder as fusexmp.exe ? cygdokanfuse1 need dokan1 to be side by side. https://github.com/dokan-dev/dokany/blob/master/dokan_fuse/src/docanfuse.cpp#L521\n. @Stefitzky , thats a good new !\nStrange that it returned 0\nNormally it should return -1 -> https://github.com/dokan-dev/dokany/blob/master/dokan_fuse/src/docanfuse.cpp#L510\nDid you used DokanSetup_redist.exe or DokanSetup.exe ?\n. Done with https://github.com/dokan-dev/dokany/commit/a415ea952adadf6ce9635e75df7e7a2f34e08f62\nThank you for your feedback @Stefitzky  !\n@js69, I just seen your message, for me there was just the redist check missing no ?\n. Wrong project ?\n. Hi @x1596357 ,\nSee microsoft samples: https://github.com/Microsoft/Windows-driver-samples/blob/97cf8edcaddff4fdbc5cc48d56b7d7eb2c39b749/filesys/cdfs/volinfo.c#L522 https://github.com/Microsoft/Windows-driver-samples/blob/97cf8edcaddff4fdbc5cc48d56b7d7eb2c39b749/filesys/fastfat/volinfo.c#L879\n. Hi @Stefitzky ,\nThe device disappear automatically when the request made take too much time to process.\nIt is a security in case the user land application crashed or there is nobody to control the device. So to not let a device that could slow Windows or even in some case crash it...dokan unmount himself..\nOtherwise, there is possibility to request more time during a request with DokanResetTimeout. https://github.com/dokan-dev/dokany/blob/4343350589e6c6bfce31e2675e0462c63c8618ca/dokan/timeout.c#L26\nBut since you are using FUSE wrapper, I am not sure you can use it :cry: \nDo you know if with FUSE there is such behaviour to request more time that exist ?\nCan you see which part of the code take the most time ?\n. Hi @Stefitzky ,\nHave you been able to make your test ?\n. Feel free to reopen if you have any informations.\n. Hi, \nIt seems that you are using a very old version of dokan that is even made by older owner of dokan project :P\nCould you try to remove it and install dokan  0.7.x that you can find here?\nOtherwise you will need to install newer version  of she's. \n. @jshousephd I have no idea knowledge about sshfs so I cannot help you but otherwise there is another project\n. @jshousephd That you should look at https://github.com/dimov-cz/win-sshfs\n. @marinkobabic I have been able to reproduce the BSOD with a code example. It is not really accurate but I was able to make it happen after 5 min of test.\nI run the mirror in a shell mirror.exe /r C:\\Users /l m /t 2 and also running 4x time this code:\n```\ninclude \ninclude \nusing namespace std;\nint main() {\nwhile (true)\n{\n    try\n    {\n        ofstream myfile;\n        myfile.open(\"M:\\example.txt\", ios::app);\n        myfile << \"Writing this to a file.\\n\";\n        myfile.flush();\n        myfile.close();\n    }\n    catch (exception)\n    {\n    }\n}\nreturn 0;\n\n}\n```\nNormally when you will look at the process, you should see the mirror using the top of the CPU (50-65%) and 4 sample process ~10%.\nI send a lot of CTRL + C to the mirror untils it close (even before it write \"Success\") and run directly the mirror again.\nIt seems like the BSOD happen when the new mirror is mounted.\nI have unfortunatly not been able to find the source of the issue but for sure it can be reproduce !\n. @marinkobabic I am using it on Win10, no special compile condition.\nI send a lot of CTRL + C to make it stop before the \"Success\" messsage. Like I said, it take time to reproduce it...I had to make it a good couple of times.\nDuring your test, does the VM was slow ? The goal of the sample was to make the VM slow and to request the maximum of the time the device when it mount/unmount.\n. I tried a couple of times with normal and NETWORK_DRIVE option and has not been able to make my VM bsod :'(\nI agree that slow machine != BSOD. I just think that the issue happen at a moment when the device is requested very earlier at the mount or during unmount and something is still not initialized.\nThe .NET tests project should make it happen since it does request the device fast after mount but I have only been able to reproduce with the mirror and the sample for now :(\nSee another BSOD report that (for me) is also related https://github.com/dokan-dev/dokan-dotnet/issues/77#issuecomment-206554248\n. Explorer has freeze during a rename a couple of heavy pictures so I CTRL +C the mirror -> http://pastebin.com/uhtwzCLf\nI really dont understand how it happen...\n@Maxhy think it could come from https://github.com/dokan-dev/dokany/blob/master/sys/device.c#L389\n. @marinkobabic :+1: Instant blue screen for me too Well found :smile: ! \"REFERENCE_BY_POINTER\"\n. Hi @marinkobabic ,\nIf I understand well your analyse, it mean that at the mount of a network device the ReferenceCount of the VPB is not increased at all.\nSo the issue have to be in DokanMountVolume or even \nhttps://github.com/dokan-dev/dokany/blob/90ee4996d9eee2f78a774b9bc509172adfaf29f6/sys/fscontrol.c#L405 ?\n. Hi @marinkobabic ,\nThe fix worked perfectly !\nFor me, It seems to be the correct way to fix the bsod.\nI also don't know why we have to do this now.\nSo I hope @Maxhy will be able to give his point of view about it before I merge your PR.\nOtherwise @marinkobabic , thank you a lot as always and well found !\n. Hi @marinkobabic ,\nI am looking at the microsoft fast fat sample and how FileObject->Vpb is managed.\nIt seems like dependaning of the situation, Vpb need to be set differently.\nhttps://github.com/Microsoft/Windows-driver-samples/blob/6e1115d6af3c22b693eccc472ebb0d53a1905cd9/filesys/fastfat/filobsup.c#L126\n. Ok I am just still trying to understand why when we use Network FileSystem we have to not set Vpb :disappointed: \n. Fixed with @marinkobabic PR https://github.com/dokan-dev/dokany/pull/214\nThanks all of you for taking the time to test !\n. Hi @x1596357 ,\nWIN32 does exist in x64, it is define in Windows SDK without checking if it is x86 or x64.\nhttp://stackoverflow.com/questions/662084/whats-the-difference-between-the-win32-and-win32-defines-in-c\nI agree that it is better to use _WIN32 in case the file where they are us does not include a SDK windows file that define WIN32 (not our case for now :smiley: )\nYou can make a pull request if you want ^^\n. Thank you @x1596357 for your contribution :+1: !\n. Great propsition @Corillian ! I totally agree with you :heart: \nRemoving the threads limitation would enhance a lot the dokan speed also !\nIf I understood well, most of the changes are going to be in the Dokan Library and we are keeping the DeviceIoControl for communication Library/Kernel, are you we gonna break API compatibility in this communication ?\nAbout point 5, is it not related to https://github.com/dokan-dev/dokany/issues/148 ?\nIt seems that you have a lot investigate around how to make it, do that mean it is something that you are already planning to do ?\n. Oups yes lookaside does not exist for user mode ofc :smile: sorry\nOk I see the breaking changes you are talking about. It would be nice if we can just add a proxy fonction for each event that would convert the dynamically allocated structures into current function parameters and the other way back at the user function return.\nIf we really cannot avoid it, we will deal with it. It is just that I really would not like to force people to update all their implementation every version :)\nDon't worry about time, we also currently have couple of things that we need to do to push for pushing this 1.0.0 out :disappointed: (some stability issue)\n. Hi @Corillian ,\nSince it is june, I just wanted to know if you got any time on this ?\n(No need to hurry, 1.0.0 is even not released yet :smiley: )\n. @Corillian :+1: don't hesitate if you need help!\n. @Corillian I don't have my environment to test with me but I would say that this come from the last pull requests of @bailey27.\nIf I remember, there should be a first createfile to know if the file exist and a second for  opening the directory. \nOr do you mean you have two time the same createfile?\n. I agree that the cache should probably review/rewrite and move to the kernel.\nNotification of file changes are made during CreateFile and SetInformation when I file is created, delete, ....\nI would say that this part works because for exemple we see explorer being directly aware of a new file and show it\nhttps://github.com/dokan-dev/dokany/blob/84c38f8eb48ee703fd3eaa18abed09ab1072d029/sys/create.c#L1300\nhttps://github.com/dokan-dev/dokany/blob/b845c086c96e4b6125d0c729086ca122bb8b393c/sys/fileinfo.c#L598\n. Yes, in such case we will have an issue :cry: but the cache would also not help ?\n. This code should never be called because FilePositionInformation is directly handled in the dokan driver and never forwarded to user land https://github.com/dokan-dev/dokany/blob/b845c086c96e4b6125d0c729086ca122bb8b393c/sys/fileinfo.c#L134\n. @Corillian This is unfortunately a normal behavior as I know :'( the kernel does request read or write after cleanup and close in some cases. \nYou can see with filespy the irp made by the kernel and you should see the read irp made after cleanup and close irps. \nI have no access to my computer for now but probably there is some informations about this behavior on Microsoft irp read documentation? \nFor information, we plan to release 1.0.0 as it is with community feedback on the current RC so next features will be added in a develop branch.\n. @Corillian Thank you for pointing the part of documentation showing it! \nStill has not been able to reach my computer to make the research :( \nSo does everything is now always for you on the dokan behavior?\n. @Corillian Thank you corillian! I will take a look as soon as I can. Probably this weekend :) \nHahaha yes that was a strange sentence. I just wanted to know if you still think there is an issue on dokan behavior with read and write  after cleanup.\n. Hi @andreas-eriksson ,\nThere is a security file issue https://github.com/dokan-dev/dokany/pull/307#issuecomment-257590762\nthat need to be fixed.\n@Corillian is very busy often so this can take time or someone could probably contribute to his PR the fix.\nAfter this step, we need people to test the mirror for being sure that everything is still working properly.\nAnd finally I will help @Corillian for updating the document before merge \ud83d\udc4d \n. Hi @matepek ,\nThank you for your pull request !\nI totally understand the behaviour you describe and your implementation seems to do the job :+1: \nIt seems that there is some build issue with cygwin & msys.\n```\nIn file included from /cygdrive/c/projects/dokany/dokan_fuse/src/dokanfuse.cpp:3:0:\n/cygdrive/c/projects/dokany/dokan_fuse/include/fusemain.h: In constructor \u0393\u00c7\u00ffwin_error::win_error(int)\u0393\u00c7\u00d6:\n/cygdrive/c/projects/dokany/dokan_fuse/include/fusemain.h:58:55: error: \u0393\u00c7\u00fferrno_to_ntstatus_error\u0393\u00c7\u00d6 was not declared in this scope\n  win_error(int _err): err(errno_to_ntstatus_error(_err)) {}\n                                                       ^\n/cygdrive/c/projects/dokany/dokan_fuse/src/dokanfuse.cpp: In function \u0393\u00c7\u00ffNTSTATUS FuseFindFiles(LPCWSTR, PFillFindData, PDOKAN_FILE_INFO)\u0393\u00c7\u00d6:\n/cygdrive/c/projects/dokany/dokan_fuse/src/dokanfuse.cpp:47:62: error: \u0393\u00c7\u00fferrno_to_ntstatus_error\u0393\u00c7\u00d6 was not declared in this scope\n       impl->find_files(FileName, FillFindData, DokanFileInfo));\n                                                              ^\n/cygdrive/c/projects/dokany/dokan_fuse/src/dokanfuse.cpp: In function \u0393\u00c7\u00ffNTSTATUS FuseDeleteDirectory(LPCWSTR, PDOKAN_FILE_INFO)\u0393\u00c7\u00d6:\n/cygdrive/c/projects/dokany/dokan_fuse/src/dokanfuse.cpp:68:54: error: \u0393\u00c7\u00fferrno_to_ntstatus_error\u0393\u00c7\u00d6 was not declared in this scope\n       impl->delete_directory(FileName, DokanFileInfo));\n                                                      ^\n....\n```\nhttps://ci.appveyor.com/project/Maxhy/dokany/build/1.0.0-529/job/i85gs1gwx46ug2ub\nAlso have you seen in the mirror that in some case you will need admin right and request SE_SECURITY_NAME ?\nhttps://github.com/dokan-dev/dokany/blob/master/samples/dokan_mirror/mirror.c#L1393\n. Oh sorry @matepek , the build error are not related to your PR :smile: \n. Hi @matepek ,\nYes this should do the work thank you for the changes ! :+1:\nDoes this still make your case work ?\nUnfortunately, I don't have access to my env for the moment :'( I will merge it when I can.\nA clean history would be welcome yes !\nAnd also add some comment in FuseGetFileSecurity to explain why we do this only for directories.\n. Hi @matepek ,\nSorry for the delay !\nEverything seems to be alright for me !\nI just have a question not related to the PR, care you still able to build the fuse mirror sample and run it correctly ? are you able to read / write files also ?\nI have some issue on my side so it would be nice if someone could test it :( I hope there is no regression.\n. I was talking about the fuse mirror in case you had cygwin :smiley: \nbut thats alright I will try to do the test on my side again\n. Done with https://github.com/dokan-dev/dokany/commit/952d5204dffbba58598fbc19078b897f77f0ab29\n. Hi @smoogle ,\nThank you for reporting it !\nBut thats obviously a false positive since only one antiviruse found the Shelma.\nIt seems like even plex have the same false positive: https://forums.plex.tv/discussion/211769/trojan-shelma-detected-in-pms-exe\nMoreover I made an analyse with the installer that directly embedded the redist:\nhttps://www.virustotal.com/en/file/83b19edde7c9dc5106dc0325d36ffb342ac8bd28669c9bcc8161cf688ed8de8e/analysis/\nI think the false positive is made because the installer will try to download something remote (the redist) during install.\nIf you have another idea about it, feel free to propose it !\n. Yandex use Sophos and his own internal antivirus for scanning websites. There is no desktop version of his antivirus.\nAlso Sophos does not detect dokan as virus, so I even think they will see that it is a false positive if they want to flag the download page.\nAnd like @js69 said, It is going to be long before having an answer.\nThis issue was a good report and good to know but for now we are facing no problem.\n. Hi @marinkobabic ,\nSorry for the delay, I have finally been able to review the PR with @Maxhy .\nYour fix work perfectly even if we dont really why this is happening and there is not documentation that seems to give informations about it :cry: \nThanks again for your contribution it is always very appreciate !\n. Hi @zmfsea ,\nCan you try with the /o option ?\n. I think iometer is listing physical device and therefore does not get the dokan device. It would be interesting if you can see in their source code how they get this disk list.\n\n\"Create DeviceObject for the File System\" is moved from DokanCreateDiskDevice to DokanCreateGlobalDiskDevice\n\nThis is related to a context issue: https://github.com/dokan-dev/dokany/pull/141#issuecomment-174047455\n. @zmfsea have you been able to take a look at  Iometer  source code ?\n. Feel free to reopen if you have any informations.\n. Done with https://github.com/dokan-dev/dokany/commit/de902a03b3a22c47b66e769ce0cc1a414a71b8df @Rambalac\n. Hi @taruti ,\nWell found !\nThank you for you contribution !\n. Hi @Rondom ,\nYou are right :) I am only building on Windows so never had such issue.\nThank you for your contribution !\n. Hi @elfring ,\nIt is a C project.\nI will fix the Include guards to fit C standard (ISO/IEC 9899) section 7.1.3/1. http://www.open-std.org/jtc1/sc22/wg14/www/docs/n1124.pdf\nUnderscore struct are not made to be used directly, but only through the accompanied typedef so there is not need to change it. They are even begining by DOKAN.\n. This is far from undefined behavior in practice. \n. like ?\n. Include guard has been changed but struct will still as they are (see my first answer for the reason).\nhttps://github.com/dokan-dev/dokany/commit/1d9d28d78636f723706eece1b48b773192174004\n. Changing DOKAN_OPTION to enum could be an idea but It would break user code. I have take a look at it for 1.0.0.\nIRP are declared as define in Windows Kernel headers so we will keep it like that.\n. Done with https://github.com/dokan-dev/dokany/commit/f5afbea312cf69fcd217cb14fb2af51067d89b83\n. This has been revert.\n. Dokany device need an application (like the mirror) to run. Therefore it mean that the mirror should run at start. This can easily be made by adding the mirror in windows startup. \n. Humm with a minimum of changes, you can make the mirror become a windows service that would start automatically at boot.\nYou will not get terminal window shown.\n. Hi @axkibe ,\nThis has already been reported here: https://github.com/dokan-dev/dokany/issues/199 and will be fixed in RC3\nOtherwise you can already try the fix by building dokanctl, mirror, dokannp and running: dokanctl.exe /i n && mirror.exe /r C:\\Users /l m /n. For me everything worked perfectly.\nCan you make also a test on your side ?\n. @axkibe it is plan :wink: \n. Related issue: https://github.com/dokan-dev/dokany/issues/187\nhttps://www.microsoft.com/en-us/download/details.aspx?id=46078\n. @dorvan feel free to reopen when you have more informations on your request.\n. The goal of DokanSetup_redist is specially to install the redist.\nhttps://github.com/dokan-dev/dokany/blob/a415ea952adadf6ce9635e75df7e7a2f34e08f62/dokan_wix/Dokan_x64.wxs#L101\nAre you running the x86 mirror or x64 ? (both are present in the x64 installer) In rc2 that was an issue with x86 redist that was not installed.\ncould you please post the setup log, in %TEMP% the Dokan ... x64 ...log file?\n. Ah it is the x86 redistribuable, thats has been fixed already for RC3 https://github.com/dokan-dev/dokany/commit/a415ea952adadf6ce9635e75df7e7a2f34e08f62\n. Hi @opendedup ,\nIt is plan just after https://github.com/dokan-dev/dokany/issues/165 is fixed.\nThe RC3 had to be release today :( but last minute issue will report it probably next week.\n(tell me when OpenDedupe will be ready with Dokan :kiss: I will add you in our homepage)\n. Done https://github.com/dokan-dev/dokany/releases/tag/v1.0.0-RC3 !\n. Hi @matepek ,\nThe x86 redistribuable check is missing in the RC2. It has already  been fixed for RC3 a415ea9\n. Hi @taruti ,\nThat's interesting !\nYes, it would be nice if you could find a sample/code to reproduce easily the behaviour ! :heart: \n. Hi @marinkobabic,\nI have been able to reproduce multiple times the issue as describe by @taruti on Windows 7 x64 and Windows 10 x64.\nThe crash can happen quickly or after more than \"5 Minutes\" (better to go doing something else after running it). \nMy BSOD analyse does not give much informations unfortunatly :cry: but I can see that it happen in fltmgr.sys\n. Hi @taruti ,\nI have remade the test with last changes and I no longer have been able to reproduce the issue even after running it more than 40 min.\nCan you make a last test to see if something changed on your side ?\n. @taruti I will wait your feedback :heart: \nThis should be fixed with https://github.com/dokan-dev/dokany/pull/303\n. @taruti Good news! Thanks you for your feedback! Very appreciate!\n. Hi @gang929 ,\nSince there is no such option on FUSE (as I know), you will need to rebuild dokan fuse and add the option here: https://github.com/dokan-dev/dokany/blob/4d11614c5df85b96442838158e75af26d3d4aa4e/dokan_fuse/src/dokanfuse.cpp#L588\n. This seems to be a beautiful copy past of unmounted :smile: \nFixed https://github.com/dokan-dev/dokany/commit/468e08ebfd74ce4d282896c7c3eeecf85e94a882\nThank you @gang929 for the report !\n. the mingw stat define is different to linux could you link this part of code in the dokan fuse ?\nIn my wdfs port project, I use mingw compile So wdfs is using mingw stat at this moment ? and dokan fuse build with mingw does not ?\n. Ok I see, so it would mean that:\nhttps://github.com/dokan-dev/dokany/blame/f5afbea312cf69fcd217cb14fb2af51067d89b83/dokan_fuse/include/fuse_win.h#L74\nshould be changed ?\n. @gang929 have you been able to fix your issue by using directly FUSE_STAT ?\n. There is probably an issue in dokan fuse wrapper in the conversion stats <-> windows\n. Hi @gang929 ,\nI have taken a look and it seems like there is not real issue with the dokan fuse implementation as I found now.\nThe probleme of wrong size/time and such come from the fuse mirror that only list files and does not do much else...https://github.com/dokan-dev/dokany/blob/master/samples/fuse_mirror/fusexmp.c#L96\nNormally it should fill the stat struct before calling filler.\n. @jetwhiz how are you building the dokan fuse and your filesystem ? (VC, Cygwin, msys)\nHere is where the size is converted from fuse to dokan: https://github.com/dokan-dev/dokany/blob/master/dokan_fuse/include/utils.h#L40\nCan you try to print and see if the conversion is good in your case ?\n. In your readdir; the callback is walk_directory:\nhttps://github.com/dokan-dev/dokany/blob/468e08ebfd74ce4d282896c7c3eeecf85e94a882/dokan_fuse/src/fusemain.cpp#L265\nIn this fonction there is convertStatlikeBuf that handle the conversion of your stat to dokan windows informations:\nhttps://github.com/dokan-dev/dokany/blob/468e08ebfd74ce4d282896c7c3eeecf85e94a882/dokan_fuse/src/fusemain.cpp#L302\nhttps://github.com/dokan-dev/dokany/blob/master/dokan_fuse/include/utils.h#L40\nYou can print there all the informations.\nFor simple test and not get floor, you can simple use cmd.exe, go in a folder and use dir command. Only readdir is going to be called.\n. @gang929 that\u2019s why dokan_fuse has to be built with Cygwin (same as wdfs). You will have cygdokanfuse1.dll. Therefore the FUSE_STAT that has the same size in both (fuse and wdfs) since the same compiler has build it.\nIt is normal that you have a difference between VS and Cygwin. And you will have another difference from VS and Msys probably.\nWe cannot force size type as you propose because it will probably not work in another Linux like environment.\nOr there is something here that I don't understand.\n. Oh great @jetwhiz ! Thank you !\nSo as we has seen, there is sometimes good informations about libeay32.dll (when st_size = 1209856 i guess).\nconvertStatlikeBuf is called in two different places:\nwalk_directory https://github.com/dokan-dev/dokany/blob/468e08ebfd74ce4d282896c7c3eeecf85e94a882/dokan_fuse/src/fusemain.cpp#L302\nget_file_information https://github.com/dokan-dev/dokany/blob/468e08ebfd74ce4d282896c7c3eeecf85e94a882/dokan_fuse/src/fusemain.cpp#L626\nCan you add some print in this two fonctions to see whish is giving \"wrong\" information to the system  (st_size= 1432608.....) ?\n. Ok so dokan_fuse 'should' force getattr since Windows use readdir informations compared to libfuse.\nCan you test: if (walk_directory(buf, name.c_str(), NULL, 0)) break;\nIt should force the getattr as you seen.\nIf it work, we are going to force the getattr everytime.\n. Fixed with https://github.com/dokan-dev/dokany/commit/0b350fddd76f4da811e7a037e2fcfa57f87070f8\nThank you @jetwhiz, @gang929 for your report, time and help !\n. Hi @netheril96 ,\nDid you made a test ? I had no issue so far.\n. I am not sure :smiley:  but I think it should be simply test. I see nothing that would not make it work.\n. Hi @psaghelyi ,\nIt is not easy and quick to reproduce like you say since every MSWord behave differently.\nWe will need mirror and kernel logs here.\n. Hi @psaghelyi ,\nI have made the test windows 10 x64 and Word 2016.\nI had no issue by using your file with Explorer / Total Commander or directly from Word.\n\nThe CreateFile was not even called so probably the root of the problem is deeper in Dokany.sys.\nI see a couple of CreateFile in your logs but there is no ReadFile request.\nCan you remake the test without having other files in the same folders ?\n. Hi @netheril96 ,\nSee https://github.com/dokan-dev/dokany/blob/master/dokan_fuse/src/dokanfuse.cpp#L662 for a list of current dokan fuse supported.\n-s can be easily supported with dokanOptions->ThreadCount = 0\nthe same for -b by using FreeConsole https://msdn.microsoft.com/fr-fr/library/windows/desktop/ms683150%28v=vs.85%29.aspx\nDo you think you can provide a pull request for this options ?\n(list of possible fuse args: https://github.com/libfuse/libfuse/blob/4600e52e831d05e31fc54e666ff729bcab054017/lib/helper.c#L39 )\n. hi @netheril96 ?\nTook a look at the fuse options and it seems that single thread option is supported \nhttps://github.com/dokan-dev/dokany/blob/4d11614c5df85b96442838158e75af26d3d4aa4e/dokan_fuse/src/dokanfuse.cpp#L596\nWith -s option https://github.com/dokan-dev/dokany/blob/4ec77fd4d4aa149910a02cd8d4b8c9b0daa92ceb/dokan_fuse/src/fuse_helpers.c#L47\nCan you make a test to be sure that -s was ignored ? And if so too look why ?\nAlso -b option does not exist, libfuse only has -f (foreground) that is currently supported on cygwin only. I made a fix for having the same behaviour on Windows: https://github.com/dokan-dev/dokany/commit/8a8f4ce65893b6701cac85498951bc731c1ced30\n. I have debug -f (foreground) and -s (single thread). They work as expected.\n. Hi @Eumeltier76 ,\nDokany 1.0.0 use a new installer. I made a test and if Dokan is already installed and you run the installer with /quiet you get an %errorlevel% = 0.\nYou issue should therefore be solved.\nBest regards,\n. Hi @shashiu ,\nI tested your patch by simply running the mirror.exe (locally without TSE).\nIt seems that the mirror is no longer able to communicate with the driver:\n```\nDokan: debug mode on\nDokan: use stderr\nAllocationUnitSize: 512 SectorSize: 512\ndevice opened\nmounted: f -> \\Volume{d6cc17c5-1730-4085-bce7-964f1e9f5de9}\nMounted\nDokan Error: CreateFile failed f: (\\.\\Volume{d6cc17c5-1730-4085-bce7-964f1e9f5de9}) 2\nDokan Error: CreateFile failed f: (\\.\\Volume{d6cc17c5-1730-4085-bce7-964f1e9f5de9}) 2\nDokan Error: CreateFile failed f: (\\.\\Volume{d6cc17c5-1730-4085-bce7-964f1e9f5de9}) 2\nDokan Error: CreateFile failed f: (\\.\\Volume{d6cc17c5-1730-4085-bce7-964f1e9f5de9}) 2\nDokan Error: CreateFile failed f: (\\.\\Volume{d6cc17c5-1730-4085-bce7-964f1e9f5de9}) 2\nUnmounted\nunload\nSuccess\n```\nKernel logs show that it is correctly mount but unmount just after since there is no communication with the mirror.\n. @marinkobabic It also fail if I replace \nhttps://github.com/dokan-dev/dokany/blob/a8d06c7ff30e05f8243ed28c06b09f1d0b6f17d3/dokan/dokan.c#L369\nby device = CreateFile(L\"\\\\\\\\.\\\\f\",\n. @Rondom that's strange :hushed: If it work for the mirror it should with FUSE.\nJust to be sure, can you copy the dokan.dll from the mirror to fuse_mirror ?\n(the fix was in it)\n. Ah great ! :+1: Thank you for your time and feeback @Rondom and others !\n. Hi @zTrix ,\nThere is a lots of changes since 0.7.4. It gonna be hard for me to tell what change fixed the issue.\nI can only propose you to use the new 1.0.0 RC or to try to convert the new mirror for 0.7.4 (to test if the fix was in it)\n. Ok I see.\nI have you seen https://github.com/dokan-dev/dokany/wiki/Update-dokan-legacy-application-to-Dokany ?\nWith mirror as example and the wiki, normally your implementation should be update in less than a hour.\n. The changes are pretty big: https://github.com/dokan-dev/dokany/compare/v0.7.4...v0.8.0\nI really cannot help you on this sorry :(\n. :+1: @zTrix Thank you for your feedback ! It gonna help peoples that will face this issue with the 0.7.4.\n. @gang929 UNC can be set at the mount: https://github.com/dokan-dev/dokany/blob/master/samples/dokan_mirror/mirror.c#L1335\nAbout label that sometimes change, can you make a test with the last commit: https://github.com/dokan-dev/dokany/commit/d3ecfb0e5d327092113430bfd7b27ee605860081\nIt can probably fix the behaviour. If not, can you describe a way to reproduce it ?\nFor binary compatibility, I don't understand why you compare visual studio and cygwin. The way it work, if your filesystem is build with cygwin, it has to use the dokan fuse build with cygwin. That's why the dokan installer has VS/Cygwin/msys version of the dokan fuse. With this you will have the same size of stat member no ?\n. @gang929 \nUNC:\n\nmirror.exe /r c:\\Users /l m /n /u \\localhost\\mytest\n\nYou can acces it by \\\\localhost\\mytest\nNetwork drive label is set by GetVolumeInformation\nhttps://github.com/dokan-dev/dokany/blob/master/samples/dokan_mirror/mirror.c#L1125\n. From my point of view, I don't think we should add network option in libfuse since it does not exist in libfuse.\nI will try to reproduce your issue @gang929 with wrong label name using network.\n. Hi @gang929 ,\nI have import and clean your commit for network drive option: https://github.com/dokan-dev/dokany/commit/8e4590c2a4b93a8d45366660c54e64c66975c39d\nThank you again for your contribution and your time !\nI have also try to reproduce the issue with the mirror network name :cry: but impossible to get the same behaviour as you. If you have new informations about it, please open an issue ! :heart: \n. ico file is the most important :smile: !\nI tried to contact all my designer but none are available to do it :cry: \nIt would be nice if some designer of companies using dokan could help us on this !\nping @sdecugis (in case of :smiley: )\n. Here is a logo that a friend did:\n\nI would like some feedback from the community about it (thumb up or down on this post).. Hi @pmalhaire ,\nOh this looks like great ideas you have here !\nI would really like to see some icons from this !!!\n. Hi @pmalhaire ,\nThank you for the svg files.\nCan the file in the nuts look more like a file ? I do not know if only me but I took time to understand it.\n@Rondom what do you think ? (need help I am far from having design skills \ud83d\ude04 ). With the color it make it even better \ud83d\udc4d \nThe nuts is Ok for me, just the file do not seems to be \"part\" of the nuts. Is there a way to make it more integrate to the nuts. I mean by the shadow/colors ?. Yeahh \ud83d\ude80 thats looks great !!!\nWould really love some input of other people\nping @Maxhy @Rondom @taruti @magol @marinkobabic @yin19941005 @js69 @bailey27 and others \u2764\ufe0f \na little \ud83d\udc4d if you like. @pmalhaire There is on the website the walnut.png\nhttps://github.com/dokan-dev/dokan-dev.github.io/tree/master/images\nFor the installer:\nDokan.ico - https://github.com/dokan-dev/dokany/tree/master/dokan_wix\ndokan.png - https://github.com/dokan-dev/dokany/tree/master/dokan_wix/Bootstrapper/Resources\nMaybe also commit all files (svg,..) in the same resources folder if you want.. Thanks a lot for all your work @pmalhaire !\nI let the issue open in case someone has some review still to do.\nLogo updated on the website if someone want to see it: https://dokan-dev.github.io/. @pmalhaire Done ! :heart: . Alright :+1: I just updated it with this image.. Yes @pmalhaire totally forgot to close it \ud83d\udc4d \n\ud83d\udc98 it !. Hi @superhq ,\nError 557 mean that the system does not recognize the driver signature.\nYou will need to install all windows updates.\nSee https://github.com/dokan-dev/dokany/issues/187 (2008 r2 is the same as Win7)\n. Hi @jetwhiz ,\n(Ths fuse debug output is horrible :smile: , it will need to be changed https://github.com/dokan-dev/dokany/issues/247)\nI had not the time to make the test for now but if explorer is freezing, it is probably because his is making a loop a request until having a valid answer (that he seems to not get).\nHave you been able to see if there is such request made ?\n. Hi @jetwhiz ,\nI made a test and have been able to access an empty folder without issue :cry: \n\nDo you have more information for me to reproduce the issue ?\n. Actually, I don't really have ideas :cry: \nDoes the mirror is still running ? no crash of the mirror ?\nDokan FUSE logs really need to be implemented :'(\n. @Rondom It is right that getfilesecurity has been added with rc3! Can you try without it?\n. Add @matepek to the issue.\n. I made the test only on Win10 x64 without issues for now.\nThe FUSE FuseGetFileSecurity does not add really much See: https://github.com/dokan-dev/dokany/pull/211\nFuseGetFileSecurity is more a hack fix, if the behaviour is unstable and impossible to fix, we will have to revert it.\n. I have changed FuseGetFileSecurity implementation by using sddl from dokan kernel for all folders.\nhttps://github.com/dokan-dev/dokany/commit/11bb829a70961e797adfef1354a98fada3491af7\nI have tested the code but since I never faced the issue https://github.com/dokan-dev/dokany/pull/211 of create folder needing admin rights, can someone test and valide if the behaviour is correct and stable ?\n. Ah great @jetwhiz thank you for your feedback!\n. hello @gh223682 ,\nThe issues that you linking are not related since it is about the old installer of 0.8.0.\nDid you reboot after the uninstall ? Dokan System files are only removed after the reboot.\n. I am unable to reproduce with RC3.\nAfter reboot, sys / prog folder is well cleaned \n. @gh223682 I will be glad to test again when you will find a process to reproduce the issue. But for now, I have try a couple of things and I was not able to have the behaviour that you describe :cry: \n. Hi @jetwhiz,\nI seen in dokan_fuse code that for Cygwin the print define FWPRINTF is replaced by dummy_fwprintf\nhttps://github.com/dokan-dev/dokany/blob/11bb829a70961e797adfef1354a98fada3491af7/dokan_fuse/src/dokanfuse.cpp#L13\nI have tested to use directly by fwprintf on cygwin but I got a crash. Do you have any idea on such behaviour with cygwin or even the reason of this crash ?\n. Thank you @jetwhiz @Rondom ! That was it :smile: \nhttps://github.com/dokan-dev/dokany/commit/f3e539ba85b88a8afd5b1828618d147f6023a965 no more crash\n. Yes, this can be a solution ! Since the installer is already build it should not be difficult.\nThe only issue is that it is self signed so the person who will want to test will have to install the certificat used by appveyor\nAs explained here: https://github.com/dokan-dev/dokany/wiki/Build#signing\nartifacts:\n  - path: .\\dokan_wix\\Bootstrapper\\bin\\Debug\\DokanSetup.exe\n. Done with https://github.com/dokan-dev/dokany/commit/ba95eec566a0e0de39538b9b725bfddee32c2065\nYou will now find a Dokan Installer self signed for each commit/appveyor build.\nEx: https://ci.appveyor.com/project/Maxhy/dokany/branch/master/job/c8u7yfpik1xla50a/artifacts\nThe installer is self signed with certificates that you can find in cert folder.\nTo run correctly the installer, you will need the first time to install the Dokan self signed certificates\ncd dokany\nPowershell.exe -executionpolicy remotesigned -File .\\cert\\dokan-import.ps1\n//reboot computer before running dokan installer\n. The system seems to make a request to GetFileInfo without calling CreateFile.\nIn this case the mirror is calling CreateFile\nhttps://github.com/dokan-dev/dokany/blob/master/samples/dokan_mirror/mirror.c#L629\n@superhq , can you try to add FILE_SHARE_WRITE  FILE_SHARE_DELETE to this CreateFile ?\n. Hi @jetwhiz, This is only true with FUSE.\nI have not been able to find the time to see what is the issue here.\n. The issue here is that after MoveFile C:\\test.docx -> C:\\~WRL0002.tmp we get requests of GetFileInformation C:\\~WRL0002.tmp on the same handle.\nBut the handle is close in MoveFile (otherwise we would have some issue to move it :smile: ).\nSo we open a new temporary handle in GetFileInformation as @marinkobabic explained.\nOn my side, if I replace all this code https://github.com/dokan-dev/dokany/blob/master/samples/dokan_mirror/mirror.c#L595-L604\nby return STATUS_INVALID_PARAMETER; It does improve the situation on my side.\nI am not sure on this fix because it is not offen that the issue happen on my side.\nMost of the time I can open/save files without issues.\nSo if someone that really had the issue can make a test and see if it fix the behaviour or at least improve, it would be great :)\n. hi @bailey27,\nThat's a way to do the rename ! Changes has been pushed https://github.com/dokan-dev/dokany/commit/5e9525277ff8889750d209b30335948af8cedf95\nThank you for your contribution @bailey27! \nIt does improve the issue on my side but I can still make it happen.\nIn the log, I no longer have invalid handle errors :+1: \nAs error related to the file, there is:\n```\nCreate 1540\nCreateFile : C:\\Users\\liryna\\Desktop\\~WRD0000.tmp\n  AccountName: liryna, DomainName: DESKTOP-T9B1IFA\n    ShareMode = 0x7\n    FILE_SHARE_READ\n    FILE_SHARE_WRITE\n    FILE_SHARE_DELETE\n    AccessMode = 0xc0000\n    WRITE_DAC\n    WRITE_OWNER\n    FlagsAndAttributes = 0x200000\n    FILE_FLAG_OPEN_REPARSE_POINT\n    OPEN_EXISTING\nCreateFile status = 0 - lastError = 0\nGetFileInfo 1540\nGetFileInfo : C:\\Users\\liryna\\Desktop\\~WRD0000.tmp\n    GetFileInformationByHandle success, file size = 13424\nresult =  0\nFileStandardInformation\nDispatchQueryInformation result =  0\n\nSetSecurity 1540\nSetFileSecurity C:\\Users\\liryna\\Desktop\\~WRD0000.tmp\n  SetUserObjectSecurity failed: 998 //ERROR_NOACCESS -  Invalid access to memory location.\nCleanup 1540\nCleanup: C:\\Users\\liryna\\Desktop\\~WRD0000.tmp\nClose 1540\nClose: C:\\Users\\liryna\\Desktop\\~WRD0000.tmp\n```\nOr CreateFile that fail because the file does not exist (that seems to be normal)\nI can only say, that I can only reproduce this behaviour if explorer is open in the same folder as the file saved by word.\n. @bailey27 ,\nStruct has been changed https://github.com/dokan-dev/dokany/commit/8d58560789078f3d57356103e3393ff7b67e56e8 :+1: \nFILE_RENAME_INFORMATION used was the one defined in dokan\\fileinfo.h but anyway it is better to use the official one.\nIn my WinBase.h, there is still a BOOLEAN\ntypedef struct _FILE_RENAME_INFO {\n    BOOLEAN ReplaceIfExists;\n    HANDLE RootDirectory;\n    DWORD FileNameLength;\n    WCHAR FileName[1];\n} FILE_RENAME_INFO, *PFILE_RENAME_INFO;\nAbout the issue, I think it is that explorer try to get acces to word file created during saving (there is something like 3-4 files created). I guess at this moment we open a handle in one of the file when word want to move/delete or get exclusive access.\nWe can still look more and see if we can improve but I am not sure we will go more far.\nI even looked to see an acces denied during createfile on such files but I found nothing for now :cry: \n. :astonished: \nA directory O_o ? DOKAN_FILE_DIRECTORY is set if CreateFile returned that it is a Directory or if FILE_DIRECTORY_FILE was requested but that would mean Mirror opened the file as a directory O_o\nThats very wiered.do you think being able to see from where it is set ?\n(Good job to find out :+1: )\n. Hi @bailey27 ,\nThat's a good debug you did :+1: \nI would be happy to test it when you feel that it is stable.\nAbout DELETE_ON_CLOSE, your are right, there is a change since RC3: https://github.com/dokan-dev/dokany/commit/59d08ffca07f69c40d9d46e5a687816cb72d0a49\nI don't really know how it affect the behaviour your describe, but could wors to give a try to revert it.\nI also think that a request on \\ should be denied (STATUS_ACCESS_DENIED) when CreateDisposition = FILE_CREATE  FILE_OVERWRITE FILE_OVERWRITE_IF FILE_SUPERSEDE \n(For information, SL_OPEN_TARGET_DIRECTORY was know as flag not well supported  https://github.com/dokan-dev/dokany/issues/149)\nIt would be really great to have a good implementation of it ! :heart: \n. DELETE_ON_CLOSE on Fcb should probably be clean when the ccb cleanup is made (and no other are currently requesting delete also) ?\nCurrently it is not the case, maybe that why it leak.\n. Thank @bailey27 for all your work ! Thats really amazing a great and @marinkobabic for your expertise as always ! ! :heart: \nTested word 2010 with https://github.com/dokan-dev/dokany/pull/273 and impossible to reproduce the issue ! :relieved: \n:trophy:  :tada: \nWell found for the OpLock leak !\nI also updated CreateFile support status https://github.com/dokan-dev/dokany/issues/149\n. @Rondom Hi, \nThat's a good idea! Do you think you can make a pull request that fix it?\n. :heart:\nDo not forget the installer also :smiley: !\n. @Rondom , did had the time to see about this issue ?\n(If I do not make mistakes I think I seen a fix for it in your repository at a moment)\n. Hi @Rondom ,\nThank you for the contribution and the explanation :+1: very appreciate !\nAbout the comment, I just think it is because the dev was meaning that anyway the path is related to the dokan filesystem.\n. Hi @Rondom, @monceaux,\nThank you for you report and your analyse !\n@monceaux you have found the source of the issue but there were a more easy fix :smiley: .\noffset was incorrectly set to (unsigned int) -1 so the condition would never succeed :cry: \nFixed here: https://github.com/dokan-dev/dokany/commit/aad686c7bfc640c9be34618f51ef758e759c8d55\n. Hi @Rondom ,\nThank you for your feedback !\n@js69 changes has been merged\n@Rondom , do you have the possibility to test the installer from appveyor on your Win7 that does not have Framework 4 ?\nhttps://ci.appveyor.com/project/Maxhy/dokany/build/1.0.0-595/job/8ijit6j59gdua1pn/artifacts\nThe installer is self signed with certificates that you can find in cert folder.\nTo run correctly the installer, you will need the first time to install the Dokan self signed certificates\ncd dokany\nPowershell.exe -executionpolicy remotesigned -File .\\cert\\dokan-import.ps1\n//reboot computer before running dokan installer\n. Hi @js69 ,\nThank you for your pull request !\nCould you please rebase your change and force push ? I am unable to review the pull request with 22 commit and so much changes :cry: \n. Hi @js69 ,\nThank you for your contribution as always, very appreciate ! :heart: \nThis seems to work on my side :smiley: \n. Well found @js69  :heart: !!!\nWe plan to make the release 1.0.0 next week so this is very helpful :D !\n. Hi @jetwhiz ,\nFuseCreateFile is getting the Kernel flags of the createfile. The kernel attributes does not have the same value as user land. To convert the kernel flag to user flags, we need to call DokanMapKernelToUserCreateFileFlags.\nI have commit a patch that will give you the ability to get this flags: https://github.com/dokan-dev/dokany/commit/043fc668444e4c9f9bdfbddfb61ce8f8c381a57f\nAfter this line: https://github.com/dokan-dev/dokany/commit/043fc668444e4c9f9bdfbddfb61ce8f8c381a57f#diff-6d5ff575218237cd8f26b3588063923dR180\nYou will be able to get the correct values of AttributesAndFlags & creationDisposition.\nCan you make a test and tell me if this need improvement and your point of view of it ?\n. @jetwhiz ,I have not changed the debug output :smile: \nI just converted the flag in fileAttributesAndFlags and creationDisposition to give you the ability to make the check as you want fileAttributesAndFlags & FILE_FLAG_DELETE_ON_CLOSE. (other wise the information is in CreateOption variable see https://github.com/dokan-dev/dokany/blob/7c53ac77393e1430ad228b2e514f1f4a5d7fd247/dokan/dokan.c#L853)\nBut I agree that the debug output should be probably restore as it was before:\nhttps://github.com/dokan-dev/dokany/pull/91/files#diff-96df580dcf9bedf28ac688489cbf7c1cL196\n(Printing user land variable values)\nI commited the debug ouput changes:\nhttps://github.com/dokan-dev/dokany/commit/9a44ee2f2171013a712fe2c7256c44c47045d1f2\n. @jetwhiz unfortunatly we cannot do this :(\nWe would break fuse compatibility with this changes no ?\n. @jetwhiz is it only the FILE_FLAG_DELETE_ON_CLOSE that you are interested or all flagsAndAttributes ?\nIf it is only the delete flag, maybe we can reused somehow the flag argument of open (it is just an idea :smiley: , I would like to explore all possibilities)\n. @jetwhiz I didn't gave up on this issue :smiley: I just had not the time to look into it.\nJust for information, there were an issue with the flag during cleanup (rmdir/unlink) see: https://github.com/dokan-dev/dokan-dotnet/issues/83#issuecomment-227229432\nIn case of this can explain a behaviour you faced.\n. humm @jetwhiz ! If in your case rmdir/unlink were not called at all for the temporary files created by Microsoft Office, this fix https://github.com/dokan-dev/dokany/commit/59d08ffca07f69c40d9d46e5a687816cb72d0a49 should be tested :+1: \nIt was the same behaviour with C Mirror. I think you should really give a try !\n(You will need to rebuild the kernel driver or to use the installer build by appveyor that is selfsigned https://github.com/dokan-dev/dokany/wiki/Build#user-snapshot)\n. No, the dokan1.sys in System32, you need to have it signed. So the possibility is to wait the next release or to create a VM, download https://ci.appveyor.com/api/buildjobs/jw9memsn22f6dvwe/artifacts/DokanSetup-1.0.0.3623.exe and see how to install the self signed dokan cert here: https://github.com/dokan-dev/dokany/wiki/Build#user-snapshot\n. Thank you for your feedback @jetwhiz ! :+1: \nI think this can be closed and if someone need the flag I am willing to reopen it !\n. :+1: Tell me when I can test it !\n. Worked for me :+1: \nThank you @Rondom for your contributions as always :heart: !!!\nWell found for Wintrust.dll  check :D\n. Oh :cry: \nDo we need to reduce the MinVersion so ? \n. Hi @Rondom ,\nThats an issue with appveyor configuration :cry: \nThere is a tools in dokan repository SetAssemblyVersion made by @js69 that does update the version.\nhttps://github.com/dokan-dev/dokany/tree/master/dokan_wix/SetAssemblyVersion\nI will add it in the appveyor build like that all appveyor installer will have there own version and will fix the issue you are facing.\n. Ok I see @js69 , so If I make appveyor set the BuildVersion at 3606 (1 for RC3 and 606 from the build version of appveyor) in the xml, it gonna be good ?\n. SetAssemblyVersion is only called in the release build script here:\nhttps://github.com/dokan-dev/dokany/blob/master/dokan_wix/build.bat#L10\nHis goal is to set C# installer version correctly.\nDll version is from here: https://github.com/dokan-dev/dokany/blob/master/Dokan.props#L6\n. Dokan library only hold the major API (dokan1.dll) and it will stay like this.\nThe goal in this, it is that dokan library should be packaged in the other application installer side by side. This will give the ability that all application with the same MAJOR API but with different version, can work in the same computer.\nAlso that application with old dokan library can still enjoy dokan driver updates without issues.\n. I hope that we are going to make a release before 1000 commit :D\nBut your question was good :smile:  ! I just found that build version can be reset. I will do it in the same time as when I change appveyor version here after a release: https://github.com/dokan-dev/dokany/blob/master/appveyor.yml#L12\n. Yes, you are right.\nWhat I propose, if you agree @Rondom , @js69 :\n- [x] RC-files (dokan.dll, ...) should be updated by SetAssemblyVersion\n- [x] Change version as @js69 proposed (RC1 would be 1.0.0.1000, RC2 would be 1.0.0.2000, RC3 then 1.0.0.3000)\n- [x] Make appeveyor set BuildVersion with his build number like 3606 for RC3 and build nb 606.\n- [x] Add build version in artifacts\n. Changes have been made https://github.com/dokan-dev/dokany/commit/54943033d2acff2d3ac0e2b90e3128eb87704fdd\nBuild result: https://ci.appveyor.com/project/Maxhy/dokany/branch/master/job/46jajxdvvjhridpl/artifacts\nNow RC files are correctly set by SetAssemblyVersion and appveyor use his build version in his release.\nI just remember that dokan is install in C:\\Programmes\\Dokan\\Dokan Library-1.0.0, I dont know if this should be changed to C:\\Programmes\\Dokan\\Dokan Library-1.0.0.3606 ?\n. :+1: and all file versions are ok ?\n. https://github.com/dokan-dev/dokany/commit/6d88a23d22d44edc604a19bd64da05c0bd65ce86\nIt gonna do the job :sunglasses: \nhttps://ci.appveyor.com/project/Maxhy/dokany/branch/master/job/n4pu1sd5urwdqiac\n. Great ! So we will let it as it is.\nThanks for your time @Rondom and @js69 !\n. Hello @bailey27 ,\nGood job for cppcryptfs !\nTo disable security request, you can simply set GetFileSecurity and SetFileSecurity to NULL here\nhttps://github.com/bailey27/cppcryptfs/blob/master/cppcryptfs/cryptdokan.cpp#L1455-L1456\nAnd remove AddSeSecurityNamePrivilege from your code\nhttps://github.com/bailey27/cppcryptfs/blob/master/cppcryptfs/cryptdokan.cpp#L1419-L1426\nThis will inform the system that you do not have the security features implemented and will ignore it.\n. :+1: Thank you for your feedback !\nWhen you FS is ready, tell me and I will add it on our web page !\n. :+1:  :heart: Thank you\n. Hi @bailey27 ,\nThis seems to be the same behaviour that https://github.com/dokan-dev/dokany/issues/249\nThe cppcryptfs.sdf is returned as not found for a reason.\nThis need to be investigated. If you have time to look into it, it would be very appreciate :+1: \nI have currently not a lots of time for it.\n. It seems like FileAllInformation should never return STATUS_BUFFER_OVERFLOW but instead STATUS_SUCCESS\nhttps://msdn.microsoft.com/en-us/library/cc232117.aspx\nI will take a look :)\n. Hi @bailey27 ,\nCan you try to force STATUS_SUCCESS for DokanFillFileAllInfo and see if it improve the situation ?\nAdd status = STATUS_SUCCESS here https://github.com/dokan-dev/dokany/blob/054300d20c341413daccf35dbdc91f0b5001fedc/dokan/fileinfo.c#L481\n. @bailey27 , I have not been able to make visual studio create an sdf also :cry: \nEverything worked without it :smile: \nI dont know what VS need to create it\n. Yes it is !\nIf I understood well, VS 2015 dropped SDF, I will make a test with VS 2013 this weekend.\n. Can be easily been reproduce with VS 2013 -> open a solution, close VS: Error as describe by @bailey27 \nQuick review: VS try to open an existing .sdf and .opensdf. He create opensdf at first, delete it, create a .sdf, delete it, and try to open it.\nFull log: http://pastebin.com/QULkenQz\n```\nCreate 0150\nCreateFile : C:\\Users\\liryna\\Desktop\\vs\\ConsoleApplication1\\ConsoleApplication1.sdf\n  AccountName: liryna, DomainName: DESKTOP-T9B1IFA\n    ShareMode = 0x0\n    AccessMode = 0x100080\n    FILE_READ_ATTRIBUTES\n    SYNCHRONIZE\n    FlagsAndAttributes = 0x0\n    OPEN_EXISTING\n    error code = 2\nCreateFile status = c0000034 - lastError = 2\nCreate 0151\nCreateFile : C:\\Users\\liryna\\Desktop\\vs\\ConsoleApplication1\\ConsoleApplication1.sdf\n  AccountName: liryna, DomainName: DESKTOP-T9B1IFA\n    ShareMode = 0x3\n    FILE_SHARE_READ\n    FILE_SHARE_WRITE\n    AccessMode = 0x12019f\n    FILE_READ_DATA\n    FILE_READ_ATTRIBUTES\n    FILE_READ_EA\n    READ_CONTROL\n    FILE_WRITE_DATA\n    FILE_WRITE_ATTRIBUTES\n    FILE_WRITE_EA\n    FILE_APPEND_DATA\n    SYNCHRONIZE\n    STANDARD_RIGHTS_READ\n    STANDARD_RIGHTS_WRITE\n    STANDARD_RIGHTS_EXECUTE\n    FlagsAndAttributes = 0x10000080\n    FILE_ATTRIBUTE_NORMAL\n    FILE_FLAG_RANDOM_ACCESS\n    CREATE_NEW\nCreateFile status = 0 - lastError = 0\nCleanup 0144\nCleanup: C:\\Users\\liryna\\Desktop\\vs\\ConsoleApplication1\\ConsoleApplication1.opensdf\nGetFileInfo 0151\nGetFileInfo : C:\\Users\\liryna\\Desktop\\vs\\ConsoleApplication1\\ConsoleApplication1.sdf\n    GetFileInformationByHandle success, file size = 0\nresult =  0\nFileStandardInformation\nDispatchQueryInformation result =  0\n\nClose 0144\nClose: C:\\Users\\liryna\\Desktop\\vs\\ConsoleApplication1\\ConsoleApplication1.opensdf\nWriteFile 0136\nWriteFile : C:\\Users\\liryna\\Desktop\\vs\\ConsoleApplication1\\ConsoleApplication1.opensdf, offset 0, length 14\n    write 14, offset 0\nGetFileInfo 0151\nGetFileInfo : C:\\Users\\liryna\\Desktop\\vs\\ConsoleApplication1\\ConsoleApplication1.sdf\n    GetFileInformationByHandle success, file size = 0\nresult =  0\nFileBasicInformation\nDispatchQueryInformation result =  0\n\nWriteFile 0136\nWriteFile : C:\\Users\\liryna\\Desktop\\vs\\ConsoleApplication1\\ConsoleApplication1.opensdf, offset 14, length 30\n    write 30, offset 14\nGetFileInfo 0151\nGetFileInfo : C:\\Users\\liryna\\Desktop\\vs\\ConsoleApplication1\\ConsoleApplication1.sdf\n    GetFileInformationByHandle success, file size = 0\nresult =  0\nFileStandardInformation\nDispatchQueryInformation result =  0\n\nGetFileInfo 0151\nGetFileInfo : C:\\Users\\liryna\\Desktop\\vs\\ConsoleApplication1\\ConsoleApplication1.sdf\n    GetFileInformationByHandle success, file size = 0\nresult =  0\nFileInternalInformation\nDispatchQueryInformation result =  0\n\nCleanup 0151\nCleanup: C:\\Users\\liryna\\Desktop\\vs\\ConsoleApplication1\\ConsoleApplication1.sdf\nClose 0151\nClose: C:\\Users\\liryna\\Desktop\\vs\\ConsoleApplication1\\ConsoleApplication1.sdf\nCreate 0152\nCreateFile : C:\\Users\\liryna\\Desktop\\vs\\ConsoleApplication1\\ConsoleApplication1.sdf\n  AccountName: liryna, DomainName: DESKTOP-T9B1IFA\n    ShareMode = 0x7\n    FILE_SHARE_READ\n    FILE_SHARE_WRITE\n    FILE_SHARE_DELETE\n    AccessMode = 0x10080\n    DELETE\n    FILE_READ_ATTRIBUTES\n    FlagsAndAttributes = 0x200000\n    FILE_FLAG_OPEN_REPARSE_POINT\n    OPEN_EXISTING\nCreateFile status = 0 - lastError = 0\nGetFileInfo 0152\nGetFileInfo : C:\\Users\\liryna\\Desktop\\vs\\ConsoleApplication1\\ConsoleApplication1.sdf\n    GetFileInformationByHandle success, file size = 0\nresult =  0\nFileStandardInformation\nDispatchQueryInformation result =  0\n\nGetFileInfo 0152\nGetFileInfo : C:\\Users\\liryna\\Desktop\\vs\\ConsoleApplication1\\ConsoleApplication1.sdf\n    GetFileInformationByHandle success, file size = 0\nresult =  0\nFileBasicInformation\nDispatchQueryInformation result =  0\n\nGetFileInfo 0152\nGetFileInfo : C:\\Users\\liryna\\Desktop\\vs\\ConsoleApplication1\\ConsoleApplication1.sdf\n    GetFileInformationByHandle success, file size = 0\nresult =  0\nFileStandardInformation\nDispatchQueryInformation result =  0\n\nGetFileInfo 0152\nGetFileInfo : C:\\Users\\liryna\\Desktop\\vs\\ConsoleApplication1\\ConsoleApplication1.sdf\n    GetFileInformationByHandle success, file size = 0\nresult =  0\nFileInternalInformation\nDispatchQueryInformation result =  0\n\nGetFileInfo 0152\nGetFileInfo : C:\\Users\\liryna\\Desktop\\vs\\ConsoleApplication1\\ConsoleApplication1.sdf\n    GetFileInformationByHandle success, file size = 0\nresult =  0\nFileAttributeTagInformation\nDispatchQueryInformation result =  0\n\nSetFileInfo 0152  13\nGetFileInfo : C:\\Users\\liryna\\Desktop\\vs\\ConsoleApplication1\\ConsoleApplication1.sdf\n    GetFileInformationByHandle success, file size = 0\nDeleteFile C:\\Users\\liryna\\Desktop\\vs\\ConsoleApplication1\\ConsoleApplication1.sdf\n  dispositionInfo->DeleteFile = 1\n    DispatchSetInformation result =  0\nCleanup 0152\nCleanup: C:\\Users\\liryna\\Desktop\\vs\\ConsoleApplication1\\ConsoleApplication1.sdf\nDeleteOnClose\n\nDeleteFile success\nClose 0152\nClose: C:\\Users\\liryna\\Desktop\\vs\\ConsoleApplication1\\ConsoleApplication1.sdf\nCreate 0153\nCreateFile : C:\\Users\\liryna\\Desktop\\vs\\ConsoleApplication1\\ConsoleApplication1.sdf\n  AccountName: liryna, DomainName: DESKTOP-T9B1IFA\n    ShareMode = 0x7\n    FILE_SHARE_READ\n    FILE_SHARE_WRITE\n    FILE_SHARE_DELETE\n    AccessMode = 0x10080\n    DELETE\n    FILE_READ_ATTRIBUTES\n    FlagsAndAttributes = 0x200000\n    FILE_FLAG_OPEN_REPARSE_POINT\n    OPEN_EXISTING\n    error code = 2\nCreateFile status = c0000034 - lastError = 2\n```\n. New logs:\nkernel.txt\nmirror.txt\n. There is two CreateFile : C:\\Users\\liryna\\Desktop\\vs\\ConsoleApplication1 that follow, my guess would be that the acces denied is linked to a wrong SecurityContext.\n```\nCreate 0184\nCreateFile : C:\\Users\\liryna\\Desktop\\vs\\ConsoleApplication1\n  AccountName: liryna, DomainName: DESKTOP-T9B1IFA\n    ShareMode = 0x3\n    FILE_SHARE_READ\n    FILE_SHARE_WRITE\n    AccessMode = 0x100080\n    FILE_READ_ATTRIBUTES\n    SYNCHRONIZE\n    FlagsAndAttributes = 0x0\n    OPEN_EXISTING\n    error code = 5\nCreateFile status = c0000022 - lastError = 5\nCreate 0185\nCreateFile : C:\\Users\\liryna\\Desktop\\vs\\ConsoleApplication1\n  AccountName: liryna, DomainName: DESKTOP-T9B1IFA\n    ShareMode = 0x3\n    FILE_SHARE_READ\n    FILE_SHARE_WRITE\n    AccessMode = 0x100080\n    FILE_READ_ATTRIBUTES\n    SYNCHRONIZE\n    FlagsAndAttributes = 0x0\n    OPEN_EXISTING\nCreateFile status = 0 - lastError = 0\n```\n. Hi @jetwhiz ,\nHumm the first case should work since normally cleanup passed. I have to look at this. Does this also happen with the mirror ?\n. Humm so what you face could be an issue in the fuse wrapper on the cleanup <-> close.\nThere is a TODO on the cleanup and it seems to be exactly what you face.\nhttps://github.com/dokan-dev/dokany/blob/4f1d82fe80b574d81dabb59debcfbf1972e4e4b1/dokan_fuse/src/fusemain.cpp#L392\nWhat do you think ?\n. Ok I see \ud83d\ude22 \nDo you think to look into this ? (also create another issue for this issue you are facing ?) \u2764\ufe0f \n. Oh that's interesting. Probably yes Windows Defender bother the process of zip.\nI also think this will not happen with a dokan full signed like the RC release.\n. Even mirror.exe and dokan1.dll  are signed ? :cry: \n(Defender like other antivirus only spy app not signed)\n. dokan1.dll always has to be embedded with user applications because the one in system32 can be another version of the major API 1 and being not binary compatible.\n. Since this is related to Windows Defender, can this issue be closed ?\nI am not sure we can do something about it :cry: \n. That's a big if and hard to check :cry: \nBut you are right, FsRtlCheckOplock should be implemented in other IRP !\nlike fastfat\nhttps://github.com/Microsoft/Windows-driver-samples/tree/master/filesys/fastfat\n. @bailey27 your changes, seems to be correct, does it solve complitly the zip issue ?\nThis should be well test to see if not other cases have been broken.\nDokan does not support IRP_MJ_FILE_SYSTEM_CONTROL so it is not important that FsRtlCheckOplock is missing.\nAbout fastfat's cleanup, if found nothing on msdn about returning pending, I would say it is safe for now :smiley: \nhttps://msdn.microsoft.com/en-us/library/windows/hardware/ff548608(v=vs.85).aspx\nThank you again for taking the time on this issue ! I let @marinkobabic review it, give his final word and will test it.\n. @bailey27 If I am not wrong, when FileLockInUserMode is false, DokanCommonLockControl will call FsRtlCheckOplock with callback DokanOplockComplete then DokanRegisterPendingIrp that will free the eventContext.\nSo if FsRtlCheckOplock() did return pending on the operation, then this lock request would get dispatched by DokanOplockComplete() to user mode even though\nWe should ping @Maxhy to have an answer for this probably :+1: \ndcb->FileLockInUserMode is TRUE, then FsRtlCheckOplock() will never be called about locks because DokanCommonLockControl() isn't called then.\nIf I am not wrong (correct me @Maxhy ), this is made in purpose to give the ability here for the user mode to lock his resource himself with Lock Unlock dokan operation.\n. Fixed with your contribution @bailey27 Thanks again !\n. Ah @Rondom ! Thank you for your time and contribution as always :heart: \nvery appreciate !\n. Hi @bailey27 !\nThank you for your report and analyse !\nAfter review of your code, this seems to be alright !\nThis seems to be a new request for Windows 10 (there is a couple like this so we add it when we face it...)\nDo you want to make a pull request yourself or I apply your patch with your name in the commit ?\n. Patch merged https://github.com/dokan-dev/dokany/pull/268\nThank you @bailey27 !\n. Thank you @bailey27 ! Very appreciate ! :heart: \n. Hi @bailey27 ,\nDesiredAccess != DELETE)) { // Directory cannot be open for DELETE\nThis line is made in prupose (probably can be improved) to fix DeleteFile on Directory that success without it DeleteFile('C:\\TMP');.\nAbout flag FILE_OPEN_FOR_BACKUP_INTENT, I think a simple CreateFile tests on the mirror should make it work but as far as I know, the flag should be correctly transmit to the mirror.\nIf you find nothing until there, I will make a test myself on cygwin this weekend :)\n. :open_mouth: So just by adding the flag as you did in your patch\n```\nBailey@haswell /cygdrive/m\n$ mkdir foo\nBailey@haswell /cygdrive/m\n$ rmdir foo\n```\ndoes work ? \nHumm could you try to add here https://github.com/dokan-dev/dokany/blob/master/samples/dokan_mirror/mirror.c#L257\nif (fileAttr != INVALID_FILE_ATTRIBUTES &&\n      (fileAttr & FILE_ATTRIBUTE_DIRECTORY))) { \n       DokanFileInfo->IsDirectory = true;\n}\nand see if it helps ?\n. @Rondom I have added an issue for the behaviour that you describe: https://github.com/dokan-dev/dokany/issues/270\nC Mirror does have the check here: https://github.com/dokan-dev/dokany/blob/bbbdbcb8f0ce666582365fff6db653d1b853acfd/samples/dokan_mirror/mirror.c#L757\n. Hi @bailey27 ,\nI have currently a fix in local for your issue but I have the issue with DeleteFile that success on directory :(\nCurrent patch: http://pastebin.com/pyAsVeRp\n. EDIT: FILE_FLAG_BACKUP_SEMANTICS has to be added otherwise explorer would get an acces denied for every open folde request.\nI also dont know if dokan  sys does never get FILE_OPEN_FOR_BACKUP_INTENT\nI agree normally if a software want to open a folder, he should use FILE_FLAG_BACKUP_SEMANTICS but explorer only request:\n```\nCreate 0112\nCreateFile : C:\\Users\\\n  AccountName: liryna, DomainName: DESKTOP-T9B1IFA\n        ShareMode = 0x7\n        FILE_SHARE_READ\n        FILE_SHARE_WRITE\n        FILE_SHARE_DELETE\n        AccessMode = 0x20000\n        READ_CONTROL\n        STANDARD_RIGHTS_READ\n        STANDARD_RIGHTS_WRITE\n        STANDARD_RIGHTS_EXECUTE\n        FlagsAndAttributes = 0x0\n        OPEN_EXISTING\n        error code = 3\nCreateFile status = c000003a - lastError = 3 \n```\n. Current fix on my side: https://github.com/Liryna/dokany/commit/dd175d21cc7e3079de806b4ec9396d569b753a97\nIf all test pass and it work the cygwin isssue on your side, I will merge it.\n. All test pass for me with https://github.com/Liryna/dokany/commit/2ecbb93d5855d8543ca4b560460da7a845a858de\n. :open_mouth: I was sure that PathIsDirectoryEmpty didn't had this issue, that why I replaced it :cry: \nAdding FILE_SHARE_READ will fix the issue but will probably somewhere create an issue :cry: \nWould be great to find a solution to see if directory is empty without having this sharing violation.\n. During Delete we have FILE_READ_ATTRIBUTES access, it would be great to use the CreateFile Handle to get information some how about the directory being empty or not but I find nothing in windows api like that...\nhttps://msdn.microsoft.com/en-us/library/windows/desktop/aa365258(v=vs.85).aspx\n. Ok, I pushed the patch with you fix so https://github.com/dokan-dev/dokany/commit/e49cf5b5bf0a6d7313a11ea3735c2130433fbfc6\nThanks again  @bailey27 for your time and your report !\n. FILE_OPEN_FOR_BACKUP_INTENT isn't passed to the driver.\nThere is only SL_OPEN_TARGET_DIRECTORY flag set to request that the file's parent directory should be opened. \nIt mean that dokan does have to handle himself SL_OPEN_TARGET_DIRECTORY by opening the parent directory with the flag FILE_OPEN_FOR_BACKUP_INTENT.\n@Corillian , how do you think this should be handled ?\nFastfat code:\nhttps://github.com/Microsoft/Windows-driver-samples/blob/6e1115d6af3c22b693eccc472ebb0d53a1905cd9/filesys/fastfat/create.c#L602\n. Hi @EcmaXp ,\nWhen you look at the signature, does windows show it as valide signature ?\nIf not, it would mean that the godaddy root certificate is missing (probably because you use a Insider Preview or a restricted environnement).\n. Humm well on a side Windows say it is a valide signature and another side it say it is not.\nSecure Boot Enabled, do you mean bios/uefi option ?\n. If WHQL is needed for Secure Boot, will not be able to get it.\nBut it would be interesting to know if this is exactly the source of the issue.\n. https://www.osronline.com/ShowThread.cfm?link=269799\nWith Secure Boot, windows load only driver WHQL driver you are right.\nDokan will never pass WHQL, I think this can be close.\nThank you @EcmaXp for the report ! I was not aware of this !\n. @zanderz I seen that you was using an EV certificat to sign Dokany,\ndid you already made a test on a newly installed Win10 from the iso released a the anniversary update ?\n. Hi @sdecugis ,\nThank you for the link ! This make it clearer. I was aware that we need EV certificate first but I was afraid that we need to pass WHQL and it seems not to be.  :+1: \nWe are currently asking to our company (ISLOG who is sponsoring Dokany by providing the current sign certificate) if they can buy an EV certificate needed here.\nBut this seems to take his time because it is an unplanned cost for them.\nI would like to use the dokany donation that should be used in such purpose for buying the certificate but we are extremely far from it (thank to our only  1$ donor ! :heart: )\n. Microsoft list all authorities that can provide it here:\nhttps://msdn.microsoft.com/en-us/library/windows/hardware/hh801887.aspx\nAlso on Developer Center Dashboard portal I found:\n```\nA Dashboard account for your company is a prerequisite for creating user accounts. You must establish your company\u2019s identity by purchasing a codesigning certificate. Additionally, as an extra measure of security, all submitted files must be signed using the same codesigning certificate.\nWe accept code sign certificates from Symantec and DigiCert. \n```\nSo we will need to take a Symantec or a DigiCert cert.\nI was not able to find Symantec pric but for DigiCert  it is $224.00 USD / year  or $497.00 USD for 3 years.\nhttps://www.digicert.com/order/order-1.php\n. Ah perfect @zanderz ! highly appreciate information that you are providing !\nAlright so Developer Center is going to be an obligation. I just hope it is adapted for drivers like Dokan.\nYes, the donation button on the README for PayPal https://github.com/dokan-dev/dokany/blob/master/README.md is the current way to make a donation but if you would like to use another system (since PayPal has fees) we are open to any proposition !\nYou are right, I just find out when looking at the price that they ship the cert in a Hardware Token as you explained. We are currently doing to release by hand so it is not going to be an issue :laughing: \nFor information, it is going to take 10-15 days of shipment.\nAlso do you know if the DigiCert offers code signing certs to Sysdevs at 50% off our regular pricing. https://www.digicert.com/friends/sysdev/ is enough O_o ? They don't explain the limitation of the sysdev offer.\nEven Symantec price is practically 1k$/y O_o there is a big gap between DigiCert offer.\nhttps://www.symantec.com/page.jsp%3Fid%3Dcompare-ssl-certificates\n. From DigiCert Support Yes, the EV cert is compatible for the kernel driver signing and works fine with the Sys dev portal. No difference, the sysdev link is just a 50 percent discount.\nSo we will also take a DigiCert.\n@zanderz OK for TransferWise , It seems like I have to create a link with the exact amount. How much would you like to donate ? (you can contact me directly by mail if you want more privacy on this liryna.stark@gmail.com)\n. Thank to Keybase donation : , we will start the EV buying procedure Monday.\nI will keep update this ticket with the status of the submission procedure to make Dokan run on Windows 10, version 1607 with secure boot.\nI know that dokan is used in different business projects and I would only like to remember companies that open source is good but supporting it by providing resources or donation is also very well appreciated !\nWithout Keybase sponsorship, we would probably not be able to go further on this issue.\nThanks again to them !\n. The DigiCert Hardware Token with EV Certificate has just been shipped.\nWe should get it in the 10-15 next days.\n. Got cert from Digicert earlier than expected :+1: \nI have been able to submit a dokan driver x64 for windows 10 family signature.\nI don't have a windows 10 family for now but this should work since the driver has the Microsoft SHA2 signature.\nThe submit is manually for x64 and x86 :-1: and take some minutes to be approved.\nAlso like I said before, this version does only work with windows 10 family, other  windows 10 version needs HLK test.\nSee https://msdn.microsoft.com/windows/hardware/drivers/develop/attestation-signing-a-kernel-driver-for-public-release\n\nAn attestation signed driver will only work for Windows 10 Desktop, it will not work for other versions of Windows, such as Windows Server 2016, Windows 8.1, or Windows 7.\n. The simple signature process (that I did and only work on windows 10 family) scan the binary to see if it has been signed by an EV certificate and if there is no virus and such.\nWhen finished, you can download your driver back with the \"Microsoft Windows Hardware Compatibility Publisher\" SHA2 binary signature that replace your.\n\nThe HLK submission for making it work on other windows version will take more time (installing and configuring two windows server 2012 r2 with testing software) will take more time. And we will probably have to request and vendor ID to Microsoft.\nIt seems like Microsoft gives you a test profile that you have to run on your driver and when it passes all the test you can submit the report to the Microsoft portal that will sign your driver.\nThe second part is only supposition since...documentation is not clear on this.\n. > Can you elaborate? What other Windows 10 versions are there? Any what do you mean by \"Windows 10 Family\"?\nI just sent a mail to windows support with the exact question :smile: I have no idea and I have no more information on this that this link  https://msdn.microsoft.com/windows/hardware/drivers/develop/attestation-signing-a-kernel-driver-for-public-release\nSee how the submission is very full of information:\n\n. @Rondom no idea also, I will give more informations when I get the microsoft support answer :(\n. @zanderz Yes, I just needed to wait that the bot analyse the cab during some minutes and I was able to download it directly.\nI got an answer from sysdev support:\n\nI just signed my driver for Windows 10 Client family by using the hardware dev center, file signing services (create driver signing submission).\nDoes it only work for windows 10 family (Home ?) ? Or all Desktop (Home, Pro, Education and Enterprise) ?\n[Jack] It covers all Win10 client SKU.\nOn which version of windows does the HLK signature is now forced ?\n[Jack] All Windows OSes except Windows RS1(1607). \nPlease refer to https://blogs.msdn.microsoft.com/windows_hardware_certification/2016/08/02/submissions-using-windows-10-version-1607-and-windows-server-2016-are-now-being-accepted/\n\nI have not found an official list but it seems like windows 10 SKU are:\nWindows 10 Home\nWindows 10 Pro\nWindows 10 Mobile\nWindows 10 Enterprise\nWindows 10 Enterprise LTSB (Long Term Servicing Branch)\nWindows 10 Mobile Enterprise\nWindows 10 Education\nWindows 10 IoT Core (special versions for small footprint, low cost devices)\nhttp://www.askvg.com/list-of-windows-10-editions-skus/\nDoes someone know exactly what are Win10 client SKU ?\n. Thank you @kbarnes3 for making it clearer :smiley: !\nI have been able to install HLK test environment.\nDokan only needs to pass the test \"HyperVisor Integrity Readiness Test\" http://go.microsoft.com/fwlink/?LinkId=787617\nThe test is very simple and passes with success on my side. I did all the steps but  have not been able to create a submission package on sysdev portal for now. I currently don\u2019t have the certificate needed for it with me.\nAlso with the new system made by Microsoft, the release process becomes very heavy....it seems like test + submission has to be made on each architecture for each release and cannot be atomized :cry: \n. Hi @sdecugis ,\nDokan 1.0.0 will normally be release next week and will have a driver compatible with new Win 10.\nI hope to get time until that to test HLK submission and make the release also compatible with windows 10 server.\n\nWhen you write \"on each architecture\" do you mean you cannot use the previous way (with your older certificate or the newer one) for Win7, Win8, Win8.1, and only use the new submission process for Win10 (32 an 64) to limit the workload ?\n\nYes, we can still sign as before the Win7, Win8, Win8.1 with SHA1/SHA2. It is only with Win 10 where you have to submit a your driver for 32 and 64 bit at each release manually and download back your driver with Microsoft signature SHA2. It means that I will make a manual step on the build script that will ask you to do the submission on Microsoft portal.\nI hope I have been clearer :wink: \n. HLK submission passed :+1: SO normally this should work on windows server also\nIf someone would like to test and give some feedback (x64):\ndokan1.zip\nInstall:\ndokanctl /r d\n//reboot\n//replace C:\\Windows\\System32\\drivers\\dokan1.sys\ndokanctl /i d\nI have to install a Win32 Win10 for submission x86\n. @Rondom Yes it should. I don't have a windows server 2016 for testing it but from Microsoft support information, this should be the case.\nI don't even know if secure boot can be enabled with virtualbox to test it :'(\nDokan is even deployed in windows update :smile: (it is part of the submission that cannot be disabled...)\n. @Rondom I don't think so, there is even no publishing version asked.\nI guess this is only used if you plug device that match the driver description product ID.\n(never done this but I guesss so)\n. No idea on this, but I truly don't give information about the dokan driver else than the .inf\nThis would be surprising behaviour if they do it :D\n. @sdecugis oh that's perfect news ! Thank a lot for the testing ! It was something where I didn't have the hardware for it.\nAbout 1.0.0 release, I am waiting a PR from @Rondom and two issues need to be fixed:\nhttps://github.com/dokan-dev/dokany/issues/332\nhttps://github.com/dokan-dev/dokany/issues/331\nI am going to look at them during the next days but if someone can give a hand on it... :smiley: \nI know that we have pushed the release from a couple of weeks and am sorry about it but we want to make the cleanest possible !\nWe are going to force the release next week.\n@Rondom do you think this gonna be possible ?\n. :cry: I tought it too...I don't see other way to sign it.\nDoes the microsoft signature on the driver is showed as valid by your windows 2016 ?\nI have write to microsoft support, hope that they will answer me this time...\n. @js69 \n\nOSR has some additional info here: http://insider.osr.com/2016/ntinsider_2016_01.pdf\n\nInteresting ! They only tested microsoft signature on windows desktop also :D but nothing about windows server :cry: (page 19)\n\nhttps://msdn.microsoft.com/en-us/library/windows/hardware/hh801887#code_signing_faq\nA dashboard signed driver that has passed the HLK tests will work on Windows Vista through Windows 10, including Windows Server editions.\n\nProbably the HLK test has to be done on a Windows server 2016 to be signed compatible for this version. If that's the case, the release are really going to be fun :disappointed:\nWindows server 2016 is going to be release in the next month. If I don't have the time to install a windows server 2016 next week, I will do the signature in the next release for it.\n. @js69 no I didn't and there nothing is nothing on the sysdev portal about it. It is probably only a testing framework.\nThere is an iso Windows Server 2016 Technical Preview 5 (x64) - DVD (English) on the msdn store. I will try to install it and submit a driver from it tomorrow.\n. No time today, I moved the test to tomorrow.\n. :sunglasses: Release will be signed for Windows server 2016 (only x64)\nSignature Only - Device - Compatible with Windows Server 2016, x64 \n. https://github.com/dokan-dev/dokany/releases/tag/v1.0.0\nDriver are now signed for 1607.\nIf you have any issue, please let me know !\n. Hi @markuskreusch ,\nThank you for the report with all informations !\nThe issue seems to happen here: https://github.com/dokan-dev/dokany/blob/1675b21181abb8e0a032453bd6da968759cbbd65/dokan/dokan.c#L92\nCan you check if the mount path gave by the java wrapper is correct ? It look like the buffer does not finish with \\0 (so it make wcslen segv)\n. @markuskreusch I was missleaded by the dump stack. \nIt is impossible that the IsMountPointDriveLetter from dokan\\dokan.c is called since we are in the kernel. I don't really know what is happening therefore.\nDoes the kernel dump is always the same ?\n. @markuskreusch feel free to reopen if you have been able to reproduce it.\n. Hi @bailey27 ,\nThank you for your contribution and your time on the issue ! very appreciate ! :+1: \nFix office 2010 and handle correctly SL_OPEN_TARGET_DIRECTORY.\n. @bailey27 , there is two issues reported by coverity:\nfileName is free two times when device is read only: \nhttps://github.com/dokan-dev/dokany/blob/1bf0c58e8e52bc65334898f152429c298b313fe1/sys/create.c#L649\nhttps://github.com/dokan-dev/dokany/blob/1bf0c58e8e52bc65334898f152429c298b313fe1/sys/create.c#L1116\nAlso he say that parentDir is never free\nhttps://github.com/dokan-dev/dokany/blob/1bf0c58e8e52bc65334898f152429c298b313fe1/sys/create.c#L1113\n. :+1: thank you @bailey27 for the quick fix ! very appreciate !\n. Thank you for the qucik fix @bailey27  ! :heart: \n. Hi @bailey27 ,\nOh yes, I did not seen :( you are right, this has to be keeped !\nThank you ! :+1: \n. You are right @taruti !\nThis has been removed: https://github.com/dokan-dev/dokany/commit/9d6bacedee6831619e00f701bb2de8e7853dd414\n. Hi @skyjally ,\nA test on 1.0.0 would be the best to do :smile: \n0.6.0 is very far from 1.0.0, I am pretty sure this will solve your issue.\n. Hi @skyjally ,\nJust a quick test (I don't have an environement to do the test), does it work with new File(\"E:\\\"); ?\n. Hi @skyjally ,\nIt seems that java is using GetFileInformation for M:\\ and M:\\Users request but never GetDisksInformation\nI wanted to look at jdk source to know how he behave but enable to find out what is space0.\nDo you have an idea on it ?\nhttp://grepcode.com/file/repository.grepcode.com/java/root/jdk/openjdk/8u40-b25/java/io/WinNTFileSystem.java#628\n. Hi @marinkobabic ,\nThank you for the link ! I tested the c# and there is no issue with GetDiskFreeSpaceEx, it return the correct size.\nIt is at this moment that I understood that it is the wrong source code ... it is Java SE that is used here and not openjdk :smile:\nHere is FileSpy output:\n```\n4   02:09:59.151    18  javaw.exe   IRP_MJ_CREATE   00000884    FFFFE0005C531D48    M:  STATUS_SUCCESS  FILE_OPEN CreOpts: 00000021 Access: 00100000 Share:  00000003 Attrib: 0 Result: FILE_OPENED\n1   02:09:59.156        mirror.exe  IRP_MJ_CREATE   00000884    FFFFE0005D9579E8    M:  STATUS_SUCCESS  FILE_OPEN CreOpts: 00000060 Access: 0012019F Share:  00000003 Attrib: 0 Result: FILE_OPENED\n2   02:09:59.156        mirror.exe  IRP_MJ_CLEANUP  00000404    FFFFE0005D9579E8    M:  STATUS_SUCCESS\n3   02:09:59.156        mirror.exe  IRP_MJ_CLOSE    00000404    FFFFE0005D9579E8    M:  STATUS_SUCCESS\n5   02:09:59.170    2   javaw.exe   IRP_MJ_CLEANUP  00000404    FFFFE0005C531D48    M:  STATUS_SUCCESS\n6   02:09:59.172        javaw.exe   IRP_MJ_CLOSE    00000404    FFFFE0005C531D48    M:  STATUS_SUCCESS\n7   02:09:59.172        javaw.exe   FASTIO_QUERY_OPEN       0000000000000000    M:  FAILURE \n11  02:09:59.172    14  javaw.exe   IRP_MJ_CREATE   00000884    FFFFE0005C531D48    M:  STATUS_SUCCESS  FILE_OPEN CreOpts: 00200000 Access: 00000080 Share:  00000007 Attrib: 0 Result: FILE_OPENED\n8   02:09:59.173        mirror.exe  IRP_MJ_CREATE   00000884    FFFFE0005D9579E8    M:  STATUS_SUCCESS  FILE_OPEN CreOpts: 00000060 Access: 0012019F Share:  00000003 Attrib: 0 Result: FILE_OPENED\n9   02:09:59.173        mirror.exe  IRP_MJ_CLEANUP  00000404    FFFFE0005D9579E8    M:  STATUS_SUCCESS\n10  02:09:59.173        mirror.exe  IRP_MJ_CLOSE    00000404    FFFFE0005D9579E8    M:  STATUS_SUCCESS\n12  02:09:59.187        javaw.exe   FASTIO_QUERY_NETWORK_OPEN_INFO      FFFFE0005C531D48    M:  FAILURE \n13  02:09:59.187    3   javaw.exe   IRP_MJ_QUERY_INFORMATION    00000014    FFFFE0005C531D48    M:  STATUS_SUCCESS  FileNetworkOpenInformation CreateTime: 01D112DC-31BAE0F4 LastAccTime: 01D1A2DB-33FF6164 LastWrtTime: 01D1A2DB-33FF6164 ChangeTime: 01D1A2DB-33FF6164 AllocationSize: 00000000-00001000 EndOfFile: 00000000-00001000 Attrib: 00000011\n14  02:09:59.190    1   javaw.exe   IRP_MJ_CLEANUP  00000404    FFFFE0005C531D48    M:  STATUS_SUCCESS\n15  02:09:59.191        javaw.exe   IRP_MJ_CLOSE    00000404    FFFFE0005C531D48    M:  STATUS_SUCCESS\n19  02:09:59.191    13  javaw.exe   IRP_MJ_CREATE   00000884    FFFFE0005C531D48    M:  STATUS_SUCCESS  FILE_OPEN CreOpts: 00000021 Access: 00100000 Share:  00000003 Attrib: 0 Result: FILE_OPENED\n16  02:09:59.194        mirror.exe  IRP_MJ_CREATE   00000884    FFFFE0005D9579E8    M:  STATUS_SUCCESS  FILE_OPEN CreOpts: 00000060 Access: 0012019F Share:  00000003 Attrib: 0 Result: FILE_OPENED\n17  02:09:59.194        mirror.exe  IRP_MJ_CLEANUP  00000404    FFFFE0005D9579E8    M:  STATUS_SUCCESS\n18  02:09:59.194        mirror.exe  IRP_MJ_CLOSE    00000404    FFFFE0005D9579E8    M:  STATUS_SUCCESS\n20  02:09:59.204        javaw.exe   IRP_MJ_CLEANUP  00000404    FFFFE0005C531D48    M:  STATUS_SUCCESS\n21  02:09:59.205        javaw.exe   IRP_MJ_CLOSE    00000404    FFFFE0005C531D48    M:  STATUS_SUCCESS\n25  02:09:59.205    14  javaw.exe   IRP_MJ_CREATE   00000884    FFFFE0005C531D48    M:  STATUS_SUCCESS  FILE_OPEN CreOpts: 00000021 Access: 00100000 Share:  00000003 Attrib: 0 Result: FILE_OPENED\n22  02:09:59.207        mirror.exe  IRP_MJ_CREATE   00000884    FFFFE0005D9579E8    M:  STATUS_SUCCESS  FILE_OPEN CreOpts: 00000060 Access: 0012019F Share:  00000003 Attrib: 0 Result: FILE_OPENED\n23  02:09:59.207        mirror.exe  IRP_MJ_CLEANUP  00000404    FFFFE0005D9579E8    M:  STATUS_SUCCESS\n24  02:09:59.207        mirror.exe  IRP_MJ_CLOSE    00000404    FFFFE0005D9579E8    M:  STATUS_SUCCESS\n26  02:09:59.220        javaw.exe   IRP_MJ_CLEANUP  00000404    FFFFE0005C531D48    M:  STATUS_SUCCESS\n27  02:09:59.221        javaw.exe   IRP_MJ_CLOSE    00000404    FFFFE0005C531D48    M:  STATUS_SUCCESS  \n```\n. Oh thank you @Rondom !\nI go test it :smile: \n. @Rondom First time I browse JDK source code :smile: the help was very appreciate !\nI have been able to reproduce the issue with a sample from getSpace0 code.\nGetVolumePathNameW return ERROR_INVALID_PARAMETER -  87 (0x57) if M:\\ is requested and succeed with M:\\MyFoler.\n```\ninclude \ninclude \nint main()\n{\n  WCHAR volname[MAX_PATH + 1];\nif (GetVolumePathNameW(TEXT(\"M:\\\"), volname, MAX_PATH)) {\n    ULARGE_INTEGER totalSpace, freeSpace, usableSpace;\n    if (GetDiskFreeSpaceExW(volname, &usableSpace, &totalSpace, &freeSpace)) {\n      std::cout << totalSpace.HighPart << \"-\" << totalSpace.LowPart << std::endl;\n    }\n    else\n      std::cout << \"GetDiskFreeSpaceExW fail: \" << GetLastError() << std::endl;\n  }\n  else\n    std::cout << \"GetVolumePathNameW fail: \" << GetLastError() << std::endl;\n}\n```\nGetVolumePathNameW(TEXT(\"M:\\\\\"), volname, MAX_PATH) should work since it work with C:\\\\ or E:\\\\\n. Ok here we are:\nThere is no log at all in the mirror when GetVolumePathNameW(TEXT(\"M:\\\\\"), volname, MAX_PATH) is called.\nKernel output:\n```\n[DokanFS]    IdType = VCB\n[DokanFS]   IOCTL_KEEPALIVE\n[DokanFS]   status = 0x0\n[DokanFS]   status = STATUS_SUCCESS\n[DokanFS] ==> ReleaseTimeoutPendingIRP\n[DokanFS]   IrpQueue is Empty\n[DokanFS]    IdType = VCB\n[DokanFS]   IOCTL_KEEPALIVE\n[DokanFS]   status = 0x0\n[DokanFS]   status = STATUS_SUCCESS\n[DokanFS] ==> DokanCreate\n[DokanFS]   Create: ProcessId 5532, FileName:(null)\n[DokanFS]    IdType = DCB\n[DokanFS]   IdentifierType is not vcb\n[DokanFS]   Create: FileName:(null), status = 0x00000000\n[DokanFS]   status = 0x0\n[DokanFS]   status = STATUS_SUCCESS\n[DokanFS] <== DokanCreate\n[DokanFS] ==> DokanDispatchIoControl\n[DokanFS]   ProcessId 5532\n[DokanFS]    IdType = DCB\n[DokanFS]    => DokanDiskDeviceControl\n[DokanFS]    IOCTL_MOUNTDEV_QUERY_DEVICE_NAME\n[DokanFS]   DeviceName \\Device\\Volume{d6cc17c5-1737-4085-bce7-964f1e9f5de9}\n[DokanFS]    <= DokanDiskDeviceControl\n[DokanFS]   status = 0x0\n[DokanFS]   status = STATUS_SUCCESS\n[DokanFS]   status = 0x0\n[DokanFS]   status = STATUS_SUCCESS\n[DokanFS] <== DokanDispatchIoControl\n[DokanFS] ==> DokanCleanup\n[DokanFS]   ProcessId 5532\n[DokanFS]   FileName: (null) FCB.FileName: (null)\n[DokanFS]   status = 0x0\n[DokanFS]   status = STATUS_SUCCESS\n[DokanFS] <== DokanCleanup\n[DokanFS] ==> DokanClose\n[DokanFS]   ProcessId 5532\n[DokanFS]   FileName: (null) FCB.FileName: (null)\n[DokanFS]   status = 0x0\n[DokanFS]   status = STATUS_SUCCESS\n[DokanFS] <== DokanClose\n[DokanFS] ==> DokanCreate\n[DokanFS]   Create: ProcessId 5532, FileName:(null)\n[DokanFS]    IdType = DCB\n[DokanFS]   IdentifierType is not vcb\n[DokanFS]   Create: FileName:(null), status = 0x00000000\n[DokanFS]   status = 0x0\n[DokanFS]   status = STATUS_SUCCESS\n[DokanFS] <== DokanCreate\n[DokanFS] ==> DokanCleanup\n[DokanFS]   ProcessId 4\n[DokanFS]   FileName: (null) FCB.FileName: (null)\n[DokanFS]   status = 0x0\n[DokanFS]   status = STATUS_SUCCESS\n[DokanFS] <== DokanCleanup\n[DokanFS] ==> DokanDispatchIoControl\n[DokanFS]   ProcessId 5532\n[DokanFS]    IdType = DCB\n[DokanFS]    => DokanDiskDeviceControl\n[DokanFS]    IOCTL_MOUNTDEV_QUERY_DEVICE_NAME\n[DokanFS]    <= DokanDiskDeviceControl\n[DokanFS]   status = 0x80000005\n[DokanFS]   status = STATUS_BUFFER_OVERFLOW\n[DokanFS]   status = 0x80000005\n[DokanFS]   status = STATUS_BUFFER_OVERFLOW\n[DokanFS] <== DokanDispatchIoControl\n[DokanFS] ==> DokanDispatchIoControl\n[DokanFS]   ProcessId 5532\n[DokanFS]    IdType = DCB\n[DokanFS]    => DokanDiskDeviceControl\n[DokanFS]    IOCTL_MOUNTDEV_QUERY_DEVICE_NAME\n[DokanFS]   DeviceName \\Device\\Volume{d6cc17c5-1737-4085-bce7-964f1e9f5de9}\n[DokanFS]    <= DokanDiskDeviceControl\n[DokanFS]   status = 0x0\n[DokanFS]   status = STATUS_SUCCESS\n[DokanFS]   status = 0x0\n[DokanFS]   status = STATUS_SUCCESS\n[DokanFS] <== DokanDispatchIoControl\n[DokanFS] ==> DokanClose\n[DokanFS]   ProcessId 5532\n[DokanFS]   FileName: (null) FCB.FileName: (null)\n[DokanFS]   status = 0x0\n[DokanFS]   status = STATUS_SUCCESS\n[DokanFS] <== DokanClose\n[DokanFS]    IdType = VCB\n[DokanFS]   IOCTL_KEEPALIVE\n[DokanFS]   status = 0x0\n[DokanFS]   status = STATUS_SUCCESS\n[DokanFS] ==> ReleaseTimeoutPendingIRP\n[DokanFS]   IrpQueue is Empty\n[DokanFS]    IdType = VCB\n[DokanFS]   IOCTL_KEEPALIVE\n[DokanFS]   status = 0x0\n[DokanFS]   status = STATUS_SUCCESS\n``\n.GetVolumeNameForVolumeMountPointW` does work on C:\\ drive and does fail on M:\\ (error ERROR_INVALID_PARAMETER - 87 (0x57))\nSame debug kernel output than before.\nDo you have an idea why is this happening ?\n. GetVolumeNameForVolumeMountPointW and Java work with mount manager option ( /o) :+1:\nWell found @marinkobabic as always :heart: !!!\n@skyjally can you make a test on your side ?\n. Hi @skyjally,\nDid you made the test with /o option ?\nhttps://github.com/dokan-dev/dokany/blob/master/samples/dokan_mirror/mirror.c#L1313\nThis is the only way it work\n. @skyjally no problem and thanks for the report !\nIt is gonna be helpful for people having the issue.\nThis option register dokan device to windows with different information that are needed for GetVolumeNameForVolumeMountPointW .\n. Hi @cpptinybird ,\nI don't understand the issue, can you be more specific ?\n. @cpptinybird \nForcing CreateFile to always open \"C:\\1.txt\" like that is impossible, CreateFile is called on ALL files and directories listed by MirrorFindFiles.\nUser /d /s option to see all request made on your FS.\n. At this moment, it is Notepad++ that directly request to open a FILE, so your code does work in your case BUT explorer is calling every file with different values to know if the file is a file OR a directory and since with your code I guess a LOT of request fail....it create a bad behaviour\n. No problem !\n. Hi @taruti ,\nThank you for your contribution ! :+1: \nDoes this improve one of the issues you are facing ?\n. Hi @bailey27 ,\nRC3 does have fs notifications. I don't really know what could change this behaviour since RC3.\nDoes that mean that more test pass with RC3 when explorer is open ? (normally some will fail since I fixed different test after RC3)\nIs it always the same tests that fail ?\nhttps://github.com/dokan-dev/dokany/compare/v1.0.0-RC3...master\n. @Rondom is right, we already use clang format.\nIt do a very great job, the only issue is that the plugin only indent when the code is selected and plugin called.\nI still hope that one day the integration would be better :(\n. We can use EditorConfig to set proper indent tab space size but Visual studio will still not be able to handle the format style :cry: \n. Current EditorConfig:\n```\nroot = true\n[*.{c, h, cpp, hpp}]\nend_of_line = lf\ninsert_final_newline = false\ntrim_trailing_whitespace = false\nindent_style = space\nindent_size = 2\ntab_width = 8\ncharset = utf-8\n```\nI tried to reproduce LLVM indent style. It work but EditorConfig even with indent_brace_style = K&R, it keep go to new line after } like:\n//expected\n} else {\n}\n//EditorConfig\n}\nelse {\n}\nAlso function arguments on multi lines are not aligned as clang format and there seems to be no option to handle it.\nhttps://github.com/editorconfig/editorconfig/wiki/EditorConfig-Properties\nThis is better than default Visual studio configuration so I would agree to add it but it cannot replace clang format.\n. @Corillian , I think the EditorConfig I made should be added to the repository.\nAbout LLVM style, I would totally be open to change it if people think it is horrible to work with.\nI applied LLVM style because there were no limite in characet per line and it was horrible to scroll from right to the left every time and also because it was the most acceptable compared to other I found.\nWhat would be the best code style to apply ?\n. :+1: You made your point\nI will check to config cland format to look like this after your contribution (otherwise the merge gonna be hell :smile: )\n. Hi @Corillian ,\nI have made some changes on clang format in a test branch https://github.com/dokan-dev/dokany/commit/18532667a0e7fdcf46e1962bf2771669969f079c\nI have up ColumnLimit to 120, enable break at each braces and up indent width to 4.\nThis look a little more what you proposed for improving code reading.\nI have looked to add braces on singles if and add break at each if conditions but both seems to be currently not possible with clang format \ud83d\ude22 \nI would like some feedback on this and know if it should be applied on the master ?\n. Lets run clang format with this changes on 2.0.0 since the indent is already changed. :open_mouth: that's interesting and a good test !\nUnfortunatly I do not really have a reason to give for this behaviour.\nBut it seems to look the same as https://github.com/dokan-dev/dokany/issues/283 that you reported\n. @bailey27 Hi,\nyes the comment was part of the oplock implementation but had an huge issue of sharing violation. You was absolutely not able to copy past files from Explorer. \nDoes that mean that by freeing context when an error happen, Sharing violation issue dissappear? If yes, this code can be uncomment :D\nBy the way, I really wanted to thank you for the help and the time you take to make all the test. I currently do not have the time to investigate on it so it is very a pleasure to see such people as you!\n. @bailey27 Thank you for your full explanation ! \nThe code seems to be good for me. \nIs there a reason for removing https://github.com/bailey27/dokany/commit/113097cf092db6323e21d9e3c9a491cb32151464#diff-86caa6b16e4044982075fe5d5bc59915R101 ?\nAfter all your test, would you say that oplock are now correctly implemented and pass  oplocktest.exe and other test without issue with your patch ?\n. @bailey27 , I tested you branch https://github.com/bailey27/dokany/tree/oplock_share_access\nand I am unable to copy past files in the same folder :cry: on windows 10.\nCopy into another directory work but copy in the same location: no new file created, nothing happen.\nThis can reproduce by simply select a file and ctrl +c / ctrl +v\n. Thank you @bailey27 for your contribution and the quick fix ! :heart: \nI am able to copy files without issues !\nYour patch has been merged to the master :smiley: !\n. Hi @bailey27 ,\nThank you for the contribution :+1: looks good to me too !\nWell done :heart: \n. That's great ! @Corillian , in case of you are touching at the Irp pending in the kernel and you have the time, can you check if we correctly wait that the pending Irp finish before unmount ?\n. Hi @bailey27 ,\nAfter review of the code and your proposition, this seems to be the way to fix it ! :+1: \nI just hope that FsRtlCheckOplock blocking will not create freeze...but since you have not been able to create STATUS_PENDING :cry: it gonna be hard to check it\n. @Corillian Seems like @marinkobabic is already taking a look at the shutdown of the device, my request can be ignored for now :smiley:  :heart: Thank you\nIf your changes remove/fix this behavior, this issue can be ignored because since even @bailey27 is not able to reproduce it !\n. Oh my bad >< I made a mistake, sorry @bailey27 .\nYour changes are not big so I let @Corillian decide if this can be merged or we should wait #210.\n. Fixed with @bailey27 contribution https://github.com/dokan-dev/dokany/pull/290\nThanks all of you !\n. Hi @lefty74 ,\nThis is a win-sshfs issue, not dokan. You should open a ticket there.\nLike you did: https://github.com/dimov-cz/win-sshfs/issues/101\n. Hi @bailey27 ,\nThis does seems to be the good way to handle FILE_OPEN_REQUIRING_OPLOCK from what I see in the documentation and osronline explanation https://www.osronline.com/showThread.CFM?link=148269\nYou can create a pull request if you want, otherwise I add your patch like other contribution :smiley: \nIt would be great to have a testing framework for oplock, to be sure that next change would not break it :(\n. @bailey27 after testing, I pushed your changes on the master.\nThank you for your contribution as always !!! :+1: \n. Thank you @bailey27 for your contribution ! :heart: \nAnd well done for seeing it again :+1: \n(I made a patch and pushed it directly because of the git history of your branch)\nhttps://github.com/dokan-dev/dokany/commit/42fb8f80e7ba6dbb6c95020154de502c44182628\n. @js69 did you already faced this error ?\nI only found .NET installation corrupt when I look for 0x80070643\n. Thank you @js69 for your analyse :heart: \n@Green7 like said @js69 , this issue will be fixed in the next release by the .NET 4 check.\nThank you for your report and test !\n. :+1: I will just wait @marinkobabic changes on mount unmount that his is currently testing with @taruti \n. This issue seems to be invalid.\nReparse point is not using short name.\nI tested with a long file name and the name is not only uppercase but not changed like if this was short names.\n//when file name is dfosjdisfvjsdnfbvsdifohbusdibhusdifhbusdfuhbsdfbhsdfihbuoihihdfdfosjdisfvjsdnfbhhhhhhhhvsdifohbusdibhusdifhbusdfuhbsdfbhsdfihbuoihihdfdfosjdisfvjsdnfbvsdifohbusdibhusdifhbusdfuhbsdfbhsdfihbuoihihdfdfosjdisfvjsdnfbvsdifohbusdibh.txt\nCreateFile : C:\\Users\\WIN10-TEST\\DESKTOP\\DFOSJDISFVJSDNFBVSDIFOHBUSDIBHUSDIFHBUSDFUHBSDFBHSDFIHBUOIHIHDFDFOSJDISFVJSDNFBHHHHHHHHVSDIFOHBUSDIBHUSDIFHBUSDFUHBSDFBHSDFIHBUOIHIHDFDFOSJDISFVJSDNFBVSDIFOHBUSDIBHUSDIFHBUSDFUHBSDFBHSDFIHBUOIHIHDFDFOSJDISFVJSDNFBVSDIFOHBUSDIBH.TXT\nLike @Maxhy said, short name are not supported by Dokan currently. I have recreate the issue here:  https://github.com/dokan-dev/dokany/issues/301\nI update this issue as an open question since I am enable to find any information that could show if this is a normal behaviour of windows or a dokan issue.\n@jetwhiz\n. Hi @bailey27 ,\nWell found and thank you for your contribution as always ! :+1:\nYou are right, SL_CASE_SENSITIVE has to be handle in the way that you propose it !\nYou can create a pull request :)\n. :smiley: I was going to say it\n. Done with your pull request https://github.com/dokan-dev/dokany/pull/297\nThank you @bailey27 for the report and the patch at the same time ! :heart: very appreciate !\n. Hi @EpsilonXX ,\nIf I understood correctly, you are building the library on a dokan device ?\nDid you try to play with Sector and AllocationUnit Size ?\nhttps://github.com/dokan-dev/dokany/blob/1675b21181abb8e0a032453bd6da968759cbbd65/dokan/dokan.h#L77-L78\n. This option does change the behaviour of the Write size request from the kernel.\nAre you using the C mirror ?\n. Hi @EpsilonXX ,\nI did the test and you are right sector size does not affect the behavior.\nThere is a difference of size between library build on NTFS and dokan.\nThere is an extra, write of 32768 made by link.exe at the end of the build that explains the difference on Dokan devices.\nWhen you compare IRP between NTFS and Dokan (see filespy logs), they all seem to be the same EXCEPT most of the write on NTFS are using FASTIO.\nI don't know if this behavior is happening because FASTIO is currently not supported by Dokan.\ndokan-filespy-build.txt\nmirror-build.txt\nnormal-filespy-build.txt\nThis behavior does not happen with Console Application projects.\n. From https://msdn.microsoft.com/en-us/library/windows/desktop/aa365747(v=vs.85).aspx\nThe system interprets zero bytes to write as specifying a null write operation and WriteFile does not truncate or extend the file. To truncate or extend a file, use the SetEndOfFile function.\nSo as you said, writefile from mirror should not write all data.\nI am wondering why it succeed.\n. :+1: Exact !\nCache file should really be thinked and implemented.\nI haven't found a way to do it correctly without making user land heavy to handle it.\n. https://github.com/dokan-dev/dokany/pull/64 does seems to handle it correctly.\nI just found it too heavy for the user land.\nFor exemple the issue we face is handle in the mirror: https://github.com/dokan-dev/dokany/pull/64/files#diff-210b81c018cd0036b1a9abb162fb97b9R551\n@bailey27 do you have an idea about it ?\n. Does line 551 is not the same as https://github.com/bailey27/cppcryptfs/commit/2b11457c2bd903a0885f1a57cd32848a81e12e54#diff-a4697fdfb06ecd4d9b754a7e2a58aa26R262 ?\nYes, it is not that heavy for user land. I was just thinking to handle cases like https://github.com/dokan-dev/dokany/pull/64/files#diff-210b81c018cd0036b1a9abb162fb97b9R528 directly in dokan without contacting the FS. But it don't seems that there is much more :smiley: \nI will test to merge the PR in the master. Does precompiled headers happen with a default generate solution ?\n. @bailey27 ,\nalright, I merged the changes on my repository for now\nhttps://github.com/Liryna/dokany/commit/5d0edafd220967f36c2a6a2408d5c4048fcc9db1\nfsx tools with memory mapped operations pass perfectly now.\nhttps://ci.appveyor.com/project/Liryna/dokany/build/1.0.0-113#L788\nI moved end of file and paging IO check in kernel. Is this alright for you ?\nhttps://github.com/Liryna/dokany/commit/5d0edafd220967f36c2a6a2408d5c4048fcc9db1#diff-186f697a50e48562500c4beb285c7e58R133\nOther operations do not seem to be movable like you told :+1: \n. Ok thank you @bailey27 this has been merged to the master https://github.com/dokan-dev/dokany/commit/1d53d9ae44e7b95563739729959f764812870d3d\n@EpsilonXX can you make a test ?\n. @EpsilonXX you can test the fix with last RC https://github.com/dokan-dev/dokany/releases/tag/v1.0.0-RC4\n. Hi @EpsilonXX ,\nThere was a missing mutex unlock that was making VS not able to proceed the build.\nFixed with https://github.com/dokan-dev/dokany/commit/4a66a6f5e32fc56d33e3569591cfd88b8a13cd3f\n. Perfect pull request ! :+1: \nThank you @bailey27 !\n. Google groupe already talk about it :) \nPlease join the thread \n. Hi @bailey27 ,\nYou are right ! Write should well return SUCCESS when length is 0.\nhttps://github.com/Microsoft/Windows-driver-samples/blob/6e1115d6af3c22b693eccc472ebb0d53a1905cd9/filesys/fastfat/write.c#L334\nThank you for your contribution and very appreciate as always!\nand for installing clang-format ! :+1: \nAre your still working on cppcryptfs or reviewing dokany :heart:  ?\n. Notepad++ seems to be compatible with EditorConfig https://github.com/dokan-dev/dokany/issues/284\nI begin to think this should be really added :smile: !\nYes, #210 is going to be a great improvement !\n. No problem :+1: \nWhat kind of version of Office did you was using ?\n. Hi @marinkobabic ,\nThank your for your contribution !\nI only got an issue when using the mount manager option /o. The driver letter can no longer is be assigned and the device is still showed on explorer.\n. I have run @taruti https://github.com/dokan-dev/dokany/issues/230#issuecomment-218377179 sample without issue (else than memory leak :smile: ) during 45min without crash.\n@taruti did you also try the sample during your test ?\n. Hi @marinkobabic ,\nThank you, the quick fix work correctly !\nMount managers work correctly now :+1: \nDoes the lock should not be removed here https://github.com/dokan-dev/dokany/pull/303/files#diff-a3d0440cc7bd9a2cd87e16827fe0dfbdR842 ?\nQueryDeviceRelations is no longer called, is there a reason for it ? Should we remove the function ?\nhttps://github.com/dokan-dev/dokany/pull/303/files#diff-6225bb782de1b5ff3af319d3add27aa9R51\nI cast the Flags to PLONG for fixing warning, is that alright for you ?\nhttps://github.com/dokan-dev/dokany/compare/FixBSOD?expand=1#diff-044fe7c5cc010c659ea4ee15d12dbebeR676\n(I failed the merge the patch is currently in FixBSOD branch https://github.com/dokan-dev/dokany/tree/FixBSOD)\nHere is a clean diff: https://github.com/dokan-dev/dokany/compare/FixBSOD?expand=1\n. @marinkobabic \nif (IsDeletePending(DeviceObject)) {\n    DDbgPrint(\"Device is deleted, so go out here \\n\");\n    IoReleaseRemoveLock(&dcb->RemoveLock, Irp);\n    return STATUS_NO_SUCH_DEVICE;\n  }\nlike that ?\nI add comment in QueryDeviceRelations therefore :+1: \nThanks !\n. https://github.com/dokan-dev/dokany/compare/FixBSOD?expand=1#diff-0d281a5a20ad484e35eb5d133d0af346R369\nCreateFile has been moved to the while but it still return in case of failure https://github.com/dokan-dev/dokany/compare/FixBSOD?expand=1#diff-0d281a5a20ad484e35eb5d133d0af346R387\nis this made in purpose ?\n. Thank you @marinkobabic for making this clear and for the valuable contribution :+1: ! \nI will release a RC4 today of it\n. Hi @DimitarKapashikov ,\nLike @marinkobabic said, can you test with the new RC https://github.com/dokan-dev/dokany/releases/tag/v1.0.0-RC4 ?\n. @js69 is it not because https://github.com/dokan-dev/dokany/blob/d0ceb942a656b7d757f22fee47c5e587438c1b21/dokan_wix/Dokan_x64.wxs#L125\nshould be Installed OR VersionNT > 601 OR (VersionNT = 601 AND NOT WIN7KB3033929INSTALLED) with AND NOT ?\n. @js69 oups sorry, I have seen it :+1: \n@DimitarKapashikov we will need the logs as @js69 described so\n. @DimitarKapashikov It should be here: 'C:\\Users\\I053939\\AppData\\Local\\Temp\\Dokan_Library_1.0.0.4000_Bundle_20160729134447_000_Dokan_x64.msi.log'\n. I tested again the installer on a clean a Win7, Win7 SP1 & Win7 SP1 with KB3033929.\nThe installer behaved as expected.\n@DimitarKapashikov we will need the logs to know what happened behind error 0x80070643 you got.\nC:\\Users\\I053939\\AppData\\Local\\Temp\\Dokan_Library_1.0.0.4000_Bundle_20160729134447_000_Dokan_x64.msi.log\n. There were the tools Microsoft Fix it center like @marinkobabic proposed but I am unable to find a valid download link :cry: \n. Hi @oldenj ,\nCould you open a new issue with the steps to reproduce it and the windbg output\nhttps://github.com/dokan-dev/dokany/wiki/How-to-Debug-Dokan#crash-report-bsod. Done https://github.com/dokan-dev/dokany/commit/6c96de7f2b99b690b07740eb819d383963cf53a7\n. Well found @Rondom :+1: \n@js69 do you have an idea how this could be improved ?\n. ```\n\n\n\n\n\n\n\n\n\n\n```\nI use MaxVersion 6.1.7601.22000 since they say 6.1.7601.22xxx is LDR even if it could be max 6.1.7601.19000...\nThis should do the job if I am correct @js69  ? We will need to check if (VersionNT = 601 AND WIN7KB3033929GDRINSTALLED OR WIN7KB3033929LDRINSTALLED) ?\n. http://social.technet.microsoft.com/wiki/contents/articles/3323.how-to-forcibly-install-the-ldr-branch-from-a-particular-hotfix-package.aspx\nIt seems that you can extract the patch and select LDR version.\n. I have been able to install it.\nDownload and put the kb on a folder, run two times Windows6.1-KB3033929-x64.msu \nIt gonna extract a lots of files.\nInstall LDR version with Dism.exe /Online /Add-Package /PackagePath:\"C:\\...\\update-bf.mum\"\nMy wintrust has now the version 6.1.7601.22948\n. Fixed with https://github.com/dokan-dev/dokany/commit/9782a6491775ef3660a71f40f381d3f48e511f14\nI tested without the KB, install failed as expected.\nInstalled theKB with GDR  6.1.7601.18741 or LDR 6.1.7601.22948, Dokan detected it correctly.\nI just have not been able to install a version under 6.1.7601.22948 but at the view of the code, this should fail like under 6.1.7601.18741.\nThank you @Rondom for the report and @js69 for the input !\n. Thank you @Corillian for the pull request! \nAbout unit test there is already some running on appveyor. A big par of the test seems to fail, can you take a look at them?\n. @Corillian https://ci.appveyor.com/project/Maxhy/dokany/build/1.0.0-683/job/hretil424vy6f45t\nAt the bottom you will have the output of winfstest and fsx.\nhttps://github.com/Liryna/winfstest?files=1\n. :+1: This begin to looks very good !\nCan't wait to review it ^^ !\n. @Corillian Just wanted to say that I seen you are creating a project based on some WinFSTest .\nI think this is a good idea and it will be more easy to add test from issue reported by users like this !\nI will try to give you a hand on it and move all test to the project you created (if you think it is also a good idea).\nThis is in the long time TODO !\n. Does your changes of FILE_FLAG_BACKUP_SEMANTICS flag handle the case describe here https://github.com/dokan-dev/dokany/pull/273 ?\nFILE_DOES_NOT_EXIST and returns STATUS_SUCCESS when file does not exist but folder can be opened.\nAre you still facing issue with filesecurity or it has been fixed with https://github.com/dokan-dev/dokany/pull/307#issuecomment-241935238 ?\n. Thank @Corillian for all this work ! :+1: \nRight after dokan 1.0.0 release that should come during the next week. I will be happy to review it !\nDid you test it with heavy software using the dokan device ? (Visual studio, Office,...)\n(FSX seems to still have some issues on appveyor)\n. This is a big change I agree but as explained here https://github.com/dokan-dev/dokany/wiki/How-to-package-your-application-with-Dokan#dokan-versioning\nWe us Major api for kernel<->library compatibility break.\nIf we move to 2.0.0, all applications will need to install a new version of dokan when they could technically use a possible 1.0.0 driver already installed.\nBut we will see how this is going to happen. I will first create a develop branch for next features and keep the master for hot fix.\n@Rondom Your pull request is the next in my TODO :+1: I just don't know when will have the time for it\n. Hey @Corillian !\nIt is in my todo ! Just has to release a 1.0.1 with the main fix reported (in the next week normally) and I move to your PR \u2764\ufe0f !\n. Not for now \ud83d\ude03 I will probably need your help on this @magol !\n. Hi @Corillian ,\nI started to test your PR. I see and feel that it is much faster that\u2019s for sure :+1: \nBut I am afraid that there is some race conditions :cry: . I get different errors on software I tested .\nCreating and mounting VHD does not work.\nI often get the error Insufficient system resources exist to complete the requested service. in difference conditions. Like copy lots of files or try to build a project with VS on the mirror.\nI guess this happens when the mirror has issues to allocate thread or such ?\n. @Corillian \n1) It is a newly created VS C++ project (not empty with the default option that generates a simple main return 0).\n2) VHD is created from disk management (Action -> Create VHD). It creates a wrong parameter error. It is probably for the same reason that https://github.com/dokan-dev/dokany/issues/197 Forget about it for now :smiley: \n3) It seems like it is an error of DeviceIoControl as you said (The c++ VS project build):\nDokan Information: SendEventInformation() with NTSTATUS 0x0, context 0xa9ef6130, and result object 0x0000022CA9ED6C20\nDokan Error: Dokan device result ioctl failed for wait with code 998.\nFull logs of the build: test.txt\n4) Same error with USE_ASYNC_IO 0 :cry: \n5) Not for now, I have only time for now to help test sorry :cry: but I will look into it !\nAlso, did you rewrite the mount/unmount process ? This seems to be very fast ! \n. > Also why on earth does the user-mode driver need to request a larger write buffer? The kernel already knows how big the write buffer needs to be before it forwards the request to the user-mode driver. This seems totally unnecessary to me.\nYes I know...I tought the same when I seen it in dokan the first time \ud83d\ude22 \nhttps://github.com/dokan-dev/dokany/blob/master/dokan/write.c#L62-L63\nI will try to make other test with office and such during the weekend.\n. @Corillian I tested Office 2016 and it \"worked\". I go an error at the begining that was not abel to reproduce. It was probably a write issue again.\nI continue on other softwares\ud83d\udc4d and will look on the security issue next week.\n. Hi @Corillian,\nI don't really think the oplock changes did something here but the fsx test now pass....I will try to look and see if I can still reproduce it.\nI will get back to you with the result.\n. Hi @Corillian ,\nI am able to reproduce the fsx appveyor error \ud83d\ude22 . It happen half of the runs.\nFsx output:\nC:\\Users\\liryna\\Desktop>fsx.exe -N 5000 M:\\test\nUsing file M:\\test\ncommand line: fsx.exe -N 5000 M:\\test\nSeed set to 1476902197\ntruncating to largest ever: 0x29340\nLOG DUMP (4 total operations):\n1: SKIPPED (no operation)\n2: SKIPPED (no operation)\n3: TRUNCATE UP     from 0x0 (0) to 0x29340 (168768)\n4: WRITE           0x388bc (231612) thru 0x3ca4b (248395)       (0x4190 (16784) bytes) HOLE\ndowrite: write: Invalid argument\nCorrect content saved for comparison\n(maybe hexdump \"M:\\test\" vs \"M:\\test.fsxgood\")\nSeed was set to 1476902197\nfsxmirror.txt\nI disabled asynio here for this one:\n```\ndefine USE_ASYNC_IO 0\n```\n```\nC:\\Users\\liryna\\Desktop>fsx.exe -N 5000 M:\\test\nUsing file M:\\test\ncommand line: fsx.exe -N 5000 M:\\test\nSeed set to 1476901685\ntruncating to largest ever: 0x8078\ntruncating to largest ever: 0x91dc\nLOG DUMP (12 total operations):\n1: SKIPPED (no operation)\n2: SKIPPED (no operation)\n3: SKIPPED (no operation)\n4: TRUNCATE UP     from 0x0 (0) to 0x8078 (32888)\n5: TRUNCATE UP     from 0x8078 (32888) to 0x91dc (37340)\n6: MAPWRITE        0x3080 (12416) thru 0x91db (37339)   (0x615c (24924) bytes)\n7: WRITE           0x4b58 (19288) thru 0xf633 (63027)   (0xaadc (43740) bytes) EXTEND\n8: READ            0x4598 (17816) thru 0x694f (26959)   (0x23b8 (9144) bytes)\n9: MAPREAD         0x818 (2072) thru 0xe96f (59759)     (0xe158 (57688) bytes)\n10: WRITE           0x38ecc (233164) thru 0x3ca1b (248347)      (0x3b50 (15184) bytes) HOLE\n11: READ            0x26654 (157268) thru 0x30073 (196723)      (0x9a20 (39456) bytes)\n12: WRITE           0x34568 (214376) thru 0x39027 (233511)      (0x4ac0 (19136) bytes)\ndowrite: write: Invalid argument\nCorrect content saved for comparison\n(maybe hexdump \"M:\\test\" vs \"M:\\test.fsxgood\")\nSeed was set to 1476901685\n```\nfsxmirror.txt\nHow can I help you on this ?\n. @Corillian I just tested your last changes and was able to run fsx with more than 100k operations without issues \ud83d\udc4d Very good work !\nSeems like you rewrote the write operation kernel side also. Is that a breaking change ?\nI know that I said I will look on security descriptor issues and it is still planned. I just would like to finish this pending task for the 1.0.1 before.\n. @Corillian Your write changes seem to be much cleaner than previous version and give other possibilities like you said \ud83d\udc4d I agree with it.\nI am just wondering by your explanation if the big overlapped write are correctly handled ? I mean if there is ioctl request to create a big buffer, does still will work properly ? Or this is exactly the case you are talking ? (Since there is no other thread with ioctl's in flight this guarantees that the allocated buffer will in fact receive the large write message it was allocated to handle.)\nAbout APC, there is this page that explains a \"little\" https://msdn.microsoft.com/fr-fr/library/windows/desktop/ms681951(v=vs.85).aspx\nFrom what I saw, important IRP (Create, cleanup & close) are synced. It will wait that create is finished before calling other irps and close will always be at the end when other irps are completed. But for other irps like read/write, they can be made in the same time on the same handle (overlapped read/write are the best examples). You can even have them after the cleanup as you seen.\nI hope I understood correctly your question \u2764\ufe0f \n. I don't think there is another way to communicate with the kernel \ud83d\ude22 \nAnother possibility would be to create multiple fake device for each file but I don't think we will win speed here by doing this.\nAt least here with your contribution @Corillian there is no more thread limitation \ud83d\udc4d and that something huge ! \nI was wondering if your changes we can make STATUS_PENDING return automatically easily if the associate user thread is still busy ? In another word, remove DokanResetTimeout.\nI will look at the security issue tomorrow \ud83d\udc4d \n. Hi @Corillian ,\nI have updated winfstest https://github.com/Liryna/winfstest. It now shows the \n```\nC:\\Users\\liryna\\Desktop\\winfstest\\TestSuite\\t\\base\\10.t\nnot ok 2 - expect \"GetFileSecurity 4cd45fc7 DACL_SECURITY_INFORMATION\"  - result [{'Sddl': 'D:AI(A;ID;FA;;;WD)(A;ID;FA;;;BU)(A;ID;FA;;;SY)(A;ID;FA;;;BA)'}]\nnot ok 10 - expect \"DeleteFile 4cd45fc7\" 0 - got ERROR_ACCESS_DENIED\nnot ok 11 - expect \"CreateDirectory 4cd45fc7 D:P(A;;GA;;;WD)\" 0 - got ERROR_ALREADY_EXISTS\nnot ok 12 - expect \"GetFileSecurity 4cd45fc7 DACL_SECURITY_INFORMATION\" 0 - got ERROR_ACCESS_DENIED\nnot ok 13 - expect \"SetFileSecurity 4cd45fc7 DACL_SECURITY_INFORMATION D:P(A;;GA;;;WD)(A;;GR;;;SY)\" 0 - got ERROR_ACCESS_DENIED\nnot ok 14 - expect \"GetFileSecurity 4cd45fc7 DACL_SECURITY_INFORMATION\" 0 - got ERROR_ACCESS_DENIED\nnot ok 15 - expect \"RemoveDirectory 4cd45fc7\" 0 - got ERROR_DIRECTORY\nnot ok 7/15\ntotal ................................. ok 8/15 - not ok 7/15\n```\nFor not ok 2, this is because current CreateFile previously made does not use the security information parameters like before:\nsecurityAttrib.lpSecurityDescriptor = EventInfo->SecurityContext.AccessState.SecurityDescriptor;\nInstead it calls MirrorCreateNewSecurity -> MirrorGetParentSecurity that fail with access denied. Even if MirrorGetParentSecurity could work, we do not set the security information requested during the CreateFile.\nWhen this will be fixed, you will have not ok 10 - expect \"DeleteFile cd13dad6\" 0 - got ERROR_ACCESS_DENIED. cd13dad6 is a file with read access refused for everyone BUT since we get access denied, we should look at the parent folder to see if we have rights to remove.\nWith this done, all test pass \ud83d\udc4d \nYour Get & Set Security seems to work perfectly \ud83d\udc4d \n. Thats good to know \ud83d\ude03 ! \nWe will probably not make this changes today I agree \ud83d\udc4d  \nTake your time \ud83d\udc8b but there is probably already people looking at it and specially if you find a way to \"remove\" DokanResetTimeout\n. I had in mind something like the dokan library would \"call\" DokanResetTimeout by himself for each request / thread that is still working and going to hit the timeout. \nThe timeout should only be here to dismount automatically a device that has no userland FS alive and not a limitation in the process of the request in my point of view. So if you think this could be easily added to your PR it would be nice \u2764\ufe0f !\n. Well \ud83d\udc4d OK you made your point :) 15 seconds is much enough.\n. I agree @Rondom This PR is really great and is missing manpower \ud83d\ude22 \nIt could really enhance dokan on the speed \ud83d\udc4d I have not forgotten it but I have no more free time available to give.\nWe need someone here. If anyone would it and have the resource to do it, fill free, I would be happy to help and guide.. Hi @Rondom ,\nI have created a new branch and merged @Corillian changes https://github.com/dokan-dev/dokany/tree/Corillian-asyncio\nI have not fully tested but the merged seems to have worked \ud83d\udc4d I would probably need your help for fuse.\nI had some issue to merge https://github.com/dokan-dev/dokany/commit/f113f7476efdfd674791baa72bc30a503e879e2a and I am not sure I did it correctly. Can you just take a look at it ? \u2764\ufe0f \nI have created this branch to merge all changes of the master into it to keep it update.\nLove @Corillian changes \u2764\ufe0f speed has really been improved !\nI will try to fix the winfstest error when will get more time.. TODO here:\n- [ ] See if https://github.com/dokan-dev/dokany/issues/393 happen\n- [ ] Check correct merge of https://github.com/dokan-dev/dokany/commit/f113f7476efdfd674791baa72bc30a503e879e2a\n- [ ] @Corillian said I did however notice that I didn't update DokanResetTimeout for async IO so I certainly need to do that :p. This should be changed\n- [ ] Remove safe from DokanBroadcastLink https://github.com/dokan-dev/dokany/blob/Corillian-asyncio/dokan/mount.c#L515\n- [ ] Fix security issues\n- [ ] Heavy test VS, Word, Office, ... ( @Rondom ifstest ?) .\n- [ ] Add single thread FUSE option\n- [ ] Add temporary retro compatibility API 1.x.x\n- [ ] Update documentation\n- [ ] Wiki page How to migrate from 1.x.x to 2.x.x\n- [ ] Update Dokan-DotNet to work with the async API.. @magol We will need to convert all struct that now holds all operations params.\nhttps://github.com/dokan-dev/dokany/pull/307/files#diff-641844c42f5ba7de1b7fd5347b56b3eeR245\nAfter we just need to change the all operations params foo as barStruct->foo\nEven for C# we will probably even not break compatibility if we want. Keep the new changes in the operationProxy.. @Rondom Having the old API work for a couple of release is probably possible yes.\nWill have to see how to recreate the DokanMain entry with DokanInit() and make it not async.\nWe will do a Wiki page to explain how to convert 1.x.x to 2.x.x when the moment comes \ud83d\udc4d \n(todo updated). Here is first BETA: https://github.com/dokan-dev/dokany/releases/tag/v2.0.0-BETA1 \ud83d\udc4d . Well point @Daniel-Abrecht , I forgot about the single thread option of FUSE.\n@Corillian crazy as it is, I already see a couple of FUSE fs using the single thread option because of shared resources... \ud83d\ude22 Will need to add a way to limit the thread pool to 1 for compatibility.\nPeople already having their FUSE FS are not always willing to change it for windows even if it is a simple mutex to add.. @lostmsu The PR has been updated here:\nhttps://github.com/dokan-dev/dokany/tree/Corillian-asyncio\nOnly 11 commit missing compared to master. Will do the update during the weekend \ud83d\udc4d . @timofonic This PR is keep as a reference of Corillian since he is lacking of time to continue.\nHowever, dokany has his own branch updated with last changes.\nAlso i keep the pr open for the history and discussion.\nBut you are perhaps right, i should rename the branch for v2 and create separate issue for the v2 and roadmap! :). Hi @EpsilonXX ,\nI tested with your code sample and was not been able to reproduce the behaviour:\nWIN32_FIND_DATA fdata;\n  HANDLE handle = FindFirstFile(L\"M:\\\\A\\\\B\\\\C\\\\D\\\\E\\\\F\\\\G\\\\H\\\\b.txt\", &fdata);\n  FindClose(handle);\nMirror result:\n```\nC:\\Users\\liryna\\Desktop\\Debug>mirror.exe /r C:\\Users /l m /d /s\nAttempting to add SE_SECURITY_NAME privilege to process token\nsuccess: privilege already present\nDokan: debug mode on\nDokan: use stderr\nAllocationUnitSize: 512 SectorSize: 512\ndevice opened\nQueryVolumeInfo -001\nmounted: m -> \\Volume{d6cc17c5-1731-4085-bce7-964f1e9f5de9}\nMounted\nCreate 0000\nCreateFile : C:\\Users\\A\\B\\C\\D\\E\\F\\G\\H\n  AccountName: liryna, DomainName: DESKTOP-T9B1IFA\n        ShareMode = 0x7\n        FILE_SHARE_READ\n        FILE_SHARE_WRITE\n        FILE_SHARE_DELETE\n        AccessMode = 0x100001\n        FILE_READ_DATA\n        SYNCHRONIZE\n        FlagsAndAttributes = 0x0\n        OPEN_EXISTING\nCreateFile status = 0 - lastError = 0\nGetFileInfo 0000\nGetFileInfo : C:\\Users\\A\\B\\C\\D\\E\\F\\G\\H\n        GetFileInformationByHandle success, file size = 0\n    result =  0\n\nunknown type:54\n        DispatchQueryInformation result =  c000000d\nGetFileInfo 0000\nGetFileInfo : C:\\Users\\A\\B\\C\\D\\E\\F\\G\\H\n        GetFileInformationByHandle success, file size = 0\n    result =  0\n    FileStandardInformation\n    DispatchQueryInformation result =  0\n\nFindFiles 0000\nFindFiles :C:\\Users\\A\\B\\C\\D\\E\\F\\G\\H\n        FindFiles return 3 entries in C:\\Users\\A\\B\\C\\D\\E\\F\\G\\H*\nindex from 0\nFileMatch? : . (b.txt,0,0)\nFileMatch? : .. (b.txt,0,0)\nFileMatch? : b.txt (b.txt,0,0)\n  =>return single entry\nindex to 1\nCleanup 0000\nCleanup: C:\\Users\\A\\B\\C\\D\\E\\F\\G\\H\nClose 0000\nClose: C:\\Users\\A\\B\\C\\D\\E\\F\\G\\H\n```\n. I don't have a working WIn7 for now.\nCould you show output of filespy http://www.zezula.net/en/fstools/filespy.html when you use FindFirstFile on the Mirror device ?\n. Sorry, it seems that FileSpy is not giving more informations :cry: \nCould you try with https://technet.microsoft.com/en-us/sysinternals/bb896645.aspx in advanced mode (Filter menu, additional output enabled)\non the mirror and on local NTFS ?\n. Compare of the two commit linked: https://github.com/dokan-dev/dokany/compare/a815463467b8b08405b8a55b69704e544b61c9cf...3083fdda2e04d8fc798a7d6cb9eafceafa8bdbaa\nCan you try to set FileSystemNameBuffer to \"Dokan\" as before ?\nhttps://github.com/dokan-dev/dokany/compare/a815463467b8b08405b8a55b69704e544b61c9cf...3083fdda2e04d8fc798a7d6cb9eafceafa8bdbaa#diff-3e4a0e9bc5f5ce9956bf1c87bff87b48L51\n. And here also https://github.com/dokan-dev/dokany/compare/a815463467b8b08405b8a55b69704e544b61c9cf...3083fdda2e04d8fc798a7d6cb9eafceafa8bdbaa#diff-210b81c018cd0036b1a9abb162fb97b9L1123\nChange NTFS as Dokan like before.\nIt is the only changes that has been made between this two commit that can change the behavior of the FS.\nDokan to NTFS has been made to make work the socket as you know. This can also behave on Win7 FindFiles. If thats the case, we can do nothing about it and thats the behavior of Win7 :( (that seems to be fix in Win10)\n. @EpsilonXX Thank you for the kernel logs and Process Monitor. :+1: \nIt show well that this only seems to happen with Dokan device and not local NTFS.\nAre you sure that it is between this two commit https://github.com/dokan-dev/dokany/compare/a815463467b8b08405b8a55b69704e544b61c9cf...3083fdda2e04d8fc798a7d6cb9eafceafa8bdbaa\nthat the behaviour changed ?\nDo you think you can find the exact commit that create it ? Sorry I have still not been able to have a working Win7....\n. @EpsilonXX any news from this ?\n. @magol are you able to build dokan and test it on windows 7 ?\nwould be nice if it is between this two commit https://github.com/dokan-dev/dokany/compare/a815463467b8b08405b8a55b69704e544b61c9cf...3083fdda2e04d8fc798a7d6cb9eafceafa8bdbaa\n. After looong testing, the issue come from the commit a815463467b8b08405b8a55b69704e544b61c9cf\n. @marinkobabic this could be the reason if the driver continue to ask the content of the same folder.\nBut here the driver ask the content of parent folders until \\.\n. @marinkobabic dir command in C:\\Users\\A\\B\\C\\D\\E\\F\\G\\H:\n1:43:22.4778729 PM  cmd.exe 2632    CreateFile  C:\\ SUCCESS Desired Access: Synchronize, Disposition: Open, Options: Directory, Synchronous IO Non-Alert, Attributes: n/a, ShareMode: None, AllocationSize: n/a, OpenResult: Opened\n1:43:22.4779121 PM  cmd.exe 2632    QueryNameInformationFile    C:\\ SUCCESS Name: \\\n1:43:22.4779283 PM  cmd.exe 2632    QueryAttributeInformationVolume C:\\ SUCCESS FileSystemAttributes: Case Preserved, Case Sensitive, Unicode, ACLs, Compression, Named Streams, EFS, Object IDs, Reparse Points, Sparse Files, Quotas, Transactions, 0x3c00000, MaximumComponentNameLength: 255, FileSystemName: NTFS\n1:43:22.4779399 PM  cmd.exe 2632    CloseFile   C:\\ SUCCESS \n1:43:22.4780599 PM  cmd.exe 2632    CreateFile  C:\\Users\\A\\B\\C\\D\\E\\F\\G\\H    SUCCESS Desired Access: Read Attributes, Disposition: Open, Options: Open Reparse Point, Attributes: n/a, ShareMode: Read, Write, Delete, AllocationSize: n/a, OpenResult: Opened\n1:43:22.4780742 PM  cmd.exe 2632    QueryBasicInformationFile   C:\\Users\\A\\B\\C\\D\\E\\F\\G\\H    SUCCESS CreationTime: 9/7/2016 2:34:40 PM, LastAccessTime: 9/7/2016 2:34:40 PM, LastWriteTime: 9/7/2016 2:34:40 PM, ChangeTime: 9/7/2016 2:34:40 PM, FileAttributes: D\n1:43:22.4780822 PM  cmd.exe 2632    CloseFile   C:\\Users\\A\\B\\C\\D\\E\\F\\G\\H    SUCCESS \n1:43:22.4781647 PM  cmd.exe 2632    CreateFile  C:\\Users\\A\\B\\C\\D\\E\\F\\G\\H    SUCCESS Desired Access: Read Attributes, Disposition: Open, Options: Open Reparse Point, Attributes: n/a, ShareMode: Read, Write, Delete, AllocationSize: n/a, OpenResult: Opened\n1:43:22.4781752 PM  cmd.exe 2632    QueryBasicInformationFile   C:\\Users\\A\\B\\C\\D\\E\\F\\G\\H    SUCCESS CreationTime: 9/7/2016 2:34:40 PM, LastAccessTime: 9/7/2016 2:34:40 PM, LastWriteTime: 9/7/2016 2:34:40 PM, ChangeTime: 9/7/2016 2:34:40 PM, FileAttributes: D\n1:43:22.4781820 PM  cmd.exe 2632    CloseFile   C:\\Users\\A\\B\\C\\D\\E\\F\\G\\H    SUCCESS \n1:43:22.4782570 PM  cmd.exe 2632    CreateFile  C:\\Users\\A\\B\\C\\D\\E\\F\\G\\H\\.  NAME INVALID    Desired Access: Read Attributes, Disposition: Open, Options: Open Reparse Point, Attributes: n/a, ShareMode: Read, Write, Delete, AllocationSize: n/a\n1:43:22.4782787 PM  cmd.exe 2632    CreateFile  C:\\ SUCCESS Desired Access: Synchronize, Disposition: Open, Options: Directory, Synchronous IO Non-Alert, Attributes: n/a, ShareMode: None, AllocationSize: n/a, OpenResult: Opened\n1:43:22.4782927 PM  cmd.exe 2632    QueryNameInformationFile    C:\\ SUCCESS Name: \\\n1:43:22.4783024 PM  cmd.exe 2632    QueryInformationVolume  C:\\ SUCCESS VolumeCreationTime: 10/19/2015 9:01:27 PM, VolumeSerialNumber: 388F-E288, SupportsObjects: True, VolumeLabel: \n1:43:22.4783107 PM  cmd.exe 2632    CloseFile   C:\\ SUCCESS \n1:43:22.4795949 PM  cmd.exe 2632    CreateFile  C:\\Users\\A\\B\\C\\D\\E\\F\\G\\H    SUCCESS Desired Access: Read Data/List Directory, Synchronize, Disposition: Open, Options: Directory, Synchronous IO Non-Alert, Attributes: n/a, ShareMode: Read, Write, Delete, AllocationSize: n/a, OpenResult: Opened\n1:43:22.4796126 PM  cmd.exe 2632    QueryDirectory  C:\\Users\\A\\B\\C\\D\\E\\F\\G\\H\\*  SUCCESS Filter: *, 1: .\n1:43:22.4799655 PM  cmd.exe 2632    QueryDirectory  C:\\Users\\A\\B\\C\\D\\E\\F\\G\\H    SUCCESS 0: .., 1: b.txt\n1:43:22.4806785 PM  cmd.exe 2632    QueryDirectory  C:\\Users\\A\\B\\C\\D\\E\\F\\G\\H    NO MORE FILES   \n1:43:22.4806932 PM  cmd.exe 2632    CloseFile   C:\\Users\\A\\B\\C\\D\\E\\F\\G\\H    SUCCESS \n1:43:22.4810385 PM  cmd.exe 2632    CreateFile  C:\\Users\\A\\B\\C\\D\\E\\F\\G\\H    SUCCESS Desired Access: Synchronize, Disposition: Open, Options: Directory, Synchronous IO Non-Alert, Open For Free Space Query, Attributes: n/a, ShareMode: None, AllocationSize: n/a, OpenResult: Opened\n1:43:22.4810555 PM  cmd.exe 2632    QueryFullSizeInformationVolume  C:\\Users\\A\\B\\C\\D\\E\\F\\G\\H    SUCCESS TotalAllocationUnits: 15,439,359, CallerAvailableAllocationUnits: 6,255,988, ActualAvailableAllocationUnits: 6,255,988, SectorsPerAllocationUnit: 8, BytesPerSector: 512\n1:43:22.4810652 PM  cmd.exe 2632    CloseFile   C:\\Users\\A\\B\\C\\D\\E\\F\\G\\H    SUCCESS\ndir command on M:\\A\\B\\C\\D\\E\\F\\G\\H\nhttp://pastebin.com/pcLPUzib\nOnly NO MORE FILES is used in both case.\nThe probleme here, is that windows request all parent folders before requesting the correct folder content.\n. Oups sorry here it is:\n```\n1:42:06.6483919 PM  cmd.exe 1316    CreateFile  \\Device\\Volume{d6cc17c5-1737-4085-bce7-964f1e9f5de9}\\   SUCCESS Desired Access: Synchronize, Disposition: Open, Options: Directory, Synchronous IO Non-Alert, Attributes: n/a, ShareMode: None, AllocationSize: n/a, OpenResult: Opened\n1:42:06.7731972 PM  cmd.exe 1316    QueryNameInformationFile    \\Device\\Volume{d6cc17c5-1737-4085-bce7-964f1e9f5de9}\\   SUCCESS Name: \\\n1:42:06.7732097 PM  cmd.exe 1316    QueryAttributeInformationVolume \\Device\\Volume{d6cc17c5-1737-4085-bce7-964f1e9f5de9}\\   SUCCESS FileSystemAttributes: Case Preserved, Case Sensitive, Unicode, ACLs, 0x100, MaximumComponentNameLength: 256, FileSystemName: NTFS\n1:42:06.7732843 PM  cmd.exe 1316    CloseFile   \\Device\\Volume{d6cc17c5-1737-4085-bce7-964f1e9f5de9}\\   SUCCESS \n1:42:06.7746770 PM  cmd.exe 1316    CreateFile  \\Device\\Volume{d6cc17c5-1737-4085-bce7-964f1e9f5de9}\\A\\B\\C\\D\\E\\F\\G\\H    SUCCESS Desired Access: Read Attributes, Disposition: Open, Options: Open Reparse Point, Attributes: n/a, ShareMode: Read, Write, Delete, AllocationSize: n/a, OpenResult: Opened\n1:42:06.7751102 PM  cmd.exe 1316    QueryBasicInformationFile   \\Device\\Volume{d6cc17c5-1737-4085-bce7-964f1e9f5de9}\\A\\B\\C\\D\\E\\F\\G\\H    SUCCESS CreationTime: 9/7/2016 2:34:40 PM, LastAccessTime: 9/7/2016 2:34:40 PM, LastWriteTime: 9/7/2016 2:34:40 PM, ChangeTime: 9/7/2016 2:34:40 PM, FileAttributes: D\n1:42:06.7752108 PM  cmd.exe 1316    CloseFile   \\Device\\Volume{d6cc17c5-1737-4085-bce7-964f1e9f5de9}\\A\\B\\C\\D\\E\\F\\G\\H    SUCCESS \n1:42:06.7772642 PM  cmd.exe 1316    CreateFile  \\Device\\Volume{d6cc17c5-1737-4085-bce7-964f1e9f5de9}\\A\\B\\C\\D\\E\\F\\G\\H    SUCCESS Desired Access: Read Attributes, Disposition: Open, Options: Open Reparse Point, Attributes: n/a, ShareMode: Read, Write, Delete, AllocationSize: n/a, OpenResult: Opened\n1:42:06.7776784 PM  cmd.exe 1316    QueryBasicInformationFile   \\Device\\Volume{d6cc17c5-1737-4085-bce7-964f1e9f5de9}\\A\\B\\C\\D\\E\\F\\G\\H    SUCCESS CreationTime: 9/7/2016 2:34:40 PM, LastAccessTime: 9/7/2016 2:34:40 PM, LastWriteTime: 9/7/2016 2:34:40 PM, ChangeTime: 9/7/2016 2:34:40 PM, FileAttributes: D\n1:42:06.7777597 PM  cmd.exe 1316    CloseFile   \\Device\\Volume{d6cc17c5-1737-4085-bce7-964f1e9f5de9}\\A\\B\\C\\D\\E\\F\\G\\H    SUCCESS \n1:42:06.7790931 PM  cmd.exe 1316    CreateFile  \\Device\\Volume{d6cc17c5-1737-4085-bce7-964f1e9f5de9}\\A\\B\\C\\D\\E\\F\\G\\H.  NAME INVALID    Desired Access: Read Attributes, Disposition: Open, Options: Open Reparse Point, Attributes: n/a, ShareMode: Read, Write, Delete, AllocationSize: n/a\n1:42:06.7795053 PM  cmd.exe 1316    CreateFile  \\Device\\Volume{d6cc17c5-1737-4085-bce7-964f1e9f5de9}\\   SUCCESS Desired Access: Synchronize, Disposition: Open, Options: Directory, Synchronous IO Non-Alert, Attributes: n/a, ShareMode: None, AllocationSize: n/a, OpenResult: Opened\n1:42:06.7799641 PM  cmd.exe 1316    QueryNameInformationFile    \\Device\\Volume{d6cc17c5-1737-4085-bce7-964f1e9f5de9}\\   SUCCESS Name: \\\n1:42:06.7799736 PM  cmd.exe 1316    QueryInformationVolume  \\Device\\Volume{d6cc17c5-1737-4085-bce7-964f1e9f5de9}\\   SUCCESS VolumeCreationTime: 1/1/1601 2:00:00 AM, VolumeSerialNumber: 1983-1116, SupportsObjects: False, VolumeLabel: DOKAN\n1:42:06.7800390 PM  cmd.exe 1316    CloseFile   \\Device\\Volume{d6cc17c5-1737-4085-bce7-964f1e9f5de9}\\   SUCCESS \n1:42:06.7809638 PM  cmd.exe 1316    CreateFile  \\Device\\Volume{d6cc17c5-1737-4085-bce7-964f1e9f5de9}\\A\\B\\C\\D\\E\\F\\G\\H    SUCCESS Desired Access: Read Data/List Directory, Synchronize, Disposition: Open, Options: Directory, Synchronous IO Non-Alert, Attributes: n/a, ShareMode: Read, Write, Delete, AllocationSize: n/a, OpenResult: Opened\n1:42:06.7813466 PM  cmd.exe 1316    QueryDirectory  \\Device\\Volume{d6cc17c5-1737-4085-bce7-964f1e9f5de9}\\A\\B\\C\\D\\E\\F\\G\\H*  SUCCESS Filter: *, 1: .\n1:42:06.7815936 PM  cmd.exe 1316    QueryDirectory  \\Device\\Volume{d6cc17c5-1737-4085-bce7-964f1e9f5de9}\\A\\B\\C\\D\\E\\F\\G\\H    SUCCESS 0: .., 1: b.txt\n1:42:06.7818590 PM  cmd.exe 1316    QueryDirectory  \\Device\\Volume{d6cc17c5-1737-4085-bce7-964f1e9f5de9}\\A\\B\\C\\D\\E\\F\\G\\H    NO MORE FILES \n1:42:06.7819766 PM  cmd.exe 1316    CloseFile   \\Device\\Volume{d6cc17c5-1737-4085-bce7-964f1e9f5de9}\\A\\B\\C\\D\\E\\F\\G\\H    SUCCESS \n1:42:06.7835877 PM  cmd.exe 1316    CreateFile  \\Device\\Volume{d6cc17c5-1737-4085-bce7-964f1e9f5de9}\\A\\B\\C\\D\\E\\F\\G\\H    SUCCESS Desired Access: Synchronize, Disposition: Open, Options: Directory, Synchronous IO Non-Alert, Open For Free Space Query, Attributes: n/a, ShareMode: None, AllocationSize: n/a, OpenResult: Opened\n1:42:06.7840137 PM  cmd.exe 1316    QueryFullSizeInformationVolume  \\Device\\Volume{d6cc17c5-1737-4085-bce7-964f1e9f5de9}\\A\\B\\C\\D\\E\\F\\G\\H    SUCCESS TotalAllocationUnits: 2,097,152, CallerAvailableAllocationUnits: 1,048,576, ActualAvailableAllocationUnits: 1,048,576, SectorsPerAllocationUnit: 1, BytesPerSector: 512\n1:42:06.7840791 PM  cmd.exe 1316    CloseFile   \\Device\\Volume{d6cc17c5-1737-4085-bce7-964f1e9f5de9}\\A\\B\\C\\D\\E\\F\\G\\H    SUCCESS \n```\nOk both request look the same but dokan driver does not proceed the same request.\n. Yes, I did. It changed nothing.\nIt is on the same Windows 7 where it work before the commit https://github.com/dokan-dev/dokany/commit/a815463467b8b08405b8a55b69704e544b61c9cf \n. @marinkobabic I begin to think that the behaviour that we have on dokan is probably the \"normal\" behaviour since dir command behave the same.\nHow can we be sure of this ?\n. I close this issue as wont fix because we have no idea if it is Windows 7 normal behavior or not.\nIf anyone has an idea why this is happening, I am willing to reopen it \ud83d\udc4d \n. @DarylOliver What is Cobain? I know only Kurt :(\n. @Rondom :D but I like Kurt! \nDokan fuse can be build for cygwin for offering fuse compatibility to other applications already use it on Linux or osx. \nThere is going to be an official fuse package that will be created and available direct from cygwin package manager in the next week's. \nDoes this answer your question?\n. @Rondom :+1: real good idea and should be made before 1.0.0 release! \nAlso dokan-dotnet documentation has been really improved last week and there is a good part that could be reused in dokan.h to explain dokan operation and interface.\n. @Rondom does show usage would be enough ? (first darft :smiley: )\n```\nmirror.exe [/l MountPoint]\n  /r RootDirectory (ex. /r c:\\test)     # Directory source to mirror\n  /l MountPoint (ex. /l m)      # Mount point. Can be M:\\ (drive letter) or empty NTFS folder C:\\mount\\dokan\n  /t ThreadCount (ex. /t 5)     # Number of threads to be used internally by Dokan library.\n                                # More thread will handle more events at the same time.\n  /d (enable debug output)      # Enable debugger debug output\n  /s (use stderr for output)    # Write debug output on stderr\n  /n (use network drive)        # Show device as network device.\n  /m (use removable drive)      # Show device as removable media.\n  /w (write-protect drive)      # Read only filesystem.\n  /o (use mount manager)        # Register device to Windows mount manager.\n                                # This enables advanced Windows features like recycle bin and more...\n  /c (mount for current session only)           # Device only visible for current user\n  /u (UNC provider name ex. \\localhost\\myfs)    # UNC name used for network volume\n  /a Allocation unit size (ex. /a 512)          # Allocation Unit Size of the volume. This will behave on the file size.\n  /k Sector size (ex. /k 512)                   # Sector Size of the volume. This will behave on the file size.\n  /i (Timeout in Milliseconds ex. /i 30000)     # Max timeout in milliseconds of each request before Dokan give up.\nExamples:\n        mirror.exe /r C:\\Users /l m                     # Mirror C:\\Users as RootDirectory into a drive of letter M:.\n        mirror.exe /r C:\\Users /l C:\\mount\\dokan        # Mirror C:\\Users as RootDirectory into NTFS folder C:\\mount\\dokan.\n        mirror.exe /r C:\\Users /l m /n /u \\myfs\\myfs1   # Mirror C:\\Users as RootDirectory into a network drive M:. with UNC \\myfs\\myfs1\nUnmount the drive with CTRL + C in the console.\n```\n. @Rondom a quick review of this would be nice :)\nIf you agree with it will push my pending commit\n. Thank you for your feedback @Rondom !\nStandard windows command output does not use #, they just add a big space like (dir /?):\n```\nDisplays a list of files and subdirectories in a directory.\nDIR [drive:][path][filename] [/A[[:]attributes]] [/B] [/C] [/D] [/L] [/N]\n  [/O[[:]sortorder]] [/P] [/Q] [/R] [/S] [/T[[:]timefield]] [/W] [/X] [/4]\n[drive:][path][filename]\n              Specifies drive, directory, and/or files to list.\n/A          Displays files with specified attributes.\n  attributes   D  Directories                R  Read-only files\n               H  Hidden files               A  Files ready for archiving\n               S  System files               I  Not content indexed files\n               L  Reparse Points             -  Prefix meaning not\n  /B          Uses bare format (no heading information or summary).\n  /C          Display the thousand separator in file sizes.  This is the\n              default.  Use /-C to disable display of separator.\n  /D          Same as wide but files are list sorted by column.\n```\nI will try to reproduce such style.\n\nIs it really the current user or is it the current user session, i.e. when logging in multiple times with the same user only the session that runs Dokan will be able to use the FS?\n\ndevice object name and a user-visible name for the device.\nhttps://msdn.microsoft.com/en-us/library/windows/hardware/ff549043(v=vs.85).aspx\nTherefor I would say current user session (I didn't made more test when logging in multiple times with the same user)\n\nI am not entirely sure whether it is \"for\" or \"of each request\". Maybe mention the error returned instead of the vague \"give up\"\n\n/i (Timeout in Milliseconds ex. /i 30000) # Max timeout until a dokan operation is aborted and device unmount.\nIs it more clear ?\nThe case it is the FS take too much time (more than 30000 ms here) to answer, Dokan will automatically unmount it.\nI will make other changes that your pointed also :+1: ty !\n. Done with https://github.com/dokan-dev/dokany/commit/1007ad49378bdb029962fe7069ad823a5de23ac5\nThank you for your help @Rondom ! very appricate :)\n. Hi @Rondom ,\nI agree with you so I made the changes as requested:\nhttps://github.com/dokan-dev/dokany/commit/008cf74e1bdf8494b0c0bb9ee72d32f409aefe64\nDokanctl no longer need admin permission for listing mount point, show usage and print version.\nThere is currently no possibility to check volume owners and therefore see if the user has the right to unmount them. /u will require admin rights for now.\nThis requires more changes. The easiest solution would be to retrieve SymbolicLink owner information (if that\u2019s possible) and see if it matches the current user.\n. Issue created https://github.com/dokan-dev/dokany/issues/312\n@Rondom You can close this issue if my changes answer your request.\n. Hi @infeo ,\nUsing dokanctl to unmount is only needed if your application did not implement a unmount mechanism by calling dokan API for it (see documentation).\nDokanctl is really only needed if you do not know who has mounted the device (software/user) and you force unmount.\n. @magol This would be complicate I think :D\nInclude tag would be less easy for developpers that want to read comments directly from the source code.\nLike @Rondom proposed, we should probably generate documentation from doxygen comments and we or CI update the documentation automatically.\nI will try to convert the current documentation to doxygen and see what is the results.\n. We will have to keep it manually sync I think :cry: \nFiles are too different to be able to important doc.\n. typedef struct _DOKAN_OPERATIONS {\n  /**\n  * \\brief CreateFile Dokan API callback\n  *\n  * In case OPEN_ALWAYS & CREATE_ALWAYS are opening successfully a already\n  * existing file, you have to SetLastError(ERROR_ALREADY_EXISTS)\n  * If file is a directory, CreateFile is also called.\n  * In this case, CreateFile should return STATUS_SUCCESS when that directory\n  * can be opened.\n  *\n  * You should set TRUE on DokanFileInfo->IsDirectory when file is a directory.\n  *\n  * DokanFileInfo->Context can be use to store Data (like HANDLE)\n  * that can be retrieved in all other request related to the Context\n  *\n  * See ZwCreateFile for more information about the parameters of this callback.\n  * https://msdn.microsoft.com/en-us/library/windows/hardware/ff566424(v=vs.85).aspx\n  *\n  *\n  * \\param FileName File path requested by the Kernel on the FileSystem.\n  * \\param SecurityContext SecurityContext, see https://msdn.microsoft.com/en-us/library/windows/hardware/ff550613(v=vs.85).aspx\n  * \\param DesiredAccess Specifies an ACCESS_MASK value that determines the requested access to the object.\n  * \\param FileAttributes Specifies one or more FILE_ATTRIBUTE_XXX flags, which represent the file attributes to set if you create or overwrite a file.\n  * \\param ShareAccess Type of share access, which is specified as zero or any combination of FILE_SHARE_* flags.\n  * \\param CreateDisposition Specifies the action to perform if the file does or does not exist.\n  * \\param CreateOptions Specifies the options to apply when the driver creates or opens the file.\n  * \\param DokanFileInfo Information about the file or directory.\n  * \\return STATUS_SUCCESS on success or NTSTATUS appropriate to the request result.\n  */\n  NTSTATUS(DOKAN_CALLBACK *ZwCreateFile)\n  (LPCWSTR FileName, PDOKAN_IO_SECURITY_CONTEXT SecurityContext,\n   ACCESS_MASK DesiredAccess, ULONG FileAttributes, ULONG ShareAccess,\n   ULONG CreateDisposition, ULONG CreateOptions,\n   PDOKAN_FILE_INFO DokanFileInfo);\n}\nDoxygen does not even detect ZwCreateFile and all others callback that return NTSTATUS. If I change the return type to a know type like void/long, I work. Does anyone already faced such issue ?\nEDIT: Looks like I have to create typedef for each callbacks and it work:\n```\ntypedef NTSTATUS(DOKAN_CALLBACK *ZWCREATEFILE)(LPCWSTR FileName, PDOKAN_IO_SECURITY_CONTEXT SecurityContext,\n  ACCESS_MASK DesiredAccess, ULONG FileAttributes, ULONG ShareAccess,\n  ULONG CreateDisposition, ULONG CreateOptions,\n  PDOKAN_FILE_INFO DokanFileInfo);\ntypedef struct DOKAN_OPERATIONS {\n  /\n  * \\brief CreateFile Dokan API callback\n  \n  * In case OPEN_ALWAYS & CREATE_ALWAYS are opening successfully a already\n  * existing file, you have to SetLastError(ERROR_ALREADY_EXISTS)\n  * If file is a directory, CreateFile is also called.\n  * In this case, CreateFile should return STATUS_SUCCESS when that directory\n  * can be opened.\n  \n  * You should set TRUE on DokanFileInfo->IsDirectory when file is a directory.\n  \n  * DokanFileInfo->Context can be use to store Data (like HANDLE)\n  * that can be retrieved in all other request related to the Context\n  \n  * See ZwCreateFile for more information about the parameters of this callback.\n  * https://msdn.microsoft.com/en-us/library/windows/hardware/ff566424(v=vs.85).aspx\n  \n\n  * \\param FileName File path requested by the Kernel on the FileSystem.\n  * \\param SecurityContext SecurityContext, see https://msdn.microsoft.com/en-us/library/windows/hardware/ff550613(v=vs.85).aspx\n  * \\param DesiredAccess Specifies an ACCESS_MASK value that determines the requested access to the object.\n  * \\param FileAttributes Specifies one or more FILE_ATTRIBUTE_XXX flags, which represent the file attributes to set if you create or overwrite a file.\n  * \\param ShareAccess Type of share access, which is specified as zero or any combination of FILE_SHARE flags.\n  * \\param CreateDisposition Specifies the action to perform if the file does or does not exist.\n  * \\param CreateOptions Specifies the options to apply when the driver creates or opens the file.\n  * \\param DokanFileInfo Information about the file or directory.\n  * \\return STATUS_SUCCESS on success or NTSTATUS appropriate to the request result.\n  /\n  ZWCREATEFILE ZwCreateFile;\n}\n```\n. PREDEFINED DOKAN_CALLBACK= was the way to do it :+1: Thank you @Rondom \nHe do not seems to like to document individual parameters right before or after the parameter. Only \\param seems to work :(\nI try to add comments on define now, that also seems to not show for now xD\n. Alright I think I have import all documentation\nhttps://github.com/dokan-dev/dokany/commit/de9a3fbd0f6d035c4488c3a9b67070838165eef4\nThe result can be checkout here: https://github.com/Liryna/dokany/tree/gh-pages/documentations/doc/html\nI would like some feedback/pull request before adding gh-pages on this repository.\n. Thank you @Rondom for the quick review and the link :smile: !\nA native speaker would be very helpful yes !\nI have updated oxygen style and fixed some form.\nI agree about creating a git submodule that would be tagged on another repository that stores the documentation.\n. > I am not sure what problem you are trying to solve and how git submodules would exactly help. Please elaborate.\n/documentations/doc is where doxygen generate html. We can make this folder as submodule of dokan-doc repository branch gh-pages that will be checkout as the same TAG (version) of dokan. Like that we would have the documentation generated on another repository and that can be retrieved later without needing to generate it.\nIs it more clear :D ?\nEDIT: forget this, I think external repository with appveyor that commit documentation on it is much better.\n\nI am wondering if it would be \"just including the CSS\" to make the look consistent with https://dokan-dev.github.io\nWe could also place the Wiki/Howto link more prominently in the header using a layout-XML file (\u00b4doxygen -l\u00b4).\n\nIf someone has the skills for it :+1: that's something I will take too much time to do :smile: \nWe can make appveyor push documentation automatically on success to the dokan-doc repository branch gh-pages.\nLike that we would have documentation always update from the master.\nSee https://github.com/mnjordan/SpectreCore/blob/2b5671a32276a3cb46c1250cc7317a1a5a30807e/appveyor.yml\n. Dokan documentation is now pushed auto by appveyor https://github.com/dokan-dev/dokany/commit/b797eadd7fbf4bd274ec8ac662e8e70366cb7971\nThe documentation is in this repository https://github.com/Liryna/dokany-doc (it gonna be move dokan-dev/ next week)\nAnd can be read from here https://liryna.github.io/dokany-doc/html/\nI will add the link to github wiki when the repository will be moved.\nFor information, at the build doxygen show what is currently not documented https://ci.appveyor.com/project/Maxhy/dokany/build/1.0.0-700/job/9hsaoo84af2di3vd#L5169\n. All missing doxygen documentation warnings has been fixed.\nhttps://github.com/dokan-dev/dokany/commit/b3b0ef2dffad298fe4df26bece0ffa564bc6671b\nIf some of you have the time to review at least the most important like DOKAN_OPERATIONS and DOKAN_OPTIONS it would be nice :heart: \n. Documentation moved to https://dokan-dev.github.io/dokany-doc/html/\nAlso added Dokan API documentation from WIKI directly on the mainpage\n. I think this can be closed since the documentation has been completed (at least the dokan API for devs).\n. You had to pull the changes before create your commit to skip the \"auto merge commit\".\nOther this sync from dokan-dotnet is well appreciate ^^\n. Since your commit was made after the remote commit, he need to merge your commit together and sometimes you can have conflicts because both commit changed the same file. \nNormally you can fix it with git rebase -i HEAD~1 (since you made only one commit)\n. :+1: perfect ! Well done !\nThank you @magol for the documentation and quick fix !\n. Did you face a case where parent security descriptor was NULL ?\nIf I understood correctly, we should handle the case when parent directory security descriptor is NULL and return SUCCESS without continuing the query ?\n. Hi @rkrikava,\nI have not been able to reproduce the behavior you describe.\nDo you an idea how to make this happen with the mirror ?\n. @rkrikava any news from this ?\n. @rkrikava sorry didn't had time for it now \ud83d\ude22 busy week\n. It seems you are using mount manager option here. Have you try without /o ?\n@Maxhy If I remember the mount manager will choose the mount point himself if the the mount point is already used ?\n. Ah thank you for your test @rkrikava !\nMount manager give you the ability to use Recycle bin and some advanced win32 api will only work on the device if the option is enabled.\nThe option is generally only used if you need such things.\nI will see with @Maxhy about this behavior. I remember he told me something about it :smile: and that it is \"normal\". \nBut here the mount point reported should be updated according to the real one :+1: \n. @Maxhy confirmed me that when mount manager is used, we suggest the mount manager during IOCTL_MOUNTDEV_QUERY_SUGGESTED_LINK_NAME the letter to take BUT it is only a suggestion.\nWe should look in a way to update the real mount point or return an error.\n-> It is probably going to be the first case.\n. This will probably have to be done in 2.0.0 since it will need to change/create an IRP to update the user land FS with the real mount point before Mounted event.\nFor information, this is very rare to produce. You really need to make a race with another mount.\n. Hi @Kerbox ,\nExactly, I would like that all application using dokan 1.x.x (with embedded dokan1.dll) can simply check if dokan1.sys is already present or not, if it is: they can safely know that it is compatible with their application.\nThis also gives the ability to have multiple software using different dokan version with the same MAJOR API on the system.\nhttps://github.com/dokan-dev/dokany/wiki/How-to-package-your-application-with-Dokan\nTell me I answered correctly or if something is missing in the wiki \ud83d\ude03 \n. I think the current workaround should probably be to scan all devices and find the one with the correct information that you have set in GetVolumeInformation (serial number, name, FS,...).. @trungdinhtrong this behavior happens because we currently do not update the internal mountpoint with the final mountpoint that the kernel give us during IOCTL_MOUNTDEV_LINK_CREATED.\nI will try to make a patch to fix this issue.\n. Hi @trungdinhtrong ,\nI made a change https://github.com/dokan-dev/dokany/commit/60311c29752347a3f343f27c2e7fff36e1bae731 that will make able to use DokanRemoveMountPoint on the new mount point.\nYou can test it with snapshot build or wait 1.0.3. Tell me if this also worked on your side \ud83d\udc4d \nCurrently userland has still no idea of the new mount point. This will only be done in 2.0.0.. Fixed with https://github.com/dokan-dev/dokany/pull/325\n. Hi @magol ,\nDoes this would make it: https://gist.github.com/Liryna/31d723354f0bd7bbad9949ab5409aaac ?\n. Changelog added with your changes \nhttps://github.com/dokan-dev/dokany/commit/c5ec2d7d609dcdb5addbd452c01cad3e0ed199c3\nThank you again @magol !\n. Changelog added to all stable release\n. @HTPCSourcer Hi, \nUnfortunately this is made in purpose, both dokan version can work side by side so there is not reason to have such option. \nBut otherwise, dokan 1.0.0 will detect if another 1.0.0 is already installed and will ask to remove it. \nYou will probably need to create a script here to remove automatically the 0.5.3\n. @HTPCSourcer , like @Rondom said, you will need to remove 1.0.0 to install 1.2.0.\nDokan driver cannot be unload and remove without a reboot. The driver is flagged as removed but still running the time of the reboot.\nThis can be fixed if Dokan add support to PnP.\nI use this ticket to keep in mind to describe the system version of Dokan in the wiki.\n. For information, if the 1.x.x is already installed and MediaPortal 2 embedded dokan1.dll (he should), it gonna work.\nI mean that installing a new version of Dokan is only required if you requiere changes in the dokan driver but the communication of dokan1.dll will always work with dokan driver 1 (of the same MAJOR version).\nThe reboot cycle will be an obligation unfortunately :( for driver update.\n. You dont need to force the update for 0.5.3 to 1.0.0.\n0.5.3 will be automatically removed at the next reboot by himself.\nAlso 1.0.0 will not request to reboot and wil work directly.\nReboot only happen if you want to update an 1.x.x to another 1.x.x\n\nBy the way: Why would one want to have two different major versions installed in parallel?\n\nThere can be another software than MediaPortal 2 that probably need the 0.5.3 version :wink: \nBeing able to install two different major api give the possibility for two different softwares using two different major api, be able to run on the same system.\n. Does the mirror.exe in dokan folder 1.0.0 work ?\n. During the installation there is an option to add install developpement files, mirror is part of it.\ndoes 0.5.3 has a mirror for testing also ? I no longer have the installer of it, do you have a link for it ?\n. Mirror is sample of how dokan api work\nhttps://github.com/dokan-dev/dokany/wiki/Use%20Mirror%20example\n. what is the output of dokanctl /i d of the dokan 1.0.0 install folder ?\n. Can you provide a link to the 0.5.3 installer, I will also make a test on my side\n. Dokan 1.0.0 seems to override something of dokan 0.5.3 during driver install that make it fail.\nI am looking at it. \n. OK I found the issue in here.\nWindows dokan obj global device are named like this:\n\\Device\\Dokan (dokan 0.5.3)\n\\Device\\Dokan1 (dokan 1.0.0)\nWhen dokan mount a first new device a new obj is created:\n\\Device\\Dokan0 (dokan 0.5.3)\n\\Device\\Volume{guid} (dokan 1.0.0)\nWhen dokan mount a second new device a new obj is created:\n\\Device\\Dokan1 (dokan 0.5.3)\n\\Device\\Volume{guid} (dokan 1.0.0)\nBut if you remember \\Device\\Dokan1 is already used by dokan 1.0.0 so the mount fail since it already exist.....we should therefore rename \\Device\\Dokan1 to something else :'(\n@marinkobabic  I know that you had some argument when I changed dokan device name last time, do you think \\Device\\Dokan_1 can be used ?\n. Patch fixing the issue\n0001-Rename-dokan-global-device-name.txt\n. I have added versioning and dokan application documentation to the wiki https://github.com/dokan-dev/dokany/wiki/How-to-package-your-application-with-Dokan\nIf you see any changes or point that should be more clear <3\n. @marinkobabic I agree with you but I am talking about dokan 0.5.3 that does behave like that.\nI dont have the source of it but I seen the device creation with Winobj.\n(we only have 0.6.0 source here)\n. @marinkobabic  Just tested again, this behavior does not happen in dokan 0.6.0 \nSee has probably been changed between 0.5.3 and 0.6.0.\nSee global devices name with 3 mirror of dokan 0.5.3\n(it start at dokan0 but I mounted two mirror before taking the screen)\n\nSo yes we can say that the fix will only be useful if dokan <= 0.5.3 is installed on the computer.\nShould we patch it ? :thought_balloon: \n. @HTPCSourcer  It is a patch for dokan 1.0.0, not 0.5.3. The purpose of it, is to fix conflict between dokan 1.0.0 and dokan 0.5.3.\n0.5.3 is very old and we dont event have the source of it.\nI have apply the patch https://github.com/dokan-dev/dokany/commit/08a746a95260a666001c1a88ebe786430fabcfe5\nThis will be fixed in the next release.\nThank you @HTPCSourcer for your report !\n. Yes, it does :cry: older 1.0.0-RC Library will not be compatible with the futur stable that is going to be released.\nWe are lucky to have found that before making the stable, otherwise we would have to create a Dokan 2.\n. Hi @Rondom ,\nThe version is taken from https://github.com/dokan-dev/dokany/blob/master/Dokan.props#L6\nI just changed it to <DOKANVersion>1.2.3</DOKANVersion>, rebuild and get as expected:\nDriverVer=08/25/2016,1.2.3.0\n. @Rondom any news from this ?\n. Currently there is SetAssemblyVersion project that set the version from version.txt in version.xml, rc files and Dokan.props.\nDokan.props defines are use by projects in file name and the TimeStamp for sys.\nI tried to reuse Dokan.props defines in rc files but this does not seems to work :cry: sadly...\nThere is also DOKAN_MAJOR_API_VERSION in sys/public.h that should be changed by SetAssemblyVersion (currently need to be done manually). This define has to stay in header because it is used by dokan.dll and external FS.\n<TimeStamp>%DOKANVersion%.0</TimeStamp>\nCan you explain how this is duplicate for you ? This is needed for each build project (win7, win8,...) and one time configured in VS GUI.\n\nBtw: What will the x in 1.0.0.x be for the final 1.0.0-release?\n\nI think simply 1.0.0.5000, I don't see other possibility :cry: \n. - [ ] Change DOKAN_MAJOR_API_VERSION from sys/public.h with SetAssemblyVersion \n- [ ] Try to reuse Dokan.props defines in rc files\n. Hi @JxLiu2016 \nThis is the same issue as https://github.com/dokan-dev/dokany/issues/197\nIf you have any idea how this could be improve :cry: \n. Thank you @JxLiu2016 this would be very appricate !\nI just close the ticket to keep the discution in the origin issue.\n. Hi @taruti ,\nThank you for your contribution ! :+1: \nSo this issue were only related to fcb lock that was not properly handled ?\nCan you explain a little what was happening :heart: \nI will try to test it quickly.\n. :+1:  Have been able to copy 260k files without issues !\nLock seems to be well placed and are always release as I can see.\nWell done @taruti and thanks again, very appreciate as always ! :trophy: \n. Thank you @taruti and :+1: well found !\nIs there not also one missing here ? (not really important since it is for code before Win7)\nhttps://github.com/keybase/dokany/blob/e309f53feed6531a2348a05ff549b1653c056f35/sys/create.c#L1079\nI will try to review other places also.\nA review of CCB would be very appricate also !!! :+1: \n. Alright @taruti I missed it :+1: \nI have reviewed again all FCB, they seems all well fixed with your last pull request and this PR.\nJust this one: https://github.com/dokan-dev/dokany/blob/424692c0d36af2338a7af5f5d5000ff344e05e63/sys/cleanup.c#L117\nThere is a __leave line 95, should we not unlock it before leave or in finally ?\nGood work @taruti :trophy: \n. Sorry ! It was in front of my face :smile: \nThanks again for your contribution !\n. I even question myself if ccb lock are needed. There is already a couple a place where ccb is used and not locked. (like https://github.com/dokan-dev/dokany/blob/424692c0d36af2338a7af5f5d5000ff344e05e63/sys/fileinfo.c#L237)\nAs far as I know, ccb is only used in the current request/context and there should not be another thread using the same ccb. @marinkobabic can you confirme what I say or correct me if am wrong :heart: ?\nFastfat does not even lock ccb and CCb struct has no ERESOURCE\nhttps://github.com/Microsoft/Windows-driver-samples/blob/96eb96dfb613e4c745db6bd1f53a92fe7e2290fc/filesys/fastfat/fatstruc.h#L1354\n. Hi @zanderz ,\nThank you for your contribution ! :+1: \nIs it not the same as https://github.com/dokan-dev/dokany/commit/9782a6491775ef3660a71f40f381d3f48e511f14 ?\n. Alright @Rondom ! I agree that it would give a better experience to add this check before.\nDoes the check should not be \n((WINTRUSTVERSION >= v6.1.7601.18741 AND WINTRUSTVERSION < v6.1.7601.22000) OR WINTRUSTVERSION >= v6.1.7601.22948)) ?\n. @Rondom I agree with you, just that Wintrust.dll has version 6.1.7601.18741 and 6.1.7601.22948\nhttps://support.microsoft.com/en-us/kb/3033929\nSo the check should be WINTRUSTVERSION >= v6.1.7601.22948 and since LDR start as 22xxx the check should be WINTRUSTVERSION < v6.1.7601.22000.\n@zanderz :+1: for the msi packages ! I added it to the build script (it remind me to upload it :smiley: ) https://github.com/dokan-dev/dokany/commit/8885fefe75e1aaa299cf94ef19a70428c396cafb\n. @zanderz I am ready to merge your PR, I am just waiting for the changes on the version value as describe before (correct me if I am not wrong in my way I think this work :smile: ) and also rebase into a single commit.\n. Thank you @zanderz !\nCan you also change the check to WINTRUSTVERSION >= v6.1.7601.22948 since Wintrust.dll has version 6.1.7601.22948 ?\n(sorry to both, 22947 probably don't exist but I just wanna have the correct value)\n. > I changed it, but note that it doesn't match the packages, because MinVersion is inclusive.\nHere it is directly the correct version of the wintrust that we compare, there is no MinVersion.\nI tested it on Win7 with and without GDR/LDR KB and got the correct message just before dependency get installed :+1: \nGood job @zanderz and very appreciate !\n. Hi @leonzakaim,\nI tested your application with last master and I see not handles leak.\n\n. @leonzakaim I have changed locally the mirror to mount and unmount the device to reproduce the issue http://pastebin.com/WQXcY9Aq\nI have been able to find some CloseHandle missing fixed with this commit https://github.com/dokan-dev/dokany/commit/b5549ca44a9a0b5fbfd97af8b98e8e8c47626c23\nNow the mirror use 107 between a mount and a unmount and this never grow.\nTo be sure, I have trace ALL CreateFile and CloseHandle in the dll, I get the exact same number of CreateFile and CloseHandle at the end of the mount/unmount.\nThank you for your report @leonzakaim I hope you will get a good experience with Dokan :+1: \n. @leonzakaim this is duplicate with https://github.com/dokan-dev/dokany/issues/329 no ?\nIf you are sure there is a handle leak, can you provide a SIMPLE c# / c application that target the C mirror (open a file on the mirror dokan device)  https://github.com/dokan-dev/dokany/wiki/Use%20Mirror%20example that create a handle leak ?\n. @leonzakaim Ok, can you make a simple to have a simple c# / c application that target a file on the Dokan mirror to reproduce the issue ?\n. What kind of IO operation your sample execute on the Dokan device ?\nMake a sample of it and I will test it on the C mirror.\n. @leonzakaim I currently have not time to read external code. A sample would make things much easier for me to debug dokan if there is an issue.\n. Here is the sample that I created from your sample:\n```\nusing System;\nusing System.Collections.Generic;\nusing System.IO;\nusing System.Text;\nnamespace ConsoleApplication7\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            while (true)\n            {\n                try\n                {\n                    FileStream file = File.Open(@\"M:\\test.txt\", FileMode.Open);\n                    var textReader = new StreamReader(file);\n                    string text = textReader.ReadToEnd();\n                    file.Close();\n                    Console.WriteLine(\"Done\");\n                }\n                catch (Exception ex)\n                {\n                    Console.WriteLine(ex.Message);\n                }\n            }\n        }\n    }\n}\n```\nI run it on the M disk (the mirror.exe).\nI get no leak at all:\n\nAre you sure your implementation of is not the source of the leak ?\n. Maybe MediaElement keep a handle internally ?\nBut as far as I am concern, there is no issue pointed with dokan here.\nA simple example to reproduce the issue on the dokan mirror is needed here.\n. Hi @leonzakaim \nHere is the logs of your application opening a mp3 file on the dokan mirror.exe (I just changed local path to \"M:\\\").\nhttp://pastebin.com/CEJvLSVc\nThere is the same amount of Createfile success and Cleanup (exactly 43). Therefore, all handle has been cleaned in dokan side.\nI checked the number of handles opened by your application with Process explorer and it grows at each file open on the C:\\ device (so not related to dokan).\nWhy do you think there is a leak on dokan side, had you an issue with your implementation not getting a close ?\n. Windows media player is able to read the video in the dokan mirror \\localhost\\myfs\\video.divx \nVLC is unable to browser the dokan shared folder (file -> open file)\n. This is a vlc related issue. With a standard shared localhost folder, vlc is not able to read the file and it is the same error that with dokan.\n. smb mount points and localhost shared folder are two different things.\nTry to share a folder on your desktop and acces it by \\localhost\\myfolder, you will see that vlc will not be able to play it too.\n. I have been able to reproduce your issue on win7 but I have not been able to find the reason of it.\nThe logs do not seems to have a CreateFile failing. It probably come from the kernel.\nlog.txt\nThis does not happen on win8 & 10\n. Release took me all my time and needed to be done.\nNext step on this should be to look at kernel logs to see if some request are denied before reaching user land fs.\nContribution are also well appreciate on this.\n. Hi @Kerbox ,\nI think here we will need to look at the kernel logs (probably also use process monitor https://technet.microsoft.com/en-US/sysinternals/processmonitor.aspx)\nAnd see if there is not  a request refused when it should be accepted.\n. DispatchQueryInformation result = 80000005 is not important.\nIt is createfile that should be checked.\nBad file descriptor would probably mean that he has not been able to open the file at all.\nProcess monitor would help to show any error and compare with a normal behavior on NTFS FS.\n. It first open the file normally, read it and after open the file as a directory ? O_O wow\nDoes the request \\triforce1.mp4\\ go to the mirror ? it succeed ? (i don't see it in the procmon logs). This should be fail \"normally\".\nHave you been able to compare with the NTFS FS ? (reproduce on the same file and compare where it should fail/succeed)\nAbout fileObject, I don't really know if the memory value is always the same sorry \ud83d\ude22 \n(I currently dont have the time to look on this issue but I will help you when will get some time)\n. Fixed with @Kerbox PR https://github.com/dokan-dev/dokany/commit/0cf54fa20387c6b056ff1e71ac183eb5247b9f4b Ty !\n. Hi @kenshinsh ,\nThank you for your report !\nI have been able to reproduce your issue.\nYou don't specialy need the network option to make it happen. Mounting a device with current session and killing it does not clean the mount point as it does with global mount point.\n. The fix https://github.com/dokan-dev/dokany/pull/523 has been merged to the master.. @Rondom yes exactly :+1: \nCurrently msys2 fork a new shell that is not logged in appveyor.\nI will wait your PR therefore :wink: \n. @Rondom version.txt should be replaced by the md but it is used by the tools to detect what version to build. It mean that the tools does also has to be changed\n. This is not very \"standard\" from http://keepachangelog.com/en/0.3.0/ but can we just add the version to unreleased section and use it in SetAssemblyVersion ?\nhttps://github.com/dokan-dev/dokany/blob/master/CHANGELOG.md#unreleased\nUnreleased - 1.0.0.5000\nwith this we can remove the version.txt\nping @magol \n. ok ! version.txt will be removed so and SetAssemblyVersion  changed to use the changelog !\n. Done with https://github.com/dokan-dev/dokany/commit/a0202c23dc15bd1ae959e5648c64057c62f3d803\n. I did the test locally and file were correctly updated.\n. @Rondom quick fix to come :+1: \n. RDP on appveyor :open_mouth: ?\nI already seen that couple of time cygwin packages does not work for a reason after an update.\nI just tested on my env and it no longer work...\nUsually I wait some days that it come back :+1: but here with the release of next week it gonna be an issue :cry: \n. https://www.cygwin.com/ml/cygwin/2016-09/msg00167.html\ncmake has been update the 12, it is porbably linked to ?\n. I don't know how to answer to his annonce ><\nBut we should probably report it since he say he does not make release offen :D\n. @Rondom I have request to r\u00e9install the package from the UI and it work !\nhttps://cygwin.com/faq/faq.html#faq.setup.cli\nit seems like there is not such option to do it by cmd line.\nwe probably need to remove the package and reinstall it\n. Just checked and there is only informations of the succesfull reinstall :disappointed: \n. ah ! :smiley: this would be helpful for the cmake maintainer !\n. @Rondom No longer can reproduce it on my env :'( \nonly coming from and old version seems to create this behaviour like appveyor.\nI will try to report to the maintainer but now idea how to answer to his topic :'(\n. \ud83d\ude28 Wow that scary but good to know !\n. :+1: perfect thank you @Rondom !!!\n. @Rondom I have been able to build fusexmp.c on cygwin with your install package without issue :+1: \nThere is only utils.h that should be added in the installer. It has some helper that provides the library and it  is used by some projects (@jetwhiz does use it if I remember).\nhttps://github.com/dokan-dev/dokany/blob/master/dokan_fuse/src/dokanfuse.def#L85-L96\n\nIndeed some of the stuff might be useful, other stuff looks more internal, especially the stuff relying on C++. Does someone have an idea or suggestions, about what is useful and what is internal?\n\nYou know what ? I removed ScopeGuard.h, rebuild, and nothing happened :smile: \nIt seems to come from Loki http://loki-lib.sourceforge.net/html/a00667.html\nThis probably was used a looonnng time ago in dokanfuse.cpp and not removed from the solution.\nYou can remove it in your pull request if you want :+1: \nGood job @Rondom :+1:  and big :heart: to the make install\n(there is a couple of warnings showed with https://github.com/dokan-dev/dokany/pull/337/files#diff-e2cb466c3a4e3af410a8719f1f2b0340R10, do you plan to fix it ? otherwise I will do it after)\n. > Ok, I will add back utils.h to the installation. This is a C++ header, shall I #ifdef things and disable symbol-mangling for the C-parts, so it can be used both in C++ and C (minus the C++ parts)?\nYes this would be great!\n. @Rondom I will provide you a patch for the build warnings tomorrow morning.\nCan you make the last changes also at this time ?\nI would like to make the release tomorrow.\n. @Rondom here is the patch: \n0001-Fix-fuse-build-warnings.txt\n. Thank you @Rondom for making this and in time :smiley: !\n:+1: Let's the release begin !\n. @Rondom Alright I will do this :+1: \n. :+1: I will do it\nCurrently I have issue to build fuse on my windows :cry: \n0 [main] bash 8436 child_info_fork::abort: C:\\cygwin\\bin\\cygiconv-2.dll: Loaded to different address: parent(0xF50000) != child(0xEA0000)\n/usr/bin/bash: fork: retry: No child processes\n      0 [main] bash 8020 child_info_fork::abort: C:\\cygwin\\bin\\cygiconv-2.dll: Loaded to different address: parent(0xF50000) != child(0xF40000)\n/usr/bin/bash: fork: retry: No child processes\n      0 [main] bash 7788 child_info_fork::abort: C:\\cygwin\\bin\\cygiconv-2.dll: Loaded to different address: parent(0xF50000) != child(0xE60000)\n/usr/bin/bash: fork: retry: No child processes\n      0 [main] bash 10652 child_info_fork::abort: C:\\cygwin\\bin\\cygiconv-2.dll: Loaded to different address: parent(0xF50000) != child(0xFF0000)\n/usr/bin/bash: fork: retry: No child processes\n      0 [main] bash 9168 child_info_fork::abort: C:\\cygwin\\bin\\cygiconv-2.dll: Loaded to different address: parent(0xF50000) != child(0xE80000)\n/usr/bin/bash: fork: Resource temporarily unavailable\ndid you face the issue ?\nIf I run C:\\cygwin\\bin\\bash outside the script it work :cry: \n. @Rondom https://github.com/dokan-dev/dokany/commit/cde6cd5575e25240b4410dd223e38b0cf34e9597 is that alright for you ?\n. @js69 is it not the same as frist command that gave @Rondom ? (it show FileVersion)\n. No idea, but https://github.com/dokan-dev/dokany/blob/master/appveyor.yml#L133-L140 this part of the code generate the version.\n(I tested locally and it work, version.txt has the good version)\n. Fixed with https://github.com/dokan-dev/dokany/commit/da39829ddccbf68e7d4af3966edb8b0c91afa25f\nRegex :heart: \n. you are right @Maxhy , just tested with mount manager option /o on mirror and it worked !\nEdge seems to need advanced feature provided by mount manager.\n@g-fusion @melak47 can you do a test on your side also ?\n. Hi @g-fusion ,\nYes you should open new issue for this since it is not related.\n. Hi @AndirNotes ,\nMounted folder cannot use the mount manager option. Please try directly with /o and with a driver letter.. @Rondom The combination is not allowed if i remember. If not, we should return an error i agree. \nIt is a windows limitation as far as i know and seen. If someone find a reason or a way to make it work, i have no problem to reopen it.. That's right @Rondom I was not even aware of this :O\nAlternative does not seems to be what we want :cry: they only show how to make the cert valid for powershell.\nThe certificat need to be installed in the root store and haven't found something in command line for windows 7 :(\nLike you say, this is probably never be faced and it is not much important since it still can be done manually.\n. @Rondom I think a simple little message as you proposed would be the best and most fast way to do it.\n. I will add the check myself :smiley: \nyou have a break in october ?\n. Fixed with https://github.com/dokan-dev/dokany/commit/2f16f66548a25934e4a668cc363d3a445e5dbb21\n. Hi @velislav87 ,\nThank you for the report and the dump file !\nI currently have no time to look into it but it is in my todo since it should be fixed in the 1.0.1.\nDo you think I can reproduce the issue with simply installing McAfee ? Which verison is it ? (a free trial possible \ud83d\ude04 ?)\n. @velislav87 Ok ! McAfee was fixed by @marinkobabic some weeks ago thats why It surprised me.\nDoes the application use the correct dokan1.dll from the 1.0.0 release ?\nKeep me update on this ! I will try to read the dump that you provided when get time \u2764\ufe0f \n. Thanks @marinkobabic for the call stack \u2764\ufe0f I agree with you, we need the kernel logs here @velislav87 .\nThere is probably a case where FsRtlInitializeOplock is not called but I don't see how... \ud83d\ude22 \n. @velislav87 any news on this ?\n. Hi @jetwhiz !\nThank you for the report, I have been able to reproduce easily with your steps :heart: \nThis come from pull request https://github.com/dokan-dev/dokany/pull/325 @taruti \nThis is a deadlock as I can see coming from the changes. There is probably somewhere where it is not released.\n. https://github.com/dokan-dev/dokany/blob/2c6ca3a6594741d0edc5c21f7116ffffee9fa579/sys/write.c#L125\nCcPurgeCacheSection is freezing :cry: and is not leaving.\n. @taruti looks like CcPurgeCacheSection is calling another function that request also the lock and get stuck.\nI tried to remove the lock from writing (since it has been added in the PR), it didn\u2019t change. \nDo you know if there is a place where you added some lock ?\n. Fixed with @taruti \u2764\ufe0f ! (will probably make a 1.0.1 next week)\n. @Rambalac some task has to be done for the 1.0.1 https://github.com/dokan-dev/dokany/milestone/3\n. @js69 :+1: just installed the new version !\nDoes it need some project update ?\n. Ok ! this gonna be for the 1.0.1 next release with report that people made !\nThank you @js69 \n. @taruti work well on my side \ud83d\udc4d Thank you for the quick fix ! very appreciate and well found !\n. Hello @taruti ,\nThanks you for the contribution !\nThis is a good improvement of how the flags are checked (cleaner, same macro used everywhere) and the safety of it !\nVery appreciate ! keep the good work \u2764\ufe0f !!!\n. Hi @TimJRodgers ,\nThank you for the report and specially for the code sample ! very appreciate \ud83d\ude03 !\nYou are right this case should be handled in the way you describe it but it seems not to be enough, the test keep failing.\nDo you think you could continue to look more into it ? (this would be helpful, I have a couple of things to take care \ud83d\ude22  already)\n. @TimJRodgers I just commited a fix, your sample pass now on the mirror \ud83d\udc4d \nhttps://github.com/dokan-dev/dokany/commit/45f89a88a4f4715a5f9b2dab0d480ed217ea99fe\nTell me if it work for you also \n. Hi @USeebi ,\nThank you for the pull request.\nIs it not possible to have a pkg-config that copy all headers in the correct folder from the dokan_fuse project rather than having duplicate headers in the repository ?\n(I don't really use pacman/msys2 so if anyone with the knoweldge could help me review this pull request \ud83d\udc4d )\n. Hi @chibill ,\nThere is a pull request currently made on pyfilesystem to add dokan 1.0.0 support. https://github.com/PyFilesystem/pyfilesystem/pull/258\nIt is currently working on my side \ud83d\udc4d and waiting for the merge\n. Hi @g-fusion ,\nCan you reopen the issue in .NET since the issue seems to be in the .NET.\nThanks in advance !\n. @ht35268 Hi, \nCan you try with /o option on the mirror?\n. The issue can be the same as https://github.com/dokan-dev/dokany/issues/345\nThis will need to be tested on a new version.\n. when you say rename, copy, move or delete, you mean in your filesystem ? (like remote ftp files)\n. If you remove file outside the driver outside the mirror, yes the mirror will not be notified of the changes since the request to go through him.\n. Fixed with https://github.com/dokan-dev/dokany/commit/933478e78c15956b5230cd5b027c91ac70200c3a\nThank you @ht35268 for the report \ud83d\udc4d \n. https://github.com/dokan-dev/dokany/commit/933478e78c15956b5230cd5b027c91ac70200c3a#commitcomment-19269310\n. Done https://github.com/dokan-dev/dokany/commit/d15e23cb7d0f77c79e7e5c62b6e7fdb4a8a08134\n. Hi @mistersandman ,\nSorry for the delay, thank you for the analyze and describing in detail how the issue could happen \ud83d\udc4d \nI understood the situation that you describe, I just don't understand the possible fix you propose (the number of lines seems to be wrong or I didn\u2019t get).\nCan you check if lines are correct or even provide a patch for the issue ?\n. Thank you @mistersandman for the patch ! very appreciate \ud83d\udc4d \nDid you faced the issue or did you review the code ?\nI have added it https://github.com/dokan-dev/dokany/commit/4f1d82fe80b574d81dabb59debcfbf1972e4e4b1\n. @mistersandman Well found so \ud83d\ude04 ! \nThanks again for the report and do not hesitate if you find anything else !\nIt is very appreciated when someone gives the issue and the fix \u2764\ufe0f !\n. @Rondom Without setting mount folder and simply with mount manager: mirror.exe /r C:\\ /l m /o\nAll subfolders like M:\\Users are shown as Mounted Volume and there is no size on the folder property. Seems like explorers think that each folder is a device mounted ?\nThis issue should be on our side otherwise C:\\ should show the same behavior (it also uses mount manager for mounting).\n. Hi @taruti ,\nThank you for the changes and reviewing the documentation ! \u2764\ufe0f \nAll good to me \ud83d\ude0e keep up the good work !\n(are you reviewing something on the dokan driver ?)\n. Hi @Rondom ,\nIs there a flood of request made ? or do you think there is a deadlock somewhere ?\n. Hi @arfaatc;\nThe library is targeting developpers for creating products.\nLike I already told you by mail, you need ton contact directly https://github.com/Rambalac/ACDDokanNet\nfor mounting amazone driver on windows.\n. Hi @cerebrate ,\nThank you for the report !\nI cannot use the dump unfortunately :'( is not me who built the version (need the dbg from the build).\nThis is a very interesting case to see what Microsoft changed! I will follow the KeyBase discussion \ud83d\udc4d \n. @cerebrate try to install https://github.com/dokan-dev/dokany/releases/download/v1.0.0/DokanSetup_redist-1.0.0.5000.exe (enable optino install dev tools). Run the mirror in dokan sample folder.\nmirror.exe /r C:\\Users /l m\nBrowse the M:\\ \ud83d\udc4d \n. @CrosseyeJack the mirror is installed when you click on option button in the installer and check \"install dev tools\" (something like that :smiley: ). But download zip also work :+1: \nDbgView is only working if you use Dbg installer https://github.com/dokan-dev/dokany/releases/download/v1.0.0/DokanSetupDbg_redist-1.0.0.5000.exe (it has debug output enabled).\nFor now, just try the WinDbg analyze before going any further :+1: \n. Hi @marinkobabic ,\nThank you for the PR and the fix ! I see that we are still in the case where Dokan is contacted before the user land is available \ud83d\ude22 ...\n\nthe original request camed from there (add interrupts to pool) but a driver filter added some requests more. So driver had no usermode interrupt to be able to handle the driver filter requests by them.\n\nSorry I am maybe lacking of some knowledge, can you describe a little in another words \u2764\ufe0f  ?\n. Han !!! Perfect explanation @marinkobabic big thanks !\nI perfectly understand it now \u2764\ufe0f \nIt seems to be a case to case behavior and your fix seems to be the way it has to be done.\nI will just test a thing on my side and merge your pull request and let @cerebrate make a test with a snapshot build \ud83d\udc4d \nthank you again @marinkobabic for taking the time to look at the issue and making the explanation clear !\n. @cerebrate @CrosseyeJack @zanderz \n@marinkobabic Fix has been merged \ud83d\udc4d A snapshot build can be download here https://ci.appveyor.com/api/buildjobs/vyak0xn91hnk5eb3/artifacts/DokanSetup-1.0.1.0790.exe\nIt is selfsigned see https://github.com/dokan-dev/dokany/wiki/Build#user-snapshot if you wanna test it.\n. Ah perfect ! Thanks for the quick feedback @cerebrate !\nAll the \ud83c\udfc6 goes to @marinkobabic \ud83d\ude09 \n. Hi @sdecugis ,\nI have install Trend Micro A/V on my VM (http://trial.trendmicro.com/US/TM/2017/TrendMicro_TAV_11.0_US-en_Downloader.exe)\nI can run the mirror but it is extremly slow, is it also the case for you ? (didn't start an application from it for now).\n. OK :D\nDo you think I can reproduce the behavior with a simple Hello World print basic.exe ?\n. I tried to launch procmon.exe from the mirror by command line (using explorer totally slow down the VM).\nIt began to start annnd it became slow could not go futher...but the device was still here :cry: \nProbably should first see why this so slow with this AV.\n. @sdecugis I retried to make a test with the RC3 but I am really unable to get this work at a normal speed \ud83d\ude22 \nI agree with @marinkobabic , since you are using a single thread, it explained the timeout dismount if your thread has hit the deadlock (now fixed) \ud83d\udc4d \n. Hi @DimitarKapashikov ,\nAre you sure you have the correct dokan1.dll in your runtime folder ?\nAlso, can you look if Readfileproxy is called https://github.com/dokan-dev/dokan-dotnet/blob/master/DokanNet/DokanOperationProxy.cs#L372 ?\nDoes the C# mirror work ?\n. There is an issue open at microsft about this: https://connect.microsoft.com/VisualStudio/feedback/details/1598704/microsoft-visual-c-2015-redistributable-x86-and-x64-14-0-23026-fail-to-properly-install-on-windows-8-1-x64\n. \ud83d\ude1e I hope the size of them are acceptable. Otherwise it is better to simply add an error message.\n. \ud83d\ude06 A link would be much better yes haha !\n. Let's simply say to install KB2999226 with a link to https://support.microsoft.com/en-us/kb/2999226 \ud83d\ude03 \n. @js69 do you think you can handle this for the 1.0.1 ? \u2764\ufe0f \n. Last message of Microsoft https://connect.microsoft.com/VisualStudio/feedback/details/1598704/microsoft-visual-c-2015-redistributable-x86-and-x64-14-0-23026-fail-to-properly-install-on-windows-8-1-x64\ncheck that the file version of:\nC:\\Windows\\SysWOW64\\wuaueng.dll\nC:\\Windows\\System32\\wuaueng.dll\nis 7.9.9600.17031 or later.\nI will be able to install a 8.1 clean to test it \ud83d\udc4d \n. Checking only KB2999226 is enough no ?\n. Well, OK I agree that could be the best to have a personalized error message.\nJust to understand, the KB2999226 can only be installed if other KB that you listed are also installed ? (that's why I wanted to check only this ony and probably also list all KB dependency)\nThanks again @cdarau for taking the time on this !\n. @js69 I wanted to add the check but I remember/found that we already have a check for this situation no ?\nhttps://github.com/dokan-dev/dokany/blob/da39829ddccbf68e7d4af3966edb8b0c91afa25f/dokan_wix/Bootstrapper/Bundle.wxs#L153-L177\nDoes that mean there is something missing this check or ?\n. I have add the @js69 check https://github.com/dokan-dev/dokany/commit/bbf256e1bd21362ce60cec76c95d8107582e4f9a#diff-2b9d1f43d6d6c50ec9813a10ad44c436R205 \ud83d\udc4d \nI tried to have a windows 8 without KB2919355  but all my iso installation have it already.... @cdarau do you think you can test the installer and see if you get the error as expected ? \nhttps://ci.appveyor.com/project/Maxhy/dokany/build/1.0.1-804/job/emsti3fiyqbql85n/artifacts\n(the installer is selfsigned https://github.com/dokan-dev/dokany/wiki/Build#user-snapshot so the mirror will not work.)\n. https://support.microsoft.com/en-us/kb/2919442 there don't seems to be a difference of version for GDR LDR (at least it does not seems to be documented)\n. @js69 I didn't revert my commit :O what do you mean ?\nYes, I think we are going to set the dev files by default. Already a couple of people have not found it.\n. \ud83d\ude22 humm looks like we will wait that someone open an issue in case this can still be faced.\nThanks @cdarau and @js69 for taking the time on this \ud83d\udc4d \n. I have enabled it for now https://github.com/dokan-dev/dokany/commit/8dcbd930d7c4e01f3fd99d716ce17002f43953c8\n. Hi @marinkobabic ,\nWell found as always and extremely appreciate \u2764\ufe0f !\nAbout unicode string compare, can we not just call RtlCompareUnicodeString with fileObject->FileName and systemVolume, check the return value like:\nRtlInitUnicodeString(&systemVolume, L\"\\\\System Volume Information\");\nif (RtlCompareUnicodeString(&systemVolume, &(fileObject->FileName), TRUE) < 0) {\n   DDbgPrint(\"  It's an access to System Volume, so don't return SUCCESS. We don't have one.\")\n   status = STATUS_NO_SUCH_FILE;\n   __leave;\n}\nit would avoid the buffer copy.\nRtlCompareUnicodeString doc says that < Zero : String1 is less than String2., so it \"should\" be alright \ud83d\ude04 do you think you can test something like that ?\n. Yes, I tought RtlCompareUnicodeString would return a <= 0 value if fileObject->FileName started with \\System Volume Information.\nI tested it and I was wrong \ud83d\ude22 \n```\n    UNICODE_STRING string1, string2, string3, string4;\n    RtlInitUnicodeString(&string1, L\"\\System Volume Information\");\n    RtlInitUnicodeString(&string2, L\"\\System Volume Information\\Cloud Files\\\");\n    LONG result = RtlCompareUnicodeString(&string1, &string2, TRUE);\n    DDbgPrint(\"RtlCompareUnicodeString 1 result %ld\\n\", result);\nRtlInitUnicodeString(&string3, L\"\\\\System Volume Information2\\\\Cloud Files\\\\\");\nresult = RtlCompareUnicodeString(&string1, &string3, TRUE);\nDDbgPrint(\"RtlCompareUnicodeString 2 result %ld\\n\", result);\n\nRtlInitUnicodeString(&string3, L\"\\\\test\");\nresult = RtlCompareUnicodeString(&string1, &string4, TRUE);\nDDbgPrint(\"RtlCompareUnicodeString 3 result %ld\\n\", result);\n\n.....\n[DokanFS] RtlCompareUnicodeString 1 result -13\n[DokanFS] RtlCompareUnicodeString 2 result -14\n[DokanFS] RtlCompareUnicodeString 3 result 26\n```\nBUT this worked:\n```\n    UNICODE_STRING systemVolume;\n    RtlInitUnicodeString(&systemVolume, L\"\\System Volume Information\");\nif (systemVolume.Length >= fileObject->FileName.Length)\n{\n  LPCWSTR p1, p2;\n  p1 = systemVolume.Buffer;\n  p2 = fileObject->FileName.Buffer;\n  unsigned int len = 0;\n  LONG ret = 0;\n  while (!ret && len < 26) {\n      ret = *p1++ - *p2++;\n      ++len;\n  }\n  if (ret == 0 && (systemVolume.Length == fileObject->FileName.Length || *p2 == L'\\\\'))  {\n    DDbgPrint(\"  It's an access to System Volume, so don't return SUCCESS. We don't have one.\")\n      status = STATUS_NO_SUCH_FILE;\n    __leave;\n  }\n}\n\n```\nit is not much but...we avoid allocating memory \ud83d\ude03 \nCould you try it on your side if still work and update your PR \u2764\ufe0f ? \n. Thank you for the quick changes \u2764\ufe0f !\n. @dimov-cz You have to enable the option to accept installing development files.\n. Hi @dimov-cz ,\nI have already seen this behavior and tried to improve it but wasn't able to find something.\nWe use SHChangeNotify to notify the mount and unmount of devices. https://github.com/dokan-dev/dokany/blob/da39829ddccbf68e7d4af3966edb8b0c91afa25f/dokan/mount.c#L529\nThis is correctly called but still the cmd does not send requests to the kernel after remount. There is absolutely nothing sent to the kernel (therefore to the mirror).\nThis is probably a notification to the current running shell but I cannot see what we are doing wrong \ud83d\ude22 \n. Hi @ajaxovic ,\nThis seems to be the same that https://github.com/dokan-dev/dokany/issues/345 but you faced a BSOD.\nWhen you F4, notepad open and it is at the save that it BSOD ?\n. Humm can you just try to install development tools. (Uninstall, install again but click on options but and check to install additional files).\nhttps://github.com/dokan-dev/dokany/releases/tag/v1.0.0\nTry the mirror https://github.com/dokan-dev/dokany/wiki/Use%20Mirror%20example\nLook if you can reproduce the issue with it\n. I just installed free Avira and dokan 1.0.0.\nI was not able to make it BSOD \ud83d\ude22 \nMy avira version is 15.0.20.59\nCan you try to run the mirror and reproduce the issue with it ?\n. If you add /n option to the mirror, it will mount it as network. can you give another try ?\n. Good job @Kerbox for tracking this !\nDoes the security descriptor returned by winsshfs was valid ? (empty but valid ?) \nI agree maybe we can make a check in the dokan side. Something like IsValidSecurityDescriptor (don't think there is a function in the kernel side) and return STATUS_NOT_IMPLEMENTED if it is a wrong descriptor.\nThe best would be to check if request information are in the security descriptor but this would be more hard...\n. Ahhhh ! \ud83d\udc4d Perfect !!! Didn't know this function \ud83d\ude04 \nYou can make a PR if you would like \u2764\ufe0f \n. Fix from @Kerbox has been merged in master https://github.com/dokan-dev/dokany/commit/1121f48ff7ad5a956f7e7bdd670a736edbec81b9\nThank you @Kerbox again !\n. Hi @RogerlinInquartik ,\nThank your for the report and the patch !\nI agree about the missing DokanFCBUnlock in create.c \ud83d\udc4d my mistake \ud83d\ude22 well found ! https://github.com/dokan-dev/dokany/commit/2c11442c4d904f191c60ba720e5e5be2d85dc44c\nAbout fscontrol.c, the return is in a try finally so the finally will be executed and the lock will be released.\nWhat do you think about it  ?\n. I have been able to reproduce and it seems that FsRtlOplockBreakH without ending \ud83d\ude22 \nhttps://github.com/dokan-dev/dokany/blob/2c11442c4d904f191c60ba720e5e5be2d85dc44c/sys/create.c#L1039\n@bailey27 I remember you was talking about this FsRtlOplockBreakH in your comment here:\nhttps://github.com/dokan-dev/dokany/issues/285#issuecomment-232012297\nDo you think we should enable the callback ?\n(it work if the callback is enabled)\n. @js69 did you also faced the issue on RC4 ? (in case of you remember doing this)\n. Ok so it should be a lock issue (only change made since RC4)\nThank you for the test @js69 !\nWill try to fix it this weekend :)\n. Ok @js69 I have test all commit and found that the issue appear with https://github.com/dokan-dev/dokany/commit/45f89a88a4f4715a5f9b2dab0d480ed217ea99fe \ud83d\udc4d \n(no kernel changes)\n. Humm are you sure \ud83d\ude2e ? I tested it and still have the issue.\n. I tested more and this seems to be a race condition when it happen.\nI have been able to reproduce on 1.0.0 \ud83d\ude22 \nFor me we should release the FCB lock before FsRtlOplockBreakH and get the lock after because FsRtlOplockBreakH is waiting that other request get cleanup but cleanup request FCB lock access...that is never going to happen since it is already locked by FsRtlOplockBreakH .\n@taruti any idea on this ?\n. I made a fix (unlock during oplock) https://github.com/dokan-dev/dokany/commit/b69f03e7a84e14a3a89c11dab5363cb2823b8ab5\nCan you test on your side ?\n. \ud83d\udc4d Thank you @js69 for the feedback!\nThe Delete is the desire access but does not specially mean that you will delete it. But if FILE_FLAG_DELETE_ON_CLOSE (dwFlagsAndAttributes) is requested, the DeleteOnClose will be set at CreateFile.\nI hope I have answered your question \ud83d\ude03 \n. Hi @dimov-cz ,\nYes the issue is related to #345 . I tested your script on a snapshot and it work \ud83d\udc4d \nliryna@DESKTOP-T9B1IFA MINGW64 ~/Desktop\n$ ./wfsGitTest1.sh\nCloning into 'emsdk.tmp'...\nremote: Counting objects: 825, done.\nremote: Compressing objects: 100% (8/8), done.\nremote: Total 825 (delta 2), reused 0 (delta 0), pack-reused 817\nReceiving objects: 100% (825/825), 393.60 KiB | 0 bytes/s, done.\nResolving deltas: 100% (517/517), done.\nwarning: LF will be replaced by CRLF in newfile.dat.\nThe file will have its original line endings in your working directory.\n[master 0bcd92e] add new file\n 1 file changed, 1 insertion(+)\n create mode 100644 newfile.dat\n0\nSorry for the issues in 1.0.0, the lock unlock FCB has been changed after RC4 and it has not been enough tested. A next 1.0.1 will come soon with all the fixes ! \ud83d\ude22 \n. Oh sorry @dimov-cz , I tested again and it is right that there is a mmap error.\n@Kerbox is right it is the second commit that work strangely. When I tested it, first commit proposed me to config my git environment so I had no error \ud83d\ude22 \n. This work with 1.0.0-RC4.\nI debugged the current master and it seems like there is some unlock not proceed here.\nI have not been able to find the exact one but I saw a couple of Lock made not followed by an Unlock \ud83d\ude22 \n@taruti do you think you can help on this ? I feel that some scope of locks (specially from create.c) are too big and could be reduced not ?\n. I see ! So probably we should also open the file in GetFileInfo when the handle is invalid (already called after cleanup).\n@taruti I tought there is/was a lock issue because after running the script, leave the folder/explorer close the mirror cleanly. The kernel device does not want to be unmount because there is still reference on files looks like.\n. @taruti 1.0.1.0795 (https://ci.appveyor.com/project/Maxhy/dokany/build/1.0.1-795)? so you mean it worked before https://github.com/dokan-dev/dokany/commit/63655e3410ba8982669018deff48004f728a2b36 ?\nBecause @dimov-cz faced it with 1.0.1\n. @taruti I have start to review the FCB lock (to reduce the scope of it and try to not have oplock calls in the lock)\nhttps://github.com/dokan-dev/dokany/tree/review-fcb-lock\nI remember you reviewed it because of BSOD when copy a lots of files. Did you just copy something like 1000 files and get a bsod ? (just to be sure that I dont bring back the bsod)\n. @Kerbox I also get \"bad index file sha1 signature\" when I tried to change it \ud83d\ude22 \nI added support of \"FILE LOCKED WITH ONLY READERS\". It now correctly return the value but it does not change the behavior \ud83d\ude22 \nhttps://github.com/dokan-dev/dokany/commit/2768ac75402a0dbe06de163763485e251be2ac54\nI tried with changes of oplock review and it changed nothing also https://github.com/dokan-dev/dokany/tree/review-fcb-lock\nI don't know what is still wrong for him and why there is still reference on the device after running the script, it makes the device unable to be removed on the kernel side \ud83d\ude1e https://github.com/dokan-dev/dokany/blob/da39829ddccbf68e7d4af3966edb8b0c91afa25f/sys/init.c#L498\nFor information, clone an empty repository also reproduces the issue (it helps for having a cleaner debug output).\n\nThis work with 1.0.0-RC4.\n\nI tested again and impossible to make it work O_o. Does this ever worked ?\nOk @taruti ! I will try to do something like that !\nYour changes are perfect! I just forgot that oplock functions use callbacks that does not clean the lock sometimes \ud83d\ude22 \n. @taruti I would \u2764\ufe0f that !\n. This would be awesome @Kerbox ! because I found nothing for now \ud83d\ude22 \n. @Kerbox have you been able to take a last look at it ?\nI will probably release the 1.0.1 without fixing this issue.\n. Ok @Kerbox no problem, for information I have revert the previous commit that was creating a bsod\nSee https://github.com/dokan-dev/dokany/issues/386 I will put it back when https://github.com/dokan-dev/dokany/issues/387 will be done\n. Rename keep the old and new FCB \ud83d\ude2e ?\nDoes a simple rename file should not procude the same issue ?\nI have add the  return STATUS_FILE_LOCKED_WITH_ONLY_READERS; as before https://github.com/dokan-dev/dokany/commit/2e2fea7e23c62e01fb2f7e369fb6d921a41a3ca8\nand added the open handle when GetFileInformation requested after cleanup  https://github.com/dokan-dev/dokany/commit/7bdaf57818cb4086f08d9b240c8aa433b6c1da3d\n. Oh ! If this can be reproduced with this pseudo-code, it gonna be simpler to debug it \ud83d\ude04 !\nSo it mean that we have a leak when there is a CloseHandle without the UnmapViewOfFile ?\nThere is an old discution about it https://github.com/dokan-dev/dokany/issues/32#issuecomment-128708655\nDo you think you can give a full code test that I can test on my side with you ?\n. Ok perfect @Kerbox !\nThanks again for all your help \u2764\ufe0f !\n. OK I will do it therefore \ud83d\udc4d \n. Hi @Kerbox,\nDo you still have some work pending about this ?\n@marinkobabic looks like here we had the same issue as https://github.com/dokan-dev/dokany/issues/422 \nWe maybe should look more about this.. @marinkobabic I tought about it too \ud83d\udc4d  will try to test again later.\nBut currently have a hardware crash of my personnal computer \ud83d\ude22 . Hi  @Kerbox ,\nYou right, this was fixed with #454 but has since broked with https://github.com/dokan-dev/dokany/pull/462 \ud83d\ude22 \n@marinkobabic any idea what could happen ?. Hi @marinkobabic ,\nI test previous commit of #462 and it still work.\nI have try to compare/revert, I have been able to get everything still work with PR #462 if I keep the old FlushAllCachedFcb.\nI could not look more far, I tried to get some logs but found not calls of FlushAllCachedFcb at all.\nMaybe one of the calls of FlushAllCachedFcb  is made with a null fcb and is skipped ? https://github.com/dokan-dev/dokany/pull/462/files#diff-34a56c4e800894f7ec40a0aaae302548R375\nedit: probably not since there is only a call of FlushAllCachedFcb the changed from FlushAllCachedFcb(fcb->Vcb); to FlushAllCachedFcb(fcb, fileObject); https://github.com/dokan-dev/dokany/pull/462/files#diff-34a56c4e800894f7ec40a0aaae302548R530. @marinkobabic I have been able to look make FlushAllCachedFcb \"work\" again by removing the fcbRelatedTo folder check at the start and the StartsWith see patch: 0001-test.txt\nI know that with this patch it look like your preview PR where everything was flush...but that was the only way I was making it work.\nI have run dbgview with the patch : dbgview.txt\nThere is not trace of FlushAllCachedFcb print, I dont really understand why \ud83d\ude22 \n. Humm @marinkobabic don't real get.\nif (fileObject != NULL)\n   FlushAllCachedFcb(fcb, fileObject); \nHas to be added where ? (since there is fcb, I tought about inside the loop but we would not reach it with if (fileRelatedTo) return from the start.. FlushFcb(fcb, NULL); but what is the value of fcb ? if fileRelatedTo  is null like you said, there is no fcb\nCould you be more precise \ud83d\ude03 I don't really see here \u2764\ufe0f \n. Here is 3 logs with *FlushAllCachedFcb* \ud83d\udc4d \nWithout my patch: without-patch.txt\nWith my patch: with-patch.txt\nWithout the first check if fcbRelatedTo is not a directory: with-startwith.txt\n. Yes this fix the issue \ud83d\udc4d ! fix-startswith.txt\nBut I tried to renable the if fcbRelatedTo is a not directory and it failed: fix-starwith-keep-isnotdirect.txt\n. Log added \ud83d\udc4d *FlushAllCachedFcb*;*MmFlushImageSection*;*CcFlushCache*\nSimple log without changes: without-dir-check.txt\nWithout the first if file check: without-patch.txt\nLooks like it is this emsdk.tmp.git\\config that need to be flush.. On the full logs, we can see that emsdk.tmp.git\\config.lock is renamed to emsdk.tmp.git\\config\n00526399    11.05768108 [DokanFS] ==> DokanCompleteSetInformation   \n00526400    11.05768394 [DokanFS]    rename also done on fcb \\liryna\\Desktop\\emsdk.tmp\\.git\\config  \n00526401    11.05768681 [DokanFS]   DokanCompleteSetInformation Report FileRenameInformation\n[DokanFS] ==> DokanNotifyReportChange \\liryna\\Desktop\\emsdk.tmp\\.git\\config.lock    \n00526402    11.05768871 [DokanFS] <== DokanNotifyReportChange   \n00526403    11.05769062 [DokanFS] ==> DokanNotifyReportChange \\liryna\\Desktop\\emsdk.tmp\\.git\\config \n00526404    11.05769157 [DokanFS] <== DokanNotifyReportChange   \n00526405    11.05769253 [DokanFS]   status = 0x0    \n00526406    11.05769444 [DokanFS]   status = STATUS_SUCCESS \n00526407    11.05769539 [DokanFS] <== DokanCompleteSetInformation. Hi @marinkobabic ,\nYes this work perfectly \ud83d\udc4d thank you !\nYou can create a PR with the commit and will merged it \ud83d\ude03 !. Fixed with https://github.com/dokan-dev/dokany/pull/482 PR \u2764\ufe0f !. Hi @Kerbox ,\nThank you for the contribution \ud83d\udc4d very appreciate for taking the time looking at the issue.\nIf the request is made with FILE_DIRECTORY_FILE then DokanFileInfo->IsDirectory should be set and we are going to be in this case https://github.com/dokan-dev/dokany/blob/9197ed333ea2a5e2217ac1690439e66ed668e1ab/samples/dokan_mirror/mirror.c#L308\nAfter the file will be open as directory https://github.com/dokan-dev/dokany/blob/9197ed333ea2a5e2217ac1690439e66ed668e1ab/samples/dokan_mirror/mirror.c#L331 (that's our issue).\nMaybe we can add your check just before this createfile ?\nif (!(fileAttr & FILE_ATTRIBUTE_DIRECTORY) &&\n      !(CreateOptions & FILE_NON_DIRECTORY_FILE)) {\n        (CreateOptions & FILE_DIRECTORY_FILE)) {\n    DokanFileInfo->IsDirectory = TRUE;\n      return STATUS_NOT_A_DIRECTORY; \n}\nI say this because your fix currently broke a couple of the test:\nhttps://ci.appveyor.com/project/Maxhy/dokany/build/1.0.1-797/job/dhsf5biox3vqmk6u#L821\n. @Kerbox \ud83d\udc4d Thank You\nI have rerun the build appveyor and test passed. I think the file was just not created in time before the delete.\nYou can rebase and clean your commit for the merge.\nThanks again for taking the time to look into this !\n. Perfect rebase @Kerbox \ud83d\udc4d Thanks for your contribution !\n. Thank you @Kerbox for the quick fix ! This is very appreciated !!! \ud83c\udfc6 \nRelease 1.0.1 planned end of this week or next one with it \ud83d\ude0e \n. Hi @sdecugis ,\nThis seems to be the same as https://github.com/dokan-dev/dokany/issues/344\nStill the FsRtlUninitializeOplock that seems the crash. The OP of the other issue didn't gave much information about how he fixed it \ud83d\ude22 \nSo it does not offen happen ?\nI dream a little but, it would be really great to have a sample to reproduce this or to even retrace this call and see if it oplock object really passed the FsRtlInitializeOplock\n. @sdecugis I agree it is a kernel issue that has to be fixed ofc.\nI am just wondering, can you test with the RC4 to see if it also happen ?\n. A fixed has been proposed here https://github.com/dokan-dev/dokany/tree/back-out-oplock and waiting test result.. Hi @velislav87 ,\nHumm what you describe is different from what we have been to detect during our test. Maybe your BSOD was different in your case ? Only a dump analyse can answer to this :cry: . You can analyse the minidump on the machin after the bsod/reboot and post the report.\nhttps://github.com/dokan-dev/dokany/wiki/How-to-Debug-Dokan#crash-report-bsod. We still need some feedback of people facing the issue here before merging the fix .. Oh really ! @Kerbox ! I will make the test tomorrow \u2764\ufe0f \u2764\ufe0f \u2764\ufe0f !!!\nAmazing if it is so simple \ud83d\udc4d Great job !\n. This very appreciate @Kerbox ! you can even imagine \ud83d\ude04 !\nThanks for taking a look at current open issue on dokan \u2764\ufe0f \n. Hi @AireagoirSteam ,\nCygwin files in the zip has to be side by side of your application or in your runtime library path for being used by your application.\nUnfortunately dokany is not portable and is mandatory for mounting file system with FUSE.\nDokany is a kernel windows driver and it is something that cannot be portable at all \ud83d\ude22 \nTell me if this answered your question \ud83d\udc4d \n. Hi @Rondom ,\nAh \u2764\ufe0f !!!\nI am absolutely not familiar with this but I can test \ud83d\udc4d on windows.\nAbout package name, I think the third option would be the best ! This will let choice for the users.\nGreat job @Rondom !\n. No problem, second option is also great \ud83d\udc4d \n. Thank you @Rondom ! We will wait 1.1.0 to merge this so \u2764\ufe0f (and test it on windows at this moment)\n. @Rondom shoud we merge this \ud83d\udc4d ?\n. Thank you @Rondom \ud83d\ude0d !\n. Hi @Rondom ,\nI removed the warning: https://github.com/dokan-dev/dokany/commit/da7b14f6c32cccd706b113d8f5d71214ba843372  \ud83d\udc4d \nI forgot to do it when I did the same for the mirror https://github.com/dokan-dev/dokany/blob/0955ed25243f5ba6f0290e1f4207ec5c996a1863/samples/dokan_mirror/mirror.c#L1211\nAbout bundle warning, you are right, it only happens when we build an installer without redist embedded. This will make the installer download the redist during install if missing (never tested it). If we can remove the warning, it could be great but I have not an idea how to do this \ud83d\ude22 a\n@js69 correct me if I am wrong \ud83d\ude04 \n. Thank you @js69 ! I added the option https://github.com/dokan-dev/dokany/commit/c234814992be7843a4c355fc23293b511e59c8d9 \u2764\ufe0f \nNo warnings \ud83d\udc4d https://ci.appveyor.com/project/Maxhy/dokany/build/1.0.1-814/job/diq2gm4u0ae8x35j\n@Rondom is that all warnings you found ?\n. Oh @Rondom ! Totally forgot it >< ! All this work and even not in the read me \ud83d\ude22 \nThank you \ud83d\udc4d !\n. Hi @Rondom !\nThat's perfect \ud83d\ude2e !\nI didn't know cygwin cache could be merged for x86 and x64 ! Thats going to speed up yes ^^\nCache doxygen is also a good idea !\ntest: off I didn't know appveyor would look a test by default \ud83d\ude1e  !\nAnd specially thank you for adding RDP access by default that's awesome \ud83d\ude04 !\nKeep rocking like that @Rondom ! very appreciate such contribution !\nWe gonna see the difference in build after the second build when he will have everything in cache.\n. I have enable MultiProcessorCompilation. It change the build time from 13sec to 7sec for me (4core).\nhttps://github.com/dokan-dev/dokany/commit/ca6012537ada87e9b0bc430b4ee82bd25890f343\nI tested a build.proj that has all configuration to build with BuildInParallel option. This does not seems to give good result...I feel that he build every project as usual \ud83d\ude1e \n<Project xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n    <ItemGroup>\n        <ProjectToBuild Include=\"dokan.sln\">\n            <Properties>Configuration=Release; Platform=Win32</Properties>\n        </ProjectToBuild>\n        <ProjectToBuild Include=\"dokan.sln\">\n            <Properties>Configuration=Release; Platform=x64</Properties>\n        </ProjectToBuild>\n        <ProjectToBuild Include=\"dokan.sln\">\n            <Properties>Configuration=Debug; Platform=Win32</Properties>\n        </ProjectToBuild>\n        <ProjectToBuild Include=\"dokan.sln\">\n            <Properties>Configuration=Debug; Platform=x64</Properties>\n        </ProjectToBuild>\n        <ProjectToBuild Include=\"dokan.sln\">\n            <Properties>Configuration=Win10 Release; Platform=Win32</Properties>\n        </ProjectToBuild>\n        <ProjectToBuild Include=\"dokan.sln\">\n            <Properties>Configuration=Win10 Release; Platform=x64</Properties>\n        </ProjectToBuild>\n        <ProjectToBuild Include=\"dokan.sln\">\n            <Properties>Configuration=Win10 Debug; Platform=Win32</Properties>\n        </ProjectToBuild>\n         <ProjectToBuild Include=\"dokan.sln\">\n            <Properties>Configuration=Win10 Debug; Platform=x64</Properties>\n        </ProjectToBuild>\n        <ProjectToBuild Include=\"dokan.sln\">\n            <Properties>Configuration=Win8.1 Release; Platform=Win32</Properties>\n        </ProjectToBuild>\n        <ProjectToBuild Include=\"dokan.sln\">\n            <Properties>Configuration=Win8.1 Release; Platform=x64</Properties>\n        </ProjectToBuild>\n        <ProjectToBuild Include=\"dokan.sln\">\n            <Properties>Configuration=Win8.1 Debug; Platform=Win32</Properties>\n        </ProjectToBuild>\n        <ProjectToBuild Include=\"dokan.sln\">\n            <Properties>Configuration=Win8.1 Debug; Platform=x64</Properties>\n        </ProjectToBuild>\n        <ProjectToBuild Include=\"dokan.sln\">\n            <Properties>Configuration=Win8 Release; Platform=Win32</Properties>\n        </ProjectToBuild>\n        <ProjectToBuild Include=\"dokan.sln\">\n            <Properties>Configuration=Win8 Release; Platform=x64</Properties>\n        </ProjectToBuild>\n        <ProjectToBuild Include=\"dokan.sln\">\n            <Properties>Configuration=Win8 Debug; Platform=Win32</Properties>\n        </ProjectToBuild>\n        <ProjectToBuild Include=\"dokan.sln\">\n            <Properties>Configuration=Win8 Debug; Platform=x64</Properties>\n        </ProjectToBuild>\n        <ProjectToBuild Include=\"dokan.sln\">\n            <Properties>Configuration=Win7 Release; Platform=Win32</Properties>\n        </ProjectToBuild>\n        <ProjectToBuild Include=\"dokan.sln\">\n            <Properties>Configuration=Win7 Release; Platform=x64</Properties>\n        </ProjectToBuild>\n        <ProjectToBuild Include=\"dokan.sln\">\n            <Properties>Configuration=Win7 Debug; Platform=Win32</Properties>\n        </ProjectToBuild>\n        <ProjectToBuild Include=\"dokan.sln\">\n            <Properties>Configuration=Win7 Debug; Platform=x64</Properties>\n        </ProjectToBuild>\n    </ItemGroup>\n    <Target Name=\"Build\">\n        <MSBuild Projects=\"@(ProjectToBuild)\" BuildInParallel=\"true\" />\n    </Target>\n</Project>\nmsbuild build.proj /t:Build => 55sec\n<Project xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n    <Target Name=\"Build\">\n        <MSBuild Projects=\"dokan.sln\" Properties=\"Configuration=Release; Platform=Win32\"/>\n        <MSBuild Projects=\"dokan.sln\" Properties=\"Configuration=Release; Platform=x64\"/>\n        <MSBuild Projects=\"dokan.sln\" Properties=\"Configuration=Debug; Platform=Win32\"/>\n        <MSBuild Projects=\"dokan.sln\" Properties=\"Configuration=Debug; Platform=x64\"/>\n        <MSBuild Projects=\"dokan.sln\" Properties=\"Configuration=Win10 Release; Platform=Win32\"/>\n        <MSBuild Projects=\"dokan.sln\" Properties=\"Configuration=Win10 Release; Platform=x64\"/>\n        <MSBuild Projects=\"dokan.sln\" Properties=\"Configuration=Win10 Debug; Platform=Win32\"/>\n        <MSBuild Projects=\"dokan.sln\" Properties=\"Configuration=Win10 Debug; Platform=x64\"/>\n        <MSBuild Projects=\"dokan.sln\" Properties=\"Configuration=Win8.1 Release; Platform=Win32\"/>\n        <MSBuild Projects=\"dokan.sln\" Properties=\"Configuration=Win8.1 Release; Platform=x64\"/>\n        <MSBuild Projects=\"dokan.sln\" Properties=\"Configuration=Win8.1 Debug; Platform=Win32\"/>\n        <MSBuild Projects=\"dokan.sln\" Properties=\"Configuration=Win8.1 Debug; Platform=x64\"/>\n        <MSBuild Projects=\"dokan.sln\" Properties=\"Configuration=Win8 Release; Platform=Win32\"/>\n        <MSBuild Projects=\"dokan.sln\" Properties=\"Configuration=Win8 Release; Platform=x64\"/>\n        <MSBuild Projects=\"dokan.sln\" Properties=\"Configuration=Win8 Debug; Platform=Win32\"/>\n        <MSBuild Projects=\"dokan.sln\" Properties=\"Configuration=Win8 Debug; Platform=x64\"/>\n        <MSBuild Projects=\"dokan.sln\" Properties=\"Configuration=Win7 Release; Platform=Win32\"/>\n        <MSBuild Projects=\"dokan.sln\" Properties=\"Configuration=Win7 Release; Platform=x64\"/>\n        <MSBuild Projects=\"dokan.sln\" Properties=\"Configuration=Win7 Debug; Platform=Win32\"/>\n        <MSBuild Projects=\"dokan.sln\" Properties=\"Configuration=Win7 Debug; Platform=x64\"/>\n    </Target>\n</Project>\nmsbuild build.proj /t:Build => 57sec\nOtherwise we can also call all the msbuild in the same time without problem (tested with 2 msbuild locally). The issue will be to wait that all msbuild are finished. We probably should change the build script to powershell for making it cleaner.\nhttp://stackoverflow.com/questions/18758502/wait-for-multiple-applications-run-asynchronously-from-batch-file-to-finish\nvs\nhttp://stackoverflow.com/questions/4990488/waiting-in-powershell-for-all-child-processes-to-finish\nwhat do you think @Rondom ?\n. @Rondom I looked to start a powershell job for each build configuration to see  if we are going to win build time.\nI looked at using powershell:\n```\n$Configurations = @(\"\", \"Win7 \", \"Win8 \", \"Win8.1 \", \"Win10 \")\n$Platforms = @(\"Win32\", \"x64\")\n$BuildTypes = @(\"Release\", \"Debug\")\nforeach ($Configuration in $Configurations){\n    foreach ($Platform in $Platforms){\n        foreach ($BuildType in $BuildTypes){\n            Start-Job -Init ([ScriptBlock]::Create(\"Set-Location $pwd\")) -ArgumentList $Configuration,$BuildType,$Platform  {\n            $env:CI_BUILD_ARG = \"\"\n            if ($env:APPVEYOR) { $env:CI_BUILD_ARG=\"/l:C:\\Program Files\\AppVeyor\\BuildAgent\\Appveyor.MSBuildLogger.dll\" }\n\n            $Configuration = $args[0]\n            $BuildType = $args[1]\n            $Platform = $args[2]\n\n            $buildCmd = \"C:\\Program Files (x86)\\MSBuild\\14.0\\Bin\\MSBuild.exe\"\n\n            $buildArgs = @(\n            \"dokan.sln\",\n            \"/m\",\n            \"/t:Build\",\n            \"/p:Configuration=${Configuration}${BuildType}\",\n            \"/p:Platform=${Platform}\"\n            \"$env:CI_BUILD_ARG\")\n\n            & $buildCmd $buildArgs\n\n            if ($LASTEXITCODE -ne 0) {\n                throw (\"Command returned non-zero error-code ${LASTEXITCODE}: ${command}\")\n            }\n        }\n    }\n}\n\n}\nGet-Job | Wait-Job\nforeach ($Job in Get-Job){\n    $Job\n    \"Code = $($Job.State)\"\n    \"******\"\n    Receive-Job $Job\n    \" \" \n    Remove-Job $Job\n}\n```\nEach job start another powershell and since powershell is very slow to load....it is not worst it \ud83d\ude22 \nI think we will do nothing better for now. \nIf someone finds another idea, feel free to propose and I will reopen the ticket \ud83d\udc4d \n. Oups \ud83d\ude04 This seems to come when we tried to shared access on the appveyor dokany account.\nI removed liryna since Maxhy has all the history of build.\nI have restart your build on Maxhy \ud83d\udc4d https://ci.appveyor.com/project/Maxhy/dokany/build/job/cmlm77rnihva91e3\nThank you @Rondom for pointing out \u2764\ufe0f even didn't notice it.\n. Hi @atanamir ,\nThis behavior will be changed with https://github.com/dokan-dev/dokany/pull/307\nSee https://github.com/dokan-dev/dokan-dotnet/issues/87 (same request but on dokan-dotnet repository)\nIf you would like to help to test it, It would be awesome \ud83d\udc4d !\n. I close this issue @atanamir if you would like since there is already an issue opened for it here https://github.com/dokan-dev/dokany/issues/210\nFeel free to join the conversation ! \u2764\ufe0f \n. Thank you @taruti this seems to be an elegant way to do it \ud83d\udc4d \nJust have a couple of questions pending and I merge it \u2764\ufe0f \n. @taruti They are in the comments of the PR \ud83d\ude03 \nhttps://github.com/dokan-dev/dokany/pull/382/files\n. Ok probably the new review system of github \ud83d\ude04 \n- are you sure about this ? I agree that it is a struct full of ULONG. But should not be locked to be sure that all fields are updated in the same time ? LN340\n- I guess this is linked to all locks removed in fscontrol.c . Did you find a documentation that say it is multi thread safe ? fastfat sample seems to lock FCB during FsRtlCheckLockForReadAccess https://github.com/Microsoft/Windows-driver-samples/blob/aa6e0b36eb932099fa4eb950a6f5e289a23b6d6e/filesys/fastfat/read.c#L1096 \n  LN 346\n. Seems like you are right, from osr thread, after FsRtl init the struct seems to be protected internally. \ud83d\udc4d \nhttp://online.osr.com/showthread.cfm?link=243153\nThank you for your contribution @taruti as always!. Warning fixed with the 1.0.1 release like @Rondom said \ud83d\udc4d https://ci.appveyor.com/project/Maxhy/dokany/build/1.0.1-2/job/39ahfpjvn5bs8ol5\nI have also reset the build number in appveyor \n. I agree that is pretty strange, specially that it is always the FSTest.\nBut I still think that it is an appveyor issue, should I open one here https://github.com/appveyor/ci/issues ?\n. I think the third build is the same as others. Probably the VM crash or the output shell is disconnected.\nIt already happened in  the past that appveyor has some build that hang but these days are more offen.\nOK I will open it after \ud83d\udc4d \n. Done: https://github.com/appveyor/ci/issues/1141\n. Hi @yin19941005 ,\nI just tested again with snapshot https://ci.appveyor.com/project/Maxhy/dokany/branch/master/job/rdbp8voo0t7d55gx/artifacts (https://github.com/dokan-dev/dokany/wiki/Build#user-snapshot) with and without network option on Windows 10 and got no issue playing mp3 and divx.\nCan you try a clean install and use the snapshot ?\n. Hello @yin19941005 ,\nYour install process seems to be good \ud83d\udc4d \nHave you tested it with a normal shared folder to be sure that this is not the normal behavior ?\n. Ok I have been able to reproduce the issue but I have no idea why this is happening. There is no error in the logs and with procmon, windows media player seems to not even try to open the file \ud83d\ude2e \n. I agree with @Kerbox maybe the UNC resolves the path wrong when a file name path is requested \ud83d\udc4d \n. @Kerbox I looked on the network provider and there is not much happening there.\nNPGetConnection is called when the file is open to know if the device is connected but I don't see much happening here and it result with the proper information \ud83d\ude22 \nhttps://github.com/dokan-dev/dokany/blob/master/dokan_np/dokannp.c#L231\n. @yin19941005 did you test this issue with the last changes to see if it improve (worst to try since it was an path issue) ?. @Kerbox Great news! <3 \nI am still not having the time this days :(. @Kerbox had you been able to make your test ?. What O_o ? !\n(dump is missing)\n. can I connect to it ?\n. Ok this come from https://github.com/dokan-dev/dokany/commit/2768ac75402a0dbe06de163763485e251be2ac54\n```\n0: kd> !analyze -v\n\n\n*\nBugcheck Analysis                                    *\n*\n\n\nDRIVER_PAGE_FAULT_BEYOND_END_OF_ALLOCATION (d6)\nN bytes of memory was allocated and more than N bytes are being referenced.\nThis cannot be protected by try-except.\nWhen possible, the guilty driver's name (Unicode string) is printed on\nthe bugcheck screen and saved in KiBugCheckDriver.\nArguments:\nArg1: ffffcf8047847180, memory referenced\nArg2: 0000000000000000, value 0 = read operation, 1 = write operation\nArg3: fffff80026008874, if non-zero, the address which referenced memory.\nArg4: 0000000000000000, (reserved)\nDebugging Details:\nDUMP_CLASS: 1\nDUMP_QUALIFIER: 401\nBUILD_VERSION_STRING:  9600.18378.amd64fre.winblue_ltsb.160611-0600\nSYSTEM_MANUFACTURER:  Microsoft Corporation\nVIRTUAL_MACHINE:  HyperV\nSYSTEM_PRODUCT_NAME:  Virtual Machine\nSYSTEM_SKU:  None\nSYSTEM_VERSION:  Hyper-V UEFI Release v1.0\nBIOS_VENDOR:  Microsoft Corporation\nBIOS_VERSION:  Hyper-V UEFI Release v1.0\nBIOS_DATE:  11/26/2012\nBASEBOARD_MANUFACTURER:  Microsoft Corporation\nBASEBOARD_PRODUCT:  Virtual Machine\nBASEBOARD_VERSION:  Hyper-V UEFI Release v1.0\nDUMP_TYPE:  1\nBUGCHECK_P1: ffffcf8047847180\nBUGCHECK_P2: 0\nBUGCHECK_P3: fffff80026008874\nBUGCHECK_P4: 0\nREAD_ADDRESS:  ffffcf8047847180 Special pool\nFAULTING_IP: \ndokan1!DokanFilterCallbackAcquireForCreateSection+a4 [c:\\projects\\dokany\\sys\\dokan.c @ 131]\nfffff800`26008874 83b83002000000  cmp     dword ptr [rax+230h],0\nMM_INTERNAL_CODE:  0\nIMAGE_NAME:  dokan1.sys\nDEBUG_FLR_IMAGE_TIMESTAMP:  581a0302\nMODULE_NAME: dokan1\nFAULTING_MODULE: fffff80026000000 dokan1\nCPU_COUNT: 2\nCPU_MHZ: 9c1\nCPU_VENDOR:  GenuineIntel\nCPU_FAMILY: 6\nCPU_MODEL: 3f\nCPU_STEPPING: 2\nCPU_MICROCODE: 6,3f,2,0 (F,M,S,R)  SIG: FFFFFFFF'00000000 (cache) FFFFFFFF'00000000 (init)\nDEFAULT_BUCKET_ID:  WIN8_DRIVER_FAULT\nBUGCHECK_STR:  0xD6\nPROCESS_NAME:  fsx.exe\nCURRENT_IRQL:  0\nANALYSIS_SESSION_HOST:  APPVYR-WIN\nANALYSIS_SESSION_TIME:  11-02-2016 15:26:03.0468\nANALYSIS_VERSION: 10.0.14321.1024 amd64fre\nTRAP_FRAME:  ffffd000235a4330 -- (.trap 0xffffd000235a4330)\nNOTE: The trap frame does not contain all registers.\nSome register values may be zeroed or incorrect.\nrax=ffffcf8047846f50 rbx=0000000000000000 rcx=00000000fffffffe\nrdx=0000000000000002 rsi=0000000000000000 rdi=0000000000000000\nrip=fffff80026008874 rsp=ffffd000235a44c0 rbp=ffffd000235a4600\n r8=0000000000000008  r9=ffffe0007e7f17c8 r10=0000000000000000\nr11=ffffe0007e7f17c8 r12=0000000000000000 r13=0000000000000000\nr14=0000000000000000 r15=0000000000000000\niopl=0         nv up ei ng nz na po nc\ndokan1!DokanFilterCallbackAcquireForCreateSection+0xa4:\nfffff80026008874 83b83002000000  cmp     dword ptr [rax+230h],0 ds:ffffcf8047847180=????????\nResetting default scope\nLAST_CONTROL_TRANSFER:  from fffff8026bb9b32e to fffff8026bb642a0\nSTACK_TEXT:\nffffd000235a40c8 fffff8026bb9b32e : 0000000000000050 ffffcf8047847180 0000000000000000 ffffd000235a4330 : nt!KeBugCheckEx\nffffd000235a40d0 fffff8026ba81e39 : 0000000000000000 ffffe0007ea7d900 ffffd000235a4330 0000000000000000 : nt! ?? ::FNODOBFM::string'+0x26b6e\nffffd000235a4170 fffff8026bb6e52f : 0000000000000000 ffffd000235a4590 ffffe0007e7f1000 0000000000000000 : nt!MmAccessFault+0x769\nffffd000235a4330 fffff80026008874 : ffffd000235a4590 ffffe0007e891740 ffffd000235a4581 ffffd000235a4501 : nt!KiPageFault+0x12f\nffffd000235a44c0 fffff8026bac58f2 : ffffd000235a4590 0000000000000000 ffffe0007e8941d0 ffffd000235a45e8 : dokan1!DokanFilterCallbackAcquireForCreateSection+0xa4 [c:\\projects\\dokany\\sys\\dokan.c @ 131]\nffffd000235a4500 fffff8026be0dc98 : 0000000000000001 ffffd000235a4650 ffffcf80479aef20 ffffe0007e87e750 : nt!FsFilterPerformCallbacks+0x12a\nffffd000235a4550 fffff8026be0ea78 : 0000000000000000 ffffe00000000000 ffffe0007c91ddc0 0000000000000000 : nt!FsRtlAcquireFileExclusiveCommon+0xf8\nffffd000235a4810 fffff8026be0e0e8 : ffffd000235a4a60 0000000000000000 ffffe00000000000 ffffd000235a4a58 : nt!MiCreateSection+0x1e8\nffffd000235a4a00 fffff8026bb6fab3 : ffffe0007e7f1080 0000007e41b4f838 ffffd000235a4aa8 0000000000000000 : nt!NtCreateSection+0x19c\nffffd000235a4a90 00007ff98c510b5a : 0000000000000000 0000000000000000 0000000000000000 0000000000000000 : nt!KiSystemServiceCopyEnd+0x13\n0000007e41b4f818 0000000000000000 : 0000000000000000 0000000000000000 0000000000000000 0000000000000000 : 0x00007ff98c510b5a\nSTACK_COMMAND:  kb\nTHREAD_SHA1_HASH_MOD_FUNC:  7f2dfed95b777fdbf395f2b18cb67f378c2f80d1\nTHREAD_SHA1_HASH_MOD_FUNC_OFFSET:  8d54f1ba81ad68feab07f5cc63afe855621d094a\nTHREAD_SHA1_HASH_MOD:  304fa91e213ca2acdea55ad0ca85c04da24793c7\nFOLLOWUP_IP: \ndokan1!DokanFilterCallbackAcquireForCreateSection+a4 [c:\\projects\\dokany\\sys\\dokan.c @ 131]\nfffff800`26008874 83b83002000000  cmp     dword ptr [rax+230h],0\nFAULT_INSTR_CODE:  230b883\nFAULTING_SOURCE_LINE:  c:\\projects\\dokany\\sys\\dokan.c\nFAULTING_SOURCE_FILE:  c:\\projects\\dokany\\sys\\dokan.c\nFAULTING_SOURCE_LINE_NUMBER:  131\nFAULTING_SOURCE_CODE:\n   127: \n   128:   if (CallbackData->Parameters.AcquireForSectionSynchronization.SyncType !=\n   129:       SyncTypeCreateSection) {\n   130:     return STATUS_FSFILTER_OP_COMPLETED_SUCCESSFULLY;\n\n131:   } else if (fcb && fcb->ShareAccess.Writers == 0) {\n   132:     return STATUS_FILE_LOCKED_WITH_ONLY_READERS;\n   133:   } else {\n   134:     return STATUS_FILE_LOCKED_WITH_WRITERS;\n   135:   }\n   136: }\n\nSYMBOL_STACK_INDEX:  4\nSYMBOL_NAME:  dokan1!DokanFilterCallbackAcquireForCreateSection+a4\nFOLLOWUP_NAME:  MachineOwner\nBUCKET_ID_FUNC_OFFSET:  a4\nFAILURE_BUCKET_ID:  0xD6_VRF_dokan1!DokanFilterCallbackAcquireForCreateSection\nBUCKET_ID:  0xD6_VRF_dokan1!DokanFilterCallbackAcquireForCreateSection\nPRIMARY_PROBLEM_CLASS:  0xD6_VRF_dokan1!DokanFilterCallbackAcquireForCreateSection\nTARGET_TIME:  2016-11-02T15:15:37.000Z\nOSBUILD:  9600\nOSSERVICEPACK:  0\nSERVICEPACK_NUMBER: 0\nOS_REVISION: 0\nSUITE_MASK:  400\nPRODUCT_TYPE:  3\nOSPLATFORM_TYPE:  x64\nOSNAME:  Windows 8.1\nOSEDITION:  Windows 8.1 Server TerminalServer DataCenter SingleUserTS\nOS_LOCALE:  \nUSER_LCID:  0\nOSBUILD_TIMESTAMP:  2016-06-11 15:45:59\nBUILDDATESTAMP_STR:  160611-0600\nBUILDLAB_STR:  winblue_ltsb\nBUILDOSVER_STR:  6.3.9600.18378.amd64fre.winblue_ltsb.160611-0600\nANALYSIS_SESSION_ELAPSED_TIME: 5d87\nANALYSIS_SOURCE:  KM\nFAILURE_ID_HASH_STRING:  km:0xd6_vrf_dokan1!dokanfiltercallbackacquireforcreatesection\nFAILURE_ID_HASH:  {7e4427ee-8405-956e-7aa4-f2d457460881}\nFollowup:     MachineOwner\n```\nSo good to be able to debug like this \u2764\ufe0f \n. Thank you @Rondom ! I have revert the commit for the time that this is fixed https://github.com/dokan-dev/dokany/issues/387\nWe should lock the FCB to have access to the FCB safely.\n. I reopen because it now seems that fsx does not finish and run-winfstest is not executed\nhttps://ci.appveyor.com/project/Maxhy/dokany/build/1.0.1-847/job/ea66hqc11tu9sc3e#L817\n. You are right, run-winfstest seems to create a BSOD also \ud83d\ude22 \nHow can I reconnect to the machin ? https://ci.appveyor.com/project/Liryna/dokany/build/1.0.1-15\nThe build finish with a succes \ud83d\ude22 \n. Well it dont seems to be a BSOD at the end but more the output that is not redirected correctly to appveyor console for a reason.\nI have revert some changes on run-winfstest and put back the command line.\n. I agree this should be something where appveyor should work. At least like you propose is to detect if a BSOD happened or if an unexpected reboot happened on their side.\n. Done with https://github.com/dokan-dev/dokany/commit/2e2fea7e23c62e01fb2f7e369fb6d921a41a3ca8\n. Hi @js69 ,\nThank you for keeping me update on this \ud83d\ude04 I never follow the release of it \u2764\ufe0f \nUpdated => https://github.com/dokan-dev/dokany/commit/a9d66d0665b3fa625a750388b1ffa4bb0eac6d9f \n. Hi @Rondom ,\nAs always, big thank you \ud83c\udfc6 !!! You are really rocking it !\nThis features are awesome !\nI always wanted a clang-format check \ud83d\ude04 !!! We will have beautiful pull request to come with it \u2764\ufe0f I am sure.\nBSOD is also very important as we saw ! A build could succeed even if it has BSOD \ud83d\ude22 Very good point here !\nVery clean PR as usual ^^ ! \n. \ud83d\udc4d ^^ Thank you !\n. @Nekotekina Hi, \nCan you look into the logs to see when this status is returned?\n. @Nekotekina I don't have enough information here to help you.\nAs I can see it work with admin rights and not without. So for me there is at a moment the mirror that return STATUS_INVALID_PARAMETER for a reason.\nIs it the mirror or your FS where it happen ? Can you provide the mirror logs ?\nWith procmon, when does this error happen ?\n. @Nekotekina Thank you but this logs are empty \ud83d\ude2e\nI only see CreateFile status.  We are the output of the mirror ? This is only dokan library debug messages.\n. There is no error on the mirror logs you are right so I did the test on my windows 10. I was able to run ClockRes.exe && ClockRes64.exe on the mirror with and without admin rights \ud83d\ude22\nhttps://technet.microsoft.com/en-us/sysinternals/bb897568.aspx\nThe only difference with running with admin rights the mirror is that all your files are read with admin rights otherwise it does not change the behavior of the FS at all.\nDid you compare the procmon ? is there any difference ?\nDid you tried other applications ?\n. I have been able to reproduce the behavior on my win7 VM. It happens with all applications looks like but I have currently not looked why.\nDoes this happened since always \ud83d\ude2e \n. Fixed with https://github.com/dokan-dev/dokany/pull/392 \nThanks to @Kerbox ! \u2764\ufe0f \n. Oh @Kerbox \ud83d\ude0d ! I had an idea the issue would be linked to this but did not have time to do it.\nThanks a lot \ud83d\udc4d ! I very appreciate your work @Kerbox and very well found !\n. Well found guys ! ~~we should probably memcpy the filename into another buffer~~ (This is kernel allocation memory)\ud83d\udc4d \n. This looks like much cleaner way to do it \ud83d\udc4d \n(more comments about this case would be perfect !)\n. Comments in the code \ud83d\ude03 In case someone see it and question why it is done.\n. Fixed with https://github.com/dokan-dev/dokany/pull/394 Thanks to @Kerbox !\n. Thank you @Kerbox for the fix ! As always, very appreciate \ud83d\ude0b !\n. This looks like comming from https://github.com/dokan-dev/dokany/commit/5bdfb4c3f9994971ed9334da742b7f62b02bdfe1 maybe I missed something \ud83d\ude22 \n. Fixed with https://github.com/dokan-dev/dokany/commit/2eb851397d5988879199b871cf3ee6a53658e424\nThank you @yin19941005 for the report !\n. Hi @zina- ,\nI tested it on Win10 and was not able to reproduce the issue. Have you been able to test on another win7 ? or even a win8 ?\nDoes this only happen with /n ?\n. Really cannot \ud83d\ude22 I tried with the release and current master with procmon. No BSOD on rename.\nWhat version of procmon are you using ? (me 3.31)\n. Ok \ud83d\ude22 this seems to happen when FltGetDestinationFileNameInformation is requested\nIt should call https://github.com/dokan-dev/dokany/blob/66f8927e9bbbdd8c8ea56422219b8bb2fd43fc86/sys/fileinfo.c#L443 FileRenameInformation \nThis issue was already reported here https://github.com/dokan-dev/dokan-dotnet/issues/68#issuecomment-219575373 looks like but we wasn't able to reproduce with @marinkobabic \n. I just tried on another windows 10 that I have and nether the bsod happened \ud83d\ude22 \nThis will only be fixed if someone that can reproduce it can look on it.\nOtherwise I don't really have much idea that my previous message.\n. Just tried again but still no BSOD during rename \ud83d\ude22 \nAlso it seems like the procmon does not show me file access to the dokan driver even if I reset filters O_o Does someone already had this behavior of not seeing dokan files access ?\n. @marinkobabic I am currently changing my environement \ud83d\ude22\nOtherwise, It is true that I didn't renamed a file in the root ! thats probably why I didnt get the bsod.\nReused buffer \ud83d\ude2e ? thats really strange ! . Ok I tought we reused it somewhere after \ud83d\ude03 . I have been able to reproduce the issue \ud83d\udc4d Only this happen when file on root is renamed.. Thank you @marinkobabic ! that's very appreciate ! Looks like you was right since the begining about FileNormalizedNameInformation.\nI tought the same about #400 when I seen the fix \ud83d\ude09 I will make the test.. Fixed with https://github.com/dokan-dev/dokany/issues/400\nThanks all of you for taking the time on the issue \ud83d\udc4d !!!. I agree this would be great ! Appveyor only proposer Windows Server 2012 R2 \ud83d\ude22 \nSo we can only test the Windows 10 driver version.\nTotally agree with all the points !\nMaking tests with the different configuration in externel script is something we can do for sure !\n. We should use the 8.1 but looks like not https://github.com/dokan-dev/dokany/blob/master/appveyor.yml#L236 \ud83d\ude04 \n. Quick update, I changed the driver to 8.1 in appveyor\nhttps://github.com/dokan-dev/dokany/commit/a8bfb27e7f33c8486c049b1f400f3ec6ea577afd\nI will look to create a script that will help to test all mirror configuration with the tools we currently have.\n. @Rondom I have extracted and improve the mirror test. https://github.com/dokan-dev/dokany/blob/master/mirror_test.ps1\nThe test now run with:\n With or without mount manager\n With or without mount point\n removable media on/off\n network drive\n* network drive accessed via UNC-Path\nThis add ~4min to the build test but thats alright \ud83d\udc4d \nhttps://ci.appveyor.com/project/Maxhy/dokany/build/job/5ntisjfmnucnacj2\nI didn't made FUSE since like you said the example is not very completed \ud83d\ude22 \n. Closed too fast ><\nIf you want to change anyway, tell me and I reopen the ticket.. I have no idea if even half of the test work with the FUSE mirror, it is probably too simple \ud83d\ude22 \nBut I agree that should be interesting to know \ud83d\udc4d . Hello @yin19941005 ,\nThank you for the report. This seems to be an issue with FCB lock/unlock and even probably an oplock case not well handled.\nCan you try to test with this pull request https://github.com/dokan-dev/dokany/pull/382 ?\nThere is some changes in the lock/unlock in it\n. Ok I see @yin19941005 Looks like an oplock sharing issue.\nThis will need some debug logs to know if first we get the error from DokanCheckShareAccess\nhttps://github.com/dokan-dev/dokany/blob/3a733e8842bf7a371950af9e68a603e5856c151b/sys/create.c#L376\nAnd if it come from here, does that mean IoCheckShareAccess called in DokanCheckShareAccess have FcbOrDcb->ShareAccess not correctly updated ?. Hi @yin19941005,\nCan you test with the 1.0.2 release to see if it fixed your issue ?. Hi @jetwhiz ,\nThanks you for the report \ud83d\udc4d \nYou are right, DeleteVolumeMountPoint that should remove the link, fail with access denied when running without admin rights \ud83d\ude22 \nhttps://github.com/dokan-dev/dokany/blob/fb88f567354cdd56dca9021460579c0093d45c8d/dokan/mount.c#L581\nI look how this could be fixed.\n. Fixed with https://github.com/dokan-dev/dokany/commit/9fa712cd98827dd228f73f041b4ff1f82fe99286 \ud83d\udc4d \n. Hi @yin19941005 ,\nSorry for the delay and thank you for the report and finding the source of the issue !\nYes, you are exactly right ! This code try to add the absolut path in case it is missing (that seems to not correctly work in this case). Do you think you can provide a patch that could fix this ? \u2764\ufe0f (I am currently rebuild my VMs)\n. @yin19941005 Thank you for your analyse !\nThere is a pull request made @marinkobabic that possibly can fix this issue, can you try to pull his changes and see if it fix it ?. Thanks both of you for the report and for looking at the issue \ud83d\udc4d ! always appreciate \u2764\ufe0f \nFixed with @marinkobabic contribution https://github.com/dokan-dev/dokany/pull/410. Hi @RustyHacksaw ,\nDo you start the mirror with admin rights ?. @RustyHacksaw OK, so this is the normal behavior. When you mount the device with administrator rights and only for the current session (administrator session here) . It is only him that can access it and moreover see the device name.. Hi @cdarau ,\nThank for the report, can you add the kernel logs to see which FSCTL_REQUEST_OPLOCK is returning this error ?. Probably we should return STATUS_SUCCESS when DokanUserFsRequest is called and DOKAN_OPTION_FILELOCK_USER_MODE is set (Dcb->FileLockInUserMode).\nCan you just check if DokanUserFsRequest is called and it is him who return the error in your case ?. FsRtlOplockFsctrl was returning the error because OplockCount is not correct and there is kind of not correct value since the lock is handled by the user land...set it to 0 fix the issue \ud83d\udc4d \nhttps://github.com/dokan-dev/dokany/blob/master/sys/fscontrol.c#L218\nThank you @cdarau for the report !. @RustyHacksaw Thank you for the report! \nThere is a pull request that should fix this behavior but I am still waiting some answer on it.. Hi @ed-miller ,\nThank you for the logs !\nCan you enable this define https://github.com/dokan-dev/dokany/blob/master/sys/dokan.h#L362-L364 and comment the 3 others just before. It will give some debug output about lock/unlock FCB that should be the issue here.\nAlso I have merge the PR, can you test with it and see if it improve the behavior here ?. @ed-miller Looks like there is some timeout. Do the behavior improve with more thread ?. I see \ud83d\ude03 ! Perfect !\nCan this be closed so ?. Thank you @RustyHacksaw and @ed-miller for your feedback.\n@ed-miller do you have a way to reproduce the BSOD ? Do you think it is new BSOD that come with last changes ?. @ed-miller have you been able to get a dump BSOD analyse ?. Hi @cdarau ,\nThe issue should be fixed with the merge of the pull request.\nCan you test one of the last snapshot or build the master ?. Hi @cdarau ,\nI don't really have much time with chritmas and such \ud83d\ude1e I will have normally the time for this and the release begining of january.\n. Hi guys,\nSorry for the delay :sad did not have free time since beginning of the year and dokan release take sometimes with microsoft submission...here is the 1.0.2 -> https://github.com/dokan-dev/dokany/releases/tag/v1.0.2 \ud83d\udc4d \n. Hi @marinkobabic ,\nI tested your fix it correctly fix the network behavior \ud83d\udc4d congratulations !\nUnfortunately, when I try to copy some files (10-20) multiple times, I get a BSOD BAD POOL \ud83d\ude22 \nMy virtualbox does not seem to save the kernel dumps (for a mysterious reason) so I have unfortunately no call stack to give but this is 100% easy to reproduce.\n. No, procmon was not running.\nI just select a couple of files that are in the mirror and spam CTRL+C & CTRL+V a couple of times and I get a BSOD.. @marinkobabic I tried to reproduce without the PR and currently not have been able and when I moved to the PR again to do the test I am currently not able to reproduce it.\nI think the BSOD probably come from another reason (copy lots of files seems to make it happen sometimes).\nI will be happy to merge your PR when the warning (@Rondom \ud83d\udc4d  ) will big fixed .\n. Or maybe you would like to look more on the implementation regarding your last message here https://github.com/dokan-dev/dokany/issues/400#issuecomment-263497223 ?. I have no been able to reproduce the BSOD @marinkobabic \nThank you for the fix and for taking the time ! very appreciated as always \ud83d\udc4d \n. Hi @jetwhiz ,\nThank you for the report !\ndokan fuse call mkdir/opendir if CreateOptions has the flag FILE_DIRECTORY_FILE.\nhttps://github.com/dokan-dev/dokany/blob/63655e3410ba8982669018deff48004f728a2b36/dokan_fuse/src/dokanfuse.cpp#L187\nNormally when FILE_NON_DIRECTORY_FILE is set, it means that FILE_DIRECTORY_FILE is not set. So here will be called open .\nAfter here, we don't check if FILE_FLAG_BACKUP_SEMANTICS is set (it is a flag the give the possibility to open a folder as a flag. It would be interesting to know if Go is using this to open folder.\nI looked at your logs but they are pretty long \ud83d\ude04 Could it be possible to have a simple log with a go application that open a directory ?\n. Thank you @qnorsten \nLooks like all Creatfile seems to return success \ud83d\ude2e and you got an error during the copy ?\nIf you create a hello world app that open a folder, you get an error ?\n@jetwhiz ty I found nothing in the file how they open a folder.\n. @jetwhiz Just an update on this, do you think there is an issue on dokan for now ? or it is open() that seems to not return the correct error ?. Hi @qnorsten @alexbrainman ,\nSorry for the delay, I had the time to look on this.\nI tested @qnorsten test.exe and @alexbrainman sample and found no issue (maybe something that I didnt get).\n```\nM:>test.exe\nCurrent dir: \"M:\\\"\nMain dir Stat:\nName \"\\\"\nSize 8192\nIsDir true\nMode.IsDir true\nMode.IsRegular false\nMode.String drwxrwxrwx\nMode.Perm: -rwxrwxrwx\nReaddir results:\nName \"Go\"\nSize 0\nIsDir true\nMode.IsDir true\nMode.IsRegular false\nMode.String drwxrwxrwx\nMode.Perm: -rwxrwxrwx\n\nName \"Users\"\nSize 0\nIsDir true\nMode.IsDir true\nMode.IsRegular false\nMode.String dr-xr-xr-x\nMode.Perm: -r-xr-xr-x\n\nName \"Windows\"\nSize 0\nIsDir true\nMode.IsDir true\nMode.IsRegular false\nMode.String drwxrwxrwx\nMode.Perm: -rwxrwxrwx\n\nName \"pagefile.sys\"\nSize 1476395008\nIsDir false\nMode.IsDir false\nMode.IsRegular true\nMode.String -rw-rw-rw-\nMode.Perm: -rw-rw-rw-\n\nName \"test.exe\"\nSize 2677760\nIsDir false\nMode.IsDir false\nMode.IsRegular true\nMode.String -rw-rw-rw-\nMode.Perm: -rw-rw-rw-\nSuccess\n```\n```\nC:\\Users\\liryna\\Desktop>go run main.go\nc:\\dir: Access is denied.\nc:\\dir\\file.txt: The system cannot find the file specified.\nC:\\Users\\liryna\\Desktop>go run main.go\nm:\\dir: Access is denied.\nm:\\dir\\file.txt: The system cannot find the file specified.\n```\nMaybe I come too late \ud83d\ude22 or maybe go has changed something ? (I use go 1.7.5). ohhh sorry >< so it is with FUSE that the issue only happen . Fixed with https://github.com/dokan-dev/dokany/commit/4860b95daaadfef3da9233509ac8bb29a7743b95\nThe directory was open as a file but FILE_NON_DIRECTORY_FILE was not checked.\nThank all of you for the report and sorry again. This was quick to find but had no time to do it \ud83d\ude22 . Thank you @Rondom ! very appreciate as always \ud83d\udc4d \nWe will need to remove this line when the issue is fixed on their side ?\n. Done :) https://github.com/dokan-dev/dokany/pull/408\nWe will see the build result. Too quick \ud83d\ude22 looks like\nLets wait that the mirrors get updated \ud83d\ude04 . Hi @FixBo ,\nThank you for the report \ud83d\udc4d \nLeak has been fixed with https://github.com/dokan-dev/dokany/commit/cb73b14d037046831538cc7b741104c073b9e91f\nOtherwise it seems like there is a last leak with LookupAccountSid https://github.com/dokan-dev/dokany/blob/1ced4c7431f8486d8d17457bca8945a2a3a38e49/samples/dokan_mirror/mirror.c#L112\nI don't see how this can leak so it is probably internal to the function (~4k).\nI have tested the Microsoft sample https://support.microsoft.com/en-us/kb/111544 and LookupAccountSid  does also leak.\n. Hi @marinkobabic ,\nThanks for the contribution \ud83d\udc4d !!!\nTested an validated on my side too \ud83d\ude03 !. Hi @pliard-chromium ,\nThank you for the report.\nDoes the issue only happen when you create the folder before saving ?. Ok, I see !\nCan you give a test with the last master ?\nThere is a commit https://github.com/dokan-dev/dokany/commit/33b569a5479d5211fc87a9e5ab9360052d64146a that could fix your issue if Adobe use FileNormalizedNameInformation. @pliard-chromium have any news on this ?. I will reopen if you have any news about this \ud83d\udc4d . Hi @emailuser2009 ,\nThank you for the report, this happens because we call MmCanFileBeTruncated even when we want to grow the file and not to truncate it.\nhttps://github.com/dokan-dev/dokany/blob/e2c0825262b129110a535225be75609da08b3751/sys/fileinfo.c#L489\n@marinkobabic Kernel question \ud83d\ude03  my idea would be to save current file size during FileAllInformation, FileStandardInformation and FileNetworkOpenInformation in the fcb, like that we would know if the file is going to be truncated or not.\nBefore I possibly duplicate the information, do you know if we already save the file size somewhere ?\nIt seems like in fcb there is FSRTL_ADVANCED_FCB_HEADER struct that has file informations that is currently not use.\nhttps://github.com/dokan-dev/dokany/blob/d3b7927fbc68296f9c41228a3e5fabe322be0b2a/sys/create.c#L74-L75\nI wonder if we can use it ?\n. Hi @emailuser2009 ,\nYes, exactly ! but fcb->AdvancedFCBHeader.FileSize need to be set during FileAllInformation, FileStandardInformation and FileNetworkOpenInformation (probably more, didnt check all cases) complete wit success here: https://github.com/dokan-dev/dokany/blob/e2c0825262b129110a535225be75609da08b3751/sys/fileinfo.c#L303. @sefai I made a patch for the issue but like you I have a deadlock.\n0001-Kernel-Save-file-size-to-later-know-if-MmCanFileBeTr.txt\nWill need to look at debug log see what is happening.\n. Hi @sefai ,\nI am also looking at this but have currently not finding the issue here.\nThere is a dead lock at DokanCompleteSetInformation during DokanFCBLockRW I agree with you.\nI made more logs:\n```\n[DokanFS] ZZZ LockRW DokanDispatchCreate FFFF88859A1E2680 \\test\n[DokanFS] ZZZ LockRW DokanDispatchCreate FFFF88859A1E2680 \\test DONE\n[DokanFS] ZZZ Unlock DokanDispatchCreate FFFF88859A1E2680 \\test\n[DokanFS] ZZZ Unlock DokanDispatchCreate FFFF88859A1E2680 \\test DONE\n[DokanFS] ZZZ LockRW DokanCompleteCreate FFFF88859A1E2680 \\test\n[DokanFS] ZZZ LockRW DokanCompleteCreate FFFF88859A1E2680 \\test DONE\n[DokanFS] ZZZ Unlock DokanCompleteCreate FFFF88859A1E2680 \\test\n[DokanFS] ZZZ Unlock DokanCompleteCreate FFFF88859A1E2680 \\test DONE\n[DokanFS] ZZZ LockRO DokanDispatchQueryInformation FFFF88859A1E2680 \\test\n[DokanFS] ZZZ LockRO DokanDispatchQueryInformation FFFF88859A1E2680 \\test DONE\n[DokanFS] ZZZ Unlock DokanDispatchQueryInformation FFFF88859A1E2680 \\test\n[DokanFS] ZZZ Unlock DokanDispatchQueryInformation FFFF88859A1E2680 \\test DONE\n[DokanFS] ZZZ LockRO DokanDispatchQueryInformation FFFF88859A1E2680 \\test\n[DokanFS] ZZZ LockRO DokanDispatchQueryInformation FFFF88859A1E2680 \\test DONE\n[DokanFS] ZZZ Unlock DokanDispatchQueryInformation FFFF88859A1E2680 \\test\n[DokanFS] ZZZ Unlock DokanDispatchQueryInformation FFFF88859A1E2680 \\test DONE\n[DokanFS] ZZZ LockRO DokanDispatchQueryInformation FFFF88859A1E2680 \\test\n[DokanFS] ZZZ LockRO DokanDispatchQueryInformation FFFF88859A1E2680 \\test DONE\n[DokanFS] ZZZ Unlock DokanDispatchQueryInformation FFFF88859A1E2680 \\test\n[DokanFS] ZZZ Unlock DokanDispatchQueryInformation FFFF88859A1E2680 \\test DONE\n[DokanFS] ZZZ LockRO DokanDispatchQueryInformation FFFF88859A1E2680 \\test\n[DokanFS] ZZZ LockRO DokanDispatchQueryInformation FFFF88859A1E2680 \\test DONE\n[DokanFS] ZZZ Unlock DokanDispatchQueryInformation FFFF88859A1E2680 \\test\n[DokanFS] ZZZ Unlock DokanDispatchQueryInformation FFFF88859A1E2680 \\test DONE\n[DokanFS] ZZZ LockRO DokanDispatchQueryInformation FFFF88859A1E2680 \\test\n[DokanFS] ZZZ LockRO DokanDispatchQueryInformation FFFF88859A1E2680 \\test DONE\n[DokanFS] ZZZ Unlock DokanDispatchQueryInformation FFFF88859A1E2680 \\test\n[DokanFS] ZZZ Unlock DokanDispatchQueryInformation FFFF88859A1E2680 \\test DONE\n[DokanFS] ZZZ LockRO DokanDispatchQueryInformation FFFF88859A1E2680 \\test\n[DokanFS] ZZZ LockRO DokanDispatchQueryInformation FFFF88859A1E2680 \\test DONE\n[DokanFS] ZZZ Unlock DokanDispatchQueryInformation FFFF88859A1E2680 \\test\n[DokanFS] ZZZ Unlock DokanDispatchQueryInformation FFFF88859A1E2680 \\test DONE\n[DokanFS] ZZZ LockRO DokanDispatchQueryInformation FFFF88859A1E2680 \\test\n[DokanFS] ZZZ LockRO DokanDispatchQueryInformation FFFF88859A1E2680 \\test DONE\n[DokanFS] ZZZ Unlock DokanDispatchQueryInformation FFFF88859A1E2680 \\test\n[DokanFS] ZZZ Unlock DokanDispatchQueryInformation FFFF88859A1E2680 \\test DONE\n[DokanFS] ZZZ LockRW DokanDispatchSetInformation FFFF88859A1E2680 \\test\n[DokanFS] ZZZ LockRW DokanDispatchSetInformation FFFF88859A1E2680 \\test DONE\n[DokanFS] ZZZ Unlock DokanDispatchSetInformation FFFF88859A1E2680 \\test\n[DokanFS] ZZZ Unlock DokanDispatchSetInformation FFFF88859A1E2680 \\test DONE\n[DokanFS] ZZZ DokanCompleteSetInformation lock ccb...\n[DokanFS] ZZZ DokanCompleteSetInformation lock ccb done\n[DokanFS] ZZZ LockRW DokanCompleteSetInformation FFFF88859A1E2680 \\test\n```\nI see no Unlock missing \ud83d\ude22 but for a reason the LockRW does not pass. Hi @sefai ,\nThis sounds good ! Well, found !\nHave you looked to make this lock conditional depending on paging files like they do ?\nhttps://github.com/Microsoft/Windows-driver-samples/blob/master/filesys/fastfat/fileinfo.c#L845\nNormally the flag FSRTL_FLAG2_IS_PAGING_FILE; should be set during createfile:\nfcb->AdvancedFCBHeader.Flags2 |= FSRTL_FLAG2_IS_PAGING_FILE;\n. Ok I see \ud83d\ude22 \nI wonder, does FlagOn(Irp->Flags, IRP_PAGING_IO) is set during DokanCompleteSetInformation ?. @sefai Yes, I think that should be the way to do it Regarding fastfat. Ah great ! Yes I agree, IRP_PAGING_IO can safely be used here.\nDokan do not have internal cache currently. We have thought a little about it and it can be an improvement in some case like your data of your FS never change outside the drive and the cache will always be correct and automtically updated when a change is made. But if for example, your FS show FTP/Remote data that can be changed at anytime from any source outside your FS, you will need to have a way to detect this changes and say to the kernel dokan that current cache should be reset to update the remote changed otherwise you would use old files/data.\nOFC this is not a reason to not to add it on Dokan, just that it has to be well thought to handle such case and give access to the developers a way to notify external changes.. Hi @sefai ,\nDo you plan to make a PR with the fix you made ?. Does this was not releated to https://github.com/dokan-dev/dokany/issues/369 ?\n. Hi @Rambalac ,\nRegarding the snapshot, it seems like the driver is not installed.\nDid you import the certificate before installing it ?\nhttps://github.com/dokan-dev/dokany/wiki/Build#user-snapshot\nDo you mean the computer was in sleeping mode and you turn it on and the device is dismounted ?\nDoes the behavior also happen with you put it in sleeping mode, wait 5min and come back ?\n(I don't have a laptop at all but I probably see what is happening.)\n. Does anyone still face / reproduce this issue ? If Yes, can someone try with this changes:\nhttps://github.com/dokan-dev/dokany/commit/1fdf9fb23e20d75659bf8344ce8d19f1bbcda7c8\n. Hi @plttn ,\nAppveyor succeed to create an artifact here https://ci.appveyor.com/project/Maxhy/dokany/builds/20877839/job/91tueoo2kvd5fa8y/artifacts\nBe sure to import the dokan cert for being able to install and use it. Also to use the dokan1.dll from the installer that enables the new keepalive.\n. Hi @zina- ,\nCan you provide the crash report https://github.com/dokan-dev/dokany/wiki/How-to-Debug-Dokan#crash-report-bsod ?. I don't have the exact build that you used. @zina- can you use Windbg on the minidump and run the analyse as explained here https://github.com/dokan-dev/dokany/wiki/How-to-Debug-Dokan#crash-report-bsod ?\nThank you. @zina- have you been able to reproduce ? If not, I will make a version next week.. @zina- a new release has been made, does it fix your issue ?. Hi @jhlee8804 ,\n@zina- code is already in dokan source https://github.com/dokan-dev/dokany/blob/e2c0825262b129110a535225be75609da08b3751/sys/fileinfo.c#L122\nWhere did you add his code to not get the issue ?\n. Hi @speidy ,\nI never used Network Mini-Redirector so i cannot say if it has no restrictions compared to a file system driver (low win32 API used by applications). Maybe even the network FS is not showed this API as a \"normal\" device ?\nDokan make you able to create a file system that is remote or network when Network Mini-Redirector seems to only do network. Dokan help you to create a filesystem with userland code when creating a Network Mini-Redirector will need kernel knowledge.\nThere is other points but it depend on how you would like to use your FS.\n(We use google group for questions https://groups.google.com/forum/#!forum/dokan).  Network Mini-Redirector section added \ud83d\udc4d  https://github.com/dokan-dev/dokany/wiki/Unsupported. Hi @velislav87 ,\nSorry I don't know what kind of security rules are we facing here.\nHave you been able to find a work around ?\n. @velislav87 let me know if you got any information about this.. Hi @zilti ,\nCueMounter seems to no been updated since 2010. It is using dokan 0.5.3. You will need to also install this version to make cuemonter work.\nhttps://cuemounter.codeplex.com/\nThere is a ticket talking about this https://github.com/dokan-dev/dokany/issues/28\n. Hi @Rondom ,\nRegarding https://ci.appveyor.com/project/Maxhy/dokany/build/1.0.1-51/job/gkb25et13llxj0c7 , do you know or guess that fsx could be the issue that stopped the machine ?\nFor me the build took 1h, it is probably because the machine never came back and appveyor was still waiting.\nRegarding fsx random seed, I think random is still the best way to do it. It can potentially find more case that fixed seeds BUT to be able to reproduce the issue in case of a crash. Maybe the seed should be calculated before and printed before the test.\n. Hi @cdarau ,\nCan you test with the 1.0.2 (this could be also linked to \"deadlock\") ?\nhttps://github.com/dokan-dev/dokany/releases/tag/v1.0.2. @cdarau let me know if you face this issue again or if you have more informations.. Hi @sumpacle ,\nIt seems like there is an error  STATUS_INVALID_OWNER\nCreateFile : D:\\DB\\DB\\lo.mdf                                               AccountName: MSSQLSERVER, DomainName: NT SERVICE                                       ShareMode = 0x1                                                     FILE_SHARE_READ                                                     DesiredAccess = 0x1e019f                                                FILE_READ_DATA                                                     FILE_READ_ATTRIBUTES                                                  FILE_READ_EA                                                      READ_CONTROL                                                      FILE_WRITE_DATA                                                     FILE_WRITE_ATTRIBUTES                                                  FILE_WRITE_EA                                                      FILE_APPEND_DATA                                                    WRITE_DAC                                                        WRITE_OWNER                                                       SYNCHRONIZE                                                       STANDARD_RIGHTS_READ                                                  STANDARD_RIGHTS_WRITE                                                  STANDARD_RIGHTS_EXECUTE                                                 FlagsAndAttributes = 0xb0000080                                             FILE_ATTRIBUTE_NORMAL                                                  FILE_FLAG_WRITE_THROUGH                                                 FILE_FLAG_NO_BUFFERING                                                 FILE_FLAG_RANDOM_ACCESS                                                 CREATE_NEW                                                       error code = 1307                                                                                                                                                                        \nCreateFile status = c000005a\nCreateFile from mirror fail with \n````\nERROR_INVALID_OWNER\n1307 (0x51B)\n\nThis security ID may not be assigned as the owner of this object.\n\n````\nI don't know why CreateFile fail with the account AccountName: MSSQLSERVER, DomainName: NT SERVICE \nDo you have an idea ?\n. @sumpacle any news on this ?. Inactivity.. Hi @marinkobabic ,\nDoes adding MmFlushImageSection fix the issue ?\nI will make the changes tomorrow. Thanks to look at this \ud83d\udc4d !. PR of @marinkobabic fix correctly the issue \ud83d\udc4d \nThanks a lot as always \u2764\ufe0f !\n. Hi @yin19941005 ,\nThis is a normal behavior to expect. All read and write dokan operation have to be thread safe like explained in the documentation.\nhttps://dokan-dev.github.io/dokany-doc/html/struct_d_o_k_a_n___o_p_e_r_a_t_i_o_n_s.html#ab1aa9dab25dcb38903e0790c36b87cce\nYou need to add a lock/mutex in your implementation to be sure that the handle/data are safely manipulated.\n. Hi @yin19941005,\nYes, you should have lock/mutex on the read/write operation in any case to support OVERLAPPED read/write (maybe this flag is set in your case ?)\nhttps://msdn.microsoft.com/en-us/library/windows/desktop/aa365683(v=vs.85).aspx . Hi @maurolm2 ,\n\nDokany version: 4.0.64\n\nThere is no such version \ud83d\ude2e \nAre you sure you have open a ticket on the correct project ?. Ok @maurolm2 The problem here is that I have no idea what version they use, what is happening even with the log you provided \ud83d\ude22 sorry. @maurolm2 can I close this ? Have you been able to contact paragon ?. Hi @pliard-chromium ,\nWell found!\nIt is true that Cleanup can be called even if the file is still being used (other Cache call). Therefor has CcFlushCache to be locked as you did \ud83d\udc4d \nDoes this patch fix the behavior you describe in your other message ?\n. OK @pliard-chromium \ud83d\udc4d \nThanks a lot for your research and the fix, very appreciate ! \ud83c\udfc6 \u2764\ufe0f !. PR of @Rondom ( :heart: ) add the missing PDB for the MSVC-build fuse.\nI let the ticket open until fuse cygwin debug info are also not embedded.. Hi @Rondom ,\nThank you for the contribution \u2764\ufe0f I will try to test the installer locally this weekend.. Thank you @Rondom I made the test and the Dbg installer correctly install the fuse pdf. \ud83c\udfc6 . Hi @Rondom ,\nThank you for the contribution \ud83d\udc4d and well found \ud83d\ude03 !. Hi @kika123, \nIs there any really need of it now ?\nWhen I tested Windows arm/iot it was by far something that can be used for now.\nThe new version showed of Windows 10 ARM is even not released for now.. I think it need to create two .wxs & .wixproj for ARM32  and ARM64 .\nKind of duplicate them (change the binary path), add new GUID https://github.com/dokan-dev/dokany/blob/master/dokan_wix/version.xml#L4-L7 . @kika123 If you need any help do not hesitate \ud83d\udc4d . Do not hesitate to post issue you have.\nI will try to help you even if it is more @js69 the master of it :smiley:. @kika123 \n\nI had to switch to Windows 10 as the target for driver \n\nDo you mean that ARM64 can only work with Windows 10 target build ?\nIs it releated to the build is https://ci.appveyor.com/project/Maxhy/dokany/build/1.0.2-84/job/n91jju19m69jj6r1#L656 that cannot find win8.1 file ?. Perfect ! Thank you @woachk !\nWill you continue to try to include in the wix installer ?\nAm curious, what kind of hardware are you using to run windows arm ?\n. Ok :+1: good to know ! Was always looking to test this arm versions :)\nWill you continue to try to include in the wix installer ? or I can merge this PR directly ? \n. @woachk I hope that if we need to build WIX for ARM, it gonna be simple to integrate in the build process otherwise we should probably just \"wait\".. Oh \ud83d\ude22 so no driver install ? . @woachk the other way would be to run dokanctl to install the driver after everything is copied\n\ndokanctl /i d. hope wix are fast to review PR \ud83d\ude22 . @woachk The build ARM PR has been merged. But there is not PR for including ARM binary in WiX if it is what you were meaning.. My bad @woachk ! Congratulation \ud83d\udc4d \nLooks like there is even a RC made with your patch !\nhttp://wixtoolset.org/releases/v3-11-0-1507/\n\nThis mean we can work on adding the ARM into the installer \ud83c\udfc6 !. @Rondom from what I read about Windows 8.1 RT, this seems to not be possible currently. It even looks like the Windows RT is somehow custom for the hardware his is installed on.\nhttps://www.reddit.com/r/windows/comments/3lahsf/is_there_a_way_to_run_windows_rt_in_a_virtual/\n. WiX 3.11 is released since some month now.\nA contribution for adding ARM binaries to the installer would be appreciated !. VS 2017 need additional features enabled and a special flag on the cxproj to build ARM/ARM64.\nSee http://pete.akeo.ie/2017/05/compiling-desktop-arm-applications-with.html\n@Rondom Done ! https://github.com/dokan-dev/dokany/issues/621. Hi @cdarau ,\nDo you any sample that can make us able to reproduce the issue with the mirror ?. If you try with DOKAN_OPTION_FILELOCK_USER_MODE does it change the behavior ?. Hi @Rondom ,\nI have improved the mount error messages that you pointed:\nhttps://github.com/dokan-dev/dokany/commit/b4dc99ad9efa0b60b05a1e37653e1fc1ba793f43\nAbout that dokan should check if it can mount before doing it. We are already doing it here\nhttps://github.com/dokan-dev/dokany/blob/de4e1408c498b069ada734d0ca9b5c2de501d14d/dokan/dokan.c#L238-L253\nbut all check is not made I agree.\nThe issue here is that we need to start the thread before creating the access point. Without doing it, we will have pending requests for the time that the thread start to handle requests.\nCan't assign a drive letter come from the mirror https://github.com/dokan-dev/dokany/blob/de4e1408c498b069ada734d0ca9b5c2de501d14d/samples/dokan_mirror/mirror.c#L1540 that converts the define to this message. Do you mean we should store the string error and give access to it ? (Like DokanMountError(); ?)\n. Adding DokanMountError() in the Library for 1.2.0 will not hurt \ud83d\udc4d . Hi @Rondom ,\nThats very strange behavior to get a flood of read \ud83d\ude2e like if he was expecting to get something.\nMaybe the write is not happening and there is no \"foo\" ?. @Rondom I never tried to reproduce for now but when I saw it I was impressed that it was never reported before.\nIf you are sure not to be able to reproduce, I think you can close it for now and we will reopen if someone face the same issue.\n(For information, I tried to release 1.0.3 today but Microsoft seems to have their server for sign drivers not working....)\n. Hi @pliard-chromium ,\nOpenCount is here to know if there is still \"activity\" on this context or if it can be removed.\nDispatchCreate set OpenCount to two because one will be removed in ReleaseDokanOpenInfo as you said but we still need one OpenCount to keep the context.\nIn the other hand, DispatchClose remove this extrat OpenCount since it is the last life step of the CreateFile.\nEvery request increment OpenCount in GetDokanOpenInfo and decremented in ReleaseDokanOpenInfo. Normally at the end you should always get DispatchClose to remove the OpenCount (if no other pending request are specially made after the close that could happen....).\nDispatchQueryVolume normally should not have DOKAN_OPEN_INFO because it is not a request linked to a file (so no CreateFile) If I do not make mistakes.\nDo you have a way to reproduce this ? If you print all increment and decremented with the context point, you will be able to retrace what is happening here.. Fixed with @pliard-chromium PR, thank you !. Thank you for the PR @pliard-chromium , this also looks good for me !\nGood work on this, it very appreciate ! \u2764\ufe0f . @pliard-chromium I agree that we should add the NT_SUCCESS macro in the library (not present in user land) and use it instead of == STATUS_SUCCESS.\n\ndefine NT_SUCCESS(Status) (((NTSTATUS)(Status)) >= 0)\n\n(if I understood correctly @marinkobabic \ud83d\udc4d ). Hi @NedyalkoYotov ,\nThanks you for the typo \ud83d\udc4d If you find anything, do not hesitate !\n. Hi @pliard-chromium ,\nThis looks like a good idea and I agree with you that after close, normally there should not be any call again.\nI will review it a little later to be sure on this \ud83d\udc4d \n. @pliard-chromium don't worry about it \ud83d\ude04 I had to tag ignore +80 warning like this.\nI will look on the PR when will get more time sorry \ud83d\ude22 . @pliard-chromium humm normally as you have read IRP_MJ_CLOSE should be the last call \ud83d\ude22 Maybe yes there is a request to process but the kernel gave up (timeout, cancel,...) because userland took too much time ?\nTherefore the userland is still using the reference that has been free in close ?. I am not sure calling close in ReleaseDokanOpenInfo would be very great. This sounds like a hack but that's maybe the way to do ? No close on IRP close and call when release has to be free ?\nWhat do you think @marinkobabic does this idea sounds bad ? Am afraid that the close will be called too late and we would face a sharing violation if a createfile follows the irp close that we still didn't proceed.\n. @pliard-chromium If the stream is not closed in close, it is possible that there is a race condition depending on the sharing mode that he was open.\nI mean that the kernel can probably just after the close (since for him everything is clean normally after close) request a CreateFile that will create a sharing violation since the not closed stream has no sharing access. This error would be \"unexpected\" from him and probably display an error to the user.\nThat's why currently we open during write/read after the close with sharing.\nMaybe what I explain will never happen but it is a possibility \ud83d\ude22 \n. @pliard-chromium Dokan kernel does implement sharing violation on kernel side. The issue that would appear here is that the kernel get a createfile, for him there is no sharing violation because the close has happened for him and does not expect that the user has kept a handle open on the file. Therefore the request pass the kernel goes to the FS user and the sharing violation happen because handle is possibly still opened.\nWindows request the handle to be cleaned, and it should be like that or unexpected behavior like describe would happen \ud83d\ude22 . Hi @sefai ,\nDoes in DokanFileInfo->Context you set the context to null just after free it ?\nIf yes, you should have a context null in closefile and would have no issue.\nIs it possible in your case that the custom struct is shared with two DokanFileInfo ? (two that point the same file but opened twice ? (CreateFile called 2 times)\n. Hi @ndessenius \n@ndessenius can you download https://github.com/dokan-dev/dokany/releases/download/v1.0.2/dokan.zip\nIn x64/Release, run dokanctl.exe like this with admin rights:\n\ndokanctl.exe /r d \n\nReboot, and try to remode dokan1.sys dll again.. @ndessenius hope this helped, do not hesistate if you any other questions.. Hi @yin19941005 ,\nThis seems to be a forgotten free \ud83d\ude2e \nWell found \ud83d\udc4d @yin19941005 . DokanFreeMdl should be added after the buffer copy.. Fixed with https://github.com/dokan-dev/dokany/pull/449. Merged here: https://github.com/dokan-dev/dokany/pull/446. Hi @killing ,\nWe are currently not supporting sparse file.\nFrom what I understood about sparse file, a 1Go of empty sparse file has zero size on disk. Just to understand the need, what this would improve for you ?\nFrom what I understood, windows explorer will still show the size of the file as 1Go. It is only the kernel that will know the real disk size.\nhttps://msdn.microsoft.com/fr-fr/library/windows/desktop/aa365564(v=vs.85).aspx\nDoes in your case you want to lie about the file size (show more big ?) ?. I agree with @Rondom \ud83d\udc4d It is what exactly what I wanted to say \u2764\ufe0f \nI wanted to do the test but didn't had the time for now \ud83d\ude22 . Hi @killing ,\nI will take a look at it this weekend. Did you made a test on your side already ? or do you need that I make a patch + snapshot for you to test ?. Hi @killing ,\nI tried to set the AllocationSize to 0 by replacing this 3 lignes https://github.com/dokan-dev/dokany/blob/de4e1408c498b069ada734d0ca9b5c2de501d14d/dokan/fileinfo.c#L60-L63 by\nStandardInfo->AllocationSize.HighPart = 0;\n  StandardInfo->AllocationSize.LowPart = 0;\nI see with procmon that the AllocationSize is correctly set to 0 but windows property still shows Size on disk equal to the size \ud83d\ude22 \nOtherwise, about explorer reading the file, you can detect if explorer try to read it (first read offset 0 and size 4096) and refuse it ? It doesn't fix the AV issue but that's already something for now \ud83d\ude22 \n. Other information: https://technet.microsoft.com/en-us/library/hh148159.aspx. \n\ud83d\ude22 \n. Ah great :+1: I just don't have my windows with me, will do the test later today when will have it.\nWill also try to add the wix for it. Will I need to download something to add ARM for VS (maybe it is simply on the iso) ?. @woachk Build perfectly on my side \ud83d\udc4d \nAbout wix, I found nothing about arm and wix. Package seems like to have platform arm variable http://wixtoolset.org/documentation/manual/v3/xsd/wix/package.html but no idea if this is working.\nOtherwise, can just rebase all your commit into one \ud83d\ude03 ? . @woachk You can only rebase the changes :D otherwise it will look like I did the work. @woachk if you are using tortoise git, go on commit log, select all your commit and you have possibility with a rights click on them to merge into one.. Merged here: https://github.com/dokan-dev/dokany/pull/446. Perfect @woachk ! Thanks a lot !. @yin19941005 there is an empty merge commit in the history \ud83d\ude22 \nmaybe you will need to create another branch with the changes here to make it disappear. Thank you @yin19941005 :+1: very appreciate for taking the time on this !. Thank you @pliard-chromium for the PR !\nI am just wondering if we should not also use the macro for the operation ? Does it would add something ?. Hi @pliard-chromium ,\nProbably the macro should also be used here:\nhttps://github.com/dokan-dev/dokany/blob/1cef44a52273c41bc17db2860d85082392d1e575/dokan/create.c#L89\n. Thank you @pliard-chromium for the PR \ud83d\udc4d if you find any other status != STATUS_SUCCESS that should be replaced, please do not hesitate !. \ud83d\udc4d This msys \ud83d\ude04 \nThanks a lot @Rondom ! very appreciate !. \ud83d\udc4d it is staring. Hi @jtrumble ,\nThis looks like a heavy use of the mirror \ud83d\udc4d \n```\nERROR_NO_SYSTEM_RESOURCES\n1450 (0x5AA)\n\nInsufficient system resources exist to complete the requested service.\n\n```\nThere is lots of different win32 calls failing with this error.\nHere it is the mirror himself that have no longer access to more resource.\nDo you have an idea what kind of resources could be missing here ? Memory ? \nDoes the memory grow during the scan and come back to normal when scan is stopped ?\n(please use the mirror.exe during the test). Hi @marinkobabic ,\nThanks a lot for the PR and taking the time on this issue \ud83d\udc4d as always ! \ud83c\udf7a \n. @marinkobabic performance question, can we not just flush file in the directory ?. Ok I see @marinkobabic do you plan to make a patch for it ? Or I create an issue to remind ?. Hi @Stellar92 ,\nDokan is the library to be able to mount whatever as filesystem on windows.\nwinssh fs frontend from foreveryone-cz control what is shown in the FS and what are the attributes on Linux side for the new files.\nI think you should open an issue on their side if this is not already made. We can do nothing here \ud83d\ude22 \n. You have open a new issue at the correct place: https://github.com/Foreveryone-cz/win-sshfs/issues/137\nFeel free to comment if there is changes needed in dokany.. @Rondom wrong thread \u2764\ufe0f i guess\nAlso, does the build should not fail ?. Hi @cdarau ,\nYou mean that here we should have a SHARING_VIOLATION directly when user try to remove the file and not to propose him if he want remove it (that is happening now) ?. Thanks a lot for the PR and taking the time on this issue @yin19941005 \ud83e\udd47 \nvery appreciate !. Hi @FixBo ,\nDoes this only happen with network option ?\nThere is no restriction for more that 16k data \nSee https://github.com/dokan-dev/dokany/blob/de4e1408c498b069ada734d0ca9b5c2de501d14d/dokan/directory.c#L287\nI have already listed folder with more than 20k files without issue (without network never did the test on network).. Thank you @FixBo for the log.\nOn the logs there is 17 request made by the mirror to QueryDirectory that has ~20 files each.\ncmd get 369 that seems to be the result of all the 17 request.\nHow much files there is in the directory ?\nDid you try without network option ?. @FixBo Logfile2.PML.zip is empty :'(\nIf there is a BUFFER_OVERFLOW, more logs should be added to know what is happening.\nWhat is your mount command ? Does the folder + file path are long ?\nJust did a test with +500 picture without network option:\n```\nM:>dir\n Volume in drive M is DOKAN\n Volume Serial Number is 1983-1116\nDirectory of M:\\\n28/10/2016  16:50           314\u00a0837 35918395-best-picture - Copy (10).jpg\n28/10/2016  16:50           314\u00a0837 35918395-best-picture - Copy (100).jpg\n28/10/2016  16:50           314\u00a0837 35918395-best-picture - Copy (101).jpg\n28/10/2016  16:50           314\u00a0837 35918395-best-picture - Copy (102).jpg\n28/10/2016  16:50           314\u00a0837 35918395-best-picture - Copy (103).jpg\n28/10/2016  16:50           314\u00a0837 35918395-best-picture - Copy (104).jpg\n.....\n28/10/2016  16:50           314\u00a0837 35918395-best-picture - Copy (99).jpg\n28/10/2016  16:50           314\u00a0837 35918395-best-picture - Copy.jpg\n28/10/2016  16:50           314\u00a0837 35918395-best-picture.jpg\n             518 File(s)    163\u00a0085\u00a0566 bytes\n               0 Dir(s)     536\u00a0870\u00a0912 bytes free\nM:>\n```. Yes, this is a normal behavior to request a bigger buffer by returning STATUS_BUFFER_OVERFLOW.\nI don't really follow because I feel there is some information missing here. What do you think is happening here ?\nDo not hesitate to add some logs in https://github.com/dokan-dev/dokany/blob/de4e1408c498b069ada734d0ca9b5c2de501d14d/dokan/directory.c to see what is happening.\n. We normally return STATUS_INSUFFICIENT_RESOURCES when the buffer is not enough big.\nhttps://github.com/dokan-dev/dokany/blob/9443185b332ad5c8d255f27464f3c42ce25a5965/sys/directory.c#L329-L331\nYou can add some logs to see what is happening (printirpSp->Parameters.QueryDirectory.Length and EventInfo->BufferLength).\nFrom what we see in your first log, we correctly return all the listed files without error no ?\n. Ok I see so the issue is that we return STATUS_NO_MORE_FILES when there is still files remaining but no memory ?\nI currently have and hardware issue on my dev computer \ud83d\ude22 do you think you can try to correct this check ?. Hi @FixBo ,\nDoes the PR https://github.com/dokan-dev/dokany/pull/460 fix the issue ? or it is still work in progress ?. Fixed with @FixBo PR https://github.com/dokan-dev/dokany/pull/460\nThanks for your work and the time on this \ud83d\udc4d . Hi @FixBo ,\nThanks a lot for the fix !\nCan you just add a comment near return -1 & -2 https://github.com/dokan-dev/dokany/pull/460/files#diff-b14709ebbc38ce5916277fd4a8e7736dR408 to explain the cases here (for futur people looking at it)\nAlso rebase your commit :+1: into one.. Hi @FixBo ,\nThanks a lot for you contribution \ud83d\udc4d very appreciate !\nI have merged your commit into one here: https://github.com/dokan-dev/dokany/commit/1616d3232848224b941195b917d8d78086eb2866. Hi @gang929 ,\nDoes this would be alright for you ?\nhttps://github.com/dokan-dev/dokany/commit/f1fb73c7316b8bdda81024d87283614a24f5a268\nTell me if it is ok, work on your side and I will merge it.. by network \"share\" you mean UNC like \\\\localhost\\myDokan ? or like the mirror when you use /n ?\nIn any case, for having UNC, you need to have the network option enabled.\nFuse network: -n\nUNCName: -o uncname=\"\\localhost\\myDokan\". \ud83d\udc4d @gang929 this has been merged https://github.com/dokan-dev/dokany/commit/bd31f0f756300ed2b35ab8a75779348b6bb33da4. Thank you @marinkobabic that's perfect !\nI will review it when I can \u2764\ufe0f  !. Should we not also check if fcb->SectionObjectPointers is null in FlushFcb ?\nThis seems to be good \ud83d\udc4d for me. My bad @marinkobabic ! SectionObjectPointers is a struct :) I failed you were right to check ImageSectionObject that is a pointer \ud83d\udc4d \nThanks again for the fix !\nWill test https://github.com/dokan-dev/dokany/issues/369 and https://github.com/dokan-dev/dokany/issues/264 when I get free time (also in vacation \ud83d\ude04 Hope you have a great week !)\n. Hi @jamarat ,\nI think here you will need to create a fake GetFileSecurity that return default acces right for all logged users.. Yes, It was a suggestion and probably had to do it at this time.\nThis should be done I agree \ud83d\udc4d . Oh great that you already did \ud83d\ude0b !\nHumm, do you return the correct information requested ? See SECURITY_INFORMATION\nhttps://msdn.microsoft.com/en-us/library/windows/desktop/aa446675(v=vs.85).aspx\nBy IsValidSecurityDescriptor, you mean RtlValidRelativeSecurityDescriptor in the kernel ?\nhttps://github.com/dokan-dev/dokany/blob/de4e1408c498b069ada734d0ca9b5c2de501d14d/sys/security.c#L163\nIn case not, enable debug kernel logs to see if it is not here that the status is returned invalid\nhttps://github.com/dokan-dev/dokany/blob/de4e1408c498b069ada734d0ca9b5c2de501d14d/sys/security.c#L169. @Rondom It is in fuse that we added default rights for context menu (only for directories):\nFuseGetFileSecurity\nhttps://github.com/dokan-dev/dokany/blob/4860b95daaadfef3da9233509ac8bb29a7743b95/dokan_fuse/src/dokanfuse.cpp#L436. @jamarat buffer overflow is a normal behavior. It is how windows work, you return buffer overflow when the command require a bigger buffer that provided. Windows will call you back with a bigger buffer until it is enough for you.\nI will look into the proposition to implement a default GetFileSecurity.\n. @jamarat the buffer overflow happen when we check if the buffer provided can fit FILE_ALL_INFORMATION struct. If we cannot, we need to return this error. If I remember, the kernel will after request other DispatchQueryInformation like standard and such to get information one by one if I can say.\nhttps://github.com/dokan-dev/dokany/blob/de4e1408c498b069ada734d0ca9b5c2de501d14d/dokan/fileinfo.c#L122\nIf you think there is really an issue with it, I think this can be easily test with NtQueryInformationFile\nhttps://msdn.microsoft.com/en-us/library/windows/hardware/ff556646(v=vs.85).aspx\nI can be called from user mode\nNote  If the call to this function occurs in user mode, you should use the name \"NtQueryInformationFile\" instead of \"ZwQueryInformationFile\".\nhttps://msdn.microsoft.com/en-us/library/windows/hardware/ff567052(v=vs.85).aspx. This will not break the API or be a big change, I think it can be in 1.0.3.\nIt would be in 1.1.0 if we changed the API implementation for the user.. Done with https://github.com/dokan-dev/dokany/commit/548eea55f578c5dcb1f2ed6b69154b1592468b87 \ud83d\udc4d . Hi @antiufo ,\nYes, it is right that MAX_PATH is still sometimes used when managing file path.\nThis should be changed \ud83d\udc4d Do you think you can make a PR to fix this ?\n. I looked in sys project, it is not used \ud83d\udc4d but in dokan project there is one  MAX_PATH  used for file:\nhttps://github.com/dokan-dev/dokany/blob/de4e1408c498b069ada734d0ca9b5c2de501d14d/dokan/setfile.c#L161\nThe mirror use a lot of MAX_PATH for GetFilePath\n```\n  WCHAR filePath[MAX_PATH];\nGetFilePath(filePath, MAX_PATH, FileName);\n```\nGetFilePath could be changed to allocate a buffer of the proper size but, since it is only an example, I think a custom MAX_PATH with 32768 should also be good \ud83d\udc4d \nTell me if I missed something here.\n. :+1: exact\nIf you replace MAX_PATH by DOKAN_MAX_PATH 32768 in the mirror, does is still crash on your side ?\n(otherwise that a rename that expect to crash regarding https://github.com/dokan-dev/dokany/blob/de4e1408c498b069ada734d0ca9b5c2de501d14d/dokan/setfile.c#L161\n(Does long path is enabled by default on windws 10 ?). Thank you for the information \ud83d\udc4d and for the report @antiufo \nI added optional define for the mirror and fixed the rename:\nhttps://github.com/dokan-dev/dokany/commit/185120bd8b509372e66db6e44d2fe0a196b0b333\nhttps://github.com/dokan-dev/dokany/commit/e13068d445b28403f11b49a4bacbcaba3b4bcba3. Hi @samkelly ,\nHere you have an issue of request pending on fuse-bindings that are not proceed so the device get unmount.\nNormally you should see the device appear on explorer and diseapper right ?\nI don't really know what the status of the fuse-bindings, I never used it...humm do you think you can enable debug on stderr to see what is happening ?\nhttps://github.com/dokan-dev/dokany/blob/master/dokan_fuse/src/dokanfuse.cpp#L638. Looks like the dokan driver never get an answer of getattr. I think here you will need to look at what is happening in fuse-bindings and why does the request is never proceed (returned ?).\n. Maybe things changed since the dokan integration PR\nhttps://github.com/mafintosh/fuse-bindings/commit/4aa5a3da3a35aed2905c77711717b257a20687cf\nhttps://github.com/mafintosh/fuse-bindings/commit/75b3867bacb5fdc9b9878f4a6312663e5b447b28. @samkelly Humm yes you can give a try on RC2. And maybe poke the creator of the PR for some information maybe :(. @samkelly STATUS_BUFFER_OVERFLOW is a correct behavior. It is a way to windows to request a bigger buffer to fill the request.\nThe last log is interesting ! Do you have a lot of such ? (should have one by getattr)\nIf all fail with STATUS_INVALID_PARAMETER, it probably mean that the fuse wrapper is not able to return correct value.\nAre you able to enable debug output like explained here https://github.com/dokan-dev/dokany/issues/465#issuecomment-282645073 ?. @samkelly From the userspace log, it seems like it you who exit the process, is there a reason ? (this would explain the keep alive after 10 secondes SIGTERM -> auto unmount at 39 secondes \n```\nCreateFile status = 0\nFindFiles 0018\nFindFiles: \\\n^CTerminate batch job (Y/N)? y\n```. Humm I see @samkelly do you have the possibility to rebuild the dokan & dokan_fuse library and attach a debugger to the process to see what is happening ? \nYou have the same behavior with RC2 and the last dokan ?\nDid you try with the commit just after fuse-binding got the dokan integration ?. @samkelly it is not possible to run it oustide chrome with node ?. @samkelly I think the most easy would be to use the 1.0.2 like you did and add logs in fuse-bindings.cc to see which FUSE API call crash exactly.\n. @Rondom Not computer now but, I think marinko mean that dokan run with 10 thread when  probably fuse binding js expect to run only with one thread. Should add an fuse opt to set thread instead of having to rebuild the dokanfuse. @Rondom Question: is their a way on fuse api to se if you want multi or single thread? (from what I remember it is only single right? ). @samkelly if it is only dokanfuse files that you changed, build it in release and replace the dokan fuse that you was currently using, it will work by himself after. No need to update driver or other library, just this one.. @samkelly Only dokanfuse1.dll need to be replaced, it should not be in used if no fuse bindings are running.. Hi @samkelly ,\nHaving fuse-bindings that use both libraries would be great.\nAlso if you could remove in your PR the message in the binding-fuse README WARNING: Dokany is still not quite stable. It can cause BSODs. Be careful.\nThis is no longer needed, dokan become really stable even during development.\nThank you \ud83d\udc4d \n@marinkobabic, @Rondom  Do you think we are missing something in dokan fuse ? Or it is fuse-bindings that has a special behavior ?\nI am still wondering what happened since the working integration of dokan in fuse-bindings and now the behavior that we are seeing.. Thank you @marinkobabic \ud83d\udc4d and @Rondom for the explanation !. @samkelly it mean that if multiple CreateFile/read/write happen on your FS at the same time (multi process / thread), all of them are going to be execute one by one if fuse-bindings is single thread. It is like if you hard drive can execute only one operation at a time.\nHaving only on thread is alright when having one simple application doing simple work like read/write a file. But if you try to list a folder of 100 files and specially if the files are remote, Explorer will freeze/load until every request to creare preview (read), informations (getattr) are made.\n. @samkelly \nLittle poke about Then people can choose which implementation to use based solely on performance Both Dokan and Winfsp are very fast and can both create 5000 files in secondes but it is offen the wrapper or the user implementation (specially if files are not local or in memory) that will be the bottleneck. You will never be able to reach this speed if fuse-bindings is single thread.. Oh great news ! @samkelly keep us update when you will do your PR :heart: for dokan & winfsp.\nWill close this ticket when this will be made.. Hi @Daniel-Abrecht ,\nDo you mount using a reparse point ? C:\\MyFolder \nIf yes, this could be releated to https://github.com/dokan-dev/dokany/issues/293. what do you mean by cleanly unmounted ? application that did the mount crashed and has left a unclean reparse point directory ?. When application crash, the kernel driver should unmount the device after a time (some secondes).\nIf this happen again, try to run dokanctl /u <driverLetter or Path>. Done with https://github.com/dokan-dev/dokany/commit/56995eda7b78203c3cb1cf282ac80867dd41cfd8. \ud83d\udc4d @Rondom thats a good idea \ud83d\ude04 \nI hope it the force reboot will fix some build error!\nThank you @Rondom as always !. Hey! \nYes that's was missing :) \nThanks you! . @kubinator can this be closed ?. Thank you \ud83d\udc4d . Hi @cdarau ,\nDoes the event is set for the Lock operation ? It is only the unlock that is not set ?\nHere is the IRP that manage lock/unlock\nhttps://msdn.microsoft.com/en-us/library/windows/hardware/ff549251(v=vs.85).aspx\nLock informations that we have:\n```\nIrpSp->Parameters.LockControl.ByteOffset\nStarting byte offset within the file of the byte range to be locked or unlocked.\n\nIrpSp->Parameters.LockControl.Key\nKey for the byte-range lock.\n\nIrpSp->Parameters.LockControl.Length\nLength, in bytes, of the byte range to be locked or unlocked.\n\n```\nI am wondering where is this hEvent . hi @cdarau ,\nSorry >< missed the notification.\nHave you the ability to build and test the kernel driver ?\nMy tought would be to try to call FsRtlProcessFileLock in DokanCompleteLock here when status is success and dcb->FileLockInUserMode is true\nhttps://github.com/dokan-dev/dokany/blob/master/sys/lock.c#L235\nThis would \"probably\" set the overlapped.. Hi @Rondom ,\nThank you for the PR ! this fix is very appreciate \ud83d\udc4d !\n\n\nAbout deletion fails during cleanup:\nhttp://www.osronline.com/showThread.cfm?link=67122\nIt is not advisable that you fail IRP_MJ_CLEANUP. If you want to protect files from being deleted do it in IRP_MJ_SET_INFORMATION/FileDisposition.\nIf you want to protect files from DELETE_ON_CLOSE, do it in IRP_MJ_CREATE. You should be able to set the DeletePending to FALSE in IRP_MJ_CLEANUP provided it was set TRUE in IRP_MJ_SET_INFORMATION.\nBut you won't be able to protect files which are opened by DELETE_ON_CLOSE because you have no way to tell the underlying file system to unset its internal flag.\nThus it is better to avoid doing your processing in IRP_MJ_CLEANUP dispatch and I strongly advise not failing it.\nSo here for dokan, if cleanup userland fail, we will return success anyway. The file will disappear from the explorer and will appear again when explorer refresh the list of files.\n\n\nThis need to be verified:\nWhen a folder is deleted, the CreateFIle access of the folder used will denied other request to happen (sharing flag).\nWhen a file is created, Windows make a CreateFile on the Folder to see if it exists, and it will normally fail since no sharing has been set previously by the Delete CreateFile.\n\n\nI didn't test right now but thats how I remember.\nThe issue with the FUSE wrapper I can see here is that shared_mode is not really used looks like. BUT normally the kernel dokan check the shared access and will return directly an error during CreateFile on the Folder. So FUSE is protected of this behavior.\n. Hi @Rondom ,\nSorry for the delay, yes I think this PR has to anyway be merged.\nDuring your test, did created the new file using the local path (C:\\) or the mirrored path dokan (M:\\) ? \nI have to think about it and see if even this could happen in the mirror C.\nAt least, we should handle the case that it is not possible to create a folder in a folder when it is open to delete.\nCan you create another issue for this ? \u2764\ufe0f . Hi @Rondom ,\nI agree ! With what you did the situation is fixed even if race condition could happen (very rare).\nI will do the test with the mirror as you proposed with the sleep and continue the discussion on https://github.com/dokan-dev/dokany/issues/478 \nThanks a lot again for your contribution \u2764\ufe0f !\n. Hi @Rondom ,\nI fixed the script by creating all folder in any cases (not the most pretty but still better that a couple of if path following).\nhttps://github.com/dokan-dev/dokany/commit/fa75db37fe2a6e9a02c0a717bf981e518f7c165f\nAlso well found for the dlls \ud83d\udc4d \ud83d\ude04 . Thank you @marinkobabic for the changes !!!! \u2764\ufe0f . https://github.com/dokan-dev/dokany/blob/de4e1408c498b069ada734d0ca9b5c2de501d14d/sys/security.c#L163\nRtlValidRelativeSecurityDescriptor is used to check if security descriptor returned by user land is valid or not and also if it fit the request.\nDoes this happen with the mirror ? Is it always happening ? like there is no RtlValidRelativeSecurityDescriptor  working at all ?. Hi @yin19941005 ,\nSorry for the delay.\n\nI am not sure why GetUserObjectSecurity returned TRUE and some of the output parameter is not well assigned to the correct value. I look for the MSDN document but doesn't seems they mentioned about this behavior.\n\nThis is pretty weird yes, normally lengthNeeded should be the size of descriptor as you understood (at least it is what we expect). if lengthNeeded is 0 RtlValidRelativeSecurityDescriptor will be called on a buffer of size 0 (EventInfo->BufferLength == lengthNeeded ) \ud83e\udd14https://github.com/dokan-dev/dokany/blob/de4e1408c498b069ada734d0ca9b5c2de501d14d/sys/security.c#L163\nI guess calling GetSecurityDescriptorLength would be a good idea to be sure we have the correct size but would be interesting to know why GetUserObjectSecurity is returning TRUE when lengthNeeded  is not set.\n. @yin19941005 \nDokan is notify by the kernel by a IRP_MJ_CLEANUP when a user application close the handle on a file. This IRP call cleanup sys  to be send to user dokan FS DokanLoop that will call DispatchCleanup and finally also call the user (mirror) FS cleanup.\nWith the result of this, it will call SendEventInformation that will come back to the kernel and call DokanCompleteCleanup\n. Thank you @yin19941005 for the analyse and the PR !. @yin19941005 can this be closed or you seen another issue ?. Hi @d-hoke ,\n1) Wow, this is totally unexpected \ud83d\ude2e you are right ! I checked and this comes from dokan 0.6.0 (legacy)! (way before the dokany fork) Amazing that we have not seen it before.\nI fixed it here: https://github.com/dokan-dev/dokany/commit/a0d81b09a3335607546d2a4bd93fe919d1822e93\n2) You are also right here \ud83d\udc4d \nI added ExInitializeResourceLite (previous commit) and ExDeleteResourceLite here:\nhttps://github.com/dokan-dev/dokany/commit/a56a217d39edcdd5ca1bf61f839a1ac0caa0c5d1\n3) It would be very nice if you could review it \u2764\ufe0f \nThanks a lot for the report ! It is very helpful having other eyes reviewing the project !\n. >Did you verify that all DOKAN_GLOBAL members are now initialized with that addition (and having removed the RtlZeroMemory()) ?\nYes \ud83d\udc4d all are initialized without the RtlZeroMemory\n\nthere are other areas in DriverEntry() code that may err where it should probably also be done as well (in DriverEntry, other setup after return from call to DokanCreateGlobalDiskDevice() ).\n\nI have added a function to cleanup all disk device data https://github.com/dokan-dev/dokany/commit/de7d1d8fda83546a8bd60a1cb8d299874d25c19b\nSome data was not cleaned in some place \ud83d\udc4d \n\nI noticed while reviewing that DokanCreateGlobalDiskDevice() does not properly cleanup extraneous items (fsDiskDeviceObject, fsCdDeviceObject) if failure occurs there on IoCreateSymbolicLink(), where it deletes the deviceObject only...\n\nDone ! https://github.com/dokan-dev/dokany/commit/2851823a56610fde6df06d4eab2f6f24a3349fb6\nThank a lot \u2764\ufe0f !. Looks like there is a some missing \ud83d\ude22 \n```\nFind all \"ObReferenceObject\", Find Results 1, Entire Solution, \"\"\n  E:\\dokan\\dokany\\sys\\fscontrol.c(617):  ObReferenceObject(volDeviceObject);\n  E:\\dokan\\dokany\\sys\\init.c(607):  ObReferenceObjectByHandle(thread, THREAD_ALL_ACCESS, NULL, KernelMode,\n  E:\\dokan\\dokany\\sys\\init.c(891):  ObReferenceObject(deviceObject);\n  E:\\dokan\\dokany\\sys\\init.c(937):  ObReferenceObject(fsDiskDeviceObject);\n  E:\\dokan\\dokany\\sys\\init.c(938):  ObReferenceObject(fsCdDeviceObject);\n  E:\\dokan\\dokany\\sys\\init.c(997):    ObReferenceObjectByHandle(handle, THREAD_ALL_ACCESS, NULL, KernelMode,\n  E:\\dokan\\dokany\\sys\\init.c(1056):          ObReferenceObjectByHandle(handle, THREAD_ALL_ACCESS, NULL, KernelMode,\n  E:\\dokan\\dokany\\sys\\init.c(1102):          ObReferenceObjectByHandle(handle, THREAD_ALL_ACCESS, NULL, KernelMode,\n  E:\\dokan\\dokany\\sys\\init.c(1306):    ObReferenceObject(diskDeviceObject);\n  E:\\dokan\\dokany\\sys\\init.c(1375):        ObReferenceObjectByHandle(handle, THREAD_ALL_ACCESS, NULL, KernelMode,\n  E:\\dokan\\dokany\\sys\\notification.c(374):  ObReferenceObjectByHandle(thread, THREAD_ALL_ACCESS, NULL, KernelMode,\n  E:\\dokan\\dokany\\sys\\pnp.c(98):    ObReferenceObject(DeviceObject);\n  E:\\dokan\\dokany\\sys\\timeout.c(333):  ObReferenceObjectByHandle(thread, THREAD_ALL_ACCESS, NULL, KernelMode,\n  Matching lines: 13    Matching files: 5    Total files searched: 76\nFind all \"ObDereferenceObject\", Find Results 1, Entire Solution, \"\"\n  E:\\dokan\\dokany\\sys\\init.c(112):  ObDereferenceObject(mountFileObject);\n  E:\\dokan\\dokany\\sys\\init.c(1001):    ObDereferenceObject(thread);\n  E:\\dokan\\dokany\\sys\\init.c(1060):          ObDereferenceObject(thread);\n  E:\\dokan\\dokany\\sys\\init.c(1106):          ObDereferenceObject(thread);\n  E:\\dokan\\dokany\\sys\\init.c(1379):        ObDereferenceObject(thread);\n  E:\\dokan\\dokany\\sys\\notification.c(395):      ObDereferenceObject(Dcb->EventNotificationThread);\n  E:\\dokan\\dokany\\sys\\timeout.c(360):    ObDereferenceObject(Dcb->TimeoutThread);\n  Matching lines: 7    Matching files: 3    Total files searched: 76\n```. Hi @d-hoke ,\nYou right \ud83d\ude1e Thank you \ud83d\udc4d \nFixed it https://github.com/dokan-dev/dokany/commit/0383fe775a9db6de25ab28082e09efe7145f567d. Hi @d-hoke ,\nI will do the test and see on which IRQL this is running and will come back to you \ud83d\udc4d . I printed KeGetCurrentIrql in DeleteDeviceDelayed (also after ExAcquireResource) and it is called with PASSIVE_LEVEL \ud83d\udc4d (like expected from PsCreateSystemThread doc)\nExAcquireResource.../ExReleaseResource <= APC_LEVEL  https://msdn.microsoft.com/en-us/library/windows/hardware/ff544351(v=vs.85).aspx\nDo you see an issue in this ?\n. Hi @d-hoke ,\nDo you think you will be able to make a contribution for this issue ?\nI can look into https://github.com/dokan-dev/dokany/issues/477 but will not have time for both \ud83d\ude22 . Hi @baixiangcpp ,\nThis is not a leak. The buffer is cleaned in ReleaseDokanOpenInfo https://github.com/dokan-dev/dokany/blob/1d8aa517ef86b3fbef6c6c8ac03257f9c4e5de2d/dokan/dokan.c#L598\nBUT during time that I have review your PR, if found that indeed the DirListHead is not cleaned all case since the last PR that changed DispatchDirectoryInformation\nSee my change: https://github.com/dokan-dev/dokany/commit/a3910ccb03cb05355ce2b746492f4a9b054c9685\nThanks for your PR \ud83d\udc4d . Thanks a lot @marinkobabic \ud83d\udc4d . @blesliecan There is minidump that is more little but enough for having more information. @blesliecan the upload is invalid like @Rondom said. Do you think you can reupload this ?. @blesliecan let us know if you have any information on the issue and I will reopen the ticket.. Hi @baixiangcpp ,\nThank you for the PR !\nI understand the need to add FILE_NOTIFY_CHANGE_LAST_WRITE that is missing.\nBut it should not be in write as you proposer but more in cleanup since the notification is here to say that last write happened. Probably we need to add a flag to ccb during write and check it during cleanup.. Hi @baixiangcpp \nI have include your changes in https://github.com/dokan-dev/dokany/commit/db9453b1777d0f1fde6501f60476ee77e5738b39\nbut I failed the commit author...it should be you sorry \ud83d\ude22 \nThanks again for your contribution !. Hi @Rondom ,\nGithub broken link during the build is alright I think. I personally always wait at the end if everything passed or otherwise look in the history current running build.\nBut maybe we can ask appveyor why Update-AppveyorBuild does not directly update in live the link ?. Hi @noairman ,\nCleanup always has to success. It is during DeleteFile / DeleteDirectory or CreateFile that you have to properly check if the file can be removed and that you are sure of it. That's the purpose of function DeleteFile / DeleteDirectory.\nI understand that it is possible that delete fail during the cleanup on the fs side but cleanup is not the place to return an error for windows.\n. Hi @noairman ,\nThis is how windows work we cannot do something about it sorry.\nDeleteFile / DeleteDirectory really need to make everything prepare for cleanup remove without issue.\n. Hello @antiufo ,\nAh great to see on what you were working \ud83d\udc4d !!!\nCongratulations for this two project \ud83c\udfc6 ! That really appreciate offering it to the open source community !\nI just added both on dokan main pages \ud83d\ude03 \nhttps://github.com/dokan-dev/dokan-dev.github.io/commit/dff5e2425cbcbe72e90bfbff121c6fe95886ed9d\nI also let the issue open some days if you want. \n. Hi @yin19941005 ,\nThis is fixed with https://github.com/dokan-dev/dokany/commit/ae79f1079cf2e669ea81721554e23b5303a782bd\nand the correction to pass the test:\n https://github.com/dokan-dev/dokany/commit/c694747ec172759c0621fd188bccc65e779b18fe. Hi @yin19941005 ,\nThank you for the fix ! This seems to be the correct way to do it :+1: \nJust to be sure about the condition, does CreateOptions has the flag FILE_NON_DIRECTORY_FILE ?. Thank you @yin19941005 for the debug !\nSo what do you think about using directly FILE_NON_DIRECTORY_FILE instead of !(CreateOptions & FILE_DIRECTORY_FILE) ?\nI am afraid with your current test that in some case even if FILE_DIRECTORY_FILE is not set, kernel would probably expect that it works for directory (not in mind a case but better to use FILE_NON_DIRECTORY_FILE directly).. Hi @bailey27 ,\nOh yes FILE_NAMED_STREAMS seems to be missing !\nI guess the streams are currently working because windows kernel do not refuse stream request even if flag is missing but let the driver handle or not CreateFile for streams (like we are doing: https://github.com/dokan-dev/dokany/blob/d3b7927fbc68296f9c41228a3e5fabe322be0b2a/sys/create.c#L655-L661).\nBUT having FILE_NAMED_STREAMS seems to be checked by some applications (like explorer here) to enable features (copy extra streams).\nDo you know if the path \\foo\\boo\\foo.txt\\:blah:$DATA come from the kernel or it is dokan kernel that wrongly changed it ?. Hi @bailey27 ,\nOK I see what you mean. To see iffileObject->FileName.Buffer[0] != ':'will not create issues we can try to create a file starting with:.echo \"\" > \":lol.txt\"`\nNormally windows do not allow the character and on my side I have not been able to create a file. There is no error but nothing is created. Can you test on dokan what is the behavior (currently not having my env)\n. @bailey27 we should support it \ud83d\ude22 \nThere is not much documentation about named stream names that could help us unfortunately (expected names, valid and such).\nWe can only try to reproduce the behavior we see.. Thank you @bailey27 for the analyse !\nI agree, the fix has to be in the kernel. The userland should always trust the file name provided and never need to touch it.. Alright for me @bailey27 thank again \ud83d\udc4d you can create a pull request with the patch \u2764\ufe0f (or you would like that I apply it myself ?). Hi @bailey27 ,\nLooks like even MaximumComponentLength  is currently ignored. I will try to look into this.\nhttps://github.com/dokan-dev/dokany/blob/de4e1408c498b069ada734d0ca9b5c2de501d14d/dokan/volume.c#L62\nAnyway this size is wrong if I can say because we support long file names https://github.com/dokan-dev/dokany/issues/464\nBut of course, we should set the proper value \ud83d\udc4d well found\n\nI think MirrorGetVolumeInformation() should call GetVolumeInformaton() on the underlying fs\n\nWe can but there is \"probably\" more options enabled that what dokan support. This should be tested but I agree with the idea to do this and comment on the current value as an example.\n. @bailey27 Absolutely agree with your proposition \u2764\ufe0f !. @Rondom I just did a test and still having the names uppercase \ud83d\ude22 . @bailey27 thats looks perfect \ud83d\udc4d !!!\nI pull request would be really great thank you \u2764\ufe0f \u2764\ufe0f \u2764\ufe0f . Thank you @bailey27 as always ! \ud83c\udfc6 . @yin19941005 looks like this is breaking some of the test \ud83d\ude22 \nhttps://ci.appveyor.com/project/Maxhy/dokany/build/1.0.3-166/job/vwutg9n35b8dtsdv#L1124. Thanks a lot @bailey27 again for your work \u2764\ufe0f always appreciate !. Hi @Rondom ,\nWell found \ud83d\udc4d always testing in debug so never faced it \ud83d\ude22 \nThe vs project does not have the proper uac right set on even build type.\nFixed with: https://github.com/dokan-dev/dokany/commit/9ef806831b89cb5a07062051952eec2bfa1cda84\n. Hi @DHARANIDHARAN993 ,\nDokany 0.8 is not the last release, can you try with 1.0.3 https://github.com/dokan-dev/dokany/releases/tag/v1.0.3 ?\nYou should not have issue to do a NFS share.. @DHARANIDHARAN993 OK now I see what you want to do sorry.\nI have not personally did this but looks like someone succeed in doing it. See https://github.com/dokan-dev/dokany/issues/466\n. Thank you @Daniel-Abrecht for you answer !\nTherefor, it is probably Windows that do not display the NFS option for a reason.\n@DHARANIDHARAN993 can you try to mount with /o option and see if it change something ?\nOtherwise we will need mirror & kernel logs here.. Hi @brunoklein99 ,\nThank you for the report.\nI reproduce your test and got the same result. I enabled kernel debug to see how windows request us to open the file.\nCreateDisposition requested by the kernel is equal to 1 (FILE_OPEN // OPEN_EXISTING). So the kernel do not request us to open as TRUNCATE_EXISTING\nWe correctly support the flag IF the kernel request us to open with it: https://github.com/dokan-dev/dokany/blob/1d8aa517ef86b3fbef6c6c8ac03257f9c4e5de2d/dokan/dokan.c#L924\nJust after I created the file (since in the first test it was without the file exisitng):\n```\nCreate 0003\nCreateFile : C:\\Users\\nonexistentfile\n  AccountName: liryna, DomainName: DESKTOP-H41JCS5\n        ShareMode = 0x0\n        DesiredAccess = 0x120196\n        FILE_READ_ATTRIBUTES\n        READ_CONTROL\n        FILE_WRITE_DATA\n        FILE_WRITE_ATTRIBUTES\n        FILE_WRITE_EA\n        FILE_APPEND_DATA\n        SYNCHRONIZE\n        STANDARD_RIGHTS_READ\n        STANDARD_RIGHTS_WRITE\n        STANDARD_RIGHTS_EXECUTE\n        FlagsAndAttributes = 0x80\n        FILE_ATTRIBUTE_NORMAL\n        OPEN_EXISTING\nCreateFile status = 0\nGetFileInfo 0003\nGetFileInfo : C:\\Users\\nonexistentfile\n        GetFileInformationByHandle success, file size = 8\n    result =  0\n    FileStandardInformation\n    DispatchQueryInformation result =  0\n\nGetFileInfo 0003\nGetFileInfo : C:\\Users\\nonexistentfile\n        GetFileInformationByHandle success, file size = 8\n    result =  0\n    FileBasicInformation\n    DispatchQueryInformation result =  0\n\nGetFileInfo 0003\nGetFileInfo : C:\\Users\\nonexistentfile\n        GetFileInformationByHandle success, file size = 8\n    result =  0\n    FileStandardInformation\n    DispatchQueryInformation result =  0\n\nGetFileInfo 0003\nGetFileInfo : C:\\Users\\nonexistentfile\n        GetFileInformationByHandle success, file size = 8\n    result =  0\n    FileInternalInformation\n    DispatchQueryInformation result =  0\n\nGetFileInfo 0003\nGetFileInfo : C:\\Users\\nonexistentfile\n        GetFileInformationByHandle success, file size = 8\n    result =  0\n    FileStandardInformation\n    DispatchQueryInformation result =  0\n\nSetFileInfo 0003  19\nSetAllocationSize C:\\Users\\nonexistentfile, 0\n        DispatchSetInformation result =  0\nCleanup 0003\nCleanup: C:\\Users\\nonexistentfile\nClose 0003\nClose: C:\\Users\\nonexistentfile\n```\nThe kernel seems to anyway open with OPEN_EXISTING BUT call SetAllocationSize just after with size 0 to truncate the file.\nLooks like it is the way how the kernel work.. @brunoklein99 can this be closed ?. Hi @Rondom ,\nThank you for the warnings fix \ud83d\udc4d !. Hi @sefai ,\nDeleteFile in MirrorCleanup return error code 2 (ERROR_FILE_NOT_FOUND) because the file has been removed like expected during CloseFile since it has been opened with FILE_FLAG_DELETE_ON_CLOSE.\n```\nCreate 0428\nCreateFile : C:\\Users\\johndoe\\Documents\\MirrorRoot\\New Bitmap Image.bmp\n  AccountName: johndoe, DomainName: NONE\n    ShareMode = 0x4\n    FILE_SHARE_DELETE\n    DesiredAccess = 0x10000\n    DELETE\n    FlagsAndAttributes = 0x4000000\n    FILE_FLAG_DELETE_ON_CLOSE\n    OPEN_EXISTING\nCreateFile status = 0\nGetFileInfo 0428\nGetFileInfo : C:\\Users\\johndoe\\Documents\\MirrorRoot\\New Bitmap Image.bmp\n    GetFileInformationByHandle success, file size = 0\nresult =  0\nFileStandardInformation\nDispatchQueryInformation result =  0\n\nGetFileInfo 0428\nGetFileInfo : C:\\Users\\johndoe\\Documents\\MirrorRoot\\New Bitmap Image.bmp\n    GetFileInformationByHandle success, file size = 0\nresult =  0\nFileStandardInformation\nDispatchQueryInformation result =  0\n\nCleanup 0428\nCleanup: C:\\Users\\johndoe\\Documents\\MirrorRoot\\New Bitmap Image.bmp\nDeleteOnClose\n\nDeleteFile  error code = 2\nClose 0428\n```\nMicrosoft has two ways to delete a file: Open with FILE_FLAG_DELETE_ON_CLOSE or set delete flag with SetFileInformationByHandle after CreateFile (this is when MirrorDeleteFile is called to check if the delete is possible).\nI hope I have answered your question. \ud83d\udc4d . Yes, will need to check during CreateFile especially if there is no sharing violation with possible other handle open on it.. If it return ERROR_FILE_NOT_FOUND yes we can assume that the file has been removed.\nhttps://github.com/dokan-dev/dokany/blob/master/samples/dokan_mirror/mirror.c#L436-L437\nWe are calling DeleteFile is case of it was not open with FILE_FLAG_DELETE_ON_CLOSE. The best would be to save the flag FILE_FLAG_DELETE_ON_CLOSE somewhere to know if we need to call DeleteFile in cleanup or not to skip the ERROR_FILE_NOT_FOUND.. @sefai does this answer your question ?. hi @nguyendotuong ,\nWhat happen with you select to 'show all locations\" ?. Thank you @bailey27 this seems to be a mandatory check indeed !\n(you can make a PR for all issues if you want). Perfect @bailey27 ! I very appreciate you work ! \ud83c\udfc6 \nFixed with https://github.com/dokan-dev/dokany/pull/505. I agree with the changes \ud83d\udc4d PrintUserName is not needed if debug is not enabled.. Fixed with https://github.com/dokan-dev/dokany/pull/505. Hi @bailey27 ,\nThis come from PR https://github.com/dokan-dev/dokany/pull/303 of @marinkobabic that fix the issue https://github.com/dokan-dev/dokany/issues/230\nMy guess would be that it was made to be sure to always have a valid handle on the device.. Thank @armitatz for the update \ud83d\udc4d glad that it worked again . Hi @yin19941005 ,\nThank for the fix !. Hi @yin19941005 ,\nThank you for the PR.\nCan you just change the debug msg that still print the boolean variable ?. @yin19941005 I totally agree with this \ud83d\udc4d I was meaning the debug message was still isGetUserObjectSecuritySuccessful is true after your changes\n. Thank @yin19941005 for the quick changes!. Hi @noairman ,\nHumm that's a wierd behavior.\nBSF_NOTIMEOUTIFNOTHUNG -\nWaits for a response to the message, as long as the recipient is not being unresponsive. Does not time out.\nI would expect from this that it can take time but do not lock process \ud83d\ude22 \nIt would mean that a process that respond, ignores to process our call ?. It is true that removing BSF_NOTIMEOUTIFNOTHUNG should not harm. We do not need to wait anyway, it is a simple notification.\nOtherwise I just think was a bug and should normally not happen regarding the documentation...\nYou can make a PR if you want to remove it.\n. I will close this issue for now. If anyone face the same issue, just comment and I will look more on this !. Hi @gsaxena888 ,\nThere is Java wrapper but only compatible with version 0.6.0.\nhttps://github.com/dokan-dev/dokan-java\nSome people have worked a lot to update it to 1.0.0 and also move to JNA\nhttps://github.com/dokan-dev/dokan-java/pull/7\nI have no idea on the current status of it https://github.com/dokan-dev/dokan-java/pull/7#issuecomment-263130143\nIt would be really great if you are interested to continue the PR. I will let myself available if you have any questions on how dokan work or if you issue on some FS behavior.\nThere is going to be a speed difference like any wrapper compared to natives. All IO calls will be converted from native to JNA calls. I never made the calculus for the C# wrapper but I would say that you do not see a difference for a normal usage and you would not see it at all if your FS is to manage remote files / encrypted since it is this part that will take biggest time.\nI hope I have answered your questions, if you are willing to update the Java Wrapper, do not be afraid of it, I will be there to help you on the mechanism.\n. hi @gsaxena888 ,\nHere is the most advanced dokany compatible wrapper: https://github.com/dokan-dev/dokan-java/pull/7. Java wrapper has now two new maintainer @soywiz and @jhult \ud83c\udf89 \nThe wrapper has been a lot improved and I guess they are accepting review and testing !. Hi @noairman ,\nSo for dokan there is no 200000 read at first ?\nIs there any IO difference on the file before the read between ntfs and dokan ?. Hi @techtonik ,\nThe list of FS on the website is updated after FS developers request to add them.\nThere is a lot of FS using Dokan and I cannot list all of them.\nAbout NFS, looks like https://github.com/terdos/WinNFS is the most updated. Probably it is worst to update the DokanNet dependency and try to run it.\n. Ah thanks @Daniel-Abrecht !\nWould you like that I add your project on the dokan page ?. Done \ud83d\udc4d @Daniel-Abrecht \nhttps://github.com/dokan-dev/dokan-dev.github.io/commit/4fd7a081e28e1241003f27b20c73988cdf85ec5b. Updated \ud83d\udc4d   https://github.com/dokan-dev/dokan-dev.github.io/commit/bba464778a661ec6a45dd93a27256c7f2f119363. Hi @shashiu ,\nThank you for the patch and for taking the time to look into this issue !\nI think this is the correct way to fix the issue and this seems to not break kernel API.\nI will let @marinkobabic say the final word on this \ud83d\udc4d . Hello @shashiu ,\nThe fix has not been merged in the master:\nhttps://github.com/dokan-dev/dokany/pull/523\nI was waiting some input from you \ud83d\ude22 . >I'll keep testing it and let you know if I find any new issues.\nWas waiting this but I probably had to ping you before the release.\nAnyway, if you found no issue, I can look into again and merge it.. Sorry @shashiu could not make it in time.\n1.0.5 had to be release without it because of a wrong win server 2016 signature on 1.0.4.\nI add this for 1.0.6 for sure ! . The fix https://github.com/dokan-dev/dokany/pull/523 has been merged to the master.. Hi @dpurdie ,\nI could not reproduce the issue you are facing.\nI also tried directly from explorer and this also worked.\nAre you still facing this issue ? At any moment ?\n. @dpurdie Can you make a little batch script that's create the file on the mirror and reproduce the issue ? \nMaybe we are running Commands in another order. \nAlso can you look if on the property of the file you can change the attributes ?. Hi @Rondom ,\nThank you trying to add IFSTest to appveyor \ud83d\udc4d \nShould probably change the build configuration to build as debug and not release \ud83d\ude22 \n@marinkobabic any idea what release pdb is not used ?. Humm by looking at the code, this could happen if relatedFileName->Length is < sizeof(WCHAR)\nCan you just add a check for it on your repository to make appveyor rerun the build ?. @Rondom Thanks for the test. Since the BSOD is DRIVER_PAGE_FAULT_BEYOND_END_OF_ALLOCATION (read / write outside alloc memory), looks like maybe relatedFileName->Length has a wrong value ?\nCan you comment all the code using relatedFileName to see if he is the issue here ?\n. Ok looks like there is really an incorrect FileName->Length\nWe are exactly in the same lengh calcul that we just commented: https://ci.appveyor.com/project/Rondom/dokany/build/1.0.3-376#L1413. They both use the same file object and length of it.\nLooks like somewhere we set a wrong length on this objet that produces the BSOD when we use it.\nI will try to look later we does this could happen.. I do not see drawbacks or objections here. I had no idea this could be possible \ud83d\ude2e !\nWould be interesting how can this looks like in the appveyor file.. Thank you @Rondom ! \nWill try to look at this BSOD to move on for your PR, Unfortunately, I will only have time in july \ud83d\ude22 \nGreat work again \ud83d\udc98 !. @Rondom I have pull your branch / revert marinko PR that was creating issue on it and I am not able to reproduce the bsod \ud83d\ude22 \nifstest result.txt\nFor me Virus, DefragEnhancements test group was crashing ifstest, it can probably be ignored with others\nI try to add some check on appveyor build see if we can avoid the bsod about file length for now...\n. \ud83d\udc4d verifier enable make the bsod happen !\nLooks like the test that make crash is DirectoryFullPathCreationTest (just guessing since I seen FileFullPathCreationTest print before. But my virtualbox do not let my windows create a dump for a reason \ud83d\ude22 it just freeze. @marinkobabic are you using virtualbox ? do you have the same issue ?\nExpected output without verifier enabled\nTest         :DirectoryFullPathCreationTest\nGroup        :OpenCreateGeneral\nStatus       :C000001E (IFSTEST_TEST_NTAPI_FAILURE_CODE)\nLastNtStatus     :00000000 STATUS_SUCCESS\nExpectedNtStatus :C000000D STATUS_INVALID_PARAMETER\nDescription  :{Msg# OpCreatG!dfulpath!13} Attempting to create a\n              directory \\pmtplufd with the temporary attribute set.\n              This should have failed with invalid parameter.. @marinkobabic Will try that !\n@Rondom I found the BSOD issue, it is quite simple \ud83d\ude1e \nCan you just add to your PR:\nrelatedFileName->Length = relatedFcb->FileName.Length;\nLike here:\nhttps://github.com/Liryna/dokany/commit/6e59613b23247247b6683a8b2bdf69cbc0c8de4b#diff-86caa6b16e4044982075fe5d5bc59915R608\nAfter that, all test pass without BSOD \ud83d\udc4d . Test currently running on my appveyor with the fix:\nhttps://ci.appveyor.com/project/Liryna/dokany/build/job/c74npkyfvs8w8ig7. Only the assignment yes, the other line is me who revert a previous test that I did.. Hi @fpqc ,\nLooks like go-fuse-c use fuse_lowlevel that is not available on dokan_fuse.\nSee @Rondom answer here for the reason that it is missing.\nhttps://github.com/dokan-dev/dokany/pull/307#issuecomment-281628742\nAbout go-fuse, error: https://github.com/hanwen/go-fuse/blob/master/fuse/types.go#L400\nSeems to be that Attr is defined here https://github.com/hanwen/go-fuse/blob/fcb5b5b5c49286fb33e674534c18195d84abe8ef/fuse/types_linux.go#L15 but I don't know the project and cannot say why this is not used.. @fpqc There is a dokan go wrapper already. you can find the link of it in our wiki :). @fpqc Ohhh sorry my bad, no it will not wrapper the fuse call but use the dokan api. \nShould really look why fuse low level is used and if it is really required.. Hi @cglong ,\nThe go binding is linked with other wrappers in the wiki\nhttps://github.com/dokan-dev/dokany/wiki/Dokan-API-Wrappers-language-compatible\nI thought the same about you and proposed it on a ticket. You can try to reopen the subject if you want.\nhttps://github.com/keybase/kbfs/issues/78\n. Hey thats a good idea !\nHaving at least the wrapper listed on the homepage with a link on it !. @taruti https://github.com/keybase/dokan-go would be perfect \u2764\ufe0f . Hi @cdarau ,\nCan it be the same behavior as https://github.com/dokan-dev/dokany/issues/515 ? (little read size compared to normal fs)\nI cannot see the log files on the drive, it ask me to login with a simplision.com mail. You can upload the log on github by renaming it to .txt. Hello @cdarau ,\nIf read/write speed can depend on the number of thread used in dokan library. How much are you using now ?\nIf you are willing to make more test about speed. Take a look at Corillian-asyncio there is no longer this thread logic.\nhttps://github.com/dokan-dev/dokany/tree/Corillian-asyncio\nFor this would need to build the snapshot build:\nhttps://ci.appveyor.com/project/Maxhy/dokany/build/1.0.3-189/job/khguw3b41v1pemfd/artifacts. I will try to make a beta of 2.0.0 but this will only be in a 1-2 week \ud83d\ude22 \nPing me in case I forget.. Hi @cdarau ,\nThanks for the ping ! Will have to delay the beta \ud83d\ude22 Currently still under a lot of work.\nYes, the upcoming new dokany has the fuse wrapper but has really not been tested. 2.0.0 is really at an early test stage. It crash, it needs more testing but the speed is here !\nSee https://github.com/dokan-dev/dokany/pull/307#issuecomment-300071950 and other comments for more information or if you have other questions about the 2.0.0.\n@SergiuPol I agree that speed is important ! Dokan is already able to support heavy read/write (some project manage heavy video files without problems).\nThe behavior of this issue is not related directly to Dokan speed but probably more by an unexpected behavior from Dokan to the Kernel that make slow down the read/write (reduce buffer size and therefore grow unnecessarily the number of IO). If the behavior that creates the issue is the speed, then yes 2.0.0 will fix it. Otherwise we will need to look more into it !\n@Corillian who rewrote dokan library for 2.0.0 is a serious guy who writes serious code \ud83d\udc4d \nDokan \u2764\ufe0f  serious guys, so do not hesitate !\n. Sorry for delay ! Here is the first beta: https://github.com/dokan-dev/dokany/releases/tag/v2.0.0-BETA1. @SergiuPol This release is exactly what @Corillian said previously.\nIt really improves many IO operations in the library side. There is no longer limitations at thread numbers. That really enhances a lot the speed.\nThere is still the kernel <-> userland limitation that @Corillian explained very well.\nI do not think we will be able to make this change in 2.0.0 or if we get a lot of support by the community to speed up the 2.0.0 \nhttps://github.com/dokan-dev/dokany/pull/307#issuecomment-300071950. Hi @marinkobabic ,\nSorry for the delay, I took a look at the PR, this seems to be good !\nI will just take a little more time to test to the issue related to it and see if it can also be closed.\nThank again for your work ! \u2764\ufe0f \n. Hi @marinkobabic ,\nI tried to reproduce all the issues:\nhttps://github.com/dokan-dev/dokany/issues/517 : I could not test this case exactly but it should work \ud83d\udc4d \nhttps://github.com/dokan-dev/dokany/issues/332 : Yes it works! the drive letter can be reused ! The only strange behavior is that the device is still in the explorer and can be access but empty after killing the mirror.\nhttps://github.com/dokan-dev/dokany/issues/312 : User A can dismount user B drive. Maybe here we should detect in the kernel if the request comes from an admin or simple user and give only rights to admin to dismount all devices.\n. @shashiu There is every time a snapshot build made by the CI selfsigned\nhttps://ci.appveyor.com/api/buildjobs/ss79dhy6ah90bfqj/artifacts/DokanSetup-1.0.3.1193.exe\nhttps://github.com/dokan-dev/dokany/wiki/Build#user-snapshot\nIt would be nice if you could see if this fix your issue before making a fix release official (that take some times).. Hi @marinkobabic ,\nSorry for the long delay \ud83d\ude22 I merged this only now.\nThanks a lot again for your work !. Hi @noairman ,\nHave you try to use /o (use mount manager) with the mirror for the test ?. Hi @noairman ,\nHave you a way to debug to get information on the crash or even see what is happening ?\nTry to use /r C:\\. @noairman have you been able to look at the crash ?\nDoes it happen only on one machine ?. Hi @gsaxena888 ,\nDokan use a DOKAN_OPERATIONS struct that holds all the calls (that is used by the mirror like you say). Every wrapper currently creates this binary struct in their language and give it to dokan to after proxy the calls into language adapted parameters of it (C# ex: https://github.com/dokan-dev/dokan-dotnet/blob/master/DokanNet/Native/DOKAN_OPERATIONS.cs https://github.com/dokan-dev/dokan-dotnet/blob/master/DokanNet/DokanOperationProxy.cs).\nWhat you say can be possible also, it is another way to do it but probably having a struct would avoid one function call (but does it really count compared to the jump to managed language ?).\nIf you plan to make a FS for heavy project, you should probably look to do it in C if you can. \n. @hkarakose you need to forward MirrorGetVolumeInformation to Java with a JNI call. GetVolumeInformation is a windows call.. Does this issue can be closed ?. @noairman This is probably related to broadcast notification that seems to not be send when using service. \nDid you try to run the service as \u00e0 user and not local system ?. @noairman I faced this behaviour already :( I moved the mount to starting tray application at user session start. \nI cannot say if the broadcast should be changed or is it normal that it cannot simply broadcast to applications :(\nWe can compare what dokan 0.6.0 were doing compared to right now in this broadcast function.. @IvanKonov This could be debug by anyone since it happens in the library (see my previous post). Contributions are always appreciated !. Oh thank you @linyuan870 ! This is very helpful for people that will face this issue !\n@IvanKonov I think here, DokanBroadcastLink would \"just\" need to be called with session 1. It has already all the correct param\nhttps://github.com/dokan-dev/dokany/blob/b1a388d1a480ad4a7124b74e8a57229b479d532c/dokan/mount.c#L506\n@linyuan870 do you think we can add a check in DokanBroadcastLink to see if we are running in session 0 and otherwise fork/call an exe (new dokanctl option ?) that recall DokanBroadcastLink in session 1 ?\nAlso, is there are cases where session 1 could not be called from session 0 ? Fail to CreateProcessAsUser ?\n. @linyuan870 exe path can be foung  with env variable DokanLibraryLibx64EnvPath or DokanLibraryLibx86EnvPath but it would probably safer to be able to run directly DokanBroadcastLink in the same process (thread/fork) in another session (do not know if this is possible in windows).. @linyuan870 My bad, I gave the wrong value.\nThe installer will add in the env the variable DokanLibrary$(var.MajorVersion) => DokanLibrary1\nThe path is directly the folder of the dokanctl.exe this path will be to the x64 if x64 OS or x86 for x86 OS.\nhttps://github.com/dokan-dev/dokany/blob/08aeab6ff1305e9eec2799f7f6a2b97d28781dec/dokan_wix/Dokan_x64.wxs#L206\nSo just need to be sure to start the process correctly from a x86/x64 process regarding\nhttps://stackoverflow.com/questions/3038363/can-a-wow64-process-create-fork-etc-pure-x64-process. You can use GetEnvironmentVariable  to get the env variable.\nShould probably check if variable is set, if the dokanctl really does exist and such.\nBut to tell the truth I feel that all of this is overkill for just a SHChangeNotify. Probably this is more simple to be just be handle a tray like @IvanKonov did.\nAdding this case in the FAQ to inform people using service.. Windows services have no access/broadcast to Desktop applications.\nThey cannot interact with the user interface with a window or such. It mean that dokan when running as service is just sending the message of device arrival to no one \ud83d\ude03 \nSUBST is a service ?. >Would the checkbox \"Allow this service to interact with the desktop\" help?\nI did the test and nothing \ud83d\ude22 \nAlso same report here https://github.com/dokan-dev/dokany/issues/528#issuecomment-307753993. @linyuan870 \nDokanLibrary1 is a environment variable. GetEnvironmentVariable  should be able to get it.\n. @linyuan870 It should appear yes \ud83d\ude22 . Hi @sefai ,\nThanks a lot for the PR !\nAll seems to be correct but could you just add some fcb lock when accessing the FileSize ?\nQuadPart being a LARGE_INTEGER, the read/write are not threadsafe.\nThis should not create deadlock but worst to retry with it \ud83d\udc4d . @sefai I have add a lock to the filesize set value and rebase your commit\nhttps://github.com/dokan-dev/dokany/commit/38348f5fe160e9f2d384b992c69eed8b8d8e1824\nThank again for your time and sorry for the delay !. @marinkobabic have you been able to look at this possible BSOD since ? \u2764\ufe0f . Hi @marinkobabic ,\nThanks a lot for the quick fix and well found ! \ud83d\udc4d . DokanNotifyReportChange is part of the kernel code. Making it available to user land is possible. It would need to add a dokan IRP between Library<-> Kernel to transfer the request and the notify informations.. First mount:\nKernel: \nfirstmount.txt\n```\nmirror.exe /r C:\\Users /l i /d /s\nAttempting to add SE_SECURITY_NAME privilege to process token\nsuccess: privilege already present\nDokan: debug mode on\nDokan: use stderr\nAllocationUnitSize: 512 SectorSize: 512\ndevice opened\nIoctl failed for wait with code 1.\nIoctl failed for wait with code 1.\nIoctl failed for wait with code 1.\nIoctl failed for wait with code 1.\nIoctl failed for wait with code 1.\nThread will be terminated\nThread will be terminated\nThread will be terminated\nThread will be terminated\nThread will be terminated\nmounted: i -> \\Volume{d6cc17c5-1736-4085-bce7-964f1e9f5de9}\nMounted\nUnmounted\nunload\nSuccess\n```\nSecound mount:\nKernel: \nsecondmount.txt\n```\nmirror.exe /r C:\\Users /l i /d /s\nAttempting to add SE_SECURITY_NAME privilege to process token\nsuccess: privilege already present\nDokan: debug mode on\nDokan: use stderr\nAllocationUnitSize: 512 SectorSize: 512\ndevice opened\nDokan Error: driver start error\nDriver something wrong\nsend global release for i:\nDokanError: Ioctl failed with code 1617\nFailed to unmount: i:\n``. Done \ud83d\udc4d https://github.com/dokan-dev/dokany/pull/535. I close this issue and we keep looking at theEXCEPTION_DOUBLE_FAULT`\nhere https://github.com/dokan-dev/dokany/issues/530. This is beautiful @Rondom !!! \ud83c\udfc6 \ud83c\udf7e \nNow lets hunt the crash !\n. All seems to be perfect for me @Rondom ! \ud83c\udfc6 extreme great job here \ud83d\ude03 !\nLets hunt the bug \ud83d\udc4d . @hkarakose does this issue can be closed ?. Hi @gsaxena888 ,\nISLOG is offering such support for companies (review, support, bug fix). You can contact them directly by mail at contact@islog.com .\n. Hi @NikbakhtMehdi ,\nDokan is a Kernel driver and not a MiniFilterDriver. What do you want to do with a MiniFilterDriver ?. If it is just for logging, you can use Process Monitor\nhttps://technet.microsoft.com/en-US/sysinternals/processmonitor.aspx. I think the best for you would be to create a driver and take minispy as example.\nhttps://github.com/Microsoft/Windows-driver-samples/tree/master/filesys/miniFilter/minispy. @NikbakhtMehdi Dokany create a new device or can mount in a folder. You will not be able to log C. Minispy https://github.com/Microsoft/Windows-driver-samples/tree/master/filesys/miniFilter/minispy signed will do the job.\nSee https://docs.microsoft.com/en-us/windows-hardware/drivers/ifs/installing-a-minifilter-driver to see how to install it.. Hi @cdarau ,\nThank you for the report.\nI understand what you mean but I think here we should probably create different issues or maybe look at how to improve it.\nAny analyze, contributions would be appreciated here !\n. Hi @ebekker,\nIt is related to the FUSE wrapper. The mirror and Dokan library are fast and stable.\nFrom my point of view, it should be reviewed and why not even rewrote. A good use of the dokan library and a conversion to FUSE wrapper calls would make it a great wrapper !\nI am focusing to improve the dokan sys / library / mirror and try to keep the FUSE wrapper working but I am really looking for some helps on the FUSE wrapper because I am lacking time.\n. Hi @ebekker ,\nDokan is fast. Doing a benchmark would be really linked to the hardware so I prefer to let people test themselves.\nBut if you compare with a native filesystem directly it is for sure you will be disappointed. NTFS do some really beautiful magic tricks and without needs to send requests to userland so the performance are ofc better.\nDokan is able to handle the load and needs of all projects generally.\nLike MLVFS that handling video files of 30gb (http://www.magiclantern.fm/forum/index.php?topic=13152.0)\n\nheavily dependent on what the underlying Dokan FS impl is doing\n\nYes, you are absolutely right ! If for example, your FS is doing some remote request or slow complex/slow mechanism to get the files, this will be the bottleneck for sure and by far.\nAfter, like every project, Dokan can be improved. It is an old dead project that we chose to bring back with a friend some years ago and with the community \ud83d\udc98 we were able to do a LOT about features and stability.\nWe are still working to handle all the FS operations (IFSTest https://ci.appveyor.com/project/Maxhy/dokany/build/1.0.5-282/job/1fsh0m6i2muyvrgf#L422) and after will focus on dokan 2.0 https://github.com/dokan-dev/dokany/pull/307 that will give a real boost to dokan !\nI hope this answer your question and if you have ideas/contributions to improve dokan this would be \ud83d\udc4d !!!\n. Hi @FixBo ,\nThank you for the contribution !\nCan you tell in which case you needed FileIdFullDirectoryInformation  ?. Ok @FixBo !\nThis seems to be good for me! Thank you \ud83d\udc4d . Hi @jimuk ,\nDokan is made to create filesystem. How IOCTL callback extension would help to do this ?. This can be a good idea if it is asked by the community \ud83d\udc4d \n@jimuk I do not know how you would like to implement it but I would be really great to no break current kernel <-> library communication or otherwise this will need to be moved to the 2.x.x version.. Changing the DOKAN_OPERATIONS structure would break the API, so we would have to change the major version.\nhttps://semver.org/. Hi @Snack-X ,\nIt crash even without having a filesystem mount ?. @Snack-X @PatrickMis I installed EAC and could reproduce the issue with last release. I did a test with last commit and could not make it happen \ud83d\udc4d \n\n. Would probably need to contact Exact Audio Copy to see if there is a way to know at which point the software crash.. @Rondom \ud83d\udc4d well found ! Only network provider installed without kernel driver make it crash.\nI am looking what is happening here now.. OK I see what is happening here.\nEAC is listing the network provider and open dokannp1.dll that is on the list directly. It does not use the network provider interface, but directly a Loadlibrary. EAC is 32 bits and dokannp1.dll is 64 bits. EAC do not seem to check if Loadlibrary fail and crash. I have installed the 32 bits dokannp1.dll instead of the 64 bits to be sure it is this and I could save a profile without crash.\n\nI have contacted EAC by mail (eac [at] exactaudiocopy [dot] org) and hope will get an answer. There is nothing on dokan that can be done unfortunately.\nThank you guys for your report and @Rondom from pointing that I looked at the wrong direction \ud83d\udc4d \nFor people who would like to use dokan and EAC together:\nYou can remove the Dokan network provider with the command: dokanctl /r n\nand reboot explorer \ud83d\udc4d \n. There is still no answer by mail and I could not create an account he EAC forum. Does someone could point this issue on the EAC forum \u2764\ufe0f  ?. Sorry guys, I really got no answers from EAC \ud83d\ude22 \nI will close this issue unfortunately.. Hi everyone,\ndokannp1.dll x86 and x64 are now installed on x64 platform in system32 & syswow64 folder windows https://github.com/dokan-dev/dokany/commit/405c71eb1070c7c01d512b9e8eeece6b99afabbf\nI made a couple of test and this fix the crash of EAC \ud83c\udfc6 EAC see correctly the device online and can load/save cfg without issues at all \ud83d\ude80 . Do you know if it is possible to run a single test with ifstest ?. @Rondom Locally I have no crash\nThe test fail but thats another story \ud83d\ude04 \nDid you got the crash somewhere else than the CI ?\n```\n\n+++Microsoft (R) Installable File System Test for Windows XP/2003/Vista+++:: Probe-Header: :\n+++Test SW Build 0014 Init Sunday September 3, 2017 12:42:30+++\n\n1Test         :EndOfFileInformationTest\nGroup        :FileInformation\nStatus       :C0000014 (IFSTEST_TEST_ALLOCATION_SIZE_ERROR)\nLastGeneralValue :00000200\nExpectedGeneralValue :00011200\nTest         :EndOfFileInformationTest\nGroup        :FileInformation\nStatus       :C0000025 (IFSTEST_TEST_EXTRA_INFO)\n```. \ud83d\ude22 I will try again so.\nEven as a single test it crashed IFSTest ?. Fixed with https://github.com/dokan-dev/dokany/commit/624ff772b9d5c052730a05d7e83e399d95931d12. I enable NotificationCleanupAttribTest  again to see on CI what the result of it.\nhttps://github.com/dokan-dev/dokany/commit/d3633571b71185ea6946335eb3ab2fc58a1c30f8\nLocally I have no issue, yes it is a test that takes more time than other tests but it works.\n. Ok it grow testing time but it pass now.\nhttps://ci.appveyor.com/project/Maxhy/dokany/build/1.0.3-261/job/55afrg6g5au4kyk8#L1035\n@Rondom tell me if this can be closed for you. Alright \u2764\ufe0f \nThis really added a lot of time to the CI test but I cannot say if it is dokan fault or CI speed.\nhttps://ci.appveyor.com/project/Maxhy/dokany/build/1.0.3-261/job/55afrg6g5au4kyk8#L1970\nFor information, StreamNotifyWriteTest work locally, but on the CI this fail...like the notification passed after the timeout.\nhttps://github.com/dokan-dev/dokany/issues/569\nMaybe our notifications are slow :'( I open an issue for it\n. Dokan:\nNotificationSecurityTest: 0.74s\nNotificationCleanupAttribTest: 41sec\nNTFS:\nNotificationSecurityTest: 0.69s\nNotificationCleanupAttribTest: 21sec\nWe mirror NTFS, so it is normal to have a greater time but 20 sec more...\nNotificationSecurityTest (notify change security) seems to have a normal time. Therefore I would imagine the speed issue somewhere else.\nI change the opened issue . Hi @yin19941005 ,\nThank you for the great analyze as always !\nI always wanted to change this sensitive piece of code ! What you proposed it perfect and would avoid at least BSOD \ud83d\ude2e \nmaybe we can make a function of this not to have code duplication ?\n~~Just to be sure does FileName->Length has a correct value in here ?~~ Seen on the screenshot \ud83d\udc4d \n. A \"dokan_utility.c\" would be nice. I think there is other function that I will be able to move in it \ud83d\udc4d . Hi @hkarakose ,\nYes, this are real files requests.\nhttps://www.computerhope.com/issues/ch001060.htm\n(there is probably better link to explain this)\nYou can return success, but you will need to answer to read/write request of this file. it is probably better that you return access denied on this \ud83d\udc4d \n. @hkarakose Humm this is up to you. It can be a webservice context or something that can help later to understand on which on text you are.. @hkarakose does  @sefai answer ( \u2764\ufe0f ) answer you question ?. Hi @yin19941005 ,\nThank you for the pull request \ud83d\udc4d ! This looks good ! Just the name of the function to fix \ud83d\ude0b . Thank you @zanderz for the log \ud83d\udc4d There is really only this ? \ud83d\ude2e wow\n@marinkobabic can you look at this issue ? \u2764\ufe0f . @marinkobabic Thank you for looking at it \ud83d\udc4d \nThis is a really weird change from windows.\nEven cdrom driver sample use STATUS_BUFFER_OVERFLOW as we do https://github.com/Microsoft/Windows-driver-samples/blob/aa6e0b36eb932099fa4eb950a6f5e289a23b6d6e/storage/class/cdrom/src/ioctl.c#L4069 and the documentation only refer to STATUS_BUFFER_OVERFLOW https://msdn.microsoft.com/en-us/library/windows/hardware/ff560437(v=vs.85).aspx \nDo not know what to think about it. Is that the new way to do it ? Will it work on other systems versions ? Or just a mistake that Microsoft will change next testing version.\nDoes microsoft as a bug report for his beta build that we could use ?. Even reactos do the same \ud83e\udd14 https://github.com/reactos/reactos/blob/31b47ad45e6384dd538ebfee33c4829945cf2eee/reactos/drivers/filesystems/btrfs/devctrl.c#L86\nMy understanding is  that STATUS_BUFFER_TOO_SMALL should be when the minimum memory of the IOCTL is not available and STATUS_BUFFER_OVERFLOW when extra memory is needed.\nI do not use windows insider program does anyway know where to report this ?. @benpye IOCTL_MOUNTDEV_QUERY_SUGGESTED_LINK_NAME is not present in the logs provided by @zanderz \nIOCTL_MOUNTDEV_QUERY_SUGGESTED_LINK_NAME is only used with mount manager options enabled, here it is not the case.. \ud83d\udc4d Yes, that\u2019s right. Sorry had to write kick this morning. Thanks for the report I made a quick patch. https://github.com/dokan-dev/dokany/commit/9c9b55713d6701eabae9cd5405d1ea35ad6899d7. @zanderz that's a separate bug, the code fixed is not used in our case here.\nThere is still something strange on the Microsoft side that we hope their support will give us an answer. \nDo we have a tracking number / link on someone open ticket ?. @benpye PR with a fix has been merged. https://github.com/dokan-dev/dokany/pull/559\nI could not test personally (my VM do not want to get the insider update for a reason \ud83d\ude22 ) but by the code and the return of people, this seems to do the job.\nI will try to make a release in the next days when gets some time.\n@zanderz if you have the possibility to have a feedback from the community before this it would be perfect \ud83d\udc4d !\n. Will try to make a 1.0.4 this week \ud83d\udc4d . @fpqc oh ! I have to keep this link \ud83d\udc4d thank you !. 1.0.4 has been release https://github.com/dokan-dev/dokany/releases/tag/v1.0.4 \ud83d\udc4d \nIf anyone can do the test it would be appreciate !. @runapp This seems to be another issue from what you explain. Here the device would not even mount.\nDoes what you explain is the same as https://github.com/dokan-dev/dokany/issues/413 ?\nOtherwise, can you open another issue ?. From different feedback, this seems to be fixed now.\nI will reopen if someone still do not get a proper behavior on preview build.. Thank you for the quick fix \ud83d\udc4d very appreciate !. setup.exe package the msi.\nThis is duplicate with https://github.com/dokan-dev/dokany/issues/557. Hi @holla2040 ,\nCan you provide the installer log ?\nDo you have on the same folder as the installer vc_redist.x64.exe  or vc_redist.x86.exe ?. It is version 14.0.23918 needed. You have the wrong vc redist installed (12).\nPlease install 2015 vc redist.. Last 14 version should work \ud83d\udc4d (14.10.25017 here)\nYou can otherwise just use dokan install with redist embedded (DokanSetup_redist.exe).. Hi @matswebjorn ,\nThe installer is looking for VC++ 2015 version 14.0.23918. You will need to update the version that you have installed.. Hi @benpye ,\nThank you for the PR !\nSo you were able to reproduce the issue with the commit before your fix ?. Alright @benpye !\nThanks a lot again for looking at this fixing the issue \ud83d\udc4d \u2764\ufe0f !. Done with https://github.com/dokan-dev/dokany/commit/0da5cc963f772aa0c9a4c302b598567484f572e1\nWe check path if it is UNC or not. Done with https://github.com/dokan-dev/dokany/commit/0da5cc963f772aa0c9a4c302b598567484f572e1\nIFSTest doest not return error code, we can only analyse stderr. Hi @CollinChaffin ,\nCould you use the template issue ? https://github.com/dokan-dev/dokany/blob/master/.github/ISSUE_TEMPLATE.md\nI understand that you have an issue but I have no idea what version you are using, how to get the same issue you have....\nPlease edit this issue with proper information to make us able to help you.\n. Here is the code that uninstall the provider:\nhttps://github.com/dokan-dev/dokany/blob/b4dc99ad9efa0b60b05a1e37653e1fc1ba793f43/dokan/mount.c#L333. Here we remove the dokan network provider:\nhttps://github.com/dokan-dev/dokany/blob/b4dc99ad9efa0b60b05a1e37653e1fc1ba793f43/dokan/mount.c#L345-L349\n\"System\\\\CurrentControlSet\\\\Services\\\\dokan\" DOKAN_MAJOR_API_VERSION\nHere we remore dokan1 from the ProviderOrder\nhttps://github.com/dokan-dev/dokany/blob/b4dc99ad9efa0b60b05a1e37653e1fc1ba793f43/dokan/mount.c#L351-L371\nBut @CollinChaffin like I said before, I have no idea what version you were using. We changed this code a long time ago when it could create such behavior you describe.\nI looked at the code again and could not find anyway how this could happen.. @CollinChaffin let me know if you get more information on this and I will reopen it.. Hi @s-stexx,\nI have no problem to download the release. It is maybe a github issue on on of their server you are using.\nWe cannot do much about it :sad:. DokanSetup_redist.exe - md5: 9797203EF8E7AA488274C36767FD819C\nsha256: 38710F89F716326AB0A83DE17270B70F4D96452DC0B34B654EA1B29B5B17BAB7. Hello, \nUnfortunately this is not possible by default with dokany but you can create a file system using Dokany that would translate the Img file into the FS. Some people already did by using grub source code and ext4 FS. If you make a research in the repository you should find some post talking about it.. Hi @jetwhiz ,\nI do not think this is releated, here it seems to be an open/rename issue.\nAbout the FUSE issue, you can open another issue on it. I do not have cygwin env for now, if you can try to see a little more what is happening (if read buffer is correct and such), what is the difference with encfs4win \ud83d\udc4d . All good for me @Rondom Thanks again for your contribution ! \ud83c\udfc6 . Hi @lins05 ,\nIs this the same as https://github.com/dokan-dev/dokany/issues/332 ?. @lins05 have you been able to do the test ?. @lins05 let me known if you have any update on this. Hello @cplerch ,\nThank you for the report!\nDoes this should not be opened in https://github.com/dokan-dev/dokan-java ?. This warning comes from the java wrapper @cplerch .\nIt needs to be reported on the java wrapper repository.. Wow @sgraves66 thank you for the information !\nEven has been twitted by Sia ! https://twitter.com/SiaTechHQ/status/843832626800746497\nDokan in blockchain \ud83d\ude0e . Thanks you @sgraves66 for the tiny fix \u2764\ufe0f !. Hi @leoyu123 ,\nWhat do you mean ? The VS redist do not get installed ? . Hey @js69 !!!\nYes this would be awesome, we already got a couple issues opened just for that \ud83d\ude22 . If this can be included in the build process, I can update the chocolatey package during release time.\nHi @ulex, are you still maintaining the package ?\n. Thanks a lot @bcurran3 !\nWill take a look to see how to integrate to the build release \ud83d\udc4d . Thanks a lot @bcurran3 !\nWill keep the issue open for the time the 1.0.6 will comes in case I need help.. Integrate Dokan ChocolateyPackages creation in the existing build script would be great to help in the release process.\nThe script used is build.bat. The creation of the Chocolatey packages would be at the end.\nThe goal would be to use the @bcurran3 nuspec in a git submodule.\nhttps://github.com/bcurran3/ChocolateyPackages/tree/master/dokany\nhttps://github.com/bcurran3/ChocolateyPackages/tree/master/dokany-redistributable\nTo update the version from version.xml (by using powershell xml read for example).\nAnd the AutoUpdate like @bcurran3 said would be really great ! But keep in mind after uninstall, it needs a reboot to be able to reinstall Dokan ! (Kernel driver limitation)\n. Hi @yin19941005 ,\nI will look at your issue this weekend. Just a quick answer to now: We call CreateFile in Read/Write because it can happen (Microsoft doc also say it) that a read/write can happen after a cleanup call and it needs to be successful.\nSee https://github.com/dokan-dev/dokany/issues/210#issuecomment-236972909. Hi @yin19941005 ,\nI understand what you mean here. When using normal users for the mount, you will always get a limitation to create other files for other users. I would say, it always has to be mounted as Admin if you want to handle createfile for other users.\nI agree we do not use in the mirror the security access to read/write but \"normally\" it should not really hurt since if right is called, it means security check passed in createfile.\nI hope I understood exactly what you mean ! Really great that you take a look at it \ud83d\udc4d \n. This has been fixed with @yin19941005 PR https://github.com/dokan-dev/dokany/pull/582\nThank you for your report and work !!. @linyuan870 Hi,\nDid you try to mount the mirror with /o option? This is will make the mirror use the windows mount manager that give some features.. @linyuan870 Will look at it ! Good that /o fixed your issue. Thank you @pmalhaire !!! very appreciate \ud83d\udc4d . Hi @linyuan870 ,\nThanks for the report !\nWe are aware of this issue. This is part of the mount manager that keeps an information for him in case the device would be remounted and therefore reused the same drive letter.\nBut here we should clean up the reference if possible OR keep a valid reference with a good GUID and not a fixed GUID like now (unknown why this happens).\n. Hi @linyuan870 ,\nFor now we are using IOCTL_MOUNTMGR_CREATE_POINT and IOCTL_MOUNTMGR_DELETE_POINTS. \nSeems like IOCTL_MOUNTMGR_VOLUME_MOUNT_POINT_DELETED is used for NTFS junction.\nhttp://www.osronline.com/custom.cfm?name=articlePrint.cfm&id=107\n. Hi @linyuan870 ,\nWhat is the large number value ? It should be a ntsatus https://msdn.microsoft.com/en-us/library/cc704588.aspx\nNormally we should have one GUID for each mount and delete this value each time.. Thank you @linyuan870 for all the informations and for taking the time !\nSo it seems that the device name is always unique and we always use the good one to delete after right ?\nCan you see when DokanSendIoContlToMountManager fail what function in it set the ntstatus value ?\nI agree that the mount manager should cleanup the volume directly at the first umount. He seems to do it since he removes the mount points but I have no idea if it can/has to remove the guid for listing also.\n. Hi @PraneethKapuganti ,\nI continue the conversation there: https://github.com/dokan-dev/dokan-sshfs/issues/17\n. Hi @yin19941005 ,\nThis is indeed something really needed for the mirror ! Thanks a lot ! \ud83d\ude0d \nJust wonder for performance, could it be possible to only call DokanOpenRequestorToken at start and RevertToSelf when ctrl + c & exit ?. OK I see your point ! and you are right.\nBetter to fix a security hole here \ud83d\udc4d \nThanks as alaways @yin19941005  !\nIf I am correct the FUSE default_permissions \"kind of\" already exist when DefaultGetFileSecurity is not implemented by the user, we set a default one (that can not be configured for now).\nhttps://github.com/dokan-dev/dokany/blob/master/dokan/security.c#L29. Hi @rjamesnw ,\nDokan make you able to create whatever filesystem you would like, not only a mirror of an existing file system.\nFS can be a view of SQL server, websites ....\nI think you are more interested in a MiniFilter\n. Well it is the purpose of it and I can understand your reaction :'(\nDokan would not really help unless you create a mirror and would say to only use the mirror but probably overkill if you just wanna look at the read/write.\nDoes this answer your questions ?. Hi @yin19941005,\nYou are absolutely right !\nOpening an issue, giving the fix in a PR and link with the Microsoft documentation \u2764\ufe0f \u2764\ufe0f \u2764\ufe0f \nYou rocks ! \ud83c\udfb8 \ud83d\ude80 \n. Hi @ivorytir ,\nThank you for your report.\nDo you have exactly the test winfstest that hang ?. Thank you @SarasArya for the Readme review !. @Hi Dumbaz ,\nIf you are still interested, this is still available \ud83d\ude0e \n. Done with https://github.com/dokan-dev/dokany/commit/08aeab6ff1305e9eec2799f7f6a2b97d28781dec. Hi @gkotian ,\nThanks you for the review and for your work ! \ud83c\udf86 \nCut to 80 can be helpful for some people and anyway github does not show more \ud83d\udc4d It is a good idea !\n. @sm4rk0 Feel free to recreate a proper pull request \ud83d\udc4d . Done with https://github.com/dokan-dev/dokany/commit/ba2109895215e57c8da646d18ecf532413df4263. Hi @klyap ,\nThank you for your review and for taking the time ! \ud83e\udd47 \nThis is a very appreciate work !\nI have rebased your commits in a single one and merged it\nhttps://github.com/dokan-dev/dokany/commit/2b447351c055623b5dfebe2fe075ab9bb5719d7d. Hi @yin19941005 ,\nThank you for the PR and sorry for the delay !\nThis seems to break some IFSTest UpdateOnCloseDirTest:\nhttps://ci.appveyor.com/project/Maxhy/dokany/build/1.0.5-292/job/nno46ubv9bcfqai7#L631\nMaybe there is a case this should not be updated ?\n] Test         :UpdateOnCloseDirTest\n] Group        :CloseCleanupDelete\n] Status       :C0000015 (IFSTEST_TEST_ATTRIBUTE_ERROR)\n] WSystemText  :\\uponcd\\uponcd1\n] LastGeneralValue :00000031\n] ExpectedGeneralValue :00000030\n] TestVariant  :00000003 \n] Description  :{Msg# CloseDel!uponcd!30} The attributes were changed.\n]               This dirents should have been updated since the\n]               handles to the directories were closed. \n] \n] Test         :UpdateOnCloseDirTest\n] Group        :CloseCleanupDelete\n] Status       :C0000015 (IFSTEST_TEST_ATTRIBUTE_ERROR)\n] WSystemText  :\\uponcd\\uponcd2\n] LastGeneralValue :00000016\n] ExpectedGeneralValue :00000014\n] TestVariant  :00000003 \n] Description  :{Msg# CloseDel!uponcd!30} The attributes were changed.\n]               This dirents should have been updated since the\n]               handles to the directories were closed. \n] \n] Test         :UpdateOnCloseDirTest\n] Group        :CloseCleanupDelete\n] Status       :C0000015 (IFSTEST_TEST_ATTRIBUTE_ERROR)\n] WSystemText  :\\uponcd\\uponcd3\n] LastGeneralValue :00000016\n] ExpectedGeneralValue :00000012\n] TestVariant  :00000003 \n] Description  :{Msg# CloseDel!uponcd!30} The attributes were changed.\n]               This dirents should have been updated since the\n]               handles to the directories were closed. \n] \n] Test         :UpdateOnCloseDirTest\n] Group        :CloseCleanupDelete\n] Status       :C0000015 (IFSTEST_TEST_ATTRIBUTE_ERROR)\n] WSystemText  :\\uponcd\\uponcd4\n] LastGeneralValue :00000031\n] ExpectedGeneralValue :00000011\n] TestVariant  :00000003 \n] Description  :{Msg# CloseDel!uponcd!30} The attributes were changed.\n]               This dirents should have been updated since the\n]               handles to the directories were closed. \n]. Yes, I understand it the same as you.\nBut the test passed before the changes, so I guess this is already happening from my understanding.\nWould be interesting to see if there is a test that matches your issue or not but it does not seem to be.\nCan try to keep the attribute from createfile and do it in the cleanup like they say and see if the test still passes and it fix the issue.\n. Hi @t-miller,\nThanks a lot for your reviews and for your time  ! \ud83c\udfc6 \nYou have done an excellent work ! that is very appreciate ! \ud83c\udfb8 . Fixed with your PR @bailey27 https://github.com/dokan-dev/dokany/pull/604\nThanks you for the contribution as always !. Hi @joeyalexander ,\nThanks you for the review of the readme ! \ud83d\udc4d very appreciate !\n. Hi @bailey27,\nThank for the PR ! Yes, the changes are correct ! \u2764\ufe0f \nAppveyor red status seems to come from a crash during the test.\nCan you just rebase into one commit and I will merge it \ud83d\udc4d (or can do it for you if you want)\n. Perfect @bailey27 ! Thanks you !  \ud83e\udd47 . That's an awesome review @t-miller !!!\nVery kind of you for taking the time to review the dokan.h ! Can only make it more comfortable to read it \ud83d\udc4d \n. Hi @leochou0729 ,\nYou are right DOKAN_OPTION_WRITE_PROTECT https://github.com/dokan-dev/dokany/blob/master/samples/dokan_mirror/mirror.c#L1565\nis not used in the fuse options for now. \nHere is how it is handle for debug option:\nhttps://github.com/dokan-dev/dokany/blob/12ae5ecf999f1d2741b4a86f6d01dc49be1ca1bf/dokan_fuse/src/dokanfuse.cpp#L581\nhttps://github.com/dokan-dev/dokany/blob/12ae5ecf999f1d2741b4a86f6d01dc49be1ca1bf/dokan_fuse/src/dokanfuse.cpp#L522-L523\nThis can be easily done. Do you think you could make a PR for it ?. This has been fixed by your PR @leochou0729 https://github.com/dokan-dev/dokany/pull/609\nThanks a lot for your contribution !. Hi @bailey27 ,\nYes, this is a known issue https://github.com/dokan-dev/dokany/pull/307#issuecomment-257590762\nIt can be fixed easily but another issue related is pending to find an answer (look at the parent folder to see if we have rights to remove file if access denied is returned).\nIf you want to see the pending list of tasks for the 2.0, I try to keep it updated here: https://github.com/dokan-dev/dokany/pull/307#issuecomment-300071950\n. Hi @bailey27 ,\nI have committed the fix that I was talking in my previous comment. https://github.com/dokan-dev/dokany/commit/2d68b50aa63516a7a42d7231e2645f29018bbefb\nthere is still an error when deleting the file that is read only.\nThis case is missing currently.\nBefore Dokany library was creating a parent open to see if it gives us rights to delete children https://github.com/dokan-dev/dokany/blob/master/dokan/create.c#L272\nFor the 2.x.x, it is probably better to handle the check directly in the mirror.\n@Corillian Do you remember the purpose of MirrorCreateNewSecurity https://github.com/dokan-dev/dokany/blob/Corillian-asyncio/samples/dokan_mirror/mirror.c#L832 ?\nIt seems to get the parent file security directory for the new file. Did you also plan to use it to check the parents' rights to delete ?\nI tried to make this code work without success even with AddSeSecurityNamePrivilege\nPSECURITY_DESCRIPTOR *ParentSecurity = NULL;\n  DWORD test = GetNamedSecurityInfo(\n    L\"C:\\\\test\", SE_FILE_OBJECT,\n    BACKUP_SECURITY_INFORMATION, // give us everything\n    NULL, NULL, NULL, NULL, ParentSecurity);\nSince MirrorGetParentSecurity is always failing for me  https://github.com/dokan-dev/dokany/blob/Corillian-asyncio/samples/dokan_mirror/mirror.c#L569\n. I just ping @Corillian  here if he has a reason for this.. Hi @bailey27 ,\nI just made the changes https://github.com/dokan-dev/dokany/commit/d40bdd2c51d938e5c447e62cb178b4a0ed77bbaa\nThanks for the report !. Hi @leochou0729 ,\nThis seems to be alright \ud83d\udc4d  Thanks a lot for the PR ! \u2764\ufe0f \n. Hi @gambetto ,\nAre you using the mirror for this ? What the mirror option used ? What are the mirror logs ?. Hi @gambetto ,\nNo, this should be enough thank you !\nI will just not be able to take a look at it for now unfortunately.\n. Hi @gambetto ,\nI have reproduce your issue and it seems to be the same as https://github.com/dokan-dev/dokany/issues/611\nAre you using Win 10 16299 ? (last update). Hi @Jaozhang ,\nThank you for the report !\nSo you really see in the log the call of FileRenameInformationEx ? There is no fallback in FileRenameInformation just after we return STATUS_NOT_IMPLEMENTED  for FileRenameInformationEx  ? \nWould be amazing that they added a feature mandatory \ud83d\ude22 \n. Oh that's awesome ! Thanks for the informations\nDoes the implementation also solved the excel file save issue ?\n. @Jaozhang Would you like to contribute to dokan with a pull request with your changes ?. I started to migrate the solution / sdk / wdk / installer to VS 2017 10.0.16299.0 to be able to fix this issue.\n\nInstaller: KB2999226 checks seems to no longer be needed since C++ 2015 Redistributable Update 3\n\"Microsoft Visual C++ 2015 Redistributable includes bug fixes to the runtime DLLs and also the latest versions for KB 2999226.\"\nSee https://www.microsoft.com/en-us/download/details.aspx?id=53587\nAppveyor:  currently do not support the new WDK. Coming next image build https://github.com/appveyor/ci/issues/1554\n\nCurrently keeping the migration in my repository: https://github.com/Liryna/dokany/commit/41c4468680c0c9d8daa0ef20d1d8574fd94275b8\n. @Jaozhang even not a PR to review what you did \ud83d\ude22 ? Would be helpful and I am really looking to have contributors especially when they come with the issue and fix.\nI would take a look and fix if needed on the top.. Hello @webaxys \nUnfortunately the workaround would be to remove the windows creators update... \ud83d\ude22 \nI have tested and merged the implementation of the new FileRenameInformationEx coming with Windows 10 update RS1 (v1709) of @Jaozhang https://github.com/dokan-dev/dokany/commit/7add59eb8b458036550ca7de9982a01756f83e7e\nThey simply replaced the FileRenameInformation ReplaceIfExists bool by a Flags that can hold different options:\n```\nif (_WIN32_WINNT >= _WIN32_WINNT_WIN10_RS1)\ndefine FILE_RENAME_REPLACE_IF_EXISTS                  0x00000001\ndefine FILE_RENAME_POSIX_SEMANTICS                    0x00000002\nendif\nif (_WIN32_WINNT >= _WIN32_WINNT_WIN10_RS3)\ndefine FILE_RENAME_SUPPRESS_PIN_STATE_INHERITANCE     0x00000004\nendif\n```\nSome reading about it here\nThe dokan keep using ReplaceIfExists  bool for now so only compatible with FILE_RENAME_REPLACE_IF_EXISTS, I will open another issue to see how we can implement the other options (change the dokan API) later.\nWe will need to release this fix under dokan version 1.1.0. The fix needs to be released in the Kernel and Library. Just updating the Kernel or the Library would keep the issue to exist. The struct size does not change so the kernel <-> library communication is not broken (no need to update to 2.0.0).\n@Rondom  We do not need to move to VS 2017 and new WDK for now but I think we can make the move when appveyor will be ready https://github.com/appveyor/ci/issues/1554\nI start to look to implement the pending TODO for 1.1.0. Appveyor is read, we can do the move to VS 2017 for 1.1.0 https://github.com/dokan-dev/dokany/issues/622. 1.1.0 has been release https://github.com/dokan-dev/dokany/releases/tag/v1.1.0 \ud83c\udfc6 \nIf someone can confirme the fix is working \ud83d\udc4d . Great news !\nThanks a lot all of you for reporting the issue and your feedback !\nAlso a big thanks to @Jaozhang for finding the reason and providing the fix ! \ud83c\udfc6 . Hi @linyuan870 ,\nDid you compare the behavior with Process Monitor on NTFS and Dokan ?\nDoes NTFS also have lots of calls ? Would be interesting to see with Process Monitor from where does this calls are made.. Thank you for the log !\nInteresting how CDViewer is reading the file. +137k calls for the file in 15sec.\nI have no idea why it is doing this. But if it is the same behavior on NTFS, that not an issue of dokan, probably more than a performance as you say. Remember that Mirror on the top of NTFS, you will not get the same time.\n. @mkeskells Hi,\nThere is already ticket about this error.. This is releated to https://github.com/dokan-dev/dokany/issues/590 and https://github.com/dokan-dev/dokany/issues/184. Hi @Rondom ,\nYes, this would make the build more fast \ud83d\udc4d !\nThere should be no issue here: gcc-g++ for x86 also use i686-pc-cygwin-c++.exe\nhttps://cygwin.com/cgi-bin2/package-cat.cgi?file=x86%2Fgcc-g%2B%2B%2Fgcc-g%2B%2B-6.4.0-1&grep=gcc-g%2B%2B\nBoth packages are probably the same but one has a link to usr/bin/c++.exe directly.\nThis can be merge if you agree with me. Thank you @Rondom ! \u2764\ufe0f . Thank you for the report @Rondom !\nCorrect @js69 , 64x64 is indeed the needed size here \ud83d\udc4d \nhttps://github.com/dokan-dev/dokany/commit/969a91610cfaedd35720908eb9df0cdce927c513. Hi @0x4a616e ,\nThank you for the report.\nDoes when using the dokan1.dll from 1.0.5 and having dokan1.sys 1.0.3, it work ? \nIf yes, this would be an added lock in the kernel that do not pass and freeze the system.\nhttps://github.com/dokan-dev/dokany/compare/v1.0.3...v1.0.5. @0x4a616e @TrabacchinLuigi  Can this be reproduce with another way that using outlook \ud83d\ude03 ?. @TrabacchinLuigi Just need a way to reproduce the issue simply here :) After will look what is happening \u2764\ufe0f\nCan you just describe with Revit how to make it ?. @TrabacchinLuigi for the guide to reproduce this !\nI found the issue and fixed it in the master \ud83d\udc4d \nThanks all of you for the report !. Hi @linyuan870 ,\nReparse point is not supported by Dokan and would be heavy to support.\nhttps://github.com/dokan-dev/dokany/blob/56a447db4687d780e6072f03cef5877304f5c66a/sys/fscontrol.c#L400-L411\nIt is probably a feature that will never be done unfortunately.\n. Hi @linyuan870 ,\nNo this is still not supported by Dokan.\nIf someone is interested in it, we will need to wait a PR.\n. Hi @TrabacchinLuigi ,\nBy debug version you mean, https://github.com/dokan-dev/dokany/releases/tag/v1.0.5 Dbg ? normally they should be all signed like release.\nIf you build yourself you will need the self sign.\nHave you installed the selfsigned certificates on your testing machine ?\nhttps://github.com/dokan-dev/dokany/wiki/Build#signing. Are you using windows 10 with last updates ?\nThis need a sign with EV cert that I do not apply on the Debug build (it takes times). Maybe that's why for your windows it is still not properly signed.. >WinVer says i'm running 1607 (not fall creator update) are signing certificate different \ud83d\ude31 ?\nYes this is possible https://github.com/dokan-dev/dokany/issues/271 \ud83d\ude22 . @TrabacchinLuigi For you the issue is that the debug installer is not EV signed ?\nThe debug installer has debug dokan build that are not EV signed because it take a lots of time to do.. About build:\n-Visual studio create his own self signed cert and sign it during the build. This cert can be imported in the VM to make the driver correctly signed for the OS (what I am using every day). Override this cert by another one (real cert) is possible but it is part of the vs user configuration and not the solution. So I could not commit it when I did the test.\n-You can use the dokan self signed cert to sign the binary with this script https://github.com/dokan-dev/dokany/blob/master/cert/dokan-sign.ps1 and import the cert in your env with https://github.com/dokan-dev/dokany/blob/master/cert/dokan-import.ps1\nInstaller:\n-During the build installer, it is asked to submit the driver to Microsoft hardware dashboard (EV sign for > 1607).\nhttps://github.com/dokan-dev/dokany/blob/master/dokan_wix/build.bat#L21\nThis part is manual and needs a special env to be proceeding. It is heavy to run (that's why I only do it for Release installers).\n-The debug build installer is here for people who do not want/can to build themselves in debug, who just want the kernel debugging output that exist only in DEBUG (Microsoft Win32 API) without importing self signed cert (and < 1607).\nOnly thing that can be improved here for me it is to sign for 1607 the debug installer. I would do if it would not take me 2-3h to update all the env, run the test, send to Microsoft, waiting the analyze at each build.\n. Hi @TrabacchinLuigi ,\nI hope we have answer your questions. Otherwise, tell me and I will reopen the ticket.. Thank you @Jaozhang !\nWill take a look at it this weekend \ud83d\udc4d . Thank you for the PR and finding the reason of the issue @Jaozhang !!!\nI have merged currently your commit in the develop, see my message in #611 \nhttps://github.com/dokan-dev/dokany/commit/7add59eb8b458036550ca7de9982a01756f83e7e\n(you can also link you commit mail to like with @Jaozhang account, like that your nickname will be showed). @woachk what do you mean by\n\nWindows SDK overrides for desktop apps aren't needed anymore now. Humm @woachk , I am not sure to understand here. What would we need to change ?\n\nAlso about this issue, from what I understand (and what you said) ARM/ARM64, IoT Core do not have way to install driver/app from an installer.\nhttps://docs.microsoft.com/en-us/windows/iot-core/develop-your-app/appinstaller\nhttps://docs.microsoft.com/en-us/windows/iot-core/learn-about-hardware/driverdeployment\nIs this really the case ? If so, there is no need to add ARM/ARM64 in WiX no ?\nSorry but since I never touched this version of the OS \ud83d\ude22 I am really looking to be guided here on the current state of how people use IoT Core.. Ok So only ARM64 will need to be in the installer ?. Thank you @Rondom , I have pushed my commit and revert the image config as you proposed \ud83d\udc4d \nhttps://github.com/dokan-dev/dokany/commit/3b63b90efa1b4aae885dd9d54aea3675f6c3939c\nAppveyor build: https://ci.appveyor.com/project/Maxhy/dokany/build/1.1.0-333. @Rondom excellent Idea !\nI will highlight your message during the release\nI have tested the installer on the different windows I have all behavior seems to be good \ud83d\udc4d !\nI merged the changes https://github.com/dokan-dev/dokany/pull/626\nWill do a release during the week. Hi @KyleSanderson ,\nYou are right, I found that I forgot to change the VC++ version in the error message when it is not installed \ud83d\udc4d \nhttps://github.com/dokan-dev/dokany/commit/77611b04fef95b5b09438f2a1761e1595404ce27\nRegarding the link, even if the link you provided is correct, but I prefer to give the generic one that has \"less chance\" to change.\nThanks for the report !\n. Hi @g-fusion ,\nWhich version of Dokan exactly are you using ?. 1.0.5 ?\nCan you try with 1.0.3 see if this also happen ?. @g-fusion if you can get a full log, it would be nice !\nOtherwise I will try to reproduce with a proper guide \ud83d\udc4d . @fanlonglong8500 fcb->SectionObjectPointers is init in SetFileObjectForVCB\n@g-fusion I did tried to reproduce the issue with a picture (copy x1000 of 10mb), I could not reproduce this.\nSince you say it works with 1.0.3 and after a review of the changes, there is a good chance that it was the lock I introduce in write that is probably used during the creation of the thumbnails  cache.\nI reverted it already for another issue: https://github.com/dokan-dev/dokany/commit/b72f645e55b3a480a43a3fdac4b0d0a03fb54480\nThere is another lock added for set security but I do not expect it to create an issue here.\nAre you able to test the fix with the snapshot:\nhttps://ci.appveyor.com/project/Maxhy/dokany/branch/master/job/d3y3qs3c5mh03e9i/artifacts\nhttps://github.com/dokan-dev/dokany/wiki/Build#user-snapshot\nThe release should come very soon but want to be sure that it really solve the problem.\n. Hi @g-fusion ,\nOh, I tought you were using 1.0.5 and not 1.0.0\nhttps://github.com/dokan-dev/dokany/issues/623#issuecomment-345733194\nForget about what I said before. Now I remember this issue has already been reported and fixed for 1.0.1 (test on 1.0.1 before be sure it fix your issue)\nhttps://github.com/dokan-dev/dokany/blob/master/CHANGELOG.md#1011000---2016-11-04\nLots of changes for lock have been made, you may want to look at them if you wanna backport https://github.com/dokan-dev/dokany/compare/v1.0.0...v1.0.1\nAnd specially about CcPurgeCacheSection. About smooth, https://github.com/dokan-dev/dokany/compare/v1.0.1...v1.0.3 has reviews of the FCB locks in the kernel.\nMaybe there some locks that are heavier than on 1.0.1 BUT they were added to handle possible crash/BSOD.\nYou can see the lock usage by macro DokanFCBLockRW/DokanFCBLockRO. @g-fusion I close this. If you have any other question. Do not hesitate and I will reopen.. Hi @fanlonglong8500 ,\nSorry for the delay, busy days \ud83d\ude22 \nI understand your case here. I am wondering on which lock CcFlushCache  is calling the ExAcquireResourceExclusiveLite.\nIt makes me wonder if this lock is even needed at all.\n@pliard-chromium seems like you had the same question !\nhttps://github.com/dokan-dev/dokany/pull/347#commitcomment-20584382\nA situation where the lock was needed: https://github.com/dokan-dev/dokany/pull/426\nWe should be able to call CcUninitializeCacheMap safely in race condition.\n\nWe should apply for another lock to protect this call .\n\nWhat kind of lock do you think we should do here ?\n. >it will lock DokanFCB.AdvancedFCBHeader.Resource and DokanFCB.AdvancedFCBHeader.PagingIoResource.\nAre you sure this is not locked by dokan before the call of CcFlushCache  ?\nhttps://github.com/dokan-dev/dokany/blob/acdfbbda4e6e0fd0f183a3fa8ed894838d56bbbd/sys/fileinfo.c#L395\n\nIf We should be able to call CcUninitializeCacheMap safely in race condition only in our driver,we can apply a new lock to protect it .And we also use this new clock to protect CcXXX routine.\n\nThis would be the same as PagingIoResource lock no ?\nI cannot find information on how lock for CcXXX should be handled \ud83d\ude22 \n\nMy English is particularly poor and it took me a whole morning to write these\n\nAll good \ud83d\ude0e . Fix by @fanlonglong8500 contribution \ud83d\udc4d . Hi @dwalkes ,\nThis is an amazing work you did here ! \ud83e\udd47 \nIt is true that some people could be interesting to such project for alternate FS implementations.\nUsually external projects using dokan are listed on the dokan front page: https://dokan-dev.github.io/\nHere I totally understand that it is a great example of implementation in another layer and could be provided as a \"simple\" example to physical disk mirror.\nThe question of adding it in dokan samples repository (when it will be ready) is about maintaining it for me. I would need some help to maintain it, and this, for an undefined time. It should not be a day to day maintains but still need to follow to changes in dokan. @dwalkes are you willing to be an official maintainer of it if integrated in dokan repository ?\nRegarding implementing other features and integrate ImDisk , I would like to help you but I am lacking time unfortunately. I tag the issue for \"help\" and hope someone that was looking for #564 would be interested to contribute to your work !\nThanks again for doing this and sharing it ! It is very appreciated !\n. Hi @neiaberau ,\nPlease see https://github.com/dokan-dev/dokany/issues/346#issuecomment-248822614. Oh BDB645EBAF3C91ECEB1A143BE6793CA57E6435C3 is the hash of VC_redist.x64.exe but he seems to use this hash to compare with vcredist_2017_x86.exe\nhttps://github.com/dokan-dev/dokany/blob/acdfbbda4e6e0fd0f183a3fa8ed894838d56bbbd/dokan_wix/Bootstrapper/Bundle.wxs#L68-L101\n@js69 did I failed something when updating the vcredist link ? how can it be possible \ud83d\ude22 . @neiaberau you found the mistalke .... \ud83d\ude22 \ud83d\udc4d \nFixed in the master\nThank you for the report !!!\nFor now people need to use the redist installer (it contains both files) or to install manually the redist before dokan. Hi @E14 ,\nI just made a new release of the installer with redist fix \ud83d\udc4d \nhttps://github.com/dokan-dev/dokany/releases/tag/v1.1.0.2000\nThe binaries are exactly the same in it.. Hi @naveen508 ,\nWe have removed the embedded KB2999226 installation in dokan since moving to VS2017.\nSo it means you got the error during VS2017 redist ? Would be interesting to know if vc_redist 2017 has issues on Windows servers < 10.\n. Probably we should revert the installation dependancy part. I removed it since microsoft said it is now taken part by them....\nhttps://github.com/dokan-dev/dokany/commit/3b63b90efa1b4aae885dd9d54aea3675f6c3939c. @tomato3107 We had an error message for KB2919355 that I unfortunately removed when moving to VS2017...I will revert it \ud83d\udc4d \nhttps://github.com/dokan-dev/dokany/commit/3b63b90efa1b4aae885dd9d54aea3675f6c3939c#diff-2b9d1f43d6d6c50ec9813a10ad44c436L205\nThanks all of you for the report \ud83d\ude03 !\n. Revert done https://github.com/dokan-dev/dokany/commit/d137fd5f67b528bdc16b616b162ddab686e50f91\nThanks all of you !. Hi @probeerz ,\nSee https://github.com/dokan-dev/dokan-dotnet/issues/162. Hi @linyuan870 ,\nDoes the file created at the end has the wrong name ?\nHere probably the debugger display a char array and a std:string in a different way.\nOtherwise, a test in a sample by just calling wchar_to_utf8_cstr + unixify, will answer the question.. Hi @linyuan870 ,\nFrom my point of view, there is no issue here. What you see is the display of std::string by visual studio.\n```\n  LPCWSTR FileName = L\"\u03b1\u03b2\u03b3\u03b4 \u53cc\u559c\u96d9\u559c! \u10d5\u10d4\u10de\u10ee\u10d8\u10e1 \u10e2\u10e7\u10d0\u10dd\u10e1\u10d0\u10dc\u10d8 \u10e8\u10dd\u10d7\u10d0 \u10e0\u10e3\u10e1\u10d7\u10d0\u10d5\u10d4\u10da\u10d8\\n\";\n  std::wstring wtest(FileName, FileName + wcslen(FileName) + 1); // visual studio display correctly the value\nstd::wstring_convert, wchar_t> converterX;\n  std::string test = converterX.to_bytes(wtest); // visual studio showes it with string char\n  std::wstring bwtest = converterX.from_bytes(test); //bwtest will be equal to wtest and FileName \n```\nHere I convert the LPCWSTR  to wstring, then string. the string display like on your screenshot, it is unreadable but if convert back to wstring it show the correct value. it mean that the string hold the correct value.\nwstring is made to handle wchar and visual studio display it correctly.\nFor information, this code should even probably be used instead of wchar_to_utf8.\n. Hi @pweyzen \nThis is has already been reported here https://github.com/dokan-dev/dokany/issues/628\nIt will be fixed in the next release . Hi @fanlonglong8500 ,\nThank you for the PR!\nI have not fully reviewed it but first look:\nThere is a broken test: https://ci.appveyor.com/project/Maxhy/dokany/build/1.1.0-342/job/8e8sixxlgakbf9yg#L410\nWhy disable DokanNotifyReportChange ?\nhttps://github.com/dokan-dev/dokany/pull/632/files#diff-186f697a50e48562500c4beb285c7e58L365\nAcquire and release of resource here: https://github.com/dokan-dev/dokany/pull/632/files#diff-186f697a50e48562500c4beb285c7e58R127. You have the ifstest install script here: https://github.com/dokan-dev/dokany/tree/master/scripts\nWinfstest: https://github.com/Liryna/winfstest\nSee how appveyor is using it: https://github.com/dokan-dev/dokany/blob/master/appveyor.yml\nhttps://github.com/dokan-dev/dokany/blob/master/appveyor.yml#L260\nhttps://github.com/dokan-dev/dokany/blob/master/samples/mirror_test.ps1\nIt is probably heavy to run everything like appveyor. Better to use first winfstest and after on another env the ifstest.. Thank you @fanlonglong8500 !\nI am currently busy. I will take a look this weekend hopefully !. Hi @fanlonglong8500 ,\nSorry for the delay.\n-Is there a reason for creating COMPLETE_SUCCESS instead of using NTSTATUS ? SUCCESS/PENDING \n-Bool isOk  should be renamed to FCBAcquired\n-FILE_NOTIFY_CHANGE_SIZE is needed for IFTest StreamNotifySizeTest \ud83d\ude22 \nhttps://github.com/Microsoft/Windows-driver-samples/blob/aa6e0b36eb932099fa4eb950a6f5e289a23b6d6e/filesys/fastfat/write.c#L2766\nOtherwise, this seems to be a good work \ud83d\udc4d \nHave you been able to reproduce https://github.com/dokan-dev/dokany/issues/625 without and see that it correctly fix it ?\nOtherwise, I do not know if you have time or if you would like to do it but we have some IFSTest Oplock test that do not pass and we are looking for some help on it \ud83d\udc4d \n. Hi @fanlonglong8500 ,\nSorry year is starting with a lot of things in the same time \ud83d\udc4d \n\n\nfcb->AdvancedFCBHeader.Flags2 &= ~FSRTL_FLAG2_SUPPORTS_FILTER_CONTEXTS;\n\n\nWow I was not aware of that. Did you just see it or have you found something on Microsoft doc about it ?\nRegarding the Oplock, the test not running is displayed on the CI, they are made by IFSTest\nhttps://ci.appveyor.com/project/Maxhy/dokany/build/1.1.0-349/job/bioca6qhxkycxh9t#L957\nYou can run this test one by one with /t OplockBreakItoIITest\nOplock has a mechanism to make a request pending if it is not available. Maybe fixing this can improve the situation you described in 2) .\nhttps://msdn.microsoft.com/en-us/library/gg607490(v=vs.85).aspx\nI will do some test this weekend I promise \ud83d\udc4d !\n. Hi @fanlonglong8500 ,\nMade some test on my side and it seems to be stable \ud83d\udc4d Well done!\nNothing to say about the code else that my previous message. Maybe just some logs in case of allocation failure and when request cannot be queue.\nThank you. FSRTL_FLAG2_SUPPORTS_FILTER_CONTEXTS would mean that we support context for each file streams.\nIt is probably benefic in the case you describe but I do not know what other features this requires or we already support it.\nThere is some informations here:\nhttp://www.osronline.com/custom.cfm?name=articlePrint.cfm&id=356\nhttps://msdn.microsoft.com/en-us/library/windows/hardware/ff547285(v=vs.85).aspx\n. Hi @fanlonglong8500 ,\nJust to tell you I have reviewed at the code. it seems to be correct for me \ud83d\udc4d \nI just need to review and test it more this weekend since it is sensitive part that is touched here.\nSorry for making you wait again.\nWhat is LruFCB compared to cacheFCB ?\nAs I understood, you have created a fixed cache size that you cleanup it here https://github.com/dokan-dev/dokany/pull/632/files#diff-86caa6b16e4044982075fe5d5bc59915R205 How do you know what should be cleanup or not ?\n. Hi @fanlonglong8500 ,\nThank you for the explanation and seems to be good for me and a good way to handle it \ud83d\udc4d \nA little late for me now to review exactly all the code, so will need to wait more \ud83d\ude22 sorry for taking so long, busy days this time.\n@marinkobabic if you can give a review and your input on this, it would be appreciated \u2764\ufe0f \n. Hi @HanixNicolas ,\nI agree this is a great fix \ud83d\udc4d I just could not find the time to review all the code and specially about the FCB / FCB Cache changes. Since it is in the driver part, I want to be sure that It cannot create crash / wrong behavior.\n@HanixNicolas have you taken a look it ?\n. @HanixNicolas Oh that would be awesome thank you!. Hi @fanlonglong8500 ,\nI am aware that this is taking too long (usually not the case \ud83d\ude22 ).\nWhat is taking me time to review is the FCB Cache that I still wonder if it is a good solution to do and if that the right way to do.\nOtherwise the pageio deadlock code is alright for me. Would you accept if I split your pull request (or you can do it) into two: pageio deadlock / FCB Cache ?\nLike that I would merge the pageio deadlock and it would give me some time to look at more the FCB Cache ?\n. Hi @fanlonglong8500 ,\nI have finally \ud83d\ude32 been able to import your deadlock fix \ud83d\udc4d \nhttps://github.com/dokan-dev/dokany/commit/607448a37d2134b3bcde19ae64d5330792bf0ae1\nAnd again....very sorry for this taking so much time \ud83d\ude22 Thanks again for your contribution !\nI let the PR open for the FCB cache for a future review.\n. Hi @jetwhiz ,\nDoes your windows is x86 ?. This is because of a mistake in the installer sorry...swaped x86 and x64 :'(\nhttps://github.com/dokan-dev/dokany/issues/628#issuecomment-348754879\nHe try to install the x64 binary that is named x86\nI fixed in the master. Hope to make a release in the next weeks !. Hi @KyleSanderson ,\nThanks you for the report.\n@Rondom , have you been able to reproduce in a VM ? Simple sleep and wake up produce the issue ?\n@KyleSanderson , This will be fixed in a 1.1.x, I do not plan to handle multiple version \ud83d\ude22 . @KyleSanderson API has been only break for 0.8.0 (Dec 10, 2015) and last month for 1.1.0 with a very tiny change that can be fixed in 5 sec by updating nuget package.\nWe know that API changes are very annoying that's why we only do it when it is really necessary.. Hi @KyleSanderson ,\nThis should be tested with 1.1.0. You can do it without updating winsshfs:\n- Copy 1.0.5/1.0.3 dokan1.dll in winsshfs folder.\n- Remove dokan 1.0.5/1.0.3.\n- Install dokan 1.1.0.\n- Run winsshfs.\nDokan 1.1.0 has a deadlock fix that has been introduced from 1.0.3 to 1.0.5. There is a change that is already solving the issue.\n. I just import changes that remove Dokan keep alive thread and replaced to a file keepalive. \nhttps://github.com/dokan-dev/dokany/commit/1fdf9fb23e20d75659bf8344ce8d19f1bbcda7c8\nThese changes will totally remove the reason why the FS is unmount currently after a sleep.\nDoes anyone could try to build the current master and give a feedback that it really fix on their side ?\n. 1.2.1 has been released \ud83c\udfc6 https://github.com/dokan-dev/dokany/releases/tag/v1.2.1.1000 with the new keepalive that should fix this behavior.. Different feedback seems to show the issue is now fully fixed. I let the ticket open temporary if anyone has questions on it.. Hi @peacebian ,\nThank you for the report and testing the 2.x.x !!! This is very appreciate \ud83d\udc4d specially when it even include fixes !\nI agree with your first issue, I will do a fix quickly.\nAbout the second, it is possible to set from the Dokan API the timeout dokanOptions.Timeout (option /i for the mirror)\nSee https://github.com/dokan-dev/dokany/blob/Corillian-asyncio/samples/dokan_mirror/mirror.c#L2611\n\nThreadpoolio, by default, Threadmaximum is 500,\nI use the Setthreadpoolthreadmaximum function to change the Threadmaximum The problem was avoided.\n\nWhat value did you set instead of Threadmaximum 500 ?\n. @peacebian , I have commit your first fix \ud83d\udc4d https://github.com/dokan-dev/dokany/commit/2d68b50aa63516a7a42d7231e2645f29018bbefb. Hello @peacebian ,\nHumm probably the number of thread should be a param here or get this value from a win32 function.\nOtherwise, do you still face a crash on heavy load ? did you try with fsx ?\nOn the CI, fsx seems to still be able crash the mirror.exe\nhttps://ci.appveyor.com/project/Maxhy/dokany/build/2.0.0-348/job/otjo71cso011md3s#L6149. Humm DokanOpenInfo && ProcessingContext  should not be null. I would guess this issue comes from the kernel write code in ProcessPartialWrite that provide wrong context.\nDo you see if the writer is happening on a context after a cleanup/close ?. Hi @peacebian ,\nThe issue should be in dokan2.dll, if it was in the sys, we would geat a blue screen.\nAfter it is possible that it is sys that send wrong data to the library and it crash, but at least we would start to know what is happening.. Hi @peacebian,\nThe purpose of OpenCount was to keep some information about the file during the process. And remove it when no handle (open) is active on it.\nThis is not an elegant way to do it. There is even a PR about to remove it https://github.com/dokan-dev/dokany/pull/440\nCannot not look at the code of the v2 now, but probably already removed.\n. Hi @TonyValenti ,\nYes, this project is actively maintained ! We have a great community around it, a good support from companies using it.\nHe has a lot of unit tests enabled at each commit to follow the stability \ud83d\udc4d \nYes, it can create a similar application as google drive. There are a couple of projects than you can see here\nAnd we also answer in less than 30 min \ud83d\ude04 \n. Hi @Rondom ,\nThe DOKAN_OPTIONS::Version is checked in the dokan.dll here.\nThe error is returned from DokanMain and checked in the mirror to display a message.\nIs that what you were looking for ?\n(makes me think had to increment the version for 1.1.0...)\n. @Rondom how would you imagine having a nice error here ? Should we add a function in the library like FormatMessage for GetLastError ? This way we would return a string to print depending on the error code retrieved.. @Rondom done with https://github.com/dokan-dev/dokany/commit/fc40ebb34e8e6b9072db9efce7c186972709a45a \ud83d\udc4d Thank you !\n. Hi @bailey27 ,\nThank you for the report ! It is right userTokenHandle was not closed \ud83d\ude22 \nI made the changes like @yin19941005 said \ud83d\udc4d and save the last error to not corrupt it as you told.\nhttps://github.com/dokan-dev/dokany/commit/413119b46a3a8addd28ff831502c71872b41d264. Hi @TonyValenti ,\nThere is the documentation here https://dokan-dev.github.io/dokany-doc/html/\nTell me if this answer your question.. Hi @TonyValenti ,\nDoes this answer your question ?. Hi @TonyValenti ,\nSorry I do not know a freelance available for now. I would like to give a hand but too much busy for now \ud83d\ude22 \nI hope someone here will see your message and contact you directly \ud83d\udc4d . Hi @luciham ,\nYou should report this to ceph-dokan. Do not hesitate to ping me \ud83d\udc4d . Hi @thany ,\nCan you try to install directly the VC 2017:\nhttps://download.visualstudio.microsoft.com/download/pr/11100229/78c1e864d806e36f6035d80a0e80399e/VC_redist.x86.exe\nhttps://download.visualstudio.microsoft.com/download/pr/11100230/15ccb3f02745c7b206ad10373cbca89b/VC_redist.x64.exe\nA rerun the dokan 1.1.0 installer. Also be sure there is no dokan1.sys in C:\\Windows\\System32\\drivers. Try to uninstall everything, remove the dokan1.sys, reboot and try again to install.. Hi @thany ,\nLet me know if you have more informations and I will reopen the issue.. Hi @GBR-613 ,\nVC++ 2017 runtime is needed. This was an error and has been fixed since the release.\nhttps://github.com/dokan-dev/dokany/compare/v1.1.0...master\nAlso I have updated the link now (that was redirect by microsoft) to the new one.\nThank your for the report @GBR-613 \ud83d\udc4d . Hi @AceHack ,\nDoes @marinkobabic has answer your question ?\n  . Hi @AceHack ,\nDokany would provide you the FS layer (it creates the device for you, handle kernel calls). The part of the work \"remaining\" is to implement the dokan API (CreateFile, Read, write, list folders, security informations, device space,...) by creating a bridge between gluster API and dokan.\nThe difficulty would depend on the gluster API or project like.\n. dokan has a FUSE API wrapper. Hi @AceHack ,\nDoes @Rondom has answer your question ? \n . @Rondom is right.\nFrom Microsoft doc, https://docs.microsoft.com/en-us/windows/iot-core/learn-about-hardware/peripheraldrivers\nYou will need to use the correct driver architecture.. Yes @AceHack , you can see here the output of InfVerif https://ci.appveyor.com/project/Maxhy/dokany/build/1.1.0-346/job/469mlt5yyja462yh#L1731\nThere is no error/warning for universal\nhttps://docs.microsoft.com/en-us/windows-hardware/drivers/devtest/infverif. Hi @AceHack ,\nDid I answer your question ?\n. Hi @Rondom ,\nI saw it too, tried to see how bad it is and how it should be done but found nothing unfortunately. \ud83d\ude22 . https://docs.microsoft.com/en-us/windows-hardware/drivers/install/inf-delfiles-directive\n```\ndestination-file-name\nSpecifies the name of the file to be deleted from the destination.\nDo not specify a file that is listed in a CopyFiles directive. If a file is listed in both a CopyFiles-referenced and a DelFiles-referenced section, and the file is currently present on the system with a valid signature, the operating system might optimize away the copy operation but perform the delete operation. This is very likely not what the INF writer intended.\n```\nBut SwapBuffers sample is also doing the same:\nhttps://github.com/Microsoft/Windows-driver-samples/blob/master/filesys/miniFilter/swapBuffers/swapBuffers.inf\n\ud83d\ude22 . Hi @Mattiwatti ,\nThank you for your feedback and research ! \ud83c\udfc6 \nI have tested the solution you provided and it also removes the warning on our side https://github.com/dokan-dev/dokany/pull/682. But as I understand doing this breaks the the 0x200 = SPSVCINST_STOPSERVICE flag on DelService like you said because windows do not understand it is an uninstall anymore right ?\n. Hello @gv2011 ,\nThis has already been report See https://github.com/dokan-dev/dokany/issues/628. @gv2011 Try to install the redist 2017 directly and run again the dokan installer.\nI will try to make a new installer soon.. @KerberX Hi,\nCan you try with the mount manager option and see if it improves the situation?. @KerberX Hi,\nWell found \ud83d\udc4dProbably there is a case not handle in MirrorGetFileSecurity that return INVALID_PARAMETER.\nIn your logs, there is an error \"GetSecurityInfo error: 5\" ERROR_ACCESS_DENIED probably releated to it.\nI could not get the hand on my env for now.\nan issue on the version 2.x.x, I made a fix not so long time ago but still another issue pending https://github.com/dokan-dev/dokany/issues/607 (during delete but should probably not be important for you). Hi @KerberX ,\nHave you been able to get more information or a workaround about this issue ?\n. Hi @KerberX ,\nDo you think there is a possibility you can do the test on Dokan version 1 ? Since v2 release there is a fix that could be what you are facing.. Hi @necrose99 ,\nThank you for the request but the issue are for the dokan project.\nYou should ask this in the google group. Maybe someone of the community is already working on it.\nhttps://groups.google.com/forum/#!forum/dokan. Hi @chludwig ,\nThank you for the report. This has been fixed for the next version https://github.com/dokan-dev/dokany/commit/77611b04fef95b5b09438f2a1761e1595404ce27 \ud83d\udc4d . Hi @RustyHacksaw ,\nThank you for your report \ud83d\udc4d \nAnd specially thanks for finding the reason of it !\nYour fix is correct but I remade it by moving the struct in the sys/public.h. This header is made to share struct and avoid such issue between library and kernel.\nhttps://github.com/dokan-dev/dokany/commit/230496e9606c2eae8b18e7566add2997a906c834\n(You are the author of the commit, hope that's alright for you)\n. @pweyzen Hi,\nFor building an application around dokany, you do not need vs2017.\nYou can rebuild the dokan library with your vs and link your application with it. It will work perfectly with the driver installed.\nWdk is only needed to build the kernel driver.. @pweyzen Oh, yes thats right. You will need the wdk for it \ud83d\ude22. @pweyzen Or you can load library the dokan1.dll instead of linkind with it. It would need a little of work but there is not so much calls at the end.. Hi @pweyzen ,\nI looked more at the build and the library only need the public.h in sys folder. public.h does not seems to have dependency with wdk header. It was made in such way to not need the wdk but maybe something broke since.\n\nIf I include \u201cdokan.h\u201d \u2013 it in turn wants to include ntifs.h\n\nit was the dokan.h of sys folder or library ? if you could be more precise to see if public.h is really wdk dependent.\nJust to know, in which language are you planning to build your FS ?\n(C# is doing everything with dllimpot so no need to rebuild the library to your VS tool version).. @pweyzen Perfect ! Thank you for your feedback \ud83d\udc4d . https://github.com/dokan-dev/dokany/issues/653#issuecomment-360982149. Hi @HanixNicolas ,\nIt is weird that it needs to be copied in system32. dokannp1.dll was at first in the folder but we moved it to installer folder, changed the dokanctl to register correctly the dll path.\nI also did the test on my VM and I do not face the issue (notepad 64bit).\n\nYour notepad seems to run 32 bit ? dokannp register is 64 bit so in case of....already seen some app 32 bits having issues on the NP\nDoes you notepad 64bit work ?\nedit: have the same issue with notepad 32bit should probably try to see the reason why 32bit cannot use the NP\n. Hi @HanixNicolas ,\nYes, I am aware of the 32-bit redirection. We even disable it in dokanctl (that register during install the network provider with dokanctl /i n.\nhttps://github.com/dokan-dev/dokany/blob/master/dokan_control/dokanctl.c#L116\nWhat I wonder is if we probably need to register the dokannp1 32 bits also in the register ? (so register 32 & 64 NP)\n. Hi @HanixNicolas ,\nI could do more test and you are right, register the dokannp1.dll inside the system32 fix the issue \ud83d\udc4d \nWhat bothers me here is that dokannp1.dll need dokan1.dll because of the usage of DokanGetMountPointList and it would mean to copy dokan1.dll in the system32.\n(for information it is me who moved it to install folder \ud83d\udc4e  https://github.com/dokan-dev/dokany/issues/171)\n@Rondom what do you think about install dokannp1 & dokan1.dll in system32 again ?\nnote: I just tried to install dokannp in %programfiles% and changed the providerPath to %programfiles% but could not make it work \ud83d\ude22 system32 seems to be the only redirected folder.\nAlso, virtualbox is also installing the network provider in system32 and wow64. My bad \ud83d\ude1e  @Rondom, forgot dokan1.dll is already in system32 folder. So the change has no issue and no reason to not be done \ud83d\udc4d \nI have revert https://github.com/dokan-dev/dokany/issues/171 -> https://github.com/dokan-dev/dokany/commit/405c71eb1070c7c01d512b9e8eeece6b99afabbf\nThank you for your time @HanixNicolas and feedback !. Hi @HanixNicolas ,\nThis seems to be a duplicate of https://github.com/dokan-dev/dokany/issues/653. Oh ok I see \ud83d\udc4d\nPVOID64 would be great. This would break (using previous library/kernel version with at patched library/kernel) the DokanGetMountPointList for 32bit kernel but I see no other way.. Hi @Rondom ,\nCurrent state:\n|   | Kernel x86| Kernel x64 |\n| ------------- | ------------- | ------------- |\n| Dll x86  | OK  | KO |\n| Dll x64  | KO | OK  |\n2 OK - 2 KO (50%)\nWith patched:\n|   | Kernel x86| Kernel x64 | Patched Kernel x86| Patched  Kernel x64 |\n| ------------- | ------------- | ------------- | ------------- | ------------- |\n| Dll x86  | OK  | KO | KO | KO |\n| Dll x64  | KO  | OK  | OK  | OK  |\n| Patched Dll x86  | KO  | OK | OK  | OK  |\n| Patched Dll x64  | KO | OK  | OK  | OK  |\n10 OK - 6 KO (60%)\nI agree that here we would break the Dll x86 / Kernel x86 and patched Dll with Kernel x86 but in other situations this would fix the current ABI (not from far %). So we are kind of in a situation where it would hurt but a little less than currently.\nMore over, this is not a main function used by dev I would say. It was made only for dokannp that is always registered x64 on every system x64 (kernel also x64).. Thank you @HanixNicolas \ud83d\ude80 \nCan you also rebase the history into one commit also ? and I will merge just after.. Hi @HanixNicolas ,\nCan you just rebase all this commit into one to keep the history clean ? \u2764\ufe0f . Hi @HanixNicolas ,\nI have added your fix of to the master #659\nhttps://github.com/dokan-dev/dokany/commit/3ff765496625f3300f667e21ab0e6f969093a777\nFor #657 we need to see how to act properly not to break ABI\n. Hi @HanixNicolas ,\nThe #657 has been included in the master https://github.com/dokan-dev/dokany/commit/3c53dddb99cf523c1b00a82b8fbc9ce37b8dbfd9\nThanks a lot for the both fix and your report \ud83d\udc4d \n. Hi @HanixNicolas ,\nThank you for the report and specially for providing the fix for it ! \ud83d\udc4d \nCan you create a different PR with this changes ?  This will give the time to think about #657. Hi @1364529444 ,\nWith MD executable are smaller, people can update by just replacing the library, no issue with shared memory.\nI think the difference is only about taste, no ? Or you see a real issue by using MD ?\n. Thank you @mccoysc for the input. I will make some test and see about it \ud83d\udc4d . Hi @atanamir , @mccoysc ,\nHaving MT and MD binaries in release would be a good idea. As currently we use MD, I would propose to have MT binaries in a subfolder of the release/installer.\nDoes one of you would be interested to do a PR for it ?\n. Hi @mccoysc ,\nThats right and this should have been reviewed \ud83d\ude22 \nAll structures shared between the library and kernel are in https://github.com/dokan-dev/dokany/blob/master/sys/public.h if you would like to review them.\nI have print all size of the structs for x86/x64\nprintf(\"DOKAN_CONTROL %u\\n\", sizeof(DOKAN_CONTROL));\n  printf(\"DOKAN_LINK_INFORMATION %u\\n\", sizeof(DOKAN_LINK_INFORMATION));\n  printf(\"DOKAN_RENAME_INFORMATION %u\\n\", sizeof(DOKAN_RENAME_INFORMATION));\n  printf(\"EVENT_START %u\\n\", sizeof(EVENT_START));\n  printf(\"EVENT_DRIVER_INFO %u\\n\", sizeof(EVENT_DRIVER_INFO));\n  printf(\"EVENT_INFORMATION %u\\n\", sizeof(EVENT_INFORMATION));\n  printf(\"EVENT_CONTEXT %u\\n\", sizeof(EVENT_CONTEXT));\n  printf(\"SET_SECURITY_CONTEXT %u\\n\", sizeof(SET_SECURITY_CONTEXT));\n  printf(\"SECURITY_CONTEXT %u\\n\", sizeof(SECURITY_CONTEXT));\n  printf(\"UNMOUNT_CONTEXT %u\\n\", sizeof(UNMOUNT_CONTEXT));\n  printf(\"FLUSH_CONTEXT %u\\n\", sizeof(FLUSH_CONTEXT));\n  printf(\"LOCK_CONTEXT %u\\n\", sizeof(LOCK_CONTEXT));\n  printf(\"VOLUME_CONTEXT %u\\n\", sizeof(VOLUME_CONTEXT));\n  printf(\"SETFILE_CONTEXT %u\\n\", sizeof(SETFILE_CONTEXT));\n  printf(\"FILEINFO_CONTEXT %u\\n\", sizeof(FILEINFO_CONTEXT));\n  printf(\"WRITE_CONTEXT %u\\n\", sizeof(WRITE_CONTEXT));\n  printf(\"READ_CONTEXT %u\\n\", sizeof(READ_CONTEXT));\n  printf(\"DIRECTORY_CONTEXT %u\\n\", sizeof(DIRECTORY_CONTEXT));\n  printf(\"CLOSE_CONTEXT %u\\n\", sizeof(CLOSE_CONTEXT));\n  printf(\"CLEANUP_CONTEXT %u\\n\", sizeof(CLEANUP_CONTEXT));\n  printf(\"CREATE_CONTEXT %u\\n\", sizeof(CREATE_CONTEXT));\n  printf(\"DOKAN_IO_SECURITY_CONTEXT %u\\n\", sizeof(DOKAN_IO_SECURITY_CONTEXT));\n  printf(\"DOKAN_IO_SECURITY_CONTEXT_INTERMEDIATE %u\\n\", sizeof(DOKAN_IO_SECURITY_CONTEXT_INTERMEDIATE));\n  printf(\"DOKAN_ACCESS_STATE %u\\n\", sizeof(DOKAN_ACCESS_STATE));\n  printf(\"DOKAN_ACCESS_STATE_INTERMEDIATE %u\\n\", sizeof(DOKAN_ACCESS_STATE_INTERMEDIATE));\n  printf(\"DOKAN_UNICODE_STRING_INTERMEDIATE %u\\n\", sizeof(DOKAN_UNICODE_STRING_INTERMEDIATE));\nResult:\n| Struct | x86 | x64 |\n| ---- | ---- | ---- |\n|DOKAN_CONTROL | 800 | 800|\n|DOKAN_LINK_INFORMATION | 12 | 12|\n|DOKAN_RENAME_INFORMATION | 12 | 12|\n|EVENT_START | 664 | 664|\n|EVENT_DRIVER_INFO | 144 | 144|\n|EVENT_INFORMATION | 48 | 48|\n|EVENT_CONTEXT | 176 | 176|\n|SET_SECURITY_CONTEXT | 20 | 20|\n|SECURITY_CONTEXT | 16 | 16|\n|UNMOUNT_CONTEXT | 132 | 132|\n|FLUSH_CONTEXT | 8 | 8|\n|LOCK_CONTEXT | 32 | 32|\n|VOLUME_CONTEXT | 8 | 8|\n|SETFILE_CONTEXT | 20 | 20|\n|FILEINFO_CONTEXT | 16 | 16|\n|WRITE_CONTEXT | 32 | 32|\n|READ_CONTEXT | 24 | 24|\n|DIRECTORY_CONTEXT | 28 | 28|\n|CLOSE_CONTEXT | 8 | 8|\n|CLEANUP_CONTEXT | 8 | 8|\n|CREATE_CONTEXT | 56 | 56|\n|DOKAN_IO_SECURITY_CONTEXT | 44 | 72|\n|DOKAN_IO_SECURITY_CONTEXT_INTERMEDIATE | 36 | 36|\n|DOKAN_ACCESS_STATE | 40 | 64|\n|DOKAN_ACCESS_STATE_INTERMEDIATE | 32 | 32|\n|DOKAN_UNICODE_STRING_INTERMEDIATE | 6 | 6| \nOnly DOKAN_IO_SECURITY_CONTEXT and DOKAN_ACCESS_STATE have different sizes.\nThe issue here is that we cannot break API, if changes would break API, we need to do it for the v2. See https://github.com/dokan-dev/dokany/blob/Corillian-asyncio/sys/public.h#L345-L349 in the V2 branch that already fix one of the issues.. Yes ofc, like DOKAN_ACCESS_STATE is a member of DOKAN_IO_SECURITY_CONTEXT.\nIf you can review the Corillian-asyncio branch it would be highly appreciated \ud83d\udc4d . the library is also used for msys2 & cygwin, COM will not be an option here \ud83d\ude1e . Hi @woachk ,\nWe are already using the SDK 16299 https://github.com/dokan-dev/dokany/blob/acdfbbda4e6e0fd0f183a3fa8ed894838d56bbbd/dokan/dokan.vcxproj#L32 \ud83d\udc4d \nI have add ARM64 for Windows 10 in a branch for now (see appveyor build)\nhttps://github.com/dokan-dev/dokany/commit/171b7d33f4d59e028c7a5ea7dd43502261756073\nI have also fixed TargetVersion in sys.vcxproj since ARM64 only exist for win10 and ARM only for Win8/Win8.1\nTell me if this seems to be alright for you. Merged: https://github.com/dokan-dev/dokany/pull/666 \ud83d\ude08 . Hi @shino0729 ,\nDo you have some logs of what his happening ?\nOn the CI the Winfstest for a mounted network drive.\nhttps://ci.appveyor.com/project/Maxhy/dokany/build/1.1.0-360/job/yn5lw5sikdaojnun#L8483\nIt is not exactly what you are doing but maybe a workaround ?\n. Hi @shino0729,\nOplock has been improved since but there is still some case where it is not fully handled.\nSee the FStest run on the CI: https://ci.appveyor.com/project/Maxhy/dokany/build/1.1.0-361/job/synasg4f3duvko31#L958\nWe are looking for some help on this. If anyone could take a look or give a hand, it would be awesome !\nHere is some informations about what the test are doing: https://docs.microsoft.com/en-us/previous-versions/windows/hardware/wlk/ff563405(v=vs.85)\nRun specified test with /t OplockBreakItoIITest or the group with /g OpLocks\nYou can use the CI to run the test on your fork also or install IFSTest with the scripts here: https://github.com/dokan-dev/dokany/tree/master/scripts and run https://github.com/dokan-dev/dokany/blob/master/samples/mirror_test.ps1\nSeems like there was no issue opened for it, I rename yours so \ud83d\udc4d \n. Coverity disabled for now https://github.com/dokan-dev/dokany/commit/b9b8981e6c838e216f8421999f4efaebfa622cde \nStill no update. Hi @Rondom ,\nYes coverity is back but since our build fail with http error 500 BUT the build is correctly sent and analyzed.\nhttps://ci.appveyor.com/project/Maxhy/dokany/build/1.1.0-407/job/byorkqn2pit61q2d#L524\nI have updated the api key as you said and disabled the return check value for now.\nhttps://github.com/dokan-dev/dokany/commit/3afd8dcb8def766885d33939e0f992c57cae6033\nI also try to contact coverity support for the reason. Have created an issue on coveritypublisher that we are using since it does not only affect dokan.\nhttps://github.com/csMACnz/coveritypublisher/issues/16. Hi @linyuan870 ,\nThank you for the report \ud83d\udc4d \nThis should be fixed with https://github.com/dokan-dev/dokany/commit/86a52bfa5a8239d9dfc439bde7420398cba7f265\nCan you give me a feedback on it ?. Fixed with https://github.com/dokan-dev/dokany/commit/1394841c806bc1992a412d142b29132284e4249a\nThank you @linyuan870  for you report and for your time \ud83c\udfc6 . Hi @linyuan870 ,\nSetLastError was the previous way to give information to the dokan library.\nhttps://github.com/dokan-dev/dokany/pull/130 Fuse has not been updated for this case since\nNow it is STATUS_OBJECT_NAME_COLLISION that need to be returned\nhttps://github.com/dokan-dev/dokany/blob/83be68351c70d916e58bdae8e3424e521fe07b04/dokan/create.c#L257\nTherefor, all SetLastError  could be even removed.\nIn your PR, you return always win_error(STATUS_OBJECT_NAME_COLLISION, true); without calling do_open_file. It should be called and return win_error(STATUS_OBJECT_NAME_COLLISION, true); in success.. @linyuan870 can you locate if the call we are looking for is made in impl_fuse_context::create_file ? and where exactly ?\nMaybe you are right, the res is not equal to 0 and my condition is not met.. @linyuan870 Can you print the return value of \nhttps://github.com/dokan-dev/dokany/blob/86a52bfa5a8239d9dfc439bde7420398cba7f265/dokan_fuse/src/fusemain.cpp#L557\nI would expected to be this one to be called in our case. . Thank you @linyuan870 \ud83d\udc4d  , -1073741771 \"is the correct value\".\nI changed the error type to long https://github.com/dokan-dev/dokany/commit/359f0853024658522ff1203a3e78a7c026b67b79\nhttps://github.com/dokan-dev/dokany/commit/90c02cdc2a3e0c7ffbdff8d785fb3d3cbb56cf62\nCan you try with it ?. @linyuan870 \n```\n      long res = do_open_file(file_name, share_mode, access_mode, dokan_file_info);\n      if (res == 0 &&\n        (creation_disposition == FILE_OVERWRITE_IF ||\n        creation_disposition == FILE_OPEN_IF)) {\n        return win_error(STATUS_OBJECT_NAME_COLLISION, true);\n      }\n  return res;\n\n```\nLike this so ?\nWhat do you mean by \"the front also called do_open_file function\" ? can you link this call ?. Perfect @linyuan870  \ud83d\udc4d Thank you !\nhttps://github.com/dokan-dev/dokany/commit/1394841c806bc1992a412d142b29132284e4249a. Hi @benrubson ,\nI understand the situation and specially for a server.\nThis would be possible by making the driver Plug and Play https://docs.microsoft.com/en-us/windows-hardware/drivers/kernel/implementing-plug-and-play\nthis requires some work and as far as I know only benefit in this situation to uninstall without reboot.\n. Hi @zanderz ,\nWe have not looked more about this feature for now. I cannot say if this can be long or not to implement.\n. @benrubson Hi,\nMirror is expected to be slower since it is on the top of ntfs. Also dokan do not have internal cache in purpose. It is the FS (mirror here) that need to manage it because dokan cannot know if files is remote and has been changed or removed outside for example. \nOtherwise I am impressed to see Dokan v2 slower, by design it should be the same or better.\nDo you have possibility to run a cpu analyse with visual studio to see exactly what is taking time for your test?. @benrubson when you did your test with the mirror, it is the mirror using the fuse wrapper or the dokan wrapper ?\nhttps://github.com/dokan-dev/dokany/blob/master/samples/dokan_mirror/mirror.c. Hi @benrubson ,\nthank you for updating your numbers, that made me scare not to see improvements for 2.x.x \ud83d\ude04 \nI gave an answer on another issue that can maybe be useful for you https://github.com/dokan-dev/dokany/issues/681#issuecomment-381321002\n. Hi @zhengwei0418 ,\nYou should find the informations in the wiki: https://github.com/dokan-dev/dokany/wiki\nhttps://github.com/dokan-dev/dokany/wiki/Build#signing\nBy your previous issue, see the API documentation: https://dokan-dev.github.io/dokany-doc/html/. Hi @pweyzen ,\nYou can find some different talks about this on the google group dokan:\nhttps://groups.google.com/forum/#!searchin/dokan/thumbnails%7Csort:date/dokan/_grlEGvmHvo/dInPEy35AgAJ\nhttps://groups.google.com/forum/#!searchin/dokan/thumbnails|sort:date/dokan/DOBqyhhmd-A/B6fqzHJDAQAJ\nhttps://groups.google.com/forum/#!searchin/dokan/thumbnails|sort:date/dokan/BqD9qA3nloY/TvH8-YzCBQAJ\n. Hi @zhengwei0418 ,\nAre you able to run a mirror ?. @zhengwei0418 the driver seems not to be installed. What happens if you run dokanctl /i d ?\nDid you sign the driver properly ? Did you enable the sign testing https://github.com/dokan-dev/dokany/wiki/Build#signing ?. If the driver is signed correctly, you should not have issues.. did you check the dokan sys installer by your installed ? Does it has the sign ?\nBe careful that there is two sys driver in the build output folder.. @zhengwei0418 \"DokanSign\" is a self-signed certificate. You need a valid certificate to install on production machines.\nYou need a valid certificate to sign your binary.. @zhengwei0418 Well you can do it if the certificate is properly installed that here do not seems to be the case.\nLook at the wiki dokany it explains how to use the dokan snapshot thay are self-signed. Hi @shino0729 ,\nBy reviewing the logs, during success there is two CreateFile at the same time, one with CREATE_NEW (CreateDirectory) and another with OPEN_EXISTING (probably to get info from the system) and both succeed.\nWith the sleep, both CreateFile are just OPEN_EXISTING and both returns ERROR_FILE_NOT_FOUND.\nSince there is no CREATE_NEW from CreateDirectory, I wonder if it is not a cache somewhere that will not try to create after getting ERROR_FILE_NOT_FOUND a from OPEN_EXISTING.\nCan you retry with a mirror using one thread ?\n. @MSN-06 How could it be?. Hi @Daniel-Abrecht ,\nThank you for your contribution.\nUsing strcpy is generally not recommended (code analyzer tools). I understand that here it is safe to use it but since was not hurting to change it I did. I probably failed in the len calculus, this need to be reviewed. Do you think, you could look at which one has an issue ?\n. Hi @Daniel-Abrecht ,\nLooks good to me \ud83d\udc4d \nThank you for the report again and for providing a quick fix in the same time \ud83e\udd47 !. Hi @michalpelka ,\nWe had already a report about such situation here Glad someone reopens about this \ud83d\udc4d \nhttps://github.com/dokan-dev/dokany/issues/417\nSee the answer of @marinkobabic can you give a try ?\n. Hi @michalpelka ,\nWindows seems to have different behavior regarding the FS name. I do not know much the reason for it and could not find a documentation about it. Seems like here it needs a windows FS.\nhttps://github.com/dokan-dev/dokany/blob/e95fe8fb65d4a08bba8256be254435db6683943f/samples/dokan_mirror/mirror.c#L1360-L1361\nThank you for your feedback. You are right @Rondom this should have been in the wiki from start. Just added it so https://github.com/dokan-dev/dokany/commit/d60990cfe4b80f73ec8c8ec576dcabff86539879\n@michalpelka does the issue is fully fixed on your side ?. Hi @zhengwei0418 ,\nCould you provide more information ? I do not really understand what you are trying to do.\nI will also need mirror logs.\n(No need to ping me, I have notification). Hi @wangrenyao ,\nThank you for the report.\nCan you provide some clear log of the mirror when only this happens in it ?\n. Hi @michalpelka ,\nThank you for the feedback and the numbers \ud83d\udc4d \nDokan is a FS Windows Driver. FUSE is a module include in the kernel Linux. I would say FUSE has a better chance to be faster at this level \ud83d\ude04 \nYour tests are correct and reflect what is expected. Request on Dokan for read and write will be slower for a couple of reasons that are more explained here https://github.com/dokan-dev/dokany/pull/307\nTL;DR:\n-Dokan Mirroring a device will take obviously more time than the device since it is on top of it (Mirror Time + Device Time).\n-Dokan is using a single channel communication between Kernel and Library User. Means that multi query will need to wait one by one to be sent to the user land. There is a solution proposed in the discussion linked previously that need to be implemented.\n-Dokan 1.x.x use fixed thread numbers when Dokan 2.x.x has Async thread that allows dynamic thread allocation for a number of queries (no query limit compared to version 1.x.x)\n-Most important here for your test: Dokan is not using cache. It means that for each request dokan library and your user FS (mirror) will be called.\nTherefore there is two features possible here to bring dokan to high performance: Improving the release on https://github.com/dokan-dev/dokany/pull/307 and Implement cache on the kernel side (and even https://github.com/dokan-dev/dokany/issues/291)\nIn general, this performance is not needed by most FS users (mirror) because the service used by them is often slower than the whole dokan/kernel query time.\nI hope this answer helps you \ud83c\udf79 . @kyanha Can you give a link to the failed build? (this is nor related to this issue if you can open a new one please). @kyanha this is not releated to the PR and has been fixed in the master https://github.com/dokan-dev/dokany/commit/397131fbfa2f21fe76c3519a9acebd3f998ea46f. Hi @savemysoul382 ,\nI just did the test, it is not a explorer crash but a reboot of it by Windows:\n\nWe are using a network provider attached to explorer and to remove it, we need to restart explorer to stop using it.. @g-fusion Hi,\nIt seems like there some acces from an anti-virus. Have you tried it without it? (uninstall). What mount option are you using ? (Current session ?)\nJust to know does the our mirror succeed to mount ?. @g-fusion Humm no current session option so. And what about the mirror? Does it work?. @g-fusion Check the first ntstatus you return at start. I already seen this behavior when an acces denied is return of a failure and makes the explorer think the device is not available.\nHere your problem is not that the device is not mounted! It is since you see it. The problem is to access it.. @g-fusion Yes exact! Offen It can be anti-virus or explorer calls, such softwares that will block other system calls before letting others apps using it. If you denied acces to them, he can probably take it like therefor no one has right also. Hi @DaniGTA,\nThis is not an issue. Please look at the mirror code and specially \u00e0 function this is comment.\nhttps://github.com/dokan-dev/dokany/blob/master/samples/dokan_mirror/mirror.c#L1370. @graphixillusion You will need to uncomment MirrorDokanGetDiskFreeSpace function and also set it to dokanoperations. https://github.com/dokan-dev/dokany/blob/master/samples/dokan_mirror/mirror.c#L1695\nhttps://github.com/dokan-dev/dokany/blob/master/samples/dokan_mirror/mirror.c#L1368-L1381\nonly this to change \ud83d\udc4d . yes \ud83d\ude03 . What I linked is already the partical example. @auxilix Have you build the projet after editing the mirror file?. Please see the documentation about GetDiskFreeSpace https://dokan-dev.github.io/dokany-doc/html/struct_d_o_k_a_n___o_p_e_r_a_t_i_o_n_s.html#a640f8ea90833fcd8885f59e63a58f3a7. Hi @zkoria ,\n\n\nYou can create a FS that display whatever you want. The mirror goal is to mirror another folder but in C# we have a RegistryFS that displays the registry as FS https://github.com/dokan-dev/dokan-dotnet/blob/master/sample/RegistryFS/Program.cs\nOtherwise there are some other projects using dokan if you want more examples: https://dokan-dev.github.io/\n\n\nCurrently DokanMain is a sync function but this will be changed in Dokan 2.x.x . For Dokan 1.x.x, you can simply call DokanMain in another thread without problems.\n\n\nMirror use the default value of the disk size when GetDiskFreeSpace is not implemented. You can see an example of GetDiskFreeSpace here:\nhttps://github.com/dokan-dev/dokany/blob/master/samples/dokan_mirror/mirror.c#L1370\n/a Allocation unit & /k Sector size are different options that affect file size on the FS but not the FS size.\n\n\nPlease see https://dokan-dev.github.io/dokany-doc/html/\n\n\n. Hi @zkoria ,\nCan this be closed ?. Hi @zkoria \n\nThat's the right way to do it \ud83d\udc4d \nI think here it is probably an issue of parameters set in GetDiskFreeSpace. Be sure to properly provide the correct value to FreeBytesAvailable, TotalNumberOfBytes ,TotalNumberOfFreeBytes\nhttps://github.com/dokan-dev/dokany/blob/master/samples/dokan_mirror/mirror.c#L1374-L1376\n\nI.\nThe installer set different environment variables that can be used like DokanLibrary1_LibraryPath_x64\nhttps://github.com/dokan-dev/dokany/blob/master/dokan_wix/Dokan_x64.wxs#L228\nPlease look at your computer environment for an easy way to see the full list.\nII.\nThere is a Qt project using Dokan. I do not know the state of it but you can probably find something in it \nhttps://github.com/shi-yan/QtDokanyExamples\nDokan installer is an msi, you should easily find information how to include an msi installer in the QT installer framework.\niii. Please see the documentation about unmount https://dokan-dev.github.io/dokany-doc/html/\nI hope this will help you to find the information that you are looking for.\n. Hi @zkoria ,\nI will try to answer all your questions and do not hesitate if I miss one.\nII. If you cannot implement GetFileSecurity. It is better to return STATUS_NOT_IMPLEMENTED\nhttps://github.com/dokan-dev/dokany/blob/master/dokan/security.c#L156-L162\nThis will call an internal DefaultGetFileSecurity that will let your user have access to the context menu.\nAbout QT capabilities I will not be able to judge. I know QT but never used in this context. What I can see is that you will have a bottleneck by using a static function whatever context is called.\nIII. Yes, this seems to be the correct way that you are using to dismount\n\nIt is alright to open the directory during FindFiles, the mirror is doing the same by calling FindFiles himself. Issues could happen if you keep the handle open too long and have chance to conflict with a CreateFile that request no sharing for example and would fail here regarding the situation.\n\n1.1 Dokan cannot tell you what the purpose of the CreateFile that he is getting from the kernel else that the desired access. He can only provide you the processId that request this createfile.\nAbout analyze behavior of software, they are all different and change often at each version. I don't think it is true science to say \"this createfile comes from VLC that will do this because we got this createfile before doing this\". \n1.1.i. & 1.1.ii.\nYour question seems to be too generic and do you really would like to achieve here ?\n1.1.iii. \n2. ThreadCount: https://github.com/dokan-dev/dokany/blob/master/dokan/dokan.h#L106-L107\nhttps://github.com/dokan-dev/dokany/blob/af8ddfc372246b01832ea37924ef513ddc3ed299/dokan/dokan.c#L209-L218\n3. Can you link the comment you are talking about ?\n. Hi @zkoria ,\nThreadCount should be set depending on the computer capacity and needs of the app.\nAbout Directory, please see https://dokan-dev.github.io/dokany-doc/html/ \"Dokan File Info Life Time\"  -> DOKAN_FILE_INFO.IsDirectory\n1.1\nYour need is kind of special and I think every solution will be a hack in a way\n\nif we use ReadFiles it is invoked more than once per open file (except for the TXT) which is also a problem for us since Every catch we send a process.\n\nWhat if you flag the usage for the first read by process here ? Like that you wouldn't have the invoked for each read.. Thank you for the report @kyanha \nThis has already been fixed here https://github.com/dokan-dev/dokany/commit/397131fbfa2f21fe76c3519a9acebd3f998ea46f. Hi @nimin ,\nDo you have a stable release installed for your build mirror to connect ?. Hi @nimin ,\nI just did the test and had no issue.\n\nYou need to install dokan using the .exe installer or run dokanctl /i d after copy the driver in the driver windows folder.. https://github.com/dokan-dev/dokany/commit/7d1f001bb7117c395a7c1f78f78365cef8891c17. Hi @kenjiuno ,\nThank you for the report.\nThis seems to be duplicate with https://github.com/dokan-dev/dokany/issues/634\nBut really interesting about modern standby, that something we never heard for now.\nWe need kernel logs or hardware to be able to reproduce the issue.\n. Hi @sgraves66 ,\nFILE_RESERVE_OPFILTER is just forward to the FS but you should just ignore it. The oplock is managed  before you get the request by dokan driver during CreateFile.. @sgraves66 Can you try with the mount manager option?. Hi @naveen508 ,\nThank you for the report.\nThis is duplicate with https://github.com/dokan-dev/dokany/issues/528. Hi @InspirationHello ,\nThank you for your pull request.\nCan you give some context on the issue you faced and how to reproduce it ?\nThe files were blinking because of the notification happening too often ?\nHave you tried to only call DokanNotifyReportChange(fcb, FILE_NOTIFY_CHANGE_DIR_NAME when ccb has the flag ? We should probably only notify when it is the request that holds the flag.\nOplockReadBreakItoIITest test seems to fail with this change.\nhttps://ci.appveyor.com/project/Maxhy/dokany/build/1.1.0-431/job/fg9xm7q4c2gr1ect?fullLog=true#L1055\n. @InspirationHello have you been able to test using ccb for notification ?\nSorry have been quite busy this day \ud83d\ude22 . Hi @InspirationHello ,\nI have include one of your changes in the master https://github.com/dokan-dev/dokany/commit/29180c482f124bc6bbe9d9b14aa8704b007fe42f Thank you for your contribution.\nThe other part seems to not be the correct way to do looking at the test failure.. Hi @daeyeonjoo ,\nCurrently Quotas is not supported by Dokan.. Hi @zhengwei0418 ,\nHave you tried to enable FILE_CASE_SENSITIVE_SEARCH to the FileSystemFlags ?\nhttps://github.com/dokan-dev/dokany/blob/master/samples/dokan_mirror/mirror.c#L1323\nYou will probably also need to add the flag FILE_FLAG_POSIX_SEMANTICS to CreateFile for making case sensitive. Hi @zhengwei0418 ,\nThank you for your feedback. I am not sure there is a solution for previous windows version \ud83d\ude1e \nOtherwise would be to lower all file names but that does not sound like the best solution.\n. @Pagliacii Hi,\nWe will need the kernel logs here to see what is happening.. Hi @cdisti ,\nThank you for the kernel logs \ud83d\udc4d \n00571053    46.90003967 [DokanFS] <== ReleaseTimeoutPendingIRP  \n00571054    46.90004730 [DokanFS]   Timeout reached so perform an umount    \n00571055    46.90004730 [DokanFS] ==> DokanUnmount  \n00571056    46.90006638 [DokanFS]   Send Unmount to Service : \\Volume{d6cc17c5-1732-4085-bce7-964f1e9f5de9}\nSeems like the device is unmount for a keep alive coming too late.\n@JokerQyou & @cdisti would you be able to describe the environement and what kind of different software you would have in mind that could slow down the communication between the mirror and the kernel driver ?\nLine 1285: 00001285 0.00577425  [DokanFS]   IOCTL_KEEPALIVE \n    Line 2505: 00002505 2.99815059  [DokanFS]   IOCTL_KEEPALIVE \n    Line 6393: 00006393 5.99667597  [DokanFS]   IOCTL_KEEPALIVE \n    Line 79748: 00125129    8.99386978  [DokanFS]   IOCTL_KEEPALIVE \n    Line 88216: 00371856    14.99316120 [DokanFS]   IOCTL_KEEPALIVE \n    Line 88256: 00371896    17.99270248 [DokanFS]   IOCTL_KEEPALIVE \n    Line 90120: 00373760    20.99281693 [DokanFS]   IOCTL_KEEPALIVE \n    Line 97545: 00383509    23.99188423 [DokanFS]   IOCTL_KEEPALIVE \n    Line 101536: 00569122   29.99100113 [DokanFS]   IOCTL_KEEPALIVE \n    Line 104534: 00572120   46.91251755 [DokanFS]   IOCTL_KEEPALIVE\nLast keep alive is coming a little too late. Default timeout is set to 15sec...and keep alive is sent every 3sec...\nYou can play with the timeout option to grow it...but it is still wierd that something on the computer is removing/slowing the communication so much that a 3sec ping move to more than 15sec\n/i (Timeout in Milliseconds ex. /i 30000)\\t Timeout until a running operation is aborted and the device is unmounted.. @cdisti Yes it is possible that an anti-virus behave in such way. It is not directly the IO API that they affect but the communication channel that they probably in real time scan and slow down.. @JokerQyou Thank you for the feedback. Do you know if it was the last version of Kaspersky?. @cdisti could you also confirm if this is the same situation for you ?. Thank you @cdisti for your feedback! This is interesting to know with Windows mount manager. probably symantec is finding the mount \"not common\" and choose to remove it if the mount manager is not used to create the device. There is probably not much to be able to do here.. @abrandeau Hi,\nYou can keep a list on your side of current open files to know this.. Un service fran\u00e7ais :) ?\nDokan et CBFS sont deux produits matures. Je pense que le choix se fait d'un point de vue des gouts et besoin de chacun.. D'accord je vois. Dokany n'a pas de fonction dans le m\u00eame genre malheureusement.\nPour information, il est possible d'avoir le processId de la requ\u00eate si cela peu aider.. Oui ils ont m\u00eame du Google AdSense contre nous \ud83d\ude04 \nJe vous laisse imaginer les raisons de faire cela \u00e0 un projet open source \ud83d\udc4d \nDokan and CBFS are frequently compared. EldoS company is not always playing fair play against Dokan (misleading Dokan/CBFS comparison, aggressive marketing communication, Dokan thread hijack..) but that's the game and few years of Dokan inactivity didn't help. Their product is quite good otherwise and they offer a large environment in addition to basic device driver api. License cost is few thousand of $$$ (they used to provide discount and sometimes free license for open source projects). See also migrating from [CBFS to Dokan](CBFS to Dokan).\nhttps://github.com/dokan-dev/dokany/wiki/Unsupported. Bonjour @abrandeau ,\nJe n'ai que tr\u00e8s peu utiliser CBFS. Je ne pourrai pas vous aider dans cette comparaison.\nVous pouvez demander \u00e0 la communaut\u00e9 sur le google group si vous voulez.\n. https://dokan-dev.github.io/dokany-doc/html/\nIl y a une explication des s\u00e9quences d'op\u00e9rations qui vous aidera certainement.. Sur la page:\n```\nThese functions are typically invoked in this sequence:\nDOKAN_OPERATIONS::ZwCreateFile <- Ouverture\nOther functions (like DOKAN_OPERATIONS.ReadFile or DOKAN_OPERATIONS.WriteFile)\nDOKAN_OPERATIONS::Cleanup\nDOKAN_OPERATIONS::CloseFile <- Fermeture\n\n``. Il peut y avoir plusieurs CreateFile pour le m\u00eame fichier en meme temps et donc plusieurs CloseFile par la suite.. Ce comportement n'a rien \u00e0 avoir avec Dokan. C'est le syst\u00e8me Windows qui fonctionne de cette mani\u00e8re.\nTu dois incr\u00e9menter le nombre d'ouverture et d\u00e9cr\u00e9ment\u00e9 dans le close pour savoir ou tu en es.\nPlusieurs createfile pour plusieurs applications / plusieurs CreateFile d'une m\u00eame application \ud83d\ude03 . @abrandeau je crois que \u00e0 partir d'ici je vais devoir vous laisser investiguer par vous m\u00eame :). @TrabacchinLuigi I did not really looked for now exactly but would it be helpful that dokan open a handle on the directory with restricted permissions to create acces denied for outside delete rename?. Appveyor has a new policy sorryArtifacts older than 6 months will be deleted after June 17th, 2018. For more details see Artifacts retention policy. `. Hi @shino0729 ,\nHave you tried to call GetDiskFreeSpaceEx when mounting with mount manager ?\n. Hi @shino0729 ,\nI just made a test with a sample and GetDiskFreeSpaceEx correctly return the good value when use on a Dokan device.\nI think this can be closed regarding your previous ticket. If you have any other question do not hesitate.\n. My bad \ud83d\ude1e made the change after trying to fix some sonarqube report and missed this point.\nThank you for the report @Daniel-Abrecht !. Hey @kyanha , Sonar allows opensource to use it for free. You can find the link in the readme: https://sonarcloud.io/dashboard?id=dokany. I have created a ticket to keep in mind for dokan-dotnet https://github.com/dokan-dev/dokan-dotnet/issues/191\nFor other projects, have to see with other maintainers if they plan to do it (also probably add a CI like appveyor at first \ud83d\ude03 ). Thank you @Daniel-Abrecht  !. https://github.com/dokan-dev/dokany/issues/684. @abrandeau Hello,\nYes it is possible. Please see processid of the dokanfileinfo.. Hi @abrandeau ,\nCreateFile / CloseFile are well explained on the Microsoft documentation. You will find what you are looking for in it.\n. Hi @FraserElectronics ,\nIf the file disappears, it means a delete query has been returned as succeed. Be sure to have correctly returned an AccessDenied to all delete queries.\n. @FraserElectronics Have you looked at the deletefile or deletedirectory are not called?. Have you tried to make a simple console app that delete a file on your FS, enable dokan logs on your FS and see exactly what is happening ?\nYou can share it if you would like.. Hi @FraserElectronics ,\nThank you for the test code. Could you provide the dokan logs ? This is really needed to see exactly what is happening.. Yes, by default mirror has console output. (It can also be changed by implementing the logger interface). @FraserElectronics you should check the value of DeleteOnClose during CreateFile. Using the mirror sample c#, I run del test.txt and get this output:\n01/06/2019 13:21:55 - [DokanNet] CreateFileProxy : \\Users\\liryna\\test.txt\n01/06/2019 13:21:55 - [DokanNet]        CreationDisposition     Open\n01/06/2019 13:21:55 - [DokanNet]        FileAccess      Delete\n01/06/2019 13:21:55 - [DokanNet]        FileShare       Delete\n01/06/2019 13:21:55 - [DokanNet]        FileOptions     DeleteOnClose\n01/06/2019 13:21:55 - [DokanNet]        FileAttributes  0\n01/06/2019 13:21:55 - [DokanNet]        Context {<null>, False, False, False, False, #1280, False, False}\n01/06/2019 13:21:55 - [Mirror] CreateFile('\\Users\\liryna\\test.txt', {System.Object, False, False, False, False, #1280, False, False}, [Delete], [Delete], [Open], [DeleteOnClose], [0]) -> Success\nDeleteOnClose is provided in FileOptions\nIn the log you provided, I cannot see this step since from the start since ObjectNameNotFound is returned.\nCan you add a check for DeleteOnClose and only return access denied at this moment ?\n. Running the FS with one thread will give a clearer output \ud83d\ude03 \nAlso, you should set info.IsDirectory if the createfile is targeting an existing file/directory\nhttps://github.com/dokan-dev/dokan-dotnet/blob/fa556dfc3631eb8feed374322f4285cf17194f88/sample/DokanNetMirror/Mirror.cs#L162. Hi @infeo ,\nDriver letter A is windows reserved letter for historical floppy disk driver \ud83d\udc4d as you seen on the superuser questions.\nThe code is just to avoid to get an error from windows later.\n. Hi @infeo ,\nI see your point \ud83d\udc4d I see no issue remove this if on Windows 7 (lower supported OS) mount with and without mount manager work for A & B.\nThis code comes from the original dokan code that supported XP.\n. Hi @infeo ,\nWindows 7 propose the usage and the mount of a driver with the letter A. I have changed the condition to allow A also therefore \ud83d\udc4d https://github.com/dokan-dev/dokany/commit/af8ddfc372246b01832ea37924ef513ddc3ed299\nThank you for your feedback !\n. Hi @lins05 ,\nThe vc redist is needed by the dokan library and driver not by the installer himself.\nVC dependency is here to be sure that the computer has the environment to run dokan/seafile without issue.\nIf you are really looking to remove the VC dependency, it would need to build dokan with MT & create an installer without the dependency.\nhttps://github.com/dokan-dev/dokany/issues/660\n. Ok @lins05 I see. @Rondom is right. Normally we should detect and install the framework before running dokan installers.\n@Rondom the 4.7.2 is not really the solution by looking at the version restricted windows version \ud83d\ude03  https://docs.microsoft.com/en-us/dotnet/framework/migration-guide/versions-and-dependencies\n4.6.1 is probably the best version to go if we would like to move.\nBut what am surprise is that 4.0 should be the best for Win 7, I really wonder why it would fail the installation. @lins05 do you have any error / log ? Maybe we can improve this part.\nIf we would like to rewrite in c++ the customaction. This seems to be possible:\nhttps://github.com/rstropek/Samples/tree/master/WiXSamples/VisualStudioSnippetInstaller\nHave to look if this does not create another issue where a redist need to be installed before..\n. https://github.com/dokan-dev/dokany/commit/3812f49f1f73eb44f5d9d08cd38e5f14f1374baf\nCustomAction has been moved to CPP. The redistribuable dependency is a wrong question since we already install it before running the dll \ud83d\ude04 .\nCurrently the code gives the same result as the C#. We are just missing the dokanctl output in case of error. This requires to redirect the output of CreateProcess well described here https://docs.microsoft.com/en-gb/windows/desktop/ProcThread/creating-a-child-process-with-redirected-input-and-output\nI think I will open a ticket for this as evolution.\n. @Rondom https://github.com/dokan-dev/dokany/commit/d725c58856a14ad58d025a815bdfef5c86daa808 done \ud83d\udc4d \ud83d\ude03 \nHumm I think even the output is mandatory here. dokanctl does not provide enough different return code. This should be done before next pre-release. Dokanctl output redirection has been implemented https://github.com/dokan-dev/dokany/commit/5401ccb4ae11158fd387c6d17d91f08a823a2303\nWe now have the same behavior that before without the .NET dependency.. Hi @KOLANICH ,\nWhat would be the purpose of this even if possible (no idea with cmake handle the windows driver kit) since the project only target windows ?. I see your point @KOLANICH . Please come back with any viable solution that you will find out. I will be glad to take a look at it.\n. Hi @linyuan870 ,\nThis issue has only been report here https://github.com/dokan-dev/dokany/issues/293\nWe are still looking for a reason for this \ud83d\ude22 . @Rondom I would say that it only works starting one of the win10 build version but previous version still needs the conversion.. Hi @linyuan870 ,\nThe code is fixing the behavior \ud83d\udc4d Thank you\nThere is just a couple of warnings that need to be fixed https://ci.appveyor.com/project/Maxhy/dokany/build/1.1.0-437/job/a6063i7j3anlyi9k#L7900 and also make the function only called when repase is used.\nMore over, also handle the return bool from RevertFileName in case of failure.\n. Did not update my windows for now to test it. If this is working, this function should be conditioned on the windows version also yes good point \ud83d\udc4d . Hi @linyuan870 ,\nThank you for the quick changes \ud83d\udc4d This seems to be the good way to do it.\nYou should just set dwOSVersionInfoSize from the struct before calling the function.\nSee https://docs.microsoft.com/en-us/windows-hardware/drivers/ddi/content/wdm/ns-wdm-_osversioninfow. Thank you @linyuan870 I will do the last test tomorrow and you will be able to make stash all the commit into one . Hi @linyuan870 ,\nYes sorry you did the changes correctly. I am just missing time right now but planned to include it for the next release that should be this week or next one \ud83d\udc4d . Hi @linyuan870 ,\nI have been able to do the test and found no issue to it. Names are correctly converted thank you \ud83d\udc4d . Hi @KOLANICH ,\ndokan_fuse Includes files from sys driver\nhttps://github.com/dokan-dev/dokany/blob/master/dokan_fuse/CMakeLists.txt#L14-L17\nMoving to another repository would mean to duplicate files OR to create a git submodule that target dokan.\nIt is a valid evolution but I cannot judge if this is really used and needed by the community so If anyone is interested in it, please let us know.\n. Oh thank you @Daniel-Abrecht ! SOURCE_SUBDIR seems to perfectly do the job ! \ud83c\udf96 \nI think your answer is exactly what someone would want to find for using dokan with ExternalProject \ud83d\udc4d . @KOLANICH the download size does not worth to split the project in 3 parts. Hi @samokhodkin ,\nThis means the read/write operations can happen multiple times at the same moment for the same handle/context. Specially during OVERLAPPED read/write\nSee https://docs.microsoft.com/en-us/windows/desktop/sync/synchronization-and-overlapped-input-and-output\nYou are right about the mirror. This should be fixed \ud83d\udc4d . Yes, it is supported and there is not need for you to do anything else that usual for asynchronous.\nOtherwise ! Had to point that yes it is an issue in the current mirror BUT @Corillian had already fixed it in a PR here: https://github.com/dokan-dev/dokany/tree/Corillian-asyncio\nhttps://github.com/dokan-dev/dokany/blob/Corillian-asyncio/samples/dokan_mirror/mirror.c#L1443. Hi @linyuan870 ,\nCould you explain a little more the issue ?. Hi @linyuan870,\nIO_REPARSE_TAG_SYMLINK is part of the reparse point feature currently not supported by Dokan.\nWith the support of this feature, dwReserved0 will be correctly set with the correct flags.. How did you found this ? EaSize is for extended attributes.. Yes, I tried to found also but could not. Probably it is really linked to the repase point feature. The kernel probably link both information to create dwReserved0.. Hi @shino0729 ,\nPlease see the documentation https://github.com/dokan-dev/dokany/blob/5401ccb4ae11158fd387c6d17d91f08a823a2303/dokan/dokan.h#L541-L544. Hi @lumip ,\nThis is not a dokan issue. The call is preceded by a CreateFile that request a directory. It is at this point that the CreateFile will need to fail with STATUS_NOT_A_DIRECTORY\nSee https://github.com/dokan-dev/dokany/blob/master/samples/dokan_mirror/mirror.c#L382\n. @lumip This part is explained in the documentation. If something is missing I will be glad to add it.. @lumip Yes this is another similar case :-D it is handle \u00e0 little more at the beginning of the mirror CreateFile. I cannot give a direct link right now but you should find it.\nI will use your remarks to complet the document ^^. For the C API, it is probably cleaner to give all the information to the dev and let him decide.\nFor the C#, that's another story, it is right that this file is lacking from the framework \ud83d\ude22 . Hi @thinkport ,\nDokan is able to open big files.\nEven one of my best test is a folder of +200 images high quality > 100M \ud83d\ude0e and display them.\nAre you sure you are using the right application that can handle such file size ?. @thinkport OK that's looks more like a lock issue. There \u00e0 PR that should fix this issue for the next release coming next week.. Hi @thinkport ,\nWhen you say fix, you mean with this PR https://github.com/dokan-dev/dokany/pull/632 that I was talking about ?. Full reinstall with cache removed, give another error \ud83d\udc4d \n``\n:: Retrieving packages...\n mingw-w64-i686-libiconv-1.15-3-any                                                                                   619.4 KiB   929K/s 00:01 [######################################################################################] 100%\n mingw-w64-i686-gmp-6.1.2-1-any                                                                                       471.7 KiB  3.44M/s 00:00 [######################################################################################] 100%\n mingw-w64-i686-mpfr-4.0.1-2-any                                                                                      323.3 KiB  63.1M/s 00:00 [######################################################################################] 100%\n mingw-w64-i686-mpc-1.1.0-1-any                                                                                        79.1 KiB  15.4M/s 00:00 [######################################################################################] 100%\n mingw-w64-i686-libwinpthread-git-6.0.0.5174.9726fb77-1-any                                                            44.0 KiB  43.0M/s 00:00 [######################################################################################] 100%\n mingw-w64-i686-gcc-libs-7.3.0-2-any                                                                                  636.2 KiB  4.67M/s 00:00 [######################################################################################] 100%\n mingw-w64-i686-bzip2-1.0.6-6-any                                                                                      78.9 KiB  77.1M/s 00:00 [######################################################################################] 100%\n mingw-w64-i686-zlib-1.2.11-3-any                                                                                     173.4 KiB  84.7M/s 00:00 [######################################################################################] 100%\n mingw-w64-i686-binutils-2.31.1-1-any                                                                                  12.1 MiB  9.03M/s 00:01 [######################################################################################] 100%\n mingw-w64-i686-headers-git-6.0.0.5176.1fd1a585-1-any                                                                   5.1 MiB  9.48M/s 00:01 [######################################################################################] 100%\n mingw-w64-i686-crt-git-6.0.0.5176.1fd1a585-1-any                                                                       2.1 MiB  14.4M/s 00:00 [######################################################################################] 100%\n mingw-w64-i686-isl-0.19-1-any                                                                                        589.0 KiB  95.9M/s 00:00 [######################################################################################] 100%\n mingw-w64-i686-windows-default-manifest-6.4-3-any                                                                     12.9 KiB  12.6M/s 00:00 [######################################################################################] 100%\n mingw-w64-i686-winpthreads-git-6.0.0.5174.9726fb77-1-any                                                              51.4 KiB  50.2M/s 00:00 [######################################################################################] 100%\n mingw-w64-i686-gcc-7.3.0-2-any                                                                                        26.9 MiB  9.09M/s 00:03 [######################################################################################] 100%\n mingw-w64-i686-gcc-ada-7.3.0-2-any                                                                                    18.1 MiB  9.01M/s 00:02 [######################################################################################] 100%\n mingw-w64-i686-gcc-libgfortran-7.3.0-2-any                                                                           469.7 KiB  91.7M/s 00:00 [######################################################################################] 100%\n mingw-w64-i686-gcc-fortran-7.3.0-2-any                                                                                 8.2 MiB  10.0M/s 00:01 [######################################################################################] 100%\n mingw-w64-i686-gcc-objc-7.3.0-2-any                                                                                   13.5 MiB  9.17M/s 00:01 [######################################################################################] 100%\n mingw-w64-i686-expat-2.2.5-1-any                                                                                     140.0 KiB   137M/s 00:00 [######################################################################################] 100%\n mingw-w64-i686-libffi-3.2.1-4-any                                                                                     46.9 KiB  45.8M/s 00:00 [######################################################################################] 100%\n mingw-w64-i686-mpdecimal-2.4.2-1-any                                                                                 249.2 KiB   122M/s 00:00 [######################################################################################] 100%\n mingw-w64-i686-gettext-0.19.8.1-4-any                                                                                  3.2 MiB  11.5M/s 00:00 [######################################################################################] 100%\n mingw-w64-i686-libtre-git-r128.6fb7206-2-any                                                                          84.1 KiB  82.1M/s 00:00 [######################################################################################] 100%\n mingw-w64-i686-libsystre-1.0.1-4-any                                                                                  23.7 KiB  23.1M/s 00:00 [######################################################################################] 100%\n mingw-w64-i686-ncurses-6.1.20180526-1-any                                                                           1764.3 KiB  12.3M/s 00:00 [######################################################################################] 100%\n mingw-w64-i686-libtasn1-4.13-1-any                                                                                   187.0 KiB  91.3M/s 00:00 [######################################################################################] 100%\n mingw-w64-i686-p11-kit-0.23.12-1-any                                                                                 277.5 KiB   135M/s 00:00 [######################################################################################] 100%\n mingw-w64-i686-ca-certificates-20170211-2-any                                                                        424.7 KiB   104M/s 00:00 [######################################################################################] 100%\n mingw-w64-i686-openssl-1.0.2.o-1-any                                                                                   2.8 MiB  18.2M/s 00:00 [######################################################################################] 100%\n mingw-w64-i686-tcl-8.6.8-1-any                                                                                         3.0 MiB  10.8M/s 00:00 [######################################################################################] 100%\n mingw-w64-i686-tk-8.6.8-1-any                                                                                       1893.5 KiB  13.1M/s 00:00 [######################################################################################] 100%\n mingw-w64-i686-xz-5.2.4-1-any                                                                                        303.6 KiB  98.8M/s 00:00 [######################################################################################] 100%\n mingw-w64-i686-termcap-1.3.1-3-any                                                                                    26.7 KiB  0.00B/s 00:00 [######################################################################################] 100%\n mingw-w64-i686-readline-7.0.005-1-any                                                                                356.7 KiB  87.1M/s 00:00 [######################################################################################] 100%\n mingw-w64-i686-sqlite3-3.24.0-1-any                                                                                  808.8 KiB  87.8M/s 00:00 [######################################################################################] 100%\n mingw-w64-i686-python3-3.7.0-10-any                                                                                   15.2 MiB  9.36M/s 00:02 [######################################################################################] 100%\n mingw-w64-i686-gdb-8.1-3-any                                                                                           3.3 MiB  11.8M/s 00:00 [######################################################################################] 100%\n mingw-w64-i686-libmangle-git-6.0.0.5173.49ca7cfe-1-any                                                                33.2 KiB  0.00B/s 00:00 [######################################################################################] 100%\n mingw-w64-i686-make-4.2.1-2-any                                                                                      140.6 KiB  68.6M/s 00:00 [######################################################################################] 100%\n mingw-w64-i686-pkg-config-0.29.2-1-any                                                                               248.7 KiB   121M/s 00:00 [######################################################################################] 100%\n mingw-w64-i686-tools-git-6.0.0.5173.49ca7cfe-1-any                                                                   253.7 KiB  82.6M/s 00:00 [######################################################################################] 100%\n mingw-w64-i686-winstorecompat-git-6.0.0.5173.49ca7cfe-1-any                                                           32.1 KiB  0.00B/s 00:00 [######################################################################################] 100%\n mingw-w64-i686-c-ares-1.14.0-1-any                                                                                    93.7 KiB  91.5M/s 00:00 [######################################################################################] 100%\n mingw-w64-i686-brotli-1.0.5-1-any                                                                                    320.0 KiB  78.1M/s 00:00 [######################################################################################] 100%\n mingw-w64-i686-libunistring-0.9.10-1-any                                                                             626.5 KiB  87.4M/s 00:00 [######################################################################################] 100%\n mingw-w64-i686-libidn2-2.0.5-1-any                                                                                   115.7 KiB  56.5M/s 00:00 [######################################################################################] 100%\n mingw-w64-i686-libmetalink-0.1.3-3-any                                                                                59.7 KiB  58.3M/s 00:00 [######################################################################################] 100%\n mingw-w64-i686-libssh2-1.8.0-1-any                                                                                   228.5 KiB  55.8M/s 00:00 [######################################################################################] 100%\n mingw-w64-i686-jansson-2.11-1-any                                                                                     63.9 KiB  62.4M/s 00:00 [######################################################################################] 100%\n mingw-w64-i686-nghttp2-1.32.0-1-any                                                                                  196.8 KiB  96.1M/s 00:00 [######################################################################################] 100%\n mingw-w64-i686-curl-7.61.0-1-any                                                                                    1121.8 KiB  84.3M/s 00:00 [######################################################################################] 100%\n mingw-w64-i686-jsoncpp-1.8.4-1-any                                                                                   298.6 KiB   146M/s 00:00 [######################################################################################] 100%\n mingw-w64-i686-lz4-1.8.2-1-any                                                                                       130.5 KiB  63.7M/s 00:00 [######################################################################################] 100%\n mingw-w64-i686-lzo2-2.10-1-any                                                                                       102.0 KiB  99.6M/s 00:00 [######################################################################################] 100%\n mingw-w64-i686-nettle-3.4-1-any                                                                                      431.6 KiB  84.3M/s 00:00 [######################################################################################] 100%\n mingw-w64-i686-libarchive-3.3.2-1-any                                                                                679.1 KiB  82.9M/s 00:00 [######################################################################################] 100%\n mingw-w64-i686-libuv-1.22.0-1-any                                                                                    185.6 KiB  90.6M/s 00:00 [######################################################################################] 100%\n mingw-w64-i686-rhash-1.3.6-2-any                                                                                     173.6 KiB  84.7M/s 00:00 [######################################################################################] 100%\n mingw-w64-i686-cmake-3.12.0-1-any                                                                                      4.7 MiB  11.4M/s 00:00 [######################################################################################] 100%\n mingw-w64-x86_64-libiconv-1.15-3-any                                                                                 616.3 KiB  86.0M/s 00:00 [######################################################################################] 100%\n mingw-w64-x86_64-gmp-6.1.2-1-any                                                                                     486.0 KiB  94.9M/s 00:00 [######################################################################################] 100%\n mingw-w64-x86_64-mpfr-4.0.1-2-any                                                                                    338.3 KiB   110M/s 00:00 [######################################################################################] 100%\n mingw-w64-x86_64-mpc-1.1.0-1-any                                                                                      78.9 KiB  38.5M/s 00:00 [######################################################################################] 100%\n mingw-w64-x86_64-libwinpthread-git-6.0.0.5174.9726fb77-1-any                                                          40.7 KiB  39.8M/s 00:00 [######################################################################################] 100%\n mingw-w64-x86_64-gcc-libs-7.3.0-2-any                                                                                569.7 KiB  50.6M/s 00:00 [######################################################################################] 100%\n mingw-w64-x86_64-bzip2-1.0.6-6-any                                                                                    81.3 KiB  79.4M/s 00:00 [######################################################################################] 100%\n mingw-w64-x86_64-zlib-1.2.11-3-any                                                                                   168.4 KiB  82.2M/s 00:00 [######################################################################################] 100%\n mingw-w64-x86_64-binutils-2.31.1-1-any                                                                                14.3 MiB  8.92M/s 00:02 [######################################################################################] 100%\n mingw-w64-x86_64-headers-git-6.0.0.5176.1fd1a585-1-any                                                                 5.1 MiB  9.44M/s 00:01 [######################################################################################] 100%\n mingw-w64-x86_64-crt-git-6.0.0.5176.1fd1a585-1-any                                                                     2.8 MiB  10.4M/s 00:00 [######################################################################################] 100%\n mingw-w64-x86_64-isl-0.19-1-any                                                                                      573.2 KiB  93.3M/s 00:00 [######################################################################################] 100%\n mingw-w64-x86_64-windows-default-manifest-6.4-3-any                                                                   12.9 KiB  12.6M/s 00:00 [######################################################################################] 100%\n mingw-w64-x86_64-winpthreads-git-6.0.0.5174.9726fb77-1-any                                                            49.4 KiB  48.3M/s 00:00 [######################################################################################] 100%\n mingw-w64-x86_64-gcc-7.3.0-2-any                                                                                      28.3 MiB  8.81M/s 00:03 [######################################################################################] 100%\n mingw-w64-x86_64-gcc-ada-7.3.0-2-any                                                                                  19.0 MiB  8.84M/s 00:02 [######################################################################################] 100%\n mingw-w64-x86_64-gcc-libgfortran-7.3.0-2-any                                                                         439.8 KiB  85.9M/s 00:00 [######################################################################################] 100%\n mingw-w64-x86_64-gcc-fortran-7.3.0-2-any                                                                               8.4 MiB  10.3M/s 00:01 [######################################################################################] 100%\n mingw-w64-x86_64-gcc-objc-7.3.0-2-any                                                                                 14.0 MiB  9.42M/s 00:01 [######################################################################################] 100%\n mingw-w64-x86_64-expat-2.2.5-1-any                                                                                   144.7 KiB  70.6M/s 00:00 [######################################################################################] 100%\n mingw-w64-x86_64-libffi-3.2.1-4-any                                                                                   44.9 KiB  43.9M/s 00:00 [######################################################################################] 100%\n mingw-w64-x86_64-mpdecimal-2.4.2-1-any                                                                               254.2 KiB  82.8M/s 00:00 [######################################################################################] 100%\n mingw-w64-x86_64-gettext-0.19.8.1-4-any                                                                                3.2 MiB  11.4M/s 00:00 [######################################################################################] 100%\n mingw-w64-x86_64-libtre-git-r128.6fb7206-2-any                                                                        84.2 KiB  82.2M/s 00:00 [######################################################################################] 100%\n mingw-w64-x86_64-libsystre-1.0.1-4-any                                                                                24.0 KiB  23.4M/s 00:00 [######################################################################################] 100%\n mingw-w64-x86_64-ncurses-6.1.20180526-1-any                                                                         1793.6 KiB  12.6M/s 00:00 [######################################################################################] 100%\n mingw-w64-x86_64-libtasn1-4.13-1-any                                                                                 186.3 KiB  91.0M/s 00:00 [######################################################################################] 100%\n mingw-w64-x86_64-p11-kit-0.23.12-1-any                                                                               292.3 KiB  57.1M/s 00:00 [######################################################################################] 100%\n mingw-w64-x86_64-ca-certificates-20170211-2-any                                                                      424.4 KiB   104M/s 00:00 [######################################################################################] 100%\n mingw-w64-x86_64-openssl-1.0.2.o-1-any                                                                                 3.5 MiB  12.3M/s 00:00 [######################################################################################] 100%\n mingw-w64-x86_64-tcl-8.6.8-1-any                                                                                       2.9 MiB  10.7M/s 00:00 [######################################################################################] 100%\n mingw-w64-x86_64-tk-8.6.8-1-any                                                                                     1886.6 KiB  13.1M/s 00:00 [######################################################################################] 100%\n mingw-w64-x86_64-xz-5.2.4-1-any                                                                                      297.7 KiB  72.7M/s 00:00 [######################################################################################] 100%\n mingw-w64-x86_64-termcap-1.3.1-3-any                                                                                  27.1 KiB  26.5M/s 00:00 [######################################################################################] 100%\n mingw-w64-x86_64-readline-7.0.005-1-any                                                                              357.6 KiB   116M/s 00:00 [######################################################################################] 100%\n mingw-w64-x86_64-sqlite3-3.24.0-1-any                                                                                812.6 KiB  88.2M/s 00:00 [######################################################################################] 100%\n mingw-w64-x86_64-python3-3.7.0-10-any                                                                                 15.1 MiB  9.34M/s 00:02 [######################################################################################] 100%\n mingw-w64-x86_64-gdb-8.1-3-any                                                                                         3.2 MiB  11.4M/s 00:00 [######################################################################################] 100%\n mingw-w64-x86_64-libmangle-git-6.0.0.5173.49ca7cfe-1-any                                                              32.9 KiB  32.1M/s 00:00 [######################################################################################] 100%\n mingw-w64-x86_64-make-4.2.1-2-any                                                                                    136.8 KiB  66.8M/s 00:00 [######################################################################################] 100%\n mingw-w64-x86_64-pkg-config-0.29.2-1-any                                                                             238.9 KiB   624K/s 00:00 [######################################################################################] 100%\n mingw-w64-x86_64-tools-git-6.0.0.5173.49ca7cfe-1-any                                                                 265.9 KiB  1984K/s 00:00 [######################################################################################] 100%\n mingw-w64-x86_64-winstorecompat-git-6.0.0.5173.49ca7cfe-1-any                                                         31.7 KiB  30.9M/s 00:00 [######################################################################################] 100%\n mingw-w64-x86_64-c-ares-1.14.0-1-any                                                                                  96.7 KiB  23.6M/s 00:00 [######################################################################################] 100%\n mingw-w64-x86_64-brotli-1.0.5-1-any                                                                                  332.7 KiB  2.56M/s 00:00 [######################################################################################] 100%\n mingw-w64-x86_64-libunistring-0.9.10-1-any                                                                           625.6 KiB  4.81M/s 00:00 [######################################################################################] 100%\n mingw-w64-x86_64-libidn2-2.0.5-1-any                                                                                 114.0 KiB   111M/s 00:00 [######################################################################################] 100%\n mingw-w64-x86_64-libmetalink-0.1.3-3-any                                                                              61.1 KiB  59.6M/s 00:00 [######################################################################################] 100%\n mingw-w64-x86_64-libssh2-1.8.0-1-any                                                                                 225.9 KiB   110M/s 00:00 [######################################################################################] 100%\n mingw-w64-x86_64-jansson-2.11-1-any                                                                                   62.8 KiB  61.3M/s 00:00 [######################################################################################] 100%\n mingw-w64-x86_64-nghttp2-1.32.0-1-any                                                                                194.5 KiB  95.0M/s 00:00 [######################################################################################] 100%\n mingw-w64-x86_64-curl-7.61.0-1-any                                                                                  1113.4 KiB  8.49M/s 00:00 [######################################################################################] 100%\n mingw-w64-x86_64-jsoncpp-1.8.4-1-any                                                                                 307.8 KiB   100M/s 00:00 [######################################################################################] 100%\n mingw-w64-x86_64-lz4-1.8.2-1-any                                                                                     129.6 KiB  63.3M/s 00:00 [######################################################################################] 100%\n mingw-w64-x86_64-lzo2-2.10-1-any                                                                                     101.1 KiB  98.7M/s 00:00 [######################################################################################] 100%\n mingw-w64-x86_64-nettle-3.4-1-any                                                                                    414.0 KiB  80.9M/s 00:00 [######################################################################################] 100%\n mingw-w64-x86_64-libarchive-3.3.2-1-any                                                                              635.9 KiB  77.6M/s 00:00 [######################################################################################] 100%\n mingw-w64-x86_64-libuv-1.22.0-1-any                                                                                  180.0 KiB  87.9M/s 00:00 [######################################################################################] 100%\n mingw-w64-x86_64-rhash-1.3.6-2-any                                                                                   163.9 KiB  80.0M/s 00:00 [######################################################################################] 100%\n mingw-w64-x86_64-cmake-3.12.0-1-any                                                                                    4.7 MiB  9.24M/s 00:01 [######################################################################################] 100%\n(120/120) checking keys in keyring                                                                                                             [######################################################################################] 100%\n(120/120) checking package integrity                                                                                                           [######################################################################################] 100%\n(120/120) loading package files                                                                                                                [######################################################################################] 100%\n(120/120) checking for file conflicts                                                                                                          [######################################################################################] 100%\n(120/120) checking available disk space                                                                                                        [######################################################################################] 100%\n:: Processing package changes...\n(  1/120) installing mingw-w64-x86_64-libiconv                                                                                                 [######################################################################################] 100%\n(  2/120) installing mingw-w64-x86_64-gmp                                                                                                      [######################################################################################] 100%\n(  3/120) installing mingw-w64-x86_64-mpfr                                                                                                     [######################################################################################] 100%\n(  4/120) installing mingw-w64-x86_64-mpc                                                                                                      [######################################################################################] 100%\n(  5/120) installing mingw-w64-x86_64-libwinpthread-git                                                                                        [######################################################################################] 100%\n(  6/120) installing mingw-w64-x86_64-gcc-libs                                                                                                 [######################################################################################] 100%\n(  7/120) installing mingw-w64-x86_64-bzip2                                                                                                    [######################################################################################] 100%\n(  8/120) installing mingw-w64-x86_64-zlib                                                                                                     [######################################################################################] 100%\n(  9/120) installing mingw-w64-x86_64-binutils                                                                                                 [######################################################################################] 100%\n( 10/120) installing mingw-w64-x86_64-headers-git                                                                                              [######################################################################################] 100%\n( 11/120) installing mingw-w64-x86_64-crt-git                                                                                                  [######################################################################################] 100%\n( 12/120) installing mingw-w64-x86_64-isl                                                                                                      [######################################################################################] 100%\n( 13/120) installing mingw-w64-x86_64-windows-default-manifest                                                                                 [######################################################################################] 100%\n( 14/120) installing mingw-w64-x86_64-winpthreads-git                                                                                          [######################################################################################] 100%\n( 15/120) installing mingw-w64-x86_64-gcc                                                                                                      [######################################################################################] 100%\n( 16/120) installing mingw-w64-x86_64-gcc-ada                                                                                                  [######################################################################################] 100%\n( 17/120) installing mingw-w64-x86_64-gcc-libgfortran                                                                                          [######################################################################################] 100%\n( 18/120) installing mingw-w64-x86_64-gcc-fortran                                                                                              [######################################################################################] 100%\n( 19/120) installing mingw-w64-x86_64-gcc-objc                                                                                                 [######################################################################################] 100%\n( 20/120) installing mingw-w64-x86_64-expat                                                                                                    [######################################################################################] 100%\n( 21/120) installing mingw-w64-x86_64-libffi                                                                                                   [######################################################################################] 100%\n( 22/120) installing mingw-w64-x86_64-mpdecimal                                                                                                [######################################################################################] 100%\n( 23/120) installing mingw-w64-x86_64-gettext                                                                                                  [######################################################################################] 100%\n( 24/120) installing mingw-w64-x86_64-libtre-git                                                                                               [######################################################################################] 100%\n( 25/120) installing mingw-w64-x86_64-libsystre                                                                                                [######################################################################################] 100%\n( 26/120) installing mingw-w64-x86_64-ncurses                                                                                                  [######################################################################################] 100%\n( 27/120) installing mingw-w64-x86_64-libtasn1                                                                                                 [######################################################################################] 100%\n( 28/120) installing mingw-w64-x86_64-p11-kit                                                                                                  [######################################################################################] 100%\n( 29/120) installing mingw-w64-x86_64-ca-certificates                                                                                          [######################################################################################] 100%\n( 30/120) installing mingw-w64-x86_64-openssl                                                                                                  [######################################################################################] 100%\n( 31/120) installing mingw-w64-x86_64-tcl                                                                                                      [######################################################################################] 100%\n( 32/120) installing mingw-w64-x86_64-tk                                                                                                       [######################################################################################] 100%\n( 33/120) installing mingw-w64-x86_64-xz                                                                                                       [######################################################################################] 100%\n( 34/120) installing mingw-w64-x86_64-termcap                                                                                                  [######################################################################################] 100%\n( 35/120) installing mingw-w64-x86_64-readline                                                                                                 [######################################################################################] 100%\n( 36/120) installing mingw-w64-x86_64-sqlite3                                                                                                  [######################################################################################] 100%\n( 37/120) installing mingw-w64-x86_64-python3                                                                                                  [######################################################################################] 100%\n( 38/120) installing mingw-w64-x86_64-gdb                                                                                                      [######################################################################################] 100%\n( 39/120) installing mingw-w64-x86_64-libmangle-git                                                                                            [######################################################################################] 100%\n( 40/120) installing mingw-w64-x86_64-make                                                                                                     [######################################################################################] 100%\n( 41/120) installing mingw-w64-x86_64-pkg-config                                                                                               [######################################################################################] 100%\n( 42/120) installing mingw-w64-x86_64-tools-git                                                                                                [######################################################################################] 100%\n( 43/120) installing mingw-w64-x86_64-winstorecompat-git                                                                                       [######################################################################################] 100%\n( 44/120) installing mingw-w64-i686-libiconv                                                                                                   [######################################################################################] 100%\n( 45/120) installing mingw-w64-i686-gmp                                                                                                        [######################################################################################] 100%\n( 46/120) installing mingw-w64-i686-mpfr                                                                                                       [######################################################################################] 100%\n( 47/120) installing mingw-w64-i686-mpc                                                                                                        [######################################################################################] 100%\n( 48/120) installing mingw-w64-i686-libwinpthread-git                                                                                          [######################################################################################] 100%\n( 49/120) installing mingw-w64-i686-gcc-libs                                                                                                   [######################################################################################] 100%\n( 50/120) installing mingw-w64-i686-bzip2                                                                                                      [######################################################################################] 100%\n( 51/120) installing mingw-w64-i686-zlib                                                                                                       [######################################################################################] 100%\n( 52/120) installing mingw-w64-i686-binutils                                                                                                   [######################################################################################] 100%\n( 53/120) installing mingw-w64-i686-headers-git                                                                                                [######################################################################################] 100%\n( 54/120) installing mingw-w64-i686-crt-git                                                                                                    [######################################################################################] 100%\n( 55/120) installing mingw-w64-i686-isl                                                                                                        [######################################################################################] 100%\n( 56/120) installing mingw-w64-i686-windows-default-manifest                                                                                   [######################################################################################] 100%\n( 57/120) installing mingw-w64-i686-winpthreads-git                                                                                            [######################################################################################] 100%\n( 58/120) installing mingw-w64-i686-gcc                                                                                                        [######################################################################################] 100%\n( 59/120) installing mingw-w64-i686-gcc-ada                                                                                                    [######################################################################################] 100%\n( 60/120) installing mingw-w64-i686-gcc-libgfortran                                                                                            [######################################################################################] 100%\n( 61/120) installing mingw-w64-i686-gcc-fortran                                                                                                [######################################################################################] 100%\n( 62/120) installing mingw-w64-i686-gcc-objc                                                                                                   [######################################################################################] 100%\n( 63/120) installing mingw-w64-i686-expat                                                                                                      [######################################################################################] 100%\n( 64/120) installing mingw-w64-i686-libffi                                                                                                     [######################################################################################] 100%\n( 65/120) installing mingw-w64-i686-mpdecimal                                                                                                  [######################################################################################] 100%\n( 66/120) installing mingw-w64-i686-gettext                                                                                                    [######################################################################################] 100%\n( 67/120) installing mingw-w64-i686-libtre-git                                                                                                 [######################################################################################] 100%\n( 68/120) installing mingw-w64-i686-libsystre                                                                                                  [######################################################################################] 100%\n( 69/120) installing mingw-w64-i686-ncurses                                                                                                    [######################################################################################] 100%\n( 70/120) installing mingw-w64-i686-libtasn1                                                                                                   [######################################################################################] 100%\n( 71/120) installing mingw-w64-i686-p11-kit                                                                                                    [######################################################################################] 100%\n( 72/120) installing mingw-w64-i686-ca-certificates                                                                                            [######################################################################################] 100%\n( 73/120) installing mingw-w64-i686-openssl                                                                                                    [######################################################################################] 100%\n( 74/120) installing mingw-w64-i686-tcl                                                                                                        [######################################################################################] 100%\n( 75/120) installing mingw-w64-i686-tk                                                                                                         [######################################################################################] 100%\n( 76/120) installing mingw-w64-i686-xz                                                                                                         [######################################################################################] 100%\n( 77/120) installing mingw-w64-i686-termcap                                                                                                    [######################################################################################] 100%\n( 78/120) installing mingw-w64-i686-readline                                                                                                   [######################################################################################] 100%\n( 79/120) installing mingw-w64-i686-sqlite3                                                                                                    [######################################################################################] 100%\n( 80/120) installing mingw-w64-i686-python3                                                                                                    [######################################################################################] 100%\n( 81/120) installing mingw-w64-i686-gdb                                                                                                        [######################################################################################] 100%\n( 82/120) installing mingw-w64-i686-libmangle-git                                                                                              [######################################################################################] 100%\n( 83/120) installing mingw-w64-i686-make                                                                                                       [######################################################################################] 100%\n( 84/120) installing mingw-w64-i686-pkg-config                                                                                                 [######################################################################################] 100%\n( 85/120) installing mingw-w64-i686-tools-git                                                                                                  [######################################################################################] 100%\n( 86/120) installing mingw-w64-i686-winstorecompat-git                                                                                         [######################################################################################] 100%\n( 87/120) installing mingw-w64-x86_64-c-ares                                                                                                   [######################################################################################] 100%\n( 88/120) installing mingw-w64-x86_64-brotli                                                                                                   [######################################################################################] 100%\n( 89/120) installing mingw-w64-x86_64-libunistring                                                                                             [######################################################################################] 100%\n( 90/120) installing mingw-w64-x86_64-libidn2                                                                                                  [######################################################################################] 100%\n( 91/120) installing mingw-w64-x86_64-libmetalink                                                                                              [######################################################################################] 100%\n( 92/120) installing mingw-w64-x86_64-libssh2                                                                                                  [######################################################################################] 100%\n( 93/120) installing mingw-w64-x86_64-jansson                                                                                                  [######################################################################################] 100%\n( 94/120) installing mingw-w64-x86_64-nghttp2                                                                                                  [######################################################################################] 100%\n( 95/120) installing mingw-w64-x86_64-curl                                                                                                     [######################################################################################] 100%\n( 96/120) installing mingw-w64-x86_64-jsoncpp                                                                                                  [######################################################################################] 100%\n( 97/120) installing mingw-w64-x86_64-lz4                                                                                                      [######################################################################################] 100%\n( 98/120) installing mingw-w64-x86_64-lzo2                                                                                                     [######################################################################################] 100%\n( 99/120) installing mingw-w64-x86_64-nettle                                                                                                   [######################################################################################] 100%\n(100/120) installing mingw-w64-x86_64-libarchive                                                                                               [######################################################################################] 100%\n(101/120) installing mingw-w64-x86_64-libuv                                                                                                    [######################################################################################] 100%\n(102/120) installing mingw-w64-x86_64-rhash                                                                                                    [######################################################################################] 100%\n(103/120) installing mingw-w64-x86_64-cmake                                                                                                    [######################################################################################] 100%\nOptional dependencies for mingw-w64-x86_64-cmake\n    mingw-w64-x86_64-qt5: CMake Qt GUI\n(104/120) installing mingw-w64-i686-c-ares                                                                                                     [######################################################################################] 100%\n(105/120) installing mingw-w64-i686-brotli                                                                                                     [######################################################################################] 100%\n(106/120) installing mingw-w64-i686-libunistring                                                                                               [######################################################################################] 100%\n(107/120) installing mingw-w64-i686-libidn2                                                                                                    [######################################################################################] 100%\n(108/120) installing mingw-w64-i686-libmetalink                                                                                                [######################################################################################] 100%\n(109/120) installing mingw-w64-i686-libssh2                                                                                                    [######################################################################################] 100%\n(110/120) installing mingw-w64-i686-jansson                                                                                                    [######################################################################################] 100%\n(111/120) installing mingw-w64-i686-nghttp2                                                                                                    [######################################################################################] 100%\n(112/120) installing mingw-w64-i686-curl                                                                                                       [######################################################################################] 100%\n(113/120) installing mingw-w64-i686-jsoncpp                                                                                                    [######################################################################################] 100%\n(114/120) installing mingw-w64-i686-lz4                                                                                                        [######################################################################################] 100%\n(115/120) installing mingw-w64-i686-lzo2                                                                                                       [######################################################################################] 100%\n(116/120) installing mingw-w64-i686-nettle                                                                                                     [######################################################################################] 100%\n(117/120) installing mingw-w64-i686-libarchive                                                                                                 [######################################################################################] 100%\n(118/120) installing mingw-w64-i686-libuv                                                                                                      [######################################################################################] 100%\n(119/120) installing mingw-w64-i686-rhash                                                                                                      [######################################################################################] 100%\n(120/120) installing mingw-w64-i686-cmake                                                                                                      [######################################################################################] 100%\nOptional dependencies for mingw-w64-i686-cmake\n    mingw-w64-i686-qt5: CMake Qt GUI\nMSYS2-Bash pacman --sync --needed --noconfirm --cache \"/c/dokan_ci_cache/msys2\" mingw-w64-{x86_64,i686}-toolchain mingw-w64-{x86_64,i686}-cmake [ OK ]\nPS E:\\islog\\dev\\app\\dokan\\dokany>           bash \"pacman --sync --needed --noconfirm --cache\"$unix_msys2_cache`\" mingw-w64-{x86_64,i686}-toolchain mingw-w64-{x86_64,i686}-cmake\"\nMSYS2-Bash: pacman --sync --needed --noconfirm --cache \"/c/dokan_ci_cache/msys2\" mingw-w64-{x86_64,i686}-toolchain mingw-w64-{x86_64,i686}-cmake\n:: There are 17 members in group mingw-w64-x86_64-toolchain:\n:: Repository mingw64\n   1) mingw-w64-x86_64-binutils  2) mingw-w64-x86_64-crt-git  3) mingw-w64-x86_64-gcc  4) mingw-w64-x86_64-gcc-ada  5) mingw-w64-x86_64-gcc-fortran  6) mingw-w64-x86_64-gcc-libgfortran  7) mingw-w64-x86_64-gcc-libs\n   8) mingw-w64-x86_64-gcc-objc  9) mingw-w64-x86_64-gdb  10) mingw-w64-x86_64-headers-git  11) mingw-w64-x86_64-libmangle-git  12) mingw-w64-x86_64-libwinpthread-git  13) mingw-w64-x86_64-make  14) mingw-w64-x86_64-pkg-config\n   15) mingw-w64-x86_64-tools-git  16) mingw-w64-x86_64-winpthreads-git  17) mingw-w64-x86_64-winstorecompat-git\nEnter a selection (default=all):\nwarning: mingw-w64-x86_64-binutils-2.31.1-1 is up to date -- skipping\nwarning: mingw-w64-x86_64-crt-git-6.0.0.5176.1fd1a585-1 is up to date -- skipping\nwarning: mingw-w64-x86_64-gcc-7.3.0-2 is up to date -- skipping\nwarning: mingw-w64-x86_64-gcc-ada-7.3.0-2 is up to date -- skipping\nwarning: mingw-w64-x86_64-gcc-fortran-7.3.0-2 is up to date -- skipping\nwarning: mingw-w64-x86_64-gcc-libgfortran-7.3.0-2 is up to date -- skipping\nwarning: mingw-w64-x86_64-gcc-libs-7.3.0-2 is up to date -- skipping\nwarning: mingw-w64-x86_64-gcc-objc-7.3.0-2 is up to date -- skipping\nwarning: mingw-w64-x86_64-gdb-8.1-3 is up to date -- skipping\nwarning: mingw-w64-x86_64-headers-git-6.0.0.5176.1fd1a585-1 is up to date -- skipping\nwarning: mingw-w64-x86_64-libmangle-git-6.0.0.5173.49ca7cfe-1 is up to date -- skipping\nwarning: mingw-w64-x86_64-libwinpthread-git-6.0.0.5174.9726fb77-1 is up to date -- skipping\nwarning: mingw-w64-x86_64-make-4.2.1-2 is up to date -- skipping\nwarning: mingw-w64-x86_64-pkg-config-0.29.2-1 is up to date -- skipping\nwarning: mingw-w64-x86_64-tools-git-6.0.0.5173.49ca7cfe-1 is up to date -- skipping\nwarning: mingw-w64-x86_64-winpthreads-git-6.0.0.5174.9726fb77-1 is up to date -- skipping\nwarning: mingw-w64-x86_64-winstorecompat-git-6.0.0.5173.49ca7cfe-1 is up to date -- skipping\n:: There are 17 members in group mingw-w64-i686-toolchain:\n:: Repository mingw32\n   1) mingw-w64-i686-binutils  2) mingw-w64-i686-crt-git  3) mingw-w64-i686-gcc  4) mingw-w64-i686-gcc-ada  5) mingw-w64-i686-gcc-fortran  6) mingw-w64-i686-gcc-libgfortran  7) mingw-w64-i686-gcc-libs  8) mingw-w64-i686-gcc-objc\n   9) mingw-w64-i686-gdb  10) mingw-w64-i686-headers-git  11) mingw-w64-i686-libmangle-git  12) mingw-w64-i686-libwinpthread-git  13) mingw-w64-i686-make  14) mingw-w64-i686-pkg-config  15) mingw-w64-i686-tools-git\n   16) mingw-w64-i686-winpthreads-git  17) mingw-w64-i686-winstorecompat-git\nEnter a selection (default=all):\nwarning: mingw-w64-i686-binutils-2.31.1-1 is up to date -- skipping\nwarning: mingw-w64-i686-crt-git-6.0.0.5176.1fd1a585-1 is up to date -- skipping\nwarning: mingw-w64-i686-gcc-7.3.0-2 is up to date -- skipping\nwarning: mingw-w64-i686-gcc-ada-7.3.0-2 is up to date -- skipping\nwarning: mingw-w64-i686-gcc-fortran-7.3.0-2 is up to date -- skipping\nwarning: mingw-w64-i686-gcc-libgfortran-7.3.0-2 is up to date -- skipping\nwarning: mingw-w64-i686-gcc-libs-7.3.0-2 is up to date -- skipping\nwarning: mingw-w64-i686-gcc-objc-7.3.0-2 is up to date -- skipping\nwarning: mingw-w64-i686-gdb-8.1-3 is up to date -- skipping\nwarning: mingw-w64-i686-headers-git-6.0.0.5176.1fd1a585-1 is up to date -- skipping\nwarning: mingw-w64-i686-libmangle-git-6.0.0.5173.49ca7cfe-1 is up to date -- skipping\nwarning: mingw-w64-i686-libwinpthread-git-6.0.0.5174.9726fb77-1 is up to date -- skipping\nwarning: mingw-w64-i686-make-4.2.1-2 is up to date -- skipping\nwarning: mingw-w64-i686-pkg-config-0.29.2-1 is up to date -- skipping\nwarning: mingw-w64-i686-tools-git-6.0.0.5173.49ca7cfe-1 is up to date -- skipping\nwarning: mingw-w64-i686-winpthreads-git-6.0.0.5174.9726fb77-1 is up to date -- skipping\nwarning: mingw-w64-i686-winstorecompat-git-6.0.0.5173.49ca7cfe-1 is up to date -- skipping\nwarning: mingw-w64-x86_64-cmake-3.12.0-1 is up to date -- skipping\nwarning: mingw-w64-i686-cmake-3.12.0-1 is up to date -- skipping\n there is nothing to do\nMSYS2-Bash pacman --sync --needed --noconfirm --cache \"/c/dokan_ci_cache/msys2\" mingw-w64-{x86_64,i686}-toolchain mingw-w64-{x86_64,i686}-cmake [ OK ]\nPS E:\\islog\\dev\\app\\dokan\\dokany> C:\\msys64\\usr\\bin\\bash -lc \"cmake --help\"\n/usr/bin/bash: cmake: command not found\n. Yes exactly \ud83d\ude22 running like you in the msys shell also propose me to install it\n$ pacman -Syuu cmake\n:: Synchronizing package databases...\n mingw32 is up to date\n mingw64 is up to date\n msys is up to date\n:: Starting core system upgrade...\n there is nothing to do\n:: Starting full system upgrade...\nresolving dependencies...\nlooking for conflicting packages...\nPackages (13) dtc-1.4.6-1  gcc-libs-7.3.0-3  jsoncpp-1.8.4-1  less-530-1\n              libcrypt-2.1-2  libffi-3.2.1-3  liblzo2-2.10-2  librhash-1.3.6-1\n              libuv-1.22.0-1  pkg-config-0.29.2-1  rebase-4.4.4-1  time-1.9-1\n              cmake-3.10.2-1\nTotal Download Size:    6.28 MiB\nTotal Installed Size:  29.60 MiB\nNet Upgrade Size:      24.20 MiB\n:: Proceed with installation? [Y/n]\n```. Awesome @Rondom thanks a lot ! \ud83c\udfc6 \ud83c\udfc6 \ud83c\udfc6 . Hi @Salamandar ,\nThank you for the feedback.\nThat's unfortunately a known issue that we probably cannot do something about.\nhttps://github.com/dokan-dev/dokany/wiki/Unsupported#alternatives\nI always found it funny to see after so many years they are still paying for google ads with false information when looking for dokan/dokany on google.\nIt even seems to be personal more than business but it is a situation that existed much before I even knew/maintained dokan\n. Hi @lumip,\nAs the documentation says, the NTSTATUS can be STATUS_SUCCESS or an appropriate to the request result like an error.\nThe truth is that GetFileInformation is used for a lots different types of request made by IRP_MJ_QUERY_INFORMATION that has each of them allowed status like \nhttps://msdn.microsoft.com/en-us/library/cc232094.aspx\nCurrently we only return one type of failure\nhttps://github.com/dokan-dev/dokany/blob/83be68351c70d916e58bdae8e3424e521fe07b04/dokan/fileinfo.c#L448 \nbut this could be improved by checking if all users returned error are allowed or not.\n. Oh I have not seen it was this GetFileInformation that you pointed sorry.\nYou can return an error here but it would mean you implementation would not be able to return STATUS_CANNOT_DELETE when you file is readonly.\nYou can, however, handle this case in DeleteFile or DeleteDirectory if you can.\n. This would probably create duplicate code on the implementation side by doing this. Especially, if we start like this we may create more than a single operation for each special case and feature that need to be handled. Here we are lucky enough that this function can be called to get the proposer information without needing to create a new one.. Hi @galeksandrp ,\nThank you for your feedback. The wiki needs to be changed looks like.\nThe current way to build is:\nhttps://github.com/dokan-dev/dokany/blob/master/dokan_fuse/build.ps1#L13\nI let @Rondom confirm this part and I will make the changes \ud83d\udc4d \n. Hi @cdisti ,\nThis is the wrong repository. It should be in https://github.com/dokan-dev/dokan-dotnet\nOtherwise, you are right, this could be a single loop. Would you like to make a PR for the change ?\n. @Salamandar Tuesday ping \ud83d\ude04 . Done \ud83d\udc4d @Salamandar https://github.com/dokan-dev/dokany/commit/d24abedd3150b8cc0b2ec05a148b5bf387e82916\nThank you !. Hi @samokhodkin ,\nDOKAN_FILE_INFO.Context is an arbitrary value assigned by the file system application. Here the file system application is your app.\nDuring ZwCreateFile it should have the value null but seems like dokan-java has already set a value before providing it to your code.\nCan you move this issue to the good repository ?\n. Hi @linyuan870 ,\nNo unfortunately this is not possible because the process killed (mirror / dokan library) is the process that notifies that the device has exited to the explorer and other apps.\n. Hi @linyuan870 ,\nThis value has been found to be working well. It cannot be configured since it is a define during the build.\nThis is code is more a security for windows to cleanly remove your device and not let a zombie in case your app crash. The issue is probably more where that the app should not crash or at least handle the unmount correctly before leaving.. Hi @charlesgogo01 ,\nThe goal of the project is to provide tools to the other developers to create such filesystem as S3.\nI do not know for now if someone already did this type of FS.\n. Hi  @eduardsui ,\nYou can use fuse volname option see\nhttps://github.com/dokan-dev/dokany/blob/224fc0880901d86ed98a04e355ee920fe6f095ef/dokan_fuse/src/dokanfuse.cpp#L593. Hi @gustavocarita ,\nNormally you should only need to build your fs against the dokan fuse wrapper. The difficulty will depend on the implementation.\nFor example, the fuse mirror has been used directly without changes.\nGood luck on your port on windows !\n. Hi @askucher ,\nThis is not related to Dokan but to Windows context menu.\n. Hi @askucher,\nI just made the test on a clean VM. The driver file has been correctly removed on my side.\nWe do not need to run dokanctl /r d, this part is handled by the Wix installer.\nhttps://github.com/dokan-dev/dokany/blob/master/dokan_wix/Dokan_x64.wxs#L267\nDo during the installation a device was still mount or something that would make the driver fail to be flagged for removed ?\n. Hi @DimitarKapashikov ,\nCould you give more information on how this is happening, what is exactly the behavior and how to reproduce this ?. Does the mirror logs shows activity ? The device dismounts himself ?. Yes with /d /s if you want the std output.. Hi @DimitarKapashikov ,\nThank you for the logs. Seems like you have a software looking for McAfee files.\nProbably it is him that do not let you get access to the device until he succeed.\nIn the logs there is not special error code that I found.. Hi @DimitarKapashikov ,\nHave you been able to find if McAfee was releated to your issue ?. Thank you @DimitarKapashikov for the feedback ! Glad that you found a solution !. Hi @lijie0123 ,\nCan you provide a sample to reproduce the behavior ?\nNormally kernel would not request a close if there is still a read pending. Or it means the read was taking too much time and kernel has supposed the request has timeout.\n. Hi @samokhodkin ,\nHow are you mounting the FS ? Reparse point ?. Hi @haha-wlei ,\nDo you really have a need to mount 33 net disk ?\nChange it to 64 would give the same result for 65.. @haha-wlei can you show me how you achieve to have 32 network mount point used ?. We have to imagine here a way to make the usage of a list instead of an array for DOKAN_CONTROL with DokanGetMountPointList\nhttps://github.com/dokan-dev/dokany/blob/224fc0880901d86ed98a04e355ee920fe6f095ef/dokan_np/dokannp.c#L237-L242\nThis will probably break API, so better to create a DokanGetMountPointListEx to keep to compatibility temporary.. Hi @alexander-ossur ,\nAfter installing the msi, you do not need to run dokanctl /i d\nGetting the error ERROR_SERVICE_MARKED_FOR_DELETE is normal after a /r d . You are probably look at this https://github.com/dokan-dev/dokany/issues/669. @alexander-ossur Hi,\nAre you looking at a c++ wrapper of the interface like the C# is going?\nFor now there is no such project as far as I know. If you plan to do one, I would be glad to answer your questions and add the projet as an official part of the dokan-dev.. @alexander-ossur Both are using a library that communicate with a kernel driver. The wrapper is the code the wrap the C library to whatever language needed. What would be possible is to have an wrapper of the library interface to use the c++ std instead of pure C Handle for exemple.. Hi @samokhodkin ,\nWould it be possible that device is mounted as read only ?\nCan you share the debug log ?. Hi @Martin736 ,\nCan you be more precise ? I do not fully understand what you try to achieve and what is happening.\nAlso full logs mirror and kernel would be helpful here.\n. Hi @Martin736 ,\nAs I understand, we will have difficulty to reproduce the issue unless we have a disk with errors.\nCan you see if the mirror crash ? It seems by the log that it is not complete and the mirror stop unexpectedly. Can you attach a debugger on it and see where does the crash comes from ?\n. @Martin736 Thats possible. No need kernel debug for now. Everything seems to be in the mirror since you dont even has the log of MirrorCreateFile. Hi @Martin736 ,\nHave you been able to get more informations on your case ?. Hi @alexander-ossur ,\nThis is the expected behavior. The Kernel driver will unmount the device if he has no answer from the library for more than X seconds. Without it, it would leave the computer in an unstable environment with a ghost device that timeout every request of every software.\n. Hi @alexander-ossur ,\nThe param of ZwCreateFile are provided directly from the Kernel Windows. You can use procmon if you would like to see exactly what is happening and reproduce the behavior on NTFS.. Hi @alexander-ossur ,\nHave you been able to take a look procmon ?. Duplicate https://github.com/dokan-dev/dokany/pull/746. Hi @AGritsevich ,\nThis is a very interesting work ! \nThe issue I have here is that your contribution does not seem to be part of the dokan project but more like a third part FS using dokan.\nYou should probably create another repository outside dokan to make it public.\n. Hi @dwalkes ,\nI am still interested in incorporating projects like this that can be a good sample for people to use for their devs.\n@AGritsevich I haven't tested for now but I think the code of mirror_dev.cpp should have his own project and not be an option of the mirror. Especially because of the difference of codes and usage of an external library.\n-Also the code of mirror_dev still use the old way to return error code of dokan and not the usage of NTSTATUS\nhttps://github.com/dokan-dev/dokany/pull/746/files#diff-ee370c53bf61e2ba62fa4fe50e14a3eeR185\n-vdh.h seems to export VHDFillFixedHeaderSector but is not used as I can see and therefore the vhd.c\n-CI is not able to build the project.\n-It is a detail but, Copyright (C) 2015 - 2017 is used in mirror_dev did you already started the project in 2017 ?\nLike I said, I am looking for sample useful for the community. Here It needs to be polished for being used and packages in the installer.\n. Hi @Absoblogginlutely ,\nThank a lot for the contribution !\nI was not aware Confirm-SecureBootUEFI existed ! That's good to know !\nCould you just fix the indentation of the powershell script ?\n(For the changelog, I will update in a second the versions, you will probably need to merge it)\n. Thank you @Rondom you made a good point here \ud83d\udc4d . My bad I did not look enough.\n@Absoblogginlutely could you make the changes ? I will validate the PR quick enough for the hacktoberfest.. Hi @Absoblogginlutely ,\nThanks a lot for the quick changes ! Everything seems to be right. @Rondom also for you ?\nIn the mean time, @Absoblogginlutely could you rebase the commits into one (probably there is going to be a merge conflict with the readme) . Hi @Absoblogginlutely ,\nThanks a lot again for your contribution it is very appreciated and glad to see it was a great experience for your first PR ! Hope it will not be the last \ud83d\ude03 for the opensource !\n. Hi @kwiatek999 ,\nYou should only have this error if DokanOptions->Version provided by your FS is lower than the library used.\nhttps://github.com/dokan-dev/dokany/blob/af8ddfc372246b01832ea37924ef513ddc3ed299/dokan/dokan.c#L200-L205\nAre you sure the dokan1.dll next to your binary is the one called ?\n. @kwiatek999 Good to hear that you found the reason and thanks for your feedback!. Hi @cdisti ,\nYes this is possible. Just need to create different class instance in different thread \ud83d\udc4d . Hi @g-fusion ,\nWhich error do you exactly get ? At which moment ?\nA test with the last version would be perfect and with the mirror logs.\n. If he cannot find the stream, he should create it by himself.\nOnly the save part should be enough for now \ud83d\udc4d . Thank you @g-fusion for your feedback.\nThere is a couple of deadlock that has been fixed in this versions. Excel is doing a couple of CreateFile in the same time. It is possible that one of them could not finish the process and create the stream for the file.. Hi @g-fusion ,\nCan this be closed ?. Hi @winneryong ,\nCould you provided the error message ? Have you made a test with the mirror sample or just with pyfs ?\nPlease describe how to reproduce it.. Hi @winneryong ,\nI made a test using the C mirror\nhttps://github.com/dokan-dev/dokany/tree/master/samples/dokan_mirror also available in your dokan install folder\nThere is no problem to set / edit the tag of FileMeta\n\nThis is probably an error or a case not supported in pyfs. Will need logs to see where does the invalid parameter would come. I would guess during a CreateFile. Could you provide them ?. Hi @winneryong ,\nYou can enable the debug logs in this way:\nhttps://github.com/PyFilesystem/pyfilesystem/blob/master/fs/expose/dokan/init.py#L1154. Hi @winneryong ,\nPlease ping me on the issue https://github.com/PyFilesystem/pyfilesystem/issues/280 when you have the required information to continue.. Hi @ishanarora ,\nThank you for your pull request \ud83d\udc4d \nDid you face yourself the issue ?\nI just wonder in which case the mirror would not answer, create a timeout during the 5 sec and comes back in the next 2x5sec (DOKAN_KEEPALIVE_COUNT_MAX). Could you just explain what exactly happened on your side and how this fixed it ? Thanks in advance\n. Hi @ishanarora ,\nThank you for your contribution. I have looked in another way to handle the keepalive.\nThe mechanism has been changed in the last release to improve could you make a test on your side ?\n. @Arup-MK-Halder Hi,\nIt is a normal behavior that office behave differently or even the system behave differently depending on the windows or office version. Dokan only forward what the kernel is requesting.\nIn your issue, do you report this behavior change or that office do not work in the mirror?\nHave you been able to see which program access to the file in the same time ?. Hi @Arup-MK-Halder ,\nBy looking at the mirror logs, I did not find an error during the process. What is exactly the error you are getting ?. @vikas25538 Hi,\nDokan does support long path. Therefore I think here it is more the mirror that has a smaller buffer by default. Can you rebuild with the define changed on top of mirror.c?. @vikas25538 Oh, so thats a windows 7 normal behavior. Windows 7 does not support long path.. @vikas25538 Do you get this warning even with the mirror.exe? Can you locate after which callback you get the error?\nYou can find this using the procmon and compare dokan with ntfs. @vikas25538 What the mirror debug log give at this moment? Does the path is also truncated?. Ok so you are using the C# wrapper. Could you do the test with the C mirror ?\nHave you looked if it is not a C# framework behavior ? https://stackoverflow.com/questions/3406494/what-is-the-maximum-amount-of-characters-or-length-for-a-directory. Yes, it will be relevant to see if that\u2019s a c# issue or C.. @vikas25538 there is no error in the dokany_c logs and files path are not truncated.\nHave you looked the behavior with procmon  ?. @vikas25538 yes this is normal since the file name we recieve is an invalid name right ?\nplease can you look with procmon. He will show exactly the name of the file that is sent to dokan.. Hi @vikas25538 ,\nThank you for the logs but procmon does not allow to open the xml file. Could you save it again to the procmon type file ?. Hi @vikas25538 ,\nThank you !\nIf you add a filter with paths start with M: and C:\\Users\\Administrator\\Desktop\\ForTesting\nYou will see the request received by Dokan on M: and the request made by the Mirror on the C: to get information.\nC:\\Users\\Administrator\\Desktop\\ForTesting\\asasasassssssssssssssssssssssssssss\\vzxcvxvczxzxzxzxzxzxzxzxzxzxzxzxzxzxzxzxzxzxzx\\xcvxzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz\\xcxcxcxcxcxcxcxcxcxcxcxcxcxcxcxcxcxcxcxcxcxcxcxcxcxcxcxcxcxcxcxcxcxcxc Is the longest directory where you try to access and there is two files in it if I understood.\nListing files in this folder result with\n0: ..\n1: sdfaffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nAs you said before M:\\asasasassssssssssssssssssssssssssss\\vzxcvxvczxzxzxzxzxzxzxzxzxzxzxzxzxzxzxzxzxzxzx\\xcvxzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz\\xcxcxcxcxcxcxcxcxcxcxcxcxcxcxcxcxcxcxcxcxcxcxcxcxcxcxcxcxcxcxcxcxcxcxc\\sdfaffffffffffffffffffffffffffffffffffffffffffffff\nCreateFile return with an objectnotfound. But procmon does not show a query on the C device to look for it. We agree that the path is correct and not truncate ? Can you add some logs in the CreateFile of the Mirror to know the reason and which function is returning the error ?\n. => GetFileSecurity/SetFileSecurity may not work properly\n=> Please restart mirror sample with administrator rights to fix it.\nThis is part of the mirror code sample. You can change to code to give generic rights during GetFileSecurity and ignore SetFileSecurity . Hi @arnaudcarre ,\nMirror is using the default value for device space. You can personalize it with GetDiskFreeSpace\nSee https://github.com/dokan-dev/dokany/blob/master/samples/dokan_mirror/mirror.c#L1370\nDo not hesitate to look at the doc here https://dokan-dev.github.io/dokany-doc/html/\nAbout delete in D and M refresh. Both devices are not linked. Dokan is not notified for changes made of an outside software on the source. Keep in mind that Dokan FS can be whatever. Mirror is just a sample.\nFor the error, can you try with /o option ? https://github.com/dokan-dev/dokany/blob/master/samples/dokan_mirror/mirror.c#L1573\n. Hi @arnaudcarre ,\nPlease update to the latest dokan version and if you find any strange behavior do not hesitate to give feedback.\n. Hi @vikas25538 ,\nYou can run your FS application as a service and you would get the admin right required to do the GetFileSecurity/SetFileSecurity. Please see https://github.com/dokan-dev/dokany/blob/master/samples/dokan_mirror/mirror.c#L1646-L1663\nIt is only for the sample. Dokan does not need admin rights. If Mirror operations fail, it means the process user does not have the right to access / get proper data on your mirrored folder.\nAs you just linked, CreateFile is Win32 API, if it fail it mean your user has no right to process it on the target file.. Dokan FS can be whatever. Here the goal of the sample is to mirror a folder. If the user has no rights to mirror (CreateFile, GetFileInformations, Delete,....) It is normal that the mirror code gets from Windows Kernel an access denied during the request.\nBut since Dokan is not linked to the mirror and can be whatever the developper wants to do like showing the Windows registre as FS.\nhttps://github.com/dokan-dev/dokan-dotnet/blob/master/sample/RegistryFS/Program.cs\nOr even an HTTP server explorer...\nYou can have a FS that is not limited to your user rights on your NTFS FS.\nDo you expect that Dokan bypass the Windows right of your current user to get all informations on your mirrored directory ?. If you are using Win API that requires admin rights or elevated normal user rights, yes. I am just surprised that running as a service is not working. It should be strong enough to process standard request.. @vikas25538 do not hesitate if you find the issue should be reopened.. @vikas25538 Hi,\nI think here you will need to compare the mirror logs and your FS to find which calls return an error or from when the behavior of calls are not the same.. https://dokan-dev.github.io/dokany-doc/html/groupdo_k_a_n_o_p_t_i_o_n.html#ga9892226236c01bb264d701023cfc539b\nYou will also need to enable debug and have a console to display the logs or output will be sent to debugger\nSee https://msdn.microsoft.com/fr-fr/library/windows/desktop/aa363362(v=vs.85).aspx. @vikas25538 \n00001426    60.56517792 [DokanFS]   DokanTimeoutThread catched KillEvent    \n00001427    60.56517792 [DokanFS] <== DokanTimeoutThread\nYou device has been unmount because a request has reached the allowed timeout.. Request are read / write / createfile that you get in your FS. One of them took too much time. See https://dokan-dev.github.io/dokany-doc/html/struct_d_o_k_a_nop_t_i_o_n_s.html#ad953734dbc1baf170937eec8c1b4228b\nhttps://dokan-dev.github.io/dokany-doc/html/group_dokan.html#ga1d5b0bf526fbf143a726fe1816fe7f15\nAbout run as admin, I am able to open / edit a word document on my VM without admin rights. You will need to look on your side what errors do you get. Use procmon to see the call differences.. If you had no calls at all, how did you get to list and open the world file on your first screenshot ?. @vikas25538 Does your system is configured in any special way? Usually such behavior is when the device cannot be accessed. As you showed you get no request on drive side and it is unmount. But the communication is working at least at the beginning between the library and the driver to request a mont event.. @vikas25538 You still have no output on library side when debug is enabled?. For now you have only provided the kernel logs, can you also provide the dokan library logs ?. Please lets first confirm that the mirror is working. Another wrapper / implementation we will see later.. Mirror can mount without admin rights. Admin rights are just here to get / set all proper information for file security.\nThe only possibility that this fails the mount is if you mount on a folder you have no rights.\nWithout mirror logs I cannot do more here.. @vikas25538 If \\testenv cannot be accessed by your non-admin. You FS will fail to get informations.\nI do not have your env, I cannot say more.\nDokanOptions.NetworkDrive does not need admin rights.. Hi @samokhodkin ,\nThank you for the report !\nI will try to look at it quickly and give you a feedback on this \ud83d\udc4d . Hi @printpagestopdf ,\nI understand your needs but this will not be possible. Each read/write are requests made by an app on the FS. We cannot know when it will stop. There is even some calls after the cleanup that can happen (windows behavior).\nYour solution is exactly what I would propose even if it is not perfect. Also to handle the read/write after a cleanup has been called on the context.\nIf you have your hand on the backend, you can maybe add some REST API to cache the requests with offset info and merge/exec them when cleanup is called ? It would avoid losing data if clients fail.\n. @winneryong Have you tried with latest version?\nOtherwise, could you provide the memory dump create of the BSOD with the latest version?. QMUdisk64 seems to create the BSOD not Dokan. Which version of qemu are you using ?\n```\nkd> !analyze -v\n\n\n*\nBugcheck Analysis                                    *\n*\n\n\nPAGE_FAULT_IN_NONPAGED_AREA (50)\nInvalid system memory was referenced.  This cannot be protected by try-except.\nTypically the address is just plain bad or it is pointing at freed memory.\nArguments:\nArg1: fffff88015fcdffe, memory referenced.\nArg2: 0000000000000000, value 0 = read operation, 1 = write operation.\nArg3: fffff88001040a50, If non-zero, the instruction address which referenced the bad memory\n    address.\nArg4: 0000000000000000, (reserved)\nDebugging Details:\nCould not read faulting driver name\nDUMP_CLASS: 1\nDUMP_QUALIFIER: 400\nBUILD_VERSION_STRING:  7601.18741.amd64fre.win7sp1_gdr.150202-1526\nSYSTEM_MANUFACTURER:  Parallels Software International Inc.\nSYSTEM_PRODUCT_NAME:  Parallels Virtual Platform\nSYSTEM_SKU:  Undefined\nSYSTEM_VERSION:  None\nBIOS_VENDOR:  Parallels Software International Inc.\nBIOS_VERSION:  13.3.1 (43365)\nBIOS_DATE:  05/21/2018\nBASEBOARD_MANUFACTURER:  Parallels Software International Inc.\nBASEBOARD_PRODUCT:  Parallels Virtual Platform\nBASEBOARD_VERSION:  None\nDUMP_TYPE:  2\nBUGCHECK_P1: fffff88015fcdffe\nBUGCHECK_P2: 0\nBUGCHECK_P3: fffff88001040a50\nBUGCHECK_P4: 0\nREAD_ADDRESS: GetPointerFromAddress: unable to read from fffff80001b0d100\nUnable to get MmSystemRangeStart\nGetUlongPtrFromAddress: unable to read from fffff80001b0d2e0\nGetUlongPtrFromAddress: unable to read from fffff80001b0d490\nGetPointerFromAddress: unable to read from fffff80001b0d0b8\n fffff88015fcdffe \nFAULTING_IP: \nfltmgr!FltpExpandShortNames+a0\nfffff880`01040a50 6683385c        cmp     word ptr [rax],5Ch\nMM_INTERNAL_CODE:  0\nCPU_COUNT: 4\nCPU_MHZ: d46\nCPU_VENDOR:  GenuineIntel\nCPU_FAMILY: 6\nCPU_MODEL: 3c\nCPU_STEPPING: 3\nCPU_MICROCODE: 6,3c,3,0 (F,M,S,R)  SIG: 12'00000000 (cache) 12'00000000 (init)\nCUSTOMER_CRASH_COUNT:  1\nDEFAULT_BUCKET_ID:  WIN7_DRIVER_FAULT\nBUGCHECK_STR:  0x50\nPROCESS_NAME:  explorer.exe\nCURRENT_IRQL:  0\nANALYSIS_SESSION_HOST:  DESKTOP-QJ22MUT\nANALYSIS_SESSION_TIME:  12-08-2018 18:53:06.0207\nANALYSIS_VERSION: 10.0.16299.15 amd64fre\nTRAP_FRAME:  fffff88015fd9130 -- (.trap 0xfffff88015fd9130)\nNOTE: The trap frame does not contain all registers.\nSome register values may be zeroed or incorrect.\nrax=fffff88015fcdffe rbx=0000000000000000 rcx=0000000000000000\nrdx=fffff88015fd93e0 rsi=0000000000000000 rdi=0000000000000000\nrip=fffff88001040a50 rsp=fffff88015fd92c0 rbp=0000000000000000\n r8=0000000000000000  r9=fffff88015fd93e0 r10=000000000000000b\nr11=fffff88015fd93c0 r12=0000000000000000 r13=0000000000000000\nr14=0000000000000000 r15=0000000000000000\niopl=0         nv up ei ng nz na po nc\nfltmgr!FltpExpandShortNames+0xa0:\nfffff88001040a50 6683385c        cmp     word ptr [rax],5Ch ds:fffff88015fcdffe=????\nResetting default scope\nLAST_CONTROL_TRANSFER:  from fffff80001952eb0 to fffff800018d3ec0\nSTACK_TEXT:\nfffff88015fd8fc8 fffff80001952eb0 : 0000000000000050 fffff88015fcdffe 0000000000000000 fffff88015fd9130 : nt!KeBugCheckEx\nfffff88015fd8fd0 fffff800018d1fee : 0000000000000000 fffff88015fcdffe fffffa8000000000 00000000ffffa60f : nt! ?? ::FNODOBFM::string'+0x4518f\nfffff88015fd9130 fffff88001040a50 : fffffa8007ce9e00 fffffa80080745c0 0000000000220022 fffffa8007b0fc24 : nt!KiPageFault+0x16e\nfffff88015fd92c0 fffff88001059206 : 0000000000000000 000000000000000b 0000000000000000 fffffa800523dc20 : fltmgr!FltpExpandShortNames+0xa0\nfffff88015fd9320 fffff88001059401 : fffffa8008210000 fffffa8008210430 0000000000000101 fffffa800523dc20 : fltmgr!FltpGetNormalizedDestinationFileName+0x66\nfffff88015fd9350 fffff8800198f21d : fffffa8000000226 fffff88015fd97e8 fffff88015fd97e8 00000000000007ff : fltmgr!FltGetDestinationFileNameInformation+0x1b1\nfffff88015fd9530 fffffa8000000226 : fffff88015fd97e8 fffff88015fd97e8 00000000000007ff fffff88000000022 : QMUdisk64+0xe21d\nfffff88015fd9538 fffff88015fd97e8 : fffff88015fd97e8 00000000000007ff fffff88000000022 fffff88000000101 : 0xfffffa8000000226\nfffff88015fd9540 fffff88015fd97e8 : 00000000000007ff fffff88000000022 fffff88000000101 fffff88015fd9590 : 0xfffff88015fd97e8\nfffff88015fd9548 00000000000007ff : fffff88000000022 fffff88000000101 fffff88015fd9590 fffff80001a65588 : 0xfffff88015fd97e8\nfffff88015fd9550 fffff88000000022 : fffff88000000101 fffff88015fd9590 fffff80001a65588 fffff8a000004500 : 0x7ff\nfffff88015fd9558 fffff88000000101 : fffff88015fd9590 fffff80001a65588 fffff8a000004500 0000000000000801 : 0xfffff88000000022\nfffff88015fd9560 fffff88015fd9590 : fffff80001a65588 fffff8a000004500 0000000000000801 0000000000000000 : 0xfffff88000000101\nfffff88015fd9568 fffff80001a65588 : fffff8a000004500 0000000000000801 0000000000000000 706c747203fd3360 : 0xfffff88015fd9590\nfffff88015fd9570 fffff8a000004500 : 0000000000000801 0000000000000000 706c747203fd3360 0000000000000000 : nt!NonPagedPoolDescriptor+0x8\nfffff88015fd9578 0000000000000801 : 0000000000000000 706c747203fd3360 0000000000000000 0000000000000000 : 0xfffff8a000004500\nfffff88015fd9580 0000000000000000 : 706c747203fd3360 0000000000000000 0000000000000000 0000000000000000 : 0x801\nTHREAD_SHA1_HASH_MOD_FUNC:  dae5797abec67380765b465b6c035b3e5a1d53b6\nTHREAD_SHA1_HASH_MOD_FUNC_OFFSET:  2703da4d9a1487632d4aaf9e9878507989f3ce5c\nTHREAD_SHA1_HASH_MOD:  ec221d17c8daf41387749e9abdeb4c1f47399ea0\nFOLLOWUP_IP: \nQMUdisk64+e21d\nfffff880`0198f21d ??              ???\nSYMBOL_STACK_INDEX:  6\nSYMBOL_NAME:  QMUdisk64+e21d\nFOLLOWUP_NAME:  MachineOwner\nMODULE_NAME: QMUdisk64\nIMAGE_NAME:  QMUdisk64.sys\nDEBUG_FLR_IMAGE_TIMESTAMP:  5bebf09a\nSTACK_COMMAND:  .thread ; .cxr ; kb\nFAILURE_BUCKET_ID:  X64_0x50_QMUdisk64+e21d\nBUCKET_ID:  X64_0x50_QMUdisk64+e21d\nPRIMARY_PROBLEM_CLASS:  X64_0x50_QMUdisk64+e21d\nTARGET_TIME:  2018-12-08T16:42:21.000Z\nOSBUILD:  7601\nOSSERVICEPACK:  1000\nSERVICEPACK_NUMBER: 0\nOS_REVISION: 0\nSUITE_MASK:  272\nPRODUCT_TYPE:  1\nOSPLATFORM_TYPE:  x64\nOSNAME:  Windows 7\nOSEDITION:  Windows 7 WinNt (Service Pack 1) TerminalServer SingleUserTS\nOS_LOCALE:  \nUSER_LCID:  0\nOSBUILD_TIMESTAMP:  2015-02-03 03:25:01\nBUILDDATESTAMP_STR:  150202-1526\nBUILDLAB_STR:  win7sp1_gdr\nBUILDOSVER_STR:  6.1.7601.18741.amd64fre.win7sp1_gdr.150202-1526\nANALYSIS_SESSION_ELAPSED_TIME:  41c\nANALYSIS_SOURCE:  KM\nFAILURE_ID_HASH_STRING:  km:x64_0x50_qmudisk64+e21d\nFAILURE_ID_HASH:  {68cf04f8-ade9-61d7-4d22-44c2c70298f9}\nFollowup:     MachineOwner\n. Now we have the same crash / callstack but from 360FsFlt. Probably a case where dokan return wrong informations that leads to this.\nCan you reproduce this on a clean fresh win7 and give me exactly the way to reproduce this ?\nkd> !analyze -v\n\n\n*\nBugcheck Analysis                                    *\n*\n\n\nPAGE_FAULT_IN_NONPAGED_AREA (50)\nInvalid system memory was referenced.  This cannot be protected by try-except.\nTypically the address is just plain bad or it is pointing at freed memory.\nArguments:\nArg1: fffff880087cbd90, memory referenced.\nArg2: 0000000000000000, value 0 = read operation, 1 = write operation.\nArg3: fffff80005e7b061, If non-zero, the instruction address which referenced the bad memory\n    address.\nArg4: 0000000000000000, (reserved)\nDebugging Details:\nCould not read faulting driver name\nDUMP_CLASS: 1\nDUMP_QUALIFIER: 400\nBUILD_VERSION_STRING:  7601.23796.amd64fre.win7sp1_ldr.170427-1518\nSYSTEM_MANUFACTURER:  ASUS\nSYSTEM_PRODUCT_NAME:  All Series\nSYSTEM_SKU:  All\nSYSTEM_VERSION:  System Version\nBIOS_VENDOR:  American Megatrends Inc.\nBIOS_VERSION:  1802\nBIOS_DATE:  01/28/2014\nBASEBOARD_MANUFACTURER:  ASUSTeK COMPUTER INC.\nBASEBOARD_PRODUCT:  Z87-PLUS\nBASEBOARD_VERSION:  Rev 1.xx\nDUMP_TYPE:  2\nBUGCHECK_P1: fffff880087cbd90\nBUGCHECK_P2: 0\nBUGCHECK_P3: fffff80005e7b061\nBUGCHECK_P4: 0\nREAD_ADDRESS: GetPointerFromAddress: unable to read from fffff800060c1100\nUnable to get MmSystemRangeStart\nGetUlongPtrFromAddress: unable to read from fffff800060c12e8\nGetUlongPtrFromAddress: unable to read from fffff800060c1498\nGetPointerFromAddress: unable to read from fffff800060c10b8\n fffff880087cbd90 \nFAULTING_IP: \nnt!memmove+1d1\nfffff800`05e7b061 668b040a        mov     ax,word ptr [rdx+rcx]\nMM_INTERNAL_CODE:  0\nCPU_COUNT: 4\nCPU_MHZ: daa\nCPU_VENDOR:  GenuineIntel\nCPU_FAMILY: 6\nCPU_MODEL: 3c\nCPU_STEPPING: 3\nCPU_MICROCODE: 6,3c,3,0 (F,M,S,R)  SIG: 12'00000000 (cache) 12'00000000 (init)\nCUSTOMER_CRASH_COUNT:  1\nDEFAULT_BUCKET_ID:  WIN7_DRIVER_FAULT\nBUGCHECK_STR:  0x50\nPROCESS_NAME:  explorer.exe\nCURRENT_IRQL:  0\nANALYSIS_SESSION_HOST:  DESKTOP-QJ22MUT\nANALYSIS_SESSION_TIME:  12-09-2018 08:02:48.0469\nANALYSIS_VERSION: 10.0.16299.15 amd64fre\nTRAP_FRAME:  fffff880087c35b0 -- (.trap 0xfffff880087c35b0)\nNOTE: The trap frame does not contain all registers.\nSome register values may be zeroed or incorrect.\nrax=fffff8a007239000 rbx=0000000000000000 rcx=fffff8a0072410f0\nrdx=ffffffe00158aca0 rsi=0000000000000000 rdi=0000000000000000\nrip=fffff80005e7b061 rsp=fffff880087c3748 rbp=fffff880087c3b10\n r8=00000000000080f2  r9=00000000000007ff r10=0000000000000801\nr11=fffff8a007239000 r12=0000000000000000 r13=0000000000000000\nr14=0000000000000000 r15=0000000000000000\niopl=0         nv up ei ng nz na po nc\nnt!memmove+0x1d1:\nfffff80005e7b061 668b040a        mov     ax,word ptr [rdx+rcx] ds:fffff880087cbd90=????\nResetting default scope\nLAST_CONTROL_TRANSFER:  from fffff80005f0240e to fffff80005e844c0\nSTACK_TEXT:\nfffff880087c3448 fffff80005f0240e : 0000000000000050 fffff880087cbd90 0000000000000000 fffff880087c35b0 : nt!KeBugCheckEx\nfffff880087c3450 fffff80005e825ee : 0000000000000000 fffff880087cbd90 fffffa800a702000 00000000000080f2 : nt! ?? ::FNODOBFM::string'+0x3bc5f\nfffff880087c35b0 fffff80005e7b061 : fffff80006187372 0000000000000000 00000000000080f2 0000000000000006 : nt!KiPageFault+0x16e\nfffff880087c3748 fffff80006187372 : 0000000000000000 00000000000080f2 0000000000000006 fffffa800a68fc00 : nt!memmove+0x1d1\nfffff880087c3750 fffff80006184edb : fffffa800a2550b0 fffffa800dcadfb8 0000000000000016 fffffa800ca30c60 : nt!ObpCaptureObjectName+0x102\nfffff880087c37d0 fffff80006186a4b : fffffa800a255010 fffffa8006a1b220 00000000087c0101 0000000000000016 : nt!ObpCaptureObjectCreateInformation+0x279\nfffff880087c3850 fffff80006188a8c : fffffa8000000009 0000000000000000 0000000000000000 fffffa800dcadf10 : nt!ObOpenObjectByName+0xbb\nfffff880087c3920 fffff8000612b54b : fffffa800dcadfe8 fffffa8000100001 fffff880087c3b10 fffff880087c3ae0 : nt!IopCreateFile+0x2bc\nfffff880087c39c0 fffff88000c24180 : fffffa800dcadf10 0000000000000000 fffffa800d012648 0000000000000000 : nt!IoCreateFileEx+0xfb\nfffff880087c3a60 fffff88000c23be9 : fffffa800d012648 0000000000000000 0000000000000000 fffffa800c92a514 : FLTMGR!FltpNormalizeNameFromCache+0x190\nfffff880087c3b80 fffff88000c3c206 : 0000000000000000 000000000000000c 00000000ffffc07a fffffa800ca6b190 : FLTMGR!FltpExpandShortNames+0x239\nfffff880087c3be0 fffff88000c3c401 : fffffa800dca0000 fffffa800dcadf10 0000000000000101 fffffa800ca6b190 : FLTMGR!FltpGetNormalizedDestinationFileName+0x66\nfffff880087c3c10 fffff8800570879c : fffffa800ce9dbe0 0000000000000000 0000000000000101 fffff880087c3e38 : FLTMGR!FltGetDestinationFileNameInformation+0x1b1\nfffff880087c3df0 fffffa800ce9dbe0 : 0000000000000000 0000000000000101 fffff880087c3e38 fffff88000000024 : 360FsFlt+0xf79c\nfffff880087c3df8 0000000000000000 : 0000000000000101 fffff880087c3e38 fffff88000000024 fffff88000000101 : 0xfffffa800ce9dbe0\nTHREAD_SHA1_HASH_MOD_FUNC:  dc142bfaaea10ba7ddb58eb19818baab4204d465\nTHREAD_SHA1_HASH_MOD_FUNC_OFFSET:  a2182e165bed842074f66b64fcb6626f5555ef28\nTHREAD_SHA1_HASH_MOD:  f9c3e8fe9aabc7a022fa6d886a74c1598ec230a8\nFOLLOWUP_IP: \n360FsFlt+f79c\nfffff880`0570879c ??              ???\nSYMBOL_STACK_INDEX:  d\nSYMBOL_NAME:  360FsFlt+f79c\nFOLLOWUP_NAME:  MachineOwner\nMODULE_NAME: 360FsFlt\nIMAGE_NAME:  360FsFlt.sys\nDEBUG_FLR_IMAGE_TIMESTAMP:  5975ac30\nSTACK_COMMAND:  .thread ; .cxr ; kb\nFAILURE_BUCKET_ID:  X64_0x50_360FsFlt+f79c\nBUCKET_ID:  X64_0x50_360FsFlt+f79c\nPRIMARY_PROBLEM_CLASS:  X64_0x50_360FsFlt+f79c\nTARGET_TIME:  2018-12-09T06:38:40.000Z\nOSBUILD:  7601\nOSSERVICEPACK:  1000\nSERVICEPACK_NUMBER: 0\nOS_REVISION: 0\nSUITE_MASK:  272\nPRODUCT_TYPE:  1\nOSPLATFORM_TYPE:  x64\nOSNAME:  Windows 7\nOSEDITION:  Windows 7 WinNt (Service Pack 1) TerminalServer SingleUserTS\nOS_LOCALE:  \nUSER_LCID:  0\nOSBUILD_TIMESTAMP:  2017-04-28 02:13:49\nBUILDDATESTAMP_STR:  170427-1518\nBUILDLAB_STR:  win7sp1_ldr\nBUILDOSVER_STR:  6.1.7601.23796.amd64fre.win7sp1_ldr.170427-1518\nANALYSIS_SESSION_ELAPSED_TIME:  3eb\nANALYSIS_SOURCE:  KM\nFAILURE_ID_HASH_STRING:  km:x64_0x50_360fsflt+f79c\nFAILURE_ID_HASH:  {44c81255-59c5-9d28-6c45-8907373deb15}\nFollowup:     MachineOwner\n```. Would be interesting if there is something releated to https://github.com/dokan-dev/dokany/issues/499. Hi @winneryong ,\nHave you been able to test the changes ?. No problem @winneryong \nOtherwise what you can do is to fork dokan, apply the changes and make appveyor CI run and create an installer for you to make the test.. @winneryong You will need to import the dokan certificate. There is in the wiki some explanation how to use the snapshot build. https://github.com/dokan-dev/dokany/wiki/Build#user-snapshot. Hi @winneryong ,\nThank you for the feedback. I succeed to reproduce the BSOD with 360. The patch correctly fix the rename issue BUT seems like there is still an issue when renaming a very long path.\nHave you faced this issue also ? (Am doing the test on win10). Hi @TrabacchinLuigi ,\nDo you think this could be reproduce with the mirror changed ?. Hi @TrabacchinLuigi ,\nI focus currently https://github.com/dokan-dev/dokany/issues/759 by adding some debug lock logs by default to track such case. Will try to look into this when have time \ud83d\udc4d . @TrabacchinLuigi Hi,\nHave you selected the correct platform for the build ? \"Win10 Debug\" for exemple. Did you add correctly the certificat and enable windows driver option to allow selfsigned driver install ?\nhttps://github.com/dokan-dev/dokany/wiki/Build. Hi @taruti ,\nThe DOKAN_DRIVER_VERSION should only be updated when there is a breaking change. Otherwise older library would no longer use the driver.\nhttps://github.com/dokan-dev/dokany/blob/6424efd09d8efd5f1ae6622a6b4ef9be27d25153/sys/event.c#L604-L612\nBut it is right that DOKAN_VERSION had to be bumped...\nhttps://github.com/dokan-dev/dokany/blob/a0791e45f1df46f46c0cf6f5ae971d6c3fb9450d/dokan/dokan.h#L58\nI will add to the update version script this bump \ud83d\udc4d \nhttps://github.com/dokan-dev/dokany/tree/master/dokan_wix/SetAssemblyVersion\nA new release 1.2.1.2000 can be done including the bump library version and the 1.2.1.1000 drivers.. Hi @taruti ,\nVersion 1.2.1.2000 released => https://github.com/dokan-dev/dokany/releases/tag/v1.2.1.2000\nNow dokan version define is also updated by the setassembly https://github.com/dokan-dev/dokany/commit/aa0974d194ac0ab7d84c3db6d1787f80c39a4d37\nThank you again for your feedback !\n. Replace by setassembly bump define version\nhttps://github.com/dokan-dev/dokany/issues/765\nThank you for the PR @taruti \ud83d\ude80 . Merry Christmas you too @TrabacchinLuigi and to the other people of Dokan community!\nMay the open source be with you this year !\nhttps://github.com/dokan-dev/dokany/commit/5d5c7bf9967ada0189127f49028962ed5852e951. Hi @gfyllos ,\nDoes it crash instantly ? Could you check that the interface has properly been updated ? (some changes since 0.7.4 it changed)\nhttps://github.com/dokan-dev/dokany/wiki/Update-dokan-legacy-application-to-Dokany. Hi @gfyllos ,\nPlease let me know if this need to be reopened.\n. Hi @InspirationHello ,\nYes, this seems to be a case not currently handled.\nHere you have the part of code happening when createfile return an error and resources are released.\nhttps://github.com/dokan-dev/dokany/blob/master/sys/create.c#L1425-L1431\n. That what I thought. The shared violation is not more about a handle not\nclosed?\nLe jeu. 24 janv. 2019 \u00e0 08:01, InspirationHello notifications@github.com\na \u00e9crit :\n\nThank you very mush, I've used some bad tricks to avoid it. eg. the CREATE\nirp is not supported cancel routine......\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/769#issuecomment-457089116,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AEHJe5ViM5YNTjon1hl0DLhCMW5C5LR4ks5vGVo8gaJpZM4Z6_Xc\n.\n. This will be done by the kernel windows that will forward to dokan. We do not have a hand on it.\nOnly issue could be that we have a deadlock on a IRP that block the cleanup / close. Hi @InspirationHello ,\n\nHave you succeed to fix this with https://github.com/dokan-dev/dokany/pull/695/commits/71a184562c1fde774fbd5264c3a91870c1dd9b37 ?. Hi @DatJulian ,\nYou are right, only CreateFile was protecting alt stream calls.\nFixed with https://github.com/dokan-dev/dokany/commit/2442bb0a663cd52c5c8b0d975b16598bc695280e\nThank you for the report \ud83c\udfc6 very appreciated ! . Hi @Mikeinnc ,\ncould you check if you have this flag in your reg set ?\nhttps://github.com/dokan-dev/dokany/blob/88e89fc447699af5ed0e671ed90d54e1d97f967c/dokan_wix/Dokan_x64.wxs#L116-L123. This is wierd because that the only way to get the error message you face:\nhttps://github.com/dokan-dev/dokany/blob/88e89fc447699af5ed0e671ed90d54e1d97f967c/dokan_wix/Dokan_x64.wxs#L178\nhttps://github.com/dokan-dev/dokany/blob/88e89fc447699af5ed0e671ed90d54e1d97f967c/dokan_wix/Dokan_x64.wxs#L135. Hi @Mikeinnc ,\nThis is weird. Having the service dokan driver as delete state but windows do not remove it during a reboot.\nI imagine you no longer have dokan software installed at all ?\n. @Mikeinnc Does the dokan1.sys exist even after uninstall?. Hi @Mikeinnc ,\nCould you try to run with the full debug log of the Dokan_x64.msi:\nmsiexec /i Dokan_x64.msi /l*v DokanLogFile.txt. Part of the log where the error happen:\nExecuteInstall:  ExecuteInstall Initialized.\nExecuteInstall:  GetCustomActionData start.\nExecuteInstall:  CustomActionData=\"INSTALLFOLDER=C:\\Program Files\\Dokan\\DokanLibrary-1.2.1\\\"\nExecuteInstall:  GetCustomActionData exit.\nExecuteInstall:  StartDokanCtlProcess with param \"/i n\".\nExecuteInstall:  InstallFolderPath=\"C:\\Program Files\\Dokan\\DokanLibrary-1.2.1\\\"\nExecuteInstall:  InstallDokanctlPath=\"C:\\Program Files\\Dokan\\DokanLibrary-1.2.1\\dokanctl.exe /i n\"\nExecuteInstall:  Create redirect pipe.\nExecuteInstall:  CreateProcess dokanctl.\nExecuteInstall:  Wait dokanctl finish...\nExecuteInstall:  GetExitCodeProcess dokanctl.\nExecuteInstall:  Read dokanctl output\nExecuteInstall:  ReadFile error: 109\nExecuteInstall:  dokanctl output : \"\"\nExecuteInstall:  dokanctl return an error (-1073741701)\nExecuteInstall:  Cleanup dokanctl handle.\nExecuteInstall:  StartDokanCtlProcess exit.\nExecuteInstall:  Error 0x80004005: StartDokanCtlProcess failed\nhttps://github.com/dokan-dev/dokany/blob/master/dokan_wix/WiXCA/CustomAction.cpp#L6\nVery wierd that dokanctl has no output at all. Could you check that vc redist 2017 x64 / x86 are correctly installed on your computer ?\nThe process does not seem to be able to start correctly.. @Mikeinnc do you think see should be closed ? had you time to look into it ?. @Mikeinnc Thanks a lot for the feedback. Glad that we succeeded to find the reason at the end! :). Hi @wjcsharp ,\nIndeed this is a mistake ! \ud83d\udc4d\nThank you for the PR and for your work that is very appreciated ! \ud83e\udd47 \n. Hi @TonyValenti ,\n\n\nI cannot really say since depending on the remote API you have access. The best would be to only check access during the CreateFile, Download wanted blob during read and cache it. During write, upload it and cache the data in case it is read before it is uploaded.\n\n\nOn the dokanfileinfo struct param of write function, you have the PagingIo that can give you the information.\nAlso CreateFile FileOptions will give you some information\nhttps://docs.microsoft.com/en-us/dotnet/api/system.io.fileoptions?redirectedfrom=MSDN&view=netframework-4.7.2\n\n\nYou can use async task but each dokan functions need to return with the proper result before the timeout that you can extend with DokanResetTimeout.\n. @kishoreannapureddy Hi,\n\n\nYou can increase the device block size. It will affect the read size in some cases. I just do not remember the fuse option to do it. Can you look into the dokan fuse library code :-D? Am not on my computer right now. Hi @kishoreannapureddy ,\nI just looked and the options are not accesible from fuse options.\nhttps://github.com/dokan-dev/dokany/blob/master/dokan_fuse/src/dokanfuse.cpp#L498-L527\nThe option to use is SectorSize & AllocationUnitSize\nhttps://github.com/dokan-dev/dokany/blob/master/samples/dokan_mirror/mirror.c#L1594-L1597\nDo you think you could make a contribution for adding this options to the fuse wrapper ?. Yes can do a PR \ud83d\ude80 !. Thank you for the PR @kishoreannapureddy \nDoes it changed the behavior on your side and this can be closed ?. Perfect ! Thanks a lot @kishoreannapureddy for the feedback and the PR !. Hi @akkishore ,\nThank you for the contribution \u2764\ufe0f very appreciated !. This looks good. Even if the default value set here is 0.\nProbably it is better and the dokan value will be set for out of range reason.\nhttps://github.com/dokan-dev/dokany/blob/5d5c7bf9967ada0189127f49028962ed5852e951/dokan/dokan.c#L160-L168\n. Hi @Hasan-Jawaheri ,\nYou are right this race can happen. Just moving FSCTL_ACTIVATE_KEEPALIVE before creating the DokanLoop should fix the issue without problems. Do you agree with this ?\n. How does IOCTL_EVENT_WAIT is required to happen before FSCTL_ACTIVATE_KEEPALIVE ?. Hi @Hasan-Jawaheri ,\nSorry, I just came back to your issue from the beginning.\nI badly understood your first message so please ignore my first message.\nIn dokan there is two keepalive mechanisms:\n- FSCTL_ACTIVATE_KEEPALIVE in DokanMain that make sure the dokan user fs process is still alive. This will auto unmount the device when process die not to keep a ghost device.\n- Kernel query forward to dokan library in DokanLoop. This timeout can be configured with dokanOptions->Timeout and reset with DokanResetTimeout if the user fs needs more time. This avoids having an alive device blocking all system IO and create unstable system behavior.\nWhat you are talking is about the second one. Yes by adding a sleep at the beginning of DokanLoop you will get a timeout if it is > than dokanOptions->Timeout. This is not an issue but an expected behavior.\nWhen debugging, a break point will ofc reach this timeout and unmount your process. This is for the good of your windows stability.\nThe only race condition is if the DokanLoop thread take more than the Timeout option to start (15 sec by default that I more than enough to start a thread).. Hi @Hasan-Jawaheri ,\nI just followed your steps. Run the mirror couple of times even couple in the same time and never had the print showed.\nAre you sure to run the good kernel driver version ? Could you enable the kernel debug logs to see what the reason you could get a STATUS_INVALID_PARAMETER (only possible error here) ?\n. @Hasan-Jawaheri https://github.com/dokan-dev/dokany/wiki/How-to-Debug-Dokan#enable-logs. What's happening:\n-We want to catch keepalive file open request here and skip the forward to dokan library user.\nhttps://github.com/dokan-dev/dokany/blob/master/sys/create.c#L791-L797\n-Instead the keepalive is caught much before here\nhttps://github.com/dokan-dev/dokany/blob/master/sys/create.c#L544-L562\nbecause likes @Hasan-Jawaheri pointed , library threads are not currently running and device not fully mounted.\nLoop until the threads are ready, could be a working idea. But since keepalive createfile does not need them, it should not wait them. I have changed the HasEventWait condition to be skipped if it is keepalive call.\n@Hasan-Jawaheri @taruti @TrabacchinLuigi\nCould you test and give feedback to be sure this fix https://github.com/dokan-dev/dokany/commit/0149dde8104e9447b46a7af5dee8f70cb5951b36 fully correct the behavior on your sides ?\n. Here is the 1.2.2.1000 https://github.com/dokan-dev/dokany/releases/tag/v1.2.2.1000 including the fix \ud83d\udc4d . Perfect ! Thanks you everyone for your feedback and helps on this \ud83d\udc4d . Hi @alexander-ossur ,\nCould you provide the mirror log when std::filesystem::remove (directory__, error__); is called ?. Hi @alexander-ossur ,\n64 is for the new FileDispositionInformationEx This value is available starting with Windows 10, version 1709.\nhttps://docs.microsoft.com/en-us/windows-hardware/drivers/ddi/content/ntddk/ns-ntddk-_file_disposition_information_ex\nI will look to add it.\nThank you for the report !. Hi @alexander-ossur ,\nI just added FileDispositionInformationEx. Can you just rebuild the dokan library on your side. Replace it with yours and make a test ?\nhttps://github.com/dokan-dev/dokany/commit/1dfa9e43a4ac1c19c9202cd67750f8c627ff63ff\nI am not fully sure of how it has to work. MSDN is not fully clear. I check FILE_DISPOSITION_DELETE and should work with your library (flags 0x3). I just still wonder how FILE_DISPOSITION_ON_CLOSE has to be used.\n(I updated your issue title regarding what we found). Thank you for the feedback @alexander-ossur \nJust fixed this part \ud83d\udc4d https://github.com/dokan-dev/dokany/commit/d318f82fc232f04595505582c93c33d97acc4ae9\nTested on my side and works great.. @alexander-ossur yes the fix is also in the driver code\nhttps://github.com/dokan-dev/dokany/wiki/How-to-Debug-Dokan#dokan-driver\nor instead of building you can use the snapshot \nhttps://github.com/dokan-dev/dokany/wiki/Build#user-snapshot. @hans-olav Hi,\nThank you for the pull request. I can understand that this thread limit can be small depending on the user FS needs and cpu resources he has.\nHave you looked at the async branch dokan? This should be much interesting for you than growing the thread limit.. Async branch is not fully stable for now I have to say \ud83d\udc4d Still looking for people willing to contribut on it.\n15 is a legacy value, we can increase it ofc. I just cannot say what is the \"right\" value. You made your test on what type of hardware ?. Thank you for the informations @hans-olav \ud83d\udc4d Fully agree with you here.\nYour contributions are much appreciated for the dokan project as always \ud83c\udfc6 thank you !. Hi @jjacobsfs ,\nCould you provide the debug logs of the mirror ? https://github.com/dokan-dev/dokany/wiki/How-to-Debug-Dokan#mirrorfs. Thank you @jjacobsfs logs seems to be truncated, possible that the app is killed ?. @jjacobsfs Any anti-virus or third part that could do this?. @jjacobsfs we will need more informations to reproduce this or logs to see what is happening. Will continue here #779 . hi @dggomes ,\nUNC option is only available for network device. See the warning at the start: https://github.com/dokan-dev/dokany/blob/5d5c7bf9967ada0189127f49028962ed5852e951/samples/dokan_mirror/mirror.c#L1610-L1615\nSee a mirror of C drive is normal. There is other options you may want to see https://github.com/dokan-dev/dokany/wiki/Use-Mirror-example. @eocron Hi,\nThere is alright \u00e0 zip file with all the binaries for every architecture. Is this not what you are looking for?. @andreas-eriksson Hi,\nCould you give the full debug logs of the app and specially when it stops?. Could this be the same to https://github.com/dokan-dev/dokany/issues/779 ?. Will continue here #779 . I agree this part had to be better explained. Following @Rondom guidance \ud83d\udc4d does this https://github.com/dokan-dev/dokany/commit/fef36fea2f5bee126d269aaa8df29e89a57282d7 would be enough ?. I can understand your points. I just not fully sure that the place to details how DOS expressions are working. There are a lot of documents online that fully explain and give examples about this subject.\nIf we make enough clear the type of expression used here, it would normally be enough for the devs find the proper information. Do you agree ?. Hi @TrabacchinLuigi ,\nI understand this fix, but probably we should look deeper into this and understanding what\u2019s happening and apply a proper fix.. Please see https://github.com/dokan-dev/dokany/issues/776#issuecomment-470262303\nI will try to make a release with it after the feedback as fast as I can \ud83d\udc4d . @oldenj Hi,\nThank you for the report.\nCould you rerun the analyze and load the symbols of the release before ? (you can find them in the zip release). semicolons is not needed. Is there any other error display about the symbols ? Are you sure using the good symbol of the right version ?. Hi @akkishore,\nI never used installforge, but I will guess they have support to package msi dependency.\nYou should find answers of your other questions in the github wiki.\nDo not hesitate if you have further questions.\n. @akkishore Please see https://github.com/dokan-dev/dokany/wiki/How-to-package-your-application-with-Dokan. Hi @barcelona-messi ,\nCould you provide more information on this ? Did not face that.. Oh, so this is not related to dokan signature.\nYou will probably need to look at your cert issuers for this or the chain certificate on your computer.. @matepek does this should not be made in fuse_main_real ?\nLike that it would only be made one time.\nAlso if AddSeSecurityNamePrivilege fail, it is better to ignore it. FuseGetFileSecurity could still work in different case.\n. @matepek Oh this seems to be a dirty hack :smile: I am not sure the system is not going to like to get everytime the same security informations.\nYour implementation would be the same as returning virtual static security information since DokanFileInfo->DokanOptions->MountPoint as been created by dokan.\nI understand why you did this since you cannot request the informations to the file system or by the fuse API.\nBut I am sceptical on this implementation :cry: \n. Hello @matepek ,\nI was meaning that FuseGetFileSecurity is always going to return the same informations since it always open the same file when he should return the specific information related to the file requested.\nTherefore, I am not sure the system will like to get informations of a directory when he request a file.\nMaybe the implementation should return different values when it is a file, directory,...requested ?\nI am also not really familiar with SECURITY_INFORMATION :cry: sorry.\nhttps://msdn.microsoft.com/fr-fr/library/windows/desktop/aa379573%28v=vs.85%29.aspx\n. For information, doxygen does not always need the \\ref. In this case, doxygen already understood it without \\ref.\n. There is a difference with DOKAN_OPERATIONS#ZwCreateFile and DOKAN_OPERATIONS.ZwCreateFile ?\nBoth seems to work :D\n. Same as https://github.com/dokan-dev/dokany/pull/314/files#r74699351\n. Same as https://github.com/dokan-dev/dokany/pull/314/files#r74699351\n. Should be ZwCreateFile and not CreateFile\n. Should be ZwCreateFile and not CreateFile\n. Same as https://github.com/dokan-dev/dokany/pull/314/files#r74699351\n. Same as https://github.com/dokan-dev/dokany/pull/314/files#r74699351\n. Same as https://github.com/dokan-dev/dokany/pull/314/files#r74699351\n. No ref possible here. SECURITY_DESCRIPTOR is not define in dokan but windows headers.\n. No ref possible here. PWIN32_FIND_STREAM_DATA is not define in dokan but windows headers.\n. @Rondom Yes, this can be removed I think.. Search. ",
    "opendedup": "It does appear in dokanx. It seems to happen when IO is slow but its difficult for me to confirm\n. ",
    "marinkobabic": "In your case the irp request timed out. You can increase the timeout and recompile the driver.\n. @m00fighter\nIf the timeout is reached during the write operating the os will result in the message above. In the newest version of dokan you will be able to run ResetTimeout so that dokan will keep waiting for the response of your write operation. The method can be executed multiple times. \n. @fds13 \nThe new version is not available yet, so the method is not there. Liryna has the responsibility for creation of a new build.\n. @Maxhy\nThere are few changes which you should merge as well. \n@viciousviper\nIf you could provide more details using WinDbg and the command !analyze -v when you have opened your crash dump, that would be great. \nThere is no reason for a BSOD. We must identify the problem and solve it.\n. The last crash is interesting. You should get the actual symbol file and then execute the analyze command. So we would get a clear stack trace.\n. @Liryna \nJust few information for you, to make some details clear so that we can together investigate the issue. Inside of the method DokanCompleteIrp you have the following line https://github.com/dokan-dev/dokany/blob/master/sys/event.c#L319 so the entry is removed. \nTo your previous question the completeList is inside of the local scope of the method. So it doesn\u2019t help to protect this list.\n@viciousviper \nIs there a way to get the memory.dmp from you?\n. Full would be great if possible :-)\n. @Liryna \nAre you able to reproduce the isssue. I have started the DokanTest min. 25 times without crash.\n@voltagex \nWhen you test the DokanTest.exe without debugger attached, are you able to reproduce the crash? When you are debugging, which method of the callbacks?\n. The fact is that a lot of people have the BSOD while debugging in Visual Studio. What is the difference when the debugger is used, compared to running the user mode application without attached debugger: \nIf debugger is used we slow down the request and other requests are not processed fast enough which results in more timed out Irp requests. If the developer detaches the debugger then the process terminates. The timeout thread realizes that the user mode application is no longer there and starts to clean up everything. Imagine that the timeout thread is collecting the timed out Irp requests and those are now in a list to complete. At the same time the driver removes all the other pending Irp requests and deletes the device and symbolic link. The timeout thread completes the Irp requests in a loop for a device which no longer exists and here we have an invalid Irp which is completed.\nTo simulate the timeout we could delay the response from user mode methods randomized to cause some of the Irp requests to time out. Then at some point we should exit the application. After several tries the application should crash.\nIt\u2019s actually just a theory but we can try to reproduce the issue this way, if the theory is correct.\n. @Liryna \nhttps://github.com/dokan-dev/dokany/blob/master/sys/timeout.c#L197-L203\n. @Liryna \nIt's just a question of time until we will remove the service. To my opinion the service is not needed if the Mount Manager of windows is used.\nIf would not make to much dependencies to the service. An option you have is to let the driver to unmount the drive with force flag. What you need to do is to extend UNMOUNT_CONTEXT with Flags and set the force unmount flag here https://github.com/dokan-dev/dokany/blob/master/sys/timeout.c#L64. The mounter service will take the EVENT_CONTEXT and set the flag here after this line. https://github.com/dokan-dev/dokany/blob/master/dokan_mount/mounter.c#L391\n. @Liryna \nThis is not possible what you have described. Please check the following lines https://github.com/dokan-dev/dokany/blob/bdc64b0cdce4f6a2b7b4a046c7eca73818d378ed/dokan_mount/mounter.c#L179-L181 If the entry is not found and the force flag is set, an unmount will be performed.\nMountManager requires Plug & Play implementation. By the way, can you open pdf files on Windows 8.1 using the native pdf viewer and not the Adobe Reader?\n. @Liryna \nYou are right :disappointed_relieved: so this way an unmount is not possible. A device can have multiple mountpoints and the service has lost all information after the restart. In this case you can just loop over all existing drives and perform a QueryDosDevice until you find the target device and then you can set the MountPoint and perform the unmount. \nThe reason you can't open the pdf file is that since Windows 8 a lot of programs rely on OpLocks  https://msdn.microsoft.com/en-us/library/windows/hardware/ff551007(v=vs.85).aspx . The implementation is no longer optional for File System Drivers. Keep it in mind, when somebody is not able to play/open some formats. The check what requests are sent you can use the process monitor or the filespy https://www.osronline.com/article.cfm?article=370 \nAs you can see there is a lot to do. The first stuff which should be done is to change the DriverEntry like in fastfat example and to catch all exception on one place.\n. @Liryna \nI mean the following example which can be very easy implemented and would help us to make the driver more stable https://github.com/Microsoft/Windows-driver-samples/blob/3528ffbb369fa0611aefd14c97bdd6ac5ee50c41/filesys/cdfs/cddata.c#L223-L240\n. Please download the driver from this post https://github.com/BenjaminKim/dokanx/issues/47 and test it. Should work also in your case. If it works fine I will make a pull request and dokany can merge it.\n. @mapomme1108 \nHave now made a new version, the download link remains. If you still have a BSOD would be great to get the memory.dmp or some BSOD details. Maybe you can also provide steps to reproduce, even if I must install some software provided by you. \nThe change I have made now is related to deletion of device object, when keep alive timeout is reached, is not used or if your application was not closed properly and somebody still tries to access the device.\n@Liryna \nIf I provide the changes now, some discussions will start. I would like to fix the BSOD first and you will get the source for sure. You can also try to investigate the BSOD and maybe we will have the same solution at the end.\n. You can use the newest dokan library, but my driver. So I have to install https://github.com/tuiSSE/win-sshfs and then run the software. Close it and shutdown the machine to get the BSOD?\n. I'm not able to reproduce your issue with https://github.com/dimov-cz/win-sshfs/releases 1.5.12.5 and dokany version 0.7.1. So please provide me all links of the installers and the steps so that I can reproduce the problem. If I can reproduce it, I will fix the BSOD :-)\n. So I was able to reproduce the BSOD using FISSH. Please download this driver and perform the test again and let me know if all works as expected. Let's see if you can break this version of the driver.\nWhat here the special case is, is that we have two dokan devices. That is the reason why it's so hard to reproduce this issue.\n. You should never get a BSOD even if your application crashes. Did you try the driver above?\n. @mapomme1108 \nAs you can see in the comment above winsshfs worked from beginning on with latest Rc. Try the same using FISSH and you will fail. No idea why you install a x86 driver on x64 machine.\n@Maxhy \nI have a fork of dokanx. My commits are just not synced yet. Makes no sense to make a pull request because we have still a not finished discussion about my latest pull request. \nIf you are not able to reproduce the issues above it will become hard to discuss about the changes because you can't prove them. Don't think the changes would be merged in this case.\n. @Liryna\nYou are fine. I hate it to make questions and to get no feedback. This was the case in the discussion with Mathy and Benjamin. \nBy the way my changes related to BSOD are now synced to my fork of dokanx. You can investigate the changes. Feel free to ask if something is not clear. I'm still working on a special BSOD which is hard to reproduce. This one was not reported by community. \n. 1. CopleteRequest was sent even if the state was STATUS_PENDING. Using one single method which completes the Irp I can ensure that this does not happen again.\n2. The problem which happens rare is that the KeWaitForSingleObject hangs forever. Using the IoAllocateWorkItem I was able to fix the problem.\n. Correct. You can test it using FISSH. Simple way to reproduce is:\n1. Run FISSH\n2. Drive Z is mounted. Mount a second drive so that we have minimum two dokan devices\n3. Restart dokan mounter service\n4. Kill FISSH using task manager\n. Please try it on clean Windows 8.1 and let me know how I can reproduce it.\n. Pleaso do the following:\n1. Download the WinDbg\n2. File -> Open crash dump\n3. Navigate to c:\\windows\\memory.dmp and open it\n4. Type !analyze -v and confirm it with enter\n5. Post the content here of the output whenever it changes\nThanks\nMarinko\n. Don't forget to rename the memory dump because the system overwrites it every time you get BSOD. Maybe we need one of them.\n. Your dump would be very interesting if you could provide it. Is it always the same stack trace? Please send us the link to the dump.\n. It's a merge issue. Can be fixed very easy. DokanStopCheckThread shoul remove the following lines \nKeSetEvent(&Dcb->KillEvent, 0, FALSE);\nif (Dcb->TimeoutThread) {\n        KeWaitForSingleObject(Dcb->TimeoutThread, Executive,\n            KernelMode, FALSE, NULL);\n        ObDereferenceObject(Dcb->TimeoutThread);\n        Dcb->TimeoutThread = NULL;\n    }\nThose lines are part of DokanStopCheckThreadInternal.\n. The next time you have this issue please execute inside of the command prompt\nNET START Dokan\nAnd check if the application works.\n. @suy \nYou don't need to write any installer for tests. Just download this driver and perform the test again and let me know if all works as expected. Before you do that, remove the previous driver. For installation just right mouse click on inf file and select install. Reboot the machine and check if all works. It's the simplest way to install the driver.\n. @suy \nIs the machine Windows 7. If the answer is yes, so try to install the following hotfix\nhttps://www.microsoft.com/en-us/download/details.aspx?id=46148\n. It depends how your application which consumes the dokan.dll is compiled. If it's compiled for for x86 then your have to install Visual C++ 2013 Redistributable for x86 and otherwise fro x64. This is the only logical way. Depending on the target plattform you will use different dokan.dll.\n. Will be fixed\nhttps://github.com/dokan-dev/dokany/issues/27#issuecomment-122595741\n. Dokany driver actually never raises the SHARING VIOLATION because the driver does actually not implement the ReferenceCount and OpendHandleCount https://github.com/dokan-dev/dokany/blob/837633ab019a4b8b2b4181b318eb5de38e869327/sys/dokan.h#L258-L259\nWhat is the expected timeframe for the implementation of the missing functionality from your point of view?\n. ReferenceCount is the actual FileCount in the dokan code. You can reference a file for various operations (not only open) and this prevents the fcb from being freed. OpenFileCount is meant for how many times is the file opened. If you try to open the file > 0 times, then the check should be performed.\nIn the example above provided by microsoft fastfat the count is used for the volume and not for the file it self. But the code would look the similar way.\n. The problem I actually see is that CreateFileMapping does not send an IRP request to the filesystem. So the file system has no idea, that the file is opened a second time. On NTFS filesystem this works properly whyever :worried:\nIn the actual version of dokan I think when you do a CreateFile of the same file two times (without to close the handle), even then you will not get SHARED_ACCESS_VIOLATION. This is something which can be fixed.\n@Liryna \nPlease can you confirm my second statement?\n. @Liryna \nThis is the reason that OpenFileCount can't be increased by filesystem, because it has no idea about it. Please check my last checking of my fork.\n. @Liryna Should now be available\n. @Liryna \nThe change is 6 days old https://github.com/marinkobabic/dokanx/tree/Windows8DeleteIssue/sys\nPlease check my changes and test it well :-)\n. The first handle is closed as you can see above\nCloseHandle(hFile);\nCloseHandle(hMap);\n. You are right, this is because I have no idea how to manage the CreateFileMapping. On NTFS event if you close the hand to the file and hMap and you did not UnmapViewOfFile the handle somehow remains. This is the reason why you get on NTFS the exception on the second file and dokan returns the exception on the third file. Dokan gets only notified when you do CreateFile and CloseHandle.\n. @Liryna \nThis is not an option. I have seen now, that it may work when we catch the IRP_MJ_ACQUIRE_FOR_SECTION_SYNCHRONIZATION. But we need to investigate this one to get it work.\n. Seems to be an IRP for minifilter. But there must be one for file system driver.\n. @Liryna \nBefore the change you can do CreateFile as many times as you want, you will get always SUCCESS message. The change checks the share, if you open the same file a second time. \nSectionObjectPointers have the information about Memory Manager and if the file is memory mapped. But we need to implement it in a clean way. \nI would suggest to keep the change in the development branch, except somebody requests the change. Just put it on your todo list.\n. @shlatchz\nPlease try using the mirror.exe and your video file. If you still fail please provide the video file and tell us which version of vlc player you use.\nIf you don't fail using the mirror,  you can investigate what you are doing different. \n. What is the output if you run \nfsutil fsinfo?\nDoes this hotfix make any difference\nhttps://support.microsoft.com/en-us/kb/2618914\n. Did you run the command elevated? Normally there should be some sector size information. \n. What must be changed is Bytes per Cluster. As example you can run the command \nfsutil fsinfo ntfsinfo c:\nagainst an ntfs drive. Here some details https://support.microsoft.com/en-us/kb/314878\n. FileFsSizeInformation is handled in user mode code and it sets SectorsPerAllocationUnit and every system runs into this code. It should work. \nHaven't seen so far that the system executes FileFsSectorSizeInformation.\n. The installer of dokan should be extended and deploy the VC++ redist. This way nobody would face this problem anymore.\n. @Liryna \nThe comment says \"Needs to free openInfo because Close is never called.\" The developer expected that the close will not be executed because of the status pEventInfo->Status != STATUS_SUCCESS\nThe fact is, that even in this case the cleanup is executed. Therefore the pOpenInfo should not be freed during create. Cleanup requires the pOpenInfo.\nHere you have the mapping table Win32 to NTSTATUS https://support.microsoft.com/en-us/kb/113996 \nGetLastError code should not be passed directly to the driver. GetLastError is the Win32 error and not NTSTATUS.\n. No. Then you will have always a discussion of mapping. Which win32 errors do you map to which code. Please add this code as well and so on...\n. @Liryna \nWow, a lot of changes. You had also to remove a lot of code :smile: Great job! :+1: \n- Please check your code for return 0 and replace it using the STATUS_SUCCESS. \n- Also check where result == 0 is used and change the code if possible.\n- In generally is the question if status > 0 should be used. Inside of the driver NT_SUCCESS and NT_ERROR is used http://rogerkar.blogspot.ch/2009/06/nterror-ntsuccess-identifier-not-found.html. Here the definition https://msdn.microsoft.com/en-us/library/windows/hardware/ff565436(v=vs.85).aspx\n. It tried to access the volume. If you can do the same again to reproduce the problem, then I would install Ccleaner on my machine :-)\n. Yes the driver is still alive. Depending on how many threads you have defined, those will will try to execute your code on different threads. If the keep alive is turned on, the method will be executed successfully and the driver will not unmount. If you are debugging for a long time, driver will tell the system that there are not enough resources. You should never get a blue screen. \nBy the way you could make your DokanError enum as ulong. This would simplify the interface and the communication to driver. No translation between DokanError and NTSTATUS needed, because DokanError is the NTSTATUS. \n. @Liryna \nThis is exactly the point. You should not have a negative value. NTSTATUS has no negative value. Developer must know what should be returned back to file system. DokanError provides the most used options so choose one of them. Such code like -1 should not exist. \n. Nobody is forced to move to new version :-)\n. Will try to reproduce the issue tomorrow. Service should not be affected. After the mount you can even shutdown the service and all should work properly except the unmount. But like you described above the BSOD happened while debugging and not during the unmount. \nYou can mount and then shutdown the service and start to debug and see if the BSOD still occurs. \n. I was unfortunately not able to reproduce the BSOD reported here. \nWhat happens in the background and makes the system unstable:\nIf the developer is using WinDbg to attach the user mode application, there seems to be no more multithreading. The whole applications stops and we have a lot of IRPs timed out. This is different in case of Visual Studio, only one thread hangs and other IRPs are processed. \nIt seems like a lot of STATUS_INSUFFICIENT_RESOURCES causes the system to become unstable, because the crash does not happen inside of the dokan library.\nWhat should be changed:\n\nGenerally the developer should have the option to set the global timeout for the IRPs and also to execute ResetTimout if the operation takes longer than normally. This way we will not have a lot of IRPs timed out and the system remains stable during debugging.\nThe driver should in case of timeout not return STATUS_INSUFFICIENT_RESOURCES (it\u2019s not true). This seems actually to make the whole system unstable. The return value should be STATUS_RETRY or STATUS_IO_TIMEOUT. I prefer the first option. \n\n@Liryna \nPlease can you increase the timeout in the driver and return STATUS_RETRY when timed out and test locally on you machine if you can debug stable without any issues?\n. @Liryna \nI was testing on Windows 10 and I had multiple different BSOD, while blocking one, two ore  more threads and caused them to timeout this way. Then I used the task manager to kill the application. \nKeepAlive was not used in this case. So then we have the next question, why is keep alive an option? Is there a reason to turn it off?\n. @Liryna \nSo you are going to introduce some breaking changes? :smirk:\nOne more for the todo list. Please add also to the todo list \"use LookasideList\" for fcb and ccb.\n. @viciousviper\nWill change the code according to your request. Actually my laptop does not work, so I will have some delay :-(\n. @Maxhy \nYou are right that IoRegisterFileSystem should be executed. But I don't agree with the statement above, that the File System Device and Volume Device can't be the same device. I can't find this statement in microsoft example, documentation nor in the books. Just a post in a forum is not enough to build it that way.\nJust as info, dokan has some duplicate code in the start (DokanCreateDiskDevice) and IRP_MN_MOUNT_VOLUME.\n. The documentation is correct. So when the IRP_MN_MOUNT_VOLUME occures the command of creating device should look the following way.\nStatus = IoCreateDevice(\n                 DriverObject,\n                 sizeof(MY_VCB),\n                 NULL,\n                 FILE_DEVICE_DISK_FILE_SYSTEM,\n                 0,\n                 FALSE,\n                 &VolumeDeviceObject );\nor in our case the secure method should be used. So the fix may be just to leave the name NULL like in my example.\nThe system checks if the Vpb has a device associated. If not or the Device is not mounted, it executes the IRP_MN_MOUNT_VOLUME on the dokan driver. Dokan creates then the device without name and makes the association to Vpb. \n. @Maxhy \nThere is no reason for an additional Volume Device like described in the workaround. All I wanted you to do is here https://github.com/dokan-dev/dokany/blob/develop/sys/init.c#L532 set to NULL. The job is done. FILE_DEVICE_DISK_FILE_SYSTEM should always be unnamed and this is the reason the FltMgr fails. Please can you try this fix before going on.\n. @Maxhy \n- Your first point is the dokan FILE_DEVICE_DISK which should have a name. As you can see in the example the method is in DriverEntry. They are not using FILE_DEVICE_DISK, but this is the disk the IO Manager is talking to and then it realizes that VPB is NULL and it requests the CdMountVolume.\n- Then your second point comes in play, which is the FILE_DEVICE_DISK_FILE_SYSTEM and should be unnamed. As you can see in the example, we are now in the method CdMountVolume.\n. I can just confirm what kenjiuno described above. Dokan has some methods already (https://github.com/dokan-dev/dokany/blob/62447bf97171e2187325ac30834e6bc15ef4d084/sys/init.c#L331) , but the implementation seems not to be complete.\nFor the network drive the FILE_DEVICE_NETWORK_FILE_SYSTEM should be used, in my opinion.\n. Haven't tested it yet. On which operating system are you testing? Do I need any special configuration to get it failed.\n. I have done some research and here the results explained:\n\"If somebody tries to open a file the I/O manager checks to see whether \\Device\\\nDokanVolumexx\u2019s VPB references a file system. If it doesn\u2019t, the I/O manager asks each registered\nfile system driver via a mount request whether the driver recognizes the format of the volume in\nquestion as the driver\u2019s own.\"\nThis means that IoRegisterFileSystem for dokan is not a must. If you want to register the filesystem, so please do it in DriverEntry like in the example of fastfat and cdfs. The name you will use there will be RtlInitUnicodeString( &UnicodeString, L\"\\Dokan\" ); This process is totally independent of other stuff we do in the driver. The device used for the IoRegisterFileSystem does not represent the Volume nor Disk Device.\nInside of the MountVolume routine IoCreateDevice should create a file system device without a name. The pointer of the file system device, which in this case represents the Volume must be set on DeviceObject of the vpb. The vpb->RealDevice is the device created using the option FILE_DEVICE_DISK and it is not the created volume device.\n. - Actually nobody has reported an issue related to this point, so it should be implemented, but it has no high priority\n- Yes you can, please check the Microsoft samples. You have to register all supported file systems inside of the driver entry (https://github.com/Microsoft/Windows-driver-samples/blob/master/filesys/fastfat/fatinit.c#L405-L408). User can create using the same driver a network and a local disk.\nIt makes sense to finish this task. I would suggest to go on with this task and to complete it. From my point of view the highest priority has the oplock implementation, to be able to support Windows 8 and following systems properly. Please let me know, whenever you want me to make a review of the code.\n. Will see what I can do ;-) \n. @Maxhy \nSo far all looks good. Did not test it, did just a review of your changes. One of the following steps is to remove the dokan_mounter completelly?\n. Hi Maxhy\n- What happens when DokanOptions->MountPoint and DokanOptions->UNCName is null?\n- Please add more logging information\n- Now you have the possiblility to run DefineDosDevice optionally if somebody wants to have the drive only visible in his Windows session. This means a new option can be made available. In the actual version of dokan if you have two users logged in into the windows, both of them will see the mounted drives.\n- DokanDbgPrintW, DokanDbgPrint, DbgPrint, DbgPrintW - when to use which of them. It's all mixed\n- DokanSendVolumeArrivalNotification should use DokanSendVolumeCreatePoint or just remove the code from DokanSendVolumeArrivalNotification which is part of DokanSendVolumeCreatePoint\nIn generally it looks very good!\nThanks for the great job :smile:\n. Just an additional Comment:\nActually the creating of a device and mounting of the device is in once place. This seems to me somehow wrong. \n- An application can create a device and then execute mount/unmount several times without the delete and recreate the device.\n- One device can be mounted to different mount points at the same time\nThis are the reasons I would keep this two things in future versions separate in minimum on the driver level. Actually it's not related to the Mount Manager changes you have made so far.\n. I think the same key exists in HKCU. You can't change values of HKLM if you are not an administrator. Overlay shell is used for other purposes (synced, pending, deleted) like state of a file.\nIf the software is running only once and the drive is visible to all users the HKLM must be used.\nIn generally the concept of desktop.ini and autorun.inf should also be ckecked. No permission issues. \n. So please create a simple console application which doesh Find = FindFirstFile(filePath, &findData); \nfilePath is your test directory test* and check the handle. Run the console application from same place like mirror. Do you get invalid handle? Check the difference between your fix path and the path used in mirror. \n. Please can you use DebugView https://technet.microsoft.com/en-us/library/bb896647.aspx so that we can see, why the mounter service failed to delete the mount point.\n. The log obove is provided by driver and not by mounter service we are interested in.\n. If the option STDOUT is passed, the message \"Press any key to continue...\" should be shown and this way the problem is solved.\n. You have a much better control what status should be returned to the os. So you can decide what message should be displayed to the user. Depending on NTSTATUS the os behaves different in specific cases. Now it's up to you to decide what happened in your code and how you want report it to the is respective to user. \nBefore the change you had the code -1 which means nothing for os. \nNTSTATUS provides more direct reporting to os and user. It gives you more flexibility. \n. Normally to provide a readonly device the device characteristics must be changed\nto https://msdn.microsoft.com/en-us/library/windows/hardware/ff563818(v=vs.85).aspx  FILE_READ_ONLY_DEVICE\n. What means you was not able to get it work? \nStep 1: \nEnsure that the device characteristics is set properly using the new parameter. \nStep 2:\nDriver should check the device characteristics and respond properly to any CUD operation. \n. @Liryna\nYou are right. Just put it into the todo list. Should in generally not be a big effort.\n. If device unmount has been performed then the following request should get the STATUS_DEVICE_DOES_NOT_EXIST\n. Who returns now STATUS_INSUFFICIENT_RESOURCES and why? Di you have the log from driver? \n. So change this line and you will be able to unmount :smiley:\n. It's just timing I think until the device is definitely removed. The kernel knows to which driver to send the requests so it does. This happens because of the references in VPB.\n. You are right. Driver passes all correct  to usermode dll splittet into CreateOptions and FileAttributes. FileAttributes are used but CreateOptions not really. CreateOptions are just used to get the createDisposition and to set the delete on close. \nYour expectations is that FileAttributes contains also all the flags set in the CreateOptions or a new parameter is need?  What is the actual flag you are missing? In generally all flags should be passed to the call back method. \n. You are right. The initial value should be EXCEPTION_CONTINUE_SEARCH\nVon Samsung Mobile gesendet\n-------- Urspr\u00fcngliche Nachricht --------\nVon: Liryna\nDatum:30.10.2015 17:01 (GMT+01:00)\nAn: dokan-dev/dokany\nCc: Babic Marinko\nBetreff: [dokany] Logically dead code sys/Exception (#100)\nHello @marinkobabichttps://github.com/marinkobabic ,\nI have a question about DokanExceptionFilter that you have created.\nhttps://github.com/dokan-dev/dokany/blame/master/sys/except.c\nThe NtStatus is set to EXCEPTION_EXECUTE_HANDLER at the begining of the function and never changed before\nif (Status == EXCEPTION_EXECUTE_HANDLER ||\n        FsRtlIsNtstatusExpected(ExceptionCode)) {\nit mean that FsRtlIsNtstatusExpected is never reached and the condition always true. Is it normal ?\n\nReply to this email directly or view it on GitHubhttps://github.com/dokan-dev/dokany/issues/100.\n. @sehang\nPlease create a simple sample:\nTake a file\nCompute md5 hash\nCopy it to the drive\nCompute md5 hash\nStep 2 and 5 should have the same value. Maybe this way the issue can be reproduced. The code above can be build within 10 minutes. \n. They have a md5 per file part and/or the whole file. We can try to reproduce it using the md5 for the whole file. \nhttp://stackoverflow.com/questions/10520048/calculate-md5-checksum-for-a-file\n. Do I understand correctly? You have done checksum on your local drive. Then you copied the file to drive and did checksum again. Local drive checksum has the same value like the drive file checksum?\n. @sehang \nSeems to be hard to understand why the torrent FAILED HASH FILE. Maybe you could do a test using \nhttps://github.com/mono/monotorrent/tree/master/src/SampleClient\nHopefully this one fails as well so you could make a sample project which demonstrates the issue. In this case we have the full source code and can start to investigate the issue.\nWhat do you think?\n. If the drive does not support security you have to remove acls from FileSystemFlags. This should be added to wiki.\n. The dokan.sys must contain the version number as part of the file like dokan2.sys. Also the service name must contain the version number. The pipe name and other constant in the driver. The version resp. file name should be changed as soon as the backward compatibility is not guaranteed. \nTwo versions should be able to coexist on the same machine. \nI was wondering why nobody raised this issue before. \n. dokan.dll should be in the directory of the specific application. To make it obvious which version belong together I would suggest also here to have the version number in the filename. Then you have the full flexibility. \n. Your issue seems to be related to UAC. https://www.osronline.com/showthread.cfm?link=168276\nIf you create a simple executable which does not require UAC prompt and create the same executable with a minifest file which requests the UAC prompt and test it. The one with UAC prompt will fail. Please can you confirm this behavior?\n. Please can you test the following workaround:\nhttps://technet.microsoft.com/en-us/library/ee844140(v=ws.10).aspx\nThis is related to network drives but maybe it helps. The device is created in the Global space, so it should not have any impact.\nDid the stuff work before the change of Mount Manager? I mean the version with mount service.\n. I think it's the Zone.Identifier which is causing some problems in Dokan. Type the following\nnotepad C:\\Users\\xx\\Downloads\\iview441g_setup.exe:Zone.Identifier\nand you will get an output like the following one\n[ZoneTransfer]\nZoneId=3\nPlease try then the following:\nhttps://technet.microsoft.com/de-de/sysinternals/streams\nStreams \u2013d \u2013s c:\\tempdir\nand then copy the exe file to dokan drive and let me know if it then works\n. if MirrorGetVolumeInformation looks the following way, then the stuff should work properly\n``` c\nstatic NTSTATUS DOKAN_CALLBACK MirrorGetVolumeInformation(\n    LPWSTR VolumeNameBuffer, DWORD VolumeNameSize, LPDWORD VolumeSerialNumber,\n    LPDWORD MaximumComponentLength, LPDWORD FileSystemFlags,\n    LPWSTR FileSystemNameBuffer, DWORD FileSystemNameSize,\n    PDOKAN_FILE_INFO DokanFileInfo) {\n  UNREFERENCED_PARAMETER(DokanFileInfo);\nwcscpy_s(VolumeNameBuffer, VolumeNameSize, L\"DOKAN\");\n  VolumeSerialNumber = 0x19831116;\n  MaximumComponentLength = 256;\n  *FileSystemFlags = FILE_CASE_SENSITIVE_SEARCH | FILE_CASE_PRESERVED_NAMES |\n                     FILE_SUPPORTS_REMOTE_STORAGE | FILE_UNICODE_ON_DISK |\n                     FILE_PERSISTENT_ACLS;\nwcscpy_s(FileSystemNameBuffer, FileSystemNameSize, L\"FAT\");\n  DbgPrint(L\"  returning file system name: FAT\\n\");\nreturn STATUS_SUCCESS;\n}\n```\nThis is what RamDisk example from Microsoft does. There are many other filesystems and those work properly so the workaround above can't be the solution.\n. We need to go on with investigations and solve the issue in a proper way. There are many other filesystems and those work also properly on Windows. So dokan will work as well, but it takes some time to figure out what is the source of the problem.\n. Hi Liryna\nYes. You are right!\nThe original idea was to execute DokanStopEventNotificationThread and to wait until the NotificationThread is terminated and then to delete the device. So I think we should go back to this original idea and keep it like it was before my change. This original approach was from my point of view correct.\nWhy I have changed the code: Sometimes the KeWaitForSingleObject hanged and this caused a BSOD and I wanted a simple workaround.\nNow it's time to identify why this happens. Please add the following line in the DokanStopEventNotificationThread \nASSERT(KeGetCurrentIrql() <= APC_LEVEL);\nso that we can ensure that this is not the issue https://msdn.microsoft.com/en-us/library/windows/hardware/ff553350(v=vs.85).aspx.\nJust to let you know. I have only been able to reproduce the issue when working with multiple dokan devices at the same time.\n. Another question: Did you ever face the problem that when using keep alive and the mount had some dekay the driver deleted the device because of time out?\nYou had some talks about mounted and unmounted events. I think in generally that creating of device and mounting/unmountig should be separated in two steps. This way those two events make sense. I also do not like the behavior that the thread is blocked when doing a mount. In .net because of this fact the mounting must happen in a background thread. What are your thoughts? \n. I'm missing the ASSERT statement I sent you last time. Please also add log \nWaiting for Notify thread to terminate\nKeWaitForSingleObject\nNotify thread successfully terminated.\nIn a special case I'm expecting that the ASSERT statement will be raised. The second option is that NotificationLoop causes a deadlock and therefore the method above hangs. Please add also some more log inside of NotificationLoop after SpinLock.\nThanks\nMarinko\n. Hi Liryna\nHere you can also restore the previous version. Please also add the same assert to ensure that we are running at correct IRQL. \nThanks\nMarinko\n. Great, thanks :smile: \n. You are right. I actually don't even think that the separation would solve the problem. In generally we have the the problem that we are for example checking for drive availability or antivirus and if at this time the device is removed, we can get a BSOD because of some running Irp. The DeviceObject will become invalid and if the Irp is completed we will get an BSOD. A much better locking mechanism is needed like RemoveLock. \nThis is also the reason we get BSOD during drive availability check. It has been also reported. It's just timing. The check sends some requests and while those are processed the drive is removed.\n. Hi Liryna\n- The mount can fail. In our case we actually return STATUS_SUCCESS when it's our device. So it should in theory never fail. I'm still thinking about a different approach to solve this issue, but this takes time\n- FsRtlNotifyVolumeEvent is actually not used and it has no effect. The application will remain stable. My expectation was that the explorer will refresh the drive list. Need to check if a broadcast is really sent or not. Therefore I have added more logging information\n- Yes. You are right. It's changed\nWe have done some progress but the WaitForMount must be refactored so that it considers all the possible situations.\n. What os are you using?\nPlease can you provide the log of the driver?\nVon Samsung Mobile gesendet\n-------- Urspr\u00fcngliche Nachricht --------\nVon: Liryna\nDatum:15.01.2016 12:16 (GMT+01:00)\nAn: dokan-dev/dokany\nCc: Babic Marinko\nBetreff: Re: [dokany] Fix mounting to get socketConnection Work (#141)\nHi @marinkobabichttps://github.com/marinkobabic ,\nThank you for your contribution ! This will fix a major issue [:+1:]\nFirst review:\n-   Is it possible that WaitForMount does not exist because the device did'nt mount for a reason ?\n-   What happen when IoCreateStreamFileObjectLite` fail ? Application are just notified and system keep stable ?\n-   Does VolumeFileObject should cleaned with ObDereferenceObject ?\nI will test it during my break otherwise.\n\nReply to this email directly or view it on GitHubhttps://github.com/dokan-dev/dokany/pull/141#issuecomment-171936235.\n. Have you set the option to use the mount manager?\n. @Maxhy \nI tried the provided code and it woked fine. Also nslookup worked then fine. \nThe challenge is to get it work on Windows 10. For some reason IRP_MN_MOUNT_VOLUME is not sent even if the filesystem is registered. It takes the /FileSystem/RAW for mounting instead of dokan. RAW is on the last position of the registered filesystems, so it must take dokan filesystem first. \nAfter this part is done, we can go on with optimization.\n. @Liryna \nPlease do the tests without the option /g (without MountManager) and check if the ping and the socket connection work properly. You can test it on Windows 10 or Windows 8, makes no difference.\n@Maxhy \nI think all will work now as expected, but without the MountManager. There are a lot of things which must be considered. http://www.osronline.com/article.cfm?id=107. For some reason after the changes I have done, when MountManager is used, the SymbolikLink is not created. Also the MountManager does not add the Link into the registry MountedDevices. It would be great if you could check this part, but actually it has no high priority if all works also without the MountManager.\n. What is happening is that we are talking to the volume using IOCTL_EVENT_WAIT so that the driver has threads to process driver requests. The problem is that the operating system want's to get some volume information at this time, because of our request. But there are not threads available to process it (we are the first request to the mounted volume). This way we cause the delay. \nActually what I have changed is, the requests are processed inside of the driver as long as there are no threads arrived by user mode application to process the incoming requests.\nTwo issue are still open:\n- Explorer does not refresh the drive automatically. This means when we navigate inside of the drive and mirror is closed, then the explorer should be closed automatically.\n- The mount manager implementation does still not work\nI have not investigated the mount manager issue yet. Maybe the following code helps to understand what is going on behind the scenes\nhttp://doxygen.reactos.org/d9/df4/drivers_2filters_2mountmgr_2device_8c_source.html\nhttps://github.com/hacksysteam/WRK-1.2/tree/master/base/ntos\nJust additional information. The FsRtlNotifyVolumeEvent does not work without a PDO (physical device object), actually we have only an FDO (functional device object). Also the IRP_MN_QUERY_DEVICE_RELATIONS must be implemented in a proper way, to get the FsRtlNotifyVolumeEvent work. To create the PDO, DokanRegisterDeviceInterface must be executed and so on..I would suggest to solve the mount manager issue as first and then to go on. I suppose this version will remain beta as long the two issues above are not solved.\nThanks\nMarinko\n. IRP_MN_QUERY_DEVICE_RELATIONS is not needed. You have moved the arrival notification to DokanMountVolume so this fixed the problem with mount manager. No other changes needed. :-) to get it work. FsRtlNotifyVolumeEvent works the same way on windows. You can debug it.\nThe creation of drive letter can now be moved as a separate step. DefineDosDevice can notify the explorer. If we have the impersonation flag this command can be used in user mode and Explorer should refresh properly. \nWondering why mount manager does not refresh the explorer.\n. Wilk do the change in the evening. DefineDosDevice in usermode is only needed when you want to mount the drive for specific user (not visible to other user). In other case you use the mount manager. This are two separate ways to mount. Not going back to mount service like it was before. \nDo you see another way to do a user specific mount?\n. Hi Maxhy\nHave synced now the changes so that you can merge.\nRelated to the discussion of user session, I expected that you will change the code in this way :smile: Run as administrator is a different session, this is clear. And you will not see the drive there. It behaves like mapped network drive and this is fine so far. So we are just missing a way to notify the explorer. \nOther guys have solved this problem in writing an \"icon overlay handler\" for the explorer which was listening to messages sent by driver. This way it works 100% in every case. The problem is that explorer is limited to 15 icon overlay handler and those are executed in the name order. Dropbox, Svn, OneDrive, Sharepoint etc. have also icon overlay handlers.\nI think the DefineDosDevice has the power to create the link and to notify the explorer. For some reason explorer listens to this command and it's  WM_DEVICECHANGE broadcast, but not if you send the broadcast your self.\nBut let's keep the code like you changed it and go on with the investigations. Plug & Play devices do notify the explorer as well, so we need to do it the same way, somehow.\nThanks\nMarinko\n. You can close this pull request. I have created a new one. I just realized that I hate the visual studio 2015 git integration\nhttps://github.com/dokan-dev/dokany/pull/147\n. I did interactive rebase and squash but the sync button in visual studio took the previous commits of other contributors and added thise to my pull request. The only tool I trust is the git shell.\nIn case of network drive you are right. I didn't test it.\n. This two structs are exactly which should be replaced using Lookaside Lists.\n. Ok, Will check what is there going on :smile: \n. Thanks a lot :smile: You can close this issue as soon as you have done the change.\n. Hi Liryna\nYou will face the problem when you use a notebook and you just close the screen. If your energy settings are set to suspend the machine when closing the screen, the notebook will go into the sleep mode. When you open the screen again, the machine will awake and run. Now if the DokanKeepAlive does the check the MointMoint will be deleted for sure. It may just happen sometimes. If as first the IOCL_KEEPALIVE comes in, all will work fine. It's a timing question. Repeat the step 10 times and you will face the problem.\nDOKAN_CHECK_INTERVAL is set actually to 5 seconds. This means the timer will run every 5 second. If the machine goes into sleep mode the delay between the CurrentTime and LastTime will be more than 5 seconds. So I did 5 Seconds + 2 Seconds to be really sure, that it is a delay of timer. To use a value of 1 Minutes makes no sense because the timer can be configured using the constant DOKAN_CHECK_INTERVAL and I have no idea how long the machine is in hibernation mode. Every delay of more than 7 seconds means hibernation mode in my case. If the user is faster than 1 Minute, then the MountPoint will be deleted.\n. :smile:  Oh I see what you are talking about\nhttps://msdn.microsoft.com/en-us/library/windows/hardware/ff553068(v=vs.85).aspx\nKeQuerySystemTime - System time is a count of 100-nanosecond intervals since January 1, 1601. \n. It may be. We could also do a check how many bytes they are going to read. NTFS reads for example just the first 512 bytes. If we face some problems we can investigate.\nActually the Windows 8.1 default pdf viewer can't open pdf files. Oplock implementation seems to not be complete. \nIf we once decide to support pnp this should be done in a separate bus driver.\nThe redirector implementation changed since Vista. Actual implementation feels like a hack just  to have a network drive. Redirector should be implemented in a separate dll. The drive should be a normal drive with redirector support. \nThere are many things  to do :smiley:\n. I totally agree and in generally I think you and Maxhy are doing a great job. Without you two, we wouldn't have dokan anymore. Thank you!\nLet's go on :smile: \n. @Liryna You are right, but the information is displayed in explorer is the volume size which is updated by the user. Makes not a big difference if you update the disk information or not. Usually a volume can be created over one or more disks.\n. Oplocks are support for directories and files. During the DokanDispatchCreate the parameter FILE_OPEN_REQUIRING_OPLOCK is passed. This is what happens in case of pdf, but it's not considered by dokan.\n. I think a callback method IsLocked should be enough. Here the scenario:\nMachine A works on File1 islocked returns false\nMachine B user opens File1 islocked returns true from usermode.\nSo the file can't be modified on machine B\n. In generally it makes sense to do some prototyping to get the pdf issue work before doing a clean implementation. The actual situation is that operating system even does not read the file. The reads you may see are from windows defender which can be disabled using group policy. If during the creation Oplock fails a second request for Oplock will be made. In dokan is this always the case because we must return STATUS_PENDING and we complete the request later. \nFsRtlOplockFsctrl seems in some cases to complete the Irp, so dokan should not complete it self, see fastfat implementation.\nOplock is also a property of the advanced header. Depending on windows dk different property is needed. Please se the following macro:\nif (NTDDI_VERSION >= NTDDI_WIN8)\ndefine DokanGetFcbOplock(F)  &(F)->AdvancedHeader.Oplock\nelse\ndefine DokanGetFcbOplock(F)  &(F)->Oplock\nendif\nI'm not sure if our problems are related to Oplock or not. We need to investigate and solve it. Maybe the edge browser will then also be able to open the pdf.\nPlease just post here as soon as you have more information. \n. The IsLocked should be used to tell Office that the document should be opened write protected (SharedAccessViolation). Only the user mode application knows if somebody else is working on the same document on another machine. \nJust try the example above with machine A and machine B using onedrive and you will know what I'm talking about. \nIt's not a must to handle the Oplock during open. Os will do a separate request for Oplock if you don't handle it in open case.\nI'm actually just wondering why the document can't be opened. The only difference I actually see is the size on disk is different compared to Fat and Ntfs. Actually no idea what is there going on.\n. In generally I think you can remove Lock/Unlock from code and handle all inside of the driver. The example I gave above can also now be supported, because we propagate the NTSTATUS to usermode. The application can return during the Open the SharedAccessViolation and the job is done. Just go on and make your life simpler to reach the target :smile: . There are actually no benefits by using Lock/Unlock.\n. This is standard when doing the stuff in Installshield. If you set the settings in a proper way in visual studio (two properties) then visual studio does the signing for you. No batch required. When I was working with dokanx project, then I also used to work with a batch file. Now with visual studio it's quite simple. Project Properties -> Driver Signing ->\n- Cross-Signing Certificate\n- Production Certificate\nand the job is done :smile: . The cat file will be created automatically, not additional settings needed. All you have to do is to specify the name of the cat file in the dokan.inf, which is a must setting.\n. Hi Martin\nPlease provide more information how we can reproduce the issue. Also the used os and links to required software. \nIt looks like the fileobject is not anymore valid. I think this can happen if the file is going to be opened during the unmount process. It's just an idea.\nWithout your support we will not be able to identify the source of the BSOD.\nHope you will support us.\nThanks\nMarinko\n. Hi Martin\nI did what you said and I was able to connect to two different server at the same time. Explorer did not hang and no BSOD. What Antivirus software have you running on your box?\nThanks\nMarinko\n. Hi Martin\nI did now a test without my fix and Avast installed. I got a BSOD. But with the setup makd by Liryna all worked fine https://drive.google.com/folderview?id=0B3E9tU82h-RMMmh3RkJFamM4WTA&usp=sharing\nno BSOD.\n. @dimov-cz\nPlease try this setup https://drive.google.com/folderview?id=0B3E9tU82h-RMMmh3RkJFamM4WTA&usp=sharing and avast installed. \n. I think we should check the result of Send MessageTimout and if 0 log the GetLastError \nhttps://github.com/dokan-dev/dokany/blob/b1011c50f2332171f8b3495534fb2ea6c80db661/dokan/mount.c#L442-443\nI'm sure that in some cases the last error will be access denied. But let's add the check as first and then analyze the log output. \n. You are right taruti. The code should look like \nhdr.dbcv_size = sizeof(DEV_BROADCAST_VOLUME);\nhdr.dbcv_devicetype = DBT_DEVTYP_VOLUME;\nhdr.dbcv_reserved = 0;\nhdr.dbcv_flags = DBTF_MEDIA;\nhdr.dbcv_unitmask |=(1 << (MountPoint[0] - L'A'));\n@Liryna \nIn my previous comment I said that we will get access denied. Maybe we are returning access denied by not handling properly the request mentioned by you.\nLet's see how the log looks like after the changes above. \n. We can try to do broadcast like the following one:\n``` C\nstatic void VfdBroadcastLink(\n    CHAR            cLetter,\n    BOOL            bRemoved)\n{\n    DWORD           receipients;\n    DWORD           device_event;\n    DEV_BROADCAST_VOLUME params;\nif (!isalpha(cLetter)) {\n    VFDTRACE(0,\n        (\"VfdBroadcastLink: invalid parameter\"))\n    return;\n}\n\nreceipients = BSM_APPLICATIONS;\n\ndevice_event = bRemoved ?\n    DBT_DEVICEREMOVECOMPLETE : DBT_DEVICEARRIVAL;\n\nZeroMemory(&params, sizeof(params));\n\nparams.dbcv_size        = sizeof(params);\nparams.dbcv_devicetype  = DBT_DEVTYP_VOLUME;\nparams.dbcv_reserved    = 0;\nparams.dbcv_unitmask    = (1 << (toupper(cLetter) - 'A'));\nparams.dbcv_flags       = 0;\n\nif (BroadcastSystemMessage(\n    BSF_NOHANG | BSF_FORCEIFHUNG | BSF_NOTIMEOUTIFNOTHUNG,\n    &receipients,\n    WM_DEVICECHANGE,\n    device_event,\n    (LPARAM)&params) <= 0) {\n\n    VFDTRACE(0,\n        (\"VfdBroadcastLink: BroadcastSystemMessage - %s\",\n        SystemMessage(GetLastError())));\n}\n\n}\n```\n. But as first we should try to convert the MountPoint [0] to uppercase when sending the SendMessageTimeout.  Maybe it will then work with the existing approach before trying the new one.\n. @Liryna Let's see what the results are and what  the guys say which have reported the issue. Did you test it with the current session mount flag?\nJust to let you know. The original code for the broadcast camed from here https://sourceforge.net/projects/vfd/?source=typ_redirect\n. @Liryna This is what I expected. In my opinion if this flag is used and mount manager is not used  we should execute DefineDosDevice in dokan user Library. \n@Maxhy What do you think? \n. @Maxhy\nLet's try to identify the os and architecture where it works. I have never see it working without restarting explorer once.\n. Will do the test on Sunday in my vm with Windows 10 x64. According to your statement:\nWhen I use the current session flag and mount for example the drive x:\n- Then I can see the new drive X: in the explorer\n- When I navigate to drive x: and then close the mirror.exe, then the explorer is closed automatically because the drive x does not exist anymore\nPlease can you confirm this behavior. \n. You used the current session flag? This is our discussion point. \n. This means Windows 10 works properly but Windows 8.1 and Windows 7 not, when the flag /c is used?\n. @Liryna \nI did now a test on Windows 8.1 x64 and all seems to work properly. Please just confirm that you have the same results. I use always the following program to see if broadcast has been sent properly or not http://www.codeproject.com/Articles/18062/Detecting-USB-Drive-Removal-in-a-C-Program (You can compile it using higher .Net Framework version)\nIt looks to me that we have only the issue on Windows 7?\n. @Liryna \nI tested now also on Windows 7 Professional x64 and also there all works fine. Where you can reproduce that it does not work? It would be interesting to know if the program above does indicate that the drive has been added or removed in this specific case? Does the BroadCast return an error in this case?\n. When you type in explorer M:\\ then it works fine?\nWe are totally sure that this is the only affected os version?  Windows 10 x86 and Windows 8.1 x86 work fine?\nThis means that the broadcast is sent properly but the explorer just ignores it. It makes no difference if UAC is turned off?\nAfter restarting explorer the drive must be there normally. The only reason that it's not there can be that the symbolic link is not created. This can be verified using the WinObj.exe\n. @Liryna I just installed a new virtual box with Windows 7 x86 Professional with SP1 and started mirror using the following parameters mirror.exe /r c:\\ /l m /t 5 /s /c and all works properly. So I'm not able to replicate the issue you have with Windows 7 x86. Are you using this version is your tests  https://drive.google.com/folderview?id=0B3E9tU82h-RMMmh3RkJFamM4WTA&usp=sharing? Please can you provide the FileSystem Log when so that we can see what happens when you try to access the drive? So where is the difference from my fresh installed Windows 7 and yours? SP1 is also installed in your case?\n. What happens when you run as Administrator\nnet start Dokan1\nnet start dokan1\nWhat information do you have in your event viewer?\n. @Liryna \nPlease can you compile a Windows 7 x86 driver on your machine, sign it and copy to the target machine where the start of the driver fails. Then perform net start dokan1. Does the driver start?\n. Just take your dokan1.sys and replace the file manually in c:\\windows\\system32\\drivers and then execute \nnet start dokan1\nI will now do a small test using Windows 8 x86 because I have no Windows 7 virtual machine yet.\n. Please create a reg file using the following content and execute it. Then reboot the machine and do net start dokan1\nWindows Registry Editor Version 5.00\n[HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\dokan1]\n\"Type\"=dword:00000002\n\"Start\"=dword:00000000\n\"ErrorControl\"=dword:00000001\n\"Tag\"=dword:00000001\n\"ImagePath\"=hex(2):73,00,79,00,73,00,74,00,65,00,6d,00,33,00,32,00,5c,00,64,00,\\\n  72,00,69,00,76,00,65,00,72,00,73,00,5c,00,64,00,6f,00,6b,00,61,00,6e,00,31,\\\n  00,2e,00,73,00,79,00,73,00,00,00\n\"DisplayName\"=\"dokan1\"\n\"Group\"=\"File System\"\n. The installation is strange. It installs \n..\\Service\\dokan\n..\\Service\\Dokan1\ninside of Dokan1 ist the NetworkProvider key. The dokan services works properly on windows 8 x64.\nShould not all be installed in the key\n..\\Services\\dokan1 (lowercase please)\nThanks\nMarinko\n. Oh sorry it's x86 :smile: \n. When windows starts the service the DriverEntry is executed. We execute then the DokanCreateGlobalDiskDevice. Actually I have no idea why it should not work on Windows 7. Maybe you can turn the driver logging on to get more information. It seems to me that it can't event find the DriverEntry. But let's check the log if you are able to get one.\nYou have to change the driver code so that it does the logging by default to be able to create the log in this special case.\n. You can figure out, where the issue comes from when you just start to remove code from device.c. When the DriverEntry can be found, then you have identified the suspect lines. My expectation was that some IOCTL are not supported, but nothing found so far. \n. So please use RtlCompareMemory instead of memcmp.\n. @jetwhiz\nThe MounterService is not anymore needed. In previous versions the dokan.dll did the mount on behalf of this service. Now the mounting happens inside of the driver. You should just use the fuse_main like you did before and the rest is done in background for you.\n. If you have any antivirus software running so pause it during the installation. I was for example not able to install while Avast was running. \n. Dokan Service is a FileSystem Service. Windows normally does not allow to stop this kind of services. It can only mark it for delete for the next reboot.\n. You will get a message like the service can't be stopped. The tool osrloader.exe can't also stop the service. All it can do is to unregister the service. After the reboot the service is not running anymore, because windows has no knowledge about it of course. I have actually no pc in front of me but the question  is, is NTFS stoppable? If no, then is the question why dokan has the stoppable flag.\n. The problem I see here is that at some point we have now the following result:\nCreate 0103\nCreateFile : c:\\temp\\myvhd.vhd\n  AccountName: liadmin, DomainName: DESKTOP-3HHOR7G\n        ShareMode = 0x1\n        FILE_SHARE_READ\n        AccessMode = 0x12019f\n        FILE_READ_DATA\n        FILE_READ_ATTRIBUTES\n        FILE_READ_EA\n        READ_CONTROL\n        FILE_WRITE_DATA\n        FILE_WRITE_ATTRIBUTES\n        FILE_WRITE_EA\n        FILE_APPEND_DATA\n        SYNCHRONIZE\n        STANDARD_RIGHTS_READ\n        STANDARD_RIGHTS_WRITE\n        STANDARD_RIGHTS_EXECUTE\n        FlagsAndAttributes = 0x20000080\n        FILE_ATTRIBUTE_NORMAL\n        FILE_FLAG_NO_BUFFERING\n        OPEN_EXISTING\n        error code = 87\nCreateFile status = c000000d - lastError = 87\nThe error 87 means invalid parameter which is related to access mode.\nThe driver requested\nDesired Access: Generic Read/Write\nDisposition:            Open\nOptions:                    No Buffering, Non-Directory File\nAttributes:         N\nShareMode:          Read\nAllocationSize: n/a\nImpersonating:  DESKTOP-3HHOR7G\\liadmin\nbut the usermode application failed. This will not solve the issue, but the error should be fixed.\n. @Liryna\nFileSpy crashes as soon as they're some unknown requests. You can use process monitor and turn the expert mode on.\n. @Liryna The reason it does not work properly is the ProviderOrder registry entry. \n[HKEY_LOCAL_MACHINE\\SYSTEM\\ControlSet001\\Control\\NetworkProvider\\HwOrder]\n[HKEY_LOCAL_MACHINE\\SYSTEM\\ControlSet001\\Control\\NetworkProvider\\Order]\nThe name used there must be  Dokan1 and not DokanNP. Please fix the setup and it will work. Maybe also this issue will then be fixed https://github.com/dokan-dev/dokany/issues/200\n. @Maxhy \nHow did you your tests: \nDid you use the network drive option and the unc option during the mount? \nDid you use a fixed drive and then you shared it and tried it to acces using unc path?\nIn generally you tried to access the drive share from same machine or from another machine? \nYou used unc path or did you mount the share before? \nThanks\nMarinko\n. @Liryna \nI'm not able to reproduce the issue on Windows 8.1 x64. I had not to send a lot of CTRL + C. It was enough to send it once to terminate mirror.exe. I tested it while keeping 4 above described applications running. The example file reached size of 350 KB. \nWhat operating system did you test on?\nDid you use any special compile condition?\n. @Liryna\nYou mean in your case the vm was so slow that you have been able to stop mirror before the write was successful? In my case the vm had a cpu usage if 95% but the vm was not slow at all. Will do some tests more.\n. I tried to reproduce the issue but still not able. I used all the tools here https://blogs.msdn.microsoft.com/vijaysk/2012/10/26/tools-to-simulate-cpu-memory-disk-load/ to make the machine slow, but even the I was not able to reproduce the BSOD. Will try now to install Visual Studio in my VM and to run the tests using the compile option NETWORK_DRIVE.\n. @viciousviper \nPlease can you confirm that the following program causes BSOD on your pc:\n``` C#\nusing DokanNet;\nusing System;\nusing System.IO;\nusing System.Security.AccessControl;\nusing System.Security.Principal;\nusing System.Threading;\nusing System.Threading.Tasks;\nnamespace DokanNetMirror\n{\n    internal class Programm\n    {\n        private static void Main(string[] args)\n        {\n            try\n            {\n                var mirrorDir = Directory.CreateDirectory(\"c:\\temp\");\n                Mirror mirror = new Mirror(mirrorDir.FullName);\n                var drive = new DriveInfo(\"n:\\\");\n                var task = Task.Factory.StartNew(delegate\n                {\n                    mirror.Mount(drive.RootDirectory.FullName, DokanOptions.DebugMode | DokanOptions.NetworkDrive, 5);\n                });\n            while (!drive.IsReady)\n            {\n                Thread.Sleep(TimeSpan.FromSeconds(1));\n                Console.WriteLine(\"Waiting for drive \" + drive);\n            }\n\n            var testDir = new DirectoryInfo(\"n:\\\\testdir\");\n            if (!testDir.Exists)\n            {\n                testDir.Create();\n            }\n\n            var security = new DirectorySecurity();\n            security.AddAccessRule(new FileSystemAccessRule(new SecurityIdentifier(WellKnownSidType.BuiltinUsersSid, null), FileSystemRights.FullControl, InheritanceFlags.ContainerInherit | InheritanceFlags.ObjectInherit, PropagationFlags.NoPropagateInherit, AccessControlType.Allow));\n\n            try\n            {\n                Console.WriteLine(\"Try to set security\");\n                testDir.SetAccessControl(security);\n            }\n            catch (Exception exception)\n            {\n                Console.ForegroundColor = ConsoleColor.Red;\n                Console.WriteLine(\"Failed with exception \" + exception);\n                Console.ResetColor();\n                Console.ReadKey();\n                Environment.Exit(1);\n            }\n\n            Console.WriteLine(\"Security set successfully\");\n            task.Wait();\n\n            Console.WriteLine(\"Success\");\n\n        }\n        catch (DokanException ex)\n        {\n            Console.WriteLine(\"Error: \" + ex.Message);\n        }\n    }\n}\n\n}\n```\n. @Liryna Please can you run the code on your machine and check if you get the BSOD? You have never been able to reproduce the BSOD during the execution of the tests, which was reported by @viciousviper . Therefore I'm wondering if this example works properly on your machine. I't just the modified mirror console application.\n. Takes more time to investigate this issue. The BSOD happens because the ReferenceCount of the VPB is less than 1 when changing the security. It has even a negative value. We have this issue only when network drive is used. It looks like the Cleanup/Close of a file dereferences the count, but the mount of the drive and the open of the files does not increase the ReferenceCount of the VPB at all. So in theory we could in case of the network drive get the BSOD everywhere. Here we must understand the source of the problem before doing any changes.\n. @psaghelyi Do you have network drive or fix drive? When do you have the BSOD?\n. @Liryna @Maxhy \nI will now make a statement which you should verify: \nIf the filesystem is of type FILE_DEVICE_NETWORK_FILE_SYSTEM then the fileObject->Vpb should always in the create be set to NULL\nThanks for feedbacks\nMarinko\n. According to my statement I have made the following changes\nhttps://github.com/dokan-dev/dokany/pull/214\nThis should fix the BSOD REFERENCE_BY_POINTER. Please check if my statement above about fileObject->Vpb is correct.\n. Hi @Liryna \nThe example you posted just shows that they don't know what is inside of the VcbOrFcbOrDcb. Depending what is there (PVCB or PFCB), they have to retrieve Vpb in a different way. \n. Driver can only communicate to the user mode if the user mode tells the driver \"here you have a worker\". How would that happen using the approach suggested by @Corillian? Need to understand the full flow.\nThe approach suggested by @JohnOberschelp seems to me much simpler. But in this case one thread will still be blocked. If driver gets STATUS_PENDING it will make the same call again using maybe even the same thread, until it gets another STATUS. Here we are limited in the amount of threads resp. workers provided to the driver. Possible solution here is to create a new additional thread resp. worker in user mode, if user mode returns STATUS_PENDING. STATUS_PENDING means this thread is still working resp. thread is blocked.  We need to keep the old thread running with setting a special async flag in the context like suggested by @Corillian. If once this special threads have been handled properly those can be terminated. The thread amount specified in dokan options is just the minimum amount of threads which will be handled in parallel. \nIn generally we can increase the amount of threads in the dokan options to 64. This can be done already yet.\n. @JohnOberschelp\nIf you write so many files as you have threads, then all of them will be blocked. \n@Corillian\nThis will be an amazing improvement. I totally agree. :smiley:\n. Independent where the caching is done, how is the following scenario covered here:\n1.       FindFiles returns File1, File2\n2.       The mirrored File1 is removed.\n3.       Only the application knows this (maybe), which uses the dokan usermode library\n4.       UserMode and Kernel have no idea, that the file has been removed \nActually it seems that the cache is not updated. \nTo make the whole system stable and faster:\n- the caching should be moved to kernel, like Keith said\n- notification mechanism should be implemented, so that the cache can be updated(update attribute, name, size, removed, etc.)\n- during the file open, if usermode reports that the files does not exists also update the cache\n- even if just some attributes of the file have change, rename, size changed, this must be reported to kernel\n- consider flag FO_NO_INTERMEDIATE_BUFFERING, FO_TEMPORARY_FILE, FO_DELETE_ON_CLOSE during the cache\n- enable/disable cache\nThe cache can be enabled/disabled\nOnly changes of files which did not happen through virtual drive must be reported. \nThis way the file and directory information can retrieve the information from cache. If the findfiles should be cached, then every external change on the mirrored filesystem needs to be reported to the kernel. FindFilesWithPattern is in generally not a bad idea, it simplifies the implementation. The developer don\u2019t needs to check the mask for * \nThanks\nMarinko\n. I would suggest to create a separate issue related to cache. This should not be related to your actual implementation? \n. Please install all Windows Updates and reinstall dokan.\nVon Samsung Mobile gesendet\n-------- Urspr\u00fcngliche Nachricht --------\nVon: gang929\nDatum:05.05.2016 14:37 (GMT+01:00)\nAn: dokan-dev/dokany\nBetreff: [dokan-dev/dokany] dokan release(0.8, 1.0rc1, 1.0rc2) cant start dokan1 service (#224)\nEnvironment\n-   Windows version: window 7\n-   Processor architecture: x64\n-   Dokany version: 1.0 rc2, 1.0 rc1 0.8\n-   Library type (Dokany/FUSE): dokany\nCheck List\n-   [Y ] I checked my issue doesn't exist yethttps://github.com/dokan-dev/dokany/issues?utf8=%E2%9C%93&q=is%3Aissue\n-   [ Y] My issue is valid with mirror default sample and not specific to my user-mode driver implementation\n-   [Y ] I can always reproduce the issue with the provided description below.\n-   [Y] I have updated Dokany to the latest version (https://github.com/dokan-dev/dokany/releases) and have reboot my computer after.\nDescription\nNo matter whether they are installed, or 0.8 1.0 rc2/rc1 version, being unable to mount mirror.exe, restart the computer always cant mount, after checked, is due to dokan1 service did not start.\nsc query dokan1, show driver has invalid signature\nLogs\nPlease attach in separate files: mirror output, library logs and kernel logshttps://github.com/dokan-dev/dokany/wiki/How-to-Debug-Dokan.\nIn case of BSOD, please attach minidump or dump analyze output.\n\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly or view it on GitHubhttps://github.com/dokan-dev/dokany/issues/224\n. The windows has a counter for the installed files if they are shared files. So if the driver was there before you installed your product the counter will be increased. So when you remove your product the driver will remain on the system and the counter will be decreased.\nIf the driver was installed with your product so the driver will be removed if your product was the only one which uses the driver. It all depends on the counter except you force the remove which will break the other installations.\nVon Samsung Mobile gesendet\n-------- Urspr\u00fcngliche Nachricht --------\nVon: Andrew Rondeau\nDatum:06.05.2016 21:02 (GMT+01:00)\nAn: dokan-dev/dokany\nBetreff: Re: [dokan-dev/dokany] Facilitate side-by-side installation of many products (#227)\n@js69https://github.com/js69, The problem is that in the hypothetical \"AndyDrive\" product, it must uninstall cleanly.\nThis means uninstalling all drivers that it came with, including Dokany.\nOne way to solve the problem is for AndyDrive to just recompile Dokany as a different product, and completely remove it when it's uninstalled. No need to worry about what other Dokany-based products are installed.\n\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly or view it on GitHubhttps://github.com/dokan-dev/dokany/issues/227#issuecomment-217530729\n. @taruti I used your code with installed RC3 and after running 5 Minutes on Window 8.1 x64 I was not able to reproduce the BSOD. \n@Liryna can you reproduce the BSOD?\n. I think after this issue https://github.com/dokan-dev/dokany/issues/272 has been fixed we should check again if you can reproduce the BSOD.\n. I have installed Windows 7 x64 and I have been able to reproduce lot of various BSODs running your code. Then I tried to fix each of them. After a lot of time I have realized what is there going on and that it makes definitely no sense to fix the BSODs at this point. Before fixing any of the BSODs the driver must be redesigned the following way:\n- When usermode is doing a mount, the code should not return until the mount is really finished. Actually the device is created, mounting is in progress and during this process the device is deleted which causes a lot of problems\n- When usermode is doing an unmount and the mounting is still in progress, the STATUS_DEVICE_IN_NOT_READY should be returned or the code should wait until the mounting is finished.\nThen we can start to fix the remaining BSODs, if any still there. An device can also be unmounted by the timer automatically and there is the same code executed like we are doing the unmount manually.\nI thing those changes should be done here https://github.com/dokan-dev/dokany/issues/136 and one of the tests should be your code above.\n. @taruti\nPlease test it with the following branch https://github.com/marinkobabic/dokany/tree/FixBsodMounting \n. @taruti \nAre you sure, that you are using the correct version? I tested it several times using mirror without any crash. What is the output of analyze -v\nIt crashes during mount or unmount? You are also using the newest dokan1.dll?\n. did not face such problem. But  have fixed it now. Please can you try again?\n. @taruti \nThis is the idea. Have done now some refactoring. Please can you test again to see if you still can reproduce any BSOD?\n. The fix can be done like suggested by you, should not have any negative side effects. Why are you not making a pull request?\n. The access of the file failed also when the DOKAN_OPTION_CURRENT_SESSION was used?\n. If he uses the current session option the device is not anymore global. So why it should fail? MountPoint is just a link to an existing device. Maybe I'm missing here something? \nShould the drive be global resp. for all sessions accessible or just for the current one?\n. Thanks for feedback. Have now more background information  http://stackoverflow.com/questions/21703592/open-device-name-using-createfile\nNames of the form \\Device\\xxx are internal NT object manager names which are inaccessible to Win32. You will only be able to access your device if it creates a symbolic link to \\Device\\MyDevice from the \\??\\ directory. Objects in the \\??\\ kernel directory show up through .\\ in Win32. Use Winobj in the DDK (or download it from www.sysinternals.com) to check.\nSo please do a pull request. :smiley:\n. @Liryna \nDid you try to CreateFile using  \\.\\f instead of just F:\n_stprintf(szDriveCreate, _T(\\\\.\\%c), cDrive);\n. Have analyzed the code. The code should work like it is, so no patch is needed for DeviceName. Here my arguments:\n1. IOCTL_EVENT_START is sent from user mode application\n2. DokanEventStart is executed\n3. DokanCreateDiskDevice is executed\n4. DOKAN_DISK_DEVICE_NAME is created \\Device\\Volume{xy} = dcb ->DiskDeviceName\n5. DOKAN_SYMBOLIC_LINK_NAME is created \\DosDevices\\Global\\Volume{xy} = dcb->SymbilicLinkName\n6. IoCreateSymbolicLink(dcb->SymbolicLinkName, dcb->DiskDeviceName);\n7. Mount happens and so the DokanCreateMountPointSysProc is executed\n8. IoCreateSymbolicLink(Dcb->MountPoint, Dcb->DiskDeviceName);\n9. The dcb->SymbolicLinkName is used to set the driverInfo->DeviceName  \nMountPoint and SymbolicLinkName point to DiskDeviceName. The difference here is that the \n- MointPoint is for example \\DosDevices\\F and SymbolicLinkName is \\DosDevices*Global*\\Volume{xy}\n- if Dcb->MountGlobally the symbolic link for the MointPoint is created in a system thread which is never the case for the dcb->SymbolicLinkName\nAs we can see here the usermode uses always the SymbolicLinkName to comunicate with the driver. So the reported issue is not related to the CreateFile which uses DokanInstance->DeviceName. \nInstance->DeviceName = driverInfo.DeviceName = dbc->SymbolicLinkName \nThe source of the problem may be the mentioned two differences above. \n. I have installed Windows 2012 R2 x64 as virtual machine. I can run mirror without any issue in two separate remote desktop sessions at the same time. So how to reproduce your issue?\n. Does the user have access to the  in your case? What when you use for example c:\\temp and you set full access ntfs rights for everyone? \n. What happens when you don't use the option /n in your case?\n. The usermode says access denied but there is nothing in the kernel log. Please can you provide the full kernel log? The mirror is executed in your case in a console with no admistrative rights hopefully, just a double click on a link which contains the required parameters? Do you have any special antivirus software running on your machine? Any special policies? \n. Please run process monitor by sysinternals. Maybe it will provide more information about access denied. \n. I like it as well \ud83d\ude01\n. Could you please provide the one with the kernel but with color? It's the\nlast one in the list where you posted all of them.\nAm 19.09.2017 20:59 schrieb \"Maxime C.\" notifications@github.com:\n\nSame, I like it as well. But the previous one too so I will follow the\ncommunity vote :).\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/243#issuecomment-330637940,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ADHSOBcG8JL18cFzt1GWljEQBGQDSzzDks5skA8GgaJpZM4Ig8_r\n.\n. It's strange to me that you at some point get the following output:\n\n###GetFileInfo 1584\nGetFileInfo : c:\\test~WRL0002.tmp\ninvalid handle\nGetFileInformationByHandle success, file size = 13063\nresult =  0\nFileStandardInformation\nDispatchQueryInformation result =  0\n. The behavior can be explained if SL_OPEN_TARGET_DIRECTORY is set during the create. This should be handled in the driver properly, which is in my opinion actually not the case. The driver creates fcb for c:\\myfile.txt instead of just \\ if the SL_OPEN_TARGET_DIRECTORY is set. The driver should consider this flag and extract the proper path and behave like it's a normal open of a directory. Actually the full complexity is forwarded up to the user mode application. Please check if I'm correct with my assumption before doing any changes. :smile: \n. makes no sense, why should windows open \\ with SL_OPEN_TARGET_DIRECTORY? You don't need to debug, the information is part of the driver log file so you can post the log file here if you can reproduce it. The behavior in the driver is wrong, so it should be fixed before we go on with the investigations.\nMy assumption is that the driver says open the file ~WRL0001.tmp with SL_OPEN_TARGET_DIRECTORY set. Driver creates FCB for the filename ~WRL0001.tmp instead of filename of the parent directory. The next time windows makes CreateFile request for ~WRL0001.tmp without the flag SL_OPEN_TARGET_DIRECTORY. The driver takes the available fcb instead of creating a new one.\n. SL_OPEN_TARGET_DIRECTORY - If this flag is set, the file's parent directory should be opened.\nThis is what Microsoft says. If you say file does not exist, would this mean that the folder does not exist or the file does not exist?\nPlease send me a link of your repository so I can review your changes. \nCan you explain why the driver should get the wrong fcb? The driver should check the flag as first and change the filename before creating the fcb. Mirror should ignore the flag and the job is done. I would just remove the code from mirror to be sure that this special case is not handled by mirror. Driver should also not pass such information to mirror.\n. Does the os set  SL_OPEN_TARGET_DIRECTORY and DELETE_ON_CLOSE on the same time resp in one request? \n. @bailey27 I think you are generally right with your statements and dokan is handling the SL_OPEN_TARGET_DIRECTORY nearly correctly without any changes. You said that you have created a new document and you saved it. Then you exited the word. After exiting the word is there  still a  \\blah~WRL0001.tmp file in your mirrored directory like c:\\temp or whatever (not the dokan drive)? If he file does not exists and you do type foo.txt, there is still an fcb in the list with the name \\blah~WRL0001.tmp?\nIf all this statements are correct so I should be able to reproduce the issue.\nI'm not sure how the driver should behave but I think when the flag SL_OPEN_TARGET_DIRECTORY is set, this should be considered during DokanGetFCB so that dokan retrieves the correct one and also destroys the correct one. It's the Fcb of the parent object which should be used, if one exists. I know that word makes many CreateFile for  \\blah~WRL0001.tmp and only the first one has the DELETE_ON_CLOSE flag set. When word closes a file opened using SL_OPEN_TARGET_DIRECTORY flag, then it uses the \\blah~WRL0001.tmp name (I think so, makes sense). So we should use the ccb to know that the flag SL_OPEN_TARGET_DIRECTORY was used for create so we would know which fcb to search for during the close. It's actually just a new theory based on the actual knowledge.\n@Liryna Here I think the problem is more why the fcb \\blah~WRL0001.tmp is still there even if the files does not exist anymore.\n. In your actual changes why are you not passing the original name up to usermode? Without the original name the usermode can't check if the file exists. \n. @bailey27 \nSo I see what you are doing and this seems correct to me. Will try now to understand why the fcb remains. I think, you are missing the part of close file which I have described in my last theory. But let's see if I can reproduce the issue.\n. @bailey27 \nYour code looks fine so far, nothing missed. But I haven't been able to reproduce the problem. To understand the remaining fcb and the DOKAN_DELETE_ON_CLOSE flag it would be helpful if you would add more logging information like I did here http://pastebin.com/pSQXZVFk Then you can set the DebugView Filter to WRL so we would only get the information we are really interested in. This way we can narrow the issue down without debugging which takes a lot of time.\n. Because of this reason I also add the FileCount to the debug print. Normally during rename the FileCount is 1. The rename is the main reason why the file create happens with SL_OPEN_TARGET_DIRECTORY. The question is if the file close after the rename destroys the fcb properly or not? If you could post the log in pastebin so also other contributors may read it.\nAbout the oplock, no idea. But let's see the log. At the end if the log we will see that you try to open foo.txt and DokanGetFCB will print the WRL file which is still there.\nYour actual state is still that the file is not saved after modifying it? Is the fcb still there after the first save?\n. @bailey27\nSeems to be the solution. Did you check if the fcb should be renamed in the list after the rename request? \nIf so far all is fine I would say that you should do a pull request. It was a pleasure to talk to you. Good job!\n. @bailey27\nRename scenario could be:\nOpen handle to file1\nRename file1 to file1\nOpen handle to file2\nHere check how many fcb are there\nClose handle of file1\nClose handle of file2\n. Then is fine :-) Thanks\n. Please paste the driver log made after the last merged pull request made by @bailey27\n. DokanFS] ==> DokanCompleteCreate\n[DokanFS]   FileName:\\liryna\\Desktop\\vs\\ConsoleApplication1\n[DokanFS]   FILE_DOES_NOT_EXIST\n[DokanFS]    IRP_MJ_CREATE failed. Free CCB:FFFFE001A26044E0\nHow is this possible? \n. Here what happens. Os sends IRP_MN_USER_FS_REQUEST and FSCTL_REQUEST_FILTER_OPLOCK. The method DokanOplockRequest is executed which will call FsRtlOplockFsctrl. The FsRtlOplockFsctrl returns STATUS_PENDING and according to the documentation means this granted https://msdn.microsoft.com/en-us/library/windows/hardware/ff545518(v=vs.85).aspx. Dokan must not complete the irp and this is fine so far. The problem we have here is that the Irp hangs and it's never completed. You can watch this using process monitor.\n. Before doing oplock the resource should be locked using ExAcquireResourceExclusiveLite instead of ExAcquireResourceSharedLite. This is how cdfs locks the resource. https://github.com/Microsoft/Windows-driver-samples/blob/6e1115d6af3c22b693eccc472ebb0d53a1905cd9/filesys/cdfs/fsctrl.c#L1790\n. I would implement it in all operations implemented in fastfat. In most cases is fastfat the only reference.\n. @bailey27 The changes look fine.\n. Why not log this information in the create.c to see if the driver get's this information?\nif (irpSp->Parameters.Create.Options & FILE_OPEN_FOR_BACKUP_INTENT) {\n        DDbgPrint(\"FILE_OPEN_FOR_BACKUP_INTENT\\n\");\n    }\n. @markuskreusch\nThere seems to bee two errors. The dump is not showing the first one in the stack trace. Is there a way to reproduce your problem like run an exe created by you several times?\n. @taruti \nThanks for the pull request. I don't agree with the changes you have made but I agree with the idea behind it, which is more important. So please undo the changes and add a ckeck here https://github.com/dokan-dev/dokany/blob/a8d06c7ff30e05f8243ed28c06b09f1d0b6f17d3/sys/event.c#L315 if the dcb->Mounted  is false then return STATUS_VOLUME_DISMOUNTED. This would make the driver more stable. Hope you agree and thanks for the really valuable contribution.\n. @taruti \nPlease also add a new property dcb->IsUnmounting and you can set it here https://github.com/dokan-dev/dokany/blob/4ec77fd4d4aa149910a02cd8d4b8c9b0daa92ceb/sys/notification.c#L420 to 1. Then you can check like described above in event.c dcb->IsUnmounting or !dcb->Mounted then return STATUS_VOLUME_DISMOUNTED. This way we can eliminate the delay before starting the unmounting and the finished unmount process.\n. You are right, only if the FsRtlIsNtstatusExpected(ExceptionCode)) is true, the Status will be changed. The Check of Status in if statement could by removed.\n. At the end it calls  GetDiskFreeSpaceEx\nhttp://ikvm.sourcearchive.com/documentation/0.38.0.2plus-pdfsg-2/openjdk_8cs-source.html\n. Please run process monitor or FileSpy and paste the output here. This would help us to identify the source of the problem. \n. I think the source of our problem is \nGetVolumeNameForVolumeMountPointW\nPlease can you test this one against NTFS resp. your C: drive.\n. Have no access to my pc. Sorry. Please use the mount manager option for dokan drive. When java queries the link name you have seen in the log, it must match one of the links in the MountManager table.\n. I will do some small improvements and see if you still can reproduce your issue. Just wait for a new pull request.\n. @taruti \nPlease can you check if this solves the ccb null problem https://github.com/marinkobabic/dokany/tree/FixNullIReference If we do not understand why is ccb null, we will not be able to fix the issue definitely. But with your help we should be able to identify the source of the problem.\n. If you put your fix with ccb into FixNullReference code, then you don't have the crash?\n. This items can be null, which is fine:\n- ccb\n- FsContext2\nSo the question which of this items is null in your case, when you get the crash:\n- IrpEntry->FileObject\n- vcb\n- vcb->Dcb\n. Yes it works fine, The problem is that I'm testing on Windows 10 x64 where you don't have this issue?\n. So I will setup Windows 7 x64 :smile: I agree with your changes but I have no idea why FileObject, vcb or dcb should be null. So I must understand it.\n. You can run mirror using the new version without any issues? Only the stress tests causes the driver to fail?\n. have returned wrong state when the volume is not mounted, please can you try again just the mirror?\n. It\u2019s fixed\n. If you are signing the driver your self then you will fail around the middle night. For some reason the time causes the signing to fail. You should see it somewhere in the log file. \n. What happens when you set the CompletionRoutine to NULL. It should block as well.\n. Ok. Will check what is there going on.\n. IoReleaseRemoveLock(&dcb->RemoveLock, Irp);\nmust be done because the processing is finished. The lock is just there so that nobody removes the device while we are processing the request.\nQueryDeviceRelations did not return proper information and verifier complained about it. If we fix it to work properly, we can keep the function because of later support of pnp.\nThe cast should be fine.\nThanks\nMarinko\n. Hi Lyrina\nThis looks good :)\nThanks\nMarinko\n. Hi Lyrina\nThis is correct. The problem before was, that we had a handle to a removed device, which often caused a BSOD. Here we close the handle and create a new one. If the device is not there, we will have an invalid handle and we will go out.\nThanks\nMarinko\n. Lyrina is merging the changes which will fix the BSOD. :smile: \n. Maybe I'm totally wrong but try the following fix  http://m.youtube.com/watch?v=EJGBhin8-4U\n. Just a question. In your case the first file will be returned. Should in this case the status not be  STATUS_NO_MORE_FILES?\nFrom my point of view STATUS_SUCCESS means,  I have filled the buffer using the found files, but there are more files so please come back to me. \n. @Liryna \nNormally the output should look like this\n1.  STATUS_SUCCESS for the filter a.txt and FileFullDirectoryInformation SL_RETURN_SINGLE_ENTRY\n2. STATUS_NO_MORE_FILES for path h:\\TestFindFile\\A\\B\\C\\D\\E\\F\\G\\H and FileFullDirectoryInformation \nThis happens when testing using cmd.exe dir command. Can you reproduce the issue using the dir command as well? When you set the process filter inside of the filespy to cmd.exe you should get the same output like me on Windows 7 x64. Is this the case?\n. @Liryna\nWhy I can't find cmd.exe in pastebin example? \n. This is the reason I asked for just cmd.exe\nDid you try to disable Windows Defender and antivirus software? \n. If Dokanctl does not need admin rights anymore (think, this has been fixed) then the unmount of current session drives should be possible using the following pull request https://github.com/dokan-dev/dokany/pull/523 I did not test it, but it must work. It will grab the current session from the request and so unmount the correct device.. Please enable the driver debugging at the position when you think you will get the deadlock  and not from beginning on.\nThis would reduce the log size.\n. @Liryna \nPlease send me the reference of the code where you have found this behavior. Generally the Global Disk Device exists only once per Driver. So the name is not dependent on the count of devices you have.\n. Then you have no other option except to change the device name. \n. The lifetime of fcb is much bigger than the one of the ccb. Also the fcb is more global than an ccb. Blocking fcb because of changes on ccb would be inefficient. Threads would unnecessary be blocked. Its like blocking the whole house because of some changes in a room instead of blocking just the room itself. \n. @taruti \nCorrect\n. Option 1:\nHave an additional thread running not in system context which has the responsibility to remove the symbolic link. Thread will only exist if the not MountGlobally is true.\nOption 2:\nBefore doing drive letter check in user mode call a cleanup method on driver and this request will remove remaining letters for the current session. \n. This pull request https://github.com/dokan-dev/dokany/pull/523 uses the above mentioned option 2. STACK_TEXT:  \nffffd000`2600ba20 fffff801`ddea0028 : ffffd000`2600c938 ffffd000`2600c650 ffffd000`2600c938 e5e5e5e5`00000001 : nt!RtlDispatchException+0x33\nffffd000`2600c120 fffff801`ddf544c2 : e5e5e5e5`e5e5e5e5 e5e5e5e5`e5e5e5e5 e5e5e5e5`e5e5e5e5 e5e5e5e5`e5e5e5e5 : nt!KiDispatchException+0x144\nffffd000`2600c800 fffff801`ddf51d33 : e5e5e5e5`e5e5e5e5 e5e5e5e5`e5e5e5e5 e5e5e5e5`e5e5e5e5 e5e5e5e5`e5e5e5e5 : nt!KiExceptionDispatch+0xc2\nffffd000`2600c9e0 fffff800`28ecb124 : fffff800`28edc1f0 00000000`00000008 00000000`00000065 00000000`00000001 : nt!KiBreakpointTrap+0xf3\nffffd000`2600cb70 fffff800`28ee0d5d : ffffe001`0a3c69a0 ffffd000`2600cc10 e5e5e5e5`e5e5e5e5 e5e5e5e5`e5e5e5e5 : dokan1!DokanExceptionFilter+0x74 [e:\\islog\\dev\\app\\dokan\\dokanyrelease\\sys\\except.c @ 43]\nffffd000`2600cbb0 fffff801`ddf3909f : ffffd000`2600db98 ffffd000`2600d3b0 fffff801`ddea0028 ffffd000`2600d3b0 : dokan1!DokanBuildRequest$filt$0+0x1d [e:\\islog\\dev\\app\\dokan\\dokanyrelease\\sys\\dispatch.c @ 47]\nffffd000`2600cbe0 fffff801`ddf4f84d : 00000000`00000000 ffffd000`2600cd80 00000000`00000080 ffffd000`2600d250 : nt!_C_specific_handler+0x9f\nffffd000`2600cc50 fffff801`ddea1c19 : 00000000`00000003 00000000`00000294 ffffd000`2600d250 e5e5e5e5`e5e5e5e5 : nt!RtlpExecuteHandlerForException+0xd\nffffd000`2600cc80 fffff801`ddea0028 : ffffd000`2600db98 ffffd000`2600d8b0 ffffd000`2600db98 00000000`00000001 : nt!RtlDispatchException+0x429\nffffd000`2600d380 fffff801`ddf544c2 : 00000000`00000000 00000000`00000000 00000000`00000000 00000000`00000000 : nt!KiDispatchException+0x144\nffffd000`2600da60 fffff801`ddf51d33 : 00000000`00000000 00000000`00000000 00000000`00000000 00000000`00000000 : nt!KiExceptionDispatch+0xc2\nffffd000`2600dc40 fffff800`28ecb124 : fffff800`28edc1f0 00000000`00000008 00000000`00000065 00000000`00000001 : nt!KiBreakpointTrap+0xf3\nffffd000`2600ddd0 fffff800`28ee0d5d : ffffe001`0a3c69a0 ffffd000`2600de70 00000000`00000000 00000000`00000000 : dokan1!DokanExceptionFilter+0x74 [e:\\islog\\dev\\app\\dokan\\dokanyrelease\\sys\\except.c @ 43]\nffffd000`2600de10 fffff801`ddf3909f : ffffd000`2600edf8 ffffd000`2600e610 fffff801`ddea0028 ffffd000`2600e610 : dokan1!DokanBuildRequest$filt$0+0x1d [e:\\islog\\dev\\app\\dokan\\dokanyrelease\\sys\\dispatch.c @ 47]\nffffd000`2600de40 fffff801`ddf4f84d : 00000000`00000000 ffffd000`2600dfe0 00000000`00000080 ffffd000`2600e4b0 : nt!_C_specific_handler+0x9f\nffffd000`2600deb0 fffff801`ddea1c19 : 00000000`00000003 00000000`00000294 ffffd000`2600e4b0 00000000`00000000 : nt!RtlpExecuteHandlerForException+0xd\nffffd000`2600dee0 fffff801`ddea0028 : ffffd000`2600edf8 ffffd000`2600eb10 ffffd000`2600edf8 ffffc000`00000001 : nt!RtlDispatchException+0x429\nffffd000`2600e5e0 fffff801`ddf544c2 : 7e9622a8`c3cca7c3 00000501`00079887 00000015`05000000 c3cca7c3`00012392 : nt!KiDispatchException+0x144\nffffd000`2600ecc0 fffff801`ddf51d33 : 00000000`00000000 fffff801`ddedd0c5 80000003`017f6963 fffff6e8`001176a0 : nt!KiExceptionDispatch+0xc2\nffffd000`2600eea0 fffff800`28ecb124 : fffff800`28edc1f0 00000000`00000008 00000000`00000065 00000000`00000001 : nt!KiBreakpointTrap+0xf3\nffffd000`2600f030 fffff800`28ee0d5d : ffffe001`0a3c69a0 ffffd000`2600f0d0 00000501`0003301b 00000015`05000000 : dokan1!DokanExceptionFilter+0x74 [e:\\islog\\dev\\app\\dokan\\dokanyrelease\\sys\\except.c @ 43]\nffffd000`2600f070 fffff801`ddf3909f : ffffd000`26010058 ffffd000`2600f870 fffff801`ddea0028 ffffd000`2600f870 : dokan1!DokanBuildRequest$filt$0+0x1d [e:\\islog\\dev\\app\\dokan\\dokanyrelease\\sys\\dispatch.c @ 47]\nffffd000`2600f0a0 fffff801`ddf4f84d : 00000000`00000000 ffffd000`2600f240 00000000`00000080 ffffd000`2600f710 : nt!_C_specific_handler+0x9f\nffffd000`2600f110 fffff801`ddea1c19 : 00000000`00000003 00000000`00000294 ffffd000`2600f710 7e9622a8`c3cca7c3 : nt!RtlpExecuteHandlerForException+0xd\nffffd000`2600f140 fffff801`ddea0028 : ffffd000`26010058 ffffd000`2600fd70 ffffd000`26010058 ffffc000`00000001 : nt!RtlDispatchException+0x429\nffffd000`2600f840 fffff801`ddf544c2 : ffffd000`260100f0 fffff801`ddf4e452 ffffd000`260100f0 00000000`00000000 : nt!KiDispatchException+0x144\nffffd000`2600ff20 fffff801`ddf51d33 : 00000000`00000000 ffffc000`7fe316a0 00000000`00000000 ffffd000`26010500 : nt!KiExceptionDispatch+0xc2\nffffd000`26010100 fffff800`28ecb124 : fffff800`28edc1f0 00000000`00000008 00000000`00000065 00000000`00000001 : nt!KiBreakpointTrap+0xf3\nffffd000`26010290 fffff800`28ee0d5d : ffffe001`0a3c69a0 ffffd000`26010330 00000000`00000000 00000000`00000000 : dokan1!DokanExceptionFilter+0x74 [e:\\islog\\dev\\app\\dokan\\dokanyrelease\\sys\\except.c @ 43]\nffffd000`260102d0 fffff801`ddf3909f : ffffe001`00000000 00000000`00000000 fffff800`00000030 00000000`00000000 : dokan1!DokanBuildRequest$filt$0+0x1d [e:\\islog\\dev\\app\\dokan\\dokanyrelease\\sys\\dispatch.c @ 47]\nffffd000`26010300 fffff801`ddf4f84d : 00000000`00000000 ffffd000`260104a0 00000000`00000080 fffffa80`0966ed30 : nt!_C_specific_handler+0x9f\nffffd000`26010370 fffff801`ddea1c19 : 00000000`00000003 00000000`00000294 ffffd000`26010970 fffff801`dde41d3d : nt!RtlpExecuteHandlerForException+0xd\nffffd000`260103a0 fffff801`ddea0028 : ffffd000`260112b8 ffffd000`26010fd0 ffffd000`260112b8 00000000`00000001 : nt!RtlDispatchException+0x429\nffffd000`26010aa0 fffff801`ddf544c2 : 00000000`00000000 00000000`00000000 ffffe001`16769a20 00000000`3045464d : nt!KiDispatchException+0x144\nffffd000`26011180 fffff801`ddf5297d : 00000000`00000000 00000000`00000000 ffffe001`156cbd04 00000000`00000000 : nt!KiExceptionDispatch+0xc2\nffffd000`26011360 fffff801`ddec6dc1 : 00000000`00000000 ffffe001`0a3c69a0 ffffc000`97666950 ffffd000`26011b80 : nt!KiGeneralProtectionFault+0xfd\nffffd000`260114f0 fffff801`ddee13cd : 00000000`00000001 00000000`00000000 ffffd000`26011b80 ffffc000`6f725346 : nt!FsRtlpOplockDequeueRH+0x15\nffffd000`26011520 fffff800`28ec3027 : ffffc000`97666950 ffffe001`0acb7df0 ffffe001`15ba6590 ffffe001`0a3c69a0 : nt!FsRtlUninitializeOplock+0x1f1\nffffd000`26011580 fffff800`28ec2c9d : ffffe001`0bb36010 00000000`c0000910 ffffd000`26011b02 ffffe001`0b432c68 : dokan1!DokanFreeFCB+0x157 [e:\\islog\\dev\\app\\dokan\\dokanyrelease\\sys\\create.c @ 187]\nffffd000`260115c0 fffff800`28ec93fa : ffffe001`0bbb5c00 ffffe001`0b5db540 ffffd000`00000001 ffffe001`0aa4a6c8 : dokan1!DokanCompleteCreate+0x4cd [e:\\islog\\dev\\app\\dokan\\dokanyrelease\\sys\\create.c @ 1339]\nffffd000`26011650 fffff800`28ec63f5 : ffffe001`166154c0 ffffe001`0a3c69a0 00000000`00000440 fffff800`28ed24bb : dokan1!DokanCompleteIrp+0x42a [e:\\islog\\dev\\app\\dokan\\dokanyrelease\\sys\\event.c @ 411]\nffffd000`260116f0 fffff800`28ec7ef4 : ffffe001`166154c0 ffffe001`0a3c69a0 ffffd000`26011800 fffff800`24b059fa : dokan1!DokanDispatchDeviceControl+0x205 [e:\\islog\\dev\\app\\dokan\\dokanyrelease\\sys\\device.c @ 928]\nffffd000`26011760 fffff800`28ec7c10 : ffffe001`166154c0 ffffe001`0a3c69a0 00000000`00000001 fffff801`dde7acc1 : dokan1!DokanDispatchRequest+0x294 [e:\\islog\\dev\\app\\dokan\\dokanyrelease\\sys\\dispatch.c @ 141]\nffffd000`260117a0 fffff800`24b05842 : ffffe001`166154c0 ffffe001`0a3c69a0 00000000`00000000 00000000`00000000 : dokan1!DokanBuildRequest+0x80 [e:\\islog\\dev\\app\\dokan\\dokanyrelease\\sys\\dispatch.c @ 45]\nffffd000`260117f0 fffff801`de209852 : ffffe001`15ba6590 ffffd000`26011b80 00000000`00000001 ffffe001`00000001 : FLTMGR!FltpDispatch+0xe2\nffffd000`26011850 fffff801`de2086e6 : ffffe001`0bf4b3c0 fffff800`24b35500 00000000`00000000 00000000`00000000 : nt!IopXxxControlFile+0x1162\nffffd000`26011a20 fffff801`ddf540a3 : ffffc000`8a827050 fffff801`de1c5ced 00000000`00000000 00000000`00000000 : nt!NtDeviceIoControlFile+0x56\nffffd000`26011a90 00000000`682921bc : 00000000`00000000 00000000`00000000 00000000`00000000 00000000`00000000 : nt!KiSystemServiceCopyEnd+0x13\n00000000`0efff268 00000000`00000000 : 00000000`00000000 00000000`00000000 00000000`00000000 00000000`00000000 : 0x682921bc\nIt look like IRP_MJ_CREATE failed and the FsRtlUninitializeOplock caused the bugcheck. It would be helpfull to get the driver log.\n. @CrosseyeJack\nCan you give me more details what kind of software uses this filter cldflt!HsmiCfgOpenSettingFile?\n. Please can you post here the !analyze -v output This makes it simpler to me to analyze the problem before doing any debugging. Thanks a lot.\n. So please test the pull request above. The issue comed from the request of \"\\system volume information\\Cloud Files\" which was responded with SUCCESS. The os wanted to read some files there but the used handle was invalid which caused the BSOD. To fix the issue the first request will not get a handle resp. the driver responds with a not Not SUCCESS message. \nIn generally the proposed solution is still a hack but required using the actual architecture. Normally all the requests should be handled by usermode application. At this point it's actually not possible to forward the requested to usermode application because the original request camed from there (add interrupts to pool) but a driver filter added some requests more. So driver had no usermode interrupt to be able to handle the driver filter requests by them.\n. So let's try. \nIn Usermode we are creating the device here\nhttps://github.com/dokan-dev/dokany/blob/master/dokan/dokan.c#L218\nThis works fine. Then we are starting DokanLoop threads\nhttps://github.com/dokan-dev/dokany/blob/master/dokan/dokan.c#L275\nThis threads are doing CreateFile to the new created device\nhttps://github.com/dokan-dev/dokany/blob/master/dokan/dokan.c#L364\nand send the DeviceIoControl IOCTL_EVENT_WAIT \nhttps://github.com/dokan-dev/dokany/blob/master/dokan/dokan.c#L387\nThis Irp will be added to the drivers list of workers. This are the usermode workes, which are used to process the requests.\nWhen the driver has something to do it will respond the IOCTL_EVENT_WAIT and the usermode will process the respond from the driver\nhttps://github.com/dokan-dev/dokany/blob/master/dokan/dokan.c#L422\nafter the job is processed it will do SendEventInformation IOCTL_EVENT_INFO to the driver\nhttps://github.com/dokan-dev/dokany/blob/master/dokan/dokan.c#L491\nand then the thread will do again CreateFile and IOCTL_EVENT_WAIT\nhttps://github.com/dokan-dev/dokany/blob/master/dokan/dokan.c#L364\nSo this should be clear. The way the drivers are designed is in stacks. When we have created the totally new device, we are going to open the new device using CreateFile (bold text above). Now the stack is used for our CreateFile. Inside of the stack we have as first all the Driver Filters and then is the request passed down to the driver it self. If in our example we are doing the CreateFile and the IOCTL_EVENT_WAIT the first time, the filters can block the call and send as first some other request to the driver before the real request is passed down. This is what happens using antivirus software or in this case the Cloud Files filter. If the filters do that, the driver has no usermode workers in this list\nhttps://github.com/dokan-dev/dokany/blob/da39829ddccbf68e7d4af3966edb8b0c91afa25f/sys/event.c#L216\nSo, it can't pass the requests to the usermode application. If the driver responds using STATUS_PENDING the whole stuff will hang.\n. Not all. It's really amazing how much time you invest to support the community here. Thanks a lot @Liryna You are doing a great job!!!\n. The reason of unmounting is the timeout. How many threads did you specify when mounting the dokan drive? If you mount the drive, can you navigate using explorer before starting the content.exe? It seems like all the threads are busy  or the usermode requests can't reach the driver for some reason. This is the reason why the device is unmounted. Kernel thinks that the usermode application is no longer there. The usermode application does not provide any threads for processing of the operating system requests. Maybe trendmicro blocks those requests after the start of content.exe\n. Yes it's possible. If you use more than one thread you should not face this problem or let's say the chance is small. But anyway you have to test with one thread and the deadlock fix included.\n. What we need is the check if the path starts with \\System Volume Information\nThe passed in path is \n\\System Volume Information\\Cloud Files\\\n. @Liryna \nHave done the requested changes and it works fine \ud83d\udc4d Nice solution to avoid memory allocation \ud83d\ude04 \nSo let's hope how that the BSOD can't be reproduced anymore. Thanks a lot!\n. It would be helpful to have some logs. Did not analyze the dump but it seems to me that in specific case the Security Descriptor of the file is not set and so the BSOD is caused. \n. @Liryna Now we are doing flush which does close of memory mapped files. Does this issue still exist?. The main difference is that in second pull request only part of the files\nis going to be flushed. Log would provide more information. You can change\nthe code of the second request so that the filter is not taking place. This\nshould solve the problem. Then we can talk what is the source of the\nproblem.\nAm 19.03.2017 09:34 schrieb \"Liryna\" notifications@github.com:\n\nHi @Kerbox https://github.com/Kerbox ,\nYou right, this was fixed with #454\nhttps://github.com/dokan-dev/dokany/pull/454 but has since broked with\n462 https://github.com/dokan-dev/dokany/pull/462 \ud83d\ude22\n@marinkobabic https://github.com/marinkobabic any idea what could\nhappen ?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/369#issuecomment-287602218,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ADHSOOap7kyYS4Wbpw6xP503deYyfulBks5rnOh9gaJpZM4KVSE_\n.\n. Please try the following if fileRelatedTo is null then\n\nIf fileObject is not null then we should execute FlushAllCachedFcb(fcb,\nfileObject);\nAm 19.03.2017 17:38 schrieb \"Liryna\" notifications@github.com:\n\n@marinkobabic https://github.com/marinkobabic I have been able to look\nmake FlushAllCachedFcb \"work\" again by removing the fcbRelatedTo folder\ncheck at the start and the StartsWith see patch: 0001-test.txt\nhttps://github.com/dokan-dev/dokany/files/853354/0001-test.txt\nI know that with this patch it look like your preview PR where everything\nwas flush...but that was the only way I was making it work.\nI have run dbgview with the patch : dbgview.txt\nhttps://github.com/dokan-dev/dokany/files/853357/dbgview.txt\nThere is not trace of FlushAllCachedFcb print, I dont really understand\nwhy \ud83d\ude22\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/369#issuecomment-287629062,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ADHSOD9PPLqJClgxFvDBYzcREGrbtuMVks5rnVoFgaJpZM4KVSE_\n.\n. I meant FlushFcb(fcb, NULL);should be executed.\n\nAm 19.03.2017 17:59 schrieb \"Marinko Babic\" marinko.android@gmail.com:\n\nPlease try the following if fileRelatedTo is null then\nIf fileObject is not null then we should execute FlushAllCachedFcb(fcb,\nfileObject);\nAm 19.03.2017 17:38 schrieb \"Liryna\" notifications@github.com:\n\n@marinkobabic https://github.com/marinkobabic I have been able to look\nmake FlushAllCachedFcb \"work\" again by removing the fcbRelatedTo folder\ncheck at the start and the StartsWith see patch: 0001-test.txt\nhttps://github.com/dokan-dev/dokany/files/853354/0001-test.txt\nI know that with this patch it look like your preview PR where everything\nwas flush...but that was the only way I was making it work.\nI have run dbgview with the patch : dbgview.txt\nhttps://github.com/dokan-dev/dokany/files/853357/dbgview.txt\nThere is not trace of FlushAllCachedFcb print, I dont really understand\nwhy \ud83d\ude22\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/369#issuecomment-287629062,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ADHSOD9PPLqJClgxFvDBYzcREGrbtuMVks5rnVoFgaJpZM4KVSE_\n.\n\n\n. When you apply your cache. What files are flushed.\n\nDDbgPrint(\"  FlushAllCachedFcb check %wZ if is related to %wZ\",\nDDbgPrint(\"  FlushAllCachedFcb flush %wZ if flush is possible.\"\ncompared when your patch is not applied? You can set the filter in debugview to FlushAllCachedFcb so we would get the right output. Just wondering what the difference is and what we are missing.\n. StartsWith(&fcb->FileName, &fcbRelatedTo->FileName)) should be\nStartsWith(&fcbRelatedTo->FileName, &fcb->FileName)\nDoes this change fix the issue already?\n. Please add to your log the filters MmFlushImageSection and CcFlushCache\nI'm even not sure about the change proposed above. If somebody renames \\liryna\\Desktop\\emsdk.tmp.git\\config.lock   there is no reason to flush \\liryna\\Desktop\\emsdk.tmp.git\\config\nplease change also this line DDbgPrint(\"  FlushAllCachedFcb file passed in. Flush only this file %wZ.\\n\", &fcbRelatedTo->FileName);\nThe original idea was if we have a directory \\liryna\\Desktop\\mydir and if somebody renames this directory then we should flush all the files which start with \\liryna\\Desktop\\mydir before the rename happens. Let's see what the result of log is.. This helps a lot. Thanks. Will analyze the stuff in the evening.\nAm 20.03.2017 07:48 schrieb \"Liryna\" notifications@github.com:\n\nOn the full logs, we can see that emsdk.tmp.git\\config.lock is renamed to\nemsdk.tmp.git\\config\n00526399  11.05768108 [DokanFS] ==> DokanCompleteSetInformation \n00526400  11.05768394 [DokanFS]    rename also done on fcb \\liryna\\Desktop\\emsdk.tmp.git\\config\n00526401  11.05768681 [DokanFS]   DokanCompleteSetInformation Report FileRenameInformation\n[DokanFS] ==> DokanNotifyReportChange \\liryna\\Desktop\\emsdk.tmp.git\\config.lock\n00526402  11.05768871 [DokanFS] <== DokanNotifyReportChange \n00526403  11.05769062 [DokanFS] ==> DokanNotifyReportChange \\liryna\\Desktop\\emsdk.tmp.git\\config \n00526404  11.05769157 [DokanFS] <== DokanNotifyReportChange \n00526405  11.05769253 [DokanFS]   status = 0x0  \n00526406  11.05769444 [DokanFS]   status = STATUS_SUCCESS \n00526407  11.05769539 [DokanFS] <== DokanCompleteSetInformation   \n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/369#issuecomment-287687558,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ADHSOPDy7twaNPxXAtjgjkbr3GTw1hrMks5rniE1gaJpZM4KVSE_\n.\n. @Liryna Please can you check if this simple fix solves the problem https://github.com/marinkobabic/dokany/commit/5d1a00edc5166063ea2d5d9162beadbab3a102fc\n\ntargetFileObject = irpSp->Parameters.SetFile.FileObject;\n      if (targetFileObject)\n      {\n          DDbgPrint(\"  FileRenameInformation targetFileObject specified so perform flush\\n\");\n          PDokanCCB targetCcb = (PDokanCCB)targetFileObject->FsContext2;\n          ASSERT(targetCcb != NULL);\n          FlushAllCachedFcb(targetCcb->Fcb, targetFileObject);\n      }\n      FlushAllCachedFcb(fcb, fileObject);. This used to work if the returned filesystemname was NTFS\n. Would be great. Will try to reproduce the the issue on my machine. To be\nable to debug will need to download the VM eventually.\n. The issue can be reproduced the following way:\nMap the drive using /n option\nStart procmon\nDo rename\nI have been able to reproduce the issue on Windows 10 x64\nIt will take some days to analyze and understand the problem.\nLyrina can you also reproduce the BSOD this way?\n. Have analyzed the problem. To fix the issue in my opinion the FileNormalizedNameInformation https://github.com/dokan-dev/dokany/blob/66f8927e9bbbdd8c8ea56422219b8bb2fd43fc86/sys/fileinfo.c#L102 must finally be implemented. The returned name for network drive should look like\n\\Device\\LanManRedirector\\MyServer\\MyShare\\Documents and Settings\\MyUser\\My Documents\\Test Results.txt:stream1\nHere the documentation can be found https://msdn.microsoft.com/en-us/library/ff544633(v=vs.85).aspx\n. @Liryna You should even be able to reproduce the issue, when you are using your own image. \n\nJust mount the M: drive letter to c:\\temp for example. Use the /n option. \nAfter mounting the drive then run the procmon, so the filter will be attached to the device stack. \nRun cmd.exe \nand rename a file inside of the cmd.exe rename file.txt to file2.txt. \n\nThe file must be in the c:\\temp resp m:\\ directly and not in subfolder.\nHave again analyzed the issue and for some reason in the driver, when the request during the rename for FileNameInformation comes in for the root folder, the nameInfo = (PFILE_NAME_INFORMATION)Irp->AssociatedIrp.SystemBuffer; contains already information like \\Device\\HarddiskVolume2\\temp before it's changed by the driver to a simple slash which symbolizes the root folder. https://github.com/dokan-dev/dokany/blob/master/sys/fileinfo.c#L119 \nSo I think that the mirror is the source of the problem. During findfiles or whatever directory operation, where the name of a directory is returned, the mirror returns in some case the full device name of the mirrored file back to the driver. This must never be the case. Please can you check my statement?. The buffer is reused and thats the reason it contains weird information. Will take more time to figure out what the source of the BSOD is.. They allocate the buffer to get nameinfo once and reuse it for different\nfiles. This is so far fine.\n. This pull request fixes your issue https://github.com/dokan-dev/dokany/pull/405\nWe should check if the issue https://github.com/dokan-dev/dokany/issues/400 is related to this problem.. I think that FILE_NAME_INFORMATION is still not completely implemented.\nPlease see the\nhttps://msdn.microsoft.com/en-us/library/windows/hardware/ff567052(v=vs.85).aspx\nabout shares. I think this can be easily verified using NTFS and dokan.\nShould return the same result.\nMaybe is this the source of the problem why FILE_RENAME_INFO does not\ncontain correct data according to your statement.\n. @yin19941005 \nI think the source of your problem is here\nhttps://github.com/dokan-dev/dokany/blob/master/sys/fileinfo.c#L475\nRtlZeroMemory(renameContext->FileName, renameContext->FileNameLength);\n        RtlCopyMemory(renameContext->FileName,\n                      targetFileObject->FileName.Buffer,\n                      targetFileObject->FileName.Length);\nPlease log the targetFileObject->FileName before RtlCopyMemory and then log after the RtlCopyMemory the renameContext->FileName \nNormally those two values should have the same data after RtlCopyMemory but I don't think it's so. So what are your log results?\n. This pull request should fix your problem https://github.com/dokan-dev/dokany/pull/410. Please post the result of !analyze -v of the dump file. This may give us\nmore details.\n. Hi Liryna\nYou copied the files from your local drive to dokan drive?\nProcmon was running in background?\nThx\nMarinko\n. No way to reproduce it. What os are you using? My one is Windows 10 x64. I\ncopied files including folders several times but no BSOD. If you attach the\nkernel debugger you should get more details. Can you reproduce the BSOD\nwithout the pull request?\n. Will fix it. It's just a backslash \ud83d\ude06 thx\n. The question is, can it be reproduced on AppVayor? Will try also to\nreproduce it locally.\n. Using this fix procmon displays m:\\device...mydir instead of m:\\mydir which is not fine. So need more time to review the problem. Please do not merge it. Will cancel the pull request.. have enabled it only when network option is used. So we have no risk and all should work as usually. The BSOD should be gone.. @Liryna Yes, you can use it of course\nhttps://msdn.microsoft.com/en-us/library/windows/hardware/ff539135(v=vs.85).aspx\nAm 23.03.2017 11:56 schrieb \"Liryna\" notifications@github.com:\n\nHi @emailuser2009 https://github.com/emailuser2009 ,\nThank you for the report, this happens because we call\nMmCanFileBeTruncated even when we want to grow the file and not to truncate\nit.\nhttps://github.com/dokan-dev/dokany/blob/e2c0825262b129110a535225be7560\n9da08b3751/sys/fileinfo.c#L489\n@marinkobabic https://github.com/marinkobabic Kernel question \ud83d\ude03 my\nidea would be to save current file size during FileAllInformation,\nFileStandardInformation and FileNetworkOpenInformation in the fcb, like\nthat we would know if the file is going to be truncated or not.\nBefore I possibly duplicate the information, do you know if we already\nsave the file size somewhere ?\nIt seems like in fcb there is FSRTL_ADVANCED_FCB_HEADER struct that has\nfile informations that is currently not use.\nhttps://github.com/dokan-dev/dokany/blob/d3b7927fbc68296f9c41228a3e5fab\ne322be0b2a/sys/create.c#L74-L75\nI wonder if we can use it ?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/412#issuecomment-288683565,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ADHSODPLNmk98kP6-uuwkQYiSX8El1uRks5rok_EgaJpZM4LMlFh\n.\n. Kernel log is needed because it's the kernel which did the unmount.\n\nAm 23.12.2016 08:24 schrieb \"Rambalac\" notifications@github.com:\n\nRegarding the snapshot, I did download cert folder and run Powershell.exe\n-executionpolicy remotesigned -File .\\cert\\dokan-import.ps1 from its\nparent folder under elevated cmd.\nYes, when I turn it back device is already dismounted.\nIf I put laptop to sleep for short time like few minutes there is no\nproblem.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/413#issuecomment-268950481,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ADHSOEHmix7kD6Dc_t0zK2YYYfauGMmKks5rK3cVgaJpZM4LUD2i\n.\n. Hi Jack\n\nJust remove the pc information at the beginning of the log and upload the\nlog here. There are no confidential information inside.\nThx Marinko\nAm 26.05.2017 23:13 schrieb \"Jack Platten\" notifications@github.com:\n\n@Rondom https://github.com/rondom I've just repro'd mirror.exe stopping\nafter the Surface Book being closed for long enough to enter the InstantGo\nstate. Where should I send kernel log to, as I'm not sure it's 100% safe to\npost in a public forum?\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/413#issuecomment-304389467,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ADHSOOVaii55VbLmsOEq_iS6qE642tH9ks5r90B3gaJpZM4LUD2i\n.\n. As you can see here \n\n00010823    72.81896973 [DokanFS]   IOCTL_EVENT_RELEASE \nDriver got the instruction from usermode to unmount your drive M:\nSo the question is now why did the usermode application sent this event to the driver? What happened inside the mirror so that the event has been sent to the driver. \nNow more details are needed from the usermode application respective from the mirror.exe. There is a \"send global release for\" which tells us that the unmount caned\nfrom user mode application. So please do the following:\nAdd some log to the DokanRemoveMountPointEx\nRun mirror with just one thread may simplify the log\nAm 27.05.2017 01:19 schrieb \"Jack Platten\" notifications@github.com:\nhttps://gist.github.com/plttn/ad60cc98523abacde49313ce4af181a8\nUsermode mirror log.\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/413#issuecomment-304407198,\nor mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/ADHSOLEtsd0EH_jGYoYxgWZ2-Uj3SrsGks5r914fgaJpZM4LUD2i\n.\n. https://github.com/dokan-dev/dokany/blob/b4dc99ad9efa0b60b05a1e37653e1fc1ba793f43/dokan/mount.c#L571\nAm 27.05.2017 01:50 schrieb \"Jack Platten\" notifications@github.com:\n\nWhere specifically is the DokanRemoveMountPointEx? usermode or kernel?\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/413#issuecomment-304410371,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ADHSOCuZFuLzB5TicHmgyIbgLQIQrl4Cks5r92VLgaJpZM4LUD2i\n.\n. Just the mirror please. We need to figure out where the call of the\nSendGlobaleReleaseIRP caned from.\n\nAm 27.05.2017 01:57 schrieb \"Jack Platten\" notifications@github.com:\n\nAs in should I be logging mirror.exe or the kernel again?\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/413#issuecomment-304411064,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ADHSODP7uIx62ZsBAG51UCAZ_M4xsk_dks5r92b4gaJpZM4LUD2i\n.\n. There is no \"send global release\" in the log anymore. Please can you\nprovide the kernel log?\n\nAm 27.05.2017 02:24 schrieb \"Jack Platten\" notifications@github.com:\n\nhttps://gist.github.com/plttn/97f9bdcac0afe52d6f716c54bab62db6\nnew execution, letting it idle to instantgo rather than closing the lid.\nthat's an entire execution of mirror.exe minus the first few lines\nbecause powershell buffer.\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/413#issuecomment-304413329,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ADHSOB2AhsWe1YRITwV93ZA0e_fFD9e1ks5r920ogaJpZM4LUD2i\n.\n. The kernel log above said that usermode requested the unmount. Your last\nusermode log does not contain such an request. So the question is who\ncaused the unmount now.\n\nYou can check the user Mode your self and you will see that in the first\nuser Mode log is \"send global release\" but in the second one there is no\nsuch an entry. So why is there still an unmount.\nAm 27.05.2017 02:30 schrieb \"Jack Platten\" notifications@github.com:\n\nDid the kernel log above not provide what needed?\nOn Fri, May 26, 2017, 5:28 PM Marinko notifications@github.com wrote:\n\nThere is no \"send global release\" in the log anymore. Please can you\nprovide the kernel log?\nAm 27.05.2017 02:24 schrieb \"Jack Platten\" notifications@github.com:\n\nhttps://gist.github.com/plttn/97f9bdcac0afe52d6f716c54bab62db6\nnew execution, letting it idle to instantgo rather than closing the\nlid.\nthat's an entire execution of mirror.exe minus the first few lines\nbecause powershell buffer.\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\n<https://github.com/dokan-dev/dokany/issues/413#issuecomment-304413329\n,\nor mute the thread\n<\nhttps://github.com/notifications/unsubscribe-auth/\nADHSOB2AhsWe1YRITwV93ZA0e_fFD9e1ks5r920ogaJpZM4LUD2i\n.\n\n\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/413#issuecomment-304413681,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/\nAHByQMdG71PjFRdHy9tewcgOUTg8imKvks5r9248gaJpZM4LUD2i\n.\n\n\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/413#issuecomment-304413769,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ADHSOG50qFC4xCpdzLjfEP0XN4XB731zks5r926IgaJpZM4LUD2i\n.\n. In the passed the error was always in the driver. Use 1 thread and create 3\ndifferent kernel logs. Maybe one of them will provide enough information to\nsolve the problem. Normally is always the timeout thread.\nhttps://github.com/dokan-dev/dokany/blob/de4e1408c498b069ada734d0ca9b5c2de501d14d/sys/timeout.c#L101\n\nAm 27.05.2017 02:37 schrieb \"Jack Platten\" notifications@github.com:\n\nThe kernel logs and usermode logs were collected from different runs, but\nI can't see how this is a mirror.exe problem, as this occurs with keybase's\nfilesystem as well.\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/413#issuecomment-304414369,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ADHSOLvVEh3KA7qnVtpDNBmcqz4WheGgks5r93BngaJpZM4LUD2i\n.\n. Please try to add the machine name to the trusted zone.\n\nYou should be able to simulate the problem using a share on your ntfs\ndrive. Try just to access the files using unc path.\nAm 05.01.2017 13:23 schrieb \"velislav87\" notifications@github.com:\n\nFeature request can skip this form. Bug report must complete it. Check\nList must be 100% match or it will be automatically closed without\nfurther discussion. Please remove this line.\nEnvironment\n\nWindows version: Any\nProcessor architecture: Any\nDokany version: 1.01\nLibrary type (Dokany/FUSE): Dokany\n\nCheck List\n\nI checked my issue doesn't exist yet\n   https://github.com/dokan-dev/dokany/issues?utf8=%E2%9C%93&q=is%3Aissue\nMy issue is valid with mirror default sample and not specific to my\n   user-mode driver implementation\nI can always reproduce the issue with the provided description below.\nI have updated Dokany to the latest version\n   https://github.com/dokan-dev/dokany/releases and have reboot my\n   computer after.\nI tested one of the last snapshot\n   https://github.com/dokan-dev/dokany/wiki/Build#user-snapshot from\n   appveyor CI\n\nDescription\nHi guys, I am getting the following security popup when trying to open\ncertain files when using the dokany in network share mode:\n[image: image]\nhttps://cloud.githubusercontent.com/assets/20440536/21679350/b73da85c-d354-11e6-90ec-b50ba8f274fc.png\nReproducible with windows 10 and both the .net binding mirror example and\nthe c mirror example.\nI found a couple of similar issues where it is recommended to add the host\nto a trusted domain list:\nhttps://answers.microsoft.com/en-us/windows/forum/windows_7-\nsecurity/open-file-security-warning-box-in-windows-7/\n334c5053-8a77-41f7-a166-9f3254d27461\nI tried using the /u option in the mirror to make a UNC host name, then\nadd it to the list, however this doesn't seem to solve the issue. Is there\na possibility to avoid this popup in a out of the box install?\nLogs\nmirror_network_logs.txt\nhttps://github.com/dokan-dev/dokany/files/687209/mirror_network_logs.txt\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/417, or mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ADHSOKiT657805Ig_Cy5uiFsZ-AceEe4ks5rPOClgaJpZM4LbowO\n.\n. You have this issue only using exe files or also with other file types? What I could imagine is that antivirus software has an handle open to this file. You can verify this when you use the tool process explorer https://technet.microsoft.com/en-us/sysinternals/processexplorer.aspx and in the menu find handle you search for your exe file. Another option is to use WinDbg : !handle Command. @noairman \nI have tested your issue and it can be reproduced on my virtual box. The difference between a normal file and an exe file is that explorer does CreateFileMapping for the exe file additionally. This explains the behavior. You can check this in the sysinternals tool filemonitor. \n\nIn my opinion the IRP_MJ_CLOSE is not done for the file and the FileCount remains high. When you copy the new file in, the deleted fcb is found in the list and because of the FileCount not being zero you will get the STATUS_OBJECT_NAME_COLLISION https://github.com/dokan-dev/dokany/blob/master/sys/create.c#L741\nSo the issue must be investigated. Why is the IRP_MJ_CLOSE is not executed? You could try to add the following code here https://github.com/dokan-dev/dokany/blob/de4e1408c498b069ada734d0ca9b5c2de501d14d/sys/cleanup.c#L90\nif( fileObject->SectionObjectPointer.ImageSectionObject )\n    MmFlushImageSection( &fcb->SectionObjectPointers, MmFlushForWrite );\nAdditionally the result of https://github.com/dokan-dev/dokany/blob/de4e1408c498b069ada734d0ca9b5c2de501d14d/sys/cleanup.c#L92 CcPurgeCacheSection should be checked and logged if FALSE\n@Liryna \nThe code above should be added anyway.. Have no idea because I actually have no access to my machine.\n. This should fix the issue https://github.com/dokan-dev/dokany/pull/428. Can the issue be reproduced with one file and putting in some delays during\nwrite operations?\nYou are going to write a bigger file and an client reads the same file\nalready during a longer taking write operations which is still not\ncompleted for the whole  file. Only 60% of the file have been written at\nthis point of read.\nAm 27.01.2017 03:07 schrieb \"yin19941005\" notifications@github.com:\n\nHi @Liryna https://github.com/Liryna ,\nThank you for your kindly explanation!! I got a bit confused for new\noption DOKAN_OPTION_FILELOCK_USER_MODE (/f option).\nDo you mean that I should either implementing the lock/mutex in the\nread/write operation or enable the /f option and implementing the lock\nfunction in the mirror (& call the mirrorLockFile in read/write)?\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/423#issuecomment-275572187,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ADHSOPPGFXKMxvI0hTxbaNK2hIzXEVRxks5rWVF1gaJpZM4LuRrc\n.\n. So let's explain what here happens.\n\nWe have the root a folder \"test\". We also create the folder \"1\" on the root level. Paste the file \"1.txt\" into the folder one and move then the folder \"1\" into the test folder. During the move the file \"/1/1.txt\" is opened by the system. After the move operation the folder \"/1\" is renamed to \"/test/1\" DokanCompleteSetInformation. The problem is that the file \"/1/1.txt\" remains opened. Now if the user creates a new folder \"/1\" on the root level and tries to paste the file \"1.txt\" into that folder, the DokanGetFCB finds the opened \"/1/1.txt\" and causes the STATUS_OBJECT_NAME_COLLISION issue. An workaround would be inside of the DokanCompleteSetInformation also to rename all the FileNames of cached FCB if needed. From my point of view this would be a hack. There must be a way to tell the system to close the file \"/1/1.txt\" after the rename of the parent folder is complete.\nThis fix does not work, but the code should look anyway this way:\n```c\n      case FileRenameInformation: {\n        DokanNotifyReportChange0(fcb, &oldFileName,\n            DokanFCBFlagsIsSet(fcb, DOKAN_FILE_DIRECTORY) ?\n            FILE_NOTIFY_CHANGE_DIR_NAME : FILE_NOTIFY_CHANGE_FILE_NAME,\n                                 FILE_ACTION_RENAMED_OLD_NAME);\n    // free old file name\n    ExFreePool(oldFileName.Buffer);\n\n    DokanNotifyReportChange(fcb,\n        DokanFCBFlagsIsSet(fcb, DOKAN_FILE_DIRECTORY) ?\n        FILE_NOTIFY_CHANGE_DIR_NAME : FILE_NOTIFY_CHANGE_FILE_NAME,\n                            FILE_ACTION_RENAMED_NEW_NAME);\n  } break;\n\n```. @noairman Please can you check the pull request above if it solves your problem?. Two different threads do  FindOpenInfoEntry and one of them is doing free. How does the new concept solve the problem that one threads has in this case a stale DOKAN_OPEN_INFO and it doesn't operate on it?. I'm still thinking about the real source of the problem. When you check the code before your changes, every DispatchCreate creates DOKAN_OPEN_INFO because the driver told the usermode to do so. In case of DispatchCleanup and DispatchClose the same. If the driver says that the file has been closed, so the DOKAN_OPEN_INFO can be destroyed for sure. So the question why is an OpenCount needed at all in the usermode library? SendEventInformation must not ReleaseDokanOpenInfo as well (this is the job of close). ClearFindData(openInfo->DirListHead) clears the list without to lock the access and so on. If the code is cleaned up, then your should not face the problem you originally had and usermode does not care about the OpenCount and when the DOKAN_OPEN_INFO should be destroyed.\nThis should be the starting point of our discussion. Maybe is my theory totally wrong but let's also see what other contributors say. I'm also very interested in your opinion.. From my point of view it looks good. You should  squash the commits into one. Well found and fixed! :-). There are maybe many other STATUS codes which can be used and are as well\nin this range. So from my point of view you are absolutely right. Other\nSTATUS_SUCCESS checks should as well be verified.\nAm 17.02.2017 00:25 schrieb \"pliard-chromium\" notifications@github.com:\n\n@pliard-chromium commented on this pull request.\nIn dokan/create.c\nhttps://github.com/dokan-dev/dokany/pull/438#discussion_r101653175:\n\n@@ -330,9 +330,11 @@ VOID DispatchCreate(HANDLE Handle, // This handle is not for a file. It is for\n   if (origFileName)\n     free(origFileName);\n\n\nif (eventInfo.Status != STATUS_SUCCESS) {\n\nFYI, I have been doing more digging regarding this STATUS_TIMEOUT vs\nSTATUS_IO_TIMEOUT issue, regarding the fact in particular that the Context\npointer gets sent back to user space with STATUS_TIMEOUT but doesn't with\nSTATUS_IO_TIMEOUT.\nI believe there is a discrepancy between the status check here and the one\nin the driver in DokanCompleteCreate(). The driver uses the NT_SUCCESS()\nmacro which says \"Evaluates to TRUE if the return value specified by Status\nis a success type (0 \u2212 0x3FFFFFFF) or an informational type (0x40000000 \u2212\n0x7FFFFFFF)\". STATUS_TIMEOUT happens to be in that range while\nSTATUS_IO_TIMEOUT is an actual error.\nI think we should probably make this check use NT_SUCCESS() instead. I'm\nworried that there might be other discrepancies in the codebase. What do\nyou think?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/dokan-dev/dokany/pull/438#pullrequestreview-22389604,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ADHSOAgJL2PP2loS7ZEyzKQYQS7PWylHks5rdNr3gaJpZM4L7gB4\n.\n. The driver will do a close if nobody is referencing the file. How is it\npossible that you get the use after free? Driver has the knowledge about\nall the references. Please can you describe more detailed your specific\ncase or even write a simple test?\n\nAm 02.03.2017 21:27 schrieb \"pliard-chromium\" notifications@github.com:\n@Liryna https://github.com/Liryna That's my suspicion, yes. I think we\nshould either fix the Dokan driver so that the close doesn't get sent while\nthere are still pending cancelled operations, if that's possible at all, or\nkeep the DOKAN_OPEN_INFO ref-count since it's already there.\nAlso note that the Dokan client's close callback is currently invoked in\nDispatchClose() as opposed to when the open info count drops to 0. This\nmeans that the client has to implement its own ref-counting for the opaque\nuser context pointer stored in the DOKAN_FILE_INFO. Without changing this I\nalso get a use-after-free in my client code in case of timeout. I will send\nyou a separate pull request addressing that.\nShould we delete this pull request?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/dokan-dev/dokany/pull/440#issuecomment-283770146, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/ADHSOHn7dgDqqPWHCuDJMC6e3dLJcHqyks5rhyYpgaJpZM4L80Ml\n.\n. We need an idea how this can happen.\nMaybe this is the case:\nDriver has multiple requests for a specific file. Those requests have been\nforwarded to usermode and the os got the response STATUS_PENDING. So and\nnow at some point the dokan driver decides that some of this requests are\ntimed out and those requests are canceled. Usermode has no idea about it.\nThe os decides now to close the handle of the file and dokan driver\nforwards this request to usemode. So there may now be multiple threads\nrunning at the same time in usermode using exactly the same context. The\nDispatchClose will free the Context which may be used by other threads.\nThis causes the problem.\nThis may be the reason why the usermode reference count has been\nintroduced. Create should set it to 1 and when completed not decrease it.\nAll other Dispatch operations should increase it by 1 when dispatched and\ndecrease it by 1when completed. The DispatchClose should just decrease it\nby 1 (no increase). When the counter reaches 0 then the context should be\nfreed. The free may happen in any dispatch operation. DispatchClose can\noccur before other operations are completed. Following this approach all\nshould work fine. The drawback is that there is a usermode reference count.\nThe name of the property should be ContextReferenceCount.\nMaybe even your previous issue should be gone and no extra check for\ninvalid context is needed because the issue can happen in any operation.\nThis problem can't be solved inside of the driver. Drive has no idea what\nUsermode is doing.\nThis is actually just an assumption why ReferenceCount exists and your\noriginal problem can occur in any operation. This assumption has now to be\nconfirmed.\nThx Marinko\nAm 02.03.2017 21:48 schrieb \"pliard-chromium\" notifications@github.com:\n\n@marinkobabic https://github.com/marinkobabic I will try to reproduce\nthis with the Dokan mirror by adding a sleep() in the\nDispatchDirectoryInformation callback. As I said above the issue happens\nwhen an operation times out.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/dokan-dev/dokany/pull/440#issuecomment-283775319, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/ADHSONfWcaSk4uVISBIXaoLEL46RXm8nks5rhysFgaJpZM4L80Ml\n.\n. It doesn't feel correct. The code can be improved anyway. DOKAN_OPEN_INFO\ncan get a new flag IsClosed. This flag would be set if the driver has\ncalled the DispatchClose. In SendEventInformation this flag can be checked\nand if set the DeviceIoControl should not be called. This way the usermode\nis aware about the actual state of the file inside of the driver.\n\nYou remember the SendWriteRequest? Also there the flag should be checked\nand this way we can prevent unnecessary call to the driver. LastError can\nbe set to ERROR_OPERATION_ABORTED\nThis way the code would be clean and we would have the full transparency.\n. You have been able to remove the dlls but just the sys file not? Because\nthe sys file is registered as Filesystem driver the service is started\nduring the boot process. The driver service must be stopped before the file\ncan be removed.\nManually steps are to remove the service dokan1 from registry and reboot\nthe machine. After reboot the sys file can be replaced.\nHope this information helps.\nThanks\nMarinko\n. Maybe just the mirror process is running out of memory. Are there any\nentries in Windows Event Log?\n. @yin19941005 \nPlease add more log in DokanEventWrite https://github.com/dokan-dev/dokany/blob/master/sys/event.c#L719. For some reason the driver returns 0. This means that the  variable info is not set to the proper size https://github.com/dokan-dev/dokany/blob/master/sys/event.c#L764 \nPlease add also more log entries after this line here https://github.com/dokan-dev/dokany/blob/master/dokan/write.c#L79 so that we know if the line SendEventInformation has been done properly and which line exactly caused the crash.\nMore log information should give us generally more details if the Irp has been found and if the found irp has been cancelled already and which line in mirror caused the crash of the application.. From my point of view the EventContext is destroyed here\nhttps://github.com/yin19941005/dokany/blob/cancel-crash-more-log/dokan/write.c#L80\nYou can try to log some information of the EventContext to be sure that I'm\nright. The usermode wants the driver to increase the buffer. The driver\nfails for some reason. It seems like the driver destroyed the buffer. Do\nyou have this issue when running with just one thread? It's much simpler to\ninvestigate the log. Pass /t 1 to morror.exe\nThx Marinko\nAm 16.02.2017 09:28 schrieb \"yin19941005\" notifications@github.com:\n\nHi @marinkobabic https://github.com/marinkobabic ,\nI had created a new branch cancel-crash-more-log\nhttps://github.com/yin19941005/dokany/tree/cancel-crash-more-log on my\nfork and adding the more log by this commit\nhttps://github.com/yin19941005/dokany/commit/dd9d70c5fdae89ebe604f199ae95216b7ea9b89f\n.\nMirror Debug Log :\nSendWriteRequest\nSendWriteRequest : status = 1, EventLength = 48, BufferLength = 65798, returnedLength = 65798\nSendWriteRequest got 65798 bytes\nSendWriteRequest : status = 1, EventLength = 48, BufferLength = 65798, returnedLength = 65798\nWriteFile 0053\nSendWriteRequest got 65798 bytes\n  WriteFile : Just Before Call to DokanInstance->DokanOperations->WriteFile Function.\nWriteFile 0053\nWriteFile : E:\\mirror_test04\\CentOS-7-x86_64-DVD-1511.iso, offset 1198391296, length 65536\n  WriteFile : Just Before Call to DokanInstance->DokanOperations->WriteFile Function.\nWriteFile : E:\\mirror_test04\\CentOS-7-x86_64-DVD-1511.iso, offset 1198456832, length 65536\n  write 65536, offset 1198391296\nWriteFile : Just After Call to DokanInstance->DokanOperations->WriteFile Function.\n  write 65536, offset 1198456832\nWriteFile : eventInfo->BufferLength = 65536\n  WriteFile : Just After Call to DokanInstance->DokanOperations->WriteFile Function.\n  WriteFile : eventInfo->Operation.Write.CurrentByteOffset.QuadPart = 1198456832\n  WriteFile : eventInfo->BufferLength = 65536\n  WriteFile : Just Before Calling SendEventInformation.\n  WriteFile : eventInfo->Operation.Write.CurrentByteOffset.QuadPart = 1198522368\n  WriteFile : Just Before Calling SendEventInformation.\n  WriteFile : Just After Calling SendEventInformation.\n  WriteFile : Just After Calling free(eventInfo).\n  WriteFile : Just After Calling SendEventInformation.\n  WriteFile : Just Before Calling free(EventContext)..\n  WriteFile : Just After Calling free(eventInfo).\n  WriteFile : Just After Calling free(EventContext).\n  WriteFile : Just Before Calling free(EventContext)..\n  WriteFile : Just After Calling free(EventContext).\nSendWriteRequest\nSendWriteRequest\nSendWriteRequest : status = 1, EventLength = 48, BufferLength = 65798, returnedLength = 0\nreturnedLength == 0, After SendWriteRequest LastError : 0\nSendWriteRequest got 0 bytes\nWriteFile 0053\nWriteFile : Just Before Call to DokanInstance->DokanOperations->WriteFile Function.\nSendWriteRequest : status = 1, EventLength = 48, BufferLength = 65798, returnedLength = 0\nreturnedLength == 0, After SendWriteRequest LastError : 0\nSendWriteRequest got 0 bytes\nWriteFile 0053\nWriteFile : Just Before Call to DokanInstance->DokanOperations->WriteFile Function.\nThe log stop at this line : https://github.com/yin19941005/dokany/blob/\ncancel-crash-more-log/dokan/write.c#L89\nIt seems the mirror crashed after redirecting the write process to the\nMirrorWriteFile. Furthermore, I checked the error code from the error log\nin the Windows Event Viewer. The error code 0xc0000409 is stand for\nSTATUS_STACK_BUFFER_OVERRUN. It seems the reason of crash is because the\nWrite Operation is using the invalid buffer (since it is 0 and should be no\nbuffer at all) to perform the write operation.\nBy my understanding, the WriteFile (https://github.com/dokan-dev/\ndokany/blob/master/samples/dokan_mirror/mirror.c#L593) called in the\nMirrorWriteFile is calling actual Write Function. However, I am not sure\nwhere did it redirecting to. I don't think any checking is performed in\nmirror before pass the buffer to that function. Maybe that function is\nassuming the input buffer is valid so it got crashed.\nBesides, I had also added the log to print out the\nIrp->IoStatus.Information value before it return on this line :\nhttps://github.com/yin19941005/dokany/blob/cancel-crash-more-log/sys/\nevent.c#L821. However, I couldn't find any Irp->IoStatus.Information = 0\nentry in the recorded kernel log. (You can check with the log file I\nattached below). It's quite strange. I further check is there any null\nvalue would be handled by continue for loop and skip to assign the\nvalue to it, but I even couldn't found any entry for it.\nI am not pretty sure about the flow of the process please correct me if my\nunderstanding below is incorrect :\n\nthe user input will captured by the DokanLoop\n   https://github.com/dokan-dev/dokany/blob/de4e1408c498b069ada734d0ca9b5c2de501d14d/dokan/dokan.c#L343\n   and call DispatchWrite\n   https://github.com/dokan-dev/dokany/blob/de4e1408c498b069ada734d0ca9b5c2de501d14d/dokan/write.c#L49\n   in this case\nDispatchWrite\n   https://github.com/dokan-dev/dokany/blob/de4e1408c498b069ada734d0ca9b5c2de501d14d/dokan/write.c#L49\n   will call SendWriteRequest\n   https://github.com/dokan-dev/dokany/blob/de4e1408c498b069ada734d0ca9b5c2de501d14d/dokan/write.c#L24\n   and pass the data to DokanDispatchDeviceControl\n   https://github.com/dokan-dev/dokany/blob/de4e1408c498b069ada734d0ca9b5c2de501d14d/sys/device.c#L887\n   by calling the DeviceIoControl function\n   https://github.com/dokan-dev/dokany/blob/de4e1408c498b069ada734d0ca9b5c2de501d14d/dokan/write.c#L31\n   (the data will somehow transfer to IRP)\nDokanDispatchDeviceControl\n   https://github.com/dokan-dev/dokany/blob/de4e1408c498b069ada734d0ca9b5c2de501d14d/sys/device.c#L970\n   will call DokanEventWrite\n   https://github.com/dokan-dev/dokany/blob/de4e1408c498b069ada734d0ca9b5c2de501d14d/sys/event.c#L673\n   and start to return to the DispatchWrite\n   https://github.com/dokan-dev/dokany/blob/de4e1408c498b069ada734d0ca9b5c2de501d14d/dokan/write.c#L73\n   by the flow described above and continue to run.\nThe DispatchWrite\n   https://github.com/dokan-dev/dokany/blob/de4e1408c498b069ada734d0ca9b5c2de501d14d/dokan/write.c#L82\n   call to MirrorWriteFile\n   https://github.com/dokan-dev/dokany/blob/de4e1408c498b069ada734d0ca9b5c2de501d14d/samples/dokan_mirror/mirror.c#L504\n   then the mirror had crashed. (need more log to confirm the reason)\n\nI would add more log to check why calling the MirrorWriteFile will cause\nthe crash.\nThe full mirror log with more Dbgprint:\ncopyError_Mirrortest004.zip\nhttps://github.com/dokan-dev/dokany/files/779443/copyError_Mirrortest004.zip\nThe full kernel log with more Dbgprint:\ncopyError_Mirrortest004_kernel.zip\nhttps://github.com/dokan-dev/dokany/files/779444/copyError_Mirrortest004_kernel.zip\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/447#issuecomment-280265396,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ADHSOCCY50zGkklhRdNi3SVB_qT6e2TVks5rdAikgaJpZM4MBSNl\n.\n. Normally the code execution should go here out https://github.com/yin19941005/dokany/blob/cancel-crash-more-log/sys/event.c#L824 Do you agree so far?\n\nIf it does not go there are so please remove the logs below and add a special log which says that the Irp was not found and this should never happen. Run the mirror with one thread and please attach the mirror and kernel log here.. If the returned length is 0 the mirror dokan can just return without to\ncall the mirror callback method. This would be a possible way to fix the\ncrash.\nThe problem is to understand how it's possible that 0 is returned. Actually\nthe log seems not to be complete. There are more ==> DokanEventWrite than\nEventWrite: CopyMemory What I do in such a case is to create DbgPrint2\nwhich does create the log entry when debugging is enabled. In normal\nDbgPrint I disable the create log creation. This way I just log the things\nI'm interested in. In our case this is DokanEventWrite only.\nAm 17.02.2017 09:32 schrieb \"yin19941005\" notifications@github.com:\n\nI had added more log message on this commit\nhttps://github.com/yin19941005/dokany/commit/c5711df52a3cea3adb5a00bb3fc19e1c1f33c7a7\nand I think I figured out where did the mirror crashed.\nMirror Log:\nSendWriteRequest\nSendWriteRequest : status = 1, EventLength = 48, BufferLength = 65798, returnedLength = 0\nreturnedLength == 0, After SendWriteRequest LastError : 0\nSendWriteRequest got 0 bytes\n  WriteFile : EventContext->SerialNumber = 3452816845\n  WriteFile : EventContext->Operation.Write.RequestLength = 3452816845\n  WriteFile : EventContext = 1766383216\n  WriteFile : EventContext + EventContext->Operation.Write.BufferOffset = 2517775068221\nWriteFile 0043\nWriteFile : Just Before Call to DokanInstance->DokanOperations->WriteFile Function.\nMirrorWriteFile : First Line execute!!\nMirrorWriteFile : Before call GetFilePath.\nSo, I believe the crash is happen in the GetFilePath in Mirror\nhttps://github.com/yin19941005/dokany/blob/cancel-crash-more-log/samples/dokan_mirror/mirror.c#L71.\nSince the EventContext is destroyed on here\nhttps://github.com/yin19941005/dokany/blob/cancel-crash-more-log/dokan/write.c#L83,\nby the debug build, the 3452816845 (0xCDCDCDCD) will be used for the\nuninitialized heap memory. And this value would cause the Buffer Overrun\nCrash in the GetFilePath function (in Mirror).\nI don't think this would be a problem on the mirror because the root cause\nshould on the driver part and get the EventContext mis-destroyed to cause\nthis error. I think the DispatchWrite\nhttps://github.com/yin19941005/dokany/blob/cancel-crash-more-log/dokan/write.c#L56\nshould log some message if the returnedLength being 0 or EventContext\ngot destoryed.\nFor the DeviceIoControl function, by the MSDN\nhttps://msdn.microsoft.com/en-us/library/windows/desktop/aa363216%28v=vs.85%29.aspx?f=255&MSPPError=-2147217396\n,\nlpBytesReturned [out, optional]\nA pointer to a variable that receives the size of the data stored in the\noutput buffer, in bytes.\nIf the output buffer is too small to receive any data, the call fails,\nGetLastError returns ERROR_INSUFFICIENT_BUFFER, and lpBytesReturned is zero.\nIf the output buffer is too small to hold all of the data but can hold\nsome entries, some drivers will return as much data as fits. In this case,\nthe call fails, GetLastError returns ERROR_MORE_DATA, and lpBytesReturned\nindicates the amount of data received. Your application should call\nDeviceIoControl again with the same operation, specifying a new starting\npoint.\nI think currently the dokan didn't set any error to the last error on this\ncase and didn't handle the case for the ERROR_MORE_DATA to handle the output\nbuffer too small case described on the MSDN. I think these may also\npotential problem on the dokan part but I am not sure are they related to\nthis case or not.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/447#issuecomment-280587353,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ADHSODVvy8eozfN_lH9BqPgibJkWesxuks5rdVsRgaJpZM4MBSNl\n.\n. You can remove all the log except EventWrite : Cannot found corresponding\nIRP. This should never happen!!\n\nMaybe additionally also log the returned length in field info.\nThen in the dokan usermode dll check for length 0. If it's 0 you can do a\nspecial output and request the user to hit enter to go on. This way it\nwould not crash while creating the log.\nAm 20.02.2017 09:44 schrieb \"yin19941005\" notifications@github.com:\n\nI had changed the DDbgPrint in the dokan.sys by this commit\nhttps://github.com/yin19941005/dokany/commit/959b5bc0688ffc4bcf98f4f6c1dc3bb97d1909f3\nto simplify the log message.\nI got no idea why the ==> DokanEventWrite mismatch the number of EventWrite\nCopyMemory while there are no EventWrite: STATUS_INSUFFICIENT_RESOURCE, EventWrite\n: IoSetCancelRoutine(writeIrp, DokanIrpCancelRoutine) == NULL, EventWrite\n: writeIrp == NULL and EventWrite : return STATUS_INVALID_PARAMETER is\nreturned or printed in the log.\nI had followed the instruction on here\nhttps://github.com/dokan-dev/dokany/wiki/How-to-Debug-Dokan and use the\nDbgView to capture the kernel debug message. It seems works fine and the\nkernel debug message should be completely captured.\nAnyway, I found some meaningful log after I simplified the log message.\n00935528  201.40585327    [DokanFS] SerialNumber irpEntry 330CB eventInfo 32D6F \n00935529  201.40586853    [DokanFS] SerialNumber irpEntry 330CD eventInfo 32D6F \n00935530  201.40586853    [DokanFS] SerialNumber irpEntry 330CF eventInfo 32D6F \n00935531  201.40586853    [DokanFS] SerialNumber irpEntry 330D1 eventInfo 32D6F \n00935532  201.40586853    [DokanFS] SerialNumber irpEntry 330D3 eventInfo 32D6F \n00935533  201.40586853    [DokanFS] SerialNumber irpEntry 330D5 eventInfo 32D6F \n00935534  201.40586853    [DokanFS] SerialNumber irpEntry 330D7 eventInfo 32D6F \n00935535  201.40592957    [DokanFS]   EventWrite : Cannot found corresponding IRP. This should never happen!! \nSometime, I would reach the abnormal case : Cannot found corresponding IRP\nat the last few rows log when the mirror got crashed. Maybe this is just\nbecause the mirror got crashed and it already clean-up to cause this output\nbut this shows this part is working fine and the dokan should able to find\ncorresponding IRP for other cases.\nThe kernel log files:\nsimplified_kernel_log.zip\nhttps://github.com/dokan-dev/dokany/files/786926/simplified_kernel_log.zip\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/447#issuecomment-281019172,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ADHSOAOdl50bVkd_bOo_YELmKo9IFcs4ks5reVJsgaJpZM4MBSNl\n.\n. Correct. You can use your pull request so that mirror does not crash. In\nthe driver just log the returned length and the special case which should\nnever occur.\n\nAm 21.02.2017 04:01 schrieb \"yin19941005\" notifications@github.com:\n\nMaybe additionally also log the returned length in field info.\nSorry, I didn't get which field info you are talking about. It's is in the\nsys project? Or in the usermode dll?\nThen in the dokan usermode dll check for length 0. If it's 0 you can do a\nspecial output and request the user to hit enter to go on. This way it\nwould not crash while creating the log.\nDo you mean I should hotfix the issue to let the mirror at least would not\ncrash and make the log complete in order to study the complete log entry? I\nwould try to modify it similar with this commit\nhttps://github.com/dokan-dev/dokany/pull/452/commits/ecbc6e22517f54f8e746363ca9e8ceb44d5e8aa7\nin order to provide the complete log.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/447#issuecomment-281232271,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ADHSOIG1geMg11BOSKufN780CdYtfYTEks5relOUgaJpZM4MBSNl\n.\n. So now you can make the correct pull request. Please do the changes you\nsuggest here and make a new pull request. Good job and well found! :-)\n\nAm 21.02.2017 11:03 schrieb \"yin19941005\" notifications@github.com:\n\nI had deleted most of the previously added log message and printing the\nSerialNumber for the EventContext to help for debug by this commit\nhttps://github.com/yin19941005/dokany/commit/56b63bba33423d235358076a03b9c538eea6bf3d.\nThe result become quite obvious after the complete log can be print out.\nThe mirror log :\nWriteFile : Before call SendWriteRequest, contextLength = 65794 (contextLength = EventContext->Operation.Write.RequestLength)\nSendWriteRequest\nSendWriteRequest : status = 1, EventLength = 48, BufferLength = 65794, returnedLength = 65794 , EventInfo->SerialNumber = 3852C\nSendWriteRequest got 65794 bytes\n  WriteFile : EventContext->SerialNumber = 3852C\n  WriteFile : EventContext->Operation.Write.RequestLength = 0\n  WriteFile : EventContext = 1916530224\n  WriteFile : EventContext + EventContext->Operation.Write.BufferOffset = 1642594037444\nWriteFile 0073\nWriteFile : E:\\mirror_test20\\Win10_1607_English_x32.iso, offset 199163904, length 65536\n  write 65536, offset 199163904\n  WriteFile : eventInfo->BufferLength = 65536\n  WriteFile : eventInfo->Operation.Write.CurrentByteOffset.QuadPart = 199229440\nWriteFile : Before call SendWriteRequest, contextLength = 65798 (contextLength = EventContext->Operation.Write.RequestLength)\nSendWriteRequest\nSendWriteRequest : status = 1, EventLength = 48, BufferLength = 65798, returnedLength = 0 , EventInfo->SerialNumber = 3852E\nreturnedLength == 0, After SendWriteRequest LastError : 0\nSendWriteRequest got 0 bytes\n  WriteFile : EventContext->SerialNumber = CDCDCDCD\n  WriteFile : EventContext->Operation.Write.RequestLength = 3452816845\n  WriteFile : EventContext = 1916530224\n  WriteFile : EventContext + EventContext->Operation.Write.BufferOffset = 1646046854141\nWriteFile 0060\nUnknown SendWriteRequest error : return 0 length when request bigger memory.\nUnknown SendWriteRequest error : EventContext had been destoryed. Return STATUS_ACCESS_DENIED.\nWriteFile : Before call SendWriteRequest, contextLength = 65798 (contextLength = EventContext->Operation.Write.RequestLength)\nSendWriteRequest\nSendWriteRequest : status = 1, EventLength = 48, BufferLength = 65798, returnedLength = 0 , EventInfo->SerialNumber = 38530\nreturnedLength == 0, After SendWriteRequest LastError : 0\nSendWriteRequest got 0 bytes\n  WriteFile : EventContext->SerialNumber = CDCDCDCD\n  WriteFile : EventContext->Operation.Write.RequestLength = 3452816845\n  WriteFile : EventContext = 1916530224\n  WriteFile : EventContext + EventContext->Operation.Write.BufferOffset = 1646046854141\nWriteFile 0060\nUnknown SendWriteRequest error : return 0 length when request bigger memory.\nUnknown SendWriteRequest error : EventContext had been destoryed. Return STATUS_ACCESS_DENIED.\nThe corresponding kernel log :\n00230130  202.38635254    [DokanFS] ==> DokanEventWrite [EventInfo #3852C]  \n00230131  202.38636780    [DokanFS]   EventWrite : Irp->IoStatus.Information = 65794 (after Irp->IoStatus.Information = info) \n00230132  202.38662720    [DokanFS] ==> DokanEventWrite [EventInfo #3852E]  \n00230133  202.38665771    [DokanFS]   EventWrite : Cannot found corresponding IRP. This should never happen!! \n00230134  202.38693237    [DokanFS] ==> DokanEventWrite [EventInfo #38530]  \n00230135  202.38693237    [DokanFS]   EventWrite : Cannot found corresponding IRP. This should never happen!! \nThe full mirror log :\ncopyError_Mirrortest020.zip\nhttps://github.com/dokan-dev/dokany/files/789723/copyError_Mirrortest020.zip\nThe full kernel log:\ncopyError_Mirrortest020_kernel.zip\nhttps://github.com/dokan-dev/dokany/files/789726/copyError_Mirrortest020_kernel.zip\nThe Inout IRP haven't being modified if the corresponding IRP is not\nfound. The output IRP will keep the state unchanged after the malloc\ncalled on this line\nhttps://github.com/yin19941005/dokany/blob/cancel-crash-more-log/dokan/write.c#L78.\n(So, by the debug build the value of SerialNumber will become CDCDCDCD) The\nproblem is the driver could not find any corresponding IRP but it keeps\nreturning STATUS_SUCCESS : https://github.com/yin19941005/dokany/blob/\ncancel-crash-more-log/sys/event.c#L790\nIn my opinion on how to fix this issue, we should change the returning\nstatus to something like STATUS_CANCELLED (I guess the reason that\ncannot find the IRP is because I had cancel the copy operation.) and log\nthe event in the kernel log. The returned length should be set to\nzero (currently is just initialized but no value assign to the returned\nlength) and set the last error as ERROR_INSUFFICIENT_BUFFER (by MSDN\ndocument\nhttps://msdn.microsoft.com/en-us/library/windows/desktop/aa363216(v=vs.85).aspx\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/447#issuecomment-281298415,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ADHSOJ1kzHXqmXVueilSr5lEKAGRnDjtks5rerZxgaJpZM4MBSNl\n.\n. @Liryna That would make sense. I flushed all of them just because it was simpler to implement. . @Liryna \nHere you have the refactored code. Please do a carefully review of the code https://github.com/dokan-dev/dokany/pull/462. Is SectionObjectPointers a pointer or a struct? Can it be null? If it can\nbe null so we should check it. Have no access to my machine. I'm on\nvacation for a week:-)\n\nAm 28.02.2017 12:57 schrieb \"Liryna\" notifications@github.com:\n\nShould we not also check if fcb->SectionObjectPointers is null in\nFlushFcb ?\nThis seems to be good \ud83d\udc4d for me\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/dokan-dev/dokany/pull/462#issuecomment-283020478, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/ADHSODAvnapuFPGOPiSEyE3lQ3P79nPtks5rhAuPgaJpZM4MLa0E\n.\n. The reason for unmount is the timeout. There are few IOCTL_KEEPALIVE but\naround 19 and unmount happened around 39. So why did the driver not receive\nmore IOCTL_KEEPALIVE?\n\nAm 27.02.2017 18:19 schrieb \"Sam Kelly\" notifications@github.com:\n\n@Rondom https://github.com/Rondom thanks to your tip I was able to\nenable logging within fuse-bindings. Here is my latest kernel log (very\nvery long) plus the user-space log from the app:\nuser-space log: https://storage.googleapis.com/durosoft-shared/userspace.\nlog\nkernel log: https://storage.googleapis.com/durosoft-shared/kernel.log\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/465#issuecomment-282786885,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ADHSOBkMrGH_fwC9E91wXE_eeB5Kc3sDks5rgwWEgaJpZM4MMmvX\n.\n. In the kernel log you have the time in the second column. I'm talking about\nthis time. The keep alive threads are started inside of the usermode\ndokan1.dll So there is no need to handle any callback for keeping the\napplication alive. The idea of the started threads is to let the kernel\nknow that the application is still running. If the application terminates\nunexpectedly then the driver will unmount the device, which happens in your\ncase. So the question is, are the threads still running and doing any\nrequests to the driver? Maybe those requests are somehow blocked?\n\nIn your case the drive is mounted properly but for some reason the timeout\nis reached and the device is unmonted automatically. You can find in the\nkernel log \"Timeout, umount\" which starts the unmount.\nAm 27.02.2017 21:11 schrieb \"Sam Kelly\" notifications@github.com:\n\n@marinkobabic https://github.com/marinkobabic Is there perhaps a\nrequired callback that isn't being handled by\nhttps://github.com/mafintosh/fuse-bindings/blob/master/example.js ?\nWhen you say \"around 19\" and \"around 39\" are these line numbers? Not sure\nwhat you are referring to\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/465#issuecomment-282838054,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ADHSOPNMZsvJhOcYLHoV5Qx0IdQZFGi2ks5rgy3TgaJpZM4MMmvX\n.\n. @samkelly So please add the thread id to your log ouput and as suggested by Rondom the fuse_get_context before, during and after method call.. So if you run dokan with just one thread then all works fine? \n\nDriver have always multiple threads. You said that fuse-bindings use static variable and not thread variable to store the context?. Please set the\nhttps://github.com/dokan-dev/dokany/blob/bd31f0f756300ed2b35ab8a75779348b6bb33da4/dokan_fuse/include/dokanfuse.h#L6\nto 1 and try to run the example. Just to be sure that it then works fine.\nAm 05.03.2017 18:29 schrieb \"Sam Kelly\" notifications@github.com:\n\n@mafintosh https://github.com/mafintosh if you could read through some\nof this it would be greatly appreciated -- I think it will be much easier\nfor you to find out exactly what is wrong. Specifically, I am very confused\nabout how fuse-bindings keeps track of the fuse context when commands come\nin on multiple threads\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/465#issuecomment-284245306,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ADHSOOOPagOkQYRN3oA_Fclw7_5EMmWmks5rivDsgaJpZM4MMmvX\n.\n. @Rondom you are absolutely right.\n@samkelly Please can you add a log entry here https://github.com/dokan-dev/dokany/blob/master/dokan_fuse/src/fusemain.cpp#L54 and here and after this line here https://github.com/dokan-dev/dokany/blob/master/dokan_fuse/src/fusemain.cpp#L60 \n\nThe log should show the thread id and if the cur_impl_chain_link is NULL or not. In theory it should not be possible that it is null. The reason is that every Fuse...Callback calls https://github.com/dokan-dev/dokany/blob/master/dokan_fuse/src/dokanfuse.cpp#L44 impl_chain_guard guard(impl, DokanFileInfo->ProcessId); which sets the context. The question is if the cur_impl_chain_link is NULL or the &cur_impl_chain_link->call_ctx_\nThe log should give us more information.. The issue is fuse-bindings related. As you can see here https://github.com/mafintosh/fuse-bindings/blob/master/example.js#L14 the values are returned using Nan:Callback and libuv. This means that javascript function https://github.com/mafintosh/fuse-bindings/blob/master/example.js#L11 was invoked for example on thread A. The value of getattr is returned using the callback. The problem is that the callback itself is under specific circumstances executed on totally different thread than the original request. On this new thread is no context set and therefore we have a NullReference issue. To fix the issue the callback has to use the context of the original request.. Here you have more details. FindFiles is executed on thread 1. The context is set on thread 1 properly. The fuse-bindings OpCallback is called on another thread, let's say thread 2, which is fine so far. On this thread we have no context, which is in the normal case no problem. The problem is that in case of the OP_READDIR bindings_set_dirs is executed. This method calls the b->filler to fill the found data. The filler is the dokans impl_fuse_context::walk_directory. The walk_directory calls again wd->ctx->ops_.getattr which is the bindings_getattr method. This method tries to get the context on thread 2 which does not exist.. @samkelly As a workaround you could try to remember the last context inside of fuse-bindings. If context is null, you can return the last remembered context. No idea what side effects this would have. This may work because the fuse-bindings is singlethreaded and in your case you are not using multiple mount points. I would suggest to provide those information to fuse-bindings author and let him decide what the best option would be to fix this issue. From my point of view the actual implementation does not work using dokan.. From my point of view a new context is needed for filling the data of findfiles. Findfiles is still running while the data is filled in. After the data fill is completed the findfiles can be finished. So we have suddenly multithreaded environment and also multiple contexts. The question is did it work in generally with the actual version of dokany. The issue can always be reproduced, it doesn't just happen occasionally.. If fuse-bindings works properly for other filesystems and just for dokan\nnot, then it must be fixed inside of dokan fuse implementation.\nBack to your question, i think a new context must be created for filling\nthe found files. This should happen inside of the walk_directory . There we\ncan check if the context exists. If not one should be created. How to\naccomplish this? Here we can add a new function pointer parameter\nhttps://github.com/dokan-dev/dokany/blob/master/dokan_fuse/src/fusemain.cpp#L320\nwhich can be set on walk_data as a new field. Then inside of the\nwalk_directory check if fuse_get_context returns an existing context. If\nnot the new functional pointer will be called. The code behind the pointer\nwill execute impl_chain_guard guard(impl, DokanFileInfo->ProcessId);\n. @samkelly Have done the implementation but fuse-bindings causes now a deadlock. Bindings_dispatch is running and we are doing another request so the whole stuff hangs. The reason is that we are OnCallback is always running in the bindings_dispatch thread. So we are blocking now the bindings_dispatch thread from going on and processing new requests. Need to keep thinking how to avoid this problem.. @samkelly \nhttps://github.com/marinkobabic/fuse-bindings/tree/DokanyFindFilesFix\nhttps://github.com/marinkobabic/dokany/tree/ContextFix\nPlease try the changes above. The implementation is not complete, but gives you an idea how the issue may be fixed.\nHere the array of directories should be passed, maybe you want to implement this and do a pull request to my fork?\nhttps://github.com/marinkobabic/fuse-bindings/blob/DokanyFindFilesFix/fuse-bindings.cc#L833\nIf there are any questions, just ask. Otherwise let me know if it looks better to you?. @samkelly \nFor the free space just add the following callback to your java script\nstatfs: function (path, cb) {\n      console.log('statfs(%s)', path)\n      cb(0, {\n        bsize: 1000000,\n        frsize: 1000000,\n        blocks: 1000000,\n        bfree: 1000000,\n        bavail: 1000000,\n        files: 1000000,\n        ffree: 1000000,\n        favail: 1000000,\n        fsid: 1000000,\n        flag: 1000000,\n        namemax: 1000000\n      })\n  }. Have now made all pull requests so that your example works properly https://github.com/mafintosh/fuse-bindings/pull/51. I had to provide a fix in Dokan which solved the problem with context. But\nthen I had the deadlock inside of fuse. The deadlock was caused because of\none dispatcher thread which can't handle more than one request at the same\ntime. So I decided to execute the filler callback in different thread so\nthat the dispatcher thread can handle the callbacks caused by\nwalk_directory.\nMore background information. The fuse context private data exists only once\nand this is used inside of fuse bindings for callbacks binding data. Every\nrequest overwrites this data. This is the reason I remember the pointers\ninside dokan before doing any following request.\nThe conclusion is that actual design of fuse-bindings is not meant to\nsupport multithreaded environment. Both fixes (dokan and fuse) are required\nto get it work.\nAm 12.03.2017 23:32 schrieb \"Andreas Gnau\" notifications@github.com:\n\n@Liryna https://github.com/Liryna not sure if my explanation was\ncorrect, because some fixes were necessary inside the fuse-bindings as well.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/465#issuecomment-285982634,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ADHSOBrnRBnJ2thuZsln7GoRb3DWf7Lwks5rlHJwgaJpZM4MMmvX\n.\n. @samkelly\nLiryna explained it very well. I think there is a way to support\nmultithreaded environment but this requires some changes inside of\nfuse-bindings. Fuse context would then maintain a list of requests which\nshould be processed. The callback has to reference one if the items inside\nof the list and complete the specific request. I don't think the origin\ncreator is going to implement this in the near future.\n\nAm 13.03.2017 16:58 schrieb \"Liryna\" notifications@github.com:\n\n@samkelly https://github.com/samkelly\nLittle poke about Then people can choose which implementation to use\nbased solely on performance Both Dokan and Winfsp are very fast and can\nboth create 5000 files in secondes but it is offen the wrapper or the user\nimplementation (specially if files are not local or in memory) that will be\nthe bottleneck. You will never be able to reach this speed if fuse-bindings\nis single thread.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/465#issuecomment-286152166,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ADHSOJbZ2lbA5_BpiPZwuH2LRk7ZWBXVks5rlWeTgaJpZM4MMmvX\n.\n. From my point of view it's fixed. There is pull request pending for\nfuse-bindings.\n\nAm 22.03.2017 12:20 schrieb \"Daniel Krom\" notifications@github.com:\nHey everybody, is this issue already fixed? (Or close to be fixed)?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/465#issuecomment-288369279,\nor mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/ADHSOISt2IOVOYYDxld4GtuOU1rUsLSrks5roQP6gaJpZM4MMmvX\n.\n. Did you compare your code with mirror. What is the difference? You need to\nprovide some code here if you need some assistance. You are absolutely sure\nthat it is this callback causing the issue?\nAm 03.03.2017 18:10 schrieb \"kubinator\" notifications@github.com:\n\nThank you, Rondom\nYes, I am returning NTSTATUS errors. I've read this wiki page and it\nreally helped to solve compillation level problems. But it does not help\nwith new runtime errors though((\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/470#issuecomment-284012183,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ADHSOKYxnWYYL4RQTU547FN8Lf3eGb2pks5riEl0gaJpZM4MSegt\n.\n. Please use the version 1.0.3 for your tests. You should not be able to reproduce the BSOD with the actual version.. Here the details about the issue\n\nUNEXPECTED_KERNEL_MODE_TRAP (7f)\ndokan1!DiskDeviceControl+0x9c4 [e:\\islog\\dev\\app\\dokan\\dokany\\sys\\device.c @ 290]\nSTACK_COMMAND:  kb\nCHKIMG_EXTENSION: !chkimg -lo 50 -d !nt\n    fffff800e5ac9387-fffff800e5ac9389  3 bytes - nt!ExFreePoolWithTag+387\n    [ 40 fb f6:00 64 c8 ]\n3 errors : !nt (fffff800e5ac9387-fffff800e5ac9389)\nMODULE_NAME: memory_corruption\nIMAGE_NAME:  memory_corruption\nFOLLOWUP_NAME:  memory_corruption\nDEBUG_FLR_IMAGE_TIMESTAMP:  0\nMEMORY_CORRUPTOR:  LARGE\nFAILURE_BUCKET_ID:  MEMORY_CORRUPTION_LARGE\nBUCKET_ID:  MEMORY_CORRUPTION_LARGE\nANALYSIS_SOURCE:  KM\nFAILURE_ID_HASH_STRING:  km:memory_corruption_large\nFAILURE_ID_HASH:  {e29154ac-69a4-0eb8-172a-a860f73c0a3c}\nThis output does not really help. Tried to reproduce your issue on Windows 10 x86 but I had no BSOD. You can reproduce it on x86?. No way to reproduce the BSOD on a fresh installed Windows 10 x64 Enterprise 1607. Please upload your momory.dmp. You are using 1.0.3?\nAm 31.03.2017 17:25 schrieb \"blesliecan\" notifications@github.com:\n\nFor what it is worth I also ran mirror in single thread mode with the same\neffect: BSoD.\nI used the /d /s and did a redirect to a log but the log was trashed when\nthe system crashed.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/483#issuecomment-290743407,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ADHSOOIW-a3v3a_tvoohs2a8IEI41nsZks5rrRrQgaJpZM4Mn96C\n.\n. There should be a mini memory dump which is not that big. Another option is\nprovide the stacktrace like documented here\nhttps://msdn.microsoft.com/en-us/library/windows/hardware/ff538042(v=vs.85).aspx\nYou should ensure that you have set properly the symbol path.\n\nAm 31.03.2017 22:04 schrieb \"blesliecan\" notifications@github.com:\n\nYes I am using 1.0.3.\nDo you really want me to upload a 1G memory dump?\nI am also not sure I want to place a memory dump from my machine in a\npublic forum.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/483#issuecomment-290816003,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ADHSOPGWeiQFFFYD1hDpclM5EZ7dmyqmks5rrVxPgaJpZM4Mn96C\n.\n. I changed once to keep the handle opened. The driver can't remove the\ndevice because of the opened handle. Causes blue screens in specific\nscenarios.\n\nThis way we have much better control.\nTo improve performance the branch with thread pool should be completed.\nAm 05.05.2017 22:08 schrieb \"Liryna\" notifications@github.com:\n\nHi @bailey27 https://github.com/bailey27 ,\nThis come from PR #303 https://github.com/dokan-dev/dokany/pull/303 of\n@marinkobabic https://github.com/marinkobabic that fix the issue #230\nhttps://github.com/dokan-dev/dokany/issues/230\nMy guess would be that it was made to be sure to always have a valid\nhandle on the device.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/504#issuecomment-299563536,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ADHSOJCUCBGU3hRn_QFS-FvJUI6YhK8iks5r24GmgaJpZM4NSVGf\n.\n. The patch goes into the correct direction but it's not complete. Will try\nto make a pull request this week.\n\nAm 28.05.2017 13:01 schrieb \"Liryna\" notifications@github.com:\n\nHi @shashiu https://github.com/shashiu ,\nThank you for the patch and for taking the time to look into this issue !\nI think this is the correct way to fix the issue and this seems to not\nbreak kernel API.\nI will let @marinkobabic https://github.com/marinkobabic say the final\nword on this \ud83d\udc4d\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/517#issuecomment-304506870,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ADHSOCcLmAggktLHJJmH_n1Xn2DjwSePks5r-VP_gaJpZM4NhuTD\n.\n. The concept should be simple. If mounted globally we should not use a\nsessionid resp. we will set it null. In all other cases the session id will\nbe set. It solves the problem above partially. Only the sessions you have\nmounted you will be able to unmount. If it is mounted globally what should\nthen be the rule?\n\nAm 29.05.2017 19:59 schrieb \"Andreas Gnau\" notifications@github.com:\n\nWill this also help to implement #312\nhttps://github.com/dokan-dev/dokany/issues/312? Or is the sessionID\nspecific to RDP only and will be empty in other cases (Win32-OpenSSH,\nPowerShell-remoting, local login)?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/517#issuecomment-304708296,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ADHSOK8_Yc2PvRY3eO0-0d37G3Bgwutmks5r-wdtgaJpZM4NhuTD\n.\n. The Sessionid is always set from is point of view. One of the sessions is\nglobal and others not. So I decided to set it to null if it's global.\nSessionId helps to make the difference between session devices and global.\nAlso in case of remove.\n\nAm 29.05.2017 22:50 schrieb \"Andreas Gnau\" notifications@github.com:\nHmm, okay. One first needs to define what users should be allowed to do.\nShould non-admin users be allowed to unmount their own global mounts or\nonly their own-non-global mounts in the current session? Maybe allowing a\nuser to unmount their own mounts (no matter if global or not) is the sanest\nbehaviour. So, given that, I cannot see how the session ID helps if it is\nnot always set (and I guess the session might expire as well, if the user\nlogs out).\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/517#issuecomment-304728777,\nor mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/ADHSOLdQHB7tFphid1AV32m0fKuGLajKks5r-y-pgaJpZM4NhuTD\n.\n. This pull request https://github.com/dokan-dev/dokany/pull/523 should fix the original issue. I decided to not use the sessionid if the mount is used globally. No idea if the sessionid changes if all the users are logged out and do the login again.. So far I agree. What session id is used for global mount. This means\nwithout the current session flag? In this case I do not use the session id\nbecause the device is visible to all.\nAm 31.05.2017 16:39 schrieb \"Shashi Uli\" notifications@github.com:\n\nThe session id is only valid when a user is logged on or disconnected (not\nactively connected). If they log off, then the session ids get recycled for\nthe next active session.\n\nFrom: Marinko notifications@github.com\nSent: Tuesday, May 30, 2017 4:55:57 PM\nTo: dokan-dev/dokany\nCc: Shashi Uli; Mention\nSubject: Re: [dokan-dev/dokany] Mirror driver /c 'current session' option\ndoesn't appear to work in Terminal Services Session (#517)\nThis pull request #523https://github.com/dokan-dev/dokany/pull/523\nshould fix the original issue. I decided to not use the sessionid if the\nmount is used globally. No idea if the sessionid changes if all the users\nare logged out and do the login again.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHubhttps://github.com/\ndokan-dev/dokany/issues/517#issuecomment-305005532, or mute the thread<\nhttps://github.com/notifications/unsubscribe-auth/AFSdu8_\nQSSeIGHrjT3pApZgmNCo0I5f8ks5r_IJdgaJpZM4NhuTD>.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/517#issuecomment-305207315,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ADHSOLKHnUepVuS7xzSrdLrAkD_kQKAMks5r_XuRgaJpZM4NhuTD\n.\n. Normally winding displays why the pub is not used. It shows if the pub has\nbeen found and the reason of not using it.\n\nAm 26.05.2017 08:36 schrieb \"Liryna\" notifications@github.com:\n\nHi @Rondom https://github.com/rondom ,\nThank you trying to add IFSTest to appveyor \ud83d\udc4d\nShould probably change the build configuration to build as debug and not\nrelease \ud83d\ude22\n@marinkobabic https://github.com/marinkobabic any idea what release pdb\nis not used ?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/519#issuecomment-304204350,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ADHSODbpzgfeVWM8Y5tDMlLv2yXIr6eiks5r9nMAgaJpZM4NnKxo\n.\n. Can the issue be reproduced in a separate vm when running test ifstest.exe manually? If this is the case, then we can debug and investigate the source of the problem.. Yes. I habe the same issue. Normally I attach the kernel debugger so it's\nnot a huge problem.\n\nAm 02.07.2017 21:12 schrieb \"Liryna\" notifications@github.com:\n\n\ud83d\udc4d verifier enable make the bsod happen !\nLooks like the test that make crash is DirectoryFullPathCreationTest\n(just guessing since I seen FileFullPathCreationTest print before. But my\nvirtualbox do not let my windows create a dump for a reason \ud83d\ude22 it just\nfreeze. @marinkobabic https://github.com/marinkobabic are you using\nvirtualbox ? do you have the same issue ?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/519#issuecomment-312510984,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ADHSOBV5cwRD7gk5GpKsthsjjkW5ZPCZks5sJ-uRgaJpZM4NnKxo\n.\n. Yes. I have created a new one.\n\nAm 30.05.2017 23:10 schrieb \"Andreas Gnau\" notifications@github.com:\n\nDid you intentionally close this one?\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/dokan-dev/dokany/pull/523#issuecomment-305009172, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/ADHSOGrckl9fawzytj5anrqs8e_eEQJHks5r_IWlgaJpZM4Nq0Re\n.\n. User A should not be able to unmount the drive of the user B if both use\nthe current session option. The will have different windows sessions.\n\nAm 05.06.2017 13:42 schrieb \"Liryna\" notifications@github.com:\n\nHi @marinkobabic https://github.com/marinkobabic ,\nI tried to reproduce all the issues:\n517 https://github.com/dokan-dev/dokany/issues/517 : I could not test\nthis case exactly but it should work \ud83d\udc4d\n332 https://github.com/dokan-dev/dokany/issues/332 : Yes it works! the\ndrive letter can be reused ! The only strange behavior is that the device\nis still in the explorer and can be access but empty after killing the\nmirror.\n312 https://github.com/dokan-dev/dokany/issues/312 : User A can\ndismount user B drive. Maybe here we should detect in the kernel if the\nrequest comes from an admin or simple user and give only rights to admin to\ndismount all devices.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/dokan-dev/dokany/pull/523#issuecomment-306168162, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/ADHSOEKGOpnRC65FA0WcbO_pY76S_E_Cks5sA-mjgaJpZM4Nq0Re\n.\n. So please use the mount manager parameter for mirror\n\nAm 12.06.2017 09:08 schrieb \"noairman\" notifications@github.com:\n\nEnvironment\n\nWindows version: 10 or 7\nProcessor architecture: 64 bit\nDokany version: Release 1.0.3\nLibrary type (Dokany/FUSE): dokany\n\nCheck List\n\nI checked my issue doesn't exist yet\n   https://github.com/dokan-dev/dokany/issues?utf8=%E2%9C%93&q=is%3Aissue\nMy issue is valid with mirror default sample and not specific to my\n   user-mode driver implementation\nI can always reproduce the issue with the provided description below.\nI have updated Dokany to the latest version\n   https://github.com/dokan-dev/dokany/releases and have reboot my\n   computer after.\nI tested one of the last snapshot\n   https://github.com/dokan-dev/dokany/wiki/Build#user-snapshot from\n   appveyor CI\n\nDescription\nI add the mirror.exe path to a service(the HKLM\\SYSTEM\\CurrentControlSet\\Services\nregistry tree) with the follwing value:\nStartType=0x2 (SERVICE_AUTO_START)\nServiceType=0x00000010 (SERVICE_WIN32_OWN_PROCESS)\nBut with the dokan 0.6 sys,I did the same thing,there is no issue\nhttps://docs.microsoft.com/zh-cn/windows-hardware/drivers/\ninstall/inf-addservice-directive\n1.\nIn that case ,I start the service and I can't find the M: volume until i\nrefresh on the contextmenu or use the F5 key.And when I stop the service,\nunmounted it ,the M: volume is still there until refresh the window\nbut if we just run the mirror.exe in the cmd.exe,the window will show the\nM: volume by itself,and disappear by itself when stop the service.\nBut with the dokan 0.6 sys,I did the same thing,there is no issue\nIs there any thing about the application compatibility \u2013 Session 0\nIsolation\nhttps://blogs.technet.microsoft.com/askperf/2007/04/\n27/application-compatibility-session-0-isolation/\nWhat's more,I change the StartType to 0x0 (SERVICE_BOOT_START) or 0x1\n(SERVICE_SYSTEM_START)and ServerType to 0x00000020\n(SERVICE_WIN32_SHARE_PROCESS) or 0x00000002 (SERVICE_FILE_SYSTEM_DRIVER),it\nis still the same.\nAnd i do not know how can i locate the cause of the error.\n1.\nAnd i test the volume management functions(https://msdn.\nmicrosoft.com/en-us/library/windows/desktop/aa365730(v=vs.85).aspx),there\nis no error\n(some of the functions return false when without the /o flag,like the\nGetVolumePathName , GetVolumeInformationByHandleW or\nGetVolumeNameForVolumeMountPoint, and the last error is 87\nERROR_INVALID_PARAMETER.But the window can see it even if the api return\nfalse, and i don't know why)\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/528, or mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ADHSOHe2YIxzMfb1D2Wdupijbv3lRCTaks5sDOPwgaJpZM4N2uhy\n.\n. Did you setup your service so that a desktop interaction is possible?\n\nAm 12.06.2017 12:15 schrieb \"noairman\" notifications@github.com:\n\nhi, @marinkobabic https://github.com/marinkobabic ,\nthe mount manager parameter means the /o flag when mount it ?\nI tried the mount manager as i said, mirror.exe /o /r c: /l M: ,it is\nstill the same\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/528#issuecomment-307748509,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ADHSOG5Bb4-PMZISBdHeRqp-Ah4TeOoZks5sDQ_VgaJpZM4N2uhy\n.\n. Please attach the kernel log. Strange that it doesn't work. Using a user\nfor service in combination with interaction with desktop should work. You\nare mounting the drive globally and not just for the current session?\n\nWhen you kill the explorer.exe and start the task explorer.exe then is the\ndrive visible?\nAm 13.06.2017 05:10 schrieb \"noairman\" notifications@github.com:\n\n@Liryna https://github.com/liryna \uff0cyou mean this,run service as a user\naccount,not a local system account?\nBut it doesn't help.\n[image: ser]\nhttps://user-images.githubusercontent.com/10110303/27062705-5c1da2e0-501f-11e7-90a3-a762c9d2f0cd.png\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/528#issuecomment-307984873,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ADHSOF2IAPK8FsF3vwoDtVrCnovXMeRkks5sDe2vgaJpZM4N2uhy\n.\n. For some reason only DefineDosDevice works in a service I assume so. I also\nthink that SUBST command uses this one which does a broadcast.\n\nOn 26 Nov 2017 8:56 pm, \"Liryna\" notifications@github.com wrote:\n\nWindows services have no access/broadcast to Desktop applications.\nThey cannot interact with the user interface with a window or such. It\nmean that dokan when running as service is just sending the message of\ndevice arrival to no one \ud83d\ude03\nSUBST is a service ?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/528#issuecomment-347033814,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ADHSOFxvB7kWYnLANIXz4yQE2vzq4Fvvks5s6cKCgaJpZM4N2uhy\n.\n. Makes it any difference when the service is started with a admin user\ncredentials?\n\nOn 27 Nov 2017 15:03, \"liny\" notifications@github.com wrote:\n\n@Liryna https://github.com/liryna\nBut I did not show up\u3002\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/528#issuecomment-347190318,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ADHSOAwqTV-f5azmPzjhoDFnfht1HMNdks5s6sE4gaJpZM4N2uhy\n.\n. The expectation was that system user may not have permission to do a\nbroadcast.\n\nOn 27 Nov 2017 15:50, \"liny\" notifications@github.com wrote:\n\n@marinkobabic https://github.com/marinkobabic\nI use the admin user but did not appear; What is the difference between\nthe credentials mean?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/528#issuecomment-347205007,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ADHSOLFMm2Y2_rAMHbxT7BVAy6rZj4f9ks5s6sxCgaJpZM4N2uhy\n.\n. For some reason the DefineDosDevice can do the broadcast and Dokan not. We\nneed to figure out why.\n\nOn 27 Nov 2017 15:57, \"liny\" notifications@github.com wrote:\n\n@marinkobabic https://github.com/marinkobabic\nAgain this question.....\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/528#issuecomment-347207013,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ADHSOBnYUP42f0pM6BhHxbQh0VGoA6pbks5s6s26gaJpZM4N2uhy\n.\n. Does the account have SE_TCB_NAME permission?\n\nOn 27 Nov 2017 3:58 pm, \"Marinko Babic\" marinko.android@gmail.com wrote:\n\nFor some reason the DefineDosDevice can do the broadcast and Dokan not. We\nneed to figure out why.\nOn 27 Nov 2017 15:57, \"liny\" notifications@github.com wrote:\n\n@marinkobabic https://github.com/marinkobabic\nAgain this question.....\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/528#issuecomment-347207013,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ADHSOBnYUP42f0pM6BhHxbQh0VGoA6pbks5s6s26gaJpZM4N2uhy\n.\n\n\n. @liny\nFor testing purposes you can add the environment variable manually on\nmachine level. Then you should be able to access it. Normally the variable\nis set properly during the setup.\n\nOn 28 Nov 2017 3:06 am, \"liny\" notifications@github.com wrote:\n\n@marinkobabic https://github.com/marinkobabic\nSE_TCB_NAME permission to start the service at this time even HOMEPATH no\npath;\nWhen I start the service can get the path to HOMEPATH, but still can not\nget DokanLibrary1.\nThe reason I think the problem is that there is no DokanLibrary1 in my\nsystem environment variables or user environment variables. Dokanctl.exe /\ni d (compile-time disabled driver signature) Installation dokan1.sys, so\nthere should be no problem installing it?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/528#issuecomment-347390168,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ADHSOKQr0U_EtErWlTC8NI-W_AFJ8Dygks5s62qIgaJpZM4N2uhy\n.\n. @liny\nCan you access any machine level variable? The HOMEPATH is user specific\nand you are running as system user. It may not exist.\nWhy you should you generally not be able to access machine level variables?\n\nOn 28 Nov 2017 7:48 am, \"liny\" notifications@github.com wrote:\n\n@marinkobabic https://github.com/marinkobabic\nMy program to start the service mount the drive letter problem is solved,\nbecause I have a service installation program; GetModuleFileName can get\nthe program path directly.\nThe path I get this variable is mainly to solve the problem that other\npeople can not automatically refresh (because there are dokanctl.exe);\nHowever, the value of the environment variable (such as% HOMEPATH%) can not\nbe obtained by GetEnvironmentVariable function when starting the service;\nSo now There is no point in having the DokanLibrary1 variable for\nenvironment variables.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/528#issuecomment-347429970,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ADHSOMcj_KFL6kCpu54SM0z0sNAqxM6cks5s66y3gaJpZM4N2uhy\n.\n. On of the uploaded BSOD can be fixed the following way\n\nif (Irp->UserBuffer > MmHighestUserAddress)\n{\n    ntStatus = STATUS_INVALID_PARAMETER;\n}\nPlease see the following pull request https://github.com/dokan-dev/dokany/pull/531\n. Yes. The other BSOD are related to oplock. Only in this special case a full\nmemory dump may help. Can try to figure out what is there going on.\nAm 14.06.2017 10:15 schrieb \"Olivier Guimbal\" notifications@github.com:\n\n@marinkobabic https://github.com/marinkobabic Thanks ! I beleive you\nare refering to this one ? (i got one this morning)\nPAGE_FAULT_IN_NONPAGED_AREA at\n00 fffff88002c01278 fffff8000334e40e nt!KeBugCheckEx\n01 fffff88002c01280 fffff800032ce5ee nt! ?? ::FNODOBFM::string'+0x3bc5f\n02 fffff88002c013e0 fffff800032c6f40 nt!KiPageFault+0x16e\n03 fffff88002c01578 fffff800032e5b53 nt!memmove+0xb0\n04 fffff88002c01580 fffff800032d3b4a nt!IopCompleteRequest+0x5a3\n05 fffff88002c01650 fffff880056a276a nt!IopfCompleteRequest+0x66a\n06 fffff88002c01740 fffff880056a1e0c dokan1!DokanCompleteIrpRequest+0x2a [e:\\islog\\dev\\app\\dokan\\dokany\\sys\\dokan.c @ 461]\n07 fffff88002c01770 fffff880056a263c dokan1!DokanDispatchDeviceControl+0x1e0 [e:\\islog\\dev\\app\\dokan\\dokany\\sys\\device.c @ 1022]\n08 fffff88002c017d0 fffff880056a23e7 dokan1!DokanDispatchRequest+0x204 [e:\\islog\\dev\\app\\dokan\\dokany\\sys\\dispatch.c @ 141]\n09 fffff88002c01800 fffff800035e03da dokan1!DokanBuildRequest+0x67 [e:\\islog\\dev\\app\\dokan\\dokany\\sys\\dispatch.c @ 45]\n0a fffff88002c01850 fffff800035f45ba nt!IopSynchronousServiceTail+0xfa\n0b fffff88002c018c0 fffff800035f4656 nt!IopXxxControlFile+0xc27\n0c fffff88002c01a00 fffff800032cf753 nt!NtDeviceIoControlFile+0x56\n0d fffff88002c01a70 0000000076febdaa nt!KiSystemServiceCopyEnd+0x13\n0e 0000000021298528 00000000`00000000 0x76febdaa\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/530#issuecomment-308356796,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ADHSOBlSqexmeHxFcyQfi7IUAPRa32lRks5sD5a7gaJpZM4N4l7B\n.\n. so have now created a new pull request https://github.com/dokan-dev/dokany/pull/540 \n\nThis one does not solve the oplock BSOD. Had no time yet but I will make a pull request as soon as I'm ready.\nAm 01.10.2017 13:05 schrieb \"Liryna\" notifications@github.com:\n\n@marinkobabic https://github.com/marinkobabic have you been able to\nlook at this possible BSOD since ? \u2764\ufe0f\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/530#issuecomment-333369161,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ADHSOGyYEXE-xOhifbfDqDpOdm8TMBM1ks5sn3ISgaJpZM4N4l7B\n.\n. Kernel log needed. Maybe my pull request has broken it.\n\nAm 17.06.2017 23:07 schrieb \"Andreas Gnau\" notifications@github.com:\n\nEnvironment\n\nWindows version: Server 2016\nProcessor architecture: amd64\nDokany version: latest snapshot 3846b9d\n   https://github.com/dokan-dev/dokany/commit/3846b9ddd26bae7e8097779efb391097828ce78e\nLibrary type (Dokany/FUSE): dokany\n\nCheck List\n\n[ x ] I checked my issue doesn't exist yet\n   https://github.com/dokan-dev/dokany/issues?utf8=%E2%9C%93&q=is%3Aissue\n[ x ] My issue is valid with mirror default sample and not specific\n   to my user-mode driver implementation\n[ x ] I can always reproduce the issue with the provided description\n   below.\n[ x ] I have updated Dokany to the latest version\n   https://github.com/dokan-dev/dokany/releases and have reboot my\n   computer after.\n[ x] I tested one of the last snapshot\n   https://github.com/dokan-dev/dokany/wiki/Build#user-snapshot from\n   appveyor CI\n\nDescription\nI have just installed the latest snapshot. And it does not work at all.\nMaybe it is my environment or there is some regression.\nWhen I first tried it, I got \"driver something wrong\". After rebooting and\nuninstalling and reinstalling the driver using dokanctl I get the following\nbehaviour\nLogs\nPS C:\\Program Files\\Dokan\\Dokan Library-1.0.3\\sample\\mirror> .\\mirror.exe  /s /r C:\\ /l O:\nAllocationUnitSize: 512 SectorSize: 512\ndevice opened\nIoctl failed for wait with code 1.\nIoctl failed for wait with code 1.\nThread will be terminated\nIoctl failed for wait with code 1.\nThread will be terminated\nIoctl failed for wait with code 1.\nThread will be terminated\nThread will be terminated\nIoctl failed for wait with code 1.\nThread will be terminated\nmounted: O: -> \\Volume{d6cc17c5-1736-4085-bce7-964f1e9f5de9}\nunload\nSuccess\nPS C:\\Program Files\\Dokan\\Dokan Library-1.0.3\\sample\\mirror> .\\mirror.exe  /s /r C:\\ /l O:\nAllocationUnitSize: 512 SectorSize: 512\ndevice opened\nDokan Error: driver start error\nDriver something wrong\nsend global release for O:\nDokanError: Ioctl failed with code 1617\nFailed to unmount: O:\nPS C:\\Program Files\\Dokan\\Dokan Library-1.0.3\\sample\\mirror> ....\\dokanctl.exe /l a\nDriver path: 'C:\\Windows\\system32\\drivers\\dokan1.sys'\n  Mount points: 3\n  0# MountPoint: \\DosDevices\\M: - UNC:  - DeviceName: \\Device\\Volume{d6cc17c5-1734-4085-bce7-964f1e9f5de9}\n  1# MountPoint: \\DosDevices\\N: - UNC:  - DeviceName: \\Device\\Volume{d6cc17c5-1735-4085-bce7-964f1e9f5de9}\n  2# MountPoint: \\DosDevices\\O: - UNC:  - DeviceName: \\Device\\Volume{d6cc17c5-1736-4085-bce7-964f1e9f5de9}\nPS C:\\Program Files\\Dokan\\Dokan Library-1.0.3\\sample\\mirror> ....\\dokanctl.exe /u O\nDriver path: 'C:\\Windows\\system32\\drivers\\dokan1.sys'\nsend global release for O:\nDokanError: Ioctl failed with code 1617\nFailed to unmount: O:\nUnmount status = 1\nPS C:\\Program Files\\Dokan\\Dokan Library-1.0.3\\sample\\mirror>\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/533, or mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ADHSOJh0C5WFwC92tUTdQH5psQFrxTT-ks5sFEARgaJpZM4N9VTM\n.\n. In the first log you can find\n\nUserBuffer is not in the user space. This would cause BSOD!!\nSo the ckeck has to be improved. Have no access to my machine until Tuesday\nto fix it.\nAm 18.06.2017 11:04 nachm. schrieb \"Liryna\" notifications@github.com:\n\nFirst mount:\nKernel:\nfirstmount.txt\nhttps://github.com/dokan-dev/dokany/files/1083379/firstmount.txt\nmirror.exe /r C:\\Users /l i /d /s\nAttempting to add SE_SECURITY_NAME privilege to process token\nsuccess: privilege already present\nDokan: debug mode on\nDokan: use stderr\nAllocationUnitSize: 512 SectorSize: 512\ndevice opened\nIoctl failed for wait with code 1.\nIoctl failed for wait with code 1.\nIoctl failed for wait with code 1.\nIoctl failed for wait with code 1.\nIoctl failed for wait with code 1.\nThread will be terminated\nThread will be terminated\nThread will be terminated\nThread will be terminated\nThread will be terminated\nmounted: i -> \\Volume{d6cc17c5-1736-4085-bce7-964f1e9f5de9}\nMounted\nUnmounted\nunload\nSuccess\nSecound mount:\nKernel:\nsecondmount.txt\nhttps://github.com/dokan-dev/dokany/files/1083380/secondmount.txt\nmirror.exe /r C:\\Users /l i /d /s\nAttempting to add SE_SECURITY_NAME privilege to process token\nsuccess: privilege already present\nDokan: debug mode on\nDokan: use stderr\nAllocationUnitSize: 512 SectorSize: 512\ndevice opened\nDokan Error: driver start error\nDriver something wrong\nsend global release for i:\nDokanError: Ioctl failed with code 1617\nFailed to unmount: i:\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/533#issuecomment-309302857,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ADHSOE-80T9xQu_3aAdhWZGP7AevosFlks5sFZDbgaJpZM4N9VTM\n.\n. Would be interesting to know the Irp->RequestorMode; during write. Then we\ncan do a check if RequestorMode != KernelMode additionally\n\nAm 18.06.2017 11:22 nachm. schrieb \"Marinko Babic\" \nmarinko.android@gmail.com:\n\nIn the first log you can find\nUserBuffer is not in the user space. This would cause BSOD!!\nSo the ckeck has to be improved. Have no access to my machine until\nTuesday to fix it.\nAm 18.06.2017 11:04 nachm. schrieb \"Liryna\" notifications@github.com:\n\nFirst mount:\nKernel:\nfirstmount.txt\nhttps://github.com/dokan-dev/dokany/files/1083379/firstmount.txt\nmirror.exe /r C:\\Users /l i /d /s\nAttempting to add SE_SECURITY_NAME privilege to process token\nsuccess: privilege already present\nDokan: debug mode on\nDokan: use stderr\nAllocationUnitSize: 512 SectorSize: 512\ndevice opened\nIoctl failed for wait with code 1.\nIoctl failed for wait with code 1.\nIoctl failed for wait with code 1.\nIoctl failed for wait with code 1.\nIoctl failed for wait with code 1.\nThread will be terminated\nThread will be terminated\nThread will be terminated\nThread will be terminated\nThread will be terminated\nmounted: i -> \\Volume{d6cc17c5-1736-4085-bce7-964f1e9f5de9}\nMounted\nUnmounted\nunload\nSuccess\nSecound mount:\nKernel:\nsecondmount.txt\nhttps://github.com/dokan-dev/dokany/files/1083380/secondmount.txt\nmirror.exe /r C:\\Users /l i /d /s\nAttempting to add SE_SECURITY_NAME privilege to process token\nsuccess: privilege already present\nDokan: debug mode on\nDokan: use stderr\nAllocationUnitSize: 512 SectorSize: 512\ndevice opened\nDokan Error: driver start error\nDriver something wrong\nsend global release for i:\nDokanError: Ioctl failed with code 1617\nFailed to unmount: i:\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/533#issuecomment-309302857,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ADHSOE-80T9xQu_3aAdhWZGP7AevosFlks5sFZDbgaJpZM4N9VTM\n.\n\n\n. I can explain why we have here a new issue. My pull request caused a bug\nand the bug was not discovered by the build process. So I expected that all\nis fine but it's not. The build process must enable the verifier to\ndiscover such issues. Can you implement this for the future please?\n\nSo now what happened. DokanCompleteIrpRequest changed the status on the\nIrp. This was never before the case. The driver returned a different status\nusing return statement than the one which is on the Irp.\nSo please undo my commit because the Idea is great but the implementation\nis not complete.\nWill do another pull request which does the fix properly. Sorry for the\ntrouble because I relied on the build process.\nThanks\nMarinko\nAm 19.06.2017 00:05 schrieb \"Andreas Gnau\" notifications@github.com:\n\nThanks @Liryna https://github.com/liryna, could not find the time to do\nit.\nPreviously my tests with IFSTest on AppVeyor were based on 0e159e3\nhttps://github.com/dokan-dev/dokany/commit/0e159e37d28d44828210d72b34d736ccd43933d5\nand I got the out-of-bounds described in issue #519\nhttps://github.com/dokan-dev/dokany/issues/519. I am now noticing ,\nthat with your change @marinkobabic https://github.com/marinkobabic,\nthe BSOD we get on AppVeyor changes to a different one (I have\ndouble-checked this and its reproducible). Now with your commit, instead of\nthe out-of-bounds issue descibed in #519\nhttps://github.com/dokan-dev/dokany/issues/519, we get the bugcheck\nposted below at the end of this post. See the build log for complete !analyze\n-v and the minidump and built executables in the artifacts.\nhttps://ci.appveyor.com/project/Maxhy/dokany/build/1.0.3-199/job/xhw28cfx887qq71y#L511\n.\nNow please tell me, whether I should open a third issue about that\n(because it is a separate issue). To me it sounds separate, but I do not\nsee why your commit (in addition to causing this issue) should magically\nfix the #519 https://github.com/dokan-dev/dokany/issues/519 BSOD and in\nturn uncover another issue. Then again I don't understand why this issue\nhere (mounting not working at all) was not uncovered on AppVeyor Win2016,\nwhich is pretty similar to my environment. Could it be the verifier being\nenabled? Questions over questions...\nDRIVER_VERIFIER_IOMANAGER_VIOLATION (c9)\nThe IO manager has caught a misbehaving driver.\nArguments:\nArg1: 0000000000000224, An IRP dispatch handler has returned a status that is inconsistent with the\n  IRP's IoStatus.Status field.\nArg2: fffff801b0003398, The address in the driver's code where the error was detected.\nArg3: ffffcf817f530ea0, IRP address.\nArg4: ffffffffc000000d, Expected status code.\nFAULTING_SOURCE_FILE:  c:\\projects\\dokany\\sys\\dispatch.c\nFAULTING_SOURCE_LINE_NUMBER:  25\nFAULTING_SOURCE_CODE:\n    21:\n    22: #include \"dokan.h\"\n    23:\n    24: NTSTATUS\n\n25: DokanBuildRequest(__in PDEVICE_OBJECT DeviceObject, __in PIRP Irp) {\n    26:   BOOLEAN AtIrqlPassiveLevel = FALSE;\n    27:   BOOLEAN IsTopLevelIrp = FALSE;\n    28:   NTSTATUS Status = STATUS_UNSUCCESSFUL;\n    29:\n    30:   __try {\n\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/533#issuecomment-309306057,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ADHSOP1wHqDZkJcNF5YecC6m0qaO3GQAks5sFZ8xgaJpZM4N9VTM\n.\n. Thx a lot.\n\nAm 19.06.2017 14:27 schrieb \"Liryna\" notifications@github.com:\n\nDone \ud83d\udc4d #535 https://github.com/dokan-dev/dokany/pull/535\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/533#issuecomment-309424835,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ADHSOL6kwyq0g4ceSnrzz_7oRMX71XGQks5sFmlCgaJpZM4N9VTM\n.\n. It's great to know that the issue has been fixed :-) This way we will\nprovide a much better quality.\n\nIn the system there is a condition if Marinko so don't report any BSOD :-)\nAm 22.06.2017 17:55 schrieb \"Andreas Gnau\" notifications@github.com:\n\nThere was actually an issue with BSOD's not being detected on AppVeyor,\nwhich I fixed in the process of implementing the IFSTest-PR. So Marinko's\nPR did cause a BSOD on AppVeyor, but nobody noticed it. :-) I could have\nremembered that :-)\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/533#issuecomment-310423289,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ADHSOE7XqpvqccbhRqSHcdskHsVHjN6aks5sGo5ngaJpZM4N9VTM\n.\n. Normally you can write a statement like debugger.break and the debugger\nwill stop there if for some reason the normal breakpoint does not work.\n\nAm 21.06.2017 11:49 schrieb \"Halil Karakose\" notifications@github.com:\n\nI am just trying to learn the api, and how mirror.c works. I added a\nprintf statement to this function and saw that this function is called.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/536#issuecomment-310028395,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ADHSOKCsabCukMYJzMaPYiDl5C16R__5ks5sGOcLgaJpZM4N-6mW\n.\n. I assume if all tests are fine that this pull request does not cause a BSOD anymore \ud83d\ude04 . Please can you post the reason for BSOD? Haven't seen any warnings in\nvisual studio. But I will cancel the pull request.\n\nAm 24.06.2017 22:04 schrieb \"Andreas Gnau\" notifications@github.com:\n\nI assume if all tests are fine that this pull request does not cause a\nBSOD anymore \ud83d\ude04\n@marinkobabic https://github.com/marinkobabic Unfortunately, not yet \ud83d\ude1e.\nOnly when #534 https://github.com/dokan-dev/dokany/pull/534 (or more\nspecifically b9e3e3d\nhttps://github.com/dokan-dev/dokany/commit/b9e3e3d13b76a7cd24b30325d329dade80abc2bb)\nis merged, you can rely on it.\nRight now, AppVeyor will happily continue with the next steps in the build\nprocess as if nothing happened (appveyor/ci#1158\nhttps://github.com/appveyor/ci/issues/1158). \"Thankfully\" you can\n\"easily\" detect the unplanned reboot, by hovering over the line-numbers.\nThey will reveal a tooltip with the timestamp. If it is 0:00:00, then a\nreboot happened (appveyor/ci#1145\nhttps://github.com/appveyor/ci/issues/1145) From line 1109 onwards you\ncan see that we got a BSOD\nhttps://ci.appveyor.com/project/Maxhy/dokany/build/1.0.3-203/job/t49vtcmjqp9dx4vo#L1109\nand you can also see that WinFSTest and FSX output is missing before those\nlines.\nI also see that your PR creates compiler-warnings\nhttps://ci.appveyor.com/project/Maxhy/dokany/build/1.0.3-203/job/nj1m4nuvw4pmy0w0/messages.\nThere is also some code-style issue (return type on separate line vs. on\nthe same line of the definition),\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/dokan-dev/dokany/pull/540#issuecomment-310862691, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/ADHSOG3k1RCxi8uwylvrigR5p6cCAYwqks5sHWvigaJpZM4OEWEY\n.\n. Have no my discs there to be able to do the tests myself. Let's see if the system reboots now because of BSOD. Warnings should be gone.. it seems like i have to test it at home. The question is about how many additional IOCTL are we talking here which\nare actually not implement in Dokan? Depending on how big the list is it\nmay make sense just to implement them. Don't think that a file system\nchanges the IOCTL that much in future.\n\nCan you provide such a list please?\nAm 13.07.2017 23:04 schrieb \"jimuk\" notifications@github.com:\n\nIf I understand the Dokan API it will require an extra entry in the\nDOKAN_OPERATIONS structure. Would this break the kernel <-> library\ncommunication?\nBTW: I haven't read about future plans for Dokan but maybe the structure\ncould be replaced by providing functions to \"register\" handlers with the\ndriver code. This would make it more extensible in the future and provide\nsome backwards compatibility with older drivers?\nJim\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/544#issuecomment-315201942,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ADHSOENsJazm-EbHx6tkVkPgJM6yDlbAks5sNoZigaJpZM4OKc5o\n.\n. What happens when you use one of the already implemented IOCTL by Dokan?\n\nWhat IOCTL implementations are you missing actually?\nYou request is in generally: please provide me a way in user Mode to talk\ndirectly to the operating system.\nAm 14.07.2017 10:39 schrieb \"jimuk\" notifications@github.com:\n\nTo answer the points made by @marinkobabic\nhttps://github.com/marinkobabic and @Rondom https://github.com/rondom.\nThis change only requires one new callback handler adding to driver. This\nis a generic mechanism that any IOCTL/FSCTL (they are essentially the same)\ncan be tunneled through. The IOCTL mechanism supports three modes of\noperation:\n\nRead - Pull data from underlying driver\nWrite - Push data down to underlying driver\nRead-Write - Simultaneous of both above\n\nThe following MSDN page explains how Windows uses this:\n[(https://msdn.microsoft.com/en-us/library/windows/desktop/\naa363219(v=vs.85).aspx)]\nDokan does not yet support async IO so I would suggest we drop the\nlpOverlapped member. This would leave the following handler signature:\nNTSTATUS(* DeviceIoControl )(LPCWSTR FileName, DWORD dwIoControlCode,\nLPVOID lpInBuffer, DWORD nInBufferSize, LPVOID lpOutBuffer, DWORD\nnOutBufferSize, LPDWORD lpBytesReturned, PDOKAN_FILE_INFO DokanFileInfo)\nJim\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/544#issuecomment-315305208,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ADHSOPUVLDAVFMyVlRsdOjbebq0SSZssks5sNylWgaJpZM4OKc5o\n.\n. This means you are here talking always about custom IOCTL codes and not\nabout the official available codes?\n\nAm 14.07.2017 18:48 schrieb \"jimuk\" notifications@github.com:\n\n\nExample user mode code to fetch an arbitrary 100 bytes from the\n   underlying driver could be:\n\n`CHAR cBuffer[100];\nDWORD dwBytesRead;\nBOOL bResult=WINAPI DeviceIoControl(hDevice, MY_CONTROL_CODE, cBuffer,\n100, NULL, 0, &dwBytesRead, NULL);\n`\n\nDokan would tunnel this down to the kernel mode driver and then\n   back to the user mode file system code. It would be passed to a method like:\n\nNTSTATUS ProcessDeviceIoControl(LPCWSTR FileName, DWORD dwIoControlCode,\nLPVOID lpInBuffer, DWORD nInBufferSize, LPVOID lpOutBuffer, DWORD\nnOutBufferSize, LPDWORD lpBytesReturned, PDOKAN_FILE_INFO DokanFileInfo)\n\nThis method would resolve the dwIoControl code, perform the desired\n   operation and return the requested bytes.\n\nJim\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/544#issuecomment-315408706,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ADHSOAGeAhK1Pk_DRJuyghXyG1i2prVOks5sN5vtgaJpZM4OKc5o\n.\n. How we can prevent conflicts with existing implementation of Dokan? What\nhappens when you send IOCTL for file writes or oplock?\n\nAm 14.07.2017 19:48 schrieb \"jimuk\" notifications@github.com:\n\nThe mechanism is generic. It can be used to pass any data in either\ndirection from user app to user mode file system driver. It would provide a\ngeneric means to implement extension functionality without rebuilding Dolan\neach time.\nJim\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/544#issuecomment-315422976,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ADHSOHSnCeEYQvnlQzb95vSKJmqM8_6Bks5sN6n9gaJpZM4OKc5o\n.\n. If it works the way you explained then it would be a nice feature \ud83d\ude01\n\nAm 14.07.2017 22:56 schrieb \"jimuk\" notifications@github.com:\n\nI don't think there is any conflict. IOCTL is independent of normal data\nread/write. Typically it would be used for non-data requests lime retirving\nmetadata but that is entirely up to implementtation. All Dorkan should do\n(like Windows) is pass the requests back and forth. It doesn't need to\ninterpret\nJim\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/544#issuecomment-315465694,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ADHSOFJFTOG2_aPfW0Na_jc-qhq5JyaBks5sN9X0gaJpZM4OKc5o\n.\n. You should set the mirror as start Project. The option should be available\nin the context menu of the project.\n\nAm 07.07.2017 16:54 schrieb \"Halil Karakose\" notifications@github.com:\n\nI used to run mirror.exe in VS2015. But I am trying to run mirror.exe\nVS2017. But I am receiving following error:\n[image: image]\nhttps://user-images.githubusercontent.com/406291/27962895-ece00a14-633b-11e7-8545-9a76446b5f09.png\nI am a java guy. How should I troubleshoot this problem?\nFollowing is the configuration manager:\n[image: image]\nhttps://user-images.githubusercontent.com/406291/27963115-a97c6c08-633c-11e7-94e8-4be56522cf43.png\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/550, or mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ADHSOPzu9NcvT-37mFg9eTsgYGYBoQLPks5sLkbAgaJpZM4ORDKO\n.\n. What are the steps to reproduce the issue? When windbg is attached using a\nseparate machine we should be able to discover the issue.\n\nDoes mirror work properly on those builds?\nAm 12.07.2017 7:06 nachm. schrieb \"deadalnix\" notifications@github.com:\n\nI was able to test with windows build 16237 and it fails as well.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/554#issuecomment-314834239,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ADHSOFO7XXzHl-rgkaTXs-G5y4Cu5wMPks5sNP0hgaJpZM4OVr1-\n.\n. From my point of view it should be part of DokanSetupDbg.exe\n\nAm 12.07.2017 22:22 schrieb \"deadalnix\" notifications@github.com:\n\nHi @marinkobabic https://github.com/marinkobabic ,\nThanks for helping.\nReading https://github.com/dokan-dev/dokany/wiki/Use-Mirror-example , it\nseems that mirror is supposed to be in the sample folder where dokan is\ninstalled. There is no such file there. I used the Dokan_x64.msi provided\nthere: https://github.com/dokan-dev/dokany/releases/tag/v1.0.3\nHow do I get the mirror app ?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/554#issuecomment-314885595,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ADHSOFFxZmHxF759StSdkLZ1I2cr9GkHks5sNSsDgaJpZM4OVr1-\n.\n. Will take a look \ud83d\ude01\n\nAm 14.07.2017 09:53 schrieb \"Liryna\" notifications@github.com:\n\nThank you @zanderz https://github.com/zanderz for the log \ud83d\udc4d There is\nreally only this ? \ud83d\ude2e wow\n@marinkobabic https://github.com/marinkobabic can you look at this\nissue ? \u2764\ufe0f\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/554#issuecomment-315296207,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ADHSOAPPS9ELJHMwP5S8lpNlFgX8CohEks5sNx6MgaJpZM4OVr1-\n.\n. Makes it any difference if you use the mount manager option?\n\nAm 14.07.2017 21:42 schrieb \"Steve Sanders\" notifications@github.com:\n\nThat one was made with dbgview. This time I was able to attach windbg\nremotely and got this log with a basic mirror test:\ndokandbg.TXT\nhttps://github.com/dokan-dev/dokany/files/1149516/dokandbg.TXT\nIt quickly repeats IOCTL_MOUNTDEV_QUERY_DEVICE_NAME and\nSTATUS_BUFFER_OVERFLOW over and over.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/554#issuecomment-315449853,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ADHSONyBG8bp4OYC_7bHPhFjp2tNJKQ5ks5sN8SrgaJpZM4OVr1-\n.\n. if the following line\n\nhttps://github.com/marinkobabic/dokany/blob/master/sys/device.c#L435\nis changed to\nstatus = STATUS_BUFFER_TOO_SMALL;\nthen all works perfect \ud83d\ude03 . Maybe we should just report it to Microsoft.\nBecause of this line here\nhttps://github.com/marinkobabic/dokany/blob/master/sys/device.c#L411\nI think it may work also on other systems. No idea why we do it in two\ndifferent ways.\nAm 15.07.2017 08:59 schrieb \"Liryna\" notifications@github.com:\n\n@marinkobabic https://github.com/marinkobabic Thank you for looking at\nit \ud83d\udc4d\nThis is a really weird change from windows.\nEven cdrom driver sample use STATUS_BUFFER_OVERFLOW as we do\nhttps://github.com/Microsoft/Windows-driver-samples/blob/\naa6e0b36eb932099fa4eb950a6f5e289a23b6d6e/storage/class/\ncdrom/src/ioctl.c#L4069 and the documentation only refer to\nSTATUS_BUFFER_OVERFLOW https://msdn.microsoft.com/en-\nus/library/windows/hardware/ff560437(v=vs.85).aspx\nDo not know what to think about it. Is that the new way to do it ? Will it\nwork on other systems versions ? Or just a mistake that Microsoft will\nchange next testing version.\nDoes microsoft as a bug report for his beta build that we could use ?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/554#issuecomment-315515252,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ADHSOI6stV_RObYIjoAmf9lldrIoi_Ytks5sOGNSgaJpZM4OVr1-\n.\n. Have reported it using Feedback Hub but I don't have any reference to the reported issue.. No. I used the feedback hub. They do not provide any link so far I have\nseen. You?\n\nAm 17.07.2017 19:12 schrieb \"Ben Pye\" notifications@github.com:\n\nHave you got a link to the feedback item?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/554#issuecomment-315818726,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ADHSODECbPMhAQ0J8iJEaukzXw8iSmXfks5sO5X6gaJpZM4OVr1-\n.\n. Can you share your link here please?\n\nAm 17.07.2017 20:19 schrieb \"Ben Pye\" notifications@github.com:\n\nSee https://compass-ssl.microsoft.com/assets/ab/e5/abe590f3-\naccd-407d-8be5-3b8347957565.png?n=FeedbackHubURL1.png\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/554#issuecomment-315838115,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ADHSOL-Znc2-9nMSPB9zAtAqYPNHk-_2ks5sO6W0gaJpZM4OVr1-\n.\n. Yes. This bugs are not related.\n\nAm 21.07.2017 19:05 schrieb \"Steve Sanders\" notifications@github.com:\n\n@lyrna @benpye https://github.com/benpye This is a separate bug, right?\nThere is still something strange on the Microsoft side? Or is this expected\nto be a solution?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/554#issuecomment-317057304,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ADHSODdIze1IOCsEhmzJT4c2jFfuYqJDks5sQNpdgaJpZM4OVr1-\n.\n. Windows has to be set to debugging mode to accept self signed certificates\n\nhttps://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/setting-up-local-kernel-debugging-of-a-single-computer-manually\nOn 14 Nov 2017 08:00, \"Liryna\" notifications@github.com wrote:\n\nAbout build:\n-Visual studio create his own self signed cert and sign it during the\nbuild. This cert can be imported in the VM to make the driver correctly\nsigned for the OS (what I am using every day). Override this cert by\nanother one (real cert) is possible but it is part of the vs user\nconfiguration and not the solution. So I could not commit it when I did the\ntest.\n-You can use the dokan self signed cert to sign the binary with this\nscript https://github.com/dokan-dev/dokany/blob/master/cert/dokan-sign.ps1\nand import the cert in your env with https://github.com/dokan-dev/\ndokany/blob/master/cert/dokan-import.ps1\nInstaller:\n-During the build installer, it is asked to submit the driver to Microsoft\nhardware dashboard (EV sign for > 1607).\nhttps://github.com/dokan-dev/dokany/blob/master/dokan_wix/build.bat#L21\nThis part is manual and needs a special env to be proceeding. It is heavy\nto run (that's why I only do it for Release installers).\n-The debug build installer is here for people who do not want/can to build\nthemselves in debug, who just want the kernel debugging output that exist\nonly in DEBUG (Microsoft Win32 API) without importing self signed cert (and\n< 1607).\nOnly thing that can be improved here for me it is to sign for 1607 the\ndebug installer. I would do if it would not take me 2-3h to update all the\nenv, run the test, send to Microsoft, waiting the analyze at each build.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/618#issuecomment-344164236,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ADHSOGxLCcJrr5DRUCm0K8DAOqHxUegoks5s2TqDgaJpZM4QcZYI\n.\n. I think you are right. The CcPurgeCacheSection needs the lock but the\nCcFlushCache not. See the following example\nhttps://github.com/Microsoft/Windows-driver-samples/blob/aa6e0b36eb932099fa4eb950a6f5e289a23b6d6e/filesys/fastfat/cleanup.c#L991\n\nOn 27 Nov 2017 4:35 pm, \"fanlonglong8500\" notifications@github.com wrote:\n\nAre you sure this is not locked by dokan before the call of CcFlushCache ?\n thread 1\n     |\n  (FlushFcb)\n  lock fcb->PagingIoResource[ LOCK A ]             |  thread 2\n     |                                             |     |\n     |                                             |  (FsRtlAcquireFileForCcFlushEx)\n     |                                             |  lock fcb->AdvancedFCBHeader.Resource[ LOCK B ]\n     |                                             |     |\n\n(FsRtlAcquireFileForCcFlushEx)                         |  (FsRtlAcquireFileForCcFlushEx)\nwill lock [ LOCK B ] , but can not lock , Because this |  will lock [ LOCK A ] , but can not lock , Because this lock\nlock has been owned by thread 2                        |  has been owned by thread 1\nBecause locking PagingIoResource before calling CcFlushCache caused this\ndeadlock.\nThis would be the same as PagingIoResource lock no ?\nWhat does this sentence mean?I do not understand.\nI cannot find information on how lock for CcXXX should be handled \ud83d\ude22\nFrom MSDN no special instructions to lock and CcFlushCache lock Resource\nand PagingIoResource, I guess before calling CcFlushCache do not need to\nlock PagingIoResource.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/625#issuecomment-347219319,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ADHSOHr-q1_ss3-x1ZTHUsIA3ezswVCdks5s6tbXgaJpZM4QnPZj\n.\n. Correct. It just grabs the lock for sync purpose.\n\n//\n// Grab and release PagingIo to serialize ourselves with the lazy writer.\n// This will work to ensure that all IO has completed on the cached\n// data and we will succesfully tear away the cache section.\n//\nOn 28 Nov 2017 1:18 am, \"fanlonglong8500\" notifications@github.com wrote:\n\nthe example also not lock pageio before CcPurgeCacheSection\uff0cit is unlock\nbefore CcPurgeCacheSection\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/625#issuecomment-347372202,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ADHSOC0xeX6WFqGCoH5rJ-osX1QeKFl_ks5s61E8gaJpZM4QnPZj\n.\n. Driver Log is needed.\n\nOn Feb 27, 2018 20:48, \"RustyHacksaw\" notifications@github.com wrote:\n\nHi all, this bug has new behaviour ... using the mirror app, if I mount a\ndrive and then sleep/wake the computer, about 50% of the time, dokany will\nexit with an error ... debug output from the mirror app shows\nIoctl failed for wait with code 995.\nIoctl failed for wait with code 995.\nIoctl failed for wait with code 995.\nIoctl failed for wait with code 995.\nIoctl failed for wait with code 995.\nThread will be terminated.\nThread will be terminated.\nThread will be terminated.\nThread will be terminated.\nThread will be terminated.\nDokan Error: DokanKeepAlive CreateFile failed .\\Volume{ < GUID > }: 2\nUnmounted\nunload\nSuccess\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/634#issuecomment-369003148,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ADHSOANTTRMXPbFjrH0BF5UAj2w5fvrGks5tZFvkgaJpZM4Q-U7z\n.\n. The main idea here was to discover that we are facing a awaken mode. As long as I know the IRP_MJ_POWER is only called when the driver supports PNP. Maybe all we need to do is here https://github.com/dokan-dev/dokany/blob/83be68351c70d916e58bdae8e3424e521fe07b04/sys/timeout.c#L294 to reset the timeout. Normally the timeout is reset using a call from user mode https://github.com/dokan-dev/dokany/blob/83be68351c70d916e58bdae8e3424e521fe07b04/sys/device.c#L990 It seems just to be a timing issue here. So resetting the timeout after the line above should fix the issue.. There is only one dcb->TickCount because we have just one dcb. How is it possible that we fail here even when it's updated? All I can imagine is some locking issue or timing issue. Please add some log to the update method and what value it has after the update and then during the check.. If I understand your idea correct then the drive will never disconnected\neven if the User Mode application is not running anymore.\n\nYou can test the behaviour when killing your app using task manager.\nOn Mar 7, 2018 20:22, \"RustyHacksaw\" notifications@github.com wrote:\n\nOkay, I think it's fixed, I added the DokanUpdateTimeout function inside\nthat else statement so that it executes for both cases and when I test it,\nI can no longer reproduce the unmount.\nhttps://github.com/dokan-dev/dokany/blob/83be68351c70d916e58bdae8e3424e\n521fe07b04/sys/timeout.c#L285-L300 http://url\nthe DokanUpdateTimeout call is inserted between lines 299 and 300. I will\ncreate a pull request soon.\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/634#issuecomment-371253601,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ADHSOOtPY7DpA5Ub3uJc2jCeOiDpsYgDks5tcDNfgaJpZM4Q-U7z\n.\n. There is a thread sending a special request to the driver. Here is then the\nentry point in the driver\nhttps://github.com/dokan-dev/dokany/blob/83be68351c70d916e58bdae8e3424e521fe07b04/sys/device.c#L990\n\nOn Mar 7, 2018 21:45, \"RustyHacksaw\" notifications@github.com wrote:\n\nDang, yup, it never unmounts. Sigh, so I'll move it to just inside the\n'awake...' comment and see if that still works ... pretty sure that's where\nI had it the first time and it didn't work ... How does the User Mode\nsignal the driver to keep the tick count updating?\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/634#issuecomment-371278386,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ADHSOOPsNmb2HfNmxQMOvY_1d_1356Cgks5tcEbZgaJpZM4Q-U7z\n.\n. Would be helpful to get such a device for few weeks. I have no device where I can reproduce the issue.. This is your starting point. https://github.com/dokan-dev/dokan-dotnet\nDokany provides a filesystem driver and a user mode access to it? Please\ncan you provide more details about your target?\n\nOn Dec 30, 2017 23:54, \"Aaron Stainback\" notifications@github.com wrote:\n\nhttps://docs.microsoft.com/en-us/windows-hardware/drivers/\ndevelop/getting-started-with-universal-drivers\nIs it possible to create a windows file system using a universal driver in\nUMDF 2 mode or will I need dokany? If so can you give me an example or help\nme get started with a C# windows file system?\nThanks.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/645, or mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ADHSOID-ib0RvPfsmfDIZXJL-uETXC21ks5tFr8ZgaJpZM4RPt5Q\n.\n. It's possible to have such a filesystem of course. I think that you can use\nunmanaged C# instead of C or C++.\n\nOn Dec 31, 2017 00:52, \"Aaron Stainback\" notifications@github.com wrote:\n\nI'm really curious if it's possible to just use a universal driver in UMDF\n2 for the file system. Thanks.\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/645#issuecomment-354575652,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ADHSONYnLnTLX7yFfx7a53x-S49a7AJHks5tFszIgaJpZM4RPt5Q\n.\n. I would focus more on the distributed stuff. Dokany provides already the\ndriver stuff for you. Check the mirror example. The files can be provided\nby any external server. Dokany will expose them to the local system inside\nif the normal explorer. Your task is just to adapt the external system to\nDokany.\n\nOn Dec 31, 2017 01:07, \"Aaron Stainback\" notifications@github.com wrote:\n\nI'm looking to create a distributed FS for windows similar to GlusterFS or\nCephFS, I have the distributed systems experience, I've just not done a lot\nof driver work other than GPIO. Thanks.\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/645#issuecomment-354576424,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ADHSOPL-CzWTbPSG0HQ7HcOQb5PZWCY_ks5tFtBFgaJpZM4RPt5Q\n.\n. Drive is mapped using user permission and the execution happens using admin\npermission. There does the drive not exist.\n\nOn Wed, Apr 18, 2018, 17:40 Micha\u0142 Pe\u0142ka notifications@github.com wrote:\n\n@Liryna https://github.com/Liryna thanks fo reply and suggestion.\nIndeed by using UNC path and adding server to trusted zone I can get rid of\n[image: screenshot_4]\nhttps://user-images.githubusercontent.com/3209244/38942354-d919639e-432e-11e8-8eaa-dd0112dd69b8.png\nbut my problem is still present :(\n[image: screenshot_5]\nhttps://user-images.githubusercontent.com/3209244/38942377-e75caefc-432e-11e8-9461-6ae15f065796.png\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/678#issuecomment-382432022,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ADHSOH_9xRjZ_ekwu9aniPZcvfvaFhYkks5tp159gaJpZM4TMRD0\n.\n. This is normal behaviour of Windows when working with network drives.\n\nNetwork drives are mapped using the User session. When you in this session\nwould start an explorer instance with elevated permission then you wouldn't\nsee any of the network drives, because it's different Windows session.\nYou can test this behaviour easily on your machine.\nOn Thu, Apr 19, 2018, 12:33 Micha\u0142 Pe\u0142ka notifications@github.com wrote:\n\n@marinkobabic https://github.com/marinkobabic thanks for reply, but the\nproblem present during running a mirror with \\n switch (for network drive)\n(in administrator's command shell or user). When it is used with \\n switch\nsomehow calls to run setup packages does not reach mirror.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/678#issuecomment-382688500,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ADHSOM9L4JywdBzpDIy_FtzQd1IUw3rTks5tqGgIgaJpZM4TMRD0\n.\n. We need to get to common understanding. So please do the following.\n\n\nLogin as normal user\nmap some network drives\nstart cmd and execute \"net use\"\n\nYou should see all the mapped drives listed. So far so good.\n\nstart new cmd using \"run as administrator\"\nexecute \"net use\" and you will not see the list of mapped drives\n\nPlease use normal drives which are not related to Dokany nor mirror to\nunderstand the normal Windows behaviour related to sessions I'm talking\nabout.\nDo you agree now?\nThanks\nMarinko\nOn Thu, Apr 19, 2018, 13:47 Micha\u0142 Pe\u0142ka notifications@github.com wrote:\n\n@marinkobabic https://github.com/marinkobabic, thanks!\nI do not agree - I can run alongside User's session running mirror.exe\nwith /n switch, Administrator's session. As the Administrator I can see\nuser's drive mounted - what is more, I can run installation packages.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/678#issuecomment-382705362,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ADHSODehWsspBBrVPzjymBhUW64ykn0mks5tqHlEgaJpZM4TMRD0\n.\n. If you start an exe from network driver which needs admin permissions you\nwould get the same error.\n\nThis is not related to Dokany at all.\nOn Fri, Apr 20, 2018, 11:39 Micha\u0142 Pe\u0142ka notifications@github.com wrote:\n\n@marinkobabic https://github.com/marinkobabic, I made that test - with\nordinary Windows mapped network drive,\nnet use reports only when I run only as User.\nOn other hand net use as User and as Admin reports Dokany drive.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/678#issuecomment-383043337,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ADHSOKnJXhuHYvye-2jwb-GsIjOVu9dhks5tqay2gaJpZM4TMRD0\n.\n. Did you get the request for admin rights? If not, then it will work.\nNormally you just need to make the drive as trusted drive and it will work.\nThe prompt up will not come up.\n\nOn Mon, Apr 23, 2018, 12:45 Micha\u0142 Pe\u0142ka notifications@github.com wrote:\n\nHello,\nI made experiment with Samba and Windows SMB , mapped network driver and I\ncan successfully run *.exe with admin elevation.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/678#issuecomment-383532987,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ADHSOC4_DxQ388NNYH3zIXLOuymgbTUhks5trbDPgaJpZM4TMRD0\n.\n. The file may be opened in your case with the flag delete on close.\n\nOn Wed, Jun 27, 2018, 15:19 abrandeau notifications@github.com wrote:\n\nFeature request can skip this form. Bug report must complete it. Check\nList must be 100% match or it will be automatically closed without\nfurther discussion. Please remove this line.\nEnvironment\n\nWindows version: w10\nProcessor architecture: corei7\nDokany version: last\nLibrary type (Dokany/FUSE):\n\nCheck List\n\nI checked my issue doesn't exist yet\n   https://github.com/dokan-dev/dokany/issues?utf8=%E2%9C%93&q=is%3Aissue\nMy issue is valid with mirror default sample and not specific to my\n   user-mode driver implementation\nI can always reproduce the issue with the provided description below.\nI have updated Dokany to the latest version\n   https://github.com/dokan-dev/dokany/releases and have reboot my\n   computer after.\nI tested one of the last snapshot\n   https://github.com/dokan-dev/dokany/wiki/Build#user-snapshot from\n   appveyor CI\n\nDescription\nmirror example : when a file is deleted, no call to DeleteFile?\nthere is a comment\n// we just check here if we could delete the file - the true deletion is\nin Cleanup\nI add : return Trace(nameof(DeleteFile), fileName, info,\nDokanResult.AccessDenied);\nin order to forbidden erase\nbut without sucess...\nif i test in cleanup the name of the process which want to delete the\nfile, and doesn't erase the file if it's not my program... explorer doesnt\nshow the file, you change directory in explorer and you can see the file\nnot very nice\nany idea?\n???\nLogs\nPlease attach in separate files: mirror output, library logs and kernel\nlogs https://github.com/dokan-dev/dokany/wiki/How-to-Debug-Dokan.\nIn case of BSOD, please attach minidump or dump analyze output.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/708, or mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ADHSOBHYi-6dHrr7-0iyRclXqlRl3MKoks5uA4ZTgaJpZM4U5sxl\n.\n. The Explorer would still not refresh automatically. What is the benefit of\nrecognizing it mush faster?\n\nDuring the crash you could start an separate exe which does the unmount for\nyou. Is this not an option?\nOn Mon, Aug 20, 2018, 08:25 liny notifications@github.com wrote:\n\nHi @Liryna https://github.com/Liryna ,\nI know that the value of the timeout mechanism cannot be changed. What I\nwant to say is to add extra code to the driver; should the driver have\nother ways to determine if the user mode mirror exits? This method takes\nless time than the timeout mechanism and then calls sys\\timeout.c\nDokanUnmount.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/727#issuecomment-414209584,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ADHSON2Tk-YZjpnb3Yua_DloUUHbVfe-ks5uSlY8gaJpZM4V7sRE\n.\n. I think during the crash you can call the Windows API to tell Windows\nexplorer that the drive is unmounted. Windows will remove the drive even if\nit's there. Only if user does an refresh, it will be shown again. Maybe\nthis helps already.\n\nIf the timeout had to be changed then an new flag is needed where you can\ndefine the second. The default would be the actual default value. You may\nface other problems with a short defined timeout which are caused mostly by\nantivirus software.\nMaybe you can make a pull request for the feature described above?\nOn Mon, Aug 20, 2018, 09:31 liny notifications@github.com wrote:\n\n@marinkobabic https://github.com/marinkobabic thanks,\nThe time is short and can be felt in the experience; for example, if the\nabnormal program exits, the general user will open the explorer refresh; if\nthe drive letter is unloaded within 2~3 seconds, the drive will be almost\nunloaded when the user refreshes;\nHowever, if the timeout mechanism is used to unmount, the user refreshes\n(before the timeout period), and the drive letter still exists. After that,\nit may not be manually refreshed. It is mistaken that the drive letter\ncannot be uninstalled. The short time is definitely beneficial.\nYou said that start an separate exe, this method has also been considered.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/727#issuecomment-414223266,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ADHSOKPEaP6b90Ktqb3S-_txJesziPLMks5uSmW-gaJpZM4V7sRE\n.\n. Maybe you can give it a try\n\nhttps://support.microsoft.com/en-us/help/17588/windows-fix-problems-that-block-programs-being-installed-or-removed\nAccording to the stuff I have found so far it may be related to the last\n.net framework. Please try to reinstall it.\nOn Fri, Feb 1, 2019, 06:46 Mike Weaver <notifications@github.com wrote:\n\nHi Liryna - I'm at my wits end with this, and although I opened a case in\nthe Keybase GIT area, it seems that they are totally baffled as well. Since\nlast writing, I have been totally unable to replicate a successful install\nof the Dokan library. After many, many frustrating and fruitless hours, I\nhave discovered exactly where it is failing. During the install, it appears\nthat the dokan_x64.msi file is written to a sub-directory in the\n\\ProgramData\\Package Cache directory, and executed from there. Except mine\nisn't. Ever! I have tried every trick I can think of to overcome this\nproblem, but every install fails at this point. I even renamed the original\n'Package Cache' directory, and created a new one with write permission to\nevery man and his dog. Still failed! Here's the relevant issue from the log:\n[2464:1200][2019-01-30T10:32:25]i370: Session begin, registration key:\nSOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall{3033f520-fbfd-410e-bce7-e86beb2fade3},\noptions: 0x7, disable resume: No [2464:1200][2019-01-30T10:32:25]i000:\nCaching bundle from:\n'C:\\Users\\Mike\\AppData\\Local\\Temp{5CF2493E-9892-4A28-AD91-84710BF202F1}.be\\DokanSetup.exe'\nto:\n'C:\\ProgramData\\PackageCache{3033f520-fbfd-410e-bce7-e86beb2fade3}\\DokanSetup.exe'\n[2464:1200][2019-01-30T10:32:26]i320: Registering bundle dependency\nprovider: {5F030BFA-CE6E-408A-9694-F593B319DBBE}, version: 1.2.1.2000\n[2464:1200][2019-01-30T10:32:26]i371: Updating session, registration key:\nSOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall{3033f520-fbfd-410e-bce7-e86beb2fade3},\nresume: Active, restart initiated: No, disable resume: No\n[2464:1100][2019-01-30T10:32:27]i305: Verified acquired payload:\nDokan_x64.msi at path: C:\\ProgramData\\Package\nCache.unverified\\Dokan_x64.msi, moving to:\nC:\\ProgramData\\PackageCache{65A3A964-3DC3-0102-0001-181221101125}v1.2.1.2000\\Dokan_x64.msi.\n[2464:1200][2019-01-30T10:32:27]i323: Registering package dependency\nprovider: {65A3A964-3DC3-0102-0001-181221101125}, version: 1.2.1.2000,\npackage: Dokan_x64.msi [2464:1200][2019-01-30T10:32:27]i301: Applying\nexecute package: Dokan_x64.msi, action: Install, path:\nC:\\ProgramData\\PackageCache{65A3A964-3DC3-0102-0001-181221101125}v1.2.1.2000\\Dokan_x64.msi,\narguments: 'ARPSYSTEMCOMPONENT=\"1\" MSIFASTINSTALL=\"7\"\nMSIUNINSTALLSUPERSEDEDCOMPONENTS=\"1\" INSTALLDIR=\"C:\\Program\nFiles\\Dokan\\Dokan Library-1.2.1\" INSTALLDEVFILES=\"1\"'\n[2464:1200][2019-01-30T10:32:56]e000: Error 0x80070643: Failed to install\nMSI package. * Looks like directory NOT writeable? \n[2464:1200][2019-01-30T10:32:56]e000: Error 0x80070643: Failed to execute\nMSI package. [2AF0:2B98][2019-01-30T10:32:56]e000: Error 0x80070643: Failed\nto configure per-machine MSI package.\nI have another Windows 7 machine, and the Dokan library installed\nfaultlessly on that. At the suggestion of the Keybase team, I have tried\nreplicating the installation from the successful machine on to the failing\nmachine, copying every known Dokan file to the respective directories.\nBut, of course, this doesn't work (and to be honest, despite the effort -\nwhich was quite formidable - I really didn't think it would!). So that's\nthe situation. One machine - flawless and effortless installation. The\nother - a total mind blowing disastrous nightmare that has wasted many,\nmany hours of my life! Any final assistance would be gratefully received,\notherwise I'll just have to accept this will never, ever work on here!\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/771#issuecomment-459613882,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ADHSOGLMNd8jagGVHhMJrLrA10A49tJ8ks5vI9TBgaJpZM4Z8-xM\n.\n. Please can you run process monitor and set the file path filter to the\nproblem directory so that we can se if there is really an access issue?\n\nWe can then also see if antivirus or some other software is preventing the\ninstallation.\nOn Fri, Feb 1, 2019, 09:38 Mike Weaver <notifications@github.com wrote:\n\nThanks so much for your valued information. I was previously sent that\nlink by the Keybase team, and to be brutally honest, it was totally\nuseless! It found, and did, absolutely nothing and - in true MSoft style -\nshunted me off to 'somewhere else'. I did, out of frustration and in good\nfaith, try it again, but nothing...... I did also look at my .net framework\nwhich is v4.7.2 and I ran a repair process on it. I then rebooted, and\nagain tried to install Dokan. Same problem - same error. Always that same\nerror!\n[2A80:2A98][2019-02-01T16:27:41]i301: Applying execute package:\nDokan_x64.msi, action: Install, path: C:\\ProgramData\\Package\nCache{65A3A964-3DC3-0102-0001-181221101125}v1.2.1.2000\\Dokan_x64.msi,\narguments: ' ARPSYSTEMCOMPONENT=\"1\" MSIFASTINSTALL=\"7\"\nMSIUNINSTALLSUPERSEDEDCOMPONENTS=\"1\" INSTALLDIR=\"C:\\Program\nFiles\\Dokan\\Dokan Library-1.2.1\" INSTALLDEVFILES=\"1\"'\n[2A80:2A98][2019-02-01T16:28:10]e000: Error 0x80070643: Failed to\ninstall MSI package.\nAlways fails to install the package - and, of course, everything else goes\ndownhill after that! Why? What is stopping that install? How can dot-Net be\ninvolved? It's a very consistent failure!!!\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/771#issuecomment-459647203,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ADHSOKHl-b7MIyvfjFUy-NZXhTxIyCPOks5vI_zsgaJpZM4Z8-xM\n.\n. Please try to map the windows drive and to use mapped drive as source for\nthe mirror\n\nOn Mon, Feb 4, 2019, 20:33 jjacobsfs <notifications@github.com wrote:\n\nI shut off antivirus and any other third party apps.\nI have a mapped network drive for that same network share. Would that\ncause issues? As a test, I created a new network share that was not mapped\nand mirror.exe ran longer than before (but it was still eventually killed).\nI will keep troubleshooting and see what I can come up with.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/779#issuecomment-460381164,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ADHSOM_6fPP6kEoJ1WitOEWAj-3r_Evcks5vKIsWgaJpZM4ahe-z\n.\n. Almost in all cases this is related to keep alive but logs are needed.\n\nOn Sun, Feb 17, 2019, 16:22 Liryna <notifications@github.com wrote:\n\n@jjacobsfs https://github.com/jjacobsfs we will need more informations\nto reproduce this or logs to see what is happening\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/779#issuecomment-464469865,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ADHSOD9TXGYSQjhPo3FVOj77Sw0TWY1Hks5vOXPCgaJpZM4ahe-z\n.\n. Here we should maybe already start to separate the mounting from device creation. Will keep thinking how it can be solved. \n. This if (lastError == ERROR_NO_SYSTEM_RESOURCES)\n\nShould remain. ERROR_DEV_NOT_EXIST is wrong here\n. Documentation says the we must RegisterDeviceNotification to be able to notify the applications using the code above.\n. RegisterDeviceNotification needs a window handle. It can be realized using a hidden window but it seems again to me to be a hack.\n. An handle is needed which will be receiver of the messages. If Desktop handle is passed I have no option to access the received messages.\nVon Samsung Mobile gesendet\n-------- Urspr\u00fcngliche Nachricht --------\nVon: joepperkins\nDatum:15.01.2016 17:49 (GMT+01:00)\nAn: dokan-dev/dokany\nCc: Babic Marinko\nBetreff: Re: [dokany] Fix mounting for socket connection (#140)\nIn dokan/dokan.chttps://github.com/dokan-dev/dokany/pull/140#discussion_r49875768:\n\n@@ -249,6 +249,12 @@ int DOKANAPI DokanMain(PDOKAN_OPTIONS DokanOptions,\n     return DOKAN_MOUNT_ERROR;\n   }\n+\n-  // wait until the device is realy mounted\n-  if (DokanOptions->Options & DOKAN_OPTION_MOUNT_MANAGER) {\n-       WaitForMount(instance);\n\nThe getdesktopwindow should work for your handle. https://msdn.microsoft.com/en-us/library/windows/desktop/ms633504(v=vs.85).aspx Sent on a Sprint Samsung Galaxy Note\u00ae 3\n-------- Original message -------- From: Marinko notifications@github.com Date: 01/15/2016 1:15 AM (GMT-08:00) To: dokan-dev/dokany dokany@noreply.github.com Subject: Re: [dokany] Fix mounting for socket connection (#140https://github.com/dokan-dev/dokany/pull/140) In dokan/dokan.c<#140 (comment)https://github.com/dokan-dev/dokany/pull/140#discussion_r49833461>:\n@@ -249,6 +249,12 @@ int DOKANAPI DokanMain(PDOKAN_OPTIONS DokanOptions, return DOKAN_MOUNT_ERROR; } + + // wait until the device is realy mounted + if (DokanOptions->Options & DOKAN_OPTION_MOUNT_MANAGER) { + WaitForMount(instance);\nRegisterDeviceNotification needs a window handle. It can be realized using a hidden window but it seems again to me to be a hack. - Reply to this email directly or view it on GitHubhttps://github.com/dokan-dev/dokany/pull/140/files#r49833461.\n\nReply to this email directly or view it on GitHubhttps://github.com/dokan-dev/dokany/pull/140/files#r49875768.\n. If the MountControl pointer is still valid. Depending on timing it could be null if at the same time somebody removed the mounEntry.\n. You mean put some comments on top of the method? \n. You are right. The check is invalid and because of the concept change not needed anyway. \n. Will add some notes. It would no be really delayed if we wouldn't have such value. But you are right\n. ",
    "ghost": "I can confirm seeing this issue.\nSituation -- I am using FiSSH to access folders located on a Debian 8 server from a Windows 7 laptop. FiSSH in turn appears to be using Dokan (I would guess 0.6 or 0.74, I have Dokan Library 0.74 listed under installed programs, but there is a 0.6 versioned DokanNet.dll in the FiSSH directory).\nOccurrence -- an SSH-accessible folder is mounted as a virtual drive \"Y:\". On the drive, there are two directories (\"c2s\" and \"s2c\"). These contain files. A data synchronization application, acting as a bridge between portable terminals and a Linux server, written in .NET 3.5, issues the System.IO.File.Copy(source,dest,overwrite) function call. Network connections go through a 3G router, and are encapsulated in a PPTP VPN connection (mentioning since both might introduce latency).\nError -- Upon copying a 20 MB file, an exception is thrown with the message \"Insufficient system resources exist to complete the requested service.\"\nSurprise -- Upon closer study, the file actually DOES arrive at its destination. :O \nI am currently in the process of implementing a block-by-block copy algorithm intead of relying on the immensely convenient File.Copy() call.\n. P.S. More info: the file does arrive at its destination, but some of its content does not.\nIt breaks down at approximately at 2/3 of its length, and from there on, does not contain expected data, only null (0x00) characters.\n. @joepperkins - thanks for the tip, I will switch it back for a while to find out. :)\n@marinkobabic - that would be a good idea, but I can't do it. :) My application isn't aware of which filesystems are local and which virtual, and it doesn't use the Dokan API directly - it uses a filesystem mounted with FiSSH. At this point, I have found my way around the problem by switching away from the .NET System.IO file functions to Shell32.dll functions.\n. Can you clarify please: did you want to know how I caused the problem, or how I managed to resolve it for myself?\n. No problem. :) I coded two functions which call the Shell32 API to replace the System.IO functions. Source comes below:\n----------------- source --------------\n'Declare shell file operation data structure.\nPrivate Structure SHFILEOPSTRUCT\n        Public hwnd As Long\n        Public wFunc As Long\n        Public pFrom As String\n        Public pTo As String\n        Public fFlags As Integer\n        Public fAborted As Boolean\n        Public hNameMaps As Long\n        Public sProgress As String\n    End Structure\n'Declare function for invoking shell file operations.\nPrivate Declare Function SHFileOperation Lib \"shell32.dll\" _\n        Alias \"SHFileOperationA\" (ByVal lpFileOp As SHFILEOPSTRUCT) As Long\n'Operation function codes.\nPrivate Const FO_MOVE = &H1\nPrivate Const FO_COPY = &H2\nPrivate Const FO_DELETE = &H3\nPrivate Const FO_RENAME = &H4\n'Operation behaviour flags.\nPrivate Const FOF_SILENT = &H4\nPrivate Const FOF_NOCONFIRMATION = &H10\nPrivate Const FOF_NOCONFIRMMKDIR = &H200\nPrivate Const FOF_NOERRORUI = &H400\n'\n' Function for calling a shell file copy operation.\n' Should always overwrite, untested!\n'\nPublic Function ShellFileCopy(ByVal src As String, ByVal dest As String) As Boolean\n```\n    Dim lRet As Long\n    Dim lFlags As Long\n    Dim sfo As SHFILEOPSTRUCT\n'Compose a bitmask or suitable flags.\nlFlags = lFlags Or FOF_SILENT\nlFlags = lFlags Or FOF_NOCONFIRMATION\nlFlags = lFlags Or FOF_NOCONFIRMMKDIR\nlFlags = lFlags Or FOF_NOERRORUI\n\n'Fill in data structure.\nWith sfo\n    .wFunc = FO_COPY\n    .pFrom = src & vbNullChar & vbNullChar\n    .pTo = dest & vbNullChar & vbNullChar\n    .fFlags = lFlags\nEnd With\n\n'Call operation, check return code.\nlRet = SHFileOperation(sfo)\nShellFileCopy = (lRet = 0)\n\n```\nEnd Function\n'\n' Function for calling a shell file copy operation.\n' Should always overwrite, untested!\n'\n```\nPublic Function ShellFileMove(ByVal src As String, ByVal dest As String) As Boolean\nDim lRet As Long\nDim lFlags As Long\nDim sfo As SHFILEOPSTRUCT\n\n'Compose a bitmask or suitable flags.\nlFlags = lFlags Or FOF_SILENT\nlFlags = lFlags Or FOF_NOCONFIRMATION\nlFlags = lFlags Or FOF_NOCONFIRMMKDIR\nlFlags = lFlags Or FOF_NOERRORUI\n\n'Fill in data structure.\nWith sfo\n    .wFunc = FO_MOVE\n    .pFrom = src & vbNullChar & vbNullChar\n    .pTo = dest & vbNullChar & vbNullChar\n    .fFlags = lFlags\nEnd With\n\n'Call operation, check return code.\nlRet = SHFileOperation(sfo)\nShellFileMove = (lRet = 0)\n\n```\nEnd Function\n. (Tip: the selection of operation behaviour flags is large and diverse, I only declared the one which interested me.)\n. Hello @Liryna\nTo implement Mount() my assumption was to call it direct from DokanMain():\n{\n- open device, return error if failed\n- call DokanStart(), return error if failed\n- call DokanMount(), return error if failed\n  [ At this point there is no way for DokanMain() to return value other than DOKAN_SUCCESS, so here we can ]\n- call Mount()\n- start threads\n- wait for threads\n- return DOKAN_SUCCESS\n}\nLike this accorp/dokany@85922da2ad697f90c35298997d9e4342d7de0ef1. Am I missing something?\n. @Liryna\nThanks for your work, Mounted() and Unmounted() behaves as expected :yum:\nSince 0.8.0 is binary incompatible with all previous versions, I think DokanMain() should return some error in case it gets DokanOptions.Version less than 800 to prevent old programs from silent crashes.\nSee #122 \n. And, again, since 800 is currently minimum compatible version, maybe, these checks are not required.\n``` c\ndefine DOKAN_SECURITY_SUPPORTED_VERSION 600\ndefine DOKAN_ENUMERATE_STREAMS_SUPPORTED_VERSION 800\ndefine DOKAN_MOUNT_SUPPORTED_VERSION 800\n```\n. Not as strange as to give callbacks possibility to return result as NTSTATUS and disallow one of its proper code. :smile: BTW In Dokan.NET binding there is NotImplemented as one of DokanResult constant.\nThis issue I faced trying to write full featured class-based dokan wrapper for Delphi/Lazarus. Currently, FindFilesWithPattern hides FindFiles if it is set in DOKAN_OPERATIONS. If all callbacks will be able to return STATUS_NOT_IMPLEMENTED it gives control from designtime to runtime, which is required for high-level programming. I think it will be useful for other bindings as well.\nAs a possible workaround, I can use separate DokanOperations for each mount, or make call to FindFiles from FindFilesWithPattern and then use DokanIsNameInExpression, or not support FindFilesWithPattern at all (like Dokan.NET binding does), but I don't like any of them.\n. Great, thanks!\n. Also I found a suspicious place, but not absolutely sure to fix it myself.\nsetfile.c, DokanSetAllocationInformation()\n``` c\n  // How can we check the current end-of-file position?\n  if (allocInfo->AllocationSize.QuadPart == 0) {\n    return DokanOperations->SetEndOfFile(\n        EventContext->Operation.SetFile.FileName,\n        allocInfo->AllocationSize.QuadPart, FileInfo);\n  } else {\n    DbgPrint(\"  SetAllocationInformation %I64d, can't handle this parameter.\\n\",\n             allocInfo->AllocationSize.QuadPart);\n  }\nreturn STATUS_SUCCESS;\n```\nThis code is a fallback to SetEndOfFile if SetAllocationSize is not implemented. I think it should be removed, it is application responsibility to implement required operations. Anyway, there is a potential crash if SetEndOfFile is not set.\n. @Liryna\nI just removed that code, is it correct? Or it should return STATUS_SUCCES if SetAllocationSize not implemented as it was.\n. With current session flag mounted volume is visible only to programs which are running with same privileges as mirror.exe, i.e. if mirror.exe is started with administrator rights, then explorer (which is running with limited privileges) is not able to show the volume. Now if explorer has been killed and started with UAC elevation - it shows volume and its content. Then if I run mirror.exe without admin privileges - volume is not appeared in explorer, but if it is restarted with limited privileges - drive shows up!\nWhat is more strange, I can start two mirror.exe - with and without UAC elevation, and mount two different folders with same volume letter! Then applications with different privileges will show different content for the same drive! Nice joke for April Fools' Day :smile: \nI can reproduce this behaviour on three virtual machines with win7-x86, win7-x64 and win8.1-x86.\n. @Liryna\nAbout mirror sample crash on Win7. My delphi translation of mirror.c after ctrl+c shows\n```\nClose 0107\nClose: d:\\test\nsend global release for m:\nDokanBroadcastLink: Begin SHChangeNotify\nDokanBroadcastLink: SHChangeNotify done\n^C\n```\nso maybe it is not SHChangeNotify fault.\n. Yes, Win7-x86, and yes - mirror.exe crashed all times after CTRL+C.\nBut delphi translation of mirror is not :smile:\n. @Liryna  Ok, I'll try to make some test later.\n. I run mirror under debugger, and it shows that exception is \"read of address 0x00000000\" somewhere inside ole32.dll. According to MSDN when Ctrl+C is pressed, default control handler calls ExitProcess(), and it looks like some function from ole32 is not happy to be called after it. I got same crash with direct call to ExitProcess() while volume is mounted.\nAnyway, it seems that call to SHChangeNotify() is useless, maybe it should be removed as you was planning to do.\n. Crash on both Win7 x86 and x64, but not on Win8.1 x86. And I still can't reproduce it on win7 with delphi mirror even with direct call to ExitProcess().\n. Yes, line-to-line translation of C version. But \"delphi\" (i'm actualy using lazarus) has some runtime compiled into executable and it does additional tasks for initialization/finalization/setting callbacks etc. And maybe one of them is fortunately avoiding that crash.\n. Hi @Liryna, I found the reason why delphi mirror is working properly - there is ole32.dll in import table. And I got no more crash after putting dummy call to CoGetCurrentProcess() inside dokan library just to add ole32 to import. But it looks like call to SHChangeNotify() during DLL_PROCESS_DETACH is a bad idea, see DllMain entry point and Dynamic-Link Library Best Practices.\n\"Calling functions that require DLLs other than Kernel32.dll may result in problems that are difficult to diagnose. For example, calling User, Shell, and COM functions can cause access violation errors, because some functions load other system components. Conversely, calling functions such as these during termination can cause access violation errors because the corresponding component may already have been unloaded or uninitialized.\"\n. I agree with your decision, looks like adding ole32 into import table keeps it from unloading too fast and solved the problem in this particular case. But it is not guarantee to remain working, at different configurations or after some updates it can start crashing again.\n. I think you're right, but it might be worthwhile following up to see it can be whitelisted somehow - as some business will refuse to install it given these results.\n. Yes, windows say it as vaild signature. (when check by file property)\nsha1 and sha256 digest both.\n. Absolutely yes. Microsoft Windows are provide Secure Boot when UEFI setting enabled.\nAnd, when i turn off uefi settings, Service Instance are successfully started.\n(When turn off Secure Boot)\n```\nC:\\WINDOWS\\system32>sc query dokan1\nSERVICE_NAME: dokan1\n        \uc885\ub958               : 2  FILE_SYSTEM_DRIVER\n        \uc0c1\ud0dc               : 4  RUNNING\n                                (STOPPABLE, NOT_PAUSABLE, IGNORES_SHUTDOWN)\n        WIN32_EXIT_CODE    : 0  (0x0)\n        SERVICE_EXIT_CODE  : 0  (0x0)\n        \uac80\uc0ac\uc810             : 0x0\n        WAIT_HINT          : 0x0\n```\nSo in my opinion, \"We need WHQL signature, or just disable Secure Boot will work.\"\n. Should i change issue title?\n. My desktop still not working with dokan driver...\n\n(That alart message say 'Digital-signed driver are required')\nDesktop\nDokan: 1.0 RC4\nWindows: (Win10 Pro) 14393.10 (Still using Secure Boot)\nClean install for update to Windows 10 Pro, Anniversary Update\n. @Maxhy yes, my surface 4 are update to latest windows update and still work!\n(also enable Secure Boot, but didn't test with dokan RC4.)\n. EV certificates???...\n. Are there any plans to also add fuse_lowlevel.h to the FUSE wrapper? Is this feasible now with asynchronous IO implemented?. @Rondom wouldn't it be enough to simply keep a hashmap of fullpath => inode. I believe that is what the FUSE high level API does too. As to other differences, I have no idea what those are exactly since I am not at all familiar with Windows. I am simply looking at the easiest way to get my app to work on Windows too when it is finished.. I don't currently use dokany, but am keeping a close eye on it, particularly on asynchronous IO and on the hopeful implementation of the FUSE lowlevel API as this would make the eventual porting of my application a whole lot easier.\nMy application currently uses a single thread and is centered around the libuv event loop. Since it is a networked filesystem, and the socket is the bottleneck, additional threads don't add any extra performance. Rather, they'd take more resources and slow things down due to the necessity of working with mutexes.\nThe asynchronous IO feature is really neat, but forcing people to use multiple threads is - IMHO - silly.. Note that I don't have anything called \"vcredist_2015_x64.exe\" on my computer. I have numerous \"vcredist_x64*.exe\" files, though. My guess is that the installer tried to download the \"vcredist_2015_x64.exe\" file and it partially failed. In this case maybe it's better to include the redistributable in the installer? Or maybe statically link the libraries? (Not a windows C/C++ expert here). Regardless, this looks like really progress - keep up the good work!!\n. ",
    "joepperkins": "Can you specify the exact offset when it fails and is it consistently the same offset?\n-------- Original message --------\nFrom: m00fighter notifications@github.com\nDate: 09/20/2015 11:02 AM (GMT-08:00)\nTo: dokan-dev/dokany dokany@noreply.github.com\nSubject: Re: [dokany] Insufficient system resources exist to complete the requested service (#6)\nP.S. More info: the file does arrive at its destination, but some of its content does not.\nIt breaks approximately at 2/3 of its length, and from there on, does not contain data, only null (0x00) characters.\n\nReply to this email directly or view it on GitHubhttps://github.com/dokan-dev/dokany/issues/6#issuecomment-141815706.\n. Was the volume active while it was being dismounted?\nSent on a Sprint Samsung Galaxy Note\u00ae 3\n-------- Original message --------\nFrom: Liryna notifications@github.com\nDate: 08/18/2015 1:48 PM (GMT-06:00)\nTo: dokan-dev/dokany dokany@noreply.github.com\nSubject: Re: [dokany] BSODs after DokanMounter service restart (#26)\n@marinkobabichttps://github.com/marinkobabic I have made the same test as you. DokanTest more than 25 times with CTRL + C very fast or slowly.\nI got no crash and no zombie device. System was still stable after.\n@voltagexhttps://github.com/voltagex If you can make a crash, please use WinDbg to see in which software it crashed.\n\nReply to this email directly or view it on GitHubhttps://github.com/dokan-dev/dokany/issues/26#issuecomment-132315910.\n. The icon can be specified in the newly mounted volume FS, please refer to the link below\nhttps://msdn.microsoft.com/en-us/library/windows/desktop/cc144102(v=vs.85).aspx\nbasically add an icon file and a desktop.ini file to the root of the volume and set the system attribute of both files, I believe the hidden attribute is optional.\n[Screen shot of custom icon replacing folder icon]\nThe following desktop.ini file was used to customize the Music folder, as seen in the preceding illustrations.\n[.ShellClassInfo]\nConfirmFileOp=0\nNoSharing=1\nIconFile=Folder.ico\nIconIndex=0\nInfoTip=Some sensible information.\nFrom: shlatchz [mailto:notifications@github.com]\nSent: Monday, August 31, 2015 5:32 PM\nTo: dokan-dev/dokany dokany@noreply.github.com\nSubject: [dokany] Implementing missing features (#51)\nHello,\nI was wondering if it's possible to implement missing features, such as InstallIcon() and SetIcon() for changing the disk's icon.\nDokan vs. CBFShttps://www.eldos.com/cbfs/dokan-to-cbfs.php\nThanks!\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/dokan-dev/dokany/issues/51.\n. The getdesktopwindow should work for your handle.\nhttps://msdn.microsoft.com/en-us/library/windows/desktop/ms633504(v=vs.85).aspx\nSent on a Sprint Samsung Galaxy Note\u00ae 3\n-------- Original message --------\nFrom: Marinko notifications@github.com\nDate: 01/15/2016 1:15 AM (GMT-08:00)\nTo: dokan-dev/dokany dokany@noreply.github.com\nSubject: Re: [dokany] Fix mounting for socket connection (#140)\nIn dokan/dokan.chttps://github.com/dokan-dev/dokany/pull/140#discussion_r49833461:\n\n@@ -249,6 +249,12 @@ int DOKANAPI DokanMain(PDOKAN_OPTIONS DokanOptions,\n     return DOKAN_MOUNT_ERROR;\n   }\n+\n-  // wait until the device is realy mounted\n-  if (DokanOptions->Options & DOKAN_OPTION_MOUNT_MANAGER) {\n-       WaitForMount(instance);\n\nRegisterDeviceNotification needs a window handle. It can be realized using a hidden window but it seems again to me to be a hack.\n\nReply to this email directly or view it on GitHubhttps://github.com/dokan-dev/dokany/pull/140/files#r49833461.\n. ",
    "fds13": "@marinkobabic - How can I do that? It's possible by the Dokan DotNet Wrapper? Can you help me? Thank you!\n. Ok @marinkobabic, thanks! Waiting anxiously the new version!\n. Great notice @Liryna \nThe NTSTATUS would be the ResetTimeout that marinkobabic cited?\n. But this new release (0.7.5) will bring some fix to the trouble of copy large files?\n. Ok, I understand.\nThanks for attention.\nA hug!\n. @m00fighter \nHello buddy.\nHow do you did that? Can you help?\nThank you!\n. Sorry.\nI would like to know how you solved the problem with the Shell32.dll functions.\nThank you very much!\n. Thanks a lot!\nI will take a look and try adapt it to c#.\nSee ya!\n. ",
    "sherter": "I added \nDbgPrint(\"device handle in thread %d is %d\\n\", GetCurrentThreadId(), device);\nto Line 289 in dokan.c and got the following output:\n[4508] device handle in thread 5096 is 848\n[4508] device handle in thread 3012 is 864\n[4508] device handle in thread 3736 is 880\n[4508] ###Create 0000\n[4508]    CreateDisposition 108X\n[4508] CreateFile status = -2\n[4508] device handle in thread 5096 is 352091476\n[4508] Ioctl failed with code 6\n[4508] ###Create 0001\n[4508]    CreateDisposition 108X\n[4508] CreateFile status = -2\n[4508] device handle in thread 3012 is 352747060\n[4508] Ioctl failed with code 6\n[4508] ###Create 0002\n[4508]    CreateDisposition 108X\n[4508] CreateFile status = -2\n[4508] device handle in thread 3736 is 364017748\n[4508] Ioctl failed with code 6\nThe device HANDLE seems to have changed, resulting in the error. Can you confirm that this can not be dokan's fault? Have you any idea how that could have happened in conjunction with java?\n. Closing this as it is an issue with the interaction between java and c space. It's not directly related to dokany.\n. That would be mirror.c ...\n. ",
    "silvadenisaraujo": "Thank you very much, it was very helpful ! \n. ",
    "suy": "Ah, sorry I forgot to mention that: I didn't do anything to sign or not to sign. I saw in the generated files a test certificate, and on the properties of the driver says is signed. Given the certificate is just a test one, that might be the issue, right?\nThank you.\n. Well, it took me a bit to get everything right. The problem wasn't the driver signature verification (at least not only). I was using the default build configuration, which is 32 bits, while my OS is 64 bits. I still don't understand all the possible build configurations, but I got it to work.\nI'll try to send a pull request with instructions for newbies like myself. :)\nThank you!\n. Sorry if you received a notification for this twice. I force-pushed the commit just to amend the message and include the link to the discussion.\n. I think this is because the string passed to tell where you mount it has to be the same when you unmount. Since the mirror.exe example mounts in a drive letter, the string that has to be passed when unmounting has to be one single letter as well. That's why I added it to the readme, because I think you should probably use the long version. That way you always have the same string for sure.\nThe patch changed DokanUnmount, though. The mirror uses the other one, so I think should not be affected.\n. Removing the DeleteOnClose flag would be a source and binary incompatible change with old applications. That's why I was thinking of using it instead (either setting it in the application or the library/driver). That might be able to \"upgrade\" old applications that weren't aware of the flag, although you probably will know better if this is safe.\nIf you think it's the application's duty to do so, I'll implement it in mine, and update the docs.\nOne question remains, though: how comes that Microsoft introduced this safely? Isn't it breaking all other file system drivers as well?\n. It took me some time to be able to test, but so far, yes, this seems to work. :-) Thank you!\nI don't understand, though, what would change the other parts of the change that Marinko did. I see the DeleteFile operation being called before the cleanup anyway.\n. Thank you for the info. I've see you've updated the wiki already, so closing then. :)\n. El Tuesday 30 June 2015, Liryna escribi\u00f3:\n\nI already had such behaviour too.\nDoes it work If you use the dokanctl to reinstall the driver & service ?\n\nI'll try ASAP. I tried to uninstall and install again, but same result.\nOn that note: dokanctl is a really small application that calls some functions \nthat are available in the library, but have no public header (are in \ndokanc.h). The DokanService* functions might be useful for application \ndevelopers, e.g. for their own installers. Do you have an opinion about those?\nOtherwise I'll maybe launch the process from my application, if that's going \nto fix it.\n\nHave you run the install in Administrator ?\n\nNot explicitly. I thought it would ask for Administrator rights if needed.\n\nAlex (a.k.a. suy) | GPG ID 0x0B8B0BC2\nhttp://barnacity.net/ | http://disperso.net\n. Yes! That could be the case indeed. On my machine it has worked well always, but not on machines with less (development) things installed.\nI'm also trying to run dokanctl commands in the machine where everything else is working, and those fail... sometimes. E.g., on a recently rebooted system, I try my app and works. Then run dokanctl /r a and uninstalls everything. Then dokanctl /i a and only installs the mounter but not the driver. Reboot, and run dokanctl /i d to install the driver. The message says it has failed, but the file system application works again.\nI'll try to see if I can reproduce it properly. Please, let me know if you know more details.\nAnd thank you.\n. For now I can confirm that on one computer the installation fails. When dokanctl /i a runs, Windows complains that it \"failed\" or \"closed\" (I don't know the original message, that copy is localized in Spanish), and the installer shows that it returned with exit 255. It complained about the lack of a MSVC DLL, so you were right about that.\n. @marinkobabic Thank you for the hint, I was not aware of that. I was going to implement myself the DokanServiceInstall. I get \"the service name is not valid\" error, though. :-(  With dokan.sys being there.\nI'll try to install the services from my own application and try to find the exact place were it fails. Let me know if there is more information I can provide.\nThanks!\nPS: I'll rename the issue. At this point is clear that it's a driver/service installation issue.\n. Phew, confirmed, in the other troubled system the problem (and the fix) was the same. :) I'll leave it open, but feel free to close if you think it's right. It's a problem with the installer only, after all.\n. Oops, wrong button. Sorry for the noise. And thank you.\n. @marinkobabic Thanks for your help! Respect the driver: as I understand it, we never had an issue with the driver by itself, it's just that dokanctl failed to do the CreateService call to install it. In the second machine where I had the issue, yes, it was Windows 7, and putting the library there fixed it. Since we'll have to ship it anyway alongside our executable, it's fine.\n. See issue #29. Latest installers (release candidates for 0.7.3) should have the fix, I think.\n. So far in my application I am closing the file handle (one internal to my application, not a real file system one) on CloseFile instead of Cleanup. This seems to work fine (although I am not using the file system very aggressively), but this is against what the documentation says, and what some messages on the mailing list said.\nAccording to the docs:\n\"If the user application calls CloseHandle and subsequently opens the same file, the CloseFile function of the file system application may not be invoked before the CreateFile API is called. This may cause a sharing violation error.\"\n. My application seems to work fine with what I said: close the handle in CloseFile instead. I don't know if in some conditions I can get a sharing violation error with it, though (that's what the original documentation said), but I don't know how to provoke that.\n. I've been doing my application with Dokan and OSXFUSE at the same time, and it's not an easy task. They have different semantics for some thing (e.g., in Dokan, CreateDirectory implies creating a directory and opening a file handle, while in FUSE the mkdir operation just creates it).\nLook at things one step at a time. Understand the Dokan API first. Try to create a simple file system where everything is in memory or hardcoded in the application (there is a \"hello world\" example for FUSE that fakes a file system with just one file hardcoded, and is really simple: very few operations are needed).\nLater on you can read how other bindings for FUSE or Dokan are done. Oh, and there is also the dokan-fuse bridge, but I haven't tried how well it works.\n. On my filesystem, I noticed that VLC choked and failed to play the file properly if the contents are not given to it fast enough. Is that your case? In my app, I fetch contents from a remote site, but cache them. After the contents are cached, VLC is happy (from the network is too slow in some videos at least). If your filesystem can't be very fast, try with a video with a very low resolution and bitrate, so it needs to read as little as possible. Just to confirm.\n. Well, my filesystem \"just\" maps remote files locally, but when it is downloaded, it is saved in a cache, so next access to the same file is much faster. If you were doing some kind of filesystem where you (for example) show the contents of compressed archives as a tree, then you probably don't have caching as an option, because it could duplicate a lot of data.\n. El Tuesday 11 August 2015, Arkadiusz Bulski escribi\u00f3:\n\n\nFindFiles is supposed to return all directory entries for further\n  filtering by dokan library? And is filtering entries prohibited in there?\n\n\nFindFiles is supposed to return all entries. FindFilesWithPattern can optimize \nthat, if I understood that, if you want to implement it yourself. If not, \nDokan will implement it for you from the resuls of FindFiles.\n\n\nMountpoint option \"MountPoint\" is supposed to demand that if C:... path\n  is provided then C: must necessarily be using NTFS? Back in the old days,\n  C drive could have been using FAT32 or whatever else.\n\n\nI think that Dokan needs to open the mount point as reparse point. That might \nnot be possible in FAT, but I might be wrong.\n. Unless I'm missing something, no; all entries.\n. Oh, I forgot: \"OpenDirectly\" is very likely a typo. :-)  Is OpenDirectory. There are only 3 operations that can create a file handle:\n- CreateFile (opens or creates files).\n- OpenDirectory.\n- CreateDirectory (that would be equivalent in Unix/FUSE to mkdir+opendir).\nAnd thank you for your edits to the wiki.\n. It's in the embedded manifest. Otherwise, yes, it could not ask for for permissions, so if you run it from a non-admin cmd.exe it would print normally. But the permissions are raised before the main function is run, so this can't be done. I have shortcut to run a cmd.exe as administrator, because sooner or later I face this problem, not only with dokanctl.exe.\n. \"it could not ask for permissions\" -> \"it could not ask for permissions for printing the version or the usage\", I meant. :)\n. Yeah, I remember the first C tutorials I saw that all ended with a getchar() or system(\"PAUSE\") to have that effect. It's ugly, but it could work too. :-)\n. I don't have old windows versions at hand, but I can assure you that on Windows 8 desktop.ini is attempted to be read (I don't know what could cause it to be written, though). Strangely, even on files that I'm reporting that are not directories (I get odd requests to foo.jpg/desktop.ini).\nWRT thumbs.db, according to Wikipedia since Windows Vista those are centralized. Again, I can only confirm for W8.\n. That was a quick merge. :-)\nI suppose you know a lot better than me why this is needed and good, so I can't really oppose. I think this is also one of the things that DokanX changed, right? Good that both projects are more aligned, just in case.\nSince I probably will need to port to the newer version, it will be good to have some minimum comments on porting. The changes in mirror.c are almost all needed. What surprises me, is that more or less you moved from the library to the user applications the win32 to NTSTATUS switch-case that maps one to other. I don't understand what is gained by that. :open_mouth: \nThe switch-case in create.c was in the wiki of my project because I wanted to know which status code I can return from CreateFile, so the user has a moderately useful error message. I suppose there isn't much that you can do, right? The OS will give generic error messages?\nThank you!\n. Oh, then that's excellent news! I reviewed the differences, but not understanding everything properly I thought there was still some checking of specific return values that were the ones supported. Thank you!\n. My filesystem is implemented using Qt (although that's not relevant per se, since the callback implementations are just C), and I can confirm that I get correct behaviour. I had to create or find online some helper functions to convert from Qt types to Windows native ones where those are not available, but that should be irrelevant for the size or the attributes.\n. El Wednesday 18 November 2015, Shi Yan escribi\u00f3:\n\nthe Mirror example is nice, but it's a bit cheating as it uses windows api\nto implement windows api. I hope there could be an example based on Qt or\nboost fs. \nI need to implement a remote filesystem. can't use windows api on linux and\nmac.\n\nYou'll have to return values to Dokan in the shape of the Windows API anyway. \nAnd if your project is cross-platform, you'll have to use the UNIX API on OS X \nor Linux. The examples for FUSE are pretty much the same: a file system that \nmaps values from a different part of the file system.\nI suggest you to subscribe to the Dokan mailing list/group and questions there \nif you have doubts. I'll try to answer. Otherwise I can try to write a wiki \npage with some words, but I'm too busy so I can't promise that.\n. I am packaging my application with WiX (because other developer started it, I'm quite ignorant about it), and attempting to include Dokan in it was a huge challenge (at least for me; as said, maybe because the previous lack of knowledge).\nI saw the source code for the current NSIS installer and I was very jealous: it's very simple in comparison.\nIf you manage to do it, you will receive my sincere thanks. :smile: If you do it in a way that can be reused for people who have to redistribute Dokan, even more! :heart:\n. Or 3: use Git LFS. It's supported on Github, and there are clients nicely installable on all platforms. It's an additional tool to install, though.\n. I wasn't aware of the hard limits. GitLab has a 10 GB limit, so I was spoiled by that. :(\n@Corillian The error you were having maybe it's due to forks being restricted. At least I think that was the case a while ago. Since the files aren't that big, maybe checking them directly in Git is fast enough and doesn't slow the repo too much.\n. FWIW, I've experienced a bug with OSXFUSE where fuse_loop/fuse_main block (as DokanMain does) but the file system is not mounted. Since the normal behaviour is \"only a non-zero return value is error\" means my application can't determine that there is an error to report it, or restart the file system. :disappointed:  If fuse had the reverse of destroy, it could provide a notification of the FS being ready at that point, so I think it could be useful in Dokan too.\nSince Dokan 0.8 will break binary compatibility, I would add the callback, even if it doesn't do anything yet, so in the future can do it without breaking it.\n. El Sunday 06 December 2015, Liryna escribi\u00f3:\n\n@suy , I have never used dokan_fuse myself :( I am sorry, I cannot help you\nfor it\n\nOh, no need to. I was mentioning an issue I experienced with OSXFUSE directly, \nso not Dokan related at all. Just a proof that, IMHO, the FUSE API has an \nimportant flaw (that thankfully is now addressed in #121 in Dokan!).\n. I agree that the current API is weird, and doesn't make much sense for some cases (my filesystem queries the network asynchronously too, so I have to workaround it by using promises and futures, and blocking the callback in DokanOperations). But note that is pretty easy to implement a filesystem in Dokan+FUSE this way.\nAlso, I'm not very familiar with the Windows API, and even if I were, I will have to use both Windows' and Unix's if I had to write a cross-platform filesystem. My current approach for that is using a cross platform library that isolates me from that as much as possible.\nAn alternative would be to document the protocol to talk to the kernel device, am I right? FUSE is considering it and there is already a protocol sketch.\nThat would be helpful for people who want to use Dokan with any language.\n. ",
    "dimov-cz": "Note: This patch is included in current DokanX/master already.\n. Try compatibility mode\n. It works, greate test suite!\n. I have created new repo with this code for testing and sharing purposes https://github.com/dimov-cz/winfstest/tree/master\nI think this or something like this shoud be part of dokan project because this kind of testing can improve quality of all Dokan related projects.\nbtw. mirror.exe is not passing all the tests ;)\n. I think that this can be related to sharemode==0 - second attemp to open same resource shoud fail. \nIn the test above, are tmp1 and tmp2 different and usable for operations? @Liryna \n. Avast related, to reproduce:\n1) install Win 8.1 Pro x64 (in my case in Virtual Box)\n2) Dokan 1.0.0 RC1 (DBG with Redist)\n2) Install Avast\n3) mirror /r c:\\SOMEFOLDER /l X (as admin or not, doesn't matter)\n4) try to access X and BSOD is here\nDisabling Avast is not enough, after uninstall problem disappered.\n. Damn, i missed this. Yes, with this version seem to work well. So this seem to be solved. Good job.\n. Ops, my fault, i didn't notice options button. Thanks \n. Sorry, but not for me, with latest snap. Cloning is ok. But commit fails. The error is different on current master (3babcb): fatal: mmap failed: Invalid argument\n. \ud83d\udc4d  Great news, thanks to everyone!. ",
    "necrose99": "its no bigg'y , transifex.com or other tm's I've used with many other projects, its more passive , ie push a pot and or docs and let it crowd source/volunteers do so..  integrate at leisure. \nthus you can focus more on the core product. , volunteers can translate at their leisure also \n. ",
    "MaMic": "Ah, I see, sorry for my confusion.\nSo one has to unmount by using the same string as used in mount ... ok I think I understand now.\nSo DokanUnmount is actually pretty useless, but must persist because of compatibility ... and because of that I think it should be left as it was the original way.\nBut in short ... it's better to always use RemoveMountPoint, right?\n. Yes, all right, but I feel that somehow for compatibility and symmetry reasons, the single character (drive letter) unmount should be converted to use a mount point of the form L\"M:\\\", as it was before this commit.\nMy experiments showed that in any case exactly the same string has to be used in RemoveMountPoint, as it was specified during the mount operation. Even upper - and lowercase have influence, which is also ignored currently.\nIn mirror.c a single character is accepted in the command line arguments, but is converted to the form L\"M:\", so yes, if for this client the Unmount('M') leads to RemoveMountPoint(L\"M:\"), that seems to work, but what if the client just forwards the 'M' as L\"M\", without the ':', the Unmount('M') would fail. So each try to simplify things with such kind of helper do confuse more and more, because not all cases or intentions of the user can be covered.\nAnother hint for keeping backward compatibility can be found here e.g. in dokan.c line 191, where older versions used a single letter mount point that is altered to the same form L\"M:\\\".\nSo for maximum backward compatibility and simplified user experience I would suggest to convert each single character input (whether in mount, unmount or anywhere else) by appending a colon sign and backslash and take the upper case string of that as the new mount point of the form L\"M:\\\"\n. The both variants __declspec and .def file can lead to the same result, but it does not need to. By using the .def file you can export the mangling name, plain name or even no name. Using __declspec is a simple way to even export whole complex c++ classes, but mangling names are nearly necessary then (what is no problem, as long as you just link the .lib using the same compiler that was used building the library).\n__declspec(dllexport) __stdcall under x86 always leads to mangling names, even with export \"C\", the reason for that is the calling convention. By using __cdecl, we would have the plain name. This seems also to be the reason for Microsoft to do it that way, they use __stdcall calling conventions and .def files for the Win32 API.\nSo what is the difference in the x64 build? Quite simple, __sdtcall is accepted by the x64 compiler, but ignored! Here __fastcall is always used, what again turns to another behavior for our case.\nAt least as far as I understand, but must not necessarily be true, since I'm not really expert in the field ;-)\n. ",
    "TonyGravagno": "I posted a note there and hope to continue discussions. Thanks!\nhttps://groups.google.com/d/msg/dokan/bVog4vz9Rzo/rFWowBNULFwJ\n. ",
    "kallekataja": "Thank you. Got it to build now, no problem. I feel almost stupid to have asked - it's one of those things that after asking, you then get it to work flawlessly.\nAnyway, thanks for all the efforts so far, hope I can chip in soon enough with any issues!\n. ",
    "voltagex": "Sorry, didn't see the other repos - for anyone else looking they're in https://github.com/dokan-dev/dokan-dotnet\n. I think I also got this crash. Is there any quick change to Dokan that I can make to make this cause an error rather than a BSOD?\nhttp://www.voltagex.org/081615-16812-01.dmp but I may need to move this file. No full dump captured by the look of it.\nI caused this BSOD by running the project in http://voltagex.org/DokanTest.7z a couple of times.\n. Looks like the crash corrupted some files.\nI'm away from my computer today, but I'll get back to you tomorrow.\n. Download DokanTest.7z again, I've fixed that file. I don't think the current version will crash.\nTry this: mount a drive as Z:, mount it again (fails), unmount Z: and mount again (crash)\n. Even with only a few things implemented, Dokan shouldn't cause a BSOD,\nright?\nOn 18 Aug 2015 5:27 am, \"Liryna\" notifications@github.com wrote:\n\nBut @voltagex https://github.com/voltagex ... you have implemented\nnothing [image: :neutral_face:].\nPlease provide a crash report of dokan when you will have finished your\nimplementation.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/26#issuecomment-132192473.\n. I'm sorry for causing trouble here. I can't cause the crash with my exe,\nbut I can cause it by repeatedly unmounting and mounting the drive.\n. Reproduced without the debugger. (updated this note to add unmounting step)\n- Mount a drive - any drive, and make sure your application is still running.\n- Open another cmd.exe and run cd z:\\ (or whatever drive)\n- Restart the DokanMounter service\n- Make your application unmount the drive\n- Attempt to access z:\\ again.\n- Wait for the crash.\n\n```\nPROCESS_NAME:  cmd.exe\nCURRENT_IRQL:  0\nANALYSIS_VERSION: 6.3.9600.17336 (debuggers(dbg).150226-1500) amd64fre\nLAST_CONTROL_TRANSFER:  from fffff801a0b19f5c to fffff801a09c59a0\nSTACK_TEXT:\nffffd001730cd368 fffff801a0b19f5c : 00000000000000c2 0000000000000007 0000000000001200 0000000004070081 : nt!KeBugCheckEx\nffffd001730cd370 fffff801a0a10fbb : ffffe00185722990 ffffe0018406b6f0 00000000c0000120 ffffd00100000007 : nt!ExDeferredFreePool+0x6ec\nffffd001730cd460 fffff801a0cb508f : 0000000000000085 ffffd001730cd7b0 00000000c0000120 ffffe0018406b6f0 : nt! ?? ::FNODOBFM::string'+0x3b10b\nffffd001730cd490 fffff801a0c60c39 : ffffc0004a8146b8 ffffc0004a8146b8 ffffc0004bc110f0 ffffe0018503fc20 : nt!IopParseDevice+0xbbf\nffffd001730cd6b0 fffff801a0c5ea63 : 0000000000000000 ffffd001730cd8a8 ffffe00100000040 ffffe001840aef20 : nt!ObpLookupObjectName+0x6b9\nffffd001730cd830 fffff801a0cd77ab : ffffe00100000001 ffffe001853810a8 0000000000000001 0000000000000020 : nt!ObOpenObjectByName+0x1e3\nffffd001730cd960 fffff801a0cd73b8 : 000000a41f5ff508 000000a400100020 000000a41f5ff488 fffff80100001000 : nt!IopCreateFile+0x36b\nffffd001730cda00 fffff801a09d11b3 : fffff6fb7dbed7f8 fffff6fb7daffed0 fffff6fb5ffdaa98 fffff6bffb5539f0 : nt!NtOpenFile+0x58\nffffd001730cda90 00007ffabd750f7a : 0000000000000000 0000000000000000 0000000000000000 0000000000000000 : nt!KiSystemServiceCopyEnd+0x13\n000000a41f5ff418 0000000000000000 : 0000000000000000 0000000000000000 0000000000000000 0000000000000000 : 0x00007ffabd750f7a\n```\n. It looks like DokanUninstall.exe was never created/installed. This leaves the Dokan install in a completely broken state - the installer will not allow a reinstallation.\n. Yeah, I worked this out after looking at the NSIS file. I can't reproduce\nthis error at the moment but I think it happens if you don't have the VC++\nredist install and you click OK through the prompt\nOn 23 August 2015 at 06:18, Liryna notifications@github.com wrote:\n\nReopened #44 https://github.com/dokan-dev/dokany/issues/44.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/44#event-389776109.\n. Whoa, didn't see CCleaner there before. I'll disable it - I wonder what it tried to access?\n. ```\n0: kd> !analyze -v\n\n\n\n*\nBugcheck Analysis                                    *\n*\n\n\nPAGE_FAULT_IN_NONPAGED_AREA (50)\nInvalid system memory was referenced.  This cannot be protected by try-except,\nit must be protected by a Probe.  Typically the address is just plain bad or it\nis pointing at freed memory.\nArguments:\nArg1: ffffffffffffffe9, memory referenced.\nArg2: 0000000000000000, value 0 = read operation, 1 = write operation.\nArg3: fffff802d7d07c8f, If non-zero, the instruction address which referenced the bad memory\n    address.\nArg4: 0000000000000000, (reserved)\nDebugging Details:\nCould not read faulting driver name\nREAD_ADDRESS: unable to get nt!MmSpecialPoolStart\nunable to get nt!MmSpecialPoolEnd\nunable to get nt!MmPagedPoolEnd\nunable to get nt!MmNonPagedPoolStart\nunable to get nt!MmSizeOfNonPagedPoolInBytes\n ffffffffffffffe9 \nFAULTING_IP: \nnt!ObQueryNameStringMode+5f\nfffff802`d7d07c8f 410fb64618      movzx   eax,byte ptr [r14+18h]\nMM_INTERNAL_CODE:  0\nCUSTOMER_CRASH_COUNT:  1\nDEFAULT_BUCKET_ID:  WIN8_DRIVER_FAULT\nBUGCHECK_STR:  AV\nPROCESS_NAME:  explorer.exe\nCURRENT_IRQL:  2\nANALYSIS_VERSION: 6.3.9600.17336 (debuggers(dbg).150226-1500) amd64fre\nTRAP_FRAME:  ffffd00027042fa0 -- (.trap 0xffffd00027042fa0)\nNOTE: The trap frame does not contain all registers.\nSome register values may be zeroed or incorrect.\nrax=00ffffffffffffff rbx=0000000000000000 rcx=0000000000000001\nrdx=00000000000000ff rsi=0000000000000000 rdi=0000000000000000\nrip=fffff802d7d07c8f rsp=ffffd00027043130 rbp=0000000000000001\n r8=00000000000000fe  r9=ffffd000270432c8 r10=fffff80130225b80\nr11=ffffd00027043398 r12=0000000000000000 r13=0000000000000000\nr14=0000000000000000 r15=0000000000000000\niopl=0         ov up ei pl nz na po cy\nnt!ObQueryNameStringMode+0x5f:\nfffff802d7d07c8f 410fb64618      movzx   eax,byte ptr [r14+18h] ds:0000000000000018=??\nResetting default scope\nLAST_CONTROL_TRANSFER:  from fffff802d7a0f04a to fffff802d79bed00\nSTACK_TEXT:\nffffd00027042d58 fffff802d7a0f04a : 0000000000000050 ffffffffffffffe9 0000000000000000 ffffd00027042fa0 : nt!KeBugCheckEx\nffffd00027042d60 fffff802d7890536 : 0000000000000000 0000000000000000 ffffd00027042fa0 0000000000000002 : nt! ?? ::FNODOBFM::string'+0x4174a\nffffd00027042e50 fffff802d79c7dbd : 0000000000000000 ffffe001ccb10001 0000000000000006 ffffe00100000006 : nt!MmAccessFault+0x696\nffffd00027042fa0 fffff802d7d07c8f : ffffd00027043376 ffffc0018356c060 ffffc0018356c060 ffffd00027043200 : nt!KiPageFault+0x13d\nffffd00027043130 fffff802d7d9b126 : 0000000000000001 ffffe001cd6de030 00000000000000fe ffffd000270432c8 : nt!ObQueryNameStringMode+0x5f\nffffd00027043250 fffff8013023954c : ffffd00027043660 0000000000000001 ffffc0018356c060 fffff802d7917a4d : nt!ObQueryNameString+0xe\nffffd00027043290 fffff80130238322 : 0000000000000000 fffff802d791718f 0000000000000000 0000000000000000 : FLTMGR!FltpGetObjectName+0x30\nffffd000270432c0 fffff80130232d8c : ffffe001c91da040 ffffe001c540bb70 0000000000000000 0000000000000000 : FLTMGR!FltpFsControlMountVolume+0xa2\nffffd000270433a0 fffff802d7d54ae2 : fffff802d7bb0540 0000000000000000 ffffe001cc1b6800 ffffe001cc1b6800 : FLTMGR!FltpFsControl+0x14c\nffffd00027043400 fffff802d7939364 : ffffe001c540bb70 ffffd00027043c00 ffffe001c540bb70 ffffd000270436d0 : nt!IopMountVolume+0x35a\nffffd00027043680 fffff802d7c9d367 : 0000000000000045 0000000000000000 ffffd000270439e0 0000000000000000 : nt!IopCheckVpbMounted+0x154\nffffd000270436d0 fffff802d7c989d1 : ffffc0017dc2a718 ffffc0017dc2a718 ffffd000270439e0 ffffe001c540bb40 : nt!IopParseDevice+0x4a7\nffffd000270438e0 fffff802d7cf738c : ffffe001cc3d4401 ffffd00027043b08 ffffe00100000040 ffffe001c520f440 : nt!ObpLookupObjectName+0x711\nffffd00027043a80 fffff802d7d7b6eb : ffffd00100000001 00000000041fe050 00000000104a3ab4 00000000000000b8 : nt!ObOpenObjectByName+0x1ec\nffffd00027043bb0 fffff802d79c9363 : ffffe001cc1b6800 00000000000003e8 ffffe001cc1b6800 ffffd00027043ec0 : nt!NtQueryAttributesFile+0x13b\nffffd00027043e40 00007fffe90e38ca : 0000000000000000 0000000000000000 0000000000000000 0000000000000000 : nt!KiSystemServiceCopyEnd+0x13\n00000000041fdfe8 0000000000000000 : 0000000000000000 0000000000000000 0000000000000000 0000000000000000 : 0x00007fffe90e38ca\nSTACK_COMMAND:  kb\nFOLLOWUP_IP: \nnt!ObQueryNameStringMode+5f\nfffff802`d7d07c8f 410fb64618      movzx   eax,byte ptr [r14+18h]\nSYMBOL_STACK_INDEX:  4\nSYMBOL_NAME:  nt!ObQueryNameStringMode+5f\nFOLLOWUP_NAME:  MachineOwner\nMODULE_NAME: nt\nIMAGE_NAME:  ntkrnlmp.exe\nDEBUG_FLR_IMAGE_TIMESTAMP:  55c9bcb6\nIMAGE_VERSION:  10.0.10240.16431\nBUCKET_ID_FUNC_OFFSET:  5f\nFAILURE_BUCKET_ID:  AV_nt!ObQueryNameStringMode\nBUCKET_ID:  AV_nt!ObQueryNameStringMode\nANALYSIS_SOURCE:  KM\nFAILURE_ID_HASH_STRING:  km:av_nt!obquerynamestringmode\nFAILURE_ID_HASH:  {9eb41a12-81ba-71f6-0c3d-31180b493b51}\nFollowup: MachineOwner\n```\nI don't think it was CCleaner after all, but I can't reproduce this reliably. It doesn't happen on Server 2012 Core (my VM), only on Windows 10. I had exited my filesystem exe but still had a command line open at T:. In Server 2012, doing dir causes The system cannot find the file specified but on Windows 10 it causes a hang and a crash.\nI also managed to get the BSOD in #26 again but let's solve this one first.\n. OK, I might have reproduced it in a strange way.\n- Mount a drive using mirror.exe\n- Open a command prompt and cd T:\\\n- Attach windbg to mirror.exe so it halts\n- dir T:\\\n- Exit windbg\n- dir T:\\\n- Crash\nIf it doesn't happen the first time, it may happen the second, and there might be a fair delay before the crash\n. @Liryna sorry I hadn't finished writing the comment, I am testing now.\nEdit: see https://github.com/dokan-dev/dokany/issues/46#issuecomment-133737490\n. What does all this mean for the error that I am getting?\n. Any updates on this?\n. @Liryna 0.8 RC2 - I still get a BSOD, but it really doesn't look like it was caused by Dokan! Will post another issue just in case\n. ",
    "landrix": "Strangely, I have found the error. if the mountet path contains \"share\" only ones at the end, mounting fails:\nD:\\share\nD:\\someone\\share\nthis works\nD:\\share\\empty\nD:\\share\\share\nD:\\someone\\share\\share\n. there must be another problem. now a can't mount anything more. I look further.\n. after a reboot, now it works also with \"share\", i have no idea, you?\nyou can close this issue, if you want\n. FYI, with v0.7.3-RC just for a test. i mount folder with the delphi-mirror-sample and shutdown my pc (Win8.1 x64) windows crash (no BSOD). after restart i get a memory dump.\ni think, if i would manage WM_QUERYENDSESSION / WM_ENDSESSION, it should unmount correctly, i will check this tomorrow\ni don't know, whether there are other ways in the driver, to prevent this behavior\n. @marinkobabic i will test only drivers from this repo\n. ? whats the diffent between\n1- install Dokan 0.6 (required by winsshfs)\nand\n3- install dokan x86 driver provided by marinkobacic\nisn't Dokan 0.6 a driver?\n. i think this one \nhttps://github.com/marinkobabic/dokanx/tree/Windows8DeleteIssue\n. According to my modest knowledge: Would it bring something to take a look at the stable system driver of TrueCrypt?\n. You need the Visual C++ redistribuables for Visual Studio 2013 \nfrom here\nhttps://www.microsoft.com/de-DE/download/details.aspx?id=40784\nhttps://github.com/dokan-dev/dokany/wiki/Installation\n. great, thanks :)\n. ",
    "don-Pardon": "Yep, you get it right.\nI've also thought about force unmount when service is being restarted, it would solve the problem. Moreover, is there any use-case for DokanMount service being restarted and mounted FS being run?\nOn the other hand service restart doesn't affect mounted FS, it is still mounted and is working properly, so why turn it off?..\n. Alright, I agree, cleaning is a preferable solution.\nThe other problem is service being killed or when service simply crashes. The ping system sounds good (and I didn't found anything similar in dokan yet), but we need to take into account that FS can perform some heavy operations - like downloading some chunk of data for ReadFile request, so FS will be mute for ping requests for some time.\n\nI have never tested such case\n\nYou can try =) but don't forget to do dokan_control.exe /u Z: /f when you finished =)\n. I've been testing with that option turned on. The thing is - when auto unmount is triggered, DokanService searches for mount entry and if service was restarted, appropriate record won't be found and DokanControlUnmount won't be called. It would be called if DOKAN_CONTROL_OPTION_FORCE_UNMOUNT option was specified (like in dokan_control /u Z: /f call).\nSo, another thought comes up - if KEEP_ALIVE was specified, use FORCE_UNMOUNT option. But I'm not sure that it wouldn't lead to other issues and moreover \"KEEP_ALIVE\" and \"FORCE_UNMOUNT\" are kind of opposite ideas.\n. ",
    "viciousviper": "don-Pardon's results notwithstanding I can report that dokany 0.7.3-RC3 greatly reduces BSODs on my machine.\nI still get crashes whenever I leave a mount point open after aborting a DokanNet.Dokan instance in the debugger and try to mount for a second time - but that's fair enough. With 0.7.3-RC2 the BSOD appeared right after aborting the debug session.\n. There you go.\nThis happened last night with v0.7.3-RC4 while debugging a Dokan.Net-application in VS2015RC:\n-- removed misleading .dmp from devenv.exe\n. Well, yes, just as I wrote above. So far I've only witnessed BSODs after I aborted a VS debugging session on my still very incomplete Dokan.Net application.\nI'll see if I can make my machine crash without the help of VS :-)\n. You certainly have a point there. I'll probably get around to upgrading my VS to 2015 final in the next couple of days. However, while I did see my share of exceptions and crashes inside VS 2015 RC I've never had regular BSODs until I started to fiddle with dokan.\nNo offense intended - I'm just trying to help nail down the BSOD source. \nIn the meantime, how's this:\n\nMicrosoft (R) Windows Debugger Version 6.3.9600.17336 AMD64\nCopyright (c) Microsoft Corporation. All rights reserved.\nLoading Dump File [C:\\Windows\\MEMORY.DMP]\nKernel Bitmap Dump File: Only kernel address space is available\n*** Symbol Path validation summary **\nResponse                         Time (ms)     Location\nDeferred                                       SRV_C:\\Windows\\symbol_cache_http://msdl.microsoft.com/download/symbols\nSymbol search path is: SRV_C:\\Windows\\symbol_cache_http://msdl.microsoft.com/download/symbols\nExecutable search path is: \nWindows 8 Kernel Version 9600 MP (8 procs) Free x64\nProduct: WinNt, suite: TerminalServer SingleUserTS\nBuilt by: 9600.17736.amd64fre.winblue_r9.150322-1500\nMachine Name:\nKernel base = 0xfffff8037b210000 PsLoadedModuleList = 0xfffff8037b4e9850\nDebug session time: Thu Jul 30 22:35:28.516 2015 (UTC + 2:00)\nSystem Uptime: 0 days 0:39:30.251\nLoading Kernel Symbols\n...............................................................\n................................................................\n................................................................\n.............\nLoading User Symbols\nLoading unloaded module list\n............\n\n*                                                                             \n                        Bugcheck Analysis                                    \n                                                                             *\n\nUse !analyze -v to get detailed debugging information.\nBugCheck 7E, {ffffffffc0000005, fffff8037b2c896b, ffffd001687af758, ffffd001687aef60}\n*** ERROR: Module load completed but symbols could not be loaded for dokan.sys\nProbably caused by : dokan.sys ( dokan+2523 )\nFollowup: MachineOwner\n2: kd> !analyze -v\n\n*                                                                             \n                        Bugcheck Analysis                                    \n                                                                             *\n\nSYSTEM_THREAD_EXCEPTION_NOT_HANDLED (7e)\nThis is a very common bugcheck.  Usually the exception address pinpoints\nthe driver/function that caused the problem.  Always note this address\nas well as the link date of the driver/image that contains this address.\nArguments:\nArg1: ffffffffc0000005, The exception code that was not handled\nArg2: fffff8037b2c896b, The address that the exception occurred at\nArg3: ffffd001687af758, Exception Record Address\nArg4: ffffd001687aef60, Context Record Address\nDebugging Details:\nEXCEPTION_CODE: (NTSTATUS) 0xc0000005 - The instruction at 0x%08l referenced memory at 0x%08lx. The memory could not be \"%s\".\nFAULTING_IP: \nnt!IopfCompleteRequest+c1b\nfffff803`7b2c896b 488b4018        mov     rax,qword ptr [rax+18h]\nEXCEPTION_RECORD:  ffffd001687af758 -- (.exr 0xffffd001687af758)\nExceptionAddress: fffff8037b2c896b (nt!IopfCompleteRequest+0x0000000000000c1b)\n   ExceptionCode: c0000005 (Access violation)\n  ExceptionFlags: 00000000\nNumberParameters: 2\n   Parameter[0]: 0000000000000000\n   Parameter[1]: 0000000000000019\nAttempt to read from address 0000000000000019\nCONTEXT:  ffffd001687aef60 -- (.cxr 0xffffd001687aef60;r)\nrax=0000000000000001 rbx=ffffe00107d5d910 rcx=0000000000000884\nrdx=0000000000000000 rsi=0000000000000000 rdi=0000000000000001\nrip=fffff8037b2c896b rsp=ffffd001687af990 rbp=ffffd001687afa90\n r8=0000000000000001  r9=ffffe00107cb2650 r10=0000000000000000\nr11=ffffd001687afac8 r12=00000000a000000c r13=0000000000000000\nr14=ffffe00108a19200 r15=00000000a0000003\niopl=0         nv up ei pl nz na pe nc\ncs=0010  ss=0018  ds=002b  es=002b  fs=0053  gs=002b             efl=00010202\nnt!IopfCompleteRequest+0xc1b:\nfffff8037b2c896b 488b4018        mov     rax,qword ptr [rax+18h] ds:002b:0000000000000019=????????????????\nLast set context:\nrax=0000000000000001 rbx=ffffe00107d5d910 rcx=0000000000000884\nrdx=0000000000000000 rsi=0000000000000000 rdi=0000000000000001\nrip=fffff8037b2c896b rsp=ffffd001687af990 rbp=ffffd001687afa90\n r8=0000000000000001  r9=ffffe00107cb2650 r10=0000000000000000\nr11=ffffd001687afac8 r12=00000000a000000c r13=0000000000000000\nr14=ffffe00108a19200 r15=00000000a0000003\niopl=0         nv up ei pl nz na pe nc\ncs=0010  ss=0018  ds=002b  es=002b  fs=0053  gs=002b             efl=00010202\nnt!IopfCompleteRequest+0xc1b:\nfffff8037b2c896b 488b4018        mov     rax,qword ptr [rax+18h] ds:002b:0000000000000019=????????????????\nResetting default scope\nPROCESS_NAME:  System\nCURRENT_IRQL:  0\nERROR_CODE: (NTSTATUS) 0xc0000005 - The instruction at 0x%08l referenced memory at 0x%08lx. The memory could not be \"%s\".\nEXCEPTION_PARAMETER1:  0000000000000000\nEXCEPTION_PARAMETER2:  0000000000000019\nREAD_ADDRESS: unable to get nt!MmNonPagedPoolStart\nunable to get nt!MmSizeOfNonPagedPoolInBytes\n0000000000000019 \nFOLLOWUP_IP: \ndokan+2523\nfffff800`de02e523 4883c428        add     rsp,28h\nBUGCHECK_STR:  AV\nDEFAULT_BUCKET_ID:  NULL_CLASS_PTR_DEREFERENCE\nANALYSIS_VERSION: 6.3.9600.17336 (debuggers(dbg).150226-1500) amd64fre\nLAST_CONTROL_TRANSFER:  from fffff800de02e523 to fffff8037b2c896b\nSTACK_TEXT:\nffffd001687af990 fffff800de02e523 : ffffe0011026f080 ffffe00108a19200 ffffe00108a19200 ffffd00100000000 : nt!IopfCompleteRequest+0xc1b\nffffd001687afad0 fffff800de031f7c : 0000000000025090 ffffe00108a19260 fffffff600000002 fffff80000000006 : dokan+0x2523\nffffd001687afb00 fffff800de031c3d : ffffe00108a191d0 0000000000000000 ffffe00107177501 00007ff800000000 : dokan+0x5f7c\nffffd001687afb60 fffff8037b31036c : 0000000000000000 ffffe0010b985880 ffffe0010b985880 fffff90140819b10 : dokan+0x5c3d\nffffd001687afc00 fffff8037b3672c6 : ffffd001657e4180 ffffe0010b985880 ffffd001657f03c0 0000000000000000 : nt!PspSystemThreadStartup+0x58\nffffd001687afc60 0000000000000000 : ffffd001687b0000 ffffd001687aa000 0000000000000000 0000000000000000 : nt!KiStartSystemThread+0x16\nSYMBOL_STACK_INDEX:  1\nSYMBOL_NAME:  dokan+2523\nFOLLOWUP_NAME:  MachineOwner\nMODULE_NAME: dokan\nIMAGE_NAME:  dokan.sys\nDEBUG_FLR_IMAGE_TIMESTAMP:  55b8993b\nSTACK_COMMAND:  .cxr 0xffffd001687aef60 ; kb\nFAILURE_BUCKET_ID:  AV_dokan+2523\nBUCKET_ID:  AV_dokan+2523\nANALYSIS_SOURCE:  KM\nFAILURE_ID_HASH_STRING:  km:av_dokan+2523\nFAILURE_ID_HASH:  {9d91f95c-aa94-4f23-2d77-0f802f2a29b4}\nFollowup: MachineOwner\n. I'd be happy to help if someone (Maxhy?) could provide me with the .pdb for dokan.sys 0.7.3-RC4.\n. Ok, updated to your special build. Now I'll have to see if I can crash nicely again #-)\n. Another one bites the dust ...\nMicrosoft (R) Windows Debugger Version 6.3.9600.17336 AMD64\nCopyright (c) Microsoft Corporation. All rights reserved.\nLoading Dump File [C:\\Windows\\MEMORY.DMP]\nKernel Bitmap Dump File: Only kernel address space is available\n*** Symbol Path validation summary **\nResponse                         Time (ms)     Location\nOK                                             D:\\Temp\\Source\nDeferred                                       SRV_C:\\Windows\\symbol_cache_http://msdl.microsoft.com/download/symbols\nSymbol search path is: D:\\Temp\\Source;SRV_C:\\Windows\\symbol_cache_http://msdl.microsoft.com/download/symbols\nExecutable search path is: \nWindows 8 Kernel Version 9600 MP (8 procs) Free x64\nProduct: WinNt, suite: TerminalServer SingleUserTS\nBuilt by: 9600.17736.amd64fre.winblue_r9.150322-1500\nMachine Name:\nKernel base = 0xfffff80082e19000 PsLoadedModuleList = 0xfffff800830f2850\nDebug session time: Wed Aug  5 00:34:07.875 2015 (UTC + 2:00)\nSystem Uptime: 0 days 0:23:19.610\nLoading Kernel Symbols\n...............................................................\n................................................................\n................................................................\n..............\nLoading User Symbols\nLoading unloaded module list\n.............\n\n\n**                        Bugcheck Analysis                                    *\n\n\nUse !analyze -v to get detailed debugging information.\nBugCheck 7E, {ffffffffc0000005, fffff80082ed196b, ffffd00024215758, ffffd00024214f60}\nProbably caused by : dokan.sys ( dokan!DokanCompleteIrpRequest+2b )\nFollowup: MachineOwner\n2: kd> !analyze -v\n\n\n**                        Bugcheck Analysis                                    *\n\n\nSYSTEM_THREAD_EXCEPTION_NOT_HANDLED (7e)\nThis is a very common bugcheck.  Usually the exception address pinpoints\nthe driver/function that caused the problem.  Always note this address\nas well as the link date of the driver/image that contains this address.\nArguments:\nArg1: ffffffffc0000005, The exception code that was not handled\nArg2: fffff80082ed196b, The address that the exception occurred at\nArg3: ffffd00024215758, Exception Record Address\nArg4: ffffd00024214f60, Context Record Address\nDebugging Details:\nEXCEPTION_CODE: (NTSTATUS) 0xc0000005 - The instruction at 0x%08lx referenced memory at 0x%08lx. The memory could not be \"%s\".\nFAULTING_IP: \nnt!IopfCompleteRequest+c1b\nfffff800`82ed196b 488b4018        mov     rax,qword ptr [rax+18h]\nEXCEPTION_RECORD:  ffffd00024215758 -- (.exr 0xffffd00024215758)\nExceptionAddress: fffff80082ed196b (nt!IopfCompleteRequest+0x0000000000000c1b)\n   ExceptionCode: c0000005 (Access violation)\n  ExceptionFlags: 00000000\nNumberParameters: 2\n   Parameter[0]: 0000000000000000\n   Parameter[1]: 0000000000000019\nAttempt to read from address 0000000000000019\nCONTEXT:  ffffd00024214f60 -- (.cxr 0xffffd00024214f60;r)\nrax=0000000000000001 rbx=ffffe00194206ee0 rcx=0000000000000884\nrdx=0000000000000000 rsi=0000000000000000 rdi=0000000000000001\nrip=fffff80082ed196b rsp=ffffd00024215990 rbp=ffffd00024215a90\n r8=0000000000000001  r9=ffffe001943dc820 r10=0000000000000000\nr11=ffffd00024215ac8 r12=00000000a000000c r13=0000000000000000\nr14=ffffe0019254f700 r15=00000000a0000003\niopl=0         nv up ei pl nz na pe nc\ncs=0010  ss=0018  ds=002b  es=002b  fs=0053  gs=002b             efl=00010202\nnt!IopfCompleteRequest+0xc1b:\nfffff80082ed196b 488b4018        mov     rax,qword ptr [rax+18h] ds:002b:0000000000000019=????????????????\nLast set context:\nrax=0000000000000001 rbx=ffffe00194206ee0 rcx=0000000000000884\nrdx=0000000000000000 rsi=0000000000000000 rdi=0000000000000001\nrip=fffff80082ed196b rsp=ffffd00024215990 rbp=ffffd00024215a90\n r8=0000000000000001  r9=ffffe001943dc820 r10=0000000000000000\nr11=ffffd00024215ac8 r12=00000000a000000c r13=0000000000000000\nr14=ffffe0019254f700 r15=00000000a0000003\niopl=0         nv up ei pl nz na pe nc\ncs=0010  ss=0018  ds=002b  es=002b  fs=0053  gs=002b             efl=00010202\nnt!IopfCompleteRequest+0xc1b:\nfffff80082ed196b 488b4018        mov     rax,qword ptr [rax+18h] ds:002b:0000000000000019=????????????????\nResetting default scope\nPROCESS_NAME:  System\nCURRENT_IRQL:  0\nEXCEPTION_CODE: (NTSTATUS) 0xc0000005 - The instruction at 0x%08lx referenced memory at 0x%08lx. The memory could not be \"%s\".\nEXCEPTION_PARAMETER1:  0000000000000000\nEXCEPTION_PARAMETER2:  0000000000000019\nREAD_ADDRESS: unable to get nt!MmNonPagedPoolStart\nunable to get nt!MmSizeOfNonPagedPoolInBytes\n 0000000000000019 \nFOLLOWUP_IP: \ndokan!DokanCompleteIrpRequest+2b [d:\\islog\\dev\\app\\tmp\\dokany\\sys\\dokan.c @ 487]\nfffff801`47878523 4883c428        add     rsp,28h\nBUGCHECK_STR:  AV\nDEFAULT_BUCKET_ID:  NULL_CLASS_PTR_DEREFERENCE\nANALYSIS_VERSION: 6.3.9600.17336 (debuggers(dbg).150226-1500) amd64fre\nLAST_CONTROL_TRANSFER:  from fffff80147878523 to fffff80082ed196b\nSTACK_TEXT:\nffffd00024215990 fffff80147878523 : 0000000000000000 fffff80082edb800 0000000000000000 0000000000000000 : nt!IopfCompleteRequest+0xc1b\nffffd00024215ad0 fffff8014787bf7c : 0000000000015de7 ffffe0019254f7f0 0000000000000000 fffff8014787bba8 : dokan!DokanCompleteIrpRequest+0x2b [d:\\islog\\dev\\app\\tmp\\dokany\\sys\\dokan.c @ 487]\nffffd00024215b00 fffff8014787bc3d : ffffe0019254f760 0000000000000000 ffffe00188196001 00007ff800000000 : dokan!ReleaseTimeoutPendingIrp+0x1b0 [d:\\islog\\dev\\app\\tmp\\dokany\\sys\\timeout.c @ 202]\nffffd00024215b60 fffff80082f1936c : 0000000000000000 ffffe00194c93300 ffffe00194c93300 fffff901412216b0 : dokan!DokanTimeoutThread+0x95 [d:\\islog\\dev\\app\\tmp\\dokany\\sys\\timeout.c @ 300]\nffffd00024215c00 fffff80082f702c6 : ffffd0003d7ea180 ffffe00194c93300 ffffd0003d7f63c0 0000000000000000 : nt!PspSystemThreadStartup+0x58\nffffd00024215c60 0000000000000000 : ffffd00024216000 ffffd00024210000 0000000000000000 0000000000000000 : nt!KiStartSystemThread+0x16\nFAULTING_SOURCE_LINE:  d:\\islog\\dev\\app\\tmp\\dokany\\sys\\dokan.c\nFAULTING_SOURCE_FILE:  d:\\islog\\dev\\app\\tmp\\dokany\\sys\\dokan.c\nFAULTING_SOURCE_LINE_NUMBER:  487\nSYMBOL_STACK_INDEX:  1\nSYMBOL_NAME:  dokan!DokanCompleteIrpRequest+2b\nFOLLOWUP_NAME:  MachineOwner\nMODULE_NAME: dokan\nIMAGE_NAME:  dokan.sys\nDEBUG_FLR_IMAGE_TIMESTAMP:  55bb26f2\nSTACK_COMMAND:  .cxr 0xffffd00024214f60 ; kb\nBUCKET_ID_FUNC_OFFSET:  2b\nFAILURE_BUCKET_ID:  AV_dokan!DokanCompleteIrpRequest\nBUCKET_ID:  AV_dokan!DokanCompleteIrpRequest\nANALYSIS_SOURCE:  KM\nFAILURE_ID_HASH_STRING:  km:av_dokan!dokancompleteirprequest\nFAILURE_ID_HASH:  {a0df1a10-978f-2e6d-4f52-b253bcbf29f6}\nFollowup: MachineOwner\n. No, I cannot reliably reproduce the crash. What I can say is that the BSOD appears several seconds after I terminate the thread that my .NET application gets called on via Dokan.NET.\nUsually the method being called is one of CreateFile(), GetFileInformation() or GetVolumeInformation() in DokanNet.Dokan.\nPrior to the BSOD Windows Explorer starts to lag when I point it to the filesystem root (\"This PC\"), probably due to a leftover \"disconnected network drive\" at my mount point. My application then repeatedly runs into the case DOKAN_MOUNT_ERROR: throw new DokanException(status, \"Can't assign a drive letter or mount point\" error when trying to unmount and re-mount the Dokan drive and may or may not succeed eventually.\nAs you may have concluded from my memory dump m< dev environment is running on Windows 8.1 Pro x64 in a physical box - which I'll probably move to Hyper-V unless the BSODs disappear.\nAnd finally, I'm still on VS 2015 RC/.NET 4.6 RC which could also be a factor - although I've never had a BSOD with this setup outside of my Dokan experiments.\n. @marinkobabic\nDo you need the full MEMORY.dmp (1.3Gb raw, 170Mb as a .7z) or will the associated minidump be sufficient (330kb raw, 140kb as a .7z)? I could easily mail you the minidump while the full dump would require uploading to a filehoster.\n. @marinkobabic \nPlease let me know your email address in a mail to j_h at mail.org so I can provide you with a download location for the dump.\n. @marinkobabic \nWhat should be changed:\n1. Generally the developer should have the option to set the global timeout for the IRPs and also to execute ResetTimout if the operation takes longer than normally. This way we will not have a lot of IRPs timed out and the system remains stable during debugging.\n\nWould it be possible to make the timeout configurable per drive via an option of the Mount method? \nThis would improve the situation for scenarios with hererogeneous Dokan drives - local and networked mounted at the same time.\n. For what it's worth - all (stable) Dokan.NET tests pass on this version of Dokany.\n:+1:\n. Might I suggest that you include a pdb package in all future releases? The pdb for 0.8.0-pre is nowhere to be found, either :cry: \n. Didn't check the actual files but the installer package content looks good to me. :+1: \n. For what it's worth:\nThe same anomalous behavior can be examined in the Dokan.NET test suite in \nhttps://github.com/dokan-dev/dokan-dotnet/blob/master/DokanNet.Tests/DirectoryInfoTest.cs (lines 748 and 822).\nI'd expect to see \"\\\" here as path parameter in the calls to CreateFile(...), but it is string.Empty instead.\n. Would it help if you tried to reproduce the BSOD through the .NET tests project?\nI for my part can reliably reproduce the issue on my (physical) Win 10 x64 machine every time the NETWORK_DRIVE mount option is used. And it certainly isn't related to the machine being slow in this case ...\n. Hi @marinkobabic,\nnicely done. This program most certainly does cause a BSOD on my machine (\"REFERENCE_BY_POINTER\").\nI had to change the mirror directory from C:\\Temp to D:\\Temp\\Mirror and the mirror mount point from n:\\ to z:\\ but otherwise this code is a perfect killer.\n. ",
    "mapomme1108": "Yes I still have mounted drive when I shutdown.\nWhat is \"a test with mirror\" ?\n. When I type this command\nmirror.exe /r d:/ test /l M\nDrive M is mounted\n. When I exit FISSH, mount the drive with mirror.exe and shutdown, there is BSOD\n. Hello\nI have installed the driver (right click on the INF file and \"Install\") and there is still BSOD\nI have tested it with both x86 and x64 drivers\nI still use Dokan 0.7.3 RC : should I try with other versions?\nI forgot to mention it but I have a message when FiSSH start :\n\"Cannot connect with IPC-Server\nApplication will now close\"\n. I have tried the new version but the problem is the same.\nShould I install Dokan 0.7.3 RC if I use your driver or is it useless?\nBSOD message is : \"SYSTEM_SERVICE_EXECPTION = Dokanx.sys\"\nI have installed WinSSHFS and it is working (I have used FiSSH so far)\nI have just had to install WinSSHFS in Windows 7 compatibility mode and it works\nWinSSHFS install its own Dokan Library = 0.60 version\n. Yes you can try but you have to install the Dokan Library 0.7.3 RC first\nEDIT : I don't close the software before to shutdown\n. I got it to work this way :\n1- install Dokan 0.6 (required by winsshfs)\n2- install winsshfs 0.0.1.5 from Google code\n3- install dokan x86 driver provided by marinkobacic\nAt this point, there is still BSOD\n4- Uninstall Dokan 0.6\n5- Install Dokan 0.7.3 RC\n\nno more BSOD on my Win 8.1 Pro x64 PC\n. 1- Install Dokan 0.6\n= install Dokan library and Dokan x64 driver; the x86 driver won't install because my OS is x64 (Win 8.1 Pro)\n2- install winsshfs\n3- install Dokan x86 driver provided by marinkobacic\n= there are no conflict with other driver because they were not installed in step 1\n4- uninstall Dokan 0.6\n5- Install Dokan 0.7.3 RC\n\nIt works!\n. Ok, I will try tomorrow\n. I have tried FISSH package and Winsshfs with 0.7.3 RC2 but both dont work\nThere are BSOD on unmount and shutdown with this error message :\n\"PAGE_FAULT_IN_NONPAGE_AREA\"\nMaybe I can try on a clean Windows 8.1 install?\n. ",
    "entropin": "I'm still having masive problems with BSOD during  the development of my app. Whether I close my app or the debug stops it dont seam to matter.\nI have an onClose calleback  on my c# app where I call dokan.revomeMountPoint('s:\\') dokan.unmount('s')  before exiting but it dose no differens any tip on how do you handle the development cykle? Calling dokanclt.exe /u s return 0  and the app still crache the computer when closing it.\n. Works here as well, on win10\nOn Jul 19, 2015 3:32 PM, \"Alexander Morris\" notifications@github.com\nwrote:\n\nI can confirm that it also solved the problem for me as well! I tried\nbreaking out of the application over and over again without a hitch. great\nwork! [image: :+1:]\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/27#issuecomment-122661119.\n. \n",
    "jbrads": "I am experiencing the same issue with the C# mirror sample using 0.7.3 RC2 on Windows 8.1 pro x64.\nIt does not matter how I exit the app, e.g just close it, or unmount the drive first it causes a BSOD with \"PAGE_FAULT_IN_NONPAGE_AREA\"\nHere's is the output of !analyze -v on my memory dump\n5: kd> !analyze -v\n\n\n*\nBugcheck Analysis                                    *\n*\n\n\nPAGE_FAULT_IN_NONPAGED_AREA (50)\nInvalid system memory was referenced.  This cannot be protected by try-except,\nit must be protected by a Probe.  Typically the address is just plain bad or it\nis pointing at freed memory.\nArguments:\nArg1: ffffffffffffffd0, memory referenced.\nArg2: 0000000000000001, value 0 = read operation, 1 = write operation.\nArg3: fffff8030f267fb3, If non-zero, the instruction address which referenced the bad memory\n    address.\nArg4: 0000000000000000, (reserved)\nDebugging Details:\n***** Kernel symbols are WRONG. Please fix symbols to do analysis.\nADDITIONAL_DEBUG_TEXT:\nYou can run '.symfix; .reload' to try to fix the symbol path and load symbols.\nMODULE_NAME: dokan\nFAULTING_MODULE: fffff8030f215000 nt\nDEBUG_FLR_IMAGE_TIMESTAMP:  55a020f0\nWRITE_ADDRESS:  ffffffffffffffd0 \nFAULTING_IP: \nnt!ObfDereferenceObject+23\nfffff803`0f267fb3 f0480fc15ed0    lock xadd qword ptr [rsi-30h],rbx\nMM_INTERNAL_CODE:  0\nDEFAULT_BUCKET_ID:  WIN8_DRIVER_FAULT\nBUGCHECK_STR:  AV\nCURRENT_IRQL:  0\nANALYSIS_VERSION: 6.3.9600.17336 (debuggers(dbg).150226-1500) amd64fre\nLAST_CONTROL_TRANSFER:  from fffff8030f39505e to fffff8030f365ca0\nSTACK_TEXT:\nffffd00021a81368 fffff8030f39505e : 0000000000000050 ffffffffffffffd0 0000000000000001 ffffd00021a815d0 : nt!KeBugCheckEx\nffffd00021a81370 fffff8030f268839 : 0000000000000001 ffffe0014963c080 ffffd00021a815d0 ffffe001528f9080 : nt!CcTestControl+0x2210e\nffffd00021a81410 fffff8030f36ff2f : 0000000000000001 ffffffffffffffff 0000000000000000 fffff8030f2c6226 : nt!ExReleasePushLockEx+0x7d9\nffffd00021a815d0 fffff8030f267fb3 : ffffe0014d860b38 ffffe0014950cb68 ffffe0014950cbd0 ffffe0014d860a00 : nt!setjmpex+0x1f1f\nffffd00021a81760 fffff80174a71af7 : ffffe0014d860da0 ffffe0014d860da0 ffffe00100000000 ffffe00100000000 : nt!ObfDereferenceObject+0x23\nffffd00021a817a0 fffff80174a70afe : ffffe0014d860b38 ffffe0014d860da0 ffffe0014d860a00 ffffe0014d860b38 : dokan+0x5af7\nffffd00021a817e0 fffff80174a6df01 : 00000000c0000002 ffffd00021a81b80 ffffe0014d8608b0 0000000000000000 : dokan+0x4afe\nffffd00021a81830 fffff8030f63a77f : 0000000000000001 ffffe001537fb3e0 ffffe001537fb3e0 0000000000000000 : dokan+0x1f01\nffffd00021a81880 fffff8030f639d22 : 0000000000000000 0000000000000000 0000000000000000 0000000000000000 : nt!NtDeviceIoControlFile+0xab3\nffffd00021a81a20 fffff8030f3714b3 : ffffd00021a81b10 0000000000000000 ffffd00000000001 00000000005ae4a8 : nt!NtDeviceIoControlFile+0x56\nffffd00021a81a90 0000000077aa2352 : 0000000000000000 0000000000000000 0000000000000000 0000000000000000 : nt!setjmpex+0x34a3\n00000000005aed48 0000000000000000 : 0000000000000000 0000000000000000 0000000000000000 0000000000000000 : 0x77aa2352\nSTACK_COMMAND:  kb\nFOLLOWUP_IP: \ndokan+5af7\nfffff801`74a71af7 4883a39801000000 and     qword ptr [rbx+198h],0\nSYMBOL_STACK_INDEX:  5\nSYMBOL_NAME:  dokan+5af7\nFOLLOWUP_NAME:  MachineOwner\nIMAGE_NAME:  dokan.sys\nBUCKET_ID:  WRONG_SYMBOLS\nFAILURE_BUCKET_ID:  WRONG_SYMBOLS\nANALYSIS_SOURCE:  KM\nFAILURE_ID_HASH_STRING:  km:wrong_symbols\nFAILURE_ID_HASH:  {70b057e8-2462-896f-28e7-ac72d4d365f8}\nFollowup: MachineOwner\n. Hi, apologies for the delay.  It is a complete memory dump at 2.4GB.\nHere is the updated output with the symbols loaded, I'll repro the issue and crash my PC now and see if it changes  ;)\nADDITIONAL_DEBUG_TEXT:\nYou can run '.symfix; .reload' to try to fix the symbol path and load symbols.\nMODULE_NAME: dokan\nFAULTING_MODULE: fffff8030f215000 nt\nDEBUG_FLR_IMAGE_TIMESTAMP:  55a020f0\nWRITE_ADDRESS:  ffffffffffffffd0 \nFAULTING_IP: \nnt!ObfDereferenceObject+23\nfffff803`0f267fb3 f0480fc15ed0    lock xadd qword ptr [rsi-30h],rbx\nMM_INTERNAL_CODE:  0\nDEFAULT_BUCKET_ID:  WIN8_DRIVER_FAULT\nBUGCHECK_STR:  AV\nCURRENT_IRQL:  0\nANALYSIS_VERSION: 6.3.9600.17336 (debuggers(dbg).150226-1500) amd64fre\nLAST_CONTROL_TRANSFER:  from fffff8030f39505e to fffff8030f365ca0\nSTACK_TEXT:\nffffd00021a81368 fffff8030f39505e : 0000000000000050 ffffffffffffffd0 0000000000000001 ffffd00021a815d0 : nt!KeBugCheckEx\nffffd00021a81370 fffff8030f268839 : 0000000000000001 ffffe0014963c080 ffffd00021a815d0 ffffe001528f9080 : nt!CcTestControl+0x2210e\nffffd00021a81410 fffff8030f36ff2f : 0000000000000001 ffffffffffffffff 0000000000000000 fffff8030f2c6226 : nt!ExReleasePushLockEx+0x7d9\nffffd00021a815d0 fffff8030f267fb3 : ffffe0014d860b38 ffffe0014950cb68 ffffe0014950cbd0 ffffe0014d860a00 : nt!setjmpex+0x1f1f\nffffd00021a81760 fffff80174a71af7 : ffffe0014d860da0 ffffe0014d860da0 ffffe00100000000 ffffe00100000000 : nt!ObfDereferenceObject+0x23\nffffd00021a817a0 fffff80174a70afe : ffffe0014d860b38 ffffe0014d860da0 ffffe0014d860a00 ffffe0014d860b38 : dokan!DokanStopCheckThread+0x73 [f:\\dev\\dokan\\dokany\\sys\\timeout.c @ 372]\nffffd00021a817e0 fffff80174a6df01 : 00000000c0000002 ffffd00021a81b80 ffffe0014d8608b0 0000000000000000 : dokan!DokanEventRelease+0xf2 [f:\\dev\\dokan\\dokany\\sys\\notification.c @ 531]\nffffd00021a81830 fffff8030f63a77f : 0000000000000001 ffffe001537fb3e0 ffffe001537fb3e0 0000000000000000 : dokan!DokanDispatchDeviceControl+0x139 [f:\\dev\\dokan\\dokany\\sys\\device.c @ 485]\nffffd00021a81880 fffff8030f639d22 : 0000000000000000 0000000000000000 0000000000000000 0000000000000000 : nt!NtDeviceIoControlFile+0xab3\nffffd00021a81a20 fffff8030f3714b3 : ffffd00021a81b10 0000000000000000 ffffd00000000001 00000000005ae4a8 : nt!NtDeviceIoControlFile+0x56\nffffd00021a81a90 0000000077aa2352 : 0000000000000000 0000000000000000 0000000000000000 0000000000000000 : nt!setjmpex+0x34a3\n00000000005aed48 0000000000000000 : 0000000000000000 0000000000000000 0000000000000000 0000000000000000 : 0x77aa2352\nSTACK_COMMAND:  kb\nFOLLOWUP_IP: \ndokan!DokanStopCheckThread+73 [f:\\dev\\dokan\\dokany\\sys\\timeout.c @ 372]\nfffff801`74a71af7 4883a39801000000 and     qword ptr [rbx+198h],0\nFAULTING_SOURCE_LINE:  f:\\dev\\dokan\\dokany\\sys\\timeout.c\nFAULTING_SOURCE_FILE:  f:\\dev\\dokan\\dokany\\sys\\timeout.c\nFAULTING_SOURCE_LINE_NUMBER:  372\nSYMBOL_STACK_INDEX:  5\nSYMBOL_NAME:  dokan!DokanStopCheckThread+73\nFOLLOWUP_NAME:  MachineOwner\nIMAGE_NAME:  dokan.sys\nBUCKET_ID:  WRONG_SYMBOLS\nFAILURE_BUCKET_ID:  WRONG_SYMBOLS\nANALYSIS_SOURCE:  KM\nFAILURE_ID_HASH_STRING:  km:wrong_symbols\nFAILURE_ID_HASH:  {70b057e8-2462-896f-28e7-ac72d4d365f8}\nFollowup: MachineOwner\n. Hi, I can confirm in my case it is the same stack trace and location each time\n. Thanks, if you update this issue when the RC is available I will verify.\n. Thanks, I can confirm I can no longer reproduce this issue with RC3\n. ",
    "alexpmorris": "I can confirm that it also solved the problem for me as well! I tried breaking out of the application over and over again without a hitch.  great work! :+1: \n. One other note, it sounds like this issue may be related to some of the other BSOD issues that have been described in other open issues.  Whatever is causing it, though, seems to be some change that's taken place since version 0.6.0.\n. ",
    "VaslD": "\n\nmirror.exe hangs after executing, leaves no return in CMD, but Disk M (in another case Disk N) is accessible until I terminate the mirror process.\nDuring the hang DokanCtl.exe returns Unmount status = 0.\n. I'm using the latest RC version. The old project homepage is not there so I can't find v0.5.3.\nI guess I can simply terminate process mirror.exe every time I want to get everything unmounted.\nMight be just me, something wrong with my system, or it might be related to CUEMounter. If no other experiences this issue, you can close it for good.\n. ",
    "Rondom": "See https://github.com/udaken/cuemounter for a fork of CueMounter with some activity that has been updated to Dokany.. You might need to use the mount manager option for this to work.. @archenroot So, to summarize, the installer is working as it should (i.e. detecting what is missing and telling you to download the right things?). Dokan 1.x.y uses dokannp1.dll, so this may hopefully avoid any conflicts.\n. I notice that even in the current Dokan-FUSE version, some headers such as fuse-lowlevel.h are missing.\n. On a closer look I don't think many people will need fuse-lowlevel.h and it would be difficult to implement because it is very specific to the the Linux kernel FUSE ABI.\nI am currently porting a FUSE driver using Dokan-FUSE and I will post my findings about what is missing here:\n- fallocate: In order for Dokan-FUSE to support this completely (i.e. also for sparse files), Dokan needs to support FSCTL_SET_SPARSE first, which it does not, if I have read the source correctly.\n- read_buf, write_buf: zero-copy IO (splice on Linux). Windows should support similar mechanisms. Needs Dokan-Support first.\n- ioctl: Theoretically possible, but this would need wrapping as ioctls are different across filesystems and OSes and I am not even sure whether it is technically possible because you cannot know the size of the ioctl data (correct me, if I am wrong on this).\n- setactl: Soon to merged in FUSE3. Simplified interface for POSIX ACLs (see also comment below on xattrs\n- xattrs: This needs quite some thought and consideration to do it right. We should look at how ntfs-3g, Samba and Cygwin handle xattrs and POSIX ACLs in particular and check in how far their approaches are in line with another and in how far we could support similar semantics in Dokan-FUSE. This is mostly about getting things right and making sure that Cygwin and probably now also WSL consume xattrs correctly.\n- classic unix permissions: need to check with Cygwin, SFU and WSL. WSL seems to have thrown previous work over the board for some reason, so we end up with different ways of expressing the same thing\n- release, releasedir: The semantics are hard to get right probably as Windows and POSIX  differ in how they treat opening/closing of files, but maybe it is easier than expected.\n- lock, flock: Need to look at POSIX and BSD locks to see whether we can support them while keeping semantics correct. POSIX locks are advisory by default and my impression is that Windows prefers mandatory locking.\n. So, the problem is that we don't have or Microsoft does not provide stable link for its binaries?\n. I have just tried reproducing this and I no longer get an error but a bluescreen with latest master (Win2K8R2 x64, 1f3c208). From the debug-output I can see that opening works and there are quite some reads to the file, but then it crashed. I tried and got the same behaviour with\n- Dokan Mirror\n- Dokan-FUSE Mirror\n- my own FUSE FS which is not a \"mirror-like\" FS\n!analyze -v output is roughly the same that @Liryna posted on 16th March. \n. @ht35268 In PyFilesystem/pyfilesystem#258 you say that mounting VHDs stored on a Dokan-FS works for you.\nCan you please report here under what circumstances exactly you can mount them (OS, steps taken)?\nBack in June it worked for me with neither the Dokan-Mirror nor the FUSE-Mirror, nor with my own filesystem (which is NOT a mirror-like FS).\n. Ah, thanks for the explanation :confused: \n. I tested this yesterday on Win 2008 R2 and it worked like a charm. Thanks a lot for fixing that bug.\nIt also helped me to promote Dokan for some other use cases. :-)\n. I think a way forward would be for someone to resolve the merge-conflicts with the master-branch.\nThen we can fix the file-security issue and then do extensive testing.\nI would be willing to modify the API to be able to use both the old API and the new API. This would simplify testing and would allow people to test the new architecture without having to modify their filesystem. We can mark the new API this PR introduced as an experimental API until it is stable.\nI tried to merge with master but gave up because I was not really sure how to resolve some of the conflicts :-( I did not try for two long, so maybe it was just me so I don't want to discourage anyone from giving it a try.. With current master it works for me with the Dokan Mirror but fails with the FUSE Mirror. I am using Win 2008 R2 x64 and I am connecting via RDP. Running as Administrator will help.\nFUSE:\n```\nC:>\"c:\\Program Files\\Dokan\\Dokan Library-1.0.0\\sample\\fuse_mirror\\mirror.exe\" L: -f -d\nDokan: debug mode on\nDokan: use stderr\nAllocationUnitSize: 512 SectorSize: 512\ndevice opened\nDokan Error: CreateFile failed \\.\\Volume{d6cc17c5-1731-4085-bce7-964f1e9f5de9}: 5\nDokan Error: CreateFile failed \\.\\Volume{d6cc17c5-1731-4085-bce7-964f1e9f5de9}: 5\nDokan Error: CreateFile failed \\.\\Volume{d6cc17c5-1731-4085-bce7-964f1e9f5de9}: 5\nDokan Error: CreateFile failed \\.\\Volume{d6cc17c5-1731-4085-bce7-964f1e9f5de9}: 5\nDokan Error: CreateFile failed \\.\\Volume{d6cc17c5-1731-4085-bce7-964f1e9f5de9}: 5\nDokan Error: CreateFile failed \\.\\Volume{d6cc17c5-1731-4085-bce7-964f1e9f5de9}: 5\nDokan Error: CreateFile failed \\.\\Volume{d6cc17c5-1731-4085-bce7-964f1e9f5de9}: 5\nDokan Error: CreateFile failed \\.\\Volume{d6cc17c5-1731-4085-bce7-964f1e9f5de9}: 5\nDokan Error: CreateFile failed \\.\\Volume{d6cc17c5-1731-4085-bce7-964f1e9f5de9}: 5\nDokan Error: CreateFile failed \\.\\Volume{d6cc17c5-1731-4085-bce7-964f1e9f5de9}: 5\nmounted: L: -> \\Volume{d6cc17c5-1731-4085-bce7-964f1e9f5de9}\nunload\nsend global release for L:\n```\nDokan:\n```\nC:>\"c:\\Program Files\\Dokan\\Dokan Library-1.0.0\\sample\\mirror\\mirror.exe\" /r c:\\temp /l L: /s /d\nAttempting to add SE_SECURITY_NAME privilege to process token\nfailed: Unable to adjust token privileges: 1300\nFailed to add security privilege to process\n    => GetFileSecurity/SetFileSecurity may not work properly\n    => Please restart mirror sample with administrator rights to fix it\nDokan: debug mode on\nDokan: use stderr\nAllocationUnitSize: 512 SectorSize: 512\ndevice opened\nmounted: L: -> \\Volume{d6cc17c5-173d-4085-bce7-964f1e9f5de9}\nMounted\n```\n. Ooops... my fault! I had old copies of the DLLs lying in the fuse_mirror-directory. Pretty easy to miss...\nAnyways, I can now confirm that this works for me with the latest version for both FUSE and Dokan Mirror.\n. If we ever find someone that creates a nice logo, we should take care to not only update the website, but also update the ico-file used for the installer-bundle.\n. Well, I think focusing on quality and polish code-wise is priority right now. :sweat:The fancy logo can come with 1.1.0 or 2.0.0 :heart_eyes: :grinning: \n. I like the ones posted by @pmalhaire. Good work!\nThe first one posted by @Liryna is a bit too \"flat\" for my taste and i think with the blue colour and the flat design it might be even a bit hard to tell that it is walnut. Maybe it could also be a bit more round.. I like the latest version as it is. Not sure if a shadow looks good, but I don't mind having it, if it doesn't make it look worse.\nOn 21 September 2017 12:36:52 CEST, yin19941005 notifications@github.com wrote:\n\nHi all,\nI agree with with @magol, in my opinion, adding some shadows under the\nnut should be better. But I also agree the current version looks fine.\n-- \nYou are receiving this because you were mentioned.\nReply to this email directly or view it on GitHub:\nhttps://github.com/dokan-dev/dokany/issues/243#issuecomment-331119166\n\n-- \nSent from my Android device with K-9 Mail. Please excuse my brevity.. @jetwhiz From your description in your last comment that sounds exactly like the issue I am experiencing! Working with the filesystem on the command line works fine, but when changing folders in explorer there is a hang of approximately a minute where the log is stuck at GetFileSecurity. Your logs looked different, so I thought it is not the same issue. I am going to come back with more analysis on Monday.\n. I am going to try on Monday with the patch reverted and do some debugging as well.\n. @Liryna What OS are you trying to reproduce this on?\nI am using Win 2008 R2 and @jetwhiz is using Win 7.\nI have not done in-depth debugging, yet, but it seems like some deadlock. I can also trigger the bug in a directory of 5 files and single-clicking (i.e. selecting) individual files in quick succession. If I wait until the debug log in the console output in the console window has stopped between each click, the hang will not occur.\n. Good to hear.\nMaybe @matepek can test whether the patch fixes the issue which made the patch necessary.\n. Afaik, %lld is C99. So, if MSVC does not like %lld, try changing it to standard compliant string formatting as I described in #252.\nAlternatively there are also some macros defined in inttypes.h that can be used in place of format specifiers.\n. I am getting some warnings with your changes now:\nhttps://github.com/dokan-dev/dokany/commit/f3e539ba85b88a8afd5b1828618d147f6023a965#commitcomment-17930911\n. Maybe we can configure the artifacts-section in appveyor for this. This way people can test builds easily, saving them from setting up a complete dev-environment with VS, DDK and whatnot.\nSee http://www.appveyor.com/docs/packaging-artifacts and http://www.appveyor.com/docs/appveyor-yml\n. Thanks!\n. That's why I asked :-)\n. ~~This needs more investigation and is not ready yet.~~ <== Turns out Eclipse for Windows interprets escapes such as \\a, \\t and \\n in stderr when attached to the process via GDB. This can lead to some longer investigation when your path is \\asdf...\n. I have now done some brief testing by using my MingW-compile FUSE driver against the MSVC-compiled dokanfuse.dll. The paths were printed correctly.\n. Great, thanks!\n\nCustomAction uses NET4 features, so retargeting wasn't possible.\n\n:-'( Well, ok then. It is probably not worth the effort to jump through hoops for an old OS. I tried changing the target framework and all I got was a slew of error-message which is why I filed this issue.\n. I agree. I have prepared some patches that detect this properly in the installer and will submit a pull request next week.\n. You do not need to close and open a new pull-request for each fix you do to your pull-request.\nSimply rebase your local branch and force-push (git push --force) and the pull request will be updated with your updates. The old history will even be preserved by GitHub for reference.\n. Well, your tree looks clean, so you DID rebase correctly and the branch-name you force-pushed to is also the same for each of the pull-requests. I do not know what you did with the actual pull-requests. Pull-requests are a GitHub proprietary thing. How do you create and close the pull-requests?\nhttps://github.com/dokan-dev/dokany/pulls?utf8=%E2%9C%93&q=is%3Apr+%22Add+NET+4.0+in+bundle%22\nI don't know what kind of GUIs there are and which you are using and I am mostly a command-line/Linux guy, so I cannot help you much. I can only describe how my workflow looks like. There are many workflows and I do not consider mine the only correct way to do it.\nPrerequisite: Have two remotes configured (the dokan-dev and my own \"rondom\" remote).\n1. Notice some bug or feature I want to implement\n2. Make sure master is the same as dokan-dev/master (git pull + ensure that I do not have any unmerged commits in my local master-branch)\n3. Create new branch myfeaturebug, commit changes\n4. Rebase against latest dokan-dev/master if necessary\n5. Push this branch to Rondom/myfeaturebug\n6. Submit pull-request using the GitHub-Web UI\n7. Do further changes in case they are required\n8. Push those changes. If I have rebased (i.e. rewrote history), the push will fail, because I would overwrite the changes that are in my remote-branch. In this case I will do the force-push and overwrite the old changes in my remote-branch. As far as I know GitHub will still preserve the old commits in the pull requests in case anyone is interested in those.\n9. Changes show up in the existing pull request.\n. @Liryna You can test as soon and as much as you want :-) It works on my patched Win 2008 R2. \nWhat should be tested (probably in that order):\n- without .NET4 (bundle)\n- with .NET but without SP1 (both MSI and bundle)\n- with .NET and SP1 but without KB3033929 (both MSI and bundle)\n- with .NET and SP1 after installation of KB3033929 but before reboot\n- with .NET, SP1 and KB3033929 (both MSI and bundle)\nI do not really feel like testing both 32 and 64 bit. If someone wants to test 32-bit, please go ahead!\n. Did some tests and it does not work correctly.  Here is why:\n\nImportant: When doing a locale-neutral search for a file, you must set the MinVersion property to one revision number lower than the actual version you want to search for. In this example, while we want to find file version 6.0.6001.1751, the MinVersion is set to 6.0.6001.1750. This is because of a quirk in how the Windows Installer matches file versions. More information is available in the Windows Installer documentation.\n\nI have no words for this...\n. Probably... I really wonder why WiX does not abstract this oddity away...\nAlso I am seriously interested why it has to be lower and not higher by one...\nHere are my results so far. Tested with DokanSetup-1.0.0.3616.exe (Git bbbdbcb8)\n```\n+----------+-------+-----+-----------+-----------------+---------------+\n|OS        | .NET4 | SP1 | KB3033929 | Bundle-Msg      | MSI-Msg       |\n|----------+-------+-----+-----------+-----------------+---------------|\n| Win7 x86 |   o   |  o  |    o      | No SP1          | No .NET4      |\n| Win7 x86 |   x   |  o  |    o      | No SP1          | No SP1        |\n| Win7 x86 |   x   |  x  |    o      | No KB3033929 \u00b9  | No KB3033929  |\n| Win7 x86 |   o   |  x  |    o      | No KB3033929 \u00b9  | No .NET 4.0   |\n| Win7 x86 |   x   |  x  |   (x)\u00b2    | No KB3033929 \u00b9  | No KB3033929  |\n| Win7 x86 |   x   |  x  |    x      |                 |               |\n+----------+-------+-----+-----------+-----------------+---------------+\n\u00b9 installs bundled software (.NET 4.0 and runtimes) before failing with missing KB3033929\n\u00b2 No reboot\n```\nNone of the error-messages are wrong, but not everything is optimal and one could make the user experience nicer by giving more informative messages by reordering the checks and/or by adding a check for KB3033929 to the bundle (see footnote). I honestly lack the motivation and time for this.  My main goal was that the installer or Dokan does not fail in mysterious ways\nAs @js69 very nicely put it, supporting such configurations \"is a valiant but somewhat quixotic effort\". So if someone is valiant and wants to improve the user experience and do the required testing (see above), please go ahead ;-)\nWhat I will do is fix the KB3033929-check by submitting a PR and test on Monday or Tuesday.\n. Where/When is this SetAssemblyVersion called? So far all DLLs have version 1.0.0.0 and only the installer has a different version.\n. Looking through the RC3 Dokan.zip there is no file that has the version set to something else than 1.0.0.0 or no version at all as far as I can see.\nMaybe we could also change the filenames to include the version-number for the artifacts (and the releases as well for consistency\n. Ah, I see. I only looked at the source of SetAssemblyVersion and it contains code to update .rc files as well (as far as I can see). So I assumed it would update the different dll-files' version information as well.\n. > Ok I see @js69 , so If I make appveyor set the BuildVersion at 3606 (1 for RC3 and 606 from the build version of appveyor) in the xml, it gonna be good ?\nHow would this scale as soon the appveyor-build-ids crack the 1000 mark?\n. > Dokan library only hold the major API (dokan1.dll) and it will stay like this.\n@Liryna Oh, I think we are talking about two (or three or more) different things here.\n1. The installer version\n2. The ABI version (I guess defined in https://github.com/dokan-dev/dokany/blob/master/Dokan.props#L6)\n3. The version resource embedded into the individual DLLs (view Properties in Explorer and look at tab \"Details\"). If I understand correctly, those are defined in RC-files\n4. The filenames of artifacts from appveyor and releases. For people testing different versions, it is useful/convenient to not have multiple versions with the same filename in the download-folder.\nI talked about number 3. I saw code in SetAssemblyVersion dealing with RC-files and thought this was already done\n. Sounds good! :+1:\n. Tested under Win2K8R2, detects previous version and pending reboot correctly!\n. No :-( They all have version 1.0.0.3000\n. Versions are correct now.\nRegarding your question about the folder name: I would leave it as it is because I cannot see a reason to change it.\n. I think disabling as Lyrina said is the way to go. \nWhat you are suggesting sounds impossible or very hard to keep secure (at least as far as I understand). How would you make sure that the functionality you describe is only used for nice use cases an not to work around missing privileges?\n. Done tests. Works and detects both missing and installed update correctly.\n. The same behaviour (no failure when trying to delete non-empty directories) applies to the FUSE mirror\n. I actually started on this a long time ago and completely forgot about it. (This actually an off-the-head re-implementation of a similar patch I had written before)\nSee the branch https://github.com/Rondom/dokany/tree/fuse-rmdir\nI might force-push to that branch, the commit I am talking about right now is 5d7547cd154b8623a1fd4b59bd2d359a368f1235\nI do not have time to work on this right now, but maybe someone else can do more testing.\n\nCurrently it is not really tested very much. It would be nice if people could give it a try with their own FUSE-filesystems. \nI noticed that no permission-check is done either. In fact permissions are not really enforced throughout dokan-fuse. So should we do that?\nThe code-path using the older getdir() callback instead of the newer readdir() is completely untested. Maybe test with an old fuse-mirror?\n@Liryna As you can see I put the check earlier, which is in line with what I read about file-deletion on Windows. This is a general question about Windows: What happens when the deletion fails during cleanup? Is it true that there is no possibility to signal user space that a deletion failed?\nIs there the possibility of race conditions?\nFileSetDisposition is called\nthe DeleteDirectory callback enumerates the direntries, finds none\na file is placed into the directory\nDeleteDirectory returns with no-error, signals that the directory is going to be deleted\n\n\nCleanup of the patch is necessary: removing debug-prints, some code-cleanup and code-style.\n\n. > other windows 10 version needs HLK test.\nCan you elaborate? What other Windows 10 versions are there? Any what do you mean by \"Windows 10 Family\"?\n. I think \"family\" it is just a way of saying that it applies to all \"family members\" in the Windows 10 family. What those family members are, I don't know. Maybe the editions (Home, Pro etc), or the versions or something else.... I don't know?\n. So, when you refer to \"Windows Server\", does this mean it will work on Windows Server 2016?\n. I will try to setup a Win2016 after the weekend if no-one else volunteers ;-)\nHyperV 2nd generation VMs support SecureBoot. KVM/qemu on Linux does as well once you have loaded some Microsoft-Keys manually.\n. I am wondering... if Windows Update will update the Dokan driver, will there be any problems/conflicts with the MSI?\n. I (faintly) remember that Windows Update once offered me an update for a screen I only had connected to once. This was years ago, so take this with a grain of salt.\nSo I would not be surprised that users that have installed 1.0.0 would get 1.0.1 via Windows Update if you submit it to MS.\nEDIT: This website allows searching for Windows Update packages. chrome://ietab2/content/reloaded.html?url=http://catalog.update.microsoft.com/v7/site/Home.aspx\n. I should be able to make that by the end of the week (Friday) latest.\nTesting under Win2016 I will only find time to on Thursday.\n. Windows 2016 Technical Preview 5 with SecureBoot enabled does not accept the driver, it says it is not signed properly.\nMaybe I misunderstood something. I thought running the HLK-tests is what is needed to get Windows Server 2016 to accept the driver as well.\n. I can see the Microsoft-signature, yes.\n. @marinkobabic The code you posted is from IKVM, not from OpenJDK!\nOpenJDK code is here: http://hg.openjdk.java.net/jdk8u/jdk8u/jdk/file/a11ab21bb799/src/windows/native/java/io/WinNTFileSystem_md.c\n. @Liryna The code corresponds to the native methods in the Java-Code you linked to before.\n. Btw: there is already a clang-format file in the root directory\nI don't use VS, but there also exists a plugin: http://llvm.org/builds/\n. I know there are quite some bugs to be fixed before 1.0. What about pushing out another RC (to facilitate wider testing of the installer)?\n. I did not verify this, but this is fixed according to the 13 Feb 18 12:27 e-mail by Craig Barkhouse (Microsoft):\n\nFor what it's worth, in the upcoming Windows release (1803? not sure what it will be called), NTFS now correctly preserves the case of the unparsed path.. FindFiles needs to account for both names as well.. Yeah, but we  could detect that KB3033929 is installed even if it is not if we only check for >6.1.7601.18741 and some 6.1.7601.22xxx smaller than 6.1.7601.22948 is installed.\n. I am well aware that this issue is unrelated to  DimitarKapashikov's issue #304\nThe check is for MinVersion=\"6.1.7601.18740\". Both 6.1.7601.18741 and 6.1.7601.22380 should give true.\n\nDon't you see this as a problem? 6.1.7601.22380 is too old for us! We need at least 6.1.7601.22948 which comes with KB3033929.\n. IIRC it is possible to store the DLL's version number in a variable. If I am not mistaken it might even already be stored in the variable and we use it only in a boolean context right now.\n. I have not looked at the code at all, so my question might sound stupid: How hard would it be to provide a wrapper for the old API? Once the kernel-interface changes and there is a 2.0.0, we could deprecate or remove the old API.\n. Thanks for the merge :-)\n(posting here to make others interested in this PR get notification)\n. Maybe the detection of a deadlock is over-engineering? I mean even with the new model I could have a bug in my code that continuously resets the timeout while doing nothing.\nI am not familiar with how the Windows kernel handles things, but for the case that the process dies, wouldn't we able to detect that because Windows would clean up the file descriptor to the Dokan device? The automatic unmount by timeout is a useful feature for some, but my impression is that it sometimes causes more pain than it helps because people complain about \"sudden unmounts\" when they stress their filesystems.\nSome people might even be interested in having all IO-calls block for security reasons (that's the default behaviour for FUSE on Linux) in order to not let any request through in case someone tries to circumvent some restriction by DOSing the Dokan-FS.\nWhat are your thoughts on this? Do you think it's worth opening another issue?. The state of this PR makes me a bit sad. It is not merged because there is a yet unfixed issue with security descriptors. Unfortunately, I am not qualified enough to know how to fix it. I see master diverging more and more making it more difficult to merge the changes. Maybe developing on this branch for the next major version can accelerate things and give a wider exposure, because people will test pre-release versions? Anyways, this does not solve the actual problem of missing manpower...\n@martijnotto If you look closely at the FUSE low-level API you can see that it is quite different from Windows semantics, i.e. it is a bit of work to implement translating between those semantics in a somewhat efficient manner. For instance, Windows works with full paths, while low-level FUSE works worth with the parent-dir (inode) and filename.\nWithout having tried it, I think this PR might indeed make it possible or at least easier to implement such a wrapper. Finding out how well it works and what other obstacles there are requires one to actually start investigating/trying it.. It would, probably. I expect quite a few edge cases to take care of in general. Not saying that it's impossible, but it might need some time to get something like this completely right.\nFirst, someone needs to fix the last bugs here and get this merged, though.... > I have created this branch to merge all changes of the master into it to keep it update.Love @Corillian changes \u2764\ufe0f speed has really been improved !\nThis is great news! Thanks a lot for reviving this branch (and of course thanks again to @Corillian \n\nI had some issue to merge f113f74 and I am not sure I did it correctly. Can you just take a look at it ? \n\nSure, will do as soon as time allows.\nI will also try to work further on our continuous integration scripts to get more tests running and possibly do some baselining against master to see whether there are any regressions. I cannot give a timeframe on that, though.\n. @Liryna That sounds like a realistic (and manageable!) list. I always \ntry to aim for \"too perfect\", thus making things take very long, which \nis not very good. :-)\nAfter letting this PR linger for a while I can understand the desire to \nget this into the hands of people quick (while still doing enough \ntesting, of course).\nWhat do you think about implementing a small wrapper that enables using \nthe old API? At least many of the open-source projects using Dokan are \nvery short-staffed and it might take some time until they adopt a new \nAPI. That way we can mark the new API experimental and still do some \nother API-breaking changes along the way and thus avoid to break the API \ntoo often.\nOne or two releases later we mark the new API as stable and deprecate or \neventually remove support for the old API.\nQuestion is: Do you think that's worth the effort (both implementation \nand maintenance of the old API for at least one or two releases)? I \nwould volunteer to give it a try. I would love to hear your opinions.\nIt might as well be not worth it and I am underestimating the effort \nneeded for on-going testing and support.\nActually after having written down all this I am more skeptical than \never before and it's probably better to collect a list of probably \nAPI-breaking changes and (if time allows) strive to implement the \nlow-hanging fruit before the final stable release. I am still leaving \nthe rest of the text above here to illustrate my thought process...\nOn 2017-05-09 08:20, Liryna wrote:\n\nTODO here:\n\nSee if #393 https://github.com/dokan-dev/dokany/issues/393 happen\nCheck correct merge of f113f74\n    https://github.com/dokan-dev/dokany/commit/f113f7476efdfd674791baa72bc30a503e879e2a\n@Corillian https://github.com/Corillian said |I did however notice\n    that I didn't update DokanResetTimeout for async IO so I certainly\n    need to do that :p.| This should be changed\nFix security issues\n    https://github.com/dokan-dev/dokany/pull/307#issuecomment-257590762\nHeavy test ( @Rondom https://github.com/Rondom ifstest ?) .\nUpdate documentation\n\n. @Liryna I have looked at the merge of the FUSE-change and it looks fine, but honestly I am not really confident by just looking at the code. Ideally someone with NodeJS-installed can test (or even better we would have a test-case for that......).\n\nI thought I would find the time to do some fix for some other issue over the weekend, but I did not. Instead I am reporting issue #511 for the time being. If someone starts working on it, please write in the issue. I will do the same in case I find the time to avoid duplicating work.\n. I think Cygwin is meant \ud83d\ude02\n. A hint about how to unmount the volume is probably useful\n. Sorry for the delay. All in all it looks good. Some comments below.\nI am not very familiar with Windows-style command line interface conventions, but the hash-signs (\u00b4#`) look a bit odd to me next to the options. For the examples they are fine, because they act as a comment-sign to separate the command from explanation.\n\n/t ThreadCount (ex. /t 5)     # Number of threads to be used internally by Dokan library.\n                               # More thread will handle more events at the same time.\n\n\"more threads\"\n\n/d (enable debug output)      # Enable debugger debug output\n  /s (use stderr for output)    # Write debug output on stderr\n\nI suggest \"Enable debug output to an attached debugger\" and \"Enable debug output to stderr\"\n\n/c (mount for current session only)           # Device only visible for current user\n\nIs it really the current user or is it the current user session, i.e. when logging in multiple times with the same user only the session that runs Dokan will be able to use the FS?\n\n/a Allocation unit size (ex. /a 512)          # Allocation Unit Size of the volume. This will behave on the file size.\n  /k Sector size (ex. /k 512)                   # Sector Size of the volume. This will behave on the file size.\n\nI do not get what the sentence \"This will behave on the file size.\" is supposed to mean. Are you sure \"behave\" is the right word to use? Please elaborate.\n\n/i (Timeout in Milliseconds ex. /i 30000)     # Max timeout in milliseconds of each request before Dokan give up.\n\nI am not entirely sure whether it is \"for\" or \"of each request\". Maybe mention the error returned instead of the vague \"give up\"\n\nExamples:\n            mirror.exe /r C:\\Users /l m                     # Mirror C:\\Users as RootDirectory into a drive of letter M:.\n            mirror.exe /r C:\\Users /l C:\\mount\\dokan        # Mirror C:\\Users as RootDirectory into NTFS folder C:\\mount\\dokan.\n            mirror.exe /r C:\\Users /l m /n /u \\myfs\\myfs1   # Mirror C:\\Users as RootDirectory into a network drive M:. with UNC \\myfs\\myfs1\n\nmaybe make the m an M: to make its purpose clearer (not saying that it is not clear already :-D)\n\nUnmount the drive with CTRL + C in the console.\n\n... or alternatively via \u00b4dokanctl /u MountPoint\u00b4\n. Looks all good, though I would suggest \"Timeout until a running operation is aborted and the device is unmounted\" or \"Timeout until an operation is aborted and the device is unmounted\"\n. I think Doxygen works fine. I am not sure why you want to export to the wiki. I see the problem that people start to edit the Wiki instead of the source. Wouldn't a link be enough?\nWhy not have a separate repo \"dokan-docs\" with a gh-pages branch where we (or CI) push the generated documentation to?\nIf your concern is to have the same design for the Wiki and Doxygen output one could also push jekyll-generated HTML from the Wiki there.\n. This is a common problem among all language bindings wrapping a lower-level library. I think all you can do is some cross-referencing.\nAlso there might be subtle differences between the language implementations, for example with regards to parameter and return types. Though I am sure you could create some script that parses your source for references to the original documentation and then generate a new file with the documentation (if you are willing to spend the time for that, that is). Editing your existing higher-level source-code does not sound feasible.\n. Maybe you need to teach Doxygen some defines? A quick look leads me to \u00b4MACRO_EXPANSION\u00b4 and \u00b4PREDEFINED\u00b4. To troubleshoot, maybe produce simple example-structs with two members or so, where you alternate syntax and used defines.\nBtw: You should be able to document individual parameters right before or after the parameter (like in the current style)\n. For easier browsing \ud83d\ude09: https://liryna.github.io/dokany/documentations/doc/html/\nMy first impression is pretty good. \ud83d\udc4d\nI will not have time until the beginning of next week to give a thorough review, though. I will have some content-related input and some language fixes. But maybe a native speaker (do we have someone?) is better at commenting on the latter.\nFor production use, I would use a separate repository to avoid pushing lots of generated \"stuff\" into the main repository. I know it's a separate branch and bandwidth is cheap nowadays, but for me it feels cleaner to have this separate from another. The repository could have subdirectories with the generated docs for each tag (and possibly also branch) of the main repo.\nPublishing pull requests automatically is probably a bad idea from a security point of view. For PRs a ZIP-file with the docs as a build artifact is probably enough if security is a concern.\n. > I agree about creating a git submodule that would be tagged on another repository that stores the documentation.\nI am not sure what problem you are trying to solve and how git submodules would exactly help. Please elaborate.\nThanks for spending the effort on this! The new bootstrap-style looks nice, it seems like we finally arrived in the 21st century :-D I am wondering if it would be \"just including the CSS\" to make the look consistent with https://dokan-dev.github.io. Then we could also link back between the docs and the webpage in the header for a \"seamless\" experience. We could also place the Wiki/Howto link more prominently in the header using a layout-XML file (\u00b4doxygen -l\u00b4).\nSome ideas for later CI:\n- we could link to the corresponding source on GitHub by setting an environment variable to the output of git describe --always --dirty to generate a link to the source the documentation was generated from\n- we could set PROJECT_NUMBER using an environment variable as well\n. Would this enable \"automatic\" checking of access rights so that a user-FS does not need to check parent security when trying to delete a file from a read-only directory? Question is whether you would want such behavior to be configurable or not.. Dokan 1.x.x-versions cannot be installed side-by-side (the install will fail and ask you to uninstall the previously installed version and reboot to start the installation again).\nSo is it theoretically possible to unload the driver (provided that no volumes are mounted) to avoid the need to reboot?\n. No. 0.5.3 and 1.x.x. can be installed in parallel.\nRemoving 0.5.3 might even be harmful because there might be other software relying on it.\n. So to summarise:\nYou are fine to install 1.x.x when you upgrade from 0.5.3 and possibly leave 0.5.3 installed in case other software relies on it (and maybe tell users to uninstall it manually).\nYou will only run into the need to reboot once you want to upgrade 1.x.x. to 1.y.y.\nMajor version upgrades, i.e. 1.x.x to 2.z.z  (or 0.5.3 to 1.0.0) require no rebooting. Uninstalling the previous version can be done as well, but maybe dangerous if there are other problems relying on it.\nMinor version upgrades require and uninstall, reboot, install cycle.\n. @HTPCSourcer I created two enhancement requests to track and discuss how the major upgrade ( #322) and minor update (#321) experience could be improved. While I am not a main developer of the Dokan I would say that contributions are welcome ;-)\n. Does this patch break binary compatibility? If so, how?\n. Ooooh :cry: I guess I was too na\u00efve :smile: \nMaybe we can leave those issues open nonetheless? I mean, maybe some of the downstream users are willing to contribute a solution Dokan can use for its bootstrapper as well? Downstream projects can then decide whether to use the Dokan bootstrapper or to incorporate a similar mechanism into their bootstrapper.\nHere is what my googling found:\nhttp://stackoverflow.com/questions/16166186/wix-burn-after-restart-force-reboot-continuing-installation\n. For example I see that @keybase (@zanderz, @taruti) has some code in their bootstrapper for detecting old versions. Which versions, I don't know...\nhttps://github.com/keybase/client/blob/master/packaging/windows/WIXInstallers/KeybaseBundle/Bundle.wxs\n. There is no reboot needed when doing a major upgrade e.g. 1.x.x to 2.y.y. The new driver and library can be installed alongside the old one.\n. I have not looked into this and I do not have much time this week.\n. Version is set in sys.vcxproj using multiple instances of\n<TimeStamp>%DOKANVersion%.0</TimeStamp>\nI think, the whole system of setting the version numbers can be optimized to have less duplication.\nI personally would rather do this properly once and for all at some later point.\nAs a workaround we can set the last number manually in the commit that is tagged v1.0.0. In the commit following that tagged commit we can set Dokan-version to 1.0.1 or 1.1.0 and set it back to zero (until a proper solution is implemented before the next post-1.0.0-release).\nBtw: What will the x in 1.0.0.x be for the final 1.0.0-release?\n. No. Without this, the bundle will happily install all kinds of stuff like .NET only to then fail while installing the MSI at the end. If I remember my tests correctly at least .NET installation is not even rolled back. With this patch, we fail early.\n. Depends on whether the bundle-engine follows arcane MSI implementation details that make one pull their hair out :-D\n. I would guess you do not need to decrease the version number by one, because here the version number is stored in a variable and I would expect at least basic operators like greater, lesser and equal would work in a sane way. Then again you don't know whether the right number gets stored I the variable... Googling made me none the wiser. In the worst case I will have to test with both the GDR and LDR patch...\n. http://wixtoolset.org/documentation/manual/v3/xsd/util/filesearch.html\n^ this suggests that the bundle behaviour is sane i.e. no decrementing needed\n. With output you mean stdout/stderr, right? Fixed in my private branch, not yet tested on Appveyor.\n. That's what I wanted to imply by the last sentence ;-)\n. Have you tested this on AppVeyor?\n. Have you tried reinstalling cmake using the Cygwin installer UI?\nI cannot reproduce it on my machine. On the Appveyor Build-Worker, reinstalling fixed the issue. I used the old installer in C:\\cygwin instead of the new one that the CI-script downloads.\nMaybe the bug only occurs with the new cygwin-installer version?\n. Regarding RDP in appveyor:\ninit:\n   - ps: iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))\n  on_finish:\n   - ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))\nRDP-credentials are printed to the log (so use with your private repo). The last two lines will make the build block until you delete a file from the Desktop.\n. /var/log/setup.log and /var/log/setup.log.full has a log of the setup. I do not notice anything unusual. Maybe you can have a look as well?\n. Double-clicking cmake.exe yields the following error-message: \n```\ncmake.exe - Entry Point Not Found\nThe procedure entry point __locale_ctype_ptr could not be located in the dynamic link library C:\\cygwin\\bin\\cmake.exe. \n```\n. As a solution, we can point our CI-script to a specific point in time using: http://www.fruitbat.org/Cygwin/#cygwintimemachine (Let's hope that mirror is stable)\nStill we should keep this open and report this following the instructions at https://cygwin.com/problems.html. @Liryna, can you reliably reproduce it?\n. Problem is that the new cmake-package's dependencies are not up to date. It seems like the cmake-binary is linked against newer libraries, but the dependencies still say \"old version or later\".\nSo there is indeed a bug in the cmake-package.\nWe can work around this by upgrading all packages. This fixes the issue but might increase build-time a bit. PR is coming ;-)\n. For reference: There is no bug in the cmake-packaging. Cygwin seems to simply have no concept of versioned dependencies whatsoever. :open_mouth:  :fearful:\nSo, whenever installing a new package without having upgraded the whole installation before it is pure coincidence that things are working! \n. works :-)\n. @jetwhiz, can you give this a try once Appveyor has finished the compilation? The fuse-mirror-compilation actually tests this, but given that we are so close before 1.0.0 it would be nice to have another human-being taking a second look at it.\nOne should be able to compile against libfuse or dokanfuse only by changing the include path and linker-path, i.e.\n-I ${dokan_install_dir}/include -L ${dokan_install_dir}/\n. Also everyone else is welcome to review the individual commits and test the build, of course. Especially the installer might need attention, because that is an area I am not familiar with.\nI don't want to be the one that introduces a regression so close before 1.0.0 :-D\n. Compiler does not matter as long as you link to the right library (dokanfuse.dll for MSVC, libdokanfuse.dll for MinGW, cygdokanfuse.dll for CygWin).\nSetting the include path to [Dokan-Installation-Folder]/include and the library search path to the installation folder itself should work.\n. @jetwhiz I messed up on the installer. :flushed: It should be fixed now. Please download again.\n. I thought they were C++ headers internal to dokan_fuse. Are they considered part of the API? If they are, they should be there of course.\nOh, and can someone enlighten me what this ScopeGuard C++-template-craziness does? :stuck_out_tongue_closed_eyes:\n. Updating the driver as well should fix this. This was unfortunately necessary because of #320.\n. @Liryna Indeed some of the stuff might be useful, other stuff looks more internal, especially the stuff relying on C++. Does someone have an idea or suggestions, about what is useful and what is internal?\n. Oh! No need to build yourself.\nAppveyor is building binaries for every pull request and push.\nThe drivers are signed with a self-signed certificate so you have to import that certificate and enable test mode. See the wiki for information. The PowerShell-script mentioned there does not work on Win7. I have filed #342 with more information about this. Taking CertMgr.exe (a few KB) from another machine with Windows SDK or VS installed, works fine.\nYou can easily reach the Appveyor-builds by clicking the green \u2713 next to the latest commit in the Pull-Request. Link to the artifacts of the at the time of this writing latest build of this PR\n. @Liryna \n\nThere is only utils.h that should be added in the installer. It has some helper that provides the library and it is used by some projects (@jetwhiz does use it if I remember).\n\nOk, I will add back utils.h to the installation. This is a C++ header, shall I #ifdef things and disable symbol-mangling for the C-parts, so it can be used both in C++ and C (minus the C++ parts)?\nI will also delete ScopeGuard.h. I do not have the energy to find out myself, but I am still curious about what it does. ;-)\n\n(there is a couple of warnings showed with https://github.com/dokan-dev/dokany/pull/337/files#diff-e2cb466c3a4e3af410a8719f1f2b0340R10, do you plan to fix it ? otherwise I will do it after)\n\nI intentionally enabled the warnings. Sometimes warnings point out things one is not aware of that should be fixed. If there are warnings that cannot be fixed, we can always disable individual warnings.\nI have a patch for the DWORDs/printf-format-specifiers warning ready, that I will include in the update of this pull request tomorrow. The rest of the warnings I have not yet looked into and I do not have the time right now. So if you want to look into them please go ahead! :+1:\n. > Regarding the PowerShell-script, unfortunately I don't have access to a Win 7 build machine -- I only do bare-bones testing in a pristine Win 7 VM. Does using CertMgr not work when Import-Certificate isn't detected? \n@jetwhiz CertMgr.exe DOES work (see the wiki-article a few lines above). The only \"problem\" is that you need to download VS or Windows SDK to get these few kilobytes of an EXE which is a bit overkill. Copying over CertMgr from another machine with VS, works like a charm and so does using the GUI. :-D\n. @Liryna I will also remove https://github.com/dokan-dev/dokany/blob/4d11614c5df85b96442838158e75af26d3d4aa4e/dokan_fuse/include/utils.h#L8-L12\nThe code is commented and not used anywhere as far as I can see.\n. First thing I will do in the morning\n. What I have tested:\n- Linking against cmake-installed FUSE's unixTimeToFiletime from utils.h using a GCC (G++ and MSVC(++) untested)\n- Presence of utils.h in Dokan-installation-folder under Win64\n- No warnings under MingW(32|64) or Cygwin(32|64)\n- Short test against my MingW32-based filesystem (debug prints still working as before)\n- version numbers of (cyg|lib)*dokanfuse.dll, dokan1.sys, dokan1.dll, DokanSetup.exe\nNot tested:\n- FUSE-Mirror debug-prints on Cygwin(32|64)\n- Presence of utils.h in Dokan-installation-folder under Win32\n- Linking against functions in utils.h using a C++ compiler (should be tested by dokan_fuse compilation itself)\n. One nitpick, can you (manually! don't delay the release further) add the version number to each file's filenames when you do the release? I think it is nicer that way because it keeps people's download-folder nice and tidy. i.e. DokanSetup-1.0.0.5000.exe and so on.\n. Make sure this is mentioned in the changelog\n. Blind guess: Do you have multiple versions of Cygwin running? Did you upgrade today? Try a reboot to make sure no old stuff is loaded.\n. Yes\n. The instructions in the link above can be simplified by not using so many custom variables (PKG_CONFIG_). For example one can reuse CMAKE_INSTALL_INCLUDEDIR instead of defining a separate custom variable PKG_CONFIG_INCLUDEDIR.\nIn my opinion, we should probably not use the fuse name for our pkg-config-file. There are several different user space file system solution and our solution is not the original libfuse. We should respect the original libfuse (unlikely they ever accept patches bringing Windows-compatibility, but still) and also avoid a conflict with any alternative user-space FS solutions. I would like to hear other people's opinions on this, though.\n. I opened PR #375.\nIt needs testing and some discussion about how to handle the fact that we are using the libfuse-name.\n. FileVersion does not work on my Win2k8r2, but I guess it is the same as the FileVersion column?\nAnyways here is what Explorer shows.\n\n. Does anyone have an idea what change could have caused this?\n. Looks like a bug to me. Maybe you could file a separate issue for that.\n. Let's open a new issue. Either it is bug or it is a limitation of Windows. If it is the latter, then Dokan should error when using this combination of options.. I think the Wiki has its place and the Doxygen documentation has its place. Wikis provide a lower barrier to entry for people to edit information. Whether there is some content that better belongs to one of the other place is of course debatable and probably should be discussed ;-)\nI agree that the README has quite a bit of information that is better kept at other places.\nI actually have done some research about this already.\nWe could generate the documentation-part of the website from the Wiki and link to GitHub for editing. Synchronisation (i.e. generation of the website) can either happen manually (after review) or automatically. Just using the wiki as a git-submodule does not work because Jekyll expects some header in every file (but maybe one can add that in the wiki... who knows....).\nGiven that the Doxygen-documentation already uses Bootstrap it should not be too difficult to make it blend with the website. See also my comment on the previous issue for some ideas. #313.\nAlso we could generate a more user-friendly user-interface for the releases and another one nightly builds as well. Currently it is for example not really clear what the differences between DokanSetup.exe and DokanSetup_redist.exe are and a \"real\" download page would help in that regard.\n. Alternative approaches\nhttp://stackoverflow.com/questions/8815145/how-to-trust-a-certificate-in-windows-powershell\nhttps://lennytech.wordpress.com/2013/06/18/powershell-install-sp-root-cert-to-trusted-root/\n. I will look at it in November.\n. @Rambalac You can help by testing whether all your issues are gone in a snapshot build.\nSee https://github.com/dokan-dev/dokany/wiki/Build#user-snapshot (The builds are self-signed, so you need to import the certs first)\n. For my understanding: Would updating WiX solve this specific issue?\n. Ah, so it was unrelated to this issue (which was my initial understanding).\n. Hi @USeebi,\nthanks for helping making Dokany better.\npkg-config\nNice to see that you added a pkg-config file! :+1:  We actually already had an enhancement request about it: #338 \npkg-config is not specific to MSYS2, but actually generic to any platform. Therefore it would be nice to have it available for any platform (MSYS2, Cygwin, Linux (for cross-compilation)) and thus independent of the library and include directories.\nDo you think you can integrate the pkg-config into our cmake-build using the instructions in the ticket linked above? You can create a separate Pull-Request for this, to simplify matters.\nMSYS2-PKGBUILD:\nFirst of all: Is there a specific reason, why you are submitting this to us and not to @Alexpux/MINGW-packages? I am not particularly opposed to having the PKGBUILD in the Dokany repository,  but I would be interested in what your considerations where and why you prefer one over the other option.\nI have never done any packaging for MSYS or Arch Linux, so take the following comments with a grain of salt. (I am mostly familiar with Debian packaging and Linux and MSYS2 might differ in several ways I don't know yet about).\nAs @Liryna has said, you duplicate all header files in the repository. Looking at your packaging, it seems quite manual and I think it can be improved. The way I know it from Debian or RPM-based distros, the package would get built and installed into a separate directory as if you were compiling/installing from source and then a package is created from that.\nI have just searched for \"cmake\" in the MingW-W64-packages repository and the doxygen-package there might be a good example of cmake-based project that is packaged using a PKGBUILD where the source is automatically downloaded, verified using hashes, built and \"installed\" to be compressed into a package.\nDoxygen Mingw-w64 pkgbuild\nlibssh is another example\nSome questions:\n1. Where is the library-file built/installed to in your current implementation?\n2. Why do you install the headers to /opt/? That seems very non-standard to me for packaged software. Why not /usr/include/?\nPS: Thanks again for your contribution, it's appreciated.\n. @USeebi May I ask, why you need an MSYS2-package? As far as I am informed, MSYS2 is a fork of Cygwin and its only purpose is to serve as a POSIXy environment for building MinGW-W64 (32bit and 64bit) applications. So one is not supposed to build software using the MSYS2-GCC if one is not developing MSYS2. If one needs an environment more close to Unix, the MSYS2-people suggest to use Cygwin.\nI created pull-request #375 that enhances our build-system to automatically to create a pkg-config-file depending on the installation path. It needs some testing ;-)\nAre you interested in working further on this to create an automated package that avoids copying files around? Like the libssh2 or doxygen-package I suggested above? Maybe, once a version with my PR merged is released and the package has good enough quality, you could even submit it to @Alexpux/MINGW-packages?\n. >  I guess the package mostly working with Msys2 as Mingw has no syslog while Linux probably use fuse directly but not dokan-fuse.\nCan you please explain what you mean here in more detail? I do not really understand \ud83d\ude15 \n. Is this really a bug? I mean the \"folder\" is not a classic folder but a mount-point.\nI can reproduce this on Windows 2016, but the volume information can be seen by clicking the \"Properties\"-button next to \"Type: Mounted Volume\". I think this is just how Windows-Explorer chooses to display the information and nothing that can be \"fixed\" from the Dokan side.\n\n. Also, at least on Win2016 it does not matter whether mount manager is used. I get the same behaviour regardless of whether I use the /o-option or not.\n. Ah, I see. The behaviour only occurs when\n\nmounting as a drive letter\nusing mount manager\n\nIt does not occur for me when mounted as a directory junction (and still using the mount manager).. This might be related to something else. Please ignore this for now and let me investigate more.\nUPDATE: The behaviour described below seems to be issue #434. Let's wait until that one is fixed.\nI have just tested this on Win 2016\nSame behaviour.\n1. Manually navigating (as described in the issue description)\n2. Entering the path M:\\cygdrive\\m\\cygdrive\\m into the Explorer's address bar (Ctrl+L)\n3. PowerShell\n    cd M:\\cygdrive\\m\\cygdrive\n    cd .\\M\n    dir\n\nAs you suspected, there is a flood of requests to individual files in the root of M:, for example\nReadFile: \\Cygwin.ico from 155648 len 4096\n\nMy suspicion is that this has to do with the . and .. directory entries and how they are interpreted.. I can still reproduce this.. Every commit is automatically build using Appveyor continuous integration.\nLatest build (as of this writing).\nThe builds are not signed by a trusted certificate, i.e. you need to trust the certificate and enable testsigning mode: https://github.com/dokan-dev/dokany/wiki/Build#signing\n. I do not want to spill oil in the fire by over-complicating an already complicated situation, but ...\n... do we also need to check GDR and LDR versions like we do for the Win7-Update?\n. Thank god \ud83d\ude04 \n. I think there are quite a few non-developers who  are installing Dokan, because it is a dependency of e.g. WinSSHFS.\nI would rather make the checkbox more prominent on the first page. Currently it is hidden behind some advanced options button and developers will know that they want to \"development files\"\n. Okay, point taken :-)\n. I have noticed that behaviour as well.\n(Btw bash (on Linux!) has some oddities in such situations as well)\nMaybe someone can check by mounting partitions using or usb-disks to make sure this is actually a problem specific to Dokan. So I would say, this is \"informations required\" for now.. Then wait with the testing for now. On a second thought, I can also use it while building the FUSE-mirror, the comments in the code even suggest to get the CFLAGS and LDFLAGS using the pkg-config....\n\ngcc -Wall fusexmp.c $(pkg-config fuse --cflags --libs) -o fusexmp\n. About option 3: I thought about this more and noticed that we would need the correct Dokan version for a dokanfuse.pc. So this is dependent on some other work I planned to be doing (refactor how the version number gets embedded in the build). This might take a bit more time (which I do not have right now, I am afraid.\n\nSo, for this PR we have two possibilities: Wait until we can do it perfectly (retrieve the version) or simply implement option 2: \"Add some option to cmake that allows one to disable the installation of fuse.pc (-DINSTALL_FUSE_PKG_CONFIG=OFF) and merge this PR for now. A dokanfuse.pc with the version embedded can come in a later pull-request.\nWhat do you think?\n. Now modified the build-script to use pkg-config.\nOh, and the PR cannot be merged right now anyway, I guess. We rather want this to be in 1.1.0 and not in 1.0.1. :-D\n. Sure\n. And I guess the warning can never appear for the \"with-redist\", build so we can unconditionally enable it?\n. Yes, that's all, I think.\nJust in case you are wondering, why I am \"nitpicking\". I plan to use the messages-tab in AppVeyor more, so any new warnings are spotted easily and can get fixed/ignored.\na315e7d0aa2aadd2e9240858cfa58255dfdb559a\n. It is enough to remove the permissions in GitHub for the updating. I think even the push webhook can stay, if that is desired.\n@Lyrina: While you are at it, can you trigger a rebuild of https://ci.appveyor.com/project/Liryna/dokany-lm73i/build/1.0.1-41/job/55fcggmy3iwpbv24, I have been unable to find out, why this suddenly fails.\n. Yep, the last part of the version number, gets interpreted as an octal number, because it has a leading zero since the version was switched from 1.0.0.5bbb to 1.0.1.0bbb (with leading zeroes). Will be \"fixed\" temporarily when we have the first 1.0.1 RC, because the number is 1.0.1.1bbb then :-D\n. Yeah, probably that's the best. I could not find anything about it on their forums or their issue tracker.\nDo you have any idea about the third build (the one that hung somewhere in the middle)?\n. The restarts you are describing in the issue are caused by a BSOD. Shame on us ;-) I opened a separate issue #386\n. I filed a feature request appveyor/ci#1158 to handle BSODs cleanly.\nClosing this issue as it is solved, probably due to the new cache.\n. > (dump is missing)\nWorking on it ;-)\n. MEMORY.DMP can be found here: https://ci.appveyor.com/project/Rondom/dokany/build/1.0.1-216/artifacts\nThe build will still be active for an hour with RDP enabled.\n. Yes\n. Could this be caused by your recent changes to appveyor.yml? I have seen that you changed how the tests are invoked for some reason.\n. I know it is too late but: It seems like in your case the machine rebooted while the RDP-script was blocking. And after the reboot AppVeyor did not run the RDP-script again so the build continued, finished and the VM was destroyed.\nI think they should document and improve their behaviour in case of reboots.\n. Oh, it is is Server 2012 R2 that AppVeyor runs. I never checked and being not too familiar with it I thought that it must be Win10 from how it looked like when logging in via RDP. \ud83d\ude0a \nBut I always thought that Server 2012 R2 <=> Desktop 8.1 and Server 2016 <=> Desktop 10, so it is the 8.1 driver we test, right?\n. Maybe we should also specify the FSTest GIT-commit we use. Right now we cannot reproduce a test at a later point because we do not know what kind of tests were run exactly.. Awesome! I think this is fine for now. Good to see that all tests pass.\nI think to test FUSE we need some way to specify which tests we expect to pass and which we expect to fail. Otherwise it is very hard to judge whether things are behaving as expected or not.. @marinkobabic Not relevant to the bug, but in its current form, your PR introduces some build warnings: https://ci.appveyor.com/project/Maxhy/dokany/build/1.0.1-25/job/qrc14ku9fxmhykdl. @marinkobabic The build-failure is not your fault, pull #407 to fix it or rebase on top of master once @Liryna merges it.\n@marinkobabic It looks like FSTest hangs for some mysterious reason. I would guess it is a BSOD. If you cannot reproduce it locally, add your fork to AppVeyor (you can register/login using GitHub) and use RDP to help with debugging.. Is there some .exe I could try to reproduce this without setting up a dev-env for a language I have never used?. It does not do any harm, when it's still there, but yes, we should revert this commitonce it is fixed. Maybe I spoke too soon. Seems like they were very fast in fixing it.\nAlexpux/MINGW-packages#1991\nNow you merged it already. Can you test, if the fix has hit the mirror, yet? If rerunning an older build still works, we can revert that commit straight away. \ud83d\ude04. No need to merge ithe revert prematurely. If the fix has not been propagated to the mirrors, you might need to apply it again... We will see ;-). Does this fix GIT on win-SSHFS?\nhttps://github.com/Foreveryone-cz/win-sshfs/issues/108\nMore analysis here which points to a Dokan-issue:\nhttps://github.com/git-for-windows/git/issues/1143#issuecomment-297710884\nOr should we create a new bug for this?. This needs kernel logs to analyse the cause of the unmount.. So far we do not really have enough information to compare it properly, but maybe we can add it to the Wiki and hope someone else could add more information?\nhttps://github.com/dokan-dev/dokany/wiki/Unsupported. For reference, see d60990cfe4b80f73ec8c8ec576dcabff86539879. See https://github.com/udaken/cuemounter for a fork with some activity that has been updated to Dokany.. For anyone who wants to implement this:\nSeed is 32bit, if I remember correctly (double-check). Take the first 8 chars of the GIT-commitref and turn it into a decimal number like this:\n[uint32]\"0xDEADBEEF\"\n    3735928559\n\n(i.e. prepend the first 8 letters with 0x) and convert to cast to uint32)\ngit rev-parse --verify HEAD. Is there any news on this issue?. I think it's best to contact [Paragon support](https://www.paragon-software.com/home/extfs-windows-pro/). Paragon uses Dokany in their commercial product and as Liryna said, we cannot even know which version they actually use. So Paragon should be able to help you.. Indeed, no PDB-file is installed for the MSVC-compiled dokanfuse1.dll. Nor are there any debug-symbols inside the MingW- (libdokanfuse1.dll) or Cygwin-DLL (cygdokanfuse1.dll)...\n\nFor now, you can build Dokan yourself.\nI can prepare a PR for this and the other issue, but I will not have much time in the next days, so no guarantees.... I have created PR #429. Please test it and give feedback, because I cannot test it myself right now.\nThis will only fix the missing PDB for the MSVC-build. Debugging symbols for the GCC-build are still missing. I have decided to postpone this, because that will be better done as part of a some refactoring of the dokanfuse build.ps1. Let's leave this issue open as a reminder.. > I've built ARM32 and ARM64 builds\nHow well does it work?. @woachk Seems like AppVeyor's \"VisualStudio 2017\" image has the WiX-RC installed.\nDespite the name, it has VS2015 installed as well. Our build scripts might need some path changes, though, in order to make sure it picks up VS2015 correctly.. Forget it, the image is not useable because the image does not have WDK and its VS2015-Installation is somewhat incomplete (appveyor/ci#1410) and it seems like the intention is to make people use the VS2015 image is they need a complete installation (see their response in the issue). We can always install the new version during build if we are impatient or wait until it is final and included in the 2015 image.\n. Does anyone know whether it is possible to test the ARM mirror without an ARM machine?. I think we can close this in favour of a new issue for the ARM-installer.. Ah, I see. Then again you actually have to try, otherwise it would be prone to race conditions.\nNot sure about the API, but yes I think it would be useful for filesystems to get some error-information that they can show in their UI. Right now, one has to enable the debug log to get those messages.\nI think this can wait until there is some reason to change the API anyways and then one can change it one go.. This seems to be some kind of race. It occurs only in around 80% of the cases.. The initial test where I encountered the issue was with 1.0.2. I tested with 1.0.1 today and I did not manage to reproduce it. . I tried to reproduce it with  build 1.0.1.0784 from 4f1d82fe80b574d81dabb59debcfbf1972e4e4b1 ==> Could not reproduce it.\nI also tried to reproduce it with the latest build 1.0.2.1130. I could not reproduce it either....\nTODO: Install release 1.0.2 again and try to reproduce again. If I can reproduce it there, reproduce with the Appveyor-built 1.0.2.\n. I tried with release 1.0.2 again and I could NOT reproduce it, either.\nMaybe my instructions above are not detailed enough and my memory is not detailed enough, either?\n@Liryna If you want, you can close the bug or you can can leave it open. Whatever you think makes more sense. I tried very hard to reproduce it with the version I initially encountered this with and I could not reproduce it.\n\ud83d\ude12. I think sparse files are NOT what you want. You still want to present a real-file with contents instead of the holes that are in a sparse files.\nI think the problem is that the Dokan userspace API does not allow setting a custom AllocationSize.\nThe code in dokan/fileinfo.c always sets the AllocationSize to the FileSize and then rounds up the size  using the ALIGN_ALLOCATION_SIZE macro.\nThis can also be reproduced using NTFS compression and the Mirror. The AllocationSize returned by the mirror-FS is not the same as the AllocationSize on the actual source NTFS-fs.\nIn the long term there should be a more extensive GetFileInformation inside DOKAN_OPERATIONS that enables passing this and other information to the kernel. I am not sure what would constitute a sane API-design, though.. GetFileInformationByHandleEx should do the job.. Read a bit more. Other structs have an AllocationSize member. FILE_STANDARD_INFO. > I see with procmon that the AllocationSize is correctly set to 0 but windows property still shows Size on disk equal to the size \ud83d\ude22\nHow is that possible? What happens if you return a random value such as \"42\"?. The filesize in your screenshot is divisible by 512, so it is not a good example to conclude that the file size is returned.\nMaybe there is some other call in fileinfo that sets that AllocationSize? Maybe try a file with an uneven size or return your value directly from the ALIGN_ALLOCATION_SIZE-macro.\nThe reason why this surprises me so much is that I have seen the \"Size on disk\" being unequal the \"Size\" in explorer (probably according to ALIGN_ALLOCATION_SIZE).. The command-line way, for those that are interested:\n$ git rebase --interactive <commitref>\n\nThis will open a text-editor with all the commits since the commit-ref. In this case, you are fine by using the revision where you branched off, i.e. master if you have not pulled in newer changes or want to rebase your commits in your branch on top of the newly updated master without creating a merge-commit.\nBy editing the text, you can\n * reorder the sequence of commits (by changing the order of the individual lines)\n * squash (i.e. merge with the previous commit)\n * drop commits (removing a line works as well)\n* reword (i.e. edit commit-msg)\n * edit commit contents (you will be dropped back to shell, where you can git add and git commit --amend. Once your are done, use git rebase --continue to proceed with the next commit)\nI have yet to find a GIT GUI that does this in a nicer way than this, but \"nice\" is in the eye of the beholder and I am a command-line-guy that likes text-editors ;-)\nFor modifying authorship information the following parameter to git commit is useful. \n   --author=<author>\n       Override the commit author. Specify an explicit author using the standard A U Thor <author@example.com>\n       format. Otherwise <author> is assumed to be a pattern and is used to search for an existing commit by that\n       author (i.e. rev-list --all -i --author=<author>); the commit author is then copied from the first such\n       commit found.\n\n. @Liryna maybe restart the builds of the two outstanding PRs. Long time ago, I saw a utility that would show the number of different types of handles (threads, timers, files...) used by a process. (Maybe even Visual Studio can do this?)\nIf someone knows what I mean, it can probably be used to give a hint whether there is some leak.. I am not sure, I understand your setup correctly. Can you describe it a bit more in detail (commands, software used)?\nWhat do you mean by \"linux server mounted with dokan\"?\nAre you sure that the behavior is specific to Dokan? I am not very familiar with Windows ACLs. I remember copying a non-executable file from a Samba share to my local harddisk using Explorer and it did not retain the permission i.e. I could execute the copied file.. ~~Some lines were accidentally changed and have indentation issues. Click the message to see details of the (suggested)~~. This is about sharing the Dokan drive on the network, right?. Some lines were accidentally changed and have indentation issues. Click the message to see details of the (suggested) changes. Can one create a Dokan network \"share\" without mounting it as a drive? If so, how would I do this with FUSE?. @Liryna Wouldn't it be nice if Dokan-library did this by default, if no method is defined? Haven't you implement this already when you did the pyfilesystem-port? Or was it only suggested/discussed?. (I  see this is tagged as 1.0.3. I have no strong opinion on this, but shouldn't this be 1.1.0?). @samkelly Maybe the user-space logs provide some additional information about what callbacks are called. Never used those bindings, but from reading the readme it should be possible via ops.options = ['debug']..     00007FFF12389CBA (ntdll): (filename not available): KiUserExceptionDispatcher\n    c:\\users\\sam\\desktop\\flashsync_node_test\\node_modules\\fuse-bindings\\fuse-bindings.cc (238): bindings_getattr\n    00007FFF0440228B (dokanfuse1): (filename not available): fuse_teardown\n    c:\\users\\sam\\desktop\\flashsync_node_test\\node_modules\\fuse-bindings\\fuse-bindings.cc (751): bindings_set_dirs\nThis is strange. The code in bindings_set_dirs in fuse-bindings.cc should call walk_directory inside dokanfuse1.dll. (this is the \"filler\"-callback passed to readdir() by dokanfuse).. How does the installation  of the bindings work? Are they compiled locally or are you downloading binaries?. I wanted to rule out any possible binary incompatibility problems. Testing 1.0.0-RC2 might give some hint, or not. Better recompile when using a version before 1.0.0-FINAL, there were no guarantees given for versions pre 1.0.0-FINAL.\n\nany idea what that means? \n\nIf I knew I would have said it :-) I think, it might be the easiest to either single step through the code or add some printouts to the dokanfuse code. Ignoring the fuse_teardown, my second guess is that fuse_get_context which is called by getattr in the bindings returns NULL for some reason (The getattr is called by dokanfuse inside the FindFiles to get some additional information about directory-entries).\n. Further above I wrote:\n\nmy second guess is that fuse_get_context which is called by getattr in the bindings returns NULL for some reason (The getattr is called by dokanfuse inside the FindFiles to get some additional information about directory-entries).\n\nSee, above, for the reason for this getattr. If I remember correctly, dokanfuse stores the context in a thread-local variable. I think it makes sense to print out the fuse_get_context() at different places in the code to see when the context-variable gets lost. Maybe node is doing \"something\" with the thread local storage?. @marinkobabic Aren't these bindings already using single-threaded FUSE?\nhttps://github.com/mafintosh/fuse-bindings/blob/5fa4376b5f9a4672a90f841e9e7f234be3798c40/fuse-bindings.cc#L685. @Liryna From the code-line I linked, I conclude they run in single-threaded mode. :-) They use fuse_loop instead of fuse_loop_mt.. @Liryna About adding an option, I don't think we should expose that implementation detail right now when we have an (unfinished) PR that gets rid of it.. fuse_loop => single-threaded\nfuse_loop_mt => multi-threaded. Please, take the following with a pinch of salt. There may be some misunderstanding on my side.\nEDIT: Misconception, see my next comment.\n~~Hmm, I still have doubts whether this is actually something we should support from the Dokan-FUSE side, but I may misunderstand things.\nlibfuse for Linux uses thread-local-storage for the context as well: https://github.com/libfuse/libfuse/blob/fuse_2_9_5/lib/fuse.c#L2502\nThus, creating a new thread and then expecting fuse_get_context() to work would fail on Linux as well.~~\n~~I think the problem is that those bindings create new threads for some reason and expect fuse_get_context() to work in the newly created thread. Admittedly I do not really understand why, because I have any experience with how NodeJS works or those bindings. So, from what I understand this issue only surfaces because emulations such as Dokan-FUSE need to call multiple callbacks for the same request to get the required information. (But why? Why do the bindings re-use the existing thread for the first request, but not for the second? Can someone explain me? Can there be other circumstances where a second thread is created?)~~\n~~I am not saying it is the bindings at fault here, but from what I understand~~\n1. ~~Dokan-FUSE calls readdir from Thread X (fuse_get_context() still works)~~\n2. ~~Dokan-FUSE calls getdir, still from Thread X (fuse_get_context() still works)~~\n3. ~~The native code in the bindings get the getdir (as far as I understand still on Thread X, so fuse_get_context still works)~~\n4. ~~The bindings create a new Thread Y and run fuse_get_context()~~\n~~So, why can the bindings not preserve the context when they receive the getattr-call while it is still in Thread X and pass it on properly? I guess there is some misunderstanding on my side in one of those four steps. It would be nice if someone could enlighten me, and point out what is wrong about my understanding~~.. I think I got it.\n1. The bindings receive the readdir on thread X, get the context\n2. the bindings create a new thread Y for servicing the readdir, which in turn runs the walk_directory /filler callback \n3. Inside the walk_directory-callback dokanfuse then runs getattr from thread Y (which does not bother dokanfuse)\n4. the bindings crash because they are lacking a context, because they run on thread Y instead of thread X.\nIndeed adding a new parameter to the callback-filler-function should fix this. So @marinkobabic is right, that this is the correct approach.. @samkelly I got it now, I was misunderstanding things. @marinkobabic Please confirm my understanding is correct.\n\nIn general, I think the reason we are dealing with a new thread for executing the callbacks is so that the callbacks can be executed asynchronously. For example if someone had to implement read file by waiting for the result of a network operation, and then returning this data. If we simply blocked, then the network operation could not be performed, since networking in node.js (and other IO operations) are typically non-blocking and asynchronous. Does that help at all?\n\nThat helps. Please note that the node-bindings do not support any multithreading at this point.  I don't know why it is not yet supported, but I see no reason that it should not be possible as long as you never block inside the callbacks. This is something you might want to look into if you want be able to service multiple requests at the same time.\n\nalso might be relevant: the Dokan drive in explorer always shows as having 0 bytes used 0 bytes free. Don't know if this could be a symptom of some other issue.\n\nI think this is because you have not implemented statfs, yet.\n\nupdate: in explorer, it always says file size is 0 (even though reads succeed), probably because that is in the context I need \ud83d\ude22\n\nI think this is because you have not fully implemented ~~stat~~ getattr, yet. I suggest, going step by step implementing the basic operations one by one. (Tutorials on FUSE help in which operations are most crucial for getting things working i.e. which ones to tackle first)\n. > update: in explorer, it always says file size is 0 (even though reads succeed), probably because that is in the context I need \ud83d\ude22\nOh, and because you wondered: The context does not contain that much information. I think for many filesystems it is not needed. See: https://github.com/libfuse/libfuse/blob/fuse_2_9_5/include/fuse.h#L601. @Liryna\n\n@marinkobabic, @Rondom Do you think we are missing something in dokan fuse ? Or it is fuse-bindings that has a special behavior ?\n\nThis issue is about a bug where it was a bit hard to track down what the bug and the expected behaviour was. @marinkobabic has the fix ready, as far as I see. I assume he will submit a PR soon \ud83d\ude09 . Maybe it makes sense to include this in 1.0.3?\n\nI am still wondering what happened since the working integration of dokan in fuse-bindings and now the behavior that we are seeing.\n\nIt is  commit 0b350fd. If the filesystem implementation calls the filler-callback inside readdir from another thread, fuse_get_contextwill not work inside the getattr that we call from inside the filler-function. The combination of calling the callback from another thread and using fuse_get_context is probably uncommon enough for it to have gone undetected.\n@samkelly wrote:\n\nAs some general feedback, I will say that the process of integrating with WinFsp has been significantly easier than fixing the existing fuse-bindings implementation that used Dokany, so there may be some things about that project that would be good for the Dokany team to emulate\n\nIf you can, please be more specific. When looking at the code while analyzing this bug, I also have the impression that the bindings have some special cases for Dokan that should not be necessary, i.e. I am not sure why they were added by the author (maybe they are in fact necessary and we should instead open a ticket about it).. @Liryna not sure if my explanation was correct, because some fixes were necessary inside the fuse-bindings as well.. I don't know about your particular problem, but there is a wiki page with some info. Are you returning NTSTATUS errors?\nhttps://github.com/dokan-dev/dokany/wiki/Update-dokan-legacy-application-to-Dokany\nShould this problem turn out to be something common amongst migrations from legacy Dokan, we can add it to that wiki page.. Do you know FileSpy and Process Monitor? Do they fulfill your needs?. I see. Somehow missed that you were in need of executing code rather than logging only.\nDoes the Dokan mirror example suit your needs?. I am no expert on Windows Kernel FS-drivers, but for me it sounds like what you technically need is a filter driver, but you (understandably :smile:) do not want this due to the hassle of developing Windows kernel-code and the signing requirements.\nThe Dokan-Kernel-Mode driver is signed with an EV-Certificate i.e. it can be installed without any problems, even on SecureBoot-enabled systems.\nThe user-mode file systems do not need any signing. There is a user-space library that talks to the kernel-driver. Dokan creates filesystems that can be mounted as a drive, network drive or directory junction. Thus, the transparency you would like to achieve is probably only possible with a filter-driver. There are bindings for .NET. (see links below). Please note that the .NET Mirror is not as feature-complete as the C-Mirror.\nDocumentation\nCode. 2. So, I did some test and there is indeed the possibility of races.\nI tested the following two scenarios. I placed a Sleep(15000); right before the return in delete_directory\n      * Fired rmdir with empty dir in one cmd-window, created file inside the directory from another cmd-window while rmdir was running => worked without a problem. rmdir returned success and the directory was not deleted.\n       * Fired rmdir with non-empty dir in one cmd-window, removed the file inside the directory from another cmd-window while rmdir was running => worked without a problem, rmdir said that the directory was not empty\nSo, I understand that this is a separate issue that has to do with a flag given during CreateFile, right? So does this affect deleting files as well, then?\nGiven that it is a separate issue, that exists \"anyway\", do you think it makes sense to merge this PR?\n(I do not have any idea on how to fix this without doing some reading, because, as you know, I do not have much of a background on Windows-FS-semantics (nor do I feel like doing this in the near future. :-()\n. Of course I am talking only about the mirror filesystem M:.\nI think for testing it with the C-Mirror, you could add a Sleep(15000); in the C-Mirror here.\nI am not familiar with Windows-FS-semantics to know whether this is by design. My gut feeling is that it should not be possible and some flag passed to `CreateFile would grant exclusive access to the process that wants to delete the directory, but I am not sure...\nAll in all this fixes PR one issue #270. The race-issue (if it is an issue) existed even before the fix. It becomes a bit more likely with the fix, but compared to the unfixed situation (always returns sucess, even if directory is not empty) it is an improvement.\nWhat can happen after applying this PR is that\n1. A race occurs, the delete returns success, but the directory is not deleted, because a new file is put into it (Exactly the same behaviour as before).\n2. A race occurs, the delete fails (dir not empty). In the meanwhile the dir becomes empty. The dir is not deleted. This behavious is probably a non-issue or at least not a big issue.\n3. No race occurs, either sucess or dir-not-empty is returned and the directory is either deleted properly (sucess) or not (dir-not-empty). This is the desired behaviour.\nSo, after applying this PR, instead of showing the wrong behaviour in 100% of the cases, the wrong behaviour can still occur in X% of the cases, i.e. when a race occurrs.\nPlease tell me, if you agree/disagree.. @blesliecan Something went wrong with your upload. Your zip-file is 22-bytes (but at least it has Phil Katz's initials at the beginning, so it is at least a ZIP-file :-D ). This produces broken links like \nhttps://ci.appveyor.com/project/Maxhy/dokany/build/1.0.2-163 while the build is running. Only when the build is finished the link is updated on the GitHub side to for example \nhttps://ci.appveyor.com/project/Maxhy/dokany/build/1.0.2.1163\nSo, don't merge this. :-(\nAlternative approaches\n1. Keep version in appveyor.yml in sync with \"our version\" (i.e. format). In case of mismatch update (GitHub links will be broken, during build)\n2. Keep version in appveyor.yml in sync with \"our version\" (i.e. format). In case of mismatch warn\n3. Keep version in appveyor.yml in sync with \"our version\" (i.e. format). In case of mismatch fail build\n4. Leave everything as it is. > But maybe we can ask appveyor why Update-AppveyorBuild does not directly update in live the link ?\nappveyor/ci#1074. @timofonic Not sure what your intention is in inquiring about this issue, given that it does not really affect users in any way. :-)\nThe long story is that I started developing a cleaner approach for the version-handling, but did not finish it. https://github.com/Rondom/dokany/tree/no_hardcode_version\nDo you want to help?. Some document from Microsoft with more information and this discussion for some background.\n. Related PR: #492 . > FILE_CASE_SENSITIVE_SEARCH | FILE_CASE_PRESERVED_NAMES\nCan those be used in a sensible way to work around limitations on reparse points? #293 . Thx, bailey27. This was on my todo-list as well :-). @Liryna wrote:\n\nAnyway this size is wrong if I can say because we support long file names #464 \n\nMaximumComponentLength is about individual file/directory names. The issue linked is about paths.. Hm, so let's see what is different.\nCan you produce mirror logs when opening the explorer dialog (both where it works and where it does not work)? I am not sure if it is needed, but maybe you can also provide a log from ProcessMonitor.. I could reproduce \"NFS Sharing\" not showing up for Dokan drives under Win2016 with Dokan 1.0.3 and the snapshot 1.0.3.1172.\nI tried with unmodified Dokan 0.6.0 (reporting as DOKAN FS-type) and indeed it did not work with this one either (as you described). Can you share your modified version?\nI tried getting logs with ProcessMonitor and I succeeded for the newer Dokany releases. Dokan 0.6.0 has some bug that makes all paths in ProcessMonitor be explorer.exe instead of the real path. This bug was only fixed in later Dokan versions. \nEasiest to produce the logs in ProcessMonitor is, if one checks \"run folder windows in a separate process\" in the Explorer options. This makes it easier to filter only for the explorer window of interest in Process Monitor.\nAttached is the ProcessMonitor log of Dokan103 and NTFS (invoking properties using Alt-Enter on \"cygdrive\"-folder).\nexplorer_properties_nfs_cygdrive.zip\n. So, does this mean I will have to do any checks whether delete file is possible both in ZwCreateFile and DeleteFile?. This is only a filesystem library that win-sshfs uses. @Foreveryone-cz/win-sshfs is the tool you are probably using. Given that it is a connection issue it is most probably with win-sshfs and not an issue on the Dokany side.\nShould it turn out to be an actual issue with the filesystem, you can always come back here and report your filesystem issue, of course.. This is basically a continuation of #464.. Alternatively, we could always allocate 32K and call it \"good enough\", Anyways the expectation should be that the mirror does not crash in its default configuration just because it encounters a long path.. Hasn't there also been some implementation based on JNR? I cannot find it. So probably my memory is blurry and I mistook that PR you are talking about as an implementation based on JNR.\n(I have never done any Java interacting with native code so I don't even know about the differences JNA, JNI and JNR and thus do not know about what is the latest and greatest...). > Cool. Would there be anyone interested in \"completing it\" :)\nWell, this is open source software. So if there is someone interested in polishing it, I am sure that person will do it :-) So, I suggest anyone interested in this, to \"just\" start :smile: (and maybe announce your efforts here and in dokan-dev/dokan-java#7 to prevent duplication of effort.\nIf there are Dokan-specific questions, I am sure that people here will help you. Don't be afraid to ask!. There is nothing too \"tricky\" there in my opinion. Thus I do not see why you give the existing code a try and improve it (and hopefully share your improvements).. Will this also help to implement #312? Or is the sessionID specific to RDP only and will be empty in other cases (Win32-OpenSSH, PowerShell-remoting, local login)?. Hmm, okay. One first needs to define what users should be allowed to do. Should non-admin users be allowed to unmount their own global mounts or only their own-non-global mounts in the current session? Maybe allowing a user to unmount their own mounts (no matter if global or not) is the sanest behaviour. So, given that, I cannot see how the session ID helps if it is not always set (and I guess the session might expire as well, if the user logs out).. Ok, I found out how to print more information (-lines parameter).  If you have suggestions for other WinDbg-commands to run automatically, feel free to tell me. \n https://ci.appveyor.com/project/Rondom/dokany/build/1.0.3-365/job/58vvbd79bisbxgmt\n https://ci.appveyor.com/project/Rondom/dokany/build/1.0.3-367/job/9pvfqv40aerocp18\n* https://ci.appveyor.com/project/Rondom/dokany/build/1.0.3-368/job/w70vr3s1i5l4lwgy\nThe crash seems to occur somewhere in DokanDispatchCreate. You can download a dump including the PDB and binaries in the \"Artifacts\"-tab on AppVeyor.\nWithout having much of a clue about the code I tried reverting @bailey27's two recent commits 51e690f and 756ab5b, but that did not help.\nI cannot reproduce the issue on my Win 2016 machine.. Could it be that the relatedFileName->Length is the buffer length in sizeof(WCHAR) instead of the number of bytes? I did the change you suggested, but it did not help. Maybe I did something wrong? \n  if (relatedFileName->Length > 0 && fileObject->FileName.Length > 0 &&\n      relatedFileName->Length >= sizeof(WCHAR) &&  // test\n  relatedFileName->Buffer[relatedFileName->Length / sizeof(WCHAR) -\n                              1] != '\\\\' && fileObject->FileName.Buffer[0] != ':') {\n    needBackSlashAfterRelatedFile = TRUE;\n    fileNameLength += sizeof(WCHAR);\n  }\n\n. I did as you suggested. I did not spend too much time on understanding the code, so maybe I commented the wrong things and made it worse. I am now getting a crash at a completely different place :-(\n\nBuild output with reference to crashing line\n\nChanges I did. So, in order to understand it better: That one crash was in create.c in DokanDispatchCreate, the new crash is in DokanNotifyReportChange0 in dokan.c:478. How are the two connected? Should I try something else?. OK, thanks. (I am a bit tired, so I am a bit slow at understanding). I cannot reproduce it on Win2016. That's all I can say. if you have a Win 8.1 system, you should probably (or hopefully) be able to reproduce it.. @Liryna what do you think about running the tests also on both Win2012R2 and  Win2016 on AppVeyor? For this, we would need to download the artifact from the actual build, to use it in the \"FSTest\" configuration, because we cannot build in AppVeyor's Win2016-images. (This means that the two will be dependant on another). Any other drawbacks, objections?. It looks a bit clumsy. AppVeyor will build all combinations, but we exclude the ones we do not want.\nimage:\n    - Visual Studio 2015\n    - Visual Studio 2017\n  matrix:\n    exclude:\n      - configuration: All\n        image: Visual Studio 2017\n      - configuration: Coverity\n        image: Visual Studio 2017\n\n\nTurns out it is not so easy to re-use the artifact from the \"All\"-configuration. Seems like AppVeyor needs a Token-Auth for their API even if it is read-only-access from the build-worker. I think it is not worth the effort in this case, because one could not safely enable it for pull requests. That also rules out some other things, like comparing tests between the previous build and the current build and printing the delta. \ud83d\ude22 \nRather I think we can wait for the WDK to be installed on the VS2017-image (Win10), which has VS2015 installed as well, so that we can build there for the tests as well, while keeping the compilation environment as similar as possible to avoid testing builds that are too different from one another. appveyor/ci#1554\nI think that's the best we can do with the free AppVeyor-infrastucture while keeping effort reasonable.. I have just learned that no Auth-Token is needed for publicly available information. So I extended my code to run the tests both on Win2016 and 2012R2. The result was that we get a BSOD on both OSes.\nMy local tests were done on Win2016 with  0e159e3 and so were the first tests with BSOD on AppVeyor. \nI will submit my PR as a draft. Hopefully, it can be merged once the BSOD is fixed.\n. Have you tried running it with the same verifier settings and maybe even running the script from the same path?\nOtherwise there is still the possibility to RDP into the build VM.... Only the assignment, i.e. without the other change in the if-statement in line 647?. Please double-check the commit, but if we get no BSOD on AppVeyor things should be fine and this issue is fixed and the PR can be merged. :raised_hands: . @cglong Asking them whether they would be interested in moving their bindings to a separate repo, might under the dokan-dev-GitHub organisation is indeed a good idea. Not sure if they are interested, if not, we can always create a \"dummy-repo\" linking to code and documentation for better visibility (I understand that this was your main point, right?).. Coming back to the issue: Don't you think something else goes wrong here? Why does Word make so small requests? Dokan can do nothing against a userspace-application making inefficient read-requests?. I did not express myself propely. I am not saying the app is at fault. But somehow Dokan makes the app do un-optimal reads. I mean it works fine with NTFS, why does an application change its behaviour? Ideally we can find an open source App with the same behaviour to simplify the analysis.... Oh sorry! I mixed up issues! As @cdarau has said above the behaviour is the same for Word on NTFS and Dokan (i.e. same read-patterns, only the performance is worse on Dokan).\nIgnore the two comments above. I wrote them thinking this was issue #515 \nNow I can also see the reason for your confusion! Sorry! I should sleep!. First of all: Do you know about FreeOTFE or LibreCrypt?\nDokany is for implementing an actual filesystem.\nYou might have a look at ImDisk. The official version by the author only supports raw images, but it is open source (the author seems to only publish source tarballs i.e. there is no repo.) There is a community-maintained version that adds support for other image formats. Not sure how difficult it is to provide support for your own.. I think it's this one: https://sourceforge.net/projects/imdisk-toolkit/. Well, that is exactly how you would go about writing a JNI-wrapper I guess (further comments in the other issue).. Usual uninformed naive question from me...:\nWhy does Explorer not use the message sent by BroadcastSystemMessage? Why is an additonal SHChangeNotify needed?\nhttps://github.com/dokan-dev/dokany/blob/b1a388d1a480ad4a7124b74e8a57229b479d532c/dokan/mount.c#L533\nHow do tools like SUBST handle this? Or does SUBST only work for the current session?. Ah, I see. I thought that BSM_ALLDESKTOPS from a service would enable sending messages to everything.\nSubst is no service of course. I remember using it under MS-DOS 5.0...haha Googling says it uses a function called DefineDosDevice, but what would happen when running SUBST inside a service?\nWould the checkbox \"Allow this service to interact with the desktop\" help?. Can we run runkarr on this PR to see if it improves things compared to the current implementation?\nSee #519 for a link to a branch that has an installation script for the MS filesystem testing utilities.. https://github.com/Rondom/dokany/tree/ifstest/scripts. I will do it at a later point. I only thought that a this can be helpful that everything is all right, but I just noticed that it requires additional work. I will add it to AppVeyor at a later point.. There is no such functionality at this point. One would need to come up with a design and implement it.. Thanks @Liryna, could not find the time to do it.\nPreviously my tests with IFSTest on AppVeyor were based on 0e159e37d28d44828210d72b34d736ccd43933d5 and I got the out-of-bounds described in issue #519. I am now noticing , that with your change @marinkobabic, the BSOD we get on AppVeyor changes to a different one (I have double-checked this and its reproducible). Now with your commit, instead of the out-of-bounds issue descibed in #519, we get the bugcheck posted below at the end of this post.  See the build log for complete !analyze -v and the minidump and built executables in the artifacts..\nNow please tell me, whether I should open a third issue about that (because it is a separate issue). To me it sounds separate, but I do not see why your commit (in addition to causing this issue) should magically fix the #519 BSOD and in turn uncover another issue. Then again I don't understand why this issue here (mounting not working at all) was not uncovered on AppVeyor Win2016, which is pretty similar to my environment. Could it be the verifier being enabled? Questions over questions...\nDRIVER_VERIFIER_IOMANAGER_VIOLATION (c9)\nThe IO manager has caught a misbehaving driver.\nArguments:\nArg1: 0000000000000224, An IRP dispatch handler has returned a status that is inconsistent with the\n    IRP's IoStatus.Status field.\nArg2: fffff801b0003398, The address in the driver's code where the error was detected.\nArg3: ffffcf817f530ea0, IRP address.\nArg4: ffffffffc000000d, Expected status code.\n```\nFAULTING_SOURCE_FILE:  c:\\projects\\dokany\\sys\\dispatch.c\nFAULTING_SOURCE_LINE_NUMBER:  25\nFAULTING_SOURCE_CODE:\n    21: \n    22: #include \"dokan.h\"\n    23: \n    24: NTSTATUS\n\n25: DokanBuildRequest(__in PDEVICE_OBJECT DeviceObject, __in PIRP Irp) {\n    26:   BOOLEAN AtIrqlPassiveLevel = FALSE;\n    27:   BOOLEAN IsTopLevelIrp = FALSE;\n    28:   NTSTATUS Status = STATUS_UNSUCCESSFUL;\n    29: \n    30:   __try {\n```. > I can explain why we have here a new issue. My pull request caused a bug and the bug was not discovered by the build process. So I expected that all is fine but it's not. The build process must enable the verifier to discover such issues. Can you implement this for the future please?\n\nVerifier has always been enabled (my PR does not change anything in that regard). \n\nhow we invoke it:\nhttps://github.com/dokan-dev/dokany/blob/3846b9ddd26bae7e8097779efb391097828ce78e/appveyor.yml#L39\nand its output there:\nhttps://ci.appveyor.com/project/Maxhy/dokany/build/1.0.3-198/job/ndg4y44f8n3a3xj9#L22\nand also  here (with my PR, where we the verifier detects the IRP-issue):\nhttps://ci.appveyor.com/project/Maxhy/dokany/build/1.0.3-199/job/xhw28cfx887qq71y#L53. There was actually an issue with BSODs not being detected on AppVeyor, which I fixed in the process of implementing the IFSTest-PR. So Marinko's PR did cause a BSOD on AppVeyor, but nobody noticed it. :-) I could have remembered that :-). Once the build passes, we can merge this, I think.. See also #472. > I assume if all tests are fine that this pull request does not cause a BSOD anymore \ud83d\ude04\n\n@marinkobabic Unfortunately, not yet \ud83d\ude1e. Only when #534 (or more specifically b9e3e3d) is merged, you can rely on it.\nRight now, AppVeyor will happily continue with the next steps in the build process as if nothing happened (appveyor/ci#1158). \"Thankfully\" you can \"easily\" detect the unplanned reboot, by hovering over the line-numbers. They will reveal a tooltip with the timestamp. If it is 0:00:00, then a reboot happened (appveyor/ci#1145) From line 1109 onwards you can see that we got a BSOD and you can also see that WinFSTest and FSX output is missing before those lines.\nI also see that your PR creates compiler-warnings. There is also some code-style issue (return type on separate line vs. on the same line of the definition),. Don't have access to a PC right now. If you cannot reproduce it locally, I suggest adding your fork to AppVeyor and creating a separate branch for testing where you can merge my branch and access the build-VM via RDP if necessary.\nOn 24 June 2017 23:52:22 CEST, Marinko notifications@github.com wrote:\n\nPlease can you post the reason for BSOD? Haven't seen any warnings in\nvisual studio. But I will cancel the pull request.\nAm 24.06.2017 22:04 schrieb \"Andreas Gnau\" notifications@github.com:\n\nI assume if all tests are fine that this pull request does not cause\na\nBSOD anymore \ud83d\ude04\n@marinkobabic https://github.com/marinkobabic Unfortunately, not\nyet \ud83d\ude1e.\nOnly when #534 https://github.com/dokan-dev/dokany/pull/534 (or\nmore\nspecifically b9e3e3d\nhttps://github.com/dokan-dev/dokany/commit/b9e3e3d13b76a7cd24b30325d329dade80abc2bb)\nis merged, you can rely on it.\nRight now, AppVeyor will happily continue with the next steps in the\nbuild\nprocess as if nothing happened (appveyor/ci#1158\nhttps://github.com/appveyor/ci/issues/1158). \"Thankfully\" you can\n\"easily\" detect the unplanned reboot, by hovering over the\nline-numbers.\nThey will reveal a tooltip with the timestamp. If it is 0:00:00, then\na\nreboot happened (appveyor/ci#1145\nhttps://github.com/appveyor/ci/issues/1145) From line 1109 onwards\nyou\ncan see that we got a BSOD\nhttps://ci.appveyor.com/project/Maxhy/dokany/build/1.0.3-203/job/t49vtcmjqp9dx4vo#L1109\nand you can also see that WinFSTest and FSX output is missing before\nthose\nlines.\nI also see that your PR creates compiler-warnings\nhttps://ci.appveyor.com/project/Maxhy/dokany/build/1.0.3-203/job/nj1m4nuvw4pmy0w0/messages.\nThere is also some code-style issue (return type on separate line vs.\non\nthe same line of the definition),\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/dokan-dev/dokany/pull/540#issuecomment-310862691,\nor mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/ADHSOG3k1RCxi8uwylvrigR5p6cCAYwqks5sHWvigaJpZM4OEWEY\n.\n\n\n-- \nYou are receiving this because you commented.\nReply to this email directly or view it on GitHub:\nhttps://github.com/dokan-dev/dokany/pull/540#issuecomment-310868037\n\n-- \nSent from my Android device with K-9 Mail. Please excuse my brevity.. I don't have any clue about Windows programming. What is the difference between IOCTLs and FSCTLs and why would one use one over the other?. I think it sounds good. @Liryna, what do you think? I think it could be useful to support both IOCTLs and FSCTLs if it is not too much extra work. . I think it is important to distinguish between custom IOCTLs/FSCTLs and Windows ones. The latter should probably be handled within the kernel driver itself, to keep things simple and keep some level of abstraction. What do you think?\nHow would one distinguish between the two? Is there a range that Windows reserves for third-party code?  That way, we could basically say:\nif (custom_ioctl)\n    pass_to_userspace()\nelse {\n    // handle windows  ioctls\n}. A common pattern is to leave some reserved members at the end of the struct and instruct callers to keep them zero. Adding a new member does not break compatibility.\n\nMore extensible and also enabling providing ABI compatibility is using a version macro, i.e. users of the library define the version of the library that they desire. The header then defines the structs and the functions taking those structs according to the version. New versions still support the old version by converting the arguments accordingly. This is what I had planned to enable at least source-level compatibility for  Dokan 1 => 2.\n(I hope what I wrote is understandable.). I can still reproduce this with snapshot build DokanSetup-1.0.3.1225.exe  on Windows 2016 with latest updates.\n\nsave profile => EAC exits\nload profile => EAC crashes. Have you tried uninstalling the network provider as follows?\n\ndokanctl.exe /r n\n. I can confirm that I had network shares mounted as well, when I reproduced it.\n@jnheinz Have you tried the suggestion I my previous comment?. Sure. Run the powershell-script-wrapper or IFSTest.exe directly without parameters for help. I think it is /t to include and -t to exclude (double-check to be sure). Locally on Win2016.. If the test passes, sure :-D. Maybe compare with NTFS?. Can you maybe create a pull request? AppVeyor produces a (test-signed) build automatically, which would enable a wider crowd to test your fix. If you do not have a PC with GIT installed at hand, you can even do your edits via the GitHub web interface.\n(If you are not confident about your fix you can also fork this repository and register your fork with ci.appveyor.com)\nIn order to enable testsigned drivers, follow the instructions in the wiki.. For those who want to test:\nLatest build is available here: https://ci.appveyor.com/project/Maxhy/dokany/branch/master/job/jl8gpomo3im13ihp/artifacts\nYou need to enable testsigned drivers, follow the instructions in the wiki.. Just an addition: You will have to have at least version 14.0.23918 of vcredist.. I have had strange problems with the FUSE mirror that I could not reproduce with my own filesystem as well. Unfortunately they were hard to reproduce and track down. So I gave up.\nBut please open a separate issue!. We do not need any changes to the readme or mainpage.md at this point (PRs open for that already).\ndokan.h still needs some improvement.. Oh, and it should probably also cleanly deal with the situation that the Cmdlet is not available (Windows 7???). Also state that it is the minimum version, because any later version is fine.. @bhardwajanish I suggest to wait until the other PRs are merged to prevent conflicts.\n@sm4rk0 I am not too familiar with GitHub-webinterface (never really used it), but is it not possible to update this PR without closing and creating PRs? I mean, the usual workflow when working locally is to push (force-push, if necessary) to the same branch, keeping all history and discussion in one PR.. Regarding the last question: do a git blame. There has been some bug where the length wouldn't get set in certain situations.. Can you submit a PR against the installer in the Corillian-asyncio branch to add the file to be installed? You have to do the change for both x86 and x64.. Todo before merge: test that binary from AppVeyor runs. Tested. Can be merged!. The VS2015-image runs Win 2012R2 (=8.1), the VS2017 one Win 2016 (=10). I think 10 and 7 are most common, but AppVeyor only provides those two images to free users. I think testing on 8.1 still provides value given that we don't test on Win7.\nAll that is needed is replacing 2015 with 2017 and 2017 and 2015 in the config. I cannot remember why, but the order of images matters. So inside image: 2017 should should come first.\n. Ideally some of the companies using Dokany in commercial projects would sponsor some infrastructure to run it with different Windows versions.\nWindows 7, to avoid regressions and Windows 10 \"trunk\" (or whatever MS calls it) so that issues introduced by changes that MS does are caught early. We have now had two issues which were only noticed after some users upgraded and noticed things not working and I somehow doubt it will be the last Win10 update that changes something with regards to filesystems.... Is this issue maybe related? https://github.com/jetwhiz/encfs4win/issues/94\nMaybe someone can test with the standard C++ wstring_convert and even submit a pull request to replace the unixify-function with this?. Maybe there is a misunderstanding / communication issue here. @linyuan870 Can we get some steps to reproduce a user-visible-bug? Like actual chinese filenames being garbled?\nIf the issue is only the Visual Studio debugger reading the string with the wrong encoding, I think this is not something that Dokany can fix, but maybe I am misunderstanding things as well.... FUSE is an API that assumes POSIX-filenames, encoding is usually UTF-8, but that is more by convention than by any rules, if I am not mistaken. In fact under POSIX filenames can contain any byte except '\\0' and '/'.\nThis is the reason why the Dokan-FUSE API is also based on UTF-8-strings. So yes, if you want to interact with an API that takes wchar, you need to convert it.\nThe FUSE-wrapper's purpose is to write filesystems that run on both Windows and POSIX operating systems such as Linux or the BSDs with minimal porting. wchar-based-APIs are very uncommon outside of the Windows world. Thus I am wondering what API it is that requires wchars that you are using and what your motivation is for using the Dokan-FUSE API over the Dokan-API.. What is your exact windows version (output of ver command). I am pretty sure, I have been running win-sshfs under win10 without any problems. Will double-check tomorrow\n. Indeed it 1.0.5 is creating problems. 1.0.3 worked fine.. @KyleSanderson It is recommended to ship dokan1.dll, which is what win-sshfs should do. This way it can continue functioning as long as the Dokan 1.x.x driver is installed.. I have not tried Google Drive Stream, so I cannot check, but  the list of open-source components they use claim that it is using Dokany under the hood. ;-)\n https://support.google.com/drive/answer/1716931\n https://github.com/google/google-drive-dokany. Yes, that is what I was looking for. I only looked at the behaviour and not at the code. Of course the behaviour given that the number in the header is not increased... Something for the next version.... I filed the issue not knowing that the error is already  handled properly if there is a mismatch. So if that works, I think nothing needs to be done except changing the version.. Also, 0.8 is no longer supported. Ceph-dokan should upgrade.. Glusterfs uses the kernel FUSE ABI if I see it correctly, i.e. it interacts with /dev/fuse directly. Dokany only supports the high-level libfuse API. I guess it would take quite a bit of work to port this.\nNot sure about your use case of running it on Windows. Depending on the specific use case it might as well be easier to port whatever else that requires you to use Windows to Linux, I think.. We do produce arm32 and arm64 binaries, which can be downloaded in the Dokan.zip file with every release.\nWe need some help on the installer, so any PR in that regard is welcome, see  #621.\n. Use DokanSetup_redist.exe. Hm, can we fix this without breakage somehow? If I understand correctly, this would break ABI-compatibility, which is not very nice to both consumers of the library and their users.\nWhat is the impact of not having this fixed in 1.x? If the impact does not justify to wait until 2.0 with this fix, maybe we can think about some solution that involves using a different struct depending on the kernel driver version (DokanDriverVersion)? If we go that route, I think we should ideally make sure that this is tested (old userspace, new kernel, new userspace, old kernel).. Ah, I see. I agree.. Coverity is back, but everyone is advised to change their credentials (I guess besides the password it includes the credentials stored in \"secure environment variables\" in AppVeyor). Is it possible to have plug-and-play filesystem drivers? At least other drivers such as ext2fsd or btrfs-win require a reboot as well. Maybe they did not bother either, but maybe it has a reason?. Don't know about why 2.0 is slower (it should not!). 2.0 is still in development, so there is probably some bug.\nThe following is mostly hypotheses and when it comes to performance one should always measure, but I can say that there is definitely room for improvement in the following area.\nHonestly, I am not surprised that this workload is pretty slow. In general, we could profit from implementing FUSE 3.0 support to speed up listing directories. Also some caching on the kernel side like #291 should help. Problem is that in order to list a directory in Windows, we need more information than readdir alone provides. So we need to stat (getattr) every single file. This should improve the performance of readdir (if a filesystem implements it, encfs very likely cannot without non-portable changes). While it may improve things, at least Cygwin-rsync cannot make use of that data, because it uses POSIX file operations which are translated by Cygwin to Windows file operations. So rsync will probably stat every file as well. So I can tell you that there will be at least two stats being done for each file right now -- without any caching...\nFUSE 3.0 has FUSE_READDIR_PLUS which allows returning more information on readdir which is cached on Linux. On Windows we can return this information directly without the need of calling stat for each file. Ideally this information would be cached on the kernel side #291 \nWhen used for network-filesystems caching is often problematic, but I do not see why Dokan should not support caching for on-disk-filesystems where no other entity could cause cache coherency issues. @Liryna Do you know how easy it is to enable caching? I expect this to improve the performance for filesystems where modification by other entities is not an issue. There is no need for cache invalidation as long as the cache is optional. I assume it is a bit more than flicking a switch, but given that there are other opensource filesystems such as FastFat, ext2fsd and btrfs-win, it might not be too difficult to find out what needs to be done, right?. GitHub handles force pushes to pull requests fine and will at least nowadays keep the history as well. So one can still see the old commit for reference.. Maybe some hint could be added to the Doxygen-documentation to warn against changing this. I remember that there were a different issue in the past where something did not work with a custom FS name.. What is the consequence if you don't keep the handle? What will break if one renames the directory?. @TrabacchinLuigi Would accessing the volume using \\\\?\\Volume{GUID}\\ work as a robust way of accessing your volume?\nSee also #136 about making the attaching of the drive letter / junction a separate action.. For the record, you linked a very old build. The latest build (right now) is:\nhttps://ci.appveyor.com/project/Maxhy/dokany/build/job/ha7jbii1wohdd13k/artifacts. Dokany is Windows-only. Both the Dokan-API and the FUSE API can be used from Cygwin.. I and commit 0e8366c7441ad1358a6a33b584341c335f33781d agree :-D. > Edit: I just noticed commit 0e8366c was from 2016 anyway.\nThat was just a tongue-in-cheek way of saying that I fixed this before ;-). This was discussed previously here:\nhttps://github.com/dokan-dev/dokany/issues/254#issuecomment-225167493\nIt seems like it is not easily possible to port the code to .NET 3.5, which is included in Windows 7.\nI see two options:\n1. Update the installer to install not .NET 4.0, but 4.7.2 (latest version). Maybe this fixes the installation issues, because bugs have been fixed. This should of course only happen if .NET 4.0 or higher is not installed because that the requirement is still at least 4.0 and not 4.7.2.\n2. Try to port the code.\nI think pull requests are welcome for either of the two.\n. > So I think there is nothing prevents us replacing the c# code with c/c++.\nAs much as nothing prevents you or someone else from porting it to .NET 3.5. \ud83d\ude09 For that it requires someone to spend the time to do the actual work, submit a PR and then do a lot of testing.... I think this is the main impediment \ud83d\ude09.. > Currently the code gives the same result as the C#. We are just missing the dokanctl output in case of error. This requires to redirect the output of CreateProcess well described here https://docs.microsoft.com/en-gb/windows/desktop/ProcThread/creating-a-child-process-with-redirected-input-and-output\nI think I will open a ticket for this as evolution.\nI think a first step would be printing the actual exit_code here: https://github.com/dokan-dev/dokany/commit/3812f49f1f73eb44f5d9d08cd38e5f14f1374baf#diff-63281fbea9278876f2794531d89624e8R42\nOf course, the actual output would be more helpful to the user than an opaque error.. If I recall correctly, it is fixed in the latest version of Windows 10, but I might be mistaken.. My understanding was that it can be fixed by the code change in the driver for older versions of Windows, while from Windows 10 1803 or later, the issue should be fixed without any code changes. Maybe my understanding is wrong.. I don't have any clue about this. I think the only option is to test.. Yes, that's how I  understood it.. Under which Windows version have you tested this?. What exact version (output of command \u00b4ver\u00b4 on command-prompt).. Maybe we can test with latest Windows 10. If I understand it correctly, it should work without this patch on latest update. Maybe we can make it conditional that the code is only run on older Windows versions.. For the record, I just checked Dokan 1.1.0.2000 (i.e. without this patch) on Win 10 1803 and the filenames ended up being lowercase (i.e. this code is not needed on 1803 or later).\nThus I suggest to make this code conditional for versions < 1803 if it is easily possible.. @linyuan870 While you are at it (squashing all commits into one commit) you can apply the diff suggested by Appveyor here:\nhttps://ci.appveyor.com/project/Maxhy/dokany/build/1.2.0-457/job/l7f373swao7mmige/messages\nhttps://ci.appveyor.com/api/buildjobs/l7f373swao7mmige/artifacts/clang_format_267c3bd_into_f538285.diff. I agree with @Daniel-Abrecht  and @Liryna here.I think splitting it would mostly bring disadvantages. Not only are there dependencies from dokan_fuse to dokan, but the Dokan installer includes dokan_fuse. This would complicate things for little (if any) benefit.\n(On an unrelated note, I agree with @Daniel-Abrecht on being sceptical of cmake becoming a package manager randomly downloading stuff from the internet (in most cases probably without verification of the integrity of the downloaded files)). Works for me on a fresh (updated) MSYS2 installation:\n```\nA547620@AF-CNU319C0H4 MSYS ~\n$ pacman -Syuu cmake\n:: Synchronizing package databases...\n mingw32 is up to date\n mingw64 is up to date\n msys is up to date\n:: Starting core system upgrade...\n there is nothing to do\n:: Starting full system upgrade...\nresolving dependencies...\nlooking for conflicting packages...\nPackages (5) jsoncpp-1.8.3-1  librhash-1.3.6-1  libuv-1.22.0-1  pkg-config-0.29.2-1  cmake-3.10.2-1\nTotal Download Size:    4.71 MiB\nTotal Installed Size:  24.16 MiB\n:: Proceed with installation? [Y/n] y\n:: Retrieving packages...\n jsoncpp-1.8.3-1-any                                         112.6 KiB   847K/s 00:00 [#################################################] 100%\n librhash-1.3.6-1-x86_64                                      87.6 KiB   679K/s 00:00 [#################################################] 100%\n libuv-1.22.0-1-x86_64                                       100.9 KiB  19.7M/s 00:00 [#################################################] 100%\n pkg-config-0.29.2-1-x86_64                                  185.7 KiB  22.7M/s 00:00 [#################################################] 100%\n cmake-3.10.2-1-x86_64                                         4.2 MiB  4.51M/s 00:01 [#################################################] 100%\n(5/5) checking keys in keyring                                                        [#################################################] 100%\n(5/5) checking package integrity                                                      [#################################################] 100%\n(5/5) loading package files                                                           [#################################################] 100%\n(5/5) checking for file conflicts                                                     [#################################################] 100%\n(5/5) checking available disk space                                                   [#################################################] 100%\n:: Processing package changes...\n(1/5) installing jsoncpp                                                              [#################################################] 100%\nJsonCpp headers and build libraries are now in jsoncpp-devel.\n(2/5) installing librhash                                                             [#################################################] 100%\n(3/5) installing libuv                                                                [#################################################] 100%\n(4/5) installing pkg-config                                                           [#################################################] 100%\n(5/5) installing cmake                                                                [#################################################] 100%\nA547620@AF-CNU319C0H4 MSYS ~\n$ cmake --version\ncmake version 3.10.2\n```. Ah I see, it's mingw-w64-{x86_64,i686}-cmake :-(. I found the issue (missing libpsl dependency), I think. Will submit a PR with a workaround soon.. Hm, I fixed the MSYS2-issue, but the build is still not green due to another (unrelated) issue with Cygwin...\nOne is nearly as bad as the other :-(\nMaybe I find some spare time tonight, otherwise tomorrow.... I spoke too soon, the Cygwin issue was my fault :-)\nFor MSYS2, Alexpux/MINGW-packages#4116 got merged and the new package is available in the repos, so no workaround is necessary on our side.. They have always had interesting marketing strategies, but the following article makes an entertaining read...\nhttps://www.codeproject.com/Articles/581146/8-reasons-to-choose-commercial-library-instead-of\nThey used to have this one on their website, but at least from a quick glance, they seem to have removed it.\nOn a more serious note: Objectively, sure, Dokany has its drawbacks. Still I am always astonished how many companies use it and seem to be okay with that it does for their needs. Too bad that this is not reflected in the amount of patches and developers contributing...\n. I am not sure how Cygwin LD and MingW-W64-LD resolve libraries under Windows, i.e. what library is taken when there are multiple in the path:\nFor reference:\n dokanfuse1.dll => MSVC\n libdokanfuse1.dll => MingW-W64\n* cygdokanfuse1.dll => Cygwin\nThus, I am not sure, what the pkg-config file is supposed to say. My expectation would be -ldokanfuse1 should like against cygdokanfuse1 with Cygwin and against libdokanfuse1 with MingW, but I am not sure whether this is the case, but I am not sure whether this is the case, because in Cygwin, both use cases are valid, i.e. both linking against the Cygwin-version of a library or the native version. This is also complicated by the fact that there is something called import-libraries on Windows (which exist for historic reasons mostly).\n@galeksandrp Do you have some ideas, suggestions? Can you shed some light on my assumptions above? We might prepend a \"cyg\" in the pkg-config-file when we are compiling for Cygwin (if it is necessary)\n@Liryna TL;DR I don't have a clue, let's wait a bit :-) It takes some experimenting and reading docs to verify that we are doing the right thing.\n. Can you submit a pull request, with your changes? That would be great.. I am not sure I understand what you want to achieve. I think if the mirror exits without a warning in case of such errors that's an issue we should investigate.\nIf you want to solve some issue by using the mirror,  though, then I am not sure what you expect the mirror to do. It won't magically solve any problems you have accessing that filesystem using normal means, because the mirror will access it in the same way other applications access it.\n. Hello @Absoblogginlutely.\nthanks for helping making Dokany better. #589 is about asking the user to DISABLE SecureBoot if it is enabled.\nBackground:\nYou cannot use drivers with a self-signed certificate when SecureBoot is enabled. The purpose of the script is to import a self-signed certificate and enabling running drivers signed by self-signed certificates. This is used when running a driver that you build yourself for development purposes. Using that driver signed with a self-signed certificate will fail if SecureBoot is enabled. This is why we want to add a check that SecureBoot is disabled.. Ok from my side. Commit should be squashed into one commit.. This is how Windows works to keep compatibility with MS-DOS-style globbing. The dot . from the Windows-API is replaced with a quote \" to signify a dot with \"MS-DOS-meaning\" inside the kernel. \nSee the comment here, which should explain things a bit: https://github.com/dokan-dev/dokany/blob/94e8162163f3b79283d02b725c3030a3e78c53f1/dokan/directory.c#L630-L649\nSee also the explanation by MS: https://msdn.microsoft.com/en-us/library/ff546850(v=VS.85).aspx\nThere seems to be room for improvement in the documentation. Both DOKAN_OPERATIONS.FindFilesWithPattern and DokanIsNameInExpression should explain this properly using a Doxygen-comment in the header-file. The comment from the code mentioned above can serve as inspiration for that.\n. Yes, we should keep this issue open to track updating the documentation.. You mean how Windows translates a search pattern from the Win32-API into a kernel-search pattern? What do you do with that information? You will have to deal with the search pattern that the kernel/Dokan provides you. Isn't it enough to know how to interpret each character in the search pattern in this case? What value do you see in knowing about the translation from Win32 to kernel? Do you intend to translate the kernel-pattern back to a Win32-userspace-pattern?\nWithout knowing the source code of Windows I would guess that \u00b4*\u00b4 and \u00b4?\u00b4 get forwarded straight to the kernel when using WSL or the older Unix subsystem Interix/SFU/SUA. When one uses the Win32-Subsystem, the *, ? and . get replaced according to some rules, probably like you describe in your comment.. But Java uses yet another pattern-language for globbing. See my other comment in the other bug here: https://github.com/cryptomator/dokany-nio-adapter/issues/19#issuecomment-470128252\nAt first thought that we could indeed create a function to map between Win32-glob-pattern and Windows-Kernel-glob-patterns, similarly to how we do for CreateFile-Flags or NTSTATUS.\nThen I read that those kernel-globbing patterns should work from Win32 as well. Thus, such a function is not necessary.. You can give credit in the commit itself using git commit --author=\"name <email@address>\". What about this line? Remove it, uncomment it or leave as it is (commented)?\nThe whole file does not have any debug-prints, so the FPRINTF-macro defined in dokanfuse.cpp is not available.\nIf the dir is to be deleted it will still show dispositionInfo->DeleteFile = 1 as the next printout in any case.. I think \"a UNC\" is correct. It's the pronunciation that determines a/an.. While you are at it: \"virtual machine\" (it's not a name, so small letters). should be implemented. What does that comment mean?. ",
    "witchi": "I have installed the package, but the lib is still missing. I can see the Microsoft Visual C++ 2013 Redistributable (x64) in version 12.0.30501.0 within the Control Panel/Programs and Features, but the Dokan installation routine can't find it (\"Your system does not appear to have Microsoft Visual C++ 2013 Runtime installed. Would you like to download it?\").\nIf I ignore the message, Dokan will be installed. But dokanctl.exe says, the MSVCR120.dll is still missing.\n. I have to install the x86 version of Microsoft Visual C++ 2013 Redistributable too. Then it will work. On a 64bit system you have to install both versions.\nThanks!\n. ",
    "storzinc": "@Liryna It seems that I misunderstood the purpose of the DokanFileInfo->DeleteOnClose flag, I thought it corresponds to FILE_FLAG_DELETE_ON_CLOSE from CreateFile but it seems to be not the case, so my first example should be invalid. But the second one still holds, and I have made a test case for third one:\n``` c\ninclude \ninclude \nchar file1=\"n:\\test\";\nchar file2=\"n:\\test2\";\nDWORD WINAPI ThreadProc(void*)\n{\n  while(1)\n  {\n    MoveFile(file1, file2);\n  }\n  return 0;\n}\nint main(int nargs,char *args[])\n{\n  DWORD tid;\n  HANDLE thr=CreateThread(NULL, 0, ThreadProc, 0, 0, &tid);\nwhile(1)\n  {\n    HANDLE hFile=CreateFile(file1, GENERIC_WRITE|GENERIC_READ, FILE_SHARE_READ|FILE_SHARE_WRITE, 0, CREATE_NEW, FILE_FLAG_SEQUENTIAL_SCAN, 0);\n    if(hFile==INVALID_HANDLE_VALUE)\n      continue;\n    DWORD tmp;\n    WriteFile(hFile, \"1\", 1, &tmp, 0);\n    HANDLE hMap=CreateFileMapping(hFile, 0, PAGE_READONLY, 0, 0, 0);\n    char buf=(char)MapViewOfFile(hMap, FILE_MAP_READ, 0, 0, 0);\n    CloseHandle(hMap);\n    CloseHandle(hFile);\nprintf(\"%c\\n\", buf[0]);\nUnmapViewOfFile(buf);\n\nDeleteFile(file1);\nDeleteFile(file2);\n\n}\n  return 0;\n}\n```\nbefore compiling n: should be replaced with the drive letter where dokan fs is mapped. On normal drives this program in working as expected, but on dokan fs it is crashing after a few cycles.\n. The crash is in my test program, it is crashing on the attempt to read from buf[0]. Here is the log:\n```\nDokan: debug mode on\nDokan: use stderr\ndevice opened\nmounted: n -> \\Volume{d6cc17c5-1732-4085-bce7-964f1e9f5de9}\nCreate 0000\nCreateDisposition 0x00000001\nCreateFile : C:\\xcache\\autorun.inf\nOPEN_EXISTING\nShareMode = 0x7\nFILE_SHARE_READ\nFILE_SHARE_WRITE\nFILE_SHARE_DELETE\nAccessMode = 0x80\nFILE_READ_ATTRIBUTES\nFlagsAndAttributes = 0x2000000\nFILE_FLAG_BACKUP_SEMANTICS\nerror code = 2\n\nCreateFile status = -2\nCreate 0001\nCreateDisposition 0x00000001\nCreateFile : C:\\xcache\\AutoRun.inf\nOPEN_EXISTING\nShareMode = 0x7\nFILE_SHARE_READ\nFILE_SHARE_WRITE\nFILE_SHARE_DELETE\nAccessMode = 0x80\nFILE_READ_ATTRIBUTES\nFlagsAndAttributes = 0x2000000\nFILE_FLAG_BACKUP_SEMANTICS\nerror code = 2\n\nCreateFile status = -2\nCreate 0002\nCreateDisposition 0x00000001\nCreateFile : C:\\xcache\\autorun.inf\nOPEN_EXISTING\nShareMode = 0x7\nFILE_SHARE_READ\nFILE_SHARE_WRITE\nFILE_SHARE_DELETE\nAccessMode = 0x80\nFILE_READ_ATTRIBUTES\nFlagsAndAttributes = 0x2000000\nFILE_FLAG_BACKUP_SEMANTICS\nerror code = 2\n\nCreateFile status = -2\nCreate 0003\nCreateDisposition 0x00000001\nCreateFile : C:\\xcache\\AutoRun.inf\nOPEN_EXISTING\nShareMode = 0x7\nFILE_SHARE_READ\nFILE_SHARE_WRITE\nFILE_SHARE_DELETE\nAccessMode = 0x80\nFILE_READ_ATTRIBUTES\nFlagsAndAttributes = 0x2000000\nFILE_FLAG_BACKUP_SEMANTICS\nerror code = 2\n\nCreateFile status = -2\nCreate 0004\nOpenDirectory : C:\\xcache\\\nCreateFile status = 0\nQueryVolumeInfo 0004\nQueryVolumeInfo 0004\nCleanup 0004\nCleanup: C:\\xcache\\\nClose 0004\nClose: C:\\xcache\\\nCreate 0005\nCreateDisposition 0x00000001\nCreateFile : C:\\xcache\\\nOPEN_EXISTING\nShareMode = 0x7\nFILE_SHARE_READ\nFILE_SHARE_WRITE\nFILE_SHARE_DELETE\nAccessMode = 0x100081\nFILE_READ_DATA\nFILE_READ_ATTRIBUTES\nSYNCHRONIZE\nFlagsAndAttributes = 0x2000000\nFILE_FLAG_BACKUP_SEMANTICS\n\nCreateFile status = 0\nGetFileInfo 0005\nGetFileInfo : C:\\xcache\\\n    GetFileInformationByHandle success, file size = 65536\nCreate 0006\nCreateDisposition 0x00000001\nCreateFile : C:\\xcache\\\nOPEN_EXISTING\nShareMode = 0x7\nFILE_SHARE_READ\nFILE_SHARE_WRITE\nFILE_SHARE_DELETE\nAccessMode = 0x100081\nFILE_READ_DATA\nFILE_READ_ATTRIBUTES\nSYNCHRONIZE\nFlagsAndAttributes = 0x2000000\nFILE_FLAG_BACKUP_SEMANTICS\n\nCreateFile status = 0\nGetFileInfo 0006\nGetFileInfo : C:\\xcache\\\n    GetFileInformationByHandle success, file size = 65536\nCreate 0007\nCreateDisposition 0x00000002\nCreateFile : C:\\xcache\\test\nCreate 0008\nCreateDisposition 0x00000001\nCreateFile : C:\\xcache\\test\nCREATE_NEW\nShareMode = 0x3\nFILE_SHARE_READ\nFILE_SHARE_WRITE\nAccessMode = 0x12019f\nFILE_READ_DATA\nFILE_READ_ATTRIBUTES\nFILE_READ_EA\nREAD_CONTROL\nFILE_WRITE_DATA\nFILE_WRITE_ATTRIBUTES\nFILE_WRITE_EA\nFILE_APPEND_DATA\nSYNCHRONIZE\nSTANDARD_RIGHTS_READ\nSTANDARD_RIGHTS_WRITE\nSTANDARD_RIGHTS_EXECUTE\n\nOPEN_EXISTING\nShareMode = 0x7\nFILE_SHARE_READ\nFILE_SHARE_WRITE\nFILE_SHARE_DELETE\nAccessMode = 0x110080\nFlagsAndAttributes = 0x2000000\nDELETE\nFILE_FLAG_BACKUP_SEMANTICS\nFILE_READ_ATTRIBUTES\nSYNCHRONIZE\nFlagsAndAttributes = 0x0\nerror code = 32\n\nCreateFile status = -32\nCreateFile status = 0\nCreate 0009\nCreateDisposition 0x00000001\nCreateFile : C:\\xcache\\test\nWriteFile 0007\nWriteFile : C:\\xcache\\test, offset 0, length 1\n    write 1, offset 0\nGetFileInfo 0007\nGetFileInfo : C:\\xcache\\test\nOPEN_EXISTING\nShareMode = 0x7\nFILE_SHARE_READ\nFILE_SHARE_WRITE\nFILE_SHARE_DELETE\nAccessMode = 0x110080\nGetFileInformationByHandle success, file size = 1\nDELETE\n\nFILE_READ_ATTRIBUTES\nSYNCHRONIZE\nFlagsAndAttributes = 0x0\n\nCleanup 0007\nCleanup: C:\\xcache\\test\nerror code = 32\n\nCreateFile status = -32\nCreate 0010\nCreateDisposition 0x00000001\nCreateFile : C:\\xcache\\test\nRead 0007\nReadFile : C:\\xcache\\test\n    invalid handle, cleanuped?\n    read 1, offset 0\nOPEN_EXISTING\nShareMode = 0x7\nFILE_SHARE_READ\nFILE_SHARE_WRITE\nFILE_SHARE_DELETE\nAccessMode = 0x110080\nDELETE\nFILE_READ_ATTRIBUTES\n\nCreate 0011\nSYNCHRONIZE\n\nCreateDisposition 0x00000001\nCreateFile : C:\\xcache\\test\n    FlagsAndAttributes = 0x0\nCreateFile status = 0\nGetFileInfo 0010\nGetFileInfo : C:\\xcache\\test\n    GetFileInformationByHandle success, file size = 1\nGetFileInfo 0010\nGetFileInfo : C:\\xcache\\test\n    GetFileInformationByHandle success, file size = 1\nCreate 0012\nCreateDisposition 0x00000001\nCreateFile : C:\\xcache\\test2\nOPEN_EXISTING\nShareMode = 0x7\nFILE_SHARE_READ\nFILE_SHARE_WRITE\nFILE_SHARE_DELETE\nAccessMode = 0x10080\nDELETE\nFILE_READ_ATTRIBUTES\nFlagsAndAttributes = 0x0\n\nCreateFile status = 0\nOPEN_EXISTING\n\nGetFileInfo 0011\nShareMode = 0x3\n\nGetFileInfo : C:\\xcache\\test\n    FILE_SHARE_READ\n    FILE_SHARE_WRITE\n    AccessMode = 0x100002\n    FILE_WRITE_DATA\n    SYNCHRONIZE\n    GetFileInformationByHandle success, file size = 1\nFlagsAndAttributes = 0x2000000\nFILE_FLAG_BACKUP_SEMANTICS\n\nSetFileInfo 0011\nDeleteFile C:\\xcache\\test\n  dispositionInfo->DeleteFile = 1\n    error code = 2\nCreateFile status = -2\nSL_OPEN_TARGET_DIRECTORY specified\nSetFileInfo 0010\nMoveFile C:\\xcache\\test -> C:\\xcache\\test2\nClose 0007\nClose: C:\\xcache\\test\nCleanup 0011\nCleanup: C:\\xcache\\test\nDeleteOnClose\n\nDeleteFile success\nClose 0011\nClose: C:\\xcache\\test\nCreate 0013\nCreateDisposition 0x00000001\nCreateFile : C:\\xcache\\test2\nCleanup 0012\nCleanup: C:\\xcache\\test2\n    invalid handle\nClose 0012\nClose: C:\\xcache\\test2\nCleanup 0010\nCleanup: C:\\xcache\\test2\n    invalid handle\nClose 0010\nClose: C:\\xcache\\test2\nCreate 0014\nCreateDisposition 0x00000001\nCreateFile : C:\\xcache\\test\nOPEN_EXISTING\nShareMode = 0x7\nFILE_SHARE_READ\nFILE_SHARE_WRITE\nFILE_SHARE_DELETE\nAccessMode = 0x110080\nDELETE\nFILE_READ_ATTRIBUTES\nSYNCHRONIZE\nFlagsAndAttributes = 0x2000000\nFILE_FLAG_BACKUP_SEMANTICS\nerror code = 2\n\nCreateFile status = -2\nCreate 0015\nCreateDisposition 0x00000001\nCreateFile : C:\\xcache\\test\nOPEN_EXISTING\nShareMode = 0x7\nFILE_SHARE_READ\nFILE_SHARE_WRITE\nFILE_SHARE_DELETE\nAccessMode = 0x110080\nDELETE\nFILE_READ_ATTRIBUTES\nSYNCHRONIZE\nFlagsAndAttributes = 0x2000000\nFILE_FLAG_BACKUP_SEMANTICS\nerror code = 2\n\nCreateFile status = -2\nCreate 0016\nCreateDisposition 0x00000001\nCreateFile : C:\\xcache\\test\nOPEN_EXISTING\nShareMode = 0x7\nFILE_SHARE_READ\nFILE_SHARE_WRITE\nFILE_SHARE_DELETE\nAccessMode = 0x110080\nDELETE\nFILE_READ_ATTRIBUTES\nSYNCHRONIZE\nFlagsAndAttributes = 0x2000000\nFILE_FLAG_BACKUP_SEMANTICS\nerror code = 2\n\nCreateFile status = -2\nCreate 0017\nCreateDisposition 0x00000001\nCreateFile : C:\\xcache\\test\nOPEN_EXISTING\nShareMode = 0x7\nFILE_SHARE_READ\nFILE_SHARE_WRITE\nFILE_SHARE_DELETE\nAccessMode = 0x110080\nDELETE\nFILE_READ_ATTRIBUTES\nSYNCHRONIZE\nFlagsAndAttributes = 0x2000000\nFILE_FLAG_BACKUP_SEMANTICS\nerror code = 2\n\nCreateFile status = -2\nCreate 0018\nCreateDisposition 0x00000001\nCreateFile : C:\\xcache\\test\nOPEN_EXISTING\nShareMode = 0x7\nFILE_SHARE_READ\nFILE_SHARE_WRITE\nFILE_SHARE_DELETE\nAccessMode = 0x10080\nDELETE\nFILE_READ_ATTRIBUTES\nFlagsAndAttributes = 0x2000000\nFILE_FLAG_BACKUP_SEMANTICS\nerror code = 2\n\nCreateFile status = -2\nCreate 0019\nCreateDisposition 0x00000002\nCreateFile : C:\\xcache\\test\nOPEN_EXISTING\nShareMode = 0x7\nFILE_SHARE_READ\nFILE_SHARE_WRITE\nFILE_SHARE_DELETE\nAccessMode = 0x110080\nDELETE\nFILE_READ_ATTRIBUTES\nSYNCHRONIZE\n\nCREATE_NEW\nShareMode = 0x3\nFILE_SHARE_READ\nFILE_SHARE_WRITE\nAccessMode = 0x12019f\nFILE_READ_DATA\nFILE_READ_ATTRIBUTES\nFILE_READ_EA\nREAD_CONTROL\nFILE_WRITE_DATA\nFILE_WRITE_ATTRIBUTES\nFILE_WRITE_EA\nFILE_APPEND_DATA\nSYNCHRONIZE\nSTANDARD_RIGHTS_READ\nSTANDARD_RIGHTS_WRITE\nSTANDARD_RIGHTS_EXECUTE\nFlagsAndAttributes = 0x2000000\nFILE_FLAG_BACKUP_SEMANTICS\nFlagsAndAttributes = 0x2000000\nFILE_FLAG_BACKUP_SEMANTICS\nerror code = 2\n\nCreateFile status = -2\nCreateFile status = 0\nCreate 0020\nCreateDisposition 0x00000001\nCreateFile : C:\\xcache\\test\nWriteFile 0019\nWriteFile : C:\\xcache\\test, offset 0, length 1\n    write 1, offset 0\nGetFileInfo 0019\nGetFileInfo : C:\\xcache\\test\n    GetFileInformationByHandle success, file size = 1\nOPEN_EXISTING\nShareMode = 0x7\nFILE_SHARE_READ\nFILE_SHARE_WRITE\nFILE_SHARE_DELETE\nAccessMode = 0x110080\nDELETE\nFILE_READ_ATTRIBUTES\nSYNCHRONIZE\n\nCleanup 0019\nCleanup: C:\\xcache\\test\nFlagsAndAttributes = 0x0\n\nCreateFile status = 0\nRead 0019\nReadFile : C:\\xcache\\test\nGetFileInfo 0020\ninvalid handle, cleanuped?\n\nGetFileInfo : C:\\xcache\\test\n    GetFileInformationByHandle success, file size = 1\n    CreateFile error : 32\n```\nIn short, when MirrorReadFile is called, file handle is already closed, and this function is trying to reopen it using FileName but at that moment the file is already renamed and this operation fails.\n. But without dokan windows working just fine after rename. My point is that file should be really closed only after the program is done with it, including access through memory map (in MirrorCloseFile instead of MirrorCleanup maybe?) closing it and then reopening is not reliable.\n. I have been starting mirror.exe with the default thread count, but even with /t 1 argument the problem is still persist.\n. I am not very familiar with the kernel programming, but I have made a simpler test case demonstrating this problem, without multiple threads accessing the same file:\n``` c\ninclude \ninclude \nchar file1=\"n:\\test\";\nint main(int nargs,char args[])\n{\n  HANDLE hFile=CreateFile(file1, GENERIC_WRITE|GENERIC_READ, FILE_SHARE_READ, 0, CREATE_ALWAYS, FILE_FLAG_SEQUENTIAL_SCAN, 0);\n  DWORD tmp;\n  WriteFile(hFile, \"1\", 1, &tmp, 0);\n  HANDLE hMap=CreateFileMapping(hFile, 0, PAGE_READWRITE, 0, 0, 0);\n  char buf=(char)MapViewOfFile(hMap, FILE_MAP_WRITE, 0, 0, 0);\n  CloseHandle(hFile);\n  CloseHandle(hMap);\nHANDLE hFile2=CreateFile(file1, GENERIC_WRITE|GENERIC_READ, FILE_SHARE_READ, 0, CREATE_ALWAYS, FILE_FLAG_SEQUENTIAL_SCAN, 0);\n  printf(\"%x %x\\n\", hFile2, GetLastError());\nUnmapViewOfFile(buf);\n}\n```\nOn the regular fs second CreateFile fails with ERROR_SHARING_VIOLATION error (as it should), but on the mirrored fs it actually succeed.\nSo it seems to be not a good idea to close file handle in the MirrorCleanup\n. @Maxhy doesn't s seems to help, MirrorCloseFile is printing error : not cleanuped file when it is closing a handle, but there was no such error in the log.\n. Is there any update on this? Right now there seems to be no way to properly handle memory mapped files in dokan, MirrorCleanup is called too soon to close the handle in it, but MirrorCloseFile is called too late...\n. I have tried moving all the code in mirror sample from MirrorCleanup to MirrorCloseFile and then executing this test program:\n``` c\ninclude \ninclude \nchar file1=\"n:\\test\";\nint main(int nargs,char args[])\n{\n  HANDLE hFile=CreateFile(file1, GENERIC_WRITE|GENERIC_READ, FILE_SHARE_READ, 0, CREATE_ALWAYS, FILE_FLAG_SEQUENTIAL_SCAN, 0);\n  printf(\"%x %x\\n\", hFile, GetLastError());\n  if(hFile==INVALID_HANDLE_VALUE)\n    return 0;\nDWORD tmp;\n  WriteFile(hFile, \"1\", 1, &tmp, 0);\n  HANDLE hMap=CreateFileMapping(hFile, 0, PAGE_READWRITE, 0, 0, 0);\n  char buf=(char)MapViewOfFile(hMap, FILE_MAP_WRITE, 0, 0, 0);\n  CloseHandle(hFile);\n  CloseHandle(hMap);\nprintf(\"%c\\n\", buf[0]);\n  UnmapViewOfFile(buf);\n}\n```\nOn the first run all seems to be okay, but on the second CreateFile is failing with ERROR_SHARING_VIOLATION. So it seems that MirrorCloseFile was never called, even after termination of the original process which have created the file.\n. In windows it is perfectly legal to close all of the file handles and work only with the memory map, many programs are relying on this, I have moved UnmapViewOfFile to the end just to demonstrate the problem with dokan. And either way, even if the program did something wrong, there should be no access violations after the process is terminated.\n. I have tried to figure out how memory mapping is working on the regular fs, without dokan, and I got interesting result with Process Monitor (https://technet.microsoft.com/en-us/library/bb896645.aspx)\nWith this test program:\n``` c\ninclude \ninclude \nint main(int nargs,char args[])\n{\n  HANDLE hFile=CreateFile(\"test.txt\", GENERIC_WRITE|GENERIC_READ, FILE_SHARE_READ, 0, CREATE_ALWAYS, FILE_FLAG_SEQUENTIAL_SCAN, 0);\n  DWORD tmp;\n  WriteFile(hFile, \"1\", 1, &tmp, 0);\n  HANDLE hMap=CreateFileMapping(hFile, 0, PAGE_READWRITE, 0, 0, 0);\n  char buf=(char*)MapViewOfFile(hMap, FILE_MAP_WRITE, 0, 0, 0);\n  CloseHandle(hFile);\n  CloseHandle(hMap);\nprintf(\"%c\\n\", buf[0]);\nHANDLE hFile2=CreateFile(\"test.txt\", GENERIC_WRITE|GENERIC_READ, FILE_SHARE_READ, 0, CREATE_ALWAYS, FILE_FLAG_SEQUENTIAL_SCAN, 0);\n  printf(\"%x %x\\n\", hFile2, GetLastError());\nUnmapViewOfFile(buf);\nhFile2=CreateFile(\"test.txt\", GENERIC_WRITE|GENERIC_READ, FILE_SHARE_READ, 0, CREATE_ALWAYS, FILE_FLAG_SEQUENTIAL_SCAN, 0);\n  printf(\"%x %x\\n\", hFile2, GetLastError());\n}\n```\nI get this log with Process Monitor:\n| Time | Operation | Path | Result |\n| --- | --- | --- | --- |\n| 43:56,455 | IRP_MJ_CREATE | C:\\15.08.07 18_30_17\\test.txt | SUCCESS |\n| 43:56,455 | IRP_MJ_WRITE | C:\\15.08.07 18_30_17\\test.txt | SUCCESS |\n| 43:56,456 | FASTIO_ACQUIRE_FOR_SECTION_ SYNCHRONIZATION | C:\\15.08.07 18_30_17\\test.txt | FILE LOCKED WITH WRITERS |\n| 43:56,456 | FASTIO_QUERY_INFORMATION | C:\\15.08.07 18_30_17\\test.txt | SUCCESS |\n| 43:56,456 | FASTIO_RELEASE_FOR_SECTION_ SYNCHRONIZATION | C:\\15.08.07 18_30_17\\test.txt | SUCCESS |\n| 43:56,456 | FASTIO_ACQUIRE_FOR_SECTION_ SYNCHRONIZATION | C:\\15.08.07 18_30_17\\test.txt | SUCCESS |\n| 43:56,456 | FASTIO_RELEASE_FOR_SECTION_ SYNCHRONIZATION | C:\\15.08.07 18_30_17\\test.txt | SUCCESS |\n| 43:56,456 | IRP_MJ_CLEANUP | C:\\15.08.07 18_30_17\\test.txt | SUCCESS |\n| 43:56,456 | IRP_MJ_CREATE | C:\\15.08.07 18_30_17\\test.txt | SHARING VIOLATION |\n| 43:56,456 | IRP_MJ_QUERY_SECURITY | C:\\15.08.07 18_30_17 | SUCCESS |\n| 43:56,456 | IRP_MJ_CREATE | C:\\15.08.07 18_30_17\\test.txt | SUCCESS |\n| ... |  |  |  |\n| 43:56,457 | Thread Exit |  | SUCCESS |\n| ... |  |  |  |\n| 43:56,459 | Process Exit |  | SUCCESS |\n| ... |  |  |  |\n| 43:56,460 | IRP_MJ_CLEANUP | C:\\15.08.07 18_30_17\\test.txt | SUCCESS |\n| 43:56,460 | IRP_MJ_CLOSE | C:\\15.08.07 18_30_17\\test.txt | SUCCESS |\n| 43:56,460 | IRP_MJ_CLOSE | C:\\15.08.07 18_30_17\\test.txt | SUCCESS |\nHere IRP_MJ_CLEANUP was sent before the second IRP_MJ_CREATE, and IRP_MJ_CLOSE was sent after the third, but still, system somehow knew that the second IRP_MJ_CREATE should be rejected with SHARING VIOLATION and third should be accepted.\nMaybe there is another API to work with memory mapping that the system is using?\n. ",
    "xaqq": "What happens if you use FAT as the underlying file system?\nOn Wed, Aug 19, 2015 at 5:44 PM, Marinko notifications@github.com wrote:\n\nYou are right, this is because I have no idea how to manage the\nCreateFileMapping. On NTFS event if you close the hand to the file and hMap\nand you did not UnmapViewOfFile the handle somehow remains. This is the\nreason why you get on NTFS the exception on the second file and dokan\nreturns the exception on the third file. Dokan gets only notified when you\ndo CreateFile and CloseHandle.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/32#issuecomment-132644055.\n\n\nKapp Arnaud - Xaqq\n. ",
    "Kleak": "It's for wrapping dokan api :)\n. And you don't have a example how to use dokan in C.\n. ok I think i can close this thread if i have question i will re-open it :)\nthanks\n. I have installed the latest release but when i launch mirror.exe nothings happen, is it normal?\n. oups i have found sorry :)\ni haven't seen that mirror.exe need some parameters \n. I really don't know where start to wrap dokan so if you can take a look :)\nActually the drive appear and disappear instantly because the vm is stopped but i don't know why :/\nhttps://github.com/Rollercops/Dart-Dokany\nthanks a lot\n. yes i have implement only one DokanOperation because i have try in c to just malloc an empty structure and the disk appear until i Ctrl+C the program so i would like, for the beginning just start correctly and after implement all the operation.\nIf i put 0 in the variable ThreadCount DokanStart (so DokanMain because DokanStart return value is the value that DokanMain return) is -6 (DOKAN_MOUNT_POINT_ERROR). and if i put 1 in the variable ThreadCount the program create the drive and crash after, and sometime crash windows entirely (aka bluescreen)\nDebug mode is enable but nothing appear on the output when I put something else than 0 in ThreadCount\n. It don't work but the drive appear in the explorer for the moment i just want this happen :)\nThis launch with :\ndokanOptions->Version 730\ndokanOptions->ThreadCount 1\ndokanOptions->Options 11\ndokanOptions->GlobalContext 0\ndokanOptions->MountPoint m\nI have this return value : Mount point error\nIt's at me to implement CreateFile?\n. So CreateFile is part of dokan operations?\n. ahah I didn't forget !\nMais je vois pas ce que ca \u00e0 avoir avec ceci ?\n. I have implement all the dokan operation in my .cc file and i have the same problem DokanMain return DOKAN_MOUNT_POINT_ERROR\n. found ^^\nAfter my drive start correctly what is the best way? to do inside the dokan operations function call the dart methods? or there is a better way?\n. No.\nI have, not for the moment after, to abstract all the thinks because i need the same things on linux (with fuse) and macos (with osxfuse).\nSo the best way will be implement all the things in dart and less as possible in C?\n. Thanks, i will begin with Dokan and after try to add fuse in my library\n. ",
    "shlatchz": "[CreateFile()] \\[HorribleSubs] Fate Stay Night - Unlimited Blade Works - 25 [720p].mkv, Access: Read, Share: ReadWrite, Mode: Open, Options: None, ID: 459\n[GetFileInformation()] \\[HorribleSubs] Fate Stay Night - Unlimited Blade Works - 25 [720p].mkv, ID: 459\n[ReadFile()] \\[HorribleSubs] Fate Stay Night - Unlimited Blade Works - 25 [720p].mkv, Buffer Length: 1024, Offset 0, ID: 459\n[GetFileInformation()] \\[HorribleSubs] Fate Stay Night - Unlimited Blade Works - 25 [720p].mkv, ID: 459\n[ReadFile()] \\[HorribleSubs] Fate Stay Night - Unlimited Blade Works - 25 [720p].mkv, Buffer Length: 512, Offset 1024, ID: 459\n[GetFileInformation()] \\[HorribleSubs] Fate Stay Night - Unlimited Blade Works - 25 [720p].mkv, ID: 459\n[ReadFile()] \\[HorribleSubs] Fate Stay Night - Unlimited Blade Works - 25 [720p].mkv, Buffer Length: 512, Offset 4151, ID: 459\n[GetFileInformation()] \\[HorribleSubs] Fate Stay Night - Unlimited Blade Works - 25 [720p].mkv, ID: 459\n[ReadFile()] \\[HorribleSubs] Fate Stay Night - Unlimited Blade Works - 25 [720p].mkv, Buffer Length: 512, Offset 338605090, ID: 459\n[GetFileInformation()] \\[HorribleSubs] Fate Stay Night - Unlimited Blade Works - 25 [720p].mkv, ID: 459\n[Cleanup()] \\[HorribleSubs] Fate Stay Night - Unlimited Blade Works - 25 [720p].mkv, ID: 459\n[CloseFile()] \\[HorribleSubs] Fate Stay Night - Unlimited Blade Works - 25 [720p].mkv, ID: 459\nOS calls create file, that calls get file information and returns 0.\nAfter that, OS calls get file information and returns 0;\nAfter that, OS calls read file and receives the requested buffer and so on\nuntil the cleanup and close functions.\nI want to stress that the video file DOES play with Media Player Classic.\nIt just won't play with VLC.\nThanks!\n. Yes. As I said, it does work with a different player. Just not with VLC.\nUPDATE: \nSometimes, this error pops up:\ncore debug: no art finder modules matched\ncore debug: art not found for [HorribleSubs] Fate Stay Night - Unlimited Blade Works - 25 [720p].mkv\ncore debug: using access module \"filesystem\"\ncore debug: Using stream method for AStream*\ncore debug: starting pre-buffering\nfilesystem error: read error: Invalid argument\ncore error: cannot pre fill buffer\ncore debug: removing module \"filesystem\"\ncore warning: cannot create a stream_t from access\ncore debug: finished input\ncore debug: dead input\ncore debug: changing item without a request (current 0/1)\ncore debug: nothing to play\nqt4 debug: IM: Deleting the input\n...\nmkv error: cannot load some cues/chapters/tags etc. (broken seekhead or file)\n...\nmkv error: cannot find any cluster, damaged file ?\n...\nes error: cannot peek\n...\ncore error: no suitable demux module for `file/any:///K:/%5BHorribleSubs%5D%20Fate%20Stay%20Night%20-%20Unlimited%20Blade%20Works%20-%2025%20%5B720p%5D.mkv'\n. The problem is that there is no error \\ exception in the code. The OS doesn't request an offset that exceeds the file's size or receives something smaller than the size of readBytes..\nThe question is, whether there is some metadata that the OS requests but Dokan doesn't supply to the OS? Can there be a callback that is needed in this situation, but Dokan doesn't implement at all?\n. Yeah, I know that the explorer process requests FindFiles for the directory, and then GetFileInformation for each file & also ReadFile to get the thumbnails.. and it works.\nOnly VLC fails to work for some reason :( :( :(\nUPDATE:\nHere's a link to an \"API Monitor\" log file.\nThe log file was created with API Monitor.\nAlso, I just noticed that when you try to customize a folder and change it from \"General items\" to \"Pictures\", explorer.exe crashes.\nDoes it happen to you guys?\n. Hi!\nYou might be right :)\nFor small files, at first, VLC prints the same error.\nAfter I hit play, VLC prints the error several times and then starts the movie!\nIt might be a latency problem..\nI also use a caching mechanism (Redis), but with big video files, I guess it's still not enough. \nWhat kind of caching do you use?\nThanks!\n. @Liryna , I'm using Win7 64bit. \n@suy, even when I map a local file to the ReadFile request, instead of fetching it from a remote server,\nVLC won't play it.\npublic int ReadFile(string filePath, byte[] buffer, ref uint readBytes, long offset, DokanFileInfo info)\n{\n    using (BinaryReader reader = new BinaryReader(new FileStream(@\"E:\\Downloads\\[HorribleSubs] Fate Stay Night - Unlimited Blade Works - 25 [720p].mkv\", FileMode.Open)))\n    {\n        reader.BaseStream.Seek(offset, SeekOrigin.Begin);\n        readBytes = (uint)reader.Read(buffer, 0, buffer.Length);\n        if (readBytes == 0)\n        {\n            return DokanNet.DokanError;\n        }\n        reader.Close();\n        reader.Dispose();\n    }\n    return DokanNet.DokanSuccess;\n}\n(Drive E is local).\n. I tried that as well:\nBinaryReader reader = new BinaryReader(new FileStream(@\"E:\\Downloads\\[HorribleSubs] Fate Stay Night - Unlimited Blade Works - 25 [720p].mkv\", FileMode.Open));\npublic int ReadFile(string filePath, byte[] buffer, ref uint readBytes, long offset, DokanFileInfo info)\n{\n    lock (reader)\n    {\n        reader.BaseStream.Seek(offset, SeekOrigin.Begin);\n        readBytes = (uint)reader.Read(buffer, 0, buffer.Length);\n        if (readBytes == 0)\n        {\n            return DokanNet.DokanError;\n        }\n    }\n    return DokanNet.DokanSuccess;\n}\nand it didn't help :(\n. I just noticed that the DokanNet repository was updated.\nI will try using the newer version and will keep you posted!\n. Everything works with the new version of DokanNet! Hurray!\n. I'm using Win7.\nIs there a way to make it work with Win7?\n. I've installed the hotfix.\nThis is the result of the command:\nfsutil fsinfo volumeinfo i:\n    Volume Name : Dokan\n    Volume Serial Number : 0x3a335f6\n    Max Component Length : 256\n    File System Name : DOKAN\n    Supports Case-sensitive filenames\n    Preserves Case of filenames\n    Supports Unicode in filenames\n    Preserves & Enforces ACL's\n    Supports Remote Storage\nAlso, the file's size is still 512 and not 4096.\n. Yes I do. It won't run at all, if the cmd isn't elevated.\n. Any ideas?\n. I tried adding a value to\nHKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\DriveIcons\\M\\DefaultIcon\nand it works great, but the new icon changes both the icons (1), (2) in the following image, when I want them to be different. I want to configure an icon for (1) and another for (2).\n\nThanks!\n. @Maxhy \nIt worked! Thanks :+1: \n. yes, but what if you want a boot sector on your Dokan drive?\n. For example, you want to boot a linux OS from your Dokan drive\n. It's the same with Win7..\n. Mirror output:\n```\nMicrosoft Windows [Version 10.0.10240]\n(c) 2015 Microsoft Corporation. All rights reserved.\nC:\\Windows\\system32>cd \"c:\\Program Files\\Dokan\\DokanLibrary\"\nc:\\Program Files\\Dokan\\DokanLibrary>dir\n Volume in drive C has no label.\n Volume Serial Number is 6C20-FB17\nDirectory of c:\\Program Files\\Dokan\\DokanLibrary\n01/06/2016  12:21 AM              .\n01/06/2016  12:21 AM              ..\n12/10/2015  03:01 PM            24,304 dokanctl.exe\n01/06/2016  12:21 AM              include\n01/06/2016  12:21 AM              lib\n10/28/2015  04:30 PM            35,821 license.gpl.txt\n10/28/2015  04:30 PM             7,804 license.lgpl.txt\n10/28/2015  04:30 PM             1,077 license.mit.txt\n12/10/2015  03:01 PM            29,424 mounter.exe\n10/28/2015  04:30 PM               147 README.url\n01/06/2016  12:21 AM              sample\n               6 File(s)         98,577 bytes\n               5 Dir(s)  19,721,318,400 bytes free\nc:\\Program Files\\Dokan\\DokanLibrary>dokanctl.exe /d 9\nMounter path: 'c:\\Program Files\\Dokan\\DokanLibrary\\mounter.exe'\nDriver path: 'C:\\Windows\\system32\\drivers\\dokan.sys'\nset debug mode ok\nc:\\Program Files\\Dokan\\DokanLibrary>cd sample\nc:\\Program Files\\Dokan\\DokanLibrary\\sample>dir\n Volume in drive C has no label.\n Volume Serial Number is 6C20-FB17\nDirectory of c:\\Program Files\\Dokan\\DokanLibrary\\sample\n01/06/2016  12:21 AM              .\n01/06/2016  12:21 AM              ..\n01/06/2016  12:21 AM              mirror\n               0 File(s)              0 bytes\n               3 Dir(s)  19,721,318,400 bytes free\nc:\\Program Files\\Dokan\\DokanLibrary\\sample>cd mirror\nc:\\Program Files\\Dokan\\DokanLibrary\\sample\\mirror>dir\n Volume in drive C has no label.\n Volume Serial Number is 6C20-FB17\nDirectory of c:\\Program Files\\Dokan\\DokanLibrary\\sample\\mirror\n01/06/2016  12:21 AM              .\n01/06/2016  12:21 AM              ..\n11/10/2015  06:27 PM            17,220 dokan_mirror.vcxproj\n12/10/2015  02:07 PM            44,750 mirror.c\n12/10/2015  03:01 PM            44,272 mirror.exe\n               3 File(s)        106,242 bytes\n               2 Dir(s)  19,721,187,328 bytes free\nc:\\Program Files\\Dokan\\DokanLibrary\\sample\\mirror>mirror.exe /?\nmirror.exe\n  /r RootDirectory (ex. /r c:\\test)\n  /l DriveLetter (ex. /l m)\n  /t ThreadCount (ex. /t 5)\n  /d (enable debug output)\n  /s (use stderr for output)\n  /n (use network drive)\n  /m (use removable drive)\n  /w (write-protect drive)\n  /i (Timeout in Milliseconds ex. /i 30000)\nc:\\Program Files\\Dokan\\DokanLibrary\\sample\\mirror>mirror.exe /r \"C:\\Users\\admin\\Pictures\" /l m\n^C\nc:\\Program Files\\Dokan\\DokanLibrary\\sample\\mirror>mirror.exe /d /s /r \"C:\\Users\\admin\\Pictures\" /l m\nRootDirectory: C:\\Users\\admin\\Pictures\nAttempting to add SE_SECURITY_NAME privilege to process token\nsuccess: privilege already present\nDokan: debug mode on\nDokan: use stderr\ndevice opened\nmounted: m -> \\Volume{d6cc17c5-1735-4085-bce7-964f1e9f5de9}\nMounted\nCreate 0000\nCreateFile : C:\\Users\\admin\\Pictures\\autorun.inf\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x7\n        FILE_SHARE_READ\n        FILE_SHARE_WRITE\n        FILE_SHARE_DELETE\n        AccessMode = 0x80\n        FILE_READ_ATTRIBUTES\n        FlagsAndAttributes = 0x200000\n        FILE_FLAG_OPEN_REPARSE_POINT\n        OPEN_EXISTING\n        error code = 2\nCreateFile status = 3221225524 - lastError = 2\nCreate 0001\nCreateFile : C:\\Users\\admin\\Pictures\\autorun.inf\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x7\n        FILE_SHARE_READ\n        FILE_SHARE_WRITE\n        FILE_SHARE_DELETE\n        AccessMode = 0x120089\n        FILE_READ_DATA\n        FILE_READ_ATTRIBUTES\n        FILE_READ_EA\n        READ_CONTROL\n        SYNCHRONIZE\n        STANDARD_RIGHTS_READ\n        STANDARD_RIGHTS_WRITE\n        STANDARD_RIGHTS_EXECUTE\n        FlagsAndAttributes = 0x0\n        OPEN_EXISTING\n        error code = 2\nCreateFile status = 3221225524 - lastError = 2\nCreate 0002\nCreateFile : C:\\Users\\admin\\Pictures\\autorun.inf\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x7\n        FILE_SHARE_READ\n        FILE_SHARE_WRITE\n        FILE_SHARE_DELETE\n        AccessMode = 0x120089\n        FILE_READ_DATA\n        FILE_READ_ATTRIBUTES\n        FILE_READ_EA\n        READ_CONTROL\n        SYNCHRONIZE\n        STANDARD_RIGHTS_READ\n        STANDARD_RIGHTS_WRITE\n        STANDARD_RIGHTS_EXECUTE\n        FlagsAndAttributes = 0x0\n        OPEN_EXISTING\n        error code = 2\nCreateFile status = 3221225524 - lastError = 2\nCreate 0003\nCreateFile : C:\\Users\\admin\\Pictures\\\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x7\n        FILE_SHARE_READ\n        FILE_SHARE_WRITE\n        FILE_SHARE_DELETE\n        AccessMode = 0x80\n        FILE_READ_ATTRIBUTES\n        FlagsAndAttributes = 0x2200000\n        FILE_FLAG_BACKUP_SEMANTICS\n        FILE_FLAG_OPEN_REPARSE_POINT\n        OPEN_EXISTING\nCreateFile status = 0 - lastError = 0\nGetFileInfo 0003\nGetFileInfo : C:\\Users\\admin\\Pictures\\\n        GetFileInformationByHandle success, file size = 4096\n    result =  0\n    FileBasicInformation\n\nCleanup 0003\nCleanup: C:\\Users\\admin\\Pictures\\\nClose 0003\nClose: C:\\Users\\admin\\Pictures\\\nCreate 0004\nCreateFile : C:\\Users\\admin\\Pictures\\AutoRun.inf\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x7\n        FILE_SHARE_READ\n        FILE_SHARE_WRITE\n        FILE_SHARE_DELETE\n        AccessMode = 0x80\n        FILE_READ_ATTRIBUTES\n        FlagsAndAttributes = 0x200000\n        FILE_FLAG_OPEN_REPARSE_POINT\n        OPEN_EXISTING\n        error code = 2\nCreateFile status = 3221225524 - lastError = 2\nCreate 0005\nCreateFile : C:\\Users\\admin\\Pictures\\\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x0\n        AccessMode = 0x100000\n        SYNCHRONIZE\n        FlagsAndAttributes = 0x2000000\n        FILE_FLAG_BACKUP_SEMANTICS\n        OPEN_EXISTING\nCreateFile status = 0 - lastError = 0\nQueryVolumeInfo 0005\nQueryVolumeInfo 0005\nCreate 0006\nCreateFile : C:\\Users\\admin\\Pictures\\\nCleanup 0005\nCleanup: C:\\Users\\admin\\Pictures\\\nAccountName: admin, DomainName: DESKTOP-JO1Q8DD\nClose 0005\nClose: C:\\Users\\admin\\Pictures\\\n    ShareMode = 0x0\n    AccessMode = 0x100000\n    SYNCHRONIZE\n    FlagsAndAttributes = 0x2000000\n    FILE_FLAG_BACKUP_SEMANTICS\n    OPEN_EXISTING\n\nCreateFile status = 0 - lastError = 0\nQueryVolumeInfo 0006\nQueryVolumeInfo 0006\nCleanup 0006\nCleanup: C:\\Users\\admin\\Pictures\\\nClose 0006\nCreate 0007\nCreateFile : C:\\Users\\admin\\Pictures\\\nClose: C:\\Users\\admin\\Pictures\\\nAccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x0\n        AccessMode = 0x100000\n        SYNCHRONIZE\n        FlagsAndAttributes = 0x2000000\n        FILE_FLAG_BACKUP_SEMANTICS\n        OPEN_EXISTING\nCreateFile status = 0 - lastError = 0\nCreate 0008\nCreateFile : C:\\Users\\admin\\Pictures\\\nQueryVolumeInfo 0007\nAccountName: admin, DomainName: DESKTOP-JO1Q8DD\nQueryVolumeInfo 0007\n    ShareMode = 0x0\n    AccessMode = 0x100000\n    SYNCHRONIZE\n\nCleanup 0007\nCleanup: C:\\Users\\admin\\Pictures\\\n    FlagsAndAttributes = 0x2000000\n    FILE_FLAG_BACKUP_SEMANTICS\n    OPEN_EXISTING\n\nClose 0007\nClose: C:\\Users\\admin\\Pictures\\\nCreateFile status = 0 - lastError = 0\nQueryVolumeInfo 0008\nQueryVolumeInfo 0008\nCleanup 0008\nCleanup: C:\\Users\\admin\\Pictures\\\nClose 0008\nClose: C:\\Users\\admin\\Pictures\\\nCreate 0009\nCreateFile : C:\\Users\\admin\\Pictures\\\nCreate 0009\nCreateFile : C:\\Users\\admin\\Pictures\\\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x7\n        FILE_SHARE_READ\n        FILE_SHARE_WRITE\n        FILE_SHARE_DELETE\n        AccessMode = 0x80\n        FILE_READ_ATTRIBUTES\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x7\n        FILE_SHARE_READ\n        FILE_SHARE_WRITE\n        FILE_SHARE_DELETE\n        AccessMode = 0x80\n        FILE_READ_ATTRIBUTES\nCreate 0011\nCreateFile : C:\\Users\\admin\\Pictures\\\n        FlagsAndAttributes = 0x2200000\n        FILE_FLAG_BACKUP_SEMANTICS\n        FILE_FLAG_OPEN_REPARSE_POINT\n        OPEN_EXISTING\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x0\n        AccessMode = 0x100000\n        SYNCHRONIZE\nCreateFile status = 0 - lastError = 0\n        FlagsAndAttributes = 0x2000000\n        FILE_FLAG_BACKUP_SEMANTICS\n        OPEN_EXISTING\n        FlagsAndAttributes = 0x2200000\n        FILE_FLAG_BACKUP_SEMANTICS\n        FILE_FLAG_OPEN_REPARSE_POINT\n        OPEN_EXISTING\nCreateFile status = 0 - lastError = 0\nCreateFile status = 0 - lastError = 0\nQueryVolumeInfo 0011\nGetFileInfo 0010\nGetFileInfo : C:\\Users\\admin\\Pictures\\\nQueryVolumeInfo 0011\nGetFileInfo 0009\nGetFileInfo : C:\\Users\\admin\\Pictures\\\nCleanup 0011\nCleanup: C:\\Users\\admin\\Pictures\\\n    GetFileInformationByHandle success, file size = 4096\n\n    result =  0\n    FileNetworkOpenInformation\n    GetFileInformationByHandle success, file size = 4096\n\n    result =  0\n\nCleanup 0009\nCleanup: C:\\Users\\admin\\Pictures\\\nCreate 0012\nCreateFile : C:\\Users\\admin\\Pictures\\\nClose 0011\nClose: C:\\Users\\admin\\Pictures\\\nClose 0009\nClose: C:\\Users\\admin\\Pictures\\\nAccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x7\n        FILE_SHARE_READ\n        FILE_SHARE_WRITE\n        FILE_SHARE_DELETE\n        AccessMode = 0x80\n        FILE_READ_ATTRIBUTES\n        FileBasicInformation\nCreate 0013\nCreateFile : C:\\Users\\admin\\Pictures\\\nCreate 0013\nCreateFile : C:\\Users\\admin\\Pictures\\\nCreate 0013\nCreateFile : C:\\Users\\admin\\Pictures\\\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x0\n        AccessMode = 0x100000\n        SYNCHRONIZE\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x7\n        FILE_SHARE_READ\n        FILE_SHARE_WRITE\n        FILE_SHARE_DELETE\n        AccessMode = 0x80\n        FILE_READ_ATTRIBUTES\nCreate 0012\nCreateFile : C:\\Users\\admin\\Pictures\\\n        FlagsAndAttributes = 0x2200000\n        FILE_FLAG_BACKUP_SEMANTICS\n        FILE_FLAG_OPEN_REPARSE_POINT\n        OPEN_EXISTING\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x7\n        FILE_SHARE_READ\n        FILE_SHARE_WRITE\n        FILE_SHARE_DELETE\n        AccessMode = 0x80\n        FILE_READ_ATTRIBUTES\n        FlagsAndAttributes = 0x2200000\n        FILE_FLAG_BACKUP_SEMANTICS\n        FILE_FLAG_OPEN_REPARSE_POINT\n        OPEN_EXISTING\n        FlagsAndAttributes = 0x2000000\n        FILE_FLAG_BACKUP_SEMANTICS\n        OPEN_EXISTING\n        FlagsAndAttributes = 0x2200000\nCreateFile status = 0 - lastError = 0\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x7\n        FILE_SHARE_READ\n        FILE_SHARE_WRITE\nCleanup 0010\nCleanup: C:\\Users\\admin\\Pictures\\\n    FILE_FLAG_BACKUP_SEMANTICS\n    FILE_FLAG_OPEN_REPARSE_POINT\n    OPEN_EXISTING\n\nCreateFile status = 0 - lastError = 0\nCreateFile status = 0 - lastError = 0\nCreateFile status = 0 - lastError = 0\nClose 0010\n    FILE_SHARE_DELETE\n    AccessMode = 0x80\n    FILE_READ_ATTRIBUTES\n\nQueryVolumeInfo 0013\nClose: C:\\Users\\admin\\Pictures\\\nCreate 0017\nCreateFile : C:\\Users\\admin\\Pictures\\\n        FlagsAndAttributes = 0x2200000\n        FILE_FLAG_BACKUP_SEMANTICS\n        FILE_FLAG_OPEN_REPARSE_POINT\n        OPEN_EXISTING\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x7\n        FILE_SHARE_READ\n        FILE_SHARE_WRITE\n        FILE_SHARE_DELETE\n        AccessMode = 0x100081\n        FILE_READ_DATA\n        FILE_READ_ATTRIBUTES\n        SYNCHRONIZE\nGetFileInfo 0012\nGetFileInfo : C:\\Users\\admin\\Pictures\\\nGetFileInfo 0016\nGetFileInfo : C:\\Users\\admin\\Pictures\\\n        GetFileInformationByHandle success, file size = 4096\nGetFileInfo 0015\nGetFileInfo : C:\\Users\\admin\\Pictures\\\nCreateFile status = 0 - lastError = 0\n    result =  0\n    FileBasicInformation\n    FlagsAndAttributes = 0x2000000\n    FILE_FLAG_BACKUP_SEMANTICS\n    OPEN_EXISTING\n    GetFileInformationByHandle success, file size = 4096\n\n    result =  0\n    FileNetworkOpenInformation\n\nCreateFile status = 0 - lastError = 0\nQueryVolumeInfo 0013\n    GetFileInformationByHandle success, file size = 4096\n\n    result =  0\n    FileNetworkOpenInformation\n\nGetFileInfo 0017\nGetFileInfo : C:\\Users\\admin\\Pictures\\\nGetFileInfo 0014\nGetFileInfo : C:\\Users\\admin\\Pictures\\\n        GetFileInformationByHandle success, file size = 4096\n    result =  0\n    FileBasicInformation\n\nCleanup 0013\nCleanup: C:\\Users\\admin\\Pictures\\\n    GetFileInformationByHandle success, file size = 4096\n\nCleanup 0012\nCleanup: C:\\Users\\admin\\Pictures\\\nCleanup 0014\nCleanup: C:\\Users\\admin\\Pictures\\\n    result =  0\n    FileBasicInformation\n\nClose 0013\nClose: C:\\Users\\admin\\Pictures\\\nClose 0012\nClose: C:\\Users\\admin\\Pictures\\\nCreate 0018\nCreateFile : C:\\Users\\admin\\Pictures\\\nClose 0014\nClose: C:\\Users\\admin\\Pictures\\\nCreate 0018\nCreateFile : C:\\Users\\admin\\Pictures\\\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x7\n        FILE_SHARE_READ\n        FILE_SHARE_WRITE\n        FILE_SHARE_DELETE\n        AccessMode = 0x80\n        FILE_READ_ATTRIBUTES\nCleanup 0015\nCleanup: C:\\Users\\admin\\Pictures\\\nCleanup 0016\nCleanup: C:\\Users\\admin\\Pictures\\\n    FlagsAndAttributes = 0x2200000\n    FILE_FLAG_BACKUP_SEMANTICS\n    FILE_FLAG_OPEN_REPARSE_POINT\n    OPEN_EXISTING\n\nCreate 0020\nCreateFile : C:\\Users\\admin\\Pictures\\\nClose 0015\nClose: C:\\Users\\admin\\Pictures\\\nCreateFile status = 0 - lastError = 0\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x7\n        FILE_SHARE_READ\n        FILE_SHARE_WRITE\n        FILE_SHARE_DELETE\n        AccessMode = 0x80\n        FILE_READ_ATTRIBUTES\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x7\n        FILE_SHARE_READ\n        FILE_SHARE_WRITE\n        FILE_SHARE_DELETE\n        AccessMode = 0x80\n        FILE_READ_ATTRIBUTES\nClose 0016\nClose: C:\\Users\\admin\\Pictures\\\nGetFileInfo 0018\nGetFileInfo : C:\\Users\\admin\\Pictures\\\n        FlagsAndAttributes = 0x2200000\n        FILE_FLAG_BACKUP_SEMANTICS\n        FILE_FLAG_OPEN_REPARSE_POINT\n        OPEN_EXISTING\n        FlagsAndAttributes = 0x2200000\n        FILE_FLAG_BACKUP_SEMANTICS\n        GetFileInformationByHandle success, file size = 4096\n    result =  0\n    FileBasicInformation\n\nCreateFile status = 0 - lastError = 0\n        FILE_FLAG_OPEN_REPARSE_POINT\n        OPEN_EXISTING\nCreate 0019\nCreateFile : C:\\Users\\admin\\Pictures\\\nCleanup 0018\nCleanup: C:\\Users\\admin\\Pictures\\\nGetFileInfo 0019\nGetFileInfo : C:\\Users\\admin\\Pictures\\\nCreateFile status = 0 - lastError = 0\nCreate 0022\nCreateFile : C:\\Users\\admin\\Pictures\\\n        GetFileInformationByHandle success, file size = 4096\n    result =  0\n    FileBasicInformation\n\nAccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x7\n        FILE_SHARE_READ\n        FILE_SHARE_WRITE\n        FILE_SHARE_DELETE\n        AccessMode = 0x80\n        FILE_READ_ATTRIBUTES\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x7\n        FILE_SHARE_READ\n        FILE_SHARE_WRITE\n        FILE_SHARE_DELETE\n        AccessMode = 0x100081\n        FILE_READ_DATA\n        FILE_READ_ATTRIBUTES\n        SYNCHRONIZE\nCleanup 0019\nCleanup: C:\\Users\\admin\\Pictures\\\nGetFileInfo 0020\nGetFileInfo : C:\\Users\\admin\\Pictures\\\n        GetFileInformationByHandle success, file size = 4096\n    result =  0\n    FileBasicInformation\n    FlagsAndAttributes = 0x2000000\n    FILE_FLAG_BACKUP_SEMANTICS\n    OPEN_EXISTING\n    FlagsAndAttributes = 0x2200000\n    FILE_FLAG_BACKUP_SEMANTICS\n    FILE_FLAG_OPEN_REPARSE_POINT\n    OPEN_EXISTING\n\nCreateFile status = 0 - lastError = 0\nClose 0018\nClose: C:\\Users\\admin\\Pictures\\\nCreateFile status = 0 - lastError = 0\nCleanup 0020\nCleanup: C:\\Users\\admin\\Pictures\\\nGetFileInfo 0021\nGetFileInfo : C:\\Users\\admin\\Pictures\\\n        GetFileInformationByHandle success, file size = 4096\n    result =  0\n    FileBasicInformation\n\nGetFileInfo 0022\nGetFileInfo : C:\\Users\\admin\\Pictures\\\nClose 0020\nClose: C:\\Users\\admin\\Pictures\\\nCreate 0023\nCreateFile : C:\\Users\\admin\\Pictures\\\n        GetFileInformationByHandle success, file size = 4096\n    result =  0\n    FileBasicInformation\n\nCreate 0023\nClose 0019\nClose: C:\\Users\\admin\\Pictures\\\nCleanup 0022\nCleanup: C:\\Users\\admin\\Pictures\\\nAccountName: admin, DomainName: DESKTOP-JO1Q8DD\nCreateFile : C:\\Users\\admin\\Pictures\\\nClose 0022\nClose: C:\\Users\\admin\\Pictures\\\n    ShareMode = 0x7\n    FILE_SHARE_READ\n    FILE_SHARE_WRITE\n    FILE_SHARE_DELETE\n    AccessMode = 0x80\n    FILE_READ_ATTRIBUTES\n\nCreate 0025\nCreateFile : C:\\Users\\admin\\Pictures\\\n        FlagsAndAttributes = 0x2200000\n        FILE_FLAG_BACKUP_SEMANTICS\n        FILE_FLAG_OPEN_REPARSE_POINT\n        OPEN_EXISTING\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x7\nCreateFile status = 0 - lastError = 0\nGetFileInfo 0023\nGetFileInfo : C:\\Users\\admin\\Pictures\\\n        FILE_SHARE_READ\n        FILE_SHARE_WRITE\n        FILE_SHARE_DELETE\n        AccessMode = 0x80\n        FILE_READ_ATTRIBUTES\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x7\n        FILE_SHARE_READ\n        FILE_SHARE_WRITE\n        FILE_SHARE_DELETE\n        AccessMode = 0x80\n        FILE_READ_ATTRIBUTES\n        GetFileInformationByHandle success, file size = 4096\n    result =  0\n    FileBasicInformation\n    FlagsAndAttributes = 0x2200000\n    FILE_FLAG_BACKUP_SEMANTICS\n    FILE_FLAG_OPEN_REPARSE_POINT\n    OPEN_EXISTING\n\nCleanup 0023\nCleanup: C:\\Users\\admin\\Pictures\\\nCreateFile status = 0 - lastError = 0\nClose 0023\nClose: C:\\Users\\admin\\Pictures\\\n    FlagsAndAttributes = 0x2200000\n    FILE_FLAG_BACKUP_SEMANTICS\n    FILE_FLAG_OPEN_REPARSE_POINT\n    OPEN_EXISTING\n\nCreate 0026\nCreateFile : C:\\Users\\admin\\Pictures\\\nCreateFile status = 0 - lastError = 0\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x7\n        FILE_SHARE_READ\n        FILE_SHARE_WRITE\n        FILE_SHARE_DELETE\n        AccessMode = 0x80\n        FILE_READ_ATTRIBUTES\nGetFileInfo 0024\nGetFileInfo : C:\\Users\\admin\\Pictures\\\n        GetFileInformationByHandle success, file size = 4096\n    result =  0\n    FileBasicInformation\n    FlagsAndAttributes = 0x2200000\n    FILE_FLAG_BACKUP_SEMANTICS\n    FILE_FLAG_OPEN_REPARSE_POINT\n    OPEN_EXISTING\n\nCleanup 0024\nCleanup: C:\\Users\\admin\\Pictures\\\nCreateFile status = 0 - lastError = 0\nClose 0024\nClose: C:\\Users\\admin\\Pictures\\\nGetFileInfo 0026\nGetFileInfo : C:\\Users\\admin\\Pictures\\\nGetFileInfo 0025\nGetFileInfo : C:\\Users\\admin\\Pictures\\\n        GetFileInformationByHandle success, file size = 4096\n    result =  0\n    FileBasicInformation\n    GetFileInformationByHandle success, file size = 4096\n\n    result =  0\n    FileBasicInformation\n\nCleanup 0026\nCleanup: C:\\Users\\admin\\Pictures\\\nCleanup 0025\nCleanup: C:\\Users\\admin\\Pictures\\\nClose 0026\nClose: C:\\Users\\admin\\Pictures\\\nClose 0025\nClose: C:\\Users\\admin\\Pictures\\\nCreate 0027\nCreateFile : C:\\Users\\admin\\Pictures\\\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x7\n        FILE_SHARE_READ\n        FILE_SHARE_WRITE\n        FILE_SHARE_DELETE\n        AccessMode = 0x80\n        FILE_READ_ATTRIBUTES\nCreate 0028\nCreateFile : C:\\Users\\admin\\Pictures\\desktop.ini\n        FlagsAndAttributes = 0x2200000\n        FILE_FLAG_BACKUP_SEMANTICS\n        FILE_FLAG_OPEN_REPARSE_POINT\n        OPEN_EXISTING\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x7\n        FILE_SHARE_READ\n        FILE_SHARE_WRITE\n        FILE_SHARE_DELETE\n        AccessMode = 0x120089\n        FILE_READ_DATA\n        FILE_READ_ATTRIBUTES\n        FILE_READ_EA\n        READ_CONTROL\n        SYNCHRONIZE\n        STANDARD_RIGHTS_READ\n        STANDARD_RIGHTS_WRITE\n        STANDARD_RIGHTS_EXECUTE\nCreateFile status = 0 - lastError = 0\n        FlagsAndAttributes = 0x8000000\n        FILE_FLAG_SEQUENTIAL_SCAN\n        OPEN_EXISTING\nGetFileInfo 0027\nGetFileInfo : C:\\Users\\admin\\Pictures\\\n        GetFileInformationByHandle success, file size = 4096\n    result =  0\n    FileBasicInformation\n\nCreateFile status = 0 - lastError = 0\nCleanup 0027\nCleanup: C:\\Users\\admin\\Pictures\\\nGetFileInfo 0028\nGetFileInfo : C:\\Users\\admin\\Pictures\\desktop.ini\nClose 0027\nClose: C:\\Users\\admin\\Pictures\\\n    GetFileInformationByHandle success, file size = 504\n\n    result =  0\n    FileStandardInformation\n\nRead 0028\nReadFile : C:\\Users\\admin\\Pictures\\desktop.ini\n        read 504, offset 0\nGetFileInfo 0028\nGetFileInfo : C:\\Users\\admin\\Pictures\\desktop.ini\n        GetFileInformationByHandle success, file size = 504\n    result =  0\n    FileBasicInformation\n\nCleanup 0028\nCleanup: C:\\Users\\admin\\Pictures\\desktop.ini\nClose 0028\nClose: C:\\Users\\admin\\Pictures\\desktop.ini\nCreate 0029\nCreateFile : C:\\Users\\admin\\Pictures\\\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x7\n        FILE_SHARE_READ\n        FILE_SHARE_WRITE\n        FILE_SHARE_DELETE\n        AccessMode = 0x100081\n        FILE_READ_DATA\n        FILE_READ_ATTRIBUTES\n        SYNCHRONIZE\n        FlagsAndAttributes = 0x2000000\n        FILE_FLAG_BACKUP_SEMANTICS\n        OPEN_EXISTING\nCreateFile status = 0 - lastError = 0\nGetFileInfo 0029\nGetFileInfo : C:\\Users\\admin\\Pictures\\\n        GetFileInformationByHandle success, file size = 4096\n    result =  0\n\nunknown type:55\nFindFiles 0029\nFindFiles :C:\\Users\\admin\\Pictures\\\n        FindFiles return 6 entries in C:\\Users\\admin\\Pictures*\nindex from 0\nFileMatch? : . (null,0,0)\n  =>return\nFileMatch? : .. (null,0,1)\n  =>return\nFileMatch? : Camera Roll (null,0,2)\n  =>return\nFileMatch? : Chrysanthemum.jpg (null,0,3)\n  =>return\nFileMatch? : desktop.ini (null,0,4)\n  =>return\nFileMatch? : Saved Pictures (null,0,5)\n  =>return\nindex to 6\nCreate 0030\nCreateFile : C:\\Users\\admin\\Pictures\\Camera Roll\\desktop.ini\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x7\n        FILE_SHARE_READ\n        FILE_SHARE_WRITE\n        FILE_SHARE_DELETE\n        AccessMode = 0x120089\n        FILE_READ_DATA\n        FILE_READ_ATTRIBUTES\n        FILE_READ_EA\n        READ_CONTROL\n        SYNCHRONIZE\n        STANDARD_RIGHTS_READ\n        STANDARD_RIGHTS_WRITE\n        STANDARD_RIGHTS_EXECUTE\nCreate 0031\nCreateFile : C:\\Users\\admin\\Pictures\\\n        FlagsAndAttributes = 0x8000000\n        FILE_FLAG_SEQUENTIAL_SCAN\n        OPEN_EXISTING\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x0\n        AccessMode = 0x100000\n        SYNCHRONIZE\nCreateFile status = 0 - lastError = 0\n        FlagsAndAttributes = 0x2000000\n        FILE_FLAG_BACKUP_SEMANTICS\n        OPEN_EXISTING\nGetFileInfo 0030\nGetFileInfo : C:\\Users\\admin\\Pictures\\Camera Roll\\desktop.ini\nCreateFile status = 0 - lastError = 0\n        GetFileInformationByHandle success, file size = 190\n    result =  0\n    FileStandardInformation\n\nQueryVolumeInfo 0031\nRead 0030\nQueryVolumeInfo 0031\nReadFile : C:\\Users\\admin\\Pictures\\Camera Roll\\desktop.ini\nCleanup 0031\nCleanup: C:\\Users\\admin\\Pictures\\\n    read 190, offset 0\n\nClose 0031\nClose: C:\\Users\\admin\\Pictures\\\nGetFileInfo 0030\nGetFileInfo : C:\\Users\\admin\\Pictures\\Camera Roll\\desktop.ini\nCreate 0032\nCreateFile : C:\\Users\\admin\\Pictures\\\n        GetFileInformationByHandle success, file size = 190\n    result =  0\n    FileBasicInformation\n\nAccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x7\n        FILE_SHARE_READ\n        FILE_SHARE_WRITE\n        FILE_SHARE_DELETE\n        AccessMode = 0x80\n        FILE_READ_ATTRIBUTES\nCleanup 0030\nCleanup: C:\\Users\\admin\\Pictures\\Camera Roll\\desktop.ini\n    FlagsAndAttributes = 0x2200000\n    FILE_FLAG_BACKUP_SEMANTICS\n    FILE_FLAG_OPEN_REPARSE_POINT\n    OPEN_EXISTING\n\nCreate 0033\nCreateFile : C:\\Users\\admin\\Pictures\\Saved Pictures\\desktop.ini\nCreateFile status = 0 - lastError = 0\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x7\n        FILE_SHARE_READ\nClose 0030\nClose: C:\\Users\\admin\\Pictures\\Camera Roll\\desktop.ini\n    FILE_SHARE_WRITE\n    FILE_SHARE_DELETE\n    AccessMode = 0x120089\n    FILE_READ_DATA\n    FILE_READ_ATTRIBUTES\n    FILE_READ_EA\n    READ_CONTROL\n    SYNCHRONIZE\n    STANDARD_RIGHTS_READ\n    STANDARD_RIGHTS_WRITE\n    STANDARD_RIGHTS_EXECUTE\n\nGetFileInfo 0032\nGetFileInfo : C:\\Users\\admin\\Pictures\\\n        GetFileInformationByHandle success, file size = 4096\n    result =  0\n    FileBasicInformation\n    FlagsAndAttributes = 0x8000000\n    FILE_FLAG_SEQUENTIAL_SCAN\n    OPEN_EXISTING\n\nCleanup 0032\nCleanup: C:\\Users\\admin\\Pictures\\\nCreateFile status = 0 - lastError = 0\nClose 0032\nClose: C:\\Users\\admin\\Pictures\\\nGetFileInfo 0033\nGetFileInfo : C:\\Users\\admin\\Pictures\\Saved Pictures\\desktop.ini\nCreate 0034\nCreateFile : C:\\Users\\admin\\Pictures\\\n        GetFileInformationByHandle success, file size = 190\n    result =  0\n    FileStandardInformation\n\nAccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x0\n        AccessMode = 0x100000\n        SYNCHRONIZE\nRead 0033\nReadFile : C:\\Users\\admin\\Pictures\\Saved Pictures\\desktop.ini\n        FlagsAndAttributes = 0x2000000\n        FILE_FLAG_BACKUP_SEMANTICS\n        OPEN_EXISTING\n        read 190, offset 0\nCreateFile status = 0 - lastError = 0\nGetFileInfo 0033\nGetFileInfo : C:\\Users\\admin\\Pictures\\Saved Pictures\\desktop.ini\nQueryVolumeInfo 0034\n    GetFileInformationByHandle success, file size = 190\n\n    result =  0\n    FileBasicInformation\n\nQueryVolumeInfo 0034\nCleanup 0033\nCleanup: C:\\Users\\admin\\Pictures\\Saved Pictures\\desktop.ini\nCleanup 0034\nCleanup: C:\\Users\\admin\\Pictures\\\nindex from 6\nFileMatch? : . (null,6,0)\nFileMatch? : .. (null,6,1)\nFileMatch? : Camera Roll (null,6,2)\nFileMatch? : Chrysanthemum.jpg (null,6,3)\nFileMatch? : desktop.ini (null,6,4)\nFileMatch? : Saved Pictures (null,6,5)\n  STATUS_NO_MORE_FILES\nClose 0034\nClose: C:\\Users\\admin\\Pictures\\\nCreate 0035\nCreateFile : C:\\Users\\admin\\Pictures\\\nClose 0033\nClose: C:\\Users\\admin\\Pictures\\Saved Pictures\\desktop.ini\nAccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x0\n        AccessMode = 0x100000\n        SYNCHRONIZE\nCleanup 0029\nCleanup: C:\\Users\\admin\\Pictures\\\n    FlagsAndAttributes = 0x2000000\n    FILE_FLAG_BACKUP_SEMANTICS\n    OPEN_EXISTING\n\nClose 0029\nClose: C:\\Users\\admin\\Pictures\\\nCreateFile status = 0 - lastError = 0\nQueryVolumeInfo 0035\nQueryVolumeInfo 0035\nCleanup 0035\nCleanup: C:\\Users\\admin\\Pictures\\\nClose 0035\nClose: C:\\Users\\admin\\Pictures\\\nCreate 0036\nCreateFile : C:\\Users\\admin\\Pictures\\\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x0\n        AccessMode = 0x100000\n        SYNCHRONIZE\n        FlagsAndAttributes = 0x2000000\n        FILE_FLAG_BACKUP_SEMANTICS\n        OPEN_EXISTING\nCreateFile status = 0 - lastError = 0\nQueryVolumeInfo 0036\nQueryVolumeInfo 0036\nCleanup 0036\nCleanup: C:\\Users\\admin\\Pictures\\\nClose 0036\nClose: C:\\Users\\admin\\Pictures\\\nCreate 0037\nCreateFile : C:\\Users\\admin\\Pictures\\\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x0\n        AccessMode = 0x100000\n        SYNCHRONIZE\n        FlagsAndAttributes = 0x2000000\n        FILE_FLAG_BACKUP_SEMANTICS\n        OPEN_EXISTING\nCreateFile status = 0 - lastError = 0\nQueryVolumeInfo 0037\nQueryVolumeInfo 0037\nCleanup 0037\nCleanup: C:\\Users\\admin\\Pictures\\\nClose 0037\nClose: C:\\Users\\admin\\Pictures\\\nCreate 0038\nCreateFile : C:\\Users\\admin\\Pictures\\\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x0\n        AccessMode = 0x100000\n        SYNCHRONIZE\n        FlagsAndAttributes = 0x2000000\n        FILE_FLAG_BACKUP_SEMANTICS\n        OPEN_EXISTING\nCreateFile status = 0 - lastError = 0\nQueryVolumeInfo 0038\nQueryVolumeInfo 0038\nCleanup 0038\nCleanup: C:\\Users\\admin\\Pictures\\\nClose 0038\nClose: C:\\Users\\admin\\Pictures\\\nCreate 0039\nCreateFile : C:\\Users\\admin\\Pictures\\\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x0\n        AccessMode = 0x100000\n        SYNCHRONIZE\n        FlagsAndAttributes = 0x2000000\n        FILE_FLAG_BACKUP_SEMANTICS\n        OPEN_EXISTING\nCreateFile status = 0 - lastError = 0\nQueryVolumeInfo 0039\nQueryVolumeInfo 0039\nCleanup 0039\nCleanup: C:\\Users\\admin\\Pictures\\\nClose 0039\nClose: C:\\Users\\admin\\Pictures\\\nCreate 0040\nCreateFile : C:\\Users\\admin\\Pictures\\\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x0\n        AccessMode = 0x100000\n        SYNCHRONIZE\n        FlagsAndAttributes = 0x2000000\n        FILE_FLAG_BACKUP_SEMANTICS\n        OPEN_EXISTING\nCreateFile status = 0 - lastError = 0\nQueryVolumeInfo 0040\nQueryVolumeInfo 0040\nCleanup 0040\nCleanup: C:\\Users\\admin\\Pictures\\\nClose 0040\nClose: C:\\Users\\admin\\Pictures\\\nCreate 0041\nCreateFile : C:\\Users\\admin\\Pictures\\\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x0\n        AccessMode = 0x100000\n        SYNCHRONIZE\n        FlagsAndAttributes = 0x2000000\n        FILE_FLAG_BACKUP_SEMANTICS\n        OPEN_EXISTING\nCreateFile status = 0 - lastError = 0\nQueryVolumeInfo 0041\nQueryVolumeInfo 0041\nCleanup 0041\nCleanup: C:\\Users\\admin\\Pictures\\\nClose 0041\nClose: C:\\Users\\admin\\Pictures\\\nCreate 0042\nCreateFile : C:\\Users\\admin\\Pictures\\\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x0\n        AccessMode = 0x100000\n        SYNCHRONIZE\n        FlagsAndAttributes = 0x2000000\n        FILE_FLAG_BACKUP_SEMANTICS\n        OPEN_EXISTING\nCreateFile status = 0 - lastError = 0\nQueryVolumeInfo 0042\nQueryVolumeInfo 0042\nCleanup 0042\nCleanup: C:\\Users\\admin\\Pictures\\\nClose 0042\nCreate 0043\nCreateFile : C:\\Users\\admin\\Pictures\\\nClose: C:\\Users\\admin\\Pictures\\\nAccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x0\n        AccessMode = 0x100000\n        SYNCHRONIZE\n        FlagsAndAttributes = 0x2000000\n        FILE_FLAG_BACKUP_SEMANTICS\n        OPEN_EXISTING\nCreateFile status = 0 - lastError = 0\nQueryVolumeInfo 0043\nQueryVolumeInfo 0043\nCleanup 0043\nCleanup: C:\\Users\\admin\\Pictures\\\nClose 0043\nClose: C:\\Users\\admin\\Pictures\\\nCreate 0044\nCreateFile : C:\\Users\\admin\\Pictures\\\nCreate 0044\nCreateFile : C:\\Users\\admin\\Pictures\\\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x0\n        AccessMode = 0x100000\n        SYNCHRONIZE\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x0\n        AccessMode = 0x100000\n        SYNCHRONIZE\n        FlagsAndAttributes = 0x2000000\n        FILE_FLAG_BACKUP_SEMANTICS\n        OPEN_EXISTING\n        FlagsAndAttributes = 0x2000000\n        FILE_FLAG_BACKUP_SEMANTICS\n        OPEN_EXISTING\nCreateFile status = 0 - lastError = 0\nCreateFile status = 0 - lastError = 0\nQueryVolumeInfo 0044\nQueryVolumeInfo 0045\nQueryVolumeInfo 0044\nQueryVolumeInfo 0045\nCleanup 0044\nCleanup: C:\\Users\\admin\\Pictures\\\nCleanup 0045\nCleanup: C:\\Users\\admin\\Pictures\\\nCreate 0046\nCreateFile : C:\\Users\\admin\\Pictures\\\nClose 0045\nClose: C:\\Users\\admin\\Pictures\\\nClose 0044\nClose: C:\\Users\\admin\\Pictures\\\nCreate 0046\nCreateFile : C:\\Users\\admin\\Pictures\\\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x0\n        AccessMode = 0x100000\n        SYNCHRONIZE\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x0\n        AccessMode = 0x100000\n        SYNCHRONIZE\n        FlagsAndAttributes = 0x2000000\n        FILE_FLAG_BACKUP_SEMANTICS\n        OPEN_EXISTING\n        FlagsAndAttributes = 0x2000000\n        FILE_FLAG_BACKUP_SEMANTICS\n        OPEN_EXISTING\nCreateFile status = 0 - lastError = 0\nCreateFile status = 0 - lastError = 0\nQueryVolumeInfo 0046\nQueryVolumeInfo 0047\nQueryVolumeInfo 0046\nQueryVolumeInfo 0047\nCleanup 0046\nCleanup: C:\\Users\\admin\\Pictures\\\nCleanup 0047\nCleanup: C:\\Users\\admin\\Pictures\\\nClose 0046\nClose: C:\\Users\\admin\\Pictures\\\nCreate 0048\nCreateFile : C:\\Users\\admin\\Pictures\\\nClose 0047\nClose: C:\\Users\\admin\\Pictures\\\nAccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x0\n        AccessMode = 0x100000\n        SYNCHRONIZE\n        FlagsAndAttributes = 0x2000000\n        FILE_FLAG_BACKUP_SEMANTICS\n        OPEN_EXISTING\nCreateFile status = 0 - lastError = 0\nQueryVolumeInfo 0048\nQueryVolumeInfo 0048\nCleanup 0048\nCleanup: C:\\Users\\admin\\Pictures\\\nClose 0048\nClose: C:\\Users\\admin\\Pictures\\\nCreate 0049\nCreateFile : C:\\Users\\admin\\Pictures\\\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x0\n        AccessMode = 0x100000\n        SYNCHRONIZE\n        FlagsAndAttributes = 0x2000000\n        FILE_FLAG_BACKUP_SEMANTICS\n        OPEN_EXISTING\nCreateFile status = 0 - lastError = 0\nQueryVolumeInfo 0049\nQueryVolumeInfo 0049\nCleanup 0049\nCleanup: C:\\Users\\admin\\Pictures\\\nClose 0049\nClose: C:\\Users\\admin\\Pictures\\\nCreate 0050\nCreateFile : C:\\Users\\admin\\Pictures\\\nCreate 0050\nCreateFile : C:\\Users\\admin\\Pictures\\\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x0\n        AccessMode = 0x100000\n        SYNCHRONIZE\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x0\n        AccessMode = 0x100000\n        SYNCHRONIZE\n        FlagsAndAttributes = 0x2000000\n        FILE_FLAG_BACKUP_SEMANTICS\n        OPEN_EXISTING\n        FlagsAndAttributes = 0x2000000\n        FILE_FLAG_BACKUP_SEMANTICS\n        OPEN_EXISTING\nCreateFile status = 0 - lastError = 0\nCreateFile status = 0 - lastError = 0\nQueryVolumeInfo 0050\nQueryVolumeInfo 0051\nQueryVolumeInfo 0050\nQueryVolumeInfo 0051\nCleanup 0050\nCleanup: C:\\Users\\admin\\Pictures\\\nCleanup 0051\nCleanup: C:\\Users\\admin\\Pictures\\\nCreate 0052\nCreateFile : C:\\Users\\admin\\Pictures\\\nClose 0051\nClose: C:\\Users\\admin\\Pictures\\\nClose 0050\nClose: C:\\Users\\admin\\Pictures\\\nCreate 0052\nCreateFile : C:\\Users\\admin\\Pictures\\\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x0\n        AccessMode = 0x100000\n        SYNCHRONIZE\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x0\n        AccessMode = 0x100000\n        SYNCHRONIZE\n        FlagsAndAttributes = 0x2000000\n        FILE_FLAG_BACKUP_SEMANTICS\n        OPEN_EXISTING\n        FlagsAndAttributes = 0x2000000\n        FILE_FLAG_BACKUP_SEMANTICS\n        OPEN_EXISTING\nCreateFile status = 0 - lastError = 0\nCreateFile status = 0 - lastError = 0\nQueryVolumeInfo 0052\nQueryVolumeInfo 0053\nQueryVolumeInfo 0052\nQueryVolumeInfo 0053\nCleanup 0052\nCleanup: C:\\Users\\admin\\Pictures\\\nCleanup 0053\nCleanup: C:\\Users\\admin\\Pictures\\\nClose 0052\nClose: C:\\Users\\admin\\Pictures\\\nClose 0053\nClose: C:\\Users\\admin\\Pictures\\\nCreate 0054\nCreateFile : C:\\Users\\admin\\Pictures\\Camera Roll\nCreate 0054\nCreateFile : C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x7\n        FILE_SHARE_READ\n        FILE_SHARE_WRITE\n        FILE_SHARE_DELETE\n        AccessMode = 0x80\n        FILE_READ_ATTRIBUTES\nCreate 0054\nCreateFile : C:\\Users\\admin\\Pictures\\Saved Pictures\n        FlagsAndAttributes = 0x2200000\n        FILE_FLAG_BACKUP_SEMANTICS\n        FILE_FLAG_OPEN_REPARSE_POINT\n        OPEN_EXISTING\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x7\n        FILE_SHARE_READ\n        FILE_SHARE_WRITE\n        FILE_SHARE_DELETE\n        AccessMode = 0x80\n        FILE_READ_ATTRIBUTES\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x7\n        FILE_SHARE_READ\n        FILE_SHARE_WRITE\n        FILE_SHARE_DELETE\n        AccessMode = 0x80\n        FILE_READ_ATTRIBUTES\nCreateFile status = 0 - lastError = 0\n        FlagsAndAttributes = 0x200000\n        FILE_FLAG_OPEN_REPARSE_POINT\n        OPEN_EXISTING\n        FlagsAndAttributes = 0x2200000\n        FILE_FLAG_BACKUP_SEMANTICS\n        FILE_FLAG_OPEN_REPARSE_POINT\n        OPEN_EXISTING\nCreateFile status = 0 - lastError = 0\nCreateFile status = 0 - lastError = 0\nGetFileInfo 0055\nGetFileInfo : C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\nGetFileInfo 0056\nGetFileInfo : C:\\Users\\admin\\Pictures\\Saved Pictures\n        GetFileInformationByHandle success, file size = 879394\n    result =  0\n    FileNetworkOpenInformation\n    GetFileInformationByHandle success, file size = 4096\n\n    result =  0\n    FileNetworkOpenInformation\n\nCleanup 0055\nCleanup: C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\nCleanup 0056\nCleanup: C:\\Users\\admin\\Pictures\\Saved Pictures\nClose 0055\nClose: C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\nGetFileInfo 0054\nGetFileInfo : C:\\Users\\admin\\Pictures\\Camera Roll\nCreate 0057\nCreateFile : C:\\Users\\admin\\Pictures\\Saved Pictures\nClose 0056\nClose: C:\\Users\\admin\\Pictures\\Saved Pictures\nCreate 0057\nCreateFile : C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\n        GetFileInformationByHandle success, file size = 0\n    result =  0\n    FileNetworkOpenInformation\n\nAccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x7\n        FILE_SHARE_READ\n        FILE_SHARE_WRITE\n        FILE_SHARE_DELETE\n        AccessMode = 0x80\n        FILE_READ_ATTRIBUTES\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x7\n        FILE_SHARE_READ\n        FILE_SHARE_WRITE\n        FILE_SHARE_DELETE\n        AccessMode = 0x80\n        FlagsAndAttributes = 0x200000\n        FILE_FLAG_OPEN_REPARSE_POINT\n        OPEN_EXISTING\n        FILE_READ_ATTRIBUTES\nCleanup 0054\nCleanup: C:\\Users\\admin\\Pictures\\Camera Roll\nCreateFile status = 0 - lastError = 0\nCreate 0059\nCreateFile : C:\\Users\\admin\\Pictures\\\nCreate 0059\nCreateFile : C:\\Users\\admin\\Pictures\\Camera Roll\nGetFileInfo 0058\nGetFileInfo : C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x7\n        FILE_SHARE_READ\n        FILE_SHARE_WRITE\n        FILE_SHARE_DELETE\n        AccessMode = 0x80\n        FILE_READ_ATTRIBUTES\nClose 0054\nClose: C:\\Users\\admin\\Pictures\\Camera Roll\n    FlagsAndAttributes = 0x2200000\n    FILE_FLAG_BACKUP_SEMANTICS\n    FILE_FLAG_OPEN_REPARSE_POINT\n    OPEN_EXISTING\n\nAccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x7\n        FILE_SHARE_READ\n        FILE_SHARE_WRITE\n        FILE_SHARE_DELETE\n        AccessMode = 0x80\n        FILE_READ_ATTRIBUTES\n        FlagsAndAttributes = 0x2200000\n        FILE_FLAG_BACKUP_SEMANTICS\n        FILE_FLAG_OPEN_REPARSE_POINT\n        OPEN_EXISTING\n        GetFileInformationByHandle success, file size = 879394\n    result =  0\n    FileBasicInformation\n\nCreateFile status = 0 - lastError = 0\nCreateFile status = 0 - lastError = 0\n        FlagsAndAttributes = 0x2200000\n        FILE_FLAG_BACKUP_SEMANTICS\n        FILE_FLAG_OPEN_REPARSE_POINT\n        OPEN_EXISTING\nGetFileInfo 0057\nGetFileInfo : C:\\Users\\admin\\Pictures\\Saved Pictures\nGetFileInfo 0059\nGetFileInfo : C:\\Users\\admin\\Pictures\\\nCleanup 0058\nCleanup: C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\nCreateFile status = 0 - lastError = 0\n        GetFileInformationByHandle success, file size = 4096\n    result =  0\n    FileBasicInformation\n\nGetFileInfo 0060\nGetFileInfo : C:\\Users\\admin\\Pictures\\Camera Roll\nCreate 0061\nCreateFile : C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\nCleanup 0057\nCleanup: C:\\Users\\admin\\Pictures\\Saved Pictures\n    GetFileInformationByHandle success, file size = 0\n\n    result =  0\n    FileBasicInformation\n\nClose 0057\nClose: C:\\Users\\admin\\Pictures\\Saved Pictures\nAccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x7\n        FILE_SHARE_READ\n        FILE_SHARE_WRITE\n        FILE_SHARE_DELETE\n        AccessMode = 0x80\n        FILE_READ_ATTRIBUTES\n        GetFileInformationByHandle success, file size = 4096\n    result =  0\n    FileBasicInformation\n    FlagsAndAttributes = 0x200000\n    FILE_FLAG_OPEN_REPARSE_POINT\n    OPEN_EXISTING\n\nCreate 0062\nCreateFile : C:\\Users\\admin\\Pictures\\Saved Pictures\nCleanup 0060\nCleanup: C:\\Users\\admin\\Pictures\\Camera Roll\nCreateFile status = 0 - lastError = 0\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x7\n        FILE_SHARE_READ\n        FILE_SHARE_WRITE\n        FILE_SHARE_DELETE\n        AccessMode = 0x80\n        FILE_READ_ATTRIBUTES\nCleanup 0059\nCleanup: C:\\Users\\admin\\Pictures\\\nClose 0058\nClose: C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\n    FlagsAndAttributes = 0x2200000\n    FILE_FLAG_BACKUP_SEMANTICS\n    FILE_FLAG_OPEN_REPARSE_POINT\n    OPEN_EXISTING\n\nClose 0059\nClose: C:\\Users\\admin\\Pictures\\\nGetFileInfo 0061\nGetFileInfo : C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\nCreateFile status = 0 - lastError = 0\nClose 0060\nClose: C:\\Users\\admin\\Pictures\\Camera Roll\nCreate 0063\nCreateFile : C:\\Users\\admin\\Pictures\\Camera Roll\n        GetFileInformationByHandle success, file size = 879394\n    result =  0\n    FileBasicInformation\n\nAccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x7\n        FILE_SHARE_READ\n        FILE_SHARE_WRITE\n        FILE_SHARE_DELETE\n        AccessMode = 0x80\n        FILE_READ_ATTRIBUTES\nGetFileInfo 0062\nGetFileInfo : C:\\Users\\admin\\Pictures\\Saved Pictures\n        GetFileInformationByHandle success, file size = 4096\n    result =  0\n    FileBasicInformation\n    FlagsAndAttributes = 0x2200000\n    FILE_FLAG_BACKUP_SEMANTICS\n    FILE_FLAG_OPEN_REPARSE_POINT\n    OPEN_EXISTING\n\nCleanup 0062\nCleanup: C:\\Users\\admin\\Pictures\\Saved Pictures\nCreateFile status = 0 - lastError = 0\nClose 0062\nClose: C:\\Users\\admin\\Pictures\\Saved Pictures\nCleanup 0061\nCleanup: C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\nCreate 0064\nCreateFile : C:\\Users\\admin\\Pictures\\Saved Pictures\nClose 0061\nClose: C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\nGetFileInfo 0063\nGetFileInfo : C:\\Users\\admin\\Pictures\\Camera Roll\nCreate 0064\nCreateFile : C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\n        GetFileInformationByHandle success, file size = 0\n    result =  0\n    FileBasicInformation\n\nAccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x7\n        FILE_SHARE_READ\n        FILE_SHARE_WRITE\n        FILE_SHARE_DELETE\n        AccessMode = 0x80\n        FILE_READ_ATTRIBUTES\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x7\n        FILE_SHARE_READ\n        FILE_SHARE_WRITE\n        FILE_SHARE_DELETE\n        AccessMode = 0x80\n        FILE_READ_ATTRIBUTES\nCleanup 0063\nCleanup: C:\\Users\\admin\\Pictures\\Camera Roll\n    FlagsAndAttributes = 0x2200000\n    FILE_FLAG_BACKUP_SEMANTICS\n    FILE_FLAG_OPEN_REPARSE_POINT\n    OPEN_EXISTING\n    FlagsAndAttributes = 0x200000\n    FILE_FLAG_OPEN_REPARSE_POINT\n    OPEN_EXISTING\n\nCreateFile status = 0 - lastError = 0\nCreate 0066\nCreateFile : C:\\Users\\admin\\Pictures\\Camera Roll\nClose 0063\nClose: C:\\Users\\admin\\Pictures\\Camera Roll\nCreateFile status = 0 - lastError = 0\nGetFileInfo 0064\nGetFileInfo : C:\\Users\\admin\\Pictures\\Saved Pictures\nGetFileInfo 0065\nGetFileInfo : C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\n        GetFileInformationByHandle success, file size = 4096\n    result =  0\n    FileBasicInformation\n    GetFileInformationByHandle success, file size = 879394\n\n    result =  0\n    FileBasicInformation\n\nCleanup 0064\nCleanup: C:\\Users\\admin\\Pictures\\Saved Pictures\nCleanup 0065\nCleanup: C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\nClose 0064\nClose: C:\\Users\\admin\\Pictures\\Saved Pictures\nClose 0065\nClose: C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\nAccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x7\n        FILE_SHARE_READ\n        FILE_SHARE_WRITE\n        FILE_SHARE_DELETE\n        AccessMode = 0x80\n        FILE_READ_ATTRIBUTES\n        FlagsAndAttributes = 0x2200000\n        FILE_FLAG_BACKUP_SEMANTICS\n        FILE_FLAG_OPEN_REPARSE_POINT\n        OPEN_EXISTING\nCreateFile status = 0 - lastError = 0\nGetFileInfo 0066\nGetFileInfo : C:\\Users\\admin\\Pictures\\Camera Roll\n        GetFileInformationByHandle success, file size = 0\n    result =  0\n    FileBasicInformation\n\nCleanup 0066\nCleanup: C:\\Users\\admin\\Pictures\\Camera Roll\nClose 0066\nClose: C:\\Users\\admin\\Pictures\\Camera Roll\nCreate 0067\nCreateFile : C:\\Users\\admin\\Pictures\\\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x0\n        AccessMode = 0x100000\n        SYNCHRONIZE\n        FlagsAndAttributes = 0x2000000\n        FILE_FLAG_BACKUP_SEMANTICS\n        OPEN_EXISTING\nCreateFile status = 0 - lastError = 0\nQueryVolumeInfo 0067\nQueryVolumeInfo 0067\nCleanup 0067\nCleanup: C:\\Users\\admin\\Pictures\\\nClose 0067\nClose: C:\\Users\\admin\\Pictures\\\nCreate 0068\nCreateFile : C:\\Users\\admin\\Pictures\\\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x0\n        AccessMode = 0x100000\n        SYNCHRONIZE\n        FlagsAndAttributes = 0x2000000\n        FILE_FLAG_BACKUP_SEMANTICS\n        OPEN_EXISTING\nCreateFile status = 0 - lastError = 0\nQueryVolumeInfo 0068\nCleanup 0068\nCleanup: C:\\Users\\admin\\Pictures\\\nClose 0068\nClose: C:\\Users\\admin\\Pictures\\\nCreate 0069\nCreateFile : C:\\Users\\admin\\Pictures\\\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x0\n        AccessMode = 0x100000\n        SYNCHRONIZE\n        FlagsAndAttributes = 0x2000000\n        FILE_FLAG_BACKUP_SEMANTICS\n        OPEN_EXISTING\nCreateFile status = 0 - lastError = 0\nQueryVolumeInfo 0069\nQueryVolumeInfo 0069\nCleanup 0069\nCleanup: C:\\Users\\admin\\Pictures\\\nClose 0069\nClose: C:\\Users\\admin\\Pictures\\\nCreate 0070\nCreateFile : C:\\Users\\admin\\Pictures\\\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x0\n        AccessMode = 0x100000\n        SYNCHRONIZE\n        FlagsAndAttributes = 0x2000000\n        FILE_FLAG_BACKUP_SEMANTICS\n        OPEN_EXISTING\nCreateFile status = 0 - lastError = 0\nQueryVolumeInfo 0070\nQueryVolumeInfo 0070\nCleanup 0070\nCleanup: C:\\Users\\admin\\Pictures\\\nClose 0070\nClose: C:\\Users\\admin\\Pictures\\\nCreate 0071\nCreateFile : C:\\Users\\admin\\Pictures\\\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x0\n        AccessMode = 0x100000\n        SYNCHRONIZE\n        FlagsAndAttributes = 0x2000000\n        FILE_FLAG_BACKUP_SEMANTICS\n        OPEN_EXISTING\nCreateFile status = 0 - lastError = 0\nQueryVolumeInfo 0071\nQueryVolumeInfo 0071\nCleanup 0071\nCleanup: C:\\Users\\admin\\Pictures\\\nClose 0071\nClose: C:\\Users\\admin\\Pictures\\\nCreate 0072\nCreateFile : C:\\Users\\admin\\Pictures\\\nCreate 0073\nCreateFile : C:\\Users\\admin\\Pictures\\\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x7\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        FILE_SHARE_READ\n        FILE_SHARE_WRITE\n        ShareMode = 0x0\n        AccessMode = 0x100000\n        SYNCHRONIZE\n        FILE_SHARE_DELETE\n        AccessMode = 0x80\n        FlagsAndAttributes = 0x2000000\n        FILE_FLAG_BACKUP_SEMANTICS\n        OPEN_EXISTING\n        FILE_READ_ATTRIBUTES\n        FlagsAndAttributes = 0x2200000\n        FILE_FLAG_BACKUP_SEMANTICS\n        FILE_FLAG_OPEN_REPARSE_POINT\n        OPEN_EXISTING\nCreateFile status = 0 - lastError = 0\nCreateFile status = 0 - lastError = 0\nGetFileInfo 0072\nGetFileInfo : C:\\Users\\admin\\Pictures\\\n        GetFileInformationByHandle success, file size = 4096\n    result =  0\n    FileBasicInformation\n\nQueryVolumeInfo 0073\nCleanup 0072\nCleanup: C:\\Users\\admin\\Pictures\\\nQueryVolumeInfo 0073\nClose 0072\nClose: C:\\Users\\admin\\Pictures\\\nCleanup 0073\nCleanup: C:\\Users\\admin\\Pictures\\\nClose 0073\nClose: C:\\Users\\admin\\Pictures\\\nCreate 0074\nCreateFile : C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x1\n        FILE_SHARE_READ\n        AccessMode = 0x120089\n        FILE_READ_DATA\n        FILE_READ_ATTRIBUTES\n        FILE_READ_EA\n        READ_CONTROL\n        SYNCHRONIZE\n        STANDARD_RIGHTS_READ\n        STANDARD_RIGHTS_WRITE\n        STANDARD_RIGHTS_EXECUTE\nCreate 0075\nCreateFile : C:\\Users\\admin\\Pictures\\desktop.ini\n        FlagsAndAttributes = 0x80\n        FILE_ATTRIBUTE_NORMAL\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x7\n        FILE_SHARE_READ\n        FILE_SHARE_WRITE\n        FILE_SHARE_DELETE\n        AccessMode = 0x120089\n        FILE_READ_DATA\n        FILE_READ_ATTRIBUTES\n        FILE_READ_EA\n        READ_CONTROL\n        SYNCHRONIZE\n        STANDARD_RIGHTS_READ\n        STANDARD_RIGHTS_WRITE\n        STANDARD_RIGHTS_EXECUTE\nCreate 0076\nCreateFile : C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\n        FlagsAndAttributes = 0x8000000\n        FILE_FLAG_SEQUENTIAL_SCAN\n        OPEN_EXISTING\n        OPEN_EXISTING\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x1\n        FILE_SHARE_READ\n        AccessMode = 0x120089\n        FILE_READ_DATA\n        FILE_READ_ATTRIBUTES\n        FILE_READ_EA\n        READ_CONTROL\n        SYNCHRONIZE\n        STANDARD_RIGHTS_READ\n        STANDARD_RIGHTS_WRITE\n        STANDARD_RIGHTS_EXECUTE\nCreateFile status = 0 - lastError = 0\n        FlagsAndAttributes = 0x80\n        FILE_ATTRIBUTE_NORMAL\n        OPEN_EXISTING\nCreateFile status = 0 - lastError = 0\nCreateFile status = 0 - lastError = 0\nGetFileInfo 0075\nGetFileInfo : C:\\Users\\admin\\Pictures\\desktop.ini\nCreate 0077\nCreateFile : C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\n        GetFileInformationByHandle success, file size = 504\n    result =  0\n\nCreate 0077\nCreateFile : C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\n        FileStandardInformation\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x5\n        FILE_SHARE_READ\n        FILE_SHARE_DELETE\n        AccessMode = 0x120089\n        FILE_READ_DATA\n        FILE_READ_ATTRIBUTES\n        FILE_READ_EA\n        READ_CONTROL\n        SYNCHRONIZE\n        STANDARD_RIGHTS_READ\n        STANDARD_RIGHTS_WRITE\n        STANDARD_RIGHTS_EXECUTE\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x5\n        FILE_SHARE_READ\n        FILE_SHARE_DELETE\n        AccessMode = 0x120089\n        FILE_READ_DATA\n        FILE_READ_ATTRIBUTES\n        FILE_READ_EA\n        READ_CONTROL\n        SYNCHRONIZE\n        STANDARD_RIGHTS_READ\n        STANDARD_RIGHTS_WRITE\n        STANDARD_RIGHTS_EXECUTE\nRead 0075\nReadFile : C:\\Users\\admin\\Pictures\\desktop.ini\n        FlagsAndAttributes = 0x0\n        OPEN_EXISTING\n        read 504, offset 0\n    FlagsAndAttributes = 0x0\n    OPEN_EXISTING\n\nGetFileInfo 0075\nGetFileInfo : C:\\Users\\admin\\Pictures\\desktop.ini\n        GetFileInformationByHandle success, file size = 504\n    result =  0\n    FileBasicInformation\n\nCreateFile status = 0 - lastError = 0\nCleanup 0075\nCleanup: C:\\Users\\admin\\Pictures\\desktop.ini\nGetFileInfo 0077\nGetFileInfo : C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\nClose 0075\nClose: C:\\Users\\admin\\Pictures\\desktop.ini\nCreateFile status = 0 - lastError = 0\nCreate 0079\nCreateFile : C:\\Users\\admin\\Pictures\\\nGetFileInfo 0078\nGetFileInfo : C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x7\n        FILE_SHARE_READ\n        FILE_SHARE_WRITE\n        FILE_SHARE_DELETE\n        AccessMode = 0x100081\n        FILE_READ_DATA\n        FILE_READ_ATTRIBUTES\n        SYNCHRONIZE\n        GetFileInformationByHandle success, file size = 879394\n    result =  0\n    FileStandardInformation\n    FlagsAndAttributes = 0x2000000\n    FILE_FLAG_BACKUP_SEMANTICS\n    OPEN_EXISTING\n    GetFileInformationByHandle success, file size = 879394\n\n    result =  0\n    FileStandardInformation\n\nCreateFile status = 0 - lastError = 0\nGetFileInfo 0077\nGetFileInfo : C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\nGetFileInfo 0079\nGetFileInfo : C:\\Users\\admin\\Pictures\\\n        GetFileInformationByHandle success, file size = 879394\n    result =  0\n    FileStandardInformation\n    GetFileInformationByHandle success, file size = 4096\n\n    result =  0\n\nunknown type:55\nGetFileInfo 0078\nGetFileInfo : C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\nFindFiles 0079\nFindFiles :C:\\Users\\admin\\Pictures\\\n        GetFileInformationByHandle success, file size = 879394\n    result =  0\n    FileStandardInformation\n    FindFiles return 6 entries in C:\\Users\\admin\\Pictures\\*\n\nindex from 0\nFileMatch? : . (null,0,0)\n  =>return\nFileMatch? : .. (null,0,1)\n  =>return\nFileMatch? : Camera Roll (null,0,2)\n  =>return\nFileMatch? : Chrysanthemum.jpg (null,0,3)\n  =>return\nFileMatch? : desktop.ini (null,0,4)\n  =>return\nFileMatch? : Saved Pictures (null,0,5)\n  =>return\nindex to 6\nRead 0077\nReadFile : C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\nCreate 0080\nCreateFile : C:\\Users\\admin\\Pictures\\Camera Roll\\desktop.ini\n        read 32768, offset 0\nAccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x7\n        FILE_SHARE_READ\n        FILE_SHARE_WRITE\n        FILE_SHARE_DELETE\n        AccessMode = 0x120089\n        FILE_READ_DATA\n        FILE_READ_ATTRIBUTES\n        FILE_READ_EA\n        READ_CONTROL\nCreate 0081\nCreateFile : C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\n        SYNCHRONIZE\n        STANDARD_RIGHTS_READ\n        STANDARD_RIGHTS_WRITE\n        STANDARD_RIGHTS_EXECUTE\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\nCreate 0081\nCreateFile : C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\n        ShareMode = 0x7\n        FILE_SHARE_READ\n        FILE_SHARE_WRITE\n        FILE_SHARE_DELETE\n        AccessMode = 0x80\n        FILE_READ_ATTRIBUTES\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x7\n        FILE_SHARE_READ\n        FILE_SHARE_WRITE\n        FILE_SHARE_DELETE\n        AccessMode = 0x80\n        FILE_READ_ATTRIBUTES\n        FlagsAndAttributes = 0x8000000\n        FILE_FLAG_SEQUENTIAL_SCAN\n        OPEN_EXISTING\n        FlagsAndAttributes = 0x200000\n        FILE_FLAG_OPEN_REPARSE_POINT\n        OPEN_EXISTING\n        FlagsAndAttributes = 0x200000\n        FILE_FLAG_OPEN_REPARSE_POINT\n        OPEN_EXISTING\nCreateFile status = 0 - lastError = 0\nCreateFile status = 0 - lastError = 0\nGetFileInfo 0080\nGetFileInfo : C:\\Users\\admin\\Pictures\\Camera Roll\\desktop.ini\nGetFileInfo 0082\nGetFileInfo : C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\n        GetFileInformationByHandle success, file size = 190\n    result =  0\n    FileStandardInformation\n    GetFileInformationByHandle success, file size = 879394\n\n    result =  0\n    FileNetworkOpenInformation\n\nRead 0080\nReadFile : C:\\Users\\admin\\Pictures\\Camera Roll\\desktop.ini\nCleanup 0082\nCleanup: C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\n    read 190, offset 0\n\nCreateFile status = 0 - lastError = 0\nCreate 0083\nCreateFile : C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\nClose 0082\nClose: C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\nGetFileInfo 0080\nGetFileInfo : C:\\Users\\admin\\Pictures\\Camera Roll\\desktop.ini\nGetFileInfo 0081\nGetFileInfo : C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\n        GetFileInformationByHandle success, file size = 190\n    result =  0\n    FileBasicInformation\n    GetFileInformationByHandle success, file size = 879394\n\nCleanup 0080\nCleanup: C:\\Users\\admin\\Pictures\\Camera Roll\\desktop.ini\n    result =  0\n    FileNetworkOpenInformation\n\nClose 0080\nClose: C:\\Users\\admin\\Pictures\\Camera Roll\\desktop.ini\nAccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x7\n        FILE_SHARE_READ\n        FILE_SHARE_WRITE\n        FILE_SHARE_DELETE\n        AccessMode = 0x80\n        FILE_READ_ATTRIBUTES\nCleanup 0081\nCleanup: C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\n    FlagsAndAttributes = 0x200000\n    FILE_FLAG_OPEN_REPARSE_POINT\n    OPEN_EXISTING\n\nCreate 0084\nCreateFile : C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\nClose 0081\nClose: C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\nCreate 0084\nCreateFile : C:\\Users\\admin\\Pictures\\Saved Pictures\\desktop.ini\nCreateFile status = 0 - lastError = 0\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x7\n        FILE_SHARE_READ\n        FILE_SHARE_WRITE\n        FILE_SHARE_DELETE\n        AccessMode = 0x120089\n        FILE_READ_DATA\n        FILE_READ_ATTRIBUTES\n        FILE_READ_EA\n        READ_CONTROL\n        SYNCHRONIZE\n        STANDARD_RIGHTS_READ\n        STANDARD_RIGHTS_WRITE\n        STANDARD_RIGHTS_EXECUTE\nGetFileInfo 0083\nGetFileInfo : C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\n        FlagsAndAttributes = 0x8000000\n        FILE_FLAG_SEQUENTIAL_SCAN\n        OPEN_EXISTING\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x7\n        FILE_SHARE_READ\n        FILE_SHARE_WRITE\n        FILE_SHARE_DELETE\n        AccessMode = 0x80\n        FILE_READ_ATTRIBUTES\n        GetFileInformationByHandle success, file size = 879394\n    result =  0\n    FileNetworkOpenInformation\n    FlagsAndAttributes = 0x200000\n    FILE_FLAG_OPEN_REPARSE_POINT\n    OPEN_EXISTING\n\nCreateFile status = 0 - lastError = 0\nGetFileInfo 0085\nGetFileInfo : C:\\Users\\admin\\Pictures\\Saved Pictures\\desktop.ini\nCreateFile status = 0 - lastError = 0\nGetFileInfo 0084\nGetFileInfo : C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\n        GetFileInformationByHandle success, file size = 190\n    result =  0\n    FileStandardInformation\n    GetFileInformationByHandle success, file size = 879394\n\n    result =  0\n    FileNetworkOpenInformation\n\nRead 0085\nReadFile : C:\\Users\\admin\\Pictures\\Saved Pictures\\desktop.ini\nCleanup 0084\nCleanup: C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\n    read 190, offset 0\n\nCleanup 0083\nCleanup: C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\nCreate 0086\nCreateFile : C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg:ms-properties\nClose 0084\nClose: C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\nGetFileInfo 0085\nGetFileInfo : C:\\Users\\admin\\Pictures\\Saved Pictures\\desktop.ini\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x5\n        FILE_SHARE_READ\n        FILE_SHARE_DELETE\n        AccessMode = 0x120089\n        FILE_READ_DATA\n        FILE_READ_ATTRIBUTES\n        FILE_READ_EA\n        READ_CONTROL\n        SYNCHRONIZE\n        STANDARD_RIGHTS_READ\n        STANDARD_RIGHTS_WRITE\n        STANDARD_RIGHTS_EXECUTE\nClose 0083\nClose: C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\n    GetFileInformationByHandle success, file size = 190\n\n    result =  0\n    FileBasicInformation\n\nCleanup 0077\nCleanup: C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\nCleanup 0085\nCleanup: C:\\Users\\admin\\Pictures\\Saved Pictures\\desktop.ini\nCleanup 0076\nCleanup: C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\nClose 0085\nClose: C:\\Users\\admin\\Pictures\\Saved Pictures\\desktop.ini\n    FlagsAndAttributes = 0x200000\n    FILE_FLAG_OPEN_REPARSE_POINT\n    OPEN_EXISTING\n\nCreate 0087\nCreateFile : C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\nindex from 6\nFileMatch? : . (null,6,0)\nFileMatch? : .. (null,6,1)\nFileMatch? : Camera Roll (null,6,2)\nFileMatch? : Chrysanthemum.jpg (null,6,3)\nFileMatch? : desktop.ini (null,6,4)\nFileMatch? : Saved Pictures (null,6,5)\n  STATUS_NO_MORE_FILES\nClose 0076\nClose: C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\n    error code = 2\n\nCreateFile status = 3221225524 - lastError = 2\nCleanup 0079\nCleanup: C:\\Users\\admin\\Pictures\\\nCreate 0088\nAccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x7\n        FILE_SHARE_READ\n        FILE_SHARE_WRITE\n        FILE_SHARE_DELETE\n        AccessMode = 0x80\n        FILE_READ_ATTRIBUTES\nClose 0079\nClose: C:\\Users\\admin\\Pictures\\\nCreate 0089\nCreateFile : C:\\Users\\admin\\Pictures\\\nCreateFile : C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg:ms-properties\n        FlagsAndAttributes = 0x200000\n        FILE_FLAG_OPEN_REPARSE_POINT\n        OPEN_EXISTING\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x0\n        AccessMode = 0x100000\n        SYNCHRONIZE\nCreateFile status = 0 - lastError = 0\n        FlagsAndAttributes = 0x2000000\n        FILE_FLAG_BACKUP_SEMANTICS\n        OPEN_EXISTING\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x5\n        FILE_SHARE_READ\n        FILE_SHARE_DELETE\n        AccessMode = 0x120089\n        FILE_READ_DATA\n        FILE_READ_ATTRIBUTES\n        FILE_READ_EA\n        READ_CONTROL\n        SYNCHRONIZE\n        STANDARD_RIGHTS_READ\n        STANDARD_RIGHTS_WRITE\n        STANDARD_RIGHTS_EXECUTE\nGetFileInfo 0087\nGetFileInfo : C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\n        FlagsAndAttributes = 0x200000\n        FILE_FLAG_OPEN_REPARSE_POINT\n        OPEN_EXISTING\nCreateFile status = 0 - lastError = 0\n        error code = 2\nCreateFile status = 3221225524 - lastError = 2\n        GetFileInformationByHandle success, file size = 879394\n    result =  0\n    FileBasicInformation\n\nCreate 0090\nCreateFile : C:\\Users\\admin\\Pictures\\\nCleanup 0087\nCleanup: C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\nAccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x0\n        AccessMode = 0x100000\n        SYNCHRONIZE\nQueryVolumeInfo 0089\nCreate 0091\nCreateFile : C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\n        FlagsAndAttributes = 0x2000000\n        FILE_FLAG_BACKUP_SEMANTICS\n        OPEN_EXISTING\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x7\n        FILE_SHARE_READ\n        FILE_SHARE_WRITE\n        FILE_SHARE_DELETE\n        AccessMode = 0x80\n        FILE_READ_ATTRIBUTES\nQueryVolumeInfo 0089\nClose 0087\nClose: C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\n    FlagsAndAttributes = 0x200000\n    FILE_FLAG_OPEN_REPARSE_POINT\n    OPEN_EXISTING\n\nCleanup 0089\nCleanup: C:\\Users\\admin\\Pictures\\\nCreateFile status = 0 - lastError = 0\nClose 0089\nClose: C:\\Users\\admin\\Pictures\\\nCreateFile status = 0 - lastError = 0\nCreate 0092\nCreateFile : C:\\Users\\admin\\Pictures\\\nQueryVolumeInfo 0090\nGetFileInfo 0091\nGetFileInfo : C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\nQueryVolumeInfo 0090\nAccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x0\n        AccessMode = 0x100000\n        SYNCHRONIZE\nCleanup 0090\nCleanup: C:\\Users\\admin\\Pictures\\\n    FlagsAndAttributes = 0x2000000\n    FILE_FLAG_BACKUP_SEMANTICS\n    OPEN_EXISTING\n\nCreate 0093\nCreateFile : C:\\Users\\admin\\Pictures\\\nClose 0090\nClose: C:\\Users\\admin\\Pictures\\\n    GetFileInformationByHandle success, file size = 879394\n\n    result =  0\n    FileBasicInformation\n\nCreateFile status = 0 - lastError = 0\nCleanup 0091\nCleanup: C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\nQueryVolumeInfo 0092\nAccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x0\n        AccessMode = 0x100000\n        SYNCHRONIZE\nClose 0091\nClose: C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\nCreate 0094\nCreateFile : C:\\Users\\admin\\Pictures\\\nQueryVolumeInfo 0092\n    FlagsAndAttributes = 0x2000000\n    FILE_FLAG_BACKUP_SEMANTICS\n    OPEN_EXISTING\n\nAccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x7\n        FILE_SHARE_READ\n        FILE_SHARE_WRITE\n        FILE_SHARE_DELETE\nCleanup 0092\nCleanup: C:\\Users\\admin\\Pictures\\\n    AccessMode = 0x100081\n    FILE_READ_DATA\n    FILE_READ_ATTRIBUTES\n    SYNCHRONIZE\n\nCreateFile status = 0 - lastError = 0\nCreate 0095\nCreateFile : C:\\Users\\admin\\Pictures\\\nClose 0092\nClose: C:\\Users\\admin\\Pictures\\\n    FlagsAndAttributes = 0x2000000\n    FILE_FLAG_BACKUP_SEMANTICS\n    OPEN_EXISTING\n\nAccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x0\n        AccessMode = 0x100000\n        SYNCHRONIZE\nCreateFile status = 0 - lastError = 0\n        FlagsAndAttributes = 0x2000000\n        FILE_FLAG_BACKUP_SEMANTICS\n        OPEN_EXISTING\nQueryVolumeInfo 0093\nGetFileInfo 0094\nGetFileInfo : C:\\Users\\admin\\Pictures\\\nQueryVolumeInfo 0093\nCreateFile status = 0 - lastError = 0\nCleanup 0093\nCleanup: C:\\Users\\admin\\Pictures\\\nQueryVolumeInfo 0095\n    GetFileInformationByHandle success, file size = 4096\n\n    result =  0\n\nunknown type:55\nQueryVolumeInfo 0095\nClose 0093\nClose: C:\\Users\\admin\\Pictures\\\nCleanup 0078\nCleanup: C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\nCleanup 0095\nCleanup: C:\\Users\\admin\\Pictures\\\nFindFiles 0094\nFindFiles :C:\\Users\\admin\\Pictures\\\nCleanup 0074\nCleanup: C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\nClose 0095\nClose 0078\nClose: C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\nClose 0077\nClose: C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\nClose: C:\\Users\\admin\\Pictures\\\n    FindFiles return 6 entries in C:\\Users\\admin\\Pictures\\*\n\nindex from 0\nFileMatch? : . (Chrysanthemum.jpg,0,0)\nFileMatch? : .. (Chrysanthemum.jpg,0,0)\nFileMatch? : Camera Roll (Chrysanthemum.jpg,0,0)\nFileMatch? : Chrysanthemum.jpg (Chrysanthemum.jpg,0,0)\n  =>return single entry\nindex to 1\nCreate 0096\nCreateFile : C:\\Users\\admin\\Pictures\\\nClose 0074\nClose: C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\nCreate 0096\nCreateFile : C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\nCleanup 0094\nCleanup: C:\\Users\\admin\\Pictures\\\nAccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x1\n        FILE_SHARE_READ\n        AccessMode = 0x120089\n        FILE_READ_DATA\n        FILE_READ_ATTRIBUTES\n        FILE_READ_EA\n        READ_CONTROL\n        SYNCHRONIZE\n        STANDARD_RIGHTS_READ\n        STANDARD_RIGHTS_WRITE\n        STANDARD_RIGHTS_EXECUTE\nCreate 0098\nCreateFile : C:\\Users\\admin\\Pictures\\\nClose 0094\nClose: C:\\Users\\admin\\Pictures\\\nAccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x0\n        AccessMode = 0x100000\n        SYNCHRONIZE\n        FlagsAndAttributes = 0x80\n        FILE_ATTRIBUTE_NORMAL\n        OPEN_EXISTING\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x0\n        AccessMode = 0x100000\n        SYNCHRONIZE\nCreateFile status = 0 - lastError = 0\n        FlagsAndAttributes = 0x2000000\n        FILE_FLAG_BACKUP_SEMANTICS\n        OPEN_EXISTING\n        FlagsAndAttributes = 0x2000000\n        FILE_FLAG_BACKUP_SEMANTICS\n        OPEN_EXISTING\nCreate 0099\nCreateFile : C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\nCreateFile status = 0 - lastError = 0\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x7\n        FILE_SHARE_READ\n        FILE_SHARE_WRITE\n        FILE_SHARE_DELETE\n        AccessMode = 0x120089\n        FILE_READ_DATA\n        FILE_READ_ATTRIBUTES\n        FILE_READ_EA\n        READ_CONTROL\n        SYNCHRONIZE\n        STANDARD_RIGHTS_READ\n        STANDARD_RIGHTS_WRITE\n        STANDARD_RIGHTS_EXECUTE\nQueryVolumeInfo 0096\nCreateFile status = 0 - lastError = 0\nQueryVolumeInfo 0096\n    FlagsAndAttributes = 0x0\n    OPEN_EXISTING\n\nCleanup 0096\nCleanup: C:\\Users\\admin\\Pictures\\\nCreateFile status = 0 - lastError = 0\nClose 0096\nClose: C:\\Users\\admin\\Pictures\\\nQueryVolumeInfo 0098\nCreate 0100\nCreateFile : C:\\Users\\admin\\Pictures\\\nCleanup 0098\nCleanup: C:\\Users\\admin\\Pictures\\\nAccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x0\n        AccessMode = 0x100000\n        SYNCHRONIZE\nGetFileInfo 0099\nGetFileInfo : C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\nCreate 0101\nCreateFile : C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\nClose 0098\nClose: C:\\Users\\admin\\Pictures\\\n    FlagsAndAttributes = 0x2000000\n    FILE_FLAG_BACKUP_SEMANTICS\n    OPEN_EXISTING\n\nAccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x7\n        FILE_SHARE_READ\n        FILE_SHARE_WRITE\n        FILE_SHARE_DELETE\n        AccessMode = 0x100080\n        FILE_READ_ATTRIBUTES\n        SYNCHRONIZE\nCreateFile status = 0 - lastError = 0\n        FlagsAndAttributes = 0x200000\n        FILE_FLAG_OPEN_REPARSE_POINT\n        OPEN_EXISTING\n        GetFileInformationByHandle success, file size = 879394\n    result =  0\n    FileStandardInformation\n\nCreateFile status = 0 - lastError = 0\nGetFileInfo 0099\nGetFileInfo : C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\nGetFileInfo 0101\nGetFileInfo : C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\n        GetFileInformationByHandle success, file size = 879394\n    result =  0\n    FileStandardInformation\n    GetFileInformationByHandle success, file size = 879394\n\n    result =  0\n    FileNetworkOpenInformation\n\nRead 0099\nReadFile : C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\nCleanup 0101\nCleanup: C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\n    read 32768, offset 0\n\nQueryVolumeInfo 0100\nClose 0101\nClose: C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\nCreate 0102\nCreateFile : C:\\Users\\admin\\Pictures\\\nCleanup 0099\nCleanup: C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\nQueryVolumeInfo 0100\nAccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x7\n        FILE_SHARE_READ\n        FILE_SHARE_WRITE\n        FILE_SHARE_DELETE\n        AccessMode = 0x100081\n        FILE_READ_DATA\n        FILE_READ_ATTRIBUTES\n        SYNCHRONIZE\nRead 0099\nReadFile : C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\n        seek error, offset = 32768\nCreate got unknown error code 6\n        FlagsAndAttributes = 0x2000000\n        FILE_FLAG_BACKUP_SEMANTICS\n        OPEN_EXISTING\nCleanup 0100\nCleanup: C:\\Users\\admin\\Pictures\\\nCreateFile status = 0 - lastError = 0\nClose 0100\nClose: C:\\Users\\admin\\Pictures\\\nGetFileInfo 0102\nGetFileInfo : C:\\Users\\admin\\Pictures\\\n        GetFileInformationByHandle success, file size = 4096\n    result =  0\n\nCleanup 0097\nCleanup: C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\nunknown type:55\nClose 0099\nCloseFile: C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\n        error : not cleanuped file\nClose 0097\nClose: C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\nFindFiles 0102\nFindFiles :C:\\Users\\admin\\Pictures\\\n        FindFiles return 6 entries in C:\\Users\\admin\\Pictures*\nindex from 0\nFileMatch? : . (Chrysanthemum.jpg,0,0)\nFileMatch? : .. (Chrysanthemum.jpg,0,0)\nFileMatch? : Camera Roll (Chrysanthemum.jpg,0,0)\nFileMatch? : Chrysanthemum.jpg (Chrysanthemum.jpg,0,0)\n  =>return single entry\nindex to 1\nCleanup 0102\nCleanup: C:\\Users\\admin\\Pictures\\\nClose 0102\nCreate 0103\nCreateFile : C:\\Users\\admin\\Pictures\\\nClose: C:\\Users\\admin\\Pictures\\\nAccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x0\n        AccessMode = 0x100000\n        SYNCHRONIZE\n        FlagsAndAttributes = 0x2000000\n        FILE_FLAG_BACKUP_SEMANTICS\n        OPEN_EXISTING\nCreateFile status = 0 - lastError = 0\nQueryVolumeInfo 0103\nCleanup 0103\nCleanup: C:\\Users\\admin\\Pictures\\\nCreate 0104\nCreateFile : C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\nClose 0103\nClose: C:\\Users\\admin\\Pictures\\\nCreate 0104\nCreateFile : C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\nCreate 0104\nCreateFile : C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x1\n        FILE_SHARE_READ\n        AccessMode = 0x120089\n        FILE_READ_DATA\n        FILE_READ_ATTRIBUTES\n        FILE_READ_EA\n        READ_CONTROL\n        SYNCHRONIZE\n        STANDARD_RIGHTS_READ\n        STANDARD_RIGHTS_WRITE\n        STANDARD_RIGHTS_EXECUTE\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x7\n        FILE_SHARE_READ\n        FILE_SHARE_WRITE\n        FILE_SHARE_DELETE\n        AccessMode = 0x100080\n        FILE_READ_ATTRIBUTES\n        SYNCHRONIZE\n        FlagsAndAttributes = 0x80\n        FILE_ATTRIBUTE_NORMAL\n        OPEN_EXISTING\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x1\n        FILE_SHARE_READ\n        AccessMode = 0x120089\n        FILE_READ_DATA\n        FILE_READ_ATTRIBUTES\n        FILE_READ_EA\n        READ_CONTROL\n        SYNCHRONIZE\n        STANDARD_RIGHTS_READ\n        STANDARD_RIGHTS_WRITE\n        STANDARD_RIGHTS_EXECUTE\nCreateFile status = 0 - lastError = 0\n        FlagsAndAttributes = 0x80\n        FILE_ATTRIBUTE_NORMAL\n        OPEN_EXISTING\n        FlagsAndAttributes = 0x200000\n        FILE_FLAG_OPEN_REPARSE_POINT\n        OPEN_EXISTING\nCreate 0107\nCreateFile : C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\nCreateFile status = 0 - lastError = 0\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x7\n        FILE_SHARE_READ\n        FILE_SHARE_WRITE\n        FILE_SHARE_DELETE\n        AccessMode = 0x120089\n        FILE_READ_DATA\n        FILE_READ_ATTRIBUTES\n        FILE_READ_EA\n        READ_CONTROL\n        SYNCHRONIZE\n        STANDARD_RIGHTS_READ\n        STANDARD_RIGHTS_WRITE\n        STANDARD_RIGHTS_EXECUTE\nGetFileInfo 0106\nGetFileInfo : C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\n        FlagsAndAttributes = 0x0\n        OPEN_EXISTING\n        GetFileInformationByHandle success, file size = 879394\n    result =  0\n    FileNetworkOpenInformation\n\nCreateFile status = 0 - lastError = 0\nCleanup 0106\nCleanup: C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\nCreateFile status = 0 - lastError = 0\nClose 0106\nClose: C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\nCreate 0108\nCreateFile : C:\\Users\\admin\\Pictures\\\nGetFileInfo 0107\nGetFileInfo : C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x0\n        AccessMode = 0x100000\n        SYNCHRONIZE\n        GetFileInformationByHandle success, file size = 879394\n    result =  0\n    FileStandardInformation\n    FlagsAndAttributes = 0x2000000\n    FILE_FLAG_BACKUP_SEMANTICS\n    OPEN_EXISTING\n\nCreate 0108\nCreateFile : C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\nCreateFile status = 0 - lastError = 0\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x5\n        FILE_SHARE_READ\n        FILE_SHARE_DELETE\n        AccessMode = 0x120089\n        FILE_READ_DATA\n        FILE_READ_ATTRIBUTES\n        FILE_READ_EA\n        READ_CONTROL\n        SYNCHRONIZE\n        STANDARD_RIGHTS_READ\n        STANDARD_RIGHTS_WRITE\n        STANDARD_RIGHTS_EXECUTE\nGetFileInfo 0107\nGetFileInfo : C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\n        FlagsAndAttributes = 0x0\n        OPEN_EXISTING\n        GetFileInformationByHandle success, file size = 879394\n    result =  0\n    FileStandardInformation\n\nCreateFile status = 0 - lastError = 0\nCleanup 0107\nCleanup: C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\nQueryVolumeInfo 0108\nGetFileInfo 0109\nGetFileInfo : C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\nCleanup 0108\nCleanup: C:\\Users\\admin\\Pictures\\\n    GetFileInformationByHandle success, file size = 879394\n\n    result =  0\n    FileStandardInformation\n\nRead 0107\nReadFile : C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\n        seek error, offset = 0\nCreate got unknown error code 6\nClose 0108\nClose: C:\\Users\\admin\\Pictures\\\nGetFileInfo 0109\nGetFileInfo : C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\nCreate 0110\nCreateFile : C:\\Users\\admin\\Pictures\\\n        GetFileInformationByHandle success, file size = 879394\n    result =  0\n    FileStandardInformation\n\nAccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x7\n        FILE_SHARE_READ\n        FILE_SHARE_WRITE\n        FILE_SHARE_DELETE\n        AccessMode = 0x100080\n        FILE_READ_ATTRIBUTES\n        SYNCHRONIZE\nRead 0107\nCleanup 0105\nCleanup: C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\nReadFile : C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\n        seek error, offset = 0\nCreate got unknown error code 6\n        FlagsAndAttributes = 0x2200000\n        FILE_FLAG_BACKUP_SEMANTICS\n        FILE_FLAG_OPEN_REPARSE_POINT\n        OPEN_EXISTING\nClose 0105\nClose: C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\nCleanup 0109\nCleanup: C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\nClose 0107\nCloseFile: C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\n        error : not cleanuped file\nCleanup 0104\nCleanup: C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\nClose 0109\nClose: C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\nClose 0104\nClose: C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\nCreateFile status = 0 - lastError = 0\nCreate 0111\nCreateFile : C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg:ms-properties\nGetFileInfo 0110\nGetFileInfo : C:\\Users\\admin\\Pictures\\\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x5\n        FILE_SHARE_READ\n        FILE_SHARE_DELETE\n        AccessMode = 0x120089\n        FILE_READ_DATA\n        FILE_READ_ATTRIBUTES\n        FILE_READ_EA\n        READ_CONTROL\n        SYNCHRONIZE\n        STANDARD_RIGHTS_READ\n        STANDARD_RIGHTS_WRITE\n        STANDARD_RIGHTS_EXECUTE\n        GetFileInformationByHandle success, file size = 4096\n    result =  0\n    FileNetworkOpenInformation\n    FlagsAndAttributes = 0x200000\n    FILE_FLAG_OPEN_REPARSE_POINT\n    OPEN_EXISTING\n\nCleanup 0110\nCleanup: C:\\Users\\admin\\Pictures\\\n    error code = 2\n\nCreateFile status = 3221225524 - lastError = 2\nClose 0110\nClose: C:\\Users\\admin\\Pictures\\\nCreate 0112\nCreateFile : C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg:ms-properties\nCreate 0112\nCreateFile : C:\\Users\\admin\\Pictures\\\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x5\n        FILE_SHARE_READ\n        FILE_SHARE_DELETE\n        AccessMode = 0x120089\n        FILE_READ_DATA\n        FILE_READ_ATTRIBUTES\n        FILE_READ_EA\n        READ_CONTROL\n        SYNCHRONIZE\n        STANDARD_RIGHTS_READ\n        STANDARD_RIGHTS_WRITE\n        STANDARD_RIGHTS_EXECUTE\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x0\n        AccessMode = 0x100000\n        SYNCHRONIZE\n        FlagsAndAttributes = 0x200000\n        FILE_FLAG_OPEN_REPARSE_POINT\n        OPEN_EXISTING\n        error code = 2\nCreateFile status = 3221225524 - lastError = 2\n        FlagsAndAttributes = 0x2000000\n        FILE_FLAG_BACKUP_SEMANTICS\n        OPEN_EXISTING\nCreateFile status = 0 - lastError = 0\nQueryVolumeInfo 0113\nCleanup 0113\nCleanup: C:\\Users\\admin\\Pictures\\\nClose 0113\nCreate 0114\nCreateFile : C:\\Users\\admin\\Pictures\\\nClose: C:\\Users\\admin\\Pictures\\\nAccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x7\n        FILE_SHARE_READ\n        FILE_SHARE_WRITE\n        FILE_SHARE_DELETE\n        AccessMode = 0x100080\n        FILE_READ_ATTRIBUTES\n        SYNCHRONIZE\nCreate 0115\nCreateFile : C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\n        FlagsAndAttributes = 0x2200000\n        FILE_FLAG_BACKUP_SEMANTICS\n        FILE_FLAG_OPEN_REPARSE_POINT\n        OPEN_EXISTING\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x1\n        FILE_SHARE_READ\n        AccessMode = 0x120089\n        FILE_READ_DATA\n        FILE_READ_ATTRIBUTES\n        FILE_READ_EA\n        READ_CONTROL\n        SYNCHRONIZE\n        STANDARD_RIGHTS_READ\n        STANDARD_RIGHTS_WRITE\n        STANDARD_RIGHTS_EXECUTE\nCreateFile status = 0 - lastError = 0\n        FlagsAndAttributes = 0x80\n        FILE_ATTRIBUTE_NORMAL\n        OPEN_EXISTING\nGetFileInfo 0114\nGetFileInfo : C:\\Users\\admin\\Pictures\\\nCreateFile status = 0 - lastError = 0\n        GetFileInformationByHandle success, file size = 4096\n    result =  0\n    FileNetworkOpenInformation\n\nCreate 0116\nCreateFile : C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\nCleanup 0114\nCleanup: C:\\Users\\admin\\Pictures\\\nAccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x7\n        FILE_SHARE_READ\n        FILE_SHARE_WRITE\n        FILE_SHARE_DELETE\n        AccessMode = 0x120089\n        FILE_READ_DATA\n        FILE_READ_ATTRIBUTES\n        FILE_READ_EA\n        READ_CONTROL\n        SYNCHRONIZE\n        STANDARD_RIGHTS_READ\n        STANDARD_RIGHTS_WRITE\n        STANDARD_RIGHTS_EXECUTE\nCreate 0117\nCreateFile : C:\\Users\\admin\\Pictures\\\n        FlagsAndAttributes = 0x0\n        OPEN_EXISTING\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x0\nCreateFile status = 0 - lastError = 0\n        AccessMode = 0x100000\n        SYNCHRONIZE\nGetFileInfo 0116\nGetFileInfo : C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\n        FlagsAndAttributes = 0x2000000\n        FILE_FLAG_BACKUP_SEMANTICS\n        OPEN_EXISTING\nClose 0114\nClose: C:\\Users\\admin\\Pictures\\\nCreateFile status = 0 - lastError = 0\n        GetFileInformationByHandle success, file size = 879394\n    result =  0\n    FileStandardInformation\n\nQueryVolumeInfo 0117\nGetFileInfo 0116\nGetFileInfo : C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\nCleanup 0117\nCleanup: C:\\Users\\admin\\Pictures\\\n    GetFileInformationByHandle success, file size = 879394\n\nClose 0117\nCreate 0118\n    result =  0\n    FileStandardInformation\n\nCreateFile : C:\\Users\\admin\\Pictures\\\nClose: C:\\Users\\admin\\Pictures\\\nRead 0116\nReadFile : C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x7\n        FILE_SHARE_READ\n        FILE_SHARE_WRITE\n        FILE_SHARE_DELETE\n        AccessMode = 0x100080\n        FILE_READ_ATTRIBUTES\n        SYNCHRONIZE\n        read 32768, offset 0\n    FlagsAndAttributes = 0x2200000\n    FILE_FLAG_BACKUP_SEMANTICS\n    FILE_FLAG_OPEN_REPARSE_POINT\n    OPEN_EXISTING\n\nRead 0116\nReadFile : C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\nCreateFile status = 0 - lastError = 0\n        read 32768, offset 32768\nGetFileInfo 0118\nGetFileInfo : C:\\Users\\admin\\Pictures\\\nRead 0116\nReadFile : C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\n        GetFileInformationByHandle success, file size = 4096\n    result =  0\n    FileNetworkOpenInformation\n    read 65536, offset 65536\n\nCleanup 0118\nCleanup: C:\\Users\\admin\\Pictures\\\nRead 0116\nClose 0118\nClose: C:\\Users\\admin\\Pictures\\\nReadFile : C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\nCreate 0119\nCreateFile : C:\\Users\\admin\\Pictures\\\n        read 131072, offset 131072\nCreate 0119\nCreateFile : C:\\Users\\admin\\Pictures\\\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x0\n        AccessMode = 0x100000\n        SYNCHRONIZE\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x0\n        AccessMode = 0x100000\n        SYNCHRONIZE\n        FlagsAndAttributes = 0x2000000\n        FILE_FLAG_BACKUP_SEMANTICS\n        OPEN_EXISTING\nRead 0116\nReadFile : C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\nCreateFile status = 0 - lastError = 0\n        read 262144, offset 262144\n    FlagsAndAttributes = 0x2000000\n    FILE_FLAG_BACKUP_SEMANTICS\n    OPEN_EXISTING\n\nQueryVolumeInfo 0119\nRead 0116\nReadFile : C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\nCleanup 0119\nCleanup: C:\\Users\\admin\\Pictures\\\n    read 355106, offset 524288\n\nCreateFile status = 0 - lastError = 0\nCreate 0121\nCreateFile : C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\nQueryVolumeInfo 0120\nClose 0119\nClose: C:\\Users\\admin\\Pictures\\\nAccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x7\n        FILE_SHARE_READ\n        FILE_SHARE_WRITE\n        FILE_SHARE_DELETE\n        AccessMode = 0x100080\n        FILE_READ_ATTRIBUTES\n        SYNCHRONIZE\nCleanup 0115\nCleanup: C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\n    FlagsAndAttributes = 0x200000\n    FILE_FLAG_OPEN_REPARSE_POINT\n    OPEN_EXISTING\n\nCleanup 0116\nCleanup: C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\nClose 0115\nClose: C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\nQueryVolumeInfo 0120\nClose 0116\nClose: C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\nCleanup 0120\nCleanup: C:\\Users\\admin\\Pictures\\\nCreateFile status = 0 - lastError = 0\nCreate 0122\nCreateFile : C:\\Users\\admin\\Pictures\\\nGetFileInfo 0121\nClose 0120\nClose: C:\\Users\\admin\\Pictures\\\nGetFileInfo : C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\n        GetFileInformationByHandle success, file size = 879394\n    result =  0\n    FileNetworkOpenInformation\n\nAccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x0\n        AccessMode = 0x100000\n        SYNCHRONIZE\nCleanup 0121\nCleanup: C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\n    FlagsAndAttributes = 0x2000000\n    FILE_FLAG_BACKUP_SEMANTICS\n    OPEN_EXISTING\n\nClose 0121\nClose: C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\nCreateFile status = 0 - lastError = 0\nCreate 0123\nCreateFile : C:\\Users\\admin\\Pictures\\\nQueryVolumeInfo 0122\nAccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x0\n        AccessMode = 0x100000\n        SYNCHRONIZE\nCleanup 0122\nCleanup: C:\\Users\\admin\\Pictures\\\nClose 0122\nClose: C:\\Users\\admin\\Pictures\\\n    FlagsAndAttributes = 0x2000000\n    FILE_FLAG_BACKUP_SEMANTICS\n    OPEN_EXISTING\n\nCreateFile status = 0 - lastError = 0\nQueryVolumeInfo 0123\nCleanup 0123\nCleanup: C:\\Users\\admin\\Pictures\\\nClose 0123\nClose: C:\\Users\\admin\\Pictures\\\nCreate 0124\nCreateFile : C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x7\n        FILE_SHARE_READ\n        FILE_SHARE_WRITE\n        FILE_SHARE_DELETE\n        AccessMode = 0x100080\n        FILE_READ_ATTRIBUTES\n        SYNCHRONIZE\n        FlagsAndAttributes = 0x200000\n        FILE_FLAG_OPEN_REPARSE_POINT\n        OPEN_EXISTING\nCreateFile status = 0 - lastError = 0\nGetFileInfo 0124\nGetFileInfo : C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\n        GetFileInformationByHandle success, file size = 879394\n    result =  0\n    FileNetworkOpenInformation\n\nCleanup 0124\nCleanup: C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\nClose 0124\nClose: C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\nCreate 0125\nCreateFile : C:\\Users\\admin\\Pictures\\\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x7\n        FILE_SHARE_READ\n        FILE_SHARE_WRITE\n        FILE_SHARE_DELETE\n        AccessMode = 0x100081\n        FILE_READ_DATA\n        FILE_READ_ATTRIBUTES\n        SYNCHRONIZE\n        FlagsAndAttributes = 0x2000000\n        FILE_FLAG_BACKUP_SEMANTICS\n        OPEN_EXISTING\nCreateFile status = 0 - lastError = 0\nGetFileInfo 0125\nGetFileInfo : C:\\Users\\admin\\Pictures\\\n        GetFileInformationByHandle success, file size = 4096\n    result =  0\n\nunknown type:55\nFindFiles 0125\nFindFiles :C:\\Users\\admin\\Pictures\\\n        FindFiles return 6 entries in C:\\Users\\admin\\Pictures*\nindex from 0\nFileMatch? : . (Chrysanthemum.jpg,0,0)\nFileMatch? : .. (Chrysanthemum.jpg,0,0)\nFileMatch? : Camera Roll (Chrysanthemum.jpg,0,0)\nFileMatch? : Chrysanthemum.jpg (Chrysanthemum.jpg,0,0)\n  =>return single entry\nindex to 1\nCleanup 0125\nCleanup: C:\\Users\\admin\\Pictures\\\nClose 0125\nClose: C:\\Users\\admin\\Pictures\\\nCreate 0126\nCreateFile : C:\\Users\\admin\\Pictures\\\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x0\n        AccessMode = 0x100000\n        SYNCHRONIZE\n        FlagsAndAttributes = 0x2000000\n        FILE_FLAG_BACKUP_SEMANTICS\n        OPEN_EXISTING\nCreateFile status = 0 - lastError = 0\nQueryVolumeInfo 0126\nCleanup 0126\nCleanup: C:\\Users\\admin\\Pictures\\\nClose 0126\nClose: C:\\Users\\admin\\Pictures\\\nCreate 0127\nCreateFile : C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x7\n        FILE_SHARE_READ\n        FILE_SHARE_WRITE\n        FILE_SHARE_DELETE\n        AccessMode = 0x100080\n        FILE_READ_ATTRIBUTES\n        SYNCHRONIZE\n        FlagsAndAttributes = 0x200000\n        FILE_FLAG_OPEN_REPARSE_POINT\n        OPEN_EXISTING\nCreateFile status = 0 - lastError = 0\nGetFileInfo 0127\nGetFileInfo : C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\n        GetFileInformationByHandle success, file size = 879394\n    result =  0\n    FileNetworkOpenInformation\n\nCleanup 0127\nCleanup: C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\nClose 0127\nClose: C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\nCreate 0128\nCreateFile : C:\\Users\\admin\\Pictures\\\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x0\n        AccessMode = 0x100000\n        SYNCHRONIZE\n        FlagsAndAttributes = 0x2000000\n        FILE_FLAG_BACKUP_SEMANTICS\n        OPEN_EXISTING\nCreateFile status = 0 - lastError = 0\nQueryVolumeInfo 0128\nQueryVolumeInfo 0128\nCleanup 0128\nCleanup: C:\\Users\\admin\\Pictures\\\nClose 0128\nClose: C:\\Users\\admin\\Pictures\\\nCreate 0129\nCreateFile : C:\\Users\\admin\\Pictures\\\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x0\n        AccessMode = 0x100000\n        SYNCHRONIZE\n        FlagsAndAttributes = 0x2000000\n        FILE_FLAG_BACKUP_SEMANTICS\n        OPEN_EXISTING\nCreateFile status = 0 - lastError = 0\nQueryVolumeInfo 0129\nQueryVolumeInfo 0129\nCleanup 0129\nCleanup: C:\\Users\\admin\\Pictures\\\nClose 0129\nClose: C:\\Users\\admin\\Pictures\\\nCreate 0130\nCreateFile : C:\\Users\\admin\\Pictures\\\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x0\n        AccessMode = 0x100000\n        SYNCHRONIZE\n        FlagsAndAttributes = 0x2000000\n        FILE_FLAG_BACKUP_SEMANTICS\n        OPEN_EXISTING\nCreateFile status = 0 - lastError = 0\nQueryVolumeInfo 0130\nCleanup 0130\nCleanup: C:\\Users\\admin\\Pictures\\\nClose 0130\nClose: C:\\Users\\admin\\Pictures\\\nCreate 0131\nCreateFile : C:\\Users\\admin\\Pictures\\\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x7\n        FILE_SHARE_READ\n        FILE_SHARE_WRITE\n        FILE_SHARE_DELETE\n        AccessMode = 0x100080\n        FILE_READ_ATTRIBUTES\n        SYNCHRONIZE\n        FlagsAndAttributes = 0x2200000\n        FILE_FLAG_BACKUP_SEMANTICS\n        FILE_FLAG_OPEN_REPARSE_POINT\n        OPEN_EXISTING\nCreate 0132\nCreateFile : C:\\Users\\admin\\Pictures\\\nCreateFile status = 0 - lastError = 0\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x0\n        AccessMode = 0x100000\n        SYNCHRONIZE\nGetFileInfo 0131\nGetFileInfo : C:\\Users\\admin\\Pictures\\\n        FlagsAndAttributes = 0x2000000\n        FILE_FLAG_BACKUP_SEMANTICS\n        OPEN_EXISTING\n        GetFileInformationByHandle success, file size = 4096\n    result =  0\n    FileNetworkOpenInformation\n\nCreateFile status = 0 - lastError = 0\nCleanup 0131\nCleanup: C:\\Users\\admin\\Pictures\\\nQueryVolumeInfo 0132\nClose 0131\nClose: C:\\Users\\admin\\Pictures\\\nQueryVolumeInfo 0132\nCleanup 0132\nCleanup: C:\\Users\\admin\\Pictures\\\nClose 0132\nClose: C:\\Users\\admin\\Pictures\\\nCreate 0133\nCreateFile : C:\\Users\\admin\\Pictures\\\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x0\n        AccessMode = 0x100000\n        SYNCHRONIZE\n        FlagsAndAttributes = 0x2000000\n        FILE_FLAG_BACKUP_SEMANTICS\n        OPEN_EXISTING\nCreateFile status = 0 - lastError = 0\nQueryVolumeInfo 0133\nQueryVolumeInfo 0133\nCleanup 0133\nCleanup: C:\\Users\\admin\\Pictures\\\nClose 0133\nClose: C:\\Users\\admin\\Pictures\\\nCreate 0134\nCreateFile : C:\\Users\\admin\\Pictures\\\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x0\n        AccessMode = 0x100000\n        SYNCHRONIZE\n        FlagsAndAttributes = 0x2000000\n        FILE_FLAG_BACKUP_SEMANTICS\n        OPEN_EXISTING\nCreateFile status = 0 - lastError = 0\nQueryVolumeInfo 0134\nCleanup 0134\nCleanup: C:\\Users\\admin\\Pictures\\\nClose 0134\nClose: C:\\Users\\admin\\Pictures\\\nCreate 0135\nCreateFile : C:\\Users\\admin\\Pictures\\\nCreate 0135\nCreateFile : C:\\Users\\admin\\Pictures\\\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x0\n        AccessMode = 0x100000\n        SYNCHRONIZE\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x0\n        AccessMode = 0x100000\n        SYNCHRONIZE\n        FlagsAndAttributes = 0x2000000\n        FILE_FLAG_BACKUP_SEMANTICS\n        OPEN_EXISTING\n        FlagsAndAttributes = 0x2000000\n        FILE_FLAG_BACKUP_SEMANTICS\n        OPEN_EXISTING\nCreateFile status = 0 - lastError = 0\nCreateFile status = 0 - lastError = 0\nQueryVolumeInfo 0135\nQueryVolumeInfo 0136\nQueryVolumeInfo 0135\nQueryVolumeInfo 0136\nCleanup 0135\nCleanup: C:\\Users\\admin\\Pictures\\\nCleanup 0136\nCleanup: C:\\Users\\admin\\Pictures\\\nCreate 0137\nCreateFile : C:\\Users\\admin\\Pictures\\\nClose 0136\nClose: C:\\Users\\admin\\Pictures\\\nCreate 0138\nCreateFile : C:\\Users\\admin\\Pictures\\\nClose 0135\nClose: C:\\Users\\admin\\Pictures\\\nAccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x0\n        AccessMode = 0x100000\n        SYNCHRONIZE\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x0\n        AccessMode = 0x100000\n        SYNCHRONIZE\n        FlagsAndAttributes = 0x2000000\n        FILE_FLAG_BACKUP_SEMANTICS\n        OPEN_EXISTING\n        FlagsAndAttributes = 0x2000000\n        FILE_FLAG_BACKUP_SEMANTICS\n        OPEN_EXISTING\nCreateFile status = 0 - lastError = 0\nQueryVolumeInfo 0138\nCreateFile status = 0 - lastError = 0\nQueryVolumeInfo 0138\nQueryVolumeInfo 0137\nCleanup 0138\nCleanup: C:\\Users\\admin\\Pictures\\\nQueryVolumeInfo 0137\nClose 0138\nClose: C:\\Users\\admin\\Pictures\\\nCleanup 0137\nCleanup: C:\\Users\\admin\\Pictures\\\nCreate 0139\nCreateFile : C:\\Users\\admin\\Pictures\\\nClose 0137\nClose: C:\\Users\\admin\\Pictures\\\nAccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x0\n        AccessMode = 0x100000\n        SYNCHRONIZE\nCreate 0140\nCreateFile : C:\\Users\\admin\\Pictures\\\n        FlagsAndAttributes = 0x2000000\n        FILE_FLAG_BACKUP_SEMANTICS\n        OPEN_EXISTING\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x7\n        FILE_SHARE_READ\n        FILE_SHARE_WRITE\n        FILE_SHARE_DELETE\n        AccessMode = 0x80\n        FILE_READ_ATTRIBUTES\nCreateFile status = 0 - lastError = 0\n        FlagsAndAttributes = 0x2200000\n        FILE_FLAG_BACKUP_SEMANTICS\n        FILE_FLAG_OPEN_REPARSE_POINT\n        OPEN_EXISTING\nQueryVolumeInfo 0139\nCreateFile status = 0 - lastError = 0\nQueryVolumeInfo 0139\nGetFileInfo 0140\nGetFileInfo : C:\\Users\\admin\\Pictures\\\nCleanup 0139\nCleanup: C:\\Users\\admin\\Pictures\\\nClose 0139\nClose: C:\\Users\\admin\\Pictures\\\n    GetFileInformationByHandle success, file size = 4096\n\n    result =  0\n    FileNetworkOpenInformation\n\nCleanup 0140\nCleanup: C:\\Users\\admin\\Pictures\\\nCreate 0141\nCreateFile : C:\\Users\\admin\\Pictures\\\nCreate 0141\nCreateFile : C:\\Users\\admin\\Pictures\\\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x0\n        AccessMode = 0x100000\n        SYNCHRONIZE\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x7\n        FILE_SHARE_READ\n        FILE_SHARE_WRITE\n        FILE_SHARE_DELETE\n        AccessMode = 0x80\n        FILE_READ_ATTRIBUTES\nClose 0140\nClose: C:\\Users\\admin\\Pictures\\\n    FlagsAndAttributes = 0x2200000\n    FILE_FLAG_BACKUP_SEMANTICS\n    FILE_FLAG_OPEN_REPARSE_POINT\n    OPEN_EXISTING\n    FlagsAndAttributes = 0x2000000\n    FILE_FLAG_BACKUP_SEMANTICS\n    OPEN_EXISTING\n\nCreateFile status = 0 - lastError = 0\nCreateFile status = 0 - lastError = 0\nGetFileInfo 0142\nGetFileInfo : C:\\Users\\admin\\Pictures\\\nQueryVolumeInfo 0141\n    GetFileInformationByHandle success, file size = 4096\n\n    result =  0\n    FileBasicInformation\n\nCleanup 0141\nCleanup: C:\\Users\\admin\\Pictures\\\nCleanup 0142\nCleanup: C:\\Users\\admin\\Pictures\\\nCreate 0143\nCreateFile : C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\nClose 0142\nClose: C:\\Users\\admin\\Pictures\\\nClose 0141\nClose: C:\\Users\\admin\\Pictures\\\nCreate 0143\nCreateFile : C:\\Users\\admin\\Pictures\\\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x7\n        FILE_SHARE_READ\n        FILE_SHARE_WRITE\n        FILE_SHARE_DELETE\n        AccessMode = 0x100080\n        FILE_READ_ATTRIBUTES\n        SYNCHRONIZE\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x7\n        FILE_SHARE_READ\n        FILE_SHARE_WRITE\n        FILE_SHARE_DELETE\n        AccessMode = 0x80\n        FILE_READ_ATTRIBUTES\n        FlagsAndAttributes = 0x200000\n        FILE_FLAG_OPEN_REPARSE_POINT\n        OPEN_EXISTING\n        FlagsAndAttributes = 0x2200000\n        FILE_FLAG_BACKUP_SEMANTICS\n        FILE_FLAG_OPEN_REPARSE_POINT\n        OPEN_EXISTING\nCreateFile status = 0 - lastError = 0\nCreateFile status = 0 - lastError = 0\nGetFileInfo 0143\nGetFileInfo : C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\nGetFileInfo 0144\nGetFileInfo : C:\\Users\\admin\\Pictures\\\n        GetFileInformationByHandle success, file size = 879394\n    result =  0\n    FileNetworkOpenInformation\n    GetFileInformationByHandle success, file size = 4096\n\n    result =  0\n    FileBasicInformation\n\nCleanup 0143\nCleanup: C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\nCleanup 0144\nCleanup: C:\\Users\\admin\\Pictures\\\nClose 0143\nClose: C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\nClose 0144\nClose: C:\\Users\\admin\\Pictures\\\nCreate 0145\nCreateFile : C:\\Users\\admin\\Pictures\\\nCreate 0145\nCreateFile : C:\\Users\\admin\\Pictures\\\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x0\n        AccessMode = 0x100000\n        SYNCHRONIZE\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x7\n        FILE_SHARE_READ\n        FILE_SHARE_WRITE\n        FILE_SHARE_DELETE\n        AccessMode = 0x80\n        FILE_READ_ATTRIBUTES\n        FlagsAndAttributes = 0x2000000\n        FILE_FLAG_BACKUP_SEMANTICS\n        OPEN_EXISTING\n        FlagsAndAttributes = 0x2200000\n        FILE_FLAG_BACKUP_SEMANTICS\n        FILE_FLAG_OPEN_REPARSE_POINT\n        OPEN_EXISTING\nCreateFile status = 0 - lastError = 0\nCreateFile status = 0 - lastError = 0\nQueryVolumeInfo 0145\nGetFileInfo 0146\nGetFileInfo : C:\\Users\\admin\\Pictures\\\nCleanup 0145\nCleanup: C:\\Users\\admin\\Pictures\\\n    GetFileInformationByHandle success, file size = 4096\n\n    result =  0\n    FileBasicInformation\n\nCreate 0147\nCreateFile : C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\nCleanup 0146\nCleanup: C:\\Users\\admin\\Pictures\\\nAccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x7\n        FILE_SHARE_READ\n        FILE_SHARE_WRITE\n        FILE_SHARE_DELETE\n        AccessMode = 0x100080\n        FILE_READ_ATTRIBUTES\n        SYNCHRONIZE\nClose 0146\nClose: C:\\Users\\admin\\Pictures\\\n    FlagsAndAttributes = 0x200000\n    FILE_FLAG_OPEN_REPARSE_POINT\n    OPEN_EXISTING\n\nClose 0145\nClose: C:\\Users\\admin\\Pictures\\\nCreateFile status = 0 - lastError = 0\nGetFileInfo 0147\nGetFileInfo : C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\n        GetFileInformationByHandle success, file size = 879394\n    result =  0\n    FileNetworkOpenInformation\n\nCleanup 0147\nCleanup: C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\nClose 0147\nClose: C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\nCreate 0148\nCreateFile : C:\\Users\\admin\\Pictures\\\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x0\n        AccessMode = 0x100000\n        SYNCHRONIZE\n        FlagsAndAttributes = 0x2000000\n        FILE_FLAG_BACKUP_SEMANTICS\n        OPEN_EXISTING\nCreateFile status = 0 - lastError = 0\nQueryVolumeInfo 0148\nCleanup 0148\nCleanup: C:\\Users\\admin\\Pictures\\\nClose 0148\nClose: C:\\Users\\admin\\Pictures\\\nCreate 0149\nCreateFile : C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x7\n        FILE_SHARE_READ\n        FILE_SHARE_WRITE\n        FILE_SHARE_DELETE\n        AccessMode = 0x100080\n        FILE_READ_ATTRIBUTES\n        SYNCHRONIZE\n        FlagsAndAttributes = 0x200000\n        FILE_FLAG_OPEN_REPARSE_POINT\n        OPEN_EXISTING\nCreateFile status = 0 - lastError = 0\nGetFileInfo 0149\nGetFileInfo : C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\n        GetFileInformationByHandle success, file size = 879394\n    result =  0\n    FileNetworkOpenInformation\n\nCleanup 0149\nCleanup: C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\nClose 0149\nClose: C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\nCreate 0150\nCreateFile : C:\\Users\\admin\\Pictures\\\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x0\n        AccessMode = 0x100000\n        SYNCHRONIZE\n        FlagsAndAttributes = 0x2000000\n        FILE_FLAG_BACKUP_SEMANTICS\n        OPEN_EXISTING\nCreateFile status = 0 - lastError = 0\nQueryVolumeInfo 0150\nQueryVolumeInfo 0150\nCleanup 0150\nCleanup: C:\\Users\\admin\\Pictures\\\nClose 0150\nClose: C:\\Users\\admin\\Pictures\\\nCreate 0151\nCreateFile : C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x1\n        FILE_SHARE_READ\n        AccessMode = 0x120089\n        FILE_READ_DATA\n        FILE_READ_ATTRIBUTES\n        FILE_READ_EA\n        READ_CONTROL\nCreate 0152\nCreateFile : C:\\Users\\admin\\Pictures\\\n        SYNCHRONIZE\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x7\n        FILE_SHARE_READ\n        FILE_SHARE_WRITE\n        FILE_SHARE_DELETE\n        STANDARD_RIGHTS_READ\n        STANDARD_RIGHTS_WRITE\n        STANDARD_RIGHTS_EXECUTE\n        AccessMode = 0x100081\n        FILE_READ_DATA\n        FILE_READ_ATTRIBUTES\nCreate 0153\nCreateFile : C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\n        SYNCHRONIZE\n        FlagsAndAttributes = 0x80\n        FILE_ATTRIBUTE_NORMAL\n        OPEN_EXISTING\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x1\n        FILE_SHARE_READ\n        AccessMode = 0x120089\n        FILE_READ_DATA\n        FILE_READ_ATTRIBUTES\n        FILE_READ_EA\n        READ_CONTROL\n        SYNCHRONIZE\n        STANDARD_RIGHTS_READ\n        STANDARD_RIGHTS_WRITE\n        STANDARD_RIGHTS_EXECUTE\nCreateFile status = 0 - lastError = 0\n        FlagsAndAttributes = 0x80\n        FILE_ATTRIBUTE_NORMAL\n        OPEN_EXISTING\n        FlagsAndAttributes = 0x2000000\n        FILE_FLAG_BACKUP_SEMANTICS\n        OPEN_EXISTING\nCreate 0154\nCreateFile : C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\nCreateFile status = 0 - lastError = 0\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x5\n        FILE_SHARE_READ\n        FILE_SHARE_DELETE\n        AccessMode = 0x120089\n        FILE_READ_DATA\n        FILE_READ_ATTRIBUTES\n        FILE_READ_EA\n        READ_CONTROL\n        SYNCHRONIZE\n        STANDARD_RIGHTS_READ\n        STANDARD_RIGHTS_WRITE\n        STANDARD_RIGHTS_EXECUTE\nCreateFile status = 0 - lastError = 0\n        FlagsAndAttributes = 0x0\n        OPEN_EXISTING\nCreate 0155\nCreateFile : C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\nCreateFile status = 0 - lastError = 0\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x5\n        FILE_SHARE_READ\n        FILE_SHARE_DELETE\n        AccessMode = 0x120089\n        FILE_READ_DATA\n        FILE_READ_ATTRIBUTES\n        FILE_READ_EA\n        READ_CONTROL\n        SYNCHRONIZE\n        STANDARD_RIGHTS_READ\n        STANDARD_RIGHTS_WRITE\n        STANDARD_RIGHTS_EXECUTE\nGetFileInfo 0152\nGetFileInfo : C:\\Users\\admin\\Pictures\\\n        GetFileInformationByHandle success, file size = 4096\n    result =  0\n\nunknown type:55\n        FlagsAndAttributes = 0x0\n        OPEN_EXISTING\nFindFiles 0152\nFindFiles :C:\\Users\\admin\\Pictures\\\nCreateFile status = 0 - lastError = 0\n        FindFiles return 6 entries in C:\\Users\\admin\\Pictures*\nindex from 0\nFileMatch? : . (null,0,0)\n  =>return\nFileMatch? : .. (null,0,1)\n  =>return\nFileMatch? : Camera Roll (null,0,2)\n  =>return\nFileMatch? : Chrysanthemum.jpg (null,0,3)\n  =>return\nFileMatch? : desktop.ini (null,0,4)\n  =>return\nFileMatch? : Saved Pictures (null,0,5)\n  =>return\nindex to 6\nGetFileInfo 0154\nGetFileInfo : C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\nGetFileInfo 0155\nGetFileInfo : C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\n        GetFileInformationByHandle success, file size = 879394\n    result =  0\n\nindex from 6\nFileMatch? : . (null,6,0)\nFileMatch? : .. (null,6,1)\nFileMatch? : Camera Roll (null,6,2)\nFileMatch? : Chrysanthemum.jpg (null,6,3)\nFileMatch? : desktop.ini (null,6,4)\nFileMatch? : Saved Pictures (null,6,5)\n  STATUS_NO_MORE_FILES\n        FileStandardInformation\n        GetFileInformationByHandle success, file size = 879394\n    result =  0\n    FileStandardInformation\n\nGetFileInfo 0155\nCleanup 0152\nCleanup: C:\\Users\\admin\\Pictures\\\nGetFileInfo : C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\n        GetFileInformationByHandle success, file size = 879394\n    result =  0\n    FileStandardInformation\n\nClose 0152\nClose: C:\\Users\\admin\\Pictures\\\nGetFileInfo 0154\nGetFileInfo : C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\nCreate 0156\nCreateFile : C:\\Users\\admin\\Pictures\\\n        GetFileInformationByHandle success, file size = 879394\n    result =  0\n    FileStandardInformation\n\nAccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x0\n        AccessMode = 0x100000\n        SYNCHRONIZE\nRead 0155\nReadFile : C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\n        FlagsAndAttributes = 0x2000000\n        FILE_FLAG_BACKUP_SEMANTICS\n        OPEN_EXISTING\n        read 32768, offset 0\nCreateFile status = 0 - lastError = 0\nCreate 0157\nCreateFile : C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\nQueryVolumeInfo 0156\nCreate 0157\nCreateFile : C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\nQueryVolumeInfo 0156\nCleanup 0156\nCleanup: C:\\Users\\admin\\Pictures\\\nAccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x7\n        FILE_SHARE_READ\n        FILE_SHARE_WRITE\n        FILE_SHARE_DELETE\n        AccessMode = 0x80\n        FILE_READ_ATTRIBUTES\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x7\n        FILE_SHARE_READ\n        FILE_SHARE_WRITE\n        FILE_SHARE_DELETE\n        AccessMode = 0x80\n        FILE_READ_ATTRIBUTES\nClose 0156\nClose: C:\\Users\\admin\\Pictures\\\n    FlagsAndAttributes = 0x200000\n    FILE_FLAG_OPEN_REPARSE_POINT\n    OPEN_EXISTING\n    FlagsAndAttributes = 0x200000\n    FILE_FLAG_OPEN_REPARSE_POINT\n    OPEN_EXISTING\n\nCreate 0159\nCreateFile : C:\\Users\\admin\\Pictures\\\nCreateFile status = 0 - lastError = 0\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x0\n        AccessMode = 0x100000\n        SYNCHRONIZE\nGetFileInfo 0158\nGetFileInfo : C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\n        FlagsAndAttributes = 0x2000000\n        FILE_FLAG_BACKUP_SEMANTICS\n        OPEN_EXISTING\nCreateFile status = 0 - lastError = 0\nCreateFile status = 0 - lastError = 0\nGetFileInfo 0157\nGetFileInfo : C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\n        GetFileInformationByHandle success, file size = 879394\n    result =  0\n    FileNetworkOpenInformation\n\nQueryVolumeInfo 0159\n    GetFileInformationByHandle success, file size = 879394\n\n    result =  0\n    FileNetworkOpenInformation\n\nQueryVolumeInfo 0159\nCleanup 0157\nCleanup: C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\nCleanup 0159\nCleanup: C:\\Users\\admin\\Pictures\\\nClose 0157\nClose: C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\nCleanup 0158\nCleanup: C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\nCreate 0160\nCreateFile : C:\\Users\\admin\\Pictures\\\nClose 0159\nClose: C:\\Users\\admin\\Pictures\\\nCreate 0160\nCreateFile : C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x0\n        AccessMode = 0x100000\n        SYNCHRONIZE\nClose 0158\nClose: C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\nAccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x7\n        FILE_SHARE_READ\n        FILE_SHARE_WRITE\n        FILE_SHARE_DELETE\n        AccessMode = 0x80\n        FILE_READ_ATTRIBUTES\n        FlagsAndAttributes = 0x2000000\n        FILE_FLAG_BACKUP_SEMANTICS\n        OPEN_EXISTING\nCreate 0160\nCreateFile : C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\nCreateFile status = 0 - lastError = 0\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x7\n        FILE_SHARE_READ\n        FILE_SHARE_WRITE\nQueryVolumeInfo 0160\n    FlagsAndAttributes = 0x200000\n    FILE_FLAG_OPEN_REPARSE_POINT\n    OPEN_EXISTING\n    FILE_SHARE_DELETE\n    AccessMode = 0x80\n    FILE_READ_ATTRIBUTES\n\nQueryVolumeInfo 0160\nCreateFile status = 0 - lastError = 0\nCleanup 0160\nCleanup: C:\\Users\\admin\\Pictures\\\nGetFileInfo 0161\nGetFileInfo : C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\nClose 0160\nClose: C:\\Users\\admin\\Pictures\\\n    GetFileInformationByHandle success, file size = 879394\n\n    result =  0\n    FileNetworkOpenInformation\n    FlagsAndAttributes = 0x200000\n    FILE_FLAG_OPEN_REPARSE_POINT\n    OPEN_EXISTING\n\nCleanup 0161\nCleanup: C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\nCreateFile status = 0 - lastError = 0\nCleanup 0155\nCleanup: C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\nGetFileInfo 0162\nGetFileInfo : C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\nCleanup 0153\nCleanup: C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\n    GetFileInformationByHandle success, file size = 879394\n\n    result =  0\n    FileNetworkOpenInformation\n\nClose 0161\nClose: C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\nCreate 0163\nCreateFile : C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\nClose 0153\nClose: C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\nAccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x7\n        FILE_SHARE_READ\n        FILE_SHARE_WRITE\n        FILE_SHARE_DELETE\n        AccessMode = 0x80\n        FILE_READ_ATTRIBUTES\nCleanup 0162\nCleanup: C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\n    FlagsAndAttributes = 0x200000\n    FILE_FLAG_OPEN_REPARSE_POINT\n    OPEN_EXISTING\n\nClose 0162\nClose: C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\nCreateFile status = 0 - lastError = 0\nCreate 0164\nCreateFile : C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg:ms-properties\nGetFileInfo 0163\nGetFileInfo : C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x5\n        FILE_SHARE_READ\n        FILE_SHARE_DELETE\n        AccessMode = 0x120089\n        FILE_READ_DATA\n        FILE_READ_ATTRIBUTES\n        FILE_READ_EA\n        READ_CONTROL\n        SYNCHRONIZE\n        STANDARD_RIGHTS_READ\n        STANDARD_RIGHTS_WRITE\n        STANDARD_RIGHTS_EXECUTE\n        GetFileInformationByHandle success, file size = 879394\n    result =  0\n    FileBasicInformation\n    FlagsAndAttributes = 0x200000\n    FILE_FLAG_OPEN_REPARSE_POINT\n    OPEN_EXISTING\n\nCleanup 0163\nCleanup: C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\n    error code = 2\n\nCreateFile status = 3221225524 - lastError = 2\nClose 0163\nClose: C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\nCreate 0165\nCreate 0165\nCreateFile : C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\nCreateFile : C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg:ms-properties\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x7\n        FILE_SHARE_READ\n        FILE_SHARE_WRITE\n        FILE_SHARE_DELETE\n        AccessMode = 0x80\n        FILE_READ_ATTRIBUTES\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x5\n        FILE_SHARE_READ\n        FILE_SHARE_DELETE\n        AccessMode = 0x120089\n        FILE_READ_DATA\n        FILE_READ_ATTRIBUTES\n        FILE_READ_EA\n        READ_CONTROL\n        SYNCHRONIZE\n        STANDARD_RIGHTS_READ\n        STANDARD_RIGHTS_WRITE\n        STANDARD_RIGHTS_EXECUTE\n        FlagsAndAttributes = 0x200000\n        FILE_FLAG_OPEN_REPARSE_POINT\n        OPEN_EXISTING\n        FlagsAndAttributes = 0x200000\n        FILE_FLAG_OPEN_REPARSE_POINT\n        OPEN_EXISTING\nCreateFile status = 0 - lastError = 0\n        error code = 2\nCreateFile status = 3221225524 - lastError = 2\nGetFileInfo 0166\nGetFileInfo : C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\nCreate 0167\nCreateFile : C:\\Users\\admin\\Pictures\\\n        GetFileInformationByHandle success, file size = 879394\n    result =  0\n    FileBasicInformation\n\nAccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x0\n        AccessMode = 0x100000\n        SYNCHRONIZE\nCleanup 0166\nCleanup: C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\n    FlagsAndAttributes = 0x2000000\n    FILE_FLAG_BACKUP_SEMANTICS\n    OPEN_EXISTING\n\nClose 0166\nClose: C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\nCreateFile status = 0 - lastError = 0\nCreate 0168\nCreateFile : C:\\Users\\admin\\Pictures\\\nQueryVolumeInfo 0167\nAccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x7\n        FILE_SHARE_READ\n        FILE_SHARE_WRITE\n        FILE_SHARE_DELETE\n        AccessMode = 0x100081\n        FILE_READ_DATA\n        FILE_READ_ATTRIBUTES\n        SYNCHRONIZE\nQueryVolumeInfo 0167\n    FlagsAndAttributes = 0x2000000\n    FILE_FLAG_BACKUP_SEMANTICS\n    OPEN_EXISTING\n\nCleanup 0167\nCleanup: C:\\Users\\admin\\Pictures\\\nCreateFile status = 0 - lastError = 0\nCreate 0169\nCreateFile : C:\\Users\\admin\\Pictures\\\nGetFileInfo 0168\nGetFileInfo : C:\\Users\\admin\\Pictures\\\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x0\n        AccessMode = 0x100000\n        SYNCHRONIZE\n        GetFileInformationByHandle success, file size = 4096\n    result =  0\n\nunknown type:55\n        FlagsAndAttributes = 0x2000000\n        FILE_FLAG_BACKUP_SEMANTICS\n        OPEN_EXISTING\nClose 0167\nClose: C:\\Users\\admin\\Pictures\\\nCreateFile status = 0 - lastError = 0\nFindFiles 0168\nFindFiles :C:\\Users\\admin\\Pictures\\\nQueryVolumeInfo 0169\n    FindFiles return 6 entries in C:\\Users\\admin\\Pictures\\*\n\nindex from 0\nFileMatch? : . (Chrysanthemum.jpg,0,0)\nFileMatch? : .. (Chrysanthemum.jpg,0,0)\nFileMatch? : Camera Roll (Chrysanthemum.jpg,0,0)\nFileMatch? : Chrysanthemum.jpg (Chrysanthemum.jpg,0,0)\n  =>return single entry\nindex to 1\nQueryVolumeInfo 0169\nCleanup 0168\nCleanup: C:\\Users\\admin\\Pictures\\\nCleanup 0169\nCleanup: C:\\Users\\admin\\Pictures\\\nClose 0168\nClose: C:\\Users\\admin\\Pictures\\\nClose 0169\nClose: C:\\Users\\admin\\Pictures\\\nCleanup 0154\nCleanup: C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\nClose 0155\nClose: C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\nClose 0154\nClose: C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\nCreate 0170\nCreateFile : C:\\Users\\admin\\Pictures\\\nCleanup 0151\nCleanup: C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\nAccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x0\nClose 0151\nClose: C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\n    AccessMode = 0x100000\n    SYNCHRONIZE\n\nCreate 0171\nCreateFile : C:\\Users\\admin\\Pictures\\\n        FlagsAndAttributes = 0x2000000\n        FILE_FLAG_BACKUP_SEMANTICS\n        OPEN_EXISTING\nCreate 0171\nCreateFile : C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\nCreateFile status = 0 - lastError = 0\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x1\n        FILE_SHARE_READ\n        AccessMode = 0x120089\n        FILE_READ_DATA\n        FILE_READ_ATTRIBUTES\n        FILE_READ_EA\n        READ_CONTROL\n        SYNCHRONIZE\n        STANDARD_RIGHTS_READ\n        STANDARD_RIGHTS_WRITE\n        STANDARD_RIGHTS_EXECUTE\nQueryVolumeInfo 0170\nAccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x0\n        AccessMode = 0x100000\n        SYNCHRONIZE\nCleanup 0170\nCleanup: C:\\Users\\admin\\Pictures\\\n    FlagsAndAttributes = 0x2000000\n    FILE_FLAG_BACKUP_SEMANTICS\n    OPEN_EXISTING\n\nCreate 0173\nCreateFile : C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\nClose 0170\nClose: C:\\Users\\admin\\Pictures\\\n    FlagsAndAttributes = 0x80\n    FILE_ATTRIBUTE_NORMAL\n    OPEN_EXISTING\n\nAccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x7\n        FILE_SHARE_READ\n        FILE_SHARE_WRITE\n        FILE_SHARE_DELETE\n        AccessMode = 0x100080\n        FILE_READ_ATTRIBUTES\n        SYNCHRONIZE\nCreateFile status = 0 - lastError = 0\n        FlagsAndAttributes = 0x200000\n        FILE_FLAG_OPEN_REPARSE_POINT\n        OPEN_EXISTING\nCreateFile status = 0 - lastError = 0\nCreateFile status = 0 - lastError = 0\nQueryVolumeInfo 0171\nCreate 0174\nCreateFile : C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\nQueryVolumeInfo 0171\nGetFileInfo 0173\nGetFileInfo : C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\nCleanup 0171\nCleanup: C:\\Users\\admin\\Pictures\\\n    GetFileInformationByHandle success, file size = 879394\n\n    result =  0\n    FileNetworkOpenInformation\n\nAccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x7\n        FILE_SHARE_READ\n        FILE_SHARE_WRITE\n        FILE_SHARE_DELETE\n        AccessMode = 0x120089\n        FILE_READ_DATA\n        FILE_READ_ATTRIBUTES\n        FILE_READ_EA\n        READ_CONTROL\n        SYNCHRONIZE\n        STANDARD_RIGHTS_READ\n        STANDARD_RIGHTS_WRITE\n        STANDARD_RIGHTS_EXECUTE\nCreate 0175\nCreateFile : C:\\Users\\admin\\Pictures\\\nClose 0171\nClose: C:\\Users\\admin\\Pictures\\\nCleanup 0173\nCleanup: C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\n    FlagsAndAttributes = 0x0\n    OPEN_EXISTING\n\nClose 0173\nClose: C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\nAccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x0\n        AccessMode = 0x100000\n        SYNCHRONIZE\nCreate 0176\nCreateFile : C:\\Users\\admin\\Pictures\\\n        FlagsAndAttributes = 0x2000000\n        FILE_FLAG_BACKUP_SEMANTICS\n        OPEN_EXISTING\nCreateFile status = 0 - lastError = 0\nCreateFile status = 0 - lastError = 0\nCleanup 0174\nCleanup: C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\nQueryVolumeInfo 0175\nAccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x7\n        FILE_SHARE_READ\n        FILE_SHARE_WRITE\n        FILE_SHARE_DELETE\n        AccessMode = 0x100081\n        FILE_READ_DATA\n        FILE_READ_ATTRIBUTES\n        SYNCHRONIZE\n        FlagsAndAttributes = 0x2000000\n        FILE_FLAG_BACKUP_SEMANTICS\n        OPEN_EXISTING\nCreateFile status = 0 - lastError = 0\nCleanup 0172\nCleanup: C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\nClose 0174\nClose: C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\nQueryVolumeInfo 0175\nClose 0172\nGetFileInfo 0176\nCleanup 0175\nCleanup: C:\\Users\\admin\\Pictures\\\nGetFileInfo : C:\\Users\\admin\\Pictures\\\nClose: C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\nClose 0175\n    GetFileInformationByHandle success, file size = 4096\n\n    result =  0\n\nunknown type:55\nClose: C:\\Users\\admin\\Pictures\\\nFindFiles 0176\nFindFiles :C:\\Users\\admin\\Pictures\\\n        FindFiles return 6 entries in C:\\Users\\admin\\Pictures*\nindex from 0\nFileMatch? : . (Chrysanthemum.jpg,0,0)\nFileMatch? : .. (Chrysanthemum.jpg,0,0)\nFileMatch? : Camera Roll (Chrysanthemum.jpg,0,0)\nFileMatch? : Chrysanthemum.jpg (Chrysanthemum.jpg,0,0)\n  =>return single entry\nindex to 1\nCleanup 0176\nCleanup: C:\\Users\\admin\\Pictures\\\nClose 0176\nClose: C:\\Users\\admin\\Pictures\\\nCreate 0177\nCreateFile : C:\\Users\\admin\\Pictures\\\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x0\n        AccessMode = 0x100000\n        SYNCHRONIZE\n        FlagsAndAttributes = 0x2000000\n        FILE_FLAG_BACKUP_SEMANTICS\n        OPEN_EXISTING\nCreateFile status = 0 - lastError = 0\nQueryVolumeInfo 0177\nCleanup 0177\nCleanup: C:\\Users\\admin\\Pictures\\\nClose 0177\nClose: C:\\Users\\admin\\Pictures\\\nCreate 0178\nCreateFile : C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x7\n        FILE_SHARE_READ\n        FILE_SHARE_WRITE\n        FILE_SHARE_DELETE\n        AccessMode = 0x100080\n        FILE_READ_ATTRIBUTES\n        SYNCHRONIZE\n        FlagsAndAttributes = 0x200000\n        FILE_FLAG_OPEN_REPARSE_POINT\n        OPEN_EXISTING\nCreateFile status = 0 - lastError = 0\nGetFileInfo 0178\nGetFileInfo : C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\n        GetFileInformationByHandle success, file size = 879394\n    result =  0\n    FileNetworkOpenInformation\n\nCleanup 0178\nCleanup: C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\nClose 0178\nClose: C:\\Users\\admin\\Pictures\\Chrysanthemum.jpg\nCreate 0179\nCreateFile : C:\\Users\\admin\\Pictures\\\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x0\n        AccessMode = 0x100000\n        SYNCHRONIZE\n        FlagsAndAttributes = 0x2000000\n        FILE_FLAG_BACKUP_SEMANTICS\n        OPEN_EXISTING\nCreateFile status = 0 - lastError = 0\nQueryVolumeInfo 0179\nCleanup 0179\nCleanup: C:\\Users\\admin\\Pictures\\\nClose 0179\nClose: C:\\Users\\admin\\Pictures\\\nCreate 0180\nCreateFile : C:\\Users\\admin\\Pictures\\\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x7\n        FILE_SHARE_READ\n        FILE_SHARE_WRITE\n        FILE_SHARE_DELETE\n        AccessMode = 0x100080\n        FILE_READ_ATTRIBUTES\n        SYNCHRONIZE\n        FlagsAndAttributes = 0x2200000\n        FILE_FLAG_BACKUP_SEMANTICS\n        FILE_FLAG_OPEN_REPARSE_POINT\n        OPEN_EXISTING\nCreateFile status = 0 - lastError = 0\nGetFileInfo 0180\nGetFileInfo : C:\\Users\\admin\\Pictures\\\n        GetFileInformationByHandle success, file size = 4096\n    result =  0\n    FileNetworkOpenInformation\n\nCleanup 0180\nCleanup: C:\\Users\\admin\\Pictures\\\nClose 0180\nClose: C:\\Users\\admin\\Pictures\\\nCreate 0181\nCreateFile : C:\\Users\\admin\\Pictures\\\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x0\n        AccessMode = 0x100000\n        SYNCHRONIZE\n        FlagsAndAttributes = 0x2000000\n        FILE_FLAG_BACKUP_SEMANTICS\n        OPEN_EXISTING\nCreateFile status = 0 - lastError = 0\nQueryVolumeInfo 0181\nCleanup 0181\nCleanup: C:\\Users\\admin\\Pictures\\\nClose 0181\nClose: C:\\Users\\admin\\Pictures\\\nCreate 0182\nCreateFile : C:\\Users\\admin\\Pictures\\\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x7\n        FILE_SHARE_READ\n        FILE_SHARE_WRITE\n        FILE_SHARE_DELETE\n        AccessMode = 0x100080\n        FILE_READ_ATTRIBUTES\n        SYNCHRONIZE\n        FlagsAndAttributes = 0x2200000\n        FILE_FLAG_BACKUP_SEMANTICS\n        FILE_FLAG_OPEN_REPARSE_POINT\n        OPEN_EXISTING\nCreateFile status = 0 - lastError = 0\nGetFileInfo 0182\nGetFileInfo : C:\\Users\\admin\\Pictures\\\n        GetFileInformationByHandle success, file size = 4096\n    result =  0\n    FileNetworkOpenInformation\n\nCleanup 0182\nCleanup: C:\\Users\\admin\\Pictures\\\nClose 0182\nClose: C:\\Users\\admin\\Pictures\\\nCreate 0183\nCreateFile : C:\\Users\\admin\\Pictures\\\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x0\n        AccessMode = 0x100000\n        SYNCHRONIZE\n        FlagsAndAttributes = 0x2000000\n        FILE_FLAG_BACKUP_SEMANTICS\n        OPEN_EXISTING\nCreateFile status = 0 - lastError = 0\nQueryVolumeInfo 0183\nCleanup 0183\nCleanup: C:\\Users\\admin\\Pictures\\\nClose 0183\nClose: C:\\Users\\admin\\Pictures\\\nCreate 0184\nCreateFile : C:\\Users\\admin\\Pictures\\\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x7\n        FILE_SHARE_READ\n        FILE_SHARE_WRITE\n        FILE_SHARE_DELETE\n        AccessMode = 0x100080\n        FILE_READ_ATTRIBUTES\n        SYNCHRONIZE\n        FlagsAndAttributes = 0x2200000\n        FILE_FLAG_BACKUP_SEMANTICS\n        FILE_FLAG_OPEN_REPARSE_POINT\n        OPEN_EXISTING\nCreateFile status = 0 - lastError = 0\nGetFileInfo 0184\nGetFileInfo : C:\\Users\\admin\\Pictures\\\n        GetFileInformationByHandle success, file size = 4096\n    result =  0\n    FileNetworkOpenInformation\n\nCleanup 0184\nCleanup: C:\\Users\\admin\\Pictures\\\nClose 0184\nClose: C:\\Users\\admin\\Pictures\\\nCreate 0185\nCreateFile : C:\\Users\\admin\\Pictures\\\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x0\n        AccessMode = 0x100000\n        SYNCHRONIZE\n        FlagsAndAttributes = 0x2000000\n        FILE_FLAG_BACKUP_SEMANTICS\n        OPEN_EXISTING\nCreateFile status = 0 - lastError = 0\nQueryVolumeInfo 0185\nQueryVolumeInfo 0185\nCleanup 0185\nCleanup: C:\\Users\\admin\\Pictures\\\nClose 0185\nClose: C:\\Users\\admin\\Pictures\\\nCreate 0186\nCreateFile : C:\\Users\\admin\\Pictures\\\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x0\n        AccessMode = 0x100000\n        SYNCHRONIZE\n        FlagsAndAttributes = 0x2000000\n        FILE_FLAG_BACKUP_SEMANTICS\n        OPEN_EXISTING\nCreateFile status = 0 - lastError = 0\nQueryVolumeInfo 0186\nCleanup 0186\nCleanup: C:\\Users\\admin\\Pictures\\\nClose 0186\nClose: C:\\Users\\admin\\Pictures\\\nCreate 0187\nCreateFile : C:\\Users\\admin\\Pictures\\\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x0\n        AccessMode = 0x100000\n        SYNCHRONIZE\n        FlagsAndAttributes = 0x2000000\n        FILE_FLAG_BACKUP_SEMANTICS\n        OPEN_EXISTING\nCreateFile status = 0 - lastError = 0\nQueryVolumeInfo 0187\nQueryVolumeInfo 0187\nCleanup 0187\nCleanup: C:\\Users\\admin\\Pictures\\\nClose 0187\nClose: C:\\Users\\admin\\Pictures\\\nCreate 0188\nCreateFile : C:\\Users\\admin\\Pictures\\\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x0\n        AccessMode = 0x100000\n        SYNCHRONIZE\n        FlagsAndAttributes = 0x2000000\n        FILE_FLAG_BACKUP_SEMANTICS\n        OPEN_EXISTING\nCreateFile status = 0 - lastError = 0\nQueryVolumeInfo 0188\nQueryVolumeInfo 0188\nCleanup 0188\nCleanup: C:\\Users\\admin\\Pictures\\\nClose 0188\nClose: C:\\Users\\admin\\Pictures\\\nCreate 0189\nCreateFile : C:\\Users\\admin\\Pictures\\\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x0\n        AccessMode = 0x100000\n        SYNCHRONIZE\n        FlagsAndAttributes = 0x2000000\n        FILE_FLAG_BACKUP_SEMANTICS\n        OPEN_EXISTING\nCreateFile status = 0 - lastError = 0\nQueryVolumeInfo 0189\nQueryVolumeInfo 0189\nCleanup 0189\nCleanup: C:\\Users\\admin\\Pictures\\\nClose 0189\nClose: C:\\Users\\admin\\Pictures\\\nCreate 0190\nCreateFile : C:\\Users\\admin\\Pictures\\\n  AccountName: admin, DomainName: DESKTOP-JO1Q8DD\n        ShareMode = 0x0\n        AccessMode = 0x100000\n        SYNCHRONIZE\n        FlagsAndAttributes = 0x2000000\n        FILE_FLAG_BACKUP_SEMANTICS\n        OPEN_EXISTING\nCreateFile status = 0 - lastError = 0\nQueryVolumeInfo 0190\nQueryVolumeInfo 0190\nCleanup 0190\nCleanup: C:\\Users\\admin\\Pictures\\\nClose 0190\nClose: C:\\Users\\admin\\Pictures\\\n```\nDbgView:\n00000001    0.00000000  [2888] shell\\twinui\\nowplayingsessionmanager\\localprovider\\baseprovider\\lib\\baseprovider.cpp(516)\\NPSMDesktopProvider.dll!00007FF85692E7B8: (caller: 00007FF8569249F9) ReturnHr[PreRelease](10) tid(11c0) 80070490 Element not found.   \n00000002    0.37303537  [2888] shell\\ext\\thumbnailcache\\lib\\thumbcacheapi.cpp(226)\\thumbcache.dll!00007FF8681F5227: (caller: 00007FF8681F533F) ReturnHr[PreRelease](66) tid(f7c) 80030002 %1 could not be found.    \n00000003    0.37320405  [2888] shell\\ext\\thumbnailcache\\lib\\thumbcacheapi.cpp(145)\\thumbcache.dll!00007FF8681E28D6: (caller: 00007FF877B840CC) ReturnHr[PreRelease](67) tid(f7c) 80030002 %1 could not be found.    \n00000004    0.37385097  [2888] shell\\ext\\thumbnailcache\\lib\\thumbcacheapi.cpp(226)\\thumbcache.dll!00007FF8681F5227: (caller: 00007FF8681F533F) ReturnHr[PreRelease](68) tid(f7c) 8004B200   \n00000005    0.37424219  [2888] shell\\ext\\thumbnailcache\\lib\\thumbcacheapi.cpp(145)\\thumbcache.dll!00007FF8681E28D6: (caller: 00007FF877B840CC) ReturnHr[PreRelease](69) tid(f7c) 8004B200   \n00000006    0.37515265  [2888] shell\\ext\\thumbnailcache\\lib\\thumbcacheapi.cpp(226)\\thumbcache.dll!00007FF8681F5227: (caller: 00007FF8681F533F) ReturnHr[PreRelease](70) tid(c80) 8004B203   \n00000007    0.37530115  [2888] shell\\ext\\thumbnailcache\\lib\\thumbcacheapi.cpp(226)\\thumbcache.dll!00007FF8681F5227: (caller: 00007FF8681F533F) ReturnHr[PreRelease](71) tid(f7c) 8004B200   \n00000008    0.37581283  [2888] shell\\ext\\thumbnailcache\\lib\\thumbcacheapi.cpp(145)\\thumbcache.dll!00007FF8681E28D6: (caller: 00007FF877B840CC) ReturnHr[PreRelease](72) tid(f7c) 8004B200   \n00000009    0.37587729  [2888] shell\\ext\\thumbnailcache\\lib\\thumbcacheapi.cpp(226)\\thumbcache.dll!00007FF8681F5227: (caller: 00007FF8681F533F) ReturnHr[PreRelease](73) tid(c80) 8004B200   \n00000010    0.37660703  [2888] shell\\ext\\thumbnailcache\\lib\\thumbcacheapi.cpp(226)\\thumbcache.dll!00007FF8681F5227: (caller: 00007FF8681F533F) ReturnHr[PreRelease](74) tid(f7c) 8004B200   \n00000011    0.37667903  [2888] shell\\ext\\thumbnailcache\\lib\\thumbcacheapi.cpp(226)\\thumbcache.dll!00007FF8681F5227: (caller: 00007FF8681F533F) ReturnHr[PreRelease](75) tid(c80) 8004B200   \n00000012    0.37704286  [2888] shell\\ext\\thumbnailcache\\lib\\thumbcacheapi.cpp(145)\\thumbcache.dll!00007FF8681E28D6: (caller: 00007FF877B840CC) ReturnHr[PreRelease](76) tid(f7c) 8004B200   \n00000013    0.37838188  [2888] shell\\ext\\thumbnailcache\\lib\\thumbcacheapi.cpp(226)\\thumbcache.dll!00007FF8681F5227: (caller: 00007FF8681F533F) ReturnHr[PreRelease](77) tid(f7c) 8004B200   \n00000014    0.37931642  [2888] shell\\ext\\thumbnailcache\\lib\\thumbcacheapi.cpp(145)\\thumbcache.dll!00007FF8681E28D6: (caller: 00007FF877B840CC) ReturnHr[PreRelease](78) tid(f7c) 8004B200   \n00000015    0.37985945  [2888] shell\\ext\\thumbnailcache\\lib\\thumbcacheapi.cpp(226)\\thumbcache.dll!00007FF8681F5227: (caller: 00007FF8681F533F) ReturnHr[PreRelease](79) tid(c80) 8004B200   \n00000016    0.38055578  [2888] shell\\ext\\thumbnailcache\\lib\\thumbcacheapi.cpp(226)\\thumbcache.dll!00007FF8681F5227: (caller: 00007FF8681F533F) ReturnHr[PreRelease](80) tid(c80) 8004B200   \n00000017    0.93437535  [2888] shell\\ext\\thumbnailcache\\lib\\thumbcacheapi.cpp(226)\\thumbcache.dll!00007FF8681F5227: (caller: 00007FF8681F533F) ReturnHr[PreRelease](81) tid(cf4) 8004B200   \n00000018    6.07509470  [2888] shell\\ext\\thumbnailcache\\lib\\thumbcacheapi.cpp(226)\\thumbcache.dll!00007FF8681F5227: (caller: 00007FF8681F533F) ReturnHr[PreRelease](82) tid(f7c) 8004B200   \n00000019    6.15156603  [2888] shell\\ext\\thumbnailcache\\lib\\thumbcacheapi.cpp(145)\\thumbcache.dll!00007FF8681E28D6: (caller: 00007FF877B840CC) ReturnHr[PreRelease](83) tid(f7c) 8004B200   \n00000020    6.30145645  [2888] shell\\ext\\thumbnailcache\\lib\\thumbcacheapi.cpp(226)\\thumbcache.dll!00007FF8681F5227: (caller: 00007FF8681F533F) ReturnHr[PreRelease](84) tid(cf4) 8004B200   \n00000021    6.30603361  [2888] shell\\ext\\thumbnailcache\\lib\\thumbcacheapi.cpp(226)\\thumbcache.dll!00007FF8681F5227: (caller: 00007FF8681F533F) ReturnHr[PreRelease](85) tid(f7c) 80004005 Unspecified error     \n00000022    8.16910076  [2988] base\\appmodel\\execmodel\\shared\\resourcetimers\\lib\\applicationdata.cpp(197)\\modernexecserver.dll!00007FF86A0F7312: (caller: 00007FF86A0E788A) ReturnHr[PreRelease](38) tid(af0) 80070002 The system cannot find the file specified.   \n00000023    12.71513653 [2888] shell\\twinui\\nowplayingsessionmanager\\localprovider\\baseprovider\\lib\\baseprovider.cpp(516)\\NPSMDesktopProvider.dll!00007FF85692E7B8: (caller: 00007FF8569249F9) ReturnHr[PreRelease](11) tid(11c0) 80070490 Element not found.   \n00000024    13.17258644 [2888] shell\\lib\\bindctx.cpp(1144)\\explorerframe.dll!00007FF869678EA4: (caller: 00007FF8696C05BE) ReturnHr[PreRelease](10) tid(f7c) 80070057 The parameter is incorrect.    \n00000025    13.17333508 [2888] shell\\lib\\bindctx.cpp(1144)\\explorerframe.dll!00007FF869678EA4: (caller: 00007FF8696C05BE) ReturnHr[PreRelease](11) tid(f7c) 80070057 The parameter is incorrect.    \n00000026    13.17394829 [2888] shell\\lib\\bindctx.cpp(1144)\\explorerframe.dll!00007FF869678EA4: (caller: 00007FF8696C05BE) ReturnHr[PreRelease](12) tid(f7c) 80070057 The parameter is incorrect.    \n00000027    13.44262123 [2988] base\\appmodel\\execmodel\\modern\\lifetimemanager\\plmimpl.cpp(1220)\\modernexecserver.dll!00007FF86A0E932A: (caller: 00007FF86EF319C9) ReturnHr[PreRelease](39) tid(de4) 80004001 Not implemented    \n00000028    13.94459534 [2988] base\\appmodel\\execmodel\\modern\\lifetimemanager\\suspendresume.cpp(3676)\\modernexecserver.dll!00007FF86A0DD019: (caller: 00007FF86A0E8878) ReturnHr[PreRelease](40) tid(de4) 8000000D An illegal state change was requested.   \n00000029    13.94469643 [2988] base\\appmodel\\execmodel\\modern\\lifetimemanager\\plmlegacy.cpp(102)\\modernexecserver.dll!00007FF86A0E88B2: (caller: 00007FF86A0F4CB8) ReturnHr[PreRelease](41) tid(de4) 8000000D An illegal state change was requested.    \n00000030    13.98004723 [2988] base\\appmodel\\execmodel\\modern\\lifetimemanager\\plmimpl.cpp(572)\\modernexecserver.dll!00007FF86A12D82A: (caller: 00007FF86A14E7C4) ReturnHr[PreRelease](42) tid(de4) 8000000D An illegal state change was requested.  \n00000031    14.13546371 [2988] base\\appmodel\\execmodel\\shared\\resourcetimers\\lib\\applicationdata.cpp(197)\\modernexecserver.dll!00007FF86A0F7312: (caller: 00007FF86A0E788A) ReturnHr[PreRelease](43) tid(af0) 80070002 The system cannot find the file specified.   \n00000032    17.47030449 [2888] shell\\twinui\\nowplayingsessionmanager\\localprovider\\baseprovider\\lib\\baseprovider.cpp(516)\\NPSMDesktopProvider.dll!00007FF85692E7B8: (caller: 00007FF8569249F9) ReturnHr[PreRelease](12) tid(11c0) 80070490 Element not found.   \n00000033    18.71206665 [2888] shell\\twinui\\nowplayingsessionmanager\\localprovider\\baseprovider\\lib\\baseprovider.cpp(516)\\NPSMDesktopProvider.dll!00007FF85692E7B8: (caller: 00007FF8569249F9) ReturnHr[PreRelease](13) tid(11c0) 80070490 Element not found.\n. I assume that it happens because Microsoft Explorer is searching for the thumbnails in the folder.\nI've experienced it too... \nWhen the thumbnails are saved, it doesn't read the *.exe files, until one of them is selected.\n. I copied both dokan1.dll and dokanfuse1.dll to mirror's folder,\nand now when I run:\nmirror.exe /s /d /o /r E:\\Temp /l m\nI get:\n```\nRootDirectory: E:\\Temp\nAttempting to add SE_SECURITY_NAME privilege to process token\nsuccess: privilege already present\nDokan: debug mode on\nDokan: use stderr\ndevice opened\nmounted: m -> \\Volume{d6cc17c5-1737-4085-bce7-964f1e9f5de9}\nMounted\nCreate 0000\nCreateFile : E:\\Temp\\System Volume Information\\MountPointManagerRemoteDatabase\n  AccountName: SYSTEM, DomainName: NT AUTHORITY\n        ShareMode = 0x0\n        AccessMode = 0x12019f\n        FILE_READ_DATA\n        FILE_READ_ATTRIBUTES\n        FILE_READ_EA\n        READ_CONTROL\n        FILE_WRITE_DATA\n        FILE_WRITE_ATTRIBUTES\n        FILE_WRITE_EA\n        FILE_APPEND_DATA\n        SYNCHRONIZE\n        STANDARD_RIGHTS_READ\n        STANDARD_RIGHTS_WRITE\n        STANDARD_RIGHTS_EXECUTE\n        FlagsAndAttributes = 0x86\n        FILE_ATTRIBUTE_HIDDEN\n        FILE_ATTRIBUTE_NORMAL\n        FILE_ATTRIBUTE_SYSTEM\n        OPEN_EXISTING\n        error code = 3\nCreateFile status = 3221225530 - lastError = 3\nCreate 0001\nCreateFile : E:\\Temp\\$Extend\\$Reparse:$R:$INDEX_ALLOCATION\n  AccountName: SYSTEM, DomainName: NT AUTHORITY\n        ShareMode = 0x3\n        FILE_SHARE_READ\n        FILE_SHARE_WRITE\n        AccessMode = 0x120089\n        FILE_READ_DATA\n        FILE_READ_ATTRIBUTES\n        FILE_READ_EA\n        READ_CONTROL\n        SYNCHRONIZE\n        STANDARD_RIGHTS_READ\n        STANDARD_RIGHTS_WRITE\n        STANDARD_RIGHTS_EXECUTE\n        FlagsAndAttributes = 0x0\n        OPEN_EXISTING\n        error code = 3\nCreateFile status = 3221225530 - lastError = 3\n```\nand the drive doesn't show up.\nWhen I press CTRL + C, mirror.exe crashes.\nSame problem without the mount manager options.\n. It worked with previous versions...\nI've also tried a different path and it didn't work :\\\n. Without admin rights, I get:\n```\nAttempting to add SE_SECURITY_NAME privilege to process token\nfailed: Unable to adjust token privileges: 1300\nFailed to add security privilege to process\n        => GetFileSecurity/SetFileSecurity may not work properly\n        => Please restart mirror sample with administrator rights to fix it\n```\nThere is no path that works for me with mirror :/\n. Also, when I tried running my program with the new dokan,\nthe drives are mounted but I can't see them under my computer....\nI also can't access them with writing \"N:\\\" in the address bar.\nThe only way I can access them is programatically:\nProcess.Start(diskLetter + @\":\\\");\n. YES!! \n. Yeah\n. ",
    "bryanbabel": "I'm using Dokan 0.7.3 on Windows 10, and I'm having the same issue. I can play a song using Windows Media Player but VLC gives an error message. I can view a photo using Paint and Windows Photo Viewer but VLC gives an error message. Please give me some insights, thanks a lot\n. \n. But plays with windows media player. This is with the new Dokan 0.7.3 RC4, on Windows 10. But it plays on VLC on windows 8.1. What  could be the issue? Thanks in advance\n\n. I have just tried it with mirror, it also fails with VLC, but succeeds with windows media player\n. @Liryna  I think there's something new in Windows 10 that you need to investigate. Because even mirror has the same issue. At your own time, test mirror on Windows and try playing media\n. ",
    "Rambalac": "Overlapped read problem?\n. @taruti You can try to get processId from Info and find whose that process is. But I have no idea what happen if SYSTEM get error on such requests. Maybe none of users see that drive at all. \n. Any news about 1.0.1? I have Explorer lockups too, and my app hangs on unmount. Both cannot be killed and system cannot restart, only hardware reset button helps.\n. Regarding the snapshot, I did download cert folder and run Powershell.exe -executionpolicy remotesigned -File .\\cert\\dokan-import.ps1 from its parent folder under elevated cmd. Then rebooted, run install and rebooted again.\nYes, when I turn it back device is already dismounted.\nIf I put laptop to sleep for short time like few minutes there is no problem.. The reason is probably the same as for encryption. It cannot access System Volume Information folder.. ",
    "sqc1999": "I encountered the problem too, with the latest Dokany and DokanNet. Any solutions?. ",
    "Owyn": "No I didn't rebuild it, And its repository is unavailable now anyway. \nI found a github which seems to host it (there is no way to check if it has 100% same files now) - https://github.com/freddy77/encfs4win \nbut still compiling it is not a thing everyone could do ( http://stackoverflow.com/questions/18993141/howto-compile-encfs4win-on-windows )\n. @Liryna ok... I rebuilt it with VS 2013 and guess what? it gives pretty same error...\n23:26:48 (..\\encfs\\encfs.cpp:141) error caught in getattr\n. @Liryna it worked from the box. just without some feautures which got broken.\n. another encfs windows port using Pismo File Mount instead of Dokany has the same problem btw\n. ",
    "jetwhiz": "Hi @Liryna -- maybe you have some ideas that can help me fix this issue?  I have noticed that when encfs4win is mounted to a drive letter (e.g., \"Z:\") then everything works well, but when encfs4win is mounted to an empty folder (e.g., \"C:\\myfiles\\mountpoint\"), all of the requests for getattr are for the short name (8.3 filename).  \nFor instance, when requesting the file \"Z:\\file.txt\", getattr provides \"file.txt\".  When requesting \"C:\\myfiles\\mountpoint\\file.txt\", however, getattr provides the file \"FILE.TXT\".  \nNormally this is not an issue on Windows, but since we are encrypting the file names in encfs, there is a big difference between \"file.txt\" and \"FILE.TXT\".  Do you have any ideas as to why Dokan is providing the short filename for mounted drives (\"C:\\myfiles\\mountpoint\\\") but provides the long filename when the filesystem is mounted to a drive letter (\"Z:\") for us?\n. I just did a quick test (dumping Dokan debug output) and it looks like it might be the same on the fuse mirror: \nMounted to \"Z:\" doing a getattr for \"Cygwin.ico\"\ncmd\nFileMatch? : .. (Cygwin.ico,0,0)\nFileMatch? : bin (Cygwin.ico,0,0)\nFileMatch? : Cygwin-Terminal.ico (Cygwin.ico,0,0)\nFileMatch? : Cygwin.bat (Cygwin.ico,0,0)\nFileMatch? : Cygwin.ico (Cygwin.ico,0,0)\n  =>return single entry\nMounted to \"C:\\dec\" doing a getattr for \"bunzip2.exe\"\ncmd\nFileMatch? : apropos (BUNZIP2.EXE,0,0)\nFileMatch? : arch.exe (BUNZIP2.EXE,0,0)\nFileMatch? : ash.exe (BUNZIP2.EXE,0,0)\nFileMatch? : awk (BUNZIP2.EXE,0,0)\nFileMatch? : base32.exe (BUNZIP2.EXE,0,0)\nFileMatch? : base64.exe (BUNZIP2.EXE,0,0)\nFileMatch? : basename.exe (BUNZIP2.EXE,0,0)\nFileMatch? : bash.exe (BUNZIP2.EXE,0,0)\nFileMatch? : bashbug (BUNZIP2.EXE,0,0)\nFileMatch? : bunzip2.exe (BUNZIP2.EXE,0,0)\n  =>return single entry\n. Ok, thank you, @Liryna!  I will try to look into the code to see why there might be a difference here.\n. Is it safe to assume 1.x is and will be keeping backwards compatibility with 0.8 then?  Migration from 0.8 to 1.x should be relatively trivial in that case? \n. Hey @Liryna \nYes it is 32-bit, with all of the most recent updates.  This Win7 virtual machine is what I have used for all versions of Dokany for testing.  Your installer for 0.7.4 works on it, and 0.8.0 works as well (but there is the issue of renaming files/folders, which I think is unrelated).  Dokany 1.0, however, does not run at all on it. \nHere is the file details of C:\\Windows\\system32\\drivers\\dokan1.sys.  Is that what you wanted to see? \n\n. Thanks @Liryna !\nHere is the Digital Signatures window: \n\n. Hi @js69 \nHere is the log file: Dokan_x86.msi.txt\n. @js69 -- yes, I rebooted immediately after installing (as the installer suggested) \n. @marinkobabic - nothing shows up in event viewer, but I get this error when running it on the command line: \n``` cmd\ncmd>net start Dokan1\nSystem error 127 has occurred.\nThe specified procedure could not be found.\ncmd>net start dokan1\nSystem error 127 has occurred.\nThe specified procedure could not be found.\n```\n. Have you been able to replicate this on Win7 32-bit, @Liryna ? \n. Hi @Liryna -- sorry it took so long to respond ... I didn't realize you had left messages on this issue.  For some reason GitHub only alerted me of the issue being closed!  I can confirm that the installer does appear to correctly install the drivers now, though!  \nOn a side note, I'm a little confused as to how mounting is supposed to be done now that dokan_mount has been removed as of 1.0.0.  In 0.7.4 and 0.8.0 there was a DokanMounter service running, that allowed our software to mount filesystems.  Since this service no longer exists, our software does not mount anymore as of 1.0.0.  Is there a new way that mounting is supposed to be performed now? \n. @Liryna -- We mount in our software using the \"fuse_main\" macro.  In previous versions of Dokan, this required the DokanMounter service to be running.  When I stop this service, our software is no longer able to mount filesystems.  Is this not the way that it should be done? \n. The DokanMounter service that I am referring to is this one: \n\nThis service only exists in Dokan 0.7.4 and 0.8.0, but not when I install 1.0.0.  For 0.7.4 and 0.8.0, this service must be running for my software to work correctly.  Is this supposed to exist in 1.0.0 as well? \n. @Liryna -- Got it working!  When building against your signed .lib and .dll files it works, so the problem must be when I try to build dokan on my side.  Thanks! \n. Hi @Liryna -- is this update designed to fix the issue where it is not possible to rename files and folders with Dokany v1.0?\n. I can confirm this issue ... all of my file sizes are being reported as 100+ PB in size, and randomly changes upon refresh.\n. I am building with Visual Studio 2015.  For the target machine I am using your installer (provided in your releases), though.  My target machine is a 32-bit Windows 7 installation.  Also, the \"Size on Disk\" is being reported correctly, but the \"Size\" field is incorrect. \nIs there a way I can print this value out from within our readdir() function?\n. @Liryna \nHere is the code I am using to print the values: \nC++\n  fprintf(stderr, \"fuse: name: %s\\n\", name.c_str());\n  fprintf(stderr, \"fuse: st_size: %I64d\\n\", stbuf->st_size);\n  fprintf(stderr, \"fuse: nFileSizeLow: %lu\\n\", find_data->nFileSizeLow);\n  fprintf(stderr, \"fuse: nFileSizeHigh: %lu\\n\\n\", find_data->nFileSizeHigh);\nHere is the output I am getting: \n\n. It looks like the problem is when walk_directory is called: \n``` cmd\nfuse: walk_directory name: libeay32.dll\nfuse: name: libeay32.dll\nfuse: st_size: 152832908540914282\nfuse: nFileSizeLow: 2006067818\nfuse: nFileSizeHigh: 35584184\nfuse: get_file_information fname: /libeay32.dll\nfuse: name: /libeay32.dll\nfuse: st_size: 1209856\nfuse: nFileSizeLow: 1209856\nfuse: nFileSizeHigh: 0\n```\nThe code is setting stat = *stbuf; and is not filling in the rest of the stat parameters (with getattr, I assume).  \n``` C\n  struct FUSE_STAT stat = {0};\nif (stbuf != NULL)\n    stat = *stbuf;\n```\nWe are running: \n``` C++\nstruct stat_st st;\nst.st_ino = inode;\nst.st_mode = fileType << 12;\nif (walk_directory(buf, name.c_str(), &st, 0)) break;\n```\nFrom what I understand, FUSE should only be looking at st_ino and st_mode in the provided struct, and should provide the rest on its own: \n\nOptionally, create a struct stat that describes the file as for getattr (but FUSE only looks at st_ino and the file-type bits of st_mode). \n\nhttps://www.cs.hmc.edu/~geoff/classes/hmc.cs135.201001/homework/fuse/fuse_doc.html#readdir-details\n. Yes, it works correctly if I pass a NULL struct stat in (both the sizes and the dates are fixed). \n. Actually, after further testing I found that the folder doesn't even need to be empty.  \nI can successfully navigate folders on the command line, but it is not possible to do via Explorer.  \nAlso, I have mounted my FS directly to a drive letter (Z:), and it is impossible to navigate any folders below Z:\\ via Explorer.  The folders eventually load, but there is a very long delay (a few minutes).  I can right-click a folder and select \"Properties\" and the information all loads fine, though.  \nThe CPU and Disk I/O are both idle (no work being done) while explorer is frozen. \nDo you have any suggestions on which FUSE callbacks I can target for deeper debugging to see where the issue lies? \n. @Rondom I suspect the problem is coming from AddSeSecurityNamePrivilege or FuseGetFileSecurity, since that's the only real change to FUSE between RC2 and RC3 (and RC2 works fine for me).  \nSee https://github.com/dokan-dev/dokany/compare/v1.0.0-RC2...v1.0.0-RC3#diff-6d5ff575218237cd8f26b3588063923d\n. @Liryna @Rondom \nI just removed the FuseGetFileSecurity operation and it appears to be working correctly now, so the problem does originate from GetFileSecurity.  \nAfter some debugging I found that the blockage is occurring around the CreateFileW call (https://github.com/dokan-dev/dokany/compare/v1.0.0-RC2...v1.0.0-RC3#diff-6d5ff575218237cd8f26b3588063923dR498), though I'm not sure why. \n. @Liryna - This seems to fix the issue for me! \n. Hi @Liryna \nI think this line (and similar calls) might be causing some issues in Cygwin: \nhttps://github.com/dokan-dev/dokany/blob/11bb829a70961e797adfef1354a98fada3491af7/dokan_fuse/src/dokanfuse.cpp#L224\nI believe %I64d is not supported in Cygwin for __int64 (unless you're linking with MSVCRT), so you must use %lld instead for this case.  \nDoes this help with the crashing issue?\n. Could this be related to the fact that it isn't possible to use the \"FILE_FLAG_DELETE_ON_CLOSE\" attribute with Dokany (or is this only true with FUSE)?  I believe MS Office is using this flag to remove the related temporary file after closing the program. \n. @Liryna The results appear to be the same with the above patch applied.  \nCreateFileW command used: \nC++\nHANDLE h = CreateFileW(s2ws(filename).c_str(), GENERIC_READ | GENERIC_WRITE, NULL, NULL, CREATE_ALWAYS, FILE_FLAG_DELETE_ON_CLOSE | FILE_ATTRIBUTE_TEMPORARY | FILE_ATTRIBUTE_SYSTEM | FILE_ATTRIBUTE_HIDDEN, NULL);\nDokany debug output: \n``` cmd\nCreate 0017\nCreateFile : \\testers.txt\n        DesiredAccess: FILE_GENERIC_WRITE|FILE_GENERIC_READ|DELETE\n        ShareAccess: 0x0\n        Disposition: FILE_OVERWRITE_IF (5)\n        Attributes: 262 (0x106)\n        Options: 4192 (0x1060)\nencfs_open attributes for /testers.txt: 0x00000106\n```\nI would expect Attributes to read: 0x04000106, but it only provides 0x106 (FILE_ATTRIBUTE_TEMPORARY | FILE_ATTRIBUTE_SYSTEM | FILE_ATTRIBUTE_HIDDEN).  The FILE_FLAG_DELETE_ON_CLOSE attribute should be setting 0x04000000 (https://msdn.microsoft.com/en-us/library/windows/desktop/aa363858(v=vs.85).aspx). \n. @Liryna You're right ... I completely missed that! ^^  Yes that works perfectly now, thanks!  \nIs it possible that you can also pass the \"fileAttributesAndFlags\" variable in via the fuse_file_info variable, similar to how the \"flags\" variable is passed in?  For instance, like this: \nflagsAndAttributes.txt\nThat way we have access to it from the FUSE interface. I realize this will make it inconsistent with the *nix version of fuse_file_info, however ... \n. @Liryna Yes, the interface would no longer be consistent with the FUSE interface.  I'm trying to think of how else this information can be passed (since it is Windows-specific).  I think we are also unable to have it passed in via FUSE open(const char* path, struct fuse_file_info* fi) as a new parameter.  \nMaybe it is possible to have a \nc++\nwin_open(const char* path, struct fuse_file_info* fi, unsigned int flagsAndAttributes)\nfunction that is triggered whenever the fileAttributesAndFlags is set (if the user has defined a callback for win_open)?  Similar to win_get_attributes, et al.  This way Windows users have the ability to catch these flags in win_open() instead of open(). \n. @Liryna Right now we're mainly interested in FILE_FLAG_DELETE_ON_CLOSE, so it's a good idea of trying to reuse the flag argument (at least for a short-term solution).  In the future it might be useful to have access to all of the flags, though we don't need them right now as far as I can tell.\n. Thanks, @Liryna!  The issue we are experiencing is that the temporary files created by Microsoft Office are not automatically removed after closing the program.  We are using the FUSE interface and we create files with CreateFileW, though, so I'm not sure if this is related to the Dokany driver? \n. @Liryna  It sounds promising ... I'll give it a try!  When you say \"kernel driver\", are you referring to dokan1.dll in the System32 folder?\n. Hi @Liryna -- the latest version of Dokany (RC4) now appears to honor the FILE_FLAG_DELETE_ON_CLOSE flag for files created, so I believe this issue is no longer necessary (unless you want to keep it open to implement these flags as pass-through in FUSE, though I personally do not need them now).\n. @Liryna -- I'm not sure if this is related, but I'm experiencing a similar issue (though intermittent) when running the CrystalDiskMark benchmark software on encfs4win.  I think it might be a problem for the order that cleanup/close and createfile are happening.  \nIt looks like the benchmark software does a Read -> Close -> Re-open -> Read, etc. \nFailure: \n``` cmd\nRead 0133\nReadFile: \\CrystalDiskMark006A6F99\\CrystalDiskMark006A6F9A.tmp from 0 len 32768\nRead 0133\nReadFile: \\CrystalDiskMark006A6F99\\CrystalDiskMark006A6F9A.tmp from 52396032 len 32768\nRead 0133\nReadFile: \\CrystalDiskMark006A6F99\\CrystalDiskMark006A6F9A.tmp from 61440 len 32768\nCleanup 0133\nCleanup: \\CrystalDiskMark006A6F99\\CrystalDiskMark006A6F9A.tmp\nCreate 0135\nCreateFile: \\CrystalDiskMark006A6F99\\CrystalDiskMark006A6F9A.tmp\n    DesiredAccess: FILE_GENERIC_WRITE|FILE_GENERIC_READ\n    ShareAccess: 0x0\n    Disposition: FILE_OPEN (1)\n    Attributes: 128 (0x80)\n    Options: 108 (0x6c)\nClose 0133\nClose: \\CrystalDiskMark006A6F99\\CrystalDiskMark006A6F9A.tmp\nCreateFile status = c0000022\n```\nSuccess: \n``` cmd\nRead 0079\nReadFile: \\CrystalDiskMark00523388\\CrystalDiskMark0052338B.tmp from 49283072 len 1048576\nRead 0079\nReadFile: \\CrystalDiskMark00523388\\CrystalDiskMark0052338B.tmp from 50331648 len 1048576\nRead 0079\nReadFile: \\CrystalDiskMark00523388\\CrystalDiskMark0052338B.tmp from 51380224 len 1048576\nCleanup 0079\nCleanup: \\CrystalDiskMark00523388\\CrystalDiskMark0052338B.tmp\nClose 0079\nClose: \\CrystalDiskMark00523388\\CrystalDiskMark0052338B.tmp\n2016-11-15 01:05:20,875 VER [RawFileIO.cpp:116] open call, requestWrite = 0\n2016-11-15 01:05:20,875 VER [RawFileIO.cpp:122] using existing file descriptor\nCreate 0081\nCreateFile: \\CrystalDiskMark00523388\\CrystalDiskMark0052338B.tmp\n    DesiredAccess: FILE_GENERIC_WRITE|FILE_GENERIC_READ\n    ShareAccess: 0x0\n    Disposition: FILE_OPEN (1)\n    Attributes: 128 (0x80)\n    Options: 108 (0x6c)\n```\nSince the problem happens intermittently, that makes me think it is a race condition.  You can see that when it fails, the order is \"CleanUp -> CreateFile -> Close\" and when it's a success the order is \"CleanUp -> Close -> CreateFile\".  \nI think the \"Close\" after the \"CreateFile\" is closing the new CreateFile (and not the old) since the second CreateFile is being called before \"CleanUp -> Close\" has completed.   Do you think this is a possibility? \n. @Liryna -- unfortuately I haven't been able to replicate the error with the mirror.  Each time I run the benchmark software with mirror it is in the order CleanUp -> Close -> CreateFile: \n``` cmd\nRead 0017\nReadFile : C:\\Users\\jetwhiz\\Desktop\\test2\\CrystalDiskMark009A3F02\\CrystalDiskMark009A3F03.tmp\n    Byte to read: 1048576, Byte read 1048576, offset 101711872\nRead 0017\nReadFile : C:\\Users\\jetwhiz\\Desktop\\test2\\CrystalDiskMark009A3F02\\CrystalDiskMark009A3F03.tmp\n    Byte to read: 1048576, Byte read 1048576, offset 102760448\nRead 0017\nReadFile : C:\\Users\\jetwhiz\\Desktop\\test2\\CrystalDiskMark009A3F02\\CrystalDiskMark009A3F03.tmp\n    Byte to read: 1048576, Byte read 1048576, offset 103809024\nCleanup 0017\nCleanup: C:\\Users\\jetwhiz\\Desktop\\test2\\CrystalDiskMark009A3F02\\CrystalDiskMark009A3F03.tmp\nClose 0017\nClose: C:\\Users\\jetwhiz\\Desktop\\test2\\CrystalDiskMark009A3F02\\CrystalDiskMark009A3F03.tmp\nCreate 0019\nCreateFile : C:\\Users\\jetwhiz\\Desktop\\test2\\CrystalDiskMark009A3F02\\CrystalDiskMark009A3F03.tmp\n```\n. This might be related, since the problem seems to go away when I enable single-threaded mode in encfs4win.  \nOn Windows 7 this causes the benchmark software to fail (alerting user that it could not do the test), but on Windows 10 it seems to crash encfs4win for some reason.\n. @Liryna -- sure!  I have created a new issue to reflect our discussion (https://github.com/dokan-dev/dokany/issues/404) . Hi @Rondom -- I'll give it a shot!  Can I build this using Visual Studio, or does this need to be done using Cygwin for the test?\n. @Rondom -- I'm not sure if I'm doing something wrong, but when I replace the system32 dll files with the ones built from this branch, encfs4win dies.  \ncmd\nDokan: debug mode on\nDokan: use stderr\nAllocationUnitSize: 512 SectorSize: 512\nDokan Error: CreatFile Failed \\\\.\\Dokan_1: 2\nsend global release for Z:\nDokan Error: Failed to open \\\\.\\Dokan_1 with code 2\nFailed to unmount: Z:\n. Unfortunately I'm not able to build the drivers in the project, since I don't have enough disk space to install the WDK 10.  Do you have an already-built one for Windows 7 x86 prepared?  Or maybe you could provide me with the branch's Dokany installer and I can install everything fresh. \n. @Rondom -- I did a bit of testing using the PR artifact installer and didn't notice any problems that stood out on my end when running encfs4win.  \nRegarding the PowerShell-script, unfortunately I don't have access to a Win 7 build machine -- I only do bare-bones testing in a pristine Win 7 VM.  Does using CertMgr not work when Import-Certificate isn't detected? \n. Great!  Thank you for the quick fix, @Liryna @taruti ! \n. Great, thanks for the quick patch, @Liryna !\n. To fix the FUSE mirror, it might be enough to just do an lstat and S_ISDIR before calling open: \nhttps://github.com/dokan-dev/dokany/blob/master/samples/fuse_mirror/fusexmp.c#L246\nSince open() will not complain if a directory is passed in (unless write permissions are requested): \nhttps://linux.die.net/man/3/open\nBut I'm not sure if the problem goes deeper in Dokany or not. . The more I think about this, the less certain I am that the fix should be on our end (encfs/dokany).  \nUnder Linux, when someone calls open() on a directory, an error is not given unless write permissions are requested (EISDIR error).  \nSimilarly, on Windows, CreateFile will not return an error as long as OPEN_EXISTING is used (directory already exists) or the FILE_FLAG_BACKUP_SEMANTICS flag is specified.  \nIt seems inapproproate for Go to be expecting an error when requesting to open an existing directory in read-only mode (since both Windows and Linux clearly do not see this as an error situation).  \n@Liryna -- what do you think?  . Hi @taruti -- this is mainly regarding the fuse_mirror sample, as it does not perform the check you describe (and so software using Go will fail awkwardly on fuse_mirror).  see https://github.com/dokan-dev/dokany/blob/master/samples/fuse_mirror/fusexmp.c#L246\nI guess my main concern is that opening a directory as a file is not considered an error (in Linux and Windows) unless you request write permissions.  Adding a check to fix the issue with Go's implementation seems to go against expected behavior for a filesystem, however.  \nIMO, Go should be the one to make the appropriate request (there is an important distinction between opening a directory as a file or as a directory, both of which are valid and do not return errors).  If Go wants to open a directory as a directory, then it should explicitly make that request (rather than relying on non-standard behavior).  . Ah I understand, so Go is sending the FILE_NON_DIRECTORY_FILE flag on Windows when it attempts to open a file (to force a fail for directories)?  \nIt might be better if the Dokany FUSE API handles this then since that flag is not currently passed through the API from what I can see?  \nAlternatively, the newest POSIX version has the O_DIRECTORY creation flag (it seems O_DIRECTORY is the opposite of FILE_NON_DIRECTORY_FILE, though, and only tangentially-related to FILE_DIRECTORY_FILE). . @Liryna @taruti -- I'm not very familiar with Go, so I can't say one way or another what is happening behind the scenes there.  From what I found here: https://github.com/golang/go/blob/master/src/syscall/syscall_windows.go#L248\ngo\nfunc Open(path string, mode int, perm uint32) (fd Handle, err error) {\n    if len(path) == 0 {\n        return InvalidHandle, ERROR_FILE_NOT_FOUND\n    }\n    pathp, err := UTF16PtrFromString(path)\n    if err != nil {\n        return InvalidHandle, err\n    }\n    var access uint32\n    switch mode & (O_RDONLY | O_WRONLY | O_RDWR) {\n    case O_RDONLY:\n        access = GENERIC_READ\n    case O_WRONLY:\n        access = GENERIC_WRITE\n    case O_RDWR:\n        access = GENERIC_READ | GENERIC_WRITE\n    }\n    if mode&O_CREAT != 0 {\n        access |= GENERIC_WRITE\n    }\n    if mode&O_APPEND != 0 {\n        access &^= GENERIC_WRITE\n        access |= FILE_APPEND_DATA\n    }\n    sharemode := uint32(FILE_SHARE_READ | FILE_SHARE_WRITE)\n    var sa *SecurityAttributes\n    if mode&O_CLOEXEC == 0 {\n        sa = makeInheritSa()\n    }\n    var createmode uint32\n    switch {\n    case mode&(O_CREAT|O_EXCL) == (O_CREAT | O_EXCL):\n        createmode = CREATE_NEW\n    case mode&(O_CREAT|O_TRUNC) == (O_CREAT | O_TRUNC):\n        createmode = CREATE_ALWAYS\n    case mode&O_CREAT == O_CREAT:\n        createmode = OPEN_ALWAYS\n    case mode&O_TRUNC == O_TRUNC:\n        createmode = TRUNCATE_EXISTING\n    default:\n        createmode = OPEN_EXISTING\n    }\n    h, e := CreateFile(pathp, access, sharemode, sa, createmode, FILE_ATTRIBUTE_NORMAL, 0)\n    return h, e\n}\nIt looks like they're using \"OPEN_EXISTING\" by default, but I don't see the FILE_FLAG_BACKUP_SEMANTICS flag being set. . @qnorsten -- can you replace this line: \ngo\nf, err := os.Open(dir)\nwith: \ngo\nf, err := os.OpenFile(dir, os.O_RDWR | os.O_CREATE, 0666)\nAnd see what happens? . I don't think that shouldn't be happening -- fuse_mirror should be failing with an EISDIR errno (https://github.com/dokan-dev/dokany/blob/master/samples/fuse_mirror/fusexmp.c#L246) in that situation if I understand this correctly.   https://www.gnu.org/software/libc/manual/html_node/Opening-and-Closing-Files.html\nUnless building with Cygwin leads to a different (non-POSIX) open() syscall behavior. . Thanks for fixing this @Liryna !  And sorry for the long hiatus.  I moved at the beginning of this year to another country and have been swamped.  I'll get this fix pulled into encfs4win as soon as I can, though! . Hi @Liryna ! \nI'm not sure if this is related, but I'm experiencing a similar issue with the FUSE mirror when attempting to work with files inside of a folder. \nReproducing it on my side: Mount with sample FUSE mirror.  Create a folder 'y', then create a file 'a.txt' in it.  Open 'a.txt' and write something in it, save and close it.  Now try to re-open 'a.txt' and you get an infinite loop of reading attempts: \n````cmd\nRead 0214\nReadFile: \\y\\a.txt from 0 len 4096\nRead 0214\nReadFile: \\y\\a.txt from 0 len 4096\nRead 0214\nReadFile: \\y\\a.txt from 0 len 4096\nRead 0214\nReadFile: \\y\\a.txt from 0 len 4096\nRead 0214\nReadFile: \\y\\a.txt from 0 len 4096\nRead 0214\nReadFile: \\y\\a.txt from 0 len 4096\n````\nI don't experience this when it is built into encfs4win, however. . Oddly enough, the problem only seems to exist in the sample FUSE mirror and not on encfs4win.  Maybe it's just with my cygwin dll that is causing that issue? . Hi @Liryna \nYes this test machine is x86.  Specifically, Windows 7 Professional SP1 x86 (all latest updates installed). . Ah, I didn't check the closed issues!  I'll keep an eye out for the next release.  Thanks! . ",
    "raymond-h": "Yeah, all headers would be great.\n. ",
    "rustyx": "Hi,\nAh yes this was another bug. The code was:\nbool read=(Flags & ACCESS_READ) == 1;\n    bool write=(Flags & ACCESS_WRITE) == 1;\n- this would never work as neither ACCESS_READ nor ACCESS_WRITE equal 1 !\nSo both flags were always false.\nTo fix the warning you could try:\nbool read=(Flags & ACCESS_READ) != 0;\n    bool write=(Flags & ACCESS_WRITE) != 0;\n. So, now I'm supposed to map Win32 GetLastError() first to NTSTATUS somehow, then have that mapped to errno, pass it to dokan_fuse, which would translate errno back to NTSTATUS? Does not sound like an improvement to me.\nNice code sample, but there are >2000 NTSTATUSes en Win32 errors.\nDon't understand why win32_error_to_errno was removed from dokan_fuse. How am I supposed to pass Win32 errors to dokan_fuse now?\n. ",
    "arekbulski": "My question refers specifically to whether FindFiles is allowed to filter entries anyway or not. \n. Actually it's CreateDirectly. You made a pun of a pun... :stuck_out_tongue_winking_eye:\n. I made changes to wiki directly, they are automatically accepted. But you can review revisions on each wiki page.\n. Thanks @Liryna \nI would not have known about PyFilesystem if you did not mention it, thanks. I only started reading about it but it seems to be very useful to me. :+1:  In fact, I think this solves the Issue. \n. Lyrina fixed the pyfilesystem-dokan issues. \n. ",
    "Giuse69": "Exactly, if reparse points are used, no chance of having windows indexing...\n@Owyn: the other port you mention is encFSMP that does not show the problem in Windows 7 but it does in Windows 10, so I am hoping that can be fixed... I opened a ticket for that.\nNo plans of getting rid of reparse point in Dokany..?\nCheers \n. ",
    "kenjiuno": "Hi.\nSorry for disturbing from outside.\n\nSo what about FsRtlRegisterUncProvider in that case, should we create a specific network redirector device then?\n\nFsRtlRegisterUncProvider makes a chance to catch UNC path access:\n- network redirector will receive IOCTL_REDIR_QUERY_PATH control code by registering to FsRtlRegisterUncProvider(Ex). We can accept or deny the subsequent access.\n- And then we will receive IRP_MJ_CREATE request with UNC path like \\server\\share\\file.\nCurrently dokan seems not to implement UNC support things. https://github.com/dokan-dev/dokany/blob/08b09a3910dbac0e902a81ad9e9ae1a06d4a6d90/sys/device.c#L457\n. Hi.\nI'll see the changes, when the next release will be launched!\n. Ok thanks.\n. > Attaching a FileSystemWatcher to a Dokan device works well... as long as the changes originate from an operation that is made through the device (which is quite understandable !).\nIt seems that Dokan already delivers changes by DokanNotifyReportChange\nhttps://github.com/dokan-dev/dokany/search?utf8=%E2%9C%93&q=DokanNotifyReportChange&type=\n\nBut what if changes come from \"inside\" ?\nex: using the mirror sample, if I change something in the mirrored directory, no event will be emitted when watching the mirror.\n\nMake DokanNotifyReportChange or DokanNotifyReportChange0 available to user land code would be useful if they implement their own notification mechanism.\n. > We need kernel logs or hardware to be able to reproduce the issue.\nThanks for reply! I'll check kernel log if there is useful information of this issue.... Here is mirror's log:\n```\nC:\\Program Files\\Dokan\\Dokan Library-1.1.0\\sample\\mirror>mirror.exe /r %USERPROFILE%\\Desktop /l M: /d /s\nAttempting to add SE_SECURITY_NAME privilege to process token\nsuccess: privilege already present\nDokan: debug mode on\nDokan: use stderr\nAllocationUnitSize: 512 SectorSize: 512\ndevice opened\nQueryVolumeInfo -001\nGetVolumeInformation: max component length 255\nGetVolumeInformation: file system name NTFS\nGetVolumeInformation: got file system flags 0x03e706ff, returning 0x0004000f\nmounted: M: -> \\Volume{d6cc17c5-1736-4085-bce7-964f1e9f5de9}\nMounted\n```\nThe above one is booting part of mirror.exe.\nThe below part is displayed after resuming from standby.\n```\nIoctl failed for wait with code 995.\nIoctl failed for wait with code 995.\nIoctl failed for wait with code 995.\nIoctl failed for wait with code 995.\nIoctl failed for wait with code 995.\nThread will be terminated\nThread will be terminated\nThread will be terminated\nThread will be terminated\nDokan Error: DokanKeepAlive CreateFile failed \\.\\Volume{d6cc17c5-1736-4085-bce7-964f1e9f5de9}: 2\nThread will be terminated\nUnmounted\nunload\nSuccess\nC:\\Program Files\\Dokan\\Dokan Library-1.1.0\\sample\\mirror>\n```\nI need to try debug version (from Releases) in order to capture kernel log. I'll post it when it is captured!\nDbgView captured something. But no kernel output seems to be included:\n00000001    0.00000000  [804] NPGetCaps 2   \n00000002    0.00010598  [804]   WNNC_NET_TYPE   \n00000003    0.00030029  [804] NPGetCaps 4   \n00000004    0.00051149  [804]   WNNC_USER   \n00000005    0.00063590  [804] NPGetCaps 6   \n00000006    0.00067123  [804]   WNC_CONNECTION  \n00000007    0.00078029  [804] NPGetCaps 13  \n00000008    0.00097690  [804]   default \n00000009    0.00105446  [804] NPGetCaps 11  \n00000010    0.00114202  [804]   WNNC_ENUMERATION    \n00000011    0.00124954  [804] NPGetCaps 9   \n00000012    0.00133939  [804]   WNNC_ADMIN  \n00000013    0.00163123  [804] NPGetCaps 8   \n00000014    0.00167731  [804]   WNNC_DIALOG \n00000015    0.00828288  [804] NPGetCaps 2   \n00000016    0.00837504  [804]   WNNC_NET_TYPE   \n00000017    0.00847488  [804] NPGetCaps 4   \n00000018    0.00857011  [804]   WNNC_USER   \n00000019    0.00866842  [804] NPGetCaps 6   \n00000020    0.00876672  [804]   WNC_CONNECTION  \n00000021    0.00898483  [804] NPGetCaps 11  \n00000022    0.00908775  [804]   WNNC_ENUMERATION    \n00000023    0.00919373  [804] NPGetCaps 9   \n00000024    0.00928973  [804]   WNNC_ADMIN  \n00000025    0.00939034  [804] NPGetCaps 8   \n00000026    0.00948941  [804]   WNNC_DIALOG \n00000027    0.04530663  [804] NPOpenEnum: dwScope 0x00000001, dwType 0x00000001, dwUsage 0x00000000, lpNetResource 00000000 \n00000028    0.04542644  [804] NPOpenEnum: pCtx 011DC928 \n00000029    0.04552552  [804] NPOpenEnum    \n00000030    0.04583886  [804] NPEnumResource: hEnum 011DC928, lpcCount 0332EE44, lpBuffer 011B8898, lpBufferSize 0332EE48.  \n00000031    0.04594945  [804] NPEnumResource: *lpcCount 0xffffffff, *lpBufferSize 0x4000, pCtx->index 0 \n00000032    0.04625435  [804] NPEnumResource CurrentSesstionID:1    \n00000033    0.04635649  [804] NPEnumResource nbRead:0   \n00000034    0.04646401  [804] NPEnumResource: Entries returned 0, dwStatus 0x00000103   \n00000035    0.04662376  [804] NPCloseEnum: hEnum 011DC928   \n00000036    0.04759758  [804] NPCloseEnum: returns  \n00000037    343.99642944    [5044] NPGetCaps 2  \n00000038    343.99700928    [5044]   WNNC_NET_TYPE  \n00000039    343.99725342    [5044] NPGetCaps 4  \n00000040    343.99737549    [5044]   WNNC_USER  \n00000041    343.99749756    [5044] NPGetCaps 6  \n00000042    343.99758911    [5044]   WNC_CONNECTION \n00000043    343.99771118    [5044] NPGetCaps 13 \n00000044    343.99780273    [5044]   default    \n00000045    343.99789429    [5044] NPGetCaps 11 \n00000046    343.99801636    [5044]   WNNC_ENUMERATION   \n00000047    343.99813843    [5044] NPGetCaps 9  \n00000048    343.99822998    [5044]   WNNC_ADMIN \n00000049    343.99832153    [5044] NPGetCaps 8  \n00000050    343.99841309    [5044]   WNNC_DIALOG    \n00000051    344.00558472    [5044] NPGetCaps 2  \n00000052    344.00570679    [5044]   WNNC_NET_TYPE  \n00000053    344.00582886    [5044] NPGetCaps 4  \n00000054    344.00592041    [5044]   WNNC_USER  \n00000055    344.00622559    [5044] NPGetCaps 6  \n00000056    344.00634766    [5044]   WNC_CONNECTION \n00000057    344.00646973    [5044] NPGetCaps 11 \n00000058    344.00656128    [5044]   WNNC_ENUMERATION   \n00000059    344.00665283    [5044] NPGetCaps 9  \n00000060    344.00674438    [5044]   WNNC_ADMIN \n00000061    344.00686646    [5044] NPGetCaps 8  \n00000062    344.00698853    [5044]   WNNC_DIALOG    \n00000063    344.14599609    [5044] NPOpenEnum: dwScope 0x00000001, dwType 0x00000001, dwUsage 0x00000000, lpNetResource 00000000    \n00000064    344.14608765    [5044] NPOpenEnum: pCtx 06EFE940    \n00000065    344.14627075    [5044] NPOpenEnum   \n00000066    344.14639282    [5044] NPEnumResource: hEnum 06EFE940, lpcCount 0329C2C4, lpBuffer 07298F80, lpBufferSize 0329C2C8. \n00000067    344.14651489    [5044] NPEnumResource: *lpcCount 0xffffffff, *lpBufferSize 0x4000, pCtx->index 0    \n00000068    344.14688110    [5044] NPEnumResource CurrentSesstionID:1   \n00000069    344.14697266    [5044] NPEnumResource nbRead:0  \n00000070    344.14709473    [5044] NPEnumResource: Entries returned 0, dwStatus 0x00000103  \n00000071    344.14724731    [5044] NPCloseEnum: hEnum 06EFE940  \n00000072    344.14730835    [5044] NPCloseEnum: returns \n00000073    354.97479248    [5044] NPGetResourceInformation: NetResource 091EE84C, Buffer 06EE0DA8, BufferSize 091EE7C8, System 091EE7C4    \n00000074    354.97491455    [5044] NPGetResourceInformation: lpRemoteName \\\\dd36\\*.txt, *BufferSize 0x820   \n00000075    354.97506714    [5044] parseServerName: cLeadingBackslashes 2   \n00000076    354.97515869    [5044] NPGetResourceInformation: lpServerName dd36\\*.txt - 4    \n00000077    354.97528076    [5044] NPGetResourceInformation: lpAfterName \\*.txt \n00000078    354.97540283    [5044] NPGetResourceInformation: type 2 \n00000079    354.97552490    [5044] NPGetResourceInformation: lpRemoteName: \\\\dd36\\*.txt, strings 06EE15C8/06EE15C8. I have captured kernel log for future reference: DbgView+mirror.zip\nIn DbgView.log this is interesting part:\n00001503    50.97924805 [DokanFS]   Timeout reached so perform an umount\nFor now I don't find the way / API to detect go this standby mode.\nAbout resume timing, it can be detected by setting Timer. Interval is much longer if suspension occurs.\nSince my customer will be happy if this problem is solved, I'll cooperate with you by testing new binaries / supplying info for this issues.. ",
    "gudenau": "I was just trying to do this, I set the file attributes to FILE_ATTRIBUTE_READONLY | FILE_ATTRIBUTE_SYSTEM | FILE_ATTRIBUTE_HIDDEN and this is my autorun.inf file:\n[Autorun]\nicon=autorun.ico\nBut for some reason it does not show that icon, even though the file on the drive shows it as a thumbnail.\nWhen I copy the icon off the Dokan drive it has the same hash as the source file, so I do not think that would be the problem.\nOn the same machine, mounting the Windows 10 ISO does show the custom icon that it has in autorun.inf, the only difference I see is the way they are mounted and the fact that the Windows ISO is using an EXE for the icon.. ",
    "acapola": "Please find below the console session. To be sure I also created a new directory \"test\" and immediately tried to delete it:\n```\nC:\\Users\\seb>\nC:\\Users\\seb>t:\nT:>RD \"New folder\"\nAccess is denied.\nT:>MD test\nT:>dir\n Volume in drive T is DOKAN\n Volume Serial Number is 1983-1116\nDirectory of T:\\\n09/07/2015  10:43 PM              .\n09/07/2015  10:43 PM              ..\n09/06/2015  08:08 PM              New folder\n09/07/2015  10:43 PM              test\n               0 File(s)              0 bytes\n               4 Dir(s)     536,870,912 bytes free\nT:>RD test\nAccess is denied.\nT:>c:\nC:\\Users\\seb>\n```\nand the matching log from mirror:\n```\nW:\\lofe\\windows\\dokan_mirror\\Win32\\Debug>mirror.exe /r c:\\tmp\\public /l t: /d /s\nDokan: debug mode on\nDokan: use stderr\ndevice opened\nmounted: t: -> \\Volume{d6cc17c5-1771-4085-bce7-964f1e9f5de9}\nCreate 0000\nOpenDirectory : c:\\tmp\\public\\\nCreateFile status = 0\nQueryVolumeInfo 0000\nCleanup 0000\nCleanup: c:\\tmp\\public\\\nClose 0000\nCreate 0001\nClose: c:\\tmp\\public\\\nOpenDirectory : c:\\tmp\\public\\\nCreateFile status = 0\nCreate 0002\nCreateDisposition 0x00000001\nCreateFile : c:\\tmp\\public\\autorun.inf\n  AccountName: seb, DomainName: seb-win7\n        OPEN_EXISTING\n        ShareMode = 0x7\n        FILE_SHARE_READ\n        FILE_SHARE_WRITE\n        FILE_SHARE_DELETE\n        AccessMode = 0x80\n        FILE_READ_ATTRIBUTES\n        FlagsAndAttributes = 0x2000000\n        FILE_FLAG_BACKUP_SEMANTICS\n        error code = 2\nCreateFile status = -2\nCreate 0003\nCreateDisposition 0x00000001\nCreateFile : c:\\tmp\\public\\AutoRun.inf\n  AccountName: seb, DomainName: seb-win7\n        OPEN_EXISTING\n        ShareMode = 0x7\n        FILE_SHARE_READ\n        FILE_SHARE_WRITE\n        FILE_SHARE_DELETE\n        AccessMode = 0x80\n        FILE_READ_ATTRIBUTES\n        FlagsAndAttributes = 0x2000000\n        FILE_FLAG_BACKUP_SEMANTICS\n        error code = 2\nCreateFile status = -2\nCreate 0004\nCreateDisposition 0x00000001\nCreateFile : c:\\tmp\\public\\N*\n  AccountName: seb, DomainName: seb-win7\n        OPEN_EXISTING\n        ShareMode = 0x7\n        FILE_SHARE_READ\n        FILE_SHARE_WRITE\n        FILE_SHARE_DELETE\n        AccessMode = 0x80\n        FILE_READ_ATTRIBUTES\n        FlagsAndAttributes = 0x2000000\n        FILE_FLAG_BACKUP_SEMANTICS\n        error code = 123\nCreateFile status = -123\nCreate 0005\nCreateDisposition 0x00000001\nCreateFile : c:\\tmp\\public\\N*\n  AccountName: seb, DomainName: seb-win7\n        OPEN_EXISTING\n        ShareMode = 0x7\n        FILE_SHARE_READ\n        FILE_SHARE_WRITE\n        FILE_SHARE_DELETE\n        AccessMode = 0x80\n        FILE_READ_ATTRIBUTES\n        FlagsAndAttributes = 0x2000000\n        FILE_FLAG_BACKUP_SEMANTICS\n        error code = 123\nCreateFile status = -123\nCreate 0006\nOpenDirectory : c:\\tmp\\public\\\nCreateFile status = 0\nQueryVolumeInfo 0006\nCleanup 0006\nCleanup: c:\\tmp\\public\\\nClose 0006\nCreate 0007\nClose: c:\\tmp\\public\\\nCreateDisposition 0x00000001\nCreateFile : c:\\tmp\\public\\N*\n  AccountName: seb, DomainName: seb-win7\n        OPEN_EXISTING\n        ShareMode = 0x7\n        FILE_SHARE_READ\n        FILE_SHARE_WRITE\n        FILE_SHARE_DELETE\n        AccessMode = 0x80\n        FILE_READ_ATTRIBUTES\n        FlagsAndAttributes = 0x2000000\n        FILE_FLAG_BACKUP_SEMANTICS\n        error code = 123\nCreateFile status = -123\nCreate 0008\nCreateDisposition 0x00000001\nCreateFile : c:\\tmp\\public\\N*\n  AccountName: seb, DomainName: seb-win7\n        OPEN_EXISTING\n        ShareMode = 0x7\n        FILE_SHARE_READ\n        FILE_SHARE_WRITE\n        FILE_SHARE_DELETE\n        AccessMode = 0x80\n        FILE_READ_ATTRIBUTES\n        FlagsAndAttributes = 0x2000000\n        FILE_FLAG_BACKUP_SEMANTICS\n        error code = 123\nCreateFile status = -123\nCreate 0009\nOpenDirectory : c:\\tmp\\public\\\nCreateFile status = 0\nFindFiles 0009\nFindFiles :c:\\tmp\\public\\\n        FindFiles return 3 entries in c:\\tmp\\public\\\nindex from 0\nFileMatch? : . (N,0,0)\nFileMatch? : .. (N,0,0)\nFileMatch? : New folder (N,0,0)\n  =>return single entry\nindex to 1\nindex from 1\nFileMatch? : . (N,1,0)\nFileMatch? : .. (N,1,0)\nFileMatch? : New folder (N,1,0)\n  STATUS_NO_MORE_FILES\nCleanup 0009\nCleanup: c:\\tmp\\public\\\nClose 0009\nClose: c:\\tmp\\public\\\nCreate 0010\nOpenDirectory : c:\\tmp\\public\\New folder\nCreateFile status = 0\nGetFileInfo 0010\nGetFileInfo : c:\\tmp\\public\\New folder\n        GetFileInformationByHandle success, file size = 0\nSetFileInfo 0010  13\nDeleteDirectory c:\\tmp\\public\\New folder\n  DispositionInfo status = STATUS_CANNOT_DELETE\nCleanup 0010\nCleanup: c:\\tmp\\public\\New folder\nClose 0010\nClose: c:\\tmp\\public\\New folder\nCreate 0011\nCreateDirectory : c:\\tmp\\public\\test\nCreateFile status = 0\nCleanup 0011\nCleanup: c:\\tmp\\public\\test\n        invalid handle\nClose 0011\nClose: c:\\tmp\\public\\test\nCreate 0012\nOpenDirectory : c:\\tmp\\public\\\nCreateFile status = 0\nQueryVolumeInfo 0012\nCleanup 0012\nCleanup: c:\\tmp\\public\\\nClose 0012\nCreate 0013\nClose: c:\\tmp\\public\\\nCreateDisposition 0x00000001\nCreateFile : c:\\tmp\\public\\\n  AccountName: seb, DomainName: seb-win7\n        OPEN_EXISTING\n        ShareMode = 0x7\n        FILE_SHARE_READ\n        FILE_SHARE_WRITE\n        FILE_SHARE_DELETE\n        AccessMode = 0x80\n        FILE_READ_ATTRIBUTES\n        FlagsAndAttributes = 0x2000000\n        FILE_FLAG_BACKUP_SEMANTICS\nCreateFile status = 0\nGetFileInfo 0013\nGetFileInfo : c:\\tmp\\public\\\n        GetFileInformationByHandle success, file size = 4096\nCleanup 0013\nCleanup: c:\\tmp\\public\\\nClose 0013\nCreate 0014\nClose: c:\\tmp\\public\\\nCreateDisposition 0x00000001\nCreateFile : c:\\tmp\\public*\n  AccountName: seb, DomainName: seb-win7\n        OPEN_EXISTING\n        ShareMode = 0x7\n        FILE_SHARE_READ\n        FILE_SHARE_WRITE\n        FILE_SHARE_DELETE\n        AccessMode = 0x80\n        FILE_READ_ATTRIBUTES\n        FlagsAndAttributes = 0x2000000\n        FILE_FLAG_BACKUP_SEMANTICS\n        error code = 123\nCreateFile status = -123\nCreate 0015\nOpenDirectory : c:\\tmp\\public\\\nCreateFile status = 0\nQueryVolumeInfo 0015\nCleanup 0015\nCleanup: c:\\tmp\\public\\\nClose 0015\nClose: c:\\tmp\\public\\\nCreate 0016\nOpenDirectory : c:\\tmp\\public\\\nCreateFile status = 0\nFindFiles 0016\nFindFiles :c:\\tmp\\public\\\n        FindFiles return 4 entries in c:\\tmp\\public\\\nindex from 0\nFileMatch? : . (,0,0)\n  =>return single entry\nindex to 1\nindex from 1\nFileMatch? : . (,1,0)\nFileMatch? : .. (,1,1)\n  =>return\nFileMatch? : New folder (,1,2)\n  =>return\nFileMatch? : test (,1,3)\n  =>return\nindex to 4\nindex from 4\nFileMatch? : . (,4,0)\nFileMatch? : .. (,4,1)\nFileMatch? : New folder (,4,2)\nFileMatch? : test (*,4,3)\n  STATUS_NO_MORE_FILES\nCleanup 0016\nCleanup: c:\\tmp\\public\\\nClose 0016\nCreate 0017\nClose: c:\\tmp\\public\\\nOpenDirectory : c:\\tmp\\public\\\nCreateFile status = 0\nQueryVolumeInfo 0017\nCleanup 0017\nCleanup: c:\\tmp\\public\\\nClose 0017\nClose: c:\\tmp\\public\\\nCreate 0018\nOpenDirectory : c:\\tmp\\public\\test\nCreateFile status = 0\nGetFileInfo 0018\nGetFileInfo : c:\\tmp\\public\\test\n        GetFileInformationByHandle success, file size = 0\nSetFileInfo 0018  13\nDeleteDirectory c:\\tmp\\public\\test\n  DispositionInfo status = STATUS_CANNOT_DELETE\nCleanup 0018\nCleanup: c:\\tmp\\public\\test\nClose 0018\nClose: c:\\tmp\\public\\test\nCreate 0019\nOpenDirectory : c:\\tmp\\public\\\nCreateFile status = 0\nQueryVolumeInfo 0019\nQueryVolumeInfo 0019\nCleanup 0019\nCleanup: c:\\tmp\\public\\\nClose 0019\nCreate 0020\nClose: c:\\tmp\\public\\\nOpenDirectory : c:\\tmp\\public\\\nCreateFile status = 0\nQueryVolumeInfo 0020\nCleanup 0020\nCleanup: c:\\tmp\\public\\\nClose 0020\nClose: c:\\tmp\\public\\\nCleanup 0001\nCleanup: c:\\tmp\\public\\\nClose 0001\nClose: c:\\tmp\\public\\\nDokanRemoveMountPoint t:\nDokanControl recieved DeviceName:\\Volume{d6cc17c5-1771-4085-bce7-964f1e9f5de9}\nsend release\n^C\nW:\\lofe\\windows\\dokan_mirror\\Win32\\Debug>\n```\nI think the reason is rather clear, is there anything wrong in my initial understanding of the problem ?\n. I use windows 7 64bit ultimate k (k for korean edition), so yes, NTFS.\nOn Sep 8, 2015 6:08 AM, \"Maxime C.\" notifications@github.com wrote:\n\n@acapola https://github.com/acapola You're probably right but we cannot\nreproduce the issue on our side.\nWhich operating system are you using? Which file system are you mirroring\n(NTFS I believe)?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/54#issuecomment-138376564.\n. Sorry I don't see what the experiment brings, all I can see is according to Microsoft's documentation.\nMSDN is rather clear on the behavior of that function:\nIf the function fails or fails to locate files from the search string in the lpFileName parameter, the return value is INVALID_HANDLE_VALUE and the contents of lpFindFileData are indeterminate. To get extended error information, call the GetLastError function.\nIf the function fails because no matching files can be found, the GetLastError function returns ERROR_FILE_NOT_FOUND.\n\nSo we end up doing FindClose(INVALID_HANDLE_VALUE), that can't be right.\nI would fix it this way:\nhFind = FindFirstFile(filePath, &findData);\nif (hFind == INVALID_HANDLE_VALUE) return 0;\nwhile (hFind != INVALID_HANDLE_VALUE) {\n...\n. ",
    "Corillian": "Here's the log from the Visual Studio debug console:\n```\nThe thread 0x15bc has exited with code 0 (0x0).\nSftpManager::Initialize() WSAStartup() succeeded\nSftpManager::Initialize() libssh2 initialized\nDokan: debug mode on\ndevice opened\nmounted: M:\\ -> \\Volume{d6cc17c5-173a-4085-bce7-964f1e9f5de9}\nCreate 0000\nSftpOpenDirectory()\nCreateFile status = 0\nQueryVolumeInfo 0000\nSftpGetVolumeInformation()\nQueryVolumeInfo 0000\nSftpGetVolumeInformation()\nCleanup 0000\nSftpCleanup()\nClose 0000\nSftpCloseFile()\nCreate 0001\nCreateDisposition 0x00000001\nCreateFile status = -2\nCreate 0002\nCreateDisposition 0x00000001\nCreateFile status = -2\nCreate 0003\nSftpOpenDirectory()\nCreateFile status = 0\nQueryVolumeInfo 0003\nSftpGetVolumeInformation()\nQueryVolumeInfo 0003\nSftpGetVolumeInformation()\nCreate 0004\nCleanup 0003\nSftpCleanup()\nCreate 0005\nSftpOpenDirectory()\nClose 0003\nSftpCloseFile()\nCreateFile status = 0\nSftpOpenDirectory()\nCreateFile status = 0\nQueryVolumeInfo 0005\nQueryVolumeInfo 0004\nSftpGetVolumeInformation()\nSftpGetVolumeInformation()\nQueryVolumeInfo 0004\nSftpGetVolumeInformation()\nQueryVolumeInfo 0005\nSftpGetVolumeInformation()\nCreate 0006\nCreateDisposition 0x00000001\nCreateFile status = 0\nCleanup 0004\nGetFileInfo 0006\nSftpGetFileInformation()\nSftpCleanup()\nCleanup 0005\nSftpCleanup()\nCreate 0007\nCreateDisposition 0x00000001\nCreateFile status = 0\nClose 0005\nSftpCloseFile()\nClose 0004\nSftpCloseFile()\nGetFileInfo 0007\nSftpGetFileInformation()\nDokanRemoveMountPoint M:\nDokanRemoveMountPoint failed\nDokanRemoveMountPoint M:\nDokanRemoveMountPoint failed\nDokanRemoveMountPoint M:\nDokanRemoveMountPoint failed\nCleanup 0006\nSftpCleanup()\nClose 0006\nSftpCloseFile()\nCleanup 0007\nSftpCleanup()\nClose 0007\nSftpCloseFile()\nDokanRemoveMountPoint M:\nDokanRemoveMountPoint failed\nDokanRemoveMountPoint M:\nDokanRemoveMountPoint failed\nDokanRemoveMountPoint M:\nDokanRemoveMountPoint failed\nFirst-chance exception at 0x0000000077064B62 (kernel32.dll) in SftpDrive.exe: 0x40010005: Control-C.\nThe thread 0xa80 has exited with code 0 (0x0).\nThe thread 0x1a40 has exited with code 0 (0x0).\nSftpManager::Cleanup() libssh2 exited\nSftpManager::Cleanup() WSACleanup()\nDokanRemoveMountPoint M:\nDokanRemoveMountPoint failed\nThe thread 0x4610 has exited with code 0 (0x0).\nThe thread 0x4ee8 has exited with code 0 (0x0).\nThe thread 0x4ed8 has exited with code 0 (0x0).\nThe thread 0x78c has exited with code 0 (0x0).\nThe thread 0x3fec has exited with code 0 (0x0).\nThe thread 0x4a18 has exited with code 0 (0x0).\nDokanRemoveMountPoint M:\\\nDokanControl recieved DeviceName:\\Volume{d6cc17c5-173a-4085-bce7-964f1e9f5de9}\nsend release\nThe thread 0x4670 has exited with code 0 (0x0).\nThe thread 0x4eac has exited with code 0 (0x0).\nThe program '[11540] SftpDrive.exe' has exited with code 0 (0x0).\n```\nI took the following steps:\n1. I executed the application as an x64 console application running on Windows 7 with Visual Studio 2013\n2. I entered console output to force the application to unmount the drive and exit. This is represented by the first block of DokanRemoveMountPoint failed log entries.\n3. I then executed .\\dokanctl.exe /u M /f from an administrator powershell which returned:\nmounter path C:\\Program Files\\Dokan\\DokanLibrary\\mounter.exe\ndriver path C:\\WINDOWS\\system32\\drivers\\dokan.sys\nUnmount success: MUnmount status = 0\n1. The Dokan thread still hadn't exited so I tried executing some quit/unmount commands again. This is represented by the second block of DokanRemoveMountPoint failed log entries.\n2. I used ctrl + c to kill the console application. During application teardown, after main() returned, you get an unmount failure. After the unmount failure the DokainMain() thread is killed by the OS which is followed by an unmount success:\n```\nFirst-chance exception at 0x0000000077064B62 (kernel32.dll) in SftpDrive.exe: 0x40010005: Control-C.\nThe thread 0xa80 has exited with code 0 (0x0).\nThe thread 0x1a40 has exited with code 0 (0x0).\nSftpManager::Cleanup() libssh2 exited\nSftpManager::Cleanup() WSACleanup() <---- End of main()\nDokanRemoveMountPoint M:\nDokanRemoveMountPoint failed\n<------------- DokainMain() thread is one of the following ------------->\nThe thread 0x4610 has exited with code 0 (0x0).\nThe thread 0x4ee8 has exited with code 0 (0x0).\nThe thread 0x4ed8 has exited with code 0 (0x0).\nThe thread 0x78c has exited with code 0 (0x0).\nThe thread 0x3fec has exited with code 0 (0x0).\nThe thread 0x4a18 has exited with code 0 (0x0).\n<---------------------------------------------------------------------------------->\nDokanRemoveMountPoint M:\\\nDokanControl recieved DeviceName:\\Volume{d6cc17c5-173a-4085-bce7-964f1e9f5de9}\nsend release\nThe thread 0x4670 has exited with code 0 (0x0).\nThe thread 0x4eac has exited with code 0 (0x0).\nThe program '[11540] SftpDrive.exe' has exited with code 0 (0x0).\n```\nI'll try out Mirror.exe and enable more robust logging within the next few days.\n. I'm afraid my inactivity hardly means the problem is resolved. I have plenty of things to work on and am unable to devote all of my time to figuring out why this driver is hanging. To that end I have been unable to gather any debug output as my locally built copy of the driver fails to install with:\nmounter path C:\\Dokan\\x64\\Debug\\mounter.exe\ndriver path C:\\WINDOWS\\system32\\drivers\\dokan.sys\ndriver install failedmounter install failed\nI'm using the source tagged at v0.7.4. I followed your build/install instructions and I am running windows 7 x64 in allow unsigned drivers mode. I just noticed you released the pre-release for 0.8.0, I'll give that a try and see if I still have this problem.\n. Ok I got the install issues sorted out. It looks like my service was hung due to the inability to unmount Dokan, I hadn't explicitly killed the process, and to make a long story short when I ran the 0.7.4 uninstaller stuff got corrupted and created non-obvious issues. Unfortunately even though I now have my debug build of Dokan installed and running I am not getting any additional debug info in DebugView or my Visual Studio output window. I double checked HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\Debug Print Filter property IHVDRIVER was set to 0xd, I ran bcdedit -debug on, dokanctl.exe /d 9 and I'm not getting any additional information.\n. Alrighty I got the debug output. My WinDbg kernel capture was turned off. GitHub won't let me upload the log file but you can find it at http://pastebin.com/ZPqvk5a0. The major highlights are when I call DokanUnmount() I get the following output:\n[DokanFS] ==> DokanDispatchIoControl\n[DokanFS]   ProcessId 4828\n[DokanFS]    => DokanGlobalDeviceControl\n[DokanFS] DokanRegisterPendingIrpForService\n[DokanFS] ==> DokanRegisterPendingIrpMain\n[DokanFS] <== DokanRegisterPendingIrpMain\n[DokanFS]    <= DokanGlobalDeviceControl\n[DokanFS] => NotificationLoop\n[DokanFS] <== DokanDispatchIoControl\n[DokanFS] <= NotificationLoop\n[DokanFS]   status = STATUS_SUCCESS\nDokanUnmount() returns false and my Dokan thread continues to be hung in DokanMain(). When I manually unmount the drive with dokanctl.exe /u M /f I get:\n[DokanFS] ==> DokanDispatchIoControl\n[DokanFS]   ProcessId 4828\n[DokanFS]    => DokanGlobalDeviceControl\n[DokanFS] DokanRegisterPendingIrpForService\n[DokanFS] ==> DokanRegisterPendingIrpMain\n[DokanFS] <== DokanRegisterPendingIrpMain\n[DokanFS]    <= DokanGlobalDeviceControl\n[DokanFS] <== DokanDispatchIoControl\n[DokanFS] => NotificationLoop\n[DokanFS] <= NotificationLoop\n[DokanFS] ==> ReleaseTimeoutPendingIRP\n[DokanFS]   IrpQueue is Empty\n[DokanFS]   status = STATUS_SUCCESS\nwhich still doesn't cause DokanMain() to return and when I kill the process I get:\n00001062    22.74924088 [DokanFS] DokanRegisterPendingIrpForService \n00001063    22.74924278 [DokanFS] ==> DokanRegisterPendingIrpMain   \n00001064    22.74924469 [DokanFS] <== DokanRegisterPendingIrpMain   \n00001065    22.74924850 [DokanFS]    <= DokanGlobalDeviceControl    \n00001066    22.74924850 [DokanFS] <== DokanDispatchIoControl    \n00001067    22.74925423 [DokanFS] => NotificationLoop   \n00001068    22.74925995 [DokanFS] <= NotificationLoop   \n00001069    24.00300598 [DokanFS]   status = STATUS_SUCCESS \n00001070    24.65510368 [DokanFS] ==> DokanIrpCancelRoutine \n00001071    24.65510750 [DokanFS]    canceled IRP #0    \n00001072    24.65510750 [DokanFS] ==> DokanIrpCancelRoutine \n00001073    24.65511131 [DokanFS] <== DokanIrpCancelRoutine \n00001074    24.65511322 [DokanFS]    canceled IRP #0    \n00001075    24.65511322 [DokanFS] ==> DokanIrpCancelRoutine \n00001076    24.65511513 [DokanFS] <== DokanIrpCancelRoutine \n00001077    24.65511513 [DokanFS]    canceled IRP #0    \n00001078    24.65511703 [DokanFS] <== DokanIrpCancelRoutine \n00001079    24.65512466 [DokanFS] ==> DokanIrpCancelRoutine \n00001080    24.65512657 [DokanFS]    canceled IRP #0    \n00001081    24.65512657 [DokanFS] <== DokanIrpCancelRoutine \n00001082    24.65513992 [DokanFS] ==> DokanIrpCancelRoutine \n00001083    24.65514183 [DokanFS]    canceled IRP #0    \n00001084    24.65514374 [DokanFS] <== DokanIrpCancelRoutine \n00001085    24.65533257 [DokanFS] ==> DokanCleanup  \n00001086    24.65533447 [DokanFS]   ProcessId 4376  \n00001087    24.65533829 [DokanFS]   FileName: (null) FCB.FileName: (null)   \n00001088    24.65534019 [DokanFS]   status = STATUS_SUCCESS \n00001089    24.65534210 [DokanFS] <== DokanCleanup  \n00001090    24.65534401 [DokanFS] ==> DokanClose    \n00001091    24.65534782 [DokanFS]   ProcessId 4376  \n00001092    24.65534782 [DokanFS]   FileName: (null) FCB.FileName: (null)   \n00001093    24.65534973 [DokanFS]   status = STATUS_SUCCESS \n00001094    24.65535164 [DokanFS] <== DokanClose    \n00001095    24.65535355 [DokanFS] ==> DokanCleanup  \n00001096    24.65535736 [DokanFS]   ProcessId 4376  \n00001097    24.65535927 [DokanFS]   FileName: (null) FCB.FileName: (null)   \n00001098    24.65536118 [DokanFS]    IdType = DCB   \n00001099    24.65536118 [DokanFS]    ccb is NULL    \n00001100    24.65536308 [DokanFS]   status = STATUS_SUCCESS \n00001101    24.65536690 [DokanFS] <== DokanCleanup  \n00001102    24.65536880 [DokanFS] ==> DokanClose    \n00001103    24.65537071 [DokanFS]   ProcessId 4376  \n00001104    24.65537453 [DokanFS]   FileName: (null) FCB.FileName: (null)   \n00001105    24.65537643 [DokanFS]    IdType = DCB   \n00001106    24.65537643 [DokanFS]    ccb is NULL    \n00001107    24.65537834 [DokanFS]   status = STATUS_SUCCESS \n00001108    24.65538025 [DokanFS] <== DokanClose    \n00001109    24.65538406 [DokanFS] ==> DokanCleanup  \n00001110    24.65538406 [DokanFS]   ProcessId 4376  \n00001111    24.65538597 [DokanFS]   FileName: (null) FCB.FileName: (null)   \n00001112    24.65538788 [DokanFS]    IdType = DCB   \n00001113    24.65538979 [DokanFS]    ccb is NULL    \n00001114    24.65538979 [DokanFS]   status = STATUS_SUCCESS \n00001115    24.65539360 [DokanFS] <== DokanCleanup  \n00001116    24.65539551 [DokanFS] ==> DokanClose    \n00001117    24.65539742 [DokanFS]   ProcessId 4376  \n00001118    24.65539932 [DokanFS]   FileName: (null) FCB.FileName: (null)   \n00001119    24.65539932 [DokanFS]    IdType = DCB   \n00001120    24.65540314 [DokanFS]    ccb is NULL    \n00001121    24.65540504 [DokanFS]   status = STATUS_SUCCESS \n00001122    24.65540504 [DokanFS] <== DokanClose    \n00001123    24.65540695 [DokanFS] ==> DokanCleanup  \n00001124    24.65541077 [DokanFS]   ProcessId 4376  \n00001125    24.65541267 [DokanFS]   FileName: (null) FCB.FileName: (null)   \n00001126    24.65541458 [DokanFS]    IdType = DCB   \n00001127    24.65541458 [DokanFS]    ccb is NULL    \n00001128    24.65541649 [DokanFS]   status = STATUS_SUCCESS \n00001129    24.65542030 [DokanFS] <== DokanCleanup  \n00001130    24.65542030 [DokanFS] ==> DokanClose    \n00001131    24.65542221 [DokanFS]   ProcessId 4376  \n00001132    24.65542412 [DokanFS]   FileName: (null) FCB.FileName: (null)   \n00001133    24.65542603 [DokanFS]    IdType = DCB   \n00001134    24.65542603 [DokanFS]    ccb is NULL    \n00001135    24.65542984 [DokanFS]   status = STATUS_SUCCESS \n00001136    24.65542984 [DokanFS] <== DokanClose    \n00001137    24.65543175 [DokanFS] ==> DokanCleanup  \n00001138    24.65543365 [DokanFS]   ProcessId 4376  \n00001139    24.65543365 [DokanFS]   FileName: (null) FCB.FileName: (null)   \n00001140    24.65543365 [DokanFS]    IdType = DCB   \n00001141    24.65543556 [DokanFS]    ccb is NULL    \n00001142    24.65543556 [DokanFS]   status = STATUS_SUCCESS \n00001143    24.65543938 [DokanFS] <== DokanCleanup  \n00001144    24.65543938 [DokanFS] ==> DokanClose    \n00001145    24.65544128 [DokanFS]   ProcessId 4376  \n00001146    24.65544319 [DokanFS]   FileName: (null) FCB.FileName: (null)   \n00001147    24.65544319 [DokanFS]    IdType = DCB   \n00001148    24.65544319 [DokanFS]    ccb is NULL    \n00001149    24.65544701 [DokanFS]   status = STATUS_SUCCESS \n00001150    24.65544701 [DokanFS] <== DokanClose    \n00001151    24.65544891 [DokanFS] ==> DokanCleanup  \n00001152    24.65544891 [DokanFS]   ProcessId 4376  \n00001153    24.65545082 [DokanFS]   FileName: (null) FCB.FileName: (null)   \n00001154    24.65545273 [DokanFS]    IdType = DCB   \n00001155    24.65545273 [DokanFS]    ccb is NULL    \n00001156    24.65545273 [DokanFS]   status = STATUS_SUCCESS \n00001157    24.65545654 [DokanFS] <== DokanCleanup  \n00001158    24.65545654 [DokanFS] ==> DokanClose    \n00001159    24.65545845 [DokanFS]   ProcessId 4376  \n00001160    24.65545845 [DokanFS]   FileName: (null) FCB.FileName: (null)   \n00001161    24.65546036 [DokanFS]    IdType = DCB   \n00001162    24.65546036 [DokanFS]    ccb is NULL    \n00001163    24.65546227 [DokanFS]   status = STATUS_SUCCESS \n00001164    24.65546227 [DokanFS] <== DokanClose    \n00001165    24.65546608 [DokanFS] ==> DokanCleanup  \n00001166    24.65546608 [DokanFS]   ProcessId 4376  \n00001167    24.65546799 [DokanFS]   FileName: (null) FCB.FileName: (null)   \n00001168    24.65546799 [DokanFS]    IdType = DCB   \n00001169    24.65546989 [DokanFS]    ccb is NULL    \n00001170    24.65546989 [DokanFS]   status = STATUS_SUCCESS \n00001171    24.65547180 [DokanFS] <== DokanCleanup  \n00001172    24.65547180 [DokanFS] ==> DokanClose    \n00001173    24.65547562 [DokanFS]   ProcessId 4376  \n00001174    24.65547562 [DokanFS]   FileName: (null) FCB.FileName: (null)   \n00001175    24.65547752 [DokanFS]    IdType = DCB   \n00001176    24.65547752 [DokanFS]    ccb is NULL    \n00001177    24.65547943 [DokanFS]   status = STATUS_SUCCESS \n00001178    24.65547943 [DokanFS] <== DokanClose    \n00001179    25.93808556 [DokanFS] ==> ReleaseTimeoutPendingIRP  \n00001180    25.93810654 [DokanFS]   IrpQueue is Empty   \n00001181    30.93859482 [DokanFS] ==> ReleaseTimeoutPendingIRP  \n00001182    30.93859863 [DokanFS]   IrpQueue is Empty   \n00001183    35.93759537 [DokanFS] ==> ReleaseTimeoutPendingIRP  \n00001184    35.93759918 [DokanFS]   IrpQueue is Empty   \n00001185    40.93784332 [DokanFS] ==> ReleaseTimeoutPendingIRP  \n00001186    40.93784332 [DokanFS]   IrpQueue is Empty   \n00001187    40.93785095 [DokanFS]   Timeout, force to umount    \n00001188    40.93785095 [DokanFS] ==> DokanUnmount  \n00001189    40.93785477 [DokanFS]   Send Unmount to Service : \\Volume{d6cc17c5-1731-4085-bce7-964f1e9f5de9} \n00001190    40.93786621 [DokanFS] => NotificationLoop   \n00001191    40.93787003 [DokanFS] ==> DokanStopCheckThread  \n00001192    40.93787003 [DokanFS]   status = STATUS_SUCCESS \n00001193    40.93787384 [DokanFS] <= NotificationLoop   \n00001194    40.93787384 [DokanFS] <== DokanStopCheckThread  \n00001195    40.93787384 [DokanFS] ==> DokanStopCheckThreadInternal  \n00001196    40.93787384 [DokanFS] ==> DokanStopEventNotificationThread  \n00001197    40.93787766 [DokanFS] <== DokanStopEventNotificationThread  \n00001198    40.93788528 [DokanFS]   Delete Symbolic Name: \\DosDevices\\Global\\Volume{d6cc17c5-1731-4085-bce7-964f1e9f5de9}   \n00001199    40.93789673 [DokanFS]   FCB allocated: 8    \n00001200    40.93789673 [DokanFS]   FCB     freed: 8    \n00001201    40.93789673 [DokanFS]   CCB allocated: 9    \n00001202    40.93789673 [DokanFS]   CCB     freed: 9    \n00001203    40.93790436 [DokanFS]   Delete DeviceObject \n00001204    40.93790817 [DokanFS]   Delete Disk DeviceObject    \n00001205    40.93790817 [DokanFS] <== DokanUnmount  \n00001206    40.93791199 [DokanFS]   DokanTimeoutThread catched KillEvent    \n00001207    40.93791199 [DokanFS] ==> DokanStopEventNotificationThreadInternal  \n00001208    40.93791199 [DokanFS] <== DokanTimeoutThread    \n00001209    40.93798828 [DokanFS] <== DokanStopCheckThreadInternal  \n00001210    40.93799591 [DokanFS] <== NotificationThread    \n00001211    40.93799973 [DokanFS] <== DokanStopEventNotificationThreadInternal  \n00001212    40.93812943 [DokanFS] ==> DokanDispatchIoControl    \n00001213    40.93813324 [DokanFS]   ProcessId 4828  \n00001214    40.93813324 [DokanFS]    => DokanGlobalDeviceControl    \n00001215    40.93813324 [DokanFS] DokanRegisterPendingIrpForService \n00001216    40.93814087 [DokanFS] ==> DokanRegisterPendingIrpMain   \n00001217    40.93814087 [DokanFS] <== DokanRegisterPendingIrpMain   \n00001218    40.93814087 [DokanFS]    <= DokanGlobalDeviceControl    \n00001219    40.93814468 [DokanFS] <== DokanDispatchIoControl\nI hope that helps, let me know if there's anything else I can assist with.\n. @marinkobabic I don't have any mounter service output beyond:\n[17816] Service (DokanMounter) installed\n[17816] Service (DokanMounter) started\n. Ok I have discovered why the call to DokanUnmount() is failing. My code does the following:\nC++\nif(!DokanUnmount(m_localDriveRoot[0])) // m_localDriveRoot[0] resolves to L'M'\nat which point DokanUnmount() does the following:\nC++\nBOOL DOKANAPI\nDokanUnmount(\n    WCHAR   DriveLetter)\n{\n    WCHAR mountPoint[] = L\"M:\";  // <--- FAIL\n    mountPoint[0] = DriveLetter; // <--- FAIL\n    return DokanRemoveMountPoint(mountPoint);\n}\nThe issue is that the Dokan mounter service expects the drive name to be formatted as M:\\ and when it isn't FindMountEntry() is unable to locate the mounted drive:\nC++\nfor (listEntry = g_MountList.Flink; listEntry != &g_MountList; listEntry = listEntry->Flink) {\n        mountEntry = CONTAINING_RECORD(listEntry, MOUNT_ENTRY, ListEntry);\n        if (useMountPoint) {\n            if (wcscmp(DokanControl->MountPoint, mountEntry->MountControl.MountPoint) == 0) { // <--- FAIL\n                found = TRUE;\n                break;\n            }\n        } else {\n            if (wcscmp(DokanControl->DeviceName, mountEntry->MountControl.DeviceName) == 0) {\n                found = TRUE;\n                break;\n            }\n        }\n    }\ndokanctl.exe also has the same problem unless the user correctly supplies the mount point in the format C:\\:\nC++\ncontrol.Type = DOKAN_CONTROL_UNMOUNT;\ncontrol.Option = DOKAN_CONTROL_OPTION_FORCE_UNMOUNT;\nwcscpy_s(control.MountPoint, sizeof(control.MountPoint) / sizeof(WCHAR), MountPoint); // <--- POSSIBLE FAIL\nDokanMountControl(&control);\nhowever dokanctl.exe would still succeed in unmounting the drive because of the /f flag which causes mounter.exe to attempt to unmount a mount point even if it can't be located:\nC++\nDbgPrintW(L\"DokanControl MountEntry not found. Try unmount '%s' force: %d\\n\", Control->MountPoint, Control->Option);\nif (Control->Option == DOKAN_CONTROL_OPTION_FORCE_UNMOUNT && DokanControlUnmount(Control->MountPoint)) {\n    Control->Status = DOKAN_CONTROL_SUCCESS;\n    break;\n}\nNow that DokanUnmount() succeeds my call to DokanMain() properly returns DOKAN_SUCCESS. I don't understand why .\\dokanctl.exe /u M /f did not cause DokanMain() to return before so it seems likely there's still a problem with unmounting somewhere. A pull request will be forthcoming shortly.\n. Ok this is a bit frustrating. The documentation explicitly states that when mounting I should use a drive letter formatted as M:\\ or a path (which it shows without a trailing \\):\nC++\n   typedef struct _DOKAN_OPTIONS {\n       USHORT  Version;  // Supported Dokan Version, ex. \"530\" (Dokan ver 0.5.3)\n       ULONG   ThreadCount;  // number of threads to be used\n       ULONG   Options;  // combination of DOKAN_OPTIONS_*\n       ULONG64 GlobalContext;  // FileSystem can use this variable\n       LPCWSTR MountPoint;  // mount point \"M:\\\" (drive letter) or\n                            // \"C:\\mount\\dokan\" (path in NTFS)\n   } DOKAN_OPTIONS, *PDOKAN_OPTIONS;\nThat's it, that's all there is for documentation right there. For unmounting the docs mention File system can be unmounted by calling the function DokanUnmount or DokanRemoveMountPoint. - nothing else. Commit a28a915 broke DokanUnmount() for what the documentation says is the proper mount point format which is what caused me all of these problems. DokanUnmount() should have just been removed if it is no longer an acceptable way of unmounting. Either way the documentation definitely should have been updated to highlight DokanRemoveMountPoint() as the preferred method and why.\nOn top of that, commit a28a915 still doesn't solve the root problem: Dokan isn't normalizing mount paths. This is a major issue and if you noticed in my description above .\\dokanctl.exe /u is also broken unless you type, letter for case-sensitive letter, the exact string for the mount path. My commit provides some normalizing sanity if your mount path is nothing more than a drive letter. It fixes both DokanUnmount() and .\\dokanctl.exe /u for any mount path that is formatted as M, M:, or M:\\.\nTo summarize: Dokan should normalize mount paths and I suspect, at least for single letter drive mounts, it should also be case-insensitive.\n. Hey sorry got sidetracked with working on other stuff. Yeah I can add normalization to mirror and mount.\n. Ok I added the normalization to mounter.exe as that seems to be the only place where it matters. Drive letter names are normalized to the format \"C:\\\" upon insertion into g_MountList as well as when g_MountList is being searched. I also updated this branch to the latest on master. Let me know if I missed anything.\n. My expectation is that in the user mode call to DOKAN_OPERATIONS.CreateFile dwFlagsAndAttributes should have all of the flags that were passed into the original call to CreateFile(). It's missing all flags with values above 0xffff. If you look at https://msdn.microsoft.com/en-us/library/windows/desktop/aa363858(v=vs.85).aspx that's quite a few flags - the most important of which, for my purposes, are those controlling caching behavior.\n. Reading more about ZwCreateFile() I think that the best solution would be changing the current DOKAN_OPERATIONS.CreateFile argument list to mirror that of ZwCreateFile(). There's a lot of information that gets lost by attempting to convert the information supplied to ZwCreateFile() to the format accepted by CreateFile(). If maintaining backwards compatibility is a concern we could always create another callback called DOKAN_OPERATIONS.ZwCreateFile however I think in this case it would be best to simply change the existing DOKAN_OPERATIONS.CreateFile and force anyone who's upgrading to update their CreateFile callback.\n. OK I can take care of this once I finish #79 as I would like both of these issues to be resolved for the next release.\n. @Liryna we had discussed the possibility of adding a separate function above. I suggested the name ZwCreateFile since its purpose is to mirror the kernel mode function of the same name. This tells the user what to google to look up the associated Windows documentation. In the end we had concluded that updating CreateFile was a better option as the next release breaks backward compatibility anyway. If you've changed your mind that's fine however I personally believe it's better to force an upgrade as it explicitly makes the user aware of new changes which I believe are important.\nAs for the SECURITY_DESCRIPTOR my understanding is that it's needed in the case where a file system supports the storage of security information such as NTFS. After doing some more research (https://msdn.microsoft.com/en-us/library/windows/hardware/ff538915(v=vs.85).aspx) I need to make some modifications to my SECURITY_DESCRIPTOR code. According to that article a new SECURITY_DESCRIPTOR should be created via SeAssignSecurity() and the result of that is what I should be passing through. Either way a SECURITY_DESCRIPTOR should be passed through to the user mode driver.\nI say we do the right thing now so that we don't have to worry about it in the future. I can fix up the \n. Addressing @billziss-gh's concerns:\n1. As mentioned above I don't consider this an issue. With the helper function I created this is a trivial change which is clearly documented in the Mirror example code.\n2. I agree with you that we should look into removing those functions however I kept my PR within the scope of #83. I have no problem with increasing the scope of the PR to cover those changes - particularly given that we're already instituting a breaking API change. We could also create a separate issue to cover those changes.\n3. The user mode code is still technically the driver level. We should not remove information relevant to the implementation of a file system driver just because we think it's hard to understand. That's how we ended up in this mess with missing flags in the first place. It's better to provide all of the information that may be needed along with helper functions to cover the most common usage scenarios.\n4. That's a pretty arbitrary measurement of danger\nI don't see the point in having a reserved parameter when you know you're going to need to solve that problem anyway.\n. 1) I'm pretty confident that anybody with the competence to write a file system driver can figure out they need to change a function signature and, at the very least, call a single helper function to get the same parameters they were using before.\n2) https://msdn.microsoft.com/en-us/library/windows/hardware/ff550613(v=vs.85).aspx\nhttps://msdn.microsoft.com/en-us/library/windows/hardware/ff540431(v=vs.85).aspx\nhttps://msdn.microsoft.com/en-us/library/windows/hardware/ff538915(v=vs.85).aspx\n. @billziss-gh it's required for handling access rights, security, and auditing for the ZwCreateFile operation. The links I provided give additional information on what that means and why you would need it. I don't see how using ZwCreateFile is any more misleading than CreateFile or CreateFileEx. The IRP handler more closely resembles ZwCreateFile than anything else we could call it.\nI don't think Dokan should handle ShareAccess unless it's something that can optionally be disabled. My driver needs to handle ShareAccess itself though I can imagine that's uncommon. Any modifications to the NTSTATUS handling and ShareAccess should probably be performed under a separate Issue/PR.\n@Liryna Ok I shall rename CreateFile to ZwCreateFile. I hadn't included the auditing information in my implementation of DOKAN_ACCESS_STATE since the MSDN docs currently says it's unused but I'll add it just to make sure we're as future proof as possible. It should be noted that according to the MSDN docs (https://msdn.microsoft.com/en-us/library/windows/hardware/ff538878(v=vs.85).aspx) all of the actual system auditing functions are kernel mode so even though I'll be passing the auditing info to the user mode driver a proper implementation may require Dokan to optionally implement it itself.\nI'll also update my SECURITY_DESCRIPTOR code to call SeAssignSecurity() (https://msdn.microsoft.com/en-us/library/windows/hardware/ff538915(v=vs.85).aspx) and pass the result of that to the user mode driver within our DOKAN_ACCESS_STATE. Lastly I'll go ahead and merge CreateDirectory and OpenDirectory.\n. Doh, I confess I only tested with reading as my driver doesn't do any writing (I only tested Mirror with reading as well). I'll see if I can repro on Win7 as that's all I have.\n. Hey @Liryna yeah that should fix it!\n. It's a minor increase in complexity and while I agree Dokan should make it as easy as possible that should not be at the expense of important functionality. It's impossible to write a file system driver without, on some level, understanding how a file system driver works. Mapping kernel create flags to user file attributes I consider a minor inconvenience, particularly since the documentation surrounding ZwCreateFile() is more or less just as good as CreateFile().\nFor C# interop the only challenging change should be accessing the SECURITY_DESCRIPTOR. For Java I have no idea.\n. We could always add a helper function that maps the kernel create flags to user file attributes if it's a common usage case.\n. The kernel flags contain more information than can be represented by the user mode dwFlagsAndAttributes however we can convert MirrorMapBit into a dokan.dll helper function if its a common usage case. As for CreateDisposition the old Dokan code suggest there's almost a 1 to 1 mapping between the kernel mode CreateDisposition and user mode dwCreationDisposition. Specifically the kernel CreateDisposition includes FILE_SUPERSEDE whereas there doesn't appear to be a user mode equivalent?\nI don't think we should make some parameters user mode and some kernel mode within the Dokan CreateFile callback. All or nothing and I think kernel mode flags with dokan.dll helper functions for common usage cases where appropriate would be the best middle ground. This way those who want it are able to exploit the full capability of the file system driver and those who don't want it can just call the helper functions to quickly map the kernel mode flags into user mode flags.\n. Hi @Liryna sorry for the delay in my response, I've got a lot going on. I'll take care of this in my PR!\n. Alright @Liryna that should hopefully do it. Let me know if you need me to look into anything else.\n. Alright hopefully this takes care of everything. I don't use FUSE and only have Windows 7 so I am unable to test alternative configurations. I also fixed memory corruption caused by a race condition in GetRawDeviceName().\n. Hi @Liryna,\nWhich part of the code are you referring to?\n. How is it guaranteed to always be a success?\n. That part looks fine, how is it dead code? Are you assuming CreateDirectory() will always succeed?\n. Ah yes that is dead code. It's leftover from something I ended up removing. Sry :\\\n. Yeah go ahead\n. I'll take care of it\n. Alrighty I just submitted my pull request (https://github.com/dokan-dev/dokany/pull/125). Currently the 3rd party dependencies are not included in that PR so it won't build. We need to figure out what we want to do with them. The options are:\n1) I check them into the git repo, they're ~30mb in total size.\n2) We upload them somewhere and the bootstrapper can actually download them when it runs\n. I can make an installer, where would you like me to upload it? Also I've been investigating Git LFS and it doesn't seem to work particularly well. In fact it isn't working at all I just get:\nGit LFS: (0 of 1 files) 0 B / 1.43 MB\nPost https://github.com/Corillian/dokany.git/info/lfs/objects/batch: EOF\nerror: failed to push some refs to 'https://github.com/Corillian/dokany.git'\nwhich isn't particularly helpful. On top of that by default a user only gets 1gb of storage and 1gb of bandwidth a month before they have to pay ~$4 a month which is a very low cap. Each exe is ~15mb or less so perhaps it's best if I just check it into the repo without LFS?\n. Burn already comes with the ability to download dependencies on demand (http://wixtoolset.org/documentation/manual/v3/xsd/wix/remotepayload.html). My concern is that if Microsoft ever changes the URL, which they do from time to time, it would break the installer which is why I had suggested previously that we host the dependencies ourselves or embed them into the installer. Also it should be noted that installing dependencies via custom actions is considered bad practice which is the whole reason WiX includes the Burn bootstrapper framework in the first place (which is what Microsoft uses for many of their installers btw).\n. NetFx doesn't support .net 4.6.1 yet (http://wixtoolset.org/issues/4976/). As soon as it does the bootstrapper can be updated accordingly. Are you suggesting that executing wget wouldn't be via a custom action?\n. Ah ok, I misunderstood the context of when we would be using wget. That's a good idea and probably the best solution outside of keeping the files in git. May I suggest we use MSBuild instead? The MSBuild extension pack already includes an extension for downloading a file called MSBuild.ExtensionPack.Web.WebClient: http://www.msbuildextensionpack.com/help/4.0.12.0/index.html\nI don't believe I'm using any C# 6 syntax or any other .NET 4.6.1 specific features though .NET 4.6.1 includes a number of low level enhancements for WPF. I don't really see the need for downgrading it just to use an existing NetFX extension when 4.6.1 will be supported soon however I doubt it would be an issue.\n.  Commit https://github.com/js69/dokany/commit/70bd0f25dd6b52fdc81e0750f7ccec874c8657f0 does not properly install the driver per the following:\nhttps://msdn.microsoft.com/en-us/library/windows/hardware/dn653561(v=vs.85).aspx\nhttps://msdn.microsoft.com/en-us/library/windows/hardware/ff548148(v=vs.85).aspx\nhttps://msdn.microsoft.com/en-us/library/windows/hardware/ff540023(v=vs.85).aspx\nhttps://msdn.microsoft.com/en-us/library/windows/hardware/ff540206(v=vs.85).aspx\n. It's failing because it can't find the x86 and x64 MSI's because they aren't being built. The easiest way to build the bootstrapper is to run .\\build.ps1 in powershell.\nAs for VS 2015 Update 1 you also need to update your Windows SDK to the latest.\n. You're free to integrate it into anything you'd like. While I would have preferred to avoid adding .NET as a dependency if you've ever attempted to create a robust UX using C/C++ then I think you'd agree that .NET is absolutely a necessary requirement. As you mention the people most likely to use the bootstrapper are developers and they're also the most likely to already have .NET installed. DokanInstaller_x64.msi and DokanInstaller_x86.msi can be distributed separately and they use the default WiX UI precisely for that reason.\n. I'm using Visual Studio 2015 Professional Update 1 and I don't have any problems. I haven't tried to open it in Community and I'm not entirely sure why that would be unsupported.\n. Have you updated to the latest version of the Windows SDK?\n. My understanding is that Community isn't the same as Express and it does in fact support plugins.\n. There's only 2 things I can think of that could be the problem. The first is sys.vcxproj:\n- <WindowsTargetPlatformVersion>10.0.10240.0</WindowsTargetPlatformVersion>\n+ <WindowsTargetPlatformVersion>10.0.10586.0</WindowsTargetPlatformVersion>\nAnd the 2nd is dokan.sln:\n- VisualStudioVersion = 14.0.23107.0\n+ VisualStudioVersion = 14.0.24720.0\n. I agree with @marinkobabic that it's probably best to require the client to ship the user-mode dll with the application. Forcing a single major version of the kernel driver however makes me nervous. In theory it shouldn't be a problem with a compatible API however there's no real way to guarantee that a new version of the kernel driver won't break existing applications. One possibility would be to have the kernel driver service operate as a lightweight version manager that loads a different dll for each version of the kernel mode driver. The user mode dll can specify the version of the kernel driver it's looking for during mounting. You could have a different kernel mode driver service for each major version and have the service load kernel dll's for each minor version or you could have one global service that handles all versions.\nIf the kernel driver service already exists and doesn't need to be updated installing a new kernel mode driver could be as simple as copying the new kernel mode dll. The kernel driver service could use a file system watcher to detect changes, verify the digital signature for any new driver dll's, and then load them.\nI'm not super familiar with all of the kernel mounting logic so none this may be a good idea but it's a thought =).\n. @Liryna yes but the kernel mode driver is still installed as a service. Presumably when a command to mount a filesystem comes from the user-mode DLL a version number could be supplied and the kernel driver could then attempt to load the corresponding kernel DLL (if it hasn't already been loaded).\n. Yes that's exactly what Dinesh's problem was. As far as I'm aware WiX doesn't have built-in support for Windows Update but we could write a custom action for it. The one problem with using Windows Update is that most big companies tend to have Windows Update locked down and they control the installation of updates themselves. Thus I'm a bit torn as to whether or not it's better to include all of the different .msu's or use Windows Update.\nRegardless I think we'll have to use the Windows Update API to detect if the update is currently installed or not.\n. Based on my current understanding commit https://github.com/dokan-dev/dokany/commit/943a5d5c6551bc5085317c50d975bd8db55e73ac has some errors surrounding its usage of VersionNT. Specifically VersionNT is an integer per Microsoft's documentation: https://msdn.microsoft.com/en-us/library/windows/desktop/aa372495(v=vs.85).aspx\nIt is used as such within both Dokan_x64.wxs and Dokan_x86.wxs however it is compared against a string in the format of v6.x within Bundle.wxs. My understanding of the code is that the UCRT MSU will never be installed because the VersionNT comparison in the condition will always fail. Looking at my own logs it appears that VersionNT is definitely being set to an integer.\n. Implementing this correctly under all circumstances in my own driver has proved quite frustrating as the documentation is not always clear under which conditions a set of flags should be checked:\nhttps://msdn.microsoft.com/en-us/library/windows/desktop/aa363874(v=vs.85).aspx\nhttps://msdn.microsoft.com/en-us/library/windows/hardware/aa364399(v=vs.85).aspx\nhttps://msdn.microsoft.com/en-us/library/windows/hardware/ff540466(v=vs.85).aspx\nI suspect the best way to approach this will be to lookup how it's handled in Microsoft's driver examples such as FastFAT: https://github.com/Microsoft/Windows-driver-samples/tree/master/filesys/fastfat\n. Doesn't 1.0 Beta1 still use the older installer? If so you cannot install 1.0 RC1 on top of it (or any prior version for that matter) because they use completely different installation engines. If this is the case the 1.0 RC1 should have caught that an older version was installed and returned an error code.\n. To be honest I'm a little surprised this fixes the problem since the translated generic access flags would presumably be identical. A say a \"little\" surprised because on the other hand access flags get split between a large number of variables and it's hard to account for all of them. Regardless it's pretty nuanced, good catch!\nAs for implementation shouldn't DokanMapStandardToGenericAccess() be a part of DokanMapKernelToUserCreateFileFlags()?\n. > About point 5, is it not related to #148 ?\nYes point 5 is identical to #148 except I don't believe the lookaside list API is available in user mode.\n\nIf I understood well, most of the changes are going to be in the Dokan Library and we are keeping the DeviceIoControl for communication Library/Kernel, are you we gonna break API compatibility in this communication ?\n\nAll of the changes would be in the user mode dokan.dll. It will keep DeviceIoControl() and it will involve breaking API changes as all of the event handler functions will need to have their arguments packed into (pooled) dynamically allocated structures.\nI have no problem doing this change myself however I don't have a lot of time at the moment. There's a good chance I wouldn't be able to get to it until sometime in June at the earliest but that could change (for better or worse).\n. DokanMain() will create an IO completion port, bind it to a thread pool (https://msdn.microsoft.com/en-us/library/windows/desktop/ms686760(v=vs.85).aspx), open the device with overlapped IO enabled, bind the device to the IO completion port, queue an async DeviceIoControl(), and then return (the current implementation blocks) while passing a state object back to the user. When a completion packet is available it will be dequeued on the thread pool bound to the completion port and a callback provided by dokan.dll will be called. This callback will then call the appropriate BeginDispatch*() for the packet which will remove a dispatch context object from the object pool (or allocate a new one if the pool is empty), fill in its arguments according to packet type, and then call into the user mode driver via the callback specified during Dokan setup (i.e. dokanOperations->ReadFile).\nInside the user mode driver callback a pointer to a structure with the relevant arguments for that packet will be provided. It should be done this way because we've then gone through the trouble of creating a proper structure to marshal packet arguments so that driver writers don't have to constantly reinvent the wheel for their own async operations. They just pass around a single pointer and reference it as needed. If the user mode driver callback will be asynchronous it will return STATUS_PENDING which tells Dokan to immediately exit the completion packet callback so that the thread can begin servicing other completion packets. If it's a synchronous callback it'll return its normal error code and Dokan will then automatically call EndDispatch*() to release the dispatch context object back to the object pool as well as return the result to the kernel.\nOutstanding asynchronous operations will also need to be tracked by Dokan so that during shutdown all pending IO operations will be verified complete before tearing down the IO completion port and the thread pool. Once a user-mode asynchronous operation completes it will need to call DokanFinishAsyncEvent() which will cause Dokan to call the appropriate EndDispatch*(). We should also make our thread pool and IO completion port available to user mode drivers since a thread can only be bound to a single IO completion port and there's no reason to force driver writers to create another thread pool.\n. No unfortunately the stuff I needed to get done before I could address this ended up taking a bit longer than I had anticipated. I noticed that 1.0.0 isn't released yet so I figured the delay on my end wouldn't be a huge issue ;). I'm still planning on implementing this, hopefully soon as the lack of throughput is a near constant complaint from users of my driver.\n. Alright I've started working on this. I won't be working on it every day so I don't know exactly how long it will take but it's currently under way =).\n. @Liryna Why is ZwCreateFile() called twice for SL_OPEN_TARGET_DIRECTORY?\n. Going through directory.c it seems to me that since Dokan caches the previous directory listing and provides its own pattern search maintaining FindFilesWithPattern() as a Dokan operation is a bad idea. @Liryna any opposition to removing it?\nAlso is it correct to assume that the kernel synchronizes all file operations on a file handle? If that's not true then there are quite a few synchronization bugs in the user-mode driver.\nLastly shouldn't directory list caching be done in the kernel and not the user-mode driver? I don't understand why we have to endure 2 user/kernel transitions when SL_RESTART_SCAN isn't specified just because the list gets cached in user space instead of the kernel.\n. Ok after looking through FastFat it looks like it's up to the driver to do its own synchronization - which is what I had assumed would be the case. FastFat obviously doesn't need to do any caching because it has direct access to the drive but it does maintain the state of the previous search. It looks like FindFilesWithPattern() is worth keeping around however I do think the cache should be maintained in the kernel and not in the user-mode driver.\n. Here's the FastFat code for searching:\n``` c++\n//\n        //  Determine where to start the scan.  Highest priority is given\n        //  to the file index.  Lower priority is the restart flag.  If\n        //  neither of these is specified, then the Vbo offset field in the\n        //  Ccb is used.\n        //\n    if (IndexSpecified) {\n\n        CurrentVbo = FileIndex + sizeof( DIRENT );\n\n    } else if (RestartScan) {\n\n        CurrentVbo = 0;\n        Ccb->OffsetToStartSearchFrom = 0;\n\n    } else {\n\n        CurrentVbo = Ccb->OffsetToStartSearchFrom;\n    }\n\n```\nAs @marinkobabic mentioned there is currently a problem with refreshing the cache. As far as I'm aware Dokan does not currently provide a driver with a way to notify the file system that the file system has changed?\n. Yes but say your driver is a remote FTP server - when a new file gets created on that server there's no way to notify Dokan and Windows Explorer won't be aware of the new file until the next time it happens to issue a request for a directory listing.\n. The cache helps but it solves a separate problem - the OS can submit multiple partial requests for the directory listing of an identical search result. The cache won't be purged until different search criteria are provided, thereby invalidating the cache, or the SL_RESTART_SCAN flag gets set.\nIf a the file system changes out from underneath Dokan, such is possible when monitoring a remote FTP, the user-mode driver needs a way to tell Explorer than the file system has changed so that Explorer knows to issue a new FindFiles() with SL_RESTART_SCAN.\n. Yeah I'm not moving any of the cache stuff to the kernel for this issue, I'll create a separate issue.\n. In setfile.c:\nc++\ncase FilePositionInformation:\n    // this case is dealed with by driver\n    status = STATUS_NOT_IMPLEMENTED;\n    break;\nWhich driver is that referring to?\n. Ok cool, ty\n. I'm getting close to being able to submit a PR for the initial review of the new async IO code however there seems to be an issue with the driver. The kernel mode driver is sending requests for ReadFile after calls to Close() and Cleanup() have been sent. Mirror was handling this by checking if the context was valid and if not using the path to the file but this is obviously wrong. @Liryna any idea why this is happening?\n. Alright sure thing, thanks!\n. @Liryna looking at FastFat this behavior does not seem to be accounted for which makes me think that Dokan is doing something wrong and that's why the OS is sending read/write's after close/cleanup.\n. Ok I think I found the problem. From the documentation for IRP_MJ_CLEANUP:\n\nReceipt of the IRP_MJ_CLEANUP request indicates that the handle reference count on a file object has reached zero. (In other words, all handles to the file object have been closed.) Often it is sent when a user-mode application has called the Microsoft Win32 CloseHandle function (or when a kernel-mode driver has called ZwClose) on the last outstanding handle to a file object.\nIt is important to note that when all handles to a file object have been closed, this does not necessarily mean that the file object is no longer being used. System components, such as the Cache Manager and the Memory Manager, might hold outstanding references to the file object. These components can still read to or write from a file, even after an IRP_MJ_CLEANUP request is received.\n\nMirrorCleanup() is closing the file handle when it should in fact be cleaned up in MirrorCloseFile(). I'm seeing this in the IRP's:\n1. IRP_MJ_CLEANUP\n2. IRP_MJ_READ\n3. IRP_MJ_CLOSE\nWhich is exactly what the documentation for IRP_MJ_CLEANUP says can happen.\n. > So does everything is now always for you on the dokan behavior?\nI have no idea what you just asked lol. I've submitted the initial PR for review: https://github.com/dokan-dev/dokany/pull/307\nIt's going to need a lot of testing and review.\n. no I believe I fixed it, so far I haven't encountered any additional problems.\n. The SDF is the intellisense/code browser database, it's important.\n. I'm reviewing this code for #210  and the current solution, while it seems to resolve the issue with cygwin, does not seem to be the proper solution. Based on the documentation for FILE_OPEN_FOR_BACKUP_INTENT wouldn't it be possible that a FILE_OPEN_FOR_BACKUP_INTENT flag isn't passed to the driver because it is reflected in the security attributes/descriptor that are provided? The documentation mentions that this flag only affects access rights and that it's not used by device and intermediate drivers.\n. If FILE_OPEN_FOR_BACKUP_INTENT is represented in the security flags and the security descriptor then all mirror should have to do is pass those flags and the descriptor to CreateFile(), you wouldn't need to supply FILE_OPEN_FOR_BACKUP_INTENT to it.\nToo bad MS hasn't open sourced their NTFS driver =(\n. Why not switch to something that's automatic then? I confess I'm a bit amazed that Visual Studio still doesn't support an elegant way to handle this out of the box but it looks like this add-in automatically formats for you.\n. That's because the LLVM style is insane and makes code as hard to read as possible :p\n. Yeah I have a 4k monitor and I really wish GitHub would allow code windows to take up more screen real-estate. That being said you can use a different coding standard while still maintaining discipline about character width - the two aren't mutually exclusive.\nThere's a school of thought that advocates for as much code being crammed into a small space as possible because it reduces the need for scrolling and therefore makes code more readable. I vehemently disagree with this and in fact think it achieves the opposite effect - making code extraordinarily unreadable. Personally I think inline bracing, the style that Dokan currently uses, encourages this type of behavior. For example:\nc++\nif (NULL == Vcb) {\n    Status = STATUS_INVALID_PARAMETER;\n} else if (Vcb->Identifier.Type != VCB) {\n    Status = STATUS_INVALID_PARAMETER;\n} else if (!Vcb->Dcb->Mounted) {\n    Status = STATUS_VOLUME_DISMOUNTED;\n}\nThis is hopelessly difficult to read - particularly without syntax highlighting. I personally consider whitespace to be your friend and would refactor it as such:\nc++\nif (NULL == Vcb)\n{\n    Status = STATUS_INVALID_PARAMETER;\n}\nelse if (Vcb->Identifier.Type != VCB)\n{\n    Status = STATUS_INVALID_PARAMETER;\n}\nelse if (!Vcb->Dcb->Mounted)\n{\n    Status = STATUS_VOLUME_DISMOUNTED;\n}\nDoes it require more scrolling to read? Yes - however if you are quickly scanning code for specific types of statements it is much easier to identify what you are looking for. Here's another example:\nc++\nif (NT_SUCCESS(status) && EventInfo->BufferLength != 0 &&\n    fileObject->Flags & FO_SYNCHRONOUS_IO && !(irp->Flags & IRP_PAGING_IO)) {\n    // update current byte offset only when synchronous IO and not paging IO\n    fileObject->CurrentByteOffset.QuadPart =\n        EventInfo->Operation.Write.CurrentByteOffset.QuadPart;\n    DDbgPrint(\"  Updated CurrentByteOffset %I64d\\n\",\n              fileObject->CurrentByteOffset.QuadPart);\n}\nWhich I would refactor as:\n``` c++\nif (NT_SUCCESS(status)\n    && EventInfo->BufferLength != 0\n    && (fileObject->Flags & FO_SYNCHRONOUS_IO)\n    && !(irp->Flags & IRP_PAGING_IO))\n{\n    // update current byte offset only when synchronous IO and not paging IO\n    fileObject->CurrentByteOffset.QuadPart =\n        EventInfo->Operation.Write.CurrentByteOffset.QuadPart;\nDDbgPrint(\"  Updated CurrentByteOffset %I64d\\n\",\n          fileObject->CurrentByteOffset.QuadPart);\n\n}\n```\nIn my opinion that's dramatically easier to read and still maintains your character width restrictions.\nLastly I would encourage a requirement that all control flow statements, such as if...else, are required to use braces. When I used to write safety critical software for the aerospace industry this was actually a requirement. For example:\n``` c++\nif(someVar)\n    DoSomething(); // BAD\nif(someVar)\n{\n    DoSomething(); // GOOD\n}\n```\nThe heartbleed bug in OpenSSL that made half of the internet insecure was caused by this very issue. Someone created an if() statement without braces and when someone else later added an additional statement they forgot to add braces along with it.\nThose are my 2 cents if anyone else has any thoughts on the matter.\n. For the record I'm rewriting all of the event context handling for #210 \n. @Liryna the changes outlined in #210 concern the user-mode driver but once I submit a PR I can certainly take a look at that for you.\n@bailey27 I don't see the purpose in making changes to event context code when all of that is about to change?\n. ok cool =)\n. Is the leak in the kernel? Otherwise I don't see how the leak automatically remains when I'm completely rewriting the user-mode event handling.\n. Ah ok, my changes for #210 currently have nothing to do with the kernel driver though I wouldn't be surprised if it needs to get cleaned up for proper async IO as well. I'm going to submit a PR for user-mode before I take a look at kernel-mode.\n. Also FUSE hasn't been tested at all.\n. Compiling FUSE under certain circumstances seems to have failed because the Windows thread pool headers couldn't be located. I don't see any unit tests listed anywhere in the appveyor - only building.\n. Ah ok, cool, thanks! I'll take a look on Monday.\n. Ok nearly all of the unit tests are passing. In WinFSTest I get a couple of failures for the regular Windows filesystem however it looks with Mirror I have 2 extra failures. FSX seems to be intermittently failing on appveyor, I can only assume it has something to do with async IO however I haven't been able to reproduce the failures on my system yet.\nI'll hopefully finish up these last couple of issues next week Monday.\n. So I am in the middle of Windows security hell. SetFileSecurity keeps failing with ERROR_INVALID_OWNER and I'm not entirely sure why. Documentation for Windows security kind of sucks and I've tried about 1000 different things so I'm starting to run out of ideas. Aside from that I think there's a couple of race conditions in Mirror I need to lock down but everything else is ready to rock and roll. I've also added code that detects FILE_FLAG_BACKUP_SEMANTICS. If I'm not able to get SetFileSecurity sorted out soon I'll probably just commit what I have and see if anybody can think of what could be wrong.\n. Also the extra weird thing is my code for SetFileSecurity works just fine with my own unit tests. It only fails in the python winfstest unit tests. I'm wondering if it's because it creates a child process and that somehow changes how security is checked. Unfortunately winfstest works fine w/ the regular filesystem so obviously something isn't right in the driver.\n. For reference to myself as much as anybody else one thing I haven't tried yet is Get/SetKernelObjectSecurity(). Documentation is available here: https://msdn.microsoft.com/en-us/library/windows/desktop/aa364399(v=vs.85).aspx\n. Nevermind you're supposed to use SetSecurityInfo or SetNamedSecurityInfo instead of SetKernelObjectSecurity() which is what I've been using =(.\n. Alright I've done my final commit until you guys have a chance to do a review. Some of the unit tests concerning SetFileSecurity are still failing and I have no idea why. I haven't worked with Windows security all that much, the documentation for it sucks, so hopefully somebody who's more familiar with its nuances can spot what's wrong because at this point I'm running out of time.\nEverything else seems to be working fine though it's possible there are some race conditions due to a lack of clarity over which Windows file system functions need to be manually synchronized. Honestly I think we should deprecate Mirror as an example and replace it with an in-memory filesystem that properly emulates all of the functionality. This would save an incredible amount of time trying to figure out how kernel stuff maps back into user space.\nAlso the new doxygen documentation is a bit broken with this branch since I renamed some of the callback functions to remove conflicts with Windows macros and I also haven't bothered to write the documentation for the new async IO stuff yet. I'll take care of that after the code review is complete.\n. It looks like there's some sort of race condition that FSX exposes. My own local runs of FSX always succeed but I've been running debug versions so maybe I need to try release. I haven't tried Office or Visual Studio. If I have time next week I'll do a bit more testing.\n. Hey @Liryna now that 1.0 has been released do you have any idea of when you'll get to the review of this PR? I think the longer we wait the harder it's going to be to merge and fix the couple of outstanding issues with Mirror.\n. Thanks for testing it out @Liryna, I have a couple of questions:\n1. Which C++ project are you trying to compile? I would like to try compiling it myself to replicate your results.\n2. Which VHD are you trying to mount and how are you trying to mount it?\n3. Where are the insufficient resource errors codes being returned? I'm assuming they're coming from the user-mode dokan.dll, are they being generated by calls to DeviceIoControl()?\n4. Did you try disabling USE_ASYNC_IO to see if it made any difference? It's defined at the top of mirror.c.\n5. I don't suppose you gained any additional insight into the best way to handle the outstanding issues with properly setting file security?\n. Thanks for the info, I don't see any mention of insufficient resources in your log. Error code 998 is ERROR_NOACCESS. Unfortunately there doesn't seem to be much info on the internet about that error code, apparently it can refer to an access problem with the kernel driver or it can also be a more general error code. It seems to have occurred during a large write (~3mb) that requested an increase in buffer size immediately prior to the failed write:\nDokan Information: Requesting write buffer of size 3146074.\nMy guess is this has something to do with the problem. I'll see if I can reproduce the problem on my end.\nAlso why on earth does the user-mode driver need to request a larger write buffer? The kernel already knows how big the write buffer needs to be before it forwards the request to the user-mode driver. This seems totally unnecessary to me.\n. > Also, did you rewrite the mount/unmount process ? this seems to be very fast !\nYes =)\n. @Liryna I have been unable to reproduce the FSX race condition despite my best efforts thus far. I noticed when I merged with the latest code that there was some additional oplock code in the kernel - do you think it's possible this fixed it? Are you still able to reproduce it?\nI'm working on fixing the large buffer write issue - it's taking longer than I had expected because of kernel changes.\n. Ok I have fixed the issues with large writes and I've also greatly simplified the code. Previously large writes worked like this:\n1. Kernel check if the write is \"large\".\n2. If no then normal write processing ensues. If yes then special handling is performed and a write IRP is created for the user driver.\n3. User driver checks if a write is \"large\".\n4. If no then normal write processing ensues. If yes then allocate extra memory and send a special write event to the kernel.\n5. The kernel performed voodoo black magic to reconcile the original and new ioctl messages and returned the full write buffer.\n6. Profit\nThe new large write logic:\n1. The kernel checks if the incoming ioctl buffer is large enough to handle the outgoing buffer.\n2. If yes normal logic ensues. If no then the input buffer is checked to see if it is at least large enough to hold the event information. If yes then the event information is returned with an ERROR_MORE_DATA. If no then nothing is copied and the driver returns ERROR_INSUFFICIENT_BUFFER.\n3. If the user driver receives ERROR_MORE_DATA it reads the event information, allocates a larger buffer, and re-submits the ioctl. Currently it only does this for the write IRP however it can be easily extended to encompass any IRP with the potential for exceeding the default buffer size.\n4. Profit\nIt should be noted that currently all ioctl's are serialized through a FIFO queue in the kernel - there is no asynchronous processing. Ironically prior to my async IO changes it was possible to have multiple ioctl's in flight in the user driver due to multiple dedicated threads which meant ioctl messages could begin processing out of order. In practice this probably didn't happen often since the kernel still dequeued them in-order and each thread was blocking for the processing of its respective ioctl message and its response ioctl.\nWith my new implementation there's only ever a single dequeu ioctl in flight at any given moment however all processing of the ioctl's, including the responses, is asynchronous. If a large write is received the larger buffer is allocated and the ioctl is re-submitted. Since there is no other thread with ioctl's in flight this guarantees that the allocated buffer will in fact receive the large write message it was allocated to handle. If this ever changes the current code should still work though it could result in multiple threads each allocating the large buffer and racing to be the one that actually successfully receives the large write message. The losing thread would still get a valid message to process, it just would have unnecessarily allocated extra memory. This could be mitigated by ensuring the ioctl message contains an ID that could be passed back to the kernel during the re-submission. Special care would need to be taken to handle the possibility of a race condition to ensure the driver returns a proper error code to the user driver if a thread requests to process an ioctl message with an ID that has already been dequeued. I believe this is actually what the old code was doing except it was using a different ioctl message type and looking up the original IRP.\n@Liryna wonderful! I had a sneaking suspicion this commit might fix our issues with FSX though since I never had any problems with FSX I wasn't 100% sure. Yes unfortunately my changes to write handling are breaking changes. It's possible that there was in fact a race condition. As explained above the old code most likely would rarely hit it (though it was still possible) due to all of the blocking. I think what was happening with my new code is that it would receive a large write message, send the request back to the kernel for a larger buffer, and while waiting continue processing other ioctl messages. This would allow for multiple IO operations to begin processing before the large write message was returned. With my new changes the FIFO order out of the kernel is maintained even though the actual processing is asynchronous.\nThe part I still don't have enough information about is the original APC's into the kernel. Does the OS synchronize all APC's for a file or a file handle before being issued or are all APC's asynchronous based on available cores, scheduling, and first come first serve? Dokan's kernel driver is currently serializing them into the queue but is that just a coincidence of how the original author decided to implement it or was it done deliberately to ensure order of processing? I'm not fully aware of what synchronization guarantees need to be made by the driver.\n. > I am just wondering by your explanation if the big overlapped write are correctly handled ? I mean if there is ioctl request to create a big buffer, does still will work properly ? Or this is exactly the case you are talking ? (Since there is no other thread with ioctl's in flight this guarantees that the allocated buffer will in fact receive the large write message it was allocated to handle.)\nThis is what I was talking about. Since all of the kernel APC's get serialized into a queue if the client (dokan.dll) only ever has a single pending ioctl then the dequeue operations are guaranteed to be serial. This means when the new large buffer is allocated and re-sends the ioctl it will attempt to read the same packet. I have tested this with large writes and my tests were successful.\nUnfortunately with this design the rate that APC's are enqueued and then dequeued by the ioctl's will be the primary bottleneck. There doesn't seem to be any good way around this outside of directly forwarding kernel APC's to the user mode driver - I don't know if that's possible? If it is I suspect it would require sweeping changes to both the kernel and the user mode driver.\n. @Liryna It looks like it is in fact possible to send APC's from the kernel driver to the user driver: http://www.drdobbs.com/inside-nts-asynchronous-procedure-call/184416590\nAs I suspected it looks like it would require the majority of the kernel and user mode drivers to be completely rewritten. In the user mode driver it also looks like we might have to maintain our own thread pool as threads only receive APC's once they go into an alertable wait state. Needless to say such a thing is outside the scope of this PR and my available time.\nAs for the security stuff I'll get to that as soon as I can, thanks for following up with it!\n. My changes could allow for STATUS_PENDING to be returned to the kernel driver though I'm not sure how that would allow for the removal of DokanResetTimeout. Just because it returns STATUS_PENDING doesn't mean it can't enter a state where it never returns a result so I think you would still need to keep the timeouts in the kernel. I did however notice that I didn't update DokanResetTimeout for async IO so I certainly need to do that :p.\n. It can be easily added - my concern is whether or not it would be a good idea! The user driver would have to monitor the job and send keepalive packets in the background. Unfortunately if the packet deadlocked or entered some sort of unrecoverable state the keepalive background worker would have no way of knowing and would continue to send the kernel keepalive messages. I think it really should be up to the implementor of the user mode driver to determine how DokanResetTimeout gets called. From a usability perspective this isn't ideal however the whole point of the timeout is to prevent the kernel from infinitely consuming system resources. Also the current timeout is set to 15 seconds which would require an extraordinarily slow driver to exceed for any one operation.\n. Are you suggesting that every single file system event should be serialized to a single thread?. Excluding debugging I can't think of any reason why you would want to do that regardless of whether or not you're using FUSE. It would completely destroy the performance of your filesystem. That being said, and as you suggested, there's nothing preventing you from forcing your FUSE driver from being single threaded by taking a lock on a mutex or serializing filesystem events to a queue.. The examples you have provided would be much less performant on a single thread instead of using multiple threads - particularly for a networked filesystem. From a performance perspective there are no benefits to using a single thread which is why Windows uses APC's to talk to the kernel driver in the first place. I'm not familiar with the gritty details of building a filesystem for Linux however, from what I remember of working on the FUSE API for this PR, it appears to be poorly designed because each call to the FUSE API must block a thread until the requested operation completes (unless you implement coroutines). If what you are saying was true Windows wouldn't support APC's, overlapped IO, or IO completion ports and Linux wouldn't support polling.\nThreadCount is no longer used because Dokan's user mode driver now uses the system thread pool which creates and destroys threads on the fly based on the number of CPU's in the system along with other heuristics. I probably should have just removed it. If FUSE supports forcing everything to run through a single thread and a flag was added to enforce such behavior in Dokan for compatibility purposes I certainly wouldn't complain - though you'd be crazy to use it in production.. The problem is that we're always passing in NULL for the parent descriptor since the kernel currently has no way of knowing what it should be.\n. It looks like all of this can be done in user mode.\n. I have fixed this problem for ZwCreateFile but I haven't pushed the code yet because it isn't working yet for SetFileSecurity. This windows security stuff is really a massive pain to work on.\n. Thank you for the kind words @Liryna, I appreciate it =). @SergiuPol while the work I did on async IO for dokan 2.0 goes a long way toward improving performance there are still a number of areas where significant enhancements could be made. Unfortunately these all center around non-trivial kernel changes that would also likely require an additional set of significant changes to the user mode driver. For starters the kernel mode driver serializes all IO requests to a single queue for handling by the user mode driver. This not only creates a single point of contention across all IO requests but it also requires a large number of buffer copies to take place during reads and writes. I would still need to perform additional research but I believe this could be heavily mitigated by using APC's between the kernel driver and the user driver. A less performant but less disruptive solution would be supporting a single queue per file-handle with a thread pool for servicing requests - similar to what my dokan 2.0 user mode code is doing.\nUnfortunately without the participation of more people with kernel level development experience these changes may be a long time in coming. A technical roadmap would likely need to be created with proper debate around the best path to take to address dokan's most significant shortcomings.. @cdarau as explained above:\n\n@SergiuPol while the work I did on async IO for dokan 2.0 goes a long way toward improving performance there are still a number of areas where significant enhancements could be made. Unfortunately these all center around non-trivial kernel changes that would also likely require an additional set of significant changes to the user mode driver. For starters the kernel mode driver serializes all IO requests to a single queue for handling by the user mode driver. This not only creates a single point of contention across all IO requests but it also requires a large number of buffer copies to take place during reads and writes. I would still need to perform additional research but I believe this could be heavily mitigated by using APC's between the kernel driver and the user driver. A less performant but less disruptive solution would be supporting a single queue per file-handle with a thread pool for servicing requests - similar to what my dokan 2.0 user mode code is doing.\n. @Liryna The parent directory descriptor is required to create a child descriptor, presumably because the child descriptor inherits the parent's properties except where explicitly overridden: https://msdn.microsoft.com/en-us/library/windows/desktop/aa376405(v=vs.85).aspx. \n",
    "kuaaan": "Yes. you're right.\nI missed locking code :)\nIt looks find.\nSorry for false positive reporting! \n. ",
    "HaleTom": "Thanks - perhaps it could say this via STDOUT if the user doesn't have admin rights?\n. @Liryna I granted the permissions on the UAC popup. It seems that there is a STDOUT redirection going on when cmd.exe isn't run as Admin... and no message to tell the user to run it as such\n. Gotcha.\nSo does the UAC happen because of magic flags on the .exe file, or does the .exe request the UAC priviledges? \nBecause if it's the latter, it would make sense to do the argument checking / usage before the UAC.\n. ",
    "andreyloktev": "Hi Liryna!\nYes, I've tested it locally. After a time i will load changes in my forked version.\nP.S. There is a cool utility \"fsx\"( http://codemonkey.org.uk/projects/fsx ) for \"true\" testing read, write, mapread, mapwrite operations :)  I will also load a ported version.\n. \"And if it is possible, I would add it to appveyor.\"\nOk, no problems!\n. Hello @Liryna,\nfsx includes only read, write, mapread, mapwrite and truncate operations. Than less options are used then more operations will be done. For example, -R, -W disable map read and map write.\nAlthough there are usefull options for debugging:\n1) fsx calls dowrite(), domapwrite(), ... in a random way. It initializes a random generator and prints a seed number before to begin testing. If error occurs you will be able to reproduce it using -S to specify the printed seed number.\n2) -i and -I - enable an interactive mode to do operations step by step to see a dokan log\n3) -b to specify a beginning opration number\nOption -N is used to specify the number operations to do. If it is not used fsx will run infinitely. I think 2000000 operations is enougth :smile: \nLater I would like to port and to add a fstorture utility. It tests file system operations: cerate, delete, raname, stat, truncate a file;  create, delete, rename a directory; creation a hardlinkks and symlinks.\nhttp://fstools.macosforge.org/trac/browser/trunk/src\n. Hello @Maxhy, sorry for delay. Thanks for your review. Yes, these lines are duplicated. I'll fix it.\nYes, all this code would be able handled on the kernel side if the dokan contained a file size information. But now all file system information is on the user mode side.\n. Hi, everyone!\nIn r7647817 duplicated code in the MirrorWriteFile was removed.\n. Hi everyone,\ndokan 0.6.0 is used in Paragon ExtFS.\nSome changes were made in the dokan driver and the dokan library:\n library:\n- DokanGlobalInit was added to push mounter.exe work into a PragonMounter service\n- fixed \"MirrortUnmount is not called\"\n  driver:\n- fixed \"MirrortUnmount is not called\"\n- fixed a file map read/write\n- fixed \"Insufficient system resources exist to complete the request\"\n- fixed file deletion on Win8\nIn the latest dokany release there are almost all fixes. So in the next Paragon ExtFS release we will try to use Dokany.\n. Hi @Maxhy @Liryna !\nDokan 0.6.0 with changes: https://drive.google.com/open?id=0BxgWEqB7RUd-Zl9nRU5OLW1UbFk\n- MirrorUnmount is not called:\n  files: sys\\device.c; dokan\\dokan.c; IOCTL_DOKAN_UNMOUNT was added.\n- Map read\\write:\n  as well as in the pull request #64\n. Hello @marinkobabic \nUnfortunately BSOD reproduces on the new version with the same error code if launch fstorture from the command line. If launch powershell script( from the link ) then deadlock appears. Dump file is uploaded on the google drive. ",
    "MarkJJMcCormack": "Hi Liryna,\nThank you for your response.  I uninstalled 0.7.4 and put 0.7.2 on to see if it made any difference - maybe a later change had introduced something I though?  The mounter running on 0.7.4 was x64 and the one in 0.7.2 is x86 (my machine is 64bit Intel)\nAfter about 10 minutes of debugging I got the same BSOD, again related to the mounter.exe.\nI would understand that putting breakpoints in the .NET API callbacks could be problematic from a driver point-of-view, but it is kind of a nice way to finding out what is getting called into my functions from the driver. Perhaps I am expecting too much!!\nHaving read the #50 issue do I understand correctly that there is a known serious problem with the mounter.exe and hence why you say it will not be investigated?  This is understandable if this is the case.\nIs there any work-around you could suggest or shall I look for alternatives (at least until 8.0.0 release)?\nThanks.\n. OK, thank you very much for your time in looking at my issue, it is certainly appreciated!\nI will see if I can work with debug print and continue my experiments.\nThanks again.\n. ",
    "Albeoris": "I also fell with a BSOD. :(\nDump: https://yadi.sk/d/CjBY94kgjMDDo\n. ",
    "justanotheranonymoususer": "\n. It works now after a couple of include/lib path fixups. Namely:\n\nAlso, I get the following warning:\n\nwarning : The referenced project '..\\dokan\\dokan.vcxproj' does not exist.\n\nI assume that the original solution tree, the one that's in this repository, is expected.\n. Well, you can change it to #include \"dokan.h\" and #include \"fileinfo.h\", and set the include path in the project settings. Also, I'd probably create a solution for that project. The issue with this approach is that now the files will differ from the files in the repo, so they will require these little fixups every time.\n. If nothing else, you can use the NSIS System Plug-in to run MoveFileEx directly.\n. Actually, it seems like NSIS has a flag just for that.\nhttp://nsis.sourceforge.net/Docs/Chapter4.html#delete\nDelete /REBOOTOK $INSTDIR\\somefile.dat\nPR: https://github.com/dokan-dev/dokany/pull/68\n. Pardon?\n. Oh. That's all for now. Just saw them with a VS extension that highlights typos while browsing that file. I guess that there are many more, if I found so many in just one file :), but it's not convenient to fix these through the GitHub editor, and I don't have a Git client at hand to submit a proper pull request.\n. OK, it seems like the system removes files not with DeleteFile, but with CreateFile(..., FILE_FLAG_DELETE_ON_CLOSE, ...), so perhaps it's not a bug.\nIn general, I try to modify dokan_mirror so that the clone will be read-only. Is there a straightforward and complete way to do that, without filtering every flag (such as FILE_FLAG_DELETE_ON_CLOSE) explicitly?\n. MirrorGetFileInformation doesn't seem to provide a solution. But returning STATUS_ACCESS_DENIED for every operation that requires write access seems to work. If you have other ideas about it, let me know :)\n. Thanks @marinkobabic. Here's my attempt: https://github.com/dokan-dev/dokany/pull/72\n. Thanks for trying!\n\nIs there something I made wrong ?\n\nYou, as the repo owner, should know better :)\nI implemented it based on the DOKAN_EVENT_REMOVABLE flag. Don't know whether I did it correctly. We can try a couple of things, e.g. always forcing the FILE_READ_ONLY_DEVICE flag and checking whether it has any effect at all.\n. I found out that FILE_READ_ONLY_VOLUME can be set here:\nhttps://github.com/dokan-dev/dokany/blob/7799f883acd08d75dbcf185d6dd53581f845a3bb/dokan_mirror/mirror.c#L1109-L1113\nThe solution doesn't seem to be complete, e.g. files cannot be edited, but attributes can still be set, I think (haven't done a through check).\n. Also, a question: who frees the memory here? https://github.com/dokan-dev/dokany/blob/217f3163bdb28ee8928fc02c359939a4dad347e8/dokan_fuse/src/docanfuse.cpp#L462\n. Here, the check is always false, because the variable is unsigned: https://github.com/dokan-dev/dokany/blob/217f3163bdb28ee8928fc02c359939a4dad347e8/dokan_fuse/src/utils.cpp#L154\n. > Even if the changes are simple in dokan_fuse, did you test it ? (I have no projet with fuse :( )\nNo. I found the issues with a static analyzer, and they are quite straightforward. I don't believe something can go wrong.\n. I use Visual Assist X, which is not free, but Google says that there are many alternatives (Google for \"Visual Studio Spell Checker\")\n. ",
    "canardos": "As pointed out above, the changes aren't achieving the desired result because the file system is not checking if the device is writable. The flags themselves are not sufficient.\nNTFS and FAT etc. use a IOCTL_DISK_IS_WRITABLE device req when mounting to determine if the device is writable and set the file system flags accordingly. IO operations are then restricted as appropriate by the file system. The MS fastfat sample follows the same approach.\nI've implemented the read-only option in the same style, with IOCTL_DISK_IS_WRITABLE and IOCTL_VOLUME_GET_GPT_ATTRIBUTES device requests returning read-only and dokan checking write requests at the driver level. It seems to function well and Explorer correctly indicates that the volume is write-protected during write operations.\nI'll upload a pull-request tomorrow after I've tested it on Win7 (only tested on Win10 thus far).\n. I've noticed other failure modes in this function that also fail to properly free the DCB and potentially other structures. Closing and will resubmit with further changes\n. Can't reopen due to 361, resubmitted.\n. ",
    "nicolas-raoul": "OK thanks! :-)\n. Mirror works great :-)\n. I double-clicked on dokan-dotnet\\sample\\DokanNetMirror\\bin\\Debug\\DokanNetMirror.exe and it works perfectly, a N: drive appears which shows the same content as my C: drive.\n. I just discovered Dokan, so I am very new, but I will try :-)\n. Thanks for the quick fix! It works now.\n. ",
    "IgLiv": "Just out of curiosity what was the problem?\nI took a a look at the NSI and it seems correct.\n. ",
    "blschatz": "I ended up building my own, but that will help in the future. Thanks!\n. ",
    "acu192": "dokanctl.exe can't run when I try it manually (missing DLL, if I remember correctly).\nEdit: Okay, looks like you found it too!\n. It works! Thanks!\n. ",
    "billziss-gh": "Hello, Liryna and Corillian:\nI wrote my PR a couple of days ago for a few reasons:\n- I needed CreateFileEx (or an equivalent) to fix a few problems in my file system (related to missing the CreateOptions parameter).\n- I believe that the split between CreateFile, CreateDirectory, OpenDirectory is not necessarily helpful, because the implementor has to implement opening directories in CreateFile anyway.\n- At the time it appeared that Corillian's PR was not complete and I was not sure about its timeline for completion.\nFurthermore I reviewed Corillian's PR and I found what IMO are some concerns:\n- It breaks every file system implementation out there by fundamentally changing the CreateFile signature. I understand that we recently changed Win32 error codes to NTSTATUS, but this is a much bigger change.\n- It maintains the split between CreateFile, CreateDirectory, OpenDirectory. This is problematic for the reason mentioned earlier but also because CreateDirectory and OpenDirectory do not get the extra parameters that they need in order to work. For example, what security descriptor is to be applied to a newly created directory in CreateDirectory?\n- As a file system implementor I am not sure what to do with DOKAN_IO_SECURITY_CONTEXT. There seems to be a wealth of information in there, but most of it seems to be information that should be dealt with at the driver level.\n- I am not a maintainer of this project, but I felt that a PR that touches so many files can be dangerous. I am in favor of smaller and simpler patches that are easily understood.\nRegarding the Reserved security descriptor in my PR: this is currently reserved and will always be zero. The intent is to (minimally) modify the driver to pass the security descriptor, so that it can be attached to newly created files. This change will happen in the near future. [But not in the same PR.]\n. @Corillian:\nRe: 1. I understand that it is not an issue for you. But it may be for other file system implementors.\nRe: 3. Can you please document for me what I am supposed to do with the information I get through DOKAN_IO_SECURITY_CONTEXT? What fields are important? How should I use them?\n. Thanks for the documentation pointers. To clarify I am aware of the IO_SECURITY_CONTEXT and ACCESS_STATE documentation, but that does not make me much wiser on what to do with them. Perhaps I am in the minority.\nIn any case I have registered my concerns and my reasons for creating the alternative PR.\n. I believe the name ZwCreateFile is misleading. Here is what the real ZwCreateFile prototype looks like:\nNTSTATUS ZwCreateFile(\n  _Out_    PHANDLE            FileHandle,\n  _In_     ACCESS_MASK        DesiredAccess,\n  _In_     POBJECT_ATTRIBUTES ObjectAttributes,\n  _Out_    PIO_STATUS_BLOCK   IoStatusBlock,\n  _In_opt_ PLARGE_INTEGER     AllocationSize,\n  _In_     ULONG              FileAttributes,\n  _In_     ULONG              ShareAccess,\n  _In_     ULONG              CreateDisposition,\n  _In_     ULONG              CreateOptions,\n  _In_opt_ PVOID              EaBuffer,\n  _In_     ULONG              EaLength\n);\nMy opinion is that if we are changing the API, we should also purge CreateDirectory and OpenDirectory.\n[EDIT: just reread @Liryna's message and saw she is already saying that CreateDirectory, OpenDirectory should be purged. Apologies for missing that.]\nThe NTSTATUS checker should be cleaned up. It is currently overcomplicated. It should be a simple mapping between the CreateDisposition and the corresponding NTSTATUS to return. Along the lines of:\nswitch (disposition) {\n    case FILE_CREATE:\n        eventInfo.Operation.Create.Information = FILE_CREATED;\n        break;\n    case FILE_OPEN_IF:\n    case FILE_OPEN:\n        eventInfo.Operation.Create.Information = FILE_OPENED;\n        break;\n    case FILE_OVERWRITE:\n    case FILE_OVERWRITE_IF:\n        eventInfo.Operation.Create.Information = FILE_OVERWRITTEN;\n        break;\n    case FILE_SUPERSEDE:\n        eventInfo.Operation.Create.Information = FILE_SUPERSEDED;\n        break;\n    default:\n        break;\n    }\nSTATUS_OBJECT_NAME_COLLISION should not be handled specially. I note that ERROR_ALREADY_EXISTS is added by the Win32 CreateFileW using a test along the lines of:\nif (disposition == CREATE_ALWAYS && iosb.Information == FILE_OVERWRITTEN) ||\n    disposition == OPEN_ALWAYS && iosb.Information == FILE_OPENED)) {\n    SetLastError(ERROR_ALREADY_EXISTS);\n}\nSL_OPEN_TARGET_DIRECTORY is not handled properly. For one thing, we should return FILE_EXISTS, FILE_DOES_NOT_EXIST based on whether the original pointed file exists (not the target directory). In my tests with MoveFileExW everything worked when setting the information code to FILE_OPENED though.\nThe information codes FILE_EXISTS and FILE_DOES_NOT_EXIST are not used except in the case of SL_OPEN_TARGET_DIRECTORY. Confirmed on Fastfat and NTFS.\nAlso for consideration: eventInfo need not be a malloc allocation. This seems superfluous (unless I am missing something)\nRegarding winfstest: It is located at https://bitbucket.org/billziss/secfs.test, subdirectory winfstest. I have it under a BSD license, i.e. up for grabs. It requires Python (2.7) to run. It can run on both Windows and Cygwin Python. Change to the drive/directory you wish to test and use run-winfstest.bat on Windows and run-winfstest (shell script) on Cygwin.\nThere are only a few number of tests currently, but they exercise a fair amount of the Dokan API. All tests pass on NTFS. Many tests fail on mirror.exe and most pass on my own file system. Handling ShareAccess is a particular sticky point (I believe @Liryna you have said that these should and will be handled at the driver level and I agree with you).\nI would expect that we would need about 10 times as many tests to have a comprehensive test suite though.\n. Understood. I do not believe I have anything else to add as I do not believe any input is taken into consideration anyway.\n. @Liryna to clarify: my disagreement is with @Corillian and not you.\nRe: winfstest. Perhaps we should open a new issue to discuss that as to not pollute this thread?\nThe mirror passes all ShareAccess tests, but only by accident. It simply forwards them back to Win32, which of course handles ShareAccess properly. There are a few other tests, but most have to do with wrong status codes returned, so easily fixable. There is also a more important failure about DeleteFile.\n```\nC:\\Users\\billziss\\Projects\\secfs\\secfs\\test\\winfstest\\t\\base\\00.t  ok\nC:\\Users\\billziss\\Projects\\secfs\\secfs\\test\\winfstest\\t\\base\\01.t  ok\nC:\\Users\\billziss\\Projects\\secfs\\secfs\\test\\winfstest\\t\\base\\02.t\nnot ok 2 - expect \"CreateDirectory 318b3816 0\" ERROR_ALREADY_EXISTS - got ERROR_ACCESS_DENIED\nnot ok 3 - expect \"RemoveDirectory 318b3816\" ERROR_DIRECTORY - got ERROR_INVALID_FUNCTION\nnot ok 6 - expect \"CreateDirectory 318b3816 0\" ERROR_ALREADY_EXISTS - got ERROR_ACCESS_DENIED\nnot ok 8 - expect \"DeleteFile 318b3816\" ERROR_ACCESS_DENIED - got 0\nC:\\Users\\billziss\\Projects\\secfs\\secfs\\test\\winfstest\\t\\base\\02.t  not ok 4/10\nC:\\Users\\billziss\\Projects\\secfs\\secfs\\test\\winfstest\\t\\base\\03.t\nnot ok 4 - expect \"RemoveDirectory f4cc1675\\foo\" ERROR_DIRECTORY - got ERROR_INVALID_FUNCTION\nC:\\Users\\billziss\\Projects\\secfs\\secfs\\test\\winfstest\\t\\base\\03.t  not ok 1/18\nC:\\Users\\billziss\\Projects\\secfs\\secfs\\test\\winfstest\\t\\base\\04.t\nnot ok 7 - expect \"MoveFileEx bb9253c6\\bar bb9253c6\\baz 0\" ERROR_ALREADY_EXISTS - got ERROR_ACCESS_DENIED\nnot ok 21 - expect \"MoveFileEx bb9253c6\\bar bb9253c6\\baz 0\" ERROR_ALREADY_EXISTS - got ERROR_ACCESS_DENIED\nC:\\Users\\billziss\\Projects\\secfs\\secfs\\test\\winfstest\\t\\base\\04.t  not ok 2/43\nC:\\Users\\billziss\\Projects\\secfs\\secfs\\test\\winfstest\\t\\base\\05.t  ok\nC:\\Users\\billziss\\Projects\\secfs\\secfs\\test\\winfstest\\t\\base\\06.t  ok\nC:\\Users\\billziss\\Projects\\secfs\\secfs\\test\\winfstest\\t\\base\\07.t  ok\nC:\\Users\\billziss\\Projects\\secfs\\secfs\\test\\winfstest\\t\\base\\08.t  ok\nC:\\Users\\billziss\\Projects\\secfs\\secfs\\test\\winfstest\\t\\base\\09.t  ok\nC:\\Users\\billziss\\Projects\\secfs\\secfs\\test\\winfstest\\t\\streams\\00.t  ok\nC:\\Users\\billziss\\Projects\\secfs\\secfs\\test\\winfstest\\t\\streams\\01.t\nnot ok 1 - expect \"CreateDirectory 1f004e38:foo 0\" ERROR_DIRECTORY - got ERROR_ACCESS_DENIED\nnot ok 3 - expect \"CreateDirectory 1f004e38 0\" ERROR_ALREADY_EXISTS - got ERROR_ACCESS_DENIED\nnot ok 9 - expect \"RemoveDirectory 1f004e38:foo\" ERROR_DIRECTORY - got ERROR_INVALID_FUNCTION\nC:\\Users\\billziss\\Projects\\secfs\\secfs\\test\\winfstest\\t\\streams\\01.t  not ok 3/19\nC:\\Users\\billziss\\Projects\\secfs\\secfs\\test\\winfstest\\t\\streams\\02.t\nnot ok 26 - expect \"FindStreams c6cd42ac\" ERROR_HANDLE_EOF - got ERROR_ACCESS_DENIED\nC:\\Users\\billziss\\Projects\\secfs\\secfs\\test\\winfstest\\t\\streams\\02.t  not ok 1/250\ntotal ................................. ok 460/471 - not ok 11/471\n```\nFor what it's worth the proposed NTSTATUS checking does not break any of the winfstest tests.\n. Fair enough on your comment about having two functions in one. I will split them in two.\nBut I find that placing the condition in DokanLoop is not the appropriate place. The switch is nice and easy to understand there, we should not overcomplicate it with such conditions IMO.\nInstead I will place the condition right in the beginning of DispatchCreate. I will make things such that you can easily move the condition to DokanLoop, if you have a strong preference to do it that way.\n. Ok, done and tested with winfstest. I believe I incorporated all your proposed changes.\nI also made eventInfo a stack variable instead of a malloc allocation, which seems unnecessary to me (only in DispatchCreateEx though, I did not touch DispatchCreate other than the conditional at the beginning).\nSome comments regarding the security descriptor. The Win32 CreateFile allows one to pass a security descriptor to attach to a newly created file. Here is the Win32 CreateFile prototype:\nHANDLE WINAPI CreateFile(\n  _In_     LPCTSTR               lpFileName,\n  _In_     DWORD                 dwDesiredAccess,\n  _In_     DWORD                 dwShareMode,\n  _In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,\n  _In_     DWORD                 dwCreationDisposition,\n  _In_     DWORD                 dwFlagsAndAttributes,\n  _In_opt_ HANDLE                hTemplateFile\n);\nThe documentation has this to say about lpSecurityAttributes:\n\nThe lpSecurityDescriptor member of the structure specifies a SECURITY_DESCRIPTOR for a file or device. If this member is NULL, the file or device associated with the returned handle is assigned a default security descriptor.\nCreateFile ignores the lpSecurityDescriptor member when opening an existing file or device.\n\nSo when creating a new file it is possible to attach a security descriptor to it. This capability does not seem to exist in Dokan currently. This is why I added the Reserved security descriptor parameter, so that we can pass it at a later time from the driver.\n. Yes. One of those interesting Windows tools bugs. More information here:\nhttps://connect.microsoft.com/VisualStudio/feedback/details/1610302/universalcrt-detection-breaks-when-windows-driver-kit-is-installed\nhttp://stackoverflow.com/questions/32885229/unable-to-compile-and-link-simple-c-program-with-visual-studio-2015-command-li\nWhat I have done in my installation is went into the C:\\Program Files (x86)\\Windows Kits\\10\\Include directory and renamed the \"wdf\" directory to \"00.remove00-to-enable.wdf\". A more elaborate solution is described in the stackoverflow article.\nAssuming you fix this issue and start a command prompt with the proper vcvars environment nmake /f Nmakefile should work.\n. ",
    "xgid": "If it helps, let me say that I think ALL we know that Dokan was left in a state that was not production-ready which means that MAJOR changes have to be made to take it to the desired point. IMHO this means that breaking API changes are probably inevitable but, most important, it's better to make them now than later. And trying to simplify complex things in a way that gives a \"handicapped\" solution in my experience is not a good way. It's better to be able to address the full complexity of the problem, but provide \"simplified paths\" for the common use cases as you all are already trying to provide in your PRs.\nIt would be great to have all the power of your solutions together in Dokany as @Liryna is asking for. Keep the good work and thank you for your efforts!\nPS: I'm sorry I don't have the skills nor the knowledge to help with the code as I would wish.\n. ",
    "JohnOberschelp": "Hi Liryna. I agree with all 4 points.\nOn 10/29/2015 7:03 AM, Liryna wrote:\n\nThank you @billziss-gh https://github.com/billziss-gh, @Corillian \nhttps://github.com/Corillian & @xgid https://github.com/xgid for \nall your inputs !\nSuch talks are very important for being able to make the right moves.\nSo I think we all agree that:\n*\nSince 0.8.0 already break compatibility with NtStatus and some\nflags removed. We can afford to continue the changes since 0.8.0\nis in pre-release for now.\nIf we replace/rewrite a DokanOperation, it have to keep the same\ncomplexity.\nIf the new DokanOperation is too different and complex, it need to\nbe separated and optional.\n*\n@Corillian <https://github.com/Corillian> (with the helpers) &\n@billziss-gh <https://github.com/billziss-gh> have the same level\nof complexity. From what we see in both PR, mirror.c has not\nreally moved so anybody can easily make the migration.\nBut we probably should (like @Corillian\n<https://github.com/Corillian> said at first :yum: ) rename\nCreateFile to ZwCreateFile for not missleading the dev and inform\nguide him to the correct msdn documentations.\n*\n```\n@Corillian https://github.com/Corillian implementation is more\nadvanced since he have already begin to manage security context.\nBut I agree with @billziss-gh https://github.com/billziss-gh, I\nthink a lots of users will not care about security context so it\nhave to be optional to manage it some how.\n-Since we add the security context parameter, it have to be\nimplemented right now to prevent to make changes in the futur.\n```\n*\nWe should right now merge CreateFile, CreateDirectory,\nOpenDirectory to the single fonction ZwCreateFile. *Does everyone\nagree with it ?*\nIf what I wrote is ok for everyone:\n@Corillian https://github.com/Corillian , Could you rename \n|CreateFile| to |ZwCreateFile| ?\nAlso, do you think you can implement IO_SECURITY_CONTEXT totally ? \n(and give a simple exemple of test :smiley: )\n@billziss-gh https://github.com/billziss-gh , does winfstest have \nalready a stable release ? I really would like to add it to Appveyor CI !\n\u2014\nReply to this email directly or view it on GitHub \nhttps://github.com/dokan-dev/dokany/issues/83#issuecomment-152190452.\n. I have also been happily and successfully using Dokany from the beginning and have also run into the bottleneck of waiting on IO. \n\nI think a much easier solution that does not break our API, would be for the driver to handle the return value STATUS_PENDING from (at least) user mode function dokanOperations->ReadFile.\nAll existing Dokany projects would continue to operate, and developers that want concurrent IO could do their own that worked by returning STATUS_PENDING in conjunction with IO handler thread(s).\n. You are right, @marinkobabic, one thread will be blocked, but not the rest of the threads.\nJust by implementing handling of STATUS_PENDING on reads, and implementing lazy writes in userland, all Dokany threads would be able to go as far as they can till they are I/O bound. For read in particular, all the driver may need to do (as @marinkobabic said) when it receives a STATUS_PENDING, is yield to other threads, and try again; the read request is still completely valid. @Corillian, wouldn't this be all you need to get your FTP requests running in parallel?\n. ",
    "zzhiyi": "Yes, dokanfuse.lib is already there. I mean dynamic libraries like dokanfuse.dll and dokan.dll. With dynamic libraries, developers could link against them with other toolchains like gcc directly without building them by developers themselves. \n. Hi @Liryna,\nThanks for your efforts for changing to dokan fuse library.\nYes, I could make struct FUSE_STAT the same as Linux struct stat but that would require all user programs to explicitly change their struct stat to struct FUSE_STAT, regardless of what compiler they are using. By using a cygwin struct stat, we can at least have msys2 and cygwin being compatible. And since mingw and MSVC have their incomplete struct stat, users who uses them would have to use struct FUSE_STAT anyway. I think the point is the struct stat in dokan fuse needs to match the one from user program.\nWhat do you think? Should I make it the same as Linux struct stat and require all users to change their source codes or at least make one compiler compatible?\n. Wiki is already updated. \nIt's enough. Exporting is not needed.\n. Successfully building it both with msys2 and cygwin. I tested running in msys2 and it works.  However there remains some issues not related to this PR, like all file size showed in explorer is 0 but in cmd it is not. I think they are related to the  structs used in dokanfuse. \n. breaks building in Appveyor, I am gonna check why.\n. Well, this dynamic structure size mechanism is new to me and I thought it was a bug. Obviously I have much to learn, thanks for the help.\n. When using fuse wrapper headers to develop applications in VS, that is the situation where SDK is not included. I am gonna make a PR\n. ",
    "kriswebdev": "Thank you. I just came to the conclusion that these incorrect flags were partially causing read-only file open issues in encfs4win, along with a coding mistake in encfs4win.\nThis bug is one cause of https://github.com/freddy77/encfs4win/issues/5. However, encfs4win doesn't support Dokany 0.8.\n. Thank you all for your replies.\nPlease find some additonal information about Paragon files/registry entries on this pastebin.\nMost important findings:\n- Paragon is using a system32\\drivers\\dokan.sys signed by Paragon with its own copyrighted INF file. Version reported by Paragon embedded dokanctl is \"Dokan driver version : 0x190\".\n- Paragon is using a SysWOW64\\dokan.dll probably built by Paragon, and that is not compatible with official Dokany 0.7.4 dokanctl and other official tools. Version reported by Paragon embedded dokanctl is \"Dokan version : 600\". It differs from official DLL at least in that it has an additional _DokanGlobalInit@4 function.\n- Paragon Dokany files were built in August this year, thus they are necessarly based on Dokany < 0.8 that was released in October.\n- Paragon has its own ParagonMounter service. It is unclear if it also uses DokanMounter service.\n- Paragon is not using Dokany mounter binary. Instead, it has a dedicated extmounter.exe binary.\nIn conclusion, neither Paragon dokan.dll or Paragon dokan.sys are compatible with Dokany 0.7.4 and clearly cause conflicts with any software based on the official Dokany 0.7.4 builds as these files are put in place of the official ones.\nBut even if Paragon was using official 0.7.4 release SYS and DLL files, it would be incompatible with any app based on Dokany 0.8 as this new version breaks compatibility. And I want to upgrade my app to version 0.8, and still be able to use it along with other apps based on other Dokany versions.\nMy point is not to blame Paragon, they certainly have good reasons to build their own Dokany SYS/DLL. Instead, I would like to find a way to have several versions of Dokany cohabiting on the same system (official dokany build or not, 0.7.4 vs 0.8...). I'm not a driver/service expert, but how could we run a \"dedicated instance\" of Dokany driver & service for a particular app?\n. ",
    "EpsilonXX": "Hi guys,\nI've just tried the new version but got the same error,could you check with this sample?\nRun mirror and call the testDokanSocket.exe from dokan,if everything is ok you should get \n\"socket succeeded: xx\"\ntestDokanSocket.zip\nThx\n. Hi Liryna,\nYep ,i built the lib on a dokan device ,I played with both flags Sector and AllocationUnit Size without a chance.\nThe linker seems to compute a 'size to write' based some information from the volume or files ,filespy shows the difference with the IRP_MJ_WRITE between using dokan or not.\n. I got the same 'bugged' size changing the sector size but I didn't check if the request was the same.\nI use the  C mirror, I forgot to mention that the linker called setallocationsize/ setEndOfFile and mix read/write within the same handle file.\n. Hi Liryna,\nFrom  the normal-filespy log ,it seems that the write operation allow to write until the EndOfFile value\n(   IRP_MJ_WRITE    00060003    FFFFC00058F90C00    ...mismatchLibSize.lib  STATUS_SUCCESS  Offset: 00000000-00000000 ToWrite: 3000 Written: 274A) (EndOfFile: 00000000-0000274A)\nin the dokan log ,it's not the case =>IRP_MJ_WRITE  00060043    FFFFE00063053448    ... mismatchLibSize.lib STATUS_SUCCESS  Offset: 00000000-00000000 ToWrite: 8000 Written: 8000 (EndOfFile: 00000000-00002700)\nAs I know ,when 'write' calls return less bytes that requested it's because an insufficient disk space ) ,might the situation we have is one of the behavior that end of file/allocation size handle. (from mdsn SetEndOfFile function can be used to truncate or extend a file.)\n. I did these quick test with my Dokan application\nin the setendofFile , I store the endoffile in my file context \nand before the write operation ,I use this pseudo code\nu32 newPosEndFile = Offset + NumberOfBytesToWrite;\n        if (file->hasEndOfFile() && newPosEndFile > file->getEndOfFile())\n        {\n            NumberOfBytesToWrite = file->getEndOfFile() - Offset;\n        }\nIt's working for the 80 libraries used on our project  (the lib matched the expected size,and final link succeeded =>exe worked like a charm).\nStill investigating..\n. Hi Liryna,\nUnfortunately ,it didn't work for me ,with RC4, the compilation never finished and the mirror application leaked with the handles.\nWith the latest fixes ,the leaks are gone but still stuck with the compilation process.\nI had to back to RC3.\nThx\n. It's working now.\nThx\n. Hi Liryna,\nWell, I didn't repro with Win10 .\nI checked again on Win7  with the latest master and from an other drive => same issue.\nI noticed that between your logs and mine  : \nthere is a createFile with the next folder after the getFileInfo that i don't explain and seems the start of the recursive check (###Create 0001 CreateFile : C:\\TestFindFile\\A\\B\\C\\D\\E\\F\\G ) /FlagsAndAttributes = 0x2000090 \nthe ###FindFiles 0000 appears only at the end when we back to the root.\n\nmounted: Q -> \\Volume{d6cc17c5-1733-4085-bce7-964f1e9f5de9}\nMounted\nCreate 0000\nCreateFile : C:\\TestFindFile\\A\\B\\C\\D\\E\\F\\G\\H\n    ShareMode = 0x7\n    FILE_SHARE_READ\n    FILE_SHARE_WRITE\n    FILE_SHARE_DELETE\n    AccessMode = 0x100001\n    FILE_READ_DATA\n    SYNCHRONIZE\n    FlagsAndAttributes = 0x0\n    OPEN_EXISTING\nCreateFile status = 0 - lastError = 0\nGetFileInfo 0000\nGetFileInfo : C:\\TestFindFile\\A\\B\\C\\D\\E\\F\\G\\H\n    GetFileInformationByHandle success, file size = 0\nresult =  0\nunknown type:54\n    DispatchQueryInformation result =  c000000d\nGetFileInfo 0000\nGetFileInfo : C:\\TestFindFile\\A\\B\\C\\D\\E\\F\\G\\H\n    GetFileInformationByHandle success, file size = 0\nresult =  0\nFileStandardInformation\nDispatchQueryInformation result =  0\nCreate 0001\nCreateFile : C:\\TestFindFile\\A\\B\\C\\D\\E\\F\\G\n    ShareMode = 0x7\n    FILE_SHARE_READ\n    FILE_SHARE_WRITE\n    FILE_SHARE_DELETE\n    AccessMode = 0x100001\n    FILE_READ_DATA\n    SYNCHRONIZE\n    FlagsAndAttributes = 0x2000090\n    FILE_ATTRIBUTE_NORMAL\n    FILE_FLAG_BACKUP_SEMANTICS\n    OPEN_EXISTING\nCreateFile status = 0 - lastError = 0\nFindFiles 0001\nFindFiles :C:\\TestFindFile\\A\\B\\C\\D\\E\\F\\G\n    FindFiles return 3 entries in C:\\TestFindFile\\A\\B\\C\\D\\E\\F\\G*\nindex from 0\nFileMatch? : . (H,0,0)\nFileMatch? : .. (H,0,0)\nFileMatch? : H (H,0,0)\n  =>return single entry\nindex to 1\nCleanup 0001\nCleanup: C:\\TestFindFile\\A\\B\\C\\D\\E\\F\\G\nClose 0001\nClose: C:\\TestFindFile\\A\\B\\C\\D\\E\\F\\G\nCreate 0002\nCreateFile : C:\\TestFindFile\\A\\B\\C\\D\\E\\F\n    ShareMode = 0x7\n    FILE_SHARE_READ\n    FILE_SHARE_WRITE\n    FILE_SHARE_DELETE\n    AccessMode = 0x100001\n    FILE_READ_DATA\n    SYNCHRONIZE\n    FlagsAndAttributes = 0x2000090\n    FILE_ATTRIBUTE_NORMAL\n    FILE_FLAG_BACKUP_SEMANTICS\n    OPEN_EXISTING\nCreateFile status = 0 - lastError = 0\nFindFiles 0002\nFindFiles :C:\\TestFindFile\\A\\B\\C\\D\\E\\F\n    FindFiles return 3 entries in C:\\TestFindFile\\A\\B\\C\\D\\E\\F*\nindex from 0\nFileMatch? : . (G,0,0)\nFileMatch? : .. (G,0,0)\nFileMatch? : G (G,0,0)\n  =>return single entry\nindex to 1\nCleanup 0002\nCleanup: C:\\TestFindFile\\A\\B\\C\\D\\E\\F\nClose 0002\nCreate 0003\nClose: C:\\TestFindFile\\A\\B\\C\\D\\E\\F\nCreateFile : C:\\TestFindFile\\A\\B\\C\\D\\E\n    ShareMode = 0x7\n    FILE_SHARE_READ\n    FILE_SHARE_WRITE\n    FILE_SHARE_DELETE\n    AccessMode = 0x100001\n    FILE_READ_DATA\n    SYNCHRONIZE\n    FlagsAndAttributes = 0x2000090\n    FILE_ATTRIBUTE_NORMAL\n    FILE_FLAG_BACKUP_SEMANTICS\n    OPEN_EXISTING\nCreateFile status = 0 - lastError = 0\nFindFiles 0003\nFindFiles :C:\\TestFindFile\\A\\B\\C\\D\\E\n    FindFiles return 3 entries in C:\\TestFindFile\\A\\B\\C\\D\\E*\nindex from 0\nFileMatch? : . (F,0,0)\nFileMatch? : .. (F,0,0)\nFileMatch? : F (F,0,0)\n  =>return single entry\nindex to 1\nCleanup 0003\nCleanup: C:\\TestFindFile\\A\\B\\C\\D\\E\nClose 0003\nClose: C:\\TestFindFile\\A\\B\\C\\D\\E\nCreate 0004\nCreateFile : C:\\TestFindFile\\A\\B\\C\\D\n    ShareMode = 0x7\n    FILE_SHARE_READ\n    FILE_SHARE_WRITE\n    FILE_SHARE_DELETE\n    AccessMode = 0x100001\n    FILE_READ_DATA\n    SYNCHRONIZE\n    FlagsAndAttributes = 0x2000090\n    FILE_ATTRIBUTE_NORMAL\n    FILE_FLAG_BACKUP_SEMANTICS\n    OPEN_EXISTING\nCreateFile status = 0 - lastError = 0\nFindFiles 0004\nFindFiles :C:\\TestFindFile\\A\\B\\C\\D\n    FindFiles return 3 entries in C:\\TestFindFile\\A\\B\\C\\D*\nindex from 0\nFileMatch? : . (E,0,0)\nFileMatch? : .. (E,0,0)\nFileMatch? : E (E,0,0)\n  =>return single entry\nindex to 1\nCleanup 0004\nCleanup: C:\\TestFindFile\\A\\B\\C\\D\nClose 0004\nClose: C:\\TestFindFile\\A\\B\\C\\D\nCreate 0005\nCreateFile : C:\\TestFindFile\\A\\B\\C\n    ShareMode = 0x7\n    FILE_SHARE_READ\n    FILE_SHARE_WRITE\n    FILE_SHARE_DELETE\n    AccessMode = 0x100001\n    FILE_READ_DATA\n    SYNCHRONIZE\n    FlagsAndAttributes = 0x2000090\n    FILE_ATTRIBUTE_NORMAL\n    FILE_FLAG_BACKUP_SEMANTICS\n    OPEN_EXISTING\nCreateFile status = 0 - lastError = 0\nFindFiles 0005\nFindFiles :C:\\TestFindFile\\A\\B\\C\n    FindFiles return 3 entries in C:\\TestFindFile\\A\\B\\C*\nindex from 0\nFileMatch? : . (D,0,0)\nFileMatch? : .. (D,0,0)\nFileMatch? : D (D,0,0)\n  =>return single entry\nindex to 1\nCleanup 0005\nCleanup: C:\\TestFindFile\\A\\B\\C\nClose 0005\nClose: C:\\TestFindFile\\A\\B\\C\nCreate 0006\nCreateFile : C:\\TestFindFile\\A\\B\n    ShareMode = 0x7\n    FILE_SHARE_READ\n    FILE_SHARE_WRITE\n    FILE_SHARE_DELETE\n    AccessMode = 0x100001\n    FILE_READ_DATA\n    SYNCHRONIZE\n    FlagsAndAttributes = 0x2000090\n    FILE_ATTRIBUTE_NORMAL\n    FILE_FLAG_BACKUP_SEMANTICS\n    OPEN_EXISTING\nCreateFile status = 0 - lastError = 0\nFindFiles 0006\nFindFiles :C:\\TestFindFile\\A\\B\n    FindFiles return 3 entries in C:\\TestFindFile\\A\\B*\nindex from 0\nFileMatch? : . (C,0,0)\nFileMatch? : .. (C,0,0)\nFileMatch? : C (C,0,0)\n  =>return single entry\nindex to 1\nCleanup 0006\nCleanup: C:\\TestFindFile\\A\\B\nClose 0006\nClose: C:\\TestFindFile\\A\\B\nCreate 0007\nCreateFile : C:\\TestFindFile\\A\n    ShareMode = 0x7\n    FILE_SHARE_READ\n    FILE_SHARE_WRITE\n    FILE_SHARE_DELETE\n    AccessMode = 0x100001\n    FILE_READ_DATA\n    SYNCHRONIZE\n    FlagsAndAttributes = 0x2000090\n    FILE_ATTRIBUTE_NORMAL\n    FILE_FLAG_BACKUP_SEMANTICS\n    OPEN_EXISTING\nCreateFile status = 0 - lastError = 0\nFindFiles 0007\nFindFiles :C:\\TestFindFile\\A\n    FindFiles return 3 entries in C:\\TestFindFile\\A*\nindex from 0\nFileMatch? : . (B,0,0)\nFileMatch? : .. (B,0,0)\nFileMatch? : B (B,0,0)\n  =>return single entry\nindex to 1\nCleanup 0007\nCleanup: C:\\TestFindFile\\A\nClose 0007\nClose: C:\\TestFindFile\\A\nCreate 0008\nCreateFile : C:\\TestFindFile\\\n    ShareMode = 0x7\n    FILE_SHARE_READ\n    FILE_SHARE_WRITE\n    FILE_SHARE_DELETE\n    AccessMode = 0x100001\n    FILE_READ_DATA\n    SYNCHRONIZE\n    FlagsAndAttributes = 0x2000090\n    FILE_ATTRIBUTE_NORMAL\n    FILE_FLAG_BACKUP_SEMANTICS\n    OPEN_EXISTING\nCreateFile status = 0 - lastError = 0\nFindFiles 0008\nFindFiles :C:\\TestFindFile\\\n    FindFiles return 3 entries in C:\\TestFindFile*\nindex from 0\nFileMatch? : A (A,0,0)\n  =>return single entry\nindex to 1\nCleanup 0008\nCleanup: C:\\TestFindFile\\\nClose 0008\nFindFiles 0000\nClose: C:\\TestFindFile\\\nFindFiles :C:\\TestFindFile\\A\\B\\C\\D\\E\\F\\G\\H\n    FindFiles return 6 entries in C:\\TestFindFile\\A\\B\\C\\D\\E\\F\\G\\H*\nindex from 0\nFileMatch? : . (b.txt,0,0)\nFileMatch? : .. (b.txt,0,0)\nFileMatch? : a.txt (b.txt,0,0)\nFileMatch? : b.txt (b.txt,0,0)\n  =>return single entry\nindex to 1\nCleanup 0000\nCleanup: C:\\TestFindFile\\A\\B\\C\\D\\E\\F\\G\\H\n. FileSpy-FindFile.txt\n. Hi Liryna,\nAccording my regression test and if i'm correct ,the issue seems to appear with\nhttps://github.com/dokan-dev/dokany/commit/a815463467b8b08405b8a55b69704e544b61c9cf\nThis one works\nhttps://github.com/dokan-dev/dokany/commit/3083fdda2e04d8fc798a7d6cb9eafceafa8bdbaa\nHere is the log from Process Monitor 3.3 ,Please rename the pdf to zip ,\nLogfile.pdf\nThx for your help.\n. I've already done some changes (like the \"ntfs\" change ) between the two versions without a chance.\nYou should be nice at least to know if someone got the same issue on seven.\nI joined 2 logs from the DokanFS output\nthe RC3 applies a DokanQueryInformation on the \\A\\B\\C\\D\\E\\F\\G\\H \nand the original version ,it's DokanDirectoryControl\ndokanFindFirstFileOk.txt\ndokanFindFirstFileOk-RC3.txt\n. Hi guys,\nSorry for not answering quickly.\nThanks @magol ,I'm not feeling alone :)\nI'm confident about the versions I tested but to be honest making mistake is easy when you have to switch drivers etc.\nI already spent few days trying to fix it without a chance and like It's fine with Win 10 ,I didn't continue.\nIn future,if there is some plan to have a metadata cache inside the drivers ,that could help to reduce these effects\n. ",
    "Niko-O": "@Liryna \nI have asked GitHub support how to set up my local repository in such a way that all files are as specified in a specific branch (using GitHub Desktop). I have not received a response yet so I'll just ask here.\nHow do I use the WDK10-VS2015 branch? If necessary I'll use the console to set it up.\n. @Liryna \nD:\\Projects\\Git\\dokany [WDK10-VS2015]> git pull master\nfatal: 'master' does not appear to be a git repository\nfatal: Could not read from remote repository.\nPlease make sure you have the correct access rights and the repository exists.\n. D:\\Projects\\Git\\dokany [WDK10-VS2015]> git pull origin master\nFrom https://github.com/Niko-O/dokany\n * branch            master     -> FETCH_HEAD\nAlready up-to-date.\nI tried to build again (Visual Studio asked me to update the libraries and stuff again, which I did) but it resulted in the same errors.\n. Ok, at first I tried the following command after I deleted my fork and local repository:\ngit clone -b WDK10-VS2015 --single-branch https://github.com/dokan-dev/dokany.git\nBuilding worked fine after that (and it didn't ask me to update the compiler).\nThen I forked again (this way I can be sure that my fork is in the same state as the original repository), deleted my local repository again and did this:\ngit clone -b WDK10-VS2015 --single-branch https://github.com/Niko-O/dokany.git\nBuilding also worked fine with that.\nThank you for your help.\n... now on to Dokan-DotNet.\n. ",
    "ivorytir": "Thanks Liryna, the fix works great!\n. Changed only this line https://github.com/dokan-dev/dokany/blob/master/sys/device.c#L427 in older dokany 0.8 and it resolved the hang in Win 10 build 16241 for me.. @benpye so Microsoft changed something and the current Dokany release doesn't hang anymore?. Hi @Liryna,\nI believe any test has an issue when the ThreadCount is 1. Tried just now, got 15 second hang/delay for the first test from the 00.t:\nexpect(\"CreateFile %s GENERIC_WRITE 0 0 CREATE_NEW FILE_ATTRIBUTE_NORMAL 0\" % name, 0)\n. ",
    "js69": "I think we need to reopen the issue. With the current repo (compiled locally) I have the issue that the preview in Explorer shows pictures only partially and Windows 10 Photo app doesn't show some pictures completely on C-mirror sample drives. Screenshots show the icon thumbnall and preview in Explorer with picture obviously not loaded completely.\n\n\nTested in a Win 10 (10586) VM.The issue occurs not always, nondeterministically, try with ten large pictures in a folder for reproduction.\n. Yeah, you are right. Sorry for duplicate.\n. I'm not sure how the batch file is supposed to handle the paths. I had to copy winfstest.exe and winfstest.py to to t\\base and then ran as command:\npython.exe .\\simpletap.py .\\t %1 %2\nIs it normal that the current mirror.exe gets this result?\ntotal ................................. ok 167/171 - not ok 4/171\n. ```\nx:\\winfstest\\TestSuite>run-winfstest b:\\tmp\nx:\\winfstest\\TestSuite\\t\\base\\00.t  ok\nx:\\winfstest\\TestSuite\\t\\base\\01.t  ok\nx:\\winfstest\\TestSuite\\t\\base\\02.t\nnot ok 3 - expect \"RemoveDirectory b:\\tmp\\97f2c53e\" ERROR_DIRECTORY - got ERROR_ACCESS_DENIED\nnot ok 8 - expect \"DeleteFile b:\\tmp\\97f2c53e\" ERROR_ACCESS_DENIED - got 0\nnot ok 2/10\nx:\\winfstest\\TestSuite\\t\\base\\03.t\nnot ok 4 - expect \"RemoveDirectory b:\\tmp\\adce052f\\foo\" ERROR_DIRECTORY - got ERROR_ACCESS_DENIED\nnot ok 1/18\nx:\\winfstest\\TestSuite\\t\\base\\04.t  ok\nx:\\winfstest\\TestSuite\\t\\base\\05.t  ok\nx:\\winfstest\\TestSuite\\t\\base\\06.t  ok\nx:\\winfstest\\TestSuite\\t\\base\\07.t  ok\nx:\\winfstest\\TestSuite\\t\\base\\08.t  ok\nx:\\winfstest\\TestSuite\\t\\base\\09.t\nnot ok 17 - expect \"CreateFile b:\\tmp\\fce5cd08 GENERIC_READ 0 0 OPEN_EXISTING FILE_FLAG_BACKUP_SEMANTICS 0\" ERROR_SHARING_VIOLATION - got 0\nnot ok 1/19\ntotal ................................. ok 167/171 - not ok 4/171\n```\n. See https://github.com/dokan-dev/dokany/pull/124\n. Instead of adding any large redist to the repo I would add a \"filecheck and download if necessary\" step into the project, using e.g. the wget command from here:\nhttps://eternallybored.org/misc/wget/\nCommands for the VC 2015 SP1 Redists:\nwget https://download.microsoft.com/download/C/E/5/CE514EAE-78A8-4381-86E8-29108D78DBD4/VC_redist.x86.exe\nwget https://download.microsoft.com/download/C/E/5/CE514EAE-78A8-4381-86E8-29108D78DBD4/VC_redist.x64.exe\n. The project will download the Redists only so the WiX compilation will work (WiX compares the hash of the file present during build time with the one the Setup via Burn will download during runtime).\nThe VC runtime download URLs in the Bundle can only be updated when new versions have been released as Microsoft does not provide working, stable URLs for the \"always latest and current\" version. LinkIds by Microsoft are extremely unreliable as I had to learn. Linkids also deliver a HTTP return code that is filtered or misinterpreted by many proxies/firewalls and generally doesn't work well with Burns download method..\nNot sure where you get the idea custom actions are used to install dependencies. Prerequisites are installed by the Bootstrapper via Burn. \nAlso, your Bundle includes an ExePackage for NetFx which I think should simply be replaced by using the NetFxExtension with WixVariable Id=\"WixMbaPrereqPackageId\" Value=\"NetFx46Web\"\n. The wget commands would be added in the Pre-Build Event of the Bootstrapper project.\nWhat component exactly would need NET 4.6.1? I'd guess your Bootstrappper-DLL should work  with 4.0, right?\n. I have integrated the difx and ServiceInstall to install driver and mounter. My MSI still executes dokanctl /i n to install network provider (not sure if that is necessary, how can I test if network provider is really active?).\nFor signing there is a sample post build event added with:\nif /I \"$(ConfigurationName)\" == \"Release\" signtool.exe sign /fd SHA256 /tr http://timestamp.geotrust.com/tsa /td SHA256 /f certificate.pfx /p PASSWORD \"$(TargetDir)$(TargetFileName)\"\nModify signtool.exe path, certificate and password according to your own settings.\nIt's important to use the SHA256 digest (for timestamp as well) because SHA1 will be deprecated.\nThe same step should be used to sign the drivers and DLLs (for the drivers instead of using the builtin signing step as it doesn't allow the timestamp parameter).\n. Liryna, I am still not sure what the Network provider is supposed to actually implement. \nIs it supposedly possible to create a network share for a virtual drive and actually access files on that share? If so, how?\n. Well, mounting without /n option allows to create a share for the virtual drive. The files on the share cannot be accessed though.I guess the implementation for actual file sharing does not exist.\n/u option files only show with cmd.exe, e.g. \"dir \\localhost\\users\". Opening thatpath in Explorer does not work on my Win10 VM.\n. Hi, I only added some project settings for Release so far, I'll add them for Debug as well (Linker needs to usw the difx wixlib etc) when I'm back at a PC.\nCheers.\n. Updated to allow Debug build. Also added pre-Build event to retrieve VC runtimes.\n. Implementing the changes now.\n\"The x86 binaries (dokan.dll mirror.exe,...) seems to not be installed on x64 system.\"\nWhy would we want to install them on x64? That seems to be a use case for developers only and they will compile from source anyway.\n. I've commited a new version for the tasks you mentioned above.\nFor signing I am now using three environment variables:\nif /I \"$(ConfigurationName)\" == \"Release\"  \"%25SIGNTOOL%25\" sign /fd SHA256 /tr http://timestamp.globalsign.com/%3fsignature=sha2 /td SHA256 /f \"%25CODESIGNCERT%25\" /p %25CODESIGNPASS%25 \"$(TargetDir)$(TargetFileName)\"\nWhen I build Dokany, I sign the drivers in \"Production\" (with SHA1) and then dual-sign them in sign.bat later on like this (you need signtool.exe from Win10 WDK for /as parameter):\n\"%SIGNTOOL%\" sign /as /fd SHA256 /v /tr http://timestamp.globalsign.com/?signature=sha2 /td SHA256 /f \"%CODESIGNCERT%\" /p %CODESIGNPASS% Win32\\Win7Release*.sys\n\nThe following issue cannot easily be resolved (and is only valid for developers who forget to sign, I guess):\n\"If the driver is not installed correctly (because not signed driver for exemple). There is not error displayed. The install succeed and propose to reboot when it should fail.\"\nWhen the driver is unsigned, on WIn10 MSIExec will show a reboot suggestion first and an error for the unsigned driver only later on, after the user denies to reboot. This MSI issue would need to be worked around in a custom action by checking the driver file first before DIFx starts.\n. The driver would not load in Win10 for me unless it was signed with Visual Studio driver signing - and that one apparently can not use SHA2 on everything (including timestamp).\nNot sure what parameters would be needed for signtool to do the same as Visual Studio driver signing does.\n. With Visual Studio Driver Signing? You can only set the File Digest Algorithm, but not Timestamp algorithm there as far as I can tell.\nCheck if your .sys file's digital certificate timestamp actually shows SHA256 as digest algorithm (in Countersignature details).\n. Do I need to import something for the GoDaddy cert? When I try the sign.bat I receive the error: \"SignTool Error: No certificates were found that met all the given criteria.\"\nI disabled Driver Signing in the project.\n. Is your certificate still SHA1? The SHA2 driver compatibility problem will not occur with that one I guess.\nSHA2 is required since January 1st, you can't even buy SHA1 anymore (unless you specifically ask for it for XP/Vista support)). Timestamping with SHA1 is also not recommended.\n. With SHA2-only signed and timestamped driver file on Win10 the \"Digitally signed driver\" error appears.\n\nDIFXAPP: INFO:   ENTER:  DriverPackageInstallW\nDIFXAPP: INFO:   Copied 'dokan.inf' to driver store...\nDIFXAPP: INFO:   Commiting queue...\nDIFXAPP: INFO:   Copied file: 'C:\\Program Files\\Dokan\\DokanLibrary\\driver\\dokan-1.sys' -> 'C:\\Windows\\system32\\DRVSTORE\\dokan_527DE26DAC757CA445D6E4F281C532388DFF74E4\\dokan-1.sys'.\nDIFXAPP: INFO:   Installing INF file \"C:\\Windows\\system32\\DRVSTORE\\dokan_527DE26DAC757CA445D6E4F281C532388DFF74E4\\dokan.inf\" of Type 2.\nDIFXAPP: INFO:   Installing File System Driver 'C:\\Windows\\system32\\DRVSTORE\\dokan_527DE26DAC757CA445D6E4F281C532388DFF74E4\\dokan.inf'\nDIFXAPP: ERROR:  Unable to start service 'dokan' because of error 0x241\n\nWith a dual SHA1 and SHA2 signed driver this does not happen.\nIf your certifcate is the one present on the Dokan beta installers with thumbprint \u200e3e c9 3b f9 43 a8 34 27 ef 6c b7 c9 cd ec 54 44 75 0d 30 a8, it is still SHA1.\n. I believe you that it will/might work with dokanctl because the routine in there probably doesn't enforce Microsoft's Authenticode policy the way DIFx does but I think the driver should be installed according to MS guidelines.\nThis is the log for the dual signed driver:\n```\nDIFXAPP: INFO:   ENTER:  DriverPackageInstallW\nDIFXAPP: INFO:   Copied 'dokan.inf' to driver store...\nDIFXAPP: INFO:   Commiting queue...\nDIFXAPP: INFO:   Copied file: 'C:\\Program Files\\Dokan\\DokanLibrary\\driver\\dokan-1.sys' -> 'C:\\Windows\\system32\\DRVSTORE\\dokan_527DE26DAC757CA445D6E4F281C532388DFF74E4\\dokan-1.sys'.\nDIFXAPP: INFO:   Installing INF file \"C:\\Windows\\system32\\DRVSTORE\\dokan_527DE26DAC757CA445D6E4F281C532388DFF74E4\\dokan.inf\" of Type 2.\nDIFXAPP: INFO:   Installing File System Driver 'C:\\Windows\\system32\\DRVSTORE\\dokan_527DE26DAC757CA445D6E4F281C532388DFF74E4\\dokan.inf'\nDIFXAPP: INFO:   Service 'dokan' was started\nDIFXAPP: SUCCESS:Installation completed with code 0x0.\nDIFXAPP: INFO:   RETURN: DriverPackageInstallW  (0x0)\nDIFXAPP: INFO:   ENTER:  DriverPackageGetPathW\nDIFXAPP: SUCCESS:Found driver store entry.\nDIFXAPP: INFO:   RETURN: DriverPackageGetPathW  (0x7A)\nDIFXAPP: INFO:   ENTER:  DriverPackageGetPathW\nDIFXAPP: SUCCESS:Found driver store entry.\nDIFXAPP: INFO:   RETURN: DriverPackageGetPathW  (0x0)\nDIFXAPP: INFO: driver store entry for 'C:\\Program Files\\Dokan\\DokanLibrary\\driver\\dokan.inf' is 'C:\\Windows\\system32\\DRVSTORE\\dokan_527DE26DAC757CA445D6E4F281C532388DFF74E4\\dokan.inf'.\nDIFXAPP: INFO: The component Id '{7FB1B753-B85C-4B39-B21C-B5061769E0C4}' is now set to point to driver store: 'C:\\Windows\\system32\\DRVSTORE\\dokan_527DE26DAC757CA445D6E4F281C532388DFF74E4\\dokan.inf'\nDIFXAPP: INFO: A reboot is not needed to install the component '{7FB1B753-B85C-4B39-B21C-B5061769E0C4}'.\nDIFXAPP: RETURN: InstallDriverPackages() 0 (0x0)\n```\nIt's not a big issue to dual sign it.\n. Corillian, If you don't mind I would try to integrate your (driver install) stuff into mine.\nI am not sure though if we really should use a custom bootstrapper like yours as it (unnecessarily) adds the requirement for .NET.\nThe use case for most Dokan deployments will have the .msi-files integrated into the App setup so practically nobody except devs will ever use the bootstrapper to install the drivers.\n. I'll attempt to integrate everything with the standard Bootstrapper then.\n. @Corillian The WiX projects won't open in Visual Studio 2015 SP1 (24720, Community) for me (\"Unsupported\"). Is that the case for you as well?\n. I apologize, the issue already exists in RC4, it works in RC3.\nUnmounted callback was added in RC4 I understand, so no, it's not called (compiled with latest DokanNet).\n. I will. \nI found this difference RC3 to RC4:\n: \nRC4 removes the case IRP_MJ_SHUTDOWN in dokan\\dokan.c which had a comment in RC3:\n// this case is used before unmount not shutdown\nThe VOID DispatchUnmount function was also removed.\nWas that dead code or how was it replaced?\n. The code from DispatchUnmount has been moved to DllMain case DLL_PROCESS_DETACH.\nDllMain will apparently not be called when an apllication has been terminated via Enviroment.Exit (aka TerminateProcess WinAPI).\nThere needs to be a cleanup for Unmount like it was before.\n. This issue I had was in correlation with a forced abortion of the thread that had the Dokan.Mount running. When I terminate the thread gracefully (which depended on Unmount actually ending the Dokan.Mount) and actually wait for the thread to end (which takes about 2 secs) before shutting down the application, it works nicely. But this is still a different behavior compared to RC3.\n. Could you please try and identify the registry entries that are created by Paragon for the Dokany driver in case they are different from HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\DokanLibrary?\nWe will be able to check with WiX for the presence of any existing driver and give a warning accordingly (i.e. \"An obsolete version of the Dokan Library is still installed on this system. Please uninstall the existing Dokan Library before executing this setup again. Installing a newer Dokan driver might break compatibilty with applications relying on the older version.\")\n. We can easily add the generated version number to all file names. I would suggest using the same naming scheme for all files, dokan-x.y.sys, dokan-x.y.dll, dokannp-x.y.dll, dokanfuse-x.y.dll\n. If backwards compatibility of an updated dokanX.sys with applications built for an older Dokan revision of the same major version really is no issue, then I would agree. Else there will have to be many changes to the major version.\n. To test this with DokanNet, I only need to change the DllImport(\"dokan.dll\") line in NativeMethods?\n. It seems to work correctly with the C mirror.exe.\nWhat operation would be the best candidate for the cause of the issue in DokanNetMirror?\n. I think I found the cause: FindFiles did not return \".\" and \"..\" items in my code and probably neither in DokanNetMirror.\n. It works now. I think the date info (CreationTime etc) for the items should be set to the info of the operation's current folder though.\n. It's a result for most exes. You can test it with e.g. http://www.irfanview.info/files/iview441g_x64_setup.exe\n. Same issue with the mountmanager-Branch, as far as I can tell (the dokan_install would not build in that branch so I used my WiX setup project. Only difference is removal of mounter.exe service?).\n. Sorry, my mistake, my system had NSIS 2.46, not NSIS3 in the expected folder. Installer builds correctly with NSIS3.\n. I can confirm it works from a Admin cmd.exe but It also gives the same error when attempting to \"Run as administrator\" from Explorer.\n. DokanNet GetFileSecurityProxy returns DokanResult.BufferOverflow without admin rights, with admin rights that does not happen.\n. From what I tested with a few executables that seems indeed to be a factor. If the exe does not require admin rights by itself, it will start.\nSupplying a manifest file with \"requireAdministrator\" does not change anything for non-admin exes, neither does supplying a manifest file with \"asInvoker\" change a thing for admin exes.\nTurning UAC off (i.e. to the lowest level) does not change anything either.\n. I can confirm it works with DokanNet as well when I set fileSystemName = \"FAT\". It also works with \"NTFS\".\n. Wow, that's a quite heavy new requirement MS drops on everybody.\nFrom my experience: never trust that Windows Update will do anything for you. In large networks it will be disabled by default respectively only admin-controlled updates are rolled out so many users might never see an update unless they manually force-install it.\nI will implement the CRT update install as on demand download in the wxs just like we do it for the VC 2015 runtime, we already detect the OS anyway.\n. OK, the msi files will show an error message if the UCRT is not installed:\n\"Installation failed because the Universal C Runtime is not installed. You can download it here: https://support.microsoft.com/en-us/kb/2999226\"\nThe bundle is going to install the UCRT when it's not already present.\nMy check looks like this:\n<Property Id=\"UCRTINSTALLED\">\n  <DirectorySearch Id=\"searchSystem2\" Path=\"[SystemFolder]\" Depth=\"0\">\n    <FileSearch Id=\"UCRT_FileSearch\"\n                Name=\"ucrtbase.dll\"\n                MinVersion=\"10.0.10240.16389\"/>\n  </DirectorySearch>\n</Property>\n. My branch is updated now and KB2999226 should be downloaded and installed by the Bootstrapper if it wasn't already (couldn't test it myself yet). \nMSIs will show an error if UCRT (KB2999226) is not installed.\nYour powershell wget instruction is now used for all redists.\nSize of the Setup.exe didnot increase as MSUs are downloaded on demand only. DokanSetup.exe is 4.070.728 bytes signed here. A zip with all Redist files included is 37 MB.\n. Updated my branch to fix bundle syntax.\nI have now tested on a clean Win 8.1 image and found a new issue: KB2999226 will only allow to be installed when a certain Win 8.1 update level has been reached before, apparently to what was current in July 2015. I'll investigate further.\n. MSI error text has been modified to show:\n\"Installation failed because the Universal C Runtime is not installed. Please run Windows Update and install all required Windows updates. You can download the UCRT separately from here: https://support.microsoft.com/en-us/kb/2999226\"\n. I have noticed the VC 2015 SP1 runtimes try to install KB2999226 already.\nDinesh Ramalingam was probably testing with the not-SP1 runtime, right?\n. Unfortunately the syntax and behavior of VersionNT in Bundles is different than it is for Products (and not or hardly at all documented) - you need the \"v\" in the Bundle. The code in the bundle is tested on a few VMs but it cannot hurt to verify on x86 specifically.\n. Hi,\nI have a similar problem now with the Photos app in Windows 10.\nSymptom: Photos never finishes saving changes. Cmd.exe with it and Mirror.exe can not be terminated, attempts to do so from taskmgr give:\nUnable to terminate process\nThe operation could not be completed.\nAccess is denied.\nSteps to reproduce:\n1. Started WIndows 10 10586\n2. DokanSetup-1.0.1.0791.exe installed\n3. Started mirror /r c:\\ /l b /s\n4. In Photos open a .jpg file from mirror drive\n5. In Photos rotate the picture by 90 degrees\n6. Try to Edit the jpg (Ctrl-E)\n7. Photos shows \"Changes are Saved\" forever. Mirror log shows no activity anymore.\n8.  CTRL-C for mirror goes to unload, success, then hangs forever.\nLog:\n\nMicrosoft Windows Version 10.0.10586 2015 Microsoft Corporation. All rights reserved.\nC:\\Program Files\\Dokan\\Dokan Library-1.0.1\\sample\\mirror>mirror /r c:\\ /l b /s\nAllocationUnitSize: 512 SectorSize: 512\ndevice opened\nQueryVolumeInfo -001\nmounted: b -> \\Volume{d6cc17c5-1734-4085-bce7-964f1e9f5de9}\nCreate 0000\nCreateFile status = c0000034\nCreate 0001\nCreateFile status = c0000034\nCreate 0002\nCreateFile status = c0000034\nCreate 0003\nCreateFile status = 0\nGetFileInfo 0003\n    result =  0\n\nunknown type:54\n        DispatchQueryInformation result =  c000000d\nGetFileInfo 0003\n    result =  0\n    FileStandardInformation\n    DispatchQueryInformation result =  0\n\nGetFileInfo 0003\n    result =  0\n    FileBasicInformation\n    DispatchQueryInformation result =  0\n\nCleanup 0003\nClose 0003\nCreate 0004\nCreateFile status = c0000034\nCreate 0005\nCreateFile status = 0\nGetFileInfo 0005\n    result =  0\n    FileStandardInformation\n    DispatchQueryInformation result =  0\n\nQueryVolumeInfo 0005\nQueryVolumeInfo 0005\nCleanup 0005\nClose 0005\nCreate 0006\nCreateFile status = 0\nGetFileInfo 0006\n    result =  0\n    FileStandardInformation\n    DispatchQueryInformation result =  0\n\nQueryVolumeInfo 0006\nQueryVolumeInfo 0006\nCleanup 0006\nClose 0006\nCreate 0007\nCreateFile status = 0\nGetFileInfo 0007\n    result =  0\n    FileStandardInformation\n    DispatchQueryInformation result =  0\n\nFindFiles 0007\nindex from 0\nFileMatch? : $Recycle.Bin (_,0,0)\n  =>return single entry\nindex to 1\nCreate 0008\nCreateFile status = 0\nindex from 1\nFileMatch? : $Recycle.Bin (,1,0)\nFileMatch? : bootmgr (,1,1)\n  =>return\nFileMatch? : BOOTNXT (_,1,2)\nCreate 0009\n=>return\nFileMatch? : Documents and Settings (,1,3)\n  =>return\nFileMatch? : Encrypted (,1,4)\n  =>return\nFileMatch? : inetpub (,1,5)\n  =>return\nFileMatch? : pagefile.sys (,1,6)\n  =>return\nFileMatch? : PerfLogs (,1,7)\nCreateFile status = 0\n  =>return\nFileMatch? : Program Files (,1,8)\n  =>return\nFileMatch? : Program Files (x86) (,1,9)\n  =>return\nFileMatch? : ProgramData (,1,10)\n  =>return\nFileMatch? : Recovery (,1,11)\n  =>return\nFileMatch? : swapfile.sys (,1,12)\n  =>return\nFileMatch? : System Volume Information (,1,13)\n  =>return\nFileMatch? : temp (,1,14)\n  =>return\nFileMatch? : Tools (,1,15)\n  =>return\nFileMatch? : Users (,1,16)\n  =>return\nFileMatch? : Windows (_,1,17)\n  =>return\nindex to 18\nGetFileInfo 0009\n    result =  0\n    FileBasicInformation\n    DispatchQueryInformation result =  0\n\nindex from 18\nFileMatch? : $Recycle.Bin (,18,0)\nFileMatch? : bootmgr (,18,1)\nFileMatch? : BOOTNXT (,18,2)\nFileMatch? : Documents and Settings (,18,3)\nFileMatch? : Encrypted (,18,4)\nFileMatch? : inetpub (,18,5)\nFileMatch? : pagefile.sys (,18,6)\nFileMatch? : PerfLogs (,18,7)\nFileMatch? : Program Files (,18,8)\nFileMatch? : Program Files (x86) (,18,9)\nFileMatch? : ProgramData (,18,10)\nFileMatch? : Recovery (,18,11)\nFileMatch? : swapfile.sys (,18,12)\nFileMatch? : System Volume Information (,18,13)\nFileMatch? : temp (,18,14)\nFileMatch? : Tools (,18,15)\nFileMatch? : Users (,18,16)\nFileMatch? : Windows (,18,17)\n  STATUS_NO_MORE_FILES\nGetFileInfo 0009\n    result =  0\n    FileStandardInformation\n    DispatchQueryInformation result =  0\n\nCleanup 0007\nCleanup 0009\nClose 0007\nClose 0009\nCreate 0010\nCreateFile status = 0\nQueryVolumeInfo 0010\nQueryVolumeInfo 0010\nCleanup 0010\nClose 0010\nCreate 0011\nCreateFile status = 0\nQueryVolumeInfo 0011\nCleanup 0011\nClose 0011\nCreate 0012\nCreateFile status = 0\nFindFiles 0012\nindex from 0\nFileMatch? : $Recycle.Bin (,0,0)\n  =>return single entry\nindex to 1\nindex from 1\nFileMatch? : $Recycle.Bin (,1,0)\nFileMatch? : bootmgr (,1,1)\n  =>return\nFileMatch? : BOOTNXT (,1,2)\n  =>return\nFileMatch? : Documents and Settings (,1,3)\n  =>return\nFileMatch? : Encrypted (,1,4)\n  =>return\nFileMatch? : inetpub (,1,5)\n  =>return\nFileMatch? : pagefile.sys (,1,6)\n  =>return\nFileMatch? : PerfLogs (,1,7)\n  =>return\nFileMatch? : Program Files (,1,8)\n  =>return\nFileMatch? : Program Files (x86) (,1,9)\n  =>return\nFileMatch? : ProgramData (,1,10)\n  =>return\nFileMatch? : Recovery (,1,11)\n  =>return\nFileMatch? : swapfile.sys (,1,12)\n  =>return\nFileMatch? : System Volume Information (,1,13)\n  =>return\nFileMatch? : temp (,1,14)\n  =>return\nFileMatch? : Tools (,1,15)\n  =>return\nFileMatch? : Users (,1,16)\n  =>return\nFileMatch? : Windows (,1,17)\n  =>return\nindex to 18\nindex from 18\nFileMatch? : $Recycle.Bin (,18,0)\nFileMatch? : bootmgr (,18,1)\nFileMatch? : BOOTNXT (,18,2)\nFileMatch? : Documents and Settings (,18,3)\nFileMatch? : Encrypted (,18,4)\nFileMatch? : inetpub (,18,5)\nFileMatch? : pagefile.sys (,18,6)\nFileMatch? : PerfLogs (,18,7)\nFileMatch? : Program Files (,18,8)\nFileMatch? : Program Files (x86) (,18,9)\nFileMatch? : ProgramData (,18,10)\nFileMatch? : Recovery (,18,11)\nFileMatch? : swapfile.sys (,18,12)\nFileMatch? : System Volume Information (,18,13)\nFileMatch? : temp (,18,14)\nFileMatch? : Tools (,18,15)\nFileMatch? : Users (,18,16)\nFileMatch? : Windows (_,18,17)\n  STATUS_NO_MORE_FILES\nCleanup 0012\nClose 0012\nCreate 0013\nCreateFile status = 0\nQueryVolumeInfo 0013\nQueryVolumeInfo 0013\nCleanup 0013\nClose 0013\nCreate 0014\nCreateFile status = 0\nQueryVolumeInfo 0014\nCleanup 0014\nClose 0014\nCleanup 0008\nClose 0008\nCreate 0015\nCreateFile status = 0\nGetFileInfo 0015\n    result =  0\n    FileStandardInformation\n    DispatchQueryInformation result =  0\n\nQueryVolumeInfo 0015\nQueryVolumeInfo 0015\nCleanup 0015\nClose 0015\nCreate 0016\nCreateFile status = 0\nGetFileInfo 0016\n    result =  0\n    FileStandardInformation\n    DispatchQueryInformation result =  0\n\nQueryVolumeInfo 0016\nCleanup 0016\nClose 0016\nCreate 0017\nCreateFile status = 0\nGetFileInfo 0017\n    result =  0\n    FileStandardInformation\n    DispatchQueryInformation result =  0\n\nFindFiles 0017\nindex from 0\nFileMatch? : $Recycle.Bin (_,0,0)\n  =>return single entry\nindex to 1\nCreate 0018\nCreateFile status = 0\nindex from 1\nFileMatch? : $Recycle.Bin (,1,0)\nFileMatch? : bootmgr (,1,1)\n  =>return\nFileMatch? : BOOTNXT (,1,2)\n  =>return\nFileMatch? : Documents and Settings (,1,3)\n  =>return\nFileMatch? : Encrypted (,1,4)\n  =>return\nFileMatch? : inetpub (,1,5)\n  =>return\nFileMatch? : pagefile.sys (,1,6)\n  =>return\nFileMatch? : PerfLogs (,1,7)\n  =>return\nFileMatch? : Program Files (,1,8)\n  =>return\nFileMatch? : Program Files (x86) (,1,9)\n  =>return\nFileMatch? : ProgramData (,1,10)\n  =>return\nFileMatch? : Recovery (,1,11)\n  =>return\nFileMatch? : swapfile.sys (,1,12)\n  =>return\nFileMatch? : System Volume Information (,1,13)\n  =>return\nFileMatch? : temp (,1,14)\n  =>return\nFileMatch? : Tools (,1,15)\n  =>return\nFileMatch? : Users (,1,16)\n  =>return\nFileMatch? : Windows (,1,17)\n  =>return\nindex to 18\nCreate 0019\nCreateFile status = 0\nindex from 18\nFileMatch? : $Recycle.Bin (,18,0)\nFileMatch? : bootmgr (,18,1)\nFileMatch? : BOOTNXT (,18,2)\nFileMatch? : Documents and Settings (,18,3)\nFileMatch? : Encrypted (,18,4)\nFileMatch? : inetpub (,18,5)\nFileMatch? : pagefile.sys (,18,6)\nFileMatch? : PerfLogs (,18,7)\nFileMatch? : Program Files (,18,8)\nFileMatch? : Program Files (x86) (,18,9)\nFileMatch? : ProgramData (,18,10)\nFileMatch? : Recovery (,18,11)\nFileMatch? : swapfile.sys (,18,12)\nFileMatch? : System Volume Information (,18,13)\nFileMatch? : temp (,18,14)\nFileMatch? : Tools (,18,15)\nFileMatch? : Users (,18,16)\nFileMatch? : Windows (,18,17)\n  STATUS_NO_MORE_FILES\nCleanup 0017\nGetFileInfo 0019\n    result =  0\n    FileBasicInformation\n    DispatchQueryInformation result =  0\n\nCreate 0020\nClose 0017\nGetFileInfo 0019\n    result =  0\n    FileStandardInformation\n    DispatchQueryInformation result =  0\n\nCreateFile status = 0\nCleanup 0019\nQueryVolumeInfo 0020\nClose 0019\nQueryVolumeInfo 0020\nCleanup 0020\nClose 0020\nCreate 0021\nCreateFile status = 0\nQueryVolumeInfo 0021\nCleanup 0021\nClose 0021\nCleanup 0018\nClose 0018\nCreate 0022\nCreateFile status = 0\nGetFileInfo 0022\n    result =  0\n    FileStandardInformation\n    DispatchQueryInformation result =  0\n\nQueryVolumeInfo 0022\nQueryVolumeInfo 0022\nCleanup 0022\nClose 0022\nCreate 0023\nCreateFile status = 0\nGetFileInfo 0023\n    result =  0\n    FileStandardInformation\n    DispatchQueryInformation result =  0\n\nFindFiles 0023\nindex from 0\nFileMatch? : . (_,0,0)\n  =>return single entry\nindex to 1\nCreate 0024\nCreateFile status = 0\nindex from 1\nFileMatch? : . (,1,0)\nFileMatch? : .. (,1,1)\n  =>return\nFileMatch? : DokanyTestCert (,1,2)\n  =>return\nFileMatch? : iview441g_x64_setup.exe (,1,3)\n  =>return\nFileMatch? : xkcd_public_key.png (,1,4)\n  =>return\nFileMatch? : zorc1.jpg (,1,5)\n  =>return\nindex to 6\nindex from 6\nFileMatch? : . (,6,0)\nFileMatch? : .. (,6,1)\nFileMatch? : DokanyTestCert (_,6,2)\nCreate 0025\nFileMatch? : iview441g_x64_setup.exe (,6,3)\nFileMatch? : xkcd_public_key.png (,6,4)\nFileMatch? : zorc1.jpg (_,6,5)\n  STATUS_NO_MORE_FILES\nCreateFile status = 0\nCleanup 0023\nGetFileInfo 0025\nClose 0023\n    result =  0\n    FileStandardInformation\n    DispatchQueryInformation result =  0\n\nCreate 0026\nGetFileInfo 0025\n    result =  0\n    FileBasicInformation\n    DispatchQueryInformation result =  0\n\nCreateFile status = 0\nGetFileInfo 0025\n    result =  0\n    FileStandardInformation\n    DispatchQueryInformation result =  0\n\nQueryVolumeInfo 0026\nCleanup 0025\nQueryVolumeInfo 0026\nClose 0025\nCleanup 0026\nClose 0026\nCreate 0027\nCreateFile status = 0\nQueryVolumeInfo 0027\nCleanup 0027\nClose 0027\nCreate 0028\nCreateFile status = 0\nGetFileInfo 0028\n    result =  0\n    FileBasicInformation\n    DispatchQueryInformation result =  0\n\nCleanup 0028\nClose 0028\nCreate 0029\nCreateFile status = 0\nGetFileInfo 0029\n    result =  0\n    FileBasicInformation\n    DispatchQueryInformation result =  0\n\nGetFileInfo 0029\n    result =  0\n    FileStandardInformation\n    DispatchQueryInformation result =  0\n\nGetFileInfo 0029\n    result =  0\n\nunknown type:55\n        DispatchQueryInformation result =  c000000d\nFindFiles 0029\nindex from 0\nFileMatch? : . (zorc1.jpg,0,0)\nFileMatch? : .. (zorc1.jpg,0,0)\nFileMatch? : DokanyTestCert (zorc1.jpg,0,0)\nFileMatch? : iview441g_x64_setup.exe (zorc1.jpg,0,0)\nFileMatch? : xkcd_public_key.png (zorc1.jpg,0,0)\nFileMatch? : zorc1.jpg (zorc1.jpg,0,0)\n  =>return single entry\nindex to 1\nCleanup 0029\nClose 0029\nCreate 0030\nCreateFile status = c0000022\nCreate 0031\nCreateFile status = 0\nCleanup 0031\nClose 0031\nCreate 0032\nCreateFile status = 0\nCleanup 0032\nClose 0032\nCreate 0033\nCreateFile status = 0\nCleanup 0033\nClose 0033\nCleanup 0024\nClose 0024\nCreate 0034\nCreateFile status = 0\nGetFileInfo 0034\n    result =  0\n    FileStandardInformation\n    DispatchQueryInformation result =  0\n\nGetFileInfo 0034\n    result =  0\n    FileBasicInformation\n    DispatchQueryInformation result =  0\n\nGetFileInfo 0034\n    result =  0\n    FileStandardInformation\n    DispatchQueryInformation result =  0\n\nGetFileInfo 0034\n    result =  0\n    FileInternalInformation\n    DispatchQueryInformation result =  0\n\nGetFileInfo 0034\n    result =  0\n    FileBasicInformation\n    DispatchQueryInformation result =  0\n\nGetFileInfo 0034\n    result =  0\n    FileBasicInformation\n    DispatchQueryInformation result =  0\n\nQueryVolumeInfo 0034\nGetFileInfo 0034\n    result =  0\n    FileStandardInformation\n    DispatchQueryInformation result =  0\n\nRead 0034\nRead 0034\nCreate 0035\nCreateFile status = 0\nGetFileInfo 0035\n    result =  0\n    FileBasicInformation\n    DispatchQueryInformation result =  0\n\nGetFileInfo 0035\n    result =  0\n    FileBasicInformation\n    DispatchQueryInformation result =  0\n\nGetFileInfo 0035\n    result =  0\n    FileStandardInformation\n    DispatchQueryInformation result =  0\n\nGetFileInfo 0035\n    result =  0\n    FileStandardInformation\n    DispatchQueryInformation result =  0\n\nCreate 0036\nCreateFile status = 0\nGetFileInfo 0036\n    result =  0\n    FileNetworkOpenInformation\n    DispatchQueryInformation result =  0\n\nCleanup 0036\nClose 0036\nCreate 0037\nCreateFile status = 0\nGetFileInfo 0037\n    result =  0\n    FileNetworkOpenInformation\n    DispatchQueryInformation result =  0\n\nCleanup 0037\nClose 0037\nCreate 0038\nCreateFile status = c0000034\nCreate 0039\nCreateFile status = c0000034\nCreate 0040\nCreateFile status = c0000022\nCreate 0041\nCreateFile status = 0\nGetFileInfo 0041\n    result =  0\n    FileStandardInformation\n    DispatchQueryInformation result =  0\n\nCleanup 0041\nClose 0041\nCreate 0042\nCreateFile status = 0\nGetFileInfo 0042\n    result =  0\n    FileStandardInformation\n    DispatchQueryInformation result =  0\n\nCleanup 0042\nClose 0042\nCreate 0043\nCreateFile status = 0\nGetFileInfo 0043\n    result =  0\n    FileStandardInformation\n    DispatchQueryInformation result =  0\n\nCleanup 0043\nClose 0043\nCleanup 0035\nClose 0035\nCleanup 0034\nClose 0034\nCreate 0044\nCreateFile status = 0\nGetFileInfo 0044\n    result =  0\n    FileStandardInformation\n    DispatchQueryInformation result =  0\n\nGetFileInfo 0044\n    result =  0\n    FileBasicInformation\n    DispatchQueryInformation result =  0\n\nGetFileInfo 0044\n    result =  0\n    FileStandardInformation\n    DispatchQueryInformation result =  0\n\nGetFileInfo 0044\n    result =  0\n    FileInternalInformation\n    DispatchQueryInformation result =  0\n\nGetFileInfo 0044\n    result =  0\n    FileBasicInformation\n    DispatchQueryInformation result =  0\n\nGetFileInfo 0044\n    result =  0\n    FileBasicInformation\n    DispatchQueryInformation result =  0\n\nQueryVolumeInfo 0044\nGetFileInfo 0044\n    result =  0\n    FileStandardInformation\n    DispatchQueryInformation result =  0\n\nRead 0044\nRead 0044\nCreate 0045\nCreateFile status = 0\nGetFileInfo 0045\n    result =  0\n    FileBasicInformation\n    DispatchQueryInformation result =  0\n\nGetFileInfo 0045\n    result =  0\n    FileBasicInformation\n    DispatchQueryInformation result =  0\n\nGetFileInfo 0045\n    result =  0\n    FileStandardInformation\n    DispatchQueryInformation result =  0\n\nGetFileInfo 0045\n    result =  0\n    FileStandardInformation\n    DispatchQueryInformation result =  0\n\nGetFileInfo 0045\n    result =  0\n    FileStandardInformation\n    DispatchQueryInformation result =  0\n\nGetFileInfo 0045\n    result =  0\n    FileStandardInformation\n    DispatchQueryInformation result =  0\n\nCreate 0046\nCreateFile status = 0\nGetFileInfo 0046\n    result =  0\n    FileBasicInformation\n    DispatchQueryInformation result =  0\n\nGetFileInfo 0046\n    result =  0\n    FileBasicInformation\n    DispatchQueryInformation result =  0\n\nCreate 0047\nCreateFile status = 0\nGetFileInfo 0047\n    result =  0\n    FileBasicInformation\n    DispatchQueryInformation result =  0\n\nGetFileInfo 0047\n    result =  0\n    FileBasicInformation\n    DispatchQueryInformation result =  0\n\nGetFileInfo 0047\n    result =  0\n    FileStandardInformation\n    DispatchQueryInformation result =  0\n\nGetFileInfo 0047\n    result =  0\n    FileStandardInformation\n    DispatchQueryInformation result =  0\n\nCreate 0048\nCreateFile status = 0\nGetFileInfo 0048\n    result =  0\n    FileNetworkOpenInformation\n    DispatchQueryInformation result =  0\n\nCleanup 0048\nClose 0048\nCreate 0049\nCreateFile status = 0\nGetFileInfo 0049\n    result =  0\n    FileNetworkOpenInformation\n    DispatchQueryInformation result =  0\n\nCleanup 0049\nClose 0049\nCreate 0050\nCreateFile status = c0000034\nCreate 0051\nCreateFile status = c0000034\nCleanup 0047\nClose 0047\nCleanup 0046\nClose 0046\nCreate 0052\nCreateFile status = 0\nGetFileInfo 0052\n    result =  0\n    FileBasicInformation\n    DispatchQueryInformation result =  0\n\nGetFileInfo 0052\n    result =  0\n    FileBasicInformation\n    DispatchQueryInformation result =  0\n\nCreate 0053\nCreateFile status = 0\nGetFileInfo 0053\n    result =  0\n    FileBasicInformation\n    DispatchQueryInformation result =  0\n\nGetFileInfo 0053\n    result =  0\n    FileBasicInformation\n    DispatchQueryInformation result =  0\n\nGetFileInfo 0053\n    result =  0\n    FileStandardInformation\n    DispatchQueryInformation result =  0\n\nGetFileInfo 0053\n    result =  0\n    FileStandardInformation\n    DispatchQueryInformation result =  0\n\nRead 0053\nRead 0053\nsend global release for b:\nIoctl failed for wait with code 995.\nThread will be terminated\nIoctl failed for wait with code 995.\nThread will be terminated\nIoctl failed for wait with code 995.\nThread will be terminated\nIoctl failed for wait with code 995.\nThread will be terminated\nIoctl failed for wait with code 995.\nThread will be terminated\nDokan Error: DokanKeepAlive CreateFile failed .\\Volume{d6cc17c5-1734-4085-bce7-964f1e9f5de9}: 2\nunload\nSuccess\n\n[Hangs then forever]\n. c:\\Program Files\\Dokan\\DokanLibrary\\sample\\mirror>mirror /r c:\\ /l b /s /g /d\nAttempting to add SE_SECURITY_NAME privilege to process token\nsuccess: privilege already present\nDokan: debug mode on\nDokan: use stderr\ndevice opened\nmounted: b -> \\Volume{d6cc17c5-1730-4085-bce7-964f1e9f5de9}\nMounted\nCreate 0000\nCreateFile : c:\\System Volume Information\\MountPointManagerRemoteDatabase\n  AccountName: SYSTEM, DomainName: NT-AUTORIT\u2500T\n        ShareMode = 0x0\n        AccessMode = 0x12019f\n        FILE_READ_DATA\n        FILE_READ_ATTRIBUTES\n        FILE_READ_EA\n        READ_CONTROL\n        FILE_WRITE_DATA\n        FILE_WRITE_ATTRIBUTES\n        FILE_WRITE_EA\n        FILE_APPEND_DATA\n        SYNCHRONIZE\n        STANDARD_RIGHTS_READ\n        STANDARD_RIGHTS_WRITE\n        STANDARD_RIGHTS_EXECUTE\n        FlagsAndAttributes = 0x86\n        FILE_ATTRIBUTE_HIDDEN\n        FILE_ATTRIBUTE_NORMAL\n        FILE_ATTRIBUTE_SYSTEM\n        OPEN_EXISTING\n        error code = 5\nCreateFile status = 3221225506 - lastError = 5\nCreate 0001\nCreateFile : c:\\$Extend\\$Reparse:$R:$INDEX_ALLOCATION\n  AccountName: SYSTEM, DomainName: NT-AUTORIT\u2500T\n        ShareMode = 0x3\n        FILE_SHARE_READ\n        FILE_SHARE_WRITE\n        AccessMode = 0x120089\n        FILE_READ_DATA\n        FILE_READ_ATTRIBUTES\n        FILE_READ_EA\n        READ_CONTROL\n        SYNCHRONIZE\n        STANDARD_RIGHTS_READ\n        STANDARD_RIGHTS_WRITE\n        STANDARD_RIGHTS_EXECUTE\n        FlagsAndAttributes = 0x2000000\n        FILE_FLAG_BACKUP_SEMANTICS\n        OPEN_EXISTING\nCreateFile status = 0 - lastError = 0\nnot suported type 33\nCleanup 0001\nCleanup: c:\\$Extend\\$Reparse:$R:$INDEX_ALLOCATION\nClose 0001\nClose: c:\\$Extend\\$Reparse:$R:$INDEX_ALLOCATION\n\nThere is stuff under HKEY_LOCAL_MACHINE\\SYSTEM\\MountedDevices in REG_BIN items called \\DosDevices\\X, #{891e2808-b928-11e5-bf99-08002747c3d1} and \\??\\Volume{891e285f-b928-11e5-bf99-08002747c3d1} etc.corresponding to the {d6cc17c5-1730-4085-bce7-964f1e9f5de9} from above. After deleting those and rebooting the reaction changes slightly.\n\nMicrosoft Windows Version 10.0.10586 2015 Microsoft Corporation. Alle Rechte vorbehalten.\nC:\\Windows\\system32>cd \"c:\\Program Files\\Dokan\\DokanLibrary\\sample\\mirror\"\nc:\\Program Files\\Dokan\\DokanLibrary\\sample\\mirror>....\\dokanctl /d 9\nDriver path: 'C:\\Windows\\system32\\drivers\\dokan.sys'\nset debug mode ok\nc:\\Program Files\\Dokan\\DokanLibrary\\sample\\mirror>mirror /r c:\\ /l y /s /d /g\nAttempting to add SE_SECURITY_NAME privilege to process token\nsuccess: privilege already present\nDokan: debug mode on\nDokan: use stderr\ndevice opened\nmounted: y -> \\Volume{d6cc17c5-1734-4085-bce7-964f1e9f5de9}\nMounted\nCreate 0000\nCreateFile : c:\\System Volume Information\\MountPointManagerRemoteDatabase\n  AccountName: SYSTEM, DomainName: NT-AUTORIT\u2500T\n        ShareMode = 0x0\n        AccessMode = 0x12019f\n        FILE_READ_DATA\n        FILE_READ_ATTRIBUTES\n        FILE_READ_EA\n        READ_CONTROL\n        FILE_WRITE_DATA\n        FILE_WRITE_ATTRIBUTES\n        FILE_WRITE_EA\n        FILE_APPEND_DATA\n        SYNCHRONIZE\n        STANDARD_RIGHTS_READ\n        STANDARD_RIGHTS_WRITE\n        STANDARD_RIGHTS_EXECUTE\n        FlagsAndAttributes = 0x86\n        FILE_ATTRIBUTE_HIDDEN\n        FILE_ATTRIBUTE_NORMAL\n        FILE_ATTRIBUTE_SYSTEM\n        OPEN_EXISTING\n        error code = 5\nCreateFile status = 3221225506 - lastError = 5\nCreate 0001\nCreateFile : c:\\$Extend\\$Reparse:$R:$INDEX_ALLOCATION\n  AccountName: SYSTEM, DomainName: NT-AUTORIT\u2500T\n        ShareMode = 0x3\n        FILE_SHARE_READ\n        FILE_SHARE_WRITE\n        AccessMode = 0x120089\n        FILE_READ_DATA\n        FILE_READ_ATTRIBUTES\n        FILE_READ_EA\n        READ_CONTROL\n        SYNCHRONIZE\n        STANDARD_RIGHTS_READ\n        STANDARD_RIGHTS_WRITE\n        STANDARD_RIGHTS_EXECUTE\n        FlagsAndAttributes = 0x2000000\n        FILE_FLAG_BACKUP_SEMANTICS\n        OPEN_EXISTING\nCreateFile status = 0 - lastError = 0\nnot suported type 33\nCleanup 0001\nCleanup: c:\\$Extend\\$Reparse:$R:$INDEX_ALLOCATION\nClose 0001\nClose: c:\\$Extend\\$Reparse:$R:$INDEX_ALLOCATION\n\nSubsequent runs of mirror show this again:\nDokanError: Ioctl failed with code 87\n  AccountName: SYSTEM, DomainName: NT-AUTORIT\u2500T\nIOCTL_GET_ACCESS_TOKEN failed\n. I recompiled and rebuilt it with my WiX installer, it now works as expected (it also now created DbgView output which it didn't before). Can be closed for now.\nI'll try to reproduce the previous issue anyway.\n. I can confirm this issue is fixed in latest revision. Not sure yet though if the new version isn't considerably slower than before listing files in Explorer.\n. Liryna, I'll commit a tool end of this week to automatically increase the product codes.\nFor MSIs though to avoid update problems we would also ideally have an always increasing revision number, i.e. 1.0.0.x where x < 65536. Is there an easy way to retrieve the git revision number?\n. Just wanted to report that a current build from last Friday works fine in my Win7-x86 VM; explorer shows drive after mounting and Explorer window on that drive is closed on unmount.\n. Ah, I only tested with my own FS. Did it now with mirror.exe, it does not work with that option (mirror.exe started in Run as Admin cmd.exe).\nOther observation: CTRL+C on mirror.exe does not close correctly (with and without parameter /c), it creates an error \"mirror.exe doesn't work anymore\", stderr output shows as last line:\nDokanBroadcastLink: Begin SHChangeNotify\n. jetwhiz, could you please post the setup log, in %TEMP% the Dokan ... x86 ...log file?\n. DIFXAPP: ERROR:  Unable to start service 'dokan' because of error 0x7F\nGot to look up that error code. Liryna, isn't the service called dokan1 now?\nYou did reboot the machine and nothing changed?\n. I'm not Jetwhiz, but tested it anyway in a Win7_x86 VM, it works fine. :+1: \n. We need to do something with the ProductCodes and build numbers for clean setup upgrades. The tool I have to take care of that currently relies on a build number in a version.txt file, that would mean you'd have to manually increment the revision before you rebuild a version at least for public release.\n. The dokan1.sys is copied to the drivers folder by difxapp so WiX might not know it has to rollback that file when difxapp fails. We can probably take care of that in a CustomAction by verifying the Dokan service is actually running.\n. The nonstarting service in Win32 wasn't interpreted as a setup error but rather as a success with reboot requirement:\nDIFXAPP: ERROR:  Unable to start service 'dokan' because of error 0x7F\nDIFXAPP: SUCCESS:Installation completed with code 0x0.\nDIFXAPP: INFO:   RETURN: DriverPackageInstallW  (0x0)\nDIFXAPP: INFO:   ENTER:  DriverPackageGetPathW\nDIFXAPP: SUCCESS:Found driver store entry.\nDIFXAPP: INFO:   RETURN: DriverPackageGetPathW  (0x7A)\nDIFXAPP: INFO:   ENTER:  DriverPackageGetPathW\nDIFXAPP: SUCCESS:Found driver store entry.\nDIFXAPP: INFO:   RETURN: DriverPackageGetPathW  (0x0)\nDIFXAPP: INFO: driver store entry for 'C:\\Program Files\\Dokan\\DokanLibrary-1.0.0\\driver\\dokan.inf' is 'C:\\Windows\\system32\\DRVSTORE\\dokan_85E7F627E2CF93D06A9D389C5A3368C67C5421BE\\dokan.inf'.\nDIFXAPP: INFO: The component Id '{1AFEA463-3DB8-48FA-87D1-7151BE92DB4B}' is now set to point to driver store: 'C:\\Windows\\system32\\DRVSTORE\\dokan_85E7F627E2CF93D06A9D389C5A3368C67C5421BE\\dokan.inf'\nDIFXAPP: INFO: A reboot is needed to install the component '{1AFEA463-3DB8-48FA-87D1-7151BE92DB4B}'.\nDIFXAPP: RETURN: InstallDriverPackages() 0 (0x0)\nOur custom action would have to recheck the service is running and initiate a rollback.\n. WiX should try to download the correct file if the hash does not match.\ntbhalla, try installing the Setup with redist included.\n. WiX developers would say: works as intended. A different version than expected of vcredist_2015_x64.exe exists there in the folder with DokanSetup.exe and Burn looks for files in the current folder before it tries downloading them.\nSolution 1: user should move/download files to its own folder with no trash left behind that could be found (yeah, I know, all browsers use a general downloads folder where they stuff everything).\nSolution 2: user could download DokanSetup_Redist,exe,\n. Is Service Pack 1 installed for that Windows 7? The setup should fail if it isn't but let's verify anyway.\nSHA2 for Windows 7 might need this Windows update:\nhttps://technet.microsoft.com/en-us/library/security/3033929\n. You could post the setup log files, in your %TEMP% there should be Dokan* text files.\n. DIFXAPP: ERROR:  Unable to start service 'dokan' because of error 0x241\nqaisjp: I think you should try to use the fixed driver package mentioned in issue 179:\nhttps://drive.google.com/folderview?id=0B3E9tU82h-RMMmh3RkJFamM4WTA&usp=sharing\n. \"I am wondering if we need a SHA1 cert to sign SHA1 and cert SHA2 to sign SHA2.\"\nI don't think so. The only potential issue I would suspect is with non-updated Win 7 if you use a SHA2 cert for anything.\n. You could perhaps create a test driver setup signed with your old SHA1-cert to verify that is the reason here.\n.  qaisjp, you don't have any chance of installing https://support.microsoft.com/en-us/kb/3033929 on your machine?\n. Some useful info on certificate issues can be found here:\nhttp://www.davidegrayson.com/signing/#kmod\n. Liryna, I think on WIn7 we should install KB3033929 as well with the bundle like we do it with the UCRT KB update.\n. Liryna, I've implemented KB3033929 installation with the bundle but that's not a final or elegant solution. \nThe update requires a restart before it becomes active:\nApplied execute package: Win71_KB3033929_x64, result: 0x0, restart: Required\nBecause that restart is not scheduled by WiX Burn before the Dokan driver is installed, users will still see the unsigned driver warning. After restart the driver though is installed correctly because the KB3033929-updated DLLs will then allow SHA256-signed drivers.\nAdding the KB3033929 msu files also increases the size of DokanSetup_redist.exe to 110 MB.\nScheduling the restart before Dokan driver installation is only possible with a custom bootstrapper.\nAs an alternative I'd rather implement a check for install status of KB3033929 and show an error in case it isn't already installed (only relevant for WIn 7).\n. When the version numbers (major.minor.build.revision) between MSI packages are different, MSI will take care of the upgrade process. That means the upgrade will first uninstall the old driver and should request a reboot before the new driver is installed.\nFor our purposes where we might encounter any random version of dokan.sys or dokanXYZ.sys we might want to do our own checks in a CustomAction. I'll look into that.\nOur DOKANSYSALREADYINSTALLED property check will currently fire only when we still find a dokan1.sys.\n. Sorry, fixed now.\n. Latest change:\nDisallow upgrades, show uninstall and reboot message instead\nBecause MSI removes Dokan1.sys driver file only after reboot, an\nautomatic upgrade is not possible. We show an appropriate message\ninstead.\nA custom bundle should detect an existing Dokan install and warn accordingly.\n. Currently all direct upgrades are disallowed, the MSI will show the following message when it detects a previous Dokan installation (with the same UpgradeCode):\n\"A previous version of [ProductName] is already installed. Please uninstall the existing version first, reboot the system and start the setup again.\"\nThere seems to be no safe way currently to do a direct DiFX upgrade when an intermittent reboot is required as it is for dokan*.sys. I've asked the WiX authors for some advice on that but it seems to be a limitation of the DiFX tech.\nOn your last question: you can ignore the build warning message. It would only be relevant when you run a setup when the identical version is already installed, allowing effectively a reinstall/repair upgrade in that case. But as we disallow all upgrades, it doesn't matter.\nA completely different Dokan API driver, e.g. a Dokan2.sys, should use a different UpgradeCode. It will then be ignored and you can then run dokan1 and dokan2 side by side (as long as no conflicts exist, e.g. service name etc is different).\nWe can suppress that warning by adding -sw1076 in the tool settings, I've committed that change now.\n. Hmm, I would need to update to latest master in my repo, how would I best resolve conflicts in the git shell?\n. Sure, no worries.\n. Yeah, after reading some stuff on OSR I have to agree. Closing.\n. Just an observation though, the service returns STOPPABLE on query::\nC:\\Windows\\system32>sc query dokan1\nSERVICE_NAME: dokan1\n        TYPE               : 2  FILE_SYSTEM_DRIVER\n        STATE              : 4  RUNNING\n                                (STOPPABLE, NOT_PAUSABLE, IGNORES_SHUTDOWN)\n        WIN32_EXIT_CODE    : 0  (0x0)\n        SERVICE_EXIT_CODE  : 0  (0x0)\n        CHECKPOINT         : 0x0\n        WAIT_HINT          : 0x0\n. Yes, that is possible, some work with preprocessor and creating new fragments. \nThe question is: why put the (from my point of view) unnecessary, esoteric cygwin stuff into the build and setup at all and not just create a separate build bat file/zip file of the binaries so that people who need it can build/get it? \nI'm going insane just trying to install all required packages for msys2 as it isn't documented.\n. See https://github.com/js69/dokany/commit/b6db600e658073b850862b1f19f949e9e88d4a1d for wxs files and option to disable cygwin. WiX itself can't really execute file existence checks, it should be done by the build batch by setting BuildCygwin=\"false\" in version.xml.\n. Just to add my observation, as net sharing a Dokan drive never worked for me on Win 8 and WIn 10: tested it now on Win7-x86 and it works there.\n. Could we learn something from the VirtualBox implementation of a network provider?\nhttp://www.virtualbox.org/svn/vbox/trunk/src/VBox/Additions/WINNT/SharedFolders/np/vboxmrxnp.cpp\n. Could you please post the log files from the no-redist setup attempt (dokan*txt files in %TEMP%)? \nIt should have prompted you with an error as well when it couldn't download the redist files itself.\n. Yandex obviously doesn't do a good job of detecting widely used executable wrappers like WiX Burn in this case. You could try to contact them and point this out but in my experience antivirus companies are not very responsive or fast fixing false positives.\n. The Dokany drivers should be installed as Permanent package. If you use WiX Burn as your setup program, you can simply use the Dokan .msi file and set that parameter.\nLiryna, I think it would be helpful to put the msi file you create up for seperate download as well.\n. I agree the last image looks fine.. It's an easy fix, will do it tomorrow.\n. See PR https://github.com/dokan-dev/dokany/pull/257\nCustomAction uses NET4 features, so retargeting wasn't possible.\n. For Dokany to work Windows 7 needs to have SP1 and a bunch of other recent updates installed as well so artificially attempting to stay compatible with systems that lack basic components like NET4 might be a valiant, but somewhat quixotic effort.\n. I'm just avoiding the console as much as possible. What would have been the correct rebase method?\n. Liryna, regarding build numbers: both of these installers 604 and 606 described above use the same build number 1.0.0.103. MSI generally doesn't like two different packages to have the same version - what Rondom describes is the effect of the WIndows installer not seeing a version difference.\nIncrementing the build number is always preferred (e.g. as we use SVN locally we use the SVN revision number for that).\nAlso, it might be helpful to increment version numbers for different RCs by larger increments so that private builds can be updated by new official releases.\nI would suggest the following versioning policy: a new RC will be set to the next build version multiple of 1000, e.g.:\nRC1 would be 1.0.0.1000, RC2 would be 1.0.0.2000, RC3 then 1.0.0.3000 and so forth. When we create a new private build based on a RC2 it could be 1.0.0.2001 and not cause any conflicts with newer RCs.\n. As long as you can avoid overflowing the 999 build number, yup.\n. https://xkcd.com/1200/\nInstalling the Anniversary Update now in a VM with Dokany driver preinstalled. It shouldn't complain, I guess, only later when I install a new driver version.\n. Install of Dokany RC4 was without issue on Microsoft Windows [Version 10.0.14393]. Will have to try now with drivers signed after August 2nd.\n. Still works fine with my today's signed driver.\nSeems like WHQL-requirement isn't enforced yet.\n. Maxhy, you are right:\n\"OS signing enforcement is only for new OS installations; systems upgraded from an earlier OS to Windows 10, version 1607 will not be affected by this change.\"\nhttps://blogs.msdn.microsoft.com/windows_hardware_certification/2016/07/26/driver-signing-changes-in-windows-10-version-1607/\n. \"PCs with Secure Boot OFF will still permit installation of cross-signed drivers.\"\n. Rondom, the normal signed RC4 driver doesn't work either on secure booted WinServ2016?\nOnly mention I could find of driver signing policy on that platform is here:\nhttps://www.osr.com/blog/2015/12/29/recommendations-driver-signing-windows-10-otherwise/\nOSR has some additional info on WHQL-signing here: http://insider.osr.com/2016/ntinsider_2016_01.pdf\n. https://developer.microsoft.com/en-us/windows/hardware/windows-hardware-lab-kit\n\nIt is designed to help your company deliver systems, software, and hardware products that are compatible with Windows and that run reliably on Windows 10 for desktop editions (Home, Pro, and Enterprise) and Windows Server 2016.\n\nThe page doesn't mention anything further about Server 2016. There are also no Server 2016 iso files to download. I guess asking Microsoft directly is the best option.\n. Did you run the \"Static Tools Test\"? There are apparently specific tests for Server 2016.\nhttps://blogs.msdn.microsoft.com/windows_hardware_certification/2016/04/13/changes-to-the-static-tools-test-for-windows-server-2016/\n. Green7, could you please also upload C:\\Users\\Admin\\AppData\\Local\\Temp\\Dokan_Library_1.0.0.103_Bundle_20160720225015_003_Dokan_x64.msi.log ?\n0x80070643 is basically a \"catch everything else\" error, details are in the other log.\n. Windows Installer couldn't execute the CustomAction. \nThere is no .NET 4 installed yet? Newer installers will check for that.\n\nCalling custom action WiXCA!WiXCA.CustomActions.ExecuteInstall\nError: could not load custom action class WiXCA.CustomActions from assembly: WiXCA\nSystem.BadImageFormatException: Nie mo\u017cna za\u0142adowa\u0107 pliku lub zestawu 'WiXCA' lub jednej z jego zale\u017cno\u015bci. Ten zestaw jest konstruowany przez modu\u0142 wykonawczy nowszy ni\u017c aktualnie za\u0142adowany i nie mo\u017cna go za\u0142adowa\u0107.\nNazwa pliku: 'WiXCA'\n   w System.Reflection.Assembly._nLoad(AssemblyName fileName, String codeBase, Evidence assemblySecurity, Assembly locationHint, StackCrawlMark& stackMark, Boolean throwOnFileNotFound, Boolean forIntrospection)\n   w System.Reflection.Assembly.nLoad(AssemblyName fileName, String codeBase, Evidence assemblySecurity, Assembly locationHint, StackCrawlMark& stackMark, Boolean throwOnFileNotFound, Boolean forIntrospection)\n   w System.Reflection.Assembly.InternalLoad(AssemblyName assemblyRef, Evidence assemblySecurity, StackCrawlMark& stackMark, Boolean forIntrospection)\n   w System.Reflection.Assembly.InternalLoad(String assemblyString, Evidence assemblySecurity, StackCrawlMark& stackMark, Boolean forIntrospection)\n   w System.AppDomain.Load(String assemblyString)\n   w Microsoft.Deployment.WindowsInstaller.CustomActionProxy.GetCustomActionMethod(Session session, String assemblyName, String className, String methodName)\nOSTRZE\u017bENIE: rejestrowanie informacji o powi\u0105zaniach zestaww jest wy\u0142\u0105czone.\nAby w\u0142\u0105czy\u0107 rejestrowanie b\u0142\u0119dw powi\u0105za\u0144 zestaww, ustaw warto\u015b\u0107 rejestru  (DWORD) rwn\u0105 1.\nUwaga: z w\u0142\u0105czeniem rejestrowania b\u0142\u0119dw powi\u0105za\u0144 zestaww wi\u0105\u017ce si\u0119 pewien spadek wydajno\u015bci.\nAby wy\u0142\u0105czy\u0107 t\u0119 funkcj\u0119, usu\u0144 warto\u015b\u0107 rejestru .\n. That's probably because the previous driver wasn't rolled back completely from the failed install.\nDid you reboot before you installed again?\n. Could you please also upload Dokan_Library_1.0.0.4000_Bundle_20160729134447_000_Dokan_x64.msi.log?\n. Well, we need to look at what version of wintrust.dll was detected by the Dokan_x64.msi. The 0x80070643 in the bundle just relays that Dokan_x64 wasn't successfully installed.\n. @DimitarKapashikov: apparently the C:\\windows\\System32\\wintrust.dll has a different version than expected. Could you please post the version detail of that file?\nTo fix your your issue then please uninstall KB3033929 and install it again and reboot, then check the version of wintrust.dll again.\n. KB updates are not included in other updates in a way that would make them invisible. The Win 7 installation you use seems to be seriously corrupted. \n[2038:0EDC][2016-07-29T13:44:50]w308: Automatic updates could not be paused due to error: 0x80240025. Continuing...\n[2038:0EDC][2016-07-29T13:44:50]i360: Creating a system restore point.\n[2038:0EDC][2016-07-29T13:44:50]w363: Could not create system restore point, error: 0x80070422. Continuing...\n. Does Windows Update work at all on that Windows 7? Did you install all recommended updates?\n. Group policy might be the issue that your account doesn't have the necessary privilege to (un-)install updates.\n. Some discussion here:\nhttp://www.sevenforums.com/tutorials/88554-windows-update-enable-disable-access.html\n. Microsoft Updates will not overwrite a higher version with a lower one (unless something crazy is going on). KB3033929 should install the new file in any case as it is a higher version than the one which exists on DimitarKapashikov's Win 7.\n. The check is for MinVersion=\"6.1.7601.18740\". Both 6.1.7601.18741 and 6.1.7601.22380 should give true.\nThe problem on DimitarKapashikov's Win 7 is that he has version 6.1.7601.18205 which fails that check.\nIf he can not install/uninstall KB3033929 he has unrelated general issues with Windows Update.\n. Ah, I now grok what you mean. I'm not quite sure though when the 22380 would ever be installed.\nWe'll have to combine a few version checks (or write a CustomAction) for that logic (>6.1.7601.18740 AND <6.1.7601.20000) OR >6.1.7601.22947\n. (VersionNT = 601 AND (WIN7KB3033929GDRINSTALLED OR WIN7KB3033929LDRINSTALLED)) I guess should work, right.\nI just don't know how to find/create a OS situation where 6.1.7601.22380 is actually installed.\n. See answer to #322 - this should be handled in a custom bootstrapper.\nFor my own application's bundle I have created a IsDokanInstalled method to show a warning in case an older Dokan version than the one in the bundle is detected.\n. They Keybase stuff searches for a fixed product code which means it finds only a very specific Dokan setup version.\nStub code for what my custom bootstrapper does to check Dokan1 installs generically:\n```\nstring windowspath = Environment.GetEnvironmentVariable(\"windir\");\nstring dokansyspath = Path.Combine(windowspath, @\"System32\\drivers\\dokan1.sys\");\nif (Environment.Is64BitOperatingSystem)\n{\n    dokansyspath = Path.Combine(windowspath, @\"Sysnative\\drivers\\dokan1.sys\");\n}\nbool dokan1SysExists = MyFileExists(dokansyspath);\nif (dokan1SysExists)\n{\n    Log(LogLevel.Verbose, \"Dokan driver file exists: \" + dokansyspath);\n}\nstring dokanProductCode = FindUninstallProductCode(\"Dokan Library\");\nstring dokanDisplayVersion = String.Empty;\nstring dokanFullVersion = String.Empty;\nstring dokanSetupVersion = GetBundleString(\"DokanVersion\");\nif (!String.IsNullOrEmpty(dokanProductCode))\n{\n    dokanFullVersion = GetRegvalueContent(\"HKLM\", @\"Software\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\\" + dokanProductCode, \"DisplayVersion\");\n    if (String.IsNullOrEmpty(dokanFullVersion))\n    {\n        dokanFullVersion = GetRegvalueContent(\"HKLM\", @\"Software\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\\" + dokanProductCode, \"FullVersion\");\n        Log(LogLevel.Verbose, \"Dokan FullVersion=\" + dokanFullVersion);\n    }\n    else\n    {\n        Log(LogLevel.Verbose, \"Dokan DisplayVersion=\" + dokanFullVersion);\n    }\nif (String.IsNullOrEmpty(dokanFullVersion))\n{\n    Log(LogLevel.Verbose, \"No Dokan DisplayVersion of FullVersion found\");\n}\nelse\n{\n    if (!String.IsNullOrEmpty(dokanSetupVersion))\n    {\n        Log(LogLevel.Verbose, \"Bundle DokanVersion=\" + dokanSetupVersion);\n        Version installedDokanVersion = new Version(dokanFullVersion);\n        Version setupDokanVersion = new Version(dokanSetupVersion);\n        var compareresult = setupDokanVersion.CompareTo(installedDokanVersion);\n        if (compareresult == 0)\n        {\n            Log(LogLevel.Verbose, \"Same DokanVersion installed and in Bundle, will be skipped during setup\");\n            dokan1SysExists = false;\n        }\n        else if (compareresult > 0)\n        {\n            Log(LogLevel.Verbose, \"Newer DokanVersion in Bundle than already installed\");\n            string errorMessage = ResolveText(\"ErrorDokanDetected\");\n            BootstrapperDispatcher.BeginInvoke(new Action(() => FatalErrorMessage(\"DokanVersionError\", errorMessage)));\n        }\n        else if (compareresult < 0)\n        {\n            Log(LogLevel.Verbose, \"Older DokanVersion in Bundle than already installed\");\n            dokan1SysExists = false;\n        }\n    }\n    else\n    {\n        Log(LogLevel.Verbose, \"No Bundle DokanVersion found\");\n    }\n}\n\n}\nelse\n{\n    Log(LogLevel.Verbose, \"No Dokan ProductCode found\");\n}\nif (dokan1SysExists)\n{\n    string errorMessage = ResolveText(\"ErrorDokanDetected\");\n// show warning, then terminate\nBootstrapperDispatcher.BeginInvoke(new Action(() => FatalErrorMessage(\"DokanVersionError\", errorMessage)));\n\n}\n```\n. This is something that can comfortably only be handled by a custom bootstrapper. MSI itself offers no real mechanism to restart the installation after a reboot.\n. Regarding uninstall of unneeded software: there is a dependency registration on MSI packages, but that registration is only really done by WiX bundles so you would not really know if there isn't other software that uses an older Dokan version.\nIn the WiX bundle install log you'll see this:\nRegistering dependency: {805152fc-59e3-4585-9f11-ea59b34f36b9} on package provider: {65A3A964-3DC3-0100-0000-160729112819}, package: Dokan_x64.msi\nThis creates an entry here:\nHKEY_CLASSES_ROOT\\Installer\\Dependencies\\{65A3A964-3DC3-0100-0000-160729112819}\\Dependents\\{805152fc-59e3-4585-9f11-ea59b34f36b9}\nWRT scenarios like MediaPortal:\nYou could detect an obsolete Dokan library in your application's bundle setup, but should only offer an option to uninstall, not force it.\n. There is a minor text bug: \" ... the installation of Keybase.\"\n. What result do you get with:\n(Get-Item 'C:\\Program Files\\Dokan\\Dokan Library-1.0.0*.dll').FileVersion\na.b.c.d versions for Windows are normally limited at 255.255.65535.65535\n. FileVersion and ProductVersion are different and what is actually returned in VersionInfo seems quite obscure.\nhttp://stackoverflow.com/questions/752162/whats-the-difference-between-a-dlls-fileversion-and-productversion\nhttps://social.msdn.microsoft.com/Forums/vstudio/en-US/698cc95c-0524-4940-bc55-08602b8ea90f/difference-between-assemblyversion-and-fileversion-and-productversion-in-net-versioning-philosophy?forum=netfxbcl\nGood practice in my experience is to keep both numbers identical.\n. There is an obsolete vc_redist.x64.exe in your Downloads folder. Remove it or copy and start DokanSetup in another folder. Or use the DokanSetup_Redist.\n. @Liryna: please update WiX everywhere to 3.10.3 Stable.\nhttps://wix.codeplex.com/releases/view/624906\n. Nope, it's just an engine update with \"clean room\" security concept.\n. I don't think so. WiX doesn't try to redownload after a hash mismatch.\n. Well, WiX burn engine did find that file C:\\Users\\rgwood\\Downloads\\vc_redist.x64.exe\n[2244:251C][2016-09-21T22:17:03]i338: Acquiring package: vcredist_2015_x64.exe, payload: vcredist_2015_x64.exe, copy from: C:\\Users\\rgwood\\Downloads\\vc_redist.x64.exe\n[2244:251C][2016-09-21T22:17:03]i000: Setting string variable 'WixBundleLastUsedSource' to value 'C:\\Users\\rgwood\\Downloads\\'\n[15FC:21C8][2016-09-21T22:17:03]e000: Error 0x80091007: Hash mismatch for path: C:\\ProgramData\\Package Cache.unverified\\vcredist_2015_x64.exe, expected: 4ADFA13A0923977BD49CBA5BA1ADBB2D52A55DCD, actual: \n3155CB0F146B927FCC30647C1A904CD162548C8C\nThere is already a setup package with all redists included: DokanSetup_redist.\n. Could you please post the vc_redist logs as well?\n. A mandatory update that isn't mandatory. Don't we all love Microsoft. \nGuess we need to include the two other KB msus as well.\n. 319 MB for just KB2919355-x86 is kinda prohibitive. So we just add checks with download links?\n. https://support.microsoft.com/en-us/kb/2919355\n\"The updates must be installed in the following order: clearcompressionflag.exe, KB2919355, KB2932046, KB2959977, KB2937592, KB2938439, and KB2934018.\"\nThey were either quite lazy not to repackage all of that into one download or just plain insane.\n. I hope to find the time tomorrow. We'll need version numbers of DLLs in those patches we can check for though unless we want to trust the registry for installed KBs alone. \nAnyone have Win 8.1 VMs before and after those KBs installed?\n. Those are install/detect conditions which don't stop installation attempts. We will need a bal:Condition check to catch what cdarau described above. Something like this:\n```\n    \n<![CDATA[Installed OR VersionNT = v6.3] AND NOT WINKB2919442INSTALLED]>\n```\n. I find it quite hilarious that a higher numbered KB could be a prereq for a lower number.\n. Liryna, is there a problem with the check above, since you reverted (temporarily)?\nOn a different note, I think we should install the dev files (mirror) by default, at least with the bundle. To be added:\n<Variable Name=\"DevFilesCheckbox\" Type=\"numeric\" Value=\"1\"/>\n. I could have sworn I saw the commit canceled in my Github client, but it is Monday, so I might very easily be wrong :)\n. Rondom, 1 MB or so for the dev files are not doing any harm. We can decide to change the default back again later, when everything is more solid.\n. With RC4 Photos does not have the issue, just retested it in the VM.\n. I've just tested it with DokanSetup-1.0.0.5000 and it still works correctly.\n. For me 790 still works, 791 shows the issue. That would mean commit https://github.com/dokan-dev/dokany/commit/d15e23cb7d0f77c79e7e5c62b6e7fdb4a8a08134 is responsible.\n. Nope, not sure anymore. Will test more with larger files.\n. Yup, last version that really works for me is RC4.\n. With 793 I did get an error message the first time clicking on Edit \"modification not possible, file already opened\" (my translation here) but the hanging does not occur anymore so far. The error message might have occurred because mirror with output is somewhat slow so file handle was still open on the first save (after rotating the picture) when I clicked on Edit (which does another save, or rather a more elaborate save to tmp file and rename operation that the Photos app does) or possibly Explorer was still creating a thumbnail.\nI can't reproduce the error message though. \nThe hanging is fixed as far as I can tell for now.\nSomewhat unrelated question: on closing a file Photos does a CreateFile at the end on a tmp copy of the jpg with CreateFile access: ReadAttributes, Delete. \nIn DokanNetMirror like this:\n10/14/2016 16:03:05 - [Mirror] CreateFile('\\temp\\testfile.jpg~RF6a9a0.TMP', {, False, False, False, False, #3016, False, False}, [ReadAttributes, Synchronize], [ReadWrite, Delete], [Open], [None], [Normal]) -> ObjectNameNotFound\nAssuming this really is a Delete, shouldn't DeleteOnClose be set true?\n. To remove LGHT1132 warning, In Bootstrapper.wixproj add this under the <IntermediateOutputPath>obj\\$(Configuration)\\</IntermediateOutputPath> lines:\n<LinkerAdditionalOptions>-sw1132</LinkerAdditionalOptions>\n. Correct.\n. Hi,\nI don't think WiX will work on ARM anytime soon.\nLast mention I found was here:\nhttp://lists.wixtoolset.org/pipermail/wix-devs-wixtoolset.org/2016-March/000288.html\nIf you are adventurous, you could try to compile WiX on ARM yourself (quite a bit of setting it up needed). Most likely it will fail because of a missing Microsoft SDK.\ncheers,\nJS\nOn 14.02.2017 14:03:09, \"woachk\" notifications@github.com<mailto:notifications@github.com> wrote:\n@Lirynahttps://github.com/Liryna ARM AppVeyor works :)\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHubhttps://github.com/dokan-dev/dokany/issues/431#issuecomment-279701504, or mute the threadhttps://github.com/notifications/unsubscribe-auth/APebjRaATCayLx_teyeROoQlYLxon4Msks5rcaYNgaJpZM4L3Hjc.\nEmail secured by Check Point\n. You don't have the right version of VC++ 2015 X86 installed apparently.\nDokany requires VCREDISTINSTALLEDX86 >= \"14.0.23918\" and VCREDISTINSTALLEDX64 >= \"14.0.23918\"\nWe should probably make the error message more detailed with minimum version number.. The logo should be resized to probably 96x96 pixels.. It's actually 64 by 64 pixels in the default mbapreq.thm\n. @TonyValenti please send me an Email, see my profile. Or leave another way to contact you.\n. Any software that includes Dokany should check for the same requirements the Dokany bundle installs and checks  (e.g.KB2919442, vcredist_2017, KB3033929, >=Win7.1).\n[Going to .NET 3.5 is not a solution unless you want to experience lots of issues on Windows 10 / Server 2016 and later which do not install 3.5 by default.]\n. ",
    "sehang": "Hi,\nI cannot find any exception on ReadFile() and WriteFile(). However, BT client reports \"FAILED HASH FILE\".\nI test this issue in the project \"dokan-dotnet\" (https://github.com/dokan-dev/dokan-dotnet). The following are steps to reproduce this issue.\n1. Clone project https://github.com/dokan-dev/dokan-dotnet.\n2. Create a mirror FS using project \"DokanNetMirror\".\n3. Open any BT client (I was using uTorrent) and select a torrent to download (The torrent contains large files, such as 200-300 mb per file).\n4. Start to download file, then you should able to see FAILED HASH FILE in the BT client.\nThe following are the logs generated by the sample project \"DokanNetMirror\" while downloading files.\n\nCreateFile('\\localhost\\06KIDS(720p)[33DM].mp4.!ut', {, False, False, False, False, #4792, False, False}, [ReadData, WriteData, AppendData, ReadExtendedAttributes, WriteExtendedAttributes, ReadAttributes, WriteAttributes, ReadPermissions, Synchronize], [Read], [Open], [None], [Normal]) -> ObjectNameNotFound\nCreateDirectory('\\localhost', {, False, True, False, False, #4792, False, False}) -> ObjectNameCollision\nCreateFile('\\localhost\\06KIDS(720p)[33DM].mp4.!ut', {, False, False, False, False, #4792, False, False}, [ReadData, WriteData, AppendData, ReadExtendedAttributes, WriteExtendedAttributes, ReadAttributes, WriteAttributes, ReadPermissions, Synchronize], [Read], [OpenOrCreate], [None], [Normal]) -> Success\nGetFileInformation('\\localhost\\06KIDS(720p)[33DM].mp4.!ut', {, False, False, False, False, #4792, False, False}) -> Success\nSetEndOfFile('\\localhost\\06KIDS(720p)[33DM].mp4.!ut', {, False, False, False, False, #4792, False, False}, 229163710) -> Success\nSetAllocationSize('\\localhost\\06KIDS(720p)[33DM].mp4.!ut', {, False, False, False, False, #4792, False, False}, 229163710) -> Success\nSetEndOfFile('\\localhost\\06KIDS(720p)[33DM].mp4.!ut', {, False, False, False, False, #4792, False, False}, 229163710) -> Success\nWriteFile('\\localhost\\06KIDS(720p)[33DM].mp4.!ut', {, False, False, False, False, #4792, True, False}, out 262144, 0) -> Success\nWriteFile('\\localhost\\06KIDS(720p)[33DM].mp4.!ut', {, False, False, False, False, #4792, True, False}, out 262144, 17563648) -> Success\nWriteFile('\\localhost\\06KIDS(720p)[33DM].mp4.!ut', {, False, False, False, False, #4792, True, False}, out 262144, 22544384) -> Success\nWriteFile('\\localhost\\06KIDS(720p)[33DM].mp4.!ut', {, False, False, False, False, #4792, True, False}, out 262144, 40108032) -> Success\nWriteFile('\\localhost\\06KIDS(720p)[33DM].mp4.!ut', {, False, False, False, False, #4792, True, False}, out 262144, 40894464) -> Success\nWriteFile('\\localhost\\06KIDS(720p)[33DM].mp4.!ut', {, False, False, False, False, #4792, True, False}, out 524288, 42991616) -> Success\nWriteFile('\\localhost\\06KIDS(720p)[33DM].mp4.!ut', {, False, False, False, False, #4792, True, False}, out 262144, 53215232) -> Success\n\n. C mirror is working normally. It seems the C# wrapper or the mirror implementation have a potential bug.\n. What file(s) in dokan-dotnet may cause this issue?\nhttps://github.com/dokan-dev/dokan-dotnet/tree/master/DokanNet\n. @marinkobabic \nIt is not easy to reproduce by doing a hash compression for incomplete files. Files are incomplete in BT client while downloading them.\n. I checked in two scenarios.\n1. Checksum without BT client: Copy a file to virtual drive, and do checksum. Two files have identical checksum.\n2. Checksum on files download by using BT client: \n   2.1. When a file finished download from BT client, two files have identical checksum (file size less than 5MB tested).\n   2.2. However, I cannot successfully download a large file (e.g. 200-300mb) by using BT with the use of virtual drive. Since BT client tell FAILED HASH FILE, which means it cannot save pieces to virtual drive.\n. @marinkobabic \nYes, you are correct. It is a little bit strange.\n. The hash is correct. I did the following tests.\nDokan File System (Virtual drive): M:\\\nWindows File System: C:\\\n1. Use utorrent download a file and DO NOT save in virtual drive.\n2. Download completed, I get a file (let's call File#1 which saved in C:\\a.mp3).\n3. Use uTorrent download the same file but SAVE in virtual drive.\n4. Stop uTorrent.\n5. Replace C:\\a.mp3 to M:\\a.mp3\n6. Open uTorrent, and do a checksum, 100% completed (i.e. hash matched).\nIs above procedure clear?\nHowever, When I use uTorrent download the file AND save in virtual drive. It does not finish since keeping report FAILED HASH FILE.\n. I was wondering whether the ReadFile() method in C# wrapper have a bug that the bytesRead does not match the caller (uTorrent) needed?\n```\n    ...\n    // Default statement.\n    bytesRead = stream.Read( buffer, 0, buffer.Length );\n// If I have the buffer size to 1 or 256 bytes, there is a crash.\nbytesRead = stream.Read( buffer, 0, 1);\n\n```\npublic DokanError ReadFile ( string fileName, byte[] buffer, out int bytesRead, long offset, DokanFileInfo info ) {\n            if ( info.Context == null ) {\n                using ( FileStream stream = new FileStream( GetCachePath( fileName ), FileMode.Open, System.IO.FileAccess.Read ) ) {\n                    stream.Position = offset;\n//                    bytesRead = stream.Read( buffer, 0, buffer.Length );\n                    bytesRead = stream.Read( buffer, 0, 1 );\n                }\n            } else {\n                FileStream stream = info.Context as FileStream;\n                stream.Position = offset;\n//                bytesRead = stream.Read( buffer, 0, buffer.Length );\n                bytesRead = stream.Read( buffer, 0, 1 );\n            }\n            return DokanError.ErrorSuccess;\n}\n. @marinkobabic \nThis is a feasible solution. Since this issue happen in C# wrapper only. Mirror sample is working normally in C implementation.\n. @Liryna. Sorry, I still cannot find the source of this issue. However, monotorrent report HASH ERROR too as I tested. But the source code of monotorrent is difficult for me (especially for the file/chunk hashing) and I am new in C#. \n. Sure. Thanks for your help! I will test it few hours later. \nEdit:\nIt is working now. Thanks a lot\n. ",
    "shi-yan": "I will, but I will need sometime.\nbtw, the mirror example in dokan.net doesn't seem to have this issue.\n. can I ask you a related question, I wrote a simple mirror filesystem. but instead of using windows api, I'm using Qt.\nI have an issue, I seem to return the correct file size in GetFileInformation and FindFiles. and I can see the file size correctly from the file browser. but if I check properties, the file size is zero, and there is no creation date.\nI can't figure out what's wrong.\nas shown in image:\n\nhowever if you check the detail tab of the same file, you will see the file size.\n\n. I think the issue I have is that I somehow makes windows think the file is a folder.\nfolder doesn't have \"size\" under that tab. but file has.\nif I try to create a zip file out of the file, I get the error directory m:\\ddddd.txt is empty. but ddddd.txt is not a directory. \n. sorry for the red herring, I resynced the official code, it does seem to work.\nbut my own code still can't .\none issue I identified is that FindFirstFile fails with my implementation. from the dokany console, all I can see is this\nCreate 0016\nCreateFile status = 3221225626\nit seems that it tries to create a file, but it doesn't call into my MirrorCreateFile at all, but already gets a return code 3221225626 which is file not found.\n:(\nthe Mirror example is nice, but it's a bit cheating as it uses windows api to implement windows api. I hope there could be an example based on Qt or boost fs. \nI need to implement a remote filesystem. can't use windows api on linux and mac.\n. Hi guys, \nthank you for the reply.\nwhen I solve my issues, I will release my code as an example.\nI made some progress after debugging dokan.dll. the reason I saw the insufficient_resources error is because the example I'm following doesn't provide an \"opendirectory\" implementation.\nso it failed here:\nelse if(disposition == FILE_OPEN) \n        {\n            if (DokanInstance->DokanOperations->OpenDirectory) \n            {\n                                // missing opendirectory implementation\n                status = DokanInstance->DokanOperations->OpenDirectory(\n                    EventContext->Operation.Create.FileName, &fileInfo);\n            }\n        }\nas soon as I implemented that function, I could now create zip and use findfirstfile.\nI double checked the official mirror.c in here\nhttps://github.com/dokan-dev/dokany/blob/master/dokan_mirror/mirror.c\nit indeed doesn't provided an \"opendirectory\" function. but it works. I did see it calls createdirectory, but it is not directly called by dokan. it is called by createfile.\nwhen calling FindFirstFile, why does the example mirror.c call into createfile, whereas my code calls into opendirectory? I still don't understand.\nI know the linux fuse filesystem. what I want to achieve is mirroring a linux folder or a mac folder to windows through network. so on the windows side, I still need dokan. but on linux, I will use other fs libraries.\nyes, I will subscribe to the mailing list. Thanks!\n. thank you very much.\ngeez, wish I was as knowledgeable as you are about filesystem. implementing a simple filesystem program already gives me headache. :(\n. ",
    "aktivo": "It is my own file system. MirrorNet example works fine, but MirrorNet using FileStream for everything.\nMy own filesystem support this functions (i'm not using Windows FileStream FS = new FileStream ....): \n- CreateFile( string FileName )\n- CreateDirectory( string FileName )\n- DeleteFile( string FileName )\n- DeleteDirectory( string FileName )\n- List( string FileName, List OwnItems )\n- Read( string FileName, long Pos, long Length, byte[] Buffer )\n- Write( string FileName, long Pos, long Length, byte[] Buffer )\n- GetFileInformation( string FileName )\n- SetAttributes( string FileName, OWN Attributes )\n- SetTime( string FileName, DateTime CreationTime, DateTime LastAccessTime, DateTime LastWriteTime )\n- SetFileLength( string FileName, long Length )\n- Move( string OldFileName, string NewFileName, bool Overwrite )\nI can send you my implementation of DokanOperations - if you want check if it is correct.\nif i try copy some file - DokanOperations.Read is not called. But if i try to view file, DokanOperation.Read is called and file is read and viewed (on Windows 8.1 x64).\nThis logs shows, what happened if i try copy file 'dokannet.dll' from virtual drive M: to physical drive.\nWindows v8.1 x64: (cannot copy)\nLog1_Windows_v8.1_x64.txt\nLog2_Windows_v8.1_x64.txt\nWindows 7 x64: (copy ok)\nLog1_Windows_7_x64.txt\nLog2_Windows_7_x64.txt\nDokanOperations implementation:\neDokanDiskOperations.cs.txt\n. Where can i create discussion for my issue ?\n. Thanks you.\n. I solve my issue. It is problem with function DokanOperations.GetFileSecurity.\nMy own file system does not support any security - i don't know what can return in parameter/variable security, because solution below does not working:\n``` cs\nsecurity = null;\nreturn( DokanResult.Error ); \nor\nreturn( DokanResult.PrivilegeNotHeld );\nsecurity = new FileSystemSecurity();    // cannot be used\n```\nMy solution:\n1.. i create one file named: 'fSecurity' and one directory named: 'dSecurity'\n2.. In constructor of DokanOperations i get file and directory security (one time)\ncs\nFileInformation FI = new FileInformation( \"_fSecurity_\" );\nfSecurity = FI.GetAccessControl();\nDirectoryInformation DI = new DirectoryInformation( \"_dSecurity_\" );\ndSecurity = DI.GetAccessControl();\n3.. In DokanOperations.GetFileSecurity i write this code:\ncs\nif (info.IsDirectory == true) { security = dSecurity; } else { security = fSecurity; }\nreturn( DokanResult.Success );\n- copy files/dirs from virtual directory to physical directory on Windows v8.1 x64 works fine\n- execute files on Windows 7 x64 works fine\n. ",
    "sandstorm121": "Dear Liryna,\nHow can I detect copying files from dokan drive to the same dokan drive?\nI need to filter copying to get only cases of copying files in dokan drive internally.\nLook forward to hearing from you soon.\nBest regards,\nSimon. ",
    "wistful23": "It looks like Microsoft Edge cannot open PDF files. I observe the same symptoms as in the description. I tried the latest version 1.0.1.1000.. Thank you, @Rondom. It works fine with the mount manager option.. ",
    "maurosampietro": "Yes i am able to hide a volume by creating a key in the registry, that requires to logoff or reboot tipically so it is not optimal for me. \nMauro Sampietro\nInviato da iPhone\n\nIl giorno 28 nov 2015, alle ore 08:25, Liryna notifications@github.com ha scritto:\nExplorer: Did you try something like: http://www.howtogeek.com/howto/windows-vista/hide-drives-from-your-computer-in-windows-vista/ ?\nDokan is not a real volume for windows for now.\nBut with #50, Dokan volumes are going to be visible from disk management.\n\u2014\nReply to this email directly or view it on GitHub.\n. \n",
    "kitsmag": "Unfortunatley PyFilesystems won't work with 0.8.0 (PyFilesystem/pyfilesystem#236), and 0.7.4 also yields a -5 (DOKAN_MOUNT_ERROR) for a simple example such as\n.python\nfrom fs.osfs import OSFS\nfrom fs.expose import dokan\nfs = OSFS('.')\nmp = dokan.mount(fs, 'Q')\n. ",
    "Smjert": "I actually did update the code to make it work with dokany 8.0 RC3. I've downloaded the new Dokan.NET, recompiled and then changed the returns types of the functions + undefining CreateDirectory and OpenDirectory in Win-Sshfs.\nThe last part is kind of a hack but the stack trace WinDBG shows doesn't seem to comprehend nothign about Win-Sshfs, am i missing something?\nPS: This is kind of the first time i do debugging and coding at this level, but if win-sshfs was involved i would expect at least some clue in the stack trace. But again i might be missing something crucial.\n. Oups and i did had a look at the code and i missed that tiny detail (the missing &) :P.\nWell no problem, i think i'll keep messing with this stuff to learn and have a more stable sshfs solution for Windows.\nThank you ;).\nPS: Though what about the exception stack overflow?\n. ",
    "jgressmann": "My bad,  I probably have RC2 installed\n. Hi,\nissue still present in RC3 except it now hits in ZwCreateFile.\nCheers,\nJean\n```\nNTSTATUS \nDokanFileSystem::ZwCreateFile(\n        PCWSTR FileName,\n        PDOKAN_IO_SECURITY_CONTEXT SecurityContext,\n        ACCESS_MASK DesiredAccess,\n        ULONG FileAttributes,\n        ULONG ShareAccess,\n        ULONG CreateDisposition,\n        ULONG CreateOptions,\n        PDOKAN_FILE_INFO FileInfo) {\n    NTSTATUS result = STATUS_SUCCESS;\nDWORD fileAttributesAndFlags, creationDisposition;\nDokanMapKernelToUserCreateFileFlags(\n  FileAttributes, CreateOptions, CreateDisposition, &fileAttributesAndFlags,\n  &creationDisposition);\n\nPCWSTR x = FileName;\nstd::wstring fixed;\nif (!*FileName) {\n    fixed = L\"\\\\\";\n    fixed += FileName + 1;\n    x = fixed.c_str();\n}\n\n....\n\n}\n```\n. Hi,\nthe problem is also present in mirror.c (MirrorCreateFile) but is mask by\nthe way file path is manipulated and then passed to CreateFile.\nYou can reproduce the bug like so:\n1. put this snippet at the begin of MirrorCreateFile and place a breakpoint\n   on the print line\n   ----SNIP----\n   if (!*FileName) {\n   fprintf(stderr, \"No FileName\\n\");\n   }\n   ----SNIP----\n2. Mount a directory. I used the options /r c:\\temp /l j\n3. Using Explorer, navigate to the drive\n4. Right-click and select Create new folder\n5. Enter a name for the folder.\n6. The breakpoint should be hit.\nCheers,\nJean\nOn Thu, Dec 3, 2015 at 1:36 PM, Liryna notifications@github.com wrote:\n\nCould you give the command that you are using with mirror.exe and also the\nDOS command to reproduce the issue ?\n\nmirror.exe /r C:\\Users\\Liryna\\Desktop /l m\nm:\nmove a.txt b.txt\n 1 file(s) moved.\nrename b.txt a.txt\n\nI cannot reproduce it with the mirror in windows 10.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/120#issuecomment-161621548.\n. Well, it looks like I'll just have to live with it.\nThanks for looking into this.\n\nCheers,\nJean\n. ",
    "Grepsy": "This is the output I got after loading the symbols. This was on Windows 10 Enterprise Edition.\n```\n\n\n*\nBugcheck Analysis                                    *\n*\n\n\nPAGE_FAULT_IN_NONPAGED_AREA (50)\nInvalid system memory was referenced.  This cannot be protected by try-except,\nit must be protected by a Probe.  Typically the address is just plain bad or it\nis pointing at freed memory.\nArguments:\nArg1: ffffffffffffffe8, memory referenced.\nArg2: 0000000000000000, value 0 = read operation, 1 = write operation.\nArg3: fffff802c8497c2f, If non-zero, the instruction address which referenced the bad memory\n    address.\nArg4: 0000000000000000, (reserved)\nDebugging Details:\nREAD_ADDRESS:  ffffffffffffffe8 \nFAULTING_IP: \nnt!ObQueryNameStringMode+5f\nfffff802`c8497c2f 410fb64618      movzx   eax,byte ptr [r14+18h]\nMM_INTERNAL_CODE:  0\nDEFAULT_BUCKET_ID:  WIN8_DRIVER_FAULT\nBUGCHECK_STR:  AV\nPROCESS_NAME:  mounter.exe\nCURRENT_IRQL:  2\nANALYSIS_VERSION: 6.3.9600.17336 (debuggers(dbg).150226-1500) amd64fre\nTRAP_FRAME:  ffffd000260e4d50 -- (.trap 0xffffd000260e4d50)\nNOTE: The trap frame does not contain all registers.\nSome register values may be zeroed or incorrect.\nrax=00ffffffffffffff rbx=0000000000000000 rcx=0000000000000000\nrdx=00000000000000ff rsi=0000000000000000 rdi=0000000000000000\nrip=fffff802c8497c2f rsp=ffffd000260e4ee0 rbp=0000000000000000\n r8=00000000000000fe  r9=ffffd000260e5078 r10=fffff8012b215b80\nr11=ffffd000260e5148 r12=0000000000000000 r13=0000000000000000\nr14=0000000000000000 r15=0000000000000000\niopl=0         ov up ei pl nz na po cy\nnt!ObQueryNameStringMode+0x5f:\nfffff802c8497c2f 410fb64618      movzx   eax,byte ptr [r14+18h] ds:0000000000000018=??\nResetting default scope\nLAST_CONTROL_TRANSFER:  from fffff802c81b7a98 to fffff802c816b4d0\nSTACK_TEXT:\nffffd000260e4b08 fffff802c81b7a98 : 0000000000000050 ffffffffffffffe8 0000000000000000 ffffd000260e4d50 : nt!KeBugCheckEx\nffffd000260e4b10 fffff802c803cc36 : 0000000000000000 0000000000000000 ffffd000260e4d50 0000000000000000 : nt! ?? ::FNODOBFM::string'+0x3d998\nffffd000260e4c00 fffff802c81745bd : 0000000000000000 0000000000000000 0000000000000000 0000000000000000 : nt!MmAccessFault+0x696\nffffd000260e4d50 fffff802c8497c2f : ffffffffffffffff 0000000000000100 0000000000000000 fffff802c80c483e : nt!KiPageFault+0x13d\nffffd000260e4ee0 fffff802c8548892 : 0000000000000000 ffffe0013cc05600 00000000000000fe ffffd000260e5078 : nt!ObQueryNameStringMode+0x5f\nffffd000260e5000 fffff8012b22954c : 0000000000000000 0000000000000000 0000000000000000 0000000000000000 : nt!ObQueryNameString+0xe\nffffd000260e5040 fffff8012b228322 : 0000000000000000 ffffffff00000004 0000000000000000 0000000000000000 : FLTMGR!FltpGetObjectName+0x30\nffffd000260e5070 fffff8012b222d8c : ffffe001353ee800 ffffe001360b0080 0000000000000000 0000000000000000 : FLTMGR!FltpFsControlMountVolume+0xa2\nffffd000260e5150 fffff802c84ff496 : fffff802c835a520 0000000000000000 ffffe0013af56700 ffffe0013af56700 : FLTMGR!FltpFsControl+0x14c\nffffd000260e51b0 fffff802c80ec754 : ffffe001360b0080 ffffe0013d03f010 ffffe001360b0080 fffff802c84a3746 : nt!IopMountVolume+0x35a\nffffd000260e5430 fffff802c8457e37 : 0000000000000025 0000000000000000 ffffd000260e5790 0000000000000000 : nt!IopCheckVpbMounted+0x154\nffffd000260e5480 fffff802c84534a1 : ffffc0002a82a3b8 ffffc0002a82a3b8 ffffd000260e5790 ffffe001360b0050 : nt!IopParseDevice+0x4a7\nffffd000260e5690 fffff802c848732c : ffffe0013cddfb01 ffffd000260e58b8 0000000000000040 ffffe0013447bf20 : nt!ObpLookupObjectName+0x711\nffffd000260e5830 fffff802c848363c : ffffe00100000001 ffffe0013d03f010 000000000127f080 000000000127e7d0 : nt!ObOpenObjectByName+0x1ec\nffffd000260e5960 fffff802c8483289 : 000000000127e7b8 ffffd000260e5b80 000000000127f080 000000000127e7d0 : nt!IopCreateFile+0x38c\nffffd000260e5a00 fffff802c8175b63 : ffffd000260e5b10 0000000000000000 ffffd00000000001 000000000127e828 : nt!NtCreateFile+0x79\nffffd000260e5a90 00007ffddb313aca : 0000000000000000 0000000000000000 0000000000000000 0000000000000000 : nt!KiSystemServiceCopyEnd+0x13\n000000000127e748 0000000000000000 : 0000000000000000 0000000000000000 0000000000000000 0000000000000000 : 0x00007ffddb313aca\nSTACK_COMMAND:  kb\nFOLLOWUP_IP: \nnt!ObQueryNameStringMode+5f\nfffff802`c8497c2f 410fb64618      movzx   eax,byte ptr [r14+18h]\nSYMBOL_STACK_INDEX:  4\nSYMBOL_NAME:  nt!ObQueryNameStringMode+5f\nFOLLOWUP_NAME:  MachineOwner\nMODULE_NAME: nt\nIMAGE_NAME:  ntkrnlmp.exe\nDEBUG_FLR_IMAGE_TIMESTAMP:  563ad7f4\nBUCKET_ID_FUNC_OFFSET:  5f\nFAILURE_BUCKET_ID:  AV_nt!ObQueryNameStringMode\nBUCKET_ID:  AV_nt!ObQueryNameStringMode\nANALYSIS_SOURCE:  KM\nFAILURE_ID_HASH_STRING:  km:av_nt!obquerynamestringmode\nFAILURE_ID_HASH:  {9eb41a12-81ba-71f6-0c3d-31180b493b51}\nFollowup: MachineOwner\n```\n. ",
    "psaghelyi": "Just leave a breakpoint in the MirrorCreateFile for a few seconds ;)\n. It is stable now. No crash so far.\n. I have got a kernel dump (not(!) minidump). I am going to put more here as they are coming up.\nsystem: Win 8.1 64bit\ncheers,\nPeter\nhttps://www.cubbyusercontent.com/pl/DokanyKernelDumps/_a2de83205ca045608ad478edf1b4d6aa\n. It is a network drive. I am working on a mountable WebDAV client.\n. Some refinement:\n- It has the same problem on Windows10 and Windows8.1.\n- You can open/edit/save the Word document if you open them from MSWord2016\n- Only Explorer and TotalCommander crashes on open attempt.\n- Tested on different machines, clean install\n- please find the logs in the attachment\n  kernel.zip\nmirror.zip\nI think it does not matter if it is an MSWord doc. The CreateFile was not even called so probably the root of the problem is deeper in Dokany.sys.\n. ",
    "feoff3": "Hi there,\nUnfortunately I'm not involved with to the dev of this piece of software.\nOn Dec 23, 2015 5:14 PM, \"Liryna\" notifications@github.com wrote:\n\n[image: :+1:] @Maxhy https://github.com/Maxhy, @js69\nhttps://github.com/js69\n@Paragon-Software-Group https://github.com/Paragon-Software-Group,\n@SteamDragon https://github.com/SteamDragon, @feoff3\nhttps://github.com/feoff3, can you enlighten us if Paragon/dokan 0.6.0\nis modified version of dokan 0.6.0 ?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/129#issuecomment-166903913.\n. Hi everyone,\n\nI\u2019ll forward your requests to guys involved into Paragon dokan dev.\nAFAIK dokan was used as a basic library for some Filesystem impl by Paragon. But it\u2019s unknown what version is used and whether it\u2019s being updated during the dev process.\n. ",
    "toksaitov": "Hi, @Liryna \n\nThis is currently not handle\u2026 We are always setting FILE_DOES_NOT_EXIST in case\u2026\n\nI have taken a look at Dokan's internals. I am sorry, my mistake. I wasn't aware the last error is not passed as it is through the chain.\nIt's not an expensive operation, though. Maybe, it can be used in the future or could serve as self documentation in the current FUSE wrapper. The last word is yours.\n\n\u2026could you show me the ReactOS code ? I have no fuse sample so I will trust you on this.\n\nThe fix was based on this code.\n\nDoes calling delete during createfile is the correct workflow for FUSE ?\n\nI am calling delete functions from the Cleanup handler. According to this, Cleanup is similar to FUSE release and releasedir callbacks, and according to this it seems to be OK to call delete callbacks after closing a file (which is done by Cleanup).\n\n\u2026did you had to change a lot of your fuse driver to make it work with dokan ?\n\nThe only change was to add an fsync callback to always return a success code even though my system doesn't use it. It seems that *nix FUSE implementations were doing something similar for undefined fsync handlers.\n. @Liryna @Maxhy\n\n\u2026a fuse mirror sample would be great\n\nAgreed. I will give it a try, but a bit later and in a separate PR.\nThank you.\n. @Liryna\nI did have issues with files. I am not sure about directories as my Fuse FS does not support them (I really should get some time to port the Mirror example to get some grounds for testing).\nThe directory code was added by analogy following these instructions:\nhttps://github.com/dokan-dev/dokany/blob/master/dokan/dokan.h#L193\nWe can even see that the Dokan's version of Mirror follows that logic:\nhttps://github.com/dokan-dev/dokany/blob/master/dokan_mirror/mirror.c#L748\nThe same approach for files (not directories) did fix the problem in my case.\nNevertheless, If there is a file system for which the following fix works for @matepek, I am OK with the PR.\n. ",
    "CADbloke": "Thanks for posting this info, I have the same problem with an AutoCAD-based app. Your solution (thanks Google) is helpful. FYI if you have problems with installing a Windows Update on locked-down environments you can (conditionally, of course) install the runtime DLLs as an App-Local deployment. See https://blogs.msdn.microsoft.com/vcblog/2015/03/03/introducing-the-universal-crt/ part 6\nA lot of my users machines are managed by [insert generic plural derogative term for BOFH] so I am going for the app-local deployment. My app is >300MB anyway. YMMV.\n[edit] ah, given the nature of this project than it's probably not a limited user account thing but you never know when it might come in handy\n. ",
    "archenroot": "Even when installed the Windows6.1-KB2999226-x64 on my Windows 7 system I am still getting with 1.0.1.10000 Dokan (I tested with 1.0.2 as well):\nInstallation failed because the VC++ 2015 x64 Runtime is not installed. You can download it here: https://www.visualstudio.com/downloads/download-visual-studio-vs#d-visual-c\nI checked google-groups and the files mentioned already exists:\napi-ms-win-crt-stdio-l1-1-0.dll\netc..\nSo were installed in the past as part of some OS Update procedure.\nFew minutes later I noticed I downloaded first release of VC++ 2015 redistributable, so I looked for latest ound the Update 3, after this package applied I was able to finally install Dokan lib.\n. ",
    "JokerQyou": "I've got the same problem as @archenroot. I downloaded Visual C++ 2015 x64 redist by searching throughout Microsoft website, the file version of the redis installer is 14.0.23026.0. It finished without any error or warning but Dokan installer was still complaining about missing VC++ 2015 x64 runtime.\nThis was fixed by installing the Microsoft Visual C++ 2015 Redistributable Update 3 (version 14.0.24215.1) package. However the requirement check for VC++ 2015 x86 runtime passed without installing an update.. @Liryna Yeah I know that's strange. Seems like I forgot to mention, the machine I was testing on runs Windows 7 x64 system. Maybe the installer checked for both x86 and x64 of VC++ 2015 runtime, but only used the x64 one?. Unfortunately this happened on a production machine of one of our clients, so it's unlikely that we get the chance to actually debug it. But we'll try to provide more information if we could follow up next week.\nUpdate: According to the timetable of our client, we would probably have the chance to remotely access this machine next Monday.. We were unable to provide debugging kernel log as it would take too long to interrupt our client's daily work, since we have no experience dealing with debugging tools.\nBut according to your previous comments, we were lucky to identify that Kaspersky Anti-Virus was the root cause of this in our situation.. No I don't. The client exited Kaspersky on his computer and tried mounting again and it works. That's all I know.. ",
    "taruti": "I am having this same issue with 1.0 beta. Mounted drive works from cmd.exe but explorer does not see it. Deleting the register entries does not solve it.\nDebug logs from mirror /d /l k /r C:\\tmp and mirror /d /l k /r C:\\tmp /g below.\n```\n00000001    0.00000000  [3136] RootDirectory: C:\\tmp  \n00000002    0.00000000  [3136] ## Attempting to add SE_SECURITY_NAME privilege to process token ##\n00000003    0.00000000  [3136]   success: privilege already present \n00000004    0.00000000  [3136] Dokan: debug mode on \n00000005    0.00000000  [DokanFS] ==> DokanCreate \n00000006    0.00001368  [DokanFS]   ProcessId 3136\n00000007    0.00002053  [DokanFS]   FileName:(null) \n00000008    0.00002590  [DokanFS]     IdType = DGL\n00000009    0.00003128  [DokanFS]   IdentifierType is not vcb \n00000010    0.00003861  [DokanFS]   status = 0x0  \n00000011    0.00004398  [DokanFS]   status = STATUS_SUCCESS \n00000012    0.00004985  [DokanFS] <== DokanCreate \n00000013    0.00020233  [3136] device opened  \n00000014    0.00029763  [DokanFS] ==> DokanCreate \n00000015    0.00030593  [DokanFS]   ProcessId 3136\n00000016    0.00031180  [DokanFS]   FileName:(null) \n00000017    0.00031669  [DokanFS]     IdType = DGL\n00000018    0.00032206  [DokanFS]   IdentifierType is not vcb \n00000019    0.00032842  [DokanFS]   status = 0x0  \n00000020    0.00033330  [DokanFS]   status = STATUS_SUCCESS \n00000021    0.00033868  [DokanFS] <== DokanCreate \n00000022    0.00036165  [DokanFS] ==> DokanDispatchIoControl  \n00000023    0.00036849  [DokanFS]   ProcessId 3136\n00000024    0.00037338  [DokanFS]     IdType = DGL\n00000025    0.00037875  [DokanFS]    => DokanGlobalDeviceControl  \n00000026    0.00038462  [DokanFS]   IOCTL_EVENT_START \n00000027    0.00038999  [DokanFS] ==> DokanEventStart \n00000028    0.00050875  [DokanFS] DiskDeviceName: \\Device\\Volume{d6cc17c5-1737-4085-bce7-964f1e9f5de9} - SymbolicLinkName: \\DosDevices\\Global\\Volume{d6cc17c5-1737-4085-bce7-964f1e9f5de9} - MountPoint: \\DosDevices\\K: \n00000029    0.00052097  [DokanFS]   IoCreateDevice DeviceType: 8  \n00000030    0.00057912  [DokanFS] SymbolicLink: \\DosDevices\\Global\\Volume{d6cc17c5-1737-4085-bce7-964f1e9f5de9} -> \\Device\\Volume{d6cc17c5-1737-4085-bce7-964f1e9f5de9} created \n00000031    0.00068175  [DokanFS]   MountId:4 \n00000032    0.00069397  [DokanFS]   DeviceName:\\Volume{d6cc17c5-1737-4085-bce7-964f1e9f5de9}  \n00000033    0.00070081  [DokanFS]   ALT_STREAM_ON \n00000034    0.00070668  [DokanFS] ==> DokanStartEventNotificationThread \n00000035    0.00073258  [DokanFS] <== DokanStartEventNotificationThread \n00000036    0.00073942  [DokanFS] ==> DokanStartCheckThread \n00000037    0.00076044  [DokanFS] <== DokanStartCheckThread \n00000038    0.00076679  [DokanFS] <== DokanEventStart \n00000039    0.00077217  [DokanFS]    <= DokanGlobalDeviceControl  \n00000040    0.00078194  [DokanFS]   status = 0x0  \n00000041    0.00078732  [DokanFS]   status = STATUS_SUCCESS \n00000042    0.00079269  [DokanFS]   status = 0x0  \n00000043    0.00079758  [DokanFS]   status = STATUS_SUCCESS \n00000044    0.00080344  [DokanFS] <== DokanDispatchIoControl  \n00000045    0.00081517  [DokanFS] ==> DokanCleanup\n00000046    0.00082104  [DokanFS]   ProcessId 3136\n00000047    0.00082739  [DokanFS]   FileName: (null) FCB.FileName: (null) \n00000048    0.00083374  [DokanFS]   status = 0x0  \n00000049    0.00083912  [DokanFS]   status = STATUS_SUCCESS \n00000050    0.00084401  [DokanFS] <== DokanCleanup\n00000051    0.00085085  [DokanFS] ==> DokanClose  \n00000052    0.00085623  [DokanFS]   ProcessId 3136\n00000053    0.00086258  [DokanFS]   FileName: (null) FCB.FileName: (null) \n00000054    0.00086893  [DokanFS]   status = 0x0  \n00000055    0.00087382  [DokanFS]   status = STATUS_SUCCESS \n00000056    0.00087871  [DokanFS] <== DokanClose  \n00000057    0.00107908  [3136] mounted: k -> \\Volume{d6cc17c5-1737-4085-bce7-964f1e9f5de9}\n00000058    0.00120077  [3136] Mounted\n00000059    0.00130584  [DokanFS] ==> NotificationThread  \n00000060    0.00131659  [DokanFS] ==> DokanTimeoutThread  \n00000061    0.00132637  [DokanFS] ==> ReleaseTimeoutPendingIRP\n00000062    0.00133321  [DokanFS]   IrpQueue is Empty \n00000063    0.00309697  [DokanFS] ==> DokanCreate \n00000064    0.00311652  [DokanFS]   ProcessId 3136\n00000065    0.00312434  [DokanFS]   FileName:(null) \n00000066    0.00312972  [DokanFS]    IdType = VCB \n00000067    0.00313509  [DokanFS]   IrpSp->Flags = 0  \n00000068    0.00314096  [DokanFS]    request for FS device\n00000069    0.00314780  [DokanFS]   status = 0x0  \n00000070    0.00315269  [DokanFS]   status = STATUS_SUCCESS \n00000071    0.00315855  [DokanFS] <== DokanCreate \n00000072    0.00318396  [DokanFS]    IdType = VCB \n00000073    0.00319081  [DokanFS] ==> DokanRegisterPendingIrpMain \n00000074    0.00320742  [DokanFS] <== DokanRegisterPendingIrpMain \n00000075    0.00343907  [DokanFS] ==> DokanCreate \n00000076    0.00344347  [DokanFS]   ProcessId 3136\n00000077    0.00344591  [DokanFS]   FileName:(null) \n00000078    0.00344885  [DokanFS]    IdType = VCB \n00000079    0.00345129  [DokanFS]   IrpSp->Flags = 0  \n00000080    0.00345422  [DokanFS]    request for FS device\n00000081    0.00345716  [DokanFS]   status = 0x0  \n00000082    0.00345960  [DokanFS]   status = STATUS_SUCCESS \n00000083    0.00346253  [DokanFS] <== DokanCreate \n00000084    0.00347279  [DokanFS]    IdType = VCB \n00000085    0.00347622  [DokanFS] ==> DokanRegisterPendingIrpMain \n00000086    0.00348012  [DokanFS] <== DokanRegisterPendingIrpMain \n00000087    0.00348452  [DokanFS] => NotificationLoop \n00000088    0.00348746  [DokanFS] Try acquire SpinLock... \n00000089    0.00349039  [DokanFS] SpinLock irp Acquired \n00000090    0.00349332  [DokanFS] SpinLock notify Acquired\n00000091    0.00349576  [DokanFS] Clear Events... \n00000092    0.00349821  [DokanFS] Notify event cleared\n00000093    0.00350114  [DokanFS] Pending event cleared \n00000094    0.00350358  [DokanFS] Release SpinLock... \n00000095    0.00350603  [DokanFS] SpinLock notify Released\n00000096    0.00350847  [DokanFS] SpinLock irp Released \n00000097    0.00351140  [DokanFS] <= NotificationLoop \n00000098    0.00360328  [DokanFS] ==> DokanCreate \n00000099    0.00360719  [DokanFS]   ProcessId 3136\n00000100    0.00360963  [DokanFS]   FileName:(null) \n00000101    0.00361208  [DokanFS]    IdType = VCB \n00000102    0.00361501  [DokanFS]   IrpSp->Flags = 0  \n00000103    0.00361745  [DokanFS]    request for FS device\n00000104    0.00362039  [DokanFS]   status = 0x0  \n00000105    0.00362283  [DokanFS]   status = STATUS_SUCCESS \n00000106    0.00362576  [DokanFS] <== DokanCreate \n00000107    0.00363505  [DokanFS]    IdType = VCB \n00000108    0.00363847  [DokanFS] ==> DokanRegisterPendingIrpMain \n00000109    0.00364287  [DokanFS] <== DokanRegisterPendingIrpMain \n00000110    0.00364678  [DokanFS] => NotificationLoop \n00000111    0.00364922  [DokanFS] Try acquire SpinLock... \n00000112    0.00365215  [DokanFS] SpinLock irp Acquired \n00000113    0.00365460  [DokanFS] SpinLock notify Acquired\n00000114    0.00365704  [DokanFS] Clear Events... \n00000115    0.00365997  [DokanFS] Notify event cleared\n00000116    0.00366241  [DokanFS] Pending event cleared \n00000117    0.00366486  [DokanFS] Release SpinLock... \n00000118    0.00366730  [DokanFS] SpinLock notify Released\n00000119    0.00367023  [DokanFS] SpinLock irp Released \n00000120    0.00367268  [DokanFS] <= NotificationLoop \n00000121    0.00378117  [DokanFS] ==> DokanCreate \n00000122    0.00378704  [DokanFS]   ProcessId 3136\n00000123    0.00379046  [DokanFS]   FileName:(null) \n00000124    0.00379339  [DokanFS]    IdType = VCB \n00000125    0.00379583  [DokanFS]   IrpSp->Flags = 0  \n00000126    0.00379877  [DokanFS]    request for FS device\n00000127    0.00380268  [DokanFS]   status = 0x0  \n00000128    0.00380512  [DokanFS]   status = STATUS_SUCCESS \n00000129    0.00380805  [DokanFS] <== DokanCreate \n00000130    0.00381734  [DokanFS]    IdType = VCB \n00000131    0.00382271  [DokanFS]   status = 0x0  \n00000132    0.00382516  [DokanFS]   status = STATUS_SUCCESS \n00000133    0.00390970  [DokanFS] ==> DokanCreate \n00000134    0.00391410  [DokanFS]   ProcessId 3136\n00000135    0.00391655  [DokanFS]   FileName:(null) \n00000136    0.00391899  [DokanFS]    IdType = VCB \n00000137    0.00392192  [DokanFS]   IrpSp->Flags = 0  \n00000138    0.00392436  [DokanFS]    request for FS device\n00000139    0.00392730  [DokanFS]   status = 0x0  \n00000140    0.00393023  [DokanFS]   status = STATUS_SUCCESS \n00000141    0.00393267  [DokanFS] <== DokanCreate \n00000142    0.00394342  [DokanFS]    IdType = VCB \n00000143    0.00394636  [DokanFS] ==> DokanRegisterPendingIrpMain \n00000144    0.00395173  [DokanFS] <== DokanRegisterPendingIrpMain \n00000145    0.00404459  [DokanFS] ==> DokanCreate \n00000146    0.00404899  [DokanFS]   ProcessId 3136\n00000147    0.00405143  [DokanFS]   FileName:(null) \n00000148    0.00405583  [DokanFS]    IdType = VCB \n00000149    0.00405876  [DokanFS]   IrpSp->Flags = 0  \n00000150    0.00406120  [DokanFS]    request for FS device\n00000151    0.00406414  [DokanFS]   status = 0x0  \n00000152    0.00406658  [DokanFS]   status = STATUS_SUCCESS \n00000153    0.00406951  [DokanFS] <== DokanCreate \n00000154    0.00407880  [DokanFS]    IdType = VCB \n00000155    0.00408173  [DokanFS] ==> DokanRegisterPendingIrpMain \n00000156    0.00408564  [DokanFS] <== DokanRegisterPendingIrpMain \n00000157    0.00410812  [DokanFS] => NotificationLoop \n00000158    0.00411105  [DokanFS] Try acquire SpinLock... \n00000159    0.00411350  [DokanFS] SpinLock irp Acquired \n00000160    0.00411643  [DokanFS] SpinLock notify Acquired\n00000161    0.00411936  [DokanFS] Clear Events... \n00000162    0.00412181  [DokanFS] Notify event cleared\n00000163    0.00412425  [DokanFS] Pending event cleared \n00000164    0.00412669  [DokanFS] Release SpinLock... \n00000165    0.00412914  [DokanFS] SpinLock notify Released\n00000166    0.00413207  [DokanFS] SpinLock irp Released \n00000167    0.00413451  [DokanFS] <= NotificationLoop \n00000168    0.19337539  [DokanFS] ==> ReleaseTimeoutPendingIRP\n00000169    0.19338956  [DokanFS]   IrpQueue is Empty \n00000170    3.00326896  [DokanFS]    IdType = VCB \n00000171    3.00329089  [DokanFS]   status = 0x0  \n00000172    3.00329685  [DokanFS]   status = STATUS_SUCCESS \n00000173    5.19539547  [DokanFS] ==> ReleaseTimeoutPendingIRP\n00000174    5.19541073  [DokanFS]   IrpQueue is Empty \n00000175    6.00335264  [DokanFS]    IdType = VCB \n00000176    6.00338602  [DokanFS]   status = 0x0  \n00000177    6.00339174  [DokanFS]   status = STATUS_SUCCESS \n00000178    9.00337982  [DokanFS]    IdType = VCB \n00000179    9.00339985  [DokanFS]   status = 0x0  \n00000180    9.00340557  [DokanFS]   status = STATUS_SUCCESS \n00000181    10.19276810 [DokanFS] ==> ReleaseTimeoutPendingIRP\n00000182    10.19278145 [DokanFS]   IrpQueue is Empty \n00000183    12.00344658 [DokanFS]    IdType = VCB \n00000184    12.00345802 [DokanFS]   status = 0x0  \n00000185    12.00346184 [DokanFS]   status = STATUS_SUCCESS \n00000186    15.00358105 [DokanFS]    IdType = VCB \n00000187    15.00360012 [DokanFS]   status = 0x0  \n00000188    15.00360584 [DokanFS]   status = STATUS_SUCCESS \n00000189    15.19469929 [DokanFS] ==> ReleaseTimeoutPendingIRP\n00000190    15.19471359 [DokanFS]   IrpQueue is Empty \n00000191    18.00362206 [DokanFS]    IdType = VCB \n00000192    18.00364113 [DokanFS]   status = 0x0  \n00000193    18.00364685 [DokanFS]   status = STATUS_SUCCESS \n00000194    20.19293022 [DokanFS] ==> ReleaseTimeoutPendingIRP\n00000195    20.19294548 [DokanFS]   IrpQueue is Empty \n00000196    21.00377464 [DokanFS]    IdType = VCB \n00000197    21.00380325 [DokanFS]   status = 0x0  \n00000198    21.00380898 [DokanFS]   status = STATUS_SUCCESS \n```\nand\n```\n00000001    0.00000000  [DokanFS] ==> DokanCreate \n00000002    0.00001417  [DokanFS]   ProcessId 1800\n00000003    0.00002053  [DokanFS]   FileName:(null) \n00000004    0.00002639  [DokanFS]     IdType = DGL\n00000005    0.00003177  [DokanFS]   IdentifierType is not vcb \n00000006    0.00003910  [DokanFS]   status = 0x0  \n00000007    0.00004496  [DokanFS]   status = STATUS_SUCCESS \n00000008    0.00005083  [DokanFS] <== DokanCreate \n00000009    0.00033428  [DokanFS] ==> DokanCreate \n00000010    0.00034308  [DokanFS]   ProcessId 1800\n00000011    0.00034845  [DokanFS]   FileName:(null) \n00000012    0.00035334  [DokanFS]     IdType = DGL\n00000013    0.00035872  [DokanFS]   IdentifierType is not vcb \n00000014    0.00036556  [DokanFS]   status = 0x0  \n00000015    0.00037093  [DokanFS]   status = STATUS_SUCCESS \n00000016    0.00037631  [DokanFS] <== DokanCreate \n00000017    0.00039879  [DokanFS] ==> DokanDispatchIoControl  \n00000018    0.00040563  [DokanFS]   ProcessId 1800\n00000019    0.00041101  [DokanFS]     IdType = DGL\n00000020    0.00041638  [DokanFS]    => DokanGlobalDeviceControl  \n00000021    0.00042225  [DokanFS]   IOCTL_EVENT_START \n00000022    0.00042762  [DokanFS] ==> DokanEventStart \n00000023    0.00043447  [DokanFS]   Using Mount Manager \n00000024    0.00055371  [DokanFS] DiskDeviceName: \\Device\\Volume{d6cc17c5-1736-4085-bce7-964f1e9f5de9} - SymbolicLinkName: \\DosDevices\\Global\\Volume{d6cc17c5-1736-4085-bce7-964f1e9f5de9} - MountPoint: \\DosDevices\\K: \n00000025    0.00056544  [DokanFS]   IoCreateDevice DeviceType: 8  \n00000026    0.00062458  [DokanFS] SymbolicLink: \\DosDevices\\Global\\Volume{d6cc17c5-1736-4085-bce7-964f1e9f5de9} -> \\Device\\Volume{d6cc17c5-1736-4085-bce7-964f1e9f5de9} created \n00000027    0.00064266  [DokanFS] => DokanSendVolumeArrivalNotification \n00000028    0.00064999  [DokanFS] => DokanSendIoContlToMountManager \n00000029    0.00069055  [DokanFS] ==> DokanCreate \n00000030    0.00069690  [DokanFS]   ProcessId 1800\n00000031    0.00070179  [DokanFS]   FileName:(null) \n00000032    0.00070668  [DokanFS]    IdType = DCB \n00000033    0.00071205  [DokanFS]   IdentifierType is not vcb \n00000034    0.00071792  [DokanFS]   status = 0x0  \n00000035    0.00072281  [DokanFS]   status = STATUS_SUCCESS \n00000036    0.00072818  [DokanFS] <== DokanCreate \n00000037    0.00073796  [DokanFS] ==> DokanCleanup\n00000038    0.00074382  [DokanFS]   ProcessId 4 \n00000039    0.00075017  [DokanFS]   FileName: (null) FCB.FileName: (null) \n00000040    0.00075653  [DokanFS]   status = 0x0  \n00000041    0.00076141  [DokanFS]   status = STATUS_SUCCESS \n00000042    0.00076679  [DokanFS] <== DokanCleanup\n00000043    0.00077559  [DokanFS] ==> DokanDispatchIoControl  \n00000044    0.00078145  [DokanFS]   ProcessId 1800\n00000045    0.00078634  [DokanFS]    IdType = DCB \n00000046    0.00079171  [DokanFS]    => DokanDiskDeviceControl\n00000047    0.00079807  [DokanFS]    IOCTL_VOLUME_GET_GPT_ATTRIBUTES  \n00000048    0.00080393  [DokanFS]    <= DokanDiskDeviceControl\n00000049    0.00081224  [DokanFS]   status = 0x0  \n00000050    0.00081762  [DokanFS]   status = STATUS_SUCCESS \n00000051    0.00082299  [DokanFS]   status = 0x0  \n00000052    0.00082788  [DokanFS]   status = STATUS_SUCCESS \n00000053    0.00083326  [DokanFS] <== DokanDispatchIoControl  \n00000054    0.00084498  [DokanFS] ==> DokanDispatchIoControl  \n00000055    0.00085085  [DokanFS]   ProcessId 1800\n00000056    0.00085574  [DokanFS]    IdType = DCB \n00000057    0.00086062  [DokanFS]    => DokanDiskDeviceControl\n00000058    0.00086698  [DokanFS]    IOCTL_MOUNTDEV_QUERY_DEVICE_NAME \n00000059    0.00087333  [DokanFS]    <= DokanDiskDeviceControl\n00000060    0.00088115  [DokanFS]   status = 0x80000005 \n00000061    0.00088701  [DokanFS]   status = STATUS_BUFFER_OVERFLOW \n00000062    0.00089337  [DokanFS]   status = 0x80000005 \n00000063    0.00089874  [DokanFS]   status = STATUS_BUFFER_OVERFLOW \n00000064    0.00090461  [DokanFS] <== DokanDispatchIoControl  \n00000065    0.00091340  [DokanFS] ==> DokanDispatchIoControl  \n00000066    0.00091878  [DokanFS]   ProcessId 1800\n00000067    0.00092367  [DokanFS]    IdType = DCB \n00000068    0.00092855  [DokanFS]    => DokanDiskDeviceControl\n00000069    0.00093442  [DokanFS]    IOCTL_MOUNTDEV_QUERY_DEVICE_NAME \n00000070    0.00094615  [DokanFS]   DeviceName \\Device\\Volume{d6cc17c5-1736-4085-bce7-964f1e9f5de9} \n00000071    0.00095299  [DokanFS]    <= DokanDiskDeviceControl\n00000072    0.00095983  [DokanFS]   status = 0x0  \n00000073    0.00096472  [DokanFS]   status = STATUS_SUCCESS \n00000074    0.00097010  [DokanFS]   status = 0x0  \n00000075    0.00097498  [DokanFS]   status = STATUS_SUCCESS \n00000076    0.00098036  [DokanFS] <== DokanDispatchIoControl  \n00000077    0.00098867  [DokanFS] ==> DokanDispatchIoControl  \n00000078    0.00099404  [DokanFS]   ProcessId 1800\n00000079    0.00099893  [DokanFS]    IdType = DCB \n00000080    0.00100431  [DokanFS]    => DokanDiskDeviceControl\n00000081    0.00101017  [DokanFS]    IOCTL_MOUNTDEV_QUERY_UNIQUE_ID \n00000082    0.00101603  [DokanFS]    <= DokanDiskDeviceControl\n00000083    0.00102336  [DokanFS]   status = 0x80000005 \n00000084    0.00102874  [DokanFS]   status = STATUS_BUFFER_OVERFLOW \n00000085    0.00103461  [DokanFS]   status = 0x80000005 \n00000086    0.00104047  [DokanFS]   status = STATUS_BUFFER_OVERFLOW \n00000087    0.00104633  [DokanFS] <== DokanDispatchIoControl  \n00000088    0.00105318  [DokanFS] ==> DokanDispatchIoControl  \n00000089    0.00105855  [DokanFS]   ProcessId 1800\n00000090    0.00106344  [DokanFS]    IdType = DCB \n00000091    0.00106882  [DokanFS]    => DokanDiskDeviceControl\n00000092    0.00107468  [DokanFS]    IOCTL_MOUNTDEV_QUERY_UNIQUE_ID \n00000093    0.00108494  [DokanFS]   UniqueName \\Device\\Volume{d6cc17c5-1736-4085-bce7-964f1e9f5de9} \n00000094    0.00109178  [DokanFS]    <= DokanDiskDeviceControl\n00000095    0.00109814  [DokanFS]   status = 0x0  \n00000096    0.00110303  [DokanFS]   status = STATUS_SUCCESS \n00000097    0.00110840  [DokanFS]   status = 0x0  \n00000098    0.00111329  [DokanFS]   status = STATUS_SUCCESS \n00000099    0.00111866  [DokanFS] <== DokanDispatchIoControl  \n00000100    0.00112551  [DokanFS] ==> DokanDispatchIoControl  \n00000101    0.00113088  [DokanFS]   ProcessId 1800\n00000102    0.00113577  [DokanFS]    IdType = DCB \n00000103    0.00114066  [DokanFS]    => DokanDiskDeviceControl\n00000104    0.00114701  [DokanFS]    IOCTL_MOUNTDEV_QUERY_STABLE_GUID \n00000105    0.00115287  [DokanFS]    <= DokanDiskDeviceControl\n00000106    0.00115972  [DokanFS]   status = 0xc0000002 \n00000107    0.00116558  [DokanFS]   status = STATUS_NOT_IMPLEMENTED \n00000108    0.00117144  [DokanFS]   status = 0xc0000002 \n00000109    0.00117682  [DokanFS]   status = STATUS_NOT_IMPLEMENTED \n00000110    0.00118269  [DokanFS] <== DokanDispatchIoControl  \n00000111    0.00118904  [DokanFS] ==> DokanClose  \n00000112    0.00119441  [DokanFS]   ProcessId 1800\n00000113    0.00120077  [DokanFS]   FileName: (null) FCB.FileName: (null) \n00000114    0.00120712  [DokanFS]   status = 0x0  \n00000115    0.00121201  [DokanFS]   status = STATUS_SUCCESS \n00000116    0.00121738  [DokanFS] <== DokanClose  \n00000117    0.00122960  [DokanFS] ==> DokanCreate \n00000118    0.00123498  [DokanFS]   ProcessId 1800\n00000119    0.00124035  [DokanFS]   FileName:(null) \n00000120    0.00124475  [DokanFS]    IdType = DCB \n00000121    0.00125013  [DokanFS]   IdentifierType is not vcb \n00000122    0.00125550  [DokanFS]   status = 0x0  \n00000123    0.00126088  [DokanFS]   status = STATUS_SUCCESS \n00000124    0.00126577  [DokanFS] <== DokanCreate \n00000125    0.00127505  [DokanFS] ==> DokanCleanup\n00000126    0.00128043  [DokanFS]   ProcessId 4 \n00000127    0.00128629  [DokanFS]   FileName: (null) FCB.FileName: (null) \n00000128    0.00129265  [DokanFS]   status = 0x0  \n00000129    0.00129753  [DokanFS]   status = STATUS_SUCCESS \n00000130    0.00130242  [DokanFS] <== DokanCleanup\n00000131    0.00131024  [DokanFS] ==> DokanDispatchIoControl  \n00000132    0.00131610  [DokanFS]   ProcessId 1800\n00000133    0.00132050  [DokanFS]    IdType = DCB \n00000134    0.00132588  [DokanFS]    => DokanDiskDeviceControl\n00000135    0.00133223  [DokanFS]    Unknown Code 0x560048\n00000136    0.00134103  [DokanFS]    BaseCode: 0x56(IOCTL_VOLUME_BASE) FunctionCode 0x12(18)  \n00000137    0.00134738  [DokanFS]    <= DokanDiskDeviceControl\n00000138    0.00135422  [DokanFS]   status = 0xc0000010 \n00000139    0.00135960  [DokanFS]   status = 0xc0000010 \n00000140    0.00136498  [DokanFS] <== DokanDispatchIoControl  \n00000141    0.00137231  [DokanFS] ==> DokanClose  \n00000142    0.00137768  [DokanFS]   ProcessId 1800\n00000143    0.00138403  [DokanFS]   FileName: (null) FCB.FileName: (null) \n00000144    0.00138990  [DokanFS]   status = 0x0  \n00000145    0.00139528  [DokanFS]   status = STATUS_SUCCESS \n00000146    0.00140016  [DokanFS] <== DokanClose  \n00000147    0.00141091  [DokanFS] ==> DokanCreate \n00000148    0.00141629  [DokanFS]   ProcessId 1800\n00000149    0.00142167  [DokanFS]   FileName:(null) \n00000150    0.00142606  [DokanFS]    IdType = DCB \n00000151    0.00143144  [DokanFS]   IdentifierType is not vcb \n00000152    0.00143730  [DokanFS]   status = 0x0  \n00000153    0.00144219  [DokanFS]   status = STATUS_SUCCESS \n00000154    0.00144708  [DokanFS] <== DokanCreate \n00000155    0.00145636  [DokanFS] ==> DokanCleanup\n00000156    0.00146174  [DokanFS]   ProcessId 4 \n00000157    0.00146809  [DokanFS]   FileName: (null) FCB.FileName: (null) \n00000158    0.00147396  [DokanFS]   status = 0x0  \n00000159    0.00147885  [DokanFS]   status = STATUS_SUCCESS \n00000160    0.00148422  [DokanFS] <== DokanCleanup\n00000161    0.00149204  [DokanFS] ==> DokanDispatchIoControl  \n00000162    0.00149791  [DokanFS]   ProcessId 1800\n00000163    0.00150230  [DokanFS]    IdType = DCB \n00000164    0.00150768  [DokanFS]    => DokanDiskDeviceControl\n00000165    0.00151403  [DokanFS]    IOCTL_MOUNTDEV_QUERY_SUGGESTED_LINK_NAME \n00000166    0.00152087  [DokanFS]    <= DokanDiskDeviceControl\n00000167    0.00152772  [DokanFS]   status = 0x80000005 \n00000168    0.00153309  [DokanFS]   status = STATUS_BUFFER_OVERFLOW \n00000169    0.00153945  [DokanFS]   status = 0x80000005 \n00000170    0.00154482  [DokanFS]   status = STATUS_BUFFER_OVERFLOW \n00000171    0.00155020  [DokanFS] <== DokanDispatchIoControl  \n00000172    0.00155802  [DokanFS] ==> DokanDispatchIoControl  \n00000173    0.00156339  [DokanFS]   ProcessId 1800\n00000174    0.00156779  [DokanFS]    IdType = DCB \n00000175    0.00157317  [DokanFS]    => DokanDiskDeviceControl\n00000176    0.00157952  [DokanFS]    IOCTL_MOUNTDEV_QUERY_SUGGESTED_LINK_NAME \n00000177    0.00158783  [DokanFS]   LinkName \\DosDevices\\K: (28)  \n00000178    0.00159320  [DokanFS]    <= DokanDiskDeviceControl\n00000179    0.00160005  [DokanFS]   status = 0x0  \n00000180    0.00160493  [DokanFS]   status = STATUS_SUCCESS \n00000181    0.00161031  [DokanFS]   status = 0x0  \n00000182    0.00161520  [DokanFS]   status = STATUS_SUCCESS \n00000183    0.00162057  [DokanFS] <== DokanDispatchIoControl  \n00000184    0.00162790  [DokanFS] ==> DokanClose  \n00000185    0.00163279  [DokanFS]   ProcessId 1800\n00000186    0.00163914  [DokanFS]   FileName: (null) FCB.FileName: (null) \n00000187    0.00164501  [DokanFS]   status = 0x0  \n00000188    0.00164989  [DokanFS]   status = STATUS_SUCCESS \n00000189    0.00165478  [DokanFS] <== DokanClose  \n00000190    0.00210684  [DokanFS] ==> DokanCreate \n00000191    0.00211515  [DokanFS]   ProcessId 1800\n00000192    0.00212004  [DokanFS]   FileName:(null) \n00000193    0.00212492  [DokanFS]    IdType = DCB \n00000194    0.00213030  [DokanFS]   IdentifierType is not vcb \n00000195    0.00213616  [DokanFS]   status = 0x0  \n00000196    0.00214105  [DokanFS]   status = STATUS_SUCCESS \n00000197    0.00214643  [DokanFS] <== DokanCreate \n00000198    0.00215620  [DokanFS] ==> DokanCleanup\n00000199    0.00216158  [DokanFS]   ProcessId 4 \n00000200    0.00216793  [DokanFS]   FileName: (null) FCB.FileName: (null) \n00000201    0.00217380  [DokanFS]   status = 0x0  \n00000202    0.00217868  [DokanFS]   status = STATUS_SUCCESS \n00000203    0.00218406  [DokanFS] <== DokanCleanup\n00000204    0.00219237  [DokanFS] ==> DokanDispatchIoControl  \n00000205    0.00219823  [DokanFS]   ProcessId 1800\n00000206    0.00220263  [DokanFS]    IdType = DCB \n00000207    0.00220800  [DokanFS]    => DokanDiskDeviceControl\n00000208    0.00221485  [DokanFS]    IOCTL_MOUNTDEV_LINK_CREATED  \n00000209    0.00222658  [DokanFS]    MountDev Name: \\??\\Volume{0a5395e3-c43c-11e5-a6ff-90a4de69f6cd}  \n00000210    0.00223440  [DokanFS]    Mount Point is not DosDevices, ignored.  \n00000211    0.00224075  [DokanFS]    <= DokanDiskDeviceControl\n00000212    0.00224759  [DokanFS]   status = 0x0  \n00000213    0.00225297  [DokanFS]   status = STATUS_SUCCESS \n00000214    0.00225834  [DokanFS]   status = 0x0  \n00000215    0.00226372  [DokanFS]   status = STATUS_SUCCESS \n00000216    0.00226909  [DokanFS] <== DokanDispatchIoControl  \n00000217    0.00227594  [DokanFS] ==> DokanDispatchIoControl  \n00000218    0.00228131  [DokanFS]   ProcessId 1800\n00000219    0.00228620  [DokanFS]    IdType = DCB \n00000220    0.00229157  [DokanFS]    => DokanDiskDeviceControl\n00000221    0.00229744  [DokanFS]    Unknown Code 0x4d0010\n00000222    0.00230624  [DokanFS]    BaseCode: 0x4d(MOUNTDEVCONTROLTYPE) FunctionCode 0x4(4)  \n00000223    0.00231259  [DokanFS]    <= DokanDiskDeviceControl\n00000224    0.00231943  [DokanFS]   status = 0xc0000010 \n00000225    0.00232530  [DokanFS]   status = 0xc0000010 \n00000226    0.00233018  [DokanFS] <== DokanDispatchIoControl  \n00000227    0.00233654  [DokanFS] ==> DokanClose  \n00000228    0.00234191  [DokanFS]   ProcessId 1800\n00000229    0.00234827  [DokanFS]   FileName: (null) FCB.FileName: (null) \n00000230    0.00235413  [DokanFS]   status = 0x0  \n00000231    0.00235951  [DokanFS]   status = STATUS_SUCCESS \n00000232    0.00236439  [DokanFS] <== DokanClose  \n00000233    0.00237563  [DokanFS] ==> DokanCreate \n00000234    0.00238101  [DokanFS]   ProcessId 1800\n00000235    0.00238590  [DokanFS]   FileName:(null) \n00000236    0.00239078  [DokanFS]    IdType = DCB \n00000237    0.00239616  [DokanFS]   IdentifierType is not vcb \n00000238    0.00240154  [DokanFS]   status = 0x0  \n00000239    0.00240642  [DokanFS]   status = STATUS_SUCCESS \n00000240    0.00241131  [DokanFS] <== DokanCreate \n00000241    0.00242011  [DokanFS] ==> DokanCleanup\n00000242    0.00242597  [DokanFS]   ProcessId 4 \n00000243    0.00243184  [DokanFS]   FileName: (null) FCB.FileName: (null) \n00000244    0.00243770  [DokanFS]   status = 0x0  \n00000245    0.00244259  [DokanFS]   status = STATUS_SUCCESS \n00000246    0.00244796  [DokanFS] <== DokanCleanup\n00000247    0.00245529  [DokanFS] ==> DokanClose  \n00000248    0.00246018  [DokanFS]   ProcessId 1800\n00000249    0.00246653  [DokanFS]   FileName: (null) FCB.FileName: (null) \n00000250    0.00247240  [DokanFS]   status = 0x0  \n00000251    0.00247729  [DokanFS]   status = STATUS_SUCCESS \n00000252    0.00248217  [DokanFS] <== DokanClose  \n00000253    0.00302269  [DokanFS] ==> DokanCreate \n00000254    0.00303149  [DokanFS]   ProcessId 1800\n00000255    0.00303686  [DokanFS]   FileName:(null) \n00000256    0.00304175  [DokanFS]    IdType = DCB \n00000257    0.00304713  [DokanFS]   IdentifierType is not vcb \n00000258    0.00305299  [DokanFS]   status = 0x0  \n00000259    0.00305837  [DokanFS]   status = STATUS_SUCCESS \n00000260    0.00306374  [DokanFS] <== DokanCreate \n00000261    0.00307449  [DokanFS] ==> DokanCleanup\n00000262    0.00307987  [DokanFS]   ProcessId 4 \n00000263    0.00308622  [DokanFS]   FileName: (null) FCB.FileName: (null) \n00000264    0.00309209  [DokanFS]   status = 0x0  \n00000265    0.00309697  [DokanFS]   status = STATUS_SUCCESS \n00000266    0.00310186  [DokanFS] <== DokanCleanup\n00000267    0.00311017  [DokanFS] ==> DokanDispatchIoControl  \n00000268    0.00311603  [DokanFS]   ProcessId 1800\n00000269    0.00312092  [DokanFS]    IdType = DCB \n00000270    0.00312630  [DokanFS]    => DokanDiskDeviceControl\n00000271    0.00313216  [DokanFS]    IOCTL_MOUNTDEV_LINK_CREATED  \n00000272    0.00314096  [DokanFS]    MountDev Name: \\DosDevices\\K:\n00000273    0.00314878  [DokanFS]    Mount Point already assigned to the device. New mount point ignored. \n00000274    0.00315562  [DokanFS]    <= DokanDiskDeviceControl\n00000275    0.00316295  [DokanFS]   status = 0x0  \n00000276    0.00316784  [DokanFS]   status = STATUS_SUCCESS \n00000277    0.00317321  [DokanFS]   status = 0x0  \n00000278    0.00317810  [DokanFS]   status = STATUS_SUCCESS \n00000279    0.00318396  [DokanFS] <== DokanDispatchIoControl  \n00000280    0.00319081  [DokanFS] ==> DokanDispatchIoControl  \n00000281    0.00319618  [DokanFS]   ProcessId 1800\n00000282    0.00320107  [DokanFS]    IdType = DCB \n00000283    0.00320645  [DokanFS]    => DokanDiskDeviceControl\n00000284    0.00321231  [DokanFS]    Unknown Code 0x4d0010\n00000285    0.00322062  [DokanFS]    BaseCode: 0x4d(MOUNTDEVCONTROLTYPE) FunctionCode 0x4(4)  \n00000286    0.00322746  [DokanFS]    <= DokanDiskDeviceControl\n00000287    0.00323430  [DokanFS]   status = 0xc0000010 \n00000288    0.00324017  [DokanFS]   status = 0xc0000010 \n00000289    0.00324554  [DokanFS] <== DokanDispatchIoControl  \n00000290    0.00325190  [DokanFS] ==> DokanClose  \n00000291    0.00325776  [DokanFS]   ProcessId 1800\n00000292    0.00326411  [DokanFS]   FileName: (null) FCB.FileName: (null) \n00000293    0.00326998  [DokanFS]   status = 0x0  \n00000294    0.00327487  [DokanFS]   status = STATUS_SUCCESS \n00000295    0.00327975  [DokanFS] <== DokanClose  \n00000296    0.00329197  [DokanFS] ==> DokanCreate \n00000297    0.00329783  [DokanFS]   ProcessId 1800\n00000298    0.00330272  [DokanFS]   FileName:(null) \n00000299    0.00330761  [DokanFS]    IdType = DCB \n00000300    0.00331298  [DokanFS]   IdentifierType is not vcb \n00000301    0.00331836  [DokanFS]   status = 0x0  \n00000302    0.00332374  [DokanFS]   status = STATUS_SUCCESS \n00000303    0.00332911  [DokanFS] <== DokanCreate \n00000304    0.00333791  [DokanFS] ==> DokanCleanup\n00000305    0.00334329  [DokanFS]   ProcessId 4 \n00000306    0.00334915  [DokanFS]   FileName: (null) FCB.FileName: (null) \n00000307    0.00335501  [DokanFS]   status = 0x0  \n00000308    0.00335990  [DokanFS]   status = STATUS_SUCCESS \n00000309    0.00336528  [DokanFS] <== DokanCleanup\n00000310    0.00337310  [DokanFS] ==> DokanDispatchIoControl  \n00000311    0.00337847  [DokanFS]   ProcessId 1800\n00000312    0.00338336  [DokanFS]    IdType = DCB \n00000313    0.00338825  [DokanFS]    => DokanDiskDeviceControl\n00000314    0.00339411  [DokanFS]    IOCTL_VOLUME_ONLINE  \n00000315    0.00339949  [DokanFS]    <= DokanDiskDeviceControl\n00000316    0.00340584  [DokanFS]   status = 0x0  \n00000317    0.00341073  [DokanFS]   status = STATUS_SUCCESS \n00000318    0.00341610  [DokanFS]   status = 0x0  \n00000319    0.00342099  [DokanFS]   status = STATUS_SUCCESS \n00000320    0.00342685  [DokanFS] <== DokanDispatchIoControl  \n00000321    0.00343272  [DokanFS] ==> DokanClose  \n00000322    0.00343761  [DokanFS]   ProcessId 1800\n00000323    0.00344396  [DokanFS]   FileName: (null) FCB.FileName: (null) \n00000324    0.00344982  [DokanFS]   status = 0x0  \n00000325    0.00345471  [DokanFS]   status = STATUS_SUCCESS \n00000326    0.00345960  [DokanFS] <== DokanClose  \n00000327    0.00347768  [DokanFS]   IoCallDriver success  \n00000328    0.00348355  [DokanFS] <= DokanSendIoContlToMountManager \n00000329    0.00349088  [DokanFS]   IoCallDriver IOCTL_MOUNTMGR_VOLUME_ARRIVAL_NOTIFICATION success \n00000330    0.00349918  [DokanFS] <= DokanSendVolumeArrivalNotification \n00000331    0.00350554  [DokanFS] => DokanSendVolumeCreatePoint \n00000332    0.00351678  [DokanFS]   DeviceName: \\Device\\Volume{d6cc17c5-1736-4085-bce7-964f1e9f5de9}  \n00000333    0.00352460  [DokanFS]   MountPoint: \\DosDevices\\K:\n00000334    0.00353095  [DokanFS] => DokanSendIoContlToMountManager \n00000335    0.00355441  [DokanFS] ==> DokanCreate \n00000336    0.00356027  [DokanFS]   ProcessId 1800\n00000337    0.00356565  [DokanFS]   FileName:(null) \n00000338    0.00357054  [DokanFS]    IdType = DCB \n00000339    0.00357542  [DokanFS]   IdentifierType is not vcb \n00000340    0.00358080  [DokanFS]   status = 0x0  \n00000341    0.00358618  [DokanFS]   status = STATUS_SUCCESS \n00000342    0.00359155  [DokanFS] <== DokanCreate \n00000343    0.00360035  [DokanFS] ==> DokanCleanup\n00000344    0.00360524  [DokanFS]   ProcessId 4 \n00000345    0.00361110  [DokanFS]   FileName: (null) FCB.FileName: (null) \n00000346    0.00361696  [DokanFS]   status = 0x0  \n00000347    0.00362185  [DokanFS]   status = STATUS_SUCCESS \n00000348    0.00362723  [DokanFS] <== DokanCleanup\n00000349    0.00363700  [DokanFS] ==> DokanDispatchIoControl  \n00000350    0.00364238  [DokanFS]   ProcessId 1800\n00000351    0.00364726  [DokanFS]    IdType = DCB \n00000352    0.00365264  [DokanFS]    => DokanDiskDeviceControl\n00000353    0.00365850  [DokanFS]    IOCTL_MOUNTDEV_QUERY_DEVICE_NAME \n00000354    0.00366486  [DokanFS]    <= DokanDiskDeviceControl\n00000355    0.00367170  [DokanFS]   status = 0x80000005 \n00000356    0.00367756  [DokanFS]   status = STATUS_BUFFER_OVERFLOW \n00000357    0.00368343  [DokanFS]   status = 0x80000005 \n00000358    0.00368881  [DokanFS]   status = STATUS_BUFFER_OVERFLOW \n00000359    0.00369467  [DokanFS] <== DokanDispatchIoControl  \n00000360    0.00370151  [DokanFS] ==> DokanDispatchIoControl  \n00000361    0.00370738  [DokanFS]   ProcessId 1800\n00000362    0.00371226  [DokanFS]    IdType = DCB \n00000363    0.00371764  [DokanFS]    => DokanDiskDeviceControl\n00000364    0.00372350  [DokanFS]    IOCTL_MOUNTDEV_QUERY_DEVICE_NAME \n00000365    0.00373474  [DokanFS]   DeviceName \\Device\\Volume{d6cc17c5-1736-4085-bce7-964f1e9f5de9} \n00000366    0.00374110  [DokanFS]    <= DokanDiskDeviceControl\n00000367    0.00374794  [DokanFS]   status = 0x0  \n00000368    0.00375283  [DokanFS]   status = STATUS_SUCCESS \n00000369    0.00375820  [DokanFS]   status = 0x0  \n00000370    0.00376309  [DokanFS]   status = STATUS_SUCCESS \n00000371    0.00376847  [DokanFS] <== DokanDispatchIoControl  \n00000372    0.00377628  [DokanFS] ==> DokanClose  \n00000373    0.00378166  [DokanFS]   ProcessId 1800\n00000374    0.00378801  [DokanFS]   FileName: (null) FCB.FileName: (null) \n00000375    0.00379339  [DokanFS]   status = 0x0  \n00000376    0.00379877  [DokanFS]   status = STATUS_SUCCESS \n00000377    0.00380365  [DokanFS] <== DokanClose  \n00000378    0.00382027  [DokanFS]   IoCallDriver success  \n00000379    0.00382613  [DokanFS] <= DokanSendIoContlToMountManager \n00000380    0.00383151  [DokanFS]   IoCallDriver success  \n00000381    0.00383689  [DokanFS] ==> DokanCreate \n00000382    0.00383835  [DokanFS] <= DokanSendVolumeCreatePoint \n00000383    0.00384910  [DokanFS]   MountId:3 \n00000384    0.00385155  [DokanFS]   ProcessId 4 \n00000385    0.00385790  [DokanFS]   FileName:(null) \n00000386    0.00386083  [DokanFS]   DeviceName:\\Volume{d6cc17c5-1736-4085-bce7-964f1e9f5de9}  \n00000387    0.00386376  [DokanFS]    IdType = DCB \n00000388    0.00386767  [DokanFS]   ALT_STREAM_ON \n00000389    0.00387012  [DokanFS]   IdentifierType is not vcb \n00000390    0.00387403  [DokanFS] ==> DokanStartEventNotificationThread \n00000391    0.00387745  [DokanFS]   status = 0x0  \n00000392    0.00388331  [DokanFS]   status = STATUS_SUCCESS \n00000393    0.00388869  [DokanFS] <== DokanCreate \n00000394    0.00390140  [DokanFS] ==> DokanCleanup\n00000395    0.00390726  [DokanFS]   ProcessId 4 \n00000396    0.00391361  [DokanFS]   FileName: (null) FCB.FileName: (null) \n00000397    0.00391997  [DokanFS]   status = 0x0  \n00000398    0.00392534  [DokanFS]   status = STATUS_SUCCESS \n00000399    0.00393023  [DokanFS] <== DokanCleanup\n00000400    0.00393805  [DokanFS] ==> DokanClose  \n00000401    0.00394294  [DokanFS]   ProcessId 4 \n00000402    0.00394929  [DokanFS]   FileName: (null) FCB.FileName: (null) \n00000403    0.00395564  [DokanFS]   status = 0x0  \n00000404    0.00396053  [DokanFS]   status = STATUS_SUCCESS \n00000405    0.00396591  [DokanFS] <== DokanClose  \n00000406    0.00398448  [DokanFS] ==> DokanCreate \n00000407    0.00399034  [DokanFS]   ProcessId 4 \n00000408    0.00400109  [DokanFS]   FileName:\\System Volume Information\\MountPointManagerRemoteDatabase \n00000409    0.00400745  [DokanFS]    IdType = VCB \n00000410    0.00401184  [DokanFS] <== DokanStartEventNotificationThread \n00000411    0.00401380  [DokanFS]   IrpSp->Flags = 8  \n00000412    0.00402113  [DokanFS] ==> DokanStartCheckThread \n00000413    0.00402308  [DokanFS]   Allocate FCB  \n00000414    0.00404019  [DokanFS] ==> DokanRegisterPendingIrp \n00000415    0.00404459  [DokanFS] <== DokanStartCheckThread \n00000416    0.00404752  [DokanFS] ==> DokanRegisterPendingIrpMain \n00000417    0.00405143  [DokanFS] <== DokanEventStart \n00000418    0.00405632  [DokanFS] <== DokanRegisterPendingIrpMain \n00000419    0.00405778  [DokanFS]    <= DokanGlobalDeviceControl  \n00000420    0.00406414  [DokanFS] <== DokanRegisterPendingIrp \n00000421    0.00407000  [DokanFS]   status = 0x103\n00000422    0.00407538  [DokanFS]   status = STATUS_PENDING \n00000423    0.00407782  [DokanFS]   status = 0x0  \n00000424    0.00408124  [DokanFS] <== DokanCreate \n00000425    0.00408369  [DokanFS]   status = STATUS_SUCCESS \n00000426    0.00408955  [DokanFS]   status = 0x0  \n00000427    0.00409444  [DokanFS]   status = STATUS_SUCCESS \n00000428    0.00409981  [DokanFS] <== DokanDispatchIoControl  \n00000429    0.00411643  [DokanFS] ==> DokanCleanup\n00000430    0.00412181  [DokanFS]   ProcessId 1800\n00000431    0.00412816  [DokanFS]   FileName: (null) FCB.FileName: (null) \n00000432    0.00413402  [DokanFS]   status = 0x0  \n00000433    0.00413891  [DokanFS]   status = STATUS_SUCCESS \n00000434    0.00414477  [DokanFS] <== DokanCleanup\n00000435    0.00415113  [DokanFS] ==> DokanClose  \n00000436    0.00415650  [DokanFS]   ProcessId 1800\n00000437    0.00416237  [DokanFS]   FileName: (null) FCB.FileName: (null) \n00000438    0.00416872  [DokanFS]   status = 0x0  \n00000439    0.00417361  [DokanFS]   status = STATUS_SUCCESS \n00000440    0.00417850  [DokanFS] <== DokanClose  \n00000441    0.00498634  [DokanFS] ==> NotificationThread  \n00000442    0.00499758  [DokanFS] => NotificationLoop \n00000443    0.00500295  [DokanFS] Try acquire SpinLock... \n00000444    0.00500833  [DokanFS] SpinLock irp Acquired \n00000445    0.00501419  [DokanFS] SpinLock notify Acquired\n00000446    0.00501957  [DokanFS] Clear Events... \n00000447    0.00502495  [DokanFS] Notify event cleared\n00000448    0.00503081  [DokanFS] Pending event cleared \n00000449    0.00503570  [DokanFS] Release SpinLock... \n00000450    0.00504059  [DokanFS] SpinLock notify Released\n00000451    0.00513393  [DokanFS] SpinLock irp Released \n00000452    0.00514077  [DokanFS] <= NotificationLoop \n00000453    0.00533528  [DokanFS] ==> DokanTimeoutThread  \n00000454    0.00541641  [DokanFS] ==> ReleaseTimeoutPendingIRP\n00000455    0.00542471  [DokanFS] <== ReleaseTimeoutPendingIRP\n00000456    0.00593640  [DokanFS] ==> DokanCreate \n00000457    0.00594568  [DokanFS]   ProcessId 1800\n00000458    0.00595155  [DokanFS]   FileName:(null) \n00000459    0.00595643  [DokanFS]    IdType = VCB \n00000460    0.00596230  [DokanFS]   IrpSp->Flags = 0  \n00000461    0.00596767  [DokanFS]    request for FS device\n00000462    0.00597452  [DokanFS]   status = 0x0  \n00000463    0.00597940  [DokanFS]   status = STATUS_SUCCESS \n00000464    0.00598527  [DokanFS] <== DokanCreate \n00000465    0.00600677  [DokanFS]    IdType = VCB \n00000466    0.00601312  [DokanFS] ==> DokanRegisterPendingIrpMain \n00000467    0.00602290  [DokanFS] <== DokanRegisterPendingIrpMain \n00000468    0.00622083  [DokanFS] ==> DokanCreate \n00000469    0.00622865  [DokanFS]   ProcessId 1800\n00000470    0.00623451  [DokanFS]   FileName:(null) \n00000471    0.00623891  [DokanFS]    IdType = VCB \n00000472    0.00624429  [DokanFS]   IrpSp->Flags = 0  \n00000473    0.00624966  [DokanFS]    request for FS device\n00000474    0.00625601  [DokanFS]   status = 0x0  \n00000475    0.00626090  [DokanFS]   status = STATUS_SUCCESS \n00000476    0.00626628  [DokanFS] <== DokanCreate \n00000477    0.00628387  [DokanFS]    IdType = VCB \n00000478    0.00629022  [DokanFS] ==> DokanRegisterPendingIrpMain \n00000479    0.00629804  [DokanFS] <== DokanRegisterPendingIrpMain \n00000480    0.00630635  [DokanFS] => NotificationLoop \n00000481    0.00631173  [DokanFS] Try acquire SpinLock... \n00000482    0.00631710  [DokanFS] SpinLock irp Acquired \n00000483    0.00632248  [DokanFS] SpinLock notify Acquired\n00000484    0.00632932  [DokanFS] Clear Events... \n00000485    0.00633421  [DokanFS] Notify event cleared\n00000486    0.00633958  [DokanFS] Pending event cleared \n00000487    0.00634447  [DokanFS] Release SpinLock... \n00000488    0.00634985  [DokanFS] SpinLock notify Released\n00000489    0.00635473  [DokanFS] SpinLock irp Released \n00000490    0.00679946  [DokanFS]   status = 0x0  \n00000491    0.00687424  [DokanFS] ==> DokanCreate \n00000492    0.00688303  [DokanFS]   ProcessId 1800\n00000493    0.00688841  [DokanFS]   FileName:(null) \n00000494    0.00689330  [DokanFS]    IdType = VCB \n00000495    0.00689818  [DokanFS]   IrpSp->Flags = 0  \n00000496    0.00690356  [DokanFS]    request for FS device\n00000497    0.00690991  [DokanFS]   status = 0x0  \n00000498    0.00691480  [DokanFS]   status = STATUS_SUCCESS \n00000499    0.00692018  [DokanFS] <== DokanCreate \n00000500    0.00693679  [DokanFS] ==> DokanDispatchIoControl  \n00000501    0.00694314  [DokanFS]   ProcessId 1800\n00000502    0.00694803  [DokanFS]    IdType = VCB \n00000503    0.00695341  [DokanFS] ==> DokanGetAccessToken \n00000504    0.00696318  [DokanFS] <== DokanGetAccessToken \n00000505    0.00697149  [DokanFS]   status = 0x0  \n00000506    0.00697687  [DokanFS]   status = STATUS_SUCCESS \n00000507    0.00698224  [DokanFS]   status = 0x0  \n00000508    0.00698713  [DokanFS]   status = STATUS_SUCCESS \n00000509    0.00699250  [DokanFS] <== DokanDispatchIoControl  \n00000510    0.00700130  [DokanFS] ==> DokanCleanup\n00000511    0.00700717  [DokanFS]   ProcessId 1800\n00000512    0.00701352  [DokanFS]   FileName: (null) FCB.FileName: (null) \n00000513    0.00701938  [DokanFS]    IdType = DCB \n00000514    0.00702427  [DokanFS]    ccb is NULL  \n00000515    0.00702965  [DokanFS]   status = 0x0  \n00000516    0.00703453  [DokanFS]   status = STATUS_SUCCESS \n00000517    0.00703991  [DokanFS] <== DokanCleanup\n00000518    0.00704724  [DokanFS] ==> DokanClose  \n00000519    0.00705262  [DokanFS]   ProcessId 1800\n00000520    0.00705897  [DokanFS]   FileName: (null) FCB.FileName: (null) \n00000521    0.00706435  [DokanFS]    IdType = DCB \n00000522    0.00706923  [DokanFS]    ccb is NULL  \n00000523    0.00707461  [DokanFS]   status = 0x0  \n00000524    0.00707950  [DokanFS]   status = STATUS_SUCCESS \n00000525    0.00708438  [DokanFS] <== DokanClose  \n00000526    0.01063977  [DokanFS]    IdType = VCB \n00000527    0.01065101  [DokanFS] ==> DokanCompleteCreate \n00000528    0.01066372  [DokanFS]   FileName:\\System Volume Information\\MountPointManagerRemoteDatabase \n00000529    0.01067105  [DokanFS]   FILE_DOES_NOT_EXIST \n00000530    0.01068033  [DokanFS]    IRP_MJ_CREATE failed. Free CCB:FFFFFA8007BEC7D0  \n00000531    0.01068962  [DokanFS]   Free FCB:FFFFFA8007301AD0 \n00000532    0.01072432  [DokanFS] ==> DokanCreate \n00000533    0.01073116  [DokanFS]   ProcessId 4 \n00000534    0.01073947  [DokanFS]   FileName:\\$Extend\\$Reparse:$R:$INDEX_ALLOCATION \n00000535    0.01074533  [DokanFS]    IdType = VCB \n00000536    0.01075071  [DokanFS]   IrpSp->Flags = 0  \n00000537    0.01075755  [DokanFS]   Allocate FCB  \n00000538    0.01077172  [DokanFS] ==> DokanRegisterPendingIrp \n00000539    0.01077856  [DokanFS] ==> DokanRegisterPendingIrpMain \n00000540    0.01078589  [DokanFS] <== DokanRegisterPendingIrpMain \n00000541    0.01079225  [DokanFS] <== DokanRegisterPendingIrp \n00000542    0.01079811  [DokanFS]   status = 0x103\n00000543    0.01080349  [DokanFS]   status = STATUS_PENDING \n00000544    0.01080886  [DokanFS] <== DokanCreate \n00000545    0.01081717  [DokanFS]   status = 0xc000003a \n00000546    0.01082401  [DokanFS]   status = STATUS_OBJECT_PATH_NOT_FOUND \n00000547    0.01082988  [DokanFS] <== DokanCompleteCreate \n00000548    0.01083819  [DokanFS]   status = 0x0  \n00000549    0.01084503  [DokanFS]   status = STATUS_SUCCESS \n00000550    0.01087924  [DokanFS]    IdType = VCB \n00000551    0.01088804  [DokanFS] ==> DokanRegisterPendingIrpMain \n00000552    0.01090172  [DokanFS] <== DokanRegisterPendingIrpMain \n00000553    0.01091491  [DokanFS]   status = STATUS_SUCCESS \n00000554    0.01092078  [DokanFS] <= NotificationLoop \n00000555    0.01092713  [DokanFS] => NotificationLoop \n00000556    0.01093251  [DokanFS] Try acquire SpinLock... \n00000557    0.01093788  [DokanFS] SpinLock irp Acquired \n00000558    0.01094375  [DokanFS] SpinLock notify Acquired\n00000559    0.01095010  [DokanFS] Clear Events... \n00000560    0.01095499  [DokanFS] Notify event cleared\n00000561    0.01096036  [DokanFS] Pending event cleared \n00000562    0.01096525  [DokanFS] Release SpinLock... \n00000563    0.01097014  [DokanFS] SpinLock notify Released\n00000564    0.01097551  [DokanFS] SpinLock irp Released \n00000565    0.01117295  [DokanFS] ==> DokanCreate \n00000566    0.01117686  [DokanFS]   ProcessId 1800\n00000567    0.01117882  [DokanFS]   FileName:(null) \n00000568    0.01118126  [DokanFS]    IdType = VCB \n00000569    0.01118371  [DokanFS]   IrpSp->Flags = 0  \n00000570    0.01118615  [DokanFS]    request for FS device\n00000571    0.01118908  [DokanFS]   status = 0x0  \n00000572    0.01119104  [DokanFS]   status = STATUS_SUCCESS \n00000573    0.01119348  [DokanFS] <== DokanCreate \n00000574    0.01120081  [DokanFS] ==> DokanDispatchIoControl  \n00000575    0.01120374  [DokanFS]   ProcessId 1800\n00000576    0.01120619  [DokanFS]    IdType = VCB \n00000577    0.01120863  [DokanFS] ==> DokanGetAccessToken \n00000578    0.01121352  [DokanFS] <== DokanGetAccessToken \n00000579    0.01121694  [DokanFS]   status = 0x0  \n00000580    0.01121938  [DokanFS]   status = STATUS_SUCCESS \n00000581    0.01122183  [DokanFS]   status = 0x0  \n00000582    0.01122378  [DokanFS]   status = STATUS_SUCCESS \n00000583    0.01122622  [DokanFS] <== DokanDispatchIoControl  \n00000584    0.01123013  [DokanFS] ==> DokanCleanup\n00000585    0.01123307  [DokanFS]   ProcessId 1800\n00000586    0.01123600  [DokanFS]   FileName: (null) FCB.FileName: (null) \n00000587    0.01123844  [DokanFS]    IdType = DCB \n00000588    0.01124040  [DokanFS]    ccb is NULL  \n00000589    0.01124284  [DokanFS]   status = 0x0  \n00000590    0.01124528  [DokanFS]   status = STATUS_SUCCESS \n00000591    0.01124724  [DokanFS] <== DokanCleanup\n00000592    0.01125066  [DokanFS] ==> DokanClose  \n00000593    0.01125310  [DokanFS]   ProcessId 1800\n00000594    0.01125555  [DokanFS]   FileName: (null) FCB.FileName: (null) \n00000595    0.01125848  [DokanFS]    IdType = DCB \n00000596    0.01126043  [DokanFS]    ccb is NULL  \n00000597    0.01126288  [DokanFS]   status = 0x0  \n00000598    0.01126483  [DokanFS]   status = STATUS_SUCCESS \n00000599    0.01126728  [DokanFS] <== DokanClose  \n00000600    0.01252425  [DokanFS]    IdType = VCB \n00000601    0.01252913  [DokanFS] ==> DokanCompleteCreate \n00000602    0.01253451  [DokanFS]   FileName:\\$Extend\\$Reparse:$R:$INDEX_ALLOCATION \n00000603    0.01253695  [DokanFS]   FILE_DOES_NOT_EXIST \n00000604    0.01254135  [DokanFS]    IRP_MJ_CREATE failed. Free CCB:FFFFFA8007BEC7D0  \n00000605    0.01254526  [DokanFS]   Free FCB:FFFFFA80062D19C0 \n00000606    0.01798121  [DokanFS] ==> DokanCreate \n00000607    0.01798903  [DokanFS]   ProcessId 1800\n00000608    0.01799197  [DokanFS]   FileName:(null) \n00000609    0.01799441  [DokanFS]    IdType = VCB \n00000610    0.01799685  [DokanFS]   IrpSp->Flags = 0  \n00000611    0.01799979  [DokanFS]    request for FS device\n00000612    0.01800321  [DokanFS]   status = 0x0  \n00000613    0.01800565  [DokanFS]   status = STATUS_SUCCESS \n00000614    0.01800809  [DokanFS] <== DokanCreate \n00000615    0.01801689  [DokanFS]    IdType = VCB \n00000616    0.01802129  [DokanFS]   status = 0x0  \n00000617    0.01802325  [DokanFS]   status = STATUS_SUCCESS \n00000618    0.01830376  [DokanFS]   status = 0xc000003a \n00000619    0.01830865  [DokanFS]   status = STATUS_OBJECT_PATH_NOT_FOUND \n00000620    0.01831207  [DokanFS] <== DokanCompleteCreate \n00000621    0.01831647  [DokanFS]   status = 0x0  \n00000622    0.01831892  [DokanFS]   status = STATUS_SUCCESS \n00000623    0.01832820  [DokanFS]    IdType = VCB \n00000624    0.01833162  [DokanFS] ==> DokanRegisterPendingIrpMain \n00000625    0.01833553  [DokanFS] <== DokanRegisterPendingIrpMain \n00000626    0.01857305  [DokanFS]   status = 0x0  \n00000627    0.01857696  [DokanFS]   status = STATUS_SUCCESS \n00000628    0.01857989  [DokanFS] <= NotificationLoop \n00000629    0.01858282  [DokanFS] => NotificationLoop \n00000630    0.01858526  [DokanFS] Try acquire SpinLock... \n00000631    0.01858771  [DokanFS] SpinLock irp Acquired \n00000632    0.01859015  [DokanFS] SpinLock notify Acquired\n00000633    0.01859308  [DokanFS] Clear Events... \n00000634    0.01859504  [DokanFS] Notify event cleared\n00000635    0.01859748  [DokanFS] Pending event cleared \n00000636    0.01859944  [DokanFS] Release SpinLock... \n00000637    0.01860188  [DokanFS] SpinLock notify Released\n00000638    0.01860432  [DokanFS] SpinLock irp Released \n00000639    0.01860628  [DokanFS] <= NotificationLoop \n00000640    0.01887800  [DokanFS] ==> DokanCreate \n00000641    0.01888240  [DokanFS]   ProcessId 1800\n00000642    0.01888533  [DokanFS]   FileName:(null) \n00000643    0.01892052  [DokanFS]    IdType = VCB \n00000644    0.01892394  [DokanFS]   IrpSp->Flags = 0  \n00000645    0.01892639  [DokanFS]    request for FS device\n00000646    0.01892932  [DokanFS]   status = 0x0  \n00000647    0.01893176  [DokanFS]   status = STATUS_SUCCESS \n00000648    0.01893372  [DokanFS] <== DokanCreate \n00000649    0.01894496  [DokanFS]    IdType = VCB \n00000650    0.01894789  [DokanFS] ==> DokanRegisterPendingIrpMain \n00000651    0.01895180  [DokanFS] <== DokanRegisterPendingIrpMain \n00000652    0.01895522  [DokanFS] => NotificationLoop \n00000653    0.01895766  [DokanFS] Try acquire SpinLock... \n00000654    0.01896011  [DokanFS] SpinLock irp Acquired \n00000655    0.01896255  [DokanFS] SpinLock notify Acquired\n00000656    0.01896450  [DokanFS] Clear Events... \n00000657    0.01896695  [DokanFS] Notify event cleared\n00000658    0.01896793  [DokanFS] ==> DokanCreate \n00000659    0.01896939  [DokanFS] Pending event cleared \n00000660    0.01897232  [DokanFS] Release SpinLock... \n00000661    0.01897281  [DokanFS]   ProcessId 1800\n00000662    0.01897477  [DokanFS] SpinLock notify Released\n00000663    0.01897575  [DokanFS]   FileName:(null) \n00000664    0.01897770  [DokanFS] SpinLock irp Released \n00000665    0.01897868  [DokanFS]    IdType = VCB \n00000666    0.01898014  [DokanFS] <= NotificationLoop \n00000667    0.01898112  [DokanFS]   IrpSp->Flags = 0  \n00000668    0.01898405  [DokanFS]    request for FS device\n00000669    0.01898699  [DokanFS]   status = 0x0  \n00000670    0.01898894  [DokanFS]   status = STATUS_SUCCESS \n00000671    0.01899138  [DokanFS] <== DokanCreate \n00000672    0.01900067  [DokanFS]    IdType = VCB \n00000673    0.01900360  [DokanFS] ==> DokanRegisterPendingIrpMain \n00000674    0.01900849  [DokanFS] <== DokanRegisterPendingIrpMain \n00000675    0.01901240  [DokanFS] => NotificationLoop \n00000676    0.01901533  [DokanFS] Try acquire SpinLock... \n00000677    0.01901777  [DokanFS] SpinLock irp Acquired \n00000678    0.01902022  [DokanFS] SpinLock notify Acquired\n00000679    0.01902217  [DokanFS] Clear Events... \n00000680    0.01902462  [DokanFS] Notify event cleared\n00000681    0.01902657  [DokanFS] Pending event cleared \n00000682    0.01902902  [DokanFS] Release SpinLock... \n00000683    0.01903146  [DokanFS] SpinLock notify Released\n00000684    0.01903341  [DokanFS] SpinLock irp Released \n00000685    0.01903586  [DokanFS] <= NotificationLoop \n00000686    0.01906958  [DokanFS] ==> DokanCreate \n00000687    0.01907349  [DokanFS]   ProcessId 1800\n00000688    0.01907593  [DokanFS]   FileName:(null) \n00000689    0.01907789  [DokanFS]    IdType = VCB \n00000690    0.01908033  [DokanFS]   IrpSp->Flags = 0  \n00000691    0.01908277  [DokanFS]    request for FS device\n00000692    0.01908522  [DokanFS]   status = 0x0  \n00000693    0.01908766  [DokanFS]   status = STATUS_SUCCESS \n00000694    0.01909010  [DokanFS] <== DokanCreate \n00000695    0.01909841  [DokanFS]    IdType = VCB \n00000696    0.01910134  [DokanFS] ==> DokanRegisterPendingIrpMain \n00000697    0.01910574  [DokanFS] <== DokanRegisterPendingIrpMain \n00000698    0.01911014  [DokanFS] => NotificationLoop \n00000699    0.01911307  [DokanFS] Try acquire SpinLock... \n00000700    0.01911552  [DokanFS] SpinLock irp Acquired \n00000701    0.01911796  [DokanFS] SpinLock notify Acquired\n00000702    0.01911992  [DokanFS] Clear Events... \n00000703    0.01912236  [DokanFS] Notify event cleared\n00000704    0.01912431  [DokanFS] Pending event cleared \n00000705    0.01912676  [DokanFS] Release SpinLock... \n00000706    0.01912920  [DokanFS] SpinLock notify Released\n00000707    0.01913165  [DokanFS] SpinLock irp Released \n00000708    0.01913409  [DokanFS] <= NotificationLoop \n00000709    0.19104570  [DokanFS] ==> ReleaseTimeoutPendingIRP\n00000710    0.19106232  [DokanFS]   IrpQueue is Empty \n00000711    3.01805067  [DokanFS]    IdType = VCB \n00000712    3.01807117  [DokanFS]   status = 0x0  \n00000713    3.01807594  [DokanFS]   status = STATUS_SUCCESS \n00000714    5.19325829  [DokanFS] ==> ReleaseTimeoutPendingIRP\n00000715    5.19327307  [DokanFS]   IrpQueue is Empty \n00000716    6.01809692  [DokanFS]    IdType = VCB \n00000717    6.01811838  [DokanFS]   status = 0x0  \n00000718    6.01812458  [DokanFS]   status = STATUS_SUCCESS \n00000719    9.01820374  [DokanFS]    IdType = VCB \n00000720    9.01822567  [DokanFS]   status = 0x0  \n00000721    9.01823139  [DokanFS]   status = STATUS_SUCCESS \n00000722    10.19044495 [DokanFS] ==> ReleaseTimeoutPendingIRP\n00000723    10.19046021 [DokanFS]   IrpQueue is Empty \n00000724    12.01826954 [DokanFS]    IdType = VCB \n00000725    12.01829052 [DokanFS]   status = 0x0  \n00000726    12.01829720 [DokanFS]   status = STATUS_SUCCESS \n00000727    15.01846886 [DokanFS]    IdType = VCB \n00000728    15.01849079 [DokanFS]   status = 0x0  \n00000729    15.01849651 [DokanFS]   status = STATUS_SUCCESS \n00000730    15.19255066 [DokanFS] ==> ReleaseTimeoutPendingIRP\n00000731    15.19256496 [DokanFS]   IrpQueue is Empty \n00000732    18.01843452 [DokanFS]    IdType = VCB \n00000733    18.01845741 [DokanFS]   status = 0x0  \n00000734    18.01846313 [DokanFS]   status = STATUS_SUCCESS \n00000735    20.19072342 [DokanFS] ==> ReleaseTimeoutPendingIRP\n00000736    20.19073868 [DokanFS]   IrpQueue is Empty \n00000737    21.01855850 [DokanFS]    IdType = VCB \n00000738    21.01857758 [DokanFS]   status = 0x0  \n00000739    21.01858330 [DokanFS]   status = STATUS_SUCCESS \n00000740    24.01863670 [DokanFS]    IdType = VCB \n00000741    24.01866150 [DokanFS]   status = 0x0  \n00000742    24.01866722 [DokanFS]   status = STATUS_SUCCESS \n00000743    25.19071198 [DokanFS] ==> ReleaseTimeoutPendingIRP\n00000744    25.19072533 [DokanFS]   IrpQueue is Empty \n00000745    26.56500435 [DokanFS] ==> DokanCreate \n00000746    26.56501961 [DokanFS]   ProcessId 3480\n00000747    26.56502533 [DokanFS]   FileName:\\\n00000748    26.56503105 [DokanFS]    IdType = VCB \n00000749    26.56503677 [DokanFS]   IrpSp->Flags = 0  \n00000750    26.56504440 [DokanFS]   Allocate FCB  \n00000751    26.56506157 [DokanFS] ==> DokanRegisterPendingIrp \n00000752    26.56506920 [DokanFS] ==> DokanRegisterPendingIrpMain \n00000753    26.56507683 [DokanFS] <== DokanRegisterPendingIrpMain \n00000754    26.56508446 [DokanFS] <== DokanRegisterPendingIrp \n00000755    26.56509018 [DokanFS]   status = 0x103\n00000756    26.56509590 [DokanFS]   status = STATUS_PENDING \n00000757    26.56510162 [DokanFS] <== DokanCreate \n00000758    26.56532860 [DokanFS] => NotificationLoop \n00000759    26.56534004 [DokanFS] Try acquire SpinLock... \n00000760    26.56534576 [DokanFS] SpinLock irp Acquired \n00000761    26.56535149 [DokanFS] SpinLock notify Acquired\n00000762    26.56535912 [DokanFS] Clear Events... \n00000763    26.56536484 [DokanFS] Notify event cleared\n00000764    26.56537056 [DokanFS] Pending event cleared \n00000765    26.56537628 [DokanFS] Release SpinLock... \n00000766    26.56538010 [DokanFS] SpinLock notify Released\n00000767    26.56539726 [DokanFS] SpinLock irp Released \n00000768    26.56541061 [DokanFS]   status = 0x0  \n00000769    26.56541443 [DokanFS]   status = STATUS_SUCCESS \n00000770    26.56542206 [DokanFS] <= NotificationLoop \n00000771    27.01873016 [DokanFS]    IdType = VCB \n00000772    27.01875305 [DokanFS]   status = 0x0  \n00000773    27.01875877 [DokanFS]   status = STATUS_SUCCESS \n00000774    27.58612442 [DokanFS] ==> DokanCreate \n00000775    27.58613777 [DokanFS]   ProcessId 1800\n00000776    27.58614349 [DokanFS]   FileName:(null) \n00000777    27.58614922 [DokanFS]    IdType = VCB \n00000778    27.58615685 [DokanFS]   IrpSp->Flags = 0  \n00000779    27.58616257 [DokanFS]    request for FS device\n00000780    27.58616829 [DokanFS]   status = 0x0  \n00000781    27.58617401 [DokanFS]   status = STATUS_SUCCESS \n00000782    27.58617973 [DokanFS] <== DokanCreate \n00000783    27.58620262 [DokanFS] ==> DokanDispatchIoControl  \n00000784    27.58620834 [DokanFS]   ProcessId 1800\n00000785    27.58621407 [DokanFS]    IdType = VCB \n00000786    27.58621788 [DokanFS] ==> DokanGetAccessToken \n00000787    27.58623123 [DokanFS] <== DokanGetAccessToken \n00000788    27.58624268 [DokanFS]   status = 0x0  \n00000789    27.58624649 [DokanFS]   status = STATUS_SUCCESS \n00000790    27.58625221 [DokanFS]   status = 0x0  \n00000791    27.58625793 [DokanFS]   status = STATUS_SUCCESS \n00000792    27.58626175 [DokanFS] <== DokanDispatchIoControl  \n00000793    27.58627319 [DokanFS] ==> DokanCleanup\n00000794    27.58627892 [DokanFS]   ProcessId 1800\n00000795    27.58628464 [DokanFS]   FileName: (null) FCB.FileName: (null) \n00000796    27.58629036 [DokanFS]    IdType = DCB \n00000797    27.58629608 [DokanFS]    ccb is NULL  \n00000798    27.58629990 [DokanFS]   status = 0x0  \n00000799    27.58630562 [DokanFS]   status = STATUS_SUCCESS \n00000800    27.58631325 [DokanFS] <== DokanCleanup\n00000801    27.58632088 [DokanFS] ==> DokanClose  \n00000802    27.58632469 [DokanFS]   ProcessId 1800\n00000803    27.58633232 [DokanFS]   FileName: (null) FCB.FileName: (null) \n00000804    27.58633804 [DokanFS]    IdType = DCB \n00000805    27.58639908 [DokanFS]    ccb is NULL  \n00000806    27.58640480 [DokanFS]   status = 0x0  \n00000807    27.58641052 [DokanFS]   status = STATUS_SUCCESS \n00000808    27.58641434 [DokanFS] <== DokanClose  \n00000809    28.20317078 [DokanFS]    IdType = VCB \n00000810    28.20318985 [DokanFS] ==> DokanCompleteCreate \n00000811    28.20319748 [DokanFS]   FileName:\\\n00000812    28.20320129 [DokanFS]   FILE_OPENED \n00000813    28.20321083 [DokanFS]   FILE_DIRECTORY_FILE FFFFFA8007DC24D0  \n00000814    28.20324707 [DokanFS] ==> DokanQueryInformation \n00000815    28.20325661 [DokanFS]   FileInfoClass 9 \n00000816    28.20326042 [DokanFS]   ProcessId 3480\n00000817    28.20326805 [DokanFS]   FileName: \\ FCB.FileName: \\ \n00000818    28.20327377 [DokanFS]   FileNameInformation \n00000819    28.20327950 [DokanFS]   status = 0x0  \n00000820    28.20328522 [DokanFS]   status = STATUS_SUCCESS \n00000821    28.20329094 [DokanFS] <== DokanQueryInformation \n00000822    28.20331764 [DokanFS] ==> DokanQueryVolumeInformation \n00000823    28.20332527 [DokanFS]   ProcessId 3480\n00000824    28.20332909 [DokanFS]   FileName: \\ \n00000825    28.20333672 [DokanFS]   FileFsVolumeInformation \n00000826    28.20334435 [DokanFS] ==> DokanRegisterPendingIrp \n00000827    28.20335007 [DokanFS] ==> DokanRegisterPendingIrpMain \n00000828    28.20335770 [DokanFS] <== DokanRegisterPendingIrpMain \n00000829    28.20336723 [DokanFS] <== DokanRegisterPendingIrp \n00000830    28.20337296 [DokanFS]   status = 0x103\n00000831    28.20337677 [DokanFS]   status = STATUS_PENDING \n00000832    28.20338440 [DokanFS] <== DokanQueryVolumeInformation \n00000833    28.20339203 [DokanFS]   status = 0x0  \n00000834    28.20339584 [DokanFS]   status = STATUS_SUCCESS \n00000835    28.20340157 [DokanFS] <== DokanCompleteCreate \n00000836    28.20340919 [DokanFS]   status = 0x0  \n00000837    28.20341682 [DokanFS]   status = STATUS_SUCCESS \n00000838    28.20343208 [DokanFS]    IdType = VCB \n00000839    28.20343971 [DokanFS] ==> DokanRegisterPendingIrpMain \n00000840    28.20344543 [DokanFS] <== DokanRegisterPendingIrpMain \n00000841    28.20345497 [DokanFS] => NotificationLoop \n00000842    28.20346069 [DokanFS] Try acquire SpinLock... \n00000843    28.20346642 [DokanFS] SpinLock irp Acquired \n00000844    28.20347023 [DokanFS] SpinLock notify Acquired\n00000845    28.20347786 [DokanFS] Clear Events... \n00000846    28.20348167 [DokanFS] Notify event cleared\n00000847    28.20348740 [DokanFS] Pending event cleared \n00000848    28.20349503 [DokanFS] Release SpinLock... \n00000849    28.20349884 [DokanFS] SpinLock notify Released\n00000850    28.20350456 [DokanFS] SpinLock irp Released \n00000851    28.20388603 [DokanFS]    IdType = VCB \n00000852    28.20389557 [DokanFS] ==> DokanCompleteQueryVolumeInformation \n00000853    28.20391655 [DokanFS] ==> DokanQueryVolumeInformation \n00000854    28.20392227 [DokanFS]   ProcessId 3480\n00000855    28.20392799 [DokanFS]   FileName: \\ \n00000856    28.20393372 [DokanFS]   FileFsAttributeInformation\n00000857    28.20393944 [DokanFS] ==> DokanRegisterPendingIrp \n00000858    28.20394707 [DokanFS] ==> DokanRegisterPendingIrpMain \n00000859    28.20395279 [DokanFS] <== DokanRegisterPendingIrpMain \n00000860    28.20395851 [DokanFS] <== DokanRegisterPendingIrp \n00000861    28.20396614 [DokanFS]   status = 0x103\n00000862    28.20397186 [DokanFS]   status = STATUS_PENDING \n00000863    28.20397758 [DokanFS] <== DokanQueryVolumeInformation \n00000864    28.20398521 [DokanFS]   status = 0x0  \n00000865    28.20399094 [DokanFS]   status = STATUS_SUCCESS \n00000866    28.20399666 [DokanFS] <== DokanCompleteQueryVolumeInformation \n00000867    28.20400429 [DokanFS]   status = 0x0  \n00000868    28.20401001 [DokanFS]   status = STATUS_SUCCESS \n00000869    28.20402718 [DokanFS]    IdType = VCB \n00000870    28.20403290 [DokanFS] ==> DokanRegisterPendingIrpMain \n00000871    28.20404053 [DokanFS] <== DokanRegisterPendingIrpMain \n00000872    28.20404816 [DokanFS]   status = 0x0  \n00000873    28.20405388 [DokanFS]   status = STATUS_SUCCESS \n00000874    28.20405960 [DokanFS] <= NotificationLoop \n00000875    28.20406532 [DokanFS] => NotificationLoop \n00000876    28.20407104 [DokanFS] Try acquire SpinLock... \n00000877    28.20407486 [DokanFS] SpinLock irp Acquired \n00000878    28.20408058 [DokanFS] SpinLock notify Acquired\n00000879    28.20408821 [DokanFS] Clear Events... \n00000880    28.20409203 [DokanFS] Notify event cleared\n00000881    28.20409584 [DokanFS] Pending event cleared \n00000882    28.20410156 [DokanFS] Release SpinLock... \n00000883    28.20410728 [DokanFS] SpinLock notify Released\n00000884    28.20411110 [DokanFS] SpinLock irp Released \n00000885    28.20412064 [DokanFS]   status = 0x0  \n00000886    28.20412636 [DokanFS]   status = STATUS_SUCCESS \n00000887    28.20413208 [DokanFS] <= NotificationLoop \n00000888    28.22709465 [DokanFS]    IdType = VCB \n00000889    28.22710991 [DokanFS] ==> DokanCompleteQueryVolumeInformation \n00000890    28.22714615 [DokanFS] ==> DokanCleanup\n00000891    28.22715569 [DokanFS]   ProcessId 3480\n00000892    28.22716331 [DokanFS]   FileName: \\ FCB.FileName: \\ \n00000893    28.22717094 [DokanFS] ==> DokanRegisterPendingIrp \n00000894    28.22717857 [DokanFS] ==> DokanRegisterPendingIrpMain \n00000895    28.22718620 [DokanFS] <== DokanRegisterPendingIrpMain \n00000896    28.22719574 [DokanFS] <== DokanRegisterPendingIrp \n00000897    28.22720146 [DokanFS]   status = 0x103\n00000898    28.22720718 [DokanFS]   status = STATUS_PENDING \n00000899    28.22721291 [DokanFS] <== DokanCleanup\n00000900    28.22721863 [DokanFS]   status = 0x0  \n00000901    28.22722435 [DokanFS]   status = STATUS_SUCCESS \n00000902    28.22723007 [DokanFS] <== DokanCompleteQueryVolumeInformation \n00000903    28.22723961 [DokanFS]   status = 0x0  \n00000904    28.22724533 [DokanFS]   status = STATUS_SUCCESS \n00000905    28.22726631 [DokanFS]    IdType = VCB \n00000906    28.22727394 [DokanFS] ==> DokanRegisterPendingIrpMain \n00000907    28.22728157 [DokanFS] <== DokanRegisterPendingIrpMain \n00000908    28.22728920 [DokanFS] => NotificationLoop \n00000909    28.22729492 [DokanFS] Try acquire SpinLock... \n00000910    28.22730064 [DokanFS] SpinLock irp Acquired \n00000911    28.22730637 [DokanFS] SpinLock notify Acquired\n00000912    28.22731209 [DokanFS] Clear Events... \n00000913    28.22731781 [DokanFS] Notify event cleared\n00000914    28.22732353 [DokanFS] Pending event cleared \n00000915    28.22733116 [DokanFS] Release SpinLock... \n00000916    28.22733879 [DokanFS] SpinLock notify Released\n00000917    28.22734642 [DokanFS] SpinLock irp Released \n00000918    28.22735596 [DokanFS]   status = 0x0  \n00000919    28.22736168 [DokanFS]   status = STATUS_SUCCESS \n00000920    28.22736740 [DokanFS] <= NotificationLoop \n00000921    28.34389496 [DokanFS]    IdType = VCB \n00000922    28.34390068 [DokanFS] ==> DokanCompleteCleanup\n00000923    28.34390831 [DokanFS] ==> DokanClose  \n00000924    28.34391212 [DokanFS]   ProcessId 3480\n00000925    28.34391594 [DokanFS]   FileName: \\ FCB.FileName: \\ \n00000926    28.34391975 [DokanFS]    UserContext:24D428 \n00000927    28.34392357 [DokanFS]    Free CCB:FFFFFA8007CF8990\n00000928    28.34392738 [DokanFS]   Free FCB:FFFFFA8007DC24D0 \n00000929    28.34393120 [DokanFS]   status = 0x0  \n00000930    28.34393311 [DokanFS]   status = STATUS_SUCCESS \n00000931    28.34393501 [DokanFS] <== DokanClose  \n00000932    28.34395409 [DokanFS]   status = 0x0  \n00000933    28.34395599 [DokanFS]   status = STATUS_SUCCESS \n00000934    28.34395790 [DokanFS] <== DokanCompleteCleanup\n00000935    28.34396172 [DokanFS]   status = 0x0  \n00000936    28.34396172 [DokanFS]   status = STATUS_SUCCESS \n00000937    28.34397507 [DokanFS]    IdType = VCB \n00000938    28.34397697 [DokanFS] ==> DokanRegisterPendingIrpMain \n00000939    28.34398079 [DokanFS] <== DokanRegisterPendingIrpMain \n00000940    28.34398460 [DokanFS] => NotificationLoop \n00000941    28.34398651 [DokanFS] Try acquire SpinLock... \n00000942    28.34399033 [DokanFS] SpinLock irp Acquired \n00000943    28.34399223 [DokanFS] SpinLock notify Acquired\n00000944    28.34399414 [DokanFS] Clear Events... \n00000945    28.34399796 [DokanFS] Notify event cleared\n00000946    28.34399986 [DokanFS] Pending event cleared \n00000947    28.34400177 [DokanFS] Release SpinLock... \n00000948    28.34400177 [DokanFS] SpinLock notify Released\n00000949    28.34400558 [DokanFS] SpinLock irp Released \n00000950    28.34400940 [DokanFS]   status = 0x0  \n00000951    28.34401131 [DokanFS]   status = STATUS_SUCCESS \n00000952    28.34401321 [DokanFS] <= NotificationLoop \n00000953    28.43662834 [DokanFS]    IdType = VCB \n00000954    28.43663788 [DokanFS] ==> DokanRegisterPendingIrpMain \n00000955    28.43664360 [DokanFS] <== DokanRegisterPendingIrpMain \n00000956    28.43664932 [DokanFS] => NotificationLoop \n00000957    28.43665314 [DokanFS] Try acquire SpinLock... \n00000958    28.43665695 [DokanFS] SpinLock irp Acquired \n00000959    28.43666077 [DokanFS] SpinLock notify Acquired\n00000960    28.43666458 [DokanFS] Clear Events... \n00000961    28.43667221 [DokanFS] Notify event cleared\n00000962    28.43667603 [DokanFS] Pending event cleared \n00000963    28.43667984 [DokanFS] Release SpinLock... \n00000964    28.43668175 [DokanFS] SpinLock notify Released\n00000965    28.43668556 [DokanFS] SpinLock irp Released \n00000966    28.43668938 [DokanFS] <= NotificationLoop \n00000967    30.01881599 [DokanFS]    IdType = VCB \n00000968    30.01884079 [DokanFS]   status = 0x0  \n00000969    30.01884651 [DokanFS]   status = STATUS_SUCCESS \n00000970    30.19016838 [DokanFS] ==> ReleaseTimeoutPendingIRP\n00000971    30.19018173 [DokanFS]   IrpQueue is Empty \n00000972    33.01890945 [DokanFS]    IdType = VCB \n00000973    33.01893234 [DokanFS]   status = 0x0  \n00000974    33.01893616 [DokanFS]   status = STATUS_SUCCESS \n00000975    35.19209671 [DokanFS] ==> ReleaseTimeoutPendingIRP\n00000976    35.19211197 [DokanFS]   IrpQueue is Empty \n00000977    36.01894379 [DokanFS]    IdType = VCB \n00000978    36.01896286 [DokanFS]   status = 0x0  \n00000979    36.01897049 [DokanFS]   status = STATUS_SUCCESS \n```\n. Yes, it works from shell (both native cmd.exe and mingwin shell), killing explorer makes it appear in explorer. However explorer has to be killed each time after a mount.\nAdding or removing /m does not change things.\n. Ah, it is installing in both \\Prog and \\Prog x86. Sorry to have bothered you and thanks for the help.\n. Yes, I looked at access.c, but I'd like to deny other users access to those two (in addition to doing stuff in CreateFile) and it seems hard to do with the current API.\n. Thank you very much.\n. Can also confirm this with 1.0.0-RC1, perhaps this is the same as #138?\n. @Liryna \nTested with two Windows 7 x64 machines. One had previous Dokan versions and the other had never had a Dokan installation before (thus not a conflict caused by an older version). Using the 1.0.0-RC1.\nLooks superficially like the same issue as in #138 (which includes logs).\nAfter running mirror.exe /r C:\\ /l n /d /s:\n- cmd.exe browsing N: works\n- explorer does not see N:\n- killing explorer makes explorer see N:\n- /n, /m, or /o don't fix it\n- the same issue is present in other filesystems besides mirror.exe\n. Here are some logs:\nFrom mirror.exe runs first mirror.exe /d /s /r C:\\q /l q and then mirror.exe /d /s /r C:\\q /l q /o. Both dbgview and stderr. Windows 7 x64 DokanSetupDbg_redist.exe 1.0.0-RC1 (sha1 2539aef28cffccbbf5ba4a395aa374d0f5fc4926).\nmirror.dsrl.dbgview.log.txt\nmirror.dsrl.stderr.log.txt\nmirror.dsrlo.dbgview.log.txt\nmirror.dsrlo.stderr.log.txt\n. Btw the code in mount.c (referenced from the previous comment):\nZeroMemory(&hdr, sizeof(DEV_BROADCAST_VOLUME));\n      hdr.dbcv_devicetype = DBT_DEVTYP_VOLUME;\n      hdr.dbcv_flags &= DBTF_MEDIA;\n1) First we zero out whole hdr\n2) set dbcv_devicetype\n3) &= dbcv_flags line is a no-op, is this by purpose?\ndbcv_size is not set anywhere? \n. That google drive link appears not to work unlike the previous ones. Asks for login and then has an error.\n. This makes the drive appear in explorer for me! Fixed for my test machines.\n. This is solved better by https://github.com/dokan-dev/dokany/commit/c7a7a0d5401ff1751a879e3dfb5145092e14d90f closing this.\n. Hi @Liryna,\nThe following snippet of C is mostly non-sense but it is short and triggers a BSOD for me in 2-300sec without debugging turned on:\n```\ninclude \ninclude \"dokan.h\"\nDWORD WINAPI thread_func(LPVOID _ignore) {\n  DOKAN_OPERATIONS dokan_operations;\n  DOKAN_OPTIONS dokan_options;\n  memset(&dokan_operations, 0, sizeof(dokan_operations));\n  memset(&dokan_options, 0, sizeof(dokan_options));\n  dokan_options.Version = DOKAN_VERSION;\n  dokan_options.MountPoint = L\"Q:\";\n  DokanMain(&dokan_options, &dokan_operations);\n  return 0;\n}\nint main(void) {\n  while (1) {\n    CreateThread(NULL,0,thread_func,0,0,NULL);\n    DokanRemoveMountPoint(L\"Q:\");\n    }\n}\n```\n. Hi,\nTried today this with fresh dokan master and got BSOD crashes on 3/3 tries with Windows 7 x64.\n2 blames on fltmgr.sys, one PAGE_FAULT_IN_NONPAGED area (something referenced memory location 0x50).\n. Spent a day debugging with fresh master, two crashes alternating:\n```\n\n\n*\nBugcheck Analysis                                    *\n*\n\n\nBugcheck code 00000050\nArguments fffffff4 00000000 82859fd4 00000000\n ERROR: Symbol file could not be found.  Defaulted to export symbols for ntdll.dll - \n ERROR: Symbol file could not be found.  Defaulted to export symbols for ntkrpamp.exe - \nChildEBP RetAddr  Args to Child            \nWARNING: Stack unwind information not available. Following frames may be wrong.\n9c56b3b4 826eb85d 00000003 00000000 00000000 nt!DbgBreakPointWithStatus+0x4\n9c56b778 82699879 00000050 fffffff4 00000000 nt!KeBugCheckEx+0xc7f\n9c56b7fc 8264caa8 00000000 fffffff4 00000000 nt!IoGetRelatedDeviceObject+0x80b\n9c56b838 8272b10d 00000000 00000000 00000023 nt!Kei386EoiHelper+0x27e0\n9c56b8ec 82873de7 00000000 84a2001c 000000fe nt!swscanf_s+0x4969\n*** ERROR: Symbol file could not be found.  Defaulted to export symbols for fltmgr.sys - \n9c56b908 8661f2b2 00000000 84a2001c 000000fe nt!ObQueryNameString+0x18\n9c56b930 8661994c 00000000 84a20008 1a37a1eb fltmgr!FltGetFileNameInformationUnsafe+0x632\n9c56b998 86619c5b 84a25eb0 8417d2f8 8417d2f8 fltmgr!FltProcessFileLock+0x2000\n9c56b9c8 82642c1e 84a25eb0 8417d2f8 82743b88 fltmgr!FltProcessFileLock+0x230f\n9c56b9e0 827a5dd8 82a21808 842447f0 82a2185c nt!IofCallDriver+0x64\n9c56ba44 826b392e 842447f0 84115001 00000000 nt!NtDeleteFile+0x67c\n9c56ba7c 82851e0b 84115008 9c56bba8 9c56bb40 nt!RtlCopyUnicodeString+0x16e\n9c56bb60 82831d2e 842447f0 a5daa760 84116d20 nt!NtClose+0x833\n9c56bbdc 82842157 00000000 9c56bc30 00000040 nt!ObCreateObject+0x90b\n9c56bc38 82838c35 0d03fb14 83daa760 fffffd01 nt!ObOpenObjectByName+0x165\n9c56bcb4 8285c4b4 0d03fb70 c0100080 0d03fb14 nt!NtAllocateVirtualMemory+0x1f69\n9c56bd00 826498c6 0d03fb70 c0100080 0d03fb14 nt!NtCreateFile+0x34\n9c56bd34 776870f4 badb0d00 0d03fadc 00000000 nt!ZwYieldExecution+0xb86\n9c56bd38 badb0d00 0d03fadc 00000000 00000000 ntdll!KiFastSystemCallRet\n9c56bd3c 0d03fadc 00000000 00000000 00000000 0xbadb0d00\nnt!DbgBreakPointWithStatus+0x4:\n826867b8 cc              int     3\n```\nand\n```\nBugcheck code 0000000A\nArguments 00000024 00000002 00000000 826b850e\n ERROR: Symbol file could not be found.  Defaulted to export symbols for ntdll.dll - \n ERROR: Symbol file could not be found.  Defaulted to export symbols for ntkrpamp.exe - \nChildEBP RetAddr  Args to Child            \nWARNING: Stack unwind information not available. Following frames may be wrong.\n9637662c 826df85d 00000003 00000024 826b850e nt!DbgBreakPointWithStatus+0x4\n963769f4 82640b7f 0000000a 00000024 00000002 nt!KeBugCheckEx+0xc7f\n96376a58 828227de 96376b50 88f30030 00000000 nt!Kei386EoiHelper+0x28b7\n96376b60 82825d2e 84be8ad8 a5db17a8 8c00ea38 nt!PsReferencePrimaryToken+0xfe\n96376bdc 82836157 00000000 96376c30 00000040 nt!ObCreateObject+0x90b\n96376c38 8282cc35 04e4fc48 83db17a8 fffffd01 nt!ObOpenObjectByName+0x165\n96376cb4 828504b4 04e4fca4 c0100080 04e4fc48 nt!NtAllocateVirtualMemory+0x1f69\n96376d00 8263d8c6 04e4fca4 c0100080 04e4fc48 nt!NtCreateFile+0x34\n96376d34 778070f4 badb0d00 04e4fc10 00000000 nt!ZwYieldExecution+0xb86\n96376d38 badb0d00 04e4fc10 00000000 00000000 ntdll!KiFastSystemCallRet\n96376d3c 04e4fc10 00000000 00000000 00000000 0xbadb0d00\n96376d40 00000000 00000000 00000000 00000000 0x4e4fc10\nnt!DbgBreakPointWithStatus+0x4:\n8267a7b8 cc              int     3\n```\nEnabling dokan debugging log seems to make this go away (timing?) which is quite frustrating.\nAny ideas on making the debug log faster so it wouldn't interfere so much?\n. @marinkobabic That branch seems to crash with mirror.\n. @marinkobabic Yes.\nIt faults here: https://github.com/marinkobabic/dokany/blob/FixBsodMounting/sys/init.c#L654 according to windbg. \nApparently the DeviceObject->DeviceExtension is NULL and thus the crash. IsUnmountPending was called from DokanCreateMountPointSysProc.\nCrash was on a fresh 32bit Windows 7 VM.\n. Now mirror works, however the stress test crashes after a while (seems longer than before):\n```\nkd> !analyze -v\n\n\n*\nBugcheck Analysis                                    *\n*\n\n\nKERNEL_MODE_EXCEPTION_NOT_HANDLED (8e)\nThis is a very common bugcheck.  Usually the exception address pinpoints\nthe driver/function that caused the problem.  Always note this address\nas well as the link date of the driver/image that contains this address.\nSome common problems are exception code 0x80000003.  This means a hard\ncoded breakpoint or assertion was hit, but this system was booted\n/NODEBUG.  This is not supposed to happen as developers should never have\nhardcoded breakpoints in retail code, but ...\nIf this happens, make sure a debugger gets connected, and the\nsystem is booted /DEBUG.  This will let us see why this breakpoint is\nhappening.\nArguments:\nArg1: c0000005, The exception code that was not handled\nArg2: 82852e32, The address that the exception occurred at\nArg3: 9a893a1c, Trap Frame\nArg4: 00000000\nDebugging Details:\nPage 11549 not present in the dump file. Type \".hh dbgerr004\" for details\nEXCEPTION_CODE: (NTSTATUS) 0xc0000005 - The instruction at 0x%08lx referenced memory at 0x%08lx. The memory could not be %s.\nFAULTING_IP: \nnt!IopParseDevice+802\n82852e32 83781000        cmp     dword ptr [eax+10h],0\nTRAP_FRAME:  9a893a1c -- (.trap 0xffffffff9a893a1c)\nErrCode = 00000000\neax=00000000 ebx=9dfd5478 ecx=00000000 edx=00000000 esi=9e0c1d68 edi=9cb69750\neip=82852e32 esp=9a893a90 ebp=9a893b60 iopl=0         nv up ei pl zr na pe nc\ncs=0008  ss=0010  ds=0023  es=0023  fs=0030  gs=0000             efl=00010246\nnt!IopParseDevice+0x802:\n82852e32 83781000        cmp     dword ptr [eax+10h],0 ds:0023:00000010=????????\nResetting default scope\nDEFAULT_BUCKET_ID:  VISTA_DRIVER_FAULT\nBUGCHECK_STR:  0x8E\nPROCESS_NAME:  fso.exe\nCURRENT_IRQL:  0\nLAST_CONTROL_TRANSFER:  from 826c13ce to 826ebbfc\nSTACK_TEXT:\n9a893584 826c13ce 0000008e c0000005 82852e32 nt!KeBugCheckEx+0x1e\n9a8939ac 8264b4a6 9a8939c8 00000000 9a893a1c nt!KiDispatchException+0x1ac\n9a893a14 8264b45a 9a893b60 82852e32 badb0d00 nt!CommonDispatchException+0x4a\n9a893abc 8268931e 00000000 000a0008 82822c20 nt!KiExceptionExit+0x192\n9a893b60 82832d2e 9e0c1d68 a5db9760 9cb69750 nt!KiDeferredReadyThread+0x8f2\n9a893bdc 82843157 00000000 9a893c30 00000040 nt!ObpLookupObjectName+0x4fa\n9a893c38 82839c35 0560fc48 83db9760 fffffd01 nt!ObOpenObjectByName+0x165\n9a893cb4 8285d4b4 0560fca4 c0100080 0560fc48 nt!IopCreateFile+0x673\n9a893d00 8264a8c6 0560fca4 c0100080 0560fc48 nt!NtCreateFile+0x34\n9a893d00 772c70f4 0560fca4 c0100080 0560fc48 nt!KiSystemServicePostCall\nWARNING: Frame IP not in any known module. Following frames may be wrong.\n0560fcac 00000000 00000000 00000000 00000000 0x772c70f4\nSTACK_COMMAND:  kb\nFOLLOWUP_IP: \nnt!IopParseDevice+802\n82852e32 83781000        cmp     dword ptr [eax+10h],0\nSYMBOL_STACK_INDEX:  0\nSYMBOL_NAME:  nt!IopParseDevice+802\nFOLLOWUP_NAME:  MachineOwner\nMODULE_NAME: nt\nIMAGE_NAME:  ntkrpamp.exe\nDEBUG_FLR_IMAGE_TIMESTAMP:  53158c8f\nFAILURE_BUCKET_ID:  0x8E_nt!IopParseDevice+802\nBUCKET_ID:  0x8E_nt!IopParseDevice+802\nFollowup: MachineOwner\n```\n. @marinkobabic\nEven if your branch does not fix all issues I think it makes things better, so if it is possible to get it in master that would be great.\n. @marinkobabic Tested your branch today and it seems very good! No BSOD seen currently.\nThank you <3\n. I can confirm that 1.0-RC4 is stable for me and does not produce BSOD anymore.\n. This is just a hunch but Java does also involve non-trivial amount of threads.\nCould there be memory corruption due to a locking bug? Is this also only on Windows 7?\n. @markuskreusch, no Java is probably not to blame, but it seems like perhaps threading can expose an issue inside dokan1.sys. \n. Even with https://github.com/dokan-dev/dokany/pull/282 in I can hit this with the CCB being NULL.\n. @Liryna With both this and #280 (CCB is NULL) I am seeing less crashes with the stress test in #230.\n280 seems to be encountered more frequently than this, but this is also encountered sometimes.\n. With https://github.com/marinkobabic/dokany/tree/FixNullIReference I get a fast crash without good logs.\nTested with example code from #230 and Windows 7.\n. Still have a crash. I think your patch introduces a new crash. Also with two flags for Mounted/IsUnmounted most of the code checks only one of them.\nDoes that branch work for you with the example code from #230 on Windows 7?\n. MS used to have VMs for testing IE that included a Windows 7 image. Perhaps those could reproduce this?\nYes, this seems Windows 7 specific.\n. Both 32 and 64 bit win 7 seems to be enough for a crash with the branch.\n. In my Windows 7 tests:\n| Branch | Mirror | Stress test from #230 |\n| --- | --- | --- |\n| master | ok | crash |\n| #280 | ok | crash less often |\n| #282 | ok | crash less often |\n| FixNullIReference branch | crash fast | crash fast |\nVisual studio additionally warns about the volatile LONG* vs PULONG casts on line 631 and 639 in dokan.h in the FixNullReference branch.\n. https://github.com/marinkobabic/dokany/tree/FixNullIReference with the second patch fails to compile:\nuninitialized local variable 'ccb' used in volume.c line 197. Is there a commit missing from there?\n. After the third commit it compiles but crashes instantly when accessing with explorer.\n. Have seen the same/similar issue with symlink reparse points pointing to dokan volumes.\n. http://www.tuxera.com/community/ntfs-3g-advanced/junction-points-and-symbolic-links/\nhas some discussion about this.\n. Will test on monday and complain if it still exists - many thanks for the fixes.\n. There were rare BSODs with backtraces hinting to lacking locking of FCBs typically with a huge amount of file operations.\nThe existing locking code was not comprehensive and lacking in some cases. After trying to add incremental changes to fix it I ended up with just rewriting and adding locking for FCBs.\n. After this is in I'll do a review of CCB locking.\nNo known crashes on that one, but better catch it before any mysterious issues arrive. It will be much smaller than the FCB one.\n. No, in that case the return on line 1079 is inside the __try and it is handled in the longish __finally clause starting on line 1171 and the unlock on line 1203.\n. Yes, updated the PR and it handles that.\nThanks for taking time to review this!\n. Don't they use a global lock (Global_critical_region) in that example for most things?\nCcbs are created in DokanDispatchCreate and free'ed in DokanDispatchClose. Even if an application does two syscalls on the same handle from different threads concurrently things should work in the driver.\n. So do things with per-CCB locks? I can make a patch that does exactly that if wanted.\n. Looking at this now.\n. Relevant reading http://www.osronline.com/showThread.cfm?link=49848 and a PR.\n. https://github.com/dokan-dev/dokany/pull/347 has a PR, but due to networking issues I cannot access my usual testing setup atm.\n. Thanks for merging!\nJust browsing around while chasing bugs elsewhere.\n. @Liryna I'll look at this on thu.\n. Just to note that git commit appears to work with a non-mirror filesystem.\nLooking at mirror.\n. $ ./wfsGitTest1.sh also seems to work for me. 1.0.1.0795.\n. @Liryna, haven't done a proper bisect yet.\n. I had a test case with a filetree of ~66k small files and directories that I copied over and deleted.\n. I'll do a PR with less locking in a few hours if you'd like :)\n. https://github.com/dokan-dev/dokany/pull/382 but will test things with time on monday.\n. @Kerbox btw does #382 help for you?\n. Copied+deleted 100k files and tried with mirror + one custom filesystem.\nIf anyone else wants to test this the appveyor installer is at https://ci.appveyor.com/api/buildjobs/f5mpwyrjk7cyhyag/artifacts/DokanSetup-1.0.1.0843.exe\n. @Liryna feel free to ask any questions :)\n. For some weird reason Github is not displaying those comments on this PR to me.\n. btw We use Go successfully to access a filesystem using dokan1.sys.\n@jetwhiz, to make Go work you need to check flags carefully in CreateFile and return an error if it is a directory and the request does not have the necessary flags.. @jetwhiz iirc the filesystem should be checking for FILE_DIRECTORY_FILE and FILE_NON_DIRECTORY_FILE from ZwCreateFile but the fuse mapping layer makes that kind of hard...\nPerhaps the dokan fuse mapping layer should handle these transparently? Since here Windows and Linux semantics are different.\n. In Go syscall.Open is called from https://github.com/golang/go/blob/master/src/os/file_windows.go#L150 for normal file opens.. We should really have a separate repo for the code. I'll speak about it internally and try to make it happen during September. I'll comment on this when I know something.. Got the internal modifications done, pondering on the repo name,\nhttps://github.com/keybase/dokan vs\nhttps://github.com/keybase/dokan-go vs\nhttps://github.com/keybase/go-dokan vs\n...\n. Ok, thanks!. Seems to help for users.. I think some of our users are also stumbling upon something similar, don't have anything enough info yet. Could be related to #776 ?. Having a release with some fix for this would be very nice.. ",
    "BoRiSGz": "@liryna\nYou are correct, I meant to pass Vpb->VolumeLabelLength as the second parameter.\nI'll push the changes when I have the chance.\n@Maxhy can you please elaborate on this?\nWhat do you mean instant unmount?\nDies the system send an instant dismount control to the device?\n. ",
    "MarkR1": "You are correct, this has solved the problem. Thank you :-)\n. Not sure, that answers my question.  I'll give you the scenario.  I have successfully created my virtual device which creates a virtual folder and file structure based on a local cache (which is periodically updated from a remote server). Reading the meta data is not a problem it's when a user attempts to open a file that problems occur, especially when the file is large and it has to be retrieved from a remote source - I am often getting timeouts reading files that are several mb's.  My hopeful solution is to intercept the file explorer original request such that instead of Document.pdf being the target this is replaced with [get the file in some other process.exe] which then does the work to determine if the file exists locally and if it does simply executes it or displays a progress bar whilst it is being downloaded and ultimately display the file or display a user friendly failed/retry feedback. Does that make sense?\n. Just to let you know I discovered that the actual cause of my timeouts was because I was attempting to call back into the file system during a file open call, this was causing the routine to block.  Fixed this and the files now download nicely :-)  Thanks for your assistance today, most appreciated.\n. ",
    "acavalheiro": "Hi, with c mirror sample isnot working too.\nDo you need the logs for my app, i have put log4net to log each call on dokan .net.\nIt seems a lot of call at getfileinformation.\n. Using Mirror Sample C#\nVirtualDrive.txt\nNon Working code\nvar file = new FileStream(path, FileMode.Open, FileAccess.Read, FileShare.Read);\nuse file to yours pdf viewer object and doesnt work\nWorking Code\nMemoryStream fileStream = new MemoryStream()\nusing (var file = new FileStream(path, FileMode.Open, FileAccess.Read, FileShare.Read))\nfile.CopyTo(fileStream)\nuse filestream to your pdf viewer object and its work\n. yup, what i think is that memory stream reads all the bytes and put in memory that is no problem.\nWhen using file stream all the call are made to dokan i think.\n. ",
    "JoanM": "File can't be opened with Paint but that is not Dokan problem because accessing it from real desktop (C:) can't open it neither. \n. ",
    "Driim": "\n. Functions are not exported\n. Yes, allright! Thank you\n. No, I mean i took #130 and patch v0.8.0 and it works, so problem not in this patch. So problem not in the fuse code(from 0.8.0 to 1.0.0 only #130 affects on fuse code), somethings changed in dokan code.\nI will try to look but not today. You could look at https://github.com/Driim/dokany/tree/fuse_fix_backports\n. I try Dbg version and it works fine.\n. ",
    "fenggeyeyin": "Hello, thanks for reply, but how to forbid or avoid this searching ?\u3000\nI also find the file reading is started when one of .exe files is just only selected(not executing) ,making explorer slack, i want to stop this.....\nBut i still need to keep the .exe file execute and copy functions are normal. So any good suggestion ? Thank you very much.\nAt 2016-02-10 01:26:42, \"shlatchz\" notifications@github.com wrote:\nI assume that it happens because Microsoft Explorer is searching for the thumbnails in the folder.\nI've experienced it too...\nWhen the thumbnails are saved, it doesn't read the *.exe files, until one of them is selected.\n\u2014\nReply to this email directly or view it on GitHub.\n. ",
    "matepek": "Hi @Liryna and @toksaitov!\nI needed some debugging to understand your answer and the intended directory-delete workflow.\nI start from the beggining:\nUsing Dokany Fuse, I can't delete directories. As I can see know the cause is in here: https://github.com/dokan-dev/dokany/blob/master/dokan_fuse/src/fusemain.cpp#L400\nThe \"dokan_file_info->Context\" is false. It seems to me that, this is a normal/intended value for that variable in directory cases, and that line is unneccesary.\nIf I am correct about this, then a possible solution should be something like this:\nif (dokan_file_info->DeleteOnClose) {\n    close_file(file_name, dokan_file_info);\n    if (dokan_file_info->IsDirectory) {\n      do_delete_directory(file_name, dokan_file_info);\n    } else {\n      if (dokan_file_info->Context) {\n        do_delete_file(file_name, dokan_file_info);\n      }\n    }\n  }\n(Because I'm not sure about what is the requested value in file cases.)\nWhat do you thing about it?\nIf you agree, I will update the pull request.\nRegards,\nMP\n. Hi @Liryna ,\nYou are right.\nThe \"opendir\" hadn't been hooked. :)\nIt is easy to fix it now to work for me.\nOnly one question left:\n\"Is it necessary for directory-deleting that, the opendir is hooked?\"\nAnyhow, thank You for Your help. ^^\n. Hi @Liryna ,\nWe are using Fuse on Linux and OS X. I'm porting it to Windows.\nIt seems we didn't needed to use opendir for libfuse and OS X Fuse, readdir was sufficient, and it's working.\nOn the case of a files it couldn't be the same as I can see in fusemain.cpp:\nhttps://github.com/dokan-dev/dokany/blob/master/dokan_fuse/src/fusemain.cpp#L124\nversus\nhttps://github.com/dokan-dev/dokany/blob/master/dokan_fuse/src/fusemain.cpp#L132\nSo, yes, I think your snippet is Ok.\nWould you like to do it or should I update the pull request? :)\nRegards,\nMP\n. Hi @Liryna ,\nIt seems, some problem occured with the cygwin test, but not only in my pull request.\nLet me know, if you think that, this is my bad. :)\n. Hi @Liryna! I'm planning to look after it, but it could take a while.\n. Hi @Liryna ,\nIt really seem to me, there are not.\n. Hello @Liryna,\nYou are right, I missed that part, ty. :)\nI updated the pull request.\nPlease review it carefully.\nThere is a question on the diff already. :)\nI choose this solution, to call AddSeSecurityNamePrivilege only if it is necessary, because we don't want more privilege from the user. So according this solution, the FuseGetFileSecurity can fail with STATUS_NOT_ALL_ASSIGNED. It seems acceptable. are you agree?\n. Hello @Liryna,\nI modified the source.\nDo you agree now?\nThe files are not handled, only directories.\nBut, an idea just came. We can create a temp file into the user's temp directory, and read the security privileges from it. What do you think about it?\nP.S.: Do you want me to compress, the branch history into one commit, as previously?\n. Hi @Liryna ,\nYes, it seems, this will do for us.\nHistory has been cleared.\n. Hello @Liryna ,\nDo you mean ~~fuse~~ mirror sample?\nYess, I also can feel the disturbance in the force.\nI haven't enough time to debug it, but I can say:\n\"mirror.exe /r c:\\Users\\mate.pek\\mirror_it\\ /l e /d\" as administrator.\ncould rw: .txt with notepad++;\ncould open: .xls (w not tested)\ncouldn't open: .docx; .pdf\nI hope I helped a bit.\n. Oh, totally missed that. ^^\n. Thank you.\n. Hello,\nSorry to hear this issue.\nIt is developed on a Win10 - 64bit, and tested on other Win10s, but probably not on Win7 - 32bit.\nHopefully, I can look after it at the next week.\n. Hello,\nSorry for the late answer. :)\nThanks for thinking of us.\nI tried out, it works like before my \"fix\", but it's OK for now.\nWe haven't gotten time yet to came out with a better solution.\n. Is it OK to call it anytime it occurs? I mean (it seems) WinAPI doesn't mind, but maybe it is a performance issue.\nWhat do you think? Should I rewrite it to be called only once?\n. Hello @Liryna ,\nI must say, I tried to alloc a static memory which was filled with\nGetUserObjectSecurity(MountPath, ...), and every time when FuseGetFileSecurity call occurs, memcpy the content from it to the SecurityDescriptor, but I couldn't make it to work yet.\nThere are known lack in my Windows Security knowledge, I welcome any help. :)\nI modified mirror.c which is now produce the same \"bug\".\nhttp://pastebin.com/HgS2tu8u (it's ugly, it is for proof of concept)\nCould you look on it?\n. ",
    "g3gg0": "partial OT:\nwhen moving a file with the windows explorer, the file will first get opened, then moved and released after.\nif i just \"tunnel through\" standard open/rename/etc calls, the rename operation will fail because the file is already opened.\nis this behavior subject to be changed too?\n. hi Liryna,\nyeah, faced that too and am surprised that they even do read calls on that file handle before renaming.\nperhaps it would just be good enough to close() that file, rename() and then re-open() it again in the wrapper with the original r/w flags.\n. i wish you good luck in tracking that down.\nin a world where existing files are opened using \"FileCreate\" i wouldnt be surprised if you also have to create a file before renaming it :D\nthanks for looking into it :)\n. checking control panel shows two installations of \"Dokan Library 1.0.0 Bundle\".\ntrying to get rid of them by uninstalling.\nhad to uninstall one of those entries twice before it disappeared.\nyeah, working now even without a restart.\n. i just installed the version of DokanSetup.exe you posted on drive.\ninstalled it \"over\" the existing installation.\ndidnt work properly (because due to GUID mixup i guess)\nafter deinstalling through control panel and reinstalling -> all is fine\nthanks!\n. i dont know of an easy way. but i am using a VS custom rule that will fill a AssemblyInfo.cs.intermediate\nmight also help: http://nowfromhome.com/msbuild-add-git-commit-hash-to-assemblyinfo/\n. thank you\n. this is what happens when i delete a file from the command window.\nthe file is opened using FILE_SHARE_DELETE\n```\nCreate 2788\nCreateFile : \\M02-1733.MLV\\JustATest\\Neues Textdokument.txt\n        DesiredAccess: FILE_READ_ATTRIBUTES\n        ShareAccess: FILE_SHARE_DELETE|FILE_SHARE_WRITE|FILE_SHARE_READ\n        Disposition: FILE_OPEN (1)\n        Attributes: 0 (0x0)\n        Options: 2097152 (0x200000)\nmlvfs_getattr: '/M02-1733.MLV/JustATest/Neues Textdokument.txt' 0x391FF530\nmlvfs_getattr: '/M02-1733.MLV/JustATest/Neues Textdokument.txt' 0x391FF330\nmlvfs_open: '/M02-1733.MLV/JustATest/Neues Textdokument.txt' 0x391FF410\nCreateFile status = 0 - lastError = 0\nGetFileInfo 2788\nGetFileInfo : \\M02-1733.MLV\\JustATest\\Neues Textdokument.txt\nmlvfs_getattr: '/M02-1733.MLV/JustATest/Neues Textdokument.txt' 0x395FF960\n        result =  0\n        FileStandardInformation\n        DispatchQueryInformation result =  0\nGetFileInfo 2788\nGetFileInfo : \\M02-1733.MLV\\JustATest\\Neues Textdokument.txt\nmlvfs_getattr: '/M02-1733.MLV/JustATest/Neues Textdokument.txt' 0x390FF500\n        result =  0\n        FileBasicInformation\n        DispatchQueryInformation result =  0\nCleanup 2788\nCleanup: \\M02-1733.MLV\\JustATest\\Neues Textdokument.txt\nClose 2788\nCreate 2789\nCreateFile : \\M02-1733.MLV\\JustATest\\Neues Textdokument.txt\n        DesiredAccess: FILE_READ_ATTRIBUTES\n        ShareAccess: FILE_SHARE_DELETE|FILE_SHARE_WRITE|FILE_SHARE_READ\n        Disposition: FILE_OPEN (1)\n        Attributes: 0 (0x0)\n        Options: 2097152 (0x200000)\nClose: \\M02-1733.MLV\\JustATest\\Neues Textdokument.txt\nmlvfs_release: '/M02-1733.MLV/JustATest/Neues Textdokument.txt' 0x38FFFA40\nmlvfs_getattr: '/M02-1733.MLV/JustATest/Neues Textdokument.txt' 0x393FF620\nmlvfs_getattr: '/M02-1733.MLV/JustATest/Neues Textdokument.txt' 0x393FF420\nmlvfs_open: '/M02-1733.MLV/JustATest/Neues Textdokument.txt' 0x393FF500\nCreateFile status = 0 - lastError = 0\nGetFileInfo 2789\nGetFileInfo : \\M02-1733.MLV\\JustATest\\Neues Textdokument.txt\nmlvfs_getattr: '/M02-1733.MLV/JustATest/Neues Textdokument.txt' 0x394FF940\n        result =  0\n        FileStandardInformation\n        DispatchQueryInformation result =  0\nGetFileInfo 2789\nGetFileInfo : \\M02-1733.MLV\\JustATest\\Neues Textdokument.txt\nmlvfs_getattr: '/M02-1733.MLV/JustATest/Neues Textdokument.txt' 0x397FF400\n        result =  0\n        FileBasicInformation\n        DispatchQueryInformation result =  0\nCleanup 2789\nCleanup: \\M02-1733.MLV\\JustATest\\Neues Textdokument.txt\nClose 2789\nClose: \\M02-1733.MLV\\JustATest\\Neues Textdokument.txt\nmlvfs_release: '/M02-1733.MLV/JustATest/Neues Textdokument.txt' 0x392FFA00\nCreate 2790\nCreateFile : \\M02-1733.MLV\\JustATest\\Neues Textdokument.txt\n        DesiredAccess: FILE_READ_ATTRIBUTES\n        ShareAccess: FILE_SHARE_DELETE|FILE_SHARE_WRITE|FILE_SHARE_READ\n        Disposition: FILE_OPEN (1)\n        Attributes: 0 (0x0)\n        Options: 2097152 (0x200000)\nmlvfs_getattr: '/M02-1733.MLV/JustATest/Neues Textdokument.txt' 0x391FF530\nmlvfs_getattr: '/M02-1733.MLV/JustATest/Neues Textdokument.txt' 0x391FF330\nmlvfs_open: '/M02-1733.MLV/JustATest/Neues Textdokument.txt' 0x391FF410\nCreateFile status = 0 - lastError = 0\nGetFileInfo 2790\nGetFileInfo : \\M02-1733.MLV\\JustATest\\Neues Textdokument.txt\nmlvfs_getattr: '/M02-1733.MLV/JustATest/Neues Textdokument.txt' 0x395FF960\n        result =  0\n        FileStandardInformation\n        DispatchQueryInformation result =  0\nGetFileInfo 2790\nGetFileInfo : \\M02-1733.MLV\\JustATest\\Neues Textdokument.txt\nmlvfs_getattr: '/M02-1733.MLV/JustATest/Neues Textdokument.txt' 0x390FF500\n        result =  0\n        FileBasicInformation\n        DispatchQueryInformation result =  0\nCleanup 2790\nCleanup: \\M02-1733.MLV\\JustATest\\Neues Textdokument.txt\nClose 2790\nClose: \\M02-1733.MLV\\JustATest\\Neues Textdokument.txt\nmlvfs_release: '/M02-1733.MLV/JustATest/Neues Textdokument.txt' 0x38FFFA40\nCreate 2791\nCreateFile : \\M02-1733.MLV\\JustATest\n        DesiredAccess: SYNCHRONIZE|FILE_READ_DATA\n        ShareAccess: FILE_SHARE_DELETE|FILE_SHARE_WRITE|FILE_SHARE_READ\n        Disposition: FILE_OPEN (1)\n        Attributes: 0 (0x0)\n        Options: 33 (0x21)\nmlvfs_getattr: '/M02-1733.MLV/JustATest' 0x393FF630\nCreateFile status = 0 - lastError = 0\nFindFiles 2791\nFindFiles :\\M02-1733.MLV\\JustATest\nmlvfs_getattr: '/M02-1733.MLV/JustATest' 0x394FF890\nmlvfs_readdir: '/M02-1733.MLV/JustATest' 0x394FF970 0x5E4EA120 0x00000000 0x00000000\nmlvfs_getattr: '/M02-1733.MLV/JustATest/Neues Textdokument.txt' 0x394FF4F0\nindex from 0\nFileMatch? : . (Neues Textdokument.txt,0,0)\nFileMatch? : .. (Neues Textdokument.txt,0,0)\nFileMatch? : Neues Textdokument.txt (Neues Textdokument.txt,0,0)\n  =>return single entry\nindex to 1\nCreate 2792\nCreateFile : \\M02-1733.MLV\\JustATest\\Neues Textdokument.txt\n        DesiredAccess: SYNCHRONIZE|DELETE|FILE_READ_ATTRIBUTES\n        ShareAccess: FILE_SHARE_DELETE|FILE_SHARE_WRITE|FILE_SHARE_READ\n        Disposition: FILE_OPEN (1)\n        Attributes: 0 (0x0)\n        Options: 2097184 (0x200020)\nmlvfs_getattr: '/M02-1733.MLV/JustATest/Neues Textdokument.txt' 0x397FF370\nmlvfs_getattr: '/M02-1733.MLV/JustATest/Neues Textdokument.txt' 0x397FF170\nmlvfs_open: '/M02-1733.MLV/JustATest/Neues Textdokument.txt' 0x397FF250\nCreateFile status = 0 - lastError = 0\nGetFileInfo 2792\nGetFileInfo : \\M02-1733.MLV\\JustATest\\Neues Textdokument.txt\nmlvfs_getattr: '/M02-1733.MLV/JustATest/Neues Textdokument.txt' 0x398FF7E0\n        result =  0\n        FileStandardInformation\n        DispatchQueryInformation result =  0\nGetFileInfo 2792\nGetFileInfo : \\M02-1733.MLV\\JustATest\\Neues Textdokument.txt\nmlvfs_getattr: '/M02-1733.MLV/JustATest/Neues Textdokument.txt' 0x392FF930\n        result =  0\n        FileBasicInformation\n        DispatchQueryInformation result =  0\nGetFileInfo 2792\nGetFileInfo : \\M02-1733.MLV\\JustATest\\Neues Textdokument.txt\nmlvfs_getattr: '/M02-1733.MLV/JustATest/Neues Textdokument.txt' 0x391FF5C0\n        result =  0\n        FileStandardInformation\n        DispatchQueryInformation result =  0\nGetFileInfo 2792\nGetFileInfo : \\M02-1733.MLV\\JustATest\\Neues Textdokument.txt\nmlvfs_getattr: '/M02-1733.MLV/JustATest/Neues Textdokument.txt' 0x395FF960\n        result =  0\n        FileInternalInformation\n        DispatchQueryInformation result =  0\nGetFileInfo 2792\nGetFileInfo : \\M02-1733.MLV\\JustATest\\Neues Textdokument.txt\nmlvfs_getattr: '/M02-1733.MLV/JustATest/Neues Textdokument.txt' 0x390FF500\n        result =  0\n        FileAttributeTagInformation\n        DispatchQueryInformation result =  0\nGetFileInfo 2792\nGetFileInfo : \\M02-1733.MLV\\JustATest\\Neues Textdokument.txt\nmlvfs_getattr: '/M02-1733.MLV/JustATest/Neues Textdokument.txt' 0x396FF7D0\n        result =  0\n        FileBasicInformation\n        DispatchQueryInformation result =  0\nSL_OPEN_TARGET_DIRECTORY specified\nCreate 2793\nCreateFile : \\M02-1733.MLV\\JustATest\n        DesiredAccess: SYNCHRONIZE|FILE_WRITE_DATA\n        ShareAccess: FILE_SHARE_WRITE|FILE_SHARE_READ\n        Disposition: FILE_OPEN (1)\n        Attributes: 0 (0x0)\n        Options: 1 (0x1)\nmlvfs_getattr: '/M02-1733.MLV/JustATest' 0x38FFF8F0\nCreateFile status = 0 - lastError = 0\nGetFileInfo 2793\nGetFileInfo : \\M02-1733.MLV\\JustATest\\test\nmlvfs_getattr: '/M02-1733.MLV/JustATest/test' 0x393FF6B0\n        result =  3221225524\n        DispatchQueryInformation result =  3221225524\nSetFileInfo 2792  10\nMoveFile \\M02-1733.MLV\\JustATest\\Neues Textdokument.txt -> \\M02-1733.MLV\\JustATest\\test\nmlvfs_getattr: '/M02-1733.MLV/JustATest/test' 0x394FF6F0\nmlvfs_getattr: '/M02-1733.MLV/JustATest/test' 0x394FF6F0\nmlvfs_rename: '/M02-1733.MLV/JustATest/Neues Textdokument.txt' '/M02-1733.MLV/JustATest/test'\nGetFileInfo 2792\nGetFileInfo : \\M02-1733.MLV\\JustATest\\test\nmlvfs_getattr: '/M02-1733.MLV/JustATest/test' 0x397FF400\n        result =  0\n        FileStandardInformation\n        DispatchQueryInformation result =  0\nGetFileInfo 2792\nGetFileInfo : \\M02-1733.MLV\\JustATest\\test\nmlvfs_getattr: '/M02-1733.MLV/JustATest/test' 0x398FF7E0\n        result =  0\n        FileBasicInformation\n        DispatchQueryInformation result =  0\nCleanup 2793\nCleanup: \\M02-1733.MLV\\JustATest\\test\nClose 2793\nClose: \\M02-1733.MLV\\JustATest\\test\nCleanup 2792\nCleanup: \\M02-1733.MLV\\JustATest\\test\nClose 2792\nindex from 1\nClose: \\M02-1733.MLV\\JustATest\\test\nmlvfs_release: '/M02-1733.MLV/JustATest/test' 0x390FF5D0\nFileMatch? : . (Neues Textdokument.txt,1,0)\nFileMatch? : .. (Neues Textdokument.txt,1,0)\nFileMatch? : Neues Textdokument.txt (Neues Textdokument.txt,1,0)\n  STATUS_NO_MORE_FILES\nCleanup 2791\nCleanup: \\M02-1733.MLV\\JustATest\nClose 2791\nClose: \\M02-1733.MLV\\JustATest\n```\n. when deleting file \"test\" using commandline:\n```\nCreate 2824\nCreateFile : \\\n        DesiredAccess: SYNCHRONIZE\n        ShareAccess: 0x0\n        Disposition: FILE_OPEN (1)\n        Attributes: 0 (0x0)\n        Options: 33 (0x21)\nmlvfs_getattr: '/' 0x398FF760\nCreateFile status = 0 - lastError = 0\nGetFileInfo 2824\nGetFileInfo : \\\nmlvfs_getattr: '/' 0x392FF930\n        result =  0\n        FileStandardInformation\n        DispatchQueryInformation result =  0\nQueryVolumeInfo 2824\nGetVolumeInformation\nCleanup 2824\nCleanup: \\\nClose 2824\nClose: \\\nCreate 2825\nCreateFile : \\M02-1733.MLV\\JustATest\\test\n        DesiredAccess: FILE_READ_ATTRIBUTES\n        ShareAccess: FILE_SHARE_DELETE|FILE_SHARE_WRITE|FILE_SHARE_READ\n        Disposition: FILE_OPEN (1)\n        Attributes: 0 (0x0)\n        Options: 2097152 (0x200000)\nmlvfs_getattr: '/M02-1733.MLV/JustATest/test' 0x396FF740\nmlvfs_getattr: '/M02-1733.MLV/JustATest/test' 0x396FF540\nmlvfs_open: '/M02-1733.MLV/JustATest/test' 0x396FF620\nCreateFile status = 0 - lastError = 0\nGetFileInfo 2825\nGetFileInfo : \\M02-1733.MLV\\JustATest\\test\nmlvfs_getattr: '/M02-1733.MLV/JustATest/test' 0x38FFF970\n        result =  0\n        FileStandardInformation\n        DispatchQueryInformation result =  0\nGetFileInfo 2825\nGetFileInfo : \\M02-1733.MLV\\JustATest\\test\nmlvfs_getattr: '/M02-1733.MLV/JustATest/test' 0x393FF6B0\n        result =  0\n        FileBasicInformation\n        DispatchQueryInformation result =  0\nCleanup 2825\nCleanup: \\M02-1733.MLV\\JustATest\\test\nClose 2825\nCreate 2826\nCreateFile : \\M02-1733.MLV\\JustATest\\test\n        DesiredAccess: FILE_READ_ATTRIBUTES\n        ShareAccess: FILE_SHARE_DELETE|FILE_SHARE_WRITE|FILE_SHARE_READ\n        Disposition: FILE_OPEN (1)\n        Attributes: 0 (0x0)\n        Options: 2097152 (0x200000)\nClose: \\M02-1733.MLV\\JustATest\\test\nmlvfs_release: '/M02-1733.MLV/JustATest/test' 0x397FF4D0\nmlvfs_getattr: '/M02-1733.MLV/JustATest/test' 0x398FF750\nmlvfs_getattr: '/M02-1733.MLV/JustATest/test' 0x398FF550\nmlvfs_open: '/M02-1733.MLV/JustATest/test' 0x398FF630\nCreateFile status = 0 - lastError = 0\nGetFileInfo 2826\nGetFileInfo : \\M02-1733.MLV\\JustATest\\test\nmlvfs_getattr: '/M02-1733.MLV/JustATest/test' 0x392FF930\n        result =  0\n        FileStandardInformation\n        DispatchQueryInformation result =  0\nGetFileInfo 2826\nGetFileInfo : \\M02-1733.MLV\\JustATest\\test\nmlvfs_getattr: '/M02-1733.MLV/JustATest/test' 0x391FF5C0\n        result =  0\n        FileBasicInformation\n        DispatchQueryInformation result =  0\nCleanup 2826\nCleanup: \\M02-1733.MLV\\JustATest\\test\nClose 2826\nClose: \\M02-1733.MLV\\JustATest\\test\nmlvfs_release: '/M02-1733.MLV/JustATest/test' 0x390FF5D0\nCreate 2827\nCreateFile : \\M02-1733.MLV\\JustATest\n        DesiredAccess: SYNCHRONIZE|FILE_READ_DATA\n        ShareAccess: FILE_SHARE_DELETE|FILE_SHARE_WRITE|FILE_SHARE_READ\n        Disposition: FILE_OPEN (1)\n        Attributes: 0 (0x0)\n        Options: 33 (0x21)\nmlvfs_getattr: '/M02-1733.MLV/JustATest' 0x396FF750\nCreateFile status = 0 - lastError = 0\nFindFiles 2827\nFindFiles :\\M02-1733.MLV\\JustATest\nmlvfs_getattr: '/M02-1733.MLV/JustATest' 0x38FFF8C0\nmlvfs_readdir: '/M02-1733.MLV/JustATest' 0x38FFF9A0 0x5E4EA120 0x00000000 0x00000000\nmlvfs_getattr: '/M02-1733.MLV/JustATest/test' 0x38FFF520\nindex from 0\nFileMatch? : . (test,0,0)\nFileMatch? : .. (test,0,0)\nFileMatch? : test (test,0,0)\n  =>return single entry\nindex to 1\nCreate 2828\nCreateFile : \\M02-1733.MLV\\JustATest\\test\n        DesiredAccess: DELETE\n        ShareAccess: FILE_SHARE_DELETE\n        Disposition: FILE_OPEN (1)\n        Attributes: 0 (0x0)\n        Options: 4160 (0x1040)\nmlvfs_getattr: '/M02-1733.MLV/JustATest/test' 0x393FF620\nmlvfs_getattr: '/M02-1733.MLV/JustATest/test' 0x393FF420\nmlvfs_open: '/M02-1733.MLV/JustATest/test' 0x393FF500\nCreateFile status = 0 - lastError = 0\nGetFileInfo 2828\nGetFileInfo : \\M02-1733.MLV\\JustATest\\test\nmlvfs_getattr: '/M02-1733.MLV/JustATest/test' 0x394FF940\n        result =  0\n        FileStandardInformation\n        DispatchQueryInformation result =  0\nGetFileInfo 2828\nGetFileInfo : \\M02-1733.MLV\\JustATest\\test\nmlvfs_getattr: '/M02-1733.MLV/JustATest/test' 0x397FF400\n        result =  0\n        FileBasicInformation\n        DispatchQueryInformation result =  0\nGetFileInfo 2828\nGetFileInfo : \\M02-1733.MLV\\JustATest\\test\nmlvfs_getattr: '/M02-1733.MLV/JustATest/test' 0x398FF7E0\n        result =  0\n        FileStandardInformation\n        DispatchQueryInformation result =  0\nGetFileInfo 2828\nGetFileInfo : \\M02-1733.MLV\\JustATest\\test\nmlvfs_getattr: '/M02-1733.MLV/JustATest/test' 0x392FF930\n        result =  0\n        FileInternalInformation\n        DispatchQueryInformation result =  0\nCleanup 2828\nCleanup: \\M02-1733.MLV\\JustATest\\test\nmlvfs_release: '/M02-1733.MLV/JustATest/test' 0x391FF630\nClose 2828\nindex from 1\nClose: \\M02-1733.MLV\\JustATest\\test\nFileMatch? : . (test,1,0)\nFileMatch? : .. (test,1,0)\nFileMatch? : test (test,1,0)\n  STATUS_NO_MORE_FILES\nCleanup 2827\nCleanup: \\M02-1733.MLV\\JustATest\nClose 2827\nC\n```\n. for delete it seems to be some other issue. i create a file using \necho test > file.txt\nand after that the mlvfs.exe has the file handle opened although i am opening/closing before/after every write.\nso it should never have any open file.\nbut something's wrong in my code as it seems :) http://pastebin.com/7PL4MafM\nhave to resolve that first.\n. ok fixed that issue i wrote before. problem persists.\nthe fuse mirror always calls close after any open so this problem is not visible there.\nthing is, our fuse code is not allowed to keep an open'ed file handle opened when using dokany.\nwhen using the original FUSE on linux, it is allowed to keep files open.\nbackground is:\nusing open() on linux allows the file to be deleted while it's open.\nusing open() on windows does not - would have to use CreateFile instead and thus break portability.\nsee also http://forums.storagereview.com/index.php/topic/17362-windows-why-no-linux-like-deleteunlink-behaviour/\nthe FUSE doc says that the fuse_operations \"should work very similar\" to the known unix functions.\nfunny that the FUSE doc says \"it's like unix\" but the demo code (fusexmp.c) is not like unix because it closes the file instantly.\nso using this code as a testcase is misleading in terms of doing the correct implementation.\nsolutions:\nif you see dokan_fuse as the FUSE-compatible wrapper, to my understanding there is only one thing you practically could do: add wrappers to imitate all unix calls related to file handles like open/read/write/close...\nthat.. would be some annoying work... so i guess it is nothing you would do.\n. nah this workaround wouldnt fix the issue. it would just make it more rare \ni didnt say that the fusexmp is doing it wrong, it is just not covering all possibilities and therefore isnt a proper \"single\" test case in my opinion. it just tests a subset of the features.\nto be honest, i don't see a proper clean solution. its the open() windows call that is the culprit.\nto emulate its behavior to be like unix isn't something within scope of dokan i guess.\n. yeah very good idea :)\n. ",
    "bouncyball-git": "Hey I've missed RC1 :) Will check this out.\n. Thank you for pointing this out ;) my bad... \"please Insert disk to the drive\" problem with CloneDrive eliminated.\n. ",
    "sm4rk0": "I had various versions of dokan installed and figured out that there were still old versions of dokan.dll and dokannp.dll in system32 and sysWOW64 directories and some processes were using it (checked with Process Explorer). Can this cause an error? Can the new installer clean this up upon installation?\n. I don't feel it's mandatory. Just wanted to avoid some potential problems that would be hard to debug.\nThank you for prompt answer!\n. @bhardwajanish You should:\n open this link  in new tab\n click the pen button in upper right corner (with \"Fork this project and edit this file\" tooltip)\n edit existing text (without removing the badges, images, links, etc)\n Commit and create a PR\n* close this PR, and delete the branch in your repo. Updated the comment in order to preserve your current PR not to lose the changes you already made.. @Rondom I'm also not familiar (enough) with the web interface. That's why I proposed probably longer, but safer way.. Good idea. All changes proposed here are already included in #601 and #603.. ",
    "peci1": "Okay, I'll try to dig into it on Monday.\n. No, the newer version does not help. The BSOD occurs in 100% if I try ty unmnout a drive or exit WinSSHS (which IMO tries to unmount the drive).\nAnother crash dump connected to this:\n```\n\n\n*\nBugcheck Analysis                                    *\n*\n\n\nIRQL_NOT_LESS_OR_EQUAL (a)\nAn attempt was made to access a pageable (or completely invalid) address at an\ninterrupt request level (IRQL) that is too high.  This is usually\ncaused by drivers using improper addresses.\nIf a kernel debugger is available get the stack backtrace.\nArguments:\nArg1: 0000000000000038, memory referenced\nArg2: 0000000000000002, IRQL\nArg3: 0000000000000000, bitfield :\n    bit 0 : value 0 = read operation, 1 = write operation\n    bit 3 : value 0 = not an execute operation, 1 = execute operation (only on chips which support this level of status)\nArg4: fffff8000374551c, address which referenced memory\nDebugging Details:\nREAD_ADDRESS:  0000000000000038 \nCURRENT_IRQL:  2\nFAULTING_IP: \nnt! ?? ::FNODOBFM::string'+4ceeb\nfffff8000374551c 48395838        cmp     qword ptr [rax+38h],rbx\nCUSTOMER_CRASH_COUNT:  1\nDEFAULT_BUCKET_ID:  VISTA_DRIVER_FAULT\nBUGCHECK_STR:  0xA\nPROCESS_NAME:  NexusFile.exe\nTRAP_FRAME:  fffff88004c2e420 -- (.trap 0xfffff88004c2e420)\nNOTE: The trap frame does not contain all registers.\nSome register values may be zeroed or incorrect.\nrax=0000000000000000 rbx=0000000000000000 rcx=fffff88003c89880\nrdx=0000000000000000 rsi=0000000000000000 rdi=0000000000000000\nrip=fffff8000374551c rsp=fffff88004c2e5b0 rbp=0000000000000000\n r8=0000000000000000  r9=0000000000000000 r10=fffff88003c8aa80\nr11=fffff88004c2e5e0 r12=0000000000000000 r13=0000000000000000\nr14=0000000000000000 r15=0000000000000000\niopl=0         nv up ei pl zr ac po cy\nnt! ?? ::FNODOBFM::string'+0x4ceeb:\nfffff8000374551c 48395838        cmp     qword ptr [rax+38h],rbx ds:000a:00000000`00000038=????????????????\nResetting default scope\nLAST_CONTROL_TRANSFER:  from fffff800036bf1a9 to fffff800036bfc00\nSTACK_TEXT:\nfffff88004c2e2d8 fffff800036bf1a9 : 000000000000000a 0000000000000038 0000000000000002 0000000000000000 : nt!KeBugCheckEx\nfffff88004c2e2e0 fffff800036bde20 : fffffa80414b4f44 fffffa8000000200 0000000000000000 fffffa8009bc77c0 : nt!KiBugCheckDispatch+0x69\nfffff88004c2e420 fffff8000374551c : fffffa8015184a10 0000000000000040 fffffa80656c6946 0000000000000000 : nt!KiPageFault+0x260\nfffff88004c2e5b0 fffff800039c270d : 0000000000000040 0000000000000005 fffffa80072ecc10 00000000c00000c0 : nt! ?? ::FNODOBFM::string'+0x4ceeb\nfffff88004c2e610 fffff800039be41e : fffffa8007247080 0000000000000000 fffffa801698c010 0000000000000001 : nt!IopParseDevice+0x17e4\nfffff88004c2e770 fffff800039bef06 : 0000000000000000 fffff88004c2e8f0 0000000000000040 fffffa8006de4080 : nt!ObpLookupObjectName+0x784\nfffff88004c2e870 fffff800039c080c : 0000000000000001 0000000000000000 fffffa8016a68001 fffff8000360ab01 : nt!ObOpenObjectByName+0x306\nfffff88004c2e940 fffff800039aa328 : 0000000002e1e848 fffff88000100000 0000000002e1f0a0 0000000002e1e7e8 : nt!IopCreateFile+0x2bc\nfffff88004c2e9e0 fffff800036bee93 : 0000000000000000 fffff80000000000 0000000000000000 fffffa8016a680a0 : nt!NtOpenFile+0x58\nfffff88004c2ea70 000000007763dcea : 0000000000000000 0000000000000000 0000000000000000 0000000000000000 : nt!KiSystemServiceCopyEnd+0x13\n0000000002e1e7a8 0000000000000000 : 0000000000000000 0000000000000000 0000000000000000 00000000`00000000 : 0x7763dcea\nSTACK_COMMAND:  kb\nFOLLOWUP_IP: \nnt! ?? ::FNODOBFM::string'+4ceeb\nfffff8000374551c 48395838        cmp     qword ptr [rax+38h],rbx\nSYMBOL_STACK_INDEX:  3\nSYMBOL_NAME:  nt! ?? ::FNODOBFM::`string'+4ceeb\nFOLLOWUP_NAME:  MachineOwner\nMODULE_NAME: nt\nIMAGE_NAME:  ntkrnlmp.exe\nDEBUG_FLR_IMAGE_TIMESTAMP:  5684191c\nFAILURE_BUCKET_ID:  X64_0xA_nt!??::FNODOBFM::string+4ceeb\nBUCKET_ID:  X64_0xA_nt!??::FNODOBFM::string+4ceeb\nFollowup: MachineOwner\n```\n. And another one, with a more verbose stack trace:\n```\n\n\n*\nBugcheck Analysis                                    *\n*\n\n\nIRQL_NOT_LESS_OR_EQUAL (a)\nAn attempt was made to access a pageable (or completely invalid) address at an\ninterrupt request level (IRQL) that is too high.  This is usually\ncaused by drivers using improper addresses.\nIf a kernel debugger is available get the stack backtrace.\nArguments:\nArg1: 0000000800000080, memory referenced\nArg2: 0000000000000002, IRQL\nArg3: 0000000000000001, bitfield :\n    bit 0 : value 0 = read operation, 1 = write operation\n    bit 3 : value 0 = not an execute operation, 1 = execute operation (only on chips which support this level of status)\nArg4: fffff800036d88e8, address which referenced memory\nDebugging Details:\nWRITE_ADDRESS:  0000000800000080 \nCURRENT_IRQL:  2\nFAULTING_IP: \nnt!KiTryUnwaitThread+28\nfffff800`036d88e8 f0480fba6b4000  lock bts qword ptr [rbx+40h],0\nCUSTOMER_CRASH_COUNT:  1\nDEFAULT_BUCKET_ID:  VISTA_DRIVER_FAULT\nBUGCHECK_STR:  0xA\nPROCESS_NAME:  WinSshFS.exe\nTRAP_FRAME:  fffff8800f388230 -- (.trap 0xfffff8800f388230)\nNOTE: The trap frame does not contain all registers.\nSome register values may be zeroed or incorrect.\nrax=fffff8000385e6e0 rbx=0000000000000000 rcx=fffff88003b65180\nrdx=fffffa8013ff9d90 rsi=0000000000000000 rdi=0000000000000000\nrip=fffff800036d88e8 rsp=fffff8800f3883c0 rbp=fffffa8014007470\n r8=0000000000000100  r9=0000000000000000 r10=fffff80003656000\nr11=fffff8800f3884c0 r12=0000000000000000 r13=0000000000000000\nr14=0000000000000000 r15=0000000000000000\niopl=0         nv up ei pl zr na po nc\nnt!KiTryUnwaitThread+0x28:\nfffff800036d88e8 f0480fba6b4000  lock bts qword ptr [rbx+40h],0 ds:8378:0000000000000040=????????????????\nResetting default scope\nLAST_CONTROL_TRANSFER:  from fffff800036c91a9 to fffff800036c9c00\nSTACK_TEXT:\nfffff8800f3880e8 fffff800036c91a9 : 000000000000000a 0000000800000080 0000000000000002 0000000000000001 : nt!KeBugCheckEx\nfffff8800f3880f0 fffff800036c7e20 : fffffa8009b8d7b0 0000000000000005 fffffa8006d45040 0000000800000040 : nt!KiBugCheckDispatch+0x69\nfffff8800f388230 fffff800036d88e8 : fffff880009ec180 0000000000000000 fffff8a0069f0670 0000000000000060 : nt!KiPageFault+0x260\nfffff8800f3883c0 fffff8000367fe58 : fffff88003b65180 fffffa8014007470 0000000000000000 fffffa8014007470 : nt!KiTryUnwaitThread+0x28\nfffff8800f388420 fffff800036bf98f : 0000000100000050 fffff88003b65180 0000000000000000 fffff80000360036 : nt! ?? ::FNODOBFM::string'+0xfe98\nfffff8800f388490 fffff88001b99e66 : fffffa8009b8d7b0 0000000000000000 fffffa80076605a0 0000000000000046 : nt!ExpReleaseResourceForThreadLite+0x2bf\nfffff8800f3884f0 fffff88001b953f0 : fffffa8009b8d7b0 fffffa8000000000 fffffa80076605a0 fffffa80076604f0 : fltmgr!FltpDoFilterNotificationForNewVolume+0x196\nfffff8800f388560 fffff800039cc40b : 0000000000000025 0000000000000040 fffffa8014f85d10 0000000000000000 : fltmgr!FltpCreate+0x3e0\nfffff8800f388610 fffff800039c841e : fffffa8013ffe3e0 0000000000000000 fffffa8016bec3a0 fffff8800f388801 : nt!IopParseDevice+0x14e2\nfffff8800f388770 fffff800039c8f06 : 0000000000000000 fffff8800f3888f0 fffff88000000040 fffffa8006de2080 : nt!ObpLookupObjectName+0x784\nfffff8800f388870 fffff800039ca80c : 0000000000000000 0000000000000000 0000000000000001 fffff80003614b7f : nt!ObOpenObjectByName+0x306\nfffff8800f388940 fffff800039d5e84 : 000000000760e4c8 00000000c0100080 000000000760ed90 000000000760e4e0 : nt!IopCreateFile+0x2bc\nfffff8800f3889e0 fffff800036c8e93 : 0000000000000000 fffff800039b4294 fffff8800f388b60 0000000000000000 : nt!NtCreateFile+0x78\nfffff8800f388a70 0000000077cadf0a : 0000000000000000 0000000000000000 0000000000000000 0000000000000000 : nt!KiSystemServiceCopyEnd+0x13\n000000000760e458 0000000000000000 : 0000000000000000 0000000000000000 0000000000000000 00000000`00000000 : 0x77cadf0a\nSTACK_COMMAND:  kb\nFOLLOWUP_IP: \nnt!KiTryUnwaitThread+28\nfffff800`036d88e8 f0480fba6b4000  lock bts qword ptr [rbx+40h],0\nSYMBOL_STACK_INDEX:  3\nSYMBOL_NAME:  nt!KiTryUnwaitThread+28\nFOLLOWUP_NAME:  MachineOwner\nMODULE_NAME: nt\nIMAGE_NAME:  ntkrnlmp.exe\nDEBUG_FLR_IMAGE_TIMESTAMP:  5684191c\nFAILURE_BUCKET_ID:  X64_0xA_nt!KiTryUnwaitThread+28\nBUCKET_ID:  X64_0xA_nt!KiTryUnwaitThread+28\nFollowup: MachineOwner\n```\n. Win 7 64bit Proffesional.\nWinSSHFS 1.6.0 RC2: https://github.com/dimov-cz/win-sshfs/releases/tag/1.6.0\nDokany 1.0.0-RC1 (or the more recent version Liryna pointed me to).\nIn WinSSHFS, I've some SSHFS drives set up. I've tested with two very different endpoints - one is a school SSH server, and the second one is an SSH server on my own Raspberry Pi with Raspbian. With both, the BSOD appears at time of dismount. And, when mounted, the drives do not allow me to be accessed (opening them just hangs Explorer). With WinSSHFS 1.5.12 and Dokny 0.7.4, I did not have this issue.\n. ## I've got Avast. I'll try to disable it for testing this BSOD.\nMartin Pecka\n. Related? https://github.com/dimov-cz/win-sshfs/issues/71\n. Seems promising, but I can test it on my machine on Wednesday.\n. I had some unexpected tasks with higher priority, but hopefully today :)\n. Finally, I tested it with the Dokan version from Google drive and it works!\nMaybe there is also a problem in the WinSSHFS packaging: it includes a copy of dokan1.dll in his release, and it is a different one than the one I installed (I installed 78.9 kB, included is 63.4 kB). I deleted that copy of the DLL and now it works. But it also works with the older DLL copy. So it seems the bug was in the filesystem driver and it is fixed now.\n@dimov-cz : Is it really needed to include a copy of dokan1.dll? It should be found in the standard system path if it is correctly installed, shouldn't it?\nThanks @Liryna and others for fixing this!\n. ",
    "Goster": "Unfortunately there is no difference. Still no disc in win expl\n\nmirror.exe /r c:\\ /l m /d /s\nAttempting to add SE_SECURITY_NAME privilege to process token\nsuccess: privilege already present\nDokan: debug mode on\nDokan: use stderr\ndevice opened\nmounted: m -> \\Volume{d6cc17c5-1737-4085-bce7-964f1e9f5de9}\nMounted\nQueryVolumeInfo -001\n. @Maxhy \nCould you try to run mirror.exe without elevated privileges?\n\nStill no effect. Disc visible in cmd but no in explorer:\ndokanctl.exe /v\nDriver path: 'C:\\Windows\\system32\\drivers\\dokan1.sys'\ndokanctl : Feb 16 2016 13:29:30\nDokan version : 100\nDokan driver version : 0x190\nmirror.exe /r c:\\ /l m /d /s\nAttempting to add SE_SECURITY_NAME privilege to process token\nfailed: Unable to adjust token privileges: 1300\nFailed to add security privilege to process\n        => GetFileSecurity/SetFileSecurity may not work properly\n        => Please restart mirror sample with administrator rights to fix it\nDokan: debug mode on\nDokan: use stderr\ndevice opened\nmounted: m -> \\Volume{d6cc17c5-1730-4085-bce7-964f1e9f5de9}\nMounted\nC:> m:\nM:>\n\n@Liryna \n\nCould you test it with network option:\n\nThe same here - no effect ;-(\nmirror.exe /r c:\\temp /l m /d /s /n\nAttempting to add SE_SECURITY_NAME privilege to process token\nsuccess: privilege already present\nDokan: debug mode on\nDokan: use stderr\ndevice opened\nmounted: m -> \\DokanRedirector1{d6cc17c5-1732-4085-bce7-964f1e9f5de9}\nMounted\n. > I made a new release. if @taruti @Goster @Matroschker could test it and give a feedback it would be nice !\n\nhttps://drive.google.com/folderview?id=0B3E9tU82h-RMMmh3RkJFamM4WTA&usp=sharing\n\nI tested this build with dimov-cz/win-sshfs 1.6.0 RC2 and mounting and unmounting ssh disk now works ;-)\n. ",
    "Matroschker": "The same error in my test with \"mirror.exe /r c:\\temp /l m /d /s\"\nC:\\Program Files\\Dokan\\Dokan Library-1.0.0>dokanctl /v\nDriver path: 'C:\\WINDOWS\\system32\\drivers\\dokan1.sys'\ndokanctl : Feb 13 2016 10:23:23\nDokan version : 100\nDokan driver version : 0x190\n...on Win 10 Pro\nwith Administrator permission:\nit hangs and if I try to open drive z (I could see drive z in win expl) my whole Windows crashed\nwithout Administrator permission:\nAttempting to add SE_SECURITY_NAME privilege to process token\nfailed: Unable to adjust token privileges: 1300\nFailed to add security privilege to process\n        => GetFileSecurity/SetFileSecurity may not work properly\n        => Please restart mirror sample with administrator rights to fix it\nDokan: debug mode on\nDokan: use stderr\ndevice opened\nmounted: Z -> \\Volume{d6cc17c5-1734-4085-bce7-964f1e9f5de9}\nMounted\nIoctl failed for wait with code 1.\nThread will be terminated\nIoctl failed for wait with code 1.\nThread will be terminated\nIoctl failed for wait with code 1.\nThread will be terminated\nIoctl failed for wait with code 1.\nThread will be terminated\nIoctl failed for wait with code 1.\nThread will be terminated\nUnmounted\nunload\nSuccess\n. I tested again the last version (https://drive.google.com/folderview?id=0B3E9tU82h-RMMmh3RkJFamM4WTA&usp=sharing) on Win10 Pro with and without administrator privileges, but in both cases my Windows crashes.\nThis was my call: mirror.exe /r c:\\temp /l m /d /s /n\n. ",
    "forkineye": "As a workaround with 1.0.0 RC-1, restarting explorer.exe will make the mount accessible.\n. ",
    "kyanha": "Windows does not usually allow a file to be deleted when it is open, and deleting a file always operates on an open file.  Renaming also counts as deleting.  You would need to alter the calls from open() to CreateFile() and always include FILE_SHARE_READ|FILE_SHARE_DELETE (and possibly |FILE_SHARE_WRITE, though that's perhaps another argument) in dwShareMode.\n. It looks like the AppVeyor build failed because the SonarQube OAuth token is invalid.. https://ci.appveyor.com/project/Maxhy/dokany/build/1.1.0-423 -- it's attached to this build.  \"Some checks were not successful\" 1 failing and 1 successful checks. If you mount an NTFS volume on a directory, and then rename the directory, the mount follows the rename of the mount point.  Having Dokany keep a handle open to the directory it's mounted on will actually change the behavior from what the system already does.\nThe 'correct' way to handle it is to deny delete on the mountpoint to the users who shouldn't rename it.  (The Delete permission is required to rename a file or directory.)\nTest case:\n[open an elevated command prompt]\n```\n\nmkdir %userprofile%\\mount\ndiskpart\nDISKPART> create vdisk file=\"%userprofile%\\tempmount.vhdx\" size=512 type=expandable\nDISKPART> select vdisk file=\"%userprofile%\\tempmount.vhdx\"\nDISKPART> attach vdisk\nDISKPART> create partition primary\nDISKPART> format recommended\nDISKPART> assign mount=\"%userprofile%\\mount\"\nDISKPART> list volume\n\nVolume ###  Ltr  Label        Fs     Type        Size     Status     Info\n\n[...]\n  Volume 5                      NTFS   Partition    510 MB  Healthy\n    C:\\Users\\username\\mount\\\nDISKPART> exit\nLeaving DiskPart...\n\ndir %userprofile%\\mount /a\n Volume in drive C is Windows\n Volume Serial Number is 86F1-7F16\n\nDirectory of C:\\Users\\username\\mount\n2018-06-22  22:19              System Volume Information\n               0 File(s)              0 bytes\n               1 Dir(s)     518,840,320 bytes free\n\nmove %userprofile%\\mount %userprofile%\\newmount\n        1 dir(s) moved.\ndir /a %userprofile%\\newmount\n Volume in drive C is Windows\n Volume Serial Number is 86F1-7F16\n\nDirectory of C:\\Users\\username\\newmount\n2018-06-22  22:19              System Volume Information\n               0 File(s)              0 bytes\n               1 Dir(s)     518,840,320 bytes free\n\ndiskpart\nDISKPART> list volume\n\nVolume ###  Ltr  Label        Fs     Type        Size     Status     Info\n\n[...]\n  Volume 5                      NTFS   Partition    510 MB  Healthy\n    C:\\Users\\username\\mountnew\\\nDISKPART> select volume 5\nVolume 5 is the selected volume.\nDISKPART> remove mount=\"%userprofile%\\mountnew\"\nDiskPart successfully removed the drive letter or mount point.\nDISKPART> select vdisk file=\"%userprofile%\\tempmount.vhdx\"\nDiskPart successfully selected the virtual disk file.\nDISKPART> detach vdisk\nDiskPart successfully detached the virtual disk file.\nDISKPART> exit\nLeaving DiskPart...\n\ndel %userprofile%\\tempmount.vhdx\n```\n\nYou type everything after a > character.  Everything that's not after such a character is output.  The [...] are system specific, and your volume numbers will be different than mine.  Where it says select volume after you go into diskpart the second time, you need to ensure that you enter the correct volume number from the prior list volume command.. Why is it Dokany's place to solve this for you?  Your requirement seems fairly unique, and your proposal alters Windows's behavior of permitting mounts to be renamed for every Dokan filesystem, everywhere, for everyone who uses Dokany, not only your site.\nYou already have a workaround that you've implemented for yourself to alter Windows's behavior for your own purposes.  Why do you think it's appropriate to remove this capability for everyone?  (I actually rely on renaming mount points right now, which is why I'm arguing against this proposed change.). I've tried both approach the permission and the handle, the permission isn't that good, who can delete it?  Anyone who has FILE_DELETE_CHILD permission on the parent directory.  (\"For a directory, the right to delete the directory and all the files it contains, including read-only files.\")\nI rely on the ability to rename mount points so that I can change the filesystem out from under a particularly poorly-coded piece of software (rename the mount point, rename another mount point to the original mount point, save the software state, rename the second mount point, rename the first mount point back to the original junction name, software continues without issue).  It also allows me to run a test suite serially against several filesystems without changing anything about the test runner, instead only changing aspects of the environment, without having to dismount and remount.. Does dokan_fuse/include/fuse_win.h need the same treatment?. Hey @Liryna, is there a public SonarQube instance or SonarCloud for the dokan-dev projects?  I'm pretty sure that SonarCloud is free for open source projects.. Cool, thanks!  Do you have any plans to load the dokan-dotnet, dokan-sshfs, dokan-delphi, dokan-java, and/or dokan-ruby projects into it?. This causes a bad interaction with my suggestion on https://github.com/dokan-dev/dokan-dotnet/issues/139 , namely that said suggestion won't work because of it.. @amarcionek, the SubjectSecurityContext is kind of available to the user code, via the function DokanOpenRequestorToken().  (In Dokan.Net, it's available via DokanFileInfo.GetRequestor().)  I'm not sure how the kernel could obtain the SSC from the token, though -- that needs a bit more investigation.  Maybe the best approximation for anything that doesn't return a security context would be to return the SYSTEM security context, but I don't know.\nIf you need to figure out the security to apply based on scanning some other share, I think it might be best to construct a context based on the owner and group of the file that you're bringing in, then pass that to SeAssignSecurity?\nDo you happen to have the results of NTFS (as opposed to the filesystems you've implemented) related to different things in security contexts on IRP_MJ_CREATE available?  That would likely help determine the best way to proceed.\n. @amarcionek Okay, I've got a better idea of what's going on in kernel-land now.\nThe same mechanism that makes the SubjectSecurityContext available to one IOCTL would make it available to every IOCTL; as a result, there's no need to pass the context up to user mode and then back to kernel mode.  Unfortunately, this reduces the applicability of being able to simply send an IOCTL down and get a proper response if it's not coming from a context through the kernel.  I'm considering a second  IOCTL that doesn't require a handle to file opened through the share, that allocates and populates a new SECURITY_CONTEXT structure [something that the kernel provides no mechanism for doing] just to make SeAssignSecurity work for arbitrary contexts.\n. File system developers don't need to care what's in a security descriptor if and only if they're not operating outside of the preconceived notions that Microsoft has written its design and documentation around.  As soon as Dokany pushed filesystem implementation into user mode, that constraint flew out the window.\nI've got an accepted/triaged/assigned bug over at https://github.com/MicrosoftDocs/windows-driver-docs-ddi/issues/258 to get documentation on RtlSetSaclSecurityDescriptor, so that SACLs can be properly inherited as well.\nI'm intending to have a place to provide an owner/group in the secondary IOCTL's passed-in structure, so that assumptions need not be made by the driver and instead can be foisted off on the filesystem developer.  I agree that Administrators would be reasonable in a lot of circumstances, but the issue is more that Dokany exists because kernel-mode filesystem development is also reasonable in a lot of circumstances.  But only \"a lot of\", not \"all\". :). ",
    "netheril96": "I am confused. What part of renaming is denied by the operating system? If my virtual filesystem internally just update some data structures in memory, will the renaming of opened files still be an issue?\n. I'm porting a FUSE project to Windows, and have always assumed the filenames to be in UTF-8, as is often the case for UNIX-like systems. If dokanfuse does not encode the filenames in UTF-8, the porting would probably be a monumental task.\n. @Liryna I haven't started the port yet.\n\nI had no issue so far.\n\nDo you ever use filenames not in iso-8859-1?\n. Sigh, I guess you never have to deal with Unicode problems.\n. After inspecting the source of dokan fuse, it seems that the filenames are indeed encoded in UTF-8.\n. ",
    "therealkenc": "Catching up on this thread (and Dokan in general). What @netheril96 describes is indeed possible -- it is just a fair amount of work to do completely. In fact the WSL people at Microsoft have done a fairly good job of it in the kernel; there is a write-up here. Basically if you want Linux-like behavior, you would have to build a Linux-like VFS with fake inodes and then operate on those not the NTFS objects. Doable, but hard.. ",
    "lefty74": "I ran into the same error, but it was not to do with an existing copy of vsredist: the installer downloaded it from Microsoft but still the hashes didn't match. The installer with redist bundled worked. Shall I open a new issue for this, or would you like my log file here?\n. @Liryna I'm not sure I understand your question, but I did get it to install with your bundled dokan+vsredist installer, so I'm sticking with that. I just flagged the error I found here in case it was useful to you.\n. OK. I wasn't sure which component wasn't working so I raised it in both places.\n. ",
    "johndugan": "@js69 thx!\n\nSolution 1: user should move/download files to its own folder with no trash left behind that could be found (yeah, I know, all browsers use a general downloads folder where they stuff everything).\n\nMoved the install file from my downloads directory to my desktop, then ran the installer - solved my issue.\n. ",
    "qaisjp": "\nI'm on a networked computer so I cannot update this computer. There was a recent update to this computer but I'm not sure if that's what you're talking about\n\n\n. Okay well I've disabled verification using bcdedit /set nointegritychecks ON... lets hope it works..\n. No idea if SP1 is installed ... like I said I can't install any updates because updates are managed by my sysadmin.\n. here are all the logs\nDokan_Library_1.0.0_Bundle_20160303092855_000_Dokan_x64.msi.log.txt\nDokan_Library_1.0.0_Bundle_20160303093340.log.txt\nDokan_Library_1.0.0_Bundle_20160303093340_000_Dokan_x64.msi.log.txt\nDokan_Library_1.0.0_Bundle_20160303093500.log.txt\nDokan_Library_1.0.0_Bundle_20160303093500_000_Dokan_x64.msi.log.txt\nDokan_Library_1.0.0_Bundle_20160303094615.log.txt\nDokan_Library_1.0.0_Bundle_20160303094923.log.txt\nDokan_Library_1.0.0_Bundle_20160303094923_000_Dokan_x64.msi.log.txt\nDokan_Library_1.0.0_Bundle_20160303095118.log.txt\nDokan_Library_1.0.0_Bundle_20160303095118_000_Dokan_x64.msi.log.txt\nDokan_Library_1.0.0_Bundle_20160303092242.log.txt\nDokan_Library_1.0.0_Bundle_20160303092242_000_Dokan_x64.msi.log.txt\nDokan_Library_1.0.0_Bundle_20160303092721.log.txt\nDokan_Library_1.0.0_Bundle_20160303092839.log.txt\nDokan_Library_1.0.0_Bundle_20160303092839_000_Dokan_x64.msi.log.txt\nDokan_Library_1.0.0_Bundle_20160303092855.log.txt\n. sha1 is for the countersign \n\nif that makes a difference\n. The fixed drivers aren't working either.\nNew set of logs: https://www.dropbox.com/sh/0cvw913y3kloans/AABNdN4Kf7HnKqjq1myC9GMQa?dl=0\n. Okay well I've reverted back to 0.7.3 (and an old version of winssh-fs)... the bug still probably exists for people in the same situation as me though.\n. ",
    "GrantGatchel": "Installing the Security Update for Windows 7 (KB3033929) helped me:\nhttps://www.microsoft.com/en-us/download/details.aspx?id=46078\n. ",
    "gvonkreisler": "\nwhen stop the dokan service and do a new start ....\n\nThe service cannot accept control messages at this time\nAn instance of the service is already running.\nGreatings george\n. By the way\nthe files that are created during compile are all named dokan1 ( 1) but all you wikis are based on dokan...\nThat makes the \" Thinks\" not easy ...\nGeorge\n. Dear Maxhy,\n\nand do the regedit key.\nAnd of course I have wrote my own kdmf filter with the VS cert .... no problems \nDocuments\\Visual Studio 2015\\Projects\\dokany-1.0.0-RC1\\x64\\Release>dokanctl.exe /i a\nDriver path: 'C:\\Windows\\system32\\drivers\\dokan1.sys'\nDocuments\\Visual Studio 2015\\Projects\\dokany-1.0.0-RC1\\x64\\Release>mirror.exe /r A: /l m /d /s\nAttempting to add SE_SECURITY_NAME privilege to process token\nsuccess: privilege already present\nDokan: debug mode on\nDokan: use stderr\ndevice opened\nmounted: m -> \\Volume{d6cc17c5-1736-4085-bce7-964f1e9f5de9}\nMounted\nReturnedLength 0\nReturnedLength 0\nReturnedLength 0\nReturnedLength 0\nIoctl failed for wait with code 1.\nIoctl failed for wait with code 1.\nIoctl failed for wait with code 1.\nThread will be terminated\nIoctl failed for wait with code 1.\nThread will be terminated\nThread will be terminated\nIoctl failed for wait with code 1.\nThread will be terminated\nThread will be terminated\nUnmounted\nunload\n\"Success\"\nWhy I get a \"success only\" as out of a funktion (driver unload) but nothing worked ?\nI think some is wrong with your volume querry funktion.\nReturnedLength 0         -->     filefsattribute\nHave had the same Problem with the offered exe, so I compiled dokan1 by my self.\nAns of course I have a vbox running with a new system to, but same errors.\nI read a that other users have the same problem.\nThanks for your answer.\nChears\n. Not Found Error 404\nwhen i open you link...\nBut I have a other question....\nYour networkProvider dokannp:\nNormaly if I map a network share from Linux I get the provider Info\nwmic providername\nWindows Bla Bla\nWhen I would change this Info what funktion I have to use\nDWORD APIENTRY NPAddConnection3\nDWORD APIENTRY NPGetResourceInformation\nor an other one ?\nGreatings\nGeorge\nSchnitt & Schnittig GmbH\nmobil: +49 151 240 59 58 4   tel: +49 221 99 20 55 07\nSchnitt, Postproduktions-Management, Netzwerktechnik\n2016-03-06 17:18 GMT+01:00 Maxime C. notifications@github.com:\n\nIs\nhttps://drive.google.com/folderview?id=0B3E9tU82h-RMMmh3RkJFamM4WTA&usp=sharing\nworking (drive version because of possible bsod issue in rc1 once mounted)?\nIf so it's a sign issue.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/190#issuecomment-192923276.\n. Ok now the link worked...\nBut this is an exe ....\nCut I install it or have I to delete eyery think from dokann1?\n\nchears\nGeorge\nSchnitt & Schnittig GmbH\nmobil: +49 151 240 59 58 4   tel: +49 221 99 20 55 07\nSchnitt, Postproduktions-Management, Netzwerktechnik\n2016-03-06 17:18 GMT+01:00 Maxime C. notifications@github.com:\n\nIs\nhttps://drive.google.com/folderview?id=0B3E9tU82h-RMMmh3RkJFamM4WTA&usp=sharing\nworking (drive version because of possible bsod issue in rc1 once mounted)?\nIf so it's a sign issue.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/190#issuecomment-192923276.\n. [image: Inline-Bild 1]\n\nSchnitt & Schnittig GmbH\nmobil: +49 151 240 59 58 4   tel: +49 221 99 20 55 07\nSchnitt, Postproduktions-Management, Netzwerktechnik\n2016-03-06 17:18 GMT+01:00 Maxime C. notifications@github.com:\n\nIs\nhttps://drive.google.com/folderview?id=0B3E9tU82h-RMMmh3RkJFamM4WTA&usp=sharing\nworking (drive version because of possible bsod issue in rc1 once mounted)?\nIf so it's a sign issue.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/190#issuecomment-192923276.\n. Thank you\nwill test\n\nChears\nSchnitt & Schnittig GmbH\nmobil: +49 151 240 59 58 4   tel: +49 221 99 20 55 07\nSchnitt, Postproduktions-Management, Netzwerktechnik\n2016-03-06 18:11 GMT+01:00 Liryna notifications@github.com:\n\n@gvonkreisler https://github.com/gvonkreisler , please uninstall &\nremove all binaries that you have installed and build.\nUse the install that Maxhy gave you and test the mirror that has been\ninstalled.\nIf it work, use the dokan.dll and header from the installer for your\napplication.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/190#issuecomment-192937545.\n. Dear Lyrna\n\nC:\\Program Files\\Dokan\\Dokan Library-1.0.0\\sample\\mirror>sc start dokan1\n[SC] StartService FAILED 577:\nWindows cannot verify the digital signature for this file. A recent\nhardware or software change might have installed a file that is signed\nincorrectly or damaged, or that might be malicious software from an unknown\nsource.\nC:\\Program Files\\Dokan\\Dokan Library-1.0.0\\sample\\mirror>\nSo what shut I do...\nAgain patch registry with the ci key ?\nWhat does the .inf File ?\nNormaly it does the reg entrys\nLG\nGeorg\nSchnitt & Schnittig GmbH\nmobil: +49 151 240 59 58 4   tel: +49 221 99 20 55 07\nSchnitt, Postproduktions-Management, Netzwerktechnik\n2016-03-06 18:11 GMT+01:00 Liryna notifications@github.com:\n\n@gvonkreisler https://github.com/gvonkreisler , please uninstall &\nremove all binaries that you have installed and build.\nUse the install that Maxhy gave you and test the mirror that has been\ninstalled.\nIf it work, use the dokan.dll and header from the installer for your\napplication.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/190#issuecomment-192937545.\n. Documents\\Visual Studio 2015\\Projects\\dokany-1.0.0-RC1\\x64\\Release>dokanctl.exe /v\nDriver path: 'C:\\Windows\\system32\\drivers\\dokan1.sys'\ndokanctl : Mar  5 2016 22:33:01\nDokan version : 100\nDokan driver version : 0x190\n. C:\\Users\\Avid_01\\Documents\\Visual Studio 2015\\Projects\\dokany-1.0.0-RC1\\x64\\Release>sc start dokan\n[SC] StartService FAILED 1056:\n\nAn instance of the service is already running.\nC:\\Users\\Avid_01\\Documents\\Visual Studio 2015\\Projects\\dokany-1.0.0-RC1\\x64\\Release>sc stop dokan\nSERVICE_NAME: dokan \n        TYPE               : 1  KERNEL_DRIVER\n        STATE              : 3  STOP_PENDING \n                                (STOPPABLE, NOT_PAUSABLE, IGNORES_SHUTDOWN)\n        WIN32_EXIT_CODE    : 0  (0x0)\n        SERVICE_EXIT_CODE  : 0  (0x0)\n        CHECKPOINT         : 0x0\n        WAIT_HINT          : 0x0\nC:\\Users\\Avid_01\\Documents\\Visual Studio 2015\\Projects\\dokany-1.0.0-RC1\\x64\\Release>\n. Documents\\Visual Studio 2015\\Projects\\dokany-1.0.0-RC1\\x64\\Release>sc start dokan\n[SC] StartService FAILED 1056:\nAn instance of the service is already running.\nC:\\Users\\Avid_01\\Documents\\Visual Studio 2015\\Projects\\dokany-1.0.0-RC1\\x64\\Release>\n. \\Documents\\Visual Studio 2015\\Projects\\dokany-1.0.0-RC1\\x64\\Release>sc start dokan1\n[SC] StartService FAILED 2:\nThe system cannot find the file specified.\n. Nothing works at all....\nMy 3. test on dokan...\nMabe you need some time to fix all the problems\nThan I would name a program 1.0\n1.0 ---> This looks like, there is a change to get it run for a \"normal user\" ....\nBut\nNo chance...\nGeorge\n. \n. Dear Liryna,\nI think their is some thig not ok with the \"rights\" , I cant change the owner or group values in windows ( on this drive) but creating and deleting and renaming. Maby its normal in a /disconnected networkdrive/ I dont know...\nDid you create a netprovirder id in dokannp like \"Microsoft Windows Network\" so the redirector knows the provider ?\nchears george\n. Thank you\nWorks ...\nFirst time I get it run ...\nLG\nGeorge\nSchnitt & Schnittig GmbH\nmobil: +49 151 240 59 58 4   tel: +49 221 99 20 55 07\nSchnitt, Postproduktions-Management, Netzwerktechnik\n2016-03-17 10:48 GMT+01:00 Marinko notifications@github.com:\n\n@Liryna https://github.com/Liryna The reason it does not work is the\nProviderOrder registry entry. The name used there must be Dokan1.\nPlease fix the setup and it will work. Maybe also this issue will then be\nfixed #200 https://github.com/dokan-dev/dokany/issues/200\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly or view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/199#issuecomment-197792686\n. Dear Maxime,\n\nin dokannp.c there is a declaration of NPEnumResource, is it possibel to\nset the Net provider info their ?\nLG\ngeorge\nSchnitt & Schnittig GmbH\nmobil: +49 151 240 59 58 4   tel: +49 221 99 20 55 07\nSchnitt, Postproduktions-Management, Netzwerktechnik\n2016-03-18 7:25 GMT+01:00 Maxime C. notifications@github.com:\n\nThis is general to network drives. I think NPEnumResource must be\nimplemented to support this, maybe more.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly or view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/201#issuecomment-198225763\n. Thank you ,\nI will test ...\n\nDid you see this samples in QT there is a complete server/ client network\nfor dokany.\nhttps://github.com/shi-yan/QtDokanyExamples.\nNice work but hard to understand why he did this work not for win at first\nand than for mac and lin(  its open for the qt plugin on VS) .\nWhat I see is a complete networksocket based on dokan.lib .... . But the\ndocumentation is not good so I think nobody get to run rearly.\nChears\ngeorge\nSchnitt & Schnittig GmbH\nmobil: +49 151 240 59 58 4   tel: +49 221 99 20 55 07\nSchnitt, Postproduktions-Management, Netzwerktechnik\n2016-03-24 7:50 GMT+01:00 Maxime C. notifications@github.com:\n\nI'm currently doing some experimentation on Network Provider, see\ntemporary branch https://github.com/dokan-dev/dokany/tree/networkprovider.\nThis is now working and it fix your net use but it has to be improved\nbefore merge [image: :smile:]. It is strongly related to UNC feature and\nwill not work without it (/u on mirror sample).\nListing on network provider should be optional. Default sharing to other\ncomputers should be supported and optional. IOCTL_REDIR_QUERY_PATH should\nbe improved to handle properly all kind of path requests and not be stuck\nto one unique Dokan instance.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly or view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/201#issuecomment-200697933\n. Dear Maxime,\n\njust make a test and again I have the red cross ( not connected\nnetworkdrive issue 199) but the provider entry is Dokan1....\nChange it to dokan1 and dokan and dokannp but the red error persists.\nChears\nGeorge\nSchnitt & Schnittig GmbH\nmobil: +49 151 240 59 58 4   tel: +49 221 99 20 55 07\nSchnitt, Postproduktions-Management, Netzwerktechnik\n2016-03-24 7:50 GMT+01:00 Maxime C. notifications@github.com:\n\nI'm currently doing some experimentation on Network Provider, see\ntemporary branch https://github.com/dokan-dev/dokany/tree/networkprovider.\nThis is now working and it fix your net use but it has to be improved\nbefore merge [image: :smile:]. It is strongly related to UNC feature and\nwill not work without it (/u on mirror sample).\nListing on network provider should be optional. Default sharing to other\ncomputers should be supported and optional. IOCTL_REDIR_QUERY_PATH should\nbe improved to handle properly all kind of path requests and not be stuck\nto one unique Dokan instance.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly or view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/201#issuecomment-200697933\n. For your info:[image: Inline-Bild 1][image: Inline-Bild 3][image:\nInline-Bild 2]\n\nDear Liryna,\nfor your Info, shut I run debuger ?\nLG\nGeorge\nSchnitt & Schnittig GmbH\nmobil: +49 151 240 59 58 4   tel: +49 221 99 20 55 07\nSchnitt, Postproduktions-Management, Netzwerktechnik\n2016-03-24 21:05 GMT+01:00 Liryna notifications@github.com:\n\n@gvonkreisler https://github.com/gvonkreisler it is currently in\ndevelopement, for now you need to add the UNC\ntry by adding /u:\nmirror.exe /r C:\\Users /l m /n /u \\Dokan\\mirror\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly or view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/201#issuecomment-200998017\n. \n\n\nOk ...\n. I have to thank you for your work!\nYes the new netprovider entry was Dokan1.\nI tetst it also with dokan1 and dokannp.\nBut the result was always the same.\n\nBtw: did you take a look at the QT project, it has a real socket to connect to real networks.\nMaby some of the Provederwork is done there. He used the dokan.lib and he replaced only dokan objects and classes.\nWill test the new version tomorow, finished real work. Now is TV time ;)\nBy\nGeorge\n. @Maxhy \nno no if it shows disconnected their is no entry in NET USE.\nc.\n. Hi everbody,\nalso the latest version did show up as disconected: Providerlistname is Dokan1.\n@Maxhy When the dokannp Netprovider is running, it have to have the same funktionality as the other ( lanman etc... ) . \nOr is it a missunderstandig of the use of dokannp ?\nI want to connect to a samba share with dokan and establish  my own FS.\nMirror is only the test FS for me but in meantime I think its only running local.\nI make a driver that is working with the lamannp but lamannp didnt support my needs.\nSo my Idee was to change to dokannp.\nLG\nGeorge \n. Happy Eggs for everone,\nbuilt and install last changes:\nMount with success!!!\nNet USE Error 50. \nExplorer not working. ( But this is implemented when Netprovider didnt do all the enumeration and Buffercalls)\n@ Liryna: What is different your system worked.My is win7 ultimate. Do a win7 release (x64) driver build and a x64 release of dokannp docanctl mirror.\nChears\ngeorge\n. Also the Error 50 persist on NET USE when deinstall dokannp then normal work of NET USE\n. \nthe driver name  that is showed on the drive is one of the lanman smb connect helpers. \n. Dear Liryna,\nwill check but I have rebuild every think.\nYes : Dokan1 is the new one.\nLG \n. \nLooks very good !!!\n. The only thik I see is the unnamed device / thats why the drive is called wkssvc.\nShut be dokan1   ... or ??\n. Yes shows all the \" functions\" but why shut it not work ??\n\n. Ok in debug get  Warning provider name should be set on netdrive only\n. Attention I am not that fast...\nwill test ne version\n. Ohh ....\nyes I am allways download the whole project \n. Have fast internet ;)\n. You are right !!!! \ngit hub is new for me in that very fast testing ....\nwill test !!!\n. download the branch install your building ...\nnow i have the diconnect sign again.\nBTW what did I see when I do docanctl /v\nin the moment _ read the same as in pict only creation time is different_\n. Yes, but first replay on this error was change name to dokan1 ( dokannp) now its Dokan1.\nIs this in your opion ?\n. You change the reg location from service dokannp to sevice dokan1 because you change the location from win/sys32 to programfolder.\nI dont know if the key place and name is a problem.\nBut I know some different softwares with establshing a net provider and a fs driver they all do it on different locations.\n. Got some question you attachet the driver with alltdute above mup ?\n. btw in debug IOCTK failed with 55\n. IOCTL\n. How should I know what is okay ...\nI can take a look when you say whatI have to find.... if it is okay.\nIn the last time you change name and places you add a version nummber and so on .\nWrite what I have to find in reg.\nOr provide a pic of your system.\nLG\n. RDPNP,webclient,LanmanWorkstation,Dokan1\nthats what I write before \"Dokan1\"\nand of course I restart the system end restart explorer \n. 1a: devicename \\Device\\DokanRedirector1\n1b: name Dokan1\n1c:C:\\Users\\avid_01\\Documents\\Visual Studio 2015\\Projects\\dokany-networkprovider\\x64\\Release\\dokannp1.dll\n2.RDPNP,webclient,LanmanWorkstation,Dokan1\n3.RDPNP,webclient,LanmanWorkstation,Dokan1\n. Liryna... that was the first thing I have try .\nBut will try it with restart.\n. Liryna... that was the first thing I have try .\nBut will try it with restart.....\nNot at all : disconnect \nAnd dokanctl /l a didnt show any connection\n. Just foundin dokannp.c\n/* Enumerate lpNetResource->lpRemoteName container, which can be only the VBOXSVR container. */\nMeans that you copy the np from vbox ?\nand change names ?\nOr did I miss something ?\n. Dear Liryna,\nthe 2 Versions have the same entries only dif. dokan1 Dokan1 in HW and order.\nthank you\n. ",
    "csobchuk": "I got it immediately after the installer quit and it asked to launch the\napplication (if I recall correctly). The update is already installed on\nthis computer. Apparently I have to reboot after the uninstall - so I won't\nbe able to get to try it again until Monday.\nOn Fri, Mar 11, 2016 at 12:27 PM, Liryna notifications@github.com wrote:\n\nHi @csobchuk https://github.com/csobchuk,\nDo you get the message during the install or when you launch the installer\n?\nCan you install:\nhttps://www.microsoft.com/en-us/download/details.aspx?id=46078\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/196#issuecomment-195510743.\n. \n",
    "Casimir666": "Hi @Liryna,\nThanks you for your answer.\nYou perfectly understood, I'm trying to mount VHD inside mirror device.\nI tried the the /t 1 option, but the problem is the same :\nMountVHD_onethread.zip\nI have noticed exactly the same error message if i try to boot an Hyper-V machine on a mirrored VHD. Do you have any hints or tests I can do?\n. I think there is a little bug in the mirror.c sample, inside the MirrorLockFile function :\nif (!LockFile(handle, offset.HighPart, offset.LowPart, length.HighPart,\n                length.LowPart)) {\nAccording to Microsoft documentation, LockFile parameters are :\nBOOL WINAPI LockFile(\n  _In_ HANDLE hFile,\n  _In_ DWORD  dwFileOffsetLow,\n  _In_ DWORD  dwFileOffsetHigh,\n  _In_ DWORD  nNumberOfBytesToLockLow,\n  _In_ DWORD  nNumberOfBytesToLockHigh\n);\nIt seems to me that the low and high Dword are inversed. The MirrorUnlock has the same problem.\nBy the way it didn't solve my problem, but I'm still investigating.\n. ",
    "jeffswt": "@Rondom I am not using Windows 7 but 8.1.\nI was using MemoryFS with Liryna/pyFilesystem.\nSteps were similar to @Casimir666's steps, instead I used VHDX. Code was similar to yours, but there are still bugs pending to be solved. @Liryna\nFor example, if you mount a VHDX file using either explorer (The auto-mount utility does the mounting for you) or computer management, when you detach this VHDX it will show the path of the file normally, e.g. `D:/Drives/test.vhdx'.\nYet when you mount such VHDX on pyFilesystem (I haven't tested mirror), things behave differently. In computer management, you attach the VHDX with no errors (I don't know how did you get the error), the path was designated to D:/Drives/test.vhdx. But when you attach the VHDX with explorer, the path would be instead designated to '/Device/12345678-AAAA-BBBB-CCCC-12345678/test.vhdx` or something like that.\nPlease fix.\n. @Liryna No, Didn't work. Bug still retains and the process ceased to work. Had to reboot my computer again... :(\nHowever if you cd into this folder things won't go wrong.\n. And mirror.exe is unable to be terminated too.\nIt just happens to be the same as the previous one.\nI'm trying a new version...\n\n. And the pipeline of explorer goes wrong, too. When you rename some file, or copy, or move, or delete anywhere in any filesystem, it does not update in explorer, instead you need to F5 and refresh the page. Does this has anything to do with the pipe being blocked?\n. When I mean filesystem, I _mean every_ filesystem, NTFS, FAT32, id est anywhere in your computer.\n. I mean, when you do the 'git bash here' operation, the entire process tree dies out. And you could not kill any of the processes on the process tree which throws no running instance of the task. A while later all of your computer filesystems just went jammy on explorer. Nothing dreadful happens, it's just that explorer fails to be informed of the FS changes (any FS, I mean).\nRegardless of whether the file is related to mirror.exe or not. Maybe the dokan driver had crashed something or blocked some hooks.\n. ",
    "CollinChaffin": "This needs to be PULLED!!  Installing this provider totally BREAKS networking on WIN7x64!  All NET USE commands no longer work generate \"network name not valid\" despite a simple \"dir \\xxxxxx\\dir\" on the same dir working fine.  Uninstalling this DOKANY redist solves the issue.. I should say, it then leaves another mess with these new errors:\nSystem error 50 has occurred.\nThe request is not supported.\nUpon simple NET USE etc.\nWhy would you keep such a BROKEN installer available!?!?!?  This has completely, utterly SCREWED my WIN7x64 network stack, and I even see CLOSED issues indicating this has happened before, so is it simply never been fixed properly?  The ONLY install was this redist exe library latest release.  Then, uninstalling has now CHANGED the error from \"network name is not available\" despite dir \\server\\share working just fine, to the error 50 now above.  I'm guessing this rewrote the network providers incorrectly as indicated in other closed issues.  Once I confirm the final fix, I will post it here for others in this bind.\n. As I suspected, this installer totally WIPED out all my providers and left me with THIS:\n\n. Well, here are all the providers gone now:\nRDPNP,LanmanWorkstation,webclient\nAnd possibly others.  See issue #200 because this EXACT same kind of thing happened.  I'll start digging through this repo code as well once I fix my totally borked workstation network stack.  Again, this was the only install/uninstall.  And, it was borked after the install and BEFORE the uninstall....so it's NOT the uninstall code - it's the INSTALL code we need to look at.\n. Okay so will be digging through the INSTALL code tonight assuming it's all here on the repo, because I went all the way to backup just to absolutely ENSURE I had the original providers before this install overwrote them, and luckily I did because there were actually more than the other system I compared to.  Here is my network provider key as of installing this UPGRADED dokan redist:\npfmunc,RDPNP,LanmanWorkstation,webclient,Dokan1\nMind you, I actually had Dokan installed, but it was the 2016 version and once I installed this latest full redist which includes the NETWORK provider.  It was that ful redist with the network provider that did this damage just downloaded TODAY and installed TODAY, so .10.8 I believe.\nLuckily, if you have a backup of these keys the second I restored them without even logging out I was able to repeat the failed NET USE command in the very same open cmd window and it successfully mapped the drives.\nSo, I don't think it's any problem with the provider code (I'm guessing) but based on seeing these 2 critical network provider keys overwritten leaving ONLY dokan1 - that this issue is 100% the INSTALLER code we need to fix.  I apologize for being upset but bear in mind this install really did 100% break my laptop's ms-networking ability due to the lanmanworkstation provider removal right at a time when I really needed it!  Now that I've cooled down and restored it, I'll see what I can do to help get to the root cause in the code and report back here if I find anything!\nP.S.  For those that also may have found their reg keys blown away, mind you that you MAY have had different providers added, but in a pinch here is a reg export of my HKLM\\CurrentControlSet\\Control\\NetworkProvider tree ready for emergency import (please review and use at your own risk):\nEDIT:  Sorry original paste below was incomplete - reverified it is complete now as of 07-28-2017_07:35PM!\n--------CUT BELOW THIS LINE AND SAVE AS NETPROVIDERS.REG AND DOUBLE-CLICK TO IMPORT IF NEEDED (NON-MS PROVIDERS REMOVED)-----------\n````\nWindows Registry Editor Version 5.00\n[HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\NetworkProvider]\n[HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\NetworkProvider\\HwOrder]\n\"ProviderOrder\"=\"RDPNP,LanmanWorkstation,webclient,Dokan1\"\n\"ProviderOrder.backup\"=\"RDPNP,LanmanWorkstation,webclient\"\n[HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\NetworkProvider\\Order]\n\"ProviderOrder\"=\"RDPNP,LanmanWorkstation,webclient,Dokan1\"\n\"ProviderOrder.backup\"=\"RDPNP,LanmanWorkstation,webclient\"\n````\n. Okay so it's been a while since I've had to read straight c code, but I'm approaching my 30 yr mark in the business and just spit-balling that perhaps this is the root cause of this issue:  :)\nmount.c:\n````\nRegOpenKeyEx(HKEY_LOCAL_MACHINE, DOKAN_NP_SERVICE_KEY, 0, KEY_ALL_ACCESS,\n               &key);\n  RegDeleteKey(key, L\"NetworkProvider\");\nRegCloseKey(key);\n  ````\nAlso, it sure looks to me like both the install and uninstall routines are TOTALLY lacking any real error checking whatsoever and it is no wonder the keys are not getting set properly.  Especially when you think about simple situations like what I believe happened to me - walk through that C code as an UPGRADE where you simply install OVER THE TOP OF AN EXISTING DOKAN working install.........I believe that code does not properly handle that situation, nor case of failed installs or uninstalls with retries, etc.\nThe first thing I would suggest is adding simple detailed install logging of every action.  Second, and it's literally been DECADES since I've had to code in straight C so this WILL be faster for you to do it since you obviously wrote this existing routine, perhaps add a bit more logic around what I would suggest as a FULL buffer read of ALL reg keys used or impacted by Dokan into an array/dict to allow for more comprehensive testing for determining needed key changes.  That would allow for many more situations and better protect the registry from unneeded changes.  In my case this was a simple UPGRADE using the full redist installer which if you think about it DID NOT EVEN NEED TO TOUCH that provider key(s) since Dokan1 was already listed, yet following the logic it still did and then obviously that uninstall code blatantly shows it doing a \"RegDeleteKey(key, L\"NetworkProvider\");\" so how on earth is this NOT breaking more people doing uninstalls?!?  Or, am I missing something where a key RESTORE is supposedly taking place?\n. ",
    "shino0729": "Hi @LirynaI , I changed the registry but I couldn't access to the net shared folder.\nnet share:\nIt seems like using network drive. Did you execute mirror sample  without /n option?\n. Yes, I tried to access directly a subfolder/file, but I couldn't access.\n. Hi @Liryna ,\nI attached a log file debugview.log and the result of winfstest is as follows (test only from No.6 to No.10).\n```\n\npython .\\t\\base\\10.t \\\\share\\tmp\nok 1 - expect \"CreateFile \\\\share\\tmp1ff49824 GENERIC_WRITE 0 D:P(A;;GA;;;WD) CREATE_NEW FILE_ATTRIBUTE_NORMAL 0\" 0\nok 2 - expect \"CreateFile \\\\share\\tmp1ff49824 GENERIC_READ 0 0 OPEN_EXISTING 0 0\" 0\nok 3 - expect \"SetFileSecurity \\\\share\\tmp1ff49824 DACL_SECURITY_INFORMATION D:P(D;;GR;;;WD)\" 0\nok 4 - expect \"CreateFile \\\\share\\tmp1ff49824 GENERIC_READ 0 0 OPEN_EXISTING 0 0\" ERROR_ACCESS_DENIED\nnot ok 5 - expect \"DeleteFile \\\\share\\tmp1ff49824\" 0 - got ERROR_INVALID_PARAMETER\n1..5\n```\n\nIn addition I describe how to reproduce.\n\nmount mirror (mirror.exe /r D:\\mirror /l m /o)\nshare directory M:\\share as <ServerName>\\share\n(right click directory -> property -> sharing -> Advanced Sharing...) \nrun winfstest (python .\\t\\base\\10.t \\\\<ServerName>\\share\\tmp)\n\nAs you said, a mounted network drive by using /n option looks working well. So it can be a workaround.\nThank you.. Hi @Liryna ,\nA mounted network drive is not accessible from remote, so it doesn't work as a share directory.\nI attached mirror.log that is the result of winfstest 10.t.. Hi @Liryna ,\nCurrently I couldn't reproduce this issue in my environment but I encountered another problem shown below on same test and same environment. I think it might have some relations.\n\n\nmirror execution\n> mirror.exe /l O  /r c:\\mirror\\ /o /d /s /t 1\n\n\nWinFSTest result\nok 1 - expect \"CreateFile .\\sbtmp\\tmpa5232bcf GENERIC_WRITE 0 D:P(A;;GA;;;WD) CREATE_NEW FILE_ATTRIBUTE_NORMAL 0\" 0\nok 2 - expect \"CreateFile .\\sbtmp\\tmpa5232bcf GENERIC_READ 0 0 OPEN_EXISTING 0 0\" 0\nok 3 - expect \"SetFileSecurity .\\sbtmp\\tmpa5232bcf DACL_SECURITY_INFORMATION D:P(D;;GR;;;WD)\" 0\nok 4 - expect \"CreateFile .\\sbtmp\\tmpa5232bcf GENERIC_READ 0 0 OPEN_EXISTING 0 0\" ERROR_ACCESS_DENIED\nok 5 - expect \"DeleteFile .\\sbtmp\\tmpa5232bcf\" 0\nok 6 - expect \"CreateDirectory .\\sbtmp\\tmpa5232bcf D:P(A;;GA;;;WD)\" 0\nok 7 - expect \"GetFileSecurity .\\sbtmp\\tmpa5232bcf DACL_SECURITY_INFORMATION\" <lambda> - result [{'Sddl': 'D:P(A;;FA;;;WD)'}]\nok 8 - expect \"SetFileSecurity .\\sbtmp\\tmpa5232bcf DACL_SECURITY_INFORMATION D:P(A;;GA;;;WD)(A;;GR;;;SY)\" 0\nok 9 - expect \"GetFileSecurity .\\sbtmp\\tmpa5232bcf DACL_SECURITY_INFORMATION\" <lambda> - result [{'Sddl': 'D:P(A;;FA;;;WD)(A;;FR;;;SY)'}]\n\n\nThe test has 10 item but it seems to freeze after 9th test. This issue is not occurred always.. Hi @Liryna ,\nYes, GetDiskFreeSpaceEx works fine but it doesn't realize my request.\nCurrently dokany GetDiskFreeSpace callback function doesn't have FileName parameter but I would like to return free space value based on the directory name. This is one of the GetDiskFreeSpaceEx requirements as described here https://msdn.microsoft.com/en-us/library/windows/desktop/aa364937(v=vs.85).aspx.. Hi @Liryna,\nOh, I got it. Thank you for your quick response.. ",
    "Deathspike": "Is there any additional information on this issue? I don't mind spending some time digging through Dokan for a fix for this, but I don't know where to look. Any kind of additional information/guesses would be highly appreciated.\n. Yeah, it happens since Windows Server 2012 R2. That is NT6.3+. That includes Windows 8.1 and Windows 10. I think it would be useful to see the differences in logging between Windows 7/8 and 8.1. @Liryna posted logs before and after attaching FileSpy, which may prove useful too, but if FileSpy is hooking into things, the actual difference may be obscured. A change log would be good, too, but I doubt we'll find that.\n. It would help!\nIf we can compare a dump from Windows 7 and Windows 8.1+, I suspect we can put them side by side and compare for differences. It probably won't give an immediate answer, but it should give a good indication which (first) step fails. At least I will know where to start digging. \nSo if you could get a log of both systems doing exactly the same:\n- Windows 7: mount, access via network, show empty folder (because less logging), stop logging.\n- Windows 8: mount, access via network, error, stop logging.\nThat would be awesome :+1: \n. ",
    "siegelpeter": "Hi!\nPerhaps i can help. I got the same problem on Windows 8.1 N 64 bit. I don't\nthink its limited to windows server 2012 R2.\nAre there any logs which would be helpfull to you?\n2016-06-27 13:34 GMT+02:00 Liryna notifications@github.com:\n\nHi @Deathspike https://github.com/Deathspike ,\nI do not have much more information unfortunately. My guess would be that\none of the request made by the system to the kernel is wrong/denied/not\nsupported and the system does not like it.\nSince it only happen on 2012 R2, I would guess that it is an unsupported\nnew request.\nIf you need any help on it, feel free to ask !\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/200#issuecomment-228721506,\nor mute the thread\nhttps://github.com/notifications/unsubscribe/ADiUpqrAYraZH0OlJljp_99NTn4MtKWsks5qP7VQgaJpZM4HyrKa\n.\n. i have windows 7 on a vm in the office,\nI can try to get logs for you for windows 7 too,\n\nIn my case attaching filespy made no diference as far as i could tell.\n2016-06-27 14:55 GMT+02:00 Roel van Uden notifications@github.com:\n\nYeah, it happens since Windows Server 2012 R2. That is NT6.3+. That\nincludes Windows 8.1 and Windows 10. I think it would be useful to see the\ndifferences in logging between Windows 7/8 and 8.1. @Liryna\nhttps://github.com/Liryna posted logs before and after attaching\nFileSpy, which may prove useful too, but if FileSpy is hooking into things,\nthe actual difference may be obscured. A change log would be good, too, but\nI doubt we'll find that.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/200#issuecomment-228737205,\nor mute the thread\nhttps://github.com/notifications/unsubscribe/ADiUpt14KaZk7_tpuzkL_jQiipJ5JIRBks5qP8gngaJpZM4HyrKa\n.\n. \n",
    "mnadareski": "I apologize for gravedigging, but with the latest release of Dokan (tested with both a C# application using Dokan.NET and the provided mirror example code), I have been getting the same The device is not ready error as described above. Any assistance would be appreciated.\nPlease see the linked issue above Share Virtual Drive on Network? for more information about my situation, if relevant.. ",
    "Stefitzky": "Thanks for your super quick reply\nYes, I already did all of the above. HOWEVER, I found the problem: it was the missing x86 (32bit) MS VC Redistributable. I believe your installation package only comprises the 64bit version, so I had to install the 32 bit version manually. Now everything works as a charm.\nI found the solution as soon as I tried running the 32bit mirror example (the normal one, not the FUSE version). That one (as opposed to the FUSE library) issued an error message requesting the VC  redist and died horribly, so it was clear what was missing.\nFor future releases, I think it would be nice if fuse_mainloop() would die screaming havoc, too, if any redistributable is missing, instead of exiting with RC 0 (which looks like ok).\nPlease mark this incident as closed. \nThanks for your great work!\n. Both, actually. First I installed DokanSetup.exe, then it occurred to me (even before I compiled anything) that the redistributable might be missing, so I installed DokanSetup_redist.exe (and did a reboot).\n. Thanks for your hint, DokanResetTimeout is just what I hoped for. Since FUSE is only a wrapper around Dokan, I guess DokanResetTimeout will most probably work with it, too. I will try in any case.\nAs to your question: it is not the FUSE code that takes too long, it is other processes on the system that drain away the I/O (by means of CPU and or actual disk access) that lead to Dokan being killed. Dokan by itself seems not to run into performance problems (as far as I can tell for now).\nLet me report back to you as soon as I did some tests with DokanResetTimeout.\n. I constructed a test setup on a virtual machine with Windows 7 that starts a software with heavy random CPU load during about one minute (after which the program just waits for the drive process to end), while mounting a (FUSE) Dokan based mirror drive in a forked process (i.e. concurrently). Without any modifications, this gives me the expected results (drive goes away, not always, but usually).\nThen I tried to reset the time Dokan waits for its worker threads. The function DokanResetTimeout just resets the timeout for one (the next) Dokan call - obviously this is not usable with FUSE, as it wraps the Dokan calls in its own functions.\nHowever, there is an option daemon_timeout that can be set at FUSE initialization time (via fuse_opt_add_arg). That one should do the trick (globally). If I set this to a large value (60 seconds), the drive indeed seems to have better chances of survival, but even then, the drive just goes away most of the time. Not always right at the beginning during the high CPU load period (as it does without the daemon_timeout setting), but sometimes a little later while browsing the contents with the explorer. And sometimes it just vanishes minutes after the software startup, without any user interaction (as though some process stopped waiting for something to happen, because nothing continued to happen for too long...).\nThe drive almost always goes away immediately if a Windows explorer is open during software startup. I started to believe that maybe the explorer does some initial scan of the directory structure that fails to complete in time, which then kills the drive. My impression was that the deeper the structure, the higher the chances the drive dies. While investigating how deep the directory tree must be in order to make the drive fail always, I found out that you cannot create paths with Dokan FUSE that are longer than about 248 bytes?!? According to some digging around in different forums this seems to be some old limitation of the Windows file API (used by Cygwin). \nNow I turned to the question of virus scanners; maybe these keep Dokan busy? I have MS Security Essentials active on this machine, so I added the drive path (Q:) to the ignore list. And from this point on, the machine always went directly and immediately to a blue screen whenever I started the drive. So Dokan does not like MS Essentials exclude lists or vice versa (at least on Win7). Removing the exclude from MS Essentials resolved this issue.\nI then did the same testing (not the MS Essentials part though) on a physical machine (Win7 Pro 64bit, Quadcore, 32 GB RAM). Here, Dokan FUSE was running very reliably, which made me a little happy. I wrote a script that zips and unzips some directories on the FUSE drive to do some stress testing. When the drive kept working ok for a couple of hours, I started to feel really happy, but then the first blue screen occurred. So I tried again. This time, it took a few minutes of zipping/unzipping till BSOD. The third time, the script was running for over a day before the machine went down.\n. wrong button, sorry...\n. ",
    "jshousephd": "Hi Liryna,\nThank you for taking a look at that. Is this the version you want me to install?\nhttps://github.com/dokan-dev/dokany/releases/tag/v0.7.4\n\nI had installed the 1.0.0.102 this morning after I found your site, but still have the old 0.6 there. \n1) is the 1.0.0.102 sufficient?\n2) If I remove 0.6 will my SSHFS stop working?\n. Thank you.\n. ",
    "bailey27": "@Corillian ,\nI changed the behavior of SL_OPEN_TARGET_DIRECTORY to fix https://github.com/dokan-dev/dokany/issues/249 (MS Word 2007 & 2010 can not save file normally in mirror.exe).\nIf SL_OPEN_TARGET_DIRECTORY is specified, then the caller expects to open the parent dir of the file.  But it also expects to be told in create Information if the child did not exist.\n. I've tried many times to reproduce this bug.\nI made it happen right away the first time.\nSince then, I couldn't make it happen except one time when I wasn't set up for debugging it.\nI think return STATUS_INVALID_PARAMETER is probably right.\nI will put that change in my fs and see how that goes.\n. I got it to happen again with return STATUS_INVALID_PARAMETER.\nUnfortunately, I wasn't debugging.\n. We get to MirrorMoveFile() from DokanSetRenameInformation().\nI think it should be getting there from NtSetInformationFile() with rename information.\nI think in that case, Windows would change the name of the file, but the open handle (which I read needs to be opened DELETE for this to work, and I see the last time the Word tmp file is opened it is  for DELETE and also other things) would still be valid.  So the name of the file changes, but the handle stays valid.\nI think MirrorMoveFile() should use SetFileInformationByHandle() and set the file rename information.  It is available in Vista and later.\nI think changing MirrorMoveFile() to do that will fix the bug.\nAnd I think MirrorGetFileInformation() should return STATUS_INVALID_PARAMETER if there isn't a handle.\nHere is the code I tried, and it seems to work\n```\ndiff --git a/samples/dokan_mirror/mirror.c b/samples/dokan_mirror/mirror.c\nindex 6bdec5e..7435cbc 100644\n--- a/samples/dokan_mirror/mirror.c\n+++ b/samples/dokan_mirror/mirror.c\n@@ -590,16 +590,7 @@ static NTSTATUS DOKAN_CALLBACK MirrorGetFileInformation(\n   if (!handle || handle == INVALID_HANDLE_VALUE) {\n     DbgPrint(L\"\\tinvalid handle\\n\\n\");\n\n// If CreateDirectory returned FILE_ALREADY_EXISTS and\n// it is called with FILE_OPEN_IF, that handle must be opened.\nhandle = CreateFile(filePath, 0, FILE_SHARE_READ, NULL, OPEN_EXISTING,\nFILE_FLAG_BACKUP_SEMANTICS, NULL);\nif (handle == INVALID_HANDLE_VALUE) {\nDWORD error = GetLastError();\nDbgPrint(L\"GetFileInfo failed(%d)\\n\", error);\nreturn DokanNtStatusFromWin32(error);\n}\nopened = TRUE;\nreturn STATUS_INVALID_PARAMETER;\n   }\n\nif (!GetFileInformationByHandle(handle, HandleFileInformation)) {\n@@ -776,30 +767,52 @@ MirrorMoveFile(LPCWSTR FileName, // existing file name\n                PDOKAN_FILE_INFO DokanFileInfo) {\n   WCHAR filePath[MAX_PATH];\n   WCHAR newFilePath[MAX_PATH];\n-  BOOL status;\n+  HANDLE handle;\n+  DWORD bufferSize;\n+  BOOL result;\n+  size_t newFilePathLen;\n+\n+  PFILE_RENAME_INFORMATION renameInfo = NULL;\nGetFilePath(filePath, MAX_PATH, FileName);\n   GetFilePath(newFilePath, MAX_PATH, NewFileName);\nDbgPrint(L\"MoveFile %s -> %s\\n\\n\", filePath, newFilePath);\n\nif (DokanFileInfo->Context) {\n// should close? or rename at closing?\nCloseHandle((HANDLE)DokanFileInfo->Context);\nDokanFileInfo->Context = 0;\n\nhandle = (HANDLE)DokanFileInfo->Context;\nif (!handle || handle == INVALID_HANDLE_VALUE) {\nDbgPrint(L\"\\tinvalid handle\\n\\n\");\nreturn STATUS_INVALID_HANDLE;\n   }\n-\nif (ReplaceIfExisting)\nstatus = MoveFileEx(filePath, newFilePath, MOVEFILE_REPLACE_EXISTING);\nelse\n\nstatus = MoveFile(filePath, newFilePath);\n\nif (status == FALSE) {\nDWORD error = GetLastError();\nDbgPrint(L\"\\tMoveFile failed status = %d, code = %d\\n\", status, error);\nreturn DokanNtStatusFromWin32(error);\n\nnewFilePathLen = wcslen(newFilePath);\n\n// the FILE_RENAME_INFORMATION struct has space for one WCHAR for the name at the end, so that \n// accounts for the null terminator\n\nbufferSize = (DWORD)(sizeof(FILE_RENAME_INFORMATION)+newFilePathLen*sizeof(newFilePath[0]));\n\nrenameInfo = (PFILE_RENAME_INFORMATION)malloc(bufferSize);\nif (!renameInfo) {\nreturn STATUS_BUFFER_OVERFLOW;\n}\n\nrenameInfo->ReplaceIfExists = ReplaceIfExisting ? TRUE : FALSE; // some warning about converting BOOL to BOOLEAN\nrenameInfo->RootDirectory = NULL; // hope it is never needed, shouldn't be\nrenameInfo->FileNameLength = (DWORD)newFilePathLen*sizeof(newFilePath[0]);  // they want length in bytes\n\nwcscpy_s(renameInfo->FileName, newFilePathLen+1, newFilePath);\n\nresult = SetFileInformationByHandle(handle, FileRenameInfo, renameInfo, bufferSize);  \n\nfree(renameInfo);\n\nif (result) {\nreturn STATUS_SUCCESS;\n   } else {\nreturn STATUS_SUCCESS;\nDWORD error = GetLastError();\nDbgPrint(L\"\\tMoveFile error = %u\\n\", error);\nreturn DokanNtStatusFromWin32(error);\n   }\n }\n\n```\n. @Liryna ,\nThanks for the tip about needing to have explorer open in the folder.  I can reproduce it easily now.\nI still don't know what's happening now. \nBut I did notice just now that in the code I submitted, I used FILE_RENAME_INFORMATION instead of FILE_RENAME_INFO.\nThey are the same except for a BOOL instead of BOOLEAN and a DWORD instead of a ULONG. I think they are the same functionally. \nBut FILE_RENAME_INFO is defined if you include windows.h, but FILE_RENAME_INFORMATION  looks like it's defined in a ddk header that some people who would want to compile mirror.c in your release might not have.\nI think it would be better to change it to FILE_RENAME_INFO.\n. @Liryna ,\nWeird.  on MSDN they say there's a BOOL there.\nhttps://msdn.microsoft.com/en-us/library/windows/desktop/aa364398(v=vs.85).aspx\nI was thinking just a few minutes ago that it could have been bad before.  I might have left heap garbage in the upper bytes of the BOOL if there were really a BOOL there.  But I guess I was lucky, and it really didn't matter.  Thanks for changing it.  \nIt looks to me like when word saves the file, it creates a tmp file for saving the new version of the document.  Then it moves the old docx to another tmp file.  Then it writes the new doc to the first tmp file.  Then it moves the first temp file to the original filename.  Then it deletes the 2nd tmp file (with the old version of the doc in it).\nAnd when it fails, then you have the 2nd tmp file (the one with the old version of the doc) still there.\nI had some debug info I wanted to paste here but I lost it.\nBut what it said was it could not delete the tmp file because it was not found (in the delete upon cleanup).\nNow after word failed, I cleared the hidden attribute of an undeleted temp file.  \nOn my mirror drive, I cannot read the file.  \nBut in my real directory, I can.\n```\nM:>c:readtest.exe ~WRL0003.tmp\nread failed, lasterr = 87\nM:>c:\\tmp\\readtest.exe  c:\\tmp\\mirror\\~WRL0003.tmp\nread 16 bytes\nfirst four bytes of buf = 0x50 0x4b 0x03 0x04\n```\nI don't see any reads happening in mirror.\nI can still get file info on it on the mirror drive.\nM:\\>c:fileinfo.exe ~WRL0003.tmp\ndwFileAttributes = 0x00000080\nftCreationTime = 131115155485646939\nftLastAccessTime = 131115882798737574\nftLastWriteTime = 131115882799206335\ndwVolumeSerialNumber = 0x19831116\nnFileSizeLow = 13217\nnFileSizeHigh = 0\nnNumberOfLinks = 1\nnFileIndexLow = 104741\nnFileIndexHigh = 1179648\nCould it be that dokan1.sys is what is failing?  That it returns an error when word tries to read the file and nothing about it gets to mirror?\nI haven't been looking at the driver. I will look there next.\n. I tried using the driver I built from (almost) current git source.  And I couldn't reproduce the bug.\nI switched to the driver built from the RC3 source zip, and I got word to fail. And I unhid the .tmp file and I couldn't read it.\nIn the driver, I see it is getting here when I try to read the file.  It thinks the file is a directory.\n```\nif (fcb->Flags & DOKAN_FILE_DIRECTORY) {\n      DDbgPrint(\"   DOKAN_FILE_DIRECTORY %p\\n\", fcb);\n      status = STATUS_INVALID_PARAMETER;\n      __leave;\n }\nBreakpoint 1 hit\ndokan1!DokanDispatchRead:\nfffff801a3852af0 4889542410      mov     qword ptr [rsp+10h],rdx\nkd> g\n[DokanFS] ==> DokanRead\n[DokanFS]   ProcessId 1132\n[DokanFS]   FileName: ~WRL0001.tmp FCB.FileName: \\~WRL0001.tmp\n[DokanFS]   ByteCount:16 ByteOffset:0\n[DokanFS]    DOKAN_FILE_DIRECTORY FFFFE000BE7F75B0\nBreakpoint 3 hit\ndokan1!DokanDispatchRead+0x494:\nfffff801a3852f84 c74424300d0000c0 mov     dword ptr [rsp+30h],0C000000Dh\n```\nThen I tried to read it from the root dir of the fs (c:\\tmp\\mirror) and I could read it ok.\n. This is what I've been able to find out so far.\nI close word, close the explorer window, run process explorer and search for ~WRL0001.tmp and don't find any open instance of it.\nThen I run my program to open the file and read 16 bytes from it.\nThen I break on my breakpoint in DokanDispatchCreate() in the driver and watch the filename to see when it's interesting.\nWhen it calls DokanGetFCB() to get the fcb for this file, it finds an fcb for this file in the linked list of active fcbs.\nThis fcb has flags = 1, which is for DOKAN_FILE_DIRECTORY.\nIt looks like there are only two fcbs active (open?).  One if for \\ and the other is for this file.\nSo how did that file's flags get set to 1, and why is there still and fcb for it if no process had it open before m program opened it?\n. I'm not really sure.  When I try to reproduce this bug with word, I do see some creates with SL_OPEN_TARGET_DIRECTORY.  I changed the DbgPrint about SL_OPEN_TARGET_DIRECTORY in  DispatchCreate() in the dll to print the fileName (before the file name part gets stripped), and I see in dbgview that this option is being used only to open with filename \\ and not the tmp file.  I think if the temp file were being specified h an SL_OPEN_TARGET_DIRECTORY then that could explain it.  But it looks like the temp file is never opened with SL_OPEN_TARGET_DIRECTORY.\nI have not been able to reproduce the actual bug at all today.  Until just now, because I said that :-)\nBut what I did see is that if I try to repro the bug but can't repro it, then I exit word and close the explorer window, do a dir /a in the directory and see there is no ~WRL0001.tmp file anymore.\nThen I set a breakpoint in DokanGetFCB() and do something to trigger and look at the fcbs in the list and there is one for ~WRL0001.tmp sill there. But it doesn't have the directory flag set.\nI think somehow the driver is leaking the fcb of a deleted file.\nOr maybe the kernel still thinks there's something to be done with that file and the fcb should still exist?   But what?\nI tried to reproduce this by just renaming a file (which mirror now does with SetFileInformationByHandle()) and I didn't have a stale fcb in the list.\n. Yes, you right!\nBut, it didn't look like that from the DLL.\nI put this code in the DLL to see what file was being opened with SL_OPEN_TARGET_DIRECTORY.\n```\ndiff --git a/dokan/create.c b/dokan/create.c\nindex e7060f0..5fb7be9 100644\n--- a/dokan/create.c\n+++ b/dokan/create.c\n@@ -104,8 +104,12 @@ VOID DispatchCreate(HANDLE Handle, // This handle is not for a file. It is for\nfileName = (WCHAR )((char )&EventContext->Operation.Create +\n                        EventContext->Operation.Create.FileNameOffset);\n+                    \n+  DbgPrint(\"Create before CheckFileName fileName = %s\\n\", fileName);\nCheckFileName(fileName);\n+\n+  DbgPrint(\"Create after CheckFileName fileName = %s\\n\", fileName);\nRtlZeroMemory(&eventInfo, sizeof(EVENT_INFORMATION));\n   RtlZeroMemory(&fileInfo, sizeof(DOKAN_FILE_INFO));\n@@ -159,7 +163,7 @@ VOID DispatchCreate(HANDLE Handle, // This handle is not for a file. It is for\n     options |= FILE_DIRECTORY_FILE;\n     options &= ~FILE_NON_DIRECTORY_FILE;\n\nDbgPrint(\"SL_OPEN_TARGET_DIRECTORY specified\\n\");\n\nDbgPrint(\"SL_OPEN_TARGET_DIRECTORY specified filename was %s\\n\", fileName);\n// strip the last section of the file path\n WCHAR *lastP = NULL;\n```\n\n\nIt prints out this every time (that the filename is \\ )\n[1100] Create before CheckFileName fileName = \\\n[1100] Create after CheckFileName fileName = \\\n[1100] SL_OPEN_TARGET_DIRECTORY specified filename was \\\nBut when I break on the debug print about SL_OPEN_TARGET_DIRECTORY in DokanDispatchCreate() in the driver\nif (irpSp->Flags & SL_OPEN_TARGET_DIRECTORY) {\n      DDbgPrint(\"  IrpSp->Flags SL_OPEN_TARGET_DIRECTORY\\n\");\n}\nAnd step through the code, I can see that the file is the temp file, that an fcb with that filename is created, and I can watch that filename get marshaled into the eventContext, and I even du'ed around in the eventContext until I found it.\nBut somewhere it's getting changed.  I thought it was maybe CheckFileName() in the dll, but it wasn't.\nSo, I think you are right.  And I think there is some race condition as to whether this temp file gets an fcb created for it as a directory or not.  And when in does get created as a directory first, which doesn't happen all that often, then word can't use the file, so it has the error.\nI agree that the driver should handle SL_OPEN_TARGET_DIRECTORY as you say.   I think that will fix this  bug.\n. I changed my driver (based on current git source) to deal with SL_OPEN_TARGET_DIRECTORY.\nIt removes the file name from the path, ors in FILE_DIRECTORY_FILE in the create options, makes sure FILE_NON_DIRECTORY_FILE is clear, and makes sure that the DLL doesn't get the SL_OPEN_TARGET_DIRECTORY in the flags (by masking it it out from the EventContext->Flags in SetCommonEventContex().  So the dll should process it like a normal open directory request.  I don't see the DLL getting any SL_OPEN_TARGET_DIRECTORY after this.\nI haven't tried that hard to reproduce the actual word bug, but it hasn't happened yet.\nBTW, I moved my word file into  a subdir.  So now it's in \\blah\\1.docx.\nWhen I run my new driver (based on the current git source), and then open and save the file in word, exit word and close the explorer window,  then do my type foo.txt in the root dir and watch what happens in DokanGetFCB(), I see there is an fcb in the list for \\blah~WRL0001.tmp, and it has Flags = (16) DOKAN_DELETE_ON_CLOSE.  I think this could be bad.\nI tried it with the plain git source (no SL_OPEN_TARGET_DIRECTORY change) and I found it still having Flags = (16) DOKAN_DELETE_ON_CLOSE.\nI didn't notice this delete on close flag before, I think because I was using the RC3 driver.\nThen I tried the RC3 source with and without my changes, and there is fcb there for \\blah~WRL0001.tmp but no DOKAN_DELETE_ON_CLOSE (and no directory bit either this time).\nWhile I was testing it, I notice that when I do \"type foo.txt\" in my M:\\, then somebody starts trying to open various files like \\1.docx, \\2.docx, \\blah~WRL0001.tmp, etc.\nSo maybe it's normal for these files to be there because somebody's trying to open them.  But I think the DELETE_ON_CLOSE flag being there when I run the current git source is weird and maybe bad.\n. I'm not really sure now that SL_OPEN_TARGET_DIRECTORY should be handled only in the driver.\nIt think what MS wants to do with SL_OPEN_TARGET_DIRECTORY is \n\"Really open a handle to the directory that the file is in, but also check if the file exists, and if it doesn't, then return STATUS_SUCCESS, but set in the info FILE_DOES_NOT_EXIST\"\nI think the real problem now is that the driver ends up getting an fcb for the wrong file.\nI think maybe the only change needed about this is that the driver should, if SL_OPEN_TARGET_DIRECTORY  is set, then get an fcb for the parent dir instead?\n. I backed out the changes from https://github.com/dokan-dev/dokany/commit/59d08ffca07f69c40d9d46e5a687816cb72d0a49, and now I don't see DOKAN_DELETE_ON_CLOSE in the fcb for the tmp file that exists after word exits and explorer is closed.\n. I don't have any changes ready to commit.\nI did exactly what you said in the last paragraph (except I removed the flag right before dispatching the event to dokan1.dll)   And there was no wrong fcb then. Except for this other problem with DOKAN_DELETE_ON_CLOSE which seems to be in the current source and not in RC3.  If I back out the changes in the commit that @Liryna mentioned (https://github.com/dokan-dev/dokany/commit/59d08ffca07f69c40d9d46e5a687816cb72d0a49), then that problem goes away.\n\"If you say file does not exist, would this mean that the folder does not exist or the file does not exist?\"\nI'm saying that I think that if SL_OPEN_TARGET_DIRECTORY is specified, and STATUS_SUCCESS is returned, but info has FILE_DOES_NOT_EXIST, then it means the parent directory was opened, but the file does not exist.\nI'm basing that on what I read in this tread on OSR\nhttps://www.osronline.com/showthread.cfm?link=261045\nAlso,  there is this code in the dokan DLL.\nhttps://github.com/dokan-dev/dokany/blob/e49cf5b/dokan/create.c#L216-228\nBut I think that isn't right, because the status it is checking is about if the directory was opened, not the file.\nI know what you say is what MS says, but their documentation isn't always complete.\nAnd if it weren't like this, then what would be the purpose of SL_OPEN_TARGET_DIRECTORY?   Why couldn't the caller just open the directory?\nIf it is as I think, then the purpose of SL_OPEN_TARGET_DIRECTORY  would be so somebody can open the parent directory of a file and also check if the file exists at the same time.\n. I had a try at making it do what I think it should do about SL_OPEN_TARGET_DIRECTORY\nin the driver\nhttps://github.com/bailey27/dokany/commit/86e878fb0095d973560812d98ed7339c3ceaefdc\nand in the dll\nhttps://github.com/bailey27/dokany/commit/e7f01e97deda0d0ea1c73b547d6e0033507cd004\n@marinkobabic ,\nYes, when you make word fail to save the file, then the first temp file (the one uses for saving the previous version of the doc, which is usually \\blah~WRL0001.tmp), is still there.\nThe problem was it's fcb had the directory bit set, and word couldn't use it like a normal file.\nI think this happened because, as you suggested, the dir bit was getting set because of the mis-handling of SL_OPEN_TARGET_DIRECTORY.\nI think there are two two other problems.\nI think that there are stale fcb's.\nAfter I exit word and close explorer, if I do \"M:\\ type foo.txt\" in the root of my mirror drive, and break in DokanGetFCB, I see fcbs there for \\1.docx and \\blah~WRL0001.tmp.  \\1.docx hasn't existed for a while on that fs (maybe two days?).  And there isn't any \\blah~WRL0001.tmp.\nI think \\1.docx comes from some \"recent files\" thing in explorer trying to open it and failing, but the fcb gets left around.\nThe other problem is that this fcb for \\blah~WRL0001.tmp has the delete on close flag (but the one for \\1.docx does not).\nIf I back out the changes in https://github.com/dokan-dev/dokany/commit/59d08ffca07f69c40d9d46e5a687816cb72d0a49, then the fcb for \\blah~WRL0001.tmp doesn't have the delete on close flag set.\n. @marinkobabic ,\nI think I am passing the original name.\nhttps://github.com/bailey27/dokany/blob/86e878fb0095d973560812d98ed7339c3ceaefdc/sys/create.c#L894-899\nIf it's SL_OPEN_TARGET_DIRECTORY, then parentDir is not null, and it passes fileName.  In this case, fileName doesn't belong to the fcb, parentDir does.\n@Liryna ,\n\"I also think that a request on \\ should be denied (STATUS_ACCESS_DENIED) when CreateDisposition = FILE_CREATE FILE_OVERWRITE FILE_OVERWRITE_IF FILE_SUPERSEDE\"\nI made it so it returns access denied if there isn't a parent dir.  I Don't understand about the CreateDisposition.  Maybe you could check for that case? \n. I forgot to free fileName if DokanGetParentDir() returns an error.\nhttps://github.com/bailey27/dokany/commit/b397b43b04cae255efb52f45abf296e2e3e9699a\nI put your debug print in my driver.  \nTo reproduce the problem, I browse to m:\\blah in explorer, then open the file 1.docx in Word 2010 and modify and it and save it and close it\nI was wondering if maybe it could leak the fcb because in these two places it does __leave without freeing the fcb.\nhere\nhttps://github.com/bailey27/dokany/blob/b397b43b04cae255efb52f45abf296e2e3e9699a/sys/create.c#L1040-1043\nand. here\nhttps://github.com/bailey27/dokany/blob/b397b43b04cae255efb52f45abf296e2e3e9699a/sys/create.c#L1062-1065\nI saw some of those debug prints about oplock status, so I changed them to also print fcb->FileName (not fileName). \nThen I saw this\n[DokanFS]    FsRtlOplockFsctrl failed with 0xc000000d, fileName = \\blah\\1.docx\nThen when I save the file, \\blah\\1.docx gets renamed to \\blah\\~WRL0001.tmp.\nThe filename in the fcb should get changed to \\blah\\~WRL0001.tmp when it gets renamed.\nSo maybe it's leaking the fcb when the FsRtlOplockFsctrl() returns an error?\n. No, the file is saved.  I haven't seen it not be saved since I put the changes about SL_OPEN_TARGET_DIRECTORY in the code.\nI have been debugging the fcb leak since then.\nI'm sorry about not pasting logs.\nIt looked to me like the  reason the file wasn't being saved before I changed the SL_OPEN_TARGET_DIRECTORY behavior was that the fcb for that file picked up the DOKAN_FILE_DIRECTORY bit because of the wrong SL_OPEN_TARGET_DIRECTORY behavior before.  Then when Word tried to read from the file, the read returned an error because everybody thought it was a directory now.  And I think the fcb leak caused it to always be a directory after that happened.\nBut the erroneous directory bit isn't happening now, so word always saves the file.\nI think what happens now about the fcb leak is \nWord tries to open \\blah\\1.docx\nThe FsRtlOplockFsctrl() returns an error, causing an fcb to be leaked for \\blah\\1.docx.  It leaks because the fcb isn't freed then, and  DokanDispatchCreate() returns STATUS_INVALID_PARAMETER (0xc000000d).  \nSo there is now an fcb for \\blah\\1.docx with FileCount 1, and no corresponding close will happen to decrement it because of this create returned an error.\nWord seems to shrug off this failure, and it opens \\blah\\1.docx again (I think several times actually), and then word renames it to \\blah\\~WRL0001.tmp.  \nWhen the rename happens, the fcb (which has +1 too many FileCount  because of the leak) has its FileName changed to \\blah\\~WRL0001.tmp.  And the +1 too many count is still there.\nWhen I exit everything and type foo.txt to make the driver walk through the list of active fcbs, there is one for \\blah\\~WRL0001.tmp still there.  But I think it was leaked when it was called \\blah\\1.docx, because of the oplock failure.\n. Here is the log.\nhttp://pastebin.com/bevL9iQU\nThe oplock failures happens even before I open the file in Word.\nSo it must be explorer that is trying to open \\blah\\1.docx and getting the oplock failure.  It also tries to open and gets an oplock failure on  \\1.docx (this file hasn't been there in the fs for 2 days).  And I see the fcb for \\1.docx leaked in the fcb list as well.\nYou can see in the log that when the rename happens, the FileCount is 2.\n```\nDDbgPrint(\"   rename: %wZ => %ls, FileCount = %u\\n\", fcb->FileName, renameContext->FileName, (ULONG)fcb->FileCount);\n00100802    22.72289467 [DokanFS]    rename: \\blah\\1.docx => \\blah\\~WRL0001.tmp, FileCount = 2 \n```\n. If I free the allocated things (fcb, ccb, eventContext)  if the oplock things are causing DokanDispatchCreate() to return an error, then the fcb leak doesn't happen.\nhttps://github.com/bailey27/dokany/commit/17ea0a574be66da63957867450161fc4e98c0021\nHere is the log\nhttp://pastebin.com/Jdj1gc97\nI was typing foo.txt after closing everything, and it wasn't seeing \\blah\\~WRL0001.tmp in the fcb list.\n. I thought you wanted me to make sure that the fcb was being renamed.  I stepped through it in the debugger, and it appeared to be so.\nI already did the pull request before I saw your last comment.\n. Thanks.  It has been a pleasure working with Dokany.\nI tried what you said, and works!\nI thought it wasn't working, but the problem was running winfstest on a filesystem I created with my program running the old way (as admin, acquiring se name, and exporting Get/SeFileSecurity).\nWhen I run it without admin and without exporting Get/SetFileSecurity, and I make a new filesystem, it passes the 169/171 tests like it did before.\nSo now I  made it so it tries to get se name, and if not, it sets those functions to NULL.\nThank you very much!\n. It doesn't really work.\nWhen I didn't run as administrator and set the Get & SetFileSecurity callbacks to NULL, I couldn't copy files OUT of my filesystem.  But I could copy them in.\nI couldn't copy them out with either the copy command in a cmd shell, or with file explorer.\nI could copy them out with the cygwin cp command.\nI could copy (with copy cmd) a file to an existing file within my fs.  But I couldn't copy a file to a new file within my fs.\nIt looks like whatever cmd and explorer does (CopyFile()?) has to be able to Get (at least some of) the file security.\nI looked at the docs for GetFileSecurity(), and it looks like it doesn't always need SE_SECURITY_NAME depending on what it's asked for.\nI tried running not as administrator but exporting the Get/SetFileSecurity() callbacks, and my fs is working better. The file copy seems to be ok again.\nI'll keep testing.\n. I didn't get very far, but I did notice this.\nRight after Visual Studio actually creates the .sdf file, and before it deletes it, there two GetFileInfo that fail \ne.g.\nGetFileInfo 0093\nresult =  0\nFileAllInformation\nDispatchQueryInformation result =  2147483653\n\n2147483653 is 0x80000005 STATUS_BUFFER_OVERFLOW\nMaybe that's not supposed to happen, and maybe that's why Visual Studio gives up and deletes the file?\nI was thinking that maybe the problem is that the buffer is too small because there's only enough space in it to hold M:\\cppcryptfs\\cppcryptfs.sdf and not C:\\tmp\\mirror\\cppcryptfs\\cppcryptfs.sdf\nI tried it with  mirror /r d:\\ (so the path length wouldn't be different) and it still failed.\n. I really thought I did tried this before.  But Apparently I didn't.\nIf I disable Windows Defender real time scanning, then the problem doesn't happen.\nOr, if I leave it enabled, but exclude the Dokan drive letter from scanning, then it also doesn't happen.\nSo the problem must be caused by Windows defender.\nI see in the logs \"AccountName: SYSTEM, DomainName: NT AUTHORITY\" trying to access the file.\nAnother thing I noticed is that if I put a huge file in a zip file and extract it by copy and paste from Explorer, the problem doesn't happen either (regardless of whether or not Windows Defender is configured to scan that drive).\nFrom the logs, it looks like if a huge file is extracted, then \"AccountName: SYSTEM, DomainName: NT AUTHORITY\" doesn't even bother with it.\nSo I guess the workaround would be to exclude in Windows Defender the drive letters one uses for mounting Dokany-based file systems.\nI think t would be interesting to find why this problem really happens, though.\n. I think I was running RC-3 release (not Dbg) when I first saw it.\nJust now I ran the Dbg uninstall, rebooted and installed from RC3 DokanSetup_redist.exe in my VM (and rebooted again to make sure).  I looked and verified the signature of dokan1.sys.\nIt happens with the non-debug RC-3.\nI also tried excluding the root folder of the mirrored fs (c:\\tmp\\mirror for me), but that didn't help.\nOnly excluding the Dokany drive letter seems to work (or turning off real-time scanning completely)..\n. dokan1.dll is signed.\nThere is a dokan1.dll in c:\\windows\\system32 and there is one in C:\\Program Files\\Dokan\\Dokan Library-1.0.0\\sample\\mirror.  Both are signed ISLOG.  They are the same file (same sha25sum: 51d92eed83819134a8b8c7ac338ebc3935960ae79a428d6f595745d68e78e14b).\nIn C:\\Program Files\\Dokan\\Dokan Library-1.0.0\\sample\\mirror there is mirror.exe but it is NOT signed.\nI think it won't matter.  I think Windows Defender cares about a possible infection in the file being extracted from the .zip file and not about what program is involved in extracting it.\n. I think it is maybe better to not put a dokan1.dll in C:\\Program Files\\Dokan\\Dokan Library-1.0.0\\sample\\mirror.  When I tested my fix for https://github.com/dokan-dev/dokany/issues/267 I needed to rename it in C:\\Program Files\\Dokan\\Dokan Library-1.0.0\\sample\\mirror so mirror.exe woudn't load the old DLL.\n. Yes, I think it is a good idea.  It was my mistake not noticing it was there the first time I tried a different dll.  I should have replace the one in the mirror directory.\n. I think this bug mabye has something to do with oplocks.\nDefender seems to use them.\nI was reading this about FsRtlCheckOplock() on MSDN:\n\nIf a file system or filter driver uses opportunistic locks, it must call FsRtlCheckOplock from any dispatch routines for I/O operations that can cause opportunistic lock breaks. This rule applies to the following types of I/O operations, because these operations can cause opportunistic lock breaks:\nIRP_MJ_CLEANUP\nIRP_MJ_CREATE\nIRP_MJ_FILE_SYSTEM_CONTROL\nIRP_MJ_FLUSH_BUFFERS\nIRP_MJ_LOCK_CONTROL\nIRP_MJ_READ\nIRP_MJ_SET_INFORMATION\nIRP_MJ_WRITE\n\nBut I see it only in these files in sys\nC:\\git\\forks\\dokany\\sys>grep -l FsRtlCheckOplock *.c\ncreate.c\nlock.c\nread.c\nMaybe the driver isn't checking about oplocks in all the places it should and that is causing this to happen?\n. I think the driver should check if there should be an oplock break by calling FsRtlCheckOplock() in all of those operations listed on MSDN.\nI did a hasty addition of FsRtlCheckOplock() for all the operations that didn't already have it except IRP_MJ_FILE_SYSTEM_CONTROL.\nNow the bug does not happen.\n. Yes, I see it in fastfat as well.  When they are doing that, they acquire a shared lock on the vcb but an exclusive lock on the fcb.  I will change my banch to do that as well and test it.\n. I don't know if \"oplock break\" is the right term.  \nI mean I think the driver needs to make the FsRtlCheckOplock() call in in those operations in case somebody has an oplock and the irp needs to  have DokanRegisterPendingIrp() called on it later.\n. Here are my changes\nhttps://github.com/bailey27/dokany/commit/9527353b15d56473b8e99274a3bcf7aa86b35672\nI also changed DokanOplockRequest() to get an exclusive lock on the fcb as the sample drivers do as per @marinkobabic 's suggestion.\nI cannot find where fastfat is using FsRtlCheckOplock() with IRP_MJ_FILE_SYSTEM_CONTROL.  So I cannot figure out where or how I should do that.\nThe fastfat cleanup.c has, for windows 8 and higher, two additional uses of FsRtlCheckOplockEx() (not FsRtlCheckOplock()).\nfastfats' cleanup is way more complicated than dokany's.  And it looks like fastfat has way more state about the fs than dokany does (e.g. is a directory empty).\nI think these calls to FsRtlCheckOplockEx() are there to gain an performance improvement with oplocks.  I think they aren't needed for correct behavior.  So I didn't put them there.\nAlso, in fastfat's cleanup, they actually ignore the return value for FsRtlCheckOplock() (and pass in null for the callback parameters).  The comments in fastfast say it will never return pending there.  But I don't see any harm in passing in the callback parameters and checking the result here as the code does in all the other places where it calls FsRtlCheckOplock().\n. Yes, it solves the zip issue.  I cannot reproduce it anymore with these changes.\n. @marinkobabic commented that I should handle return status other than STATUS_PENDING from FsRtlCheckOplock().\nI did this in this commit.  I changed the handling of it in read.c too.\nhttps://github.com/bailey27/dokany/commit/0c64b849c8ce817037dcd5e67dac29bdd33971e1\nI was looking at the lock code about this.\nThere's a variable in the disk control block dcb->FileLockInUserMode.\nWhenever the driver gets to DokanDispatchLock(), then it always allocates an eventContext.  But if dcb->FileLockInUserMode is false, then it ends up calling DokanCommonLockControl(), which does not dispatch the event to user mode.  \nSo I think it's leaking the eventContext in this case.\nAlso, DokanCommonLockControl() calls FsRtlCheckOplock() with the eventContext and the oplock callback (DokanOplockComplete()).  So if FsRtlCheckOplock() did return pending on the operation, then this lock request would get dispatched by DokanOplockComplete() to user mode even though dcb->FileLockInUserMode is FALSE (which is why it ended up in DokanCommonLockControl() in the first place).\nAlso, it looks to me like if dcb->FileLockInUserMode is TRUE, then FsRtlCheckOplock() will never be called about locks because DokanCommonLockControl() isn't called then.  DokanCommonLockControl() is the only place in lock.c where FsRtlCheckOplock() is called.\n. I think if FileLockInUserMode is false, then if FsRtlCheckOplock() doesn't return pending, then the eventContext will be leaked.  And if FsRtlCheckOplock() does return pending, then the lock request will be sent to user mode, which wasn't the intent.\n. @marinkobabic , did you see my changes?  \nhttps://github.com/bailey27/dokany/commit/0c64b849c8ce817037dcd5e67dac29bdd33971e1\nDo you think it is ok now?\n. Thanks for accepting my patch.\nI made the pull request.\n. I found a problem.  The ntdelete example fails silently if the directory isn't empty.  And also cygwing rmdir says \"Permission denied\" instead of \"directory not empty\".  \nSo, maybe MirrorCreateFile() schould check to see if the Directory is being opened for DELETE, and if so then call MirrorDeleteDirectory() to make sure it's empty.  \nIf it does this before the directory is opened with DELETE, then FindFirstFile() won't fail.\nThat would look like this\n```\n@@ -248,8 +248,12 @@ MirrorCreateFile(LPCWSTR FileName, PDOKAN_IO_SECURITY_CONTEXT SecurityContext,\n   fileAttr = GetFileAttributes(filePath);\nif (fileAttr != INVALID_FILE_ATTRIBUTES &&\n-      (fileAttr & FILE_ATTRIBUTE_DIRECTORY &&\n-       DesiredAccess != DELETE)) { // Directory cannot be open for DELETE\n+      (fileAttr & FILE_ATTRIBUTE_DIRECTORY)) { \n+   if (DesiredAccess == DELETE) {\n+        status = MirrorDeleteDirectory(FileName, DokanFileInfo);\n+       if (status != STATUS_SUCCESS)\n+         return status;\n+   }\n     fileAttributesAndFlags |= FILE_FLAG_BACKUP_SEMANTICS;\n     // AccessMode = 0;\n   }\n```\nI tried that.  And now ntdelete.cpp, cmd rmdir and cygwin rmdir all seem to be working and getting \"directory not empty\" if the directory isn't.\nHowever, I noticed winfstest is failing two tests\nC:\\src\\msvc\\winfstest-master\\TestSuite\\t\\base\\02.t\nnot ok 8 - expect \"DeleteFile m:\\\\570dda43\" ERROR_ACCESS_DENIED - got 0\nnot ok 9 - expect \"RemoveDirectory m:\\\\570dda43\" 0 - got ERROR_FILE_NOT_FOUND\nnot ok 2/10\nSo it looks like the Windows API does prevent DeleteFile() from being called on directories (returns lasterr = 5, access denied).\nBut if mirror doesn't allow this, then cygwin rmdir won't work.\nIs this checking DELETE in the current mirror.c maybe a thing that was done to pass winfstest?\nMaybe there is some way to detect if we're getting there from Windows API DeleteFile() and return the error in that case?\n. From looking at the cygwin source, I can see that it seems always use FILE_OPEN_FOR_BACKUP_INTENT when opening a directory in order to delete it.\nBut we don't get it in the CreateOptions in MirrorOpenFile() when the directory is opened for DELETE.\nFrom looking at the dokan sys and dll code, I don't see where dokan is making that flag disappear.\nIt could be that my updated-today cygwin is different from what's in their current git source.\nIf we got that flag in mirror, then I think it would know that it was OK to open the directory DELETE.\n. ntdelete.cpp passes FILE_OPEN_FOR_BACKUP_INTENT to NtOpenFile() but it never makes it to dokany.  And the same with cygwin when it does rmdir which ends up in unlink_nt() in cygwin1.dll.  I stepped through unlink_nt() in gdb and saw it.\nI built the driver with some more debug prints and put a DbgBreakPoint() if the file is opened with DELETE.  I saw there in the kernel debugger that there wasn't any FILE_OPEN_FOR_BACKUP_INTENT.\nIt really looks to me like some driver upstream of dokan1.sys or maybe the OS itself is stripping out FILE_OPEN_FOR_BACKUP_INTENT from the IRP.\nI tried it with signed dokan1.sys, signed dokan1.dll, and my fs's .exe self-signed (with cert installed) and running it as administrator, and still no FILE_OPEN_FOR_BACKUP_INTENT makes it through.\n. Maybe you could ask them to fix cygwin?\nThis seems to work\ndiff --git a/winsup/cygwin/syscalls.cc b/winsup/cygwin/syscalls.cc\nindex 0ffb8c1..0d9453e 100644\n--- a/winsup/cygwin/syscalls.cc\n+++ b/winsup/cygwin/syscalls.cc\n@@ -704,6 +704,8 @@ unlink_nt (path_conv &pc)\n          pc.get_nt_native_path (), pc.isdir ());\n   ACCESS_MASK access = DELETE;\n   ULONG flags = FILE_OPEN_FOR_BACKUP_INTENT;\n+  if (pc.isdir ())\n+     flags |= FILE_DIRECTORY_FILE;\n   /* Add the reparse point flag to native symlinks, otherwise we remove the\n      target, not the symlink. */\n   if (pc.is_rep_symlink ())\n. Yes, if I add the flag in cygwin, then it works.\nI tried your code in an original mirror.c and also in my fs (which I haven't changed about this yet) and it doesn't help.\nIt looks like the problem is that without the FILE_FLAG_BACKUP_SEMANTICS, then the CreateFile() still fails to open the directory.\nI think your code would make it so that when the directory does get deleted (assuming most of my changes are put in), then the MirrorDeleteDirectory()  will be called automatically and the MirrorCleanup() will delete the directory like it should.  So I think it would eliminate the need for a lot of the changes that I suggested.\nBut I think, assuming it is true that somebody's clearing the FILE_OPEN_FOR_BACKUP_INTENT bit, then I think there's no way to allow cygwin as it is to delete directories and  also prevent somebody from doing DeleteFile(\"c:\\empty_dir\").\nI think this FILE_OPEN_FOR_BACKUP_INTENT / FILE_FLAG_BACKUP_SEMANTICS flag is like some way to be able to open the file or directory for delete without caring about whether it's a file or a directory.  But I think maybe MS didn't intend for it to be used like that.  Or maybe they don't anymore.\nIt sounds to me like FILE_OPEN_FOR_BACKUP_INTENT has something to do with security, and maybe that's whey the OS or some driver is preventing dokany from getting it.\nI tried a registry hack to prevent any Windows Defender stuff from loading in my VM.  I could see that after that then WdFilter.sys wasn't loaded in the filter stack.  But still I got no FILE_OPEN_FOR_BACKUP_INTENT passed through to dokany.  So I think it isn't the defender filter driver that's clearing the bit.\n. If I add  CreateOptions |= FILE_DIRECTORY_FILE to your change, then it makes cygwin work all by itself.\nif (fileAttr != INVALID_FILE_ATTRIBUTES &&\n      (fileAttr & FILE_ATTRIBUTE_DIRECTORY)) { \n    DokanFileInfo->IsDirectory = TRUE;\n       CreateOptions |= FILE_DIRECTORY_FILE;\n  }\nIf that code is there, then what happens in mirror is I think exactly like what happens if cygwin uses FILE_DIRECTORY_FILE like how I changed it in cygwin.\nWhat happens then is that mirror gets into this code\n```\nif ((CreateOptions & FILE_DIRECTORY_FILE) == FILE_DIRECTORY_FILE) {\n    // It is a create directory request\n.\n```\nAnd it opens the directory like this\nhandle = CreateFile(filePath, 0, FILE_SHARE_READ | FILE_SHARE_WRITE,\n                          &securityAttrib, OPEN_EXISTING,\n                          FILE_FLAG_BACKUP_SEMANTICS, NULL);\nSo it opens it with desiredAccess 0 and read and write sharing.\nAnd because DokanFileInfo->IsDirectory is true, then when cygwin calls NtSetInformationFile() to delete the directory and then  MirroDeleteDirectory() is called, then FindFirstFile() doesn't fail because there is no sharing violation because the directory was opened differently than specified (without DELETE and with sharing).\nBut, this causes a third winfstest failure.\n```\nC:\\src\\msvc\\winfstest-master\\TestSuite>run-winfstest.bat  m:\\\nC:\\src\\msvc\\winfstest-master\\TestSuite\\t\\base\\00.t  ok\nC:\\src\\msvc\\winfstest-master\\TestSuite\\t\\base\\01.t  ok\nC:\\src\\msvc\\winfstest-master\\TestSuite\\t\\base\\02.t\nnot ok 8 - expect \"DeleteFile m:\\e5ca4fd7\" ERROR_ACCESS_DENIED - got 0\nnot ok 9 - expect \"RemoveDirectory m:\\e5ca4fd7\" 0 - got ERROR_FILE_NOT_FOUND\nnot ok 2/10\nC:\\src\\msvc\\winfstest-master\\TestSuite\\t\\base\\03.t  ok\nC:\\src\\msvc\\winfstest-master\\TestSuite\\t\\base\\04.t  ok\nC:\\src\\msvc\\winfstest-master\\TestSuite\\t\\base\\05.t  ok\nC:\\src\\msvc\\winfstest-master\\TestSuite\\t\\base\\06.t  ok\nC:\\src\\msvc\\winfstest-master\\TestSuite\\t\\base\\07.t  ok\nC:\\src\\msvc\\winfstest-master\\TestSuite\\t\\base\\08.t  ok\nC:\\src\\msvc\\winfstest-master\\TestSuite\\t\\base\\09.t\nnot ok 17 - expect \"CreateFile m:\\0302478a GENERIC_READ 0 0 OPEN_EXISTING FILE_FLAG_BACKUP_SEMANTICS 0\" ERROR_SHARING_VIOLATION - got 0\nnot ok 1/19\ntotal ................................. ok 168/171 - not ok 3/171\n```\nIt fails because it opens the directory for read with no sharing and then tries to open it for read again and unexpectedly succeeds.\nI take back everything I said about FILE_FLAG_BACKUP_SEMANTICS maybe not really being intended by MS for opening directories like files. I saw somewhere that they say it is for that.\nBut, I'm wondering if Dokany ever got FILE_OPEN_FOR_BACKUP_INTENT in an Irp before?\nIf it was getting that, then why was this code needed (from the real current mirror.c)?\nif (fileAttr != INVALID_FILE_ATTRIBUTES &&\n      (fileAttr & FILE_ATTRIBUTE_DIRECTORY &&\n       DesiredAccess != DELETE)) { // Directory cannot be open for DELETE\n    fileAttributesAndFlags |= FILE_FLAG_BACKUP_SEMANTICS;\n    // AccessMode = 0;\n  }\nI mean the part about or-ing in FILE_FLAG_BACKUP_SEMANTICS.\nI think if somebody tried to open a directory as a file on purpose with CreateFile(), they would specify FILE_FLAG_BACKUP_SEMANTICS, and if that was getting to Dokany via FILE_OPEN_FOR_BACKUP_INTENT in the driver, then it would work without having to or in the flag in MirrorCreateFile().\n. I tried it, and cygwin rmdir didn't work\n```\nBailey@haswell /cygdrive/m\n$ mkdir foo\nBailey@haswell /cygdrive/m\n$ rmdir foo\nrmdir: failed to remove 'foo': Device or resource busy\n```\nI got in the debug output\nDeleteDirectory c:\\tmp\\mirror\\foo\nPathIsDirectoryEmpty failed 32\n        DispatchSetInformation result =  c0000043\nI think PathIsDirectoryEmpty() has the same sharing problem as FindFirstFile().\nI tried this\n```\ndiff --git a/samples/dokan_mirror/mirror.c b/samples/dokan_mirror/mirror.c\nindex 91680ad..25b95ed 100644\n--- a/samples/dokan_mirror/mirror.c\n+++ b/samples/dokan_mirror/mirror.c\n@@ -252,6 +252,9 @@ MirrorCreateFile(LPCWSTR FileName, PDOKAN_IO_SECURITY_CONTEXT SecurityContext,\n       (fileAttr & FILE_ATTRIBUTE_DIRECTORY) &&\n       !(CreateOptions & FILE_NON_DIRECTORY_FILE)) {\n     DokanFileInfo->IsDirectory = TRUE;\n+   if (DesiredAccess == DELETE) {\n+       ShareAccess |= FILE_SHARE_READ;\n+   }\n   }\nDbgPrint(L\"\\tFlagsAndAttributes = 0x%x\\n\", fileAttributesAndFlags);\n```\nAnd now cygwin rmdir works and all the winfstest tests still pass.\nDo you think it's OK to put the FILE_SHARE_READ there if they open the directory for DELETE?\n. For my fs, I need to treat a directory as empty if it has only a gocryptfs.diriv file in it.\nIt wouldn't help me to know only if the directory is really empty or not.\n. Thanks for fixing it.\n. @marinkobabic ,\nI put that print in the driver.  I deleted a directory with cygwin and my own ntdelete.cpp, which I know uses this flag to open the file, and I didn't see the print.\n@Corillian, \nI think you are right.  I think that explains why the driver never sees the flag.\nI think it might be possible to deduce from the security attributes/descriptor that this flag was used for the create.  But I think finding it out would be hard.  And also, it might not be definitive.  Those settings, however unusual, might be there in a case in which the caller didn't actually specify  FILE_OPEN_FOR_BACKUP_INTENT.\nWhat is it that you don't like about the current solution?\nI think some of the complexity is there to prevent DeleteFile(\"m:\\empty_dir\") from working.  If that works, then one of the winfs tests fails.\n. This is really weird.\nI ran filespy.\nThe first time I tried it, I saw FILE_OPEN_FOR_BACKUP_INTENT in the IRP_MJ_CREATE when cygwin opened the the dir on C: to delete it.\nI tried it on my mirror drive, and the flag was not there.\nI saved a screenshot of this, so I know it like that.\nThen I shut down my VM and added a new disk to it so I could try it with fat32.\nNow I don't see the flag on c: (ntfs), f: (fat32) or m: (mirror).\nAlso, I found out that when you do a CreateFile(), if you don't specify FILE_FLAG_BACKUP_SEMANTICS, then win32 automatically adds FILE_NON_DIRECTORY_FILE.\nIf you use NtOpenFile() to open a dir for delete, then you don't even need FILE_OPEN_FOR_BACKUP_INTENT to open it, and you can still delete it.\n. Thanks for telling me.  I will go fix it.\n. I did another pull request.\n. I realized just  now I don't like how it looked (cosmetic). I will fix it and do another pull.\n. The new pull is there now.\n. There's yet another problem.  As it is, you can't rename files in the root directory.  I'm fixing that now.\nAll I can say for myself about that is I did run winfstest on m:\\, and it did not complain.\n. @Liryna ,\nIt seems to not have the same errors all the time.  \nThe errors seem to happen more often if I can see the winfstest files come and go in the explorer window.  On some winfstest runs I never see the files in the explorer window, and in some I do.\nIt seems to happen less often the more older the source.  I tried 100 winfstest runs on the June 1 source, and it did not fail..  On June 5 source it happened 1/50 runs.  I see no differences between them that should affect the outcome.\nAnd now suddenly I cannot build anymore.  I get this error\n```\n\"C:\\git\\forks\\dokany\\dokan.sln\" (Build target) (1) ->\n\"C:\\git\\forks\\dokany\\sys\\sys.vcxproj\" (default target) (2) ->\n(Inf2Cat target) ->\n  C:\\Program Files (x86)\\Windows Kits\\10\\build\\WindowsDriver.common.targets(125\n2,5): error MSB6006: \"inf2cat.exe\" exited with code -2. [C:\\git\\forks\\dokany\\sy\ns\\sys.vcxproj]\n0 Warning(s)\n1 Error(s)\n\n```\nI tried rebooting.  It seems my computer suddenly cannot build anymore, even with a fresh clone of the current source.\n. @marinkobabic ,\nThanks.  I see that now.\n. I tried it with building from various date-based snapshots going back to June 1. June 1 consistently did not do it. (I tried 200 runs).\nBut I think that was a fluke.\nBecause I could make it fail with builds right after that which had no changes that could possibly affect this.\nAlso, I was able to reproduce it using the debug install of RC3 in my vm.  I am not able to reproduce it with the RC3 release install on my real machine.\nI think it is because of a race condition.  \nWith the debug build, but with no debug prints, it happens about 1/100 or 1/50 times.\nWith debug prints going out (even if dbgview filter is set to like arghh, so it isn't printing anything).  It happens much more often.\nI cannot say for sure if this is really a bug in dokany, or if having explorer causing more fs chatter during the test somehow makes winfstest fail even though dokany is working correcting. \n. The logs are from a driver/dll/mirror built from a fresh clone of https://github.com/dokan-dev/dokany.git done about a half hour ago.\n. Also, with mirror, in cmd window 2, it immediately prints the \"The process cannot access the file because it is being used by another process\" before oplocktest has a chance to release the oplock.\nOn the C: drive the echo blah > foo.txt in cmd widow 2 pauses until oplocktest says it's cleaned up and closed the handle.\n. I stepped through it in the debugger when cmd window 2 tries to open the file.\nThe thing I noticed that was strange was FsRtlCheckOplock() returned STATUS_SUCCES and not STATUS_PENDING.  \nI would think that in this case, it should return pending, and the create would proceed after the oplock was released.\n. This is sort of interesting.\nWhen I use the echo command to write to the file, oplocktest does get the oplock break on the mirror drive.\nBut when I run this test program (writetest) to write to the file.\nhttp://pastebin.com/6XtQeyt5\nThen on the mirror drive, oplocktest never gets the break.\nOn my C: drive, writetest's createfile blocks until oplocktest closes the handle.  \nOn M: writetest's createfile returns immediately with lasterr 32 (sharing violation) and oplocktest never gets the oplock break.\n. If I change the oplock flags in oplocktest to include OPLOCK_LEVEL_CACHE_WRITE, then it works.\n```\n<   OPLOCK_LEVEL_CACHE_READ | OPLOCK_LEVEL_CACHE_HANDLE,\n\n\nOPLOCK_LEVEL_CACHE_WRITE | OPLOCK_LEVEL_CACHE_READ | OPLOCK_LEVEL_CACHE_HANDLE,\n```\n\nI sounds to me like (from https://msdn.microsoft.com/en-us/library/windows/desktop/ee681828(v=vs.85).aspx)\nUsing the FSCTL_REQUEST_OPLOCK control code with the RequestedOplockLevel member set to OPLOCK_LEVEL_CACHE_READ | OPLOCK_LEVEL_CACHE_HANDLE grants an oplock of type RH. An RH oplock is similar to the filter oplock granted by the FSCTL_REQUEST_FILTER_OPLOCK control code. However, note that the filter oplock allows only one client to hold an oplock on a file at a time; FSCTL_REQUEST_OPLOCK allows multiple clients at a time to have the RH lock on a file. Another difference is that FSCTL_REQUEST_FILTER_OPLOCK requires an oplock break acknowledgment before writes can occur, where FSCTL_REQUEST_OPLOCK does not because the oplock break notification is advisory-only and writes are allowed to go ahead without acknowledgment. For more information, see Breaking Oplocks.\nIt sounds like maybe dokany is behaving correctly in not breaking the oplock if only OPLOCK_LEVEL_CACHE_READ | OPLOCK_LEVEL_CACHE_HANDLE were specified when it was created.  But not breaking it causes the create to proceed, which fails because of a sharing violation because the underlying (root) fs has no idea about the oplock.\nI don't see anything different about how DokanOplockRequest() and FatOplockRequest() are handling this.  \nI did try it with a fat32 formatted usb drive and with only OPLOCK_LEVEL_CACHE_READ | OPLOCK_LEVEL_CACHE_HANDLE it works as on my ntfs C: drive.\n. @marinkobabic ,\nI tried setting in the create in the driver the completion routine to null.  But with this test (with the original oplock flags) FsRtlCheckOplock() always returns STATUS_SUCCESS regardless and never appears to block.\n. I think this issue has something to do with this code being commented out\nhttps://github.com/dokan-dev/dokany/blob/c226ba58470638d45134498c178bcdf4b1b346e3/sys/create.c#L917-1024\n. If I enable the commented-out code (and the other two related bits of code), then the oplock test behaves the same on the mirror drive as on c:\nBut there are now some intermittent failures with winfstest http://pastebin.com/R6ebjjFi\nI guess maybe before the oplocks were put in, that the driver relied on user mode to deal with  sharing?  I think now with the oplocks the driver it needs to do some of that itself.\n. I can't reproduce those winfstest failures anymore.\n. This code that was commented out leaks eventContext/ccb/fcb whenever a sharing violation occurs and there is no oplock to break.  I can see the number of allocated eventContexts go up by one every time winfstest generates a sharing violation (on purpose). \nI put in frees of the eventContext, ccb, and fcb if that happens, and also where there is an unexpected error status.\nI haven't been able to reproduce the winfstest errors again.  They happened only that one time and not since.  I think the leaks didn't cause them.\nI think the reason the code had the warning comment  was maybe because it was leaking fcbs and the leaked fcbs were causing the sharing violations.\nI don't see anything else wrong with this code, and I think it is maybe needed for handling oplocks correctly.\n. @Liryna ,\nI can copy and paste files in explorer.  \nI am pretty sure this leak was causing the sharing violations.  I think it was because of fcb->ShareAccess in the leaked fcb. \nYou're welcome.  I haven't worked on something like this in a long time, and I enjoy it.\nI will test it some more and then put then push my branch so you can see it.\n. @Liryna ,\nI have a working solution.  Here is my branch.\nhttps://github.com/bailey27/dokany/commit/113097cf092db6323e21d9e3c9a491cb32151464\nBut I want to point out some issues.\nFirst, DokanOplockComplete() is what the driver uses for when it wants to to be called back after an oplock is broken.\nDokanOplockComplete simply sends the request to user mode.\nI think in most cases that is ok. I most cases, the driver calls FsRtlCheckOplock() with DokanOplockComplete as the callback right before it would have called DokanRegisterPendingIrp() anyway.  So there is nothing else to be done besides send the request to user mode.\nThe problem I see with using DokanOplockComplete as the callback in create is that in both cases where it is used, but especially in this code that was commented out before, it is being used when the driver still has stuff that needs to be done for this create that won't happen if it gets pended to user mode at that point.\nThe the function used by fastfat for these pending oplock  things  posts the operations to a work queue. The work queue function dispatches the operation over again, from the beginning.\nI don't think that is necessary for the dokan driver, but I do think that dokan's create needs to block instead of using the callback.  It definitely needs to do this in the code that was commented out, and I think it should do it (pass NULL and block) in the 2nd case that was already there.\nAnother thing I found out is that when FsRtlOplockBreakH() (and I assume FsRtlCheckOplock()) either returns from a blocking call or calls the callback, that all that means is that the oplock break has been sent to the owner.  It doesn't mean that the owner has necessarily released the resource it had the oplock on (closed the file).\nWhen I have my oplocktest sleep after getting the oplock break and before closing the file, I can see that my writetest program, even though calls CreateFile() only one time and succeeds, that the writetest process sends two creates to the driver.  The first one fails with sharing violation because oplock test is still sleeping.  The second one succeeds.  I think win32 is doing this.\nThat's just information.  I was confused by this for a while.\nAnother thing I noticed is that the Io*ShareAccess() functions are supposed to be protected by a lock (the fcb->Resource), but they weren't being locked.  I fixed that in create and also the one in cleanup.\nIt looks to me that before this code was un-commented-out, that the driver was removing share access in cleanup and in DokanCompleteCreate() (in the case of failure), but it was never setting the share access before.\nFinally, I think in create it was too easy to leak an fcb, ccb and eventContext.  \nI changed it so the finally automatically frees what should be freed based on NT_SUCCESS(status).\n. @Liryna ,\nThat dbg print was suggested by @marinkobabic  when we were debugging the Word issue.\nI commented it out because it was coming through my filter in dbgview and I wanted to make the output less verbose.   I guess I should have used an exclude filter instead.\nI will put it back in. \nMy patch does solve the issue of RH (read-handle) oplocks not getting broken when somebody opens the file for Write.  It doesn't break anything else as far as I can tell.\nThere is still an issue with FILE_OPEN_REQUIRING_OPLOCK.\nhttps://github.com/dokan-dev/dokany/blob/c226ba58470638d45134498c178bcdf4b1b346e3/sys/create.c#L1069-1071\n```\n[DokanFS]    FsRtlOplockFsctrl failed with 0xc000000d, fileName = \\foo.txt, fileCount = 1\n```\nThis is the place where the failure was occurring which caused the fcb leak which caused the Word problem  https://github.com/dokan-dev/dokany/issues/249\nI checked out the current dokany source without my patch, and it happens there as well.\nI noticed it now because I wrote a program to test FILE_OPEN_REQUIRING_OPLOCK\nAccording to MSDN: \n\nIf the IRP is an IRP_MJ_CREATE request, FsRtlOplockFsctrl can be used to request a pending filter opportunistic lock if all of the following conditions are true:\nThe value of the OpenCount parameter must be 1.\nThe value of the DesiredAccess parameter for the IRP_MJ_CREATE request must be FILE_READ_ATTRIBUTES.\nThe value of the ShareAccess parameter for the IRP_MJ_CREATE request must be FILE_SHARE_READ | FILE_SHARE_WRITE | FILE_SHARE_DELETE.\n\nAnd according to filespy \n```\n1   11:01:59.522        createwithoplock.exe    IRP_MJ_CREATE   00000884    0000000000000000    M:\\foo.txt  STATUS_INVALID_PARAMETER    FILE_OPEN CreOpts: 00010000 Access: 00000080 Share:  00000007 Attrib: 00000080\n```\nAnd according to dbgview, the OpenCount (which is the fileCount in the fcb) is 1\nSo I have no idea why it fails on my mirror drive.  It works on C:\nI also tried to test FILE_COMPLETE_IF_OPLOCKED.  The code looks like it will return a sharing violation and not STATUS_OPLOCK_BREAK_IN_PROGRESS  if the file is oplocked. I was unable to make a test of this flag that returned STATUS_OPLOCK_BREAK_IN_PROGRESS on my C: drive.  I always get a sharing violation on C:, which is what happens on M:.  So I don't know if there is really any problem there.\n. @Liryna ,\nI'm sorry, I didn't test that.\nIt looks like what happens is explorer has the file open.  Then it tries to open it again with incompatible sharing but also with FILE_CREATE.   The driver returns sharing violation instead of STATUS_OBJECT_NAME_COLLISION.  And that's why explorer doesn't work.\nI changed it to check and see if the refcount is > 1 on the fcb and the disposition is FILE_CREATE early, and in that case return STATUS_OBJECT_NAME_COLLISION.\nNow ctrl+c/ctr_v on a file works.\nAlso, the driver was setting disposition only if the volume was read only.\nI needed it more early, and I didn't see any reason not to always set it near the begging.\nHere is my commit about this\nhttps://github.com/bailey27/dokany/commit/2bc3bdad93524953ee5023c75a4b8532aa4f184a\nI think there could be other cases like this, where the driver might return a sharing violation instead of some other error that the ntfs driver checks for before checking sharing.\n. @Liryna ,\nI still cannot make a test case in which a LockFileEx() causes an oplock break.  So I cannot test the case where FsRtlCheckOplock() in DokanCommonLockControl would return STATUS_PENDING now.\nBut I think this bug could be fixed by \n1. not allocating an eventContext in DokanDispatchLock() if FileLockInUserMode is false.\n2. removing the eventContext parameter to DokanCommonLockControl() because  DokanCommonLockControl is used only if FileLockInUserMode is false.\n3. having DokanCommonLockControl() pass NULL for the callback parameter to FsRtlCheckOplock() instead of DokanOplockComplete so it will block if an oplock needs to be broken before the lock is granted.\nDo you think this would be good enough?  If so,  I wouldn't mind doing the changes myself.\n. I can reproduce the leak at will.  By running the Microsoft lock example program (the 2nd example from here https://msdn.microsoft.com/en-us/library/windows/desktop/aa365204(v=vs.85).aspx) I was able to leak about 12,000 event contexts.\nWhat I can't make happen is having a file lock request cause an oplock break.\nHere is my branch with the changes pushed.\nhttps://github.com/bailey27/dokany/commit/7019544f8811ee3a844d12c005f03162bac1d2ba\n. @Liryna ,\nIt's okay.   I am more concerned about the leak than the oplock issue there.\nI think @Corillian  wants to use  a pool of eventContexts, so I think a leak would still be a problem.\n. @Corillian ,  \nYes, the leak is in the kernel-mode driver.  It's leaking non-paged kernel memory.\n. @Liryna,\nI went ahead and made a pull request.\n. @Liryna ,\nThanks.  I made the pull request.\n. @Liryna ,\nI think I see what you meant before about my commit history.\nI think I need to rebase with upstream instead of merge.\nI'll try that and see if it cleans up the commit history, and and if so submit a new pull request.\n. @Liryna ,\nI think I reset the commit history ok now.  Please tell me if I did it wrong.  I need to learn how to do this.\nI made a new pull request.\n. Could this maybe be related to https://github.com/dokan-dev/dokany/issues/62 ?\nIt looks to me that in @Liryna 's filespy log that when it writes to the .lib, the IRP_PAGING_IO (0x00000002) flag is set, so the write shouldn't go past the end of the file.  \nThat's what fastfat does https://github.com/Microsoft/Windows-driver-samples/blob/master/filesys/fastfat/write.c#L1390-L1403\n. @Liryna ,\nI don't understand what you mean by it being too heavy for user mode.  I think the only maybe heaving thing user mode would need is the GetFileSize().  But I think that isn't too heavy.\nI don't understand what that code (https://github.com/dokan-dev/dokany/pull/64/files#diff-210b81c018cd0036b1a9abb162fb97b9R551) is doing around line 551 in mirror.c.  That doesn't look to me like right way to limit the length of the write to not go past the end of file.\nWhat I did is like this https://github.com/bailey27/cppcryptfs/blob/6ddf0739514b5263b2835eab6a653e774f8afff0/cppcryptfs/cryptfile.cpp#L246-L265\nWhich makes the .lib be about 9KB instead of 32KB.\nBy the way, my linker is happy with the 32KB .lib as it is with the 9KB.  Even if I add a function to the library and call it from the main program it is linked with, the link still succeeds in either case.\nI did find that I have a problem with generating precompiled headers with cppcryptfs (but not with mirror).  I had to turn them off for it to work.  I need to look into that.\n. @Liryna ,\nI guess dokan could keep track of the application-side view of what the end of the file is and disallow writes past it.  But the GetFile|Size() won't necessarily be the same (as in the case of cppcryptfs).\nThe precompiled header problem does happen with a default solution.  But it doesn't happen with mirror.\n. @Liryna ,\nIt looks ok to me. Before I was confused about the code that was checking for unsigned/signed subtraction wrapping, but I understand now.\n. @Liryna ,\nYou're welcome.\nI haven't used clang-format before.  I use Notepad++ to edit the Dokany code.  I set the tab size to 2 and expand tabs as spaces.  I can still mess up the formatting, though.\nI see the .clang-format file .   I will get clang-format and try it out.  Thanks for telling me about it.\nI think cppcryptfs is completed.  It doesn't seem to have any more bugs that don't happen with mirror.  It really isn't much more than a mirror with encryption.\nI think I'll have to change cppcryptfs when https://github.com/dokan-dev/dokany/issues/210 is done.  I don't mind.  I can really see how anything that uses networking needs those changes.\n. I think maybe it's happening in the driver in create.c in DokanDispatchCreate() because of needBackSlashAfterRelatedFile.  I'm not sure why it thinks it needs to add a backslash in this case.\nI only looked at the code.  I haven't confirmed this.. It looks like that is it.\nI think when the file is a normal file, not a stream, then the relatedFileName is the full path of the directory that the file is in, and  fileObject->FileName is the name of the file itself.\nBut when the file is a stream, then the relatedFileName is the full path to the file, and fileObject->FileName is the stream name.\nIf I change it like this, then with the FILE_NAMED_STREAMS flag set in mirror, copying or moving a file with an alternate data stream works and keeps the stream intact.\ndiff --git a/sys/create.c b/sys/create.c\nindex 4c4f7ed..42fa37d 100755\n--- a/sys/create.c\n+++ b/sys/create.c\n@@ -645,7 +645,7 @@ Return Value:\n       }\n       if (relatedFileName->Length > 0 &&\n           relatedFileName->Buffer[relatedFileName->Length / sizeof(WCHAR) -\n-                                  1] != '\\\\') {\n+                                  1] != '\\\\' && fileObject->FileName.Buffer[0] != ':') {\n         needBackSlashAfterRelatedFile = TRUE;\n         fileNameLength += sizeof(WCHAR);\n       }\nI am not 100% sure it won't break anything else, but it still passes winfstest (492/492).\n. With a modified mirror that sets the stream flag, and a modified driver with the colon check, when I do that I get an error message (in cmd.exe) and no file is created\nThe filename, directory name, or volume label syntax is incorrect.\nOn a normal windows drive, I get no error message, and no file is created.\n. On the C: drive, it is actually succeding\n```\nC:\\tmp>echo blah > \":lol.txt\"\nC:\\tmp>dir\n Volume in drive C has no label.\n Volume Serial Number is 64CA-D724\nDirectory of C:\\tmp\n04/05/2017  01:43 PM              .\n04/05/2017  01:43 PM              ..\n               0 File(s)              0 bytes\n               2 Dir(s)  10,746,179,584 bytes free\nC:\\tmp>more < \":lol.txt\"\nblah\n```\nIt looks like the blah goes into an alternate data stream named lol.txt in the current directory.  I mean the stream is a stream of the directory.\nDo you think Dokany needs to support that?\n. Ok, I will try to figure out why it doesn't work.. It looks data streams attached to directories are working, if they are attached to a subdirectory and not the root dir.\n```\nC:>echo blah > m:\\blah:foo\nC:>echo blah > m:\\:foo\nThe filename, directory name, or volume label syntax is incorrect.\n```\nThe reason the CreateFile() in mirror fails is that when you try to open a stream of the root dir, you end up with a path like (my mirror root is c:\\tmp) \"c:\\tmp\\:foo\".  \nIt works in a subdir because their is now no trailing slash in front of the stream (e.g. \"c:\\tmp\\blah:foo\").\nI did a quick fix in mirror to make it work.  Does it need to be fixed in the kernel driver?\nI think the driver is the \"right place\" to fix it, but then I also think passing paths that look like simply \":foo\" to user mode is sort of weird.\nHere is what I changed in mirror\nstatic void GetFilePath(PWCHAR filePath, ULONG numberOfElements,\n                         LPCWSTR FileName) {\n+\n+  // for if we're trying to open a file that's actually an alternate data\n+  // stream of the root dircetory as in \"\\:foo\"\n+  if (wcslen(FileName) >= 2 && FileName[0] == '\\\\' && FileName[1] == ':') {\n+         FileName++;\n+  }\n   wcsncpy_s(filePath, numberOfElements, RootDirectory, wcslen(RootDirectory));\n   size_t unclen = wcslen(UNCName);\n   if (unclen > 0 && _wcsnicmp(FileName, UNCName, unclen) == 0) { \nAlso, you need admin privileges to write to a data stream on the root directory on C:.  \nBut if the mirror root is c:\\ and mirror is run as admin, then anybody can do it.\n. This seems to work\n```\ndiff --git a/sys/create.c b/sys/create.c\nindex 4c4f7ed..97cf018 100755\n--- a/sys/create.c\n+++ b/sys/create.c\n@@ -459,6 +459,7 @@ Return Value:\n   PWCHAR parentDir = NULL; // for SL_OPEN_TARGET_DIRECTORY\n   ULONG parentDirLength = 0;\n   BOOLEAN needBackSlashAfterRelatedFile = FALSE;\n+  BOOLEAN alternateDataStreamOfRootDir = FALSE;\n   ULONG securityDescriptorSize = 0;\n   ULONG alignedEventContextSize = 0;\n   ULONG alignedObjectNameSize =\n@@ -645,10 +646,18 @@ Return Value:\n       }\n       if (relatedFileName->Length > 0 &&\n           relatedFileName->Buffer[relatedFileName->Length / sizeof(WCHAR) -\n-                                  1] != '\\') {\n+                                  1] != '\\' && fileObject->FileName.Buffer[0] != ':') {\n         needBackSlashAfterRelatedFile = TRUE;\n         fileNameLength += sizeof(WCHAR);\n       }\n+      // for if we're trying to open a file that's actually an alternate data\n+      // stream of the root dircetory as in \"\\:foo\"\n+      // in this case we won't prepend relatedFileName to the file name\n+      if (relatedFileName->Length / sizeof(WCHAR) == 1 &&\n+               relatedFileName->Buffer[0] == '\\' &&\n+               fileObject->FileName.Buffer[0] == ':') {\n+       alternateDataStreamOfRootDir = TRUE;\n+      }\n     }\n // don't open file like stream\n\n@@ -671,7 +680,7 @@ Return Value:\n RtlZeroMemory(fileName, fileNameLength + sizeof(WCHAR));\n\n\nif (relatedFileName != NULL) {\n\nif (relatedFileName != NULL && !alternateDataStreamOfRootDir) {\n       DDbgPrint(\"  RelatedFileName:%wZ\\n\", relatedFileName);\n// copy the file name of related file object\n```. I'll do a pull request.. I think on NTFS,  a whole path can be up to about 32,000 characters,  but an individual file or directory name cannot be more than 255 characters.  That is why GetVolumeInfo() on c:\\ returns 255 for the MaxComponentLength.\n\n\nFor the FS flags, I was proposing something like\n```\n// fsFlags comes from calling GetVolumeInformation() on the underlying FS\n*FileSystemFlags = fsFlags & (FILE_CASE_SENSITIVE_SEARCH | FILE_CASE_PRESERVED_NAMES |\n                     FILE_SUPPORTS_REMOTE_STORAGE | FILE_UNICODE_ON_DISK |\n                     FILE_PERSISTENT_ACLS | FILE_NAMED_STREAMS | FILE_NAMED_STREAMS);\n```\nSo it won't set any more flags than what we already think Dokany supports, but it might set fewer flags depending on the underlying fileystem.. \nI changed the default max component length from 256 to 255, and I made it call GetVolumeInformation().\nIf that succeeds, then returns the AND of the returned files system flags with mirror's default flags.\nIt returns the max component length as reported by the underlying fs, and also the file system name.\nGetVolumeInformation() fails, then it returns the mirror defaults.\nI also noticed that mirror wasn't checking the optional (at least optional in the Windows GetVolumeInformation() API) arguments for NULL.  It looks like it was always getting non-null before, but I put the checks there anyway.\nHere is the diff\n```\ndiff --git a/samples/dokan_mirror/mirror.c b/samples/dokan_mirror/mirror.c\nindex 3b6896e..b3de06a 100644\n--- a/samples/dokan_mirror/mirror.c\n+++ b/samples/dokan_mirror/mirror.c\n@@ -1192,17 +1192,53 @@ static NTSTATUS DOKAN_CALLBACK MirrorGetVolumeInformation(\n     PDOKAN_FILE_INFO DokanFileInfo) {\n   UNREFERENCED_PARAMETER(DokanFileInfo);\n\nWCHAR volumeRoot[4];\nDWORD fsFlags = 0;\n+\n   wcscpy_s(VolumeNameBuffer, VolumeNameSize, L\"DOKAN\");\n*VolumeSerialNumber = 0x19831116;\n*MaximumComponentLength = 256;\n*FileSystemFlags = FILE_CASE_SENSITIVE_SEARCH | FILE_CASE_PRESERVED_NAMES |\n+\nif (VolumeSerialNumber)\n*VolumeSerialNumber = 0x19831116;\nif (MaximumComponentLength)\n*MaximumComponentLength = 255;\nif (FileSystemFlags)\n\n*FileSystemFlags = FILE_CASE_SENSITIVE_SEARCH | FILE_CASE_PRESERVED_NAMES |\n                      FILE_SUPPORTS_REMOTE_STORAGE | FILE_UNICODE_ON_DISK |\n                      FILE_PERSISTENT_ACLS | FILE_NAMED_STREAMS;\n\n\n// File system name could be anything up to 10 characters.\n\n// But Windows check few feature availability based on file system name.\n// For this, it is recommended to set NTFS or FAT here.\nwcscpy_s(FileSystemNameBuffer, FileSystemNameSize, L\"NTFS\");\nvolumeRoot[0] = RootDirectory[0];\nvolumeRoot[1] = ':';\nvolumeRoot[2] = '\\';\nvolumeRoot[3] = '\\0';\n+\nif (GetVolumeInformation(volumeRoot, NULL, 0, NULL, MaximumComponentLength,\n&fsFlags, FileSystemNameBuffer, FileSystemNameSize)) {\n+\nif (FileSystemFlags)\n*FileSystemFlags  &= fsFlags;\n+\nif (MaximumComponentLength) {\nDbgPrint(L\"GetVolumeInformation: max component length %u\\n\",\n*MaximumComponentLength);\n}\nif (FileSystemNameBuffer) {\nDbgPrint(L\"GetVolumeInformation: file system name %s\\n\",\nFileSystemNameBuffer);\n}\nif (FileSystemFlags) {\nDbgPrint(L\"GetVolumeInformation: got file system flags 0x%08x,\"\n\" returning 0x%08x\\n\", fsFlags, *FileSystemFlags);\n}\n} else {\n+\nDbgPrint(L\"GetVolumeInformation: unable to query underlying fs,\"\n\" using defaults.  Last error = %u\\n\", GetLastError());\n+\n// File system name could be anything up to 10 characters.\n// But Windows check few feature availability based on file system name.\n// For this, it is recommended to set NTFS or FAT here.\nwcscpy_s(FileSystemNameBuffer, FileSystemNameSize, L\"NTFS\");\n}\n\nreturn STATUS_SUCCESS;\n }\n```\nHere is some debug output.  I tried it on NTFS and FAT32\n```\nC:\\git\\dokany\\x64\\Debug>.\\mirror.exe /d /s /r c:\\tmp /l m 2>&1 | grep GetVolume\nGetVolumeInformation: max component length 255\nGetVolumeInformation: file system name NTFS\nGetVolumeInformation: got file system flags 0x03e700ff, returning 0x0004000f\nC:\\git\\dokany\\x64\\Debug>.\\mirror.exe /d /s /r f:\\tmp /l m 2>&1 | grep GetVolume\nGetVolumeInformation: max component length 255\nGetVolumeInformation: file system name FAT32\nGetVolumeInformation: got file system flags 0x00020006, returning 0x00000006\n```\nIt passes 492/492 in winfstest on NTFS.  \n@Liryna , do you want me to do a pull request with this change?\n. @Liryna , I did the pull request.. @Liryna ,\nI made a pull request for both issues (create.c and mirror.c).   I'm sorry for causing the crash.. Ok.   Thanks for the explanation.. I got it from github.  . I added it to both.  I created a pull request.  I've never done a pull request on a branch before, so I hope I did it right.. I changed KeyPath to no for those entries.. @Liryna \nThanks for approving it.  I've rebased it into one commit.. No, I meant like this\n| mirror        | winfstest           | some test result  |\n| ------------- |:-------------| :-----|\n| With administrator privileges, Impersonation Off    | Without administrator privileges| Pass |\n| With administrator privileges, Impersonation On      | Without administrator privileges      |   Failed  |\n. Yes,  your table above is correct.\nI think this is the right behavior, and there isn't really a problem.\nThank you for clearing this up.. I think mirror should also capture the result of GetLastError() before calling RevertToSelf() in the off chance that RevertToSelf() fails and sets last error.  \nI think mirror intends to print the GetLastError() about whey the CreateFile() failed.  \nIn other words, a failing RevertToSelf() could mask the last error from the CreateFile().. I'm using Windows 10 Home 64-bit build 16299.125 and Dokany 1.1.0.\nMy files are all on the local c: drive.\nI can reproduce the problem with Acrobat Reader only with impersonation on and only if the root of the mirror filesystem is underneath my home directory.\nDid you try it with the root of the fs (the physical files) being under your home directory?\nI've started debugging it using my own fs (cppcryptfs) which I've added impersonation to.  The problem is reproducible with cppcryptfs under the same conditions as with mirror.\nI think the reason why Acrobat Reader is throwing up the \"access denied\" dialog is maybe that with impersonation on and the files being under my home dir, that Acrobat is failing to open the root directory \\ after succeeding to open it several times.  I do not see any difference yet in the case when it fails vs. when it succeeds, other than the failed CreateFile() error = 5 for opening the directory.  Even the SecurityContext->AccessState.SecurityDescriptor is null in both the successful and unsuccessful cases and all the other parameters look the same.  These opens never fail with impersonation off.. It looks like that if instead of using the impersonation token from DokanOpenRequestorToken() I instead get a primary logon token for myself via LongUser() and use that for impersonation, then I don't have the problem with Acrobat Reader when using impersonation and the physical files are located under C:\\Users\nI've verified that the impersonation functions are working with this token from LogonUser().  I did that because if the impersonation failed, then it would work anyway.\nI tried using DuplicateTokenEx() to get a duplicate token from the one from DokanOpenRequestorToken() promoted to a primary token in the most deluxe fashion possible but  Acrobat Reader still gets accessed denied if I impersonate using the duplicated token. \n. If in Acrobat Reader, I got to Edit -> Preferences -> Security (enhanced) and uncheck \"enable protected mode at startup\", the the problem goes away.\nMy theory now is that Acrobat Reader is, when protected mode is enabled, using a token with permissions that don't have enough rights to do what it wants to do in the user's home directory if it thinks it is not opening a file in the the user's home directory.. Yes, your table is correct.\nThat is the LoginUser() function I am talking about, and when impersonating with that token, it always succeeds.\nAcrobat Reader DC is using a restricted token when it fails.  I put in a test IsTokenRestricted()  and a debug print.\nThese places where it fails all succeed when the physical files are located not in C:\\Users, and the token being passed through dokany is still restricted in those calls.\nHowever, the token being returned by DokanOpenRequestorToken() is not always a restricted one on every call.\nYes, the \"Bailey\" user is in the administrators group.\nI tried it with UAC disabled, and the problem is still there.\nIf I run Acrobat Reader DC as administrator, fails as well.\nIn order to test access as a standard user (not in administrators group), I did this.\nI ran mirror as a service (using srvstart), using impersonation.  \nIf I login as as Bailey, I have the same problem with Acrobat Reader.  But I have access to the drive in general.\nIf I login as \"joe\", a standard (non-admin) user, I cannot access anything with impersonation on, as  expected, because the files are under C:\\Users\\Bailey.\nIf I have the fs mounted with the physical files under c:\\Users\\joe, and login as joe, then I have the same problem as before (general access works, but acrobat reader does not).\n. ",
    "andreas-eriksson": "Is this still awaiting a review? Can I do anything to help test it?. My app mounts several folders and one of them was somehow unmounted at 2019-02-27 08:57:48.445. The log is then silent for almost a minute even though I know that file read attempts was made.\nhttps://www.dropbox.com/s/e1nsdx2x58ozovl/LogFile.txt?dl=0\nI'm not sure if the log will actually tell you anything useful. I have tried using the .net mirror sample to read the same files and that works every time.. ",
    "zmfsea": "hi @Liryna,\nI add /o and remove /n , but the driver letter is still not recognized by iometer. By the way I notice that \"Create DeviceObject for the File System\" is moved from DokanCreateDiskDevice to DokanCreateGlobalDiskDevice , Why ? Does this cause the problem ?\n. ",
    "elfring": "How do you think about to avoid that this software depends on undefined behaviour?\n. I would appreciate if more identifiers will become standard-compliant.\n. I suggest to delete underscores at some source code places.\n. Thanks for your improvement of affected include guards.\nI hope that remaining update candidates can be considered once more later.\n. Thanks for your small source code improvement.\n. ",
    "MRYingLEE": "Your suggestion works. But there is an ugly terminal window shown. If a user accidently closes the window, the mounting will be terminated.\nI am looking for a better solution.\nThank you for your very prompt response.\nYing\n. ",
    "axkibe": "When can we expect RC3?\n. Suggestion could you note in the Release Notes of RC2 that the registry need a manual fix?\n. OK what do I need to write there to make it work with 0.7.4?\nAs I've been advised* to use that until 1.0 is released.\n- https://github.com/dimov-cz/win-sshfs/issues/87\n. Ok lets forget that, I'll go with both release candidates in production, RC or not, everything else doesn't work at all (and the software I used so far crashes eitherway)\n. A system driver cannot be self contained.\n. Im currently installing a series of PCs. I'll can post the log file for the next one i get to.\n. On this machine I had to manually post-install the x86 redistributable to make the dll loadable.\nDokan_Library_1.0.0.102_Bundle_20160506134215.log.txt\nDokan_Library_1.0.0.102_Bundle_20160506134215_002_Dokan_x64.msi.log.txt\n. All the isues I need to workaround for the un-pre-released RC3 :-/...\n. ",
    "gang929": "all windows updates?  can you point out which specifi update ?\n. in wdfs' readdir interface\uff0c as below, the filler will use  file stat  to fill\nwdfs_readdir(const char *localpath, void *buf, fuse_fill_dir_t filler, off_t offset, struct fuse_file_info *fi)\nin mingw, the stat define as below \nstruct stat {\n    _dev_t st_dev;\n    _ino_t st_ino;\n    unsigned short st_mode;\n    short st_nlink;\n    short st_uid;\n    short st_gid;\n    _dev_t st_rdev;\n    _off_t st_size;\n    time_t st_atime;\n    time_t st_mtime;\n    time_t st_ctime;\n  };\nbut in dokanfuse, the function  convertStatlikeBuf in utils.h use stat maybe as below (depends on dokanfuse compile env), it will be used in fusemain.cpp\nstruct stat {\n.......\n    struct timespec st_atim;            /* Time of last access.  */\n    struct timespec st_mtim;            /* Time of last modification.  */\n    struct timespec st_ctim;            /* Time of last status change.  */\n.......\n}\nIt seems that is not binary compatible.\nthe getattr should has the same problem.\n. NO, this is a  binary compatible problem, only changing the st_xxxx define  can not solve it.\nIn order to solve this problem\uff0cIt should Export all struct used by Dokanfuse and App developed with Dokanfuse.\nFor example, the stat struct can be export as FUSE_STAT, When other App developing  with dokanfuse, it should convert it's stat to FUSE_STAT,  to ensure the binary compatibility of stat struct.\nOf course, using the same environment  with building dokanfus also can solve the problem.\n. OH....dokanfuse has exported stat as bleow\n#define FUSE_STAT stat64_cygwin\nI didn't see\uff0c  I always thought that dokanfuse used the system define stat.\nlet me try to convert the stat struct  in wdfs project.\n. before filler stat, i convert stat to fuse_stat\nstatic void stat2fuse_stat(struct stat *stat, struct FUSE_STAT *fuse_stat)\n{\n    fuse_stat->st_dev = stat->st_dev;\n    fuse_stat->st_ino = stat->st_ino;\n    fuse_stat->st_mode = stat->st_mode;\n    fuse_stat->st_nlink = stat->st_nlink;\n    fuse_stat->st_uid = stat->st_uid;\n    fuse_stat->st_gid = stat->st_gid;\n    fuse_stat->st_rdev = stat->st_rdev;\n    fuse_stat->st_size = stat->st_size;\n    fuse_stat->st_atim.tv_sec = stat->st_atime;\n    fuse_stat->st_mtim.tv_sec = stat->st_mtime;\n    fuse_stat->st_ctim.tv_sec = stat->st_ctime;\n    fuse_stat->st_blksize = 0;\n    fuse_stat->st_blocks = 0;\n    fuse_stat->st_birthtim.tv_sec = 0;\n}\n....................\n    struct FUSE_STAT fuse_stat;\n    memset(&fuse_stat, 0, sizeof(fuse_stat));\n    stat2fuse_stat(&stat, &fuse_stat);\n    filler(buf, filename, &fuse_stat, 0))\nthe dir can be display correctly, but the file size is error, no matter set  fuse_stat->st_size to XXXX, in windows explore all file size is a same value(1463019399, 1463020793, ...Not fixed, each refresh will change) \nand the file modify/create time also has error, can not be display\n. yes, the fuse sample mirror.exe has same issue.\nrun mirror.exe v\nthe new disk V: can not display file size and date correctly.\n. I try to fix the issue\n. has fixed with https://github.com/dokan-dev/dokany/pull/242\n. print:  wdfs.exe with dokanfuse1.dll  build by mingw.\n the sizeof(fuse_stat) in dokanfuse1.dll not equal sizeof(fuse_stat) in wdfs, because In VS2015(build with x86), the mode_t and nlink_t is 4bytes, but In mingw32, they are 2bytes, otherwise, the timespec is 16bytes in VS2015, but 8bytes in mingw.\n. so, if I use mingw, this can not be correctly!\nit seems that I must build my app using the same environment with building dokanfus also can solve the problem.\n. Because i want use the command line parameter to set the Network Map Drive Name each time, so use the parameter volame for the network drive name. And, I didn't find the code to set the network drive name(\"DAV RPC SERVICE\")\n. sorry, I  only know very little about network-provider,  I didn't know how to set an UNC Name for Network Redirector, so ,I directly setup drive label from registry. \nthe dokanctl.exe /i n code can not set unc name with mapping a drive each time \n @Maxhy , you can explain more about?  thanks!\nabout https://github.com/dokan-dev/dokany/issues/234 \nIn VS2015(build with x86), the mode_t and nlink_t is 4bytes, but In mingw32, they are 2bytes,  otherwise, the timespec is 16bytes in VS2015, but 8bytes in mingw.  Maybe, the cygwin is same as VS2015.\nso, I think the stat should be defined by fixed bytes for all field.\n. the command C:\\Program Files\\Dokan\\Dokan Library-1.0.0\\x86>sample\\mirror\\mirror.exe /r c: /l k /n \nwill mirror c: to k:, but the label sometimes is DOKAN,\nwhen mirror to other driveletter(I, L, M ...)  sometimes is other unkown name (cg DAV RPC SERVICE\uff0c or xx\\adfs\\cvv)\uff0c it seems that this is a  bug?\n. I rebuild  with the last commit:  https://github.com/dokan-dev/dokany/commit/d3ecfb0e5d327092113430bfd7b27ee605860081  and test \nC:\\Program Files\\Dokan\\Dokan Library-1.0.0\\x86>sample\\mirror\\mirror.exe /r c: /l m /n /u ffff\nin windows explorer, it show as \n\nFor binary compatibility,  the dokanfuse1.dll build with VS2015,  I build wdfs with dokanfuse1.dll in mingw32.\nif define fuse_stat.st_mode/st_nlink/st_atime... as below \nmode_t        st_mode;\n     nlink_t       st_nlink;\n...\n    timestruc_t   st_atim;\nso , the sizeof(fuse_stat)  in dokanfuse1.dll  not equal sizeof(fuse_stat) in wdfs, because In VS2015(build with x86), the mode_t and nlink_t is 4bytes, but In mingw32, they are 2bytes, otherwise, the timespec is 16bytes in VS2015, but 8bytes in mingw.\n. @Liryna  how to set unc name or network drive label?\n. @Liryna \nGetVolumeInformation is only  correctly with mirror.exe /r c: /l m, when mirror.exe /r c: /l m /n is display error as  \n. Liryna, yes,  your patch f1fb73c is so good!!!!. ",
    "sergeevabc": "Veracrypt is able to run portable, it consists of .exe binary and .sys driver.\nWould be marvelous to see, by the analogy, portable package of CPPCryptFS binary + Dokany driver. . ",
    "andysyncplicity": "@js69, The problem is that in the hypothetical \"AndyDrive\" product, it must uninstall cleanly.\nThis means uninstalling all drivers that it came with, including Dokany.\nThis creates a problem when the user uses AndyDrive and another Dokany product. When the user uninstalls AndyDrive, it must uninstall cleanly, but that would break the other Dokany product.\nOne way to solve the problem is for AndyDrive to just recompile Dokany as a different product, and completely remove it when it's uninstalled. No need to worry about what other Dokany-based products are installed.\n. Oh, that makes perfect sense. Thanks!\n. ",
    "shashiu": "dokany-0001-Fix-for-a-bug-where-the-timer-thread-completes-befor.patch.txt\n. Hi Maxime,\nI can confirm that finding the volume device in the L\"\\.\\Global\" namespace does NOT fix the issue. It also fails with ERROR_NOT_FOUND. The only way to fix this appears to be to access the device it via the mount point symbolic link.\n. Hi Marinko,\nThe device namespace (.\\Volume{xxx}) is not directly accessible from the session, even though the device is being mapped into the session. The mount point symbolic link is the only way that the device object seems to be accessible. There is not enough MSDN documentation on why that might be the case, but, that appears to be how it works.\n. Hi,\nI dont have access to create a remote branch on the dokany project, to be able to create a pull request. I have, however, included a patch with the issue ticket.\n. Is this with /c (current session) flag ? \nIt says its mounted but when I access it, I can't access any of the files in the mirrored drive.\n. Here's the exact repro steps.\n- Run mstsc.exe and log into the RDP session- Run the dbgview sysinternals tool to watch the debug output (make sure to enable all the Capture options)- Run a command prompt- Run mirror /m /c /d /r  /l m- Watch the debug out in dbgview. Notice there are 'Dokan Error: CreateFile failed ... 2' messages- Try to open the m: drive, you wont be able to even though it is mounted.\n. The user has full access to the directory I am mounting with mirror.\n. I am not using the /n option. Not using the /m option makes no difference. Same error.\n. I am including a patch for the fix for the problem above. Basically, the FindMountEntry() routine is returning the wrong entry when 2 terminal services (remote desktop) sessions use the same drive letter. The fix is to include a session identifier in the DOKAN_CONTROL structure and use that in the comparison in FindMountEntry.\nRDS-fix.patch.txt\n. @marinkobabic , please find the fix for the issue above.. The session id is only valid when a user is logged on or disconnected (not actively connected). If they log off, then the session ids get recycled for the next active session.\n\nFrom: Marinko notifications@github.com\nSent: Tuesday, May 30, 2017 4:55:57 PM\nTo: dokan-dev/dokany\nCc: Shashi Uli; Mention\nSubject: Re: [dokan-dev/dokany] Mirror driver /c 'current session' option doesn't appear to work in Terminal Services Session (#517)\nThis pull request #523https://github.com/dokan-dev/dokany/pull/523 should fix the original issue. I decided to not use the sessionid if the mount is used globally. No idea if the sessionid changes if all the users are logged out and do the login again.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHubhttps://github.com/dokan-dev/dokany/issues/517#issuecomment-305005532, or mute the threadhttps://github.com/notifications/unsubscribe-auth/AFSdu8_QSSeIGHrjT3pApZgmNCo0I5f8ks5r_IJdgaJpZM4NhuTD.\n. Hello @Liryna, \nDid this fix make it to the 1.0.4 build ? I don't see the fix in the change log, for some reason.. I had verified the fix a while back - see PR comments https://github.com/dokan-dev/dokany/pull/523. Was there something else you wanted me to verify ?. Hi Lyrina,\nIs the fix in build 1.0.5 ?\n\nFrom: Liryna notifications@github.com\nSent: Friday, September 1, 2017 1:44:55 AM\nTo: dokan-dev/dokany\nCc: Shashi Uli; Mention\nSubject: Re: [dokan-dev/dokany] Mirror driver /c 'current session' option doesn't appear to work in Terminal Services Session (#517)\nHello @shashiuhttps://github.com/shashiu ,\nThe fix has not been merged in the master:\n523https://github.com/dokan-dev/dokany/pull/523\nI was waiting some input from you \ud83d\ude22\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHubhttps://github.com/dokan-dev/dokany/issues/517#issuecomment-326494200, or mute the threadhttps://github.com/notifications/unsubscribe-auth/AFSduxuu6LmSsTYr1YbPft3dT8aqjLHlks5sd5nWgaJpZM4NhuTD.\n. Is there going to be a new build with this fix ?. @Lirynanotifications@github.com, I checked out the build and it seems to fix the issue with remote desktop sessions, that I was seeing before. I'll keep testing it and let you know if I find any new issues.\nThanks.\n\nFrom: Liryna notifications@github.com\nSent: Wednesday, June 14, 2017 12:55:00 AM\nTo: dokan-dev/dokany\nCc: Shashi Uli; Mention\nSubject: Re: [dokan-dev/dokany] Fix current session issues (#523)\n@shashiuhttps://github.com/shashiu There is every time a snapshot build made by the CI selfsigned\nhttps://ci.appveyor.com/api/buildjobs/ss79dhy6ah90bfqj/artifacts/DokanSetup-1.0.3.1193.exe\nhttps://github.com/dokan-dev/dokany/wiki/Build#user-snapshot\nIt would be nice if you could see if this fix your issue before making a fix release official (that take some times).\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHubhttps://github.com/dokan-dev/dokany/pull/523#issuecomment-308319454, or mute the threadhttps://github.com/notifications/unsubscribe-auth/AFSduzTlsviow3a1028wlP2ASDfCHEvrks5sD2ekgaJpZM4Nq0Re.\n. ",
    "gh223682": "@Maxhy I have not been able to reproduce this behavior in Windows 10 x64, trying to mount a volume with EncFS4Win.\nFurthermore, if I log in via a Terminal Services session to an already-established regular desktop session where a Dokan volume is already mounted, I cannot mount that same volume again after unmounting.\n. @Liryna I've been debugging EncFS4Win issues, and either:\n1) Installing Dokan redistributed with the EncFS4Win 1.10.0-RC4 installer (which turns out to be Dokan 1.0.0-RC2, sorry for the error);\n2) Installing Dokan separately using the standalone Dokan installer; or\n3) Installing Dokan over Dokan installed by the EncFS4Win installer.\nIt doesn't happen every time I uninstall so I'm not sure which combination of actions causes this problem, but I've experienced it at least three separate times in the past few days. I'm pretty sure I rebooted after each uninstall of Dokan.\n. ",
    "zTrix": "Here is the log.\ndokan-log.txt\n. Hi, @Liryna \nThanks for your quick response, but our applications are using 0.6 for a long time, and 1.0.0 RC seems to break the API compatibility, so we're unable to switch to 1.0.0 RC for now.\n. I'll have a try to see whether I can find the root cause of this issue.\n. I've tried v0.8.0 redist version, which works without this issue, so this issue should be solved between 0.7.4 and 0.8.0.\n. Further investigation shows that if compiled using windows 10(vs2015, latest wdk and sdk), v0.7.4 also works, but the binary downloaded from github (https://github.com/dokan-dev/dokany/releases/download/v0.7.4/DokanInstall_0.7.4.exe) is the buggy one, so I think that it should be a issue related to windows API compatibility.\n. ",
    "pmalhaire": "Hello I like your project, I took some time to think about it, I think since dokan is exposing kernel functionalities in userland the idea of the visible nut could be interesting. \nresearch \n\n\nresult\n\nIf you like the idea I can make you a set of icons out of this. . @Liryna happy that you like it, I'll make you this as \n ico and svg I guess it will be enough.. @Liryna \nhere is the svg file and a png export\nico will follow\n\ndokan_color.svg.zip\n\ndokan.svg.zip. @Liryna I'll think of something to make it clearer.\nI also need to make it look like a windows icon. Tell me if you have more feedback.. @Liryna \nhere is an update of the icon\n\nWhich will be the more used dokan logo ?\n- GitHub one : svg in 256\n- Application one, for example dokan mirror or other app: ico file\n- Systray icon : ico file in systray style \nNext\n\nAdding colors to the logo\nIcon file\n\nHere is the drafted icon anyone wanted to test and give screenshot is welcome 32 and 16 versions are (it needs to be redrawn simpler)\ndokan_icon.ico.zip\n. 1. colors is done\n\ndokan.svg.zip\n. Here I got something which is working for me I integrated more both parts.\n\n. thank you all here is the svg file\ndokan.svg.zip\n . @magol @yin19941005 \nI tried to fix the \"flying\" feeling with discrete shadow and tiny balance here it is : \n\ndokan.svg.zip\n@Liryna (or those who know) where do I need to commit this ?. thanks @magol I have not done the icon yet. \nIssue being that those guidelines conflict with the UWP guide lines.\nI'll balance between both for the icon since I didn't found clear windows 10 guidelines.\n. I made both pull request to integrate the logo.. @liryna @community your welcome, nice to work with you.\nThe walnut edges are cut in the website - > on it.\nNow I can fix code issues, I am a developer after all.. @Liryna I can't change the avatar icon https://github.com/dokan-dev . @Liryna the avatar image is not clean it seems to be 200*200 here is the 200 px png version :\n\n. I just updated the website https://github.com/dokan-dev/dokan-dev.github.io/pull/5. I guess you can close this issue @Maxhy. @magol I made a small version of the icon your seems to be the 64 one here are several size for reference\n\n\n\n\n. ",
    "magol": "I like the last image.\nMaybe add some discreet shadows under the nut. Now i look like it is flying. . @pmalhaire Thanks for the shadows :-)\nBut what I meant was shadow like what is suggested in the Design Guidelines for Windows 7 for three-dimensional icons.. I have not reviewed the details, but this looks to be a substantial improvement of Dokan.\nBut I do not agree that this is appropriate to be released in version 1.1.0 of Dokan. This is a big breaking changes in the API, and according semver \u00a78, it should be released in a major version.\nAs much as I want this to be released as soon as possible, we should wait to version 2.0.0. On the other hand, no one is saying that there must be a long time between version 1.0.0 and 2.0.0 :-)\n. @Liryna Then I understand how you think, there are always several ways of looking at things. :-)\nIt gets a little strange for the users of the API, but it is a disadvantage we have to accept. Your motivation is clearly much stronger.\n. Is there any idea to already start to experimenting with a C#  implementation of this?\n. @Liryna\nI also want to add this to the TODO list:\n  - [ ] Update Dokan-DotNet to work with the async API.\nThat should of course be at the bottom of the list when the other are fixed. My question is what should be done before there is any idea to start looking at the C# version?. Great\nIf we have to guess vild, what is the time frames? When do we think it's ready enough to start beta testing (and when we can start port Dokan-DotNet)?. > You should be nice at least to know if someone got the same issue on seven.\n\n@EpsilonXX I also see this problem in Windows 7. Very annoying :-(\n. I've also done a little research on this. Unfortunately I have not had enough time to come up with a solution yet.\n\nI hope I get some more time for this.\nI have looked at Sandcastle  that previously was used by Microsoft to generate entire MSDN from a collection of XML files containing all content. These XML files together with the XML comments in the source code is compiled into HTML files, but there is also some support for markdown.\nI'm not sure if this is the way to go, Doxygen also seems promising when I quickly read through what it can do.\n. @Rondom I also have a concern that people start to edit the documentation in the wrong place.\nOne solution I've been thinking about is that maybe to write all documentation in Markdown, and use a build script to automatically update the Markdown files with the latest API syntax based on the source files. This requires that the Markdown files is written in a fixed format, or using custom tags.\nI'm also thinking about a build script that can generate an XML file based on the Markdown files which can then be used together with the <include> tag. Then Visual Studio can access the documentation to present information about the features when implementing.\n. @Liryna Yes, complicate it will be :-p\nAnd, I do not like my idea either.\nBut when you brainstorming, you should not keep quiet about your ideas just because it is useless :-)\n. I really like the idea to have the documentation in the source code and use Doxygen.\nThe only concern I see is to keep documentation between C ++ and C # in sync.\nYou could have a script that compares the generated documentation from the two code bases. But we might be able to keep it in fairly sync manually?\n. \"You had to pull the changes before create your commit to skip the \"auto merge commit\".\"\nI do not quite understand what you mean by that, and that's probably the problem. Please, help me understand what I should do to make the right :-)\n. Ok, pull is something I have to do BEFORE commit. So it is to late to do it now (if I don't redo everything)? \n. Just what I mean, well done :-)\nComment 1\nThe head should be changed to following according to recent changes in Keep a CHANGELOG:\n\nAll notable changes to this project will be documented in this file.\nThe format is based on Keep a Changelog and this project adheres to Semantic Versioning.\n\nComment 2\nI think it would be good if you group the changes based on which project they belong to. And that it is clearly and consistently marked what project each change belonging to. You use for example FUSE - Export utils fonctions, do it consistently for all.\nComment 3\nFSCTL_REQUEST_OPLOCK #97\nare not particularly informative. Please, clarify what it is that you do not have to follow the link to see what it is.\nComment 4\nFor version 0.6.0, you can have a link to web.archive.org/web/20150419082954/http://dokan-dev.net/en and perhaps code.google.com/archive/p/dokan. I do not know if it's relevant, but it's still a part of the history.\n. Well,  it is just a recommendation.  So I don't see any problem to add the version number to the Unreleased section. :) \n. I think this is probably a good idea. The file system that we implement is quite different from NTFS. There are many metadata that we can not convey through the file system, but that we really want to use. If it had been great to solve this in some way.\nAnd I think it is a great idea to get rid of DOKAN_OPERATIONS to next version and replace it with any kind of registration as @jimuk suggests. As it is now, it is not possible to add any new functionality without destroy backward compatibility.. As @Liryna  said,  it is unfortunately not possible to extend functionality without breaking backward compatibility.\nIt's a problem, I'd love to see that we somehow change this model to version 2 so we can expand with new features in the future without breaking compability (se    Open/closed principle).  What it would look like, I do not know. Maybe create a new issue for that discusion? . @jimuk I agree with you. As long as the performance is not affected, I think it could be a good solution.. ",
    "yin19941005": "Hi all,\nI agree with with @magol, in my opinion, adding some shadows under the nut should be better. But I also agree the current version looks fine.. Hello @Liryna ,\nI am not pretty sure for the steps to using the snapshot. I am following these steps to get the snapshot :\nFor 1.0.1-800,\n1. Go to https://ci.appveyor.com/project/Maxhy/dokany/build/1.0.1-800/job/dooqyebob6d7qvfq/artifacts and download the exe file\n2. Install dokan with the installer\nFor 1.0.1-846,\n1. Go to https://ci.appveyor.com/project/Maxhy/dokany/branch/master/job/scscai1s6lo63qd5/artifacts and download the exe file\n2. Install dokan with the installer\nI thought I am testing with 32 bits Windows 10 so it doesn't enforcing me to trust the certificate for the driver. If these steps are not correct, please correct me.\n\nFor the testing environment, actually I am using the Virtual Box (version 5.1.6 r110634) to install VMs for test. The steps to build the testing environment :\nSetup the Template VM:\n1. Install the Windows 10 (32 bit) with build 1607 (Anniversary) with ISO\n2. Startup the Machine Once to ensure install correctly\nSetup for the Testing VM\n1. Clone From the Template VM\n2. Setup the Network to connect host machine and rename the machine\n3. Restart the VM\n4. Send the dokan installer and the testing files (the mp3, mp4 files, etc.)\n5. Create the testing directory (C:\\temp) and copy the testing files\n6. Change the file association to Windows Media Player for the testing files\n7. Testing the files can be open in the normal drive\n8. Install dokan from the exe installer\n9. Restart the VM\n10. Run the command with the mirror.exe (in Program File)\n11. Open the files in drive mounted with dokan\n\nI had tested for both 1.0.1-800 and 1.0.1-846 in Windows 10 environment. And the Windows Media Player is fail to open the audio and video files in both version. If using another player, such as VLC and the default player \"Movie & TV\" in Windows 10, I can play the audio and video file. I am trying to look for the log to see what is happening. I will try to get the log and upload it. Do you get any insight why this is happening?\n\n[161102]1035.LOG.txt\nI had just got the log from the Windows 7 VM. The things I done during these logs:\n1. Mount up the drive with mirror.exe /c /r C:\\temp /l Z /d /s /n /u \\localhost\\mydokan\\\n2. Trying to open Canon.mp3\n3. Close Windows Media Player\n4. Trying to open OOBEMovie.wmv\n5. Close Windows Media Player\n6. Trying to open small.mp4\n7. Close Windows Media Player\n8. Press Ctrl  + C to release the drive\n. Hello @Liryna ,\nYes, I did tested for the normal shared folder. And I am able to play the audio and video files with all player that I had tested (Windows Media Player, VLC, Default Player (the Movie & TV) of Windows 10). So, I think this not the normal behavior for network drive.\n. Hello @Liryna ,\nI had tried to use Wireshark to identify why the Windows Media Player is so special to other player. I figure out that all the successful player (Groove player, VLC) for the dokan network drive will use the Ioctl Request FSCTL_CREATE_OR_GET_OBJECT_ID before they can play the Audio or Video on the normal network shared drive. On the other hand, the Windows Media Player is using GetInfo Request FILE_INFO/SMB2_FILE_NETWORK_OPEN_INFO. \nThe Testing Environment Setup:\n1. Share the folder on the host machine with Windows build-in function (CIFS)\n2. On the VM client machine, connect the host machine by inputting the ip address of host machine\n3. Start Wireshark and start capture the network\n4. Open the Audio/Video file to play by the testing player\n5. Close the player and save the Wireshark record\nI am not sure my understanding is correct or not, please correct me. The success player is trying to call the ioctl command of SMB2 through the network while the Windows Media Player is using the legacy approach on SMB1 (not sure for this one). Base on my searching, the ioctl command seems was introduced since SMB2. I thought maybe the Windows Media Player didn't upgrade for its implementation to use ioctl and the dokany library have not implement the for the legacy approach. So, the Windows Media Player just cannot play the Video and Audio on the network drive. What do you think about this?\nThe Wireshark record files:\nwireshark_record.zip\n. Hi @Liryna ,\nYes, I did a test on a Windows 10 VM for snapshot 1.0.1.1045 but the problem persists. The logs still didn't give any hints for me to this issue.\nI found that when network drive option is used, the players will try to get some Alternate Data Streams (ADS), such as \":Zone.Identifier\" and \":ms-properties\", and usually they fail with \"STATUS_OBJECT_NAME_NOT_FOUND\" in dokan (BUT sometimes they success, I got no idea on it). \nWould it possible the issue is related these ADS? It seems the NTFS is supposed to handle these ADS stuffs. \nExtracted version of log:\n[161207]Mirror_dokan-1.0.1.1045_networkDrive_WindowMediaPlayer_debug.LOG.txt\n. I had studied hard for the NTFS ADS and I don't think this issue is related to the ADS anymore.\nI also believe this issue should be related the some path problem. Because this issue just occur with network drive option. However, I still didn't get any idea why this issue is happening.. I am not pretty sure but I think it is not. By my understanding, when we set the Security Attribute the operation will be sent to the \\dokan\\dokan.c\\dokanloop and call the DispatchSetSecurity function.\nIn \\dokan\\security.c\\DispatchSetSecurity, \nsecurityDescriptor =\n      (PCHAR)EventContext + EventContext->Operation.SetSecurity.BufferOffset;\nThe PCHAR should be 8 bits long (1 bytes) and BufferOffset is ULONG should be 4 bytes. So, it doesn't seems guarantee the  SecurityDescriptor pointer is 4-byte aligned.\nReferences: PCHAR size, \\sys\\public.h for BufferOffset\nAlthough I am trying to fix it but it seems I am not able to fix it lol. I think we should use something like PWCHAR instead of using PCHAR.\n. Thank you @marinkobabic ! I can reproduce your issue and #405 also works for me!\nI also thought the same #400 should be related to this problem.\nHowever, I think #400 would be more complicated because the user can share the folder in any sub directory.. Hello @Liryna ,\nI had a correction on the multiple remote client machine case paragraph. Now, the issue can always reproduce on Windows 7 either. One of the program can reproduce the issue is Windows Photo Viewer.\nI had just test for the pull request #382 on Windows 7 & Windows 10 and seems it can fix the host machine is trying to access the same file through dokan drive case but the multiple remote client machine case still persist. With the #382 fix, the Windows didn't hang anymore. The host machine can still open up the files even there are existing a client also open up the files, which is normal behavior. However, another client still cannot open up the file.\nFor more easy to understand with #382 fix,\n1. Mount up the drive with mirror on host machine\n2. Sharing the folder on the dokan drive by the Windows build-in function on host machine\n3. Connect the host machine by inputting the IP address on the remote client machine A (both Win 7 & Win 10 tested as client)\n4. Create or Open files on shared folder on host machine\n5. Access the same file on the host machine through dokan drive\n6. Host machine successful open the same file. (NOT Hang anymore)\n7. Repeat Step 3 and 4 for same file on another remote client machine B\n8. Client machine B cannot open the file. Error message share violation has occurred returned. (NOT a normal behavior)\n\nI think this is because the fix on #382 make the dokan not locking the whole file up, so the Windows didn't hang. However, the lock didn't seems already well handled. Dokan should be mis-matched something likeshared read lock as shared write lock (Not sure, not familiar with it). This should be the reason why the shared violation returned if there are multiple client.\n. Hi @Liryna ,\nSorry for the delay. I had added some debug logs in DokanCheckShareAccess and trying to print out the  return value of IoCheckShareAccesson snapshot 1.0.1.1018 and didn't observe any strange return value with it. It would return 0 (STATUS_SUCCESS). And the problem persist.\nI thought my snapshot version is pretty old and I had updated it to snapshot version 1.0.1.1049. And I am not able to reproduce the issue with Windows Photo Viewer anymore! It seems the issue had fixed! I further tested on snapshot 1.0.1.1045 and the problem didn't occur either. I am still identifying the root cause of this issue. Could you also test with the latest snapshot to check the issue persist or not?\nHere is the code I used to print out some debug log on snapshot 1.0.1.1049 : \n\nstatus = IoCheckShareAccess(DesiredAccess, ShareAccess, FileObject,\n                              &FcbOrDcb->ShareAccess, FALSE);\n  DDbgPrint(\"  DokanCheckShareAccess : IoCheckShareAccess return status = %lx \\n\", status);\n  DDbgPrint(\"  DokanCheckShareAccess : Start print out input parameter Flag ... \\n\");\n  DDbgPrint(\"  DesiredAccess : \\n\");\n  if (FlagOn(DesiredAccess, FILE_SHARE_READ)) {\n      DDbgPrint(\"    FILE_SHARE_READ \\n\");\n  }\n  if (FlagOn(DesiredAccess, FILE_SHARE_WRITE)) {\n      DDbgPrint(\"    FILE_SHARE_WRITE \\n\");\n  }\n  if (FlagOn(DesiredAccess, FILE_SHARE_DELETE)) {\n      DDbgPrint(\"    FILE_SHARE_DELETE \\n\");\n  }\n  DDbgPrint(\"  ShareAccess : \\n\");\n  if (FlagOn(ShareAccess, FILE_GENERIC_READ)) {\n      DDbgPrint(\"    FILE_GENERIC_READ \\n\");\n  }\n  if (FlagOn(ShareAccess, FILE_GENERIC_WRITE)) {\n      DDbgPrint(\"    FILE_GENERIC_WRITE \\n\");\n  }\n  if (FlagOn(ShareAccess, FILE_GENERIC_EXECUTE)) {\n      DDbgPrint(\"    FILE_GENERIC_EXECUTE \\n\");\n  }\n  if (FlagOn(ShareAccess, FILE_READ_DATA)) {\n      DDbgPrint(\"    FILE_READ_DATA \\n\");\n  }\n  if (FlagOn(ShareAccess, FILE_LIST_DIRECTORY)) {\n      DDbgPrint(\"    FILE_LIST_DIRECTORY \\n\");\n  }\n  if (FlagOn(ShareAccess, FILE_WRITE_DATA)) {\n      DDbgPrint(\"    FILE_WRITE_DATA \\n\");\n  }\n  if (FlagOn(ShareAccess, FILE_ADD_FILE)) {\n      DDbgPrint(\"    FILE_ADD_FILE \\n\");\n  }\n  if (FlagOn(ShareAccess, FILE_APPEND_DATA)) {\n      DDbgPrint(\"    FILE_APPEND_DATA \\n\");\n  }\n  if (FlagOn(ShareAccess, FILE_ADD_SUBDIRECTORY)) {\n      DDbgPrint(\"    FILE_ADD_SUBDIRECTORY \\n\");\n  }\n  if (FlagOn(ShareAccess, FILE_CREATE_PIPE_INSTANCE)) {\n      DDbgPrint(\"    FILE_CREATE_PIPE_INSTANCE \\n\");\n  }\n  if (FlagOn(ShareAccess, FILE_READ_EA)) {\n      DDbgPrint(\"    FILE_READ_EA \\n\");\n  }\n  if (FlagOn(ShareAccess, FILE_WRITE_EA)) {\n      DDbgPrint(\"    FILE_WRITE_EA \\n\");\n  }\n  if (FlagOn(ShareAccess, FILE_EXECUTE)) {\n      DDbgPrint(\"    FILE_EXECUTE \\n\");\n  }\n  if (FlagOn(ShareAccess, FILE_TRAVERSE)) {\n      DDbgPrint(\"    FILE_TRAVERSE \\n\");\n  }\n  if (FlagOn(ShareAccess, FILE_DELETE_CHILD)) {\n      DDbgPrint(\"    FILE_DELETE_CHILD \\n\");\n  }\n  if (FlagOn(ShareAccess, FILE_READ_ATTRIBUTES)) {\n      DDbgPrint(\"    FILE_READ_ATTRIBUTES \\n\");\n  }\n  if (FlagOn(ShareAccess, FILE_WRITE_ATTRIBUTES)) {\n      DDbgPrint(\"    FILE_WRITE_ATTRIBUTES \\n\");\n  }. Hi @Liryna ,\n\nI had tested with 1.0.2.1000 release with Windows 10 32 bits host and two Windows 7 client. I am not able reproduce the issue anymore!  Although I am not sure which commit had fixed this issue, the latest release had already fixed it!\nThe 1.0.2.1000 release had already fixed this issue! Thank you very much @Liryna ! . Hello,\nI got some new findings on this issue. I had added more DbgPrintW in \\dokan\\setfile.c\\DokanSetRenameInformation\n\nWCHAR newNameTest[MAX_PATH];\nZeroMemory(newNameTest, sizeof(newNameTest));\nRtlCopyMemory(newNameTest, renameInfo->FileName, renameInfo->FileNameLength);\nDbgPrintW(L\"### setfile rename. info name :%s\\n\", newNameTest);\n\nI found that if I directly rename on dokan drive, there is a leading \"\\\".\n### setfile rename. info name :\\t1\\t2t2\nThrough share,\n### setfile rename. info name :t1\\t2\nAnd the following block of if statement will trying to add the parent folder to it.\nsetfile.c#L164\n\nif (renameInfo->FileName[0] != L'\\') {\n    ULONG pos;\n    for (pos = EventContext->Operation.SetFile.FileNameLength / sizeof(WCHAR);\n         pos != 0; --pos) {\n      if (EventContext->Operation.SetFile.FileName[pos] == '\\')\n        break;\n    }\n    RtlCopyMemory(newName, EventContext->Operation.SetFile.FileName,\n                  (pos + 1) * sizeof(WCHAR));\n    RtlCopyMemory((PCHAR)newName + (pos + 1) * sizeof(WCHAR),\n                  renameInfo->FileName, renameInfo->FileNameLength);\n  } else {\n    RtlCopyMemory(newName, renameInfo->FileName, renameInfo->FileNameLength);\n  }\n\n@Liryna ,\nBase on my understanding, the if-else statement is trying to handle the relative path input, am I right? Because the \\ should be reserved by Windows, so, I think it is adding the parent path to it in order to get the absolute path.\nSource Log files\n[161124]Mirror_dokan-1.0.1.1018_rename_directOnDokan_debug.LOG.txt\n[161124]Mirror_dokan-1.0.1.1018_rename_ThroughShare_debug.LOG.txt\n. Hello @Liryna ,\nI got more new findings on this issue. Just adding the \"\\\" would not solve this issue. And the root cause of this issue is on the driver (dokan.sys).\nFindings\nI found that the root cause of this issue should be on the \\sys\\fileinfo.c\\DokanDispatchSetInformation this function (on driver). The leading \"\\\" missing should be a normal behavior; The problem is cause by the driver didn't handle the IRP input correctly.\nBase on MSDN, the FILE_RENAME_INFO structure would contain a Handle for the RootDirectory but the dokan driver will just ignore it. Start from this line in fileinfo.c, the driver start to get the values from the IRP but the RootDirectory had been ignored. \nI had added some DbgPrintW to check the RootDirectory in renameInfo (get from Irp->AssociatedIrp.SystemBuffer) and I discovery that the RootDirectory always NOT NULL when the file path didn't contain a leading \"\\\". One of the use case of RootDirectory is the Shared Dokan Drive. By my understanding, the Windows would use the \"RootDirectory\" parameter to handle the relative path issue. I think that's why the problem occur.\nTesting result when prepend \"\\\"\nThe rename will success if you share the root directory of the dokan drive. For example, using mirror.exe /r C:\\temp /l Z /t 1 /d /s to mount up dokan drive, the rename will work fine if you sharing \"Z:\\\". However, if you are sharing the sub-folder in the dokan drive, the rename will remain fail (e.g. Sharing \"Z:\\t1\\t2\\t3\\\"). \nMoreover, this issue may cause explorer hold up. I had tested to \"Cut-and-Paste\" file (the actual operation will be rename). I had tested with this test case : \nOriginal Path : \"Z:\\t1\\t2\\t3\\t4\\t5\" (absolute path for easy understanding)\nDestination Path : \"Z:\\t1\\t2\\t3\\t5\" (absolute path for easy understanding)\nShared Folder : \"Z:\\t1\\t2\\t3\"\nThe mirror will suck in an infinity loop and keep retrying.\nHere is the Edited version of setfile.c for convenient to test if anyone wanted: \nsetfile_dokan-1.0.1.1018 Edited.zip\nPossible Solution\n\nPassing the RootDirectory handle to MirrorMoveFile in order to pass it to Windows API and let the Windows handle it\nResolve the file path from RootDirectory handle and prepend it to the file path \n\nFor the first solution, I think this would be a better solution than the second solution. This is because the Windows seems design the API base on the user will make use of the RootDirectory handle. And this should be less coming up problem if we adapt this solution. However, the API (or Interface?) of  MirrorMoveFile would also change if we are going to pass the handle to it. Some structure may also required to change.\nFor the second solution, I am studying on this essay on MSDN and I am not sure would there will be other side effect or not.\n\n@Liryna , what is your opinion for these two solutions?\n. I had just tested for the 1.0.1.1025 snapshot for the pull request you mentioned. And it does not fix this issue. However, I believe this issue is also related to the FULL PATH problem.\nThe difference between #396 and this issue should be in #396 the problem occur with PFILE_NAME_INFORMATION structure and this issue occur with FILE_RENAME_INFO structure. \nIn this issue, the path is associated with a handle which is to the root directory in which the file to be renamed is located. BUT the dokan.sys didn't correctly handle it.\nhttps://msdn.microsoft.com/en-us/library/windows/desktop/aa364398(v=vs.85).aspx\n\ntypedef struct _FILE_RENAME_INFO {\n  BOOL   ReplaceIfExists;     //TRUE to replace the file; otherwise, FALSE.\n  HANDLE RootDirectory;  //A handle to the root directory in which the file to be renamed is located.\n  DWORD  FileNameLength; //The size of FileName in bytes.\n  WCHAR  FileName[1]; //The new file name.\n} FILE_RENAME_INFO, *PFILE_RENAME_INFO;. Hi @marinkobabic ,\n\nI had just added some log for the targetFileObject->FileName.Buffer and renameContext->FileName. I am just renaming the txt from TestingABC.txt to TestingABCD.txt in the same directory through the share drive. Here is the extracted log :\n\n(Log with Shared Dokan Drive)\n00258244    78.20473480 [DokanFS] ==> DokanSetInformationn\n00258245    78.20476532 [DokanFS]   ProcessId 4 \n00258246    78.20478058 [DokanFS]   FileName: t5\\t6\\TestingABC.txt FCB.FileName: \\t1\\t2\\t3\\t4\\t5\\t6\\TestingABC.txt\n00258247    78.20481110 [DokanFS]   FileRenameInformation \n00258248    78.20482635 [DokanFS]   FileObject Specified t5\\t6\\TestingABCD.txt\n00258249    78.20484161 [DokanFS]   renameInfo->RootDirectory 8000074C\n00258250    78.20487213 [DokanFS]   targetFileObject != NULL  \n00258251    78.20488739 [DokanFS]   renameContext->FileNameLength 42, targetFileObject->FileName.Length 42\n00258252    78.20491028 [DokanFS]   renameContext->FileName t5\\t6\\TestingABCD.txt.txt, targetFileObject->FileName.Buffer t5\\t6\\TestingABCD.txt\n00258253    78.20493317 [DokanFS]   After RtlCopyMemory, renameContext->FileName t5\\t6\\TestingABCD.txt.txt, targetFileObject->FileName.Buffer t5\\t6\\TestingABCD.txt   \n00258254    78.20494843 [DokanFS]   After assign length, renameContext->FileNameLength 42, targetFileObject->FileName.Length 42   \n00258255    78.20500183 [DokanFS] ==> DokanRegisterPendingIrp \n00258256    78.20502472 [DokanFS] ==> DokanRegisterPendingIrpMain \n00258257    78.20504761 [DokanFS] <== DokanRegisterPendingIrpMain \n00258258    78.20507050 [DokanFS] <== DokanRegisterPendingIrp \n00258259    78.20508575 [DokanFS]   status = 0x103\n00258260    78.20510101 [DokanFS]   status = STATUS_PENDING \n00258261    78.20513153 [DokanFS] <== DokanSetInformation\n[161201]Kernel_dokan-1.0.1.1018_rename_ShareRenameInSameDirectory_debug33.LOG.txt\n\nThe following log is the normal local dokan drive rename log.\n\n(Log with local Dokan Drive)\n00423630    29.12574005 [DokanFS] ==> DokanSetInformationn\n00423631    29.12575912 [DokanFS]   ProcessId 472 \n00423632    29.12578011 [DokanFS]   FileName: \\t1\\t2\\t3\\t4\\t5\\t6\\TestingABC.txt FCB.FileName: \\t1\\t2\\t3\\t4\\t5\\t6\\TestingABC.txt \n00423633    29.12579918 [DokanFS]   FileRenameInformation \n00423634    29.12582016 [DokanFS]   FileObject Specified \\t1\\t2\\t3\\t4\\t5\\t6\\TestingABCD.txt \n00423635    29.12584114 [DokanFS]   renameInfo->RootDirectory 00000000\n00423636    29.12585831 [DokanFS]   targetFileObject != NULL  \n00423637    29.12587738 [DokanFS]   renameContext->FileNameLength 80, targetFileObject->FileName.Length 68\n00423638    29.12589836 [DokanFS]   renameContext->FileName \\??\\Z:\\t1\\t2\\t3\\t4\\t5\\t6\\TestingABCD.txt, targetFileObject->FileName.Buffer \\t1\\t2\\t3\\t4\\t5\\t6\\TestingABCD.txt\n00423639    29.12592697 [DokanFS]   After RtlCopyMemory, renameContext->FileName \\t1\\t2\\t3\\t4\\t5\\t6\\TestingABCD.txt, targetFileObject->FileName.Buffer \\t1\\t2\\t3\\t4\\t5\\t6\\TestingABCD.txt \n00423640    29.12596130 [DokanFS]   After assign length, renameContext->FileNameLength 68, targetFileObject->FileName.Length 68   \n00423641    29.12598038 [DokanFS]    rename:  \n00423642    29.12600517 [DokanFS] ==> DokanRegisterPendingIrp \n00423643    29.12602615 [DokanFS] ==> DokanRegisterPendingIrpMain \n00423644    29.12604523 [DokanFS] <== DokanRegisterPendingIrpMain \n00423645    29.12606621 [DokanFS] <== DokanRegisterPendingIrp \n00423646    29.12608528 [DokanFS]   status = 0x103\n00423647    29.12610626 [DokanFS]   status = STATUS_PENDING \n00423648    29.12612343 [DokanFS] <== DokanSetInformation \n[161201]Kernel_dokan-1.0.1.1018_rename_LocalRenameInSameDirectory_debug34.LOG.txt\n\nYes, you are correct they are not the same while the normal dokan drive would only getting the same data after RtlCopyMemory operation. It is really weird for me. The renameContext->FileNameLength and targetFileObject->FileName.Length is also the same before assigning the value on the shared dokan drive while the normal dokan drive is relying the assign operation to make them equal.\nMaybe we should check the actual length is consistent to the length its stated or not and perform some handling operation. What's your opinion?. Thanks a lot @marinkobabic !!\nThe pull request #410 had fix my problem!\nThank you for your fix!. Hi @marinkobabic ,\nI had tested the pull request with my Windows 10 VM and I am not able to reproduce the problem anymore!\nThanks a lot! \ud83d\udc4d . Hi @Liryna ,\nThank you for your kindly explanation!! I got a bit confused for new option DOKAN_OPTION_FILELOCK_USER_MODE (/f option). \nDo you mean that I should either implementing the lock/mutex in the read/write operation or enable the /f option and implementing the lock function in the mirror (& call the mirrorLockFile in read/write)?. Hi @Liryna ,\nThank you for your kindly explanation! I had confirmed the OVERLAPPED flag is not set in my case but the issue can be fixed by adding Mutex on the read/write operation.\nI think the problem is come from the CIFS share may have a buffer and this explicit the race condition on the read/write operation even the OVERLAPPED flag is not set. I have a VM which usually can reproduce the issue on each test of copying the files. After adding a Mutex for both read and write function in mirror, the data corruption issue gone.\n\n@marinkobabic ,\nIt didn't seems the issue is caused by reading the incomplete write files. I had checked the log files and it doesn't trying to read the file before the last write operation complete to the same file. I think the cause of this issue is CIFS would causing the read/write operation similar with the case as OVERLAPPED is set (maybe because the buffer?). Is my fault that didn't confirm the document carefully.\n\nThank you for you guys' kindly explanation again!!\n. Hi @marinkobabic ,\nYes, I did found the error log in the Windows Event Viewer on the Windows Server. The following is the screenshot : \n\nFaulting application name: mirror.exe, version: 0.0.0.0, time stamp: 0x589c02e8\nFaulting module name: ucrtbase.dll, version: 10.0.14393.0, time stamp: 0x578997b5\nException code: 0xc0000409\nFault offset: 0x000000000006d5b8\nFaulting process id: 0x137c\nFaulting application start time: 0x01d287693f0add70\nFaulting application path: C:\\edited_mirror\\mirror.exe\nFaulting module path: C:\\Windows\\System32\\ucrtbase.dll\nReport Id: 88cefb83-cf98-46b4-81a5-26b27a432d5c\nFaulting package full name: \nFaulting package-relative application ID:\n\n\n```\nFault bucket 116329809748, type 5\nEvent Name: BEX64\nResponse: Not available\nCab Id: 0\nProblem signature:\nP1: mirror.exe\nP2: 0.0.0.0\nP3: 589c02e8\nP4: ucrtbase.dll\nP5: 10.0.14393.0\nP6: 578997b5\nP7: 000000000006d5b8\nP8: c0000409\nP9: 0000000000000005\nP10: \nAttached files:\n\\?\\C:\\ProgramData\\Microsoft\\Windows\\WER\\Temp\\WER29A3.tmp.WERInternalMetadata.xml\nThese files may be available here:\nC:\\ProgramData\\Microsoft\\Windows\\WER\\ReportArchive\\AppCrash_mirror.exe_e58d2f6e1ff02f4d8a7ed5966fa05640d87a7832_27c9671d_11a01386\nAnalysis symbol: \nRechecking for solution: 0\nReport Id: 88cefb83-cf98-46b4-81a5-26b27a432d5c\nReport Status: 0\nHashed bucket: f57fde0f84e0f8e135140799b960fd3b\n```\n\nThe Report.wer :\nVersion=1\nEventType=BEX64\nEventTime=131316227681834242\nReportType=2\nConsent=1\nUploadTime=131316227696521775\nReportIdentifier=0a8f56ad-f35d-11e6-afd9-0050568735cf\nIntegratorReportIdentifier=88cefb83-cf98-46b4-81a5-26b27a432d5c\nNsAppName=mirror.exe\nAppSessionGuid=0000137c-0002-001e-70dd-0a3f6987d201\nTargetAppId=W:000667a941db3c9250f14e64226812c93eee0000ffff!000044d28b8ee2c5169f54e7db8c1cc10c5b49bed874!mirror.exe\nTargetAppVer=2017//02//09:05:49:28!0!mirror.exe\nBootId=4294967295\nResponse.BucketId=f57fde0f84e0f8e135140799b960fd3b\nResponse.BucketTable=5\nResponse.LegacyBucketId=116329809748\nResponse.type=4\nSig[0].Name=Application Name\nSig[0].Value=mirror.exe\nSig[1].Name=Application Version\nSig[1].Value=0.0.0.0\nSig[2].Name=Application Timestamp\nSig[2].Value=589c02e8\nSig[3].Name=Fault Module Name\nSig[3].Value=ucrtbase.dll\nSig[4].Name=Fault Module Version\nSig[4].Value=10.0.14393.0\nSig[5].Name=Fault Module Timestamp\nSig[5].Value=578997b5\nSig[6].Name=Exception Offset\nSig[6].Value=000000000006d5b8\nSig[7].Name=Exception Code\nSig[7].Value=c0000409\nSig[8].Name=Exception Data\nSig[8].Value=0000000000000005\nDynamicSig[1].Name=OS Version\nDynamicSig[1].Value=10.0.14393.2.0.0.8466.22\nDynamicSig[2].Name=Locale ID\nDynamicSig[2].Value=1033\nDynamicSig[22].Name=Additional Information 1\nDynamicSig[22].Value=27f3\nDynamicSig[23].Name=Additional Information 2\nDynamicSig[23].Value=27f3b6883ddcf2a06c5327e99ea46615\nDynamicSig[24].Name=Additional Information 3\nDynamicSig[24].Value=746f\nDynamicSig[25].Name=Additional Information 4\nDynamicSig[25].Value=746f1c6ba1f0e0c363f8ffe5d877a0f5\nUI[2]=C:\\edited_mirror\\mirror.exe\nUI[3]=mirror.exe has stopped working\nUI[4]=Windows can check online for a solution to the problem.\nUI[5]=Check online for a solution and close the program\nUI[6]=Check online for a solution later and close the program\nUI[7]=Close the program\nLoadedModule[0]=C:\\edited_mirror\\mirror.exe\nLoadedModule[1]=C:\\Windows\\SYSTEM32\\ntdll.dll\nLoadedModule[2]=C:\\Windows\\System32\\KERNEL32.DLL\nLoadedModule[3]=C:\\Windows\\System32\\KERNELBASE.dll\nLoadedModule[4]=C:\\Windows\\System32\\USER32.dll\nLoadedModule[5]=C:\\Windows\\System32\\win32u.dll\nLoadedModule[6]=C:\\Windows\\System32\\GDI32.dll\nLoadedModule[7]=C:\\Windows\\System32\\gdi32full.dll\nLoadedModule[8]=C:\\Windows\\System32\\ADVAPI32.dll\nLoadedModule[9]=C:\\Windows\\System32\\msvcrt.dll\nLoadedModule[10]=C:\\Windows\\System32\\sechost.dll\nLoadedModule[11]=C:\\Windows\\System32\\RPCRT4.dll\nLoadedModule[12]=C:\\Windows\\System32\\ucrtbase.dll\nLoadedModule[13]=C:\\Windows\\SYSTEM32\\dokan1.dll\nLoadedModule[14]=C:\\Windows\\SYSTEM32\\VCRUNTIME140.dll\nLoadedModule[15]=C:\\Windows\\System32\\SHELL32.dll\nLoadedModule[16]=C:\\Windows\\System32\\cfgmgr32.dll\nLoadedModule[17]=C:\\Windows\\System32\\windows.storage.dll\nLoadedModule[18]=C:\\Windows\\System32\\combase.dll\nLoadedModule[19]=C:\\Windows\\System32\\bcryptPrimitives.dll\nLoadedModule[20]=C:\\Windows\\System32\\powrprof.dll\nLoadedModule[21]=C:\\Windows\\System32\\shlwapi.dll\nLoadedModule[22]=C:\\Windows\\System32\\kernel.appcore.dll\nLoadedModule[23]=C:\\Windows\\System32\\shcore.dll\nLoadedModule[24]=C:\\Windows\\System32\\profapi.dll\nLoadedModule[25]=C:\\Windows\\System32\\IMM32.DLL\nLoadedModule[26]=C:\\Windows\\system32\\uxtheme.dll\nLoadedModule[27]=C:\\Program Files\\Common Files\\microsoft shared\\ink\\tiptsf.dll\nLoadedModule[28]=C:\\Windows\\System32\\OLEAUT32.dll\nLoadedModule[29]=C:\\Windows\\System32\\ole32.dll\nState[0].Key=Transport.DoneStage1\nState[0].Value=1\nFriendlyEventName=Stopped working\nConsentKey=BEX64\nAppName=mirror.exe\nAppPath=C:\\edited_mirror\\mirror.exe\nNsPartner=windows\nNsGroup=windows8\nApplicationIdentity=A8EDDC6DEEEB6190389C608163FD145B\nMetadataHash=359840487\n\nThe corresponding mirror debug log : \ncopyError_Mirrortest002.zip\nThe corresponding kernel log : \ncopyError_Mirrortest002_kernel.zip\nThe error report zip file : \nWindowsEventLog_E02.zip\n. Hi @marinkobabic ,\nI had created a new branch cancel-crash-more-log on my fork and adding the more log by this commit.\nMirror Debug Log : \n```\nSendWriteRequest\nSendWriteRequest : status = 1, EventLength = 48, BufferLength = 65798, returnedLength = 65798 \nSendWriteRequest got 65798 bytes\nSendWriteRequest : status = 1, EventLength = 48, BufferLength = 65798, returnedLength = 65798 \nWriteFile 0053\nSendWriteRequest got 65798 bytes\n    WriteFile : Just Before Call to DokanInstance->DokanOperations->WriteFile Function. \nWriteFile 0053\nWriteFile : E:\\mirror_test04\\CentOS-7-x86_64-DVD-1511.iso, offset 1198391296, length 65536\n    WriteFile : Just Before Call to DokanInstance->DokanOperations->WriteFile Function. \nWriteFile : E:\\mirror_test04\\CentOS-7-x86_64-DVD-1511.iso, offset 1198456832, length 65536\n    write 65536, offset 1198391296\nWriteFile : Just After Call to DokanInstance->DokanOperations->WriteFile Function. \nwrite 65536, offset 1198456832\n\nWriteFile : eventInfo->BufferLength = 65536 \nWriteFile : Just After Call to DokanInstance->DokanOperations->WriteFile Function. \nWriteFile : eventInfo->Operation.Write.CurrentByteOffset.QuadPart = 1198456832 \nWriteFile : eventInfo->BufferLength = 65536 \nWriteFile : Just Before Calling SendEventInformation. \nWriteFile : eventInfo->Operation.Write.CurrentByteOffset.QuadPart = 1198522368 \nWriteFile : Just Before Calling SendEventInformation. \nWriteFile : Just After Calling SendEventInformation. \nWriteFile : Just After Calling free(eventInfo). \nWriteFile : Just After Calling SendEventInformation. \nWriteFile : Just Before Calling free(EventContext).. \nWriteFile : Just After Calling free(eventInfo). \nWriteFile : Just After Calling free(EventContext). \nWriteFile : Just Before Calling free(EventContext).. \nWriteFile : Just After Calling free(EventContext).\n\nSendWriteRequest\nSendWriteRequest\nSendWriteRequest : status = 1, EventLength = 48, BufferLength = 65798, returnedLength = 0 \nreturnedLength == 0, After SendWriteRequest LastError : 0 \nSendWriteRequest got 0 bytes\nWriteFile 0053\nWriteFile : Just Before Call to DokanInstance->DokanOperations->WriteFile Function.\n\nSendWriteRequest : status = 1, EventLength = 48, BufferLength = 65798, returnedLength = 0 \nreturnedLength == 0, After SendWriteRequest LastError : 0 \nSendWriteRequest got 0 bytes\nWriteFile 0053\nWriteFile : Just Before Call to DokanInstance->DokanOperations->WriteFile Function.\n\n```\n The log stop at this line : https://github.com/yin19941005/dokany/blob/cancel-crash-more-log/dokan/write.c#L89 \nIt seems the mirror crashed after redirecting the write process to the MirrorWriteFile. Furthermore, I checked the error code from the  error log in the Windows Event Viewer. The error code 0xc0000409 is stand for STATUS_STACK_BUFFER_OVERRUN. It seems the reason of crash is because the Write Operation is using the invalid buffer (since it is 0 and should be no buffer at all) to perform the write operation. \nBy my understanding, the WriteFile (https://github.com/dokan-dev/dokany/blob/master/samples/dokan_mirror/mirror.c#L593) called in the MirrorWriteFile is calling actual Write Function. However, I am not sure where did it redirecting to. I don't think any checking is performed in mirror before pass the buffer to that function. Maybe that function is assuming the input buffer is valid so it got crashed.\n\nBesides, I had also added the log to print out the Irp->IoStatus.Information value before it return on this line : https://github.com/yin19941005/dokany/blob/cancel-crash-more-log/sys/event.c#L821. However, I couldn't find any Irp->IoStatus.Information = 0 entry in the recorded kernel log. (You can check with the log file I attached below). It's quite strange. I further check is there any null value would be handled by continue for loop and skip to assign the value to it, but I even couldn't found any entry for it.\n\nI am not pretty sure about the flow of the process please correct me if my understanding below is incorrect : \n\nthe user input will captured by the DokanLoop and call DispatchWrite in this case\nDispatchWrite will call SendWriteRequest and pass the data to DokanDispatchDeviceControl by calling the DeviceIoControl function (the data will somehow transfer to IRP)\nDokanDispatchDeviceControl will call DokanEventWrite and start to return to the DispatchWrite by the flow described above and continue to run.\nThe DispatchWrite call to MirrorWriteFile then the mirror had crashed. (need more log to confirm the reason)\n\n\nI would add more log to check why calling the MirrorWriteFile will cause the crash.\nThe full mirror log with more Dbgprint: \ncopyError_Mirrortest004.zip\nThe full kernel log with more Dbgprint:\ncopyError_Mirrortest004_kernel.zip\n. Yes, you are right. I added more log by this commit.\nI also using /t 1 option to make the mirror run as single thread. The mirror debug log : \n```\nSendWriteRequest\nSendWriteRequest : status = 1, EventLength = 48, BufferLength = 65798, returnedLength = 65798 \nSendWriteRequest got 65798 bytes\n    WriteFile : EventContext->SerialNumber = 215578 \n    WriteFile : EventContext->Operation.Write.RequestLength = 0 \nWriteFile 0051\nWriteFile : Just Before Call to DokanInstance->DokanOperations->WriteFile Function.\n\nWriteFile : E:\\mirror_test06\\CentOS-7-x86_64-DVD-1611.iso, offset 818872320, length 65536\n    write 65536, offset 818872320\nWriteFile : Just After Call to DokanInstance->DokanOperations->WriteFile Function. \nWriteFile : eventInfo->BufferLength = 65536 \nWriteFile : eventInfo->Operation.Write.CurrentByteOffset.QuadPart = 818937856 \nWriteFile : Just Before Calling SendEventInformation. \nWriteFile : Just After Calling SendEventInformation. \nWriteFile : Just After Calling free(eventInfo). \nWriteFile : Just Before Calling free(EventContext).. \nWriteFile : Just After Calling free(EventContext). \nWriteFile : Before call SendWriteRequest, contextLength = 65798 (contextLength = EventContext->Operation.Write.RequestLength)\n\nSendWriteRequest\nSendWriteRequest : status = 1, EventLength = 48, BufferLength = 65798, returnedLength = 0 \nreturnedLength == 0, After SendWriteRequest LastError : 0 \nSendWriteRequest got 0 bytes\n    WriteFile : EventContext->SerialNumber = 3452816845 \n    WriteFile : EventContext->Operation.Write.RequestLength = 3452816845 \nWriteFile 0051\nWriteFile : Just Before Call to DokanInstance->DokanOperations->WriteFile Function.\n\n```\nSince I build the files for debug build, the print out valueis 3452816845 = 0xCDCDCDCD, which is the Magic number. This Magic number Used by Microsoft's C/C++ debug malloc() function to mark uninitialized heap memory, usually returned from HeapAlloc(). (by wiki)\nSo, I think you are right, the EventContext is destroyed on\nhttps://github.com/yin19941005/dokany/blob/cancel-crash-more-log/dokan/write.c#L80.. Yes, I agree that the normal execution should go out at https://github.com/yin19941005/dokany/blob/cancel-crash-more-log/sys/event.c#L824. \nActually, I am also a bit doubtful on adding the log message. Sorry for generating confused log. I changed the log message for it with this commit. Now, it will log EventWrite : Cannot found corresponding IRP. This should never happen!! on Line 829. \nHere is the mirror log : \ncopyError_Mirrortest007.zip\nAnd kernel log : \ncopyError_Mirrortest007_kernel.zip\n. I found that if I am using debug build of mirror, there will be a pop-up error message.\n\nPreviously, I am using the debug build for dokan1.dll and dokan1.sys and release build mirror.exe for testing. I tried to press retry but it will directly crashed after I click retry. I am not sure for meaning of the debug assertion failed but hope it would provide more information.. I had added more log message on this commit and I think I figured out where did the mirror crashed. \nMirror Log:\n```\nSendWriteRequest\nSendWriteRequest : status = 1, EventLength = 48, BufferLength = 65798, returnedLength = 0 \nreturnedLength == 0, After SendWriteRequest LastError : 0 \nSendWriteRequest got 0 bytes\n    WriteFile : EventContext->SerialNumber = 3452816845 \n    WriteFile : EventContext->Operation.Write.RequestLength = 3452816845 \n    WriteFile : EventContext = 1766383216 \n    WriteFile : EventContext + EventContext->Operation.Write.BufferOffset = 2517775068221 \nWriteFile 0043\nWriteFile : Just Before Call to DokanInstance->DokanOperations->WriteFile Function.\n\nMirrorWriteFile : First Line execute!! \nMirrorWriteFile : Before call GetFilePath.\n```\nSo, I believe the crash is happen in the GetFilePath in Mirror. Since the EventContext is destroyed on here, by the debug build, the 3452816845 (0xCDCDCDCD) will be used for the uninitialized heap memory. And this value would cause the Buffer Overrun Crash in the GetFilePath function (in Mirror).\nI don't think this would be a problem on the mirror because the root cause should on the driver part and get the EventContext mis-destroyed to cause this error. I think the DispatchWrite  should log some message if the returnedLength being 0 or EventContext got destoryed.\n\nFor the DeviceIoControl function, by the MSDN,\n\nlpBytesReturned [out, optional]\nA pointer to a variable that receives the size of the data stored in the output buffer, in bytes.\nIf the output buffer is too small to receive any data, the call fails, GetLastError returns ERROR_INSUFFICIENT_BUFFER, and lpBytesReturned is zero.\nIf the output buffer is too small to hold all of the data but can hold some entries, some drivers will return as much data as fits. In this case, the call fails, GetLastError returns ERROR_MORE_DATA, and lpBytesReturned indicates the amount of data received. Your application should call DeviceIoControl again with the same operation, specifying a new starting point.\n\nI think currently the dokan didn't set any error to the last error on this case and didn't handle the case for the ERROR_MORE_DATA to handle the output buffer too small case described on the MSDN. I think these may also potential problem on the dokan part but I am not sure are they related to this case or not.. Yes, I got same point of view with you. I had tried to implement a workaround fix for crash issue. I found that if it's requesting bigger memory and  the returnedLength is zero, set the status (will be copied to eventInfo->Status) as STATUS_ACCESS_DENIED and not call the Write File in the Mirror will fix the crash. However, I am just consider this as workaround fix is because I think we should figure out why the 0 for returnedLength is returned in order to really fix the issue.\nI would try to create another DbgPrint2 to log the debug message for the kernel log to simplify the log files. I agree thatwe should focus on DokanEventWrite log.. I had changed the DDbgPrint in the dokan.sys by this commit to simplify the log message.\nI got no idea why the ==> DokanEventWrite mismatch the number of EventWrite CopyMemory while there are no EventWrite: STATUS_INSUFFICIENT_RESOURCE, EventWrite : IoSetCancelRoutine(writeIrp, DokanIrpCancelRoutine) == NULL, EventWrite : writeIrp == NULL and EventWrite : return STATUS_INVALID_PARAMETER is returned or printed in the log.\nI had followed the instruction on here and use the DbgView to capture the kernel debug message. It seems works fine and the kernel debug message should be completely captured.\n\nAnyway, I found some meaningful log after I simplified the log message.\n00935528    201.40585327    [DokanFS] SerialNumber irpEntry 330CB eventInfo 32D6F   \n00935529    201.40586853    [DokanFS] SerialNumber irpEntry 330CD eventInfo 32D6F   \n00935530    201.40586853    [DokanFS] SerialNumber irpEntry 330CF eventInfo 32D6F   \n00935531    201.40586853    [DokanFS] SerialNumber irpEntry 330D1 eventInfo 32D6F   \n00935532    201.40586853    [DokanFS] SerialNumber irpEntry 330D3 eventInfo 32D6F   \n00935533    201.40586853    [DokanFS] SerialNumber irpEntry 330D5 eventInfo 32D6F   \n00935534    201.40586853    [DokanFS] SerialNumber irpEntry 330D7 eventInfo 32D6F   \n00935535    201.40592957    [DokanFS]   EventWrite : Cannot found corresponding IRP. This should never happen!!\nSometime, I would reach the abnormal case : Cannot found corresponding IRP at the last few rows log when the mirror got crashed. Maybe this is just because the mirror got crashed and it already clean-up to cause this output but this shows this part is working fine and the dokan should able to find corresponding IRP for other cases.\nThe kernel log files:\nsimplified_kernel_log.zip\n. >Maybe additionally also log the returned length in field info.\nSorry, I didn't get which field info you are talking about. It's is in the sys project? Or in the usermode dll?\n\n\nThen in the dokan usermode dll check for length 0. If it's 0 you can do a\nspecial output and request the user to hit enter to go on. This way it\nwould not crash while creating the log.\n\nDo you mean I should hotfix the issue to let the mirror at least would not crash and make the log complete in order to study the complete log entry? I would try to modify it similar with this commit in order to provide the complete log.. I had deleted most of the previously added log message and printing the SerialNumber for the EventContext to help for debug by this commit. The result become quite obvious after the complete log can be print out.\nThe mirror log : \n```\n    WriteFile : Before call SendWriteRequest, contextLength = 65794 (contextLength = EventContext->Operation.Write.RequestLength)\nSendWriteRequest\nSendWriteRequest : status = 1, EventLength = 48, BufferLength = 65794, returnedLength = 65794 , EventInfo->SerialNumber = 3852C \nSendWriteRequest got 65794 bytes\n    WriteFile : EventContext->SerialNumber = 3852C \n    WriteFile : EventContext->Operation.Write.RequestLength = 0 \n    WriteFile : EventContext = 1916530224 \n    WriteFile : EventContext + EventContext->Operation.Write.BufferOffset = 1642594037444 \nWriteFile 0073\nWriteFile : E:\\mirror_test20\\Win10_1607_English_x32.iso, offset 199163904, length 65536\n    write 65536, offset 199163904\n    WriteFile : eventInfo->BufferLength = 65536 \n    WriteFile : eventInfo->Operation.Write.CurrentByteOffset.QuadPart = 199229440 \nWriteFile : Before call SendWriteRequest, contextLength = 65798 (contextLength = EventContext->Operation.Write.RequestLength)\n\nSendWriteRequest\nSendWriteRequest : status = 1, EventLength = 48, BufferLength = 65798, returnedLength = 0 , EventInfo->SerialNumber = 3852E \nreturnedLength == 0, After SendWriteRequest LastError : 0 \nSendWriteRequest got 0 bytes\n    WriteFile : EventContext->SerialNumber = CDCDCDCD \n    WriteFile : EventContext->Operation.Write.RequestLength = 3452816845 \n    WriteFile : EventContext = 1916530224 \n    WriteFile : EventContext + EventContext->Operation.Write.BufferOffset = 1646046854141 \nWriteFile 0060\nUnknown SendWriteRequest error : return 0 length when request bigger memory. \nUnknown SendWriteRequest error : EventContext had been destoryed. Return STATUS_ACCESS_DENIED. \nWriteFile : Before call SendWriteRequest, contextLength = 65798 (contextLength = EventContext->Operation.Write.RequestLength)\n\nSendWriteRequest\nSendWriteRequest : status = 1, EventLength = 48, BufferLength = 65798, returnedLength = 0 , EventInfo->SerialNumber = 38530 \nreturnedLength == 0, After SendWriteRequest LastError : 0 \nSendWriteRequest got 0 bytes\n    WriteFile : EventContext->SerialNumber = CDCDCDCD \n    WriteFile : EventContext->Operation.Write.RequestLength = 3452816845 \n    WriteFile : EventContext = 1916530224 \n    WriteFile : EventContext + EventContext->Operation.Write.BufferOffset = 1646046854141 \nWriteFile 0060\nUnknown SendWriteRequest error : return 0 length when request bigger memory. \nUnknown SendWriteRequest error : EventContext had been destoryed. Return STATUS_ACCESS_DENIED. \n```\nThe corresponding kernel log : \n00230130    202.38635254    [DokanFS] ==> DokanEventWrite [EventInfo #3852C]    \n00230131    202.38636780    [DokanFS]   EventWrite : Irp->IoStatus.Information = 65794 (after Irp->IoStatus.Information = info) \n00230132    202.38662720    [DokanFS] ==> DokanEventWrite [EventInfo #3852E]    \n00230133    202.38665771    [DokanFS]   EventWrite : Cannot found corresponding IRP. This should never happen!! \n00230134    202.38693237    [DokanFS] ==> DokanEventWrite [EventInfo #38530]    \n00230135    202.38693237    [DokanFS]   EventWrite : Cannot found corresponding IRP. This should never happen!!\nThe full mirror log : \ncopyError_Mirrortest020.zip\nThe full kernel log:\ncopyError_Mirrortest020_kernel.zip\n\nThe _Inout_ IRP haven't being modified if the corresponding IRP is not found. The output IRP will keep the state unchanged after the malloc called on this line. (So, by the debug build the value of SerialNumber will become CDCDCDCD) The problem is the driver could not find any corresponding IRP but it keeps returning STATUS_SUCCESS : https://github.com/yin19941005/dokany/blob/cancel-crash-more-log/sys/event.c#L790\nIn my opinion on how to fix this issue, we should change the returning status to something like STATUS_CANCELLED** (I guess the reason that cannot find the IRP is because I had cancel the copy operation.) and log the event in the kernel log. The returned length should be set to zero (currently is just initialized but no value assign to the returned length) and set the last error as ERROR_INSUFFICIENT_BUFFER** (by MSDN document. Thank you very much @marinkobabic on spending time on this issue !\nI think the pull request #458 can fix the issue. \nThis issue can be closed after the pull request get merged.. Oh! Sorry for that! I am pretty new on using Git.\nI will try to create another branch to make it disappear.. Sorry, I found a typo on it. I will close this pull request and reopen a new one.. Hello,\nI got some new findings on this issue. \nMaybe not about OpLock\nI tested on the Windows 10 VMs and there are no STATUS_OPLOCK_NOT_GRANTED returned in the kernel log. I read the ZwCreateFile routine on MSDN in detail and I found : \n\nIn Windows 7, if other handles exist on the file when an application uses the FILE_OPEN_REQUIRING_OPLOCK flag, the create operation will fail with STATUS_OPLOCK_NOT_GRANTED. This restriction no longer exists starting with Windows 8.\n\nSo, this issue maybe not about the OpLock issue. But it seems related to locking issue.\nMessage : Security Descriptor is not valid on Windows Shared Drive Log\nBesides, I found there are many **Security Descriptor is not valid.** message in the log when mounting the Windows Share Drive while the local drive didn't get this error message at all. It will return the STATUS_INVALID_PARAMETER status. I am not sure is this behavior related with this issue or not at this moment. But I am going to study about the Security Descriptor document and why the returned Security Descriptor is invalid.\n\n00020269  5.04603291  [DokanFS] ==> DokanCompleteQuerySecurity  \n00020270  5.04603481  [DokanFS]   EventInfo->SerialNumber #118  \n00020271  5.04603767  [DokanFS]  Security Descriptor is not valid.  \n00020272  5.04605532  [DokanFS] ==> DokanCleanup\n00020273  5.04605770  [DokanFS]   ProcessId 1360\n00020274  5.04606533  [DokanFS]   FileName: \\ FCB.FileName: \\ \n00020275  5.04606915  [DokanFS] ==> DokanRegisterPendingIrp \n00020276  5.04607058  [DokanFS] ==> DokanRegisterPendingIrpMain \n00020277  5.04607344  [DokanFS] <== DokanRegisterPendingIrpMain \n00020278  5.04607582  [DokanFS] <== DokanRegisterPendingIrp \n00020279  5.04607725  [DokanFS]   status = 0x103\n00020280  5.04607868  [DokanFS]   status = STATUS_PENDING \n00020281  5.04608011  [DokanFS] <== DokanCleanup\n00020282  5.04608297  [DokanFS]   status = 0xc000000d \n00020283  5.04608440  [DokanFS]   status = STATUS_INVALID_PARAMETER \n00020284  5.04608631  [DokanFS] <== DokanCompleteQuerySecurity\n\nI would also upload the full log later on.. Hi @Liryna ,\n\n\nYes, this happens with mirror but ONLY on mounting remote drive. Here's the command I used to mount the drive : mirror.exe /r \\\\192.168.200.18\\share /l Z /d /s /t 1.\n\n\nNo, it doesn't always happen to all DokanCompleteQuerySecurity. Using the log file below as example, for the local drive log, I got 125 times call to DokanCompleteQuerySecurity without any Security Descriptor is not valid. message in the log. For the remote drive log, I got 133 times call to DokanCompleteQuerySecurity with 67 times that error message and STATUS_INVALID_PARAMETER returned. I am still studying why security descriptor returned by user land is invalid.\nLocal_drive_logs.zip\nRemote_drive_logs.zip\n\n\nThe RtlValidRelativeSecurityDescriptor should got some work done. I just tried to remove the checking and just copy the returned security descriptor to the buffer (Just like the old version). When I access the drive, the explorer will crash. So, I think RtlValidRelativeSecurityDescriptor helped.. Hello,\n\n\nI got some new update for this issue.\nTwo distinguish save related problem\n\nCannot save an existing file after modified (Open as Read Only Mode)\nCannot Save As for saving a new file\n\nCannot save an existing file after modified (Open as Read Only Mode)\nExpected behavior:  After mounting the remote drive with mirror.exe, the user is able to open, modify file and save the changes of the MS Word file normally when no one is accessing the file. When there are another user accessing the same file, the MS Word would prompt message there are another user is accessing the file and ask the user to choose the following options :  \"Open with read only mode\", \"Prompt remind when able to switch to normal mode\" and \"Close and leave\".\nActual behavior: After mounting the remote drive with mirror.exe, the user is only able to open MS Word file as Read Only mode. The MS Word will not prompt up any message to remind the user that he/she is in Read Only mode. When the user trying to save the file, the MS Word will prompt up a \"Save As..\" dialog for the user.\nEDITED: In my opinion, this problem should be related with not proper cleanup lock issue. Because I tried to copy a word file to the mounted dokan drive and trying to open it immediately (this can guarantee no other user is accessing it or opened by same user before), it will be able open the MS Word file as normal mode and save the file. I tried to save the Word file multiple times before closing the MS Word, and all the saving succeed. However, once you close the MS Word, you are not able to open that Word file in normal mode for modify and save it anymore. Moreover, I tried to open the file with WordPad and it can open, modify the file normally. Even the MS Word only able to open the Word file in Read Only mode, the WordPad still able to modify and save the Word file. I am going to study what makes the MS Word so special and checking did cleanup really got succeed or not.\nCannot Save As for saving a new file (Related with Security Descriptor)\nExpected behavior: The user is able to using the \"Save As..\" function to save new word file on the mounted drive.\nActual behavior: The user is not able to create new word file with the \"Save As..\" function.\nThe problem is related Security Descriptor. I tried a workaround to fix security descriptor issue and this problem got fixed.\nMirror Log (before the workaround fix):\n\nGetFileSecurity 0054, EventInfo->SerialNumber #10A\nGetFileSecurity \\192.168.200.18\\share\\~$sting001.docx\n  Raw input parameter : SecurityInformation = 5, BufferLength = 0, LengthNeeded = 0 \n  Raw input parameter : GetSecurityDescriptorDacl Failed \n  Raw input parameter : GetSecurityDescriptorSacl Failed \n  FILE_SHARE_READ\n  OWNER_SECURITY_INFORMATION\n  DACL_SECURITY_INFORMATION\n  Opening new handle with READ_CONTROL access\n  Just using READ_CONTROL Flag when CreateFile Handle\n  Before GetUserObjectSecurity : SecurityInformation = 5, BufferLength = 0, LengthNeeded = 0 \n  Before GetUserObjectSecurity : GetSecurityDescriptorDacl Failed \n  Before GetUserObjectSecurity : GetSecurityDescriptorSacl Failed \n  GetUserObjectSecurity error: ERROR_INSUFFICIENT_BUFFER\n  EventContext->Operation.Security.BufferLength < lengthNeeded! Set STATUS_BUFFER_OVERFLOW. (###GetFileSecurity 0054 EventInfo->SerialNumber #10A) \nQueryVolumeInfo 0056, EventInfo->SerialNumber #10B\nQueryVolumeInfo 0055, EventInfo->SerialNumber #10C\nGetFileSecurity 0054, EventInfo->SerialNumber #10D\nGetFileSecurity \\192.168.200.18\\share\\~$sting001.docx\n  Raw input parameter : SecurityInformation = 5, BufferLength = 156, LengthNeeded = 0 \n  Raw input parameter : GetSecurityDescriptorDacl Failed \n  Raw input parameter : GetSecurityDescriptorSacl Failed \n  FILE_SHARE_READ\n  OWNER_SECURITY_INFORMATION\n  DACL_SECURITY_INFORMATION\n  Opening new handle with READ_CONTROL access\n  Just using READ_CONTROL Flag when CreateFile Handle\n  Before GetUserObjectSecurity : SecurityInformation = 5, BufferLength = 156, LengthNeeded = 0 \n  Before GetUserObjectSecurity : GetSecurityDescriptorDacl Failed \n  Before GetUserObjectSecurity : GetSecurityDescriptorSacl Failed \n  After GetUserObjectSecurity : SecurityInformation = 5, BufferLength = 156, LengthNeeded = 0 \n  After GetUserObjectSecurity : lpbDaclPresent = 1, lpbDaclDefaulted = 0, pDacl not inplemented to print \n  After GetUserObjectSecurity : GetSecurityDescriptorSacl Failed \n  securityDescriptorLength : 156 (by GetSecurityDescriptorLength) \nGetFileSecurity Successful for \\192.168.200.18\\share\\~$sting001.docx\n\nKernel Log (before the workaround fix):\n\n00019486  4.22421741  [DokanFS] ==> DokanCompleteQuerySecurity  \n00019487  4.22421980  [DokanFS]   EventInfo->SerialNumber #10D  \n00019488  4.22422218  [DokanFS]  Security Descriptor is not valid.  \n00019489  4.22424650  [DokanFS] ==> DokanCleanup\n00019490  4.22424889  [DokanFS]   ProcessId 1260\n00019491  4.22425222  [DokanFS]   FileName: \\~$sting001.docx FCB.FileName: \\~$sting001.docx \n00019492  4.22425604  [DokanFS] ==> DokanRegisterPendingIrp \n00019493  4.22425747  [DokanFS] ==> DokanRegisterPendingIrpMain \n00019494  4.22425985  [DokanFS] <== DokanRegisterPendingIrpMain \n00019495  4.22426224  [DokanFS] <== DokanRegisterPendingIrp \n00019496  4.22426414  [DokanFS]   status = 0x103\n00019497  4.22426558  [DokanFS]   status = STATUS_PENDING \n00019498  4.22426701  [DokanFS] <== DokanCleanup\n00019499  4.22427034  [DokanFS]   status = 0xc000000d \n00019500  4.22427273  [DokanFS]   status = STATUS_INVALID_PARAMETER \n00019501  4.22427893  [DokanFS] <== DokanCompleteQuerySecurity    \n\nExplanation for the bug and the Workaround fix\nAs you can see the log above, *LengthNeeded = 0 is returned after GetUserObjectSecurity succeed. This is an abnormal behavior. For the local drive, after GetUserObjectSecurity succeed, the value of BufferLength and *LengthNeeded will be the same. It seems the Security Descriptor is invalid, however, the GetSecurityDescriptorDacl and GetSecurityDescriptorLength calls got succeed. From MSDN, both function will fail if the Security Descriptor is invalid : If the SECURITY_DESCRIPTOR structure is not valid, the return value is undefined.. The Workaround fix is simply assign the returned value from GetSecurityDescriptorLength to *LengthNeeded when the GetUserObjectSecurity call succeed. The fix would be something like this (Works on my Win 7 VM) : \n```\nDWORD securityDescriptorLength = GetSecurityDescriptorLength(SecurityDescriptor);\n  DbgPrint(L\"  securityDescriptorLength : %lu (by GetSecurityDescriptorLength) \\n\", securityDescriptorLength);\nif (isGetUserObjectSecuritySuccessful) {\n      DbgPrint(L\"  isGetUserObjectSecuritySuccessful is true,  LengthNeeded = securityDescriptorLength \\n\");\n      LengthNeeded = securityDescriptorLength;\n  }\n``\nI am able to useSave As..function from MS Word to save the word file on the mounted remote drive with mirror.exe. And there are no moreSecurity Descriptor is not validmessage in the log. (This meansRtlValidRelativeSecurityDescriptor` function think it is a valid Security Descriptor.)\nI am not sure why GetUserObjectSecurity returned TRUE and some of the output parameter is not well assigned to the correct value. I look for the MSDN document but doesn't seems they mentioned about this behavior. Any idea about it? Or it just some wired behavior or bug from this function?\n\nHi @Liryna ,\nShould I split the issue for two different cases? Because it seems the root cause of the Save exising Word file issue and Save As create new Word file issue is quite different. . Hello,\nI got some update on Cannot save an existing file after modified (Open as Read Only Mode) this issue : \nTrying to rename the Word file world make the user able to save the existing Word file\nProcedure to Reproduce: \n(I Only tested this with dokany applied the Security Descriptor Workaround fix)\n1.  Open an existing Word file with MS Word, it should be in Read Only Mode\n2.  Close the file and MS Word.\n3.  Click that Word file and press F2 (quick key for rename file) and press enter (not changing the name at all)\n4.  Open that Word file with MS Word\n5.  You should able to open the Word file in normal mode, sometimes you are still not able to save the file immediately. But after a few seconds, you are able to save the Word file.\nI tried with WinDbg and setup a break point on MirrorMoveFile in mirror but it didn't called on the above procedure. I checked with the Kernel Log, I only able to found some cleanup and close operation in it. Besides, I also tried not to pressing enter on Step 5 and just click to some empty space to cancel the operation and this is not able to release the file and open the Word file in normal mode.\nI am still studying on what did WIndows had try to perform when we are trying to rename (but not really rename it) so that let us able to open the Word file in normal mode.. Hi @Liryna ,\nI didn't come up with much idea why the function got the weird behavior, I guess this is because the SECURITY_INFORMATION field is a unexpected input for the GetUserObjectSecurity function. The Windows 10 security information flag is slightly different from Windows 7 security information (at least got some flags not available on Windows 7), so the function is finished on the Windows 10 host then return the results to Windows 7 and got some trouble with it, JUST guessing.\nCalling GetSecurityDescriptorLength should be a good idea to ensure we have the correct size. \n\nI am trying to figure out why try to rename the Word file would make the user able to save to the existing Word file, however, I am not sure about the actual sequence to calling those cleanup function in dokany. Base on my understanding, the sequence should be : \n1. the user application calling cleanup will captured by the DokanLoop and call DispatchCleanup\n2. DispatchCleanup will call DispatchCommon to build the eventInfo, fileInfo and openInfo parameter\n3. After parameter are ready, DispatchCleanup will call the DokanInstance->DokanOperations->Cleanup (to mirror) cleanup the user space.\n4. After clean up in mirror return, the DispatchCleanup will use SendEventInformation to call DokanDispatchCleanup in .sys.\nAm I correct with the call sequence?. Hi @Liryna ,\nIt helps a lot! Thank you very much for your detailed explanation!\nI got updates to this issue : \nThe kernel log on below will log the \"create\", \"cleanup\" and \"close\" call event in the kernel log for my target file (WordWithImageTest3.docx and its temp file ~$rdWithImageTest3.docx) and every \"OpenRequiringOplock\" DDbgprint log in the dispatchCreate. \nUsing command prompt to Open the MS Word File success open with Normal Mode\nI tried to open the Word file with this command : WINWORD.EXE /t Z:\\WordWithImageTest3.docx on the MS Office directory that I had installed and its able to open the file in the normal mode. The kernel log is on below and you can find that almost only the WINWORD.exe (MS Word) is trying to accessing the file and the MS Word does not seems trying to grant any OpLock for itself. I tried to set break point on this line in DispatchCreate and also the DokanOplockRequest function\nLog of using command to open the Word file (success case)\nkernel_create_commandOpen_v3_001.LOG.txt\nThe explorer.exe is trying to grant OpLock and call DokanDispatchCreate when Mouse Over or Click the Word file\n\nWhen mouse over the file, the Windows will show a dialog to giving some information as the image. The OpLock failed error I had mentioned before is actually come from this event. The mouse over log I got is like this : \n```\nProcessId 148 = explorer.exe\n[DokanFS]   Create    : ProcessId  148 (94), FileName:\\WordWithImageTest3.docx\n[DokanFS]       DesiredAccess 0x120089, FileAttributes 0x80, CreateOptions 0x1010000, ShareAccess 0x1\n[DokanFS]     Create (OpenRequiringOplock): ProcessId  148 (94), FileName:\\WordWithImageTest3.docx\n[DokanFS]   Cleanup   : ProcessId  148 (94), FileName:\\WordWithImageTest3.docx\n[DokanFS]   Close     : ProcessId  148 (94), FileName:\\WordWithImageTest3.docx\n[DokanFS]   Create    : ProcessId  148 (94), FileName:\\WordWithImageTest3.docx\n[DokanFS]       DesiredAccess 0x120089, FileAttributes 0x0, CreateOptions 0x1000060, ShareAccess 0x5\n[DokanFS]   Cleanup   : ProcessId  148 (94), FileName:\\WordWithImageTest3.docx\n[DokanFS]   Close     : ProcessId  148 (94), FileName:\\WordWithImageTest3.docx\n```\nAnd the log for the mouse click (Only mouse click, not include mouse over part) to the file : \nkernel_create_JustClickNotOpen_v3_001.LOG.txt\nDelay the open file after click the file will success open file with normal mode\nWhen you click the file, the explorer.exe is trying to getting some information as mentioned on the previous paragraph. If you wait for those event finish before you actually open the file, you will be able to open the Word file with normal mode. This means the call sequence is matter. Maybe there is dead lock or synchronization issue or share access issue, so the MS Word is opening the file as read-only mode.\nFindings on comparing the successful case and fail case logs\nBase on my understanding, the MS Word is trying to check is there any others process is accessing the file by open the Word file with Write Access and set the share access as FILE_SHARE_READ only. I tried to perform random delay before I open the file after clicking the file. In the these logs, I found that the MS Word will trying to open the file with DesiredAccess 0x12019f which is the flags combining FILE_GENERIC_READ and FILE_GENERIC_WRITE. And I found the difference between the successful case and the fail case.\nThe Log of successful case\n```\nProcessId 148 = explorer.exe\nProcessId 1972 = WINWORD.exe\nProcessId 4 = System\n[DokanFS]       DesiredAccess 0x12019f, FileAttributes 0x80, CreateOptions 0x1000060, ShareAccess 0x1\n[DokanFS]   Cleanup   : ProcessId 1972 (7b4), FileName:\\WordWithImageTest3.docx\n[DokanFS]   Close     : ProcessId 1972 (7b4), FileName:\\WordWithImageTest3.docx\n[DokanFS]   Create    : ProcessId 1972 (7b4), FileName:\\WordWithImageTest3.docx\n[DokanFS]       DesiredAccess 0x80, FileAttributes 0x0, CreateOptions 0x1200000, ShareAccess 0x7\n[DokanFS]   Cleanup   : ProcessId 1972 (7b4), FileName:\\WordWithImageTest3.docx\n[DokanFS]   Close     : ProcessId 1972 (7b4), FileName:\\WordWithImageTest3.docx\n[DokanFS]   Create    : ProcessId 1972 (7b4), FileName:\\WordWithImageTest3.docx\n[DokanFS]       DesiredAccess 0x12019f, FileAttributes 0x80, CreateOptions 0x1400060, ShareAccess 0x1\n```\nThe Log of fail case\n```\nProcessId 148 = explorer.exe\nProcessId 1960 = WINWORD.exe\nProcessId 4 = System\n[DokanFS]   Create    : ProcessId 1960 (7a8), FileName:\\WordWithImageTest3.docx\n[DokanFS]       DesiredAccess 0x12019f, FileAttributes 0x80, CreateOptions 0x1000060, ShareAccess 0x1\n[DokanFS]   Create    : ProcessId 1960 (7a8), FileName:\\WordWithImageTest3.docx\n[DokanFS]       DesiredAccess 0x100180, FileAttributes 0x0, CreateOptions 0x1004140, ShareAccess 0x7\n[DokanFS]   Cleanup   : ProcessId    4 (4), FileName:\\WordWithImageTest3.docx\n[DokanFS]   Cleanup   : ProcessId  148 (94), FileName:\\WordWithImageTest3.docx\n[DokanFS]   Create    : ProcessId 1960 (7a8), FileName:\\WordWithImageTest3.docx\n[DokanFS]       DesiredAccess 0x12019f, FileAttributes 0x80, CreateOptions 0x1000060, ShareAccess 0x1\n[DokanFS]   Close     : ProcessId 1960 (7a8), FileName:\\WordWithImageTest3.docx\n[DokanFS]   Create    : ProcessId 1960 (7a8), FileName:\\WordWithImageTest3.docx\n[DokanFS]       DesiredAccess 0x80, FileAttributes 0x0, CreateOptions 0x1200000, ShareAccess 0x7\n```\nThe difference\nThe MS Word is the only one process accessing the target Word file in all the successful case when the DesiredAccess is specific as 0x12019f. On the other hand, there are others process, such as explorer.exe and system, accessing the same target file when the when the DesiredAccess is specific as 0x12019f.\nPossible causes\nIn my opinion, the problem should be caused by the DokanCheckShareAccess. From MSDN: \n\nIoCheckShareAccess is not an atomic operation. Therefore, drivers calling this routine must protect the shared file object passed to IoCheckShareAccess by means of some kind of lock, such as a mutex or a resource lock, in order to prevent corruption of the shared access counts.\n\nAnd it seems the lock is released on line 994 while the DokanCheckShareAccess is called on line 1021 and line 1089. And it cause the issue.\n@Liryna, What's your opinion for the DokanCheckShareAccess?. Hi,\nSorry for the delay. I got some update for this issue.\nThe issue is not cause by DokanCheckShareAccess\nI tried to lock the fcb and the resources every times before calling the DokanCheckShareAccess and it doesn't make any differences for the behavior. The MS Word will still opening up the Word files as read only mode.\nThe Details Pane of Windows Explorer is the cause of the issue\nIf you didn't got idea what Details Pane is, you may read this article first.\nThe Details Pane of Windows Explorer will call create event with ShareAccess 0x5 (Share Read & Share Delete) and this cause issue. The Event couldn't cleanup and close well somehow someway. As the log I posted below, after the explorer.exe (ProcessId  148 (0x94)) created with ShareAccess 0x5, it had called cleanup and close for the file. Base on MSDN, IRP_MJ_CLOSE : \n\nReceipt of this request indicates that the last handle of the file object that is associated with the target device object has been closed and released. All outstanding I/O requests have been completed or canceled.\n\nSo, we may expect there are already no handle of the target file object. And the explorer will keep checking the information needed by the Details Pane with some access with ShareAccess 0x7. However, when I tried to use the WinDbg to check it, when the MS Word trying to open the target file with DesiredAccess 0x12019f (which is the flags combining FILE_GENERIC_READ and FILE_GENERIC_WRITE) it got returned status_sharing_violation and the file share access is remaining Share Read & Share Delete. The DokanCheckShareAccess is functioning well because the target file object doesn't share write in the variables (although I think it should).\nI tried to disabled the Details Pane of Windows Explorer and it works fine. The Details Pane is default enabled for Windows 7 but not in Windows 10. That's why I think Windows 10 doesn't come with this issue but in fact just because I didn't enabled the Details Pane.\nI may got some misunderstanding for the IRP_MJ_CLOSE event, but the normal Windows Drive didn't come up with this issue with the Details Pane. So, this is an unexpected behavior for dokany drive.\n@Liryna Do you got any idea to it?\nLog of the Details Pane Event\n(Exact same as the kernel_create_JustClickNotOpen_v3_001.LOG.txt I posted before)\n```\nProcessId 148 = explorer.exe\nProcessId 2652 = WINWORD.exe\nProcessId 4 = System\n\n\n*\nYou are seeing this message because you pressed either                    *\nCTRL+C (if you run console kernel debugger) or,                       *\nCTRL+BREAK (if you run GUI kernel debugger),                          *\non your debugger machine's keyboard.                                      *\n*\nTHIS IS NOT A BUG OR A SYSTEM CRASH                       *\n*\nIf you did not intend to break into the debugger, press the \"g\" key, then   *\npress the \"Enter\" key now.  This message might immediately reappear.  If it *\ndoes, press \"g\" and \"Enter\" again.                                          *\n*\n\n\nnt!RtlpBreakWithStatusInstruction:\nfffff800`026d4cf0 cc              int     3\nkd> g\n[DokanFS]   Create    : ProcessId  148 (94), FileName:\\WordWithImageTest3.docx\n[DokanFS]       DesiredAccess 0x120089, FileAttributes 0x80, CreateOptions 0x1010000, ShareAccess 0x1\n[DokanFS]     Create (OpenRequiringOplock): ProcessId  148 (94), FileName:\\WordWithImageTest3.docx\n[DokanFS]   Cleanup   : ProcessId  148 (94), FileName:\\WordWithImageTest3.docx\n[DokanFS]   Close     : ProcessId  148 (94), FileName:\\WordWithImageTest3.docx\n[DokanFS]   Create    : ProcessId  148 (94), FileName:\\WordWithImageTest3.docx\n[DokanFS]       DesiredAccess 0x120089, FileAttributes 0x0, CreateOptions 0x1000060, ShareAccess 0x5\n[DokanFS]   Create    : ProcessId  148 (94), FileName:\\WordWithImageTest3.docx\n[DokanFS]       DesiredAccess 0x20080, FileAttributes 0x0, CreateOptions 0x1200000, ShareAccess 0x7\n[DokanFS]   Cleanup   : ProcessId  148 (94), FileName:\\WordWithImageTest3.docx\n[DokanFS]   Close     : ProcessId  148 (94), FileName:\\WordWithImageTest3.docx\n[DokanFS]   Create    : ProcessId  148 (94), FileName:\\WordWithImageTest3.docx\n[DokanFS]       DesiredAccess 0x80, FileAttributes 0x0, CreateOptions 0x1200000, ShareAccess 0x7\n[DokanFS]   Cleanup   : ProcessId  148 (94), FileName:\\WordWithImageTest3.docx\n[DokanFS]   Close     : ProcessId  148 (94), FileName:\\WordWithImageTest3.docx\n[DokanFS]   Create    : ProcessId  148 (94), FileName:\\WordWithImageTest3.docx\n[DokanFS]       DesiredAccess 0x20080, FileAttributes 0x0, CreateOptions 0x1200000, ShareAccess 0x7\n[DokanFS]   Cleanup   : ProcessId  148 (94), FileName:\\WordWithImageTest3.docx\n[DokanFS]   Close     : ProcessId  148 (94), FileName:\\WordWithImageTest3.docx\n[DokanFS]   Create    : ProcessId  148 (94), FileName:\\WordWithImageTest3.docx\n[DokanFS]       DesiredAccess 0x80, FileAttributes 0x0, CreateOptions 0x1200000, ShareAccess 0x7\n[DokanFS]   Cleanup   : ProcessId  148 (94), FileName:\\WordWithImageTest3.docx\n[DokanFS]   Close     : ProcessId  148 (94), FileName:\\WordWithImageTest3.docx\n[DokanFS]   Create    : ProcessId  148 (94), FileName:\\WordWithImageTest3.docx\n[DokanFS]       DesiredAccess 0x20080, FileAttributes 0x0, CreateOptions 0x1200000, ShareAccess 0x7\n[DokanFS]   Cleanup   : ProcessId  148 (94), FileName:\\WordWithImageTest3.docx\n[DokanFS]   Close     : ProcessId  148 (94), FileName:\\WordWithImageTest3.docx\n[DokanFS]   Create    : ProcessId  148 (94), FileName:\\WordWithImageTest3.docx\n[DokanFS]       DesiredAccess 0x80, FileAttributes 0x0, CreateOptions 0x1200000, ShareAccess 0x7\n[DokanFS]   Cleanup   : ProcessId  148 (94), FileName:\\WordWithImageTest3.docx\n[DokanFS]   Close     : ProcessId  148 (94), FileName:\\WordWithImageTest3.docx\n[DokanFS]   Create    : ProcessId  148 (94), FileName:\\WordWithImageTest3.docx\n[DokanFS]       DesiredAccess 0x80, FileAttributes 0x0, CreateOptions 0x1200000, ShareAccess 0x7\n[DokanFS]   Cleanup   : ProcessId  148 (94), FileName:\\WordWithImageTest3.docx\n[DokanFS]   Close     : ProcessId  148 (94), FileName:\\WordWithImageTest3.docx\n[DokanFS]   Create    : ProcessId  148 (94), FileName:\\WordWithImageTest3.docx\n[DokanFS]       DesiredAccess 0x20080, FileAttributes 0x0, CreateOptions 0x1200000, ShareAccess 0x7\n[DokanFS]   Cleanup   : ProcessId  148 (94), FileName:\\WordWithImageTest3.docx\n[DokanFS]   Close     : ProcessId  148 (94), FileName:\\WordWithImageTest3.docx\n[DokanFS]   Create    : ProcessId  148 (94), FileName:\\WordWithImageTest3.docx\n[DokanFS]       DesiredAccess 0x80, FileAttributes 0x0, CreateOptions 0x1200000, ShareAccess 0x7\n[DokanFS]   Cleanup   : ProcessId  148 (94), FileName:\\WordWithImageTest3.docx\n[DokanFS]   Close     : ProcessId  148 (94), FileName:\\WordWithImageTest3.docx\n[DokanFS]   Create    : ProcessId  148 (94), FileName:\\WordWithImageTest3.docx\n[DokanFS]       DesiredAccess 0x20080, FileAttributes 0x0, CreateOptions 0x1200000, ShareAccess 0x7\n[DokanFS]   Cleanup   : ProcessId  148 (94), FileName:\\WordWithImageTest3.docx\n[DokanFS]   Close     : ProcessId  148 (94), FileName:\\WordWithImageTest3.docx\n[DokanFS]   Create    : ProcessId  148 (94), FileName:\\WordWithImageTest3.docx\n[DokanFS]       DesiredAccess 0x80, FileAttributes 0x0, CreateOptions 0x1200000, ShareAccess 0x7\n[DokanFS]   Cleanup   : ProcessId  148 (94), FileName:\\WordWithImageTest3.docx\n[DokanFS]   Close     : ProcessId  148 (94), FileName:\\WordWithImageTest3.docx\n[DokanFS]   Create    : ProcessId  148 (94), FileName:\\WordWithImageTest3.docx\n[DokanFS]       DesiredAccess 0x20080, FileAttributes 0x0, CreateOptions 0x1200000, ShareAccess 0x7\n[DokanFS]   Cleanup   : ProcessId  148 (94), FileName:\\WordWithImageTest3.docx\n[DokanFS]   Close     : ProcessId  148 (94), FileName:\\WordWithImageTest3.docx\n[DokanFS]   Create    : ProcessId  148 (94), FileName:\\WordWithImageTest3.docx\n[DokanFS]       DesiredAccess 0x80, FileAttributes 0x0, CreateOptions 0x1200000, ShareAccess 0x7\n[DokanFS]   Cleanup   : ProcessId  148 (94), FileName:\\WordWithImageTest3.docx\n[DokanFS]   Close     : ProcessId  148 (94), FileName:\\WordWithImageTest3.docx\n[DokanFS]   Create    : ProcessId  148 (94), FileName:\\WordWithImageTest3.docx\n[DokanFS]       DesiredAccess 0x80, FileAttributes 0x0, CreateOptions 0x1200000, ShareAccess 0x7\n[DokanFS]   Cleanup   : ProcessId  148 (94), FileName:\\WordWithImageTest3.docx\n[DokanFS]   Close     : ProcessId  148 (94), FileName:\\WordWithImageTest3.docx\n[DokanFS]   Create    : ProcessId  148 (94), FileName:\\WordWithImageTest3.docx\n[DokanFS]       DesiredAccess 0x20080, FileAttributes 0x0, CreateOptions 0x1200000, ShareAccess 0x7\n[DokanFS]   Cleanup   : ProcessId  148 (94), FileName:\\WordWithImageTest3.docx\n[DokanFS]   Close     : ProcessId  148 (94), FileName:\\WordWithImageTest3.docx\n[DokanFS]   Create    : ProcessId  148 (94), FileName:\\WordWithImageTest3.docx\n[DokanFS]       DesiredAccess 0x80, FileAttributes 0x0, CreateOptions 0x1200000, ShareAccess 0x7\n[DokanFS]   Cleanup   : ProcessId  148 (94), FileName:\\WordWithImageTest3.docx\n[DokanFS]   Close     : ProcessId  148 (94), FileName:\\WordWithImageTest3.docx\n[DokanFS]   Create    : ProcessId  148 (94), FileName:\\WordWithImageTest3.docx\n[DokanFS]       DesiredAccess 0x20080, FileAttributes 0x0, CreateOptions 0x1200000, ShareAccess 0x7\n[DokanFS]   Cleanup   : ProcessId  148 (94), FileName:\\WordWithImageTest3.docx\n[DokanFS]   Close     : ProcessId  148 (94), FileName:\\WordWithImageTest3.docx\n[DokanFS]   Create    : ProcessId  148 (94), FileName:\\WordWithImageTest3.docx\n[DokanFS]       DesiredAccess 0x80, FileAttributes 0x0, CreateOptions 0x1200000, ShareAccess 0x7\n[DokanFS]   Cleanup   : ProcessId  148 (94), FileName:\\WordWithImageTest3.docx\n[DokanFS]   Close     : ProcessId  148 (94), FileName:\\WordWithImageTest3.docx\n[DokanFS]   Create    : ProcessId  148 (94), FileName:\\WordWithImageTest3.docx\n[DokanFS]       DesiredAccess 0x20080, FileAttributes 0x0, CreateOptions 0x1200000, ShareAccess 0x7\n[DokanFS]   Cleanup   : ProcessId  148 (94), FileName:\\WordWithImageTest3.docx\n[DokanFS]   Close     : ProcessId  148 (94), FileName:\\WordWithImageTest3.docx\n[DokanFS]   Create    : ProcessId  148 (94), FileName:\\WordWithImageTest3.docx\n[DokanFS]       DesiredAccess 0x80, FileAttributes 0x0, CreateOptions 0x1200000, ShareAccess 0x7\n[DokanFS]   Cleanup   : ProcessId  148 (94), FileName:\\WordWithImageTest3.docx\n[DokanFS]   Close     : ProcessId  148 (94), FileName:\\WordWithImageTest3.docx\n[DokanFS]   Create    : ProcessId  148 (94), FileName:\\WordWithImageTest3.docx\n[DokanFS]       DesiredAccess 0x80, FileAttributes 0x0, CreateOptions 0x1200000, ShareAccess 0x7\n[DokanFS]   Cleanup   : ProcessId  148 (94), FileName:\\WordWithImageTest3.docx\n[DokanFS]   Close     : ProcessId  148 (94), FileName:\\WordWithImageTest3.docx\n[DokanFS]   Cleanup   : ProcessId  148 (94), FileName:\\WordWithImageTest3.docx\n[DokanFS]   Close     : ProcessId  148 (94), FileName:\\WordWithImageTest3.docx\n[DokanFS]   Create    : ProcessId  148 (94), FileName:\\WordWithImageTest3.docx\n[DokanFS]       DesiredAccess 0x100080, FileAttributes 0x0, CreateOptions 0x1000060, ShareAccess 0x3\n[DokanFS]   Cleanup   : ProcessId  148 (94), FileName:\\WordWithImageTest3.docx\n[DokanFS]   Close     : ProcessId  148 (94), FileName:\\WordWithImageTest3.docx\n[DokanFS]   Create    : ProcessId  148 (94), FileName:\\WordWithImageTest3.docx\n[DokanFS]       DesiredAccess 0x100080, FileAttributes 0x0, CreateOptions 0x1000020, ShareAccess 0x3\n[DokanFS]   Cleanup   : ProcessId  148 (94), FileName:\\WordWithImageTest3.docx\n[DokanFS]   Close     : ProcessId  148 (94), FileName:\\WordWithImageTest3.docx\n[DokanFS]   Create    : ProcessId  148 (94), FileName:\\WordWithImageTest3.docx\n[DokanFS]       DesiredAccess 0x100080, FileAttributes 0x0, CreateOptions 0x1000010, ShareAccess 0x3\n[DokanFS]   Cleanup   : ProcessId  148 (94), FileName:\\WordWithImageTest3.docx\n[DokanFS]   Close     : ProcessId  148 (94), FileName:\\WordWithImageTest3.docx\n[DokanFS]   Create    : ProcessId  148 (94), FileName:\\WordWithImageTest3.docx\n[DokanFS]       DesiredAccess 0x120196, FileAttributes 0x80, CreateOptions 0x1000060, ShareAccess 0x7\n[DokanFS]   Cleanup   : ProcessId  148 (94), FileName:\\WordWithImageTest3.docx\n[DokanFS]   Close     : ProcessId  148 (94), FileName:\\WordWithImageTest3.docx\n```\n\n@sefai , \nDid you test it with /t 1 option (forcing it run as single thread) to network mount the mirror drive? Because the mirror sample is not thread safe and network mount is very likely to make it explicit. You can read this issue #423 to gain more idea with it. \n\nI guess the latency added by the debug mode resolved the lock synchronization issue.\n\nI got the same opinion with you. I tried to use the original DbgPrint in dokan and the latency generated by the print out will resolve the issue. Moreover, I tried to WinDbg to Kernel debugging it, if I break and hold for a while or break too many times, the issue will resolve the issue.\n\nFor some of the configurations, VS 2015 is unable to copy the pdb file generated in the obj directory to the target Debug or Release directory.\n\nDo you mean you are using some batch script or some automated tools by VS 2015 will not invoked the GUI (explorer.exe) and you still able to got this behavior? For me, if I using command line to open the Word files, it wouldn't cause any issue.. Hi @sefai,\nNever mind! I am glad to see you already fix your issue! Although the situation and root cause is very different, I still thanks you tried to give me additional information to fix the issue! In my opinion, I thought the most interesting point is when you enable the debugging mode, it can resolve your issue which doesn't seems related lock synchronization issue. Anyway, thank you for your additional information!. Hi,\nI got few more updates to this issue.\nInvalid Security Descriptor cause by the SMB 2.0 or later version\nI discovery that for all VMs will get the error message Security Descriptor is not valid. got SMB 2.0 or later version enabled. Once I disabled the SMB 2.0 and SMB 3.0 for the VM, the VM will able to get the correct Security Descriptor even without the workaround fix I mentioned before.\nThat's mean we got two option to fix the Invalid Security Descriptor issue (return success but didn't assign value to LengthNeeded). : \n\n\nEvery time the GetUserObjectSecurity succeed, we call GetSecurityDescriptorLength and assign it back to the *LenghtNeeded (the fix previously proposed)\n\n\nDisable the SMB2.0 or later version on the client side.\n\n\nObviously, the first suggestion will be better because it wouldn't affect the connection speed and other applications to use SMB 2.0 or later version. And Microsoft also warn us that disable the SMB 2.0 or later version only should used for testing and debugging purpose : \n\nWarning: We do not recommend that you disable SMBv2 or SMBv3. Disable SMBv2 or SMBv3 only as a temporary troubleshooting measure. Do not leave SMBv2 or SMBv3 disabled.\n\nSo, that's why I think the first fix method will be better and I will perform a pull request for it. You may reference to this article if you want to disable the SMB 2.0 or later version for testing.\nI believe this should give us some more insight to figure out the root cause why the function got return successful status but not assigning the value well in the output parameter.\n\nThe Invalid Security Descriptor case without any workaround fix : \n\nWith any one of the workaround fix : \n\n. Hi @Liryna,\nMaybe I could summarize the current situation for this issue.\nThere are actually two causes to make the MS Word could not save the word files on mounted Windows Share Drive normally.\n\n(Fixed by the Pull Request) Invalid security Descriptor (length not set) when using SMBv2 or later version.\nThe Details Pane handle cause the STATUS_SHARING_VIOLATION return to MS Word and make the MS Word open up with read-only mode. (You may check details info with this comment)\n\nI tested the normal windows drive and windows share drive with the Details Pane, they didn't trying open up the Word file with read-only mode. And I am able to save the Word file normally. So, I think the expected behavior should be user is able to double click to open the word file without specific configuration. However, I must disable the Details Pane or make some delay before I actually open the Word file in order to open the Word File with normal mode. So, I think this an unexpected behavior from dokan and I am trying to figure out how does the Microsoft handle this case to make this difference. . This issue can be closed when #489 is merged.. Hi @Liryna ,\nYes, the CreateOption has the flag FILE_NON_DIRECTORY_FILE. I remember that there was a fix to preventing mirror opening a directory as a file (#370) . So I think this is similar with that bug and apply similar fix to it.\nFILE_NON_DIRECTORY_FILE is 0x00000040 when the CreateOption get 0x60 flag : \n\n. Hi @Liryna ,\nIt's a good idea to use FILE_NON_DIRECTORY_FILE directly instead of !(CreateOptions & FILE_DIRECTORY_FILE)! We could not come up with any cases in mind but sounds more reliable if we are going to use FILE_NON_DIRECTORY_FILE this flag.\nI will make a new pull request by using CreateOptions & FILE_NON_DIRECTORY_FILE this condition.. I checked the test result for using !FILE_DIRECTORY_FILE and it also breaking some of the test. \nI think maybe because we are returning not appropriate NTSTATUS. Maybe STATUS_OBJECT_PATH_INVALID should be used. I am not sure for the correct NTSTATUS.. Hi @sefai ,\nThank you for your opinion! Yes, I think your implementation looks more clean! I didn't study the if-else for ERROR_INSUFFICIENT_BUFFER carefully before and I thought we need a Boolean but actually not. \nI would recreate another pull request for this implementation.. Hi @Liryna ,\nDo you mean I should change the debug message isGetUserObjectSecuritySuccessful is true to GetUserObjectSecurity return true or something similar with that? Because in this implementation I haven't add Boolean variable. Below is the code :\nif (!GetUserObjectSecurity(handle, SecurityInformation, SecurityDescriptor,\n                              BufferLength, LengthNeeded)) {\n     int error = GetLastError();\n     if (error == ERROR_INSUFFICIENT_BUFFER) {\n       DbgPrint(L\"  GetUserObjectSecurity error: ERROR_INSUFFICIENT_BUFFER\\n\");\n       CloseHandle(handle);\n       return STATUS_BUFFER_OVERFLOW;\n     } else {\n       DbgPrint(L\"  GetUserObjectSecurity error: %d\\n\", error);\n       CloseHandle(handle);\n        return DokanNtStatusFromWin32(error);\n      }\n    }\nAs @sefai remind, if GetUserObjectSecurity return false and error == ERROR_INSUFFICIENT_BUFFER, will return STATUS_BUFFER_OVERFLOW. If GetUserObjectSecurity return false and error != ERROR_INSUFFICIENT_BUFFER, will return DokanNtStatusFromWin32(error). \nThat means all the cases with GetUserObjectSecurity return false will be returned before the calling the GetSecurityDescriptorLength function. In other words, it is not meaningful to add a Boolean variable to it. \nI agree with @sefai so I removed the Boolean variable.. OK, I would change the debug message and open up another pull request. Sorry for didn't change the debug message correctly.. Hi @Liryna ,\nSorry for delay. Yes, I think we can make a function for searching the last \\ in PUNICODE_STRING. Making it as function also make sure we have the same behavior (because the code is same) when we want to perform the same operation (in this case, searching the last \\) in the current implementation and the future added code. So, I also prefer to make a function for it.\nI think we can add the function in \"sys/dokan.h\" just like some functions in it. Or should I create something like \"dokan_utility.c\" and put the functions in it?. Hi @Liryna ,\nSorry for delay. I stuck in some careless mistake when implementing the code. I tried to make the function more general and trying to perform some error checking l in order to fit more situations. I tested on my environment (same as I posted above) and this should fix the BSOD cause by the unsigned characteristics.. Hi @Liryna ,\nSorry for the typo, I will reopen another pull request for it.. Hi all,\nI think I basically find a solution to deal with this issue. The idea itself is pretty simple : Impersonate the caller user by ImpersonateLoggedOnUser. However, I facing some difficulties.\nSuggest Solution : Impersonate the caller user\nIn current mirror implementation, actually, we had already get the caller access token and we used it to print user's name in debug mode by calling PrintUserName function in mirror. At this line https://github.com/dokan-dev/dokany/blob/master/samples/dokan_mirror/mirror.c#L107, the handle is actually the caller access token.\nSo, we can doing something like this in the MirrorCreateFile function : \n```\n...\n...\nHANDLE userTokenHandle = DokanOpenRequestorToken(DokanFileInfo);\nif (userTokenHandle == INVALID_HANDLE_VALUE) {\n      DbgPrint(L\"  DokanOpenRequestorToken failed\\n\");\n      // Handling the error\n  }\n...\n...\n...\n  if (!ImpersonateLoggedOnUser(userTokenHandle)) {\n      DbgPrint(L\"  Create : ImpersonateLoggedOnUser failed.\\n\");\n      // Handling the error\n  }\n\n  // FILE_FLAG_BACKUP_SEMANTICS is required for opening directory handles\n  handle =\n      CreateFile(filePath, genericDesiredAccess, ShareAccess,\n                 &securityAttrib, OPEN_EXISTING,\n                 fileAttributesAndFlags | FILE_FLAG_BACKUP_SEMANTICS, NULL);\n\n  // Clean Up operation for impersonate\n  RevertToSelf();\n\n...\n...\n...\n```\nI tested to call ImpersonateLoggedOnUser before every time we call CreateFile or CreateDirectory, Windows will use the caller access token to perform the operation. This means, Windows will perform the permission checking with caller access token, set the file owner as caller user, etc. And this issue can be resolved.\nHowever, this comes with a little problem and some difficulties.\nLittle problem\nThe little problem is, when the mirror is started by a normal user, we cannot impersonate as other user and receive ERROR_BAD_IMPERSONATION_LEVEL. This would occur when you try to switch Windows User and cannot access the mirror drive. But, if the user is a normal user, it shouldn't generate serious security issue. So, we may remind the user when using the ImpersonateUserOption (Suggested new option for dokan), they should mount with administrator right.\nDifficulties\nWhen we get the caller access token, we are rely on IO_STACK_LOCATION.Parameters.Create.PIO_SECURITY_CONTEXT from the IRP. The implementation in dokany in this link https://github.com/dokan-dev/dokany/blob/master/sys/access.c#L89. This is the limitation from Windows, so, we are only able to get the caller access token in the MirrorCreateFile function.\nHowever, we did call CreateFile on other mirror functions. The read function on here, the write function on here, get File Information on here.\n@Liryna , I wonder why we are calling the CreateFile on these functions? If it is mis-cleanuped the handle, should we simply return ERROR_INVALID_HANDLE (i.e. STATUS_INVALID_HANDLE NTSTATUS) instead of trying to re-open it? I checked the Git History, this code is since this commit Move to clang format llvm 15343707589097d1b6941946506a5b9dac5d4eda. So, I didn't got any idea in which cases this will happen.. Hi @Liryna ,\nThank you for your response! It's helps me a lot to understand it!\nBase on my understanding, the handle in Windows actually is a capacity in Capability-based security. This means it not only identifies an object, but also associates access rights (by wiki). This means the security checking will be done on the IRP_MJ_CREATE routine functions because the returned handle is already granted the access right. In fact, the security checking must be done on the IRP_MJ_CREATE routine functions because we are only able to get the caller access token on these functions by the design of the IO_STACK_LOCATION structure.\nI am still studying on it, so I am not pretty sure but it seems we can skip the security check when re-open the handle in Read/Write. Base on the document, it seems only system components might hold outstanding references to the file object. If we did perform the security check on MirrorCreateFile function, I think these component were already passed the security check and system components sounds is safe even we don't check it. However, these kind of Read/Write operation (re-open the handle before perform) will generate some strange audit log : these operations are always done by the the mount user (the user who start mirror) instead of those system components.\nI will keep study it to see is there any findings on how to handle these Read/Write cases.. Hi @Liryna ,\nSorry for the late reply. Yes, I think you had understood exactly what I mean!\nI agree \"it always has to be mounted as Admin if you want to handle createfile for other users\". I think adding some message to remind the Impersonate Option is requiring the administrator right will be enough to avoid misuse of this option.\nI will make a pull request for the Impersonate Option.. Hi @Liryna ,\nI afraid only call DokanOpenRequestorToken at start is not a good idea. If user with administrator right using the drive at the beginning (i.e. we impersonate his/her administrator right) and the then switch user, the same security holes on #575 will still occur. If a normal user is using the drive and switch to administrator account, the administrator will lost his/her admin right (because we are impersonating the normal user).\nSo, I don't think it is possible to only call DokanOpenRequestorToken at start and RevertToSelf when ctrl + c & exit.\nFor the performance issue, I didn't done any testing for it. However, please consider the case that if we really implement the whole security handling process instead of using impersonate method. Base on my knowledge, the DACL and SACL is require to handle them separately. DACL should required AccessCheck and SACL required PrivilegeCheck. And we also need to handle the owner ship problem (because the file will be own by the access token used to call CreateFile function).\nSo, I think the alternative solution required some much afford to fix this. Maybe we can reference and study the FUSE default_permissions option to finish these checking in kernel if you really concern about the performance.. HI @Liryna ,\nSorry for the delay. \nMaybe we should not update the file attribute when calling create, instead, we should update it when calling close.\nI checked the document for the IFS test (here), \n\nUpdateOnCloseDirTest. A directory handle can be used to find a subdirectory that is contained in that directory and obtain the file times, attributes, end-of-file pointer, and allocation size of the subdirectory. The end-of-file pointer and allocation size should be returned as zero. If handles are open on the subdirectory, there might be a difference between changes that have been made to the subdirectory, with regards to the above information, and the information that is read back through of the open directory handle (of the directory that contains the subdirectories). The information is updated when the last open handle to the file object (for the subdirectory) is closed. This closure sends out IRP_MJ_CLEANUP.\nThis test first creates a number of subdirectories, verifies the file information through a container directory handle, and queries. The subdirectories are then opened, access by listing, and modified by creating files inside of those test subdirectories. The file information is again queried and checked to see that it has not been updated. The subdirectory handles are then closed. The file information is again queried, and the updated information is verified.\n\nBase on my understanding, it seems for some cases for subdirectory the file attributes shouldn't update until the subdirectory handles are closed. The test will verify the file attributes is updated or not again after the handles closed.\nWhat's your opinion to this? \n . Hi all,\nLet me answer your last question first. \nNot populate the 'lengthNeeded' question\n\nMore specifically, under what scenario would GetUserObjectSecurity() not populate the 'lengthNeeded'? \n\nIn short, this should be a bug from Microsoft cause by the SMB 2.0 or later version. This is a trial-and-error findings, so, I have no idea why this is happening. (SMB 1.0 will completely works fine)\nYou may check the Related with Security Descriptor part of this comment and this commit for details.\nQuick Review for Handle\nhttps://en.wikipedia.org/wiki/Handle_(computing)\n\na handle functions as a capacity: it not only identifies an object, but also associates access rights.\n\nThis means if you got the handle, you already granted the access rights. That's why I am saying when the caller already got the handle, he/she expects him/her already granted the access rights (in this case, the caller is expecting they already granted access to SACL when STATUS_SUCCESS is returned in MirrorCreateFile.).\nAdjustTokenPrivileges issue\nFor the AdjustTokenPrivileges() issue, I see your point but actually I am doubt should we create the handle in MirrorGetFileInformation. \nThe AdjustTokenPrivileges will always success because you started the mirror.exe with administrator right (If you are not started with administrator right, you will never success to AdjustTokenPrivileges and be always safe.). But why we are calling to enable the privileges? This is because we want to pass a security check!! However, in the MirrorGetFileInformation we are not able to done any security check with the caller. Because you are not able to get the caller access token, this only possible to get in  IRP_MJ_CREATE routine functions. This means, by Microsoft design, all the security check should and must done in the IRP_MJ_CREATE routine functions. In my opinion, ERROR_PRIVILEGE_NOT_HELD or NTSTATUS STATUS_PRIVILEGE_NOT_HELD is not expecting by the caller when they already got the handle. Within the MirrorGetFileInformation the CreateFile function call is just dummy security check and almost forced to pass.\nIf you enabled the /p impersonate caller option added recently, you will a lot of error code = 1314 (ERROR_PRIVILEGE_NOT_HELD) and 0xC0000061 (STATUS_PRIVILEGE_NOT_HELD) returned in MirrorCreateFile. And they will instantly make another MirrorCreateFile call by the same caller with similar flags. And these follow up calls will success and able to perform the following operations. I think this is the case that they  instantly granted ACCESS_SYSTEM_SECURITY by AdjustTokenPrivileges and make another call. After the operation finished, I believe they will disable the privilege. In my opinion, this is the case that the Remarks in GetUserObjectSecurity() described.\nWhy I am discussing should we create the handle in MirrorGetFileInformation? Because if the create the handle is not needed, the AdjustTokenPrivileges() function call is not needed either. The only usage for g_HasSeSecurityPrivilege is handling the create handle case in MirrorGetFileInformation.\n\nSorry for the poor presentation, I hope you can understand what I am mentioning.. Hi @bailey27 ,\nLet me confirm I got what you mean first. Are you talking about the case following:\n| mirror  | winfstest | some test result |\n| ------------- | ------------- | ------------- |\n| With administrator privileges, Impersonation On | With administrator privileges | Failed |\n| With administrator privileges, Impersonation On | Without administrator privileges | Pass |\nOr you are talking about other case?. Hi @bailey27 ,\nI got what you exactly mean now. I am not familiar with winfstest but I guess maybe winfstest didn't handle the case properly or we should run the winfstest with administrator privileges.\nHere is my expected test result base on the above information : \n| mirror | winfstest | Result of tests required admin right |\n| ------------- | ------------- | ------------- |\n| With administrator privileges, Impersonation Off | Without administrator privileges | Pass |\n| With administrator privileges, Impersonation On | Without administrator privileges | Failed |\n| With administrator privileges, Impersonation Off | With administrator privileges | Pass |\n| With administrator privileges, Impersonation On | With administrator privileges | Pass |\nIf you performing some action required administrator right when the Impersonation option is On, you will find some error 1314 (ERROR_PRIVILEGE_NOT_HELD) at the debug log in mirror like the following : \n```\n...\nerror code = 1314\nCreateFile status = c0000061\n...\n```\nThe STATUS_PRIVILEGE_NOT_HELD will be returned and the application (for my case, it should be Windows File Explorer) will call with the user token contain administrator privileges again. Then this time, the token contain enough privileges and the operations will success.\nSo, I guess maybe winfstest just receive the STATUS_PRIVILEGE_NOT_HELD and mark the test as failed or it simply didn't contain enough privilege. @bailey27 , could you check what's the expected return value and the actual return value for those specific test? And maybe could you try to run the winfstest with administrator privileges?\n. Hi @bailey27 ,\nYes, I think so. I think this is my fault that forgetting to close the userTokenHandle in my PR. I just have a quick look on the code and seems we should close it at this line for directory and this line for file. Hi @bailey27 ,\nCould you provide more information? Like dokany library version, more environment details. My use case and environment is different from you. Also, I haven't test with mirror yet but seems I am able to open the pdf file with Adobe Acrobat Reader DC (version 2018.009.20050) through a shared dokan drive (NOT mirror, but should be based on dokany-1.1.0 release).\nMy environment setup:\nServer : Windows Storage Server 2016 version 1607 build 14393.0 (VM)\nClient : Windows 10 PRO version 1709 build 16299.125 (Real Machine)\nUsing Adobe Acrobat Reader DC version 2018.009.20050\n\nmount drive (start by Administrator with impersonation on) on Server and share it with SMB\nClient connect to Server (with normal user which without admin right) and open the pdf file\nSuccess open\n\nI will try to test on mirror later on but I am quite busy recently so maybe it takes some time for me to provide the test result.. Hi @bailey27 ,\nHere what I got from your comment: \nSummarize\nAll results are run mirror as administrator with impersonation on, \n| PDF Reader  | All Directory except under C:\\Users | Under C:\\Users |\n| ------------- | ------------- | ------------- |\n| Acrobat Reader (enable protected mode) | Pass | Failed |\n| Acrobat Reader (disable protected mode) | Pass | Pass |\n| Others PDF Readers (e.g. Evince) | Pass | Pass |\n\nUsing Access Token from LogonUser() (I believe you are talking about this function) to impersonate will always success\n\nQuestions :\nWith enable protected mode and Under C:\\Users : \n1. Does your account \"Bailey\"(Since you are testing on \"c:\\Users\\Bailey\") is an account with admin right? If yes, did you test with another account without admin right?\n2. Did you tried to disable the User Account Control (UAC)(Windows enable it by default) and test the result?\n3. Did you tried to run the Acrobat Reader with admin right and test the result?\nDiscussion\nLet me talk about why I so focus on asking those stuffs with UAC and admin right first. I remember I was using dokan-0.7.4 at that time and I facing similar issue. For that issue (should with network drive option on, but not really remember the mount option setting), I was unable to save all the pdf files with Adobe Reader XI under all conditions. Finally, I come up with three solution, 1. Disable the protected mode (the sandbox), 2. Disable the Windows UAC and 3. Upgrade to Adobe Reader DC. So, in my point of view, the symptoms are quite similar and seems to be related issue.\nPlease read this article from Microsoft (https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-7/dd835561(v=ws.10)) about User Account Control (UAC). In short, when UAC enabled, even user with admin right will just using the standard user access token without elevation. And that standard user access token should be kind of \"restricted version\" of the user full access token.\nIt seems Adobe Reader is actually requiring the \"Full user access token\". For user with admin rights, the token get by DokanOpenRequestorToken() should be a \"restricted user token\" at the first trial (just like I mentioned in #636 and failed with STATUS_PRIVILEGE_NOT_HELD). However, some how some way the call got succeed (maybe Adobe Reader didn't set the flag correctly, dokan bug, etc.), which should be failed and try to elevate, and finally failed with access denied when it requires the right. And I guess, the LogonUser() will return the \"full user access token\" since you are able to provide the user password (something like that). So the token returned by LogonUser() is able to run correctly.. Hi @bailey27 ,\nSorry for the late reply. I had confirmed I got the following test result on my environment : \nMy Test Result\nDokany-1.1.0.1000 release (installed with installer)\nWindows 10 PRO version 160 7build 14393.0 (VM)\nUsing Adobe Acrobat Reader DC version 2015.020.20039\nPDF Reader | All Directory except under C:\\Users | Under C:\\Users\n-- | -- | --\nAcrobat Reader (enable protected mode without admin right) | Pass | Failed\nAcrobat Reader (disable protected mode without admin right) | Pass | Pass\nAcrobat Reader (enable protected mode with admin right) | Pass | Failed\nAcrobat Reader (disable protected mode with admin right) | Pass | Pass\nBase on your result:\nI havn't test with Access Token from LogonUser().\nI havn't test with UAC off.\nI am testing with an account with admin right. (It seems didn't related at all)\nMy log and disscussion\nI had captured the two log from mount drive to open the .pdf by adobe reader dc \n(VMBB-PC6 is my user account name and C:\\Users\\VMBB-PC6\\Documents\\NIST_The GaloisCounter Mode of Operation(GCM).pdf is the target .pdf file)\n\nWith impersonation on, enable protected mode without admin right, Under C:\\Users (Failed Case)\nWithout impersonation off, other condition are same (Normal Case)\n\nOn the failed case log, I found\n ```\nerror code = 5\nCreateFile status = c0000022\n```\n(STATUS_ACCESS_DENIED) occurs in total 6 times.\n3 times occur with C:\\Users\\VMBB-PC6\\Documents\\,\n3 times occur with C:\\Users\\VMBB-PC6\\Documents\\NIST_The GaloisCounter Mode of Operation(GCM).pdf.\nI checked for the corresponding normal log and found two occurs on this operation : \nCreateFile : C:\\Users\\VMBB-PC6\\Documents\\\n  AccountName: VMBB-PC6, DomainName: VMBB-PC15-PC\n    ShareMode = 0x7\n    FILE_SHARE_READ\n    FILE_SHARE_WRITE\n    FILE_SHARE_DELETE\n    DesiredAccess = 0x100001\n    FILE_READ_DATA\n    SYNCHRONIZE\n    FlagsAndAttributes = 0x0\n    OPEN_EXISTING\nin total called 4 times in normal log with all success status while the failed case log also only called 4 times in total with 2 success and 2 failed status. This seems is mean it doesn't trying to elevate when privilege is not enough.\nI guess this issue is happening is because : The Adobe Reader Protection is a sand box and preventing the elevate operation in order to provide protection but at the same time the access token returned by DokanOpenRequestorToken() is not contain sufficient privilege. In my option, if we understand the difference between the access token returned by DokanOpenRequestorToken and the access token returned by LogonUser(), then we would understand why this is happening.\n@bailey27 , did you got any idea on the difference between the access tokens?. ",
    "monceaux": "I was able to get this working after I determined it to be some kind of 64-bit vs. 32-bit unsigned integer issue in fuse_opt.c on line 200.\nhttps://github.com/dokan-dev/dokany/blob/e43052006c96bc440dc9b6481b3863aac30bc9da/dokan_fuse/src/fuse_opt.c#L200\nAll of this was done on Windows 7 64-bit running cygwin64.\nI changed the line from:\nif (opt->offset == (unsigned long)-1) {\nto:\nif ((uint32_t)(opt->offset) == (uint32_t)(-1)) {\nI then recompiled the cygdokanfuse1.dll, and recompiled the fusexmp.c.  Running the following then works:\n```\n$ ./a.exe -h\nusage: ./a mountpoint [options]\ngeneral options:\n    -o opt,[opt...]        mount options\n    -h   --help            print help\n    -V   --version         print version\nFUSE options:\n    -d   -o debug          enable debug output (implies -f)\n    -f                     foreground operation\n    -s                     disable multi-threaded operation\n-o umask=M             set file and directory permissions (octal)\n-o fileumask=M         set file permissions (octal)\n-o dirumask=M          set directory permissions (octal)\n-o fsname=M            set filesystem name\n-o volname=M           set volume name\n-o setsignals=M        set signal usage (1 to use)\n-o daemon_timeout=M    set timeout in seconds\n-n                     use network drive\n\n```\nI don't have the time to create a pull request at the moment, but will try to shortly.\n. ",
    "mylemans": "Rather sure you cannot go wait on Microsoft to 'fix' it for you? \n. ",
    "kbarnes3": "From what I've read, it sounds like you can support Windows 10 desktops, but not Server 2016, buy using an attestation signed driver. This requires an EV cert still, but doesn't require passing WHQL. There might also be a scary looking dialog involved at installation time.\nhttps://msdn.microsoft.com/en-us/windows/hardware/drivers/develop/attestation-signing-a-kernel-driver-for-public-release?f=255&MSPPError=-2147217396\nI've never gone through this process though, so take everything above with a grain of salt.\n. Generally when someone at Microsoft says \"Win 10 client SKU\" they mean Home, Pro, Enterprise, Enterprise LTSB, and Education. In other words, versions of Windows 10 that most customers would run on a laptop or desktop. Mobile and IoT are not client SKUs.\nProbably the biggest callout of something that isn't a Win 10 client SKU is Windows Server 2016, even though it has the same version number as Windows 10 1607 and runs on a lot of the same hardware.\n. ",
    "sdecugis": "This post clarifies the rules quite well I think: https://blogs.msdn.microsoft.com/windows_hardware_certification/2016/07/26/driver-signing-changes-in-windows-10-version-1607/\nIs there anything contributors can do to help getting the driver accepted on newer Win10 machines with Secure Boot ON ? This is a serious issue for many people I believe...\n. Thank you for the update @Liryna :) What is the cost of such signing certificate ? (is it one-time or is it an annual fee?) \n. Thank you for the information. I will try asking on my side as well if helping is possible.\n. Dear @Liryna, thank you for your hard work and keeping us posted on the status. \nCan you share what is your plan related to releasing a driver compatible with this new Win 10 family ? When you write \"on each architecture\" do you mean you cannot use the previous way (with your older certificate or the newer one) for Win7, Win8, Win8.1, and only use the new submission process for Win10 (32 an 64) to limit the workload ? Or am I misunderstanding your sentence ?\nThank you~\n. Yes, it is completely clear now, thank you!\nHopefully release 1.0.0 is completely stable and you don t need to update often afterwards :)\n. @Liryna: \n\n\"If someone would like to test and give some feedback (x64):\ndokan1.zip\"\n\nSorry for the late feedback; we tested that version on our side and it works properly for us on a fresh Win10 with secure boot enabled. Thank you for the great work!\nLooking forward to the 1.0.0 stable release. (is it still planned shortly ? anything we can help with ?)\nKind regards\n. Hi @Liryna, thanks for the fast action.\nI did not see that is was particularly slow, but it is happening on a fairly powerful machine, and the issue happens within a few seconds of starting so I may not notice lower performance...\n. my CONTENT.exe is doing a number of things before the issue happens. The last thing I can see relates to trying to open a DLL file that does not exists (HID.dll that you can see in the log). So a simple \"Hello World.exe\" might be too short execution time for the issue to happen... Maybe you can try \"Hello World Sleep 5000.exe\" ? :)\nIf it helps: when the problem does not occur, my CONTENT.exe is next trying to open another non-existing DLL called VERSION.dll in the root folder of the mounted device. (note: I don t have the source code of this CONTENT.exe)\n. @liryna: OK thank you. I hope this helps to identify a root cause that might also explain the behavior I am seeing.\n@marinkobabic: thank you for the analysis. I am using 1 thread. Yes I can explore the folder before starting CONTENT.exe, I did not see any problem doing so, but I did not try to stress it either. What is unclear to me is that the user-space callback seems not being called from kernel, then a timeout occurs. Could it be the same deadlock issue #345 that generates this behavior maybe ?\n. Thanks. The reason I used 1 thread only is that I have seen some race conditions in user-space previously, and I did not experience any performance penalty using a single thread so far. So using 2 threads seems more like a dirty workaround than a solution to me ^^.\nI unfortunately don t have an environment to rebuild a kernel driver myself, so I either need to wait for 1.0.1 with that deadlock fix, or I need some kind soul to build a test release for me :)\nKind regards,\nSebastien.\n. Understood, thank you. I will give this a try.\n. Ok thank you for trying. I am still waiting for feedback on the result with the new driver... Hopefully the problem will be gone and that will confirm the deadlock theory.\n. We have confirmed that the freeze we had sometimes with mirror.exe is gone with the latest changes in repository; however it seems the issue persists with TrendMicro 11... I will try to obtain more logs.\n. Hi @Liryna , indeed the crash happens within FsRtlUninitializeOplock in both case, but from a different call path (in #344 it seems to be at the time of file creation while in my case it is when the file is cleanup). It could be the same root cause still.\nSince it is kernel memory being corrupted, I really have no access to that memory so I am not sure I could do anything in my callbacks to improve the situation. It looks a kernel driver issue to me, do you agree ?\nThe issue happens very often with some of our sequences of using the virtual filesystem (almost never runs to completion), while some other relatively similar sequence never hit it... I was not able to clearly qualify what makes it happen more or less often. \nWe have one workaround at the moment of stopping MsMpEng.exe but that s far from ideal...\nI'll write to you separately concerning your dream :D\n. I ll try to get this tested tomorrow as well, not sure when I can get feedback... \n. Hi,\nA couple of additional information:\n- yes it can be reproduced with RC4\n- I can reproduce it sometimes with the attached modified mirror, and executing a \"test.exe\" in the mirror FS that loads/unloads many libraries (for example a game exiting or similar). -- the BSOD happens when the test.exe is quitting usually. \n  mirror.c.txt\n. ",
    "zanderz": "Apologies @Liryna, I thought I had replied earlier. We do have users who are already attempting the fresh AU Windows 10 install + keybase, and being blocked from installing the drivers, though we have signed them with our EV cert. We are signed up on the Developer Center, but I just haven't gotten around to making a submission in the required format.\nKeybase would like to sponsor an EV cert for the Dokany project. Should we make a donation on the main page, or what's the best way?\nBTW, keep in mind that Microsoft rules require EV certs to be on a hardware key, which only works during a logged in session, making automation and distributed builds very cumbersome. Some have had luck building in a cloud VM with USB ports forwarded. We have a dedicated machine that stays logged in always, configured to be a Jenkins slave for a remote master. This is with DigiCert - I believe Symantec would have the same limitations but we don't have an EV cert from them.\n. No idea about sysdev discount, sorry, but try it! Maybe that's because of this new MS requirement.\nSSL site certificates are a different product from codesigning ones, maybe that explains some of the price difference.\n. @Liryna, it is your choice, we'll use paypal or can also use TransferWise if you prefer - we use it to pay people in Europe. Looks like paypal fees are 3% or so? Let us know.\n. Your submission was approved in minutes? Ours is still pending after 3 days.\nOn Thu, Aug 25, 2016 at 6:40 AM, Liryna notifications@github.com wrote:\n\n@Rondom https://github.com/Rondom no idea also, I will give more\ninformations when I get the microsoft support answer :(\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/271#issuecomment-242389861,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AA0ovV-Dke5aGSly3nKLzIvsE3kjIxmJks5qjZtCgaJpZM4JBE_q\n.\n. Whoops, sorry about the product name, I fixed that.\nOur reason for moving this logic out of the package and into the bundle is for our own bundle to show coherent errors to the user. At first, our bundle included the Dokan bundle in its chain, and when run silently, all its errors were masked, and worst of all, the visual studio redistributable package could cause an unprompted reboot. Now we have copied all the same prerequisites from the Dokan bundle to ours, and just chained the .msi packages.\n\nSpeaking of which: it would be very helpful if the .msi packages were included in the release binaries, so we hopefully someday can stop building + signing our own.\n. Changed to WINTRUSTVERSION < v6.1.7601.22000 and squashed down.\n. I changed it, but note that it doesn't match the packages, because MinVersion is inclusive.\n. I managed to get this preview version and make a few dumps in a vm after downloading the above linked build. Let me know if there's anything else I can do. This is a pretty bare installation, no other third party products.\ndumps_2016.10.04.zip\n. 100416-7000-01.txt\n100416-8281-01.txt\n100416-9640-01.txt\n. I was able to verify that windows insider build 16232 (thanks for the tip @Diagonactic) freezes with Dokany v1.0.3 when running mirror.exe. Will work on getting a debug trace.. I got the following - seems a little sparse?\nNote the machine doesn't quite freeze all the way, but it's pretty much useless.\n[\\\\DESKTOP-2UKD7KJ]\n00000001    0.00000000  [DokanFS] ==> DokanCreate\n00000002    0.00000292  [DokanFS]   Create: ProcessId 4688, FileName:(null)\n00000003    0.00000401  [DokanFS]     IdType = DGL\n00000004    0.00000511  [DokanFS]   IdentifierType is not vcb\n00000005    0.00000729  [DokanFS]   Create: FileName:(null), status = 0x00000000\n00000006    0.00000875  [DokanFS]   status = 0x0\n00000007    0.00000985  [DokanFS]   status = STATUS_SUCCESS\n00000008    0.00001094  [DokanFS] <== DokanCreate\n00000009    0.00005835  [DokanFS] ==> DokanCreate\n00000010    0.00005981  [DokanFS]   Create: ProcessId 4688, FileName:(null)\n00000011    0.00006054  [DokanFS]     IdType = DGL\n00000012    0.00006163  [DokanFS]   IdentifierType is not vcb. That one was made with dbgview. This time I was able to attach windbg remotely and got this log with a basic mirror test:\ndokandbg.TXT\nIt quickly repeats IOCTL_MOUNTDEV_QUERY_DEVICE_NAME and STATUS_BUFFER_OVERFLOW over and over.\n. Doesn't seem to make a difference. Here is another log from doing:\nmirror.exe /r C:\\Users /l /o M:\ndokandbg2.TXT\n. @lyrna @benpye This is a separate bug, right? There is still something strange on the Microsoft side? Or is this expected to be a solution?. I just built Dokan from current master and the freeze problem is solved on Win 10 build 16232. Thanks everyone! :thumbsup:. Here is our build in case someone wants to try an EV-signed one:\nhttps://github.com/keybase/dokany/releases/download/v1.0.4.84/dokany.zip. @Liryna Is there somewhere the scope of PnP implementation for Dokany has been discussed? How much work is it likely to be?. ",
    "markuskreusch": "@Liryna \nChecked the mount path by debbugging fuse_main_real in dokanfuse.cpp. The path passed to fuse_main_real is correctly null-terminated. I could not identify another call from java into fuse which involves the mount path, do you know there is such call I should check too?\n@taruti \nSo you suggest the problem is caused by the java process modifying the memory where the mount path resides while the dokan/fuse library will still access it? In general it is not possible to modify a the data of a java String once constructed using java (it is immutable) but maybe it is garbage collected and the memory reused afterwards. Will check this but I guess jna should cover such problems . I didn't test on other windows systems so do not know if this problem is limited to Windows 7.\n. @Liryna \nHad another BSOD today and thus rechecked all four dumps. The dump always includes ismountpointdriveletter somewhere but I noticed that 063016-6286-01.dmp (included in my attachment from the first comment) is different somehow. The stack text does not include dokan1!IsMountPointDriveLetter+0x4 in this case.\nWhen you are saying it is impossible that IsMountPointDriveLetter is called what are the implications of that it is shown in the dumps? Are the dumps incorrect or may I have done something wrong analyzing them?\nAny ideas how I could continue analysing this problem? Maybe a way to get more detailed information about the crash or similar?\n. @marinkobabic \nMhm at first I though it would not be possible for me to provide an exe because to write such I would have to know what causes the problem. But while thinking I realized that I left out the most obvious way: build my java code into a runnable jar file and provide this to you. I will provide this.\nAnd another question: Does the pull request mean that you found the reason of the problem or is this just a fix which COULD solve this issue?\n. Was building an executable jar file to reproduce this issue and tested this on the current master branch. Could not reproduce the BSOD so seems to be fixed somehow with the latest commits. :+1: \nWill come back to you if the issue appears again.\n. ",
    "skyjally": "Hi @Liryna,\n       Thanks for your responses, I will try it.\n. Hi @Liryna,\nI had tried the last release version, but I still can't get the right results now the version is:\n\ndokanctl.exe /v\nDriver path: 'C:\\Windows\\system32\\drivers\\dokan1.sys'\ndokanctl : May 8 2016 13:08:11\nDokan version : 100\nDokan driver version : 0x190\n\nI also do the same thing in win10, the mounted disk capacity results is zero.\nFrom the debug information, if I get free space from rootpath, QueryVolumeInfo not to be called,well in subdirectory I find QueryVolumeInfo has to be called.\nBest Regards!\nrootpath.txt\nsubdirectories.txt\n. I had tried: new File(\"E:\") ,new File(\"E:\\\") , new File(\"E:\\\"),all the results is zero. I had used c code to get the free space, I can get right result, so I suspect in java code dokan can't get right window system calls. Here are my c code, I run this code in win7:\n```\ninclude \"stdafx.h\"\ninclude \nvoid GetDiskSpaceInformation(LPSTR szDrive)\n{\n    printf(\"volume  %s \\n\",szDrive);  \nDWORD64 dwAvailableByte, dwTotalNumberOfByte,dwFreeNumberOfByte;  \nif (!GetDiskFreeSpaceEx(szDrive,(PULARGE_INTEGER)&dwAvailableByte,  \n    (PULARGE_INTEGER)&dwTotalNumberOfByte,(PULARGE_INTEGER)&dwFreeNumberOfByte))  \n{  \n    printf(\"cannot get disk free space \\n\");  \n}  \nelse  \n{  \n    printf(\"GetSpace by GetDiskFreeSpaceEx()\\n\");  \n    printf(\"Avaliable (byte):  %I64d\\n\",dwAvailableByte);  \n    printf(\"Total  (byte):  %I64d\\n\",dwTotalNumberOfByte);  \n    printf(\"Free (byte): %I64d\\n\",dwFreeNumberOfByte);  \n}\n\nDWORD dwSectorsPerCluster,dwBytesPerSector,dwNumberOfFreeClusters,dwTotalNumberOfClusters\n\n;  \nif (GetDiskFreeSpace(szDrive,&dwSectorsPerCluster,&dwBytesPerSector,  \n    &dwNumberOfFreeClusters,&dwTotalNumberOfClusters))  \n{  \n    printf(\"GetSpace by GetDiskFreeSpace()\\n\");  \n    printf(\"PerCluster:  %d\\n\",dwSectorsPerCluster);  \n    printf(\"BytesPerSector:  %d\\n\",dwBytesPerSector);  \n    printf(\"FreeClusters:  %d\\n\",dwNumberOfFreeClusters);\n\n    printf(\"TotalNumberOfClusters: %d\\n\",dwTotalNumberOfClusters);  \n    printf(\"Total  (byte):   %I64d\\n\",(DWORD64)dwTotalNumberOfClusters *(DWORD64)dwSectorsPerCluster * (DWORD64)dwBytesPerSector);  \n    printf(\"Free (byte):  %I64d\\n\",(DWORD64)dwNumberOfFreeClusters*(DWORD64)dwSectorsPerCluster * (DWORD64)dwBytesPerSector);  \n}\n\n}  \nvoid GetDisksInformationEx()\n{  \nprintf(\"Begin Call GetDisksInformationEx()\\n\");  \nCHAR szLogicalDriveString[1024];  \nPCHAR szDrive;\n\nZeroMemory(szLogicalDriveString,1024);  \nGetLogicalDriveStrings(1024 - 1, szLogicalDriveString);  \nszDrive = szLogicalDriveString;  \nwhile (*szDrive)  \n{  \n    printf(\"volume %s\\n\",szDrive);  \n    GetDiskSpaceInformation(szDrive);  \n    szDrive += (lstrlen(szDrive) + 1);  \n}  \nprintf(\"end Call GetDisksInformationEx()\\n\");\n\n}  \nint _tmain(int argc, _TCHAR argv[])\n{\n       GetDisksInformationEx();\n    system(\"pause\");\n    return 0;\n}\n```\n. hi, @Liryna:\n    I had test in window7 function GetVolumeNameForVolumeMountPointW get the same error ERROR_INVALID_PARAMETER - 87 (0x57)). \n    In dokan function DiskDeviceControl(sys/device.c) I found a note:\n            /* NOTE: When Windows API GetVolumeNameForVolumeMountPoint is called, this IO control is called.\n               Even if status = STATUS_SUCCESS, GetVolumeNameForVolumeMountPoint returns error.\n               Something is wrong..\n            /\n   Is anyting wrong here?\n. hi @Liryna\uff0c\n  I didn't use that option. Now I have tried it in window7 and get the right result. Thanks for you help\n. ",
    "cpptinybird": "@Liryna I'm Sorry ,My English is poor...\nThe only code I changed was here ,you can see it in this picture:\n\nThen I mounted directory (\"test_dokan\") ,But when I open a file ,this happened:\n\nWhy Windows does not open \"C:\\1.txt\" for me and thinks this file is a  directory ?\n. The error on Windows MessageBox means \"The directory name is invalid \".\n. @Liryna  Thank you for your answer ,I am still puzzled...\nWhen I use right click (edit with nopad++ )to open the file,it works. Why ?\nwhat the differences between double-click and right click?\n. @Liryna  Thank you! I seem to understand. :+1:\n. ",
    "baixiangcpp": "When I forcing CreateFile to always open \"C:\\1.txt\" ,then MirrorGetInfomation will get a lot of wrong message.So explorer can not work.I solved this problem today.Thank you. :100: \n. when notepad++ write something to a file, ReadDirectoryChanges  cannot  monit  wirte event.. ",
    "Green7": "Here is log.\nDokan_Library_1.0.0.103_Bundle_20160720225015_003_Dokan_x64.msi.log.zip\n. Yes you're right, the .NET 4 was not installed.\nSo I:\n- installed .NET 4 framework\n- after this Dokan installer was successful\n- but the Dokan driver was still not installed. When I tried mirror example I had \"Can't install driver\" message.\n- so I'm ran: dokanctl.exe /i d\n  After this everything works correctly.\n. No. But I can check everything one more time on fresh system.\n. Fresh system:\n- KB3033929\n- reboot\n- .NET 4\n- reboot\n- Dokan.\nWorks ok :)\n. ",
    "anddyliu2000": "I meet this problem, too.\nI found an article to descript why filename be turned to upper case in reparse point. It is NTFS's fault.\nIn this post, he shows how to fix it. Hope it can help you.\nhttps://www.osronline.com/showthread.cfm?link=287522. ",
    "linyuan870": "@Rondom yes,\nI am based on https://www.osronline.com/showthread.cfm?link=287522\nTo verify, the final verification is successful; a pull requests are submitted. The Fix also shows the changes made based on the information provided by the last person in #293. The link provided is the same as the link you just sent.\n. I have a way to solve this, but this does not seem to be a good solution.\nsession.txt\ndokan/mount.c DokanBroadcastLink call the above function\nredfs_service.exe need to call SHChangeNotify\nBecause service-initiated mirror is at session 0, it is still at session 0 when executed to DokanBroadcastLink function; we can not refresh explorer by notifying explorer.exe at session 1 by SHChangeNotify function. So we need to create a Session 1 process to call SHChangeNotify function to notify the same in the session 1 of the explorer; The above new function is to achieve this function.\n. @Liryna Hi,\nYou say add a check in DokanBroadcastLink, the following if statement seems to be successful only in the session 0.\nif (safe && EnableTokenPrivilege(SE_TCB_NAME, TRUE)) {\n    receipients |= BSM_ALLDESKTOPS;\n  }\n@IvanKonov Hi,\nThe method you use is recall DokanBroadcastLink in session 1?\n. @Liryna Hi,\nI think it's possible to add a new dokanctl option, but the exe path in the CreateProcessAsUser function needs to be handled to make it work for everyone.. @IvanKonov Hello\uff0c\nThe method you need to use CreateProcessAsUser to create your process?. @Liryna \nI want to get dokanctl.exe path, such as G: \\ test \\ banben \\ 1.0.5 \\ dokany \\ x64 \\ Debug \\ dokanctl.exe; how to get through DokanLibraryLibx64EnvPath.. @Liryna \nI added an option in \ndokan_control / dokanctl.c\ncase L's': {\n      DWORD wEventId = lstrcmpi(argv[2], TEXT(\"1\")) == 0 ? SHCNE_DRIVEREMOVED : SHCNE_DRIVEADD;\n      SHChangeNotify(wEventId, SHCNF_PATH | SHCNF_FLUSHNOWAIT, TEXT(\"A:\\\"), NULL);\n  } break;\nIt is successful.\nSHChangeNotify inside the DokanBroadcastLink function can already be refreshed. Is it necessary to call DokanBroadcastLink?\nStill do not know how to get DokanLibraryEnvPath from dokany / dokan_wix / Dokan_x64.wxs.. @Liryna \nWCHAR path[MAX_PATH]= TEXT(\"G:\\test\\banben\\1.0.5\\dokany\\x64\\Debug\\dokanctl.exe\");\nCreateProcessAsUser(hTokenDup, NULL,path, NULL, NULL, FALSE, dwCreationFlag, pEnv, NULL, &si, &pi);\nIf you get DokanLibraryEnvPath, you do not need to specify the path to dokanctl.exe above; this may actually solve the problem.. https://github.com/linyuan870/dokany/commit/9f24adcfa888e88e4d1539d5e3f004764705eee4\nNow it's not enough that you need to change the path above to your dokanctl.exe path.\nsuch as\nWCHAR path[MAX_PATH] = TEXT(\"G:\\test\\dokany\\x64\\Debug\\dokanctl.exe\");. @Liryna \nAs he said \"Because I have a process in the system tray\", if his method works well for people who do not have this process then his approach is definitely better (what if we did not have that process? My method is to think of each of us have dokanctl.exe, really a little overkill); GetEnvironmentVariable seemingly only access such as% HOMEPATH% this environment variable.. @Liryna \nI've tried DokanLibrary1, but GetEnvironmentVariable does not get the path; is it because I disabled driver signing at install time?\n\nDokanLibrary1 environment variables will appear in the picture above?\n. @Liryna \nBut I did not show up\u3002. @marinkobabic \nI use the admin user but did not appear; What is the difference between the credentials mean?. @marinkobabic \nAgain this question...... @marinkobabic \nSE_TCB_NAME permission when service starts.. @marinkobabic \nSE_TCB_NAME permission to start the service at this time even HOMEPATH no path;\nWhen I start the service can get the path to HOMEPATH, but still can not get DokanLibrary1.\nThe reason I think the problem is that there is no DokanLibrary1 in my system environment variables or user environment variables. Dokanctl.exe / i d (compile-time disabled driver signature) Installation dokan1.sys, so there should be no problem installing it?. @marinkobabic \nMy program to start the service mount the drive letter problem is solved, because I have a service installation program; GetModuleFileName can get the program path directly.\nThe path I get this variable is mainly to solve the problem that other people can not automatically refresh (because there are dokanctl.exe); However, the value of the environment variable (such as% HOMEPATH%) can not be obtained by GetEnvironmentVariable function when starting the service; So now There is no point in having the DokanLibrary1 variable for environment variables.. @marinkobabic \nI may not make it clear.\nAs a user login, you can get the value of the environment variable;\nAs system user, you can not get it. To start the service is this, so no way to get DokanLibrary1 variable.. @marinkobabic \nI tried it, As system user, you can get the system environment variables;\nThen DokanLibrary1 variable installation of user variables or system environment variables? If it is a system environment variables should be solved. @Liryna Hi, I try to mount with /o option , use API function find it . thank you! . @Liryna Hi, when I open the mount manager option on my own file system, new problems arise. When I open the word or txt file, pop up a window. \"Do you want to empty the Recycle Bin for this drive?\" Can you give me some advice to solve this problem?. @Liryna Hi,\nThanks for your reply\uff01\nI believe this problem will be solved\uff0e. @Liryna Hi,\nI see an article on the clean up the reference, try a bit unsuccessful, maybe I do not understand it; you can look at this article? May be able to solve this problem.\nhttps://www.codeproject.com/articles/27355/WebControls/\nIOCTL_MOUNTMGR_VOLUME_MOUNT_POINT_DELETED is used. Hi @Liryna ,\nThat is, our dokan is created and deleted by IOCTL_MOUNTMGR_CREATE_POINT and IOCTL_MOUNTMGR_DELETE_POINT?\nI see that the DeviceName passed to the DokanSendVolumeCreatePoint and DokanSendVolumeDeletePoints functions (passing IOCTL to MountManager in these two functions) is the same value each time, but mount with / o option is a different GUID and each GUID Have not been deleted.\nI have debugged the DokanSendVolumeCreatePoint and DokanSendVolumeDeletePoints functions and found that the DokanSendIoContlToMountManager returned by the DokanSendVolumeCreatePoint function returns the success of the first mount only, and then the reload will return a large number; DokanSendVolumeDeletePoints will return success each time.\nI would like to ask is that I can not now through IOCTL_MOUNTMGR_DELETE_POINT to delete each load generated by the different GUID? Are these GUIDs that MountManager randomly generated for us? . Hi @Liryna ,\nthe large number value can not find in it https://msdn.microsoft.com/en-us/library/cc704588.aspx ;\nI show you the problems I see\uff0e\nFirst time mount:(with /o option)\nDokanSendVolumeCreatePoint\u3000\u3000\\Device\\volume{-1735-}\n\nIOCTL to MountManager,status return 0 (success).\n\nAPI  find the volume:\n\n\nFirst time unmount:\n\nIOCTL to MountManager,status return 0 (success).\n\nIf the reference is removed, the API should not find the volume.\nBut API find the volume:\n\nSecond time mount:\n\\Device\\volume{-1736-}\n\nIOCTL to MountManager,the status is a large number and can not be found in the website you gave me.\n\nAPI to find the first mount of the volume and the second mount of the volume, and the first load of the volume GUID converted to a specific path (such as M :) corresponds to the distortion\n\n\nSecond time unmount:\n\nThird time mount:\n\nIOCTL to MountManager,status is actually returned 0, I guess it is not with the Register Editor before the \\ ?? \\ volume {GUID} was used. Then look behind:\n\nAPI find the volume:\n\nAt this point our M: / corresponding \\ ?? \\ volume {GUID} before we Register Editor had; so Register Editor did not add a \\ ?? \\ volume {GUID}.\n\n. ## Fourth time mount\nIOCTL to MountManager\uff0cThe return value is a large value and is different from the previous value\uff0ecan not find in it https://msdn.microsoft.com/en-us/library/cc704588.aspx ;\n\\Device\\volume{-1730-}\n\nRegister Editor:\n\nFind the volume:\n\nThis four times the unmout are successful (status = 0), followed by two times I omit the unmount.\nBut the API found these volumes have been there until the machine restarts. When restarting, the API can not find these volumes, but the Register Editor still has these \\??\\ Volume {GUID}.\nI want the effect every time I find the volume through the API only one \\ ?? \\ volume {GUID}. And not now every time there will be a \\??\\ volume {GUID}.\n. Hi @Liryna ,\nAt first I thought that DeviceName was not changed, but then I saw a slight difference; I have a text above the picture to write the difference, you may not notice (\\ Device \\ volume { - 1735 -  -  - }, \\ Device \\ volume { - 1736 -  -  - }, \\ Device \\ volume { - 1730- * * -  - **}).\nDokanSendIoContlToMountManager function code:\n```\nNTSTATUS\nDokanSendIoContlToMountManager(__in ULONG IoControlCode, __in PVOID InputBuffer,\n                               \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000__in ULONG Length, __out PVOID OutputBuffer,\n                               \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000__in ULONG OutputLength) {\n  NTSTATUS status;\n  UNICODE_STRING mountManagerName;\n  PFILE_OBJECT mountFileObject;\n  PDEVICE_OBJECT mountDeviceObject;\n  PIRP irp;\n  KEVENT driverEvent;\n  IO_STATUS_BLOCK iosb;\nDDbgPrint(\"=> DokanSendIoContlToMountManager\\n\");\nRtlInitUnicodeString(&mountManagerName, MOUNTMGR_DEVICE_NAME);\nstatus = IoGetDeviceObjectPointer(&mountManagerName, FILE_READ_ATTRIBUTES,\n                                    \u3000\u3000\u3000\u3000\u3000\u3000&mountFileObject, &mountDeviceObject);\nif (!NT_SUCCESS(status)) {\n    DDbgPrint(\"  IoGetDeviceObjectPointer failed: 0x%x\\n\", status);\n    return status;\n  }\nKeInitializeEvent(&driverEvent, NotificationEvent, FALSE);\nirp = IoBuildDeviceIoControlRequest(IoControlCode, mountDeviceObject,\n                                     \u3000\u3000\u3000\u3000\u3000\u3000\u3000 InputBuffer, Length, OutputBuffer,\n                                     \u3000\u3000\u3000\u3000\u3000\u3000\u3000 OutputLength, FALSE, &driverEvent, &iosb);\nif (irp == NULL) {\n    DDbgPrint(\"  IoBuildDeviceIoControlRequest failed\\n\");\n    return STATUS_INSUFFICIENT_RESOURCES;\n  }\nstatus = IoCallDriver(mountDeviceObject, irp);\nif (status == STATUS_PENDING) {\n    KeWaitForSingleObject(&driverEvent, Executive, KernelMode, FALSE, NULL);\n  }\n  status = iosb.Status;\nObDereferenceObject(mountFileObject);\n  // Don't dereference mountDeviceObject, mountFileObject is enough\nif (NT_SUCCESS(status)) {\n    DDbgPrint(\"  IoCallDriver success\\n\");\n  } else {\n    DDbgPrint(\"  IoCallDriver failed: 0x%x\\n\", status);\n  }\nDDbgPrint(\"<= DokanSendIoContlToMountManager\\n\");\nreturn status;\n}\n```\nfunction in it set the ntstatus value \uff1a\n```\n  irp = IoBuildDeviceIoControlRequest(IoControlCode, mountDeviceObject,\n                                     \u3000\u3000\u3000\u3000\u3000\u3000\u3000 InputBuffer, Length, OutputBuffer,\n                                     \u3000\u3000\u3000\u3000\u3000\u3000\u3000 OutputLength, FALSE, &driverEvent, &iosb);\n  status = IoCallDriver(mountDeviceObject, irp);\nif (status == STATUS_PENDING) {\n    KeWaitForSingleObject(&driverEvent, Executive, KernelMode, FALSE, NULL);\n  }\n  status = iosb.Status;\n```\n. @Liryna \nEXE software\nCDViewer.zip\nopen CDViewer.exe \uff0cADViewerCtrl.ini\u3000will always call MirrorCreateFile function many times\uff0e\n. Hi @Liryna ,\nYes, they are the same;The only difference is dokan slower;When I filter out some of this file to read, dokan significantly faster when opening exe.\nBecause NTFS will read this file repeatedly, and now I do not know if it is dokan problem.\nI use FileSpy to view IRP requests as follows\n\nFileSpy.log\n. @Liryna \uff0c\nthank you\uff01. @Liryna hi,\nI want to ask if Reparse point is now supported by Dokan?. @Liryna thanks.. @Liryna Hi\uff0c\nyes\uff0ccreated at the end has the wrong name;\ncalling wchar_to_utf8_cstr returns garbled Chinese.\n. @Liryna  Hi,\nI use the function utf8_to_wchar_buf converted garbled Chinese, and then call the WideCharToMultiByte function, and ultimately can create a normal Chinese.. @Liryna Sorry for the late reply,\nFinally, I converted to get the normal Chinese string again; however, the fname of this function is passed directly to the user-implemented callback function. If converted in dokan_fuse, is it better to pass a string that shows normal in Chinese to the callback? Implementing such callbacks also makes it easier to use dokan_fuse.\n\nops_.getattr\nCall the user-implemented callback function, passing the past string is garbled; if dokan_fuse handled properly to pass the Chinese is not better?\n. @melak47  @Rondom thanks,\nIt really is not garbled; just when I  create a file, I can not get the Chinese name I want.I need to call utf8_to_wchar_buf this function before creating the file.\ndokanfuse pass the file name\n\ncall utf8_to_wchar_buf\n\nThe utf8_to_wchar_buf function is located in dokan_fuse / src / utils.cpp; it is a function of the dokanfuse library. If we add the call to this function in dokanfuse and then pass it the normal Chinese character, then I do not need to call the utf8_to_wchar_buf function for one conversion. Of course, I use dokanfuse. If dokanfuse can increase the number of utf8_to_wchar_buf calls, I get Chinese directly. I'm sure I'd like dokanfuse to add this function call. However, dokanfuse may not have this function call for some reason.\n. @Rondom @melak47 sorry,\nI seem to know why, because I create the file requires the wchar_t type; dokanfuse converted to utf8 more generic.Because dokanfuse starts with wide character conversion to narrow characters.\nIt seems that I myself has been dizzy.. @Rondom thank you very much,\nMy own code inside the function need to use a wchar file name, next time I will not be guilty of such mistakes.. @Liryna  Hi,\nYour changes did not return the correct status, my changes returned the correct status.\nI submitted a pull request.. @Liryna \nI think you should have no problem before that, but I use your change has been returned 0.\nI think it is if (res == 0 & & .....) This condition is not met, the above call do_open_file function does not return after res == 0.. @Liryna \nfusemain.cpp : impl_fuse_context::create_file. @Liryna \n\nres = 0, also entered that judgment, but the final return of res -1073741771\n. @Liryna \nUnfortunately not.\nI use return win_error (STATUS_OBJECT_NAME_COLLISION, true); replace\nres = win_error (STATUS_OBJECT_NAME_COLLISION, true); is successful, the front also called do_open_file function, you can change it?. @Liryna  YES. @Rondom thanks,\nWhat did you say was fixed before? Or yesterday's pull request? Yesterday was submitted by me.. @Rondom \nNow is not changing the code, waiting for WIN10 1803 or later? Can it be fixed for any system, such as WIN 7? If it is only valid for WIN10, is it possible to perform name conversion in the driver?. @Liryna \nYou can test the #713 pull request to see if it resolves other versions.. @Rondom win 10. @Rondom \nMicrosoft Windows [Version 10.0.16299.431]. @Liryna sorry for the late reply,\n1. The warning is eliminated;\n2. If\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0(0 <= FsRtlFindExtraCreateParameter(EcpList, &IopSymlinkECPGuid,\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 (void )&EcpContext, 0)\nreturn true, that is, re-parse point; return false, that is, not re-parse point, the code will not be executed later; I think this time is not expensive; I don't know how to judge whether it is re-parsing point in the driver, you know Is there any simple way to judge?\n3. I changed the return type of the conversion function to void, because this function, if it is a reparse point, converts the name accordingly; if not, it does not convert.. @Liryna @Rondom \nI made the windows version judgment at the beginning of the RevertFileName function. If the version >=win10 1803, I immediately returned. I did not find a way to use the macro definition to determine the specific system version of windows such as win10 1803; I found a RtlGetVersion function to get system information. \nDon't know if this change is OK?. @Liryna OK,thank you .. @Liryna @Rondom OK. @Liryna Hi,\nHave you conducted the final test? I have squashing all commits into one commit, is it squash like this?. @Liryna \nThank you too\uff01. @Liryna \nhttps://docs.microsoft.com/en-us/windows/desktop/FileIO/determining-whether-a-directory-is-a-volume-mount-point\nIn the windows system disk such as G:, create a symbolic link softlink to a file test.txt\nThe symbolic link type created is .symlink.**\n\n\n. @Liryna I think I didn\u2019t make it clear last time.\nWhen I use mirror.exe /r G: /l m, the symlink type originally located on the G drive has changed(Changed from .symlink to file); I saw in the mirror's MirrorFindFiles function that the value of the dwReserved0 of the WIN32_FIND_DATAW structure has changed; windows passed over dwReserved0 is set to IO_REPARSE_TAG_SYMLINK, the value returned after dokan has changed,dwReserved0 becomes 0 ; it should be where the dokan changes the structure, resulting in the mirror disk can not display the .symlink file like the G drive.\n. @Liryna \ndokan/directory.c\nfunction DokanFillIdBothDirInfo\nBuffer->EaSize = 0;    =\u300b Buffer->EaSize = FindData->dwReserved0;\nfunction DokanFillBothDirInfo\nBuffer->EaSize = 0;   =\u300bBuffer->EaSize = FindData->dwReserved0;\nAfter the above changes, type can correctly display .symlink.\nBut still can't achieve the function of soft connection, it should be supported and should be supported. I hope someone can provide this support.\n. @Liryna \nJust a simple attempt, I think this should be a little useful, but the light change can not achieve the function of supporting soft connection, I also tried to make changes to the driver or other places, but finally did not find where the driver handles the transfer Value.. I think the type error is to throw dwReserved0 when it is done through dokan.. @Liryna  Hi\ndokan/mount.c  DokanUnmount   function\nsys/timeout.c     DokanUnmount   function\nWhat is the difference between the unmount functions of these two places? It seems that the driver has a mechanism to unmount based on timeouts.\n. @Liryna  Hi\nI think I might have a wrong direction before. I am reinterpreting my question.\nNow that the mirror exits abnormally, you need to wait for 15s or so, and then manually refresh the drive letter in the file explorer to disappear; I looked at the driver code and also did some debugging;\n\u00a0 Sys/timeout.c DokanTimeoutThread => DokanCheckKeepAlive => DokanUnmount\nThe driver uses a timeout mechanism to deal with the unloading of the drive letter when the exit is abnormal;\nThe effect I want to get is that after the abnormal exit, the driver detects that the user mode mirror is hanged and uninstalls the drive letter within 2~3s, instead of using the timeout mechanism to uninstall the drive letter; can you support it?. Hi @Liryna ,\nI know that the value of the timeout mechanism cannot be changed. What I want to say is to add extra code to the driver; should the driver have other ways to determine if the user mode mirror exits? This method takes less time than the timeout mechanism and then calls sys\\timeout.c DokanUnmount.. @marinkobabic thanks,\nThe time is short and can be felt in the experience; for example, if the abnormal program exits, the general user will open the explorer refresh; if the drive letter is unloaded within 2~3 seconds, the drive will be almost unloaded when the user refreshes;\nHowever, if the timeout mechanism is used to unmount, the user refreshes (before the timeout period), and the drive letter still exists. After that, it may not be manually refreshed. It is mistaken that the drive letter cannot be uninstalled. The short time is definitely beneficial.\nYou said that start an separate exe, this method has also been considered.. @marinkobabic \nOk\uff0cthanks.. ",
    "dmi3s": "MS World, Excel and PowerPoint won't work without this fix. @bailey27, @Liryna thanks a lot!\n. ms office 2013. but even a paint from ms windows 10 can't rewrite existing file on a virtual disk. this is really a great patch!\n. ",
    "DimitarKapashikov": "Hi @Liryna ,\nI have tried to install the new version without success, the KB is already installed, but the installer fails.\n\nDokan_Library_1.0.0.4000_Bundle_20160729134447.txt\n. @Liryna  I have attached the log generated by the installer, If you need another one please give me its location\n. @Liryna  Sorry for the delay. I have attached the log\nDokan_Library_1.0.0.4000_Bundle_20160729134447_000_Dokan_x64.msi.log.txt\n. @ js69 here it is\n\n. It's very strange, when i try to unistall it , it shows a message that the update in not installed. Do some one of you know other way to unistall the KB?\nThanks and Regards,\nDimitar\n\n. Thanks , I have run the tool and it has fixed some errors in the registry. Unfortunately after retrying to uninstall and install the KB, it is the same situation as before. In my opinion the KB is included in some other KB with higher number, but I can't find which is. Any other ideas which might help?\n. I think so, the updates are managed by a system administrator and as far I can see from the updates history there are not failed updates so far\n. Tomorrow I am going to try on another PC in the same corporate network \n. Hi Everyone, I managed to install the KB, thank you very much for the support. The BSOD is also solved with the new version\n. Hi Liryna,\nIt is failing because there is a new dependence (StringInterpolationBridge) in dokanNet and that's why some operations are failing. This is the error:\n2016-10-04 17:22:46,409 [27] DEBUG DOKAN_LOGGER.Debug - Exception during StringFormat: Could not load file or assembly 'StringInterpolationBridge, Version=0.9.1.0, Culture=neutral, PublicKeyToken=761dcf67ba0bf74d' or one of its dependencies. The system cannot find the file specified.     Context {0}{}\n2016-10-04 17:22:46,393 [23] ERROR DOKAN_LOGGER.Error - ReadFileProxy : \\download\\Book1.xlsx Throw : Could not load file or assembly 'StringInterpolationBridge, Version=0.9.1.0, Culture=neutral, PublicKeyToken=761dcf67ba0bf74d' or one of its dependencies. The system cannot find the file specified.\nAfter copying the StringInterpolationBridge.dll to my project it wokrs now.\nThank you very much for the prompt reply.\nHave a nice day,\nDimitar\n. HI @Liryna,\nWhen I execute the mirror.exe (mirror.exe /m /r c:\\users /l m) I can see the drive letter but I cannot access the content.\nRegards,\nDimitar\n. Hi @Liryna \nDo you mean the logs generated by mounting with /d ?\nThanks and Regards,\nDimitar. dbgview-09062018.log\nHi @Liryna ,\nAttached is the new log with d option.\nRegards,\nDimitar. Hi @Liryna ,\nWe are still investigating ,on machines where the McAfee EERM is not installed it works. I am going to update you once we have more information.\nThanks and Regards,\nDimitar. Hi @Liryna \nChanging the McAfee policy for removable media, fixed the issue. Thank you very much for your support.\nDimitar. ",
    "oldenj": "Hello, i found this issue while testing encfs4win (jetwhiz/encfs4win#122).\nI get the very same behaviour - when i stop all Symantec Desktop Encryption services, i can use the mount of an encrypted folder just fine, as soon as i restart Symantec Desktop Encryption, the next operation will lead to a BSOD (kernel_security_check_failure).\nThis happens using Dokan Library 1.2.1.\nI would appreciate any assistance with this - as i can reproduce reliably, i will do my best to provide any data/logs needed.\nThanks.\n. I did, but i got the same output including \n*** ERROR: Module load completed but symbols could not be loaded for dokan1.sys\n*** ERROR: Module load completed but symbols could not be loaded for PGPfsfd.sys\nso i am not sure i am doing it right.\nI used SRV*;<path to win10 release from the zip>*;http://.....,\nomitting the semicolons doesn't load any symbols (i looked up https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/symbol-path).\nFor the original output i used the path to the debug version of dokan (from the installer).\nAm i supposed to reproduce the crash using the debug version of dokan and then analyze this dump?\nI'm sorry for the hassle and thanks for the quick help.\n. So the symbols indeed loaded without the semicolons, but i am still getting\n*** ERROR: Module load completed but symbols could not be loaded for dokan1.sys\n*** ERROR: Module load completed but symbols could not be loaded for PGPfsfd.sys\nI downloaded dokan.zip, release 1.2.1.2000, and tried the folders Debug, Release, Win10Debug, Win10Release as the symbol path.\nI.e. SRVC:...\\dokan\\x64\\<folder>http://msdl.microsoft.com/download/symbols\nThe full output of !analyze -v:\nanalyze.txt\n. ",
    "Daniel-Abrecht": "I've compiled fuse-nfs with the v2.0.0-BETA1 version, just to see if it works or not. It turned out the -s option to disable mutithreading in fuse does no longer work in dokanys fuse wrapper. Single threading is often prefered in programs which use fuse, because it prevents any race conditions, keeps things simpler, doesn't require all used libraries to be thread safe and isn't really slower for a lot of use cases. Fuse-nfs and probably a lot of other programs which use fuse relay on its single thread mode and can't be used without it.. Yes, but only if the program which uses fuse requests the single thread mode. The current fuse wrapper tries to do this here: \nhttps://github.com/dokan-dev/dokany/blob/af49c7200fefe9d46d06a00f9413b466142af746/dokan_fuse/src/dokanfuse.cpp#L604\nAlternatively, it would probably be sufficent to just use a mutex lock to prevent two fuse callbacks to be called at the same time. Or if the single thread mode won't be supported anymore, there should at least be a warning if a program attemps to use it. \n. I already gave a lot of reasons way a lot of fuse file systems prefer single thread mode over multithreaded mode. There are also a lot of cases where not using multithreading can actually increase the overall system performance. Let me give you an example: Let's assume we have a network file system which uses a single socket to transfer datas. In that case, the network would be the bottle-neck, and having multiple threads which try to send data and/or synchronize some actions just wastes cpu time other processes could have used.\nHowever, I'm not interested in the single thread mode because of it's possible bennefits and drawbacks. \nThe interesting thing about fuse is that it's an api that allows a program to provide a file system and that program will work on any system which has an implementation of the fuse api. The single user mode of fuse is a basic feature every implementation of fuse provides and many programs rely on. Reimplementing this feature in an existing fuse file system which previously relayed on the fuse implementation to provide it is somthing I would never do, it wouldn't make any sense.\nJust to make this clear, this isn't about just adding a feature I think may be neat, this is about maintaining compatiblity with existing programs and the fuse api itself.. Yes, I do use a reparse point. So it seams to be a the same issue indeed. Initially, I thought it would also happen with mounted drive letters, but that turned out to be a different problem. By the way, is there a way to remove left over volumes which have never been cleanly unmounted?. No, on my first try to port the fuse-nfs program, I mounted an nfs share to a drive letter, but I had used the wrong stat struct in the program, and when I tried to open the volume the program crashed and the explorer froze. I wasn't able to unmount the drive, I coudn't close the explorer or kill the explorer process, and the VM didn't want to reboot either. So I manually turned it off and on again, and I couldn't mount the same share at the same drive letter in a working way. But nevermind, another reboot solved that.. No, I didn't actually try to do that. What I mentioned in #466 refered to my Port of Ronnie Sahlbergs' fuse-nfs program: https://github.com/Daniel-Abrecht/fuse-nfs-crossbuild-scripts/\nI used the dokany-fuse wrapper to port it so windows users don't need an expensive windows enterprise version just to mount an NFS share. It doesn't help in any way to create an NFS share in windows.\n. There are two Windows ports of Ronnie Sahlbergs' fuse-nfs program: https://github.com/sahlberg/fuse-nfs/\nMy port is based on Dokanys' fuse-wrapper: https://github.com/Daniel-Abrecht/fuse-nfs-crossbuild-scripts/\nThe other port is from Bill Zissimopoulos and based on winfsp: https://github.com/billziss-gh/nfs-win\nPlease note that fuse-nfs is based on libnfs which currently doesn't support kerberos, which means that both of these fuse-nfs ports won't support kerberos authentication either.. Yes, I would really appreciate this.. Maybe I should change the description from \"Some shell scripts to build fuse-nfs for windows using dokany\" to \"fuse-nfs for windows using dokany\" to avoid confusion, because there are also releases.. Both length calculations are wrong. You passed the length of the whole buffer to strncpy, but you passed the buffer with an offset. You would have to substract that offset from the length of the buffer to get the remaining length of the buffer starting from that offset. But I think it's easier and safer to just use the length of the new option/param and add the nullbyte manually. \nHere is a commit for this:\nhttps://github.com/Daniel-Abrecht/dokany/commit/aafbf4a33ca6a04e7aa98f057e3a4fac7bb35ed3\nI'm never quiet sure how I should add such changes, if I add it to this pull request it would leaf an unnecessary commit in the git history, but if I open another pull request the discussion get's split into two parts. Can github handle a force push to a commit used to start a pull request? But then the other commit would be lost...\n. Ok, I've now made a force push. The new patch just corrects the length calculation and adds the null byte to terminate the strings explicitly. The previous commit seams to have been lost due to that though, it seams github is still not able to retain them if it's the first commit of a pull request.. All of the following files need the fix:\ndokan_fuse/src/dokanfuse.cpp\ndokan/dokan.h\ndokan/dokani.h\ndokan/list.h\ndokan_fuse/src/fusemain.cpp\ndokan_fuse/src/utils.cpp\ndokan_fuse/src/fuse_helpers.c\ndokan_fuse/include/fuse_win.h is not affected, because the include in there is only included if _MSC_VER is defined.\nCommit 0e8366c only fixes dokan/dokan.h, which isn't sufficient. I've attached some build logs to show that every file I listed above indeed needs the fix: log.txt\nEdit: I just noticed commit 0e8366c was from 2016 anyway.. The use with that cmake feature is already possible. I don't know why anyone would want to do something like that, since cmake is a build tool and not a packet manager, but whatever, here is an example of me cross compiling dokan_fuse with that ExternalProject cmake feature:\n```\n!/bin/bash\nset -xe\nmkdir example\ncd example\ncat > CMakeLists.txt <<EOF\ninclude(ExternalProject)\nget_filename_component(CMAKE_TOOLCHAIN_FILE \"\\${CMAKE_TOOLCHAIN_FILE}\" ABSOLUTE)\nExternalProject_Add(dokan_fuse\n  GIT_REPOSITORY   https://github.com/dokan-dev/dokany.git\n  SOURCE_SUBDIR    dokan_fuse/\n  INSTALL_COMMAND  \"\"\n  CMAKE_ARGS       \"-DCMAKE_TOOLCHAIN_FILE=\\${CMAKE_TOOLCHAIN_FILE}\"\n)\nEOF\ncat > x86_64-w64-mingw32.cmake <<EOF\nset(CMAKE_SYSTEM_NAME Windows)\nset(TOOLCHAIN_PREFIX x86_64-w64-mingw32)\nset(CMAKE_SHARED_LINKER_FLAGS \"-static -static-libgcc -static-libstdc++\" CACHE STRING \"\" FORCE)\nset(CMAKE_C_COMPILER \\${TOOLCHAIN_PREFIX}-gcc)\nset(CMAKE_CXX_COMPILER \\${TOOLCHAIN_PREFIX}-g++)\nset(CMAKE_RC_COMPILER \\${TOOLCHAIN_PREFIX}-windres)\nEOF\ncmake -DCMAKE_TOOLCHAIN_FILE=x86_64-w64-mingw32.cmake .\nmake\nls dokan_fuse-prefix/src/dokan_fuse-build/\nOutput:\ndaniel@colibri:~/test$ ./example.sh \n+ mkdir example\n+ cd example\n+ cat\n+ cat\n+ cmake -DCMAKE_TOOLCHAIN_FILE=x86_64-w64-mingw32.cmake .\n-- The C compiler identification is GNU 6.3.0\n-- The CXX compiler identification is GNU 6.3.0\n-- Check for working C compiler: /usr/bin/x86_64-w64-mingw32-gcc\n-- Check for working C compiler: /usr/bin/x86_64-w64-mingw32-gcc -- works\n-- Detecting C compiler ABI info\n-- Detecting C compiler ABI info - done\n-- Detecting C compile features\n-- Detecting C compile features - done\n-- Check for working CXX compiler: /usr/bin/x86_64-w64-mingw32-g++\n-- Check for working CXX compiler: /usr/bin/x86_64-w64-mingw32-g++ -- works\n-- Detecting CXX compiler ABI info\n-- Detecting CXX compiler ABI info - done\n-- Detecting CXX compile features\n-- Detecting CXX compile features - done\nCMake Warning (dev) in CMakeLists.txt:\n  No cmake_minimum_required command is present.  A line of code such as\ncmake_minimum_required(VERSION 3.7)\n\nshould be added at the top of the file.  The version specified may be lower\n  if you wish to support older CMake versions for this project.  For more\n  information run \"cmake --help-policy CMP0000\".\nThis warning is for project developers.  Use -Wno-dev to suppress it.\n-- Configuring done\n-- Generating done\n-- Build files have been written to: /home/daniel/test/example\n+ make\nScanning dependencies of target dokan_fuse\n[ 12%] Creating directories for 'dokan_fuse'\n[ 25%] Performing download step (git clone) for 'dokan_fuse'\nCloning into 'dokan_fuse'...\nAlready on 'master'\nYour branch is up-to-date with 'origin/master'.\n[ 37%] No patch step for 'dokan_fuse'\n[ 50%] Performing update step for 'dokan_fuse'\nCurrent branch master is up to date.\n[ 62%] Performing configure step for 'dokan_fuse'\n-- The C compiler identification is GNU 6.3.0\n-- The CXX compiler identification is GNU 6.3.0\n-- Check for working C compiler: /usr/bin/x86_64-w64-mingw32-gcc\n-- Check for working C compiler: /usr/bin/x86_64-w64-mingw32-gcc -- works\n-- Detecting C compiler ABI info\n-- Detecting C compiler ABI info - done\n-- Detecting C compile features\n-- Detecting C compile features - done\n-- Check for working CXX compiler: /usr/bin/x86_64-w64-mingw32-g++\n-- Check for working CXX compiler: /usr/bin/x86_64-w64-mingw32-g++ -- works\n-- Detecting CXX compiler ABI info\n-- Detecting CXX compiler ABI info - done\n-- Detecting CXX compile features\n-- Detecting CXX compile features - done\nNo CMAKE_BUILD_TYPE specified, defaulting to Release\n-- Configuring done\n-- Generating done\n-- Build files have been written to: /home/daniel/test/example/dokan_fuse-prefix/src/dokan_fuse-build\n[ 75%] Performing build step for 'dokan_fuse'\nScanning dependencies of target dokanfuse1\n[ 14%] Building CXX object CMakeFiles/dokanfuse1.dir/src/dokanfuse.cpp.obj\nIn file included from /home/daniel/test/example/dokan_fuse-prefix/src/dokan_fuse/dokan_fuse/include/../../dokan/dokan.h:32:0,\n                 from /home/daniel/test/example/dokan_fuse-prefix/src/dokan_fuse/dokan_fuse/include/fusemain.h:4,\n                 from /home/daniel/test/example/dokan_fuse-prefix/src/dokan_fuse/dokan_fuse/src/dokanfuse.cpp:6:\n/home/daniel/test/example/dokan_fuse-prefix/src/dokan_fuse/dokan_fuse/../sys/public.h:365:0: warning: ignoring #pragma warning  [-Wunknown-pragmas]\n #pragma warning(push)\n/home/daniel/test/example/dokan_fuse-prefix/src/dokan_fuse/dokan_fuse/../sys/public.h:366:0: warning: ignoring #pragma warning  [-Wunknown-pragmas]\n #pragma warning(disable : 4201)\n/home/daniel/test/example/dokan_fuse-prefix/src/dokan_fuse/dokan_fuse/../sys/public.h:379:0: warning: ignoring #pragma warning  [-Wunknown-pragmas]\n #pragma warning(pop)\n[ 28%] Building CXX object CMakeFiles/dokanfuse1.dir/src/fusemain.cpp.obj\nIn file included from /home/daniel/test/example/dokan_fuse-prefix/src/dokan_fuse/dokan_fuse/include/../../dokan/dokan.h:32:0,\n                 from /home/daniel/test/example/dokan_fuse-prefix/src/dokan_fuse/dokan_fuse/include/fusemain.h:4,\n                 from /home/daniel/test/example/dokan_fuse-prefix/src/dokan_fuse/dokan_fuse/src/fusemain.cpp:16:\n/home/daniel/test/example/dokan_fuse-prefix/src/dokan_fuse/dokan_fuse/../sys/public.h:365:0: warning: ignoring #pragma warning  [-Wunknown-pragmas]\n #pragma warning(push)\n/home/daniel/test/example/dokan_fuse-prefix/src/dokan_fuse/dokan_fuse/../sys/public.h:366:0: warning: ignoring #pragma warning  [-Wunknown-pragmas]\n #pragma warning(disable : 4201)\n/home/daniel/test/example/dokan_fuse-prefix/src/dokan_fuse/dokan_fuse/../sys/public.h:379:0: warning: ignoring #pragma warning  [-Wunknown-pragmas]\n #pragma warning(pop)\n[ 42%] Building CXX object CMakeFiles/dokanfuse1.dir/src/utils.cpp.obj\n[ 57%] Building C object CMakeFiles/dokanfuse1.dir/src/fuse_helpers.c.obj\n[ 71%] Building C object CMakeFiles/dokanfuse1.dir/src/fuse_opt.c.obj\n[ 85%] Building RC object CMakeFiles/dokanfuse1.dir/src/dokanfuse.rc.res\n[100%] Linking CXX shared library libdokanfuse1.dll\n[100%] Built target dokanfuse1\n[ 87%] No install step for 'dokan_fuse'\n[100%] Completed 'dokan_fuse'\n[100%] Built target dokan_fuse\n+ ls dokan_fuse-prefix/src/dokan_fuse-build/\nCMakeCache.txt  CMakeFiles  cmake_install.cmake  fuse.pc  libdokanfuse1.dll  libdokanfuse1.dll.a  Makefile\n```\nThe SOURCE_SUBDIR parameter is the key. I found it by just reading the very documentation you have linked to. I suggest reading it more carefully.\n. There is an option for it. I'm not entirely sure anymore which one, but I think it was \"-ovolname=TheName\". You can set it like any other fuse option.\nEdit: I see I'm too late already.. ",
    "lostmsu": "Just came here for the first time. Is this pull request still up to date? Or was it reworked in some way? E.g. where can I find the diff.. ",
    "DarylOliver": "yes it does thank you I look forward to that package being released. \nalso yeah I just realized my dang motorolla spell checker altered what I had said honestly android is glorious but at times a tad annoying.\n. ",
    "infeo": "Hey, is there any progress in this issue? because i would really like to use dokany, but i don't have always admin rights. Currently in windows 10 and the recent dokany binaries (from 27.11.2017) it still needs admin rights to unmount my drive.. That's true, but then 'B' should be also excluded, shouldn't it? Or do i miss something? (With mount point 'B' the mirror example works pretty fine).\nAdditionally, if you change the code to accept 'A' as a valid mount point, compile and install it, the mirror example runs pretty smooth. Maybe this constraint can be dropped in the next release? :D\n. Thanks for the detailed explanation and pointing to the corresponing code. \nI corrected the topic of the issue accordingly to be a property of windows rather than a bug.. I think for a developer it is more important what the final input for the search expression parameter will be. The description leaves this quite open:\n1. . is replaced by \", if it is succeeded by ? or * in the search string: test.* \u21a6 test\"*\n2. * is replaced by <, if it is succeed by . in the search string: t*.txt \u21a6 t<.txt\n3. ? is always replaced by >: t?st.txt \u21a6 t>st.txt\n. I do see, that my suggestion is actually unrelated to dokany and more to the conversion of the win32 subsystem to the windows kernel. The above documentation should be sufficient then and for the rest one must do some research, because that's just how windows works.\n@Rondom My background is being a deveolper using the Java-Wrapper for Dokany. When you implement now the findFilesWithPattern function and use the windows kernel search pattern directly in the java API, it does not yield the correct result. Thus i have to convert the pattern into a valid java one and therefore i need to know the conversions rules.\nRegardless, glad that you answerd so fast and the issue is resolved now!. ",
    "rkrikava": "It doesn't happen reliably but I'd say probably 1 in 25 times running the app.  I will try to reproduce with the mirror app.\n. I haven't been able to reproduce this in the mirror app, yet.  I had set up\nsome automated tests to try to reproduce this in a VM.  Its on the\nback-burner for now, but I will get back to this soon.\nOn Tue, Sep 6, 2016 at 4:05 PM, Liryna notifications@github.com wrote:\n\n@rkrikava https://github.com/rkrikava any news from this ?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/317#issuecomment-245073264,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AUEi_B8Ou5aS8TEXtSgQ3AZ1Atark1jGks5qnceXgaJpZM4Jk0kp\n.\n\n\nRoland Krikava\n+1 845 419 3729\nhttps://www.linkedin.com/in/rolandkrikava\n. Please find attached a zip containing everything needed to reproduce the bug on a Win10 x64 machine.  The README.txt explains the steps necessary.  I'm not quite sure why this bug could not be produced in a VM, but on my machine it reliably triggers after about 22 iterations.\nMountPointBug.zip\n. Have you been able to reproduce the bug?  Let me know if you have any questions.\n. I ran the test without '/o' option.  Currently at 375th iteration of mouting/umounting, so it looks like this bug is mount manager specific.\n@Liryna It seems there is more than one bug:\n- Unmount fails to completely unmount 'S:\\'\n- On the next mount request for drive 'S:\\', DokanMain succeeds and the mount point reported in the callback is 'S:\\' even though 'M:\\' is used.  The expected behaviour would be for DokainMain to fail, allowing the user application to select a different mount point.\nWhat functionality am I loosing by omitting the mount manager? A little off topic: Is there a way to keep (or register) a mount point across user sessions / reboots?\nThanks,\nRoland\n. Example.zip\n. ",
    "Kerbox": "A bit off topic, but would you mind explaining a bit more why it is so important to keep kernel/user protocol compability in a minor release? Why couldn't it always be required that the same dokanX.dll/dokanX.sys pair is installed together? Is it because you want others to distribute their own dokanX.dll?\n. That is a fair reason. Pity it makes fixing bugs like this and adding features a bit cumbersome, but as long as the major release schedule isn't too infrequent, I guess it's not a problem.\n. Do anyone else have trouble with VLC now even on a normal mount on windows 7? It's a bit difficult to tell from the logs what is happening, since there is so much activity even when opening a single file.\nBut I'm seeing CreateFile in mirror with the FILE_FLAG_OPEN_REPARSE_POINT flag set, isn't that weird?\n\n. Here is the dbgview output at least: dbgview\nI note that there isn't a DokanCompleteRead in the entire log!\nEdit: And there are a few DispatchQueryInformation result =  80000005 in there...\n. Process monitor is showing that ReadFile is failing with INVALID_PARAMETER. I can see a CreateFile for the mp4 file with the Directory option set. procmon csv\nI added some extra print outs to the kernel log.\nThe problem seems to be that the ReadFile is operating on a file which has the DOKAN_FILE_DIRECTORY bit set.\nHelp me explain this:\nThe ReadFile's that fail are operating on the fileObject FFFFFA80024CBC60. The only directory bit related to that is at event 5547, where it is set for the root directory.\nThere are a few CreateFile for \\triforce.mp4\\ which is requested with FILE_DIRECTORY_FILE, but this seems to be another fileObject (but is that relevant? Can the fileObject pointer change after create?)\nEdit\nMight this be a problem?\n\n00005476  3.62218308  [DokanFS] ==> DokanCreate\n00005477  3.62218809  [DokanFS]   Create: ProcessId 1120, FileName:\\triforce1.mp4\\, FILE_DIRECTORY_FILE=1, fileObject=FFFFFA800283EC80\n00005478  3.62218952  [DokanFS]    IdType = VCB\n00005479  3.62219119  [DokanFS]   IrpSp->Flags = 0\n00005480  3.62219357  [DokanFS]   DokanGetFCB has entry FileName: \\ FileCount: 4. Looking for \\triforce1.mp4\n00005481  3.62219691  [DokanFS]   DokanGetFCB has entry FileName: \\triforce1.mp4 FileCount: 1. Looking for \\triforce1.mp4\n00005482  3.62219882  [DokanFS]   Found existing FCB for \\triforce1.mp4\n. Yes, the request goes to the mirror, but as \\triforce1.mp4 (because the last slash is stripped) with the FILE_DIRECTORY_FILE set. This is currently allowed, which changes the FCB of the already opened file handles. I created a pull request with a fix on the mirror side. But maybe there should be some fix in dokan to prevent such a scenario from happening?\n\nRelating to this github issue though, I cannot reproduce it on windows 7 with the latest source and vlc 2.2.4.\n. Using Avira Antivirus?\nThe stack trace and the fact that it only happens with files already existing on the server seems to indicate that it's related to the security descriptor maybe?\nnt!KiPageFault+0x221\nnt!RtlEqualSid+0x7\navgntflt+0x4bbe\n. Are you running the latest Avira and a fully updated win 10? Just to eliminate a buggy Avira driver as the cause.\n. I haven't been able to reproduce your crash. As far as I can tell from the dump, the Avira minifilter driver is passing a null pointer as first argument to RtlEqualSid, causing a bug check and BSOD. Perhaps you could open a support ticket with Avira?\n. Would you feel comfortable opening a test account on your ssh server?\n. I sent you an email with my public key (23:91:b5:ae:6c:1e:8c:2e:bf:8d:73:f6:e4:53:dc:4a).\nIf I still can't reproduce it, you may need to provide additional logs as described here\n. I have reproduced the issue, and will try to figure out the problem when I have some time to spare.\n. The problem seems to be that winsshfs returns success here, even though they don't provide the requested information (in this case, the OWNER_SECURITY_INFORMATION). Avira doesn't double check it in their driver before using it.\nThis seems to be fixed in their master branch: https://github.com/Foreveryone-cz/win-sshfs/blob/master/Sshfs/Sshfs/SftpFilesystem.cs#L1344\nSo should we close it if it doesn't happen with latest winsshfs, or should we double check that the security descriptor is valid here?\n. The security descriptor is invalid, in that it has 0 in the owner field, even though it was owner that was requested and it returned SUCCESS.\nIn DokanCompleteQuerySecurity, you can do \nRtlValidRelativeSecurityDescriptor(EventInfo->Buffer, EventInfo->BufferLength, irpSp->Parameters.QuerySecurity.SecurityInformation);\nand perhaps return STATUS_INVALID_PARAMETER. This works for me.\n. At least it isn't crashing anymore. I note that if you try to commit one more time, it works.\nThe main difference I can see in procmon is that for NTFS, CreateFileMapping returns \"FILE LOCKED WITH ONLY READERS\", while in mirror, it returns \"FILE LOCKED WITH WRITERS\".\nAnother difference is that when in mirror, we get a FileSystemControl operation, that I cannot see when using NTFS. So that is strange.\nThe fsctl in question is FSCTL_QUERY_VOLUME_CONTAINER_STATE.\n. So, I've been researching this problem a bit. I saw that after cloning the repository, a CreateFileMapping of .git\\index fails, due to GetFileInfo with invalid handle.\nIt looks like a Cleanup has been done on the .git\\index during the clone process, but never a Close. Once you try to do a CreateFileMapping, you get a GetFileInfo and then a Close on the previous handle!\nIf I remove\nCloseHandle((HANDLE)(DokanFileInfo->Context));\n    DokanFileInfo->Context = 0;\nfrom MirrorCleanup, git clone and commit works again.\n. Yes, I can fix it so it works like Read and Write.\n@dimov-cz You may have to do something similar in winsshfs if you encounter the same issue there.\n. I cannot get it to work, if I do it the same way as in Read, I get \"bad index file sha1 signature\" from git. \nI have no idea why, and I do not have any more time this week to find out unfortunately.\nAlso, the directory structure that git creates during clone, cannot be deleted through explorer for some reason.\nedit: I don't seem to get any ReadFile on mirror if I do CreateFileMapping and MapViewOfFileEx on .git\\index, and read the data. It looks like the data I see through the file map is the index file before doing the git add. For some reason it isn't updated with the new file content. I suspect it is because when git changes the index file, it creates index.lock, writes to it, and then renames it to index.\n. @Liryna If you haven't fixed this issue with the lock changes, I can resume trying to find out the reason tomorrow!\n. @taruti No, does not seem to make any difference.\n. No luck yet, unfortunately. I cannot figure out why I get Close on NTFS, but not on mirror. \nI have a few other ideas I will try out later.\n. I found out that the reason for the \"bad index file sha1 signature\" is that when renaming index.lock to index, there are two index FCB's, for the old and new. If I \"fix\" this, I can get git to work. But I suspect this is just masking the symptom, because I still have problem with the device references.\n. @Liryna Yes, because .git\\index have not received an IRP_MJ_CLOSE, when .git\\index.lock get an IRP_MJ_SET_INFORMATION to rename to .git\\index, it sets the FileName to .git\\index. Thus, we have two FCB with .git\\index. When a new IRP_MJ_CREATE with .git\\index is received, it uses the old FCB!\nI don't know specifically why we don't get IRP_MJ_CLOSE when using git, but I have reproduced the issue doing this (pseudocode):\nfilehandle = CreateFile()\nmaphandle = CreateFileMapping(filehandle)\nmmap = MapViewOfFileEx(maphandle)\nCloseHandle(maphandle)\nIf I now return from the program without unmapping the views or closing the filehandle, I never get IRP_MJ_CLOSE on mirror. But I do on NTFS.\n. Can give you some test code later. I also have a few ideas I want to try out.\n. @Liryna I probably won't be able to do much before the weekend, so don't hold up the release of 1.0.1 waiting for me!\n. This issue seems to have been fixed by #454 \ud83d\udc4d . I got all tests to pass here (on win7 and win10), but appveyor claims that base\\08.t fails now.\n. Never rebased before, I hope I did that correctly!\n. No problem! I am glad I can help. \ud83d\ude04 \n. Good job on the debugging \ud83d\udc4d \nMy theory is that windows media player resolves the UNC name from the mount, and tries to use that to access the file, which doesn't seem to work with our network provider. We need to look into how to get access through \\server\\share\\file to work.\n. I had some promising results when I did some experimentation last week. I will have some time tomorrow to look into it further.. Yes, you are right, this is a memory alignment issue. I think I can see what the problem is, I can try to fix it after work unless you want to fix it yourself.\n. The problem originates here. It doesn't align the BufferOffset to 4 bytes, as it should. Either we have to fix it there, or memcpy the buffer into a new aligned buffer in MirrorSetFileSecurity.\n. How about we do it something like this? Or would you rather that the user mode should handle it?\n. You mean others should comment on this issue, or I should put more comments in the code about it?\n. Ah, I will do that then \ud83d\ude04 \n. I can reproduce this on win10, and it only happens with /n.\n. Process Monitor v 3.31\n. ",
    "trungdinhtrong": "I also encountered this issue. We have one particular Windows 10 machine where this bug is reproduced consistently. However, we can not reproduce it in other Windows machines that we have.\nWhen we are waiting for the eventual notification, I'm wondering if there is any reliable way for our FS to find out which drive letter was actually assigned?. Liryna: Thank you for the suggestion. That solution can work. \nHowever, there is till a problem in this case. Supposed I request Dokany to mount at D: but it ends up mounting up E: instead:\n - When I call DokanRemoveMountPoint, if I give it 'E' it will not unmount, and DokanMain() will not return.\n - When I give it 'D' instead, DokanMain() will return, but drive E will not be reclaimed.. Hi @Liryna ,\nFinally got a chance to verify your change - it works on my side also. Thank you :). ",
    "winmaster121": "Here is How to Change Drive Letter name in Windows 10\nRight click on the \u201cStart\u201d icon positioned at the lower left corner of your screen. Click on \u201cDisk Management\u201d to open Disk Management Settings Window.\nUnder the \u201cVolume\u201d section, right click on any hard drive and click on \u201cChange Drive Letter and Paths\u201d. For instance, right click on \u201cNew Volume (E:) and click on the same.\nClick on \u201cChange\u201d to allow the name and path changes to be made on this drive.\nNow, you can drop down the letters list to choose a new driver letter amongst the list of letters available. After selecting the desired choice, click on \u201cOK\u201d.\nA warning window will be displayed on the screen saying that \u201csome programs that rely on drive letters might not run correctly. Do you want to continue?\u201d Click \u201cYes\u201d to accept the driver letter and path changes.\nSource:-  [( http://merabheja.com/change-drive-letter-name-in-windows-10/ )] . ",
    "HTPCSourcer": "Thanks Liryna,\nWe are using Dokan as part of the MediaPortal 2 package and now work on an improved installer. I simply wanted to ask first before adding a script to do something, which might also be addressed by the DokanY packages.\nAm I correct to assume that the same concept will apply in the future in case of new Dokan versions? In other words, we would need to also manually remove an existing 1.0.0 version when installing say a potential 1.2?\n. Ah, that's making things difficult. \nWe were hoping to be able to provide a fool-proof installer to MediaPortal users but now need to either have users manually uninstall and reboot or build a reboot cycle into the installer.\n. The current version used in the wildplace is 0.5.3. We plan to replace this by 1.0.0, but would like to do this automatically.\nReading the above, it will be necessary to\n1. Uninstall 0.5.3\n2. Reboot\n3. Install another major version\nBy the way: Why would one want to have two different major versions installed in parallel?\n. Well, I just installed 1.0.0.103 (Redist) in parallel to the existing 0.5.3 with the result that MP2 no longer sees remote media information and therefore is not functioning correctly anymore.\n. I uninstalled the bundle and rebooted: This restores the MP2 functionalities.\nI then reinstalled 1.0.0 (this time 1.0.0.400 bundle): there is no mirror.exe in the Dokan folder...\n. Ticked the \"development option\" - still no mirror.exe...\n. Ah, wait a minute: It's under \"sample\" - not quite the place where you would expect it.\n. What is mirror.exe supposed to do?\n. I am getting \"Can't assign a drive letter\"\n. Driver path: 'C:\\Windows\\system32\\drivers\\dokan1.sys'\nInstalling driver...\nDokanServiceInstall: Service (Dokan1) is already installed\nDriver install failed\n. http://install.team-mediaportal.com/dokaninstall_053.exe\n. I don't believe that it would be meaningful to patch 0.5.3.\nKeep in mind that it is getting installed by MediaPortal 2 users. The probability that any of them would be using such an old version for other purposes is IMHO close to zero.  Also we are planning to port MP2 to DokanY 1.0, hence the issue is coming down to the removal of 0.5.3 as part of the installation procedure.\nA patched 0.5.3 would allow the parallel installation but still require some kind of user interaction to install the patched version. Yes, we could include it into our own installer but that requires additional development work, testing, etc. From what I've seen in our Wix package the current installer is testing the filesize of dokan1.sys to decide if 0.5.3 is already installed.\nA lot of effort to just to replace a one-time activity to manually uninstall 0.5.3 and then reboot.\n. ",
    "JxLiu2016": "Hi @Liryna \nThank you very much for your reply. :)\nI will see what I can do.\nThanks\n. ",
    "leonzakaim": "Hi ,\nIm trying to use the Dokany library for mounting folder , and i notices that there are a lot of Handle leaks after each mount and unmount. \nI am attaching the solution. in order to see the leak , just check the virtual checkbox and open the text file and click continue, until the file is closed.\nTestFileSystemCalls.zip\n. When you try to mount and unmount , the number of the handles grow.\nPlease just replace the attached xaml file , and check and uncheck the checkbox, it supposes to mount and unmount. and you will see each iteration the number of the handles grows even after i unmount the colume.\nMainWindow.zip\n. No , This is not duplicated with #329. \nThe leak up there was caused when mount and unmounting the driver.\nIn the current leak , it happens when opening file , that is in the mounted driver, i attached a simple application that reproduces the leak.\nCheck the \"use virtual files\" and open Audio file or other file, and click continue and finally click close file, and check the number of the handles, you will see increased number of handles.\nTestFileSystemCalls.zip\n. Open File , and read File, you can see it in the code that i sent to you\n. The sample that i sent to you is very simple.\nIt mounts from the exe resources 4 files , Audio, text, video,image. and by clicking on the button displays the content of the file in the window.\n. Text files are OK , but when i try to  play video with MediaElement , or play mp3 file , i got the leaks. \n. ",
    "gribeiro2401": "Liryna,\nWith dokany v1.0.0.4-rc4, I definitely cannot play video files with both vlc and the windows media player on a mirror.exe mounted volume with UNC name. I havent tried with the most recent dokany snapshot but to me, unless this is something that has been fixed after the v1.0.0-rc4, there is a real issue here.\nAlso, not sure how much this is relevant here, but both vlc and the media player can play video files from smb mount points.\nThanks\n. Ok. Here is what I did:\n1. I shared my c:\\Temp folder\n2. Mapped \\localhost\\Temp to Y:\n3. Played a video in Y:\\ with vlc and the media player. This works with both players\nWith mirror:\n1. run the command: mirror.exe /r c:\\Temp /l z /n /u \\localhost\\dokan\n2. try to play a video in Z:. This fails with both the media player and vlc\nIs there something wrong in my test?\n. A couple more things I noticed:\n- not sure what this means, but in the vlc media files opening dialog, a mirror mounted volume is shown as disconnected while a locally mounted shared folder is connected (cf attached screenshot: z:\\ is disconnected while y:\\ is connected)\n- also, if I enter explicitly \\localhost\\temp\\myvideofile.avi as the filename in vlc, it fails like with mirror, but that's ok as no user is going to do that. They are just going to select the file in the mounted volume, which works with a mounted shared folder, but not with mirror.\n  \n. I am on win7 x64 sp1.  I have never been able to play video files over a network volume mounted with mirror.exe whatever the player. It only works when it is a local volume.\n. Looks like v1.0.0 went out without a fix for that :-)\nI can understand that this issue might not be critical for most Dokan users but it happens to be a blocker for me.\nAny idea about when this could be fixed?\n. ",
    "melak47": "I can reproduce this with 0.74 as well.\nIt doesn't matter whether I try to open the file in Edge from explorer, or by navigating to file://Q:/file.ext, and it doesn't just affect PDF files.\nThis doesn't appear to be a problem with UWP apps in general, for example the \"Photos\" app has no trouble opening pictures on a dokan(y) filesystem.\n. The string is not garbled, it's just UTF-8 encoded. Visual Studio doesn't display it correctly.\n@Rondom wstring_convert (all of <codecvt>) has been deprecated in C++17. I guess they won't be going away any time soon, though, since there is no replacement yet.. ",
    "g-fusion": "I can confirm that using mount manager option /o, C and  C# Implementation is working.\nThank you!\n. Hi,\nI noticed a small side effect using Mount Manager as solution for the above bug i.e.\nwhen using Mount Manager and check Properties of a Folder you do NOT have Size, Size on disk, Contains props.\n\nRegards,\ng-fusion\n. I could, but it looks somehow related to the initial one i posted.\n. Hello,\nDo you want me to open new issue for this one or we can continue in this one?\nBR,\ng-fusion\n. Sorry, my bad!\n. Hi Liryna,\nVersion is 1.0.0.5000. Hi,\nWill test and provide update. Do you need Debug logs as well if it happen to hang?. Hi,\nJust tested it. It seems to work with Mirror. We are using DotNet for custom solution. Do you need logs to compare?! I will do some additional testing meanwhile.. Hello,\nI was wondering if any down-port can be done, to the driver that we are using? The reason is that once i put new driver 1.03 rev. some of the functionalities that we are using are affected. For example creating new Excel file is no longer possible also its upload or move as well. I mean adopt ing new driver is not that easily done out of the box. . Hi,\nWill take only those changes https://github.com/dokan-dev/dokany/commit/b72f645e55b3a480a43a3fdac4b0d0a03fb54480 and try to build driver and will report back. Small remark when reproduce, the images must be BIG > 40 MB each. With small ones i did not managed to reproduce it either.. Hi,\nThe change https://github.com/dokan-dev/dokany/commit/b72f645e55b3a480a43a3fdac4b0d0a03fb54480 is not contained in 1.0.0.500 and 1.0.3 driver, how it can explain the behaviour i.e. on 1.0.0 it hangs and on 1.0.3 i does not. The DokanCompleteWrite() method does not have any difference there (in 1.0.0 and 1.0.3) compared to master?! Also, having latest driver is not an option for us based on my previous memo, it is somehow incompatible working with office files (excel). I though having only your change, as down-port, to 1.0.0 driver would be possible, but not sure if this is the real cause of the issue.\n. Hi,\nDid small test with drivers as follows:\n1.   1.0.0 - Hang (reboot required)(\n2.   1.0.1 - Runs smoothly \n3.   1.0.3 - Runs OK\n4.   1.0.5(without change https://github.com/dokan-dev/dokany/commit/b72f645e55b3a480a43a3fdac4b0d0a03fb54480)- Runs OK, not that smooth as 1.0.1 while loading all the images\n5.   1.0.5 (with change https://github.com/dokan-dev/dokany/commit/b72f645e55b3a480a43a3fdac4b0d0a03fb54480) - Runs OK, again not that smooth like 1.0.1\nMaybe i have to check our impl. as well, because we are fetching images from network and working as Local Disk and reading is not sequential. Maybe if i am network driver it will be(if i remember my test in the past correctly). I saw something similar in context of FTP (https://github.com/dokan-dev/dokany/issues/210), but this is related i think to (https://github.com/dokan-dev/dokany/pull/307).  Any suggestions here? Should Network Drive will be better or not?\n. Did Windows update on this machine to OS Build: 14393.2189 (as the other machine on which mount is working), but not success (still cannot mount). Meanwhile I noticed that letter for the mounted path is somehow left in WE, but to my understanding mount still did not happen (attached).\n\n. @Liryna  Hi,\nNot antivirus installed on this VM machine (attaching installed programs). \n\n. @Liryna Hi,\nI found something strange:\n1. If I run our application (just double click) and mount is called within it, it does NOT work (this is on the second VM I updated later on to OS Build: 14393.2189).\n2.If I run our application as Administrator (right click, run as Administrator), mount DOES work!!!\nNow, i tried this on two different VMs (as initially described) and :\n1. On the first one I do NOT run our application explicitly with (right click, run as Administrator) and mont DOES work.\n2. On the second one (which I updated later on to OS Build: 14393.2189), I MUST run our application explicitly with (right click, run as Administrator) in order mont to work.\nAny comments here are highly appreciated.\nThank you.. @Liryna Hi,\nWe are using DokanNet mount() with following opitons:\nmirror.Mount(connDetails.DriveLetter, DokanOptions.DebugMode | DokanOptions.RemovableDrive | DokanOptions.MountManager, 0, 100, TimeSpan.FromSeconds(30), null);\n. @Liryna mirror is working just fine. The only difference i can think of is that we are mounting WebDAV URL, but this should not have anything to do with mount, I guess?!. @Liryna ,\nTo repeat what you said, if i understood it right - Once the mount is done and some call is made to to our IDokanOperations implementation and we return access denied due to some reason, the device is  mounted(as per my screenshot) but we somehow prevent accessing it, correct?. .. Hi @Liryna ,\nWell just cannnot save the Excel i.e. make change in Excel when opened whithin mirror and trying to save the file. Then you've got the standard Excel thing, cannot save the file, save as ...\nSo, the trace captures only the \"Save\" moment of the file.\nThe only failed entry I can see is:\n[DokanFS] ==> DokanCompleteCreate\n[DokanFS]   FileName:\\My_test_excel.xlsx:Zone.Identifier\n[DokanFS]   FILE_DOES_NOT_EXIST\n[DokanFS]   status = 0xc0000034\n[DokanFS]   status = STATUS_OBJECT_NAME_NOT_FOUND\n[DokanFS]    IRP_MJ_CREATE failed. Free CCB:FFFFC48419005A50. Status 0xc0000034\n[DokanFS]    Free CCB \nWill try with latest. Mirror mount is made with -d flag by default.\nDo you want to see the entire create of the Excel whithin the mirror as well or Save is enough?\n. Not reproducible with 1.1.0.2000 and 1.2.0.1000 and mirror. \n. ",
    "AndirNotes": "The same issue could be reproduced for mounted folder even with mirror.exe. Please, reopen.. Hi, Liryna,\nYes, you right, it certainly does work with mount manager option and drive letter. But still it doesn't work for a mounted folder, so it looks like a bug for me. \nUser just can't open any PDF's in Windows 10 (with default Edge browser) if they are located inside a mounted folder handled by Dokan driver. Using a drive letter instead of a mounted folder could be a workaround, but it's not an option for some cases.. Hi, @Liryna  and @Rondom \nThe problem is not with flags combination, but with opening any PDF in Windows 10 from Dokan mounted folder. \nThis doesn't look like a Windows limitation, I've checked Box.Net Drive solution (which uses CBFS Connect driver underhood) and it works perfectly in the same conditions.. ",
    "velislav87": "Hi @Liryna ,\nThanks for the reply!  \ud83d\ude03 \nI did some additional testing afterwards and found the following things:\n1. The BSOD seems not to be correlated with McAfee, as it did show up after disabling the McAfee service.\n2. It seems to be implementation specific because I tried to reproduce it several times with the mirror example, but I am unable to do so (mounted multiple instances of the MemoryDrive class). \n3. My current suspicion is that an windows update or a program that was recently installed is causing it because I get the BSOD with both dokany 1.0, 1.0 RC4 and the screen appears regardless of the date of my source that I use (the issue was not present about a month ago with the RC4 and the corresponding version of the program from then).\n4. I will try and provide additional dokany debug kernel logs, however currently secure boot is preventing me from executing the \"bcdedit -debug on\" command.\nBest Regards,\nVelislav\n. Hi guys,\nThanks for the feedback and sorry for the delay.\nAfter some fiddling around the BSOD seems to be gone. It probably was something to do with the CreateFile implementation in my side. I tired several times to reproduce it, however the best I got is that the windows explorer hangs and I have to restart the whole PC.\nBy the way I noticed a possible issue in the Mirror example - the constant \"DataWriteAccess\" should include also the \"FileAccess.WriteExtendedAttributes\" and \"FileAccess.WriteAttributes\" - I think this fixes issues with Paint and MS Jorunal, as well as when manually editing the file attributes of office documents. \nThe cause from what we've seen is that windows calls createFile with the FileAccess set to \"WriteExtendedAttributes\" or \"FileAccess.WriteAttributes\" with the intention to write attributes to the opened stream, but in that case we open a Read-only stream and fail when the call to write to it actually comes.\nBest Regards,\nVelislav\n. Hi guys, seems that the BSOD described here is similar to my reported one(#344). Since we did fix it(unintentionally unfortunately) I can speculate on what caused the BSOD - in my opinion our application was causing it by holding the CreateFile or FindFilesWithPattern method calls too long, and it seems that using multiple drive instances exaggerated the BSOD occurrence.\nIf you need any further logs I can try to retrieve them, unfortunately it is difficult because the BSOD corrupts the WinDbg program as well as any debug info it collected.. Hi @Liryna , \ndo you have any idea on how to go about analyzing the issue further? I can collect, analyze and upload the minidump file from the crash, however any debug info gathered by WinDbg is lost after the BSOD. Will the information in the minidump be enough for the investigation?. Hi @marinkobabic , thanks for the reply!\nI tried adding both \"localhost\" and the machine's host name to the trusted zone list, however this didn't solve the popup. Outside of the dokany implementation adding hosts to the trusted zone does seem to work though. I tried both with the localhost as well as another machine in the network.\n. ",
    "TimJRodgers": "@Liryna That's great, thanks! Looks like it will be good, I'll check for sure on Monday.\n. Hi @Liryna, \nI tested the change and its working good for me also.\nThank you!\nTim.\n. ",
    "USeebi": "Hi Rondom,\nYou're right, the package is manually pulled together after compiling dokan_fuse for makepkg to work with dependency on fuse.  I guess the package mostly working with Msys2 as Mingw has no syslog while Linux probably use fuse directly but not dokan-fuse.\nThe latest Msys2 distribution automatically set /opt/bin in the path so that I put the dokan_fuse library in /opt/bin and fuse include files in /opt/include/dokan_fuse.  The installation is automatic with pacman although the package is manual and the /opt directory might be a good place to signify the non-standard.\nAll these information are coded in fuse.pc and this could be automated with Autotools while there are also PKGBUILD templates with Autotools.  I'm not really expert with Autotools and I really need to brush up with Cmake.  I guess we need someone expert in both Autotools and Cmake to merge this pull request at will.\n. An other way to automate is manipulating build.ps1 script \n& dokan_fuse/cleancmake.bat\nWrite-Host \"Build Msys2 x64...\"\n& C:\\msys64\\msys2_shell.cmd -msys2 -lc \"cd '$currentPath'/dokan_fuse/ && cmake . -G 'MSYS Makefiles' && make\" | Out-Host\nNew-Item -Force -Type Directory \"pkg/opt/bin/\", \"pkg/opt/include/\", \"pkg/usr/lib/pkgconfig/\"\nCopy-Item \"dokan_fuse/fuse.pc\" \"pkg/usr/lib/pkgconfig/\"\nCopy-Item \"dokan_fuse/.PKGINFO\" \"pkg/\"\nCopy-Item \"dokan_fuse/libdokanfuse1.dll\" \"pkg/opt/bin/\"\nCopy-Item \"dokan_fuse/libdokanfuse1.dll.a\" \"pkg/opt/bin/\"\nCopy-Item -Recurse \"dokan_fuse/include/\" \"pkg/opt/include/dokan_fuse/\"\nRemove-Item \"dokan_fuse/libdokanfuse1.dll\"\nRemove-Item \"dokan_fuse/libdokanfuse1.dll.a\"\n& C:\\msys64\\msys2_shell.cmd -msys2 -lc \"cd '$currentPath'/dokan_fuse/pkg && tar -cf - .PKGINFO * | xz -c -z - > ../dokan_fuse-x86_64.pkg.tar.xz\"\nWrite-Host \"Build Msys2 x64 - Done\" -ForegroundColor Green\nWrite-Host \"Install package with pacman -U dokan_fuse-x86_64.pkg.tar.xz\" -ForegroundColor Green\nThese are the steps that I pulled up the package and I would like to insert the dokany version into the package file name but need more efforts.\n. ",
    "wgaylord": "Okay  I also figured out that on my windows 10 install it installs as dokan1.dll in system32 and also SysWOW64 odd...  So I might be able to get fusepy to work.\n. Okay. I guess that can work.\n. ",
    "mistersandman": "Hi @Liryna \nI'm sorry, I actually meant to attach a patch but somehow I forgot to do so. Here you go :-)\npatch_race_cond.txt\n. Fortunately you caught the mistake of the missing curly braces for the if-branch in my patch, sorry for that!\nI actually faced the issue (segfault because of use after free), but I could not reliably debug, because it is very hard to make the kernel-mode driver call into user-mode on different threads on purpose. So after I knew what access triggered the segfault, I reviewed the code and finally found the issue. \n. ",
    "cerebrate": "@Liryna Is there a way I can get you a dump that you can use? (If it's just a matter of using the debug version of Dokan as per the \"How to Debug\" wiki page, I can do that easily enough.)\n. @Liryna I have now installed that version and tried running the mirror sample with that command line. (Didn't get quite to browsing M:, though, since it BSODed as soon as I ran it.) Dump file for that run, MEMORY-2.7z, is here:\nhttps://1drv.ms/u/s!AqrcZdowvFOLqLsghTyFh4vA_puEJw\n)\n. @Liryna Just installed it now; works perfectly, both with the mirror sample and with Keybase. Thanks muchly!\n. ",
    "CrosseyeJack": "I tried to follow the instrustions on the wiki and installed your advice to install redist which dev tools but that didn't give me mirror.exe to run so I downloaded it from the release zip. Ran dbgview, told it to log to a file, ran the command and it BSOD'ed and wrote nothing to the log file. tried to capture stdout&stderr but again no output was written before BSOD.\nIf I'm doing something wrong please let me know and i'll try again.\nEDIT: Saw your reply in the other issue. I'll happily post on either to save getting these details all mixed up.\n. POsted in the other issue, but might as well has it here too :-p\nwindbg.txt\n. @marinkobabic Not off the top of my head. The BSOD only happens when I have keybase run on start up and only when it tries to mount the kbfs with uses dokan/ so I would say thats the only software I have that uses it knowingly. \nWith Windows 10 (not sure of the version) you can no uninstall OneDrive (Searching for OneDrive in start, right clicking and selecting uninstall brings up the classic uninstall option that doesn't list OneDrive and that is the only thing I can think that is running on my system that could use cldflt.sys) But I dod not have OneDrive running on start up, if I force OneDrive to start I still dont have any issues. If I disable keybase (which is the only think that uses dokan on my machine) from start up I don't have any BSOD's. If I use mirror.exe from dokan without Keybase installed I still get the same BSOD when running the command that uses mirror.exe.\nTHOUGH, we are due for another Windows Insider Preview build (They can happen weekly). So maybe MS screwed something in  cldflt.sys (which its description is \"Cloud Files Mini Filter Driver\" which sounds fitting to dokan when using it for kbfs, but I still get BSOD's when just using it to locally mirror content) and in a couple of days this issue will magically go away. But only time will tell for that.\nEDIT: on the insiders blog it states the following known issues\nKnown issues for PC\n- Optional components may not work after upgrading to this build. To get it working again, go to \u201cTurn Windows features on or off\u201d, scroll down and check the right optional component and click ok.  After a reboot, the optional component will be enabled again.\n- Tencent apps and games will cause your PC to bugcheck (bluescreen).\n- Running sfc /scannow in an elevated command prompt will fail at 20% with the error \u201ccould not perform the requested operation.\u201d\nThe only one out of that list that would fit the bill is \"Tencent apps and games\"\n. ",
    "cdarau": "I don't have the vc_redist logs, sorry.\nThanks for the rest of the informations. Very valuable.\nBtw, KB2919355 for x64 is aprox 700 MB. It's clearly a mess wrt Microsoft updates.\n. There is another problem though. This particular update (KB2919355) has another prerequisite, namely KB2919442. The microsoft link is: https://support.microsoft.com/en-us/kb/2919442. I already dealt with this problem, since treating just the KB2919355 hotfix didn't solve the problem (as you will see by yourselves).\nI had to check for TiWorker.exe's version, which lies in one of the many subfolders underneath %windir%\\WinSxS. I done this with the following snippet:\n<Property Id=\"WINKB2919442INSTALLED\" Secure=\"yes\">\n      <DirectorySearch Id=\"SearchSystemWinKB2919442\" Path=\"[WindowsFolder]WinSxS\" Depth=\"2\">\n        <FileSearch Name=\"TiWorker.exe\"\n                    MinVersion=\"6.3.9600.17030\"/>\n      </DirectorySearch>\n    </Property>\nHope this helps!\n. Well it depends what you mean by \"enough\". If I understood correctly, you wanted to give the end-user a chance to install these hotfixes, so checking only KB2999226 would not be enough in case it isn't there. I would start by checking for KB2919442 (only for win8.1), then check for KB2919355 (only for win8.1) and only then would I check for KB2999226 (needed for all versions).\n. Yes, on win8.1, KB2999226 can only be installed if KB2919355 is installed. Also, KB2919355 can only be installed if KB2919442 is installed. I already tried this on clean, intermediate and fully prepared environments.\nNo problem. This work came out from using dokan, so you guys should be the one to be thanking to. Cheers!\n. Just a short mention. It's not \"the installation of KB2919355 and its prerequisites KB2999226 and KB2919442 is required\". It's \"the installation of KB2999226 and its prerequisites KB2919355 and KB2919442 is required\".\n. Sorry for my late response. Unfortunately, I can't test that scenario myself, because I already installed the said KB on my env (when I dealt with the problem).\n. Hi, @Liryna!\nSorry to reply to you so late. I had no time in between.\nI'm glad to see you fixed it. Thank you!. Hello,\nI wanted to posted the same issue. Since I already have the logs and a slightly different scenario, I'll post it underneath hoping it'll help you fix the problem:\nEnvironment\n\nWindows version: Windows 7 Enterprise SP1\nProcessor architecture: x64\nDokany version: 1.0.1.1000\nLibrary type (Dokany/FUSE): Dokany\n\nDescription\nI mount a folder from my desktop with command:\nmirror.exe /r c:\\users\\<username>\\desktop\\<foldername> /l <driveletter>:\nIt has several files within it. Then I open Windows Explorer and navigate to <driveletter>:. While being opened, I open another instance of Windows Explorer and navigate to the same folder, but through its absolute path (c:\\users\\<username>\\desktop\\<foldername>). In this second instance of Windows Explorer, I delete one of the files. Then, in the first instance of Windows Explorer I refresh and the freeze happens.\nIt can't be reset without restart. Both the cmd from which the mirror launched and the instance of Windows Explorer that was refreshed are not responding and unwilling to stop/terminate without restart.\nLogs\nKERNEL.TXT\nLIBRARYLOG.TXT\nPROCMONLOG.TXT\nI had to change .csv extension into .txt for Process Monitor's log for uploading purposes.\nAs shown by the Process Monitor log, two CreateFile calls (the last one and the 6th from the end backwards) don't return.. Hello Liryna,\nUnfortunately, I can't test this myself (it would take to much time for me). But since you probably already have the respective snapshot, wouldn't be possible to do a direct test of the scenario I've described and see if it happens? If I understand correctly from your discussion on this issue, you already have a version of dokan with the needed fix in place. So, if it's possible in a matter of minutes for you to test it, please do, because I would need a couple of hours to do it I guess, which I can't afford at this moment. Thank you in advance.\nOne question: do you have an estimate for when the next release will be available? I'm interested in such a release that would contain both this fix and #402.\nThank you very much!. Hello @lyrina,\nIt didn't reproduce? I didn't do anything special other than specified above. So:\n\nmount a folder with mirror (no user-mode locks option)\nI used the sample from the link: https://msdn.microsoft.com/en-us/library/windows/desktop/aa365204(v=vs.85).aspx\nI slightly modified a bit in order to grab params from program arguments, to eliminate file deletion at the end and to wait 10 or so seconds between locking and unlocking\nwhen you run it you will see that after the lock returns successfully, you won't be able to open the file in an editor, ProcMon capturing a SHARING VIOLATION response to a CreateFile request done with Generic Read desired access, until the handle is closed (last lines of the sample)\n\nHope it helps. No. In fact, when I noticed this behaviour for the first time it happened with this option in place. Only after that I tried without it and with the mirror.. Hello again @Lyrina\nDo you have any feedback on this also? Thank you very much.. Hello @Liryna ,\nI'm not sure where the mirror gets it wrong. I attached some logs. The zip format for uploading didn't work so I had to put a .txt extension for both .PML and .CSV files that are produced by ProcMon.\nFrom what I can observe, the 2 scenarios go line by line. The first CreateFile that gets SHARING_VIOLATION is the same in both cases. After that, it pour some more CreateFile that also get SHARING_VIOLATION in both scenarios. A single thing caught my attention though: there's a particular CreateFile in the mirror scenario that doesn't appear in the Windows scenario. It's a CreateFile that gets SUCCESS and after that it's succeeded by a call to QueryFileInternalInformationFile that is missing from the Windows scenario. This particular inquiry seems lost among the rest of the calls to CreateFile that all get SHARING_VIOLATION.\nI hope this helps.\nMirrorLogfile.txt\nProcMonWindowsLogfilePMLExtension.txt\nProcMonWindowsLogfileCSVExtension.txt\nProcMonMirrorLogfilePMLExtension.txt\nProcMonMirrorLogfileCSVExtension.txt. In addition to the above issue, I noticed that the LockFile callback signature doesn't contain any flag that should indicate whether the lock is exclusive or shared. Hence when locking the file with the LockFileEx windows routine, the user-mode callback doesn't know how to lock the file (shared or exclusive).\nI need to distinguish between shared and exclusive locks from my custom implementation. Is it possible that in the next release this feature would be available?\nThank you.. Hello @Liryna \nYes, the lock method works in async mode and the hEvent gets set. I don't know who sets it though... I just call the api and than wait on that event.. Hello @Lyrina\nAny feedback on this?\nThank you. Hello @Liryna \nUnfortunately I can't test the kernel driver :(. Hello @Liryna \nI renamed the .zip file to a .txt file and it worked.\nI checked the issue (#515) but it isn't the same thing as here. There, when opening the WinRAR file there were far more reads on the mirror scenario than on the windows one. Here, the sequences are exactly the same. Only the speed differs (mirror performing 2x slower when serving those reads). So this issue is about some problem in the dokan layers that make them serve so slow, comparing to the windows scenario. When using even bigger files, the difference is even bigger, overpassing 2x ratio. Maybe the short length (only 100 bytes) of those hundreds of thousands reads is the cause, I don't know.\nDesktopZIP.txt\n. Hello @Liryna \nI'm using the maximum no, 14.\nThis branch you're referring to is interesting, but unfortunately I need a signed driver :( Is this anywhere in sight for this second branch?\nThank you very much.. Hello @Liryna \nJust adding this comment in order to ping you as you said :-)\nAlso, I wanted to ask you something important: does the upcoming new dokany has the fuse wrapper? I see that you're updating the major no so I except some big differences. Beside this thread logic change that will characterize the opcoming 2.0.0, what significant other changes to except? (I refer to those that would break compatibility)\nThank you very much!. Hello to all.\nI just wanted to add that even when serving from RAM, the time-wise poor performance is noticed. So the problem doesn't reside in the mirror-callbacks, but somewhere before them in the dokany layers.. Hello again,\nI just tested the new release, namely 2.0.0.BETA1, from corillian-asyncio branch. Unfortunately, there is the same problem when opening a big .docx file and Word decides to launch on those 100s of thousands small reads (100 bytes).\n\nSo what I did:\n- I had 3 files: the 1st one ~55MB, the 2nd one ~36MB, the 3rd one ~55MB\n- I opened each one with both the mirror and the ntfs fs\n- I repeated the above 6 openings 3 times\n- the results show that when opening the 36MB .docx file (the one that triggers those small reads) with the mirror I get a time >10x slower than that obtained with the ntfs fs\n@Corillian what can possibly cause this behaviour?\nThank you all. ",
    "ajaxovic": "No, without saving. I just press F4, empty notepad win appears and immediately BSOD. Without any action. But I have some new update: It works only on files that already been on server. I can create file, do multiple open/close, update content. But when I edit some other file, that I did not create through mount point, windows crash.\n. Confirmed: Disable Avira real-time protection, all works. Enable Avira real-time protection, BSOD.\n. Sadly, I can't reproduce error with mirror. All types of mount works. Maybe issue is connected with network connection. \nJust to clarify, I'm mounting my Linux server with SSH using IKEv2 tunnel.\n. I tried all options / mount types. Without problems...\n. Yes, all up-to-date\n\n. Hello, sorry for response delay, I was out of internet. \nYes, I can give you test ssh account, but not in this public way. Could you send me an e-mail on webmaster@oubcom.net?\nI can provide some logs, which ones?\n. I sent you a mail with instructions. I hope you will be able to reproduce it...\n. Great job, thanks!!!\n. ",
    "RogerlinInquartik": "Yes,that is right. My mistake.  finally will be called even we use return. \n. ",
    "Nekotekina": "In Dokan logs, there is no such status. This must be process exit status, from Procmon:\n19:05:58,5776677    Clockres.exe    11908   Process Start       SUCCESS Parent PID: 2408\n19:05:58,5776710    Clockres.exe    11908   Thread Create       SUCCESS Thread ID: 10940\n19:05:58,5916653    Clockres.exe    11908   Load Image  C:\\Windows\\System32\\ntdll.dll   SUCCESS Image Base: 0x76ec0000, Image Size: 0x1aa000\n19:05:58,5919298    Clockres.exe    11908   Load Image  C:\\Windows\\SysWOW64\\ntdll.dll   SUCCESS Image Base: 0x770a0000, Image Size: 0x180000\n19:05:58,5920283    Clockres.exe    11908   CreateFile  C:\\Windows\\Prefetch\\CLOCKRES.EXE-7D8C1BA1.pf    NAME NOT FOUND  Desired Access: Generic Read, Disposition: Open, Options: Synchronous IO Non-Alert, Attributes: n/a, ShareMode: None, AllocationSize: n/a\n19:05:58,5920566    Clockres.exe    11908   Thread Exit     SUCCESS Thread ID: 10940, User Time: 0.0000000, Kernel Time: 0.0000000\n19:05:58,5920710    Clockres.exe    11908   QueryNameInformationFile    C:\\Windows\\System32\\apisetschema.dll    SUCCESS Name: \\Windows\\System32\\apisetschema.dll\n19:05:58,5920876    Clockres.exe    11908   QueryNameInformationFile    \\Device\\Volume{d6cc17c5-1714-4085-bce7-964f1e9f5de9}\\Clockres.exe   SUCCESS Name: \\Clockres.exe\n19:05:58,5921033    Clockres.exe    11908   QueryNameInformationFile    C:\\Windows\\System32\\ntdll.dll   SUCCESS Name: \\Windows\\System32\\ntdll.dll\n19:05:58,5921156    Clockres.exe    11908   QueryNameInformationFile    C:\\Windows\\SysWOW64\\ntdll.dll   SUCCESS Name: \\Windows\\SysWOW64\\ntdll.dll\n19:05:58,5924243    Clockres.exe    11908   Process Exit        SUCCESS Exit Status: -1073741811, User Time: 0.0000000 seconds, Kernel Time: 0.0000000 seconds, Private Bytes: 397\u00a0312, Peak Private Bytes: 397\u00a0312, Working Set: 245\u00a0760, Peak Working Set: 245\u00a0760\n. This is original mirror.exe sample, I mount C:/Test directory with only Clockres.exe file to X: and run it from Explorer. With admin rights it seems OK.\nMirror logs (two files, sorry if too big)\nhttps://gist.github.com/Nekotekina/e2bb2b67fb14998976ccac8c6b503003\n. Ah sorry. Is this correct log?\nhttps://gist.github.com/Nekotekina/bac7c2da61bb950933530a726d934b0b\nhttps://gist.github.com/Nekotekina/b297976d176e3357efc140dec79c3865 (successful)\n. Maybe it's a problem on my side (if not Win7-specific), I see COMODO reads all executables on startup even if disabled, I'll try to test on VM.\n. Unfortunately, the same results on win7 x64 VM.\nAnother observation: if I mount a removable drive without admin rights, it works. But it's extremely slow for some reason, it takes about 10 sec of CPU time before the files are available.\n. ",
    "chaos88-ksh": "May I ask when this issue will be fixed?\n. Thanks for your quick respose. If I prepare a windows 7 VMWare Image that you can access using mstsc or yoy can download, is it helpful to you? \n. Okay, I will prepare it as soon as possible. And then I will announce it's url to you in this issue thread. Thank you.\n. @Liryna If you can repro successfully, please let me know.. ",
    "zina-": "Sorry for late @Liryna \nYou can download BSOD vm image(Hyper-v, Windows 7 x86) file here http://portal.miksystem.com:8080/hyper-v-download.html \nThis image contains\n- dokan(installed, Release 1.0.1.1000)\n- ProcessMonitor(v3.31)\n- executable mirror batch file(/n option)\nThank you :). @Liryna crash report(minidump) here, thank you :)\nminidumps.zip. @Liryna I tried to reproduce the problem by reinstall dokany 1.0.1.1025 but it does not appear.. I'll keeping trying and let you know when it's reproduced, sorry.. ",
    "RustyHacksaw": "Hi Liryna,\nYes, I use a command prompt that I started with Run As Administrator.\n.r.\n\nFrom: Liryna notifications@github.com\nSent: November 23, 2016 5:14 AM\nTo: dokan-dev/dokany\nCc: RustyHacksaw; Mention\nSubject: Re: [dokan-dev/dokany] Session mounted drives don't show the volume label (#401)\nHi @RustyHacksawhttps://github.com/RustyHacksaw ,\nDo you start the mirror with admin rights ?\n\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHubhttps://github.com/dokan-dev/dokany/issues/401#issuecomment-262436160, or mute the threadhttps://github.com/notifications/unsubscribe-auth/AWkZ2HDFpMqkwV1hc3U6qg4RphWmOORsks5rA8vTgaJpZM4K59Ac.\n. Ah, interesting, yes, I see that now.  I guess I was confused by the warning text that said to \"restart mirror sample with administrator rights\" and didn't bother to check explorer first =)  Thanks for clarifying.. Ah, yeah, now that you mention the icon thing, I did notice a weird behaviour with that too.  I had copied some files that were SVN managed with the .svn directory and when the SVN icon overlays were loaded it cause all icon loading in explorer to break and eventually explorer locked up too. . I have tested the latest changes and they seem a lot more stable, I haven't experienced any deadlocks or bluescreens with the same testing I did before, seems like it's fixed!. Hi all, this bug has new behaviour ... using the mirror app, if I mount a drive and then sleep/wake the computer, about 50% of the time, dokany will exit with an error ... debug output from the mirror app shows  \nIoctl failed for wait with code 995.\nIoctl failed for wait with code 995.\nIoctl failed for wait with code 995.\nIoctl failed for wait with code 995.\nIoctl failed for wait with code 995.\nThread will be terminated.\nThread will be terminated.\nThread will be terminated.\nThread will be terminated.\nThread will be terminated.\nDokan Error: DokanKeepAlive CreateFile failed \\.\\Volume{ < GUID > }: 2\nUnmounted\nunload\nSuccess\n. Yup, working on it ... windows 10 with secure boot on is a huge PITA.. Finally got a log ... \ndrivercrash.LOG\nSecureBoot is disabled and this was on Windows 10 build 16299.248 using the 1.1.0.2000 dokany debug build, using mirror app\nat around line 32219 it logs that it seems to be awaken from sleep mode and that's where stuff seems to go wrong and it does an unmount on it's own.. Hi all, I'm trying to understand this bug ... the DokanTimeoutThread has a time check with a pretty arbitrary value of ( DOKAN_CHECK_INTERVAL + 2000 ) * 10000  - which is 70 seconds I think and if the current time and last time are greater than that, it thinks that it has woken up from a sleep event.  Anything less than that and it assumes it's a regular event, does the ReleaseTimeoutPendingIrp and then DokenCheckKeepAlive which unmounts the mounted drive.  I'm not a driver expert, but it seems like there should be a way to catch/use the IRP_MJ_POWER notification when the system goes to sleep or wakes up, but I'm not sure how to integrate it into the timeout thread code.  If the IRP_MJ_POWER is added to the main dokan dispatch routine, can we set a flag in the DCB that can be read by the DokanTimeoutThread function to have it continue to wait instead of unmounting??  Does that make sense?  Or another method might be to use KeQuerySystemTime and KeQueryUnbiasedInterruptTime to see if there is a difference?  The unbiased version is the raw time, while the normal version adds a 'bias' amount to compensate for being asleep.  Would that possibly be accurate enough?  . Okay, I'll give that a try in my test env and see how it goes, thanks!. Hmm, nope, it still happens.  . Okay, so the new log shows it's not even hitting that \"awaken from sleep...\" section of code, hence why it's not resetting the TickCount...  I'll dump the tickcounts now.. Okay, I think it's fixed, I added the  DokanUpdateTimeout function inside that else statement so that it executes for both cases and when I test it, I can no longer reproduce the unmount.\nhttps://github.com/dokan-dev/dokany/blob/83be68351c70d916e58bdae8e3424e521fe07b04/sys/timeout.c#L285-L300\nYeah, I have no idea how to create the right markdown to get those lines of code to show up, but you get the idea ;-)\nthe DokanUpdateTimeout call is inserted between lines 299 and 300.  I will create a pull request soon.\n. Hmmm, okay, I'll test that too.. Dang, yup, it never unmounts.  Sigh, so I'll move it to just inside the 'awake...' comment and see if that still works ... pretty sure that's where I had it the first time and it didn't work ... How does the User Mode signal the driver to keep the tick count updating?. Yeah, the time check in the timeout.c isn't getting hit every time, only some of the time, so resetting the timeout in only that spot doesn't work, we need a more reliable way to detect if a sleep/wake action has occurred.  Seems unique to the most recent builds of Windows 16299 as well, so microsoft has clearly made more dumb changes that is breaking this.. Ah, found it, the recent addition of the SessionId information to the driver _DOKAN_CONTROL structure wasn't matched in the dokan1.dll's version of that same structure, it was missing the ULONG, hence shifting the second and subsequent structures off by 4 bytes ... I'll submit a pull request for this asap.. Hi Liryna,\nAh, okay, that's cool, I wasn't sure if there was a place for the structure.  That makes much more sense to have it in one place. =)\n.r.\n\nFrom: Liryna notifications@github.com\nSent: January 27, 2018 12:37 PM\nTo: dokan-dev/dokany\nCc: RustyHacksaw; Mention\nSubject: Re: [dokan-dev/dokany] 2nd UNC mount shows as \"Disconnected Network Drive\" (#653)\nHi @RustyHacksawhttps://nam03.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Frustyhacksaw&data=02%7C01%7C%7Cb726fa5770c44009bfa808d56582c163%7C84df9e7fe9f640afb435aaaaaaaaaaaa%7C1%7C0%7C636526534618030765&sdata=Mixz0btiv6EOtVvi%2FEYzc6Y3nlvh1TWdH6yrrq%2FPXKw%3D&reserved=0 ,\nThank you for your report \ud83d\udc4d\nAnd specially thanks for finding the reason of it !\nYour fix is correct but I remade it by moving the struct in the sys/public.h. This header is made to share struct and avoid such issue between library and kernel.\n230496ehttps://nam03.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fdokan-dev%2Fdokany%2Fcommit%2F230496e9606c2eae8b18e7566add2997a906c834&data=02%7C01%7C%7Cb726fa5770c44009bfa808d56582c163%7C84df9e7fe9f640afb435aaaaaaaaaaaa%7C1%7C0%7C636526534618030765&sdata=DloNIoDxyTxgMst%2FCaRADXJnJePRLMzZeeC9ulVsX4I%3D&reserved=0\n(You are the author of the commit, hope that's alright for you)\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHubhttps://nam03.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fdokan-dev%2Fdokany%2Fissues%2F653%23issuecomment-360982149&data=02%7C01%7C%7Cb726fa5770c44009bfa808d56582c163%7C84df9e7fe9f640afb435aaaaaaaaaaaa%7C1%7C0%7C636526534618030765&sdata=J62rXz5KiL3T0lKwIjfd5pcIFSexXeMTuHohmZFnslk%3D&reserved=0, or mute the threadhttps://nam03.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FAWkZ2BAEsVVme7NVt_wOHNfa31EaDlHyks5tOxiUgaJpZM4Rp1Z0&data=02%7C01%7C%7Cb726fa5770c44009bfa808d56582c163%7C84df9e7fe9f640afb435aaaaaaaaaaaa%7C1%7C0%7C636526534618030765&sdata=%2BDmHij%2FN0mfYA9JtPsSQGScm7Co4S9EksKKruwEusMI%3D&reserved=0.\n. ",
    "ed-miller": "I agree. Same behavior tested. It seems to be a problem with locking. Especially when copy exe files to mirrored drive. Explorer access exe files to read for icons and hang. ApiMonitor shows up to 5 threads go inside to NtCreateFile & NtOpenFile -> dokan1.sys and never reach MirrorCreateFile.. I have created a debug of the moment when dokan1.sys stops working:\n\n. Hi Liryna,\nI tested new commit and it seems to solve this issue. (The delay in folder listing was caused by a shell extension.). I will do more stress tests and will tell you.. The deadlock problem seems to be solved, but unfortunately the kernel is not stable. Under multithreaded stress tests I got BSOD twice.. Its hard to say whether this BSOD comes from latest changes. With the older versions I had never a BSOD before. \n. As soon as i have time, i will try to get BSOD dump \n. ",
    "freeplant": "@Liryna We have encountered this problem in Seafile drive client too. Do you have any estimation on when the next release will be available?. Thank you!. @Liryna We have exactly the same issue (https://github.com/haiwen/seadrive-gui/issues/37). It would be nice if a fixed version available in this month.. The fix is working. Thanks.. ",
    "qnorsten": "Hi @Liryna \nI am the one who initially posted the issue over at encfs4win (but not the issue at rclone). \nHere is a log when running the fuse_mirror sample.  with mirror.exe -d X: followed by trying to copy the content of X: to the cloud with rcloud (go application that try to read the file) \nLog file: http://pastebin.com/5e5DgKhG\nHopefully this is a bit shorter then before everything until Close 0016 or Close 0017 was before the go application tried to read the files. \n. @Liryna  yes I get the error described above \nLocal file system at \\?\\X:: Failed to open directory: \\?\\X:: Readdir \\?\\X:: The system cannot find the path specified. \nNo files could be read or copied at all, with go. If I try and copy one specific file like X:/Cygwin.bat it works, but not if I try and copy a dir or the root of the mounted drive. \nI have never programmed anything in Go, but I might be able to try and write something up tomorrow, if no one else is willing to install go and try and write a basic hello world load dir application. \nI also found this test program (https://gist.github.com/klauspost/5f87caf402a8abf369d5#file-test-go-L42) from https://github.com/ncw/rclone/issues/261#issuecomment-169312574 that might be useful as it is or modified. \nUpdate: The output of the above test program \ngo run c:\\go\\bin\\testIO.go X:\nCurrent dir: \"X:\"\nMain dir Stat:\nName \".\"\nSize 0\nIsDir true\nMode.IsDir true\nMode.IsRegular false\nMode.String drwxrwxrwx\nMode.Perm: -rwxrwxrwx\n2016/11/29 23:02:55 ioutil.ReadDirReaddir X:: Det g\u00e5r inte att hitta s\u00f6kv\u00e4gen. \nexit status 1\n\"Det g\u00e5r inte att hitta s\u00f6kv\u00e4gen.\"  is Swedish for roughly \"The Path can not be found\"\nHere is the dokan log:\n```\nmirror X: -d\nDokan: debug mode on\nDokan: use stderr\nAllocationUnitSize: 512 SectorSize: 512\ndevice opened\nQueryVolumeInfo -001\nGetVolumeInformation\nCreate 0000\nCreateFile: \\\n        DesiredAccess: SYNCHRONIZE\n        ShareAccess: 0x0\n        Disposition: FILE_OPEN (1)\n        Attributes: 0 (0x0)\n        Options: 33 (0x21)\nCreateFile status = 0\nGetFileInfo 0000\nGetFileInfo: : \\\n        result =  0\n  unknown type:54\n        DispatchQueryInformation result =  c000000d\nGetFileInfo 0000\nGetFileInfo: : \\\n        result =  0\n        FileStandardInformation\n        DispatchQueryInformation result =  0\nQueryVolumeInfo 0000\nGetVolumeInformation\nQueryVolumeInfo 0000\nGetVolumeInformation\nCleanup 0000\nCleanup: \\\nClose 0000\nClose: \\\nmounted: X: -> \\Volume{d6cc17c5-1714-4085-bce7-964f1e9f5de9}\nMounted\nCreate 0001\nCreateFile: \\\n        DesiredAccess: SYNCHRONIZE\n        ShareAccess: FILE_SHARE_WRITE|FILE_SHARE_READ\n        Disposition: FILE_OPEN (1)\n        Attributes: 0 (0x0)\n        Options: 33 (0x21)\nCreateFile status = 0\nGetFileInfo 0001\nGetFileInfo: : \\\n        result =  0\n        FileStandardInformation\n        DispatchQueryInformation result =  0\nCleanup 0001\nCleanup: \\\nClose 0001\nClose: ###Create 0002\n\\CreateFile:\n\\\n        DesiredAccess: FILE_GENERIC_READ\n        ShareAccess: FILE_SHARE_WRITE|FILE_SHARE_READ\n        Disposition: FILE_OPEN (1)\n        Attributes: 128 (0x80)\n        Options: 96 (0x60)\nCreateFile status = 0\nGetFileInfo 0002\nGetFileInfo: : \\\n        result =  0\n        FileStandardInformation\n        DispatchQueryInformation result =  0\nQueryVolumeInfo 0002\nGetVolumeInformation\nGetFileInfo 0002\nGetFileInfo: : \\\n        result =  0\n        FileAllInformation\n        DispatchQueryInformation result =  80000005\nCreate 0003\nCreateFile: \\\n        DesiredAccess: SYNCHRONIZE\n        ShareAccess: FILE_SHARE_WRITE|FILE_SHARE_READ\n        Disposition: FILE_OPEN (1)\n        Attributes: 0 (0x0)\n        Options: 33 (0x21)\nCreateFile status = 0\nCleanup 0003\nCleanup: \\\nClose 0003\nClose: ###Create 0004\n\\CreateFile:\n\\\n        DesiredAccess: FILE_GENERIC_READ\n        ShareAccess: FILE_SHARE_WRITE|FILE_SHARE_READ\n        Disposition: FILE_OPEN (1)\n        Attributes: 128 (0x80)\n        Options: 96 (0x60)\nCreateFile status = 0\nCleanup 0004\nCleanup: \\\nClose 0004\nClose: \\\nCleanup 0002\nCleanup: \\\nClose 0002\nClose: \\\n```\nIf I ran the above test program on a folder c:\\test that contains a file test.txt and a folder named test folder I get the following output:\n```\n$ go run c:\\go\\bin\\testIO.go C:\\test\nCurrent dir: \"C:\\test\"\nMain dir Stat:\nName \"test\"\nSize 0\nIsDir true\nMode.IsDir true\nMode.IsRegular false\nMode.String drwxrwxrwx\nMode.Perm: -rwxrwxrwx\nReaddir results:\nName \"test.txt\"\nSize 0\nIsDir false\nMode.IsDir false\nMode.IsRegular true\nMode.String -rw-rw-rw-\nMode.Perm: -rw-rw-rw-\n\nName \"testfolder\"\nSize 0\nIsDir true\nMode.IsDir true\nMode.IsRegular false\nMode.String drwxrwxrwx\nMode.Perm: -rwxrwxrwx\nSuccess\n```\n. @jetwhiz  still get the same error message and the Dokan log looks the same to me\nUpdate: Seems like the part that gives an error is not \ngo\nf, err := os.Open(dir)\nbut instead \ngo\ninfo, err := ioutil.ReadDir(dir) \nhttps://github.com/golang/go/blob/master/src/io/ioutil/ioutil.go#L93. @Rondom perhaps you can use the test program mentioned earlier from https://github.com/ncw/rclone/issues/261#issuecomment-169312574 https://github.com/ncw/rclone/files/79771/test.zip it comes as an exe. That is strange @Liryna. Did you try it with the dokany fuse mirror sample? Cause it did not work for me last I tried. . Yes it only a problem with fuse both the fuse sample and encfs4win at least. Just tried the lastest snapshot from appveyor CI. Now everything works perfectly. Thanks for the fix Liryna :) . ",
    "alexbrainman": "I have created small Go program https://play.golang.org/p/DrtghDt-48 to demonstrate what Go does to open directory and file. You would have to create c:\\dir directory and c:\\dir\\file.txt file before running the program.\nRunning it on my computer, the program prints:\nc:\\dir: Access is denied.\nc:\\dir\\file.txt: <nil>\nSo calling Windows CreateFile for my directory returns ERROR_ACCESS_DENIED. I think this is expected. According to https://msdn.microsoft.com/en-us/library/windows/desktop/aa363858(v=vs.85).aspx \"You must set this flag to obtain a handle to a directory.\" (FILE_FLAG_BACKUP_SEMANTICS). And Go does not pass FILE_FLAG_BACKUP_SEMANTICS to Windows CreateFile.\nI hope my Go program is simple enough, so you can translate it into C or whatever. Alternatively, you can download Go and build it yourselves. It is quite easy.\nLet me know if I can help in any way.\nAlex. ",
    "pliard-chromium": "Hi Liryna,\nThe issue happens whenever the image is saved not under the root, i.e. saving it under 'N:\\' works but saving it under a folder, e.g. 'N:\\folder\\' doesn't work.\nThanks,\nPhilippe.. Ah, I will try that, thanks!. Hi @Liryna,\nThanks. Yes, this patch does fix the issue I was describing. We applied this patch to our local branch yesterday and haven't been able to make Explorer unresponsive again since then.. I'm starting to see a little bit clearer. I think the core issue is that the DOKAN_OPEN_INFO pointer has been free'd while having not been reset to NULL in the EventContext.\nI'm having a few issues actually understanding the lifetime of the DOKAN_OPEN_INFO pointer. It looks like this pointer is reference-counted with the OpenCount. There are a few things however that I don't very clearly understand:\n- The OpenCount is set to 2 instead of 1 in DispatchCreate(). This looks like DispatchCreate() is adding an extra reference that another piece of code would be implicitly relying on? I noticed that SendEventInformation() calls ReleaseDokanOpenInfo(). Is the extra increment in DispatchCreate() done to undo the decrement in SendEventInformation()?\n- SendEventInformation() seems to call ReleaseDokanOpenInfo(). This means that it's only safe to call SendEventInformation() after having called DispatchCommon() which calls GetDokanOpenInfo() which in turns increments the OpenCount. However it looks like DispatchQueryVolume() calls SendEventInformation() without calling DispatchCommon(). Is it a problem?\n- The OpenCount is decremented in 2 places: ReleaseDokanOpenInfo() and DispatchClose(). However only ReleaseDokanInfo() actually frees the pointer. Why is DispatchClose() doing an extra OpenCount decrement?. Thanks @Liryna,\nThis makes more sense to me now thanks to your explanation. I can only reproduce this unfortunately while using my internal network filesystem on top of Dokany with Explorer while being offline.\nI suspect the issue might have to do with the fact that the DOKAN_OPEN_INFO pointer cached in the EventContext instances (one per Dokany worker thread AFAICT) can get stale after ReleaseDokanOpenInfo() dropped the open count to 0 and free'd that pointer. Other Dokany worker threads might still dereference their own copy of the pointer by calling GetDokanOpenInfo() after it was already free'd.\nIf this is indeed the problem I think we could add an extra layer of indirection here, i.e. an ID generated from a monotonically increasing counter could be stored in the EventContext as opposed to the raw OpenInfo pointer. Then GetDokanOpenInfo() could look up that ID in an open info table owned by the DokanInstance instead of directly dereferencing the pointer which can be free'd.\nI will keep digging and will keep you posted.. The problem that I described in my last message appears to be what's causing the crash and adding the indirection that I described in particular fixes it. I will work on a pull request.. GetDokanOpenInfo() does a thread-safe OpenCount increment so my understanding is that once a worker thread looked up a DOKAN_OPEN_INFO pointer by ID in the open info table, the pointer is guaranteed to remain valid until DokanReleaseOpenInfo() is called.\nAre there still cases in the codebase where DOKAN_OPEN_INFO pointers are dereferenced without a prior OpenCount increment? If that's the case I missed that.\nDOKAN_OPEN_INFO pointers are also now only free'd via DokanReleaseOpenInfo() which happens within the DokanInstance critical section like GetDokanOpenInfo() and FindOpenInfoEntry() do.\nIt's very possible that I'm missing something though. Would you mind elaborating if you still think there is a problem?\n. I have very limited experience with this codebase but it looks to me that this OpenCount is present in userspace mostly to allow Dokan in userspace to dispatch the requests to multiple worker threads instead of e.g. asynchronously dispatching the requests to a single thread which pull request #210 implements I believe. I agree with you, this feels a little wrong.\nThese worker threads pulling events from the driver in particular can get scheduled in arbitrary order by the kernel so my understanding is that events sent by the driver to userspace may be dispatched in userspace out-of-order.\nThe fact that events are dispatched out-of-order can cause issues if multiple events are simultaneously dispatched while having dependencies between each other, e.g. DispatchQueryInformation() and DispatchClose(). There doesn't seem to be the guarantee in the current state that the driver will send the close event only once all the events affecting the same handle completed. Or is there actually such guarantee? If that's already the case then I agree with you the OpenCount shouldn't be necessary at all in userspace and there would potentially be a bug in the driver if this is not always happening. \nThis pull request basically turns a crash due to a use-after-free into an error which is not ideal either and I wholeheartedly agreed with you here, there is likely a bigger design issue that needs to be fixed.\nThe very large pull request #210 should at least sanitize the ordering in userspace. The question of whether the driver is currently ensuring that close is sent only on completion of all other events for the same handle remains though.. FYI I will try to find out whether we receive DispatchClose() while there are still outstanding requests for the same file handle. According to the IRP_MJ_CLOSE documentation it shouldn't be the case.. I'm glad you gave me some push back. I found out what's really going on here and the good news is that it should be a very small and simple fix. I will update my patch. I should have caught this earlier but the issue is basically due to the end of DispatchCreate() which frees the DOKAN_OPEN_INFO pointer in case of error after having sent it as non-null to the driver. This leads to the driver providing us again with the stale context pointer. The kernel seems to do so only for certain error codes. I'm seeing this in particular when my file system returns STATUS_TIMEOUT. Other error statuses seem to be fine.\nI will see later in a follow-up pull request if I can also remove the OpenCount ref-counting. This should simplify things quite a bit.. JFYI, this should be ready again for review.. Also FYI: I changed my file system so that it returns STATUS_IO_TIMEOUT instead of STATUS_TIMEOUT during DispatchCreate() and the use-after-free also disappears that way. It seems that the kernel has some very particular handling for the STATUS_TIMEOUT error leading it not to fully discard the handle.. @marinkobabic Done, thanks!. @Liryna @marinkobabic Thanks. I will send you a pull request using NT_SUCCESS() for that particular check. There might be other places in the codebase where it should be used as well in the future.. I don't immediately see why codacy/pr is failing. ReleaseDokanOpenInfo() is still used in close.c as far as I can tell.. @Liryna sounds good, thanks.. @Liryna @marinkobabic FYI, I think this change might actually be unsafe to do in the current state. I have this change applied to my fork of Dokany and I'm seeing a use-after-free.\nI think that issue 436 had multiple causes. Pull request 438 fixed the use-after-free in case an informational status was returned to Dokan. However I think it's still possible to trigger a use-after-free there. I'm seeing in particular that DispatchClose() gets called while there is still a DispatchDirectoryInformation() in flight.\nI can only trigger this while using my Dokany-based file system with a high latency 3G network which makes me think that a timeout/IRP cancellation might be involved.\nThe Microsoft documentation for IRP_MJ_CLOSE says in particular that the close gets sent once \"All outstanding I/O requests have been completed or canceled\". I'm wondering in particular whether IRP cancellation happens synchronously or asynchronously?. @Liryna That's my suspicion, yes. I think we should either fix the Dokan driver so that the close doesn't get sent while there are still pending cancelled operations, if that's possible at all, or keep the DOKAN_OPEN_INFO ref-count since it's already there.\nAlso note that the Dokan client's close callback is currently invoked in DispatchClose() as opposed to when the open info count drops to 0. This means that the client has to implement its own ref-counting for the opaque user context pointer stored in the DOKAN_FILE_INFO. Without changing this I also get a use-after-free in my client code in case of timeout. I will send you a separate pull request addressing that.\nShould we delete this pull request?\n. @marinkobabic I will try to reproduce this with the Dokan mirror by adding a sleep() in the DispatchDirectoryInformation callback. As I said above the issue happens when an operation times out.. @marinkobabic @Liryna  I can successfully reproduce the use-after-free with the patch in this pull request (removing the DOKAN_OPEN_INFO ref-counting) and adding 'if (++g_counter % 10 == 0) { Sleep(30); }' at the very beginning of MirrorFindFiles().\nI'm running the Dokan mirror with /r and /l and that's the stack trace that I get below after using Explorer for a few minutes:\n\ndokan.dll!InsertTailList(_LIST_ENTRY * ListHead, _LIST_ENTRY * Entry) Line 91   C\n    dokan.dll!DokanFillFileDataEx(_WIN32_FIND_DATAW * FindData, _DOKAN_FILE_INFO * FileInfo, unsigned char InsertTail) Line 303 C\n    dokan.dll!DokanFillFileData(_WIN32_FIND_DATAW * FindData, _DOKAN_FILE_INFO * FileInfo) Line 312 C\n    mirror.exe!MirrorFindFiles(const wchar_t * FileName, int()(_WIN32_FIND_DATAW , _DOKAN_FILE_INFO ) FillFindData, _DOKAN_FILE_INFO * DokanFileInfo) Line 743   C\n    dokan.dll!DispatchDirectoryInformation(void * Handle, _EVENT_CONTEXT * EventContext, _DOKAN_INSTANCE * DokanInstance) Line 554  C\n    dokan.dll!DokanLoop(_DOKAN_INSTANCE * DokanInstance) Line 435   C\n    dokan.dll!invoke_thread_procedure(unsigned int()(void *) procedure, void * const context) Line 92  C++\n    dokan.dll!thread_start(void * const parameter) Line 115    C++\n\n. @marinkobabic Thanks. Your explanation matches my current understanding. We seem to agree that the current DOKAN_OPEN_INFO ref-count is necessary, in the current state of things at least.\nThis brings me back to the note I made in an earlier comment: \"Also note that the Dokan client's close callback is currently invoked in DispatchClose() as opposed to when the open info count drops to 0. This means that the client has to implement its own ref-counting for the opaque user context pointer stored in the DOKAN_FILE_INFO. Without changing this I also get a use-after-free in my client code in case of timeout. I will send you a separate pull request addressing that.\"\nI have a patch ready to fix that problem by calling the client's close operation from ReleaseDokanOpenInfo() when the open info count drops to 0. Does that make sense to you? I can send a separate pull request for that and we can continue the discussion there.. @Liryna Any chance you could elaborate on the sharing violation issue? The change I had in mind was only deferring the invocation of the client's close callback until the open info count drops to 0. AFAICT this shouldn't affect Dokan itself given that it doesn't use the return value of that callback. Or am I missing something?. @Liryna Thanks for the explanation, that makes sense to me. The sharing violation would be triggered by the logic that the Dokan client has to implement, e.g. in Dokan mirror, is that correct? We don't currently implement such logic in our Dokan-based file system although we definitely should.\nWould the issue still persist if the sharing violation detection logic was implemented in the driver instead? Would that make sense at all?. Thanks for taking a look @Liryna. I haven't got a chance to look into this yet. Will let you know when it's ready.. Thanks @Liryna! Sorry I didn't get a chance to address your earlier comment.. @Liryna, my patch is also removing this line in particular which I'm not sure is a good idea. Do you know why the per-thread EventContext pointer is stored in DOKAN_OPEN_INFO while it is shared by multiple threads? This looks strange to me but the code might have been relying on this. I will see if this EventContext pointer can be moved out of the DOKAN_OPEN_INFO struct.. FYI, I just updated my patch so that the per thread EventContext pointer is no longer stored in the shared DOKAN_OPEN_INFO struct. Instead it's now stored in the DOKAN_FILE_INFO struct which is per thread if I understand correctly.. @Liryna FYI, I have been doing more digging regarding this STATUS_TIMEOUT vs STATUS_IO_TIMEOUT issue, regarding the fact in particular that the Context pointer gets sent back to user space with STATUS_TIMEOUT but doesn't with STATUS_IO_TIMEOUT.\nI believe there is a discrepancy between the status check here and the one in the driver in DokanCompleteCreate(). The driver uses the NT_SUCCESS() macro which says \"Evaluates to TRUE if the return value specified by Status is a success type (0 \u2212 0x3FFFFFFF) or an informational type (0x40000000 \u2212 0x7FFFFFFF)\". STATUS_TIMEOUT happens to be in that range while STATUS_IO_TIMEOUT is an actual error.\nI think we should probably make this check use NT_SUCCESS() instead. I'm worried that there might be other discrepancies in the codebase. What do you think?. ",
    "emailuser2009": "Hi @Liryna @marinkobabic \nDo you require any further information to reproduce / diagnose the issue ?\n. @Liryna So the fix required would be something along the lines of..\nif( pInfoEoF->EndOfFile.QuadPart < fcb->AdvancedFCBHeader.FileSize.QuadPart )\n{\n    if (!MmCanFileBeTruncated(fileObject->SectionObjectPointer, &pInfoEoF->EndOfFile)) {\n      status = STATUS_USER_MAPPED_FILE;\n      __leave;\n    }       \n}\nIs that correct ?. ",
    "sefai": "Hello @Liryna \nThis issue causes Visual Studio to fail creating *.ipdb files. I have tried to add what @emailuser2009 suggested and setting fcb->AdvancedFCBHeader.FileSize:\n```\nelse if (irpSp->Parameters.QueryFile.FileInformationClass == FileStandardInformation) {\nPFILE_STANDARD_INFORMATION standardInfo = (PFILE_STANDARD_INFORMATION)buffer;\n\nFSRTL_ADVANCED_FCB_HEADER* header = IrpEntry->FileObject->FsContext;\n\nASSERT(header != NULL);\n\nheader->AllocationSize.QuadPart = standardInfo->AllocationSize.QuadPart;\nheader->FileSize.QuadPart = standardInfo->EndOfFile.QuadPart;\n\nDDbgPrint(\"  AllocationSize: %llu, EndOfFile: %llu, FCB.AllocationSize: %llu, FCB.EndOfFile: %llu\\n\", standardInfo->AllocationSize.QuadPart, standardInfo->EndOfFile.QuadPart, header->AllocationSize.QuadPart, header->FileSize.QuadPart);\n\n}\n```\nBut this causes mirror to become unresponsive and needs a hard reset. Can you help me?. @Liryna I tried various things, but unfortunately couldn't succeed. Looking at other references of FsContext and FsContext2 I thought that we can access the header as follows:\nfcb = ccb->Fcb;\nASSERT(fcb != NULL);\nI tried various things but deadlock was unavoidable. I first tried to lock the FCB:\n```\nDokanFCBLockRW(fcb);\n...\nfcb->AdvancedFCBHeader.AllocationSize.QuadPart = allocationSize;\nfcb->AdvancedFCBHeader.FileSize.QuadPart = fileSize;\nDokanFCBUnlock(fcb);\n```\nLocking seems to work for just a few seconds, but as far as I click on a file in the mirrored drive, DokanFCBLockRW(fcb) call never returns.\nZZZ LockRW DokanCompleteQueryInformation  FFFFE0013953BE0\nThen I thought maybe I needed to lock on ccb;\nKeEnterCriticalRegion();\nExAcquireResourceExclusiveLite(&ccb->Resource, TRUE);\n....\nExReleaseResourceLite(&ccb->Resource);\nKeLeaveCriticalRegion();\nIt was just the same as FCB, ExAcquireResourceExclusiveLite(&ccb->Resource, TRUE) call never returns when I click on a file in the mirrored drive. Then I instructed not to wait on ExAcquireResourceExclusiveLite call;\nKeEnterCriticalRegion();\nBOOL acquiredLock = ExAcquireResourceExclusiveLite(&ccb->Resource, FALSE);\nif (acquiredLock) {\n  ....\n  ExReleaseResourceLite(&ccb->Resource);\n  KeLeaveCriticalRegion();\n}\nThis was not dead on file click. In fact, I could open a solution in VS from the mirror, start building, but deadlock occured on lib(output) generation after succesfully compiling various source files.\nNot all locks are printed in debug log, so I manually checked FCB and CCB locking, but couldn't find a hint why this would happen. \nMaybe this trace will ring a bell?. @Liryna From kernel logs, I can see that first lock attempt on FCB in DokanCompleteSetInformation is causing the deadlock.\n00004503    3.30350375  [DokanFS] ==> DokanCompleteSetInformation   \n00004504    3.30350828  [DokanFS] ZZZ LockRW DokanCompleteSetInformation FFFFE000A3355A80\nThere is a comment in DokanFCB structure, can this be related?\n// Locking: FIXME\nFSRTL_ADVANCED_FCB_HEADER AdvancedFCBHeader;\n. Hi @Liryna,\nI am uploading the kernel logs, maybe it does help for anyone to recognize the error.\nvm_kernel.txt\n. Hello @Liryna,\nIn DokanCompleteSetInformation, DokanFCBLockRW(fcb) is trying to acquire the FCB lock and if can't get it wait on it. I changed it like this:\nDDbgPrint(\"ZZZ LockRWNoWait %s %p\\n\", __FUNCTION__, fcb); \nKeEnterCriticalRegion(); \nfcbLocked = ExAcquireResourceExclusiveLite(fcb->AdvancedFCBHeader.Resource, FALSE);\nKeLeaveCriticalRegion();\nI did this, because in fastfat code I have seen a comment \"Note that we do not acquire the resource for paging file operations in order to avoid deadlock with Mm.\" in FatCommonSetInformation. If you look at the kernel logs which I sent before, the deadlock occurs because FsRtlSetFileSize and DokanCompleteSetInformation is racing for the lock.\nNow, with this change it seems to be working. All the winfstests and fsx tests pass, also compiling a Visual Studio solution using incremental linking succeeds.\nDo you think this change can have any side effects?\nRegards,. Yes @Liryna,\nI tried to do that, but this flag is never set in Dokan. There is also a debug print for that https://github.com/dokan-dev/dokany/blob/master/sys/create.c#L561, but never seen it in the kernel logs. Maybe this is the hidden cause of the problem?\nif (irpSp->Flags & SL_OPEN_PAGING_FILE) {\n    DDbgPrint(\"  IrpSp->Flags SL_OPEN_PAGING_FILE\\n\");\n}. Hello @Liryna, IRP_PAGING_IO is set for this call. Should I use it to check if we can lock the FCB or not?\nRegards,. I checked the winfstest suite logs against the IRP_PAGING_IO flag, and it was never set. So I think we can safely say it will be set for only Memory Mapped file IO.\nBy the way I can see a lot of cache related code in fastfat, but none in Dokan. Does this mean Dokan does not support caching?. Dear Liryna, I can do it next week.\niPhone'umdan g\u00f6nderildi\nLiryna notifications@github.com \u015funlar\u0131 yazd\u0131 (4 Haz 2017 22:53):\n\nHi @sefai ,\nDo you plan to make a PR with the fix you made ?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n. Hello there, I had a similar problem. I am not sure if it's the same use after free issue you are talking about here. Let me describe:\n\nIn the mirror sample, a file HANDLE is stored in DokanFileInfo->Context. In MirrorCleanup callback file is closed using CloseHandle with DokanFileInfo->Context(file HANDLE) and DokanFileInfo->Context is set to 0. In MirrorCloseFile callback DokanFileInfo->Context is being checked and if it is not 0, CloseHandle is called again. CloseHandle only throws an exception in Debug mode if an invalid file handle is passed, but does ignore it in Release mode, so there appears no problem with the mirror sample when this handle is closed in MirrorCleanup but due to use after free problem used again in MirrorCloseFile. \nBut in my user mode application I am storing a heap allocated pointer to a custom struct in DokanFileInfo->Context. This is freed in Cleanup callback but somehow this pointer appears again in CloseFile callback and it was giving me a dangling pointer issue. So, I implemented my own control mechanism in my application to overcome this dangling pointer issue. \nI would be happy if this is resolved in driver, because I had to implement a three-tier lookup table and a locking mechanism. In each operation I am validating the context against the lookup table, lock the entry, and release the entry after the operation is done. This is introducing a lot of code complexity and some delay because of locks.. Yes @Liryna , I set it to null. As I said this is not specific to my struct and I am creating a new struct for each CreateFile callback. \nSame thing happens in mirror. But CloseHandle absorbs the error in Release mode and in Debug mode you can continue execution by ignoring the exception. I almost always get an exception in Debug mode while building a heavy project in mirror drive.. I think I am having a similar issue caused by this behaviour. I am building ProcessHacker2 solution from a network mounted mirror drive. (It has 20 project configurations in it, so I am using it for heavy tests on the mirror drive.)\nFor some of the configurations, VS 2015 is unable to copy the pdb file generated in the obj directory to the target Debug or Release directory. It tries this 10 times and after that it fails...A sample log is below:\n\n00000000000000199318  CreateFile(12408) : \\192.168.4.12\\shared\\processhacker2-2.39\\phlib\\bin\\Debug64\\phlib.pdb     AccountName: john.doe, DomainName: UNKNOWN        ShareMode = 0x0     DesiredAccess = 0x17019f        DELETE      FILE_READ_DATA      FILE_READ_ATTRIBUTES        FILE_READ_EA        READ_CONTROL        FILE_WRITE_DATA     FILE_WRITE_ATTRIBUTES       FILE_WRITE_EA       FILE_APPEND_DATA        WRITE_DAC       SYNCHRONIZE     STANDARD_RIGHTS_READ        STANDARD_RIGHTS_WRITE       STANDARD_RIGHTS_EXECUTE     FlagsAndAttributes = 0x8000020      FILE_ATTRIBUTE_ARCHIVE      FILE_FLAG_SEQUENTIAL_SCAN       CREATE_ALWAYS    CreateFile[0000000000000030] succeded\n00000000000000199319  GetFileInfo(12408)[0000000000000030] : \\192.168.4.12\\shared\\processhacker2-2.39\\phlib\\bin\\Debug64\\phlib.pdb        GetFileInformationByHandle success, file size = 0\n00000000000000199320  GetFileInfo(12408)[0000000000000030] : \\192.168.4.12\\shared\\processhacker2-2.39\\phlib\\bin\\Debug64\\phlib.pdb        GetFileInformationByHandle success, file size = 0\n00000000000000199321  GetFileInfo(12408)[0000000000000030] : \\192.168.4.12\\shared\\processhacker2-2.39\\phlib\\bin\\Debug64\\phlib.pdb        GetFileInformationByHandle success, file size = 0\n00000000000000199322  GetFileInfo(12408)[0000000000000038] : \\192.168.4.12\\shared\\processhacker2-2.39\\phlib\\obj\\Debug64\\phlib.pdb        GetFileInformationByHandle success, file size = 503808\n00000000000000199323  GetFileSecurity(12408) \\192.168.4.12\\shared\\processhacker2-2.39\\phlib\\obj\\Debug64\\phlib.pdb        ATTRIBUTE_SECURITY_INFORMATION    Opening new handle with READ_CONTROL access\n00000000000000199324  GetFileInfo(12408)[0000000000000030] : \\192.168.4.12\\shared\\processhacker2-2.39\\phlib\\bin\\Debug64\\phlib.pdb        GetFileInformationByHandle success, file size = 0\n00000000000000199325  GetFileInfo(12408)[0000000000000030] : \\192.168.4.12\\shared\\processhacker2-2.39\\phlib\\bin\\Debug64\\phlib.pdb        GetFileInformationByHandle success, file size = 0\n00000000000000199326  DeleteFile(12408)(DeleteOnClose=1) :\n00000000000000199327  Cleanup(12408)[0000000000000030]: \\192.168.4.12\\shared\\processhacker2-2.39\\phlib\\bin\\Debug64\\phlib.pdb         DeleteOnClose     DeleteFile  error code = 0        success\n00000000000000199328  CloseFile(12408)[No Context]: \\192.168.4.12\\shared\\processhacker2-2.39\\phlib\\bin\\Debug64\\phlib.pdb\n00000000000000199329  Cleanup(12408)[0000000000000038]: \\192.168.4.12\\shared\\processhacker2-2.39\\phlib\\obj\\Debug64\\phlib.pdb\n\nAs you can see, it is just calling GetFileSecurity and decides that the result is no use to it and deletes the file. I enabled kernel debugging to make sure the behaviour is the same described by @yin19941005 but with debugging on, there was no error logged during the build at all. I guess the latency added by the debug mode resolved the lock synchronization issue. . Hello @yin19941005, sorry for not updating my current situation. It seems my problem was very different. My Alternate Data Stream implementation was not complete and explorer was trying to query some ADS on the pdb file. Explorer was getting an error due to my incomplete ADS implementation  and somehow Visual Studio, even if he is not using ADS on the pdb file, was discarding the pdb file. I fixed that issue and now I am not having any problems on pdb files.\nDifferent configurations means Win32-Debug, Win32-Release, x64-Debug and x64 Release. Process Hacker has 6 different projects in the solution and each having different configurations sums up to 20 different builds. And interestingly this was happening on 8 of them, 12 of them was building with success.. @Liryna Thank you for the explanation. What will be the lightest way of handling this case in the user application? Can we safely assume the file is deleted successfully if the error returned from DeleteFile equals to ERROR_FILE_NOT_FOUND?. Yes, thank you very much @Liryna . Hello @yin19941005, \nThank you for this great effort. I don't want to look smart but there may be a more clean implementation?\n```\nif (!GetUserObjectSecurity(handle, SecurityInformation, SecurityDescriptor,  BufferLength, LengthNeeded)) {\n   int error = GetLastError();\n   if (error == ERROR_INSUFFICIENT_BUFFER) {\n      DbgPrint(L\"  GetUserObjectSecurity error: ERROR_INSUFFICIENT_BUFFER\\n\");\n      CloseHandle(handle);\n      return STATUS_BUFFER_OVERFLOW;\n   } else {\n      DbgPrint(L\"  GetUserObjectSecurity error: %d\\n\", error);\n      CloseHandle(handle);\n      return DokanNtStatusFromWin32(error);\n   }\n }\nDWORD securityDescriptorLength = GetSecurityDescriptorLength(SecurityDescriptor);\nDbgPrint(L\"  isGetUserObjectSecuritySuccessful is true,  LengthNeeded = securityDescriptorLength \\n\");\nLengthNeeded = securityDescriptorLength;\nCloseHandle(handle);\n```\nWhat do you think?\n  . Hello @Rondom \nDo you want me to install MS filesystem testing utilities locally and execute the tests? Isn't it possible to run that IFSTest on Appveyor?. Hello @Liryna \nI have tried locking FCB when accessing the FileSize, but unfortunately it creates a deadlock.\nAlso, my PR is not correct, the if clause should be negated \nif (!(irp->Flags & IRP_PAGING_IO))\nCan you do that, or should I create a new PR?\n. Why do you think it should be called? Are you testing Alternate Data Streams on mirror volume?. @hkarakose \nYou must create a WIN32_FIND_DATAW findData structure for each content and use FillFindData(&findData, DokanFileInfo) in FindFiles callback.\n```\nstatic NTSTATUS DOKAN_CALLBACK MirrorFindFiles(LPCWSTR FileName, PFillFindData FillFindData, PDOKAN_FILE_INFO DokanFileInfo) {\n// get folder contents from webservice\n ...\nforeach content in subfolder\n  {\n    assign findData.cFileName\n    set findData.dwFileAttributes\n    set findData.ftCreationTime\n    set findData.ftLastAccessTime\n    set findData.ftLastWriteTime\n    set findData.nFileSizeHigh\n    set findData.nFileSizeLow\n    FillFindData(&findData, DokanFileInfo);\n  }\nreturn STATUS_SUCCESS;\n}\n```\nThen you must handle all the necessary logic in other callbacks. For instance if explorer, or some other programs tries to open this content you must provide your own CreateFile logic since you won't be opening a real file on the disk.. ",
    "plttn": "While I'm repro-ing this on Keybase FS, not mirror.exe, I'm also seeing similar behavior on a Surface Book. KBFS will unmount after the book being asleep for 15 minutes or longer or so, and even after resuming from hibernate KBFS will not successfully remount. A reboot is required for the FS to come back up. . @Rondom I've just repro'd mirror.exe stopping after the Surface Book being closed for long enough to enter the InstantGo state. Where should I send kernel log to, as I'm not sure it's 100% safe to post in a public forum?\n. This isn't a log from boot, but contains me closing the book and when I woke it back up, mirror.exe had ended. \nhttps://gist.githubusercontent.com/plttn/61d7940180bd1efe8114d7d96ece91c2/raw/d8b6737e8e63edce415e4d1c8b5fb05633a14c64/dokan.log. https://gist.github.com/plttn/ad60cc98523abacde49313ce4af181a8\nUsermode mirror log. \nnote after reading logs: the barfing output (like IOqCuTesL_GET_ACCEStSo_rToTOkKeEnN  ffaaiiled) is correctly copied from powershell and not a copy/paste error.\n. Where specifically is the DokanRemoveMountPointEx? usermode or kernel?. As in should I be logging mirror.exe or the kernel again?. https://gist.github.com/plttn/97f9bdcac0afe52d6f716c54bab62db6\nnew execution, letting it idle to instantgo rather than closing the lid. that's an entire execution of mirror.exe minus the first few lines because powershell buffer. . Did the kernel log above not provide what is needed? As that is the entire kernel log from launching mirror to waking up after instantgo and seeing mirror had closed itself. \nOn Fri, May 26, 2017, 5:28 PM Marinko notifications@github.com wrote:\n\nThere is no \"send global release\" in the log anymore. Please can you\nprovide the kernel log?\nAm 27.05.2017 02:24 schrieb \"Jack Platten\" notifications@github.com:\n\nhttps://gist.github.com/plttn/97f9bdcac0afe52d6f716c54bab62db6\nnew execution, letting it idle to instantgo rather than closing the lid.\nthat's an entire execution of mirror.exe minus the first few lines\nbecause powershell buffer.\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/413#issuecomment-304413329,\nor mute the thread\n<\nhttps://github.com/notifications/unsubscribe-auth/ADHSOB2AhsWe1YRITwV93ZA0e_fFD9e1ks5r920ogaJpZM4LUD2i\n.\n\n\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/413#issuecomment-304413681,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AHByQMdG71PjFRdHy9tewcgOUTg8imKvks5r9248gaJpZM4LUD2i\n.\n. The kernel logs and usermode logs were collected from different runs, but I can't see how this is a mirror.exe problem, as this occurs with keybase's filesystem as well. . @Liryna is there a build artifact for it or do I need to build myself?. \n",
    "jhlee8804": "@Liryna This issue is occurring again. This happens when try to change the folder name in the first depth of some folders based on root.  It is reproduced in Windows7, dokan 1.0.1, 1.0.2, 1.0.3 version.  \nExample)\n  'T:\\New Folder\\Child Folder' => 'T:\\New Folder\\Child Folder2'\n\n. It does not happen when modify the source code and perform the reproduction process as mentioned by @zina- .\nc\nif (isNetworkFileSystem) {\n    if (fcb->FileName.Length == 0 || fcb->FileName.Buffer[0] != L'\\\\') {\n         DDbgPrint(\"  NetworkFileSystem has no root folder. So return the full device name \\n\");\n         fileName = vcb->Dcb->DiskDeviceName;\n         length = fileName->Length;\n    }\n    else {\n        isNormalized = TRUE;\n        if (isNormalized) {\n            DDbgPrint(\"  FullFileName should be returned \\n\");\n            fileName = vcb->Dcb->DiskDeviceName;\n            length = fileName->Length + vcb->Dcb->DiskDeviceName->Length;\n            doConcat = TRUE;\n        }\n    }\n}. Here my test enviroment.  \n\nWindows version: Windows 7 SP1 x86\nProcessor architecture: x86\nDokany version: 1.0.3.1000\nLibrary type (Dokany/FUSE): Dokany (Network drive mode)\nReproduction process:\nOpen explorer.exe and go to inside first depth of folder on root.\nRun process monitor and start capture.\nCreate a new folder and rename to other name.\nIt will be crashed(BSOD).\n\nMinidump: 032617-18891-01.zip\n```code\nMicrosoft (R) Windows Debugger Version 6.3.9600.17200 X86\nCopyright (c) Microsoft Corporation. All rights reserved.\nLoading Dump File [C:\\Windows\\Minidump\\032617-18891-01.dmp]\nMini Kernel Dump File: Only registers and stack trace are available\n*** Symbol Path validation summary **\nResponse                         Time (ms)     Location\nDeferred                                       SRVC:\\Symbolshttp://msdl.microsoft.com/download/symbols\nSymbol search path is: SRVC:\\Symbolshttp://msdl.microsoft.com/download/symbols\nExecutable search path is: \nWindows 7 Kernel Version 7601 (Service Pack 1) MP (2 procs) Free x86 compatible\nProduct: WinNt, suite: TerminalServer SingleUserTS\nBuilt by: 7601.23572.x86fre.win7sp1_ldr.161011-0600\nMachine Name:\nKernel base = 0x82e10000 PsLoadedModuleList = 0x82f5ce30\nDebug session time: Sun Mar 26 22:03:53.690 2017 (UTC + 9:00)\nSystem Uptime: 0 days 0:15:50.024\nLoading Kernel Symbols\n...............................................................\n................................................................\n........................\nLoading User Symbols\nLoading unloaded module list\n......\n***********\n \n                        Bugcheck Analysis                                    \n \n*************\nUse !analyze -v to get detailed debugging information.\nBugCheck 10000050, {a8abcffe, 0, 8ba22df5, 0}\nUnable to load image PROCMON23.SYS, Win32 error 0n2\n WARNING: Unable to verify timestamp for PROCMON23.SYS\n ERROR: Module load completed but symbols could not be loaded for PROCMON23.SYS\nCould not read faulting driver name\nProbably caused by : PROCMON23.SYS ( PROCMON23+3016 )\nFollowup: MachineOwner\n1: kd> !analyze -v\n\n\n*\nBugcheck Analysis                                    *\n*\n\n\nPAGE_FAULT_IN_NONPAGED_AREA (50)\nInvalid system memory was referenced.  This cannot be protected by try-except,\nit must be protected by a Probe.  Typically the address is just plain bad or it\nis pointing at freed memory.\nArguments:\nArg1: a8abcffe, memory referenced.\nArg2: 00000000, value 0 = read operation, 1 = write operation.\nArg3: 8ba22df5, If non-zero, the instruction address which referenced the bad memory\n    address.\nArg4: 00000000, (reserved)\nDebugging Details:\nCould not read faulting driver name\nREAD_ADDRESS: GetPointerFromAddress: unable to read from 82f7d850\nUnable to read MiSystemVaType memory at 82f5c780\n a8abcffe \nFAULTING_IP: \nfltmgr!FltpExpandShortNames+77\n8ba22df5 6683395c        cmp     word ptr [ecx],5Ch\nMM_INTERNAL_CODE:  0\nCUSTOMER_CRASH_COUNT:  1\nDEFAULT_BUCKET_ID:  WIN7_DRIVER_FAULT\nBUGCHECK_STR:  0x50\nPROCESS_NAME:  explorer.exe\nCURRENT_IRQL:  0\nANALYSIS_VERSION: 6.3.9600.17237 (debuggers(dbg).140716-0327) x86fre\nLAST_CONTROL_TRANSFER:  from 8ba24290 to 8ba22df5\nSTACK_TEXT:\na8abf8a0 8ba24290 000cfd78 00000000 860cfd78 fltmgr!FltpExpandShortNames+0x77\na8abf8b4 8ba2441d 860c0000 87577094 00000000 fltmgr!FltpGetNormalizedDestinationFileName+0x56\na8abf9f8 a7902016 862213b0 8875ed68 00000000 fltmgr!FltGetDestinationFileNameInformation+0x15d\nWARNING: Stack unwind information not available. Following frames may be wrong.\na8abfa34 a79015af a8abfa94 87577094 a8abfa68 PROCMON23+0x3016\na8abfa74 8ba05aeb 87577068 a8abfa94 a8abfac0 PROCMON23+0x25af\na8abfae0 8ba089f0 a8abfb34 87e87728 00000000 fltmgr!FltpPerformPreCallbacks+0x34d\na8abfaf8 8ba08f01 a8abfb34 00000000 85c4edf8 fltmgr!FltpPassThroughInternal+0x40\na8abfb1c 8ba093ba 06abfb00 85c4edf8 00000000 fltmgr!FltpPassThrough+0x203\na8abfb4c 82e47129 85c4edf8 87e87728 00000000 fltmgr!FltpDispatch+0xb4\na8abfb64 8306d57f 56e2f80c 00001378 05bfd6ec nt!IofCallDriver+0x63\na8abfc18 82e4ddb6 00001378 05bfd764 002004b8 nt!NtSetInformationFile+0xa8f\na8abfc18 77d76c74 00001378 05bfd764 002004b8 nt!KiSystemServicePostCall\n05bfd7a4 00000000 00000000 00000000 00000000 0x77d76c74\nSTACK_COMMAND:  kb\nFOLLOWUP_IP: \nPROCMON23+3016\na7902016 ??              ???\nSYMBOL_STACK_INDEX:  3\nSYMBOL_NAME:  PROCMON23+3016\nFOLLOWUP_NAME:  MachineOwner\nMODULE_NAME: PROCMON23\nIMAGE_NAME:  PROCMON23.SYS\nDEBUG_FLR_IMAGE_TIMESTAMP:  57b10b49\nFAILURE_BUCKET_ID:  0x50_PROCMON23+3016\nBUCKET_ID:  0x50_PROCMON23+3016\nANALYSIS_SOURCE:  KM\nFAILURE_ID_HASH_STRING:  km:0x50_procmon23+3016\nFAILURE_ID_HASH:  {25e19b89-8a57-9e71-6a9c-938409f61632}\nFollowup: MachineOwner\n```\nScreenshot:\n\n. Hi @Liryna \nSorry for my late reply. I have been busy these days because of my project :/\nI reply back again soon with dokan log file.\nAnd below is modified code. (Alwasy set TRUE to isNormalized)\ncpp\nif (isNetworkFileSystem) {\n  if (fcb->FileName.Length == 0 || fcb->FileName.Buffer[0] != L'\\\\') {\n    DDbgPrint(\"  NetworkFileSystem has no root folder. So return the \"\n              \"full device name \\n\");\n    fileName = vcb->Dcb->DiskDeviceName;\n    length = fileName->Length;\n  } else {\n    isNormalized = TRUE; // <- modified\n    if (isNormalized) {\n      DDbgPrint(\"  FullFileName should be returned \\n\");\n      fileName = vcb->Dcb->DiskDeviceName;\n      length = fileName->Length + vcb->Dcb->DiskDeviceName->Length;\n      doConcat = TRUE;\n    }\n  }\n}\n. ",
    "speidy": "Thanks guys.\nIf I'll find more info about that one I'll update on wiki page.\n\u05d1\u05ea\u05d0\u05e8\u05d9\u05da \u05e9\u05d1\u05ea, 14 \u05d1\u05d9\u05e0\u05d5\u05f3 2017 \u05d1-12:41 \u05de\u05d0\u05ea Liryna notifications@github.com:\n\nNetwork Mini-Redirector section added \ud83d\udc4d\nhttps://github.com/dokan-dev/dokany/wiki/Unsupported\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/416#issuecomment-272616124,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ADTH1Nv0AH1Np6bHqf1m8O58aBTc90_qks5rSKZdgaJpZM4Lbnbh\n.\n-- \nIdan Freiberg\n\nPGP FP: 8108 7EC9 806E 4980 75F2  72B3 8AD3 2D04 337B 1F18\n. ",
    "joshbooks": "I hate to necropost but I recently ran into an issue that looks a lot like this. It looks like @sumpacle was trying to run SQL Server on Dokan(y) and was using the mirror example (which is the same thing I was doing). There may be a different way to solve this issue, but everything works fine if you specify the /n option to emulate a network drive.. ",
    "noairman": "This issue only using exe files\uff0cand I close the antivirus software,and do not find that exe file on the  tool process explorer menu.And if I change the exe file to a different type,for instance,the rar type,I can copy that file again after i delete it.\n    I tried on another computer with the antivirus software closed,the exe file type still has that issue.As the log shows,I think fcb->FileCount may go wrong,but i can't find exactly why.Could you please check the log or  try to reproduce the issue in your computer.Thanks. @marinkobabic . Hi, @marinkobabic \n  I see,and i will try to find the way to fix that if i can,and thanks for your explanation.. @marinkobabic. This fix correctly the issue \ud83d\udc4d\nThanks a lot !. Hi @Liryna ,\nThanks,I know that we should make sure if we can delete the file in DeleteFile / DeleteDirectory ,but the delete failed once just during the cleanup.. @Liryna ,\nyeah,and somehow the BroadcastSystemMessage does not return,and keeping waiting and broadcasting.. @Liryna \nthe first 200000 read is the same,but after that it starts with a lot of read less that 100.\nThe pic above is not the begining,you can check the pic below with the read of the beignning \n\nAnd there is the whole log of the filespy\nFileSpy.txt\n. Hi,@Liryna,\nthe function return true when mount with /o(use mount manager) .Thanks. @Liryna \ni tried the \"mirror.exe /d /s /r c:\\ /l M:\" with the same issue\nand now i need to get the dump file and see what is happening in dokan1.dll.. hi, @marinkobabic ,\nthe mount manager parameter means the /o flag when mount it ?\nI tried the mount manager as i said, mirror.exe /o /r c: /l M: ,it is still the same. @marinkobabic ,you mean the \"allow the service to interact with desktop\"\nI setup it ,it still the same.. @Liryna \uff0cyou mean this,run service as a user account,not a local system account?\nBut it doesn't help.\n\n. @Liryna ,as you say,the BroadcastSystemMessage's receipients is BSM_APPLICATIONS and BSM_ALLDESKTOPS,it broadcasted the message to the explorer,but maybe the explorer.exe didn't receive it when using service.and this is strange.\n@marinkobabic ,i do not need to kill the explorer.exe and start it again to see the drive,i just need to refresh it using F5 key or the  contextmenu refresh menu.And i just mout it with /r and /l,not using the /c for current session only.. ",
    "maurolm2": "tks\nI m new around ,that was version I got on HELP for Paragon ExtFS for Windows\nrgds\nMauro\nEm 27/1/2017 12:49, Liryna escreveu:\n\nHi @maurolm2 https://github.com/maurolm2 ,\nDokany version: 4.0.64\n\nThere is no such version \ud83d\ude2e\nAre you sure you have open a ticket on the correct project ?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub \nhttps://github.com/dokan-dev/dokany/issues/424#issuecomment-275682202, \nor mute the thread \nhttps://github.com/notifications/unsubscribe-auth/AYNjWYWmxz4DSlTCT_6yeIblDPdDqM6Jks5rWgQBgaJpZM4Lv1t4.\n\n\n. tks , will do so ,in any case I got here per link in Paragon ExtFS for Windows manual page 3 - attached\nExtFS4Win_en_manual.pdf\n. tks you can close it\nrgs\nMauro\n51 99961 3785\n51  3222 1710\nEm 6/2/2017 04:13, Liryna escreveu:\n\n@maurolm2 https://github.com/maurolm2 can I close this ? Have you \nbeen able to contact paragon ?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub \nhttps://github.com/dokan-dev/dokany/issues/424#issuecomment-277594646, \nor mute the thread \nhttps://github.com/notifications/unsubscribe-auth/AYNjWSoyE5YWSuYjFLKBrslnGuQMda8eks5rZroegaJpZM4Lv1t4.\n\n\n. ",
    "kika123": "The new version is ARM64 not 32. This is about adding ARM32 support.\nI've built ARM32 and ARM64 builds, but I'm stuck in WiX...\n. @Rondom they are being tested right now on Windows RT 8.1 ;). @Liryna so I have binaries working on RT 8.1 now ;)\nI failed to get WiX working properly.... @Liryna and for getting ARM64 compiled, I had to switch to Windows 10 as the target for driver compilation, MSBuild crashes and burns otherwise :). creating a pull request right now, compiling a Release build for final testing :). https://github.com/dokan-dev/dokany/pull/443 see this :). @Liryna yeah, I'll upload my WiX build somewhere :). @Liryna for ARM32, you don't need to add anything special normally, but I don't think that WiX itself supports ARM at all(there are examples of working programs using it, but I don't think that they merged it to mainline WiX).... in VS2017, you'll need to install the ARM compiler in Advanced features or to install UWP support, in which case ARM will be selected automatically. ",
    "woachk": "@Liryna yes, ARM64 only works with Windows 10 target build. I've switched the WDK back to 14393 now, as 10586 doesn't seem to be installed on AppVeyor . @Liryna anyway, the 10.0.14393 SDK works :). @Liryna I'm testing on both a Raspberry Pi 2 and a 1st generation Surface RT. @Liryna Windows 10 IoT Core, the version running on the Raspberry Pi 2, does not support MSI at all anyway, but Windows RT does\n. @Liryna I think that you can merge the PR directly :)\nI'll try to put AppVeyor ARM support in a separate PR afterwards :). @Liryna ARM AppVeyor works :). @js69 I have all the ARM SDKs, so no problems in that regard.\nMouse without Borders is an MSGarage app with a WiX installer that runs on ARM. @Liryna I'll try to ask Microsoft this evening, they are sleeping right now in Redmond \n(and I'm in FR, Microsoft France doesn't know anything about WiX ;-). @Liryna @js69 https://github.com/wixtoolset/wix4/blob/develop/src/wixarm.proj\nThe ARM project file for WiX is in their repo, but isn't there in the prebuilt WiX binaries\n. For the record, got WiX working!\nDiFXApp is not available on ARM though.... @Liryna basically yeah.... @Liryna https://github.com/wixtoolset/wix3/pull/410 is the patch to make WiX actually compilable ;). @Liryna here is an ARM WiX build for testing: https://filebin.net/eixzigytx0q8hpvv/debug.7z. @Liryna try the test WiX build, even if the PR gets accepted, I don't really think that they'll pass /p:BuildARM=true. @Liryna merged now ;). @Rondom Installing Windows RT in Qemu is possible, but not really recommended for now.. ARM SDKs work fine on AppVeyor :)\nMaybe ready for merging?. @Liryna should I attempt WiX again? :)\n. @Liryna yeah, you can rebase all the commits into one ;)\nYeah, there is ARM support, but a C:\\Program Files (x86)\\WiX Toolset v3.10\\bin\\difxapp_arm.wixlib isn't shipped by default as all, maybe it will have to be done without it(I actually have an idea ;)\n. @Liryna how? I'm a Windows guy and the only Git interface that I really know is the Visual Studio Git client. :P I'm trying and I utterly failed it seems, trying to clone again. @Liryna yay, ended up cloning the repo, doing an xcopy, then running git add to have one single commit ;). @Liryna Windows SDK overrides for desktop apps aren't needed anymore now. And yeah, WXS is the only remaining issue, but remember that IoT doesn't have MSI at all. \nan ARM screenshot. @Liryna desktop API available stuff . ARM(64) Windows 10 is available for desktop systems and will be on market in the next few months, it's currently available in Taiwan for example.. Yes, Arm32 desktop Windows exists and that's where my screenshot comes from, but it isn't public so it doesn't really matter for almost everyone (except me :-) ).. ",
    "bgarrison25": "I apologize. I found the patch and even though my computer says its up to date was able to download and install it. Nothing to see here. Move along :). ",
    "ndessenius": "Thank you, Marinko.\nI removed dlls and sys file now. I cleaned registry but after reboot, my system still see some trace about Dokan.\nMy goal is to install new Keybase's version but i can't because i've got an earlier version installed.\nIt drives me crazy.\n. ",
    "killing": "Hi @Liryna \nThanks for your fast response! If you try to get a file's detailed properties in Windows explorer (right clicking on a file and choose \"Properties\" in the menu), you'll see that a file has a normal size and a on disk size. Normally they're the same. But there is some \"tricks\" on Windows to make a file have big apparent size but doesn't occupies any disk space. (Sparse file is one of them.) The GetCompressedFileSize API can be use to obtain the true allocated size for a file, as said in https://msdn.microsoft.com/en-us/library/windows/desktop/aa365276(v=vs.85).aspx .\nOur use case is to avoid anti-virus software to scan the contents of the virtual files (files haven't be downloaded). In our testing, we found that Kaspersky won't scan a file if it's on disk size is zero. (At least this is what we guess from the testing results.) When users have large volume of data on the cloud, having the AV software to download them all is very annoying.\nI wonder whether there is a way for Dokany to control what's returned for on disk size.\nCorrect me if I understand anything wrong. I'm not an expert on Windows kernel.. @Liryna @Rondom Thanks for the explanation! I had a quick look at the driver code. It seems to me that as long as we can set the AllocationSize, it will be returned to IO manager in the kernel. Then the calling application should be able to see the \"allocated\" size we set in Dokan application. Is that correct? Correct me if I'm wrong.\nI'm also curious about what user space Windows API can be used to get the allocation size of a file. I did some search but could not find it. The only API that seems related is GetCompressedFileSize. GetFileInformationByHandleEx cannot accept FileAllocationInfo as its parameter, as said in https://msdn.microsoft.com/en-us/library/windows/desktop/aa364228(v=vs.85).aspx . @Rondom Hmm... But https://msdn.microsoft.com/en-us/library/windows/desktop/aa364228(v=vs.85).aspx says \nFileAllocationInfo\nThe file allocation information should be changed. Used for file handles. Use only when calling SetFileInformationByHandle. See FILE ALLOCATION INFO.. @Rondom Could you point out which structs?. @Rondom Thank you for pointing it out to me! I just missed this information in the documentation.. @Liryna I used ProcessMonitor to trace the system calls of Windows explorer. I'm now pretty sure that explorer gets the allocation size information from a GetStandardFileInformation call. So I think once Dokany provides the API to fs application, we can control the allocation size. Do you have plan to implement this in Dokany? I think it's also interesting for other applications, to reduce unintended download triggered by Windows search indexer or Virus scanners. We can sponsor this feature to make it available sooner, if it's acceptable for you. . Hi @Liryna \nThanks for help! No we haven't changed the code for testing on our side. Actually we're not familiar with Windows driver development. It would be great if you can provide a binary for us to test. But I think it's also okay if you just give us the patch + snapshot. We'll try to compile it.. ",
    "chris-bor": "Hi all,\nI'm also facing with the same problem, I'm testing usage dokan on different platforms and want to stop fetching files from remote database, and stop invoking readFile() function for creating fg. snapshots or thumbnails on demand Windows. I thing I'm doing something wrong because I stoped it on Window 10 but Window 7 still opens files (specialy .txt and creates preview of the file). I don't know which file attribute I should set up for files towards to stop reading redundant reading files? Mayby I sholud use different versions of Windows SDK for each kind of Windows? Do you have any idea? Is it possible that files attributes are interpreter in different way on each platforms?\nAdditionally, I've the impression that it doesn't matter what I set up for flag fileSystemFlags in function getVolumeInformation, am I right?. Hi, is this problem solved? . ",
    "FixBo": "Network option makes no difference.\nAttached procmon log. It contains trace for two attempts.\nFirst from dir \\localhost\\mmm\nSecond (at 17 sec) from network dir \\wintest10\\mmm\nLogfile.PML.zip\n. Yes.. Directory contain 371 files.\nI've tried without network option - same result.. Here is log from regular file share.\nAs you can see QueryDirectory returns BUFFER_OVERFLOW after first request.\nLogfile2.PML.zip\n. >  Logfile2.PML.zip is empty :'(\nClear procmon filter. System process filtered out by default.\n\nWhat is your mount command ? Does the folder + file path are long ?\n\nmirror /r c:\\m\\ /l m. > Just did a test with +500 picture without network option:\nIt's only reproduced when accessing share from another PC. Locally operates normally.. https://msdn.microsoft.com/en-us/library/windows/hardware/ff567047%28v=vs.85%29.aspx?f=255&MSPPError=-2147217396\nOn the first call to ZwQueryDirectoryFile, if the structure created for the first entry found is too large to fit into the output buffer, the routine writes the fixed portion of the structure to the output buffer. The routine then writes to the output buffer as much of the FileName string as will fit. (The fixed portion of the structure consists of all fields except the final FileName string. On the first call, but not on subsequent calls, the I/O system ensures that the buffer is large enough to hold the fixed portion of the appropriate FILE_XXX_INFORMATION structure.) When this happens, ZwQueryDirectoryFile returns an appropriate status value such as STATUS_BUFFER_OVERFLOW.. I suppose dokan driver dosn't check buffer for overflow.\ndokan\n12:18:17.3683347 PM 0.0021408   System  4   QueryDirectory  M:*    SUCCESS Filter: *, 1: bundlerminifier.core.2.0.nupkg, 2: libuv.1.9.1.0.nupkg, 3: libuv.1.9.nupkg, 4: ....\n12:18:17.3706031 PM 0.0000552   System  4   QueryDirectory  M:*    NO MORE FILES   Filter: *\nregular share access\n1:00:05.0737270 PM  0.0004908   System  4   QueryDirectory  C:\\m*  SUCCESS Filter: , 1: ., 2: .., 3: bundlerminifier.core.2.0.nupkg, 4: libuv.1.9.1.0.nupkg, ...\n1:00:05.0742442 PM  0.0000131   System  4   QueryDirectory  C:\\m*  BUFFER OVERFLOW Filter: , 1: system.threa\n1:00:05.0756099 PM  0.0000171   System  4   QueryDirectory  C:\\m*  SUCCESS Filter: , 1: .\n1:00:05.0761328 PM  0.0001681   System  4   QueryDirectory  C:\\m*  SUCCESS Filter: , 1: .., 2: bundlerminifier.core.2.0.nupkg, 3: libuv.1.9.1.0.nupkg, ....\n1:00:05.0960470 PM  0.0000225   System  4   QueryDirectory  C:\\m*  NO MORE FILES   Filter: *\n. On second call of MatchFiles buffer is too small even for one file and incorrectly threaded as no more files.\n// NO_MORE_FILES\n  if (index <= EventContext->Operation.Directory.FileIndex)\n    return -1;\n. FindFiles :C:\\m\\\n    FindFiles return 1002 entries in C:\\m\\*\nindex from 0\nFileMatch? : verylongfilename1.txt (,0,0)\n  =>return\nFileMatch? : verylongfilename10.txt (,0,1)\n  =>return\nFileMatch? : verylongfilename100.txt (,0,2)\n  =>return\n...........\nFileMatch? : verylongfilename466.txt (,0,408)\n  =>return\nFileMatch? : verylongfilename467.txt (,0,409)\n  no memory\nindex to 409\nindex from 409\nFileMatch? : verylongfilename1.txt (,409,0)\nFileMatch? : verylongfilename10.txt (,409,1)\nFileMatch? : verylongfilename100.txt (,409,2)\nFileMatch? : verylongfilename1000.txt (,409,3)\n......\nFileMatch? : verylongfilename465.txt (,409,407)\nFileMatch? : verylongfilename466.txt (,409,408)\nFileMatch? : verylongfilename467.txt (,409,409)\n  no memory\n  STATUS_NO_MORE_FILES\n. Correct.\nI'll try.. Yes, It does.. Hi @Liryna \nLinux CIFS implementation use it.. ",
    "jamarat": "As a matter of fact we do implement both functions. The above log is just to show the problem. We provide SecurityDescriptor in the GetFileSecurity. Even IsValidSecurityDescriptor(SecurityDescriptor) validation passes. \nThe mirror example uses just GetUserObjectSecurity(handle, SecurityInformation, SecurityDescriptor, BufferLength, LengthNeeded) winapi function. It is not very descriptive on SecurityInformation and SecurityDescriptor handling. Maybe we do sth wrong with structs initialization? Is there any more advanced sample available? \nThx. 1. By IsValidSecurityDescriptor, I mean the \nBOOL WINAPI IsValidSecurityDescriptor(\n  _In_ PSECURITY_DESCRIPTOR pSecurityDescriptor\n);\nwhich doesn't check a security descriptor against desired SECURITY_INFORMATION as the RtlValidRelativeSecurityDescriptor does. Probably you're right - my SD is not filled properly. I'll double check it. But anyway I vote for the enhancement proposed by @Rondom \n2. It appears that the mentioned buffer overflow warning in logs:\nFileAllInformation\nDispatchQueryInformation result =  80000005 \nkeeps showing up all the time (Win7 x64) but has nothing to do with the described security descriptor problem. Anyway, shouldn't it be avoided/fixed? It's mentioned in #331 and #406.. Regarding buffer overflow: the schema you described works for a security descriptor retrieval (in the GetFileSecurity) and you're right there are two consecutive callback calls. That's fine.\nBut there is a buffer overflow in the DokanFillFileAllInfo - whenever DispatchQueryInformation is called with FileAllInformation:\nhttps://github.com/dokan-dev/dokany/blob/de4e1408c498b069ada734d0ca9b5c2de501d14d/dokan/fileinfo.c#L487\nYou can see it in logs, the \nFileAllInformation \nis always (Win7 x64, don't know about others) followed by \nDispatchQueryInformation result =  80000005.. ",
    "antiufo": "I looked at the source code and MAX_PATH seems to be mostly used for buffer sizes. What do you think about replacing it with 32,768, which seems to be the maximum length (?) for long paths? (Provided that this doesn't cause performance/memory problems). Ok so:\n dokan1.dll and the driver don't seem to have any problems with very long paths.\n mirror.exe crashes because its own buffer is too small.\n* ~In Dokan.NET, path components longer than 256 are trimmed because of how rawMaximumComponentLength is configured.~ Individual path components can never exceed 256 chars on Windows, even when using the \\\\?\\ syntax.. No, it doesn't crash anymore.\nAt least in Windows 10 build 14965, long paths can be enabled with a group policy. Additionally, the manifest of the exe must declare its support for this feature. I know that Powershell has that flag enabled. For .NET apps, it's configurable from App.config (UseLegacyPathHandling, BlockLongPaths).. ",
    "sam0x17": "Possibly notable excerpts from kernel log (in chronological order):\nSome STATUS_ACCESS_DENIED statuses pop up\n00055627    0.00486348  [DokanFS]    => DokanDiskDeviceControl  \n00055628    0.00486576  [DokanFS]    DiskDeviceControl Device name \\Device\\Volume{d6cc17c5-1731-4085-bce7-964f1e9f5de9}     \n00055629    0.00486690  [DokanFS]   IOCTL_STORAGE_QUERY_PROPERTY    \n00055630    0.00486842  [DokanFS]     PropertyStandardQuery Unknown 6   \n00055631    0.00486918  [DokanFS]    <= DokanDiskDeviceControl  \n00055632    0.00487108  [DokanFS]   status = 0xc0000022 \n00055633    0.00487222  [DokanFS]   status = STATUS_ACCESS_DENIED   \n00055634    0.00487336  [DokanFS]   status = 0xc0000022 \n00055635    0.00487450  [DokanFS]   status = STATUS_ACCESS_DENIED   \n00055636    0.00487564  [DokanFS] <== DokanDispatchIoControl\nA little bit later a single STATUS_INVALID_DEVICE_REQUEST is raised\n00055839    0.00514174  [DokanFS] ==> DokanDispatchIoControl    \n00055840    0.00514288  [DokanFS]   ProcessId 4 \n00055841    0.00514364  [DokanFS]    IdType = DCB   \n00055842    0.00514478  [DokanFS]    => DokanDiskDeviceControl  \n00055843    0.00514706  [DokanFS]    DiskDeviceControl Device name \\Device\\Volume{d6cc17c5-1731-4085-bce7-964f1e9f5de9}     \n00055844    0.00514820  [DokanFS]    Unknown Code 0x4d008   \n00055845    0.00515010  [DokanFS]    BaseCode: 0x4(unknown) FunctionCode 0x402(1026)    \n00055846    0.00515124  [DokanFS]    <= DokanDiskDeviceControl  \n00055847    0.00515238  [DokanFS]   status = 0xc0000010 \n00055848    0.00515390  [DokanFS]   status = STATUS_INVALID_DEVICE_REQUEST  \n00055849    0.00515504  [DokanFS]   status = 0xc0000010 \n00055850    0.00515618  [DokanFS]   status = STATUS_INVALID_DEVICE_REQUEST  \n00055851    0.00515732  [DokanFS] <== DokanDispatchIoControl\n(probably not relevant) much later a STATUS_INSUFFICIENT_RESOURCES is raised, but I think this is after Dokan has begun cleaning up the drive after it has already failed.\n00057004    20.02175140 [DokanFS] ==> ReleaseTimeoutPendingIRP  \n00057005    20.02175522 [DokanFS]  timeout Irp #6   \n00057006    20.02177620 [DokanFS]   status = 0xc000009a \n00057007    20.02177811 [DokanFS]   status = STATUS_INSUFFICIENT_RESOURCES  \n00057008    20.02178192 [DokanFS] <== ReleaseTimeoutPendingIRP  \n00057009    20.02178383 [DokanFS]   Timeout, umount \n00057010    20.02178574 [DokanFS] ==> DokanUnmount  \n00057011    20.02179146 [DokanFS]   Send Unmount to Service : \\Volume{d6cc17c5-1731-4085-bce7-964f1e9f5de9} \n00057012    20.02179718 [DokanFS] => NotificationLoop   \n00057013    20.02179909 [DokanFS] Try acquire SpinLock...   \n00057014    20.02180099 [DokanFS] SpinLock irp Acquired \n00057015    20.02180099 [DokanFS] SpinLock notify Acquired  \n00057016    20.02180290 [DokanFS] Clear Events...   \n00057017    20.02180290 [DokanFS] Notify event cleared  \n00057018    20.02180481 [DokanFS] Pending event cleared \n00057019    20.02180672 [DokanFS] Release SpinLock...   \n00057020    20.02180862 [DokanFS] SpinLock notify Released  \n00057021    20.02180862 [DokanFS] SpinLock irp Released \n00057022    20.02181053 [DokanFS] <= NotificationLoop. @Liryna \nYes, I thought it wasn't appearing in explorer in the first place, but it looks like it is actually there for a fraction of a second. \nI'm not sure what to change, but I think https://github.com/mafintosh/fuse-bindings/blob/master/fuse-bindings.cc is the relevant file where I would need to enable debug output.\nThere is some built-in output that happens when initializing fuse-bindings that may be relevant. Below is typical output from the time fuse-bindings is first call until the time it crashes (1-2 seconds later)\ngetattr(/)\ngetattr(/)\ngetattr(/)\ngetattr(/)\ngetattr(/)\ngetattr(/)\ngetattr(/)\ngetattr(/)\ngetattr(/)\ngetattr(/DESKTOP.INI)\ngetattr(/)\ngetattr(/)\ngetattr(/)\ngetattr(/)\ngetattr(/)\ngetattr(/)\ngetattr(/)\ngetattr(/)\ngetattr(/)\ngetattr(/)\nreaddir(/). OK interesting -- I'll look into that. For some reason this exact same example works fine with FUSE on linux, though with virtually the same log.. @Liryna thanks -- do you think I should be trying this with RC2 instead?\nAlso, by looking at that diff, I realized I was specifying '/mnt' (like you would on unix) when I should be specifying a drive letter. For some reason I thought it was going to randomly assign a drive letter, so at least that is one problem fixed. Now it does mount in 'This PC', however it shows as 0 bytes free 0 bytes used, and when I go to open the drive, it times out saying insufficient system resources available in a message box (this is the same behavior exhibited before, otherwise).\nSo RC2?. @Liryna do you think it could have anything to do with not being able to specify a gid / uid? or is that totally irrelevant?. ok here is something new -- when I run with the drive specified correctly as above, there are some STATUS_BUFFER_OVERFLOW messages in the kernel output (this is the first one, after this they happen intermittently in a loop until explorer displays the insufficient system resources message). This doesn't happen until I try to open the drive.\n00000366    4.72690582  [DokanFS] ==> DokanCleanup  \n00000367    4.72690725  [DokanFS]   ProcessId 4 \n00000368    4.72690821  [DokanFS]   FileName: (null) FCB.FileName: (null)   \n00000369    4.72690964  [DokanFS]   status = 0x0    \n00000370    4.72691059  [DokanFS]   status = STATUS_SUCCESS \n00000371    4.72691154  [DokanFS] <== DokanCleanup  \n00000372    4.72691393  [DokanFS] ==> DokanDispatchIoControl    \n00000373    4.72691488  [DokanFS]   ProcessId 4 \n00000374    4.72691536  [DokanFS]    IdType = DCB   \n00000375    4.72691679  [DokanFS]    => DokanDiskDeviceControl  \n00000376    4.72691870  [DokanFS]    DiskDeviceControl Device name \\Device\\Volume{d6cc17c5-1735-4085-bce7-964f1e9f5de9}     \n00000377    4.72692013  [DokanFS]    IOCTL_MOUNTDEV_QUERY_DEVICE_NAME   \n00000378    4.72692108  [DokanFS]    <= DokanDiskDeviceControl  \n00000379    4.72692251  [DokanFS]   status = 0x80000005 \n00000380    4.72692394  [DokanFS]   status = STATUS_BUFFER_OVERFLOW \n00000381    4.72692442  [DokanFS]   status = 0x80000005 \n00000382    4.72692585  [DokanFS]   status = STATUS_BUFFER_OVERFLOW \n00000383    4.72692680  [DokanFS] <== DokanDispatchIoControl. Also I noticed around line 2500 in the log that STATUS_INVALID_PARAMTER is getting thrown, so maybe this is related to https://github.com/dokan-dev/dokany/issues/279#issuecomment-234793103, which looks similar?\n00002553    19.97600937 [DokanFS] ==> DokanQueryInformation \n00002554    19.97601318 [DokanFS]   FileInfoClass 5 \n00002555    19.97601318 [DokanFS]   ProcessId 2592  \n00002556    19.97601700 [DokanFS]   FileName: \\ FCB.FileName: \\ \n00002557    19.97601891 [DokanFS]   FileStandardInformation \n00002558    19.97602081 [DokanFS] ==> DokanRegisterPendingIrp   \n00002559    19.97602272 [DokanFS] ==> DokanRegisterPendingIrpMain   \n00002560    19.97602463 [DokanFS] <== DokanRegisterPendingIrpMain   \n00002561    19.97604752 [DokanFS] <== DokanRegisterPendingIrp   \n00002562    19.97604942 [DokanFS]   status = 0x103  \n00002563    19.97605133 [DokanFS]   status = STATUS_PENDING \n00002564    19.97605324 [DokanFS] <== DokanQueryInformation \n00002565    19.97605515 [DokanFS]   status = 0xc000000d \n00002566    19.97605705 [DokanFS]   status = STATUS_INVALID_PARAMETER   \n00002567    19.97605896 [DokanFS] <== DokanCompleteQueryInformation. @Rondom thanks to your tip I was able to enable logging within fuse-bindings. Here is my latest kernel log (very very long) plus the user-space log from the app (I believe this is what you wanted as well, @Liryna):\nuser-space log: https://storage.googleapis.com/durosoft-shared/userspace.log\nkernel log: https://storage.googleapis.com/durosoft-shared/kernel.log. @marinkobabic Is there perhaps a required callback that isn't being handled by https://github.com/mafintosh/fuse-bindings/blob/master/example.js ?\nedit: never mind, I see the KEEP ALIVE's you're talking about. @marinkobabic yes, whatever the problem is probably happens well before 39... probably within the first 10 seconds.. @Liryna yes that is after it timed out in explorer and I had to end logging etc lol. Actual problem happens way before that. The main node process has already crashed at that point and only the debugger remains with nothing connected to it, so I have to kill.. @Liryna to be clear, the main node process crashes immediately after the readdir call, but there is no error thrown anywhere. It just closes inexplicably.. yes looks like the second I hit enter to open up the drive in explorer (I have it selected in \"This PC\"), that is when the readdir call is issued and the main Node process crashes without explanation.. @Liryna I'll do that and see what I can do in terms of debugging the crash -- originally I assumed there would be something about it in the dokan userspace output but it looks like no. Apparently this is the behavior one would see when the Electron renderer process runs out of memory (https://github.com/electron/electron/issues/2409), so it could be that fuse-bindings is trying to allocate an overly large buffer somehow. \nI'm not sure exactly how to debug this but I'll get back to you when I figure something out.\nupdate: recompiling dokan / fuse-bindings results in the same behavior -- looking in to how to debug the crashing renderer window.. https://github.com/electron/electron/issues/5186\nThis looks suspiciously related -- would be so annoying if this all just turned out to be a virtual box bug. I'll try tonight on a non-vm and see if I get the same behavior. In the mean time looks like I might be able to use WinDBG to debug the renderer process crashing . @Liryna when I try attaching the the renderer process using WinDBG, the app becomes unresponsive. I'll keep trying. It could be that the chrome debug console already counts as a debugger, so I might need to do this without it enabled.. @Liryna @marinkobabic thanks -- that makes sense. Based on this information, I am pretty sure that something about the readdir call is causing a memory-related crash in the electron renderer process. As you suggested, @Liryna , I will try setting this up as a standalone Node script and see if I get a different result.\nI tried the same setup on a windows PC just now and had the exact same crash, so unfortunately it is not simply a VirtualBox-related bug.\nTo be clear, the timeout is definitely occurring because the electron renderer process exits unexpectedly. The question is why does readdir cause it to crash with no error message or log entry.. @Liryna here is a simple project that reproduces the error without using electron. If you want to try running it, make sure you have the latest stable node installed (https://github.com/coreybutler/nvm-windows is the easiest way to do this with nvm install latest). Then do npm install followed by node .. This will mount the drive on drive letter Z:. If you go to This PC and open the drive, the program will instantly crash.\nhttps://github.com/samkelly/flashsync_node_test\nAnalysis from WinDBG / etc to follow.. Ok I found a node tool for analyzing native module crashes, and looks like it is indeed a segfault:\n```\nC:\\Users\\sam\\Desktop\\flashsync_node_test (master) (test@0.1.0)\n\u03bb node .\nDokan: debug mode on\nDokan: use stderr\nAllocationUnitSize: 512 SectorSize: 512\ndevice opened\nfilesystem mounted on Z:\nmounted: Z:\\ -> \\Volume{d6cc17c5-1730-4085-bce7-964f1e9f5de9}\nMounted\nQueryVolumeInfo -001\nGetVolumeInformation\nCreate 0000\nCreateFile: \\\n        DesiredAccess: SYNCHRONIZE\n        ShareAccess: 0x0\n        Disposition: FILE_OPEN (1)\n        Attributes: 0 (0x0)\n        Options: 33 (0x21)\ngetattr(/)\nCreateFile status = 0\nGetFileInfo 0000\nGetFileInfo: : \\\ngetattr(/)\n        result =  0\n  unknown type:54\n        DispatchQueryInformation result =  c000000d\nGetFileInfo 0000\nGetFileInfo: : \\\ngetattr(/)\n        result =  0\n        FileStandardInformation\n        DispatchQueryInformation result =  0\nQueryVolumeInfo 0000\nGetVolumeInformation\nQueryVolumeInfo 0000\nGetVolumeInformation\nCleanup 0000\nCleanup: \\\nClose 0000\nClose: \\\nCreate 0001\nCreateFile: \\\n        DesiredAccess: FILE_READ_ATTRIBUTES\n        ShareAccess: FILE_SHARE_DELETE|FILE_SHARE_WRITE|FILE_SHARE_READ\n        Disposition: FILE_OPEN (1)\n        Attributes: 0 (0x0)\n        Options: 2097152 (0x200000)\ngetattr(/)\nCreateFile status = 0\nGetFileInfo 0001\nGetFileInfo: : \\\ngetattr(/)\n        result =  0\n        FileStandardInformation\n        DispatchQueryInformation result =  0\nGetFileInfo 0001\nGetFileInfo: : \\\ngetattr(/)\n        result =  0\n        FileBasicInformation\n        DispatchQueryInformation result =  0\nCleanup 0001\nCleanup: \\\nClose 0001\nClose: \\\nCreate 0002\nCreateFile: \\\n        DesiredAccess: FILE_READ_ATTRIBUTES\n        ShareAccess: FILE_SHARE_DELETE|FILE_SHARE_WRITE|FILE_SHARE_READ\n        Disposition: FILE_OPEN (1)\n        Attributes: 0 (0x0)\n        Options: 2097152 (0x200000)\ngetattr(/)\nCreateFile status = 0\nGetFileInfo 0002\nGetFileInfo: : \\\ngetattr(/)\n        result =  0\n        FileStandardInformation\n        DispatchQueryInformation result =  0\nGetFileInfo 0002\nGetFileInfo: : \\\ngetattr(/)\n        result =  0\n        FileBasicInformation\n        DispatchQueryInformation result =  0\nCleanup 0002\nCleanup: \\\nClose 0002\nClose: \\\nCreate 0003\nCreateFile: \\\n        DesiredAccess: SYNCHRONIZE|FILE_READ_ATTRIBUTES|FILE_READ_DATA\n        ShareAccess: FILE_SHARE_DELETE|FILE_SHARE_WRITE|FILE_SHARE_READ\n        Disposition: FILE_OPEN (1)\n        Attributes: 0 (0x0)\n        Options: 0 (0x0)\ngetattr(/)\nCreateFile status = 0\nGetFileInfo 0003\nGetFileInfo: : \\\ngetattr(/)\n        result =  0\n        FileStandardInformation\n        DispatchQueryInformation result =  0\nGetFileInfo 0003\nGetFileInfo: : \\\ngetattr(/)\n        result =  0\n        FileBasicInformation\n        DispatchQueryInformation result =  0\nGetFileInfo 0003\nGetFileInfo: : \\\ngetattr(/)\n        result =  0\n        FileBasicInformation\n        DispatchQueryInformation result =  0\nCreate 0004\nCreateFile: \\\n        DesiredAccess: SYNCHRONIZE|FILE_READ_ATTRIBUTES|FILE_READ_DATA\n        ShareAccess: FILE_SHARE_DELETE|FILE_SHARE_WRITE|FILE_SHARE_READ\n        Disposition: FILE_OPEN (1)\n        Attributes: 0 (0x0)\n        Options: 0 (0x0)\ngetattr(/)\nCreateFile status = 0\nGetFileInfo 0004\nGetFileInfo: : \\\ngetattr(/)\n        result =  0\n        FileBasicInformation\n        DispatchQueryInformation result =  0\nGetFileInfo 0004\nGetFileInfo: : \\\ngetattr(/)\n        result =  0\n        FileBasicInformation\n        DispatchQueryInformation result =  0\nCreate 0005\nCreateFile: \\\n        DesiredAccess: FILE_READ_ATTRIBUTES\n        ShareAccess: FILE_SHARE_DELETE|FILE_SHARE_WRITE|FILE_SHARE_READ\n        Disposition: FILE_OPEN (1)\n        Attributes: 0 (0x0)\n        Options: 2097152 (0x200000)\ngetattr(/)\nCreateFile status = 0\nCreate 0006\nCreateFile: \\desktop.ini\n        DesiredAccess: FILE_GENERIC_READ\n        ShareAccess: FILE_SHARE_DELETE|FILE_SHARE_WRITE|FILE_SHARE_READ\n        Disposition: FILE_OPEN (1)\n        Attributes: 0 (0x0)\n        Options: 100 (0x64)\ngetattr(/desktop.ini)\nCreateFile status = c0000034\nGetFileInfo 0005\nGetFileInfo: : \\\ngetattr(/)\n        result =  0\n        FileBasicInformation\n        DispatchQueryInformation result =  0\nCreate 0007\nCreateFile: \\\n        DesiredAccess: SYNCHRONIZE|FILE_READ_ATTRIBUTES|FILE_READ_DATA\n        ShareAccess: FILE_SHARE_DELETE|FILE_SHARE_WRITE|FILE_SHARE_READ\n        Disposition: FILE_OPEN (1)\n        Attributes: 0 (0x0)\n        Options: 32 (0x20)\ngetattr(/)\nCreateFile status = 0\nCleanup 0005\nCleanup: \\\nGetFileInfo 0007\nGetFileInfo: : \\\ngetattr(/)\n        result =  0\n        FileBasicInformation\n        DispatchQueryInformation result =  0\nClose 0005\nClose: \\\nCreate 0008\nCreateFile: \\\n        DesiredAccess: FILE_READ_ATTRIBUTES\n        ShareAccess: FILE_SHARE_DELETE|FILE_SHARE_WRITE|FILE_SHARE_READ\n        Disposition: FILE_OPEN (1)\n        Attributes: 0 (0x0)\n        Options: 2097152 (0x200000)\ngetattr(/)\nCreateFile status = 0\nGetFileInfo 0007\nGetFileInfo: : \\\ngetattr(/)\n        result =  0\n  unknown type:55\n        DispatchQueryInformation result =  c000000d\nGetFileInfo 0008\nGetFileInfo: : \\\ngetattr(/)\n        result =  0\n        FileBasicInformation\n        DispatchQueryInformation result =  0\nFindFiles 0007\nFindFiles: \\\ngetattr(/)\nreaddir(/)\nPID 3344 received SIGSEGV for address: 0x6ef1d1b\nSymInit: Symbol-SearchPath: '.;C:\\Users\\sam\\Desktop\\flashsync_node_test;C:\\Program Files\\nodejs;C:\\Windows;C:\\Windows\\system32;SRVC:\\websymbolshttp://msdl.microsoft.com/download/symbols;', symOptions: 530, UserName: 'sam'\nOS-Version: 10.0.14393 () 0x100-0x1\nc:\\users\\sam\\desktop\\flashsync_node_test\\node_modules\\segfault-handler\\src\\stackwalker.cpp (941): StackWalker::ShowCallstack\nc:\\users\\sam\\desktop\\flashsync_node_test\\node_modules\\segfault-handler\\src\\segfault-handler.cpp (116): segfault_handler\n00007FFF1234BD00 (ntdll): (filename not available): RtlInitializeCriticalSection\n00007FFF1232960B (ntdll): (filename not available): RtlImageNtHeaderEx\n00007FFF12389CBA (ntdll): (filename not available): KiUserExceptionDispatcher\nc:\\users\\sam\\desktop\\flashsync_node_test\\node_modules\\fuse-bindings\\fuse-bindings.cc (238): bindings_getattr\n00007FFF0440228B (dokanfuse1): (filename not available): fuse_teardown\nc:\\users\\sam\\desktop\\flashsync_node_test\\node_modules\\fuse-bindings\\fuse-bindings.cc (751): bindings_set_dirs\nc:\\users\\sam\\desktop\\flashsync_node_test\\node_modules\\fuse-bindings\\fuse-bindings.cc (775): OpCallback\nc:\\users\\sam\\desktop\\flashsync_node_test\\node_modules\\nan\\nan_callbacks_12_inl.h (175): Nan::imp::FunctionCallbackWrapper\n00007FF687915C0F (node): (filename not available): v8::internal::LookupIterator::Start<1>\n00007FF687748EFE (node): (filename not available): v8::internal::StrDup\n00007FF687747E43 (node): (filename not available): v8::internal::StrDup\n00007FF687747D1B (node): (filename not available): v8::internal::StrDup\n00000343961043AB ((module-name not available)): (filename not available): (function-name not available)\n00000343961042E1 ((module-name not available)): (filename not available): (function-name not available)\n0000001D1A8FE2A0 ((module-name not available)): (filename not available): (function-name not available)\n0000000300000000 ((module-name not available)): (filename not available): (function-name not available)\n00000343961042E1 ((module-name not available)): (filename not available): (function-name not available)\n0000001D1A8FE2B0 ((module-name not available)): (filename not available): (function-name not available)\n0000000300000000 ((module-name not available)): (filename not available): (function-name not available)\n00000343961042E1 ((module-name not available)): (filename not available): (function-name not available)\n0000001D1A8FE2D0 ((module-name not available)): (filename not available): (function-name not available)\n0000000300000000 ((module-name not available)): (filename not available): (function-name not available)\n0000001D1A8FE378 ((module-name not available)): (filename not available): (function-name not available)\n0000034396286829 ((module-name not available)): (filename not available): (function-name not available)\n0000002CEB982311 ((module-name not available)): (filename not available): (function-name not available)\n000002705D9AEB69 ((module-name not available)): (filename not available): (function-name not available)\n0000000700000000 ((module-name not available)): (filename not available): (function-name not available)\n000000EE0B162601 ((module-name not available)): (filename not available): (function-name not available)\nsend global release for Z:\nC:\\Users\\sam\\Desktop\\flashsync_node_test (master) (test@0.1.0)\n\u03bb\n``. any idea what that means? I've been going through the source code trying to figure out what's wrong. I think I will also try using this with an older version of Dokan since technically fuse-bindings has only been tested up to Dokany RC2.. Compiled locally via node-gyp, which automatically runs native build tools for the local system. Specifically, runningnpm installtriggers node-gyp to call the C++ compiler and compile the bindings. Deleting the node_modules directory and runningnpm install` again will re-do this process.. OK I've built RC2 locally -- how do I build the installer? Is that not in the main VS solution?. ok I'll try that -- thanks. @Liryna @Rondom as it turns out, the seg fault occurs at https://github.com/mafintosh/fuse-bindings/blob/master/fuse-bindings.cc#L198 in fuse-bindings... \nupdate: looks like fuse_get_context() is returning a NULL pointer when called during getattr() on the root of the drive, segfault happens when we try to do stuff with the NULL\nC++\nstatic bindings_t *bindings_get_context () {\n  fuse_context *ctx = fuse_get_context(); // returns nullptr\n  bindings_t *b = (bindings_t *) ctx->private_data; // segmentation fault here\n  b->context_pid = ctx->pid;\n  b->context_uid = ctx->uid;\n  b->context_gid = ctx->gid;\n  return b;\n}\nupdate: looks like a getattr call comes in and is processed before readdir has finished returning. not sure if this is supposed to happen\n```\n!! before getattr\ngetattr(/)\n!! after getattr\nCreateFile status = 0\nFindFiles 0006\nFindFiles: \\\n!! before getattr\ngetattr(/)\n!! after getattr\n!! before readdir\nreaddir(/)\nbefore getattr\n!! fuse_context returned null!!\nPID 2592 received SIGSEGV for address: 0xc35b1dfe\n``\nupdate: my guess now is that fuse-bindings can't handle a getattr call \"during\" a readdir call. I haven't tested with RC2 but maybe this commit introduced the incompatibility: 0b350fddd76f4da811e7a037e2fcfa57f87070f8. @Rondom it seems that fuse-bindings uses a static variable to store its reference to the current context (contained inbindings_current, via thebindings_tstruct). This variable gets set/overwritten with the current return value offuse_get_context();when a fuse operation (e.g.readdir,getattr, etc) is started by Dokan (fuse_get_context()is called the second the fuse operation starts, andbindings_current` is overwritten right before executing the callback for that fuse operation).\nUnder those circumstances, the behavior right now is that readdir will start to execute, setting the current context, and executing the callback for readdir. If the callback provides actual directory contents, then Dokan issues a getattr on the first item. This would cause the still-not-returned readdir call's context to be overwritten by getattr's context if it weren't for the fact that getattr's fuse_get_context(); call returns NULL causing a seg fault before the callback for getattr can execute (also before bindings_current is overwritten).\nFor fuse_get_context(); to return NULL, at least one item must be removed from the What I can't figure out is what in the Dokan source code triggers items to be removed from the cur_impl_chain_link linked list, because I think this is happening early in the case of readdir (on the fuse-bindings side).. I need to figure out the conditions under which fuse_get_context() will return NULL. In short, how does an implementing library inform Dokan that it \"is done\" with the current context?. @marinkobabic you are right -- everything is on one thread until the nested getattr call which comes in on a separate thread\n!!208664352 start of readdir -- threadid = 3840\nBINDINGS_GET_CONTEXT (threadid = 3840)\n!!20866435 middle of readdir -- threadid = 3840\nbindings_dispatch (threadid = 3840)\nbindings_call_op (threadid = 3840)\nreaddir(/)\n!! start of getattr -- thread ID = 2720\nBINDINGS_GET_CONTEXT (threadid = 2720)\n!! fuse context returned null (threadid = 2720)\nPID 3108 received SIGSEGV for address: 0xc27d1c60. I have not tried running dokan with just one thread -- how do I do this?\nit appears to be using a static variable, yes. here is the declaration in fuse_bindings.cc:\nc++\nstatic bindings_t *bindings_current = NULL;\nI have not worked extensively with multi-threading in C++, so I could not say whether this is thread-local or not, though it does not appear to be declared volatile or anything like that.... Here is full output with better debug code and thread id for all print statements (very end is what matters):\n```\nCreate 0004\nCreateFile: \\\n        DesiredAccess: FILE_READ_ATTRIBUTES\n        ShareAccess: FILE_SHARE_DELETE|FILE_SHARE_WRITE|FILE_SHARE_READ\n        Disposition: FILE_OPEN (1)\n        Attributes: 0 (0x0)\n        Options: 2097152 (0x200000)\nstart of getattr (thread: 2972)\nentered bindings_get_context(thread: 2972)\n!! fuse_get_context: 524285200 (thread: 2972)\nexited bindings_get_context (thread: 2972)\nmiddle of getattr (already have context) (thread: 2972)\nbindings_dispatch (thread: 2040)\nbindings_call_op (thread: 2040)\ngetattr(/)\nend of getattr (thread: 2972)\nCreateFile status = 0\nCreate 0005\nCreateFile: \\desktop.ini\n        DesiredAccess: FILE_GENERIC_READ\n        ShareAccess: FILE_SHARE_DELETE|FILE_SHARE_WRITE|FILE_SHARE_READ\n        Disposition: FILE_OPEN (1)\n        Attributes: 0 (0x0)\n        Options: 100 (0x64)\nstart of getattr (thread: 2972)\nentered bindings_get_context(thread: 2972)\n!! fuse_get_context: 524285200 (thread: 2972)\nexited bindings_get_context (thread: 2972)\nmiddle of getattr (already have context) (thread: 2972)\nbindings_dispatch (thread: 2040)\nbindings_call_op (thread: 2040)\ngetattr(/desktop.ini)\nend of getattr (thread: 2972)\nCreateFile status = c0000034\nGetFileInfo 0004\nGetFileInfo: : \\\nstart of getattr (thread: 2972)\nentered bindings_get_context(thread: 2972)\n!! fuse_get_context: 524285360 (thread: 2972)\nexited bindings_get_context (thread: 2972)\nmiddle of getattr (already have context) (thread: 2972)\nbindings_dispatch (thread: 2040)\nbindings_call_op (thread: 2040)\ngetattr(/)\nend of getattr (thread: 2972)\n        result =  0\n        FileStandardInformation\n        DispatchQueryInformation result =  0\nCreate 0006\nCreateFile: \\\n        DesiredAccess: SYNCHRONIZE|FILE_READ_ATTRIBUTES|FILE_READ_DATA\n        ShareAccess: FILE_SHARE_DELETE|FILE_SHARE_WRITE|FILE_SHARE_READ\n        Disposition: FILE_OPEN (1)\n        Attributes: 0 (0x0)\n        Options: 32 (0x20)\nstart of getattr (thread: 2972)\nentered bindings_get_context(thread: 2972)\n!! fuse_get_context: 524285200 (thread: 2972)\nexited bindings_get_context (thread: 2972)\nmiddle of getattr (already have context) (thread: 2972)\nbindings_dispatch (thread: 2040)\nbindings_call_op (thread: 2040)\ngetattr(/)\nend of getattr (thread: 2972)\nCreateFile status = 0\nGetFileInfo 0004\nGetFileInfo: : \\\nstart of getattr (thread: 2972)\nentered bindings_get_context(thread: 2972)\n!! fuse_get_context: 524285360 (thread: 2972)\nexited bindings_get_context (thread: 2972)\nmiddle of getattr (already have context) (thread: 2972)\nbindings_dispatch (thread: 2040)\nbindings_call_op (thread: 2040)\ngetattr(/)\nend of getattr (thread: 2972)\n        result =  0\n        FileBasicInformation\n        DispatchQueryInformation result =  0\nGetFileInfo 0006\nGetFileInfo: : \\\nstart of getattr (thread: 2972)\nentered bindings_get_context(thread: 2972)\n!! fuse_get_context: 524285360 (thread: 2972)\nexited bindings_get_context (thread: 2972)\nmiddle of getattr (already have context) (thread: 2972)\nbindings_dispatch (thread: 2040)\nbindings_call_op (thread: 2040)\ngetattr(/)\nend of getattr (thread: 2972)\n        result =  0\n        FileBasicInformation\n        DispatchQueryInformation result =  0\nCleanup 0004\nCleanup: \\\nGetFileInfo 0006\nGetFileInfo: : \\\nstart of getattr (thread: 2972)\nentered bindings_get_context(thread: 2972)\n!! fuse_get_context: 524285360 (thread: 2972)\nexited bindings_get_context (thread: 2972)\nmiddle of getattr (already have context) (thread: 2972)\nbindings_dispatch (thread: 2040)\nbindings_call_op (thread: 2040)\ngetattr(/)\nend of getattr (thread: 2972)\n        result =  0\n  unknown type:55\n        DispatchQueryInformation result =  c000000d\nClose 0004\nClose: \\\nCreate 0007\nCreateFile: \\\n        DesiredAccess: FILE_READ_ATTRIBUTES\n        ShareAccess: FILE_SHARE_DELETE|FILE_SHARE_WRITE|FILE_SHARE_READ\n        Disposition: FILE_OPEN (1)\n        Attributes: 0 (0x0)\n        Options: 2097152 (0x200000)\nstart of getattr (thread: 2972)\nentered bindings_get_context(thread: 2972)\n!! fuse_get_context: 524285200 (thread: 2972)\nexited bindings_get_context (thread: 2972)\nmiddle of getattr (already have context) (thread: 2972)\nbindings_dispatch (thread: 2040)\nbindings_call_op (thread: 2040)\ngetattr(/)\nend of getattr (thread: 2972)\nCreateFile status = 0\nFindFiles 0006\nFindFiles: \\\nstart of getattr (thread: 2972)\nentered bindings_get_context(thread: 2972)\n!! fuse_get_context: 524285456 (thread: 2972)\nexited bindings_get_context (thread: 2972)\nmiddle of getattr (already have context) (thread: 2972)\nbindings_dispatch (thread: 2040)\nbindings_call_op (thread: 2040)\ngetattr(/)\nend of getattr (thread: 2972)\nstart of readdir (thread: 2972)\nentered bindings_get_context(thread: 2972)\n!! fuse_get_context: 524285456 (thread: 2972)\nexited bindings_get_context (thread: 2972)\nmiddle of readdir (already have context) (thread: 2972)\nbindings_dispatch (thread: 2040)\nbindings_call_op (thread: 2040)\nreaddir(/)\nstart of getattr (thread: 2040)\nentered bindings_get_context(thread: 2040)\n!! fuse_get_context: null  (thread: 2040)\nPID 2628 received SIGSEGV for address: 0xc26e1c1d\n```. @mafintosh if you could read through some of this it would be greatly appreciated -- I think it will be much easier for you to find out exactly what is wrong. Specifically, I am very confused about how fuse-bindings keeps track of the fuse context when commands come in on multiple threads, but some insight into that would be very helpful\nhttps://github.com/dokan-dev/dokany/issues/465#issuecomment-284100511 is the most relevant comment. @marinkobabic ok I have added the debug lines, but I am unsure how to build the installer so I can install the rebuilt version of Dokany. After rebuilding all in visual studio, I ran a search for all .exe files but could not find the generated installer anywhere. Please advise. @Liryna it doesn't seem to be possible to replace the files because the driver has them \"in use\". Even when I try in safe mode it says \"The action can't be completed because the folder or a file in it is open in another program\". @Liryna thanks!\n@marinkobabic here it is with the debug output you requested:\nedit: I also tried with the number of threads set to 1 in dokanfuse.h but still get the same error. Interestingly, even with the number of threads set to 1, the dokan commands are always executed on one thread (thread A), and the bindings_dispatch and bindings_call_op calls are always on another thread (thread B). This might be because of how the asynchronous js calls work, though.\n```\nCreate 0015\nCreateFile: \\\n        DesiredAccess: FILE_READ_ATTRIBUTES\n        ShareAccess: FILE_SHARE_DELETE|FILE_SHARE_WRITE|FILE_SHARE_READ\n        Disposition: FILE_OPEN (1)\n        Attributes: 0 (0x0)\n        Options: 2097152 (0x200000)\ncur_impl_chain_link = -1896876904 (thread: 3420)\nstart of getattr (thread: 3420)\nentered bindings_get_context(thread: 3420)\n!! fuse_get_context: -1896876896 (thread: 3420)\nexited bindings_get_context (thread: 3420)\nmiddle of getattr (already have context) (thread: 3420)\nbindings_dispatch (thread: 5684)\nbindings_call_op (thread: 5684)\ngetattr(/)\nend of getattr (thread: 3420)\ncur_impl_chain_link = NULL (thread: 3420)\nCreateFile status = 0\nCreate 0016\nCreateFile: \\desktop.ini\n        DesiredAccess: FILE_GENERIC_READ\n        ShareAccess: FILE_SHARE_DELETE|FILE_SHARE_WRITE|FILE_SHARE_READ\n        Disposition: FILE_OPEN (1)\n        Attributes: 0 (0x0)\n        Options: 100 (0x64)\ncur_impl_chain_link = -1896876904 (thread: 3420)\nstart of getattr (thread: 3420)\nentered bindings_get_context(thread: 3420)\n!! fuse_get_context: -1896876896 (thread: 3420)\nexited bindings_get_context (thread: 3420)\nmiddle of getattr (already have context) (thread: 3420)\nbindings_dispatch (thread: 5684)\nbindings_call_op (thread: 5684)\ngetattr(/desktop.ini)\nend of getattr (thread: 3420)\ncur_impl_chain_link = NULL (thread: 3420)\nCreateFile status = c0000034\nGetFileInfo 0015\nGetFileInfo: : \\\ncur_impl_chain_link = -1896876744 (thread: 3420)\nstart of getattr (thread: 3420)\nentered bindings_get_context(thread: 3420)\n!! fuse_get_context: -1896876736 (thread: 3420)\nexited bindings_get_context (thread: 3420)\nmiddle of getattr (already have context) (thread: 3420)\nbindings_dispatch (thread: 5684)\nbindings_call_op (thread: 5684)\ngetattr(/)\nend of getattr (thread: 3420)\ncur_impl_chain_link = NULL (thread: 3420)\n        result =  0\n        FileBasicInformation\n        DispatchQueryInformation result =  0\nCreate 0017\nCreateFile: \\\n        DesiredAccess: SYNCHRONIZE|FILE_READ_ATTRIBUTES|FILE_READ_DATA\n        ShareAccess: FILE_SHARE_DELETE|FILE_SHARE_WRITE|FILE_SHARE_READ\n        Disposition: FILE_OPEN (1)\n        Attributes: 0 (0x0)\n        Options: 32 (0x20)\ncur_impl_chain_link = -1896876904 (thread: 3420)\nstart of getattr (thread: 3420)\nentered bindings_get_context(thread: 3420)\n!! fuse_get_context: -1896876896 (thread: 3420)\nexited bindings_get_context (thread: 3420)\nmiddle of getattr (already have context) (thread: 3420)\nbindings_dispatch (thread: 5684)\nbindings_call_op (thread: 5684)\ngetattr(/)\nend of getattr (thread: 3420)\ncur_impl_chain_link = NULL (thread: 3420)\nCreateFile status = 0\nCleanup 0015\nCleanup: \\\ncur_impl_chain_link = -1896876616 (thread: 3420)\ncur_impl_chain_link = NULL (thread: 3420)\nGetFileInfo 0017\nGetFileInfo: : \\\ncur_impl_chain_link = -1896876744 (thread: 3420)\nstart of getattr (thread: 3420)\nentered bindings_get_context(thread: 3420)\n!! fuse_get_context: -1896876736 (thread: 3420)\nexited bindings_get_context (thread: 3420)\nmiddle of getattr (already have context) (thread: 3420)\nbindings_dispatch (thread: 5684)\nbindings_call_op (thread: 5684)\ngetattr(/)\nend of getattr (thread: 3420)\ncur_impl_chain_link = NULL (thread: 3420)\n        result =  0\n        FileBasicInformation\n        DispatchQueryInformation result =  0\nClose 0015\nClose: \\\ncur_impl_chain_link = -1896876616 (thread: 3420)\ncur_impl_chain_link = NULL (thread: 3420)\nCreate 0018\nCreateFile: \\\n        DesiredAccess: FILE_READ_ATTRIBUTES\n        ShareAccess: FILE_SHARE_DELETE|FILE_SHARE_WRITE|FILE_SHARE_READ\n        Disposition: FILE_OPEN (1)\n        Attributes: 0 (0x0)\n        Options: 2097152 (0x200000)\ncur_impl_chain_link = -1896876904 (thread: 3420)\nstart of getattr (thread: 3420)\nentered bindings_get_context(thread: 3420)\n!! fuse_get_context: -1896876896 (thread: 3420)\nexited bindings_get_context (thread: 3420)\nmiddle of getattr (already have context) (thread: 3420)\nbindings_dispatch (thread: 5684)\nbindings_call_op (thread: 5684)\ngetattr(/)\nend of getattr (thread: 3420)\ncur_impl_chain_link = NULL (thread: 3420)\nCreateFile status = 0\nGetFileInfo 0017\nGetFileInfo: : \\\ncur_impl_chain_link = -1896876744 (thread: 3420)\nstart of getattr (thread: 3420)\nentered bindings_get_context(thread: 3420)\n!! fuse_get_context: -1896876736 (thread: 3420)\nexited bindings_get_context (thread: 3420)\nmiddle of getattr (already have context) (thread: 3420)\nbindings_dispatch (thread: 5684)\nbindings_call_op (thread: 5684)\ngetattr(/)\nend of getattr (thread: 3420)\ncur_impl_chain_link = NULL (thread: 3420)\n        result =  0\n  unknown type:55\n        DispatchQueryInformation result =  c000000d\nGetFileInfo 0018\nGetFileInfo: : \\\ncur_impl_chain_link = -1896876744 (thread: 3420)\nstart of getattr (thread: 3420)\nentered bindings_get_context(thread: 3420)\n!! fuse_get_context: -1896876736 (thread: 3420)\nexited bindings_get_context (thread: 3420)\nmiddle of getattr (already have context) (thread: 3420)\nbindings_dispatch (thread: 5684)\nbindings_call_op (thread: 5684)\ngetattr(/)\nend of getattr (thread: 3420)\ncur_impl_chain_link = NULL (thread: 3420)\n        result =  0\n        FileBasicInformation\n        DispatchQueryInformation result =  0\nFindFiles 0017\nFindFiles: \\\ncur_impl_chain_link = -1896876648 (thread: 3420)\nstart of getattr (thread: 3420)\nentered bindings_get_context(thread: 3420)\n!! fuse_get_context: -1896876640 (thread: 3420)\nexited bindings_get_context (thread: 3420)\nmiddle of getattr (already have context) (thread: 3420)\nbindings_dispatch (thread: 5684)\nbindings_call_op (thread: 5684)\ngetattr(/)\nend of getattr (thread: 3420)\nstart of readdir (thread: 3420)\nentered bindings_get_context(thread: 3420)\n!! fuse_get_context: -1896876640 (thread: 3420)\nexited bindings_get_context (thread: 3420)\nmiddle of readdir (already have context) (thread: 3420)\nbindings_dispatch (thread: 5684)\nbindings_call_op (thread: 5684)\nreaddir(/)\nstart of getattr (thread: 5684)\nentered bindings_get_context(thread: 5684)\n!! fuse_get_context: null  (thread: 5684)\nPID 5696 received SIGSEGV for address: 0xdcea1c1d\n```. > To fix the issue the callback has to use the context of the original request.\n@marinkobabic in a high level way do you think you could describe a way of fixing this? My idea is to use a globally (cross thread) accessible stack (guarded by a mutex) to get the current context when executing callbacks -- popping off the stack would yield the most recently created context, which should be the right one? Does that make sense?\n. @marinkobabic thanks for all your help. I have provided this information to the author but I don't think he is going to try to fix any time soon so it falls to me.\nI've been playing around with the technique of caching the last (and even the 2nd to last and 3rd to last) context and loading this when fuse_get_context returns null. The problem is that the only contexts that are available are the ones from the previous getattr call and the readdir call. In other words, fuse_get_context is never called for the weird/nested getattr call, so the thing I want to cache is never retrieved in the first place. So maybe what I need to do is when fuse_get_context returns null, I need to force the other thread to run fuse_get_context and give me (on this thread) the result. That is assuming that it matters which thread calls fuse_get_context.\nIntuitively I would think that no matter what thread is executing, calling fuse_get_context should return the context for the most recently started FUSE command (even if it started on a different thread). Is this not the case?\n```\nstart of getattr (thread: 244)\n!! fuse_get_context: -739249104 (thread: 244)\ncaching binding!!! binding num: 18 (thread: 244)\nmiddle of getattr (already have context) (thread: 244)\ngetattr(/)\nend of getattr (thread: 244)\ncur_impl_chain_link = NULL (thread: 244)\nCreateFile status = 0\nFindFiles 0006\nFindFiles: \\\ncur_impl_chain_link = -739248856 (thread: 244)\nstart of getattr (thread: 244)\n!! fuse_get_context: -739248848 (thread: 244)\ncaching binding!!! binding num: 19 (thread: 244)\nmiddle of getattr (already have context) (thread: 244)\ngetattr(/)\nend of getattr (thread: 244)\nstart of readdir (thread: 244)\n!! fuse_get_context: -739248848 (thread: 244)\ncaching binding!!! binding num: 20 (thread: 244)\nmiddle of readdir (already have context) (thread: 244)\nreaddir(/)\nstart of getattr (thread: 4512)\n!! fuse_get_context: null  (thread: 4512)\nrecovering old old binding!!! binding num: 19 (thread: 4512)\nmiddle of getattr (already have context) (thread: 4512)\n```\nupdate: partially answered my own question... looks like the whole context queue is thread-local, so if you try to access context that was started on a different thread, you will never be able to get it:\n```C++\nifdef _MSC_VER\n__declspec(thread) impl_chain_link *cur_impl_chain_link = nullptr;\nelse\nstatic __thread impl_chain_link *cur_impl_chain_link = NULL;\nendif\n```. @marinkobabic \n\nThis method tries to get the context on thread 2 which does not exist.\n\nshould that context exist, but on thread 1?. @marinkobabic so I just tried creating a blank/default context and using that when fuse_get_context returns NULL and now I can open the drive and everything works fine!!!!!!!!!! Do you think this is a sustainable solution?\nupdate: in explorer, it always says file size is 0 (even though reads succeed), probably because that is in the context I need :cry: \nupdate 2: sometimes when reading a file I get \"insufficient system resources\" message and the read fails. Performance is extremely slow in general. Maybe some sort of memory leak? Or debug code could just be crippling the VM I'm in.\nalso might be relevant: the Dokan drive in explorer always shows as having 0 bytes used 0 bytes free. Don't know if this could be a symptom of some other issue.. @marinkobabic that is correct -- fuse-bindings works perfectly on other filesystems (in Linux and on OSX), so the problem is just with Dokany.\nI will try to do what you said but would greatly appreciate some help writing this patch. Here are some questions I have:\n\n\n\nadd a function pointer argument to find_files\n\n\nwhere do we define the function being pointed to -- just static in the global namespace?\nno arguments or return type, I'm assuming? something like static void fix_context();?\nI don't understand why we are creating a function pointer instead of just calling the function directly, so I probably don't understand something more important here\n\n\n\n\nThe code behind the pointer will execute impl_chain_guard guard(impl, DokanFileInfo->ProcessId);\n\n\nwhat is impl? Is it a local variable in walk_directory or find_files? I can't seem to find it\nwhatever it is, do I need to pass it to the function that we are pointing to?\n\n\n\n\nIf not the new functional pointer will be called\n\n\nagain, does it need any arguments?. @marinkobabic thanks -- my attempt to cache and then load the context seemingly resulted in a deadlock as well, now that I think about it.\n\n\n\n@Rondom I could be wrong but I think the problem is that for the problematic getattr call, fuse_get_context() is never called on the original thread. I have no idea why. Everything to do with that call simply comes in on an alternate thread, which always returns NULL for fuse_get_context(). \nIn general, I think the reason we are dealing with a new thread for executing the callbacks is so that the callbacks can be executed asynchronously. For example if someone had to implement read file by waiting for the result of a network operation, and then returning this data. If we simply blocked, then the network operation could not be performed, since networking in node.js (and other IO operations) are typically non-blocking and asynchronous. Does that help at all?\nJust so you guys know, I tried replacing all references to Dokany in fuse-bindings with references to WinFsp (a competing library: https://github.com/billziss-gh/winfsp), and I was able to get this working almost immediately. Maybe they handle these sub-calls differently in a way that has less threading requirements for wrapping libraries? Perhaps they are doing something differently that you could copy lol?. @Rondom @marinkobabic in that case, would be extremely grateful if you guys figure out a way around that deadlock and get this working!!!!! :heart:. @Rondom thanks!. @marinkobabic ok thanks I will try and let you know!. @marinkobabic thanks! -- going to try your code today also. Guys thanks again for all of your help, especially @marinkobabic who has spent time writing code for this, as well as @Rondom, and @Liryna. Because of time constraints I have on this project, I have ended up going ahead with WinFsp instead of Dokany because on the WinFsp side of things I have all of this working and unfortunately I cannot afford to spend additional time on Dokany at the moment.\nI will be issuing a pull request to fuse-bindings soon that allows choosing between WinFsp and Dokany (maybe using an environment variable that is picked up by node-gyp or by automatically detecting which driver is available on the host system). I think this will make everyone happy and will give users the most flexibility possible. Another option might be having separate fuse-bindings and fuse-bindings-winfsp projects, but I think it would be neater to have one project that supports both.\nAs some general feedback, I will say that the process of integrating with WinFsp has been significantly easier than fixing the existing fuse-bindings implementation that used Dokany, so there may be some things about that project that would be good for the Dokany team to emulate. I'm not advanced enough to know what made it easier specifically, but in general, things have just been really easy to get working, and there is significantly less WinFsp-specific code in my branch of fuse-bindings than there was for Dokany.\n@marinkobabic I will definitely revisit this code in the near future so we can hopefully get both WinFsp and Dokany working again with fuse-bindings. Then people can choose which implementation to use based solely on performance :smiling_imp: . @Liryna ok will do.. @marinkobabic out of curiosity what are the implications of a fuse file system not being multithreaded? Does this mean that only one process can interact with the fs at a time, or is it something more subtle?. @Liryna @marinkobabic thanks for the explanation -- this is what I thought it meant (but hoped it didnt lol).. this has now been finally merged on the fuse-bindings side. @Liryna will do -- a bit behind on a few other projects but will get back to this probably once I finish up with my thesis. ",
    "KromDaniel": "Hey everybody, is this issue already fixed? (Or close to be fixed)?. ",
    "kubinator": "Thank you, Rondom\nYes, I am returning NTSTATUS errors. I've read this wiki page and it really helped to solve compillation level problems. But it does not help with new runtime errors though((. Yes, this can be closed. I've found my mistakes.. ",
    "cocowalla": "I believe you are referring to the FileSpy minifilter driver? It would need a fair amount of changes made to it to allow the required callbacks, and also so it could provide information on which user made the changes. Plus I'd need to take care of signing the driver myself, which I think needs an EV signature these days for Windows 10.\nIf it's the SysInternals Process Monitor you mean, I don't think that allows other programs to register callbacks.. I'm not sure exactly; it certainly looks like it could at least serve as a base.\nCan it monitor existing volumes (that is, without having to create a mirror volume that files must be written to)? I'd want end users not to notice any difference in explorer etc\nAlso, how do .NET programs communicate with the user mode FS driver? Do you have to use comunication ports like you would with a minifilter  driver?\nAre there any signing requirements for the user mode driver, or are these only required for the kernel mode driver?\nSorry for so many questions at once!. That's what I thought, seems like a minifilter is my only option!\nThanks for your quick and detailed responses, Dokany looks great and I'm going to be looking hard for an excuse to use it on the 1st suitable project that comes along!. ",
    "pp111": "Hello, I am having the same problem with the Windows 7 Details pane and Microsoft Word 2010. After the docx file is loaded in the details pane I must wait some time to be able to open the file in write mode. Did you find a workaround for this issue?. Same issue here but saving .doc files with Office 2007. To reproduce it just mount with the mirror example, open a .doc file, change something and save it (It must be .doc since .docx works ok) The mirror application hangs, word hangs, explorer and other applications using the mirrored drive hangs (no error message or BSOD). Finally a reboot is needed.\nGoing back to version 1.0.4.1000 fixed the issue, so it seems to be some change introduced in 1.0.5.1000\nI can provide the mirror logs if you need it.\n. ",
    "d-hoke": "code review\nOn https://github.com/dokan-dev/dokany/commit/a0d81b09a3335607546d2a4bd93fe919d1822e93, \nare all members of the DeviceExtension being set by some other means now? \n(I see you added an assignment to ->MountId.)\nDid you verify that all DOKAN_GLOBAL members are now initialized with that addition (and having removed the RtlZeroMemory()) ? \nRegarding the the delete (https://github.com/dokan-dev/dokany/commit/a56a217d39edcdd5ca1bf61f839a1ac0caa0c5d1), the one you added looks Ok, \nbut there are other areas in DriverEntry() code that may err where it should probably also be done as well (in DriverEntry, other setup after return from call to DokanCreateGlobalDiskDevice() ).\nI see at least:\npotential failure of \n  fastIoDispatch = ...;\n  FsRtlRegisterFileSystem()\n  DokanLookasideCreate() x 3\nAnd, is there any overhead to any of the other init'd DOKAN_GLOBAL items that should have cleanup added as well, before the deviceObject (and thus deviceExtension) is deleted?\nThis should probably be another issue, \nbut I noticed while reviewing that DokanCreateGlobalDiskDevice() does not properly cleanup extraneous items (fsDiskDeviceObject, fsCdDeviceObject) if failure occurs there on IoCreateSymbolicLink(), where it deletes the deviceObject only...\n. Don't immediately see anything wrong with what you've done, but I'm tired at the moment so may review again later.  That said...\nOne more thing I see (saw before, suspicious, but forgot), is the use of ObReferenceObject(deviceObject) in DokanCreateGlobalDiskObject().\nIt appears that the deviceObject is never unreferenced, which I think means it won't ever actually be deleted, based on information @ \"https://msdn.microsoft.com/en-us/library/windows/hardware/ff549083%28v=vs.85%29.aspx\", \"When a driver calls IoDeleteDevice, the I/O manager deletes the target device object if there are no outstanding references to it.\nSo, at any of the IoDeleteDevice(deviceObject) after ObReferenceObject(), I think ObDereferenceObject() has to be called beforehand.   (Maybe afterwards would work too, don't know.)\n. I see now, however, there may be a problem - as IoDeleteSymbolicLink() is apparently supposed to be called at PASSIVE_LEVEL, which I think would not be the case with the KeEnterCritical/KeLeaveCritical enclosure.\n. Acquire/Release <= APC_LEVEL maybe not directly a problem - BUT, docs indicate they SHOULD be called with 'normal kernel APC delivery disabled'.  And I don't see where that's happening in current code.  Is it but I've overlooked it?\nSo, IF KeEnterCriticalRegion() addition does NOT actually raise IRQL level, then it needs to be 'surrounding' (along with /KeLeaveCriticalRegion()) the held 'resource' for the complete duration of its 'hold'.  And, if it does not raise IRQL, then calling the IoDeleteSymbolicLink() is not a problem, since IRQL presumably would still remain at passive...\nQ's to answer:\n1)Is there a KeEnterCriticalRegion() 'active' before the 'Acquire' and held until after the 'Release' (that I've overlooked)?  If there is one active, then probably all is good as is.\n2) But, if there is not one currently active, then does KeEnterCriticalRegion() raise IRQL above the PASSIVE_LEVEL you currently see?  If it does NOT raise IRQL, then KeEnterCriticalRegion()/KeLeaveCriticalRegion() can be added appropriately within the routine to surround the holding of the resource, and all should be good.\n3)But, if KeEnterCriticalRegion() raises IRQL above the current PASSIVE_LEVEL, all is BAD, as with current code there appears no reasonable way to perform the IoDeleteSymbolicLink() at PASSIVE_LEVEL, since its performed while the resource is held, and the resource must be held with the normal APC delivery disabled...\nI'm hoping per (2), that we find KeEnterCriticalRegion() does NOT raise the IRQL, something I haven't (yet) been able to determine either from MSDN docs nor quick searches elsewhere...  This post (http://comp.os.ms-windows.programmer.nt.kernel-mode.narkive.com/jKohPf6S/keentercriticalregion-vs-apc-level) does seem to IMPLY normal APC delivery is blocked by KeEnterCriticalRegion() withOUT raising IRQL...\nOk, this (https://books.google.com/books?id=w65CAwAAQBAJ&pg=PT200&lpg=PT200&dq=keentercriticalregion+change+irql+level&source=bl&ots=4Ws-p5WhUr&sig=J06AuVXcbj9-bIdH_H7VQrnrgMY&hl=en&sa=X&ved=0ahUKEwiBxa_nn-zSAhWZ0YMKHeq2C6kQ6AEIUjAJ#v=onepage&q=keentercriticalregion%20change%20irql%20level&f=false)\nseems to further support the notion that (2) is appropriate solution, (1) is not found to already be the case.. On WindowsXP, a simple test I performed in a driver learning project indicates that KeEnterCriticalRegion does NOT change the irql from PASSIVE_LEVEL.\nSo it appears the change suggested in item (2) in my previous post are legal and may be needed, if there is not already a KeEnterCriticalRegion()/KeLeaveCriticalRegion() active that I overlooked.... I can probably code it, but as before, I am not able to build it or test it within its current domain.  (I have been hacking at a version to run in WinXP, but do not yet have a functioning version there either.). ",
    "blesliecan": "I am also getting a BSoD when running winfstest on a Windows 10 x64 machine.\nCreated an empty folder C:\\dokan\nStart mirror:  mirror.exe /r C:\\dokan /l M:\nRun test from: run-winfstest.bat . M:\\test\nGet BSoD when running the first test.\nFrom dump I see:\n033117-29890-01.dmp 2017-03-31 7:15:05 AM   UNEXPECTED_KERNEL_MODE_TRAP 0x0000007f  0000000000000008   fffff801a6383e70   ffffad0044830f70   fffff801a42af3a6   ntoskrnl.exe    ntoskrnl.exe+14e7c0                 x64 ntoskrnl.exe+14e7c0                 C:\\WINDOWS\\Minidump\\033117-29890-01.dmp 8   15  14393   412,996 2017-03-31 7:19:28 AM   \n. For what it is worth I also ran mirror in single thread mode with the same effect: BSoD.\nI used the /d /s and did a redirect to a log but the log was trashed when the system crashed.. Yes I am using 1.0.3.\nDo you really want me to upload a 1G memory dump? \nI am also not sure I want to place a memory dump from my machine in a public forum.\n. That makes more sense. :)\n033117-38359-01.zip\n. ",
    "DHARANIDHARAN993": "I have installed the latest version of  dokan and tried the same. NFS sharing options is not showing in properties. And Also i tried using Powershell Command as the same. No luck. \nDokan Version: \nDriver path: 'C:\\Windows\\system32\\drivers\\dokan1.sys'\ndokanctl : Mar 24 2017 14:25:11\nDokan version : 100\nDokan driver version : 0x190\nCommand Used to Mount Virtual Drive : mirror.exe /r C:\\dokany-0.6.0  /l Z\nBelow image is the properties of the created Drive and  doesn't Contain NFS sharing Option. \nInstruct me if I did anything wrong.\nThanks\n\n. Thank you @Liryna for your answer !\nFYI ..\nI have tried the older version say 0.6. After mounting,the virtually mounted drive file system is DOKAN. Then I changed the file system from DOKAN to NTFS. After this, NFS sharing option is showed in Drive properties but NFS sharing is not working. Then I tried the same with later version,i cant find NFS sharing option.\nSo i suspect that there is no reason to hide NFS option from windows. I think we missing some properties in Mirror source Code.\nAnd Also i tried mounting with option /o. Result is same.I cant find any mirror logs while executing mirror. \nMy Requirement is Need to do NFS share on Virtually Mounted Drive. Any Other Alternate way is also welcome. . I have attached the Mirror logs and Kernel Logs.\nMirror.txt\nKernalMirrorLog.txt\n. ",
    "A4Abinash": "Actually the issue is with the Windows NFS Server itself. Server for NFS works only for physical folders, thus for virtual drive folders the NFS sharing does not work. \nThough i tried creating a mirror between a physical drive and already mounted virtual drive which failed. Is there any way we can provide NFS sharing for virtual drives created using DOKAN.. ",
    "brunoklein99": "Yes, thank you.\nOn May 1, 2017 5:30 AM, \"Liryna\" notifications@github.com wrote:\n\n@brunoklein99 https://github.com/brunoklein99 can this be closed ?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/497#issuecomment-298304781,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AK1SCJphrE39SR-vj3h8mZN66JPjcY1Eks5r1ZgegaJpZM4NFH1a\n.\n. \n",
    "nguyendotuong": "It still has no new mounted disk drive. . ",
    "armitatz": "\u200bactually it was fixed after I stopped the squid service on the linux side.\nIt must had a conflict of some kind. I stopped the squid service on ubuntu\n16.04 and after that it was connecting again.\n\u200b\n2017-05-11 2:19 GMT+03:00 Andreas Gnau notifications@github.com:\n\nThis is only a filesystem library that win-sshfs uses.\n@Foreveryone-cz/win-sshfs is the tool you are probably using. Given that it\nis a connection issue it is most probably with win-sshfs and not an issue\non the Dokany side.\nShould it turn out to be an actual issue with the filesystem, you can\nalways come back here and report your filesystem issue, of course.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/506#issuecomment-300639239,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AbSD7EGOlT2P9xzSxQf7_0wNVNj4xlIfks5r4kXmgaJpZM4NXIez\n.\n. \n",
    "gsaxena888": "Hi, Just got back to this. So I don't think we care whether it's using jna, jni, or jnr, so long it's using latest stalbe dokany version and it works....Do we have such a wrapper? And if so, where could I go to get it? We can probably do some fixing/tweaking if it's not too deep into dokany API stuff (and more focused on Java issues)..... Cool. Would there be anyone interested in \"completing it\" :) It'd be a labor of love I'm sure, but we can contribute a little towards it's completion (and of course, all the code would go back into the open source community). What we'd be looking for, ideally, is a Java sample program that mimicks the \"mirror\" sample program that's provided with Dokan. . Ok cool. Just to be clear: we'd be happy to make $$ contributions to whoever has enough C++/Dokan/Java experience to polish it up. \nThat said, here's a really \"dumb\" question on my part: what makes creating the Java wrapper tricky? Isn't it just about creating a method wrapper for every C++ API, so it's just a lot of copy/paste? (I've never created a Java wrapper for an external program before, so forgive my complete ignorance of this as well as my ignorance of DokanFS....). ",
    "techtonik": "Awesom. =). ",
    "dpurdie": "Hi Liryan,\nThank you for taking the time to have a look at this issue.\nYes I am still seeing this issue.\nI have:\n\u00a0 Un-installed the components\n\u00a0 Rebooted\n\u00a0 Reinstalled components\u00a0\n\u00a0 Reboot\n\u00a0* Still see the issue\nI have also installed Windows 10 on another machine and have have the\nsame issue.\nOn Mon, 2017-06-05 at 05:08 -0700, Liryna wrote:\n\nHi @dpurdie ,\nI could not reproduce the issue you are facing.\nI also tried directly from explorer and this also worked.\nAre you still facing this issue ? At any moment ?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n{\"api_version\":\"1.0\",\"publisher\":{\"api_key\":\"05dde50f1d1a384dd78767c5\n5493e4bb\",\"name\":\"GitHub\"},\"entity\":{\"external_key\":\"github/dokan-\ndev/dokany\",\"title\":\"dokan-dev/dokany\",\"subtitle\":\"GitHub\nrepository\",\"main_image_url\":\"https://cloud.githubusercontent.com/ass\nets/143418/17495839/a5054eac-5d88-11e6-95fc-\n7290892c7bb5.png\",\"avatar_image_url\":\"https://cloud.githubusercontent\n.com/assets/143418/15842166/7c72db34-2c0b-11e6-9aed-\nb52498112777.png\",\"action\":{\"name\":\"Open in\nGitHub\",\"url\":\"https://github.com/dokan-\ndev/dokany\"}},\"updates\":{\"snippets\":[{\"icon\":\"PERSON\",\"message\":\"@Lir\nyna in #518: Hi @dpurdie ,\\r\\n\\r\\nI could not reproduce the issue you\nare facing.\\r\\nI also tried directly from explorer and this also\nworked.\\r\\n\\r\\nAre you still facing this issue ? At any moment\n?\\r\\n\"}],\"action\":{\"name\":\"View\nIssue\",\"url\":\"https://github.com/dokan-\ndev/dokany/issues/518#issuecomment-306172330\"}}}\n. \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
    "fpqc": "There is another project called go-fuse-c, which wraps the C bindings, but build that fails like this:\n```\n$ go get -u github.com/vgough/go-fuse-c/fuse\ngithub.com/vgough/go-fuse-c/fuse\nIn file included from ......\\mingw64\\src\\github.com\\vgough\\go-fuse-c\\fuse\\bridge.go:10:0:\n./wrapper.h:11:56: fatal error: fuse/fuse_lowlevel.h: No such file or directory\n #include   // IWYU pragma: export\n```\nevidently because dokan_fuse doesn't include header files for fuse_lowlevel. @Liryna yeah, it looks like you'd have to implement the go-fuse project directly for dokan, since it doesn't have any dependencies on the C implementation libfuse.\nMaybe writing a dokan go wrapper for go-fuse would be easier than getting the lowlevel part working, I don't know.  I'm not powerful enough at programming to be able to do it myself lol.. @Liryna does it implement dokan-fuse for go though?. @Liryna You can always get a VM preloaded with a recent insider build of Win10 here:\nhttps://developer.microsoft.com/en-us/microsoft-edge/tools/vms/\nWhere you choose \"MSEdge on Win10 x64 Preview ($buildnumber)\"\nI believe it tracks the slow ring. ",
    "cglong": "@Liryna Just as an aside, the link to the Go bindings is quite hidden. Might be good to promote that more \ud83d\ude42 Thanks for mentioning it though!. In fact actually I'd recommend that the unofficial Go binding be promoted to an official one and moved to this repo alongside the Ruby, etc. ones. You could probably even give the same team R/W access to it and they can continue the majority of the development \ud83d\ude42. > we can always create a \"dummy-repo\" linking to code and documentation for better visibility (I understand that this was your main point, right?)\n@Rondom, I think my main point was fundamentally that, when browsing the Dokan homepage, there's no mention of Go bindings available. I think an update to the homepage or a dummy repo would be a good mitigation for my concerns \ud83d\ude04. ",
    "SergiuPol": "Hopefully 2.0 will solve the performance problem met in scenarios with large number of IOs like opening large DOCX and PDF. Performance is a major concern and great challenge for those who write serious code.. @Corillian I would like to help but I have sysadmin background (thus Dokany power user) not a developer :)\nAppreciating the depth of your work, I don't dare making suggestions about writing code.\nWhen sysadmins meet such problems, as they cannot deep dive into the code to produce improvements there, typically they look for alternatives. As far as I know, this is rarely a good approach for developers. But who knows, maybe you find some ideas here:\nhttps://sourceforge.net/p/ext2fsd/code/ci/master/tree/\nhttps://github.com/Microsoft/GVFS\nAs far as I know, both the file systems above use the callback mechanism. . @Rondom sure it does! No doubt msf word and foxit pdf reader (probably many others) are io pigs :)\nI see not a single reason for reading an entire document in many sequential small reads instead of a few large reads, given the fact that viewers and editors typically fetch the entire file in memory. Thus I do not defend userspace applications writen amateuristic :)\nOh yes dokan can do something - forward all those requests asap to the back-end fs.\nLet's put this in another light: dokan + mirtor - are not a full-blown fs (that treats the file table, chunks, caching, journaling and fragmentation problems) but are more like a fs proxy - doubles the docx/pdf opening time. Isn't this perf penalty too much for its limited purpose ? :)\nDon't get me wrong. I do appreciate the work behind dokan! For many other use cases, it performs good. I am just ofering  my non-dev contribution to make dokan even better by providing feedback and suggestions from another view point.  \nSent from my HTC_M10h using FastHub. As far as I know, msf word io pattern is the same in the case of dokan and ntfs, just that dokan + mirror + ntfs is 2 times slower than ntfs directly.\nThus I would not spend time investigating the userspace app but the time spent in dokan.\nBut if you still want to be very, very sure that the root cause is in dokan, maybe @cdarau can write a few-lines app that reads the entire input file in small chunks and prints the total read time. Isolating the issue in this manner will give us maximum clarity.\nWhat do you think?\nSent from my HTC_M10h using FastHub. @Corillian The above issue refers to 1.0.3. After the signed 2.0 build will be ready, we will check if the problem is still there and let you know.. Great news! :)\nDoes this build solve the perf problem in the scenario with many IO operations?\nDoes it also send to the user-mode the lock type?\n10x!\nSergiu.. ",
    "sledgehammer999": "\nDo you know about FreeOTFE or LibreCrypt?\n\nYes. They are abandonware and don't seem to work for me. Also written in Pascal that I nothing of. Finally they don't provide signed drivers like dokany does.\n\nThere is a community-maintained version that adds support for other image formats. Not sure how difficult it is to provide support for your own.\n\nThis is very interesting. Can you give link to the community maintained version? I can't seem to be able to find it.\nSo it is apparent that dokany isn't what I am looking for. Thx for response. I am closing this.\n. ",
    "hkarakose": "Following is a screenshot from MirrorGetVolumeInformation. If I want to integrate to Dokan using JNI, is this the method that needs to be implemented in Java layer?\n\n. Yes, thanks.. I am just trying to learn the api, and how mirror.c works. I added a printf statement to this function and saw that this function is called. . Yes, thanks for the information.. OK, Thank you very much. Thanks for clarification. I updated as follows:\n...\n  if (wcsstr(filePath, L\"\\\\desktop.ini\") != NULL) {\n      return STATUS_ACCESS_DENIED;\n  }\n.... Yes, thank you.. ",
    "IvanKonov": "I think you should fix this bug. The situation when the disk mounts the service is not so rare. On my Win10x64 Explorer it is necessary to restart so that it sees the disk. Normal update or F5 does not help.. @linyuan870 Many thanks! This can help those who already have this process in session 1.\nPrompt, with what parameters it is necessary to cause function SHChangeNotify?. @Liryna Thank you. I have already been able to successfully use this method from the application manager of my service (C#)\n```      \npublic static void RefreshDrive(Char label_drive_s)\n        {\n            NativeMethods.MessageBroadcastRecipients message_broadcast_recipients = NativeMethods.MessageBroadcastRecipients.BSM_APPLICATIONS;\n            const UInt32 wm_devicechange = 0x0219;\n            const Int32 dbt_devicearrival = 0x8000;\n            const UInt32 dbt_devtyp_volume = 0x00000002;\n        NativeMethods.DEV_BROADCAST_VOLUME broadcast_volume = new NativeMethods.DEV_BROADCAST_VOLUME();\n        broadcast_volume.dbch_Size = (UInt32)Marshal.SizeOf(structure: broadcast_volume);\n        broadcast_volume.dbch_Devicetype = dbt_devtyp_volume;\n        broadcast_volume.dbch_Reserved = 0;\n        broadcast_volume.dbch_Unitmask = (UInt32)(1 << (Char.ToUpper(c: label_drive_s) - 'A'));\n        broadcast_volume.dbch_Flags = 0;\n\n        NativeMethods.BroadcastSystemMessage(\n            flags: NativeMethods.MessageBroadcastFlags.BSF_NOHANG | NativeMethods.MessageBroadcastFlags.BSF_NOTIMEOUTIFNOTHUNG | NativeMethods.MessageBroadcastFlags.BSF_FORCEIFHUNG,\n            lpInfo: ref message_broadcast_recipients,\n            Msg: wm_devicechange,\n            wParam: dbt_devicearrival,\n            lParam: broadcast_volume);\n    }. @linyuan870 Hello! This method calls BroadcastSystemMessage (user32.dll), and it works for me. Because I have a process in the system tray, and the service gives the command to this process to execute the method, while mounting the disk.. @marinkobabic, @Liryna Hello! Maybe you should make an alert from the driver? https://msdn.microsoft.com/en-us/library/windows/hardware/Dn613933(v=vs.85).aspx. explorer turns off and does not restart automatically.\n",
    "zhucaibing": "This problem happened to me also. The function BroadcastSystemMessage return success, but the volume not appeared in Explorer. My code need to run as a service, is there anyway to notify explorer in a service?. ",
    "naveen508": "Hi,\nDid you guys find any resolution for this issue? And may i know why this issue occurring in specific OSes?\nThanks. Hi,\nI tried installing the dokan using the below setup file on Windows 2012R2, 2008R2.\nhttps://github.com/dokan-dev/dokany/releases/download/v1.1.0.2000/DokanSetup_redist.exe\nBut the installation fails with an error Setup Failed: 0x80240017.\nI checked the respective log file and found the below lines:\n[00F4:010C][2018-04-10T18:53:50]i301: Applying execute package: Windows81_x64, action: Install, path: C:\\ProgramData\\Package Cache\\3ACBF3890FC9C8A6F3D2155ECF106028E5F55164\\packages\\Patch\\x64\\Windows8.1-KB2999226-x64.msu, arguments: '\"C:\\Windows\\SysNative\\wusa.exe\" \"C:\\ProgramData\\Package Cache\\3ACBF3890FC9C8A6F3D2155ECF106028E5F55164\\packages\\Patch\\x64\\Windows8.1-KB2999226-x64.msu\" /quiet /norestart'\n[00F4:010C][2018-04-10T18:53:52]e000: Error 0x80240017: Failed to execute MSU package.\n[0EDC:0CB0][2018-04-10T18:53:52]e000: Error 0x80240017: Failed to configure per-machine MSU package.\n[0EDC:0CB0][2018-04-10T18:53:52]i319: Applied execute package: Windows81_x64, result: 0x80240017, restart: None\n[0EDC:0CB0][2018-04-10T18:53:52]e000: Error 0x80240017: Failed to execute MSU package.\nIt looks like, installation getting failed while installing a windows update called KB2999226. Further noticed that, this update requires prerequisite update called KB2919355. These are all dependent on each other and blocking the VC 2017 redist installation. \nAfter all, I have copied the ucrt dlls into System Directory(C:/Windows/System32) and proceed manual installation of dokan (1.1.0.2000). Now everything working fine without any issues. So, i just want to confirm whether this is the correct way (say without installing the VC2017 redist just copying ucrt libraries) or any issues might occur in future?. Yes. We cannot proceed VS2017 installation on Windows servers < 10 (not having the mentioned updates i.e., KB2919355, KB2999226). You can check in your test environment if possible.\nSo, please tell me whether not having VS2017 redist instead having the ucrt dlls copied to system directory will be okay or we might face issues in future?. Or let me please know is there any other way to resolve this installation issue.. Sorry for the miscommunication happened. Please be noticed that the log attached previously belongs to VS2017 redist log and not the dokan installer log. \nAnd also please be notified the installation is getting failed because the VS2017 redist is dependent on the above updates(KB2919355, KB2999226). Without these updates we are not able to install VS2017 redist.\nAs the dokan trying to install and need VS2017 redist , whole process the installation of VS2017 redist and Dokan 1.1.0.2000 setup as well failing. Please suggest me whether we compulsory need VS2017 redist for using dokan or having ucrt libraries alone in the server is enough. \nIf VS2017 redist is mandatory then what should be my next step, please suggest.. ",
    "oguimbal": "@marinkobabic Thanks ! I beleive you are refering to this one ? (i got one this morning)\nPAGE_FAULT_IN_NONPAGED_AREA at\n00 fffff880`02c01278 fffff800`0334e40e nt!KeBugCheckEx\n01 fffff880`02c01280 fffff800`032ce5ee nt! ?? ::FNODOBFM::`string'+0x3bc5f\n02 fffff880`02c013e0 fffff800`032c6f40 nt!KiPageFault+0x16e\n03 fffff880`02c01578 fffff800`032e5b53 nt!memmove+0xb0\n04 fffff880`02c01580 fffff800`032d3b4a nt!IopCompleteRequest+0x5a3\n05 fffff880`02c01650 fffff880`056a276a nt!IopfCompleteRequest+0x66a\n06 fffff880`02c01740 fffff880`056a1e0c dokan1!DokanCompleteIrpRequest+0x2a [e:\\islog\\dev\\app\\dokan\\dokany\\sys\\dokan.c @ 461]\n07 fffff880`02c01770 fffff880`056a263c dokan1!DokanDispatchDeviceControl+0x1e0 [e:\\islog\\dev\\app\\dokan\\dokany\\sys\\device.c @ 1022]\n08 fffff880`02c017d0 fffff880`056a23e7 dokan1!DokanDispatchRequest+0x204 [e:\\islog\\dev\\app\\dokan\\dokany\\sys\\dispatch.c @ 141]\n09 fffff880`02c01800 fffff800`035e03da dokan1!DokanBuildRequest+0x67 [e:\\islog\\dev\\app\\dokan\\dokany\\sys\\dispatch.c @ 45]\n0a fffff880`02c01850 fffff800`035f45ba nt!IopSynchronousServiceTail+0xfa\n0b fffff880`02c018c0 fffff800`035f4656 nt!IopXxxControlFile+0xc27\n0c fffff880`02c01a00 fffff800`032cf753 nt!NtDeviceIoControlFile+0x56\n0d fffff880`02c01a70 00000000`76febdaa nt!KiSystemServiceCopyEnd+0x13\n0e 00000000`21298528 00000000`00000000 0x76febdaa. ",
    "NikbakhtMehdi": "Hi tanks for your response\nI want use it for logging events such create delete and etc on drives (C:\nD: ...) without mount new drive with mirror.exe\nthanks a lot\nOn Sat, Jun 24, 2017 at 4:56 PM, Liryna notifications@github.com wrote:\n\nHi @NikbakhtMehdi https://github.com/nikbakhtmehdi ,\nDokan is a Kernel driver and not a MiniFilterDriver. What do you want to\ndo with a MiniFilterDriver ?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/539#issuecomment-310835668,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ARYrGxNeJ2FDV-czgwKObX3fsswuK2hmks5sHQCDgaJpZM4OETx7\n.\n. I want use it in my application. yes. I checked it before but i must sign that.\nI want use dokany for some reasons. Can register MajorFunctions on Global registered Device?. I can't find signed Minispy driver.\nCan we do register MajorFunctions on Global registered Device?. \n",
    "ebekker": "@Liryna -- are the stability/performance issues cited by @cdarau an artifact of the FUSE wrapper, or do you think they are pby tied deeper into the actual Dokan library?. This is not FUSE-specific (so maybe I should post this discussion in another ticket?) but can you indicate how you feel about Dokan's performance?  I didn't see if there were any benchmarks tested or published in this repo, so I'm thinking about doing some tests, but wanted to make sure I wasn't already duplicating existing work.\nWhat I'm looking to get out of this for myself, is to see if the performance of going through Dokan as a filesystem is comparable to going through the native filesystem direclty or what would the marginal increase in overhead (decrease in throughput) typically amount to?  Obviously this is heavily dependent on what the underlying Dokan FS impl is doing, but assuming that is super fast and efficient, how performant is the \"Dokan layer\".\n. Thank you for the insight!  I'm thinking about using Dokan to write a FS in Dokan that would ultimately map back to a regular file or set of files on a host's local disk but perform encryption.\nI know there are some other projects that use Dokan for something along these lines already (e.g. Keybase) but these have typically been for \"special-purpose\" and light use, for example store a few hundred text files or documents that get used infrequently.\nMy goal is to provide a FS that can support heavy and sustained use, such as the backing store for a database server or application server.  I've worked with commercial offerings in this space before and they typically incur a 10%-15% performance penalty over writing to the disk directly to account for the encryption and access-control checks.\n. ",
    "jimuk": "Hi @Liryna,\nDorkan is great and has a very clear and straight forward API. This allows almost any information to be represented as a Windows friendly file system and explored/managed using familiar tools like Explorer.\nHowever, the flip side of this simplicity is that there are a very limited number of ways to interact with a file and it's metadata. For instance, SetFileTime() supports exactly 3 timestamps but some file systems may have more (NTFS has 4 or more if you could additional \"hidden\" metadata). \nThe IOCTL interface would would allow Dorkan to be used as the basis for more complex integrations. At a basic level information for the underlying system (think SQL or another \"alien\" file system) would appear as a regular Windows file system but applications on top of this layer could use the IOCTL mechanism to query additional features and metadata by \"tunneling\" this information through Dorkan. \nI think I could probably write a patch to add this feature but before I started on this I wanted to check if it t had been discussed before and if it was likely to be accepted by the community.\nI hope this helps.\nJim. I don't think there is much practical difference between them. I understand that FSCTL codes are used to communicate with file system drivers whilst IOCTL are more general and used to communicate with any driver. Basically, they are a way for non-data IO with the underlying driver.  The method call for the IOCTL allows a buffer to be passed down to the driver and a buffer received back. Both are optional and the communication can be one way if require or even pass no data at all. The Linux ioctl() works in a similar way.\nJim. If I understand the Dokan API it will require an extra entry in the DOKAN_OPERATIONS structure. Would this break the kernel <-> library communication? \nBTW: I haven't read about future plans for Dokan but maybe the structure could be replaced by providing functions to \"register\" handlers with the driver code. This would make it more extensible in the future and provide some backwards compatibility with older drivers?\nJim. To answer the points made by @marinkobabic and @Rondom. This change only requires one new callback handler adding to driver. This is a generic mechanism that any IOCTL/FSCTL (they are essentially the same) can be tunneled through. The IOCTL mechanism supports three modes of operation:\n\nRead - Pull data from underlying driver\nWrite - Push data down to underlying driver\nRead-Write - Simultaneous of both above\n\nThe following MSDN page explains how Windows uses this:\n[(https://msdn.microsoft.com/en-us/library/windows/desktop/aa363219(v=vs.85).aspx)]\nDokan does not yet support async IO so I would suggest we drop the lpOverlapped member. This would leave the following handler signature:\nNTSTATUS(* DeviceIoControl )(LPCWSTR FileName, DWORD dwIoControlCode, LPVOID lpInBuffer, DWORD nInBufferSize, LPVOID lpOutBuffer, DWORD nOutBufferSize, LPDWORD lpBytesReturned, PDOKAN_FILE_INFO DokanFileInfo)\nJim. 1. Example user mode code to fetch an arbitrary 100 bytes from the underlying driver could be:\n```\nCHAR cBuffer[100];\nDWORD dwBytesRead;\nBOOL bResult=WINAPI DeviceIoControl(hDevice, MY_CONTROL_CODE, cBuffer, 100, NULL, 0, &dwBytesRead, NULL);\n```\n\nDokan would tunnel this down to the kernel mode driver and then back to the user mode file system code. It would be passed to a method like:\n\nNTSTATUS  ProcessDeviceIoControl(LPCWSTR FileName, DWORD dwIoControlCode, LPVOID lpInBuffer, DWORD nInBufferSize, LPVOID lpOutBuffer, DWORD nOutBufferSize, LPDWORD lpBytesReturned, PDOKAN_FILE_INFO DokanFileInfo)\n\nThis method would resolve the dwIoControl code, perform the desired operation and return the requested bytes.\n\nJim. The mechanism is generic. It can be used to pass any data in either direction from user app to user mode file system driver. It would provide a generic means to implement extension functionality without rebuilding Dolan each time.\nJim. I don't think there is any conflict.  IOCTL is independent of normal data read/write. Typically it would be used for non-data requests lime retirving metadata but that is entirely up to implementtation. All Dorkan should do (like Windows) is pass the requests back and forth. It doesn't need to interpret  \nJim . In response to @Maxhy's points I would make the following comments:\n\n\nThere may be other ways to communicate from user mode to the file system code but IOCTL is the standard way this is done in both Windows and Linux. It therefore represents the most universal way to provide this additional functionality.\n\n\nIOCTL would not kill the abstraction layer. It provides a generic mechanism to \"tunnel\" application specific data over the abstraction layer. Windows uses the same model to \"layer\" driver and user mode code. Each Windows component can listen for specific IOCTL codes and, if appropriate, respond to them. In all other cases they are just passed down/up to the next layer. Again, this is therefore a universal approach. Similarly, Dokan doesn't need to understand the IOCTL packets to pass them up/down. The mechanism is truly generic. \n\n\nDokan will be able to validate the IOCTL packet buffer address and size. It can therefore check that the IOCTL mechanism is being called correctly and avoid BSOD issues in the driver. The only thing it won't be able to do is validate the contents of the IOCTL packet. However, this shouldn't be a concern this is an application specific detail that Dokan cannot be expected to know about. \n\n\n. There really is nothing special about Windows IOCTL codes. They are relevant to specific Windows components but otherwise just like any other IOCTL to everything else. I would therefore suggest a slightly different approach:\na. Pass IOCTL codes through up/down the driver (e.g. in / out buffer)\nb. Support specific IOCTL codes inside Dokan if relevant (for instance IOCTL_DISK_GET_DRIVE_GEOMETRY)\n. There is no need to filter out known FSCTLS/IOCTLs. Windows uses an IO stack model which allows all  unhandled control codes to filter down/up to the next layer - Basically, if you care you handle it. If you don't care / don't know you should ignore it. \nI'm also not sure why this feature would need to wait to v2.0? It will require a change to the DOKAN_OPERATIONS structure but one additional callback will be sufficient to handle all control codes because the mechanism is generic and infinitely extensible. \nJim. I understand that it would change the API and that this should best be done when introducing a new major version number. This would avoid any problems with backwards compatibility.\nIn the future, instead of using the DOKAN_OPERATIONS structure, a different solution would be to export a \"registration\" method from the DLL to register the callback/handler for each library operation such as read, write, IOCTL and so on. This would allow the interface to be extensible in the future and avoid the problems with the structure.\nJim\n. ",
    "atanamir": "I'd like to +1 this even though it's been inactive for some time.  And reading through the whole thread, it's definitely a 2.0 feature because it would change the kernel <-> library implementation.  We'd have to filter out the known (windows) FSCTLs/IOCTL codes in the kernel, but only pass unrecognized ones to the dokan user-mode process to complete.\nIn our case, we'd also like to use this for applications to request additional non-standard metadata from our dokan-based file system.. If I may add my 2 cents, it's best to distribute both flavors (MD and MT).  If you look at boost's nuget binaries for windows, they release both.  In our case, we link our dokan FS code with other libraries also compiled with /MD, so having a /MD-compiled dokan static library is important for us.. yes, but it's not recommended.  It's best if they all use the same; the goal of /MD is to reduce binary size, and that only works when everything is linked in using /MD.  Again, both /MD and /MT should be distributed together, and the devs can pick which one to use.\nThe compielr warns you when you mix them:\nLINK : warning LNK4098: defaultlib 'LIBCMT' conflicts with use of other libs; use /NODEFAULTLIB:library\n(This is if your library is /MT and your exe is /MD)\nLINK : warning LNK4098: defaultlib 'MSVCRT' conflicts with use of other libs; use /NODEFAULTLIB:library\n(If the library is MT and your executable is MT)\n. There's definitely pros and cons to either approach.  Dynamic linking of the C++ library allows your application to receive any patches they release to the runtime libraries in the future, whereas /MT will not.  I prefer MD to MT, every person is entitled to their preference.  Again, as I've mentioned, both should be distributed, not one or the other.. ",
    "Snack-X": "It crashes without any Dokan dependent software and any further setup about Dokan. Just installing Dokan (and mandatory reboot) will make EAC crash.. ",
    "PatrickMis": "I can confirm everything written above. Here is the information from the event log:\nFaulting application name:  EAC.exe, version: 0.0.0.0 [random], time stamp: 0x00000007\nFaulting module name: dokannp1.dll, version: 1.0.3.1000, time stamp: 0x58d51fd7\nException code: 0xc0000005\nFault offset: 0x000012e4\nFaulting process id: 0x%9\nFaulting application start time: 0x%10\nFaulting application path: %11\nFaulting module path: %12\nReport Id: %13. ",
    "maciozo": "Happened to me as well with Dokan 1.0.3.1000 on Windows 8.1\nEAC would crash as soon as you press the copy button (before it even asked where to copy to). EAC worked fine as soon as Dokan was uninstalled, without any reboot.. ",
    "jnheinz": "I ran into this problem.  Uninstalling Dokan allowed EAC to stop crashing.  The only thing I can think of, is it seems to happen when a Browse/Explore window pops up.  I do have a bunch of network drives -- all valid & connected.  Did @Liryna test it with network drives?  I can't remember why I was using Dokan or why it was installed, unfortunately.  Running Windows 7.\n\n. ",
    "xzenor": "I'm having the exact same issue. Such a shame this will apparently never be fixed...\n. ",
    "deadalnix": "I was able to test with windows build 16237 and it fails as well.. Hi @marinkobabic ,\nThanks for helping.\nReading https://github.com/dokan-dev/dokany/wiki/Use-Mirror-example , it seems that mirror is supposed to be in the sample folder where dokan is installed. There is no such file there. I used the Dokan_x64.msi provided there: https://github.com/dokan-dev/dokany/releases/tag/v1.0.3\nHow do I get the mirror app ?. Ok let me try that.. Yes this windows update was a disaster. It broke dokani, vmware, and power management on my machine. So far, they fixed power management, vmware published a special version for it, but dokani is still not working :/. Looks like this fix has been ready for about a month. Will there be a relase of dokay that includes it in the near future ?\nPS: Thanks to everybody involved here, great work.. @benpye yes it does, but it feels a bit hacky to have to do that. It seems like a release would be needed anyway so win10 users can use it without getting their computer to crash and dig and end up here :)\n@Liryna awesome. Thanks.. ",
    "Diagonactic": "This issue also happens with Keybase\nIt's confirmed with Windows Insider 16226, 16232 and 16237.  This means it will affect all Windows Insider users since 16232 was released to the Slow Channel (last week).  The latest Dokan driver as well as the one that is used in the current Keybase release are affected (just confirmed this about five minutes ago)\nThe steps to reproduce are, unfortunately, really simple:\n\nInstall keybase\nWait about one minute (depending on processor speed)\n\nAt this point, your only remaining choice becomes holding down the power button for 5 seconds to kill the PC.  At boot, it'll launch Explorer after login and about 30 seconds later the machine will return to this hung state.\nI discovered it after Windows updated my machine and it wasn't possible to figure out what was causing the issue because the system becomes so unresponsive that Task Manager, CTRL+ALT+DEL do nothing and every open window turns (Not Responding).  Even issuing a dir in a cmd.exe console hangs indefinitely all while the CPU fan runs wild implying that the CPU is running at 100%.  I ended up rolling back the OS using the procedure I wrote about in the Keybase bug thinking it was hardware related but after being unable to roll back the third forced update, I did a system reset and discovered that it was Keybase/Dokan since the hang returned immediately after that was installed.\nIt was further narrowed down to Dokan after installing Keybase with parameters that prevented the Dokan library from being installed with it.  \nI'm happy to use my machine as a guinea pig if you guys have some instructions for how I can get helpful data for you.  There's nothing logged in Event Viewer, and when the problem happens everything stops working, so there's nothing that can really be done after the fact other than a System Restore to eliminate the Dokan driver.. Somewhat interesting that 16226 was the one that brought OneDrive files on demand implying they made some changes in Explorer and related components to support that.. > Note the machine doesn't quite freeze all the way, but it's pretty much useless.\nYes, that's exactly the behavior. \ud83d\udc4d \nI was initially impressed that the mouse kept moving (and for a while Firefox continued to function, but it eventually fell over like the rest of the apps).  But the mouse becomes, literally, the only thing that functions after a short while.  I guess the days of a true \"hard lock\" in Windows are behind us, but this is as close as one gets to it.. I located the link from Feedback hub that I commented on related to this issue -- it's the original from the Keybase Github issue.\nOn Windows 10, this link opens up in Feedback Hub, so I'm not entirely sure if it works without Windows 10 or not, but it's available here.\nI've updated it to link to this GitHub issue, as well, though I've not seen any additional activity beyond my own and the original submitter on that particular feedback item.. ",
    "nobitagamer": "Yes, me too, i must go back to previous Windows version and uninstall (in my case is KeyBase) the software. after that update Windows to latest version will work again.. ",
    "phillijw": "I've also reported this. Nobody has responded yet.. Not directly related, but the same windows preview version seems to be causing issues with Plex media server library updates which obviously scan/access disk. I would imagine it's caused by the same issue.. Win 10 build 16232. Keybase is no longer crashing BUT I am not seeing the drive it usually creates. @kauhat That reminded me that I didn't actually set up the certs and that's probably why it wasn't working. When I tried setting them up I wasn't having any luck whatsoever so I gave up. @benpye You're the hero we don't deserve. ",
    "benpye": "Have you got a link to the feedback item?. There should be a share link on the feedback item in the hub?\nOn Mon, 17 Jul 2017, 10:39 Marinko, notifications@github.com wrote:\n\nNo. I used the feedback hub. They do not provide any link so far I have\nseen. You?\nAm 17.07.2017 19:12 schrieb \"Ben Pye\" notifications@github.com:\n\nHave you got a link to the feedback item?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/554#issuecomment-315818726,\nor mute the thread\n<\nhttps://github.com/notifications/unsubscribe-auth/ADHSODECbPMhAQ0J8iJEaukzXw8iSmXfks5sO5X6gaJpZM4OVr1-\n.\n\n\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/554#issuecomment-315826562,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AAbA_9XTwwVlwGd8EajhQNbnxemFYBR5ks5sO5xSgaJpZM4OVr1-\n.\n. See https://compass-ssl.microsoft.com/assets/ab/e5/abe590f3-accd-407d-8be5-3b8347957565.png?n=FeedbackHubURL1.png. I've looked into this, I think Dokany may have a bug. Could someone try changing https://github.com/dokan-dev/dokany/blob/master/sys/device.c#L485 to a <= ? I don't have a VS2015 environment.. Ah, I am fairly sure that is still incorrect however.\n\nOn Fri, 21 Jul 2017, 01:34 Liryna, notifications@github.com wrote:\n\n@benpye https://github.com/benpye\nIOCTL_MOUNTDEV_QUERY_SUGGESTED_LINK_NAME is not present in the logs\nprovided by @zanderz https://github.com/zanderz\nIOCTL_MOUNTDEV_QUERY_SUGGESTED_LINK_NAME is only used with mount manager\noptions enabled, here it is not the case.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/554#issuecomment-316940639,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AAbA_8Y0X_JU28mVx8K6_IUgOiUAPdQlks5sQGKlgaJpZM4OVr1-\n.\n. Looks like the same error is present in several places, I linked to the wrong instance last night.\n\nI believe the first one is causing this hang:\nhttps://github.com/dokan-dev/dokany/blob/master/sys/device.c#L427\nhttps://github.com/dokan-dev/dokany/blob/master/sys/device.c#L453. Can anyone confirm if my second suggested fix rectified this issue?. Thanks @Rondom , I was unaware PRs generated builds.. @deadalnix Looks like the keybase build should work? EV signed so you won't need test mode.. @deadalnix The Dokany bug shouldn't cause a hang on 16273+.. Quick test with mirror.exe and this isn't hanging any more.. Yeah, I can still repro with the current master. Looks like the check I linked to be fixed was the wrong one, I think CTRL+F failed me. I'm pretty sure it's the one within IOCTL_MOUNTDEV_QUERY_DEVICE_NAME causing the hang, as indicated by the logs and WinDbg.. ",
    "kauhat": "Hey folks,\nBuild 1.0.3.1216 is working great for me on Insider build 170624-1334. Cheers!. @phillijw I believe I was having a similar issue when testing last night - I needed to disable Secure Boot in my BIOS before running the cert/dokan-import.ps1 script.. ",
    "runapp": "@Liryna I'm not pretty sure about how the bug was performing before, but when I use 1.0.4 with winsshfs 1.6.1.13 devel RC5 on Win10 16278 it seems that the Explorer and part of Winlogon freeze. I say it because all things related to Explorer (file manager and desktop) stops working, as well as C-A-Del. However other programs keep running smoothly until they got to do an IO operation about file listing (Can be reproduced by Powershell).\nFrom my point of view this is much like using sshfs on linux when recovered from a hibernation. The ssh link breaks and sshfs will stuck on getting data. I'll try debugging it using VM cause rebooting host machine is very painful.... @Liryna Nope, seems not the same as #413 .\nI'll try to do it clean in VM and make sure it can be reproduced by everyone.\nI think it's mostly the same as the OP's, except that my mouse and keyboard are still working.\nPS: actually it begines from Win 16251. On the previous normal release, aka Win 10 1607, I was using old winsshfs stable with dokan 0.7.4, flawlessly. However this combination will still cause freeze on 16251.. ",
    "holla2040": "Windows Version: win7 professional SP1 64-bit\nProcessor Arch: intel core i5-3570\nDokany Version: 1.0.3\nLibrary Type: don't know\nvcredist_x64 version: 12.0.40660 installed\nmsi installs fails with an error dialog, see attached\n\n. wow, that was fast. I'll try that. thanks. . https://www.visualstudio.com/downloads/#d-visual-c provides 14.10.25017\nolder versions link\nhttps://www.visualstudio.com/vs/older-downloads/ provides 14.10.24215\nwhere can I get the even older 14.0.23918 and how am I supposed to know this exact version is needed?\n. that worked, thanks!\nnow dokansshfs crashes. so I'll work that issue as well. . ",
    "matswebjorn": "Yes, I just realized that I needed \"Microsoft Visual C++ 2015 Redistributable Update 3\" from https://www.microsoft.com/en-us/download/confirmation.aspx?id=53587. Now it installs. ",
    "s-stexx": "Can you maybe please provide a md5 or a sha1 to me (or the newest Minor Dokany_Redist.exe) ?. Thank you very much. They match!. ",
    "crazypenguincode": "mip can mount a dd image as a PHYSICALDRIVE ,when use cmd : wmic diskdrive list brief\nshows :\nStorLib Virtual Storage    \\.\\PHYSICALDRIVE7  StorLib Virtual Storage    1           42949672960\nStorLib Virtual Storage    \\.\\PHYSICALDRIVE8  StorLib Virtual Storage    2           0\ndokany mirror.exe can mount as letter. ",
    "lins05": "@Liryna Yes I think so (i search the issues with keywords like \"drive letter crash\" but that one isn't in the search result :(  .\nI checked the code and find we're also using the DOKAN_OPTION_CURRENT_SESSION flag, so it should be the same problem the #523 tries to fix. I'll try the test build to see if it fixed the issue and report the result here.. Thanks for the reply @Liryna ! \nI missed some info in the first post - actually the main pain point is the .NET framework, not the vc redist, that sometimes failed to install on old windows 7 systems. Do you think it's possible to remove the dep on the .NET framework if we rewrite the custom actions in c++? \nOf course if we can also remove the dep on vc redist (e.g by static linking as the linked issue you mentioned above), that would be an awesome bonus.. Thanks @Rondom @Liryna \ud83d\udc4d \n\nIf we would like to rewrite in c++ the customaction. This seems to be possible:\nhttps://github.com/rstropek/Samples/tree/master/WiXSamples/VisualStudioSnippetInstaller\nHave to look if this does not create another issue where a redist need to be installed before..\n\nIIUC a custom action is simply a function inside a DLL, and we even have a custom action written in plain C code: https://github.com/haiwen/seafile/blob/v6.1.7/msi/custom/custom.c#L71 . So I think there is nothing prevents us replacing the c# code with c/c++.\n. @Liryna Greaaat! We'll help test the new version once there is a beta release.. ",
    "cplerch": "Perhaps, however I'm still not sure about the origin of these warnings: dokany driver/dlls or dokan-java code. Please decide!. OK, will move it over - you can close this one.. ",
    "leoyu123": "@Liryna  the VS redist Had been installed already\n\n. @js69  @Liryna  Thank you for your reply\u3002. ",
    "bcurran3": "v1.05 has been pushed to Chocolatey\n@Liryna I can add you as maintainer of the packages\nsources are here:\nhttps://github.com/bcurran3/ChocolateyPackages/tree/master/dokany\nhttps://github.com/bcurran3/ChocolateyPackages/tree/master/dokany-redistributable\n. Great. It would really just require updating the chocolateyinstall.ps1 script with current dl link and checksum. Hmmm...and the nuspec with the version. At some point I might set it up with the AutoUpdate (AU) script. I have to get over the learning curve to finish setting it up and create the scripts for a lot of programs. So it's on a when I get the time basis.. v1.0.5 is \"live\" in the Chocolatey community feed. ",
    "rjamesnw": "Thanks - yeah, I saw that already; not sure I want to go down that road yet lol. ;). ",
    "klyap": "I can help!\n. ",
    "t-miller": "I'm on it!. ",
    "Dumbaz": "https://technet.microsoft.com/de-de/library/jj603041(v=wps.630).aspx\n\nThis cmdlet requires that Windows PowerShell be run in administrator mode.\n\nReturns either enabled, disabled or not supported state of secure boot. If it\u00b4s not solved tomorrow I will do so, have no Windows PC at hand right now.. ",
    "bhardwajanish": "I don't understand...What would you like me to do?\nOn Oct 19, 2017 1:12 PM, \"Andreas Gnau\" notifications@github.com wrote:\n\n@Rondom requested changes on this pull request.\nthis cannot be merged in its current form. Deletes text and moves it to\nnew file.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/dokan-dev/dokany/pull/592#pullrequestreview-70445202,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AdzAjvRiA_WFE_mHHFvsQe0PdzoeIMh1ks5stv1UgaJpZM4P2FmE\n.\n. \n",
    "sgraves66": "Perfect! I haven't begun testing around security yet, so this is really great info. I was assuming 'MirrorGetFileInformation' required the 'CreateFile()' call and never checked for an existing handle in the struct. So possibly better to just let it fail and/or require the caller to 'AdjustTokenPrivileges()' as necessary? I can see the benefits of mirror doing this, but in my case the implementation will always be running as user and probably best to leave it up to the process opening the file to do the dirty work. . Thanks @Liryna \nIn that case, I'm down to one last bug associated with mounting an ISO stored within the mounted filesystem (Windows 7/10 inherent behavior, not via an external application). I wanted to rule out handling oplock flags incorrectly. \nThe ISO is assigned a drive letter and is browseable through Windows Explorer; however, I receive an error message Sorry, there was a problem mounting the file after mounting and An error occurred while ejecting 'DVD Drive'... when trying to eject. I don't see any relevant debug logging from Dokany that indicates a failure or encounter any I/O errors within my filesystem.\nI'll test with the mirror application when I have time but also wanted to check if this is something you may have encountered.\n                                                                                                   . I confirmed the same behavior exists when using ```mirror.exe /r c:\\ISO_Archive\\ /l m:``` on Win10 x64. Looks like ISO file mount within a mounted drive is failing at some point. I'll gather more details and submit a bug report.. Yep, was just missing the flag... A few days spent on this one :'( Thanks for the fix!.\n",
    "leochou0729": "You're welcome ;) @Liryna . ",
    "gambetto": "Yes, I used the mirror with default option.\n2017-10-23 14:40 GMT+02:00 Liryna notifications@github.com:\n\nHi @gambetto https://github.com/gambetto ,\nAre you using the mirror for this ? What the mirror option used ? What are\nthe mirror logs ?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/610#issuecomment-338645906,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AG7PnmPRUk5PnV8k-OsZhoitclZ63G__ks5svIlUgaJpZM4QCxWF\n.\n. dokan-excel-reboot.log\n. Hi Liryna, I've verified the issue with dokan mirror and the problem is\nconfirmed.\nI've attached mirror log.\nDo you need other informations ?\n\nThanks.\nGiuseppe\n2017-10-23 14:44 GMT+02:00 Giuseppe Tofani giuseppe.tofani@gmail.com:\n\nYes, I used the mirror with default option.\n2017-10-23 14:40 GMT+02:00 Liryna notifications@github.com:\n\nHi @gambetto https://github.com/gambetto ,\nAre you using the mirror for this ? What the mirror option used ? What\nare the mirror logs ?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/610#issuecomment-338645906,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AG7PnmPRUk5PnV8k-OsZhoitclZ63G__ks5svIlUgaJpZM4QCxWF\n.\n\n\n. \n\n\n. ",
    "pthurau": "I've exactly the same problem, using Windows 10 1709 build 16299 aka Fall Creators Update and Dokan 1.0.5.1000. ",
    "Jaozhang": "I debugged and tested, this issue caused by FileRenameInformationEx(This value is available starting with Windows 10, version 1709).dokany does not handle FileRenameInformationEx\nhttps://msdn.microsoft.com/en-us/library/windows/hardware/ff728840(v=vs.85).aspx\nAnd you can also check FILE_RENAME_INFORMATION, it's  different with FILE_LINK_INFORMATION and DOKAN_RENAME_INFORMATION\uff0c but the code assumes they are same.\nif (_WIN32_WINNT >= _WIN32_WINNT_WIN10_RS1)\nunion {\n    BOOLEAN ReplaceIfExists;  // FileRenameInformation\n    ULONG Flags;              // FileRenameInformationEx\n} DUMMYUNIONNAME;\n\nelse\nBOOLEAN ReplaceIfExists;\n\nendif\nHANDLE RootDirectory;\nULONG FileNameLength;\nWCHAR FileName[1];\n\n} FILE_RENAME_INFORMATION, *PFILE_RENAME_INFORMATION;\n. Hi @Liryna \nThank you for the reply !\nBackground:\n1. I debugged in dokany(1.0.5) + myTestApp.exe(had the same issue with default sample before)\n2.  I installed WDK&SDK 1709(16299)\n3.  I set Target Platform Version: 10.0.16299.0 in sys Property Pages(vs2017)\n4.  I add FileRenameInformationEx Processing logic in DokanDispatchSetInformation and \n     DokanCompleteSetInformation\n5. I built sys and tested in myTestApp.exe(it works fine now)\nAnswer your question:\nQ : So you really see in the log the call of FileRenameInformationEx ? \nA :  Yes, after modified sys, I see call of FileRenameInformationEx in mayApp.exe(I'm not familiar with debugging dokany),  of course we can be sure that it also called in dokany.\nQ : There is no fallback in FileRenameInformation just after we return STATUS_NOT_IMPLEMENTED for FileRenameInformationEx ?\nA : There is always no fallback in FileRenameInformation.\n. @Liryna \nYes, the implementation  solved the excel(also word, MS Photo) file save issue.. @Liryna \nSorry for the late reply.\nI am glad to contribute to dokan,  but i couldn't.\nAs a beginner,  i can't even understand the details of dokan code,\nthere may be  a lot of side effect in my test code. \nsorry.\ud83d\ude22\nBy the way, It seems that you have already working on it,  thank you!\n. @Liryna \nI openned a PR, i hope it would be helpful.\nsorry for the late PR.\n. ",
    "webaxys": "hello,\nis there a workaround ? a specific Microsoft KB to remove to get it working back for example?\nthanks a lot.\n. ",
    "0x4a616e": "Seems to be working perfectly. Great job, thx!. Good guess! I just tried and it worked like a charm.. So far, I haven't found any.... @Liryna i'm having the same issue on Windows 10 1809 and dokany 1.2.1.2000 when renaming a directory. I do not have any AV software (other than built in windows defender) installed. If you need any info (crash dump etc...) or if i can try out something for you let me know.. ",
    "TrabacchinLuigi": "This looks way more the problem i had!\nI've had the same issue, everything froze, till i phisically reboot the machine, going back to 1.0.3 solve it!. Saving with Revit it happens almost always, it really looks like a deadlock, unfortunately it isn't in the .net part, i can't poit out the line of code, i will download windows SDK and give it a shot but i'm kinda not the c++ developer. Ok, Revit is an Autodesk software, you can download a trial Here, then to reproduce: \n\nMake a new project (we use construction template, but i don't think it's relevant)\nSave it somewhere in dokan (peek a folder because it will create subfolders and files)\nGo to collaborate ribbon tab\nPress collaborate button\nChoose collaborate within your network (this will enable saving madness (behave like a network drive))\nSave again, choose yes at the save as central file prompt (will be prompted only the first time)\n\nif you are lucky enough you'll be immediately stuck (90%), otherwise keep saving . Hi @Liryna , yes i mean that package, i got an error saying that the driver could not be installed due to certificate issues... and no i didn't followed that procedure, because i was not planning to build the driver myself, just see where it gets stuck.\nNow i've tried to reinstall it to screenshot the message, but it's not shown anymore.\nIt just won't work saying that i need administrator privileges to install the driver, and if given privileges it still fails saying the driver can't be installed. Unfortunately i can't instal the last update because of my shared bootloader \ud83e\udd15 I've planned a fresh install like months ago \u26d1 still no time.\nrunning dokanctl.exe /r d and then dokanctl.exe /i d i got\nDriver path: 'C:\\Windows\\system32\\drivers\\dokan1.sys'\nInstalling driver...\nDokanServiceInstall: Service (Dokan1) installed\nDokanServiceControl: Failed to start service (Dokan1). error = 577\nDokanServiceInstall: Service (Dokan1) start failed\nDriver install failed\nfollowed by \n\nWinVer says i'm running 1607 (not fall creator update) are signing certificate different \ud83d\ude31  ?. I'll install the self signed certs, for my purposes, but this is an actual issue on it's own, i'll keep this open, ok ? \ud83d\udc4d . I think it is an issue, the solution could be signing them, or just make clear they are not intended for windows higher or equal than 1607 (i think), and enforce building and install self certs instead...\nTo me the real point is (since  i'm a developer too): have sense having and maintaning this package ? if someone need to debug it probaby will have to build it anyway ... so ... maybe it can be dropped ... just thinking in the business way \ud83d\udd74 . I've mitigated the problem creating a safefilehandle to the directory my fs is mounted on not following the junction link during the mounted callback and the disposing it during the unmount . I believe the permission approach is not right, as you said renaming it have no consequences but it is being done outside the programmer workflow, and this is all about the programmer workflow, I've mounted the disk programmatically and then when I write the disk is no longer there...\nI can obtain the behaviour I want anyway opening an handle from my implementation (in .net) but it is very hard, it requires pinvoke and a lot of experience no many users would do that, they'll simple choose another product\n. @rondom the consequences are I can't know where the volume is gone, and I can't afford to search for it every time, with my approach seems everything works fine, just to rename or delete that folder one have to unmount then rename and mount again, which I think is the correct behaviour. @liryna I've tried both approach the permission and the handle, the permission isn't that good, who can delete it? We don't have a dokany user, and we don't want to elevate to change them also, an user could change them anyway if he's administrator, also it's a pain setting them right (assuming you can find a right combinatin, which in my opinion doesn't exist)\nThe handler to the directory junction instead seems just right, if you try to do something to that folder before unmounting you are told that directory is being used (which is true). As I said because it's been done outside the programmer workflow, and my workaround is hacky (i feel many users won't use pinvoke nor will understand what a junction point is and why they need to understand that to prevent a folder from being moved), also because dokany is already creating that Directory Handle, so it will just need to hold onto it.\nMaybe this could be optional! \nFor the sake of curiosity why are you relying on the ability to rename mount points?\nSince @kyanha is relying on the mount point rename ability, this should be marked as a feature request. >  Anyone who has FILE_DELETE_CHILD \nExactly what i don't want, any other user, or the same user who mounted the disk coming there and being able to delete the mount point... if i remove that permission from the user who mounted the disk (or all users) then i won't be able to dismount it, except giving back the permission, but if my software can give back that permission, this means also those users could, even if my software was run in elevated mode (that i don't want), this won't prevent a local administrator to undo my permissions, this is just a bad approach to the problem, also this won't prevent user from rename it, and the edit permission is the same thing... i can't know if my software will be used from smart users, dumb users, smart administrators or not, it must work.\n\nI can change the filesystem out from under a particularly poorly-coded piece of software\n\nshouldn't you open an issue in that software instead :sweat_smile: ok ok i understand maybe it's a dead project maybe it's not open source, whatever\n\nIt also allows me to run a test suite serially against several filesystems\n\nshouldn't test run as fast as possible ? and give reliable results? then run them parallely in different mount points with different file systems\nAnyway having this optional would give best of both worlds. @rondom not really, i need it to be also accessible to users, and have the same path for everyone (kinda of distributed fs)\nBut the proposal #136 seems a very nice idea, i could mount the drive then mount it and lock the mount when i mount it (i already do the same, only i tough it would be a nice feature for everyone to have it done automatically, and avoid to write code that need to pinvoke). sorry i've noticed that there is two dups, the second one is with symbols loaded.\nIn our fs we hang FileStreamOpening while the resource becomes available and after a while if the resource is still unavailable we return DokanResult.NotReady (NtStatus.DeviceNotReady)\nWith the debugger i ofthen get caught there, maybe just because it's an hanging call.\nCould this be a problem ?. Tried the last version of dokany, rebuilt with the new dokan.net still BSOD, but different stack trace in the minidump...\n\nCrash dump Dokany 1.2.0.1000\n```\nMicrosoft (R) Windows Debugger Version 10.0.16299.15 AMD64\nCopyright (c) Microsoft Corporation. All rights reserved.\nLoading Dump File [C:\\Users\\luigi.trabacchin\\Desktop\\122018-3343-01 - Copy.dmp]\nMini Kernel Dump File: Only registers and stack trace are available\nSymbol search path is: srv*\nExecutable search path is: \nWindows 10 Kernel Version 15063 MP (4 procs) Free x64\nProduct: WinNt, suite: TerminalServer SingleUserTS\nBuilt by: 15063.0.amd64fre.rs2_release.170317-1834\nMachine Name:\nKernel base = 0xfffff803cae14000 PsLoadedModuleList = 0xfffff803cb163700\nDebug session time: Thu Dec 20 10:50:01.451 2018 (UTC + 1:00)\nSystem Uptime: 0 days 0:35:10.930\nLoading Kernel Symbols\n...............................................................\n................................................................\n............................\nLoading User Symbols\nLoading unloaded module list\n..........\n\n\n*\nBugcheck Analysis                                    *\n*\n\n\nUse !analyze -v to get detailed debugging information.\nBugCheck 50, {ffff9d81ca448002, 0, fffff803caf2a765, 0}\n WARNING: Unable to verify timestamp for dokan1.sys\n ERROR: Module load completed but symbols could not be loaded for dokan1.sys\nCould not read faulting driver name\nProbably caused by : dokan1.sys ( dokan1+11d61 )\nFollowup:     MachineOwner\n*** Path validation summary **\nResponse                         Time (ms)     Location\nDeferred                                       srv*\nOK                                             C:\\Users\\luigi.trabacchin\\Desktop\\Nuova cartella\n3: kd> !analyze -v\n***********\n \n                        Bugcheck Analysis                                    \n \n*************\nPAGE_FAULT_IN_NONPAGED_AREA (50)\nInvalid system memory was referenced.  This cannot be protected by try-except.\nTypically the address is just plain bad or it is pointing at freed memory.\nArguments:\nArg1: ffff9d81ca448002, memory referenced.\nArg2: 0000000000000000, value 0 = read operation, 1 = write operation.\nArg3: fffff803caf2a765, If non-zero, the instruction address which referenced the bad memory\n    address.\nArg4: 0000000000000000, (reserved)\nDebugging Details:\n*** WARNING: Unable to verify timestamp for dokan1.sys\nCould not read faulting driver name\nDUMP_CLASS: 1\nDUMP_QUALIFIER: 400\nBUILD_VERSION_STRING:  10.0.15063.1418 (WinBuild.160101.0800)\nSYSTEM_MANUFACTURER:  Microsoft Corporation\nVIRTUAL_MACHINE:  HyperV\nSYSTEM_PRODUCT_NAME:  Virtual Machine\nSYSTEM_SKU:  None\nSYSTEM_VERSION:  Hyper-V UEFI Release v4.0\nBIOS_VENDOR:  Microsoft Corporation\nBIOS_VERSION:  Hyper-V UEFI Release v4.0\nBIOS_DATE:  08/31/2018\nBASEBOARD_MANUFACTURER:  Microsoft Corporation\nBASEBOARD_PRODUCT:  Virtual Machine\nBASEBOARD_VERSION:  Hyper-V UEFI Release v4.0\nDUMP_TYPE:  2\nBUGCHECK_P1: ffff9d81ca448002\nBUGCHECK_P2: 0\nBUGCHECK_P3: fffff803caf2a765\nBUGCHECK_P4: 0\nREAD_ADDRESS: fffff803cb1f7358: Unable to get MiVisibleState\nUnable to get NonPagedPoolStart\nUnable to get NonPagedPoolEnd\nUnable to get PagedPoolStart\nUnable to get PagedPoolEnd\n ffff9d81ca448002 \nFAULTING_IP: \nnt!IoGetOplockKeyContextEx+15\nfffff803`caf2a765 f6400203        test    byte ptr [rax+2],3\nMM_INTERNAL_CODE:  0\nCPU_COUNT: 4\nCPU_MHZ: a20\nCPU_VENDOR:  GenuineIntel\nCPU_FAMILY: 6\nCPU_MODEL: 5e\nCPU_STEPPING: 3\nCPU_MICROCODE: 6,5e,3,0 (F,M,S,R)  SIG: FFFFFFFF'00000000 (cache) FFFFFFFF'00000000 (init)\nDEFAULT_BUCKET_ID:  WIN8_DRIVER_FAULT\nBUGCHECK_STR:  AV\nPROCESS_NAME:  sihost.exe\nCURRENT_IRQL:  2\nANALYSIS_SESSION_HOST:  NB10-TRABACCHIN\nANALYSIS_SESSION_TIME:  12-20-2018 11:04:39.0406\nANALYSIS_VERSION: 10.0.16299.15 amd64fre\nTRAP_FRAME:  ffff9d81c83c2d90 -- (.trap 0xffff9d81c83c2d90)\nNOTE: The trap frame does not contain all registers.\nSome register values may be zeroed or incorrect.\nrax=ffff9d81ca448000 rbx=0000000000000000 rcx=0000000000000006\nrdx=ffff9d81ca448000 rsi=0000000000000000 rdi=0000000000000000\nrip=fffff803caf2a765 rsp=ffff9d81c83c2f20 rbp=ffffc58c4675cef0\n r8=0000000000000000  r9=0000000000010000 r10=0000000000000000\nr11=0000000000013000 r12=0000000000000000 r13=0000000000000000\nr14=0000000000000000 r15=0000000000000000\niopl=0         nv up ei ng nz na po nc\nnt!IoGetOplockKeyContextEx+0x15:\nfffff803caf2a765 f6400203        test    byte ptr [rax+2],3 ds:ffff9d81ca448002=??\nResetting default scope\nLAST_CONTROL_TRANSFER:  from fffff803caeb049f to fffff803caf94500\nSTACK_TEXT:\nffff9d81c83c2a38 fffff803caeb049f : 0000000000000050 ffff9d81ca448002 0000000000000000 ffff9d81c83c2d90 : nt!KeBugCheckEx\nffff9d81c83c2a40 fffff803caebc358 : 000000104308a600 ffffffff00020019 000000050000000c 0000000000000000 : nt!MiSystemFault+0x15df\nffff9d81c83c2b90 fffff803cafa18da : ffffb485324cf8e4 0000000000000016 ffff9d81c83c32a0 fffff803cb3432b7 : nt!MmAccessFault+0x228\nffff9d81c83c2d90 fffff803caf2a765 : 0000000030000000 0000000000000000 ffff9d81c7f82460 fffff803cb099120 : nt!KiPageFault+0x31a\nffff9d81c83c2f20 fffff803caf2a4eb : 0000000000000000 ffff9d81c83c2f71 ffff9d81c83c2f7a fffff803caea9a4c : nt!IoGetOplockKeyContextEx+0x15\nffff9d81c83c2f50 fffff803caf28fc5 : ffffb48535f34ea0 0000000000000008 0000000000000000 ffffb485403df140 : nt!FsRtlpOplockKeysEqual+0x5f\nffff9d81c83c2f80 fffff803cb33a415 : 0000000000000600 ffffc58c430c9ca0 0000000030000000 ffffc58c00010000 : nt!FsRtlpRequestShareableOplock+0x50d\nffff9d81c83c3030 fffff803cb33a144 : ffffc58c4324ba60 ffffb485403df140 ffffc58c00000003 0000000000000000 : nt!FsRtlpOplockFsctrlInternal+0x2a9\nffff9d81c83c30d0 fffff809b69f1d61 : 0000000000000000 0000000000000008 ffffc58c00000002 ffffc58c45b6d758 : nt!FsRtlOplockFsctrl+0x14\nffff9d81c83c3110 0000000000000000 : 0000000000000008 ffffc58c00000002 ffffc58c45b6d758 0000000000000000 : dokan1!__scrt_is_nonwritable_in_current_image$filt$0+0xa56\nTHREAD_SHA1_HASH_MOD_FUNC:  b06330cd5b77977eaf374f6282ca096af4352466\nTHREAD_SHA1_HASH_MOD_FUNC_OFFSET:  a1069dfe77e39e2d156f6bbc13d7e0b6d7dbf3b1\nTHREAD_SHA1_HASH_MOD:  fc75af73830548e7c63f81c5e385ac22382a9750\nFOLLOWUP_IP: \ndokan1!__scrt_is_nonwritable_in_current_image$filt$0+a56\nfffff809`b69f1d61 8bd8            mov     ebx,eax\nFAULT_INSTR_CODE:  4489d88b\nSYMBOL_STACK_INDEX:  9\nSYMBOL_NAME:  dokan1!__scrt_is_nonwritable_in_current_image$filt$0+a56\nFOLLOWUP_NAME:  MachineOwner\nMODULE_NAME: dokan1\nIMAGE_NAME:  dokan1.sys\nDEBUG_FLR_IMAGE_TIMESTAMP:  5b6c3d88\nSTACK_COMMAND:  .thread ; .cxr ; kb\nBUCKET_ID_FUNC_OFFSET:  a56\nFAILURE_BUCKET_ID:  AV_R_INVALID_dokan1!__scrt_is_nonwritable_in_current_image$filt$0\nBUCKET_ID:  AV_R_INVALID_dokan1!__scrt_is_nonwritable_in_current_image$filt$0\nPRIMARY_PROBLEM_CLASS:  AV_R_INVALID_dokan1!__scrt_is_nonwritable_in_current_image$filt$0\nTARGET_TIME:  2018-12-20T09:50:01.000Z\nOSBUILD:  15063\nOSSERVICEPACK:  1418\nSERVICEPACK_NUMBER: 0\nOS_REVISION: 0\nSUITE_MASK:  272\nPRODUCT_TYPE:  1\nOSPLATFORM_TYPE:  x64\nOSNAME:  Windows 10\nOSEDITION:  Windows 10 WinNt TerminalServer SingleUserTS\nOS_LOCALE:  \nUSER_LCID:  0\nOSBUILD_TIMESTAMP:  2018-10-10 09:19:30\nBUILDDATESTAMP_STR:  160101.0800\nBUILDLAB_STR:  WinBuild\nBUILDOSVER_STR:  10.0.15063.1418\nANALYSIS_SESSION_ELAPSED_TIME:  1c41\nANALYSIS_SOURCE:  KM\nFAILURE_ID_HASH_STRING:  km:av_r_invalid_dokan1!__scrt_is_nonwritable_in_current_image$filt$0\nFAILURE_ID_HASH:  {0d52f469-aa51-8f49-f9bd-c3973f7a2d0e}\nFollowup:     MachineOwner\n```\n. It seems to me that the stack trace changes every time...\n\nCrash dump Dokany 1.2.0.1000\n\n```\n1: kd> !analyze -v\n*******************************************************************************\n*                                                                             *\n*                        Bugcheck Analysis                                    *\n*                                                                             *\n*******************************************************************************\n\nUNEXPECTED_KERNEL_MODE_TRAP (7f)\nThis means a trap occurred in kernel mode, and it's a trap of a kind\nthat the kernel isn't allowed to have/catch (bound trap) or that\nis always instant death (double fault).  The first number in the\nbugcheck params is the number of the trap (8 = double fault, etc)\nConsult an Intel x86 family manual to learn more about what these\ntraps are. Here is a *portion* of those codes:\nIf kv shows a taskGate\n        use .tss on the part before the colon, then kv.\nElse if kv shows a trapframe\n        use .trap on that value\nElse\n        .trap on the appropriate frame will show where the trap was taken\n        (on x86, this will be the ebp that goes with the procedure KiTrap)\nEndif\nkb will then show the corrected stack.\nArguments:\nArg1: 0000000000000008, EXCEPTION_DOUBLE_FAULT\nArg2: ffffc500445c9f50\nArg3: ffffc5004ad48fa0\nArg4: fffff803b945de5c\n\nDebugging Details:\n------------------\n\n*** WARNING: Unable to verify timestamp for win32k.sys\n*** ERROR: Module load completed but symbols could not be loaded for win32k.sys\n\nDUMP_CLASS: 1\n\nDUMP_QUALIFIER: 400\n\nBUILD_VERSION_STRING:  10.0.15063.1418 (WinBuild.160101.0800)\n\nSYSTEM_MANUFACTURER:  Microsoft Corporation\n\nVIRTUAL_MACHINE:  HyperV\n\nSYSTEM_PRODUCT_NAME:  Virtual Machine\n\nSYSTEM_SKU:  None\n\nSYSTEM_VERSION:  Hyper-V UEFI Release v4.0\n\nBIOS_VENDOR:  Microsoft Corporation\n\nBIOS_VERSION:  Hyper-V UEFI Release v4.0\n\nBIOS_DATE:  08/31/2018\n\nBASEBOARD_MANUFACTURER:  Microsoft Corporation\n\nBASEBOARD_PRODUCT:  Virtual Machine\n\nBASEBOARD_VERSION:  Hyper-V UEFI Release v4.0\n\nDUMP_TYPE:  2\n\nBUGCHECK_P1: 8\n\nBUGCHECK_P2: ffffc500445c9f50\n\nBUGCHECK_P3: ffffc5004ad48fa0\n\nBUGCHECK_P4: fffff803b945de5c\n\nBUGCHECK_STR:  0x7f_8\n\nTRAP_FRAME:  7d9a3a50fc9eac6e -- (.trap 0x7d9a3a50fc9eac6e)\nUnable to read trap frame at 7d9a3a50`fc9eac6e\n\nCPU_COUNT: 4\n\nCPU_MHZ: a20\n\nCPU_VENDOR:  GenuineIntel\n\nCPU_FAMILY: 6\n\nCPU_MODEL: 5e\n\nCPU_STEPPING: 3\n\nCPU_MICROCODE: 6,5e,3,0 (F,M,S,R)  SIG: FFFFFFFF'00000000 (cache) FFFFFFFF'00000000 (init)\n\nCUSTOMER_CRASH_COUNT:  1\n\nDEFAULT_BUCKET_ID:  WIN8_DRIVER_FAULT\n\nPROCESS_NAME:  sihost.exe\n\nCURRENT_IRQL:  0\n\nANALYSIS_SESSION_HOST:  NB10-TRABACCHIN\n\nANALYSIS_SESSION_TIME:  12-20-2018 12:21:16.0501\n\nANALYSIS_VERSION: 10.0.16299.15 amd64fre\n\nEXCEPTION_RECORD:  cc482b4c50343024 -- (.exr 0xcc482b4c50343024)\nCannot read Exception record @ cc482b4c50343024\n\nLAST_CONTROL_TRANSFER:  from fffff803b95908e9 to fffff803b9580500\n\nSTACK_OVERFLOW: Stack Limit: ffffc5004ad49000. Use (kF) and (!stackusage) to investigate stack usage.\n\nSTACK_TEXT:  \nffffc500`445c9e08 fffff803`b95908e9 : 00000000`0000007f 00000000`00000008 ffffc500`445c9f50 ffffc500`4ad48fa0 : nt!KeBugCheckEx\nffffc500`445c9e10 fffff803`b958c68c : 00000000`00000000 00000000`00000000 00000000`00000000 00000000`00000000 : nt!KiBugCheckDispatch+0x69\nffffc500`445c9f50 fffff803`b945de5c : 00000000`00000000 00000000`00000000 00000000`00000000 00000000`00000000 : nt!KiDoubleFaultAbort+0x28c\nffffc500`4ad48fa0 fffff803`b95909c2 : cc482b4c`50343024 7444650e`7b711c4e 7d9a3a50`fc9eac6e 5a9b19d6`4a867503 : nt!KiDispatchException+0x2c\nffffc500`4ad49150 fffff803`b958b4d2 : 3725c3d4`62338a3b 1be96730`31f6bc49 c15a40fe`17b0059f ccbb7d65`8a9a88bc : nt!KiExceptionDispatch+0xc2\nffffc500`4ad49330 fffff80d`809f4ef8 : fffff80d`809fabd0 00000000`00000001 00000000`00000008 00000000`00000065 : nt!KiBreakpointTrap+0x2d2\nffffc500`4ad494c0 fffff80d`809fabd0 : 00000000`00000001 00000000`00000008 00000000`00000065 00000000`00000000 : dokan1!DokanMain+0x2b8 [e:\\islog\\dev\\app\\dokan\\dokany\\dokan\\dokan.c @ 237] \nffffc500`4ad494c8 00000000`00000001 : 00000000`00000008 00000000`00000065 00000000`00000000 fffff80d`809faf36 : dokan1!DokanNtStatusFromWin32+0xe30 [e:\\islog\\dev\\app\\dokan\\dokany\\dokan\\ntstatus.c @ 31] \nffffc500`4ad494d0 00000000`00000008 : 00000000`00000065 00000000`00000000 fffff80d`809faf36 fffff80d`809fcde8 : 0x1\nffffc500`4ad494d8 00000000`00000065 : 00000000`00000000 fffff80d`809faf36 fffff80d`809fcde8 00000000`00000010 : 0x8\nffffc500`4ad494e0 00000000`00000000 : fffff80d`809faf36 fffff80d`809fcde8 00000000`00000010 ffffc500`4ad49000 : 0x65\n\n\nTHREAD_SHA1_HASH_MOD_FUNC:  ff7d0e340db07efd91853b005166d66ce2303bdf\n\nTHREAD_SHA1_HASH_MOD_FUNC_OFFSET:  5e0674684a0ed83df72c02d936f18d08b36e85b7\n\nTHREAD_SHA1_HASH_MOD:  128baabb2c5e56fe5ab10ecba4ca4659304fc2f6\n\nFOLLOWUP_IP: \ndokan1!DokanMain+2b8 [e:\\islog\\dev\\app\\dokan\\dokany\\dokan\\dokan.c @ 237]\nfffff80d`809f4ef8 8bcf            mov     ecx,edi\n\nFAULT_INSTR_CODE:  15ffcf8b\n\nFAULTING_SOURCE_LINE:  e:\\islog\\dev\\app\\dokan\\dokany\\dokan\\dokan.c\n\nFAULTING_SOURCE_FILE:  e:\\islog\\dev\\app\\dokan\\dokany\\dokan\\dokan.c\n\nFAULTING_SOURCE_LINE_NUMBER:  237\n\nSYMBOL_STACK_INDEX:  6\n\nSYMBOL_NAME:  dokan1!DokanMain+2b8\n\nFOLLOWUP_NAME:  MachineOwner\n\nMODULE_NAME: dokan1\n\nIMAGE_NAME:  dokan1.sys\n\nDEBUG_FLR_IMAGE_TIMESTAMP:  5b6c3d88\n\nSTACK_COMMAND:  .thread ; .cxr ; kb\n\nBUCKET_ID_FUNC_OFFSET:  2b8\n\nFAILURE_BUCKET_ID:  0x7f_8_dokan1!DokanMain\n\nBUCKET_ID:  0x7f_8_dokan1!DokanMain\n\nPRIMARY_PROBLEM_CLASS:  0x7f_8_dokan1!DokanMain\n\nTARGET_TIME:  2018-12-20T11:01:54.000Z\n\nOSBUILD:  15063\n\nOSSERVICEPACK:  1418\n\nSERVICEPACK_NUMBER: 0\n\nOS_REVISION: 0\n\nSUITE_MASK:  272\n\nPRODUCT_TYPE:  1\n\nOSPLATFORM_TYPE:  x64\n\nOSNAME:  Windows 10\n\nOSEDITION:  Windows 10 WinNt TerminalServer SingleUserTS\n\nOS_LOCALE:  \n\nUSER_LCID:  0\n\nOSBUILD_TIMESTAMP:  2018-10-10 09:19:30\n\nBUILDDATESTAMP_STR:  160101.0800\n\nBUILDLAB_STR:  WinBuild\n\nBUILDOSVER_STR:  10.0.15063.1418\n\nANALYSIS_SESSION_ELAPSED_TIME:  27205\n\nANALYSIS_SOURCE:  KM\n\nFAILURE_ID_HASH_STRING:  km:0x7f_8_dokan1!dokanmain\n\nFAILURE_ID_HASH:  {f34a891e-6a0e-ce29-ec83-91bfccf47628}\n\nFollowup:     MachineOwner\n---------\n\n```. I've updated windows to last version, same result i'll attach the analyzed dump anyway.\nThi time the stack trace is the same of one of the previous...\n\n\n\nCrash dump Dokany 1.2.0.1000\n\n```\nMicrosoft (R) Windows Debugger Version 10.0.16299.15 AMD64\nCopyright (c) Microsoft Corporation. All rights reserved.\n\n\nLoading Dump File [C:\\Users\\luigi.trabacchin\\Desktop\\122018-10843-01.dmp]\nMini Kernel Dump File: Only registers and stack trace are available\n\nSymbol search path is: srv*\nExecutable search path is: \nWindows 10 Kernel Version 17134 MP (4 procs) Free x64\nProduct: WinNt, suite: TerminalServer SingleUserTS\nBuilt by: 17134.1.amd64fre.rs4_release.180410-1804\nMachine Name:\nKernel base = 0xfffff801`16e8f000 PsLoadedModuleList = 0xfffff801`1723d150\nDebug session time: Thu Dec 20 17:39:56.977 2018 (UTC + 1:00)\nSystem Uptime: 0 days 0:02:20.721\nLoading Kernel Symbols\n...............................................................\n................................................................\n..............................\nLoading User Symbols\nLoading unloaded module list\n........\n*******************************************************************************\n*                                                                             *\n*                        Bugcheck Analysis                                    *\n*                                                                             *\n*******************************************************************************\n\nUse !analyze -v to get detailed debugging information.\n\nBugCheck 7F, {8, fffff8011906fe50, ffff8b0a7c150f60, fffff80116f4f44c}\n\n*** ERROR: Module load completed but symbols could not be loaded for dokan1.sys\nProbably caused by : dokan1.sys ( dokan1+4ef8 )\n\nFollowup:     MachineOwner\n---------\n\n\n************* Path validation summary **************\nResponse                         Time (ms)     Location\nDeferred                                       srv*\nOK                                             C:\\Users\\luigi.trabacchin\\Desktop\\Nuova cartella\n0: kd> !analyze -v\n*******************************************************************************\n*                                                                             *\n*                        Bugcheck Analysis                                    *\n*                                                                             *\n*******************************************************************************\n\nUNEXPECTED_KERNEL_MODE_TRAP (7f)\nThis means a trap occurred in kernel mode, and it's a trap of a kind\nthat the kernel isn't allowed to have/catch (bound trap) or that\nis always instant death (double fault).  The first number in the\nbugcheck params is the number of the trap (8 = double fault, etc)\nConsult an Intel x86 family manual to learn more about what these\ntraps are. Here is a *portion* of those codes:\nIf kv shows a taskGate\n        use .tss on the part before the colon, then kv.\nElse if kv shows a trapframe\n        use .trap on that value\nElse\n        .trap on the appropriate frame will show where the trap was taken\n        (on x86, this will be the ebp that goes with the procedure KiTrap)\nEndif\nkb will then show the corrected stack.\nArguments:\nArg1: 0000000000000008, EXCEPTION_DOUBLE_FAULT\nArg2: fffff8011906fe50\nArg3: ffff8b0a7c150f60\nArg4: fffff80116f4f44c\n\nDebugging Details:\n------------------\n\n\nDUMP_CLASS: 1\n\nDUMP_QUALIFIER: 400\n\nBUILD_VERSION_STRING:  10.0.17134.472 (WinBuild.160101.0800)\n\nSYSTEM_MANUFACTURER:  Microsoft Corporation\n\nVIRTUAL_MACHINE:  HyperV\n\nSYSTEM_PRODUCT_NAME:  Virtual Machine\n\nSYSTEM_SKU:  None\n\nSYSTEM_VERSION:  Hyper-V UEFI Release v4.0\n\nBIOS_VENDOR:  Microsoft Corporation\n\nBIOS_VERSION:  Hyper-V UEFI Release v4.0\n\nBIOS_DATE:  08/31/2018\n\nBASEBOARD_MANUFACTURER:  Microsoft Corporation\n\nBASEBOARD_PRODUCT:  Virtual Machine\n\nBASEBOARD_VERSION:  Hyper-V UEFI Release v4.0\n\nDUMP_TYPE:  2\n\nBUGCHECK_P1: 8\n\nBUGCHECK_P2: fffff8011906fe50\n\nBUGCHECK_P3: ffff8b0a7c150f60\n\nBUGCHECK_P4: fffff80116f4f44c\n\nBUGCHECK_STR:  0x7f_8\n\nTRAP_FRAME:  ba2b2500007b9f70 -- (.trap 0xba2b2500007b9f70)\nUnable to read trap frame at ba2b2500`007b9f70\n\nCPU_COUNT: 4\n\nCPU_MHZ: a20\n\nCPU_VENDOR:  GenuineIntel\n\nCPU_FAMILY: 6\n\nCPU_MODEL: 5e\n\nCPU_STEPPING: 3\n\nCPU_MICROCODE: 6,5e,3,0 (F,M,S,R)  SIG: FFFFFFFF'00000000 (cache) FFFFFFFF'00000000 (init)\n\nCUSTOMER_CRASH_COUNT:  1\n\nDEFAULT_BUCKET_ID:  WIN8_DRIVER_FAULT\n\nPROCESS_NAME:  sihost.exe\n\nCURRENT_IRQL:  0\n\nANALYSIS_SESSION_HOST:  NB10-TRABACCHIN\n\nANALYSIS_SESSION_TIME:  12-20-2018 18:30:13.0030\n\nANALYSIS_VERSION: 10.0.16299.15 amd64fre\n\nEXCEPTION_RECORD:  017d03bb9f5000bb -- (.exr 0x17d03bb9f5000bb)\nCannot read Exception record @ 017d03bb9f5000bb\n\nLAST_CONTROL_TRANSFER:  from fffff80117049c69 to fffff801170390a0\n\nSTACK_OVERFLOW: Stack Limit: ffff8b0a7c151000. Use (kF) and (!stackusage) to investigate stack usage.\n\nSTACK_TEXT:  \nfffff801`1906fd08 fffff801`17049c69 : 00000000`0000007f 00000000`00000008 fffff801`1906fe50 ffff8b0a`7c150f60 : nt!KeBugCheckEx\nfffff801`1906fd10 fffff801`1704557f : 00000000`00000000 00000000`00000000 00000000`00000000 00000000`00000000 : nt!KiBugCheckDispatch+0x69\nfffff801`1906fe50 fffff801`16f4f44c : 00000000`00000000 00000000`00000000 00000000`00000000 00000000`00000000 : nt!KiDoubleFaultAbort+0x27f\nffff8b0a`7c150f60 fffff801`17049d42 : 017d03bb`9f5000bb 043bd810`027b4e70 ba2b2500`007b9f70 7c256244`94a47002 : nt!KiDispatchException+0x2c\nffff8b0a`7c151110 fffff801`170443d2 : ffa00021`05e9fe02 000101f0`00210139 4905b000`20046002 000a5525`2a010a00 : nt!KiExceptionDispatch+0xc2\nffff8b0a`7c1512f0 fffff804`e4944ef8 : fffff804`e494abd0 00000000`00000001 00000000`00000008 00000000`00000065 : nt!KiBreakpointTrap+0x2d2\nffff8b0a`7c151480 fffff804`e494abd0 : 00000000`00000001 00000000`00000008 00000000`00000065 00000000`00000000 : dokan1!DokanMain+0x2b8 [e:\\islog\\dev\\app\\dokan\\dokany\\dokan\\dokan.c @ 237] \nffff8b0a`7c151488 00000000`00000001 : 00000000`00000008 00000000`00000065 00000000`00000000 fffff804`e494af36 : dokan1!DokanNtStatusFromWin32+0xe30 [e:\\islog\\dev\\app\\dokan\\dokany\\dokan\\ntstatus.c @ 31] \nffff8b0a`7c151490 00000000`00000008 : 00000000`00000065 00000000`00000000 fffff804`e494af36 fffff804`e494cde8 : 0x1\nffff8b0a`7c151498 00000000`00000065 : 00000000`00000000 fffff804`e494af36 fffff804`e494cde8 ffff8b0a`7c151b40 : 0x8\nffff8b0a`7c1514a0 00000000`00000000 : fffff804`e494af36 fffff804`e494cde8 ffff8b0a`7c151b40 ffff8b0a`7c151000 : 0x65\n\n\nTHREAD_SHA1_HASH_MOD_FUNC:  ff7d0e340db07efd91853b005166d66ce2303bdf\n\nTHREAD_SHA1_HASH_MOD_FUNC_OFFSET:  72d9a32958ed10ec0cca37e4b70303354b2e175b\n\nTHREAD_SHA1_HASH_MOD:  128baabb2c5e56fe5ab10ecba4ca4659304fc2f6\n\nFOLLOWUP_IP: \ndokan1!DokanMain+2b8 [e:\\islog\\dev\\app\\dokan\\dokany\\dokan\\dokan.c @ 237]\nfffff804`e4944ef8 8bcf            mov     ecx,edi\n\nFAULT_INSTR_CODE:  15ffcf8b\n\nFAULTING_SOURCE_LINE:  e:\\islog\\dev\\app\\dokan\\dokany\\dokan\\dokan.c\n\nFAULTING_SOURCE_FILE:  e:\\islog\\dev\\app\\dokan\\dokany\\dokan\\dokan.c\n\nFAULTING_SOURCE_LINE_NUMBER:  237\n\nSYMBOL_STACK_INDEX:  6\n\nSYMBOL_NAME:  dokan1!DokanMain+2b8\n\nFOLLOWUP_NAME:  MachineOwner\n\nMODULE_NAME: dokan1\n\nIMAGE_NAME:  dokan1.sys\n\nDEBUG_FLR_IMAGE_TIMESTAMP:  5b6c3d88\n\nSTACK_COMMAND:  .thread ; .cxr ; kb\n\nBUCKET_ID_FUNC_OFFSET:  2b8\n\nFAILURE_BUCKET_ID:  0x7f_8_dokan1!DokanMain\n\nBUCKET_ID:  0x7f_8_dokan1!DokanMain\n\nPRIMARY_PROBLEM_CLASS:  0x7f_8_dokan1!DokanMain\n\nTARGET_TIME:  2018-12-20T16:39:56.000Z\n\nOSBUILD:  17134\n\nOSSERVICEPACK:  472\n\nSERVICEPACK_NUMBER: 0\n\nOS_REVISION: 0\n\nSUITE_MASK:  272\n\nPRODUCT_TYPE:  1\n\nOSPLATFORM_TYPE:  x64\n\nOSNAME:  Windows 10\n\nOSEDITION:  Windows 10 WinNt TerminalServer SingleUserTS\n\nOS_LOCALE:  \n\nUSER_LCID:  0\n\nOSBUILD_TIMESTAMP:  2018-12-14 07:53:05\n\nBUILDDATESTAMP_STR:  160101.0800\n\nBUILDLAB_STR:  WinBuild\n\nBUILDOSVER_STR:  10.0.17134.472\n\nANALYSIS_SESSION_ELAPSED_TIME:  22ae\n\nANALYSIS_SOURCE:  KM\n\nFAILURE_ID_HASH_STRING:  km:0x7f_8_dokan1!dokanmain\n\nFAILURE_ID_HASH:  {f34a891e-6a0e-ce29-ec83-91bfccf47628}\n\nFollowup:     MachineOwner\n---------\n\n```\n\n. our implementation is quite similar to the mirror sample, we just might not have all the files  available because it's kind of a partial network drive, if a file is not available it hangs the `FileStreamOpening` for few seconds with a `ManualResetEvent`... so yes, i guess we could add to mirror something that randomly hang the same method and see what happens.... Sorry i've posted some methods specific to our implementation before... not so useful, i feel dumb \ud83d\ude35 .\n\nTo remedy i've altered a little the mirror sample to mimic what happen in our implementation and managed to reproduce the BSOD TrabacchinLuigi/dokan-dotnet@2744b65148ef435ba304cadd6673a09d17cb86ec\n\n\nRemoving the lock it works fine, but i do think that investigating this behaviour could be useful.\nAlso, dokany should be bullet proof against what the user does in usermode BSOD aren't that good. Hi guys, back from holidays? \nAny news on this? Lead to some bug discovery ?. Just my impression but i think this could help a lot identify the problem. since it gets into BSOD almost instantly...\nWhen i'll have a new pc i could install few virtual machines and debug drivers easier, maybe i could help too then...\ngood luck for now !. Hi! got the new PC, prepared a VM, installed WinSDK and WDK (i got the newer one, but i think it's ok just for test purposes), made the pipe from local PC to virtual com port and connected to kernel debug succesfully.\n\nVisual studio bothered for some missing spectre/meltdown libs, but i got them installed as-well (not sure if it was better to just disable the fix, but i went for the additive way), now it builds, but i can't find dokan1.sys file... i'm doing something wrong ? visual studio does not complain about errors... so i'm a little confused.... I did batch build, then selected Win10 debug|x86 and Win10 Debug|x64 i also selected to build all other projects in debug x86 and x64. i'm starting to feel dumb... the file is there... just i can't see it from explorer nor console, but if open it from notepad typing the path it exists... i'm sure i have show hidden files and also system files... wtf.... damn! it was not under the sys project... but in the solution folder... sorry. C:\\Users\\LocalAdmin\\Desktop>dokanctl.exe /i d\nDriver path: 'C:\\Windows\\system32\\drivers\\dokan1.sys'\nInstalling driver...\nDokanServiceInstall: Service (Dokan1) installed\nDokanServiceControl: Failed to start service (Dokan1). error = 577\nDokanServiceInstall: Service (Dokan1) start failed\nDriver install failed\n\nwhat can i possibly did wrong ?. So, i've managed to install dokany i've built, i'm running my sample (this version takes longer to crash, maybe because of the incremented max threads), still if i try to open a lot of file the machine hangs in a way which is even worse, CPU skyrockets and become totally unresponsive, i loose connection to the VM and even if i let it run it won't recover after hours... nor i get a minidump.\nNow i'd like to debug it, so i've tried the named pipe to COM approach and didn't worked quite well so i went for the KDNet approach, i can connect in kernel debug via visual studio, but i'm not hitting breakpoints... \nCan i have some more hints ? \ud83c\udd98 \ud83d\udc8c . AH! i did it! i had to break execution and run !analyze it loaded symbols and now i can set breakpoints!. i managed to reproduce it, when it happens it stops on a `DbgBreakPoint()` i expected to see many threads instead it's just one... if you wanna have a look i can provide screenshots stack trace, variables etc... remote desktop connections.... I'll test it tomorrow . Good feedback here too, got c mirror running for 10 minutes then i moved to test our implementation and it's running now for 50minutes.\nit does work.. Got this very problem, just with our implementation, our filesystems where being unmounted out of our control, so i've tried 3 things: \n\n1. `TryResetTimeout` that did not help much, i've added it where i knew there was some long requests.\n2. Rolling back to previous version seemed to help, but i very liked the GC pressure reduction.\n3. Also the fix suggested in #776 seems to help (built it in release). but i have to run the driver with test signature.. Got another feedback today, old version still get unmounted (on slower machines) when we got very long calls, so i'm investigating where to put more `TryResetTimeout` i'll provide feedback after more testing. Ok: So i've filled our code with `TryResetTimeout` (where network requests where made) with no results.\nEliminated the slow-factor (ran it just locally, so no long requests where made) and still no results.\nI think i'll install debug version of dokan and try to enable the logs.. [DBG-KERNEL.LOG](https://github.com/dokan-dev/dokany/files/2920225/DBG-KERNEL.LOG)\nhere we go: from mount to the end. ```\n => NotificationLoop    \n00071922    46.30887604 [DokanFS] Try acquire SpinLock...   \n00071923    46.30887604 [DokanFS] SpinLock irp Acquired \n00071924    46.30887985 [DokanFS] SpinLock notify Acquired  \n00071925    46.30887985 [DokanFS] Clear Events...   \n00071926    46.30887985 [DokanFS] Notify event cleared  \n00071927    46.30888367 [DokanFS] Pending event cleared \n00071928    46.30888367 [DokanFS] Release SpinLock...   \n00071929    46.30888748 [DokanFS] SpinLock notify Released  \n00071930    46.30888748 [DokanFS] SpinLock irp Released \n00071931    46.30889130 [DokanFS] <= NotificationLoop   \n00071932    50.00617599 [DokanFS] ==> ReleaseTimeoutPendingIRP  \n00071933    50.00617981 [DokanFS]   IrpQueue is Empty   \n00071934    50.00618362 [DokanFS]   Timeout reached so perform an umount    \n00071935    50.00618362 [DokanFS] ==> DokanUnmount  \n00071936    50.00618744 [DokanFS]   Send Unmount to Service : \\Volume{d6cc17c5-1736-4085-bce7-964f1e9f5de9} \n00071937    50.00625610 [DokanFS] => NotificationLoop   \n00071938    50.00625992 [DokanFS] Try acquire SpinLock...   \n```\n\ni've set up a 20seconds timeout mounting this FS and i call  `TryResetTimeout` before any long operation with a value bigger than the operation timeout (and probably i didn't need it because the file i was reading is local.... i also have a log from our implementation showing each call duration \n![image](https://user-images.githubusercontent.com/136717/53657840-961fd280-3c57-11e9-908e-59af88b95fb6.png) and i can see none went slow... but the drive got unmounted anyway\n. P.S. those test where all made with 1.1.0.1000 (setup 1.1.0.2000). Built the driver with changes from #776 and installed in the same test machine, got a movie playing for more than 2Hours and still no unmount (wasn't lasting a couple of minutes before). Argh didn't knew that, I'll try to redo it, but I have small time today.... I was wondering: can this be moved to a method and be tested somehow?. IMHO this fix solve a nasty situation in a released driver with no significant downsides, I would rather merge this, test, release, and finally look deeper.",
    "KyleSanderson": "@Liryna your message is bad, you're looking for VC++ 2017, not VC++ 2015. By the way, the binaries are here https://blogs.msdn.microsoft.com/chuckw/2017/08/14/visual-studio-2017-15-3-update/ (the installer fails to grab the right versions).. Thanks for confirming Rondom. Hopefully @Liryna is able to make another 1.0.x release as 1.1.0 crashes instantly.. @Liryna that's tragic man, any idea why there's no stable API? It looks like WinSSHFS has been battling with breaking API/ABI changes for years.. Hey all, first and foremost thank you all for working on this tragic regression on the Dokany project. \nThe last \"good\" version that I can tell is 1.0.3 which properly unmounts the volumes on sleep. I don't think this is a new issue, rather a regression with a cset in the tree; if that helps at all.. ",
    "fanlonglong8500": "I encountered the same problem\uff0cI found it deadlock in DokanDispatchCleanup -> FlushFcb -> CcFlushCache  \uff0c but i do not know how to fix it\uff0c and i have a question to this \uff0cwhere is fcb->SectionObjectPointers init\uff1f  . @Liryna \nWill my analys is correct?Hope to get your advice.\n. > I understand your case here. I am wondering on which lock CcFlushCache is calling the ExAcquireResourceExclusiveLite.\nCcFlushCache will call FsRtlAcquireFileForCcFlushEx, I disassemble this function, I found it will lock DokanFCB.AdvancedFCBHeader.Resource and  DokanFCB.AdvancedFCBHeader.PagingIoResource.\n\nA situation where the lock was needed: #426 \n\nFrom #426 deadlock thread,I guess #426 is the same reason as this BUG,but #426 does not describe its use of the environment,I can not disassemble the kenerl to verify that.If #426 is really the same reason as this BUG , I think that commit is not correct.\n\nWe should be able to call CcUninitializeCacheMap safely in race condition.\n What kind of lock do you think we should do here ?\n\nIf We should be able to call CcUninitializeCacheMap safely in race condition only in our driver,we can apply a new lock to protect it .And we also use this new clock to protect CcXXX routine.\nMy English is particularly poor and it took me a whole morning to write these :sweat_smile:\uff0cIf you can not understand what I wrote, it may be my expression is wrong.You can say your question directly.\n. > Are you sure this is not locked by dokan before the call of CcFlushCache ?\n     thread 1 \n         |\n      (FlushFcb)                                                   \n      lock fcb->PagingIoResource[ LOCK A ]             |  thread 2\n         |                                             |     | \n         |                                             |  (FsRtlAcquireFileForCcFlushEx)             \n         |                                             |  lock fcb->AdvancedFCBHeader.Resource[ LOCK B ]\n         |                                             |     |            \n(FsRtlAcquireFileForCcFlushEx)                         |  (FsRtlAcquireFileForCcFlushEx)                              \nwill lock [ LOCK B ] , but can not lock , Because this |  will lock [ LOCK A ] , but can not lock , Because this lock \nlock has been owned by thread 2                        |  has been owned by thread 1\n\nBecause locking PagingIoResource before calling CcFlushCache caused this deadlock.\n\nThis would be the same as PagingIoResource lock no ?\n\nThis will not be the same as PagingIoResource\uff0cbecase  new lock is only locked by dokan driver.Of course, we need to use this lock carefully, especially when there is pageio\n\nI cannot find information on how lock for CcXXX should be handled \ud83d\ude22\n\nFrom MSDN no special instructions to lock and CcFlushCache lock (Resource , PagingIoResource), I guess before calling CcFlushCache do not need to lock PagingIoResource.\n. the example also not lock pageio before  CcPurgeCacheSection\uff0cit is unlock\nbefore CcPurgeCacheSection. > Why disable DokanNotifyReportChange ?\nI test ntfs . I found ntfs is reportchange on close.\n\nAcquire and release of resource here\n\nSee the following example \nhttps://github.com/Microsoft/Windows-driver-samples/blob/aa6e0b36eb932099fa4eb950a6f5e289a23b6d6e/filesys/fastfat/cleanup.c#L991\n. \u4f60\u597d @Liryna ,\n A simple question, how do I get those test programs?. Hi @Liryna ,\nI've reviewed the code and found some problems, so you can wait for my next code submission before reviewing.. Hi @Liryna ,\nyou can review now.. Hi @Liryna ,\n\n-Is there a reason for creating COMPLETE_SUCCESS instead of using NTSTATUS ? SUCCESS/PENDING\n-FILE_NOTIFY_CHANGE_SIZE is needed for IFTest StreamNotifySizeTest\n\nI will modify according to your meaning\n\n-Bool isOk should be renamed to FCBAcquired\n\nThe purpose of my design is to return PENGDING if some of the tasks in the complete function can not be completed immediately\uff0cincluding but not limited to FCB locker ( Although  there is only FCB Locker in this situation now )\nIn fact, this code modifies three issues\uff1a\n\n\n625.\n\n\nNtCreateSection will  acquired FCB locker before send IRP \uff0c when before this IRP have DokanOptions->ThreadCount IRP acquire this FCB locker will be deadlock.For example\uff0cthere are DokanOptions->ThreadCount cleanup IRP before NtCreateSection IRP \uff0c all of IRP are same file \uff0cDeviceIoControl will be not return in SendEventInformation\uff0cbecause the cleanup IRPs will get the FCB lock, the FCB lock has been owned by  NtCreateSection IRP's thread. The NtCreateSection IRP does not have chance to complte,beacase all work thread not return in DeviceIoControl . This commit greatly reduces the situation, but does not completely fix it. If you want to completely fix this problem, you need to modify many places.\n\n\nfcb->AdvancedFCBHeader.Flags2 &= ~FSRTL_FLAG2_SUPPORTS_FILTER_CONTEXTS; If this flag not set \uff0c the windows defender will not auto scan our file system. I observed NTFS file system, windows defender only scan the file once(right-click on an exe),But in dokan file system,windows defender auto scan the file every time(right-click on an exe),this will cause a particularly slow right-click on an exe.This change is not recommended incorporated into the mainstream version,because this change affects the filter file system behavior.\n\n\n\nOtherwise, this seems to be a good work \ud83d\udc4d\nHave you been able to reproduce #625 without and see that it correctly fix it ?\n\nIn my environment,this commits correctly fix  #625.\n\nOtherwise, I do not know if you have time or if you would like to do it but we have some IFSTest Oplock test that do not pass and we are looking for some help on it \ud83d\udc4d\n\nTks for inviting me,I may not be able to solve this problem, but I will try to solve it.How can I reproduce this problem?. Hi @Liryna\uff0c :blush:  . Hi @Liryna\n\nWow I was not aware of that. Did you just see it or have you found something on Microsoft doc about it ?\n\nWhen I discovered that the right-click exe was particularly slow due to windows defender, I disassembled fltmgr.sys and wdfilter.sys and I found this method can bypass the windows defender check.\nI was recently analyzing the program trying to figure out why the right-click exe is particularly slow, but nothing has been done.\n\nMade some test on my side and it seems to be stable \ud83d\udc4d Well done!\nNothing to say about the code else that my previous message. Maybe just some logs in case of allocation failure and when request cannot be queue.\n\nI will submit a revised commit according to your opinion, but FSRTL_FLAG2_SUPPORTS_FILTER_CONTEXTS do not want to change?. Hi @Liryna ,\nSorry , I am very busy recently\uff0cbut i found the reason that caused a particularly slow right-click on an exe program.FCB  assicuates a context in wdfilter.sys , windows recoreds the results of the scan using context. when  FCB ref  down to 0, dokan release  FCB and also release the context.So windows scan the file every time. I guess the NTFS cache the FCB ,so the NTFS  does not have this situation.\nabout context,you can see this: https://docs.microsoft.com/en-us/windows-hardware/drivers/ifs/managing-contexts-in-a-minifilter-driver. Hi @Liryna \nI modified the new code based on your suggestion,and I add FCB cache to resolve right-click problem.I guess FCB cache may pass some of the previously failed oplock test. Please help me  review the code of FCB cache ,especially in unmount and delete file and file stream .. Hi @Liryna,\nfcbcache contains a LRU list and a hash table.when a fcb FileCount down to 0,the qualified fcb will inserted into hash table and also insert into head of the LRU list.\nthere are three types of fcb that do not qualify:\n1.fcb of stream\n2.fcb of create file faild\n3.fcb of deleted file\nwhen fcbcache save the number of fcb more than MaxFcbCached,it will delete some recently not used fcb.LRU list help me to achieve these,because the fresh fcb always inserted into head of the LRU list.it is mean recently not used fcb will be at the end of LRU list.\ntypedef struct _FCB_CACHE_TABLE {\n    PLIST_ENTRY Table;     //hash table\n    LIST_ENTRY Lru;        //LRU list\n    LONG TableSize;        //hash table slot number\n        LONG MaxFcbCached;     //allow the maximum number of cached fcb\n    LONG FcbCached;        //current number of cached fcb\n}FCB_CACHE_TABLE, *PFCB_CACHE_TABLE;\nBOOLEAN DokanInitFCBCache(__in PDokanVCB Vcb, __in LONG TableSize, __in LONG MaxCached) \nIt is init fcbcache data structs\nTableSize:init hash table slot number.if this value is 0, will use the default value(DOKAN_DEFAULT_CACHE_SIZE 509)\nMaxCached:init maximum number of cached fcb.if this value is 0, will use the value of TableSize * 2\nright-click an exe program:\nbefore:\nIRP_MJ_CREATE(In dokan, create new fcb and fcb FileCount is 1;In wdfilter.sys, found new fcb and scan it,store answer of scan into fcb's context)\nIRP_MJ_CLOSE(In dokan, fcb's FileCount down to 0 and free it,FsRtlTeardownPerStreamContexts will callback wdfilter.sys free context) \nIRP_MJ_CREATE(In dokan, create new fcb and fcb FileCount is 1;In wdfilter.sys, found new fcb and scan it,store answer of scan into fcb's context)\nIRP_MJ_CLOSE(In dokan, fcb's FileCount down to 0 and free it,FsRtlTeardownPerStreamContexts will callback wdfilter.sys free context) \nIRP_MJ_CREATE(In dokan, create new fcb and fcb FileCount is 1;In wdfilter.sys, found new fcb and scan it,store answer of scan into fcb's context)\nIRP_MJ_CLOSE(In dokan, fcb's FileCount down to 0 and free it,FsRtlTeardownPerStreamContexts will callback wdfilter.sys free context) \n.....\n.....\nSo the number of wdfilter scanning the same file is the same as the number of IRP_MJ_CREATE\nnow:\nIRP_MJ_CREATE(In dokan, create new fcb and fcb FileCount is 1;In wdfilter.sys, found new fcb and scan it,store answer of scan into fcb's context)\nIRP_MJ_CLOSE(In dokan, fcb's FileCount down to 0 and cache it,FsRtlTeardownPerStreamContexts will not be called) \nIRP_MJ_CREATE(In dokan, get old fcb from fcbcache;In wdfilter.sys, found old fcb and pass it)\nIRP_MJ_CLOSE(In dokan, fcb's FileCount down to 0 and cache it,FsRtlTeardownPerStreamContexts will not be called)\nIRP_MJ_CREATE(In dokan, get old fcb from fcbcache;In wdfilter.sys, found old fcb and pass it)\nIRP_MJ_CLOSE(In dokan, fcb's FileCount down to 0 and cache it,FsRtlTeardownPerStreamContexts will not be called)\n.....\n.....\nSo the number of wdfilter scanning the same file is one.\nAs long as the value of MaxFcbCached can guarantee that fcb can be cached, during a right-click period,this problem will not appear.I tested default value can work well now.\n . @HanixNicolas If you don't understand my code, we can discuss together. @Liryna No problem, I understand your thoughts.. ",
    "dwalkes": "Thank you @Liryna for your response and suggestions.  I could definitely help maintain the code which would be added to support physical disk mirroring as an example.  I need to learn more about the work necessary to incorporate the features of ImDisk and exporting as a physical disk.  I plan to look at this in the upcoming week and will report here with questions or thoughts about how this could be implemented.  In the meantime if anyone on the Dokan team is interested in helping implement as a paid gig please comment here or send me a message.. @Liryna, please see my comments in related pull request https://github.com/dokan-dev/dokany/pull/746, this relates to the discussion above.  Thanks!. Hi @Liryna ,\nThanks for the response.\nI have one question about this comment:\n\nThe issue I have here is that your contribution does not seem to be part of the dokan project but more like a third part FS using dokan.\n\nGoing back to your previous comments in #627:\n\nUsually external projects using dokan are listed on the dokan front page: https://dokan-dev.github.io/\nHere I totally understand that it is a great example of implementation in another layer and could be provided as a \"simple\" example to physical disk mirror.\nThe question of adding it in dokan samples repository (when it will be ready) is about maintaining it for me. I would need some help to maintain it, and this, for an undefined time. It should not be a day to day maintains but still need to follow to changes in dokan. @dwalkes are you willing to be an official maintainer of it if integrated in dokan repository ?\n\nAre you no longer interested in the idea of incorporating a project like this into the samples repository?  Or is there a way @AGritsevich could transform his PR into something we could use there?\nThanks\nDan\n. ",
    "ic3man5": "Getting the same error:\n```\n[2260:10BC][2017-12-02T18:05:53]e000: Error 0x80091007: Hash mismatch for path: C:\\ProgramData\\Package Cache.unverified\\vcredist_2017_x86.exe, expected: BDB645EBAF3C91ECEB1A143BE6793CA57E6435C3, actual: 370583C380C26064885289037380AF7D8D5F4E81\n[2260:10BC][2017-12-02T18:05:53]e000: Error 0x80091007: Failed to verify hash of payload: vcredist_2017_x86.exe\n.....\n[3B70:0AA0][2017-12-02T18:05:56]i338: Acquiring package: vcredist_2017_x86.exe, payload: vcredist_2017_x86.exe, download from: https://download.visualstudio.microsoft.com/download/pr/11100229/78c1e864d806e36f6035d80a0e80399e/VC_redist.x86.exe\n[2260:10BC][2017-12-02T18:05:57]e000: Error 0x80091007: Hash mismatch for path: C:\\ProgramData\\Package Cache.unverified\\vcredist_2017_x86.exe, expected: BDB645EBAF3C91ECEB1A143BE6793CA57E6435C3, actual: 370583C380C26064885289037380AF7D8D5F4E81\n[2260:10BC][2017-12-02T18:05:57]e000: Error 0x80091007: Failed to verify hash of payload: vcredist_2017_x86.exe\n```. ",
    "neiaberau": "do not have an older file in the download folder.\nI looked at some source in github, although I do not really have a clue how this works, I stilll do have a question:\nin Bootstrapper.wixproj, line 65 , the out-filenames seem to be switched on both lines?\npowershell -command \"wget https://download.visualstudio.microsoft.com/download/pr/11100230/15ccb3f02745c7b206ad10373cbca89b/VC_redist.x64.exe -OutFile Redist\\VCRedist_2017\\VC_redist.x86.exe\"\npowershell -command \"wget https://download.visualstudio.microsoft.com/download/pr/11100229/78c1e864d806e36f6035d80a0e80399e/VC_redist.x86.exe -OutFile Redist\\VCRedist_2017\\VC_redist.x64.exe\"\n. ",
    "E14": "@Liryna Is it possible to remove the defunct installer file from the release of 1.1.0?. ",
    "tomato3107": "KB2999226 is only part of older versions but not of current versions like 1.1.0.2000. Your log does not seem to be created by a  1.1.0.2000 setup.\nIf you need to install older versions, you could install KB2999226 there first.. KB2919355 is \"Windows Server 2012 R2 Update is a cumulative set of security updates, critical updates and updates\". It would be quite weird of a minor driver as Dokany to include an OS security update. Checking the system for being up-to-date is all that should be done.\n. ",
    "HanixNicolas": "@Liryna  Any news about this? \n@fanlonglong8500 Good fix.Thanks.. @fanlonglong8500 I test it on windows 10. It works fine in my ENV.Great fix.\ud83d\udc4d\n. @Liryna I will spend some time to study the  code and discuss the fix with my friend who is good at Winows Driver.. @Liryna Hi,I have studied the code and disscused it with my friend.\nDo more test both on win7 and win10,all is ok.\nWill you merge the code to the master ?\nDo you have a plan to release a new version?\n@fanlonglong8500 Thank you.Good fix.\ud83d\udc4d \ud83d\udc4d \ud83d\udc4d \n. @Liryna  Hi, Any news about this?. In explorer Drive is ok\n\n32bit notepad.exe try to open file.\n\nThe Drive M show as disconnected Network Drive\n\nthe reason is dokannp1.dll must be copied to %WINDIR%\\system32.\non x64  copy dokannp1.dll (64) to  %WINDIR%\\system32\n             copy dokannp1.dll (x86)  to %WINDIR%\\SysWOW64\nand change the registry HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\dokan1\\NetworkProvider \nchange ProviderPath type to REG_EXPAND_SZ    value to  %WINDIR%\\system32\\dokannp1.dll\nthen it ok.\n\nplease modify the install script. thank you\n. Hi,@Liryna,I am very happy to receive your reply.\nnotepad 64bit  also work in my VM.\nOn 64bit windows,The operating system uses the %SystemRoot%\\system32 directory for its 64-bit library and executable files.  When executing 32-bit applications, WoW64 transparently redirects 32-bit DLLs to %SystemRoot%\\SysWoW64, which contains 32-bit libraries and executables. \nmore info:\nWoW64\nFile System Redirector\n. Hi @Liryna \nwe don't  need to register the dokannp1 32 bits also in the register.\nJust copy 32bit dokannp1.dll  to %WINDIR%\\SysWOW64\nand change the registry HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\dokan1\\NetworkProvider\nchange ProviderPath type to REG_EXPAND_SZ value to %WINDIR%\\system32\\dokannp1.dll.\nThen it will be ok.. I try to debug it and find the reason.\nin the file sys\\public.h\ntypedef struct _DOKAN_CONTROL {\n  /** File System Type */\n  ULONG Type;\n  /** Mount point. Can be \"M:\\\" (drive letter) or \"C:\\mount\\dokan\" (path in NTFS) */\n  WCHAR MountPoint[MAX_PATH];\n  /** UNC name used for network volume */\n  WCHAR UNCName[64];\n  /** Disk Device Name */\n  WCHAR DeviceName[64];\n  /** Volume Device Object */\n  PVOID DeviceObject;\n  /** Session ID of calling process */\n  ULONG SessionId;\n} DOKAN_CONTROL, *PDOKAN_CONTROL;\nsizeof(PVOID) is 4 on x86\nbut sizeof(PVOID) is 8 on x64\non this case user space process is x86 but driver is x64,dokannp1.dll communicate to driver,only can read the first DOKAN_CONTROL ,others will failed.\n. Hi @Liryna  this is another issues. I build dokany by the code of today  after  #653 is fixed.\nshould change PVOID to PVOID64,both sizeof(PVOID64) is 8 on x86 and x64. Hi @Rondom ,there is a solution for temp fix.\nOn x64 windows,32-bit user space files dokan1.dll  dokannp1.dll dokanfuse1.dll that in C:\\Windows\\SysWOW64,build with PVOID64.\nOn x86  windows,files still build with PVOID.\nSo that ,we can not change the driver,and not break   ABI-compatibility.\nbut we need to modify the build script and install script to work around.\n. Hi @Liryna \uff0cI try to rebase it\uff0cbut failed\uff0ccan you help me to keep the history clean?. I try to debug it and find the reason:\nIn the dokannp1.dll not use SessionId to Filte  the drives that  belong to current session.. Hi @Liryna  I have created a different PR with this bug fix. . Hi @Rondom \uff0cits a comment in Chinese,I remove it.please ignore it.. ",
    "ishanarora": "\nYeah, the time check in the timeout.c isn't getting hit every time, only some of the time, so resetting the timeout in only that spot doesn't work, we need a more reliable way to detect if a sleep/wake action has occurred.\n\nInstead of relying on the time check ( in the timeout.c ) for ignoring sleep states, #753 fixes this by ignoring one-off timeout failure, instead requiring multiple consecutive timeouts.. Hi @Liryna ,\n1fdf9fb looks good to me. I have not tested it though.. Duplicate of #753 . Hi @Liryna ,\nI face issue #634 / #692 where dokany unmounts my cppcryptfs mounts when my Surface Book 2 wakes up from modern standby sleep.\nThe scenario where the kernel sees a single timeout followed by the userspace process coming back can happen when the system wakes up from sleep/hibernation, or when the userspace process gets busy in a long computational loop (e.g. a key derivation function in a cryptographic driver).. ",
    "peacebian": "hello @Liryna\nthank you for the commit.\nThe app I use for testing is running up to 6000 threads, so set the 3000 to Threadmaximum, I think enough.\nI think 5,000 is a safe value for a fixed value.\nhappy new year!!!\n. Hello @Liryna \nAbout the number of threads, I think so too.\nI haven't used FSX yet, but just yesterday,\n I also found that, in the case of continuously working long hours (for example, 2 weeks), \n the crash occurred in Dokany2.dll. (USE_ASYNC_IO = 0)\nBut I think this is not the same problem.\nI have no idea.\nnew bug???\nThe following are stacks, memory information, etc.\nstack:\nucrtbase.dll!00007ff94908b70e()\nucrtbase.dll!00007ff94908d3a5()\nucrtbase.dll!00007ff94908d6ab()\ndokan2.dll!BeginDispatchWrite(_DOKAN_IO_EVENT * EventInfo) \u884c 33 C\ndokan2.dll!ProcessIOEvent(_DOKAN_INSTANCE * Dokan, _DOKAN_OVERLAPPED * Overlapped, unsigned long IoResult, unsigned __int64 NumberOfBytesTransferred) \u884c 1354    C\n\nsource:\nvoid BeginDispatchWrite(DOKAN_IO_EVENT *EventInfo) {\nDOKAN_WRITE_FILE_EVENT *writeFileEvent = &EventInfo->EventInfo.WriteFile;\n  PDOKAN_INSTANCE dokan = EventInfo->DokanInstance;\n  NTSTATUS status;\nassert(EventInfo->DokanOpenInfo);            //DokanOpenInfo == NULL \n  assert((void)writeFileEvent == (void)EventInfo);\n  assert(EventInfo->ProcessingContext == NULL); //here ???\nCreateDispatchCommon(EventInfo, 0);\nCheckFileName(EventInfo->KernelInfo.EventContext.Operation.Write.FileName);\nDbgPrint(\"###WriteFile file handle = 0x%p, eventID = %04d, event Info = 0x%p\\n\",\n      EventInfo->DokanOpenInfo,\n      EventInfo->DokanOpenInfo != NULL ? EventInfo->DokanOpenInfo->EventId : -1,\n      EventInfo);\nif (dokan->DokanOperations->WriteFile) {\n.......................................................\nEventInfo   (memory):\n\nEventInfo   0x000002380bf45040 {EventInfo={ZwCreateFile={DokanFileInfo=0x0000000000000000  FileName=0x0000000000000000  ...} ...} ...}  _DOKAN_IO_EVENT *\nEventInfo   {ZwCreateFile={DokanFileInfo=0x0000000000000000  FileName=0x0000000000000000  OriginalFileName=...} ...}    \nZwCreateFile    {DokanFileInfo=0x0000000000000000  FileName=0x0000000000000000  OriginalFileName=0x0000000000000000  ...} _DOKAN_CREATE_FILE_EVENT\nCleanup {DokanFileInfo=0x0000000000000000  FileName=0x0000000000000000  }   _DOKAN_CLEANUP_EVENT\nCloseFile   {DokanFileInfo=0x0000000000000000  FileName=0x0000000000000000  }   _DOKAN_CLEANUP_EVENT\nReadFile    {DokanFileInfo=0x0000000000000000  FileName=0x0000000000000000  Buffer=0x0000000000000000 ...}  _DOKAN_READ_FILE_EVENT\nWriteFile   {DokanFileInfo=0x0000000000000000  FileName=0x0000000000000000  Buffer=0x0000000000000000 ...}  _DOKAN_WRITE_FILE_EVENT\nFlushBuffers    {DokanFileInfo=0x0000000000000000  FileName=0x0000000000000000  }   _DOKAN_CLEANUP_EVENT\nGetFileInfo {DokanFileInfo=0x0000000000000000  FileName=0x0000000000000000  FileHandleInfo={dwFileAttributes=...} } _DOKAN_GET_FILE_INFO_EVENT\nFindFiles   {DokanFileInfo=0x0000000000000000  PathName=0x0000000000000000  FillFindData=0x0000000000000000 }   _DOKAN_FIND_FILES_EVENT\nFindFilesWithPattern    {DokanFileInfo=0x0000000000000000  PathName=0x0000000000000000  SearchPattern=0x0000000000000000  ...}    _DOKAN_FIND_FILES_PATTERN_EVENT\nSetFileBasicInformation {DokanFileInfo=0x0000000000000000  FileName=0x0000000000000000  Info=0x0000000000000000  }    _DOKAN_SET_FILE_BASIC_INFO_EVENT\nCanDeleteFile   {DokanFileInfo=0x0000000000000000  FileName=0x0000000000000000  }   _DOKAN_CLEANUP_EVENT\nMoveFileW   {DokanFileInfo=0x0000000000000000  FileName=0x0000000000000000  NewFileName=0x0000000000000000  ...}  _DOKAN_MOVE_FILE_EVENT\nSetEOF  {DokanFileInfo=0x0000000000000000  FileName=0x0000000000000000  Length=0x0000000000000000 } _DOKAN_SET_EOF_EVENT\nSetAllocationSize   {DokanFileInfo=0x0000000000000000  FileName=0x0000000000000000  Length=0x0000000000000000 } _DOKAN_SET_EOF_EVENT\nLockFile    {DokanFileInfo=0x0000000000000000  FileName=0x0000000000000000  ByteOffset=0x0000000000000000 ...}  _DOKAN_LOCK_FILE_EVENT\nUnlockFile  {DokanFileInfo=0x0000000000000000  FileName=0x0000000000000000  ByteOffset=0x0000000000000000 ...}  _DOKAN_LOCK_FILE_EVENT\nGetVolumeFreeSpace  {DokanFileInfo=0x0000000000000000  FreeBytesAvailable=0x0000000000000000 TotalNumberOfBytes=0x0000000000000000 ...}   _DOKAN_GET_DISK_FREE_SPACE_EVENT\nGetVolumeInfo   {DokanFileInfo=0x0000000000000000  VolumeInfo=0x0000000000000000  MaxLabelLengthInChars=...}    _DOKAN_GET_VOLUME_INFO_EVENT\nGetVolumeAttributes {DokanFileInfo=0x0000000000000000  Attributes=0x0000000000000000  MaxFileSystemNameLengthInChars=...}   _DOKAN_GET_VOLUME_ATTRIBUTES_EVENT\nGetFileSecurityW    {DokanFileInfo=0x0000000000000000  FileName=0x0000000000000000  SecurityDescriptor=0x0000000000000000 ...}  _DOKAN_GET_FILE_SECURITY_EVENT\nSetFileSecurityW    {DokanFileInfo=0x0000000000000000  FileName=0x0000000000000000  SecurityDescriptor=0x0000000000000000 ...}  _DOKAN_SET_FILE_SECURITY_EVENT\nFindStreams {DokanFileInfo=0x0000000000000000  FileName=0x0000000000000000  FillFindStreamData=0x0000000000000000 } _DOKAN_FIND_STREAMS_EVENT\n        ProcessingContext   0x0000000000000000  void *\nDokanInstance   0x000002380af85e30 {CriticalSection={DebugInfo=0xffffffffffffffff {Type=??? CreatorBackTraceIndex=??? ...} ...} ...}    _DOKAN_INSTANCE *\nDokanOpenInfo   0x0000000000000000    _DOKAN_OPEN_INFO *\nEventResult 0x0000000000000000    _EVENT_INFORMATION *\n        EventResultSize 0x00000000  unsigned long\n        KernelInfoSize  0x006e014e  unsigned long\n        Size    0x006e021e  unsigned long\n        Flags   DOKAN_IO_EVENT_FLAGS_NONE (0x00000000)  _DOKAN_IO_EVENT_FLAGS\nDokanFileInfo   {Context=0x0000000000000000 DokanContext=0x000002380bf45040 DokanOptions=0x000002380af44630 {Version=...} ...}  _DOKAN_FILE_INFO\nKernelInfo  {EventContextBuffer=0x000002380bf45110 \"N\\x1n\" EventContext={Length=0x006e014e MountId=0x00000004 SerialNumber=...} }   \n\n\n. I output the log and check whether the writing operation was done after CLEANUP or CLOSE, but because a lot of logs, I can not prove it yet.\nDid you have similar problems?\nI think that it is a problem of dokan2.dll, sys, do you have any idea?\nI am analyzing the source of dokan2.dll now. I can only do this.. Hello @Liryna \nI'm also investigating what is happening, but I don't know yet.\nWhen I was investigating the source, I found one difference between dokan1 and dokan2, dokan2 did not use OpenCount at Close and Create.\nCan you tell me why you don't use it?\n. Hello @Liryna \nI added some log, and examined what was happening before crashing.\nThe following is result:\nCreateFile B_file\nCreateFile A_file\nMoveFile A_file to B_file (guessing)\nCleanup B_file\nCloseFile B_file\nSo, after the movefile, I guess that it crashed in the WriteFile(BeginDispatchWrite). \nI think we need to fix the \"assert\" in the BeginDispatchWrite.\n. ",
    "TonyValenti": "Thanks so much!  I'm really excited to give this a shot!. Yes it does!  Thank you.\n@Liryna,\nI have a WebDav-based app that I'm working to port to Dokany.  Do you know\nany freelance Dokan devs that might be interested in a short-term project?\nOn Wed, Dec 27, 2017 at 5:11 AM, Liryna notifications@github.com wrote:\n\nHi @TonyValenti https://github.com/tonyvalenti ,\nDoes this answer your question ?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/641#issuecomment-354098106,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AM-qVqUIl213D_Do_HG5eAggTraPyGZYks5tEiX_gaJpZM4RKkHD\n.\n\n\n-- \nTony Valenti\n. ",
    "thany": "A bit of an update.\nI've uninstalled VC2017 redist. Goodness knows I might need it for something, but the Dokan installer can't handle, because now it gets a lot further.\nHowever, it still won't install entirely. After the reboot message, it says \"Fatal error during installation\". So it has completed, but also failed. Nice.\nI'll give it yet another reboot. Oh and here's the log: \nDokan_Library_1.1.0.1000_Bundle_20171222100425.log\n. ",
    "AceHack": "I'm really curious if it's possible to just use a universal driver in UMDF 2 for the file system.  Thanks.. I'm looking to create a distributed FS for windows similar to GlusterFS or CephFS, I have the distributed systems experience, I've just not done a lot of driver work other than GPIO.  Thanks.. GlusterFS client is FUSE API on linux. The page you link says\n\nNote:\nWindows IoT Core supports Universal Inf only.\n\nSo this project has a universal inf?. ",
    "Mattiwatti": "Hiya,\nI also ran into this and found that even the \"nullFilter\" MS sample driver (nullFilter.inf) (which does literally nothing) generates this warning! Very frustrating. Since this was the first result on Google after searching for this warning, I'll post my solution here (relevant sections only):\nBefore:\n```inf\n[DestinationDirs]\nDefaultDestDir          = 12\nNullFilter.DriverFiles  = 12            ;%windir%\\system32\\drivers\n[DefaultInstall]\nOptionDesc  = %ServiceDescription%\nCopyFiles   = NullFilter.DriverFiles\n[DefaultUninstall]\nDelFiles   = NullFilter.DriverFiles\n[NullFilter.DriverFiles]\n%DriverName%.sys\n``\nAs you can see bothCopyFilesandDelFilesrefer to[NullFilter.DriverFiles]` which is what's causing the warning. And after reading the note in @Liryna's post I do believe it makes sense to generate a warning here, but only because the default behaviour is backwards and counterintuitive. When upgrading/replacing an existing driver with the same filename, I would expect the above INF file to (1) delete any existing .sys file, and (2) copy the new .sys file, not (1) silently perform a delete without copy (if your driver is a boot driver, you just killed your system)!\nI split [NullFilter.DriverFiles] into [NullFilter.CopyDriverFiles] and [NullFilter.DeleteDriverFiles], both still containing the same filename. This is enough to get rid of the warning, but does not fix the underlying problem. To do this, I set flags 0x10001 = (DELFLG_IN_USE | DELFLG_IN_USE1) on the 'delete' section (ref: DelFiles directive) and flags 0x2000 = COPYFLG_NOPRUNE on the 'copy' section (ref: CopyFiles directive). The former ensures that any existing files are deleted. The latter is the important one: it prevents the CopyFiles operation from being \"optimized away\" (scary thought...)\nSo the final INF file looks like this:\n```inf\n[DestinationDirs]\nDefaultDestDir                = 12\nNullFilter.DeleteDriverFiles  = 12      ;%windir%\\system32\\drivers\nNullFilter.CopyDriverFiles    = 12      ;%windir%\\system32\\drivers\n[DefaultInstall]\nOptionDesc  = %ServiceDescription%\nCopyFiles   = NullFilter.CopyDriverFiles\n[DefaultUninstall]\nDelFiles   = NullFilter.DeleteDriverFiles\n[NullFilter.DeleteDriverFiles]\n%DriverName%.sys,,,0x00010001 ;(DELFLG_IN_USE | DELFLG_IN_USE1)\n[NullFilter.CopyDriverFiles]\n%DriverName%.sys,,,0x00002000 ;COPYFLG_NOPRUNE\n```\nI tested this and was able to replace a running and attached minifilter driver file without issues on Windows 7 and Windows 10 (the latter does not normally allow you to delete driver files while they are loaded, so that seems to indicate it's working).\nNote that this only takes care of replacing the file(s), not stopping the service. The 0x200 = SPSVCINST_STOPSERVICE flag on DelService is supposed to take care of this and is already set in the sample INF, but this doesn't happen. After reading the MSDN documentation at DelService I believe the cause of this is not so much that the flag is broken, but rather that the DelService operation is not invoked since the driver is not really being 'uninstalled' in this case, only 'reinstalled' or 'upgraded'. Fortunately starting or stopping services is fairly easy to do yourself in an installer script/program.. ",
    "gv2011": "Seems to be a different cause. Moved DokanSetup.exe to a new folder, problem still exists. But don't have time for that now.. ",
    "KerberX": "@Liryna Hi, no, running as mirror.exe /o /d /r \"D:\\Game Files\\The Elder Scrolls\\Skyrim\" /l M: doesn't change anything.\nThis can probably be useful, log from FileSpy. This time I tried to run SaveTool.exe in M:\\Soft\\ folder.\nFileSpy.txt\n. @Liryna Hi,\nI found why I can't run programs. This has something to do with GetFileSecurity function, because returning STATUS_NOT_IMPLEMENTED in MirrorGetFileSecurity solves the problem and allowing me to run any app.  I can't check it on Mirror sample (I can't compile it), but it works on my own implementation, which is almost one-to-one copy of mirror.\nThis isn't good solution, GetFileSecurity can be important to others, but in my case it isn't. I don't really need security information for my purposes, at least right now. Although I'd like to know why MirrorGetFileSecurity prevents process creation.\n  . Hi @Liryna ,\nExcept returning STATUS_NOT_IMPLEMENTED I can't do anything to make it work. Sorry, I have not worked on this since my last reply.. Hi, @Liryna ,\nI somehow managed to run a program from the same process though I don't really know how (I just did some refactoring). But it works only in test program I use to test VFS. It doesn't work in GUI app, I don't know why. I don't think I changed some crucial logic. Functions Get/SetFileSecurity are still set to return STATUS_NOT_IMPLEMENTED.\nAlso I found that file browse dialog opened in the same process also causes VFS to unmount itself, but only if the mounted folder has .exe files. If there are any other files (including .dll, they are fine), the VFS will work as expected.\nHere's the code I use to test VFS: https://github.com/KerberX/KxVirtualFileSystem/blob/master/KxVirtualFileSystem/KxVirtualFileSystemMain.cpp#L57\nWhen I open dialog and mounted folder has .exe files, app hungs for a few seconds. In Process Hacker I see that all threads are paused except one and it stuck doing something in NtMapViewOfSection. Then VFS will unmount itself (and call DOKAN_OPERATIONS::Unmounted), probably because of some timeout.\nThreads list.\nhttps://user-images.githubusercontent.com/32564546/50617110-7a6caa00-0efc-11e9-8bf8-1a5f96261c13.png\nOnly one active thread.\nhttps://user-images.githubusercontent.com/32564546/50617109-7a6caa00-0efc-11e9-88a4-eb69d01742e0.png\nMain thread (suspended currently)\nhttps://user-images.githubusercontent.com/32564546/50617541-de906d80-0efe-11e9-86ea-50e798907e32.png\n. I'll try to test that on v1.. @Liryna ,\nI've tested on latest 1.x release (1.2.1.2000) on slightly modified mirror sample with same results. I pasted this part into mirror's main function and placed DokanMain call into another thread (using std::thread class).\nI can run a program, but opening file browse dialog causes mirror to hung. Even worse, it can freeze entire system, v2 has some kind of timeout in such case, this version just freezes forever.. ",
    "pweyzen": "If I include \u201cdokan.h\u201d \u2013 it in turn wants to include ntifs.h\nSounds like I am doing something wrong\u2026\nSent from Mail for Windows 10\nFrom: Liryna\nSent: Tuesday, January 23, 2018 1:51 PM\nTo: dokan-dev/dokany\nCc: Peter Weyzen; Mention\nSubject: Re: [dokan-dev/dokany] Questions! (#654)\n@pweyzen Hi,\nFor building an application around dokany, you do not need vs2017.\nYou can rebuild the dokan library with your vs and link your application with it. It will work perfectly with the driver installed.\nWdk is only needed to build the kernel driver.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n. It would go a long way toward the usability of the dokany toolkit if it were able to be used without pulling in the WDK.  \nUsing the WDK makes it so that I\u2019ll have to get other developers in my group to install, and update build machines, etc\u2026\nI know I am not telling you anything new, but making dokany more \u201cplug-in\u201d\u2026 would be an awesome feature to anyone that wants to use it.  Now, it\u2019s a bit of a trudge to get the pieces in place.\nSent from Mail for Windows 10\nFrom: Liryna\nSent: Tuesday, January 23, 2018 1:58 PM\nTo: dokan-dev/dokany\nCc: Peter Weyzen; Mention\nSubject: Re: [dokan-dev/dokany] Questions! (#654)\n@pweyzen Or you can load library the dokan1.dll instead of linkind with it. It would need a little of work but there is not so much calls at the end.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n. Hi!\nThanks for putting up with me \u2013 getting the wrong dokan.h got me in trouble and made my head spin.\nI\u2019ve got the right one in place how, and the world so much more sunny!\nMy integration is 100% C++ \nSent from Mail for Windows 10\nFrom: Liryna\nSent: Tuesday, January 23, 2018 11:26 PM\nTo: dokan-dev/dokany\nCc: Peter Weyzen; Mention\nSubject: Re: [dokan-dev/dokany] Questions! (#654)\nHi @pweyzen ,\nI looked more at the build and the library only need the public.h in sys folder. public.h does not seems to have dependency with wdk header. It was made in such way to not need the wdk but maybe something broke since.\nIf I include \u201cdokan.h\u201d \u2013 it in turn wants to include ntifs.h\nit was the dokan.h of sys folder or library ? if you could be more precise to see if public.h is really wdk dependent.\nJust to know, in which language are you planning to build your FS ?\n(C# is doing everything with dllimpot so no need to rebuild the library to your VS tool version).\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n. ",
    "mccoysc": "the x86 and x64 issue should be handled by kernel module:\nall structures and data type should use the static size,not void and so on.and should use the same aligan size(8,etc).\n. any void\uff0culong* and any other pointer type and handle type should not be used,but instead of __int64. if compiled in /MT,the exe and dll can run without any vc runtime requirements. and you said \"shared memory\",in fact,it's a bad code style that malloc/new memory in on module and free/delete in another module.. Yes,you can use dokan which compiled with /MT and other 3rd-party libs which compiled with/MD,they will work well.\n\nOn Mar 10, 2018, at 08:25, atanamir notifications@github.com wrote:\nIf I may add my 2 cents, it's best to distribute both flavors (MD and MT). If you look at boost's nuget binaries for windows, they release both. In our case, we link our dokan FS code with other libraries also compiled with /MD, so having a /MD-compiled dokan static library is important for us.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n. In fact \uff0c/MD increase the app pkg size and app dependcy issues. \n/MT compiled exe only link the code which used by your exe,not the entire run-time file.\nOn Mar 10, 2018, at 09:27, atanamir notifications@github.com wrote:\nyes, but it's not recommended. It's best if they all use the same; the goal of /MD is to reduce binary size, and that only works when everything is linked in using /MD. Again, both /MD and /MT should be distributed together, and the devs can pick which one to use.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n. /MD can receive run-time patches\u2026\u2026but in fact no any end-point users care about the patches and nearly,ms give none c/c++ run-time patches.\nOn Mar 10, 2018, at 09:35, atanamir notifications@github.com wrote:\nThere's definitely pros and cons to either approach. Dynamic linking of the C++ library allows your application to receive any patches they release to the runtime libraries in the future, whereas /MT will not. I prefer MD to MT, every person is entitled to their preference. Again, as I've mentioned, both should be distributed, not one or the other.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n. 4,all structures should be aliganed by same count(8,etc). size is one part of many issues\u2026\u2026for example,2 structures have same suze but may be different in field offset and so on.\nOn Feb 25, 2018, at 21:49, Liryna notifications@github.com wrote:\nHi @mccoysc ,\nThats right and this should have been reviewed \ud83d\ude22\nAll structures shared between the library and kernel are in https://github.com/dokan-dev/dokany/blob/master/sys/public.h if you would like to review them.\nI have print all size of the structs for x86/x64\nprintf(\"DOKAN_CONTROL %u\\n\", sizeof(DOKAN_CONTROL));\n  printf(\"DOKAN_LINK_INFORMATION %u\\n\", sizeof(DOKAN_LINK_INFORMATION));\n  printf(\"DOKAN_RENAME_INFORMATION %u\\n\", sizeof(DOKAN_RENAME_INFORMATION));\n  printf(\"EVENT_START %u\\n\", sizeof(EVENT_START));\n  printf(\"EVENT_DRIVER_INFO %u\\n\", sizeof(EVENT_DRIVER_INFO));\n  printf(\"EVENT_INFORMATION %u\\n\", sizeof(EVENT_INFORMATION));\n  printf(\"EVENT_CONTEXT %u\\n\", sizeof(EVENT_CONTEXT));\n  printf(\"SET_SECURITY_CONTEXT %u\\n\", sizeof(SET_SECURITY_CONTEXT));\n  printf(\"SECURITY_CONTEXT %u\\n\", sizeof(SECURITY_CONTEXT));\n  printf(\"UNMOUNT_CONTEXT %u\\n\", sizeof(UNMOUNT_CONTEXT));\n  printf(\"FLUSH_CONTEXT %u\\n\", sizeof(FLUSH_CONTEXT));\n  printf(\"LOCK_CONTEXT %u\\n\", sizeof(LOCK_CONTEXT));\n  printf(\"VOLUME_CONTEXT %u\\n\", sizeof(VOLUME_CONTEXT));\n  printf(\"SETFILE_CONTEXT %u\\n\", sizeof(SETFILE_CONTEXT));\n  printf(\"FILEINFO_CONTEXT %u\\n\", sizeof(FILEINFO_CONTEXT));\n  printf(\"WRITE_CONTEXT %u\\n\", sizeof(WRITE_CONTEXT));\n  printf(\"READ_CONTEXT %u\\n\", sizeof(READ_CONTEXT));\n  printf(\"DIRECTORY_CONTEXT %u\\n\", sizeof(DIRECTORY_CONTEXT));\n  printf(\"CLOSE_CONTEXT %u\\n\", sizeof(CLOSE_CONTEXT));\n  printf(\"CLEANUP_CONTEXT %u\\n\", sizeof(CLEANUP_CONTEXT));\n  printf(\"CREATE_CONTEXT %u\\n\", sizeof(CREATE_CONTEXT));\n  printf(\"DOKAN_IO_SECURITY_CONTEXT %u\\n\", sizeof(DOKAN_IO_SECURITY_CONTEXT));\n  printf(\"DOKAN_IO_SECURITY_CONTEXT_INTERMEDIATE %u\\n\", sizeof(DOKAN_IO_SECURITY_CONTEXT_INTERMEDIATE));\n  printf(\"DOKAN_ACCESS_STATE %u\\n\", sizeof(DOKAN_ACCESS_STATE));\n  printf(\"DOKAN_ACCESS_STATE_INTERMEDIATE %u\\n\", sizeof(DOKAN_ACCESS_STATE_INTERMEDIATE));\n  printf(\"DOKAN_UNICODE_STRING_INTERMEDIATE %u\\n\", sizeof(DOKAN_UNICODE_STRING_INTERMEDIATE));\nResult:\nStruct    x86 x64\nDOKAN_CONTROL 800 800\nDOKAN_LINK_INFORMATION    12  12\nDOKAN_RENAME_INFORMATION  12  12\nEVENT_START   664 664\nEVENT_DRIVER_INFO 144 144\nEVENT_INFORMATION 48  48\nEVENT_CONTEXT 176 176\nSET_SECURITY_CONTEXT  20  20\nSECURITY_CONTEXT  16  16\nUNMOUNT_CONTEXT   132 132\nFLUSH_CONTEXT 8   8\nLOCK_CONTEXT  32  32\nVOLUME_CONTEXT    8   8\nSETFILE_CONTEXT   20  20\nFILEINFO_CONTEXT  16  16\nWRITE_CONTEXT 32  32\nREAD_CONTEXT  24  24\nDIRECTORY_CONTEXT 28  28\nCLOSE_CONTEXT 8   8\nCLEANUP_CONTEXT   8   8\nCREATE_CONTEXT    56  56\nDOKAN_IO_SECURITY_CONTEXT 44  72\nDOKAN_IO_SECURITY_CONTEXT_INTERMEDIATE    36  36\nDOKAN_ACCESS_STATE    40  64\nDOKAN_ACCESS_STATE_INTERMEDIATE   32  32\nDOKAN_UNICODE_STRING_INTERMEDIATE 6   6\nOnly DOKAN_IO_SECURITY_CONTEXT and DOKAN_ACCESS_STATE have different sizes.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n. Ok\uff0ci'll give a x86/\u00d764 compatible .h file\uff0cmaybe in next end of a week\nOn Feb 25, 2018, at 21:57, Liryna notifications@github.com wrote:\nYes ofc, like DOKAN_ACCESS_STATE is a member of DOKAN_IO_SECURITY_CONTEXT.\nIf you can review the Corillian-asyncio branch it would be highly appreciated \ud83d\udc4d\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n. and may be another way:\nuser can't load dll directly,instead,you write a COM exe(called out-process COM) and export COM interface for dokan users.and the COM exe is in native mode(x64 exe on x64 os and x86 exe  on x86 os ).\nuser can use x86 exe to intetactive with your x64 COM interface and no the current issues.\nOn Feb 25, 2018, at 21:57, Liryna notifications@github.com wrote:\nYes ofc, like DOKAN_ACCESS_STATE is a member of DOKAN_IO_SECURITY_CONTEXT.\nIf you can review the Corillian-asyncio branch it would be highly appreciated \ud83d\udc4d\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n. and...en...you can also support dokan.dll with the same apis,but,the low-level code is changed:\nfor example:  dokan.dll export an API called initDokan(),may be now you call DeviceIoControl to interactive with kernel,but instead,you interactive with your com interface.\nso,users include msys and cygwin can still use dokan.dll with no change.\nOn Feb 25, 2018, at 22:31, Liryna notifications@github.com wrote:\nthe library is also used for msys2 & cygwin, COM will not be an option here \ud83d\ude1e\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n. kernel<=>COM<=>dokan.dll(x86/x64)\nOn Feb 25, 2018, at 22:31, Liryna notifications@github.com wrote:\nthe library is also used for msys2 & cygwin, COM will not be an option here \ud83d\ude1e\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n. and com can work well across network\u2026\u2026this is the another  advantage\nOn Feb 25, 2018, at 22:31, Liryna notifications@github.com wrote:\nthe library is also used for msys2 & cygwin, COM will not be an option here \ud83d\ude1e\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n. \n",
    "benrubson": "Thank you very much Liryna & Andreas for your detailed answer \ud83d\udc4d \n\nProblem is that in order to list a directory in Windows, we need more information than readdir alone provides. So we need to stat (getattr) every single file.\n\nYou're right, this is at least what for example encfs4win seems to do redefining readdir :\nhttps://github.com/jetwhiz/encfs4win/blob/v1.10.1-RC13/encfs/compatwin.cpp#L752\nMany thanks !. I re-ran all tests, with both mirror versions, the fuse and the non-fuse one.\nAnd having tuned Cygwin with some performance options.\nI found 2.0 to be slightly faster.\nI updated the first post accordingly.. Thank you @Liryna \ud83d\udc4d \nLet's then close this, to avoid polluting issues queue. Thank you !. ",
    "zhengwei0418": "Thank you for your help.\nI have another question:The signature tool USES the timestamp URL with paramer /t or /tr report error sometimes,error message is:invalid response. _\nI modified the URL to solve the problem.. No, the mirror runs an error.\ncmd and output : \nC:\\Program Files\\Dokan\\Dokan Library-1.1.0\\sample\\mirror>mirror.exe /r C:\\dokan\\mirror /l k: /d\nCan't install driver\nAfter the compilation is completed, there is no dokan1.sys generated in the x64 directory to generate the win server version. Is it the same kernel version of OS?. @Liryna the cmd\uff1adokanctl /i d error mssage is Dokan Error: Failed to open .\\Dokan_1 with code 2;\nYes, I executed the three commands provided under Signing module.. @Liryna \uff0ce........\nThere is one such operation in build execution.But I didn't know what to do, so I hit enter without do anything.the show message is:\nPlease submit drivers to developer hardware dashboard. Hit ENTER when it is done\nThere is no problem using the release version of the installation package.. I checked all the dokan1.sys files under the generated x64 directory.All of them have been signed, and the signature information is as follows.\n\nManually use dokanctl. Exe/I d on my build machine to install the generated dokan1.sys, which is successfully installed and can be used.. What you mean is that I can sign with any valid certificate without the certificate under the cert directory.\nFor example, I can apply to Microsoft for a certificate called zhengwei, and then sign it with this certificate\uff1f\nIf I do this, then I will put my autographed dokan installation package for commercial use, will it violate copyright?. @Liryna I have tried to use a valid certificate to sign dokan1.sys for normal use.. @Liryna . that's my mistake.I modified the function DeleteDirectory, , I still do the delete operation when the directory is not empty.\nSorry for the trouble. I have Found the problem, MirrorCleanup close handle Whether or not the DokanFileInfo->DeleteOnClose is true;. Thank you for your reply\u3002\nI'm sorry for my late reply\u3002\nI have tried to set two flags\uff0cbut it still not successful\u3002\nI didn't make my meaning clear\u3002What I want to do is get the properties of the file asd.txt on the windows side which mount by dokan\u3002\nIn this operation\uff0cmy dokan program function createfile receives the values of the input-parameter path from two calls to asd.txt and asd.TXT\u3002\nIn my createfile function\uff0cI'll check first to see if the file/directory exists\uff0cby checking if the files on the ubuntu side exist\u3002But file asd.TXT is not exist on the ubuntu side\uff0cso I return STATUS_OBJECT_NAME_NOT_FOUND\u3002\nThen the Windows side failed to get the properties of the file asd.txt \uff0cand the error was that the object could not be found\u3002\nI know this is due to file name case insensitive, I wonder if there is a way for Windows not to get the properties of asd.TXT\nPS\uff1a\nI have successfully modified one of my win10 environments which install on pc, but the problems I described above are always present in another environment which install  on the vmware virtual machine\u3002\nMount to volume does not cause this problem; mount to directory does not\u3002. ",
    "michalpelka": "@Liryna thanks fo reply and suggestion.\nIndeed by using UNC path and adding server to trusted zone I can get rid of \n\nbut my problem is still present :(\n\n. @marinkobabic thanks for reply, but the problem present during running a mirror with \\n switch (for network drive) (in administrator's command shell or user). When it is used with \\n switch somehow calls to run setup packages does not reach mirror.\n . @marinkobabic, thanks!\nI do not agree - I can run alongside User's session running mirror.exe with /n switch, Administrator's session. As the Administrator I can see user's drive mounted - what is more, I can run installation packages.\n. @marinkobabic, I made that test - with ordinary Windows mapped network drive,\nnet use reports only when I run only as User.\nOn other hand net use as User and as Admin reports Dokany drive.. Hello,\nI made experiment with Samba and Windows SMB , mapped network driver and I can successfully run .exe with admin elevation.\n. @marinkobabic I am not getting request for admin rights - only prompt that file cannot be find.\nI made drive as trusted, still getting prompt about unable to find file. That is with mirror and my process.. Hello,\nI am confused. I think that fixed by accident issue with installers in our product, which uses network provided. I simply changed name of file system (FileSystemNameBuffer) returned in GetVolumeInformation. Before it was name of our product, now is NTFS or FAT. NTFS or FAT string allow to execute installers. Please advise.. @Liryna - I fixed my issue with changing our FS Name to NTFS. \nWhat is more I recreated the problems which I had with .exe on mirror example, overriding FS Name to custom string.\nThanks @Liryna and @marinkobabic  for help!. ",
    "wangrenyao": "Hi @Liryna ,\n  Thanks for your work.\nI have uploaded the log photo_app_failed_log.zip, could you please help to check?\n  Test information:\n\nDokany version: 1.1.0.2000, DokanSetupDbg_redist.exe\nSystem environment: Win8 32bit\nTest picture file name: M:\\test.jpg.\n\nPlease let me know if you need other information, thanks.\n. ",
    "graphixillusion": "Sorry if i ask it again but i can't understand how to map a drive with mirror.exe which is bigger than 1GB in size, thank you.. @Liryna thank you for answering. could you provide a quick guide? i'm kinda new to this stuff.. @Liryna ok so i remove the comment in that line and what i need to change in this line?\ndokanOperations->GetDiskFreeSpace = NULL; \ni need to change NULL with what?. @Liryna Could you make a pratical example please? Like: if i need to have a 10GB disk, how i need to modify?. @Liryna Ok i did it, thank you for the support.. @auxilix Probably you are doing the same mistake i did. To make it works you need to change this in line 1695\ndokanOperations->GetDiskFreeSpace = NULL; // MirrorDokanGetDiskFreeSpace;  into this\ndokanOperations->GetDiskFreeSpace = MirrorDokanGetDiskFreeSpace;\nand then just remove the \n/* <--- Line 1369\n*/ <--- Line 1381\nAfter this changes you need to recompile the project with visual studio following this guide:\nhttps://github.com/dokan-dev/dokany/wiki/Build\nDone. The new compiled mirror.exe will not have the 1GB limitation when you map the drive. The only thing i still don't understand is why it's still says that you have 512MB occupied even if there isn't anything inside.. ",
    "auxilix": "Hello, sorry if this appears to be a poor question but I have been attempting to edit my mirror.c file and perform this very same action, however it does not appear to make any difference no matter which mirror.c file i edit.\nI've attempted editing C:\\Program Files\\Dokan\\Dokan Library-1.2.2\\sample\\mirror\\mirror.c and have also attempted editing the same file which exists within the x86 directory.\nIs there a different way I should be going about editing this / un-commenting out the sections to have mirror.exe recognize these changes?. ah yes, my apologies it was a matter of needing to compile afterwards which I was missing, thank you for the clarification!. ",
    "zkoria": "Hi @Liryna\nThanks for your fast response!! \nI will review your comments.. Hi @Liryna \n\nAs you suggested we loaded the mirror example in drive X. In our case, since we are incorporating it into a QT project, we had to remove in the execution thread where we invoked Dokan_Main all the calls to QT elements such as \"MessageBox\" etc, in addition to raising the thread between the instructions QT \"Application app (argc, argv);\" and \"return app.exec () ;\".\n\n\n\nWe first remove the GetDiskFreeSpace comment from the mirror example and from our QT app we obtain the size of the space associated with the account and we pass that value to it, for example:\n\n\nHowever, when adding a file to the drive X the OS responds with notifications of little space on X drive such as:\n\n\nDo you know why this occurs and how to handle it to handle the low space notification drive X ?.\nCurrently we continue testing and integrating the example dokan mirror to our QT app. We have the following concerns:\ni. Assuming that the Dokan_x driver {86,64} .msi is installed. First. It is possible to reference the dokan library (lib) from the directory where it is installed since we observe that it contains a .lib and .h such directory, example:\n\nIf possible, what is advisable about it?\nii. On QT. \n\n\nDo you have a thread reference or information related to incorporate / include / link the Dokan library to a QT project using CMake (CMakeList.txt)? \n\n\nDo you have any thread reference or information related to incorporating the Dokan Dokan_x driver {86,64} .msi driver into the QT installer framework?\n\n\niii. The mirror example indicates that to unmount the drive: CTRL + C in the console or alternatively via \"dokanctl / u MountPoint \\, there is some way through programming to stop / unmount it, for example we would like that after leaving the QT app we will check the unmount of the drive (X).\nGreetings and thanks in advance!.\n.\n. Hi @Liryna \nThank you very much!, regards.\n\nAs you suggested, we implemented the following functions: getTotalNumberOfBytes(), getTotalNumberOfFreeBytes() and FreeBytesAvailable value is calculated when: \nFreeBytesAvailable = (ULONGLONG)(TotalNumberOfBytes - *TotalNumberOfFreeBytes) in MirrorDokanGetDiskFreeSpace function. \n\n// @Capacity\n    *TotalNumberOfBytes = getTotalNumberOfBytes();\n// @Used space\n    *TotalNumberOfFreeBytes = getTotalNumberOfFreeBytes();\nThe return values \u200b\u200bof the functions getTotalNumberOfBytes() and getTotalNumberOfFreeBytes() they are updated in the functions that update the system quotas for the user during the work session.\n\nhi @hyy829119 We hope that you have already solved it or that somehow it helps you what we did to resolve it, greetings.\nI. As mentioned, we set an environment variable in the compilation. And we invoke the environment variable from the CMakeList.txt, being as follows.\nSet environment variable:\n\nInvocation the environment variable from the CMakeList.txt:\n\nII. Unfortunately from the cited reference, it was not possible to obtain information, since there are functions that are not yet implemented, such as MirrorGetFileSecurity or MirrorSetFileSecurity, and it is not easy how to copy and paste them from the mirror example \n\nCurrently we provide the mirror example of the QT signaling as follows:\n\nIn the UpDrive function is the code of the mirror example, except the static functions such as MirrorFinFiles (), etc. In which the object is invoked statically and its methods, slots or signals are accessed. The following image shows how the opening of a directory in the virtual drive is catched and a method that invokes the server in our case is invoked to return the list of files and directories of the open directory through a double click.\n\nWhat do you think of this way of endowing the mirror example with the capabilities of QT?\nIII. \nAs you suggested, and according to the attached documentation, we conclude in the following way to disassemble a virtual unit:\n\nWhen we analyze the code of the library, we observe that while the virtual unit is mounted - and considering the following code dokan.c - it only prints up to the number 0 since it is always kept in the cycle to keep the virtual unit correctly mounted, and once is dismantled, the execution continues,\nthus printing the number 1 and number 2...\n\n@Liryna On the other hand, continuing with our concerns.\n\n\nIs it correct to open a directory through MirrorFindFiles or do other functions have to be considered?. The management of opening the directory through a double click or accessing it through the terminal using \"cd\" is the same or what would be the difference in your case?  \n\n\nWith respect to dokan callbacks, for example: MirrorReadFile, MirrorCreateFile, MirrorDeleteFile, MirrorGetFileInformation ...\n\n\n1.1 We want to determine when a file is opened by the user, that is, by double-clicking or opening it with its associated program to perform a customized pre-process before the content is displayed when it is opened. For the example of double click on a file * .txt opening it with the notebook,\nwe have traced that the MirrorCreateFile function of Dokan, by means of the parameter (ACCESSMASK DesiredAccess) which is the indicator of the operation that we want to perform.\nFor example, we trace the MirrorCreateFile function and observe the following by double-clicking the \"Test.txt\" file, only the output is only once but 5 times as follows:\n...PID 6092\n...CreateFile : C:/Users/Akula/dirUser_clientLaboratory\\Mi unidad\\Test.txt\n... ShareMode = 0x7\n... DesiredAccess = 0x 100080\n... FlagsAndAttributes = 0x200000\n... OPEN_EXISTING\nIt is not possible to determine with certainty what is desired by the repetition of the mentioned event, and not only when opening a file, but when deleting a file or renaming it,\nThis event detected by us is invoked again as a double click\nIt is worth mentioning that we already checked the MirrorReadFile event and the behavior of repetitions is even greater on the file, for example, deleting or renaming it, etc.\nWhat is the best way to determine these events in a unique way for this and other operations on the virtual unit?\nLike the previous example, we should also know  in a unique way when a file is copied, renamed, moved or deleted from the virtual disk.\nIn this context, we are interested in determining in a univocal way:\n1.1.i. When you open a text file, MP3-4, RAR / ZIP, MS-WORD, MS-EXCEL.\n1.1.ii. When the deployment of properties of a file is invoked.\n1.1.iii. Function analogous to FUSE/Release?\nIn general, if there is any thread or related documentation, especially for the treatment of MS-WORD, MS-EXCEL, Mp3/4, RAR/ZIP, PDFs e Images PNG, etc.\n\n\nThe parameter dokanOptions-> ThreadCount = 0; What exactly does it serve? For example, if the library is recompiled and put 501 at the maximum (#define DOKAN_MAX_THREAD 501 in dokanc.h), and set dokanOptions-> ThreadCount = 500; in the mirror example this gives more robustness to the application? Or why is its maximum value currently set at 15?\n\n\nOn the debugging of the library, we have seen that in some threads it is commented about kernel debugging of dokan, how can we do it? You can provide us with some threads or documentation about it. \n\n\nSince currently we only use for that task DbgPrint() of the mirror example.\nIt would be a great help if you could support us with resources and documentation regarding how to debug dokan, since eventually our application in which we have dokan incorporated closes inescapably. \n. Hi @Liryna \nIn a version of C # it reads Remove OpenDir now CreateFile:\n\nWhat would be the way to catch the OpenDir through CreateFile on windows ? (We are using verision C)\nWe want to double-click on a directory. We observe that FindFiles is called but it is also called when we copy and paste a file in the previously opened directory with double click.\nThere is some way to catch only the double click on a directory?\n. Hi @Liryna \nTo the previous concerns:\n\nThank you. A. What do you suggest is the ideal value of DokanOptions-> ThreadCount? Currently we have it to 0, that is to 5.\n\n1.i,ii,iii. \nCurrently we want to determine in a unique way when a directory is opened by double click or read by accessed through the command cd. As we explained in the previous post\n1.1 We agree with you that it may not be great science, but we still can not determine uniquely when a file is opened. We will try to explain with the following two cases: We need to catch the path of the directory on which we double click (BEFORE BEING SHOWN / OPENED BY THE ASSOCIATE PROGRAM) and we are doing it with FindFiles only that way we also return the route when we copy and paste a file in the directory, we require uniquely catch the double click on a directory, since every time this happens we send a process, then you can imagine the problem when we are not trapping it in a unique way.\nFor the case of opening a file the same, we need to uniquely detect when a file is going to be opened (BEFORE BEING SHOWN / OPENED BY THE ASSOCIATE PROGRAM) because we need to perform a previous task , if we use ReadFiles it is invoked more than once per open file (except for the TXT) which is also a problem for us since Every catch we send a process.\nB. We hope we have made ourselves understood.\nII. Thnaks, we already implemented GetFileSecurity.\n. ",
    "hyy829119": "@zkoria @Liryna  Hi, Have you solved your problem? I have the same problem as you, quota assignment in GetDiskFreeSpace, not even direct assignment, does this quota have to be really big for storage? I have tested it, there is no problem to get the real quota, there is a problem to set the specified quota!. ",
    "nimin": "hello @Liryna \nI tried mirror.exe and dokan1.dll in dokany 1.1.0 zip file, and got the same error. . ",
    "fossabot": "Your license scan is passing -- congrats!\nYour badge status is now updated and ready to merge:\n. ",
    "InspirationHello": "Yes, create too often cause blinking.\nThe delete_on_close change because: Try use office open a pptx/docx/... file, then click the tmp file in the explorer, then the temp file disappeared\u3002\nThe write change because: write notify cause ReadDirectoryChanges return many times and fastfat also use fileObject to save write modification flag.\nThe two modification reference fastfat create/write/cleanup.\nI have not tried to only call DokanNotifyReportChange(fcb, FILE_NOTIFY_CHANGE_DIR_NAME when ccb has the flag.. I'm so sorry for the delay.\n\ncall DokanNotifyReportChange(fcb, FILE_NOTIFY_CHANGE_DIR_NAME when ccb has the flag is OK.. in mt, fcb->ShareAccess is not thread safe may cause some file's ShareAccess reference count Incorrect, so cause DokanCheckShareAccess return not expected status,  until the fcb's reference count is zero.. Thank you very mush, I've used some bad tricks to avoid it. eg. the CREATE irp is not supported cancel routine....... Yes, because the user mode create may has been successful\uff0cso should call user mode cleanup/close.. I'm sorry for my misrepresentation. because my English is very poor...\nI mean:\nif the CREATE irp is not supported cancel routine, the handle can closed correctly by Explorer and dokan.\nif  CREATE irp is supported cancel routine,  the user mode may has been successful, so should notify user mode cleanup/close.. I'm sorry for the delay caused by the Chinese Spring Festival.\nTested and found to have been fixed.. ",
    "daeyeonjoo": "Hello @Liryna Thank you for response!!! :). ",
    "cdisti": "Having the same behaviour, I was able to catch kernel logs.\nSWZI1481-0572.LOG\nOutput Shows a lot of this:\nreateFile : C:\\Users\\\nDokanError: Ioctl failed with code 87\nDokanError: Ioctl failed with code 87\n  DokanOpenRequestorToken failed\n  DokanOpenRequestorToken failed\n    ShareMode = 0x7\n    ShareMode = 0x3\n    FILE_SHARE_READ\n    FILE_SHARE_READ\n    FILE_SHARE_WRITE\n    FILE_SHARE_WRITE\n    FILE_SHARE_DELETE\n    DesiredAccess = 0x100080\n    FILE_READ_ATTRIBUTES\n    DesiredAccess = 0x100000\n    SYNCHRONIZE\n    SYNCHRONIZE\n    FlagsAndAttributes = 0x0\n    OPEN_EXISTING\n    FlagsAndAttributes = 0x200080\n    FILE_ATTRIBUTE_NORMAL\n    FILE_FLAG_OPEN_REPARSE_POINT\n    OPEN_EXISTING\nIOCTL_GET_ACCESS_TOKEN failed\nIOCTL_GET_ACCESS_TOKEN failed\nCreateFile status = 0\n    error code = 2\n...\nIOCTL_GET_ACCESS_TOKEN failed\nCreate 1709\nCreateFile : C:\\Users\\\nDokanError: Ioctl failed with code 87\n  DokanOpenRequestorToken failed\n    ShareMode = 0x3\n    FILE_SHARE_READ\n    FILE_SHARE_WRITE\n    DesiredAccess = 0x100080\n    FILE_READ_ATTRIBUTES\n    SYNCHRONIZE\n    FlagsAndAttributes = 0x200080\n    FILE_ATTRIBUTE_NORMAL\n    FILE_FLAG_OPEN_REPARSE_POINT\n    OPEN_EXISTING\n    FlagsAndAttributes = 0x200080\n    FILE_ATTRIBUTE_NORMAL\n    FILE_FLAG_OPEN_REPARSE_POINT\n    OPEN_EXISTING\n    FlagsAndAttributes = 0x200080\n    FILE_ATTRIBUTE_NORMAL\n    FILE_FLAG_OPEN_REPARSE_POINT\n    OPEN_EXISTING\n    FlagsAndAttributes = 0x200080\n    FILE_ATTRIBUTE_NORMAL\n    FILE_FLAG_OPEN_REPARSE_POINT\n    OPEN_EXISTING\nIOCTL_GET_ACCESS_TOKEN failed\nCreateFile status = 0\n  AccountName: JerCh3k-ext, DomainName: ZIVIT\n    ShareMode = 0x3\n    FILE_SHARE_READ\n    FILE_SHARE_WRITE\n    DesiredAccess = 0x100080\n    FILE_READ_ATTRIBUTES\n    SYNCHRONIZE\nCreateFile status = 0\nCreate 1710\nCreateFile : C:\\Users\\\nCreate 1711\nCreateFile : C:\\Users\\\nCreateFile status = 0\n    FlagsAndAttributes = 0x200080\n    FILE_ATTRIBUTE_NORMAL\nFILE_FLAG_OPEN_REPARSE_POINT\n\nCreateFile status = 0\n    OPEN_EXISTING\nCreateFile status = 0\nCleanup 1708\nCleanup: C:\\Users\\\nClose 1708\nClose: C:\\Users\\\nCreate 1712\nCreateFile : C:\\Users\\\nCreate 1713\nCreateFile : C:\\Users\\\nCreate 1714\nCreateFile : C:\\Users\\b7747657\n  AccountName: SYSTEM, DomainName: NT-AUTORIT\u00c4T\n    ShareMode = 0x0\n    DesiredAccess = 0x100000\n    SYNCHRONIZE\n    FlagsAndAttributes = 0x2000000\n    FILE_FLAG_BACKUP_SEMANTICS\n    OPEN_EXISTING\nCreateFile status = 0\n  AccountName: JerCh3k-ext, DomainName: ZIVIT\n    ShareMode = 0x3\n    FILE_SHARE_READ\n    FILE_SHARE_WRITE\n    DesiredAccess = 0x100080\n    FILE_READ_ATTRIBUTES\n    SYNCHRONIZE\n    FlagsAndAttributes = 0x200080\n    FILE_ATTRIBUTE_NORMAL\n    FILE_FLAG_OPEN_REPARSE_POINT\n    OPEN_EXISTING\nCreateFile status = 0\n  AccountName: SYSTEM, DomainName: NT-AUTORIT\u00c4T\n    ShareMode = 0x0\n    DesiredAccess = 0x100000\n    SYNCHRONIZE\n    FlagsAndAttributes = 0x2000000\n    FILE_FLAG_BACKUP_SEMANTICS\n    OPEN_EXISTING\nCreateFile status = 0\nCleanup 1712\nCleanup: C:\\Users\\\nGetFileInfo 1710\nGetFileInfo : C:\\Users\\\n    GetFileInformationByHandle success, file size = 4096\nFILE ATTRIBUTE  = 17\n    result =  0\n    FileStandardInformation\n    DispatchQueryInformation result =  0\nClose 1712\nClose: C:\\Users\\\nAccountName: SYSTEM, DomainName: NT-AUTORIT\u00c4T\nQueryVolumeInfo 1710\nShareMode = 0x0\nDesiredAccess = 0x100000\nSYNCHRONIZE\nFlagsAndAttributes = 0x2000000\n\nGetVolumeInformation: max component length 255\n    FILE_FLAG_BACKUP_SEMANTICS\nGetVolumeInformation: file system name NTFS\n    OPEN_EXISTING\nGetVolumeInformation: got file system flags 0x03e700ff, returning 0x0004000f\nCreateFile status = 0\nQueryVolumeInfo 1710\nGetFileInfo 1711\nGetFileInfo : C:\\Users\\\nGetVolumeInformation: max component length 255\n    GetFileInformationByHandle success, file size = 4096\nGetVolumeInformation: file system name NTFS\nFILE ATTRIBUTE  = 17\n    result =  0\n    FileStandardInformation\nGetVolumeInformation: got file system flags 0x03e700ff, returning 0x0004000f\n    DispatchQueryInformation result =  0\n  AccountName: JerCh3k-ext, DomainName: ZIVIT\n    ShareMode = 0x7\n    FILE_SHARE_READ\n    FILE_SHARE_WRITE\n    FILE_SHARE_DELETE\n    DesiredAccess = 0x100000\n    SYNCHRONIZE\n    FlagsAndAttributes = 0x0\n    OPEN_EXISTING\nCleanup 1710\nCleanup: C:\\Users\\\nCreateFile status = 0\nCleanup 1714\nCleanup: C:\\Users\\b7747657\nClose 1710\nClose: C:\\Users\\\nIoctl failed for wait with code 995.\nThread will be terminated\nIoctl failed for wait with code 995.\nThread will be terminated\nIoctl failed for wait with code 995.\nThread will be terminated\nGetFileInfo 1713\nGetFileInfo : C:\\Users\\\n    GetFileInformationByHandle success, file size = 4096\nFILE ATTRIBUTE  = 17\n    result =  0\n    FileStandardInformation\n    DispatchQueryInformation result =  0\nDokan Error: Ioctl failed with code 2\nQueryVolumeInfo 1711\nGetVolumeInformation: max component length 255\nGetVolumeInformation: file system name NTFS\nGetVolumeInformation: got file system flags 0x03e700ff, returning 0x0004000f\nDokan Error: CreateFile failed \\.\\Volume{d6cc17c5-1732-4085-bce7-964f1e9f5de9}: 2\nDokan Error: Ioctl failed with code 2\nDokan Error: CreateFile failed \\.\\Volume{d6cc17c5-1732-4085-bce7-964f1e9f5de9}: 2\nDokan Error: DokanKeepAlive CreateFile failed \\.\\Volume{d6cc17c5-1732-4085-bce7-964f1e9f5de9}: 2\nUnmounted\nunload\nSuccess. Is there a chance that some anti virus scanner (symantec realtime protection) is causing the delay?\nCan this kind of software have a hook on the Operation System API or something like this?\n. It's a customer managed environment and there is some approval needed to disable anti virus software. \nHope to get a chance to verify this next week.. Finally I can confirm, that everything works correct if symantec is turned off.\nIs there a chance to find whats the reason for this behaviour?. Just to clarify, using the Windows mount manager option prevents symantec causing this problem.. ",
    "abrandeau": "Hello\nI test dokan and CBFS\nCBFS has a function to test this : GetOpenedFilesSnapshot()\nAnthony Brandeau\n. what the difference between dokan and CBFS? except price. Bonjour,oui fran\u00e7ais\nJ'arrive \u00e0 faire fonctionner Dokan : pour r\u00e9sumer \ud83d\udc4d \n1 r\u00e9pertoire global ou se trouve 5000 dossiers clients sur un serveur\nJe d\u00e9veloppe une application .net d'acc\u00e8s \u00e0 des dossiers clients. Cette application quand on demande \u00e0 voir les fichiers du client, cr\u00e9\u00e9 un point de montage associ\u00e9 donc \u00e0 un dossier client\nensuite des fichiers de ce client sont ouverts , excel, word, pdf ect.... depuis mon application\nle probl\u00e8me est que l'utilisateur \"test\" ferme mon application alors que des fichiers sont encore ouvert\net lorsqu'elle veut les enregsitrer le point de montage n'existant plus, excel par exemple ne peut enregistrer\nje ne peux pas m\u00e9moriser les fichiers qui ont \u00e9t\u00e9 ouvert comme vous le sugg\u00e9riez : d'un fichier excel, il y a des macros qui ouvre d'autre s fichiers excel dans le m\u00eame r\u00e9pertoire. donc je ne peux pas savoir ce qui est ouvert...\nCBFS fonctionne avec la fonction GetOpenedFilesSnapshot : on arrive \u00e0 voir les fichiers ouverts et \u00e0 interdire de quitter l'application avant d'avoir proprement fermer tous les fichiers ouverts...\nDokany n'aurait pas une fonction du m\u00eame genre?\n. vous saviez que CBFS ont tout un argumentaire pour dire pourquoi il ne faut utiliser DOKAN sur leur site. Bonjour,\nJe continue mes test de comparaison Dokan CBFS.\nJe rencontre des probl\u00e8mes \u00e0 utiliser CBFS.connect \u00e0 partir d'un partage r\u00e9seau o\u00f9 je fais un point de montage...\nAvec Dokan est ce que cela pose probl\u00e8me de vouloir faire cela?\n. vous disiez : \n\"You can keep a list on your side of current open files to know this.\"\nJ'ai ajout\u00e9 une liste des fichiers ouverts dans la classe d'exemple \npublic class Mirror : IDokanOperations\npublic List liste_application_file_open = new List();\nmais \u00e0 quel moment ajout\u00e9 un fichier dans les fonctions ?\nj'ai du mal \u00e0 trouver... pas dans ReadFile...\nliste_application_file_open.Add(fileName);\nune id\u00e9e?\nAnthony. j'ai regard\u00e9 mais je ne vois pas clairement o\u00f9 positionner cette gestion de liste des fichiers ouverts.\npour l'ouverture il me semble : ReadFile... cela semble fonctionner en d\u00e9buggant et en testant l'ouverture de fichier excel, je vois bien mes fichiers dans ma liste\npour la fermeture ???\nclosefile, unlockfile, ??\n. merci pour la r\u00e9activit\u00e9\nsi j'\u00f4te le fichier de ma liste dans DOKAN_OPERATIONS::CloseFile\nouverture par excel d'un fixhier xls... on commence \u00e0 le modifier... on est pass\u00e9 dans le closefile... et le fichier n'est plus dans ma liste donc alors que toujours ouvert dans Excel????. comment faire pour savoir qu'il s'agit du dernier closefile? et donc qu'on peut consid\u00e9rer le fichier 'non ouvert'\npour mon information : pourquoi il y aurait plusieurs createfile?. ok\nalors que je n'ouvre aucun fichier j'ai un fichier .SVN\\WC.DB ? \u00e0 voir ce que c'est : j'utilise subversion pour la gestion de source... peut \u00eatre mais je ne vois pas le lien\nquand un fichier excel est ouvert on voit dans cette liste les fichiers temporaires je pense qu'Excel ouvre\nde plus j'ai ajout\u00e9 dans le createfile mais que dans le cas is not directory\nif (liste_application_file_open.ContainsKey(fileName))\n                {\n                    liste_application_file_open[fileName] = liste_application_file_open[fileName] + 1;\n                }\n                else\n                {\n                    liste_application_file_open.Add(fileName, 1);\n                }\net dans le closefile\n```\n if (liste_application_file_open.ContainsKey(fileName))\n            {\n                liste_application_file_open[fileName] = liste_application_file_open[fileName] - 1;\n            if  (liste_application_file_open[fileName] == 0)\n            {\n                liste_application_file_open.Remove(fileName);\n            }\n        }\n\n```\nmais cela ne semble pas g\u00e9rer tous les cas car une fois excel ferm\u00e9, il me reste des fichiers dans cette liste\nune id\u00e9e?\n. Je reviens vers vous car je rencontre de r\u00e9elles difficult\u00e9s \u00e0 comprendre comment fonctionne le programme mirroir et o\u00f9 intervenir dans ce code pour y ajouter une gestion des fichiers ouverts\ndans nos \u00e9changes on avait parl\u00e9 de CreateFile et closefile\nmais dans createfile il y a beaucoup de cas diff\u00e9rents...\n. ",
    "houndofsound": "the link was from the docs!\nare there any docs for installing on cygwin/unices?\nta.\nOn 22/06/2018, Andreas Gnau notifications@github.com wrote:\n\nFor the record, you linked a very old build. The latest build (right now)\nis:\nhttps://ci.appveyor.com/project/Maxhy/dokany/build/job/ha7jbii1wohdd13k/artifacts\n--\nYou are receiving this because you authored the thread.\nReply to this email directly or view it on GitHub:\nhttps://github.com/dokan-dev/dokany/issues/701#issuecomment-399552899\n. \n",
    "amarcionek": "@kyanha, I've run into a similar problem as you in the past with our IFS driver. In fact, you can see I tried to find a user mode equivalent to SeAssignSecurity some 10 years ago!\nFor what its worth, I can comment on how we solved this. We essentially did your option 2, although not exactly as you state. When a CREATE request comes in, we call into user-mode using essentially a stat call on what would be the entry itself. If it exists, we do nothing. If it doesn't exist, then the response to the 'stat' call contains a security descriptor (SD) taken from some parent of what will be that newly created file and a boolean indicating that a new SD needs to be formed. The kernel then looks at the boolean, if true calls SeAssignSecurity using the parent and incoming SD, and uses the resulting SD with the call to create the file in user mode. Its been sufficient, although probably not extremely efficient.\nI've considered your option 3 there but haven't implemented it.  It would be nice to have an IOCTL that user mode can use to send an SD and a parent SD and get a resulting SD back.  We have use cases where files can come into our file system through other methods (e.g. scanning some other share) that don't go through the kernel.  I think the only tricky part would be the SubjectSecurityContext  For requests through the driver, you'd have to pass that up into the user mode and then pass it back down, but that wouldn't work elsewhere. Or, you could up with some default context, that the kernel always holds on to. But I'm not an expert in this area to know what is 'allowed.'\n. I think that's fair.  MSFT says that file system developers don't need to care what's in a security descriptor, yet in this case, it sort of matters, if you don't have an owner group and need to use the token. The key lines in the definition of SeAssignSecurity come from the comments section where it says in the absence of an owner/group, the caller's token is used.   I have never seen a security descriptor at that point in the code NOT have an owner.   But in the absence of one, if I had to choose an account for that owner, I'd say the local administrators group would be appropriate.. ",
    "FraserElectronics": "I am seeing the same issue as abrandeau. I need to prevent users from deleting files in my file system. I intercept FileMode.Open with the access set to DokanNet.FileAccess.Delete and return DokanResult.AccessDenied however the file disappears from the folder and when you hit refresh it re-appears. Can someone advise how to block the delete completely such that windows shows an error message ?\nAndy. Liryna,\nThanks for yout comment however,\nI put a breakpoint in CreateFile like thus:\npublic NtStatus CreateFile( string fileName, DokanNet.FileAccess access, FileShare share, FileMode mode, FileOptions options, FileAttributes attributes, DokanFileInfo info )\n{\n    if ( ( access & DokanNet.FileAccess.Delete ) != 0 )\n    {\n        Console.WriteLine( \"Delete query\" );\n    }\n\n    ...\n}\n\nAnd the breakpoint (On Console.WriteLine) gets called twice when i delete a file and both times I return DokanResult.AccessDenied yet the file still disappears from the explorer window.\nIs there somewhere else I need to be catching the delete operation ?\nAndy. Hi,\nI have breakpoints on both DeleteDirectory and DeleteFile and neither are called.\nAndy. Hi,\nI put together a simple example to show the issue and now I am seeing something slightly different !\nWhen you delete a file or folder now, you get \"Could not find this item\" error message. I would much prefer an \"Access Denied\" message.\nI have put the test code on my github site linked below.\nDokan Test Code\nAndy\n. Hi,\nWhen you say dokan logs, do you mean the console output ?\nAndy. Please see dokanoutput.txt in the github project.\nI simply mounted the file system and tried to delete the file InRoot..txt.\nAndy\nGitHub Link\n. DeleteOnClose never seems to be set to true in CreateFile even when I delete a file.\nAndy. I only seem to get DeleteOnClose set to true in CloseFile and Cleanup meaning I have no chance to prevent it happening.\nAndy\nFrom: Liryna notifications@github.com\nSent: Wednesday January 2019 15:30\nTo: dokan-dev/dokany dokany@noreply.github.com\nCc: Andrew Fraser andy@fraserelectronics.co.uk; Mention mention@noreply.github.com\nSubject: Re: [dokan-dev/dokany] mirror example : when a file is deleted, no call to DeleteFile (#708)\n@FraserElectronicshttps://github.com/FraserElectronics you should check the value of DeleteOnClose during CreateFile\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHubhttps://github.com/dokan-dev/dokany/issues/708#issuecomment-450893361, or mute the threadhttps://github.com/notifications/unsubscribe-auth/ASx_cWDKiohzwQE9CGOduP0r4xu7Vvzvks5u_NBogaJpZM4U5sxl.\n. Using the test code I put on my GitHub site I delete the file InRoot.txt.\nThere is a huge amount of debug output from Dokan (and some from my code) so I have searched for the first mention of DeleteOnClose.\nFrom the output below you can see that CloseFileProxy seems to be called before CreateFileProxy with DeleteOnClose.\nThe comes CreateFileProxy which I return access denied on but the file system disappears.\nIt is curios (perhaps) that CreateFile is called again but with the root path as the filename also with DeleteOnClose set which I return Success to \u2013 could this be what I am doing wrong ?\nAndy\n01/06/2019 21:41:44 - [DokanNet] CloseFileProxy : \\InRoot.txt\n01/06/2019 21:41:44 - [DokanNet]    FileAccess  Delete\n01/06/2019 21:41:44 - [DokanNet]    FileShare   Delete\n01/06/2019 21:41:44 - [DokanNet]    FileOptions      DeleteOnClose\n01/06/2019 21:41:44 - [DokanNet]    FileAttributes    0\n01/06/2019 21:41:44 - [DokanNet]    Context     {, False, False, False, False, #15012, False, False}\nCreateFile FILENAME:\\InRoot.txt,ACCESS:Delete,SHARE:Delete,MODE:Open,OPTS:DeleteOnClose,ATTR:0,INFO:{, False, False, False, False, #15012, False, False}\n-- IS FILE\nHAVE FILE InRoot.txt\n** RETURNED AccessDenied FROM CreateFile\n01/06/2019 21:41:44 - [DokanNet] CreateFileProxy : \\InRoot.txt Return : AccessDenied\n01/06/2019 21:41:44 - [DokanNet] CreateFileProxy :\n01/06/2019 21:41:44 - [DokanNet]    CreationDisposition      Open\n01/06/2019 21:41:44 - [DokanNet]    FileAccess      DeleteChild\n01/06/2019 21:41:44 - [DokanNet]    FileShare   Delete\n01/06/2019 21:41:44 - [DokanNet]    FileOptions      DeleteOnClose\n01/06/2019 21:41:44 - [DokanNet]    FileAttributes    0\n01/06/2019 21:41:44 - [DokanNet]    Context     {, False, False, False, False, #15012, False, False}\nCreateFile FILENAME:,ACCESS:DeleteChild,SHARE:Delete,MODE:Open,OPTS:DeleteOnClose,ATTR:0,INFO:{, False, False, False, False, #15012, False, False}\n-- IS FILE\nHAVE DIRECTORY .\n!! IS ACTUALLY A DIRECTORY {, False, False, False, False, #15012, False, False}\n  ** RETURNED Success FROM CreateFile\n01/06/2019 21:41:44 - [DokanNet] CreateFileProxy :  Return : Success\n01/06/2019 21:41:44 - [DokanNet] GetFileInformationProxy : \\InRoot.txt\n01/06/2019 21:41:44 - [DokanNet]    Context     {, True, False, False, False, #15012, False, False}\nGetFileInformation \\InRoot.txt\n01/06/2019 21:41:44 - [DokanNet]    FileName      \\InRoot.txt\n01/06/2019 21:41:44 - [DokanNet]    Attributes  Normal\n01/06/2019 21:41:44 - [DokanNet]    CreationTime      06/01/19 21:41:44\n01/06/2019 21:41:44 - [DokanNet]    LastAccessTime      06/01/19 21:41:44\n01/06/2019 21:41:44 - [DokanNet]    LastWriteTime      06/01/19 21:41:44\n01/06/2019 21:41:44 - [DokanNet]    Length      678\n01/06/2019 21:41:44 - [DokanNet] GetFileInformationProxy : \\InRoot.txt Return : Success\n01/06/2019 21:41:44 - [DokanNet] GetFileInformationProxy : \\InRoot.txt\n01/06/2019 21:41:44 - [DokanNet]    Context     {, True, False, False, False, #15012, False, False}\nGetFileInformation \\InRoot.txt\n01/06/2019 21:41:44 - [DokanNet]    FileName      \\InRoot.txt\n01/06/2019 21:41:44 - [DokanNet]    Attributes  Normal\n01/06/2019 21:41:44 - [DokanNet]    CreationTime      06/01/19 21:41:44\n01/06/2019 21:41:44 - [DokanNet]    LastAccessTime      06/01/19 21:41:44\n01/06/2019 21:41:44 - [DokanNet]    LastWriteTime      06/01/19 21:41:44\n01/06/2019 21:41:44 - [DokanNet]    Length      678\n01/06/2019 21:41:44 - [DokanNet] GetFileInformationProxy : \\InRoot.txt Return : Success\n01/06/2019 21:41:44 - [DokanNet] GetFileInformationProxy : \\InRoot.txt\n01/06/2019 21:41:44 - [DokanNet]    Context     {, True, False, False, False, #15012, False, False}\nGetFileInformation \\InRoot.txt\n01/06/2019 21:41:44 - [DokanNet]    FileName      \\InRoot.txt\n01/06/2019 21:41:44 - [DokanNet]    Attributes  Normal\n01/06/2019 21:41:44 - [DokanNet]    CreationTime      06/01/19 21:41:44\n01/06/2019 21:41:44 - [DokanNet]    LastAccessTime      06/01/19 21:41:44\n01/06/2019 21:41:44 - [DokanNet]    LastWriteTime      06/01/19 21:41:44\n01/06/2019 21:41:44 - [DokanNet]    Length      678\n01/06/2019 21:41:44 - [DokanNet] GetFileInformationProxy : \\InRoot.txt Return : Success\n01/06/2019 21:41:44 - [DokanNet] GetFileInformationProxy : \\InRoot.txt\n01/06/2019 21:41:44 - [DokanNet]    Context     {, True, False, False, False, #15012, False, False}\nGetFileInformation \\InRoot.txt\n01/06/2019 21:41:44 - [DokanNet]    FileName      \\InRoot.txt\n01/06/2019 21:41:44 - [DokanNet]    Attributes  Normal\n01/06/2019 21:41:44 - [DokanNet]    CreationTime      06/01/19 21:41:44\n01/06/2019 21:41:44 - [DokanNet]    LastAccessTime      06/01/19 21:41:44\n01/06/2019 21:41:44 - [DokanNet]    LastWriteTime      06/01/19 21:41:44\n01/06/2019 21:41:44 - [DokanNet]    Length      678\n01/06/2019 21:41:44 - [DokanNet] GetFileInformationProxy : \\InRoot.txt Return : Success\n01/06/2019 21:41:44 - [DokanNet] CleanupProxy : \\InRoot.txt\n01/06/2019 21:41:44 - [DokanNet]    Context     {, True, False, False, False, #15012, False, False}\nCleanup \\InRoot.txt\n01/06/2019 21:41:44 - [DokanNet] CleanupProxy : \\InRoot.txt\n01/06/2019 21:41:44 - [DokanNet] CloseFileProxy : \\InRoot.txt\n01/06/2019 21:41:44 - [DokanNet]    Context     {, True, False, False, False, #15012, False, False}\nCloseFile \\InRoot.txt\n01/06/2019 21:41:44 - [DokanNet] CreateFileProxy : \\\n01/06/2019 21:41:44 - [DokanNet] CloseFileProxy : \\InRoot.txt\n01/06/2019 21:41:44 - [DokanNet]    CreationDisposition      Open\n01/06/2019 21:41:44 - [DokanNet]    FileAccess      Synchronize\n01/06/2019 21:41:44 - [DokanNet]    FileShare   ReadWrite\n01/06/2019 21:41:44 - [DokanNet]    FileOptions None\n01/06/2019 21:41:44 - [DokanNet]    FileAttributes    0\n01/06/2019 21:41:44 - [DokanNet]    Context     {, False, True, False, False, #15012, False, False}\nFrom: Liryna notifications@github.com\nSent: Sunday January 2019 21:28\nTo: dokan-dev/dokany dokany@noreply.github.com\nCc: Andrew Fraser andy@fraserelectronics.co.uk; Mention mention@noreply.github.com\nSubject: Re: [dokan-dev/dokany] mirror example : when a file is deleted, no call to DeleteFile (#708)\nUsing the mirror sample c#, I run del test.txt and get this output:\n01/06/2019 13:21:55 - [DokanNet] CreateFileProxy : \\Users\\liryna\\test.txt\n01/06/2019 13:21:55 - [DokanNet]        CreationDisposition     Open\n01/06/2019 13:21:55 - [DokanNet]        FileAccess      Delete\n01/06/2019 13:21:55 - [DokanNet]        FileShare       Delete\n01/06/2019 13:21:55 - [DokanNet]        FileOptions     DeleteOnClose\n01/06/2019 13:21:55 - [DokanNet]        FileAttributes  0\n01/06/2019 13:21:55 - [DokanNet]        Context {, False, False, False, False, #1280, False, False}\n01/06/2019 13:21:55 - [Mirror] CreateFile('\\Users\\liryna\\test.txt', {System.Object, False, False, False, False, #1280, False, False}, [Delete], [Delete], [Open], [DeleteOnClose], [0]) -> Success\nDeleteOnClose is provided in FileOptions\nIn the log you provided, I cannot see this step since from the start since ObjectNameNotFound is returned.\nCan you add a check for DeleteOnClose and only return access denied at this moment ?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHubhttps://github.com/dokan-dev/dokany/issues/708#issuecomment-451776451, or mute the threadhttps://github.com/notifications/unsubscribe-auth/ASx_cTxIlsHgvJv5BzpyVXMP1jWCZsvmks5vAmpOgaJpZM4U5sxl.\n. ",
    "KOLANICH": "Hi, @Liryna.\n\nWhat would be the purpose of this even if possible since the project only target windows ?\n\nthe purpose is to build the software without using any proprietary commercial compilers like Visual Studio.\n1 I cannot easily download it since to download it I have to run their software with telemetry. It can be possible to reverse engineer their downloader, but this is a way to nowhere, since the tool is still proprietary and closed source.\n2 As far as I remember, VS itself contains telemetry. Though it may be possible to carve it out, again, playing cat-and-mouse game is a way to nowhere.\n3 It is commercial software. That it is free as in \"free beer\" for someone doesn't mean that it is free in enterprise environment.\nI guess that the userspace library can be built without VS somehow. I mean if I want to build the software with gcc, it is a bad idea to rely on libraries using MS runtime, since gcc uses other runtime (and according to StackOverflow, it is hard to make programs built with gcc use MS runtime) using differrent conventions. So we definitely need support for multiple toolchains.\n\nno idea with cmake handle the windows driver kit\n\nI have done some experiments trying to build other software. You may or may not need MS WDK. MinGW and ReactOS have own WDKs, but they are far from being complete, it is possible to build some drivers with them (at least the ones used by ReactOS, and they have some FS drivers). Some drivers cannot be built with them. See https://github.com/open-source-ideas/open-source-ideas/issues/64 for more info.\n. Yes, but it's completely possible, but it'd mean downloading the whole source only for dokan_fuse. \nI wonder if it is possible to move all the common stuff into a separate module, used both by dokan and dokan_fuse.. ",
    "samokhodkin": "Thank you, Liryna.\nBTW, is the asynchronous IO supported? How can we signal the end of the\noperation?\nOn Sat, Jul 7, 2018 at 3:58 PM, Liryna notifications@github.com wrote:\n\nHi @samokhodkin https://github.com/samokhodkin ,\nThis means the read/write operations can happen multiple times at the same\nmoment for the same handle/context. Specially during OVERLAPPED read/write\nSee https://docs.microsoft.com/en-us/windows/desktop/sync/\nsynchronization-and-overlapped-input-and-output\nYou are right about the mirror. This should be fixed \ud83d\udc4d\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/715#issuecomment-403217569,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ARV_tIzvV5sSKPLpd1bbH2YqO5BKvcWBks5uEL5ygaJpZM4VGXXF\n.\n. Hi!\nSorted it out, it's my fault. I'm sorry. Please close it.\n\nThanks\n. Not sure about meaning of \"reparse point\".\nI called DokanMain with DOKAN_OPTIONS.MountPoint set to \n1. empty directory \"d:\\m\"\n2. \"z:\"\nIn both cases DokanMain suceeded, and the described problematic behaviour was identical.\n. My previous comment had a mistake, the problem doesn't show when mounting as volume.\nI found this problem is well known, and has been fixed in recent release.\nhttps://github.com/dokan-dev/dokany/issues/293\nhttps://github.com/dokan-dev/dokany/issues/712\nhttps://github.com/dokan-dev/dokany/pull/713/commits/8d37170333114d9347a88b044255860ca385b413\nClosing. Hi, @Liryna,\nI have finally found it! As stupid a typo as it looks\n   public static final byte TRUE=1;\n   public static final byte FALSE=1;\nIn fact this affected only the  DOKAN_FILE_INFO.IsDirectory, so either the\nsystem or the driver saw the attempt to write to the directory.\nNow everything works great, close the thread.\nAnd KUDOS+++ for your work.\nOn Mon, Oct 1, 2018 at 2:03 PM Liryna notifications@github.com wrote:\n\nHi @samokhodkin https://github.com/samokhodkin ,\nWould it be possible that device is mounted as read only ?\nCan you share the debug log ?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/741#issuecomment-425882735,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ARV_tLJOgj1s89JhfaLzhDg4440MTzskks5uggSXgaJpZM4XA9Ci\n.\n. \n",
    "luoyouchun": "Yes. Need a mutex to control.. ",
    "lumip": "Ah, I see. I guess this changed from the orignal old Dokan? As far as I remember, that required to update the IsDirectory context information in the CreateFile, which was still happening in my code (my transition is not completely done, I guess). I'm still getting calls to my ZwCreateFile that try to open a directory without having the IsDirectory is not set in the file info structure. Can you confirm that the following is required behavior for ZwCreateFile implementations?\n- if IsDirectory is set \n-- if the requested path is not a directory, fail and return STATUS_NOT_A_DIRECTORY\n-- if the requested path is a directory, proceed to open it as a directory\n- if IsDirectory is not set\n-- if the requested path is a directory, set IsDirectory and proceed opening the file as directory\n-- if the requested path is not a directory, proceed to open it as a file. At least that's how I understand the following\n\nIf the file is a directory, CreateFile is also called. In this case, CreateFile should return STATUS_SUCCESS when that directory can be opened and DOKAN_FILE_INFO.IsDirectory has to be set to TRUE. On the other hand, if DOKAN_FILE_INFO.IsDirectory is set to TRUE but the path targets a file, STATUS_NOT_A_DIRECTORY must be returned.\n\n(from https://dokan-dev.github.io/dokany-doc/html/struct_d_o_k_a_n___o_p_e_r_a_t_i_o_n_s.html#a40c2f61e1287237f5fd5c2690e795183 )\nHowever, with this I run into the exactly opposite problem.. when a directory is deleted with DeleteFile by an application, I will have to set the IsDirectory flag and open the directory in ZwCreateFile according to docs. This will cause a call to DokanOperations.DeleteDirectory instead of DokanOperations.DeleteFile, which will incorrectly succeed..\nI'm now confused :D. I guess it's here\nhttps://github.com/dokan-dev/dokany/blob/099db8a0ff2fd6de422ea4f917f404acbf3d96c9/samples/dokan_mirror/mirror.c#L264-L279\nThe check makes sense.. but I can't do the same using the .NET-wrapper of dokany since most of the FileOptions, namely the FILE_NON_DIRECTORY_FILE is not included in the System.IO.FileOptions enum.\nThe .NET-mirror sample treats deleting directories as files as a very special case in CreateFile: https://github.com/dokan-dev/dokan-dotnet/blob/8bee5fb5ca64dd90677c163aa75ea51bb3a41f57/sample/DokanNetMirror/Mirror.cs#L156-L160\nthis turns out to be more and more workaround-ish but I guess now I know what to do.. was no cleaner interface possible here?. I'll close this as my question has been answered. (thanks for the really swift responses!) I don't really like how all this is done because it seems somewhat hacky with different checks for the same stuff in different places all over the filesystem implementation, though, and might have another look at how dokany handles the IsDirectory flag (and makes decisions about calls to DeleteFile/DeleteDirectory) if you don't mind.. In the example I linked above, the function DokanSetDispositionInformation internally calls GetFileInformation to do some of request verification / access check for deletion. This call to GetFileInformation is never caused by an explicit IRP_J_QUERY_* but Dokan internal.\nIf I not return STATUS_SUCCESS in this case in my implementation of GetFileInformation, will that be a problem for Dokan?. In that case, wouldn't it in that case make more sense to add an internal GetFileInformation to DokanOperations for cases like this which always succeeds (i.e. does not perform access checks and all that because it's only used internally)?. alright. ",
    "thinkport": "Yes, dokan is able to open big file, but hang when I save big file, for example MS Office, WPS, AutoCAD, 3D Max. \ntestcase\n1. Open a .docx file using MS Office,  the file big than 100M\n2. Change something\n3. Press Ctrl + S to save file, Word.exe and explorer.exe hang. @Liryna Sorry, my English is not good. MS Office and explorer are fix, but WPS doesn't work.\nchange:\n`//#define DokanFCBLockRO(fcb) do { KeEnterCriticalRegion(); ExAcquireResourceSharedLite(fcb->AdvancedFCBHeader.Resource, TRUE); } while(0)\n//#define DokanFCBLockRW(fcb) ExEnterCriticalRegionAndAcquireResourceExclusive(fcb->AdvancedFCBHeader.Resource)\n//#define DokanFCBUnlock(fcb) ExReleaseResourceAndLeaveCriticalRegion(fcb->AdvancedFCBHeader.Resource)\ndefine DokanFCBLockRO(fcb) do { DDbgPrint(\"ZZZ LockRO %s %p\\n\", FUNCTION, fcb); KeEnterCriticalRegion(); ExAcquireResourceSharedLite(fcb->AdvancedFCBHeader.Resource, TRUE); KeLeaveCriticalRegion(); } while(0)\ndefine DokanFCBLockRW(fcb) do { DDbgPrint(\"ZZZ LockRW %s %p\\n\", FUNCTION, fcb); KeEnterCriticalRegion(); ExAcquireResourceExclusiveLite(fcb->AdvancedFCBHeader.Resource, TRUE); KeLeaveCriticalRegion(); } while(0)\ndefine DokanFCBUnlock(fcb) do { DDbgPrint(\"ZZZ Unlock %s %p\\n\", FUNCTION, fcb); KeEnterCriticalRegion(); ExReleaseResourceLite(fcb->AdvancedFCBHeader.Resource); KeLeaveCriticalRegion(); } while(0)\n`\nDokanFS log:\nwps hang.LOG\nWPS will hang every time when I save big file. WPS hang, i open notepad.exe, notepad hang too.  you can see,  DokanCreate never return\n00439088    114.82792664    [DokanFS] ZZZ LockRO DokanGetFCB FFFFFA803289A050\nIf i remove fcb lock in the DokanDispatchWrite function, wps never hang , but some content of the file are missing sometimes.. @Liryna \nI am sorry, I am not sure, I can't reproduce MS office lock problem.\nI can reproduce WPS lock problem always.  WPS can open MS office document.\ndownload address https://www.wps.com/download/?lang=en\nThis deadlock problem is mapping file problem.\nmirror.exe /r c: /l m:\nNormal:  wps.exe(m:\\bigfile.doc) -> dokan1.sys -> mirror.exe(c:\\bigfile.doc) -> system(c:\\bigfile.doc). work well always. \nProblem:  system(m:\\bigfile.doc) -> dokan1.sys -> mirror.exe(c:\\bigfile.doc). Last WriteFile function never return, you can see by Procmon.exe.\n\n. The problem has not been solved. Autodesk 3ds Max and Siemens NX 11(Unigraphics NX, formerly known as \"UG\") have the same problem.\nLike WinFSP. ",
    "Salamandar": "Remind me of that on monday , i'll work on it. . Finally got the time to work on it.\nIt's only used in public.h, lines ~365 and 379.\nYou should write\n```\nifdef _MSC_VER\npragma warning(push)\npragma warning(disable : 4201)\nendif\ntypedef struct _DOKAN_RENAME_INFORMATION {\nif (_WIN32_WINNT >= _WIN32_WINNT_WIN10_RS1)\nunion {\n    BOOLEAN ReplaceIfExists;  // FileRenameInformation\n    ULONG Flags;              // FileRenameInformationEx\n} DUMMYUNIONNAME;\n\nelse\nBOOLEAN ReplaceIfExists;\n\nendif\nULONG FileNameLength;\n  WCHAR FileName[1];\n} DOKAN_RENAME_INFORMATION, *PDOKAN_RENAME_INFORMATION;\nifdef _MSC_VER\npragma warning(pop)\nendif\n```. Great ! . ",
    "eduardsui": "It works, thanks! Great support \ud83d\udc4d.. ",
    "gustavocarita": "I was able to compile squashfuse already on windows, but too bad I needed the Lowlevel API and that is not supported by dokany at the moment.. ",
    "lijie0123": "My log is bellow:\n14984 TRACE [11328] read: ENTER: path=/hisense_demonstration_visual-DWEU.mkv,offset=335544320,size=65536 \n15121 TRACE [13380] release: ENTER: path=/hisense_demonstration_visual-DWEU.mkv\n15130 TRACE [13380] release: EXIT:  path=/hisense_demonstration_visual-DWEU.mkv\n15199 TRACE [11328]  read: EXIT:  path=/hisense_demonstration_visual-DWEU.mkv,offset=335544320,size=65536 \nWhen I use windows movies & TV application to open a video and drag progress bar and close the app, the fuse wrapper crashed because of access invalid memory. But with VLC, it is all OK, vlc will close after the read procedure return back.\nWhen I update macro  MAX_READ_SIZE  to a larger number, this problem is avoided.\nReading process only take 0.2s and it is not timed out because with a larger MAX_READ_SIZE, it is not time out.\nSo, the file can be closed while reading procedure has not finished, and the while loop in the fuse_main impl_fuse_context::read_file function will cause invalid memory access and it can not be mitigated by client code.. ",
    "haha-wlei": "@Liryna At first ,i need more net disk. i have a question that why i can operate on the 33 net disk normally through the net disk's status is \"disconnected net disk\"?. @Liryna we have a mutiple-session server which supply service for 23 peoples at the same time and everyone needs to mount three net disk . so i think we need 23*3 net disk at least. . ",
    "alexander-ossur": "Thank you @Liryna ,\nYes, it seems #669 is the reason of that behaviour. I will move there.. Thank you @Liryna,\nNot sure if this can be called as a wrapper. What I need is to store files and directories in RAM. A good example of that is https://github.com/billziss-gh/memfs-dokany.\nI am just wondering if there are more alternatives.. Hello @Liryna \nSure, here it is:\nStarting a Mirror application:\n\nmirror /r \"C:\\Downloads\\Temp\" /l M: /s\nAllocationUnitSize: 512 SectorSize: 512\ndevice opened\nQueryVolumeInfo -001\nmounted: M: -> \\Volume{d6cc17c5-1775-4085-bce7-964f1e9f5de9}\nCreate 0000\nCreateFile status = c0000034\nCreate 0001\nCreateFile status = c0000034\nCreate 0002\nCreateFile status = c0000034\nCreate 0003\nCreateFile status = 0\nGetFileInfo 0003\n    result =  0\n\nunknown type:54\n        DispatchQueryInformation result =  c000000d\nGetFileInfo 0003\n    result =  0\n    FileStandardInformation\n    DispatchQueryInformation result =  0\n\nGetFileInfo 0003\n    result =  0\n    FileBasicInformation\n    DispatchQueryInformation result =  0\n\nCleanup 0003\nClose 0003\nCreate 0004\nCreateFile status = c0000034\n\nCalling std::filesystem::create_directory\n\nCreate 0005\nCreateFile status = 0\nGetFileInfo 0005\n    result =  0\n    FileStandardInformation\n    DispatchQueryInformation result =  0\n\nGetFileInfo 0005\n    result =  0\n    FileNetworkOpenInformation\n    DispatchQueryInformation result =  0\n\nCleanup 0005\nCreate 0006\nCreateFile status = 0\nClose 0005\nGetFileInfo 0006\n    result =  0\n    FileStandardInformation\n    DispatchQueryInformation result =  0\n\nQueryVolumeInfo 0006\nCleanup 0006\nClose 0006\nCreate 0007\nCreateFile status = c0000035\n\nCalling std::filesystem::remove\n\nCreate 0008\nCreateFile status = 0\nGetFileInfo 0008\n    result =  0\n    FileStandardInformation\n    DispatchQueryInformation result =  0\n\nGetFileInfo 0008\n    result =  0\n    FileBasicInformation\n    DispatchQueryInformation result =  0\n\nSetFileInfo 0008  64\nunknown FileInformationClass 64\n        DispatchSetInformation result =  c0000002\nCleanup 0008\nClose 0008\nCreate 0009\nCreateFile status = 0\nGetFileInfo 0009\n    result =  0\n    FileStandardInformation\n    DispatchQueryInformation result =  0\n\nQueryVolumeInfo 0009\nCleanup 0009\nQueryVolumeInfo -001\nClose 0009\n\nPS. std::filesystem::remove makes three WinAPI calls: CreateFile, SetFileInformationByHandle and CloseHandle. Just in case (tldr) I will put here internal function for std::filesystem::remove:\n```\n[[nodiscard]] __std_fs_remove_result __stdcall __std_fs_remove(const wchar_t * const _Target) noexcept\n    {   // remove _Target without caring whether _Target is a file or directory\n    __std_win_error _Last_error;\nif _STL_ALWAYS_HAS_SetFileInformationByHandle\n#define _SetFileInformationByHandle SetFileInformationByHandle\nelse / ^^^ _STL_ALWAYS_HAS_SetFileInformationByHandle ^^^ // vvv !_STL_ALWAYS_HAS_SetFileInformationByHandle vvv /\nconst auto _SetFileInformationByHandle = __vcrt_SetFileInformationByHandle;\nif (_SetFileInformationByHandle == _Not_supported_SetFileInformationByHandle)\n    {   // Windows XP\n    if (RemoveDirectoryW(_Target))\n        {   // try RemoveDirectoryW first because it gives a specific error code for \"the input was a file\";\n            // DeleteFileW on a directory input returns ERROR_ACCESS_DENIED\n        return {true, __std_win_error::_Success};\n        }\n\n    _Last_error = __std_win_error{GetLastError()};\n    if (_Last_error == __std_win_error::_Directory_name_is_invalid)\n        {   // input may have been a file\n        if (DeleteFileW(_Target))\n            {\n            return {true, __std_win_error::_Success};\n            }\n\n        _Last_error = __std_win_error{GetLastError()};\n        }\n\n    return {false, _Translate_not_found_to_success(__std_win_error{GetLastError()})};\n    }\n\nendif / _STL_ALWAYS_HAS_SetFileInformationByHandle /\nconstexpr auto _Flags = __std_fs_file_flags::_Backup_semantics | __std_fs_file_flags::_Open_reparse_point;\nconst _STD _Fs_file _Handle(_Target, __std_access_rights::_Delete, _Flags, &_Last_error);\nif (_Last_error != __std_win_error::_Success)\n    {\n    return {false, _Translate_not_found_to_success(_Last_error)};\n    }\n\n// From newer Windows SDK than currently used to build vctools:\n// #define FILE_DISPOSITION_FLAG_DELETE                     0x00000001\n// #define FILE_DISPOSITION_FLAG_POSIX_SEMANTICS            0x00000002\n\n// typedef struct _FILE_DISPOSITION_INFO_EX {\n//     DWORD Flags;\n// } FILE_DISPOSITION_INFO_EX, *PFILE_DISPOSITION_INFO_EX;\n\nstruct _File_disposition_info_ex {\n    DWORD _Flags;\n};\n_File_disposition_info_ex _Info_ex{0x3};\n\n// FileDispositionInfoEx isn't documented in MSDN at the time of this writing, but is present\n// in minwinbase.h as of at least 10.0.16299.0\nconstexpr auto _FileDispositionInfoExClass = static_cast<FILE_INFO_BY_HANDLE_CLASS>(21);\nif (_SetFileInformationByHandle(_Handle._Get(), _FileDispositionInfoExClass, &_Info_ex, sizeof(_Info_ex)))\n    {\n    return {true, __std_win_error::_Success};\n    }\n\n_Last_error = __std_win_error{GetLastError()};\nif (_Last_error != __std_win_error::_Invalid_parameter)\n    {\n    return {false, _Last_error};\n    }\n\n// Filesystem without POSIX delete support, or older than Windows 10 RS1 version without such support:\nFILE_DISPOSITION_INFO _Info{/* .Delete= */TRUE};\nif (_SetFileInformationByHandle(_Handle._Get(), FileDispositionInfo, &_Info, sizeof(_Info)))\n    {\n    return {true, __std_win_error::_Success};\n    }\n\nreturn {false, __std_win_error{GetLastError()}};\n\nundef _SetFileInformationByHandle\n}\n\n```\nMost interesting (failing) part is:\n```\n    struct _File_disposition_info_ex {\n        DWORD _Flags;\n    };\n    _File_disposition_info_ex _Info_ex{0x3};\n// FileDispositionInfoEx isn't documented in MSDN at the time of this writing, but is present\n// in minwinbase.h as of at least 10.0.16299.0\nconstexpr auto _FileDispositionInfoExClass = static_cast<FILE_INFO_BY_HANDLE_CLASS>(21);\nif (_SetFileInformationByHandle(_Handle._Get(), _FileDispositionInfoExClass, &_Info_ex, sizeof(_Info_ex)))\n    {\n    return {true, __std_win_error::_Success};\n    }\n\n_Last_error = __std_win_error{GetLastError()};\nif (_Last_error != __std_win_error::_Invalid_parameter)\n    {\n    return {false, _Last_error};\n    }\n\n```\nWhere \"_SetFileInformationByHandle\" is: SetFileInformationByHandle API, and loaded dynamically. Hi @Liryna \nSorry I created a message and then deleted it in order to make a deeper look\nNow it calls NTSTATUS(DOKAN_CALLBACK *DeleteDirectory)(LPCWSTR FileName,\n    PDOKAN_FILE_INFO DokanFileInfo); and internally sets DeleteOnClose\nBut it does not forward DeleteOnClose to void(DOKAN_CALLBACK *Cleanup)(LPCWSTR FileName,\n                                PDOKAN_FILE_INFO DokanFileInfo);\n. Thank you @Liryna \nI tested the d318f82 and getting the same issue: DeleteOnClose is not set. A quick question: should I compile and install system driver too?\nUnfortunately I can not run Mirror on d318f82. It exists with \n\nAllocationUnitSize: 512 SectorSize: 512\ndevice opened\nQueryVolumeInfo -001\nCreate 0000\nCreateFile status = c000003a\nFailed to open keepalive file: \\?\\Volume{d6cc17c5-1734-4085-bce7-964f1e9f5de9}__drive_fs_keepalive\nFailed to activate keepalive handle.. Thank you @Liryna \n\nI can confirm all tests are passing now. I did not run these on Win 8.1, but will come back if related issue is still there.\nThank you again ;). ",
    "Martin736": "\nI try to use dokan mirror example to mirror a chkdsk error disk. The disk has bugs and sometimes chdsk reports errors.\nWhen I use mirror, the process terminate without error messages but the return value is \"-1073740791\".\nLooks like mirror don't catch that disk errors and exits without message. Using \"/d /s\" last log ist every time \"### Create 0000\". Sometimes nothing else, sometimes later with higher numbers than 0000.\n\nYes, first I will explain a litle bit more.\n\nHDD disk having errors (chkdsk errors).\nMirror the disk (1.) to a dokan drive.\nAccess a file at the dokan drive (2.) where the real disk (1.) has a error and return a disk error, mirror terminate (exit) without a message or a Debug-Log and the return code of the error from the disk (1.).\n\nI want to catch the error from the disk access (1.) and return the error as a error of the dokan disk (2.) and that mirror don't exit without message (3.).. Example:\nFor example if drive H: has disk errors:\nmirror.exe /r H:\\ /l r /o /s /d\nLog:\n```\nAttempting to add SE_SECURITY_NAME privilege to process token\nsuccess: privilege already present\nDokan: debug mode on\nDokan: use stderr\nAllocationUnitSize: 512 SectorSize: 512\ndevice opened\nQueryVolumeInfo -001\nGetVolumeInformation: max component length 255\nGetVolumeInformation: file system name NTFS\nGetVolumeInformation: got file system flags 0x00c700ff, returning 0x0004000f\nmounted: r -> \\Volume{d6cc17c5-17bf-4085-bce7-964f1e9f5de9}\nMounted\nCreate 0000## Attempting to add SE_SECURITY_NAME privilege to process token\nsuccess: privilege already present\nDokan: debug mode on\nDokan: use stderr\nAllocationUnitSize: 512 SectorSize: 512\ndevice opened\nQueryVolumeInfo -001\nGetVolumeInformation: max component length 255\nGetVolumeInformation: file system name NTFS\nGetVolumeInformation: got file system flags 0x00c700ff, returning 0x0004000f\nmounted: r -> \\Volume{d6cc17c5-17bf-4085-bce7-964f1e9f5de9}\nMounted\nCreate 0000\n```\nAfter that mirror is terminated.. are you sure that kernel debug is needed here?. > I think if the mirror exits without a warning in case of such errors that's an issue we should investigate.\nYes.\n\nIt won't magically solve any problems you have accessing that filesystem using normal means, because the mirror will access it in the same way other applications access it.\n\nYes, access a file that produce a file system error. When I try to open the file by notepad.exe on disk a popup \"File system error (-1073741521).\" and button \"ok\".\nAnd now: When I try to open the file by notepad.exe on the mirror disk, the mirror.exe terminates with return code \"-1073741521\" and without message, mirror disk removed.\nWhat I want to achieve: When I try to open the file by notepad.exe on the mirror disk, the mirror.exe not terminates and notepad.exe produced a popup \"File system error (-1073741521).\" and button \"ok\", like access disk direct without mirror.exe. To make it more precise: When you Google images \"File system error (-1073741521)\" you see images from the error message. I want to see the error message using mirror.exe and not that mirror.exe terminates and disk dismount.. > As I understand, we will have difficulty to reproduce the issue unless we have a disk with errors.\nyes, I think so too.\n\nCan you see if the mirror crash ? It seems by the log that it is not complete and the mirror stop unexpectedly. Can you attach a debugger on it and see where does the crash comes from ?\n\nI was not able to debug the kernel module until now, I think the mirror.exe crash at \"MirrorCreateFile\" before first Debug message?. perhaps not \"MirrorCreateFile\", when a other function is called before \"MirrorCreateFile\" and after \"### Create XXXXX\" output.. I add a Debug line to MirrorCreateFile and I can see that MirrorCreateFile is called before crash.. ",
    "Absoblogginlutely": "Updated Indentation - I think thats how you would want it. Let me know if not. I think the PR should also go back to pending?. Thanks @Rondom Rondom for the clarification. @Liryna I think it should be good now.. I think this is done correctly - this was tougher than I thought but a great learning experience for a first PR.\n. ",
    "kwiatek999": "Hi @Liryna ,\nThanks for the info and yes - you are right. By mistake the dokan1.dll shipped with our app is the 32-bit so when the app starts, it fails to load it and goes for the one installed in Windows/SysWOW64. . ",
    "winneryong": "Hi, @Liryna \nI use mirror.exe and FileMeta to set an .txt file tag, is ok, no error. \nWhen i use pyfs to mount remote file system as local disk drive H:, and use FileMeta to set .txt file tag in Driver H:,  input tag content and click save button, pop an error dialog,  Error code : 0x80030057 Messsage: Invalid parameter error.\nENV:\nwindows 10 x64\ndokany 1.1.0\npyfilesystem:  1.0  see attachment\ndokan.zip\nset tag operation below:\n. Hi @Liryna \nThank you for your reply, I will test pyfs again, and then give you feedback.. Hi @Liryna \nI tested pyfs (https://github.com/PyFilesystem/pyfilesystem), it has this issue but i unable to fix it.\nthanks.. ok\uff0cthanks. @Liryna i install last release version, always BSOD \n120918-7924-01.dmp.zip\n. I tested it in a virtual machine. may be \"Parallels Desktop\" using qemu.  I will test it later with a non-virtual machine.. 120918-18314-01.zip\n@Liryna I upload an non-virtual machine dump file.. 360FsFlt is an anti-virus software firewall driver, some other anti-virus software same carsh. If uninstall the anti-virus software, there will be no carsh.\nI have installed a variety of china made anti-virus software, this problem will occur\u3002\n360 anti-virus software https://www.360totalsecurity.com\nI guess the conflict is caused by the two, but non-network drives won't have this problem.. Thank you very much, the phenomenon looks a lot like, I will recompile it later, I will install the build environment first.. @Liryna \uff0cI am very sorry, I have been working overtime recently. Now I am installing Visual Studio Community 2017, But the installation is very slow, the installation package is too large, and it is online installation.I have the first time to give you feedback.. Hi @Liryna,\n Can you help me build an signed installer from git@github.com:winneryong/dokany.git ,  I  am modify sys/fileinfo.c from #499 and using appveyor CI build an installer file,  but windows prompt driver not sign.. Hi @Liryna,\nI am very happy to tell you that this bug did not appear. Thank you for your help. . @Liryna I tested an long path using mirror.exe mount as net drive mode, mirror.exe crash when path length then 225, no BSOD occur .. ",
    "Arup-MK-Halder": "Hi @Liryna ,\nThanks for your response.\nI tried with mirror and it worked fine.\nIt seems that our application(uses DokanNet) is accessing the file and thus we are getting the error.\nWe even debugged to check any open file handle that might be causing the issue but didn't found any.\nThe same application code works fine when on Windows 10 ver 1803.\n. Hi @Liryna ,\nI tried capturing the dokan debug logs, if this can be helpful.\nMDD16-5CLIENT.LOG\n. Thanks for for help.\nFound that CreateFile implementation had used get Process.GetProcessById() and had not closed it. Causing the file handle to be open and thus causing the above issue.. ",
    "vikas25538": "Thanks Liryna,\nit works Okay on Win 10 machines. The issue is seen on win 7 machines. Should i still try your suggestion?. Yes, win 7 had the limitation but with some update it allows you set registry settings for it to work on win 7. \nWe have another solution where we are using ElDOS and there is no such issue on similar machine.\nBTW, with Dokany, initially it was throwing these security warnings for almost every navigation even to smaller paths. Some change in callbacks usage corrected it and now it throws these warnings only for bigger paths.. @Liryna,  GetFileInformation is giving me truncated path on window 7.\nActual Path:\n\\testenv\\Sipra\\218sassadsddddddddddddddddddasdasdasdasdasdasdasdadascsdaaaaaaaasadsdassssssssssssssssssshfdsasdasdaskahdjsgdhsdhafsdhfasgdfasgd\\218ABCsadsddddddddddddddddddasdasdasdasdasdasdasdadascsdaaaaaaaasadsdassssssssssssssssssshfdsasdasdaskahdjsgdhsdhafsdhfasgdfasgd\nDokan Path:\n\\testenv\\Sipra\\218sassadsddddddddddddddddddasdasdasdasdasdasdasdadascsdaaaaaaaasadsdassssssssssssssssssshfdsasdasdaskahdjsgdhsdhafsdhfasgdfasgd\\218ABCsadsddddddddddddddddddasdasdasdasdasdasdasdadascsdaaaaaaaasadsdassssssssssssssssssshfdsasdasdaskahdjsgdhsdh\nI see Dokan is limiting it to 257~258 on win 7.\nIn CreateFile also i see the path is truncated.. \ndokanmirorlog.txt\n@Liryna PFA the logs.\nWindows Explorer Navigation Path:\nC:\\Users\\ADMINI~1\\Desktop\\FORTES~1\\ASASAS~1\\VZXCVX~1\\XCVXZZ~1\\XCXCXC~1\\sdfaffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\\sdfaffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nActual Path:\nC:\\Users\\Administrator\\Desktop\\ForTesting\\asasasassssssssssssssssssssssssssss\\vzxcvxvczxzxzxzxzxzxzxzxzxzxzxzxzxzxzxzxzxzxzx\\xcvxzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz\\xcxcxcxcxcxcxcxcxcxcxcxcxcxcxcxcxcxcxcxcxcxcxcxcxcxcxcxcxcxcxcxcxcxcxc\\sdfaffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\\sdfaffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nFrom the Dokany log, i see CreateFileProxy  returning ObjectNameNotFound after certain length.\n. @Liryna\nI can certainly do that. Will the logs tell you something relevant if i run with C mirror? \nWe have a .net application which internally uses ElDOS for file system and there is no such problem there.. dokany_c.txt\n@Liryna \nPFA logs. Navigation still fails.. @Liryna any updates?. @Liryna, But the navigation was failing and on console i could see ObjectNameNotFound as return.\nSee the screen capture:\n11/26/2018 11:50:08 - [Mirror] CreateFile('\\Users\\Administrator\\Desktop\\ForTesti\nng\\asasasassssssssssssssssssssssssssss\\vzxcvxvczxzxzxzxzxzxzxzxzxzxzxzxzxzxzxzxz\nxzxzx\\xcvxzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz\\xcxcxcxcxcxcxcxcxcxcxc\nxcxcxcxcxcxcxcxcxcxcxcxcxcxcxcxcxcxcxcxcxcxcxcxc\\sdfafffffffffffffffffffffffffff\nfffffffffffffffffffffffffffffffffffffffffffffffff', {, False, False, False\n, False, #2148, False, False}, [ReadAttributes], [ReadWrite, Delete], [Open], [N\none], [0]) -> ObjectNameNotFound\n11/26/2018 11:50:08 - [DokanNet] CreateFileProxy : \\Users\\Administrator\\Desktop\\\nForTesting\\asasasassssssssssssssssssssssssssss\\vzxcvxvczxzxzxzxzxzxzxzxzxzxzxzxz\nxzxzxzxzxzxzx\\xcvxzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz\\xcxcxcxcxcxcxc\nxcxcxcxcxcxcxcxcxcxcxcxcxcxcxcxcxcxcxcxcxcxcxcxcxcxcxcxc\\sdfafffffffffffffffffff\nfffffffffffffffffffffffffffffffffffffffffffffffffffffffff Return : ObjectNameNot\nFound\n. I mapped \"C:\\Users\\Administrator\\Desktop\\ForTesting\" to Dokany drive. This is 41 chars long.\nNavigation fails beyond following:\nM:\\asasasassssssssssssssssssssssssssss\\vzxcvxvczxzxzxzxzxzxzxzxzxzxzxzxzxzxzxzxzxzxzx\\xcvxzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz\\xcxcxcxcxcxcxcxcxcxcxcxcxcxcxcxcxcxcxcxcxcxcxcxcxcxcxcxcxcxcxcxcxcxcxc\nAbove is 209 chars long.\nWindows explorer is allowing navigation well inside the above location.\nC:\\Users\\ADMINI~1\\Desktop\\FORTES~1\\ASASAS~1\\VZXCVX~1\\XCVXZZ~1\\XCXCXC~1\\sdfaffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\\sdfaffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nProcmon logs while navigating the inaccesible folder on dokany drive.\nLogfile.log\nAbove are procmon logs while accessing the mapped dockany folder. Please change it to Logfile.xml to view it. I could see Bufferoverflow it the captured logs.. Hello @Liryna ,\nLogfile.zip\nchange the extension to 7z as it has been zipped with 7-zip. The zipped folder has pml file.. Hi @Liryna,\nI will surely do as requested. I had to shift to win 10 machine and there if i try to run mirror application i get following message:\nFailed to add security privilege to process\n=> GetFileSecurity/SetFileSecurity may not work properly\n=> Please restart mirror sample with administrator rights to fix it.\nIs there a way to overcome\\avoid this. This is crucial as i cannot run the application in administrator mode.  . I just checked \nActual Folder: C:\\Users\\ADMINI~1\\Desktop\\FORTES~1\\ASASAS~1\\VZXCVX~1\\XCVXZZ~1\\XCXCXC~1\\sdfaffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nTruncated as reported in the procmon: M:\\asasasassssssssssssssssssssssssssss\\vzxcvxvczxzxzxzxzxzxzxzxzxzxzxzxzxzxzxzxzxzxzx\\xcvxzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz\\xcxcxcxcxcxcxcxcxcxcxcxcxcxcxcxcxcxcxcxcxcxcxcxcxcxcxcxcxcxcxcxcxcxcxc\\sdfaffffffffffffffffffffffffffffffffffffffffffffff. It did not work. Still hitting the same issue. \nCould you explain the reason for Dokany to require admin mode?\nIs this required just at the start to do something with raised privilege OR Dokany working will continuously do something with raised privilege i.e.  is it some one off task or Dokany need throughout admin privilege?. My observation is different.\nOn win 10, my application which integrates with Dokany is working only if i run it in admin mode. If i run my application in normal user mode then file operations on the mapped drive fail.\nOnly change we have done is integration with Dokany. To confirm the behavior, i ran Dokany mirror application and it logged that you need admin privilege. This led us to conclude that Dokany needs admin privilege. Your previous comments contradicts that.\n. From mirror code, i see that the g_HasSeSecurityPrivilege flag is used in below section of code which i believe is called very frequently.\nHANDLE handle = CreateFile(\n      filePath,\n      READ_CONTROL | ((requestingSaclInfo && g_HasSeSecurityPrivilege)\n                          ? ACCESS_SYSTEM_SECURITY\n                          : 0),\n      FILE_SHARE_WRITE | FILE_SHARE_READ | FILE_SHARE_DELETE,\n      NULL, // security attribute\n      OPEN_EXISTING,\n      FILE_FLAG_BACKUP_SEMANTICS, // |FILE_FLAG_NO_BUFFERING,\n      NULL);. Same logic must be applicable for Dokany thats why it works in admin mode with my application. Please correct if i am wrong.. My bad. I was under the impression that mirror application internally uses Dokany.\nSo the way we are using Dokany in our application is making it require admin rights. Does this seem correct explanation?. @Liryna \nHow to generate logs for Dokany? \nMy application mounts FS with following options:\nDokanOptions.RemovableDrive | DokanOptions.StderrOutput. win10_64_normal mode.LOG\nHi @Liryna ,\nI collected debug logs by running the application. There is unmount being called automatically. This is one difference i could see from the logs generated by running the application in non-admin mode.\n. @Liryna \nIn my debug environment also, in normal mode unmount callback is coming while mounting itself.. @Liryna \nwhat is that request? What should i do to make it work without \"run as administrator\" option?. In the logs there  are no createfile calls. Moreover in when i debug my code, i do not get any createfile callback.\nIf i run the application as admin, i get createfile and other callbacks. \nProblem is specifically on win 10 X64 machines.\nBTW, unmount happens immediately i.e. within seconds of mount being called. My debug call stack shows previous call as mount only. After this i see unmount has been called.. @Liryna Can you point me to mount code so that i can see what it is doing?. Our application has Shell Namespace extension integration with the help of which we map the server location onto the windows file system created via Dokan. So that mapping is there but dokany drive is unmounted.\nIn the below two images, you can clearly see the difference. My Documentum Desktop is there in both. But see the P drive mounted by Dokany. The Image where P drive shows a number, it all works fine. In the other image the p drive is not working.\nWe are able to navigate to the folder via My Documentum Desktop.\n\n\n. @Liryna I did not get the question. Please elaborate.\nI removed antivirus from the machine and even windows defender program is switched off.. Additional Info:\nwe are referring the following link for our dot net integration:\nhttps://github.com/dokan-dev/dokan-dotnet\nIn this one of the statement says \"Administrator privileges are required to run file system applications.\". Running mirror requires you to run as administrator. So this problem does not arise. Moreover except win 10 x64 bit, the integration is all fine on other platforms.. Your second statement gave me clue.\nIn our application, we are trying to mount a uncPath, example \\\\testenv. \nIf in mount call, we give RemovableDrive as DokanOption then in non-admin mode the unmount happens. \nIf in mount call, we give NetworkDrive as DokanOption then in non-admin mode mount happens. \nTo clearly explain following works in non-admin mode:\nMount(\"p:\", DokanOptions.NetworkDrive | DokanOptions.DebugMode, 1, 1200, t, \"\\testenv\", logger);\nfollowing fails in non-admin mode with unmount being called on win 10 x64 machines and works on other environments:\nMount(\"p:\", DokanOptions.RemovableDrive| DokanOptions.DebugMode, 1, 1200, t, \"\\testenv\", logger);\nPS: we are mounting to a unc path.. @Liryna Please confirm my findings. \nThanks a ton for prompt responses and helping me debug the case.. ",
    "nevubm": "I believe I've encountered the same or similar problem with apps such as XnViewMP hanging or crashing when launched in the container as reported here: https://github.com/bailey27/cppcryptfs/issues/42 Increasing threads seems to help a bit, but hangs happen regardless. ",
    "printpagestopdf": "Hi Liryna,\nthank you very much for your fast and clear answer (sorry, that I didn't found how to add the \"Question\" marker). \nSo the problem is again the windows environment and not dokany library. \nI took in account caching on the sever side, but I would have still the problem that I am not able to give some Error back to the client Application (tried throwing an Exception in cleanup and close, but Windows applications seems to ignore this).\nSo thank you again you saved me hours in searching for a non existing solution and I will implement it without Error Reporting on Write.\nRegards,\nReinhold. ",
    "Mikeinnc": "I was requested to update Dokan library to v1.2.2000 on my Windows 7 Ultimate 64bit system as I am using Keybase. I followed the instructions; removed the previous version using Control Panel > Programs & Features; restarted the computer and started the installation. However, it constantly fails saying 'Fatal error - installation failed because Windows reboot is still pending after Dokan driver uninstall - error 0x80070643'. Well, it's not - pending, that is! I've checked that there is NO older Dokan library installed; the 'Program Files' directory does NOT contain any directory that even remotely looks like 'Dokan'; I've rebooted (with power down) numerous times and yet consistently get this error. My guess is that something (?) is not being correctly reset when the system reboots - but what? Any assistance gratefully received!! Thanks.\n\n. Log file for error is attached.\nDokan_Library_1.2.1.2000_Bundle_20190113125256.log\n. Hi Liryna - Thanks for the reply. No, there's no evidence of that flag at all. I ran a search on the registry for any instances of 'Dokan' - a few keys showed up (see below for an example - left over, I guess from the previous instance?) but certainly not a key in HKLM like the one you mention.\nHKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Installer\\UserData\\S-1-5-21-2639430714-3830895328-605062752-1001\\Components\\9BF61A89413DA59408C67BD5BC47FCD9\nValueName\\ValueData: 277230B7C02E1DE49903AB0396618739\\21:\\Software\\Keybase\\Keybase\\KbfsDokanExe. OK, so I thought I'd double check and make really sure that flag wasn't present. It wasn't - not in ControlSet001, ControlSet002 or CurrentControlSet. Then I powered down computer; waited 5 minutes or so (just to be sure!); powered up and tried running the 'Dokan Library 1.2.1.2000 Bundle Setup' again. Exactly the same error message. However, this time, I left the error message (and setup) \ndialog up on the screen, and checked my registry again. And the key was now active!! I'll add a screenshot of the keys so you can see. I then closed the setup dialog, and checked again - and the key was still there. So, did it get placed there during the setup process? It would appear so - but why wasn't it there when I looked before? Weird! Hopefully, this will enable you to advise me what to do next!! Thanks so much for your assistance - Mike\n\n. Hi Liryna - Thanks for the last comment and apologies for being 'off-air' for a couple of weeks. I'm back again now, and will look further into this issue and let you know what happens. Yes, a very wierd sistuation, it appears!. Hi Liryna - Well, I have tried a few more issues. As you are probably aware, I need to update the Dokan Library to use the Keybase app in (Windows) Explorer. So, I have deleted all traces of Dokan on my computer; deleted the Keybase app and then reloaded it (as an older version). In this, an older version of Dokan gets loaded, and this appears to be successful. I've then updated Keybase and checked 'Enable Keybase in Explorer'. A this point, the dialog appears to load the new Dokan library, but then tells me I must first uninstall the older - original - version. I've done this; and restarted Windows. Now, the new Dokan library dialog opens, and starts the installation. However, whatever I do, it fails with that same error message! It seems that there's something really upsetting that Dokan library installation! Oh, Keybase works OK - it just will not allow me to 'access Keybase files like I would normally do with local files'. Regarding your last comment, you seem to be right - there's no indication in programs that there is a Dokan library loaded. However, dokan1.sys does exist in the \\system32\\drivers directory! Stranger and stranger...... Hi Liryna - I won't answer your question, because I have actually got the Dokan library 1.1.0.2000 to load!! I am still having untold problems with attempting to get it to load directly from Keybase, so I downloaded - again - the latest library setup file DokanSetup_redist.exe and this time, after rebooting etc, I ran it as an admin (Right click - run as administrator) - and it completed successfully!!! Amazing! Now the problem is that if I try to 'Enable Keybase in Explorer', Keybase, apparently, doesn't recognise that the library is loaded, and wants to reload it. Of course, it fails - even if I have run the Keybase client app as an 'Admin' (see above). I've tried removing the raw version; in fact tried just about every combination of removal; reinstalling; rebooting (multiple times!!!) but the installation will not complete successfully from Keybase. So, current situation is a successful installation of Dokan, but it is neither recognised by nor cannot be used by Keybase. Of course, I realise this is a Keybase issue and I'll see what they say...... Thanks so much for all your help - and I guess the real secret is 'run as an Administrator' in Windows\". Hi Liryna - I'm at my wits end with this, and although I opened a case in the Keybase GIT area, it seems that they are totally baffled as well. Since last writing, I have been totally unable to replicate a successful install of the Dokan library. After many, many frustrating and fruitless hours, I have discovered exactly where it is failing. During the install, it appears that the dokan_x64.msi file is written to a sub-directory in the \\ProgramData\\Package Cache directory, and executed from there. Except mine isn't. Ever! I have tried every trick I can think of to overcome this problem, but every install fails at this point. I even renamed the original 'Package Cache' directory, and created a new one with write permission to every man and his dog. Still failed! Here's the relevant issue from the log:\n[2464:1200][2019-01-30T10:32:25]i370: Session begin, registration key: SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall{3033f520-fbfd-410e-bce7-e86beb2fade3}, options: 0x7, disable resume: No\n[2464:1200][2019-01-30T10:32:25]i000: Caching bundle from: 'C:\\Users\\Mike\\AppData\\Local\\Temp{5CF2493E-9892-4A28-AD91-84710BF202F1}.be\\DokanSetup.exe' to: 'C:\\ProgramData\\PackageCache{3033f520-fbfd-410e-bce7-e86beb2fade3}\\DokanSetup.exe'\n[2464:1200][2019-01-30T10:32:26]i320: Registering bundle dependency provider: {5F030BFA-CE6E-408A-9694-F593B319DBBE}, version: 1.2.1.2000\n[2464:1200][2019-01-30T10:32:26]i371: Updating session, registration key: SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall{3033f520-fbfd-410e-bce7-e86beb2fade3}, resume: Active, restart initiated: No, disable resume: No\n[2464:1100][2019-01-30T10:32:27]i305: Verified acquired payload: Dokan_x64.msi at path: C:\\ProgramData\\Package Cache.unverified\\Dokan_x64.msi, moving to: C:\\ProgramData\\PackageCache{65A3A964-3DC3-0102-0001-181221101125}v1.2.1.2000\\Dokan_x64.msi.\n[2464:1200][2019-01-30T10:32:27]i323: Registering package dependency provider: {65A3A964-3DC3-0102-0001-181221101125}, version: 1.2.1.2000, package: Dokan_x64.msi\n[2464:1200][2019-01-30T10:32:27]i301: Applying execute package: Dokan_x64.msi, action: Install, path: C:\\ProgramData\\PackageCache{65A3A964-3DC3-0102-0001-181221101125}v1.2.1.2000\\Dokan_x64.msi, arguments: 'ARPSYSTEMCOMPONENT=\"1\" MSIFASTINSTALL=\"7\" MSIUNINSTALLSUPERSEDEDCOMPONENTS=\"1\" INSTALLDIR=\"C:\\Program Files\\Dokan\\Dokan Library-1.2.1\" INSTALLDEVFILES=\"1\"'\n[2464:1200][2019-01-30T10:32:56]e000: Error 0x80070643: Failed to install MSI package. * Looks like directory NOT writeable? **\n[2464:1200][2019-01-30T10:32:56]e000: Error 0x80070643: Failed to execute MSI package.\n[2AF0:2B98][2019-01-30T10:32:56]e000: Error 0x80070643: Failed to configure per-machine MSI package.\nI have another Windows 7 machine, and the Dokan library installed faultlessly on that. At the suggestion of the Keybase team, I have tried replicating the installation from the successful machine on to the failing machine, copying every known Dokan file to the respective directories. But, of course, this doesn't work (and to be honest, despite the effort - which was quite formidable - I really didn't think it would!). So that's the situation. One machine - flawless and effortless installation. The other - a total mind blowing disastrous nightmare that has wasted many, many hours of my life! Any final assistance would be gratefully received, otherwise I'll just have to accept this will never, ever work on here!. Thanks so much for your valued information. I was previously sent that link by the Keybase team, and to be brutally honest, it was totally useless! It found, and did, absolutely nothing and - in true MSoft style - shunted me off to 'somewhere else'. I did, out of frustration and in good faith, try it again, but nothing...... I did also look at my .net framework which is v4.7.2 and I ran a repair process on it. I then rebooted, and again tried to install Dokan. Same problem - same error. Always that same error!\n[2A80:2A98][2019-02-01T16:27:41]i301: Applying execute package: Dokan_x64.msi, action: Install, path: C:\\ProgramData\\Package Cache{65A3A964-3DC3-0102-0001-181221101125}v1.2.1.2000\\Dokan_x64.msi, arguments: ' ARPSYSTEMCOMPONENT=\"1\" MSIFASTINSTALL=\"7\" MSIUNINSTALLSUPERSEDEDCOMPONENTS=\"1\" INSTALLDIR=\"C:\\Program Files\\Dokan\\Dokan Library-1.2.1\" INSTALLDEVFILES=\"1\"'\n[2A80:2A98][2019-02-01T16:28:10]e000: Error 0x80070643: Failed to install MSI package.\nAlways fails to install the package - and, of course, everything else goes downhill after that! Why? What is stopping that install? How can dot-Net be involved? It's a very consistent failure!!!. I will, but as an aside, I use the same commercial strength 'Sophos AV'\nprogram on both computers, so I would be more than surprised if it were a\nproblem on one and not the other. I'll let you know the results later.\nThanks!\nOn Fri, 1 Feb 2019 at 16:51, Marinko notifications@github.com wrote:\n\nPlease can you run process monitor and set the file path filter to the\nproblem directory so that we can se if there is really an access issue?\nWe can then also see if antivirus or some other software is preventing the\ninstallation.\nOn Fri, Feb 1, 2019, 09:38 Mike Weaver <notifications@github.com wrote:\n\nThanks so much for your valued information. I was previously sent that\nlink by the Keybase team, and to be brutally honest, it was totally\nuseless! It found, and did, absolutely nothing and - in true MSoft style\n-\nshunted me off to 'somewhere else'. I did, out of frustration and in good\nfaith, try it again, but nothing...... I did also look at my .net\nframework\nwhich is v4.7.2 and I ran a repair process on it. I then rebooted, and\nagain tried to install Dokan. Same problem - same error. Always that same\nerror!\n[2A80:2A98][2019-02-01T16:27:41]i301: Applying execute package:\nDokan_x64.msi, action: Install, path: C:\\ProgramData\\Package\nCache{65A3A964-3DC3-0102-0001-181221101125}v1.2.1.2000\\Dokan_x64.msi,\narguments: ' ARPSYSTEMCOMPONENT=\"1\" MSIFASTINSTALL=\"7\"\nMSIUNINSTALLSUPERSEDEDCOMPONENTS=\"1\" INSTALLDIR=\"C:\\Program\nFiles\\Dokan\\Dokan Library-1.2.1\" INSTALLDEVFILES=\"1\"'\n[2A80:2A98][2019-02-01T16:28:10]e000: Error 0x80070643: Failed to\ninstall MSI package.\nAlways fails to install the package - and, of course, everything else\ngoes\ndownhill after that! Why? What is stopping that install? How can dot-Net\nbe\ninvolved? It's a very consistent failure!!!\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/771#issuecomment-459647203,\nor mute the thread\n<\nhttps://github.com/notifications/unsubscribe-auth/ADHSOKHl-b7MIyvfjFUy-NZXhTxIyCPOks5vI_zsgaJpZM4Z8-xM\n.\n\n\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/771#issuecomment-459650564,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ACFflnFYfv9NlA18jF23SZQiPCfSi2SXks5vJAAlgaJpZM4Z8-xM\n.\n. I rebooted and ran the msiexec file and here is the log file generated (oh, and needless to say, it failed.....!)\n\nDokanLogfile.txt\nI'll run the process monitor later (after restarting, of course) and send you the details. Thanks so much for all this help!\n. Hi Liryna\nI do apologise. I sent the following to you on 2 Feb, but as I attached a\nlog file, it appears it didn't get sent - and I didn't notice!\n(sent 02 FEB2019) Hi Liryna - It looks like you have cracked the problem! I\ndid check the Visual C++ redistributables last night - well, I thought I\ndid! - and they seemed to be solid, but this morning, I actually deleted\nthem from my system, as I recalled from the \"successful\" other machine\ninstallation that Dokan would reinstall them if they weren't present. I\nrebooted, started 'process monitor' (which I'd previously set-up to\nfilter just processes that wrote to or read from the /programdata/package\ncache directory) and tried an install from Keybase ( which appears to be\nidentical to performing it directly), and sure enough, it informed me that\nit was reinstalling the redistributables. And then - success!!! It\nworked! I restarted Keybase and, as expected, the K drive is now present\nand shows the Keybase folders. I'll include the ProcessMonitor file in here\nso you can see it, (although, like me, I guess you are just pleased you can\ntick this one off!) but this is certainly one to remember! There had been\nNO indication at all that there had been anything 'wrong' with the Visual\nC++ redistributable files, but clearly there was. Thanks so much for all\nyour very informative and kind assistance. It is very much appreciated!\nSo, yes, all is now good and it is working exactly as I would expect.\nPlease close the issue - and again, thanks for all your help, and apologies\nthis didn't reach you sooner!\nKind regards\nMike\nPS I'm not attaching the log file this time!\nOn Sun, 17 Feb 2019 at 23:23, Liryna notifications@github.com wrote:\n\n@Mikeinnc https://github.com/Mikeinnc do you think see should be closed\n? had you time to look into it ?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/dokan-dev/dokany/issues/771#issuecomment-464469923,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ACFflpbA2cuBdwmDi3CS-6fZbBXDcKZCks5vOXPmgaJpZM4Z8-xM\n.\n. \n",
    "kishoreannapureddy": "I can make the changes. How do I merge the changes? Send a PR? . https://github.com/dokan-dev/dokany/pull/775 - please review. I am using nodejs/fuse-bindings and I am yet to test it.. I have tested and it works fine. This can be closed.. ",
    "Hasan-Jawaheri": "Hi @Liryna ,\nNo that will not fix it - the problem is that somewhere in the driver itself (probably?), IOCTL_EVENT_WAIT is required to happen before FSCTL_ACTIVATE_KEEPALIVE. I don't know if that is a problem in the driver (if so, the fix should be in the driver) or it is a design choice. I am not fully aware of what the keepalive thing is doing with the driver so I am not sure. I highly doubt it is a design choice, but if so, there is no way to ensure that IOCTL_EVENT_WAIT is delivered before FSCTL_ACTIVATE_KEEPALIVE without some hacky solution.\nWhy is this happening? It feels like this requirement by the driver shouldn't exist - Perhaps a (fake) non-blocking IOCTL event can prompt the driver to allow the FSCTL_ACTIVATE_KEEPALIVE, but that is quite hacky as well.. I have no clue - I do not have experience with Windows drivers nor do I have the WDK installed atm. The issue could be caused by something else but all I can do is speculate from the behavior of the DLL. From what I'm seeing, when IOCTL_EVENT_WAIT is called in the driver, some side effect happens and allows FSCTL_ACTIVATE_KEEPALIVE to succeed.\nDeviceIoControl(...FSCTL_ACTIVATE_KEEPALIVE...) fails with error STATUS_INVALID_PARAMETER, so I guess it's one of these (fscontrol.c in sys project (driver)):\n```c++\n  case FSCTL_ACTIVATE_KEEPALIVE:\n    fileObject = irpSp->FileObject;\n    if (fileObject == NULL) {\n      DDbgPrint(\"Received FSCTL_ACTIVATE_KEEPALIVE with no FileObject.\");\n      return STATUS_INVALID_PARAMETER;\n    }\n    ccb = fileObject->FsContext2;\n    if (ccb == NULL || ccb->Identifier.Type != CCB) {\n      DDbgPrint(\"Received FSCTL_ACTIVATE_KEEPALIVE with no CCB.\");\n      return STATUS_INVALID_PARAMETER;\n    }\nfcb = ccb->Fcb;\nif (fcb == NULL || fcb->Identifier.Type != FCB) {\n  DDbgPrint(\"Received FSCTL_ACTIVATE_KEEPALIVE with no FCB.\");\n  return STATUS_INVALID_PARAMETER;\n}\n\nif (!fcb->IsKeepalive) {\n  DDbgPrint(\"Received FSCTL_ACTIVATE_KEEPALIVE for wrong file: %wZ\",\n      &fcb->FileName);\n  return STATUS_INVALID_PARAMETER;\n}\n\nDDbgPrint(\"Activating keepalive handle.\");\nDokanFCBLockRW(fcb);\nfcb->Vcb->IsKeepaliveActive = TRUE;\nDokanFCBUnlock(fcb);\nstatus = STATUS_SUCCESS;\nbreak;\n\n```\nI can't debug this right now so I don't know which one of those 4 conditions is failing, but one of them (or more) seems to pass only after a call to DeviceIoControl(...IOCTL_EVENT_WAIT...) has been made.. How is anyone using the library at all? It just times out after a few tens of seconds, unless you run with debugging on... Am I missing something?. Thanks for the reply @Liryna ,\nI am not sure which timeout is the problem, but here is what CURRENTLY HAPPENS in the Mirror example provided:\n- Modify Dokan DLL in dokan.c line 296, replace DbgPrintW with wprintf. This is important, you need to run this in non-debug mode but you still want to see this message, for convenience...\n- Run a release build of Mirror.exe with g_DebugMode = FALSE; and g_UseStdErr = FALSE; This is important, the race condition only happens when the DLL is not printing stuff\n- Now the mirror example should run without debugging options to Dokan, and the only print that you can see (sometimes) is from the wprintf.\n- If you run it a few times, the wprintf will be executed because the \"keepalive activation fails\" (which is the problem). Once this happens, wait for the application and it will crash in less than a minute.\nMy point is: This keepalive activation in DokanMain in the DLL FAILS SOMETIMES (in fact more times than it succeeds) WHEN THE DEBUG FLAG IS NOT PASSED. And when it fails, it is not ok: the DLL will break, as I explained in my post above.. @Liryna ,\nThat is weird, I'm using the driver from the latest released msi installer. How can I read the logs from the driver?. The kernel logs shows this:\nReceived FSCTL_ACTIVATE_KEEPALIVE with no CCB.\nThis is printed from line 262 in file fscontrol.c in project sys:\nc++\n    ccb = fileObject->FsContext2;\n    if (ccb == NULL || ccb->Identifier.Type != CCB) {\n      DDbgPrint(\"Received FSCTL_ACTIVATE_KEEPALIVE with no CCB.\");\n      return STATUS_INVALID_PARAMETER;\n    }\nI'm trying to dig into the logs but the logging utility DebugView is very buggy.. Here are logs when the sample works and no race condition happens (Notice Opened keepalive file from process ... line happens first, then Activating keepalive handle. proceeds normally.\nThis is a log where the race happens and it doesn't actually work (Notice there is not Opened keepalive file from process) .. Hi @Liryna ,\nI tried one more thing, perhaps that could give you some insight:\nIn dokan.c in DokanMain (dokan project), if you keep trying to perform FSCTL_ACTIVATE_KEEPALIVE in a loop after creating the keepalive handle with CreateFile once then the same race condition happens: If things go wrong, no matter how many times you call FSCTL_ACTIVATE_KEEPALIVE it will always give the same error.\nHowever, if you put the CreateFile in the loop as well (with exactly the same parameters), that is, if you create the handle then activate it, release the handle and try again on failure, then it will eventually work after a few attempts.\nIt seems like sometimes CreateFile for the keepalive handle is not properly received by the driver, and the scenario in the log above happens.\nFor now, a simple fix would be to just do something like this (line 280 in dokan.c in project dokan:\n```c++\n  wchar_t keepalive_path[128];\n  HANDLE keepalive_handle;\n  BOOL keepalive_active = FALSE;\n  StringCbPrintfW(keepalive_path, sizeof(keepalive_path), L\"\\\\?%s%s\",\n                  instance->DeviceName, DOKAN_KEEPALIVE_FILE_NAME);\n  while (!keepalive_active) {\n    keepalive_handle = CreateFile(keepalive_path, GENERIC_READ, 0, NULL,\n                                         OPEN_EXISTING, 0, NULL);\n    if (keepalive_handle == INVALID_HANDLE_VALUE) {\n      // This is actually a fatal error - if we cannot open the keepalive\n      // handle then the DLL will shortly time out\n      DbgPrintW(L\"Failed to open keepalive file: %s\\n\", keepalive_path);\n      return DOKAN_START_ERROR;\n    }\nDWORD keepalive_bytes_returned = 0;\nkeepalive_active =\n    DeviceIoControl(keepalive_handle, FSCTL_ACTIVATE_KEEPALIVE, NULL, 0,\n                    NULL, 0, &keepalive_bytes_returned, NULL);\nif (!keepalive_active) {\n  CloseHandle(keepalive_handle);\n}\n\n}\n```\nI would appreciate it if something like this (or an actual fix for the driver) is bundled and released so I can redirect our clients to download it.. @Liryna This is great, seems to be working. I will keep using it until the end of today and if I don't complain by then, then it must have been working.\nThank you!. ",
    "hans-olav": "Is the async branch stable yet? Stability is more important than perf :) I would like to stay with mainline I think.\nIs there a reason for only 15? Even Google Drive is running with much more.. I tested 63 threads on a 4 year old 24 core Xeon server with Server 2016 on it. 63 threads allocates about 63 MB ram for buffers i believe, so still pretty manageable. Going over 63 did not work, I did not dig too deep into why.\nNote that we are not changing the default - only the max if the user already specifies something that high.\n. Awesome, thanks!. ",
    "jjacobsfs": "Hello.  See attached.  Thanks.\nmirror log.txt\n. Hello.  I see what you're saying but that is all I am getting in the command prompt.  Any ideas?\nThanks. I shut off antivirus and any other third party apps.\nI have a mapped network drive for that same network share.  Would that cause issues?  As a test, I created a new network share that was not mapped and mirror.exe ran longer than before (but it was still eventually killed).\nI will keep troubleshooting and see what I can come up with.. I tried mapping the mapped drive.  It works longer but then ends up crashing Windows.  I haven't seen it do it but every time I leave mirror running and come back after several hours, Windows has restarted.. Sorry, haven't had the time to get logs yet.  I rarely use Dokan now and only use it if I want my backup software to sync changes on my NAS because everytime it crashes windows.  I will try to get logs soon.. ",
    "Marthisdil": "I'm experiencing something similar.  If I do mirror.exe /u \\IP\\Sharename /l driveletter the mapping happens, but when you browse to driveletter it shows the C drive.. ",
    "barcelona-messi": "\nHi @barcelona-messi ,\nCould you provide more information on this ? Did not face that.\n\nhi, I compiled dokan myself, I have EV driver signature on the driver file\uff0cThen submit the driver signature on the Windows Hardware Developer Center portal\uff0cWrong when using the driver\uff0cerror:\u201cA certificate was explicitly revoked by its issuer\". ",
    "gkotian": "That is correct. Although U is a vowel, a UNC is correct in this context. A related article is here. "
}