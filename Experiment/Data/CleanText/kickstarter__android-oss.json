{
    "luoser": "Nice change. Thanks!. great find, thanks!. > This won't prompt the user to select an email app if one was configured as default. If none was configured only email apps will show up in the chooser dialog.\nthis is the behavior we would like in the app for the email chooser. we also err on the side of limiting our dependencies when possible. thanks for the suggestion though!. thanks for this suggestion! we actually like using the sha and date in our internal builds as well to provide more information for debugging. we just merged in #92 to store the sha and date so closing this. will be fixed once #11 merges!. ah yes. unfortunately we don't use Windows for development on our team so we can definitely use some suggestions on how we can improve on that front!. yep on the make bootstrap, except it will probably fail at the moment. we're working on a submodule fix right now #11 then you should be g2g. yep, @Jawnnypoo hit the nail on the head. thanks for the suggestion tho! . thanks for updating!. yep, this is a good fix--it's good practice to use uppercase L, and we do use it in other places of our codebase. could you possibly change the lowercase ls in HelpActivity as well while we're at it?  thanks!. check out our native documentation: https://github.com/kickstarter/native-docs. note, it's very slim right now, but we will be updating that repo as we go along. good catch! we are in the midst of upgrading everything as needed (seeing as how we're still targeting 23) so this, as well as many of the upgrade-oriented PR's, will probably be merged in as one general PR on our end to get up to speed. #29 thanks y'all\n. sadly we don't support sign up in our open source app. you can sign up at http://www.kickstarter.com/ or via our apps!. as noted in our Getting Started section,\n\nFollow these instructions to build and run the project without data; note that the app will be blank.\n\nwe have set up the repo so that you can build the project, but without any server data. our future todo is to provide mock server data, so stay tuned. addressed in #29 . can you try running make bootstrap?. @michaldrabik thanks for pointing to that issue, was about to do the same! we'll keep that Windows thread issue open for now to hold the Windows make discussions. @zhoujingheng did @LeoHeo 's steps work for you?. @zhoujingheng ah, our team doesn't develop on Windows so we have been lacking in Windows support. please see https://github.com/kickstarter/android-oss/issues/16 for some guidance. heh woops, nice catch. @aigeek yeah, the oss app will not get any data from the server, but we are going to provide mock data at some point so stay posted!. Our LoginTout is actually triggered from multiple places: the side menu, the \"Onboarding\" Login callout in the Discovery feed, the empty Activity feed, an empty Comments feed, and when starring the project as a logged out user.\nIn general, we treat the LoginTout as a modal--the only place where the Tout appears via slideInFromRight is the side menu, which makes me think that we should remove that enter transition rather than refactoring the rest. closing this for now-- an overall transition pass is on our radar. closing now as @hodanny 's fix has been merged.. ah. for now go to View > Tool windows > Build variants and switch the build variant to anything ending in Release.  the package name in the google-services.json we're copying over only matches com.kickstarter.kickstarter release names so looks like that prevents compiling.\nwill work on a fix for this asap. @liuruimilk this should be fixed now for all build variants. can you please try pulling master, running make bootstrap then building the project again? thanks!. can you try running make bootstrap? we've updated the Makefile recently. can you please pull the latest master, try make bootstrap again, then build the project in android studio? the gradle process should be generating the appropriate google-services.json file for you. thanks for this suggestion! sorry it took so long to address, but thank you for sharing your implementation and if you'd like to see we are working in your solution to our codebase here! #92 . closing as we have merged the change, thanks again!. you can find our team's documentation here: https://github.com/kickstarter/native-docs. \nit is definitely very slim right now, especially in terms of android documentation, but when we write more we will add it to that repo! . @YadoEmoji please let us know if @liuruimilk 's instructions work for you. heya, sorry that we've punted on this for so long but if you could fix the spacing so that it matches the Kickstarter style (should be accessible via Preferences > Code Style) and merge latest would be great to get this in!. closing here so we can do the merge in #189 . oldie but goodie, thanks!. thank you for this change, and for providing the reference. hm. if you downloaded the repo can you please try cloning it instead and running make bootstrap again? . Going to close this now due to inactivity. . re: squash we are going to go with a ProjectViewModel.ViewModel refactor instead to avoid models.Project and viewModels.Project import namespace ugliness \ud83d\ude2c \nup for name change suggestions in the future!. it's accessed in the @Requires..., and also every time we instantiate a vm in a test (-_-\uff61)\nre: lengthy files, that is indeed the tradeoff. files like RewardViewModel will have a very long header, but I have to say it has been pretty nice working with inputs and outputs in one place, and seeing the inputs and outputs immediately when opening a ViewModel file feels like a nice abstract of what is going to happen . Hi @sockeqwe, the results were indeed surprising. \nThe \"benchmark\" test I ran does come with a caveat since I lazily ran them in our app--not an ideal clean environment to really analyze the differences between the Kotlin byte code differences. \nPlease excuse the noise in this branch, but it contains the code I used to measure the times, namely \n\nthis is the sealed class context \nthis is the enum class context \nthis is the static class context\nand this is the very lazy benchmarking code that i actually ended up running 100_000 times rather than 1_000_000\n\nDefinitely not the most scientific approach, and I would also love to do a more in-depth analysis at some point :neckbeard: . chatted IRL with brando but we need to fix one more edge case on the ApiPaginator to prevent concatenated empty lists from triggering the next page. Can you point me to the layout file which contains this snippet? Thanks!. sorry this has taken so long, but you are correct, setting this background in a separate View tag is redundant when it can be done in the enclosing RelativeLayout. feel free to submit a PR, otherwise I'll go ahead an make the changes. Ah, a subtle catch--looks like this is because the sort tab inherits its 4dp elevation from its parent CoordinatorLayout while the discovery toolbar (the navy blue) has no elevation since we would not want the top toolbar's shadow to render onto the sort tab bar. \nIf you've got a suggestion for how to render this shadow only when the tab layout is hidden we'd welcome a PR!. thanks for the suggestion! however our team prefers not having to do an additional lookup for each dependency and is fine with seeing the build versions listed next to them. thanks!. Sorry for not responding earlier, but the existing layout on master does have a hint set for login. Noted for future development however that we will continue to use TextInputLayout. Thanks!. thanks!. heya, good suggestion. i think we use {{}} in just a few places so didn't analyze the complexity too much when building the app, but we're totally up for removing them. if you'd like, feel free to open a PR and we'll merge, or likely we'll table this task for later, prioritizing feature development. heya, yep we did once have an espresso test onceuponatime for our login, but it was un-maintained and removed, so looks like we can remove this dependency as well until we use espresso tests again in The Future. thanks!  . yep, this is actually related to the recent upgrade to Android Studio 2.3.1 which seems to reset the working directory for our tests\nto fix this, go to Run > Edit configurations > Defaults > Android JUnit and set the Working directory: to path/to/android-oss-or-whatever-you-named-this-project/app\nnote that if you have a test / tests open that you've already tried running you may have to restart the IDE for these defaults to trickle down. let us know if this helps. oooh interesting, some lint failures with these gradle changes. we're gonna look into these tomorrow a.m. before merging. alrighty, we're ready to rock n roll. for anyone on an older version of Android Studio, be sure to upgrade to 2.3.1! . yep, please refer to #21 and our readme: the oss repo is designed to build and run, but without production data (for now) from our server . @christopherwright why yes i just did and it survived! \ud83d\udc4d \ud83d\ude0c . cool that you saw such a big change! let's chat about this later today, in general we try to limit our dependencies and avoid passing context around our codebase, so let's explore what our other options may be. closing this as cory just wanted to test via CI. fwiw i assume full responsibility for ci failures etc. was too excited to have this PR opened we will go through this and all our shiny new outputs tmrw am. gonna \"rush\"-merge this since it's only XML tweaks that I have already run by @maggieKSR !. Yep, we're using Kotlin as we see fit for new utils and some classes. The Hope and Dream\u2122 is to get most of our view models, activities, and tests (i.e. everything hehe) to Kotlin, but to keep with our product roadmaps it's not our priority right now \ud83d\ude2d . heya thanks for this suggestion, but since you're using a version from the canary channel, a gradle 3.3+ is required. we're gonna stay with 2.3 in the stable channel for now so you'll have to keep those changes on your local env until we catchup!. Hmmm so this failing test is due to PlaygroundVMTest living in the /test directory, while its PlaygroundVM lives in our internal package. Anyone have thoughts on how to easily re-package the test or vm file so that internal view models can have tests?\ncc @christopherwright . not a real solution, removing the instantiation of the PlaygroundVM from tests, but don't want this to stay open forever. \nplus in reality writing playground tests will be mostly for our TDD / sanity checks and we won't be checking in actual playground code ever. dope! re: test you can add a test to DiscoveryParamsTest.java that'd be swell. . for posterity: this change was made because we weren't serializing our new PushNotificationEnvelope.Message correctly without it, which means we also caught the same for our PushNotificationEnvelope.Project reminder pushes \ud83d\ude1f , so i've made a card for the future to make this class more testable, but merging for now!. rush merging --- 100% my responsibility if something goes terribly. ah sorry, hold off on reviewing for now!! --just found a lil bug where initial activities aren't emitting until a swipe refresh \ud83e\udd14 . ok bug smushed, safe 2 review\n[Edit] since the feature flag is highly integrated with this logic, i'm just going to append removing the flag to this PR so there's no double-time spent reviewing logic that ultimately gets removed\nThat being said, something nice to consider in the future re: removing many lines of tests is how to make our flags smarter so that we don't waste time writing lovely flag tests that get deleted in the end. Tho maybe if that just makes our code better even during dev process, it's worth it...\n. wahoo they work! \n. > a test for our new input\njust checked and the projectRequestUri input just moved cause of alphabetizing. sorry for the noise!!. thanks!. ahh sorry for the failing checks, forgot to refactor the BackingVMTests to take in a backer as well, fixing \ud83d\ude05 . @swoopej good call thanks for helping me keep our Testing Integrity \ud83d\udcaa . thank you!. lgtm! :shipit: . thanks!. should be /native-secrets not /native-secrets1. i essentially reverted secrets: to what it was before adding this if statement; the if statement only copied over examples but not the actual secret files for when vendor/native-secrets exists. ideally i'd like for this to be within the Makefile but it is nice to have a straightforward way of stepping through each build variant's director. > Note: Only install one package at a time, as echo y will only work for one license. If you don\u2019t do it this way, Android will give you an error message but won\u2019t fail and your build continues. This is undesirable since it makes debugging very difficult.\nfrom https://circleci.com/docs/android/#dependencies. this was crashing on app start since it's invoked in onCreate() for release builds and the injected build was null before this check. todo related to my comment below on build_configs script. it failed because checkForCrashes() happens before the build is injected. yes on altering functionality--on ios we now default to All Projects rather than PWL. good call with the onboarding bug! will address. yep, 'All Projects', forgot to mention that change up top. woooooops :neckbeard: . fine. This is a very good suggestion. It did feel a little dated to be injecting KSString into all these view holders. Thanks!. A review of how fragmentManager works: not all 5 sorts fragments are guaranteed to exist at any time. We pass along the position here from the Activity to ensure the categories are passed to a fragment that actually exists.. > one true selected params value\nlol at myself because. We didn't need params, paramsOnSortChange, and paramsOnDrawerSelection. In fact, having those three separate params observables caused some values to over-emit.\nWe just need params to set DiscoveryActivity UI, and the params merged with sort position for the fragments.. we no longer need to pass the Integer position here because with cleaner params, the DiscoveryParams contains the actual sort that can be used to derive the position!. the projects no longer emit an initial empty array because there is no api delay with 2 requests: one for projects and one for categories. some of the clarity from cleaning up these VMs is being able to ask ourselves questions like, \"Why are some outputs PublishSubjects? How would this survive process termination?\" \ud83e\udd14 . yes. yes. i've been sloppy with my annotations here i shall do a pass. \n. for posterity public is the default modifier in Kotlin so we get redundant warnings. maybe we should single-line these comments like so:\njava\n/** Invoke when pagination should happen. */\nthat way we can keep this comment style if need be for longer comments, but keep these interfaces from getting too long . yes. yes. agreed!. oh dang good catch. this will always be false since indeed, public rather than is_public is what's serialized. \ni missed this when looking at our swift Update model and neglecting the actual decoding part. \ud83e\udd14 this is what I assumed (admittedly I didn't change the tracking logic itself when refactoring here). funny enough nextPage does not emit immediately on initial load, but it does emit when there are no comments. will look into ApiPaginator to check out this logic. https://github.com/kickstarter/android-oss/pull/60 . ran into an unexpected wall--looks like there's no straightforward way of deserializing this reserved name (\"public\") while using @AutoParcel so i may just leave this field out until we actually need it so I can move on \ud83d\ude2c\ndiscussion: https://github.com/frankiesardo/auto-parcel/issues/6. ah for sure--definitely could've gone the IntentKey route here. this is the temp solution for empty page nextPage pings until #60 merges, as that needs more testing but is not a blocker to merging this.. this handler, as well as handleProjectUpdateUriRequest in UpdateViewModel, return false rather than true because we don't actually want the web view to handle the request--we just want to use this method as a callback to let our view model know that the relevant url request has been intercepted. from the docs: https://developer.android.com/guide/webapps/webview.html#HandlingNavigation\nseems pretty chill to either navigate back through the webview stack, or invoke our BaseActivity's back() method which handles general back navigation. this @OnClick(R.id.back_button) was redundant since this method exists in our base KSToolbar . this method is repeated from ProjectUpdatesViewModel, with the same todo of making a better, universal Navigation class in the future to handle these requests :/. something new I'm trying out here--maybe it's nice to have a default intent in our view model tests. this eliminates the need to repeatedly create new intents (e.g. vm.intent(new Intent()....)) when starting a test that doesn't need to keep a reference to the intent objects\nit would also give us an immediate reminder / some guidance as to what our view model's intent is and should be initialized with.. yep good call. . if you're wondering where all these \"new\" outputs are coming from they are not new we used to do all this logic within the getter functions with our this.project BehaviorSubject \ud83d\ude31 . it should still be showing, maybe it was a project ending within 48 hours?\nwe don't show the toast for that since it says \"We'll remind you 48 hours before this project ends!\" which also makes me realize that we should add logic in the future to show a different toast for that case. yep. @mbrandonw lmk if i am adding this (Android paginator version of skipRepeats) correctly here. yep yep. \ud83d\ude0e . we found this change to help make the debugger a little more reliable...breakpoints weren't hitting consistently, but something else we can do is upgrade AS \ud83d\ude01 . yeah, since this line is the first time we're using an intermediate variable for some additional logic on the Response . oh yeah i actually like that a lot better, since the coalesce will take care of the null checks as well. thanks!. ehh, something that would be nice to figure out maybe before merging this is if hot swapping out our legacy 8pt grid system with 6pt values would mess everything up....maybe i'll experiment with that while this is being reviewed \ud83e\udd14  . ok i just did a quick dry run of switching to a 6pt grid and it's not something that should block messages, since it'll take more time to phase in the new grid i'll chat with @maggieKSR about it \nfor the mean time i'm okay with appending new grid values with new_ that way when we search and replace it'll be easy to find them  . oof good catch, i forgot that we were working with a VH here and that each view gets recycled. i was just doing what we usually do in a (activity) view model to fetch the freshest user in case the environment.currentUser() is stale (i.e. ProfileViewModel)\nseems like we don't need this logic in this view holder however since we only need the current user's id value to see if they are the sender. yep. \ud83e\udd14 shouldn't have to do this in the android/build.gradle...maybe clean and rebuild?\nalso we are behind a version of android studio right now which funks up syncing sometimes if you want to upgrade feel free to! . looks like something android studio does automatically when auto-completing override methods, cory and i are gonna pair this morning and i'll explain our code style!. think we should cut out this comment line, to match the rest of this file's style. is there a reason why there's a ? appended?. in general, we put our nullability annotations right in front of the type which it is annotating, i.e. \njava\npublic @NonNull DiscoveryFragment \ni'll update our styleguide to include this, since it's something we discussed a while ago as a team but neglected to include in the styleguide!. same here with @NonNull. should be a newline between the imports and the interface. could you alphabetize these inputs here and in the Inputs interface? we like to alphabetize our inputs and outputs for better organization!. if you dont mind can you put a new line before line 98 with query? looks like a lil code style thing we missed before!. ah, you can put lines 131-132 above the inputs declarations, i.e. line 105. often we have helpers in a view model that we care about seeing more than the getters and setters for inputs and outputs, so locating them above the inputs and outputs makes them a little quicker to find. what is this new input for? it's not being used currently in the view model so we can remove for now to avoid any confusion\nif it does need to be used / implemented in this pull request, it is an input from our delegate so you can locate this with the other inputs i.e. line 118. we like to remove new lines between input and output functions, an example here of our ProfileViewModel. another code style that we're starting move forward with is prepending all member variables with this., so if you could do that within this view model that'd be great!. no need to include these // Inputs and // Outputs comments in this file. you can go ahead and put the override on the same line, for all of these input and output functions i.e.\njava\n@Override public void nextPage() { ... }. to keep these files shorter we like to do our block quote comment style as such:\n/** Call when next page is invoked. */\nyou can refer to ProfileViewModel for the comments style, and this isn't merged in yet but here are some docs i've whipped up today: https://github.com/kickstarter/native-docs/pull/3. but it wasn't in our ViewModel before? i'm confused as to why we needed to implement this method here as our SearchActivity also implements SearchAdapter.Delegate. lotta noise here from alphabetizing. our interface's annotation of this is also @NonNull so we should be consistent with this. \n. \ud83e\udd14 \ni'll add more tests. looks like we don't use ksString here, can remove . can alphabetize this output. something that we're moving away from is having dependency injections scattered in our code. each ViewHolder has the notion of an environment(), which holds ksString. so you can change this to private final KSString ksString; and initialize it in the constructor as so:\njava\nthis.ksString = environment().ksString();\nthat way we can also remove line 51, \njava\n((KSApplication) view.getContext().getApplicationContext()).component().inject(this);\nhere's an example in the wild: https://github.com/kickstarter/android-oss/blob/master/app/src/main/java/com/kickstarter/ui/viewholders/RewardViewHolder.java#L72. this method and the following one on line 88 should be marked private, and the parameters should be @NonNull. this.projectImageView. niiice. much better solution than making a new Parcelable!. can alphabetize. since these are still BehaviorSubject outputs, which is fine for this PR, we do need to .compose(bindToLifecycle()) before subscribing for each output . you can do a static import for takeWhen if you'd like. i'd say adding documentation, as well as renaming this to a more descriptive input name would be \ud83d\udcaf \ni.e. somethingClicked();. extra space before public. this., for the other output return values as well. we like to do noun-verb for our inputs, i.e. projectTapped\nalso since we're in android land we still use clicked, i.e. projectClicked (sry not sry @mbrandonw). same here, .compose(bindToLifecycle()). interesting, why do we have to use asObservable() here?. nice, breaking these out into intermediate variables is very helpful \ud83d\udc4d . alpha. extra newline. it's nice to group all the xmlns: tags up top with the rest. don't need orientation on this RelativeLayout. should we be using a card style on this text view?. can add a new line between these closing tags here, or consolidate them all together. we're not super finicky about xml style but it's nice to be consistent. should also have an accompanying android: layout_alignParentLeft for < 21 apis. same here, should have accompanying marginLeft and marginRight since you have start and end both defined here\n . again, card style used for a text view?. newline missing. should we be changing these here? we use the feed padding in quite a few places, i think we should hold off on changing the base feed_padding_ here and either make a new feed padding dimen, or stick with the old. is this style being used anywhere?. we do have a CaptionSecondary style that seems to fit the need here. let's create a new immutable instance of project in each test case rather than mutating this file global variable. take a peek here: https://github.com/kickstarter/android-oss/blob/master/app/src/test/java/com/kickstarter/viewmodels/MessagesViewModelTest.java#L38\nthe setup function should take in the environment as a param, and be sure to call this method in each test function below!. you can also assert on project.photo.med() since it holds this url string. can move @NonNull annotation to prefix method return type. same with this @NonNull. if you look around this file, you'll see examples of how we like to mark deprecated events with a\njava\n// Deprecated event\ncomment to make it easier for removal later, would be great if you could add those comments in!. while we're at adding new tracking methods, we may as well name it closer to the event name itself e.g. trackClearedSearchTerm() to make them easier to find. extra newline. extra newline. ehhh not super happy with this current user, think i may take a pass again tmrw a.m. to walk away from using currentUser.observable() like this. ah right right, since fetching the user is only contingent on the loginSuccess, not currentUser.observable() !. ha ok, feel free to leave as is for now. yep can do, i think i had that moment of \"hm thats a lot of combineLatest\" but the code for some outputs read nicely\nbut they'll still read nicely . can name this searchTermTextView to match the id. just curious as to what Pct stands for? it's not a very intuitive abbreviation for me. niiice. can mark this and the following method as private and the param as @NonNull. same here, private method, nonnull param. since this is now just two pieces of data you can consider just passing in a Pair. projectClicked(). same here, projectClicked. these input functions should be declared below, right before the output functions. these outputs can all be Observables. all these output functions can be marked as @NonNull Observable. ok, we should check this then to make sure we're not doing any extra work. also, .compose(bindToLifecycle()) should be the last operator chained on before .subscribe(). re: your comment in squash, this body within the map is a good candidate for being broken out into a helper method!. forgot to rename this subject as well, projectClicked. nonnull observables. newline. \ud83d\udc4d \ud83d\udc4d . do we need this annotation?. i know we have access to the environment within our test files, but it's good practice to pass in the environment in the method in case we need to modify it within each test in the future. missing @Test annotation, and should be marked public. feel free to leave as is then! \nFWIW we do use Pairs quite a bit in our view models, and while it's not always clear what .first and .second always are, we try to use descriptive variable names (e.g. projectAndUser) so that at the least projectAndUser.first can tell us that that value is a Project \n. Yes the syntax will be different, there are many examples in our view models of when we use observables, as well as in our docs:\nProfileViewModel\nhttps://github.com/kickstarter/native-docs/blob/master/inputs-outputs.md. this shouldn't change since it's describing the default value, i.e. not every VH onClick will be a project click. this class should be final, in general make sure our classes are final. final @NonNull . same here final @NonNull. can alphabetize this. @NonNull observable for all these outputs. newline. final, but also \ud83c\udf89 our first adapter test!!. so great to have tests for this kind of business logic. extra newline. sneak preview of the other sendMessage endpoints we'll be using. also agree that we should keep these static as it cuts down on the noise and it's the way we access the method throughout our codebase. is this still needed now that paperwork is removed?. makes sense! this Boolean is doing nothing and it should be a string\nthis Boolean value comes from an initial iteration where I had hoped we could get around using a PublishSubject as an output for toasts (since we don't want these errors to show again and again on rotation) but doing so required more logic around the output vs. just using a publish subject for now to get that behavior for free \u00af_(\u30c4)/\u00af. what version of gradle do we need to be at to use this?. do we have more context/research as to why we should be doing this?. using a Pair helped us clean up a lot of boilerplate code. in general, using a Data class for view models is nice, but typically for when there are 3+ pieces of data is when it really gives us a win. small thing but would be nice to put this lil @Bind back up with its @Bind friends :) . can remove comment. sweet, love that these three project states have their own helpers to clarify what is being set. just some naming convention stuff but usually if we're outputting a String for a TextView we'll name the output something like backersCountTextViewText to be _extra explicit with what the text is for :neckbeard: \nthere are some others below that can also be updated with this naming convention if ya don't mind  . Really :huge_fan: of this change we're introducing in this PR: in general for our IsHidden outputs we've been using IsHidden --- it's more accurate however to be differentiating between IsGone and IsInvisible since in android, our ViewUtils have two different corresponding methods\n(context for iOS-ers: View.GONE will remove a view and its height, width, etc whereas View.INVISIBLE will hide a view but preserve its layout presence)\ncc @kickstarter/native-squad \n. since this projectOutput is only used now to setDeadlineCountdownText we should name it to something more descriptive, like projectForDeadlineCountdownDetail or something? whatever you think makes sense. i think for style we like to put the conditionals in the front of new lines i.e.\njava\n!p.state().equals(Project.STATE_CANCELED)\n&& !p.state().equals(Project.STATE_FAILED)\n&& !p.state().equals(Project.STATE_SUSPENDED));\n. can make this private. don't need the @NonNull annotation for a primitive type. i see it's a vestige of an older commit but does that make sense?. can use @BindString to bind this up top. can move all these private final variables to top of class for some organization!. final class. annotations. can you please audit these output functions for annotation order? as a reminder we like to do public @NonNull so that the annotation is right by the type it's annotating!. @NonNull for all these output funcs. is this a duplicate xmlns:android=\"http://schemas.android.com/apk/res/android\" ?. should have a matching layout_alignParentLeft for older devices. should have matching layout_toRightOf. we actually do have a horizontal_line_1dp_view you can reuse here with a <layout/> tag. newline. again we do like to have our xmlns: tags up top in our layout files. final @NonNull. let's be consistent with our use of this. here, and throughout this file!. check your formatting here. same funky formatting here. and here, and one more down on line 312. watch for extra newlines. reading through the docs linked in the comments of the gradle.properties:\n\nIt may not be immediately apparent, but using key Gradle features like the allprojects and subprojects keywords automatically cause your projects to be coupled. This is because these keywords are used in a build.gradle file, which defines a project. Often this is a \u201croot project\u201d that does nothing more than define common configuration, but as far as Gradle is concerned this root project is still a fully-fledged project, and by using allprojects that project is effectively coupled to all other projects. Coupling of the root project to subprojects does not impact 'configuration on demand', but using the allprojects and subprojects in any subproject's build.gradle file will have an impact.\n\nsince we do use allprojects and subprojects in our android's build.gradle we cannot enable this flag\nhttps://docs.gradle.org/current/userguide/multi_project_builds.html#sec:decoupled_projects. seems like we can use getHeadGitCommit().abbreviatedId rather than this manual parsing now right?. seems like we can use getHeadGitCommit().date here right? . we can comment this line back out now with that knowledge!. i think we should just revert it to being commented out, as it is by default, 1. to reduce PR change noise and 2. in case ever in the future we do need to revisit this, we'll know what was here\nwe'll always have this PR and our discussions here as reference !. just want to clarify too that it's style for consistency throughout our code base, not just a personal preference of mine :) . strings in this file shouldn't be hard coded--let's chat about this, think we should review strings again. ah right, i misread a comment you had in a previous iteration (here) and thought it was because of a gradle versioning thing that we didn't have access to the method\ni think it's fine to keep this, as well as line 207, as is for now. if you have a windows machine to test and improve this on, that'd be great, but if not sadly we'll have to punt the support for windows for right now to move on with at least this build improvement . that's a Swift-ism! don't think it's possible in Java. we can remove line 19 here since it's something you added that we didn't end up using. let's leave these here for now -- it's nice to just be able to look into one build.gradle file to see everything that's going on. sweeeeeeeet. can just do a quick audit for this. in this file :neckbeard: . \ud83d\udc4d this is a great rename. oooo you can actually delete this file now since we don't use this rounded background anywhere anymore!. \ud83d\udc79 . lil xtra newline, and just watch out for some floating > s in this file. \ud83d\ude02 . sweeeeet. we can probably also delete this test and Output\u2122 since we no longer hide the progress bar!. this test file is \ud83d\udcaf . just missing a .compose(bindToLifecycle()). think lint is just yelling at this hardcoded text, should use an @string/ resource here to appease and be good i18n-ers pls. \n. ooo looks like we bumped down the font size, so the metadata text views in this file can be CaptionPrimaryMedium. yesss that makes a lot more sense, and will pull more logic out of the view. will refactor thanks!. used down in line 148 \ud83d\ude0f . For posterity: we needed this line to redraw the recyclerview properly so that a newly sent message would render correctly, i.e. alignParentEnd of the view so it would show on the right. this is a unique test file in which we pull away a method to create an environment with an api client that has a backing and a CurrentUser which is the backing.backer() user...decided to condense and keep this logic at the bottom of the file . Transformers.observeForUI is an transformer we've slowly been moving towards for rendering our UI components more efficiently..see https://github.com/kickstarter/android-oss/blob/master/app/src/main/java/com/kickstarter/libs/rx/transformers/Transformers.java#L184 for more documentation :neckbeard: . hello kotlin :shipit: . this can be replaced with a method reference, as can the thread -> new Either.Right<>(thread) below, but I find this syntax more understandable than\njava\n(Func1<Backing, Either.Left<Backing, MessageThread>>) Either.Left::new\nif that's okay. this logic grabs the project's creator if the VM was not initialized with a MessageThread...I'm not sure if this logic is a little too buried let me know if there are ways to improve!. FYI this getSomething() syntax is because MessagesData is a kotlin data class \ud83c\udf88 . took the padding off the parent so the View pledge button's background ripple goes all the way to the edge . I had to make two IconButtons, one for the X close button and one for back arrow button and toggle their visibilities via VM / outputs since it's very hairy to apply a style to a view programmatically :( . extra /n . can audit use of this. in this file. since this is an Activity, which inherently is a context, you can replace this.getApplicationContext() with just this!. lil extra newline, also would be nice to add some /** Coments */ to these Inputs and Outputs!. you can use static imports for values() here, same for all Transformers. functions\n. \ud83d\udc40 . lil newline. can consolidate this with line above, i.e.\njava\n@Override public @NonNull Observable<...> fetchProjects(...) {\nsame with some other Overriden funcs below!. can consolidate L 63-65 to uno line por favor. \ud83d\ude18 \ud83d\udc4c  nice tests!!. \ud83d\udc4d agreed!. ahh, but for places where we want to keep point free notation, we can't also use a static import. ah yes you have identified a weirdness/subtlety with our outputs that we're still trying to figure out-- \nour isFromMessagesActivity is a boolean that comes from our intent(), and we need the output to be a BehaviorSubject because for some reason an Observable doesn't emit immediately, due to our base intent() being a PublishSubject\ntl;dr whenever you have an output that relies on data coming from the intent() it needs to be a BehaviorSubject. technically we don't need this class of static key values since these keys are only used once...but it is nice to consolidate them in one place so we know what values we're storing in SharedPreferences at a glance!. this is the first place in which we've used onResume() as a lifecycle input!! \nthe reasoning was that I wanted a signal similar to iOS's viewDidAppear to refresh the current user appropriately...the downside is that we'll be refreshing the user on rotation, but I figured that if we tie many of our api calls to lifecycle events such as viewWillAppear and viewDidAppear in iOS this may be fine?\nother option is to store a BooleanPreference on the environment which i'm chill with but wanted to try this approach and see how y'all feel. this is a very good question, i was looking at the way we do sharedPreferences in our ProjectViewModel to store ref tag cookies and figured it'd be fine to not make a new preference in the ApplicationModule, but seems like we do have a provideCookieManager and thus we should add this to the ApplicationModule to make sure it's provided correctly\ngood catch!!! \ud83d\udc26 . actually, scratch that for now. seems like we don't need to set this in the AppModule for message thread's unread messages, since it's a preference specific to each message thread id rather than a global preference. \nbut this is still a valuable solution for setting a hasUnreadMessages boolean preference for the user that may avoid having to refresh the user onResume each  time so will explore that. we have a currentUser.loggedInUser() Observable (in our CurrentUserType) that has the null filter built in which you can use so we can consolidate this logic to something like:\njava\ncurrentUser.loggedInUser()\n  .map(u -> IntegerUtils.isNonZero(u.createdProjectsCount()));\nThe IntegerUtils.isNonZero() func is also useful here because createdProjectsCount is a @Nullable field on the User, and this ensures we won't get a NPE!. can drop the ) to a newline here. i know the whole checkstyle thing is pending but this.creatorDashboardButtonIsGone \ud83d\ude01 . to be even a lil more explicit i'd name this something like creatorViewFeatureFlagIsEnabled, that way it'd take even less time for someone not familiar with this logic to know where the boolean value is coming from. coolest thing about this chunk of code? i just refered to our swift grouping to do the same thing!!. we usually dont override onBindViewHolder in our KSViewHolders, but i'm doing this here to let the VH know if it's in the last position or not to display the Delivered text view . all of the changes, except setting the deliveryStatusTextView output, are related to the message view refactoring that correctly shows/hides recipient/sender message views rather than changing the alignment with an output. L89-94 didn't play well with the recycler view :( . yep that would be more concise!. yesssss. \n. let's name this ProjectStatsEnvelope to align more with swift if you don't mind, also because we use the Envelope nomenclature to represent the data returned from the api containing models we'll use (e.g. ProjectStatsEnvelope.FundingStats) :neckbeard: . should projectId maybe be a long instead?. can use .compose(bindToLifecycle()) here. hahaha coerce \ud83d\ude1f . should there be the interface Inputs { } and interface Outputs { } here?. ahh yes we're trying to move away from creating separate files for Inputs and Outputs which is why our ViewModels are interfaces, you can move these into the same file as CreatorDashboardHeaderHolderViewModel. since these outputs aren't dependent on a value coming through from the intent(), these outputs can actually all be Observables. can chat IRL about this since it's a confusing lil gotcha about our codebase. these params can be marked @NonNull. since we're using these values as a pair anyways in the VM, we can just go ahead and make the projectAndStats input a Pair<Project, ProjectStats> type so we're not destructuring / restructuring the pair!. we have a PairUtils class so we can go point free with this, e.g. .map(PairUtils::first). sweeet. for our api requests, we do have to handle the error state and call .share() to prevent too many requests from happening. we can handle the error by calling .materialize() after the request is made, which then gives us an Observable<Notification<ProjectStats>> that then holds either values() or error()\nheres an example of materialize and share in action and here's how we can extract the values and the errors. same with these outputs, can be moved to the ViewModel file directly. lol. in generale we're moving away from Left and Right to use Start and End instead since L and R are now deprecated. NEWLIEN. oooooo why an unmodifiableList here? . in our setUpEnvironment is where we hook up our TestSubscribers to our view model outputs, i.e.\njava\nthis.vm.outputs.backButtonIsGone().subscribe(this.backButtonIsGone);. rather than setting the vm in each test, let's call setUpEnvironment(environment()) this instantiates the VM and also our test subscribers . general syntax in tests is to declare all our variables at the top. makes it a lil more straightforward to read through a test script's assertions. lil newline. since we're just making a new pair here, we can change the projectAndStats input type above on line 24 to just be a Pair<Project, Stats>, and input it directly from the ViewHolder since we have the \ud83c\udf50 there. we should add a android:paddingEnd=\"@dimen/grid_new_2\" here too for long project names, so there's even spacing on both ends. lil newline. for posterity startOverWith is a signal that we typically use for our paginators that indicate when we should fetch new data. this is correct; we need to override onDestroy with setting the adapter to null to properly deallocate the recyclerview, so this should be done in any view that contains a recycler view. also this. ;). missing a super.destroy(); here. newline & alphabetize . is floatAmountPledgedForReward being used by the view? if not, we can just make this an intermediate observable within the view model, i.e.\njava\nfinal Observable<Float> floatAmountPledgedForReward = .... ahh, I see the float amount is used just here. since we already configure this VM with the projectAndRewardStats, we can consolidate the logic here using that data input, something like:\njava\nprojectAndRewardStats\n  .map(pr -> Pair.create(pr.first, Integer.floatValue(pr.second.pledged())));. noice. can put a newline between our Input and Output getters, nice lil visual break . can alphabetize these outputs. here too we can just make reward stats a local variable to the VM. yeah looks good!. could add some spacing around these text views to let the xml breathe \ud83c\udf2c . you can use 3dp here to stay consistent, we also have grid_new_1_half which is 3dp. bless you!!! \ud83d\udcaf coverage!!! never compromise!!!. can just use ProjectFactory.project() here since we're not asserting on or using project elsewhere in the test. same here with project. ah, the null check here is for the concatDistinct; mm.first is the initialMessages list so it's checking for a null message list to see if we should return just the new list, or concat the two (concatDistinct expects two non null lists)\nif that's not clear i can update my comment above or make mm better!. FYI this line is just the same as what we use in our ToolbarUtils . super.destroy();. this can be moved into the ViewModel constructor now too!. this can be alphabetized too dont hate me. notifyDataSetChanged() here. rather than removing this enum and using hard-coded strings, you can use a kotlin enum class! checkout our koala context for some context . leaving the checkMethods part of this as false for now, we can flip to true and audit again in the future but the variables already took enough busy time \ud83d\ude2c . it's an edge case because there's a this.config and a config() refresh method that it gets confused by :/. nope, we don't need to bindToLifecycle when it's not a subscription to a subject i.e. when the output is an observable !. +1 to renaming it for clarity, something like DescendingIntComparator. newline. need indents for L44-45, prob got lost in the refactor. for posterity we will return to cleaning this jazz up via making our own Sort.kt operator \ud83d\ude0f . nice!. you are quite right, this definitely is not an ideal way to handle parsing project params. fwiw it's a todo on our UpdateViewModel as well, to build a Navigation helper for safer extraction that i'd like to make eventually. for now it's ok because our request handler pretty much guarantees that a project request is coming through but seeing this .get(2) is \ud83d\ude28 . returning false here tells the web view client that we haven't handled the survey uri request yet, which allows for re-handling the request e.g. reloading the url on an unsuccessful form submission...but yeah it is kinda confusing and tbh confuses me still a lil we should talk irl and debate intelligently about it on our vision quest. noise from alphabetizing. @NonNull. @NonNull here too, and maybe a more descriptive name such as createDashboardProjectFragment or something would be nice!. oooooo cool did this fix the rendering behind issue?!. @NonNull arg. can one-line this (L27-28). @NonNull. you can replace all uses of this.projectAndStats.map(PairUtils::first) with this.currentProject to simplify things !. ugh yeah it's really annoying that we can't just chain .putParcelable() calls on bundle. this line you can do in a setUpEnvironment() method! as well as L45. this you can replace with this.vm = new CreatorDashboardFragmentViewModel.ViewModel(environment);\nalso--seems like when you do make that change, it fixes the errors you were having with running the test that led you to using the fragManager here--will wheel over to chat IRL!. sounds good to me!. chill!!. ooo sry you can delete this todo now, since we only have one LinearLayoutManager instance now in this file. sorry but I would even singularlize this (createProjectDashboardFragment) since we're only making one fragment for the selected project!!. wahooo!. mayhaps projectSwitcherProjectClicked would be a lil more specific (like your output name!). can do a static import of takeWhen. since currentProject is just a local variable used in the ViewModel constructor u can remove this and replace L76 with:\njava\nfinal Observable<Project> currentProject = projects.map(ListUtils::first);\n. maybe do a builder with these and just change something like the id() to id(1) and id(2) or something to make the validity of this test stronger (since projectOne and projectTwo) are technically identical \ud83d\udc6f . ahhhh gotcha, i missed that the view model input this.viewModel.refreshProject(project); is invoked in the projectSwitcherProjectClickOutput call. seems like we should have just one projectAndStats output that handles the switching logic in the view model, we can pair on it! . returning false here lets the request handler know to continue handling project urls. previously, returning true meant we'd only handle project requests once. it's nice that we can remove this logic here, i missed at first that startProjectActivity, with project uri request handlers, is baked into our [webview client]!!. ahhh yeah you're right! forgot about that nice lil helper, fine with either way, ty ty. this was a weird temp method i made rather than just passing in a null project so we dont need it anymore / never really needed it oh well. these all became BehaviorSubjects cause our unreadMessagesCount now also relies on a project from the intent(). most noise here is from modernizing, few tests added tho!. oooh this is actually a good call / edge case I don't think I tested, thanks for catching will audit. ah--this creator name text view text field is displayed under the project name up top, e.g.\n\nso since a message thread will always have a project as a context, the creator name displayed there will always be the creator's name regardless of participants. letz alphabetize this, and the changed functions below!. \u2764\ufe0f . chatted irl, and for posterity: in general an output should be doing the same thing in the ViewModel and the Activity so the javadoc would be representative of both\nin this situation since we use both formIsValid and formSubmitting to set the enabled / disabled state of the signup button, with funny lil helper methods(my b :) ), we should ideally refactor to merge these outputs into one, e.g.\njava\nObservable<Boolean> signupButtonIsEnabled();\nand change the logic a bit in the VM, but this is a non-blocking change for purposes of this PR\n. we should never reach this default, but in case we ever do, we should probably return an actual ReferrerType (maybe ReferrerType.INTERNAL? or an UNKNOWN case?) so that we don't crash here!. let's rename this class and file to to CreatorDashboardReferrerBreakdownViewHolder (BreakDown -> Breakdown) to keep consistency w view model :neckbeard: . can alphabetize. any reason why this view separate from the other view bindings?. why is this one * 100d? static vars up top to replace these \u2728 magic numbers \ud83c\udfa9 would be helpful . missing some @NonNulls here. missing some more @NonNull / nullable annotations in params in this file. ::::::: siq pointfree :::::. rather than doing this .combineLatest within a compose, it'd be more readable to make this avg value an intermediate Observable<Float> variable, then the whole output would read as:\njava\nthis.projectAndAveragePledge = Observable.combineLatest(currentProject, averagePledge, Pair::create);. can use takeWhen as a static import. rather than having a .map(BooleanUtils::negate); here and L163, 167, it's probably just more straightforward to change the logic in the amount lambda to be something like amount <= 0f . lil newline, but siqqqqq that these are all Observable outputs!!. alpha. can also alpha here. not part of this pr but @NonNull. lil newline . alpha. it doesn't technically matter because the customReferrerColor will always be the same, but we could either add fake custom stats to this envelope to make it clearer that we're testing on custom referrers, OR we could even refactor the viewmodel to only emit these colors when we need them (i.e. takeWhen(customReferrerStats) rather than takeWhen(projectStatsEnvelope)). if we're just asserting the percentage value here  (perecentText) maybe we could just assert \"55%\" since we don't have NumberUtils tests. should this be testing the pledged amount rather than percent text again?. great test!!. we like to put our annotations right next to what it's annotating, e.g. final @Nullable Bundle savedInstanceState. class can be final. @NonNull, L65 & 74 as well. alternatively, we could output the Uri rather than Url since we only need the Uri to start the activity. maybe we can add a lil comment to explain why we need to remove the first targetIntent ? . same with modifier ordering here . pretty sure that this line (59) is redundant since we're using .ofType(Uri.class) -- that should parse out whether the data is null and is of type Uri . can do a static import of ignoreValues(). lil extra newline \ud83d\udc40 . could also add a lil comment above this variable explaining why we are using a fakeUri to catch deep-link-able links . niceee. can nix this new line and add one btwn L109-110. these Observable functions can all be annotated with a @NonNull return type. we tend to name these Koala event functions exactly the event they're tracking; since UserActivity is kind of vague, maybe we can be Xtra and name this trackContinueUserActivityAndOpenedDeepLink or something of the sorts! . siqqqqq tests!. ah yes, the move here would actually to ignore the contentDescription since the circle imageview is just a visual indicator that doesn't give the user any new / meaningful information that the textviews provide\nxml\ntools:ignore=\"ContentDescription\"\nshould appease the linter!. can alphabetize here. can annotate params with @NonNull , as well as L45. class can be final. wahoo ty for the javadox. the things that remain in ApplicationGraph will probably be here to stay so long as we use Dagger (until the end of time) since they are base classes which cannot have an environment built in . the inherent overriden method has a @Nullable intent so made this change as per lint warning. public final. can also alphabetize these outputs :neckbeard: . i think that since we only use it here and in a test factory we can leave this for now \ud83d\ude01 . we like to keep this javadoc format, but on a single line. if you could run make bootstrap to grab our Kickstarter code style (or maybe you already have it! (Pref > Code Style > Scheme: set to Kickstarter IDE), then these tabs should all convert to our 2-space indentation style. lets put the annotation on the same line as the method. can remove these newlines between all the input setters (but leave a newline between the input and output functions). should format as \njava\n@Override public @NonNull Observable<CommentsData> commentsData() {\nsince these are all essentially boilerplate setter functions we can keep them concise and at the bottom of the file to keep the files shorter!. same with the tab spacing here. aha, so we're also moving away from having Errors as a separate interface, you can move this Observable into Outputs since this error is technically just another output for the UI!. @NonNull Context. this logic makes sense, but is a little hard to read through. maybe it'd be helpful to leave a lil comment here with an example of what friendName would be set here. can rename these outputs from IsHidden to IsGone to more properly reflect what's happening in the view!. nice nice. \ud83c\udf2d . nice use of a custom view class!!!!!!! only comment here are to annotate the method params @NonNull. aha this was showing the awkward selected state? thanks!. sweeeeeeeeet \ud83c\udf6d . thanks for cleaning up this unneeded AppBarLayout!. this is what i meant re: not being sure how to handle landscape and a11y specific outputs where it's kinda inevitable to just pass along the same project output to.... newline would be nice here!. same feedback here, let's consolidate Errors to Outputs. yeah agreed that's a little cleaner than invoking a chain of helpers. same here!\n.switchMap(this::submitEmail). one cool FP trick you can do here is to make this function call point free, e.g.\n.map(StringUtils::isEmail). since the deadline comes from the _mini and not the _compact, serializer, it's a nullable field. also for projects that are in draft mode (fwiw i think we exclude projects in draft or \"submitted\" state from the api, but this also makes deadline technically nullable) :/. oooo i think that line is now pointed at a diff place cause #181 merged, but agreed that there is a bunch of repeated project logic here as in the project card :/. can mark the function return value @NonNull here and for the following few functions, looks like we forgot to do that before. can alpha this. can flip the annotations here, final @NonNull. we've started adding these event strings to KoalaEvent.java to avoid re-typing / pasting the same string over and over again if you'd like to add these now!. sweet!! forgot to mention that you can now also use these static var events in Koala.java to for the actual tracking event too :neckbeard: . would be nice to reformat these javadoc comments to /** content */ to make the VM a lil more readable. geologically speaking, is 100 years into the future really that distant? :trollface: . can alpha and add a lil javadoc :). ",
    "cketti": "This is only some internal functionality, so I guess it doesn't matter. However, for user-facing features please don't force a chooser dialog when it is likely the user will always perform the action with the same app. I'd say that's the case for sending mail.\nIf a user wants to be prompted to select an email app every time, they can simply not select a default app and the OS will take care of the chooser dialog.\nACTION_SEND is supported by a ton of apps, so the chooser will most likely contain more than email apps. Using a type of message/rfc822 is semantically wrong and does nothing to limit the listed apps to email clients. Email clients show up because they declare support for */*, but so do many other apps.\nMy suggestion is to use ACTION_SENDTO with a mailto: URI, or, if you want to continue using ACTION_SEND, to use a MIME type of */* (which is still wrong, because EXTRA_TEXT is used, not EXTRA_STREAM; but less wrong than message/rfc822).. ",
    "Plastix": "This gradle plugin https://github.com/zsoltk/paperwork works well for generating git sha without breaking incremental compilation.. ",
    "rahultailor": "I am also having same issue.. ",
    "wuzhenda": "It seems kickstarter has replace some trully used java file with false java file. but the Makefile was not update .. ",
    "rome753": "on my Ubuntu 16, edit the ./script/bootstrap file with a text editor,\nchange \"function say {...\" to \"say() {...\",\nand also \"function loudspeaker {...\" to \"loudspeaker() {...\",\nthen apt install ruby and curl,\nthen ok.. on my Ubuntu 16, edit the ./script/bootstrap file with a text editor,\nchange \"function say {...\" to \"say() {...\",\nand also \"function loudspeaker {...\" to \"loudspeaker() {...\",\nthen apt install ruby and curl,\nthen ok.. #21 . ",
    "AuspeXeu": "I am currently using Bash on Ubuntu on Windows for these purposes\nhttps://msdn.microsoft.com/en-gb/commandline/wsl/about. ",
    "ren545457803": "@AuspeXeu Thanks. ",
    "ashishbhandari": "good to install cygwin on windows and execute that command.. :) . ",
    "Qamar4P": "This work for me. Run\nD:\\CodeLab\\Android-oss>\"C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\bin\\nmake\" bootstrap\nDownload from here. Hey guys thanks to @LetItRock\n1. Did copy and rename files manually refered in Makefile eg. \"mkdir(Create directory) -p app/src/debug/res/values and  cp (Copy) app/src/main/java/com/kickstarter/libs/utils/Secrets.java.example app/src/main/java/com/kickstarter/libs/utils/Secrets.java\n2. Run Window Bash (in my case Git Bash) as administrator and run ./script/bootstrap\nThen build project works in Window.. Similar issue after running nmake bootstrap and entering username and password\nremote: Repository not found.\nfatal: repository 'https://github.com/kickstarter/native-secrets/' not found\n        if [ ! -d vendor/native-secrets ];  then  mkdir -p app/src/debug/res/val\nues  && cp app/src/main/java/com/kickstarter/libs/utils/Secrets.java.example app\n/src/main/java/com/kickstarter/libs/utils/Secrets.java  && cp config/koala_endpo\nint.xml.example app/src/debug/res/values/koala_endpoint.xml  && cp config/koala_\nendpoint.xml.example app/src/main/res/values/koala_endpoint.xml  && cp -rf confi\ng/WebViewJavascriptInterface.java app/src/main/java/com/kickstarter/libs/WebView\nJavascriptInterface.java  && cp -rf config/KSWebViewClient.java app/src/main/jav\na/com/kickstarter/services/KSWebViewClient.java  || true;  fi\n! was unexpected at this time.\nNMAKE : fatal error U1077: 'if' : return code '0x1'\nStop.\nUsing 32bit nmake from VC 14.0. @LetItRock thanks I think this issue should close now.\n1. Did copy and rename files manually refered in Makefile eg. \"mkdir(Create directory) -p app/src/debug/res/values and  cp (Copy) app/src/main/java/com/kickstarter/libs/utils/Secrets.java.example app/src/main/java/com/kickstarter/libs/utils/Secrets.java\n2. Open bash with admin permission and run ./script/bootstrap\nThen build your project works.. ",
    "mbrandonw": "Thanks for the tips for getting things to work in windows! Gonna close this for now, but will use this as a reference for when the issue comes up again!. @Coder-DanielHan yeah, cloning is necessary since we use submodules for some dependencies. lemme know if that works.... master should be fine. make sure to pull the newest.. weird, not sure what is up with material icons. maybe github was having a bad day? \ngonna close this for now, but let us know if you have more questions!. Hi! Did you run make bootstrap before building?. We should do a better job of suppressing that error message, but it shouldn't cause you any problems. The project should build without access to that private repo. Can you give it a shot?. thannnnnnnnkssssss!. Our bootstrap is pretty tightly coupled to the way we work as a team, which means it mostly only supports macOS and requires some things to be installed first like ruby. We don't have any plans to make a more universal bootstrap, so it might require you to perform some of the steps manually in a console.\nSorry about that!\nGonna close for now, but let us know you have more questions.... > but accessing this via ProjectViewModel.ViewModel is pretty awkward.\ni think the only time we do that is with the @ RequiresActivityViewModel, so it's not something you construct very often. that was our main justification.. \n. > This build is still failing during :app:lintExternalPre21Release, but the lint file isn't even created. I think it's crashing during lint!\n@coryroy according to the lint output it's pointing at this line:\njava\npages.stream().forEach(page -> fragmentMap.get(page).clearPage());\nI didn't catch this initially, but this isn't valid java 6 code because it's using java 8 features. we need to change this to the old school way.. lol. 1 lil thing indeed. sorry just saw this... i would think we want this properly injected tho right? why did injection fail?. should everything be marked as public?. are the parens optional? should it not be intOrString.right()?. totes, much better. so siiiiick!\nfor posterity: this @JvmOverloads makes kotlin export two functions, one with the default and one without.. can we track the project properties here?. i think param is more accurate cause it could be /discovery/categories/art. muuuuch better name. muuuuuch better name. looooovin these new modern vm's. so this is the flag that allows redirects?\ndef makes you miss swift's named arguments when reading this code....... nice nice, is this our style going forward? suffix to describe the UI component?. point freeeee allllll daaaaay. i suppose this is ok for now, but i think in general we only want to trigger this from a user event. in ios we often base this off of viewDidLoad or viewDidAppear. the equivalent in android might be when the intent is configured or something like that. something for us to discuss soon!. not a single behavior subject in sight!. looks good to me! . only throwing this out as a fun thing to think about soon (but not right now), recently i came across https://immutables.github.io which seems to take care of the builder boilerplate for us but not sure about the parcelable stuff.. \ud83e\udd14 should this be imported?. feel we should rename this to align with how we think about things now.\nno need to do now... just saying for future. a small refactor to this.unreadCountTextViewText and this.unreadCountTextViewHidden might first compute a lil helper observable that could be used more expressively:\n```java\nfinal Observable unreadCount = this.currentuser.loggedInUser\n  .map(User::unreadMessagesCount)\n  .compose(Transformers.coalesce(0))\nthis.unreadCountTextViewText = unreadCount.map(NumberUtils::format)\nthis.unreadCountTextViewHidden = unreadCount.map(c -> c == 0)\n```\nwhatdya think?. the other option is to use 8pt grid for inbox until we switch everything to 6pt. do you think that's any better than _new_ grids? \ni defer to yer judgement!. with stuff like this skip(1) im more inclined to not use rx android and doing it the old school way. can you remind me how we can get text view changes in android without using rx?. \ud83c\udfc0er. the parens feels weird not being indented with the .. is that where Android Studio wants to put it?. that's a fun output!. heyooo, don't think we should be refreshing the user from a view holder! this would execute multiple times based on how many messages are visible at once.\nwhatcha tryna do with this jazz?. i think this output should be something like participantAvatarImageHidden, since the other person in the convo won't necessarily be the creator (like in the future when we have creator tools).\nsame for the other creator output.... think we need to rename all of the creator specific stuff to just \"participant\" in order to leave room for future feature development. looks like we could drop this filter if yer doing the other filter down below. android studio told me to do this. did i do something bad?. ill revert this for now so that i can merge. we keep all of the modifiers in the same line of the function.\ndid something in our check style say to do this?. sooooooooo much better!. looks like check style wants this to be final. we like to final all the things. can remove this now that we moved to the view model. can ya alphabetize this?. extra lil  newline here. lol nvm! was confused. what's this jazz?. dont wanna put logic here. refactor this. can do .subscribe(this.projectNameTextView::setText);. so I think we want the default to be true, i.e. if we deleted the feature flag from the server we would interpret that as the feature being on for everyone, not off.\ndoes that make sense?. what about the case when \"android_messages\": true and \"android_messages\" is absent? \ud83e\udd14 . we need to attach test subscribers immediately and we shouldn't be hitting vm inputs like that. alpha. comment. looks like we could just do this.loginSuccess.flatMap(...) and omit the second currentUser.asObservable yah?. since currentUserIsCreator is only used in this observable could we reduce the number of combineLatests used and do all of that work in this one observable?\nI think we are safe cause you gate this observables by a takeWhen later, but just good practice to not overuse combineLatest.. oh good catch. I did that. didn't know you could merge subjects, thought you had to get into the observable under the hood.. I think the parentheses got a little messed up here. if you expand it a bit you will see it's written as:\nswift\nreturn isAllProjects() \n  && page() != null \n  && page() == 1 \n  && (\n    sort() == null \n      && (term() == null || term().isEmpty()) \n      || sort() == Sort.HOME\n);\nsince || has a lower precedence than && we will get true for this expression if sort() == Sort.HOME and will completely discard the sort() == null and term() portion of the condition.\nwhat you really want is more like:\njava\nreturn isAllProjects()\n  && page() != null \n  && page() == 1 \n  && (sort() == null || sort() == Sort.HOME)\n  && (term() == null || term().isEmpty());. body builder build body \ud83d\udcaa . seems we could just call this setMessageEditText and not even communicate that we are only emitting empty strings. the view doesn't need to know that, it just needs to follow orders!. what's the boolean for?\nseems like instead this should be a String that emits the error message you plucked from the error envelope via first(env.errorMessages()) and default to something if that doesn't exist.. \ud83d\udc4d . \ud83d\udc40 . :mama-mia:. I'm down to keep the static imports import static org.junit.Assert.*; so that we can just do assertEquals. whatdya think?. this output has me a bit \ud83e\udd14. tracing down how's it used I see it's due to the fact that our deadline helpers require a full project instead of a date https://github.com/kickstarter/android-oss/blob/888a3746835835016fc1a1bb32d8e2a90b8bffce/app/src/main/java/com/kickstarter/libs/utils/ProjectUtils.java#L126-L129. that's a bit \ud83e\udd14 \ud83e\udd14.\nif yer up for it, I say we disentangle that so that those helpers just take a date, and then this output can be more succinctly described as projectDeadline or something.. while looking through that deadline stuff I came across this ProjectUtils::isCompleted helper which does precisely this! https://github.com/kickstarter/android-oss/blob/888a3746835835016fc1a1bb32d8e2a90b8bffce/app/src/main/java/com/kickstarter/libs/utils/ProjectUtils.java#L83-L89\nif we statically import we could even do this.project.map(isCompleted) :D . how does backingViewGroup compare to metadataViewGroup? just tryna understand what is being shown/hidden...\nedit: ohhhh I think I understand! this is the backing view group inside the metadata group? perhaps we could rename some stuff to make that clearer?\nwith that clarity, I now wonder if this output is correct. should it not be gone just when not backing? I'll look at the tests to see how it all comes out in the end.... looks like this observable is precisely this.backingViewGroupIsGone.map(isFalse). any benefits from thinking of it as such?. after having seen this backing || starred || potd || featured logic 4 times I'm starting to think there's a better way! what if we created a lil enum to express the four types of metadata there could be, and then we can localize the cascading logic into a single place, and derive the outputs from that?\nhilariously, that is precisely how @luoser did it 9 months ago in swift! https://github.com/kickstarter/ios-oss/blob/master/Library/ViewModels/DiscoveryPostcardViewModel.swift. im a lil worried with these separate canceled/failed/successful/suspended/etc outputs. the main worry is that we are filtering on them, which means that as view holders are reused there is a chance that we don't reset their state cause the project was filtered out, and that could lead to a card rendering with two or more states :/\nif you look at the screenshots for the 4 states we are concerned with:\ncanceled \u2022 suspended \u2022 failed \u2022 successful\nyou'll see that it mostly boils down to just a label for the state and a label for the date. perhaps we can merge all of that into just one observable for each label?. I believe this output is only used for that lil featured tag so perhaps we should mentioned that in the name, e.g. rootCategoryNameForFeatured?. instead of filter should we map and then in the view use the boolean in the view to determine if we add the padding or remove the padding?\nsame for setDefaultTopPadding. LOOOL. perf! even better!. I think this is the reason you are seeing extra padding at the top. you have inserted a blank row for the header view, and even when survey count is zero it will not get cleared because of the if gating.\nthere are a few ways you could fix it, but perhaps write some tests first for the expectations and then we can discuss refactorings to fix it.. instead of null I think we should require that data be a positive integer. we would never configure this view holder with 0 or null, cause we would just omit the view in that case.. so I suggested we create this input and hit it from the activity so that we could better test lifecycle methods, much like we do in ios.\nthis works, but one simplification we could do is to leverage the fact that all of our VM's have a base class, and they all have the lifecycle methods that activities go through, and so we could just make these lifecycle observables available for free! wanna try creating a onResume observable (let's call it onResume cause it won't conflict with the method onResume()) in the base class that is automatically pinged on resume, and then leverage that here? should mean this input goes away and the activity code goes away, but we get the same effect.. let's just attach this to the observable above and get rid of the local. only reason to break into a local is when you need to use it elsewhere.. can we still write tests for this adapter since there's quite a bit of logic in it?. I don't think we need to mess with the visibility of the text view. we will simply not render this view holder if the survey count is 0. sorry, this was my suggestion, but after seeing it IRL now I think we should revert and go back to the explicit resume input you had before. I really don't wanna push more functionality into this VM base class. there's a lot of benefit to making our VM's very explicit in what they require, so it's nice to see this VM say it has functionality built on top of the activity resuming. \ndo you mind reverting this commit? you can just do a git revert to do it cleanly. \nalso you can make the resume observable just a simple <Void> observable since we no longer need the activity lifecycle event.. any reason not to use Collections.emptyList()?. we need an else to this if so that if surveys later load 0 results we will clear the area.\na good test case to have too.. let's not import the delegate like this. from a code reviewer perspective it's nice to see where that delegate interface is coming from.. on the other hand, these make sense to just be Inputs and Outputs because they are defined right above and it works the exact same way in every view model.. same here.... looks like we are missing a .compose(this.bindToLifecycle()) on this.. can drop these fully qualified names . here too. a few things:\n\n\nall private helper functions should be static because they shouldn't rely on anything in the view model. they should just be lil pure functions that take all their input and spit out output.\n\n\nit is dangerous to use a list to represent two pieces of data that you later get(0) and get(1) on. we have no compiler time guarantee that that contract will continue to hold in the future. \n\n\nThere are two options to make it safer. \n\n\nWe can make it a pair and name the variable explicitly as creatorNameAndProjectName to make it clear what first and second are.\n\n\nwe can pass the Project back to the view and let the view just pluck out the data it needs to render it's string. then the output could be called something more like projectForSurveyDescription.. we've got a isTrue utility for this kind of thing. may seem kind of silly to have, but it allows you to write this very declaratively as .filter(isTrue). if you wanted to try for a stretch goal, you could create a lil pair util function so that we can do map(second). we do this kind of thing quite often in swift and it's very convenient.\n\n\nthis is also an example of point-free programming, which we are big into here.. oh think we can drop this now. let's move this to a PairUtils class and create the corresponding first cause I'm sure we will find that useful soon enough!. let's statically import these so that we can do map(second).filter(isTrue). just to clarify, we want this in pair utils cause it's a nice lil pure function that we can use in any context, not just with observables. the Transformers.java file is about creating new operators on observables.. lol :foresaken-kid:. I just pushed this change to the branch.\nbasically, I think our delegates should always be optional (much like we do in iOS) and that way we don't have to use them in tests and put in an empty implementation.. what was this change? we shouldn't be making changes to this in this PR. ",
    "hotchemi": "You should try make bootstrap as described https://github.com/kickstarter/android-oss#getting-started.. You should try make bootstrap as described https://github.com/kickstarter/android-oss#getting-started.. @luoser Any update?. Thx!. @luoser Any update?. Sure thing! Addressed.. @luoser Any update?. ",
    "chowaikong": "make bootstrap still failing here.\n```\nerror: RPC failed; curl 56 SSLRead() return error -36\nfatal: The remote end hung up unexpectedly\nfatal: early EOF\nfatal: index-pack failed\nfatal: clone of 'https://github.com/google/material-design-icons' into submodule path '/Users/KNOX/GitHubProject/android-oss/vendor/material-design-icons' failed\ngit submodule foreach git checkout\nCopy java secrets over, and fallback to the example secrets if they don't exist.\ncp vendor/native-secrets/android/Secrets.java app/src/main/java/com/kickstarter/libs/utils/Secrets.java \\\n        || cp app/src/main/java/com/kickstarter/libs/utils/Secrets.java.example app/src/main/java/com/kickstarter/libs/utils/Secrets.java\ncp: vendor/native-secrets/android/Secrets.java: No such file or directory\ncp: app/src/main/java/com/kickstarter/libs/utils/Secrets.java.example: No such file or directory\nmake: *** [secrets] Error 1\n```. I am using git clone.. ",
    "Coder-DanielHan": "@chowaikong use git clone,don't download the zip\n. @droanmalik I just downloaded the zip\n. which branch should I clone?. It's ok.But it stucked at cloning material-design-icons\n\nbogon:android-oss DanielHan$ make bootstrap\ngit submodule sync --recursive\nSynchronizing submodule url for 'vendor/material-design-icons'\ngit submodule update --init --recursive || true\nCloning into '/Users/DanielHan/AndroidStudioProjects/android-oss/vendor/material-design-icons'.... \n",
    "xiechuanyu": "Thanks, but how can i run 'make bootstrap' on Windows .... ",
    "MinaSamy": "You can download GNU Make for windows from here:\nhttp://gnuwin32.sourceforge.net/packages/make.htm\n. Yes, I have the same problem, for example the KSWebViewClient.java file is included in the android-oss/config directory but it's not loaded in Android Studio. ",
    "Jawnnypoo": "I doubt this will ever be possible since the app contains dependencies that are not FOSS, such as Google Play Services. See https://f-droid.org/wiki/page/Inclusion_Policy. ",
    "stephencelis": "@mbrandonw Actually, looks like CI is failing on secrets-related things.. @pakoito Not sure I follow. Could you clarify? This is just a starting point and the API is based on our Swift implementation. The only nullables here come from the left() and right() fold operations, which we don't typically use outside of tests. In general we use either(ifLeft, ifRight) for folding.\nEDIT: We also don't use isLeft() or isRight() in practice:\n\nhttps://github.com/kickstarter/ios-oss/search?utf8=\u2713&q=isLeft&type=Code\nhttps://github.com/kickstarter/ios-oss/search?utf8=\u2713&q=isRight&type=Code\n\nWe could very well get rid of these interfaces.. For what it's worth, our implementations are all based on Haskell's Data.Either, which also implement these functions. The types should be statically sound, but if we're missing anything, let us know!. \ud83d\ude05. What do you think of using sealed classes for this?\n``` kotlin\nsealed class Either {\n  class Left(val left: L) : Either() {\n    ...\n  }\n  class Right(val right: R) : Either() {\n    ...\n  }\n}\nEither.Left(\"Error!\")\nEither.Right(1)\nwhen(either) {\n  is Left -> either.left\n  is Right -> either.right\n}\n```\nSeems to be a common pattern for tagged unions in Kotlin, and prevents even the private ability of instantiating an invalid type.. Can MessageBody.builder().body(body).build() go above to make these three cases shorter?. Fun!. ",
    "ttkla523": "Sorry, I'm learning programming. Too excited, wrong operation, Very Sorry!!!. ",
    "lorenzo-camaione": "Ok guys, I missed \"make bootstrap\".. ",
    "evelynEdison": "I met the same error\nfatal: repository 'https://github.com/kickstarter/native-secrets/' not found. ",
    "AnswerZhao": "@rabbpigPan Yeah, me too , how resolve it ?. ",
    "michaldrabik": "Having similar issue :) \n```\nmake bootstrap\ngit submodule sync --recursive\ngit submodule update --init --recursive || true\nSubmodule 'vendor/material-design-icons' (https://github.com/google/material-design-icons) registered for path 'vendor/material-design-icons'\nCloning into 'vendor/material-design-icons'...\nremote: Counting objects: 84044, done.\nremote: Total 84044 (delta 0), reused 0 (delta 0), pack-reused 84044\nReceiving objects: 100% (84044/84044), 45.22 MiB | 2.51 MiB/s, done.\nResolving deltas: 100% (13372/13372), done.\nChecking connectivity... done.\nSubmodule path 'vendor/material-design-icons': checked out 'dfab422a4be7e6455c06f8ff521fc29e03f9b0e0'\ngit submodule foreach git checkout\nEntering 'vendor/material-design-icons'\nrm -rf vendor/native-secrets\ngit clone https://github.com/kickstarter/native-secrets vendor/native-secrets\nCloning into 'vendor/native-secrets'...\nUsername for 'https://github.com': michaldrabik\nPassword for 'https://michaldrabik@github.com':\nremote: Repository not found.\nfatal: repository 'https://github.com/kickstarter/native-secrets/' not found\nmake: [secrets] Error 128 (ignored)\nif [ ! -d vendor/native-secrets ]; \\\n        then \\\n                mkdir -p app/src/debug/res/values \\\n                        && cp app/src/main/java/com/kickstarter/libs/utils/Secrets.java.example app/src/main/java/com/kickstarter/libs/utils/Secrets.java \\\n                        && cp config/koala_endpoint.xml.example app/src/debug/res/values/koala_endpoint.xml \\\n                        && cp config/koala_endpoint.xml.example app/src/main/res/values/koala_endpoint.xml \\\n                        && cp -rf config/WebViewJavascriptInterface.java app/src/main/java/com/kickstarter/libs/WebViewJavascriptInterface.java \\\n                        && cp -rf config/KSWebViewClient.java app/src/main/java/com/kickstarter/services/KSWebViewClient.java \\\n                        || true; \\\n        fi\n./script/bootstrap\n./script/bootstrap: 3: ./script/bootstrap: function: not found\n./script/bootstrap: 5: ./script/bootstrap: ruby: not found\n./script/bootstrap: 6: ./script/bootstrap: Syntax error: \"}\" unexpected\nmake: *** [bootstrap] Error 2\n```\n. Not sure if the problem is on our side or not but it's frustrating that we can't get the project going. ;(. @zhoujingheng Check #7.. @ngochuu90 #7 . But you'll probably encounter #16 on the way.. ",
    "foreveronly": "@michaldrabik  Me too. ",
    "LetItRock": "@michaldrabik, @Qamar4P you could manually createte directory and copy/rename files by yourself, and after that just run bootstrap script which is located in script folder under root folder... first check Makefile line 18... . @timkaboya did you try to run app without this bootstrap?. ",
    "naivor": "oh,I meet the  same problem and I  spend  several  hours  to solve it .  This is mine  solution.\n1.certain  have  the  ruby  environment .\n2. open  ./script/bootstrap  file, change  \"#!/user/bin/env  sh\"  to  \"#!/bin/bash\"  \nthen  run  make  bootstrap,it works!. ",
    "maulshh": "Hi, I can't find the submodule vendor/native-secrets or the repo on kickstarter, can anybody help?. ",
    "shaikhriyaz434": "facing same problem need help\n. ",
    "notdrone": "I was getting the same error. Downloading the project using git clone fixed it. ",
    "mhussien86": "Okay i will give it a look thanks \n. ",
    "rockgecko-development": "Cheers, I wasn't able to run the unit tests (got a 'no tests found' error) until I removed the second apply plugin: 'com.android.application'. ",
    "fisache": "Ok, thanks :). ",
    "zhoujingheng": "yes,but make not found;my system is windows10.. @luoser NO,Windows no command make.. ",
    "LeoHeo": "I find solution\n\ngo to git Clone root directory\ncommand make\nKSWebViewClient.java to service package\n\nReference-Makefile. ",
    "Pingsh": "\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u4e86, \u76f4\u63a5\u627e\u5230 \"Secret.java.example\" \u6587\u4ef6, \u91cd\u547d\u540d\u4e3a \"Secret.java\" ,\u91cd\u65b0 build \u4e00\u4e0b, \u5c31\u53ef\u4ee5\u8fd0\u884c\u4e86 @zhoujingheng . http://railsinstaller.org/en    download this soft,  Install the environment you need. test \"rails -v\" and \"ruby -v\", if error, find file \"rails.bat\" at the installation directory, tips here : https://stackoverflow.com/questions/35545361/rails-the-system-cannot-find-the-path-specified. There is no path \"https://github.com/kickstarter/native-secrets vendor/native-secrets\", I can't clone it from your github. My English is poor, The solution is complicated, I was worried about misrepresentation, use Chinese, you can use Google Translate. \n\u6298\u817e\u534a\u5929, \u6211\u6765\u8bf4\u4e00\u4e0b\u5168\u90e8\u7684\u8e29\u5751\u8fc7\u7a0b.\n\u7b2c\u4e00\u6b65, \u5b89\u88c5\u8f6f\u4ef6. http://railsinstaller.org/en ;\n\u7b2c\u4e8c\u6b65, \u68c0\u6d4b\u73af\u5883. \u68c0\u6d4b ruby \u548c bundle \u7684\u73af\u5883\u662f\u5426\u5b89\u88c5\u597d\u4e86. \u6253\u5f00 cmd, \u8fd0\u884c \"ruby -v\" \u548c \"rails -v\".\u540e\u8005\u53ef\u80fd\u62a5\u9519.\u5982\u679c\u62a5\u9519, \u627e\u5230 rails.bat \u6587\u4ef6, \u66ff\u6362\u5168\u90e8\u5185\u5bb9, \u8be6\u89c1 https://stackoverflow.com/questions/35545361/rails-the-system-cannot-find-the-path-specified ;\n\u7b2c\u4e09\u6b65, \u5728\u9879\u76ee\u7684\u6839\u76ee\u5f55\u4e0b\u6267\u884c \"./scritp/bootstrap\" \u548c \"./script/bootstrap_configs\" ;\n\u7b2c\u56db\u6b65, \u518d\u6b21 build \u9879\u76ee, \u53ef\u80fd\u8fd8\u4f1a\u62a5\u9519, \u6211\u7684\u62a5\u9519\u662f \"\u627e\u4e0d\u5230\u7b26\u53f7 Secrets\", \u65b9\u6cd5\u5f88\u7b80\u5355, \u76f4\u63a5\u627e\u5230 \"Secrets.java.example\"\u8fd9\u4e2a\u6587\u4ef6, \u91cd\u547d\u540d\u4e3a \"Secrets.java\", \u518d\u6b21 build ,\u5c31\u53ef\u4ee5\u8fd0\u884c\u5566 ~. ",
    "aigeek": "1.download the project\n2.make bootstrap\n3.open it with android studio.\nIt's my fault that I did 2 before 3..\nThank you.\nBut there is no data from server..It's not very convenient.. ",
    "malaki12003": "How can I make on windows? . ",
    "miga9": "@luoser Hi, do you have any updates on this one?. @luoser Awesome, thanks for the feedback! I will apply the same changes to my other PRs.. @luoser, This PR is also ready for review now :) \nA few changes I made are:\n- Removed Outputs#updateSuccess() that was not used.\n- Added some javadocs to methods in Inputs that did not have it.\n- Code style clean up.. Please look at #184 instead.. @luoser Thanks for your feedback! ;). Thanks for pointing this out. I just realized how these methods are formatted. I have no idea how they got formatted like that :/. Great! I found the scheme in /script/style.. Oh I see \ud83d\udc4d I will make that change! :). Thanks for pointing this out! I read about pointful vs point-free style.. ",
    "saisasanksunkavalli": "cd into the project repo, Run Window Bash (Git Bash) and run ./script/bootstrap. Then import the project in Android Studio, it will build automatically . ",
    "PatidarNikunj": "Hi,\nOperating System (Windows 10) : I'm not able to RUN bootstrap, getting errors:\n```\n$ ./Makefile\n./Makefile: line 1: bootstrap:: command not found\n./script/bootstrap: line 5: ruby: command not found\nfind: warning: you have specified the -depth option after a non-option argument -name, but options are not positional (-depth affects tests specified before it as well as those specified after it).  Please specify options before other arguments.\nfind: paths must precede expression: 1\nUsage: find [-H] [-L] [-P] [-Olevel] [-D help|tree|search|stat|rates|opt|exec] [path...] [expression]\n./script/bootstrap: line 5: ruby: command not found\n./script/bootstrap: line 28: bundle: command not found\n./script/bootstrap: line 5: ruby: command not found\ncp: cannot stat 'vendor/native-secrets/android/externalMin21Debug/google-services.json': No such file or directory\ncp: cannot stat 'vendor/native-secrets/android/externalPre21Debug/google-services.json': No such file or directory\ncp: cannot stat 'vendor/native-secrets/android/externalMin21Release/google-services.json': No such file or directory\ncp: cannot stat 'vendor/native-secrets/android/externalPre21Release/google-services.json': No such file or directory\ncp: cannot stat 'vendor/native-secrets/android/internalMin21Debug/google-services.json': No such file or directory\ncp: cannot stat 'vendor/native-secrets/android/internalPre21Debug/google-services.json': No such file or directory\ncp: cannot stat 'vendor/native-secrets/android/internalMin21Release/google-services.json': No such file or directory\ncp: cannot stat 'vendor/native-secrets/android/internalPre21Release/google-services.json': No such file or directory\nmkdir: cannot create directory \u2018/codestyles\u2019: Permission denied\n./script/bootstrap: line 10: ruby: command not found\ncp: cannot create regular file '/codestyles/Kickstarter.xml': No such file or directory\n./script/bootstrap: line 5: ruby: command not found\nmv: cannot move '/tmp/pidcat' to '/usr/local/bin/pidcat': No such file or directory\n./script/bootstrap: line 5: ruby: command not found\n./script/bootstrap: line 5: ruby: command not found\n./script/bootstrap: line 5: ruby: command not found\n./Makefile: line 4: bootstrap-circle:: command not found\ncp: cannot stat 'vendor/native-secrets/android/externalMin21Debug/google-services.json': No such file or directory\ncp: cannot stat 'vendor/native-secrets/android/externalPre21Debug/google-services.json': No such file or directory\ncp: cannot stat 'vendor/native-secrets/android/externalMin21Release/google-services.json': No such file or directory\ncp: cannot stat 'vendor/native-secrets/android/externalPre21Release/google-services.json': No such file or directory\ncp: cannot stat 'vendor/native-secrets/android/internalMin21Debug/google-services.json': No such file or directory\ncp: cannot stat 'vendor/native-secrets/android/internalPre21Debug/google-services.json': No such file or directory\ncp: cannot stat 'vendor/native-secrets/android/internalMin21Release/google-services.json': No such file or directory\ncp: cannot stat 'vendor/native-secrets/android/internalPre21Release/google-services.json': No such file or directory\n./Makefile: line 7: dependencies:: command not found\n./Makefile: line 9: submodules:: command not found\nSynchronizing submodule url for 'vendor/material-design-icons'\n./Makefile: line 12: sha1: command not found\nEntering 'vendor/material-design-icons'\n./Makefile: line 14: secrets:: command not found\n./Makefile: line 16: -@rm: command not found\n(Skipping secrets.)\ncp: cannot stat 'vendor/native-secrets/android/Secrets.java': No such file or directory\ncp: cannot stat 'vendor/native-secrets/ruby/secrets.rb': No such file or directory\ncp: cannot stat 'vendor/native-secrets/fonts/ss-kickstarter.otf': No such file or directory\ncp: cannot stat 'vendor/native-secrets/android/koala_endpoint_debug.xml': No such file or directory\ncp: cannot stat 'vendor/native-secrets/android/koala_endpoint.xml': No such file or directory\ncp: cannot stat 'vendor/native-secrets/android/WebViewJavascriptInterface.java': No such file or directory\ncp: cannot stat 'vendor/native-secrets/android/KSWebViewClient.java': No such file or directory\ncp: cannot stat 'vendor/native-secrets/android/WebViewJavascript.html': No such file or directory\n./Makefile: line 41: .PHONY:: command not found\n```\nPlease let me know how to do and solve these errors to start import and run project in my Android Studio.\nThanks and regards,\nPatidar Nikunj. ",
    "isaacchn": "try to install mingw32 on your computer and add ${mingw32 install directory}\\msys\\${msys version}\\bin to PATH. ",
    "valentinilk": "If you are on Windows 10 make sure to utilize the native bash capability. Install 'make' and 'ruby' via apt get. Follow kickstarter's readme after that and everything should work.. ",
    "hodanny": "@timkaboya I ran into the same issue and have a fix. Check out my pull request #43.. ",
    "liuruimilk": "it works,thank you.. do not download zip just clone, run make bootstrap.. you run this command in the folder without .git.. @eoji Hi,you replied to the wrong person. ",
    "kingfaisalict": "when i build the app, get a error ::::::    No matching client found for package name 'com.kickstarter.kickstarter.debug'\nPlease, explain how can i fix it.\nI am a novice . ",
    "ashokbg": "recently updated Makefile  only i am using then also still same issue.. pulled recent code. and also checked with different build  variants getting same error: \nError:Execution failed for task ':app:processInternalPre21ReleaseGoogleServices'.\n\nFile google-services.json is missing. The Google Services Plugin cannot function without it. \n   Searched Location: \n  F:\\android-oss\\app\\src\\internalPre21\\release\\google-services.json\n  F:\\android-oss\\app\\src\\release\\internalPre21\\google-services.json\n  F:\\android-oss\\app\\src\\internalPre21\\google-services.json\n  F:\\android-oss\\app\\src\\release\\google-services.json\n  F:\\android-oss\\app\\google-services.json. its my mistake... \n",
    "ababavali23": "Still i am facing same issue. I am not able to build the app\n. ",
    "farmazon3000": "How are you \"building the app\"?. ",
    "dancrisan": "I have the same issue, can we go through a step by step process of how are you \"building\" the app?. Ok so issue solved: if you download as a zip, make sure you have git installed and once in the project directory, you can just do \"git init\" and then \"make bootrap\". Then close android studio if it's open, then you can open the project again and run it normally. . If you didn't donwload as a zip, make sure you run \"make bootstrap\" before opening the app within android studio. . ",
    "BigKarel": "@dancrisan misspell: make boostrap. ",
    "jorgecasariego": "Thanks @dancrisan \n\"make bootstrap\" was the solution! \ud83d\ude03 . ",
    "BishoyAbd": "I have the same problem, yet I could not get what is \"make bootstrap\" ?\nwhat does that mean ?. ",
    "narakai": "Build successfully this time. I have changed some gradle setting and the build failure was caused by this mistake. Thanks for the advice.. ",
    "tmtron": "assignViewModel() will only assign the viewModel, when the class uses the @RequiresActivityViewModel annotation. Otherwise viewModel may remain null.. ",
    "christopherwright": "Hi Vipul \u2013 we aren't using Proguard so there's nothing special happening here! We tried not to include many rasterized images in the app so that's probably helped us keep the size down.\nWe're past the 64k method limit too so our code size is fairly large \u2013 makes me think that code shrinking might not be the most important tool in keeping APK size low.. Yeah I feel like this is a 50/50 call. It is nice not having to jump between files, and it makes it clear that these things are all one unit \u2013 but accessing this via ProjectViewModel.ViewModel is pretty awkward. Also means that our vm files grow pretty lengthy, so it becomes harder to jump around within the file. Am happy to go with whatever y'all are most comfortable with though.. Looks good \u2013 have we tried stopping the process (like in https://github.com/kickstarter/android-oss/pull/48) just to test some of the gnarlier edges here?. fresh!. If we start using more of the other icons from the new icon set, we could also bring in the full typeface and reference each icon using ligatures/codes, as we do with the material icons. The upside is we won't have to manually create pngs for each icon.. @luoser Ah, so the internal code stems from our build flavors. Looking at docs, it seems like we may be able to add tests specific to a flavor \u2013 want to see if you can get it working, and ping me if it doesn't work? You may need to adapt those instructions for unit tests.. It'd be neat to try this for all tests \u2013 same thing that we do in the backend with Timecop. Otherwise I can see this issue popping up again in the future... I don't have the latest iOS app compiling, but is the filter now 'All Projects' instead of 'Everything'?\nIf so, we could update the string on Android and remove references to 'Everything' throughout the source.. Are we sure we want to alter the functionality here? Seems like this is a behavioral change rather than just language?\nI think it might also introduce a bug with the onboarding \u2013 https://github.com/kickstarter/android-oss/pull/31/files#diff-35cad2327f6b5b0f53fd5b9f64ee033bR278 onboarding is only visible when staff picks are true, but now we've turned them off by default?. This says $0.40 but the minimum is set to 0.3f. Can do ProjectFactory.caProject(). It might be nice if format could take a rounding mode option, instead of manually using ceil and casting back to a float.. Okay. I'm not sure how crucial it is to the tests, but throughout DiscoveryFragmentViewModelTest we set staff picks to true when loading the initial params, e.g.: https://github.com/kickstarter/android-oss/pull/31/files#diff-295515ebc9274113707ed3b807dd41dcR137. Seems like the new default would not have that param set to true.\nWould recommend doing a pass throughout the codebase where staffPicks is set to true and make sure we don't have any outdated assumptions about what the initial load looks like.. In filterString, do we need to change R.string.discovery_everything to R.string.All_projects or something?. We can remove this and the next line since we don't assert on the usdConversionSectionIsHidden subscription, otherwise happy for this to be merged. Can also use https://github.com/kickstarter/android-oss/blob/master/app/src/main/java/com/kickstarter/libs/utils/BooleanUtils.java#L18. Instead of injecting ksString in the constructor, you may also want to consider using environment().ksString().\nTracing that through:\n\nWe cast the context to a KSApplication object here: https://github.com/kickstarter/android-oss/blob/3d8b90965f494ccd61cd7a6ef9e68eded8e87e8e/app/src/main/java/com/kickstarter/ui/viewholders/KSViewHolder.java#L105\nKSApplication's component gives us access to things injected from ApplicationModule, including the environment: https://github.com/kickstarter/android-oss/blob/master/app/src/main/java/com/kickstarter/ApplicationModule.java#L95\n\nWe're already using environment in view models, but we can use it elsewhere too. Eventually it'd be great to have Dagger build our dependency graph, but generally use environment to access globals similar to iOS since it makes test injection pretty straightforward.. I'm down for compressing some of these three line methods onto one line, if they fit.. Should we add an annotation around nullability for project?. I think all the outputs could also have non null annotations on the return type.. Is the adapter non null?. I might slightly rephrase this \u2013\n\nThis is particularly useful for RecyclerViews; if subscriptions in these views are delayed for a frame, then the views temporarily shows recycled content and frame rate stutters. To address that, we can use observeForUI to execute the work immediately rather than wait for a frame.\n\nPR 230 in the old repo goes into more detail.. Is the queryParam != null part here redundant?. The method name makes this read like it's returning an intent from a banner \u2013 might consider something like appBannerIsSet. Is this setting the right value from the API, or is it always just initialized to false? Our serializer names this field public rather than is_public, and I couldn't see if we're handling that here.. Are we skipping because nextPage emits for the initial load?. It might be nice to pull out these strings into one place rather than duplicating them across the codebase. Let's have a lil chat on these fellas on Tuesday. I think a super simple approach would be to just have a class with a bunch of static strings. We won't have a need to localize these events, and using static strings means we avoid the need to pass around a context.. Do you want to investigate whether it's easy to add a unit test here?. I noticed in the release app that this prompt isn't showing \u2013 is that an issue for you too? Does this change fix anything there?. \ud83e\udd47 . Main question I have here is whether there are any issues with holding onto a reference to these fragments \u2013 can it potentially cause any issues with GC? I couldn't see a clear explanation on how this works from a scan of the docs, so would just hope that we have confidence that this would not cause issues with destroying fragments.. Love this stuff. I'd be cool with us using static imports for some of these \u2013 e.g. isNotNull, negate. The methods are so general, it doesn't feel like we'd be making the code less understandable.. bOrT! :heart:. Your PR comment here helps clarify what's going on, you might consider adding a comment in the source so that future readers of the code can easily understand what's happening. If we're going to use explicit this, can we create a separate PR introducing http://checkstyle.sourceforge.net/apidocs/com/puppycrawl/tools/checkstyle/checks/coding/RequireThisCheck.html and audit our entire codebase for infractions? If we try to maintain this without an automated tool we're going to miss a lot of stuff.. Might want to keep the constant names alphabetized. I wonder if this and activityFeedButton can use butter knife's @OnClick, like the menu button later in the code?. Should this be a second output?. Given the param is a string, it may be more accurate to refer to it as a project_param rather than a project_id. Am assuming we could either use the slug or pid.. I assume the latestProject name is emphasizing that we don't have a project switcher in place yet, so it's grabbing the creator's most recent project?\nI suspect for a lot of this code, the source of the project isn't super important though \u2013 we could just call the variable project. When we have a switcher in place, none of this code would need to be renamed.. Could add some @NonNull annotations here.. Could these BehaviorSubject types be replaced with Observable?. I wonder if some of this code needs to be updated or deleted? We're subscribing to the project rather than timeRemainingText, seems like we're not using the correct output. Same applies for the pledged of goal output below.. Looks like we have a duplicated subscription here (same as lines 62-65?). I believe @luoser has been moving to a new pattern of nesting the inputs and outputs inside the viewmodel, e.g.: https://github.com/kickstarter/android-oss/blob/master/app/src/main/java/com/kickstarter/viewmodels/MessageHolderViewModel.java#L19-L48. So sad we're no longer defaulting to SKULL GRAPHIC TEE. Wonder if there's some new line setting that we should apply for consistency? I believe we used to ensure there was a new line at the end of every file, maybe there's a linter rule for this we could add. I think we can remove the call to bindToLifeycle() here \u2013 bindToLifecycle is used to clean up subscriptions when the view model's lifecycle is over, so we usually put it before calls to subscribe to an observable. The docs have a little more info.\nA couple lines down you can see intended usage:\n.compose(bindToLifecycle())\n.subscribe(...). Sorry @dandrabik. Does this comment line up with the name of the output? (sign up button disabled vs form submitting). ",
    "sunardo": "I have same problem... still  can't solve it.\nWonder if @amitsri20 have solution.. ",
    "willisplummer": "\ud83d\udc4f . ",
    "pakoito": "I have my reservations about the way Either is implemented. The use of null types, isLeft() and isRight() allows for a scape hatch from static analysis which should be enforced instead. The encoding to enforce should is similar to the Java version seen here https://github.com/pakoito/RxSealedUnions\nEDIT: okay, I'm late to the discussion and it'd be great if you gave that project's README a look and gave me an opinion.. Fair enough them, but I'd remove all of them.. map, mapRight, isLeft and isRight can all be expressed in terms of either(). I didn't know about Haskell's implementation, so probably I am being too anal about it.. ",
    "sockeqwe": "Hey @luoser, \nis the benchmark sealed class vs. enum vs. static field open source too? Didnt expected such a result, would like to take a closer look. Don't get me wrong, I do believe that your results are correct although I'm surprised. I would like to take a look at kotlins byte code tweaks for sealed classes vs. static fields in a clean environment (which I'm obviously\u200b too lazy to write my own tests / benchmark for :smile:). Thank you so much @luoser !. ",
    "Dk35840": "Unsubscribed me\nOn 21-Mar-2017 9:09 PM, \"lisa luo\" notifications@github.com wrote:\n\nHi @sockeqwe https://github.com/sockeqwe, the results were indeed\nsurprising.\nThe \"benchmark\" test I ran does come with a caveat since I lazily ran them\nin our app--not an ideal clean environment to really analyze the\ndifferences between the Kotlin byte code differences.\nPlease excuse the noise in this branch\nhttps://github.com/kickstarter/android-oss/compare/context-benchmarking,\nbut it contains the code I used to measure the times, namely\n\nthis is the sealed class context\n   https://github.com/kickstarter/android-oss/blob/b1b0f2ba9067ce5e8afdc953792ec47033accf8d/app/src/main/java/com/kickstarter/libs/ConvertedKoalaContext.kt\nthis is the enum class context\n   https://github.com/kickstarter/android-oss/blob/b1b0f2ba9067ce5e8afdc953792ec47033accf8d/app/src/main/java/com/kickstarter/libs/KoalaContext.kt\nthis is the static class context\n   https://github.com/kickstarter/android-oss/blob/b1b0f2ba9067ce5e8afdc953792ec47033accf8d/app/src/main/java/com/kickstarter/libs/StaticKoalaContext.java\nand this is the very lazy benchmarking code\n   https://github.com/kickstarter/android-oss/blob/b1b0f2ba9067ce5e8afdc953792ec47033accf8d/app/src/main/java/com/kickstarter/ui/activities/CommentsActivity.java#L155-L184\n   that i actually ended up running 100_000 times rather than 1_000_000\n\nDefinitely not the most scientific approach, and I would also love to do a\nmore in-depth analysis at some point [image: :neckbeard:]\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/kickstarter/android-oss/pull/59#issuecomment-288119314,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AUB0eNaXmx3dbk_HOCaTZXbqVf7rXM0vks5rn-84gaJpZM4MCWiS\n.\n. \n",
    "ronanhardiman": "https://github.com/kickstarter/android-oss/blob/8c655fa0ecad478250d530f5c3dad0bfa0d49aec/app/src/main/res/layout/help_layout.xml\n\nwhy not this\n\nthank you\n. ",
    "jonathan-caryl": "thanks @luoser \nI opened PR #69 a while back too, it'd be great if that could be merged, or closed if it's not wanted.. Both logging-interceptor and okhttp-urlconnection depend on okhttp, it seems odd not to list it explicitly.. Without these IDs defined the layout preview doesn't display correctly in Android Studio. They aren't necessary at runtime, it seems to make more sense to restrict them to debug builds only.. You can specify the hint in the child EditText but if you look at the source for TextInputLayout you can see that\n    if (mHintEnabled && TextUtils.isEmpty(mHint)) {\n        setHint(mEditText.getHint());\n        // Clear the EditText's hint as we will display it ourselves\n        mEditText.setHint(null);\n    }\n\nso it makes more sense to set it directly on the TextInputLayout. ",
    "Singwai": "kk I will work on it . ",
    "coryroy": "I pushed a new commit to the branch.  Now inheriting from AppCompatTextView in accordance with lint.. second lint issue is going to be a larger problem:\nhttps://code.google.com/p/android/issues/detail?id=234673\nLooks like this method is marked as hidden in the support api!. This build is still failing during :app:lintExternalPre21Release, but the lint file isn't even created. I think it's crashing during lint!\n. Had to leave line breaks in one method to pass milkrun.. \n\n. \nUpdated layout to top align with padding. I also tried just enabling the build cache by adding android.enableBuildCache=true to the gradle.properties file. That brings subsequent builds to 11 secs down from 47, but not nearly as impressive as the Paperwork solution.. Paperwork removed. Want to have a look?. @luoser Is this good to go? I think I've addressed everything. If not please let me know. \n\n. Ooops. Yes I will add that!. I started working on the tests last night and may need some help. I will\nattach screenshots when I get into the office \ud83c\udfe2. \ud83d\udc4d\nOn May 11, 2017 07:32, \"Brandon Williams\" notifications@github.com wrote:\n\n@mbrandonw requested changes on this pull request.\njust did another pass. will do one last review pass today to cover the\ntests and the xml layouts.\ncould you drop some screenshots of the UI in the PR too?\nIn app/src/main/java/com/kickstarter/ui/adapters/ActivityFeedAdapter.java\nhttps://github.com/kickstarter/android-oss/pull/102#discussion_r115997105\n:\n\n@@ -39,7 +39,7 @@ public ActivityFeedAdapter(final @NonNull Delegate delegate) {\n\n insertSection(SECTION_LOGGED_IN_EMPTY_VIEW, Collections.emptyList());\n insertSection(SECTION_LOGGED_OUT_EMPTY_VIEW, Collections.emptyList());\n\n\ninsertSection(SECTION_SURVEYS_HEADER_VIEW, Collections.singletonList(null));\ninsertSection(SECTION_SURVEYS_HEADER_VIEW, Collections.emptyList());\n\ncan we still write tests for this adapter since there's quite a bit of\nlogic in it?\n\nIn app/src/main/java/com/kickstarter/ui/viewholders/\nUnansweredSurveyHeaderViewHolder.java\nhttps://github.com/kickstarter/android-oss/pull/102#discussion_r115997209\n:\n\n\n\"Reward_Surveys\",\nunansweredSurveyCount,\n\"reward_survey_count\",\n\nString.valueOf(unansweredSurveyCount)));\n\nheadingTextView.setVisibility(unansweredSurveyCount > 0 ? View.VISIBLE : View.GONE);\nif (unansweredSurveyCount > 0) {\nheadingTextView.setText(\nksString.format(\n\"Reward_Surveys\",\nunansweredSurveyCount,\n\"reward_survey_count\",\nString.valueOf(unansweredSurveyCount)));\nheadingTextView.setVisibility(View.VISIBLE);\n} else {\nheadingTextView.setVisibility(View.GONE);\n\n\nI don't think we need to mess with the visibility of the text view. we\nwill simply not render this view holder if the survey count is 0\n\nIn app/src/main/java/com/kickstarter/libs/ActivityViewModel.java\nhttps://github.com/kickstarter/android-oss/pull/102#discussion_r115998825\n:\n\nprivate final PublishSubject intent = PublishSubject.create();\n+  protected final PublishSubject onResume = PublishSubject.create();\n\nsorry, this was my suggestion, but after seeing it IRL now I think we\nshould revert and go back to the explicit resume input you had before. I\nreally don't wanna push more functional into this VM base class. there's a\nlot of benefit to making our VM's very explicit in what they require, so\nit's nice to see this VM say it has functionality built on top of the\nactivity resuming.\ndo you mind reverting this commit? you can just do a git revert to do it\ncleanly.\nalso you can make the resume observable just a simple  observable\nsince we no longer need the activity lifecycle event.\n\nIn app/src/main/java/com/kickstarter/viewmodels/ActivityFeedViewModel.java\nhttps://github.com/kickstarter/android-oss/pull/102#discussion_r115998965\n:\n\n         ? this.client.fetchUnansweredSurveys()\n\n\n: Observable.just(Collections.emptyList())\n\n);\n\nresponses\n: Observable.just(new ArrayList())\n\n\nany reason not to use Collections.emptyList()?\nIn app/src/main/java/com/kickstarter/ui/adapters/ActivityFeedAdapter.java\nhttps://github.com/kickstarter/android-oss/pull/102#discussion_r115999264\n:\n\n@@ -42,6 +49,14 @@ public void takeActivities(final @NonNull List activities) {\n     notifyDataSetChanged();\n   }\n\n\npublic void takeSurveys(final @NonNull List surveyResponses) {\nif (surveyResponses.size() > 0) {\nsetSection(SECTION_SURVEYS_HEADER_VIEW, Collections.singletonList(surveyResponses.size()));\nsetSection(SECTION_SURVEYS_VIEW, surveyResponses);\n}\n\nwe need an else to this if so that if surveys later load 0 results we\nwill clear the area.\na good test case to have too.\nIn app/src/main/java/com/kickstarter/viewmodels/ActivityFeedViewModel.java\nhttps://github.com/kickstarter/android-oss/pull/102#discussion_r116003046\n:\n\npublic interface ActivityFeedViewModel {\n\n\ninterface Inputs extends ActivityFeedAdapter.Delegate {\ninterface Inputs extends Delegate {\n\nlet's not import the delegate like this. from a code reviewer perspective\nit's nice to see where that delegate interface is coming from.\n\nIn app/src/main/java/com/kickstarter/viewmodels/ActivityFeedViewModel.java\nhttps://github.com/kickstarter/android-oss/pull/102#discussion_r116003235\n:\n\n}\n\n\nfinal class ViewModel extends ActivityViewModel implements ActivityFeedAdapter.Delegate,\nInputs, Outputs {\nfinal class ViewModel extends ActivityViewModel implements\nActivityFeedViewModel.Inputs, ActivityFeedViewModel.Outputs {\n\non the other hand, these make sense to just be Inputs and Outputs because\nthey are defined right above and it works the exact same way in every view\nmodel.\n\nIn app/src/main/java/com/kickstarter/viewmodels/ActivityFeedViewModel.java\nhttps://github.com/kickstarter/android-oss/pull/102#discussion_r116004091\n:\n\n\npublic final Inputs inputs = this;\npublic final Outputs outputs = this;\npublic final ActivityFeedViewModel.Inputs inputs = this;\npublic final ActivityFeedViewModel.Outputs outputs = this;\n\n\nsame here...\nIn app/src/main/java/com/kickstarter/viewmodels/ActivityFeedViewModel.java\nhttps://github.com/kickstarter/android-oss/pull/102#discussion_r116004450\n:\n\n+\n+      Observable.combineLatest(\n+          this.onResume,\n+          this.currentUser.isLoggedIn(),\n+          Pair::create\n+        )\n+        .filter(resumedAndLoggedIn ->\n+          resumedAndLoggedIn.first == ActivityEvent.RESUME && resumedAndLoggedIn.second\n+        )\n+        .compose(Transformers.combineLatestPair(surveyFeatureEnabled))\n+        .switchMap(resumedAndLoggedInAndEnabled ->\n+          resumedAndLoggedInAndEnabled.second\n+            ? this.client.fetchUnansweredSurveys()\n+            : Observable.just(new ArrayList())\n+        )\n+        .subscribe(this.surveys::onNext);\n\nlooks like we are missing a .compose(this.bindToLifecycle()) on this.\nIn app/src/main/java/com/kickstarter/viewmodels/\nUnansweredSurveyHolderViewModel.java\nhttps://github.com/kickstarter/android-oss/pull/102#discussion_r116004628\n:\n\n\n/* Emits creator avatar image /\nObservable creatorAvatarImage();\n+\n/* Emits the creator name /\nObservable creatorName();\n+\n/* Emits the survey description /\nObservable> surveyDescription();\n+\n/* Emits the survey url /\nObservable loadSurvey();\n}\n+\nfinal class ViewModel extends ActivityViewModel implements\nUnansweredSurveyHolderViewModel.Inputs,\nUnansweredSurveyHolderViewModel.Outputs {\n\n\ncan drop these fully qualified names\nIn app/src/main/java/com/kickstarter/viewmodels/\nUnansweredSurveyHolderViewModel.java\nhttps://github.com/kickstarter/android-oss/pull/102#discussion_r116004660\n:\n\n\n.map(this::getSurveyDescription);\n+\nthis.goToSurvey = this.configData\n.compose(takeWhen(this.surveyClicked));\n}\n+\nprivate final PublishSubject configData = PublishSubject.create();\nprivate final PublishSubject surveyClicked = PublishSubject.create();\n+\nprivate final Observable creatorAvatarImage;\nprivate final Observable creatorName;\nprivate final Observable> surveyDescription;\nprivate final Observable goToSurvey;\n+\npublic final UnansweredSurveyHolderViewModel.Inputs inputs = this;\npublic final UnansweredSurveyHolderViewModel.Outputs outputs = this;\n\n\nhere too\nIn app/src/main/java/com/kickstarter/viewmodels/\nUnansweredSurveyHolderViewModel.java\nhttps://github.com/kickstarter/android-oss/pull/102#discussion_r116005671\n:\n\n\n}\n+\n@Override public Observable creatorAvatarImage() {\nreturn this.creatorAvatarImage;\n}\n@Override public Observable creatorName() {\nreturn this.creatorName;\n}\n@Override public Observable> surveyDescription() {\nreturn this.surveyDescription;\n}\n@Override public Observable loadSurvey() {\nreturn this.configData;\n}\n+\nprivate List getSurveyDescription(final @NonNull SurveyResponse surveyResponse) {\n\n\na few things:\n-\nall private helper functions should be static because they shouldn't\n   rely on anything in the view model. they should just be lil pure functions\n   that take all their input and spit out output.\n   -\nit is dangerous to use a list to represent two pieces of data that you\n   later get(0) and get(1) on. we have no compiler time guarantee that\n   that contract will continue to hold in the future.\nThere are two options to make it safer.\n-\nWe can make it a pair and name the variable explicitly as\n   creatorNameAndProjectName to make it clear what first and second are.\n   -\nwe can pass the Project back to the view and let the view just pluck\n   out the data it needs to render it's string. then the output could be\n   called something more like projectForSurveyDescription.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/kickstarter/android-oss/pull/102#pullrequestreview-37583609,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AAe7uC5H12h2HIOIYDfGFHA7kcTMzsc2ks5r4xwUgaJpZM4NXO-H\n.\n. \nWith Surveys\n\n\nWithout surveys\n. @christopherwright Good point.  Do you think putting weak references in the map would be a better idea. . I think the auto-formatter messed this up as I didn't specifically change this. Is it possible to change the settings file so this doesn't happen on auto-format?\n. This had to be here for the project click to work.. Does this include parent member variables, like koala?  Also, I'd like to know the reason for this as it does make the code less readable IMHO. . I will fix these two items and get in touch via slack. um, this is the view model.. No idea. . Removed as no longer using this style. Removed. This was used when we were using spannables. . @mbrandonw preferred the explicit string. I'm ok with either, but I would like both of you to agree. :). Percent. What would you prefer?. I here you, but for readability I much prefer Brandon's code here. first and second don't say what they are.. I've changed it to percent. We can shorten it to something else if you prefer.. This was unnecessary and I removed it. Thanks for finding that issue. Subjects should be naturally observable.. When I change them to Observables, it won't compile. Do I have to change both sides of the expression?. In order to have it run before each test we do. I have now made it override parent setUp and passing the resulting environment. ok. changed it.. I had each assert as a static import. perhaps that was what milkrun didn't like.. No. It isn't. I will remove it.. \nNice catch.. Just to speed up the build. As the link in the gradle.properties says, it is perfectly safe as long as your subprojects configuration don't rely on any other subprojects configuration.  If we notice any weirdness, it is simple to turn this off.  . My mistake. Was a reference to a private method in source solution, removed.. Source: https://zeroturnaround.com/rebellabs/making-gradle-builds-faster/\n\nBesides the obvious speedup you\u2019ll get from executing the build over using multiple >threads at the same time, you get the following additional benefits:\n\nConfiguration of projects in parallel.\nRe-use of configuration for unchanged projects.\nProject-level up-to-date checks.\nUsing pre-built artifacts in the place of building dependent projects.\n\nThe last two points are particularly important. You rarely work all over the place, most probably your changes to the code are nicely contained in a few projects at a time. That means that Gradle will be able to figure out and avoid building unnecessary projects over and over again. And the work that\u2019s not done is the fastest work ever.\n\n\nJust waiting on your go ahead.... This should really be one text view with html.  Since you are rewriting the UI anyway, it makes sense to do it properly.  If someone has a small screen and a large font, you will get some very weird UI with this chained textview method.  Also it doesn't localize properly and word order is fixed.. This is fine. I still prefer data structures to pairs, but I love me less lines of code, too!. Ok. I'll just add it to the chain! \ud83d\udc4d . Awesome! I will refactor it to the base.. Sure. I'll make that change. \ud83d\udc4d . Cool! Thanks for the tips. I will look into that and see how I can test the adapter.. You were exactly right! I changed the line to be:\ninsertSection(SECTION_SURVEYS_HEADER_VIEW, Collections.emptyList());\nand made the view holder require NonNull and it worked!. \ud83d\udc4d I have reverted the commit. . Right!. Good point. I've made the change. \ud83d\udcaf . Ok. \ud83d\udc4d . \ud83d\udc4d . \ud83d\udc4d . I agree! I'll go with option 2 for now and let's see how that looks.. Right!. Yes. That makes sense. \ud83d\udc4d . Yes! That makes perfect sense! An int can't be null! \ud83d\udc4d . Yes. I like those, too. Will change. \n. Yes. Looks better! \ud83d\udc4d . I'll put in the annotations to keep out the riff-raff! \ud83d\udc4d . Got it! \ud83d\udc4d . Yes. That's not needed. Remove. \ud83d\udcaf . Ok. That's good to know! I'll just remove it from the gradle.properties file all together so nobody is tempted to turn it on. :). API 17 may make these redundant. Let's look into it!. Cool. That is much better.. I prefer that too. Changed!. Ooops. Ok fixed.. fixed this \ud83d\udc4d . Changed all of these!. Got rid of the tailgater.. Ok. I'll slack you.. Ok. I'll just keep it, but commented out. \ud83d\udc4d . @luoser getHeadGitCommit().abbreviatedId would require the grgit library that @tasomaniac has recommended. Is that something you want to try? . @tasomaniac @luoser I like this idea. It does look a bit messy with having utility functions inside the main build file.. I've removed those strings.. @luoser Thanks for the clarification. Consistency is a personal preference of mine. :) So I am happy to comply either way. . I was thinking that I didn't really like it the way it is. I will convert it to use the function, which as you say, is much more declarative and clear.. I will take a stab at this.. Thanks for clarifying. I was worried that it didn't fit exactly in the Transformers class so this sounds good. I will move it and create the corresponding first method as well.. Also, I will quickly write some tests for these.. Ok. I will put and have a look and make changes, if necessary.. So happy to see this requirement for a delegate in a test removed! Thank you!. After we worked through this, it appears, we should leave this as is.. Oh. I needed this to debug the api. It is only used in debug, but I can revert that.. ",
    "LittleStupid": "I got the same problem.. ",
    "guanpj": "I got the same problem on my phone also.... ",
    "onmyway133": "I see they are using kotlin https://github.com/kickstarter/android-oss/blob/master/app/build.gradle#L152 to some degree. \nI hope they will use kotlin more for future features \ud83d\ude80 . ",
    "swoopej": "actually going to update those screens so you can see the borders one sec.. . @luoser yeah ty figured it out in https://github.com/kickstarter/android-oss/pull/121/commits/9f98703197ef8d82f1e0254c79197d37f638bff2. oh good call liza added in https://github.com/kickstarter/android-oss/pull/122/commits/5e92db69204e8b5597e5a44d69b4bed54fa86d24. cool cool. alright friends all the feedback should be addressed in https://github.com/kickstarter/android-oss/pull/130/commits/4e8091418a0f28826d7813115b79c10723ce075c\nthanks for the thorough reviewing!. @christopherwright added the time freeze to the global setup/teardown in our base test case.. oh oops forgot to run quality checks doing that. @luoser @eoji think I addressed all yalls feedback if you would take a look when you have a few mins.  Also now including a fresh new drawable instead of the bullet text.\n. \ud83d\udc4d comments are helpful!. ooo siq. ok addressed this one in https://github.com/kickstarter/android-oss/pull/100/commits/8d5f490c88e22170295f480bcced6490ed914497\nbut wanna note that I'm adding Project.STATE_SUSPENDED to the \"completed\" states of a project.  That helper is only used in one spot in the RewardViewModel, and it seems like it's ok to add suspended to that behavior too?  paging lisa @luoser to confirm that though. nope ty ty. oh I meant yep ty ty. \ud83d\udc4d . unused? maybe on purpose to get those sweet translations?. is it worth moving the first two to separate outputs? like \nthis.vm.hasNoMessages\nthis.vm.hasNoUnreadMessages\nthen you could just keep the else condition here.\n(also idk if this is for the UI like you mentioned in the pr description so sorry for any needless code golfing). \ud83d\ude2c carry on. noice makes sense. :1st_place_medal: . agree. just curious why we're switching from an Observable to a BehaviorSubject here and below?. \ud83d\udc4c . just wanna confirm that we don't want to add MESSAGE_THREAD_HAS_UNREAD_MESSAGES to the initialization of other SharedPreferences in the ApplicationModule? Seems like we're just using the sharedPreferences here as key/value store for these threads, but wanted to confirm that's...ok.. makes sense to me!. word. noice. ooooh nice . oh chill ty for these updates. maybe add a lil comment?. ah yeah those are just helper methods down below that take a project.  I would make the output more specific but ksCurrency.format and ProjectUtils.deadlineCountdownDetail take a project object unless I'm missing an easier way. word ty ty. oh nice. unsure about whether I need to override onDestroy here or in the RewardStatsViewHolder below.  I see we are doing it in other activities/viewholders, but when I add or delete it here it doesn't seem to affect behavior, and I don't know if the instance of the adapter gets deallocated when the activity/viewholder gets deallocated.. am I doing shapes right? kinda winging it here.. this file is testing only one output, which is actually just the view models input with no transformations, but seemed worth doing? idk. is the null check here redundant now that you're filtering for isNotNull on initialMessages below?. oooooh ya makes sense \ud83d\udc4c . lol \ud83d\ude17 \ud83d\udc4c . \ud83d\ude0f . noice . let me know if there's a better way to sort these lists - I was using Collections.sort(comparator) but apparently that's only api 24 and up :/. oh ya siqqqq I knew there was a better way here. is this one of the edge cases that RequireThisCheck doesn't handle or is it just some debuggering. still want compose(bindToLifeCycle) here?. @luoser def think changing it here is a good call - we can just specify that this is a descending compare (maybe we should change the name?) and make a new one if we need ascending compare somewhere.. you probably already thought about this, but could the list returned by encodedPathSegments ever be null or a length shorter than two?. adding idk if there is anything to be done about it even if there is.. doesn't need to be addressed here but these two booleans along with the ones in KSWebViewClient.handle_request are still confusing to me.. wanna mention that I removed passing this here because it seemed like it was easier to set up tests if we aren't passing the ViewHolder.  I know we chatted about this irl though so wanted to point it out.. seem chill? just found this command on the internet \ud83d\ude0e . u right. this works even if there is no fragment in the transaction fortunately. yeah but we also need to call onNext from the new input so not sure that would work?  Not sure this logic is as clear as it could be though.  Like I'm making a round trip from new input -> new output -> new input -> update currentProject.. \ud83d\udc4c I think the public static synchronized int magic in the IdFactory does this for us but also fine with being more explicit.. love [webview clients]. noice. cool.. we don't need a version of this if the participant is not a creator? assume this was intentional but just checking because I can't remember what this will do in the UI.. doing this in the intializer because our linter helpfully informed me that onDraw can get called lots and lots of times it's bad to allocate things there.. oh lol tru. oooo good catch this is actually just unnecessary use of that output - we have internalReferrerPercentText below that does this for us. ty ty. ah yep bad copypaste. also this is an unnecessary output so just going to remove from the viewmodel. \ud83d\udc4c yep. oooo yes good point ty ty. and we can go back to point free \ud83d\udc6f . @luoser wanted to make sure this was finesince I haven't really dealt with accessibility on android before.  These are just the bullets next to the graph but since they are image views, the linter wants them to have a description.  I'm just reusing the strings that we use in the textviews below for the description.. could we add a .filter(url -> !TextUtils.isEmpty(url)) on the output here so that we won't get empty values emitted?  https://github.com/kickstarter/android-oss/pull/171/files#diff-2f428d6bea56ac66d4ec1a8567629475R105\nunless I'm missing something and we actually want those. could we just keep this output as an Observable<Uri> since we're converting back to a Uri in the view holder?. ah amazing ty. just to confirm we want to call this method even if the targetIntents are an empty list?  If we don't need to call this then we could add a filter on the end of the output and have it not emit (but maybe we want finish() to get called here?). could any of this logic get pushed into the ViewModel? not sure if it relies on any context from the activity.... noice. should we extract this in a constant or is it not worth it \ud83e\udd14 . cool kotlin! \ud83d\ude0e . should we have a test for _withNoFriends? :foreveralone:. yeah this is all a bit gnarly but it makes sense! If I have any refactoring ideas I'll chime in.. is it worth just doing this all in one method? it looks like this is the only place they are all called and they all take the same output.  maybe not the prettiest thing but it would be clear that it's all one action happening.. what's the case where a deadline would be null?. can we simplify this like we did in the ProjectCardHolderViewModel: \nhttps://github.com/kickstarter/android-oss/blob/master/app/src/main/java/com/kickstarter/viewmodels/ProjectCardHolderViewModel.java#L118\nthat might be true for some other outputs in this file - it seems like a lot of them are shared.  idk if there's any way to consolidate that logic across the two view models or if it would be over abstraction.... oh my bad ok!. should we go into the next millenium. ",
    "ktman": "hey @eoji what discovery queries are included here?. ohhh interesting. mind testing what happens to queries like https://www.kickstarter.com/discover/advanced?woe_id=23424796&sort=magic&seed=2514803&page=2\nwant to make sure we're bouncing the queries we don't support back to web.. ",
    "eoji": "@ktman Deep linking to the Discovery screen was already present. \n\nIn this PR, if the user clicks a link to https://www.kickstarter.com/projects, they're taken to Discovery\n\n. @swoopej @luoser could i please have your \ud83d\udc40 on this again since it's been a while.  More refresh. @swoopej @luoser Added some comments to projectCardFriendNamepile. Please let me know if they make sense!.  More refresh. Thanks for this! We did it internally here: #267 . Hi @selmanon,\nPer our own documentation here , we prefer comments (for now) but thank you for the suggestion!. @talaris and i discussed trying this out as any issues usually resolve themselves when you rebuild without cache. if it becomes a consistent problem, we will revert..  P3: Help webviews not working.  Pair with Danny to implement icon changes.  Android checkout webview 404s when view changes from portrait to landscape.  P2: Goal and pledged are swapped when currency converted on Android project page.  Creator dashboard: header. @dannyalright Thanks for the strings PR! And I think it should be this sprint or when we're getting ready to release this feature!. Bumping @cdolm92! I went through and addressed all our feedback from yesterday..  Creator dashboard: funding progress.  Creator tools: rewards table.  Creator dashboard: referrers table.  Creator dashboard: project switcher.  Creator tools: collaborator permissions.  Creator tools instrumentation.  Android creator dashboard icon doesn't always show on load.  Creator tools instrumentation.  Creator tools design sweep.  Creator tools copy sweep.  Creator dashboard: referrers chart.  Creator dashboard: referrers table color-coding.  P2: use member_projects_count.  P2: Android bar chart label cut off.  [Android] Implement video encoding upgrades.  Hide chart section on Android dashboard. Hey Jeffrey(@starkej2)!! Thanks for the feedback. And thank you @michaelsam94 for the reference! This issue is logged in our roadmap and it will be in an upcoming release \ud83e\udd13 . Hey Jeffrey \ud83e\udd13 I finally got some time to address this. Thanks again for pointing it out!.  Android: mark as received.  Write instrumentation tests for Ruby fix and implement.  Android app asks for user's full name on sign up page. Hi @selmanon & @Yvrabu ! You don't have access to all of our dependencies (they are private) so they are missing. \nFor the SocketUtils error, I'm going to delete that file in https://github.com/kickstarter/android-oss/pull/260 so let me know if you still have errors after it's merged..  Use ?ref=push for project page views from push notifications.  Change home to magic.  DiscoveryFragment crash.  Opting out of newsletter on sign up.  Hide Recommendations when settings are turned off. Hello! Is this question specific to this repository or just in general for Android?.  Help center links - Android. New looks wuttup\n\n@dannyalright . This PR depends on https://github.com/kickstarter/android-oss/pull/254, so please review so we can close this one \ud83d\ude4f .  Delete Account UI Android.  Delete Account Implement Android.  Create New w Email Account Copy. @dannyalright also the facebook confirmation page.  Newsletter Consent Copy. @dannyalright added the sign up screenshot!. One more screenshot @dannyalright \n\n.  Newsletter Consent Copy Android.  Create New w Email Account Copy - Android. New GIF after merging in master\n\n.  Recommendations and Privacy UI in Settings. Hello @bootstraponline we are! If you take a look at https://github.com/kickstarter/android-oss/blob/master/Makefile you can see where we copy over our dependencies.. Hello! I'm not sure I understand, what is the question?. Hi @idcmsbeta! You don't have access to all of our dependencies (they are private) so that's why the content is empty. .  Settings: Messages On/Off for Email, Notifications: UI (Android).  Implement Message Settings Android.  Implement Message Settings Android. @dannyalright \n1. I actually would expect it to be in caps, per https://material.io/design/components/dialogs.html#alert-dialog\n2. Yes, our other dialog buttons have sentence case \ud83e\udd14 . @dannyalright Let's do it now and I'll open a PR with that new string!. Here's the strings PR: https://github.com/kickstarter/kickstarter/pull/11028. New string \ud83d\ude0e @dannyalright \n\n.  Recommendations and Privacy UI in Settings.  Export Data external link - Android.  Create Account - Facebook Copy Android. @nnekab @Scollaco @walterbm  Made those changes.\nHere's the updated gif:\n\n.  BUG: We link to an outdated Help Center via app settings. made more changes due to an issue with the webview \u0f3c \u0f0e\u0eb6 \u0df4 \u0f0e\u0eb6\u0f3d We are now linking \u2728externally \u2728in both settings and the Login/Sign up helper menu\ncc @walterbm \n\n.  Following consent UI.  Following Consent Implement Android.  [ZD] [Android] App not loading pictures or videos when browsing projects. Updated with new colors per @dannyalright \n\n.  Android: Password reveal option to make entering passwords easier. Hi @rj12info, what's the issue you're seeing? We don't use Mixpanel as a service so that error is accurate.. Hi @rj12info! You don't have access to all of our dependencies (they are private) so that's why the content is empty. This is intended behavior.. Hi @rj12info, as mentioned in our README: \n\nFollow these instructions to build and run the project without data; note that the app will be blank.\nWe intend for this project to be an educational resource: we are excited to share our wins, mistakes, and methodology of Android development as we work in the open. Our primary focus is to continue improving the app for our users in line with our roadmap.\n\nCurrently, it's not possible for external contributors to see production data but it's something we are considering implementing in the future.. Hi @rj12info,\n\nWe merged in #324 that allows OSS contributors to see mock data so the app is no longer blank..  Spike Target API 26 or above.  Adaptive icons on 26+.  Update null state for no saved projects (v2).  Re-factored notification settings - Android.  Refactored newsletter settings Android. WOO WOO, looks great! I'll try to review this by EOD..  Refactored newsletter settings Android. HI @itayvallach and @selmanon! From January until June, it was just me managing this repo on my own \ud83d\ude05 But now there are 2 engineers \ud83e\udd13\ud83e\udd13And we have added creating mock data to our Android Engineering roadmap so the repo can be more helpful to people outside of our organization. I'm hoping to start this work in Q3.. Hi @itayvallach and @selmanon \n\nWe merged in #324 that allows OSS contributors to see mock data so the app is no longer blank..  Refactored Privacy settings Android. Cool. @Rcureton code looks great! (I have to figure out how to approve) @dannyalright, I worked on this screen initially, so I can take a look and open a separate PR!.  Creator Notifications on Android.  Project Preview links broken on Android. Hi @liuruimilk, if I understand correctly, no data is loading? That's expected behavior. As mentioned in our README:\n\nFollow these instructions to build and run the project without data; note that the app will be blank.\nWe intend for this project to be an educational resource: we are excited to share our wins, mistakes, and methodology of Android development as we work in the open. Our primary focus is to continue improving the app for our users in line with our roadmap.\n\nWe do have plans to create some mock data so that playing with the app will be a more interactive experience.. Hi @liuruimilk,\n\nWe merged in #324 that allows OSS contributors to see mock data so the app is no longer blank..  [Android] button issue on \"manage pledge\" page. Hi @dwkim891220! We think we fixed the issue in #299. Please let us know if you are still having issues.. \ud83d\udc4b shall we close this?. @dannyalright Yeah, that's the style; it only turns green in the pressed state..  Conditional changes depending on whether the user (a creator) has chosen to receive Pledge activity by email or not.  Export data not translated.  Refactored Help settings Android.  [P2] Crash when resetting password. @Rcureton I ended up having to move TestApolloActivity and TestApolloViewModel to main so the tests could pass. The CI build runs an external build so it couldn't see my stuff in internal \ud83d\ude15 .  Spike using apollo to make a GraphQL call.  [P2] TokenListenerService service crash on Oreo and above.  Add Mock Data to OSS (android).  User can seee change password screen.  [SPIKE] Custom scalars in Apollo. Let's close this and reopen one against master \ud83d\udc40 .  Change Password.  Currency Preferences in Settings. Hi @naufaladi,\nThanks for this thoughtful feedback! These are all great ideas we have considered and discussed with the design and product team. \nThere are currently only 2 maintainers of this repo, myself and @Rcureton, and we are trying to strike a balance between maintenance, bugs, and new features. Going forward, for product feedback, you can send an email to android@kickstarter.com. Those messages get seen by me, the Product Manager, and the Community Support team.\nThank you for your interest and support of the Kickstarter Android app!\nIzzy.  Close out last open issue in Android OSS repo. Hi @emreakcan,\nThanks so much for your offer and interest in the Kickstarter app! Unfortunately, we are currently unable to support Turkish officially in the app but I've let our product team know about your interest.\nBest,\nIzzy.  Change email address: validation errors.  Update Flag Styles. @nnekab Wanted to confirm if we prefer a currency that's different from the project's, we should see the reward in the original currency amount and the converted amount underneath.\nHere's what it looks like now in the current version of the app. I'm viewing a project that's in Euros and I am defaulted to USD. The user sees the rewards in the project's currency with a conversion of the user's currency underneath\n\n. Will update on Trello \ud83d\udc4d .  Remove Most Funded from sorts.  Remove Most Funded from sorts.  Show category on discovery project card.  Password conditional copy.  Turn recommendations on.  Don't hide discovery header/search/activity bar while scrolling.  Add new card screen.  Change password copy update. Hi @luckyAF, I'm not sure if this is a Kickstarter app specific issue. I bumped Apollo yesterday in #394 and can still build successfully. This seems like a node/npm issue. I believe that's what https://github.com/apollographql/apollo-android uses under the hood. What do you get when you do node -v in your terminal?. Hi @luckyAF,\nThanks! I did some googling and saw that this is definitely an Apollo issue and not a Kickstarter issue. I think this comment is helpful:\nhttps://github.com/apollographql/apollo-android/issues/608#issuecomment-369899779\nI would open an issue here if you're still running into problems: https://github.com/apollographql/apollo-android/issues\nBest,\nIzzy.  Deleting card animation.  Update copy for offline Snackbar..  Security vulnerability fix. Hi @selmanon,\nThanks for the feedback. It's coming up on our roadmap to update these! They also annoy me \ud83d\ude43 \nBest,\nIzzy.  Updating ExoPlayer library to 2.9.1.  Update images in the GitHub README page.  Payment methods divider. Found one more small bug: the change email row clickability didn't include the warning icon. I fixed it \ud83d\ude05 .  Removing Mixpanel library from Android codebase, part 5...(I'm tired). Is it possible for you to add before and after screenshots? I don't always know what I should be looking for \ud83d\udd75\ufe0f\u200d\u2640\ufe0f . @Rcureton, (all?) web requests have a User-Agent header that identifies the origin of the request to the server! We were using the default value but previously when I was debugging native issues with Insights, it was brought up that maybe we should update these? @terminalbae can show tell us if it's a good idea or not? \ud83d\udc40 . @terminalbae Android sets a default:\nMozilla/5.0 (Linux; Android 9; Pixel 2 Build/PQ1A.181205.002; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/71.0.3578.83 Mobile Safari/537.36. love the emojis!.  Fixing IllegalStateException in Creator Dashboard.  Heap compatibility check. Here are the 2 animations side by side. They're not the same but will defer to @dannyalright on approving the PR.\n \n.  Fixing button height in 2FA screen.  Fix ClassCastException on Thanks page. hi @heinthantdev, what is this PR for?. Have you also tested this on the settings v3 branch? That's where we actually use Stripe.  Targeting API 28.  Update Snackbar styles. Like left aligning them? Yeah, let's make a card. Let's actually make a giant API 28 theme card and everything we're updating to a list with checkboxes so we can keep track of the changes!. I was pretty busy yesterday so feel free to tag other team members so I don't hold you up next time!. @nnekab can you please test this out on older devices; APIs 17-27.  API 28 design theme updates.  Removing deprecated Transformers.pipeErrorsTo calls. Thanks, I've cleaned it up in this PR https://github.com/kickstarter/android-oss/pull/447.  Removing deprecated Transformers.pipeErrorsTo calls.  Removing deprecated Transformers.pipeErrorsTo calls.  Removing deprecated Transformers.pipeErrorsTo calls.  Removing deprecated Transformers.pipeErrorsTo calls.  Add new cards should only accept 6 card types. @ekussberg, yep! Here's the issue opened on the material components repo https://github.com/material-components/material-components-android/issues/120. Hope they fix it soon! .  Removing deprecated Transformers.pipeErrorsTo calls. I'm not sure what deprecated means so can you please confirm we need one and not both?.  Improve navigation and filtering on Android app.  Improve navigation and filtering on Android app. That space is 16dp, my avi has a white background so it's hard to see\n\n.  Improve navigation and filtering on Android app.  \nIt's 6dp on both sides \ud83d\udd75\ufe0f\u200d\u2640\ufe0f .  Improve navigation and filtering on Android app. why were the Italian strings removed?.  Improve navigation and filtering on Android app.  Improve navigation and filtering on Android app. Here are the text sizes: 14dp 15dp 16dp\n  \n. Gmail is using Fragments, since we're using Activities, it's not possible (we're going from 1 screen with a drawer to a new one). Here's what it looks like with no transition:\n\n.  Improve navigation and filtering on Android app.  Change email screen updates.  Add accessibility labels on Nav Bar icons.  Stop content from flashing when pulled-to-refresh.  Bug: Trello Account Strings in Android.  Remove pre21/min21 product flavor from build.gradle.  Set minSdkVersion to 23.  Remove ApiCapabilities checks for <23.  Remove UnusedAttribute that were added to fix Lint errors pre 23.  Remove parent activity meta-data from manifest. Looks like there's about 16dps of white space going around the ripple. I think the ripple should take up as much space as possible. I don't think PR should be labeled as infrastructure, it's just an update to a generated file so it should be maintenance.. Hi @sudansh, thanks for checking out our repo! We are currently taking a step back from doing infrastructure work to focus on adding new features. Updating to RxJava2 is something we are aware of but not currently prioritizing.. I had a question about output javadoc. Should they be what's happening in the Activity or what the ViewModel is doing?. \ud83d\udd75\ufe0f\u200d\u2640\ufe0f should we make this number a static constant?. niceeeeee. Let's add some javadoc for these Inputs and Outputs \ud83d\ude42 . niceeeeeeee. Since we're no longer using text, we can make this an ImageView. Same here, we can make this an ImageView. One more!. Since we'll be switching to an ImageView, we can change the color by doing imageView.setColorFilter(color). Let's keep this transparent in case we evert decide to use a background color other than white.. Yeah, we want to finish the DeepLinkActivity!. I think only startActivity, I really just need the chooserIntent.. EXTREMELY COOL. I think testEmitsFriendBackingViewIsHidden test handles that case! \ud83d\udd75\ufe0f\u200d\u2640\ufe0f . Plz alpha. Jw, do we need the first conditional here? Or do we not need it in isWebViewUri? \ud83e\udd14 . Overprotective is good! I was jw if I was missing some context.. tests \u2728 . Make this a private method for readability.. Did you test this? \ud83e\udd14 . For consistency, let's make these proper sentences.. Let's see if we can move the new toolbar design here.. See if we can extract styles from the new funding rows.. lil new line. Let's add a test for the single and empty cases.. Let's rename to referrersTitleHasTopTen. Rename this one also.. \ud83d\ude05 look for my calendar invite!\nI changed this line! Which is where we get a fresh user \ud83d\ude4f https://github.com/kickstarter/android-oss/pull/224/files#diff-40963cc3fde7a9c5d143820bc2075139R65. Update test name testOtherProjectsButtonIsGone_isFalse_WhenCollaboratorHasManyProjects. Update test name testOtherProjectsButtonIsGone_isTrue_WhenCollaboratorHas1Project. Update test name to testCreatorDashboardButtonIsGone_isFalse_WhenCreator. Update test name to testCreatorDashboardButtonIsGone_isFalse_WhenCollaborator. Move this to the bottom with the other private methods.. To not have repeat code, let's make a static helper method in WebRequestInterceptor so that we can reuse whenever we need a user agent. We should use assertValue instead and in the second test. rename to uniqueIdentifier. it's fine. instead of asserting they aren't null, assert that cookie.isPresent(). I'm glad you called this out because I had it that way and changed it. What do you think is best? I was trying to avoid doing an if/else because it's not very functional \ud83d\ude2dbut then this way is not very readable.. Let's alphabetize this new property!. And here also.. Let's also alphabetize.. Let's alphabetize these strings.. Let's alpha these dialogs.. Let's move this on the same line as 273. Let's alpha these subscribers.. Let's alpha this too!. Let's alphabetize this (I know it will eventually be renamed to SettingsActivity.). I'm not sure what we gain by moving click logic from the activity to this new view model. The databinding is cool but is there a reason why this wouldn't live in the activity?. Let's get rid of these new lines.. Let's throw a new line here. When that weird little circle with slash and arrow icon is there, that means you need to add a new line.. Let's also throw a new line here.. Let's get rid of this new line.. Open to renaming suggestions.. Should I make these strings constants?. What's our new line policy?. Lines 169-181 is what I actually changed.. \ud83e\udd2e\n\ud83d\ude05. Does this belong down here? I'm worried about any weird errors.. Let's....alphabetize\n( \u2022 \u2022)\n these \n( \u2022 \u2022)>\u2310\u25a0-\u25a0\nfunctions \n(\u2310\u25a0_\u25a0) . This is problematic \ud83d\udc40. Let's get rid of this new line.. -whispers- let's call this activity. This pattern is similar to the synthetic binding. Let's choose one for consistency! What are we gaining from using one over the over? My gut likes synthetic binding and I finally figured out why! We aren't using any of the actual \"binding\" features since we have our own ViewModel pattern. So we're adding another dependency to handle what kotlin extensions already do. \nHere's a good pros/cons list I found for both:\n \nI would say another con is if you had 2 views named the same thing, you just have to check you're importing the right one. (All the more reason to give your views better names.)\nAlso, should we do this stuff in a private method to clean up onCreate?. Let's alpha these member variables.. Instance variables should be referenced by using this. Going forward I'll comment \"this\" where I see it's missing.. Should newsletter also be @NonNull?. this. Let's alpha these outputs.. Let's add a comment description this error.. let's delete this nl. let's delete this nl. nl. Let's move all private helper methods to the bottom of the class.. this. this. I think we're missing the Games newsletter.. I think we're missing the Games newsletter.. nl. I had a question about this. I think we want to add it back?. I noticed this in the demos, if all the newsletter have a value of true, we should show the Subscribe All as checked. We could do this check in the viewmodel and make a new output for it.. Let's move this back to be alpha. AWESOMEEEEE!. I renamed this one because it's not even in the SettingsViewModel anymore but I try to write test methods in the format testAnOutput_whenAnInput, so I have a test testHideConfirmFollowingOptOutPrompt_userConfirmsOptOut that's testing if the hideConfirmFollowingOptOutPrompt emits nothing when the user confirms that they want to opt out.. Let's get rid of this, since I think we only need fabric.properties. amen. let's add fabric.properties to our secrets and it over here so that anyone who runs make secrets can pull these credentials down. nl. I think this can be deleted.. Let's rename this to something more descriptive, like phoneScaleAnimator. Should these values be constants because we reuse them? Maybe INITIAL_SCALE and MAX_SCALE?. I noticed in the Abstract file, this is actually 18dp so we should use grid_3.. Hi Danny! That space is referencing the distance from the bottom of the toolbar to the \"Account\" row's top. Highlighted in blue.\n\n. I'll make a PR now!. nl. I was wondering if we should call this text vs string. I first thought it was a shortcut for toString and I was like \ud83d\udc41 why would we want that value?. This is \u2728 SO COOL \u2728 and very useful!. \ud83d\udc4b java. Let's move this with the other alphabetized Activities. Let's alpha this. Let's alpha this. I don't think we're using this.. I don't think we're using this.. I don't think we're using this.. Let's get rid of this extension and use what already exists: BaseActivity has a method called exitTransition that you would override in SettingsActivity.\nSo instead of adding bottomSlideAnimation every time you start a new activity, you'd just add \n@Override\n  protected Pair<Integer, Integer> exitTransition() {\n    return slideUpFromBottom();\n  }\nwhere slideUpFromBottom() is a Pair of animation resource IDs defined in TransitionUtils:\npublic static @NonNull Pair<Integer, Integer> slideUpFromBottom() {\n    return Pair.create(R.anim. settings_bottom_slide, R.anim. fade_out);\n  }. nl. let's align this comment. and this one. Let's align this with the slack action. THE BEST. SO COOL, RUBY EXPERTS. let's align this. and throw a nl over here plz. Looks like we're doing the same thing 3 times, which seems like a Util class would be helpful! Let's make a Util class for Jobs\u2122. So you'd pass in a context, the class, and the tag. And then we could make these tags constants!. I'm also wondering if it's expense to keep making new FirebaseJobDispatcher objects and we should make it a singleton instead. . Nice job getting rid of the try catch. what does this mean and why do we return false?. >Return true from this method if your job needs to continue running.`\nI don't think that's what we want. When do we ever stop the job?. Let's get rid of this.. Definitely! Will update \ud83d\ude80 . I think we can get rid of this.. nit: nl. nit: nl. nit: nl. This can inherit from ChangeEmailPassTextInputEditText and then all you need is <item name=\"android:layout_marginTop\">@dimen/grid_1</item>.\nAlso should you rename this to ChangeEmailPassTextInputEditTextMarginTop. nl. Magic numbers make code harder to understand.\nLet's try something like this instead:\nval grid1 = context.resources.getDimensionPixelSize(R.dimen.grid_1)\n    val grid2 = context.resources.getDimensionPixelSize(R.dimen.grid_2)\n    params.setMargins(grid1, 0, grid1, grid2). This looks like copy pasta \ud83d\udc40 \ud83c\udf5d . Are you doing anything with this value?. nl. Shouldn't this be ChangeEmailViewModel.ViewModel? . This is the wrong import. let's alphabetize these private methods. this emits whenever there's an error. I think this should be when it's successful. I think you could be a little more descriptive \ud83d\ude1b . You're not actually testing anything here.. Sweet!. Should we refer to this is colorAccent?. I don't think you'll need this because the drop down list is drawn over the spinner.. Sorry, I wasn't clear. I mean the color value you're passing in. Like this <item name=\"android:textColor\">@color/accent</item>. I am not sure if this is accurate to this class. Might be a case of copy pasta \ud83d\udd75\ufe0f\u200d\u2640\ufe0f . I'm not sure if this true for a US user looking at a US project. I think I'd see the project just as \"$\". what if this is null? Doing !! will still cause a crash. Should we be returning US$ here?. I'm going to push back on this. Stay tuned for my followup in the viewmodel!. Please revert all of these comments that got reformatted.. Here's the followup to my push back. We're updating the user using GraphQL, we should just query for their currencyPreference using GraphQL. The only info we want is the currency but we're pulling down the whole user object from REST. Then we won't need to update the user every time we look at a project.. Let's revert all of this reformatting.. I'm not sure what these tests are testing. Is it testing that the user prefers a currency or they're in the a locale? Let's rename it to what it's actually testing.. i'm cry. o_O what is this testing? or rather, why does removing 4 make this test pass? O_o. I think for US users looking at US projects, we'd just see \"$1100\" not \"$ 1100\". @nnekab what do you think? . These are still messed up \ud83d\ude2d . I think this is causing the funded amount to be blank when a user is logged out or doesn't have service.\n\n. let's do this all on 1 line like \n@Override public @NonNull Observable<Integer> projectMetadataViewGroupBackgroundDrawableInt() {. I think adding tests for ProjectHolderViewModel will help you catch these edge cases!. What is currencyCode used for and why do you pass \"\" for both the if and the else. I think this should be currentCurrency. I think this one should be fxRate. let's move private methods to the bottom of the class. I'm not understanding what these tests are testing. My understanding is if I prefer USD, if a project is in Canadian dollars, I'd see the conversion in USD.\nFor this project, I'd assume I would see US$100 because I prefer USD.\nHow does UserCurrency take in the user's currency preference?. But this test is asserting that when we call currency.format(100.0f, ProjectFactory.caProject(), CurrencyCode.CAD.rawValue(), it will output \"CA$100\". Where does the user's location (US) come in? Shouldn't it be US$100?. staffPick is @Nullable. If it is null, we want to force it to be false.. why does the user's location matter? \ud83d\udc40 . ok but this test is called testFormatCurrency_withUserInUS so i'm assuming the user is always in the US. is the test name accurate?. Let's add documentation to the rest of the parameters.. Let's add documentation to the rest of the parameters.. In the getSymbolForCurrency, looks like we're already checking if the country code is \"XX\". I looked at the project serializer. Here's what the project serializer is doing: \nfx_rate = project.campaign.conversion_rate(h.current_currency)\n json[:fx_rate] = fx_rate.to_f if fx_rate\nThis value is nullable. When it's null, it'll crash the app.. Let's rename this output since the name usdConversionTextViewIsGone is no longer accurate.. Let's rename this one also. I noticed all of the tests use formatWithUserPreference which rounds up. For project goals and pledged amounts, we should test rounding down.. Do we need this?. The only place this method is used is in tests, so we're not actually testing what we're showing the user. I don't think we need it since we are only using \nformatWithUserPreference(final float initialValue, final @NonNull Project project, final @NonNull RoundingMode roundingMode, final String symbol) . I mean do we need it in this method?. Let's check if the response hasErrors. Let's move the recycler setup to a private method and call it before we subscribe to the output.. \ud83d\udd2a this. Let's remove calling the view by its type. . Let's get rid of the ?. Here, too. Let's rename to card. Let's do the work of \"prettifying\" our string here like this:\nthis.card.map { expiration -> expiration.expirationDate() }\n                    .map { sdf.format(it) }\n                    .subscribe { this.expirationDate.onNext(it) }. Let's move the card icon logic here also.. Let's add error handling here in case the call fails, has an error, or we don't have service.. Hey @dannyalright, we are wondering: should the whole screen scroll under the toolbar or only the list of cards. I'm leaning towards the list so we can always see the \"Add a new card\" row.. Let's add a test to handle when the call fails dun dun dun. In this test, let's assert the proper list is emitted like this:\n``` \n@Test\n    fun testGetCards() {\n        val node = UserPaymentsQuery.Node(\"\", \"5555\", Date(), \"9876\",\n                CreditCardState.ACTIVE, CreditCardPaymentType.CREDIT_CARD, CreditCardTypes.MASTERCARD)\n    setUpEnvironment(environment().toBuilder().apolloClient(object : MockApolloClient() {\n        override fun getStoredCards(): Observable<UserPaymentsQuery.Data> {\n\n            return Observable.just(UserPaymentsQuery.Data(UserPaymentsQuery.Me(\"\",\n                    UserPaymentsQuery.StoredCards(\"\", List(1\n                    ) { _ -> node }))))\n        }\n    }).build())\n\n    this.cards.assertValue(Collections.singletonList(node))\n}\n\n}\n``. Let's make this a private variable so we don't recreate it every timecardemits. Where's theneverError\ud83d\udc40 . -whispers- don't forget to test when the call fails. It has a black background and green text https://homebase.ksr.io/kickstarter/components#snackbar. I just had a bug here and was calling the error one \ud83d\ude2c . Yes, I make them null in my tests to show what an unfilled in card would look like. This factory is only used for tests.. yes \ud83d\ude15 . Nice catch! Missed it when I moved it out of the Activity. Nits are still valid feedback!. My life blood. read ur mind, already done. I usually like reusing an existing view as the anchor instead of creating a new id that only gets used to show Snackbars. Definitely just one of my many style quirks O_<. what if they're already verified? we want to show this row? when does it ever hide? \ud83e\udd14 . But what does being a creator signify in this viewmodel? In the activity, it seems like we show some text so maybe it'd be likeshouldShowBlahBlahText. Same here, if it's not deliverable, what does that mean for the activity that subscribes.. -whispers- same here. THROW SOME D(OCUMENTATION) ON THAT. Here too \ud83e\udd13 . Nice job!. Cool so you can use this test to check which text we show in the button. let's also test if this fails. Should we rename this tosendVerificationIsVisible?. revert revert. We should only do this on debugs \ud83d\udc40 . revert revert. We should only register the receiver once, inonResume`. I'm not sure what a \"reward preference\" is. And we also use this method for the converted pledge and goal amounts. I think a better name could be \"formatWithProjectCurrency\" since I think that's what this method is doing.. What's the difference between this method and getSymbolForCurrency. Smells like copy pasta \ud83c\udf5d . \ud83d\udc1b \ud83d\udc40 . let's add for a backer that's undeliverable and a creator that's unverified. For this one, I thought for backers, we are only uninterested in if the email is undeliverable and we don't care if it's unverified.\nWe should also have a test for this case. That we don't show the icon for unverified backers.. Why are we using a weight here? The default weight is 0. Also, instead of setting top and bottom layout margins, we can just give this view a gravity of center_vertical. This is a CA project with MX currency.. nice catch \ud83d\ude1b . you're going to be sad but i realized the logic is simpler like this:\n private fun showEmailErrorImage(userPrivacy: UserPrivacyQuery.Data?): Boolean? {\n            return if ( !userPrivacy.me()?.isDeliverable!!) {\n                return true\n            } else if (userPrivacy?.me()?.isCreator!! && !userPrivacy.me()?.isEmailVerified!!) {\n                return true\n            } else {\n                false\n            }\n        }. what's the difference between this test and testShowEmailErrorIconForBackerUndeliverable? This code is kind of hard to read because idk what these booleans correspond to true, false, true. So it's be helpful if we had variables like val isCreator = false for example and pass those in. I got some helpful feedback from @Scollaco. When you use !! and this value is null, it's going to crash the app. We shouldn't assume that it's not going to be null. Here's a helpful link I found: https://kotlinlang.org/docs/reference/null-safety.html. amazing. This method sends a single attribute along with an event. My understanding was that we wanted to send all of the attributes we send to Koala to Fabric/Firebase. Which is why @justinswart was running into the limit issue. I know Justin said he's going to do some more exploration with Fabric/Firebase.. I thought we're not doing any more Fabric events. \ud83d\udc40 . Should we kill this extension until we decide we're using Fabric officially?. Yep!. No, I'm putting in a boolean called \"has_video\", so it's either true or false.. -hisses- no. It's only used here. \ud83d\ude1b . Danny released we only considered how this looks in English. Languages where this copy is longer would push the tabs to 2 lines with tiny fonts.. Let's rename this to either startChromeTab or startCustomTab for accuracy.. This crashes if the user doesn't have a browser that's capable of handling a custom tabs.  I don't think we needed to remove all of that code. We need a fallback.. These should be constants. We previously used Secrets.HelpCenter.ENDPOINT and the static classes in HelpActivity. Let's alphabetize this and use the settings transitions. snackbar* heh. Let's rename this createPasswordClicked for consistency.. We have this value now in 2 places. (The other is ChangePasswordViewModel) Should we just have one constant that lives in StringUtils?. snackbar :3. typo in \"password\". I don't think this is the right style.. Let's rename this to HorizontalRewardsPreference. A feature key is usually the name of a preference, some examples of other feature keys we've had are \npublic static final String ANDROID_MESSAGES = \"android_messages\";\npublic static final String ANDROID_SURVEYS = \"android_surveys\";\nSo I think this should have a more descriptive name like internal_horizontal_rewards.. I think you missed one! Let's rename to provideHorizontalRewardsPreference. ",
    "selmanon": "TwoFactorAuthenticationViewModel is better than TwoFactorViewModel I guss . The app will not show anything as they make as note on the Getting Started (readme) \n\nnote that the app will be blank.\n. Do you mean that you could run the iOS app ?\n\nLe jeu. 26 juil. 2018 09:48, Itay Vallach notifications@github.com a\n\u00e9crit :\n\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/kickstarter/android-oss/issues/280, or mute the\nthread\nhttps://github.com/notifications/unsubscribe-auth/ACGpVKTRo9Ik1w7CYcWnxNT7R7TQX-jtks5uKYJlgaJpZM4Vha0E\n.\n. \ud83d\udc4d\ud83d\udc4d\n\nLe lun. 10 sept. 2018 \u00e0 20:28, Izzy Oji notifications@github.com a \u00e9crit :\n\nClosed #290 https://github.com/kickstarter/android-oss/issues/290.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/kickstarter/android-oss/issues/290#event-1836733420,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ACGpVEPY445m0R_CR0m5qA8ckComb6cJks5uZq9IgaJpZM4VwpKZ\n.\n\n\n-- \n[image: Abdellah SELASSI on about.me]\nAbdellah SELASSI\nabout.me/selassi\n  http://about.me/selassi\n. Could you please explain why ? Thanks. ",
    "talaris": " Update \"android-oss\" CI config to 2.0 format, use \"medium+\" resource class.. @eoji seems like the system is picky about the caches, so maybe something is getting included that shouldn't. yep its a fun trick, there is also yes | some_command, yes will repeatedly send y so its nice if you need to accept multiple licenses or similar.. ",
    "dannyalright": "https://github.com/kickstarter/kickstarter/pull/9474. Should we set some time aside this sprint for visual polish (getting the spacing and type sizing right), or set it aside for a later, general, UI sweep?. does this PR also affect the sign-up screen, like iOS?. minor thing: I'd expect the Got it. to be all caps on Android.\n\nwould you, too?\nis this consistent with how we label dialog buttons elsewhere on the app?. cool. I'd prefer it to be GOT IT, without the period at the end. Should we do it here, one-off, and I'll make a card to fix others another time? Or just keep as is and do all at another time?. awesome, thank you!. @Rcureton @eoji I must have missed that when we paired! Would be great if it gets fixed (i.e. does not get clipped) before going public. looks good! No worries about white space. Good idea about reusable component in the future. \n\nCould we have the green underline remain until the user makes a selection? Or is what we have now 'we got for free'?. boom. Nice attention to detail! Looks great. Log in: if I manually type in my email address, and then go to the password field, does the 1Password autofill come up there?\nOr only in the email field?. nice! Thanks for going IN on this. yeah, I'd love to have some alpha to smooth out that disappearance. Good catch, @eoji. I think the Settings app on 27+ is a good reference for how this animation should behave, if it helps.. thanks for that nifty comparison @eoji. My understanding from pairing with @Rcureton was that it wasn't possible to get the same spring/bezier curve animation as the Settings app, and what @Rcureton built is as close as possible as we could get in a reasonable amount of time.\nIf that's not the case or things have changed, it would be sweet to get it closer. Otherwise we can ship it as-is.. just following up on this and ditto-ing what @Rcureton said: we paired on this and couldn't find a templated activity transition for the one used in the default Settings app. We're going to use the one Rashad made as our default and iterate from there.. \ud83d\udc9a. Given that we had to lose the bottom margin/inset and that we're now using API 28, I think we should slowly migrate this over to the native Snackbar pattern (with our primary and accent colors).\nLet me know if you want me to make a card for this, or if we should just add it to our design pairing @eoji.. Nice. Added here. getting there! I'd like to add some padding/inset to each tab on Discovery Home. We can do that next sweep, though. > Should all of them have the same top and bottom margin\n@eoji yes please. The 'same' value should be similar to the Create Password example below. The Material guidelines are pretty vague as to why that much vertical space\u2014I take it's for assistive text.\nEven if we don't use assistive text, (i.e. maybe Login) we should use the same spacing for visual consistency.\nI think that's what you were double-checking. Let me know if you meant something else.\n| Create Password example  | Material example |\n| ------------- | ------------- |\n|   |   |. nice!. looking good! Could you please make the horizontal gap between the icon and Sign up or login 30dp?. nice! Are the type styles in HeaderViewHolder fixed? If not, could you please set the font weight to 'regular'? It more closely resembles the Material spec.. killing it! One tweak: could you please increase the distance from the top of the screen to the header avatar?\n\nBetween top-of-header-avatar and system bar: 16dp (or 18 if you want to use our grid)\nBetween top-of-header-avatar and top-of-screen: 40dp (or 42 if you want to use our grid). thanks for fixing! I'm also noticing that the green background tint doesn't have a matching margin from the right-side of the drawer. As in it's horizontally uneven. Not important enough to hold merge though, I reckon.. my mistake\u2014didn't take into account the gutter GitHub puts in between images. 15dp please @eoji (middle screenshot). > Changed Discovery -> Settings transition to slide up.\n\nThis feels a bit jarring to me. Agreed with the sentiment, though. How about we remove the transition completely? The Drawer -> Section transition (instantaneous, in this suggestion) should occur before the drawer closes. Gmail on Android is a good example of this.. Gotcha. The Activities no-transition still feels less interruptive to me\u2014at\nleast in that GIF format.\nOn Tue, Feb 12, 2019 at 5:06 PM Izzy Oji notifications@github.com wrote:\n\nGmail is using Fragments, since we're using Activities, it's not possible\n(we're going from 1 screen with a drawer to a new one). Here's what it\nlooks like with no transition:\n[image: device-2019-02-12-170149 2019-02-12 17_06_10]\nhttps://user-images.githubusercontent.com/1289295/52671235-8333a100-2ee8-11e9-9a49-903013669ebc.gif\n\u2014\nYou are receiving this because your review was requested.\nReply to this email directly, view it on GitHub\nhttps://github.com/kickstarter/android-oss/pull/477#issuecomment-462955658,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AC9f-f4ro4MJPskZz8A77eBZ8mYzIPChks5vMzrogaJpZM4a4GTX\n.\n. \ud83d\udd25 nice! One small change: could we please use the New email string instead of Email address?. sendPromoNewsletter? Which newsletter is that?. good catch @eoji !. gotcha. I meant for that to be re-added. Sorry for the confusion. what part of the screen is this referencing?. yep. This is meant to be 18dp, grid_3. Should I add it to my own backlog or can we sneak it into an upcoming PR?. appreciate it!. My bad; I've realised that green_alpha_18 is not accessible with our primary green as text on top of it. Could we please make and use green_alpha_10 instead?. \n",
    "sleepylee": "Not to here :-) . ",
    "starkej2": "It looks like the layout has fitsSystemWindows=true applied properly, but it doesn't appear to be working properly on the Essential PH-1. Not sure if it's a problem w/ the phone or this app though. \nI tried to fix it by programmatically adding margin/padding equal to the status bar height to the top of the navigation drawer using the systemWindowInsetTop provided by the View.setOnApplyWindowInsetsListener...didn't really help.. \ud83c\udf83. ",
    "michaelsam94": "we can make the status bar transparent and follow material guidelines \n\n. ",
    "bootstraponline": "Updated.. Thanks!. ",
    "justinswart": "Hey thanks for the contribution! We're happy with our current logo \ud83d\udc4d .  Filter for supported languages. Hey as far as I can tell (but I might be missing something in the Java) is that this.currentUser.refresh() will just refresh with whatever is passed to it. So I think this will just take the currentUser and \"refresh\" it again. At which point do we make a new call to the API to fetch a fresh user?\nAlso, in this particular scenario it might not even be necessary to use RxJava because we're just imperatively lifting the token into FRP land in order to subscribe to it (with the user) and then to refresh the user with the user \ud83e\udd14 \nI think I might need a little more insight into how the lifecycle stuff works in Android but maybe we should pair on this \ud83d\udcaa . Aah got it! I missed the fetch part of that \ud83d\ude04 \nThen actually this is probably fine but couldn't it just be:\nthis.client.fetchCurrentUser()\n  .filter(accessToken != null) //pseudeocode\n  .subscribe(freshUser -> this.currentUser.refresh(freshUser))\nThink that just removes the need to lift the accessToken into RxJava and to zip it with the new user.. Oh cool, @Rcureton please show me where to find that in Fabric, I could only see the custom attributes on the event that I was logging. Also - I'm not seeing any of that stuff appearing in Firebase yet \ud83e\udd14 . ",
    "Yvrabu": "I have similar problem on mac\nFile google-services.json is missing. The Google Services Plugin cannot function without it. \n Searched Location: \n/Users/YRB/Desktop/android-oss-master/app/src/externalMin21/debug/google-services.json\n/Users/YRB/Desktop/android-oss-master/app/src/debug/externalMin21/google-services.json\n/Users/YRB/Desktop/android-oss-master/app/src/externalMin21/google-services.json\n/Users/YRB/Desktop/android-oss-master/app/src/debug/google-services.json\n/Users/YRB/Desktop/android-oss-master/app/google-services.json\n. ",
    "Scollaco": ". Could we rename this to projectList instead? It would make more sense on the context of the app.. Could you rename this for project and refTag instead of data?. Is there a way to make this line more readable? I think that using triple, first and second is a little bit too generic to understand what's going on.. I would change the name of the test to something like testToggleSendNewsLetter_isNotChecked, since now we don't differenciate the toggle status for US/Non-US users.. HELP_TYPE_HELP_CENTER is replacing HELP_TYPE_FAQ, so we wouldn't need both here.. Here I would try to avoid naming variables with a single letter and would name somehow to make it clear of what the signal is emitting (show, hide for example), like here:\nthis.viewModel.outputs.shouldShowEmptySavedView()\n      .compose(bindToLifecycle())\n      .compose(observeForUI())\n      .subscribe(show -> ViewUtils.setGone(this.emptyView, !show));. Is there a reason why this Observable breaks a line?. Same here. Maybe pair instead of p?. And here. ",
    "maracuja-juice": "Makes sense for me as a user \ud83d\udc4d . ",
    "ifbarrera": "@dannyalright @eoji yep, affects all three on iOS as well. So much text \ud83d\ude13 . I'm not sure if it might make sense to consolidate these two subscribers into one:\n.subscribe(optOut -> \n   if (optOut) {\n     this.userInput.onNext(this.userOutput.getValue().toBuilder().social(false).build())\n   } else {\n     this.hideConfirmFollowingOptOutPrompt.onNext(null)\n   }). Yeah I thought there might have been a reason you went this way. I'm ok with it, just wanted to see the thinking behind it! Thanks! \u2b50\ufe0f . ",
    "idcmsbeta": "The left side menu blank, the content of each tab is empty. . Wait .better private this project if status failure/failed @eoji . ",
    "Rcureton": "Looks great with the new change!.  Re-factored notification settings.  Notification buttons and animations ANDROID. @eoji I see what you're saying, I did pair with @dannyalright on it and he said it was good to go but we could give it another look to see if we should fix it.. Added the checks there as well!.  Private Profile in Privacy Settings.  Add Mock Data to OSS (android).  Hide Private profile from creators.  Email Update: Success.  Currency picker alert.  Currency Preferences on Project Pages. The story says that the rewards should be converted to the user's preferred currency.. I refactored the methods to show the conversion when the project currency and user currency differ. \n \n.  User can see Payment Methods screen.  Delete Payment Methods.  Toolbar Bug Fix.  Change email error on Account page.  Settings Rollout 2 Event Tracking. I'll hold off on the other stuff and only add the fabric custom event that way our work won't mix \ud83d\udc4d\ud83c\udffe. Tested and Ran successfully! \ud83d\ude80. TESTED and G2G. TESTED and G2G.  Add Music Newsletter to our settings. @dannyalright It comes up in both fields.. I verified that this works without adding the importantForAutofill so we don't need to add this. Good catch!.  Settings Currency UI slightly off from designs.  Settings bottom padding missing. @eoji I added the screenshot to the description..  Audit Settings Accessibility Android. Just for context what does this do? \ud83d\udc40. Sometimes I think it's needed but in many cases it's not. Like when we implement new features we don't need a why but when we are changing the flow or how a feature works then a why is needed. Agree/Disagree?. Hey @eoji !!\n@dannyalright and I paired on this PR this morning and he signed off on the design.. Tested this on v3 I added a new card it works!.. Yes I think it should work and update the missing files that circle couldn't find. It didn't fail the initial build and test but let's hope it makes the alpha. Alright! Thanks.  Android 8 Orientation Crash.  Change Settings > Help web views to Chrome Custom Tabs. Done!.  Pledge Activity Digest. Yes we should have the new likes row according to the design. I think the changes being reflected on web should be how we test it..  Create password. @eoji So I confirmed with @peat for this PR that we can fully deprecate Settings View since the rest of the organization isn't using it to track anything. .  Updated copy for Creator Notifications. I ran into an issue with the Italian Strings in Circle earlier. Then I read back in Slack about the translations with Italian and Chinese. I reverted the changes and they're passing in Circle now. . Ok cool I'll make the fix! Thanks. @eoji  Here's the updated screenshot.\n\n. Ok I understand better now, Thanks for the feedback!. @eoji This is the updated asset courtesy of @astroexodus \n\n.  Allow backers to add a UnionPay card in Account Settings[Android]. It just keeps the activity much cleaner and we have a direct reference to the view. View binding dramatically reduces the number of times you have to refer to view names in your code. . Do we see this being used elsewhere? If so then the name is fine but if it's just going to be used for the heartbeat animation I would name it something related to it.. Yes seeing that we're using them in many places. Good call \ud83d\ude09. For me, as long as it doesn't run the length of the screen it's good with me. What are your thoughts? . It randomly generated there somehow but I'll move it!. NL. NL. Yes I added it in this second PR I have coming to add the rest of the Newsletter switches. At the time when I started this PR Danny didn't have Games in the wireframes, so I have it in the next PR wired up to go.. See comment below.. Danny said it we're no longer showing that Newsletter. @dannyalright  Can you confirm please?\n. @dannyalright The News & Events Newsletter  . Gotcha no problem I'll add it back\n. Everything looks good completely up to you but you could also use type inference here \ud83d\ude43\n```\noverride fun showConfirmFollowingOptOutPrompt() = this.showConfirmFollowingOptOutPrompt\noverride fun user(): Observable = this.userOutput\n. Are we going to use camelCase or snake_case for our testing methods? I've been using camelCase.. I think we changed it and Danny never updated it because it was too far apart. We can circle back with him. @dannyalright . Nice use of type inference!. Nice cleanup into a style!. I think text would be good I'll make the change.. Nice use of `when`!  I see you \ud83d\udc40. Little nit but nothing big you can just remove the return type since it's a `single expression function` . Since we know that `user` can't be null do we should remove the `?`. That way the code will be much cleaner.. I think we can use a single expression function here\noverride fun exitTransition() = slideInFromLeft()\n``. > This method is called if the system has determined that you must stop execution of your job even before you've had a chance to call jobFinished(JobParameters, boolean).. I'll make a file-level function for it!. Didn't have to do Sammy like that \u2639\ufe0f. Curious but couldn't you just callthis.showStarToast()in the subscribe block alone without the lambda?  (This applies to the rest as well if true). You forgot to remove this. These strings should beval` since they're not being changed.. I removed it in a previous PR. I see you using that extension \ud83d\ude0f. This can be private. You can define this at the top of the class I think instead of a companion object because no other class is accessing this constant\n```\nconst val MINIMUM_PASSWORD_LENGTH = 6\ninterface ChangePasswordViewModel {\n```. Sounds good I'll remove it!. So it was ignoring the color when I used colorAccent so I went with TextColor. For a regular US user it won't go into that block because it's only for those in un-launched countries.. It shouldn't be null we get this value with every project that we pull in.. Have no idea at all I was actually confused about this test \ud83e\uddd0. So these tests are testing where the user is and how the currency should be displayed based on the locale.. So after some deep diving, we actually we were actually never using it because it would've shown in the projects currency. Now we actually capture it and map it to the showCurrencySymbol method where we map to the display strings we want to show the user. I just removed it. Great catch!. So for these tests it tests the user's location and based upon the location and user's preferred currency it will show the proper currency symbol. \nSo for the test above the user is in the US and if the user's preferred currency is $US or they don't have a preference it still should show as $. . Haven't used one of these in a while \ud83d\ude43. Documentation!!!!!!!. Why is the coalese(false) opposed to taking in a value?. The createCurrency method set's the config location then we use the currency object to format the currency. So if the user's location is US then currency.format(100.0f, ProjectFactory.caProject(), CurrencyCode.CAD.rawValue() should output CA$ 100 it's a Canadian project with my currency preference as Canadian Dollar but I'm in the US.. Location matters because the display of the currency like $ or US$ depends on the location of the user.. Yes isn't it? It's testing the format of the currency with the user in the US \ud83e\uddd0. Niceee!. So I confirmed with the API Team and the fx_rate should never be null.\nhttps://kickstarter.slack.com/archives/C98LKNPB3/p1540405705000100. We need this because it's defined in the CurrencyOptions Model class. If we remove it, it won't build properly but also there's many other classes that use this KSCurrency class removing it altogether would affect the other classes.. Yes because we will get this error if it's removed:\nCaused by: java.lang.IllegalStateException: Missing required properties: currencyCode\nI think later we can actually remove it once we scope out how currency should be handled in those other classes.. We going up!. What's showHeadsUpSnackbar?. Can these card values be null? . \ud83d\udc4d\ud83c\udffe.  So if createPaymentSource !=null and is not successful then set the error?. You can just do val inputs: Inputs = this. You can use type inference with these variables . Shouldn't these private fun be below the overrides?. NL. Maybe a nit but it's a loose dimen \ud83d\ude43. Curious why the toolbar layout opposed to the activity's layout?. We need a description for this \ud83e\uddd0. You love Frame layouts!. Nit but we can remove some lines here. So this is for rows?. getSymbolForRewardCurrency takes in a project and checks against the project currency and getSymbolForCurrency takes in the user's preferred currency then displays the correct symbol. They do the same thing just different parameters.. fixed!. fixed. fixed. fixed. fixed!. fixed!. Fixed!. I think the issue was that he was sending all of the default properties along with the custom event which we don't need to do because we get that from Fabric automatically. (Device, OS, etc..) . @justinswart So for us to be able to see events in Firebase we'll have to use the Firebase SDK. Right now the only thing that transfers over are the crash reports. Also I thought Fabric had a set of automatically collected properties with each events but apparently Firebase has them Firebase Automatically Collected Properties. I don't think it will be a large change for us on both platforms. What do you think?. Removed!. Killed!. So we're encoding the data we're tracking then sending it to Koala? . \ud83c\udf89. So if the project.video = null it won't put the value in the map?. What do you think about adding a method in ProjectUtils to do these calculations for hours_remaining and percent_raised?. \ud83d\udc4d\ud83c\udffe. \ud83d\udc4d\ud83c\udffe. \ud83d\udc4d\ud83c\udffe. \ud83d\udc4d\ud83c\udffe. \ud83d\udc4d\ud83c\udffe. \ud83d\udc4d\ud83c\udffe. Why the switch from Fixed to Scrollable?. This is pretty cool \ud83d\ude0f. \ud83d\udc4d\ud83c\udffe. Nice clicklistener cleanup \ud83d\ude09. \ud83c\udf89. Yes I agree we should I'll add it to the StringUtils Class.. We can remove this since we're not logging custom events anymore.. \ud83c\udf89. \u2728. \ud83d\udc4d\ud83c\udffe. Fixed!. Fixed!. ",
    "rj12info": "unable to see ui in emulator\n1st tab\n\nAll other tabs show empty except for 1st tab\n\n. oh... then how can I build with private dependencies? I just followed the instructions to run and it ran without showing the full working UI. ",
    "itayvallach": "No. On Android, the app is blank, no data at all, I cannot make any use of it. I mean to have an option like the iOS app has, to mock hardcoded data. This is from your iOS documentation:\n* To provide a mock version that serves up hard-coded data immediately, set KsApi.Secrets.isOSS = true.. ",
    "naufaladi": "Here's the Windows 10 guide for the less technical people like me:\n\n\ninstall ubuntu with this guide\n\n\nnow, clone this project, here's the guide on how to clone projects using git command.\n\n\nonce you have cloned the project into a directory (for example document\\androidproject\\kickstarter), and have created an ubuntu user, follow the steps below.\n\n\ntype \"sudo apt install make\" and press enter, enter your ubuntu account password, and enter again, wait till finish.\n\n\nafter make has been installed, type another command \"sudo apt install ruby\",  wait for ubuntu to install it, along the way it may require you to input \"Y\" (for example, \"are you sure you want to proceed? [Y/n]\" for this just enter Y and enter).\n\n\nnow, change directory to where you cloned this project (the folder where all the stuff like apps, assets, bin). you can do this by using command \"cd\", here's a guide on that.\n\n\n6.1. by the way, the default directory ubuntu starts when you open it may confuse you a bit since there are no folders or files inside it. For this, just cd backward (cd ..) twice, type \"ls\" to list out every folder/file, and your C: drive is located in the folder \"min\", from there you should know your way in.\n\n\nonce you're inside the project directory, just type \"make bootstrap\", wait it out, and if the last line is \"bootstrap success\" or something like that, you are good to go.\n\n\nnow open your android studio, and select \"open existing project\" and select your project directory. wait for gradle to finish loading, and then congrats, you can now run the app in android studio emulator.. \n\n",
    "nnekab": "@dannyalright @eoji this is how we handle on web -- i think its fine as shown in the image you shared. I get that it's little confusing because we convert the project goal and then show reward amount conversion underneath. but im fine with leaving similar to web. SO EXCITED \n\n. @eoji correct -- remove the space between the currency symbol and amount/number. This is huge -- i'm really excited for this feature. ",
    "pje": " Increase test coverage of payments stripe-elements modules. ",
    "luckyAF": "v6.11.3\n. ",
    "terminalbae": "@eoji is the best human being for doing this.. \ud83c\udf89 \ud83c\udf89 \ud83c\udf89 \ud83c\udf89 \ud83c\udf89 \ud83c\udf89 \ud83c\udf89 \ud83c\udf89 \ud83c\udf89 \ud83c\udf89 \ud83c\udf89 \ud83c\udf89 \ud83c\udf89 \ud83c\udf89 \ud83c\udf89 @eoji . @eoji \nIn reference to this, I thought we weren't capturing anything before... I'm not sure I understand the update.\n\nUser agents were previously: Mozilla/5.0 (Linux; Android 9; Pixel 2 Build/PQ1A.181205.002; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/71.0.3578.83 Mobile Safari/537.36\nThis PR updates them to look like: Kickstarter Android Mobile Variant/internalDebug Code/1812101611 Version/1.10.0\n\n. ",
    "abelsonlive": "very sick izzy!. ",
    "ekussberg": "The layout here is still broken, the hint should be positioned vertically center when the input field is empty. In your case it is shifted to the bottom.. ",
    "theginbin": "cool!. ",
    "Miha-x64": "Shouldn't this be inline? Also, this function may be called apply.. ",
    "d3xter": "I'd use Nothing as the unused type in Left and Right,\ne.g. class Left< out L >(internal val left: L) : Either()\nThis allows to create an instance of Left with val left = Either.Left(15) without specifying the right type.\nfun foo() = when {\n    1 == 1 -> Either.Left(1)\n    else -> Either.Right(Exception(\"\"))\n}\nis correctly infered as Either. ",
    "tasomaniac": "\ud83d\udc4d much simpler. Executing git like this will most probably break in windows machines. Please check. \nThat's why we used grgit in frisbee. I believe it is also more readable like this getHeadGitCommit().abbreviatedId. You may consider putting these method in another named gradle file and apply them just like apply from: 'quality.gradle' above. Just a suggestion. . ",
    "the-robear": "Great question. I originally had this as isGraphQLUri, where it just checks if the path is /graph. But, if we were to use this method in isolation, it might not be exactly what they're thinking - e.g. we might try to use isGraphQLUri without checking if it is also a kickstarter uri.\nMaybe I'm being a bit overprotective - I'm happy to change it back! And as I'm explaining it, I'm feeling that maybe I should... what do you think?. I \u2764\ufe0f TESTS. ",
    "frewsxcv": "\necho y\n\nnice. "
}