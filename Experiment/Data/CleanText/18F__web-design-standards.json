{
    "juliaelman": "Removing this from Sprint 1 and on hold for sprint planning next week.\n. Closing this, as we are shifting away from Cloud Foundry.\n. Removing this from Sprint 1 and on hold for sprint planning next week.\n. Removing this from Sprint 1 and on hold for sprint planning next week.\n. Closing this, as we are shifting away from Cloud Foundry for this project.\n. +1 usapatternlibrary.*.gov sounds great - thanks @maya!\n. @mollieru +1 I think for now we were thinking of getting something up quickly and a subdomain pretty simple/straight forward. We should definitely re-think domain names as we get further along in the project.\n. Re-opening this issue! I had originally opened it so that we could move forward with a simple subdomain to work off of our Cloud Foundry. Re-adjusting focus towards away from CF and opening back up for a larger discussion on what our url should be :raised_hands: \nThis might also be effected by the outcome of #10 too.\n. @angel @carodew @maya would love to know your thoughts on this!\n. @carodew all good points and thanks for the follow up on the email address! Added the follow issue to keep track of it's progress #7.\nI am leaning more towards making it public and would love to be able to provide another channel for folks to present us with their ideas and opinions. While we do have a lot of opinions about how we go about doing this, creating a silo of feedback does not seem like an optimal solution.\n@mollieru would love to know your thoughts on this before making any changes! Will touch base with you when you get back into town next week.\n. Thanks for the feedback team and appreciate your thoughts! <3\n@maya thanks for the reminder on the plan to open up in Sprint 3. Based on the teams feedback, I am going to close this issue and open another issue to make this repo public in the Sprint 3 milestone.\n. Hi folks! Re-opening the issue here and wanted to point out our open source policy at 18F: https://github.com/18F/open-source-policy/blob/master/policy.md\nWhile it's understandable that we wanted to keep this repo until we have something to show, I don't see the harm in making it public now.\n. @carodew :tada: \n@angel @maya @mollieru yay?\n. @mollieru :+1: this!\n. Great - thanks folks! :rocket: \n. Group email created and waiting on approval to add @mollieru + @angel to the group.\n. Approval granted! Now waiting on being granted access to implement. Moving this to Sprint 2, as it is looking more likely to be resolved by early next week.\n. Email address as been created, verified and tested! govtwidepatternlibrary@gsa.gov\n. Moving this to Sprint One after #6 discussion from the team.\n. Suggestion from @bwillman #84:\nI'm sure this is already planned, but it might be nice to include a \"how to use this if you're a ...\" [developer] or [designer], etc. and for those who are using something like this for the first time.\nI suspect those two user types come at it differently - and as a developer, I haven't really used these types of site-wide pattern libraries before.\n. @msecret awesome points and agree that release names could be confusing to folks.\nHow about something \"Eagle\" related? It's something we've discussed previously too. Also see: http://en.wikipedia.org/wiki/National_symbols_of_the_United_States\n. @carodew +1 and great idea @ericronne!\n. +1 for usa-pattern-library\n. @cew821 we do too and thanks for the endorsement! :+1: \n. Referencing this branch as a WIP for this issue: https://github.com/18F/govt-wide-patternlibrary/tree/add-sass-files\n. Fixed with #24 \n. This will be informed by #15, as well as the following initial IA wireframe here: https://github.com/18F/govt-wide-patternlibrary/issues/21#issuecomment-112095912\n. @maya +1 made those changes and merging! Thanks for the review :smile: \n. Chatted with @maya and this is GTG. :rocket: \n. Here are the v1 wireframes for us to get started on the front end work. \nNOTE There is another round of changes that are coming up with some feedback from today's overview session. Great work @carodew and @colinpmacarthur!\n\n. @mjovel thanks for your feedback! I think it will be a matter of testing, iteration and feedback to determine whether or not this approach will cause increased abandonment. //cc @carodew @colinpmacarthur @maya \n. UPDATE Here are the v2 wireframes with updates and notes from the team.\n\n. @maya added to the list! Also, we might want to piece meal out each one of these things to create smaller PR. I could definitely see each on added as something that could easily be it's own set of code and easily created as a separate PR.\n. This issue has now been completed with the final merge of #61. :tada: \n. Great work @maya! I made some comments in the code base and also have a few other points:\n1. It might be good for us change the filename of assets/core/_base.scss to something else, as it might cause confusion with the top level base.scss file. \n2. We'll need to do some additional configuration to change our syntax highlighting from rouge to prism.js. Assuming that we'd like syntax highlighting in markdown files, I think we'll need to add the following plugin to make it work https://github.com/gmurphey/jekyll-prism-plugin.\n. @maya what do you think about changing assets/_scss/core/_base.scss to assets/_scss/core/_core.scss?\n. @maya that makes sense :+1: all.scss it is!\n. @maya sure, but I would then ask to remove prism.js from this pull request and open a separate one specifically for changing our code highlighting.\n. :rocket: looks great and ready to merge!\n. @carodew right! And that is the methodology and the structure of the way the files/folders are currently structured. Glad we're on the same page! (no pun intended)\n. @colinpmacarthur thanks! YOU are the best!!!!! :rainbow: \n. @meiqimichelle right on. can you point us towards an example of another 18F project that does this?\n. Talked with @mbland and we both agreed that creating two separate files for this one data point does not make a ton of sense right now. For now, we'll plan on commenting out the that compression line (https://github.com/18F/govt-wide-patternlibrary/blob/18f-pages-staging/_config.yml#L32) and see if a more robust solution is needed in the future.\nAs for creating a way to build a source map, I am opening another issue for this and slating for the Sprint 4 milestone.\n. Thanks for opening this issue and discussion! Curious as to why this is a better solution than using the built-in syntax highlighting Jekyll comes with?\nAlso, (as mentioned here: https://github.com/18F/govt-wide-patternlibrary/pull/24#issuecomment-112432920) it looks like we'll also need to add the following plugin to make prism.js play nicely with Jekyll https://github.com/gmurphey/jekyll-prism-plugin.\n. @maya is this still something that we'd like to add in and change from the current code highlighting we have in place?\n. Closing this issue, as we moved forward with using syntax highlighting with pygments. See 5ff09cd7271c26df984670a7faba0d9387be0c10.\n. @mollieru just a few clarification questions:\n1. What are the file types you'll want uploaded?\n2. Will there be different file types for each component (e.g. PNG, EPS)\n//cc @angel too!\n. Ah! Those will most likely be fairly large files and would prefer them live somewhere outside of this repo.\nHow about we create another repo for just the artwork? We can then add a submodule in this repo for folks to be able to reference those files here, but only if needed.\n. @maya I just pushed up a fix. Please let me know if you have any other issues or have any questions!\n. @maya Great! Is this PR ready for review?\n. Looks good! One small change, but otherwise feel free to :rocket: \n. Great to get everyone's feedback, ideas and thoughts! +1 Sounds like we are all on the same page in regards to a modified BEM approach and we'll take this all into consideration as we move forward.\n. @contolini your excitement is welcome and we appreciate your feedback, thoughts and ideas! We have definitely considered many of the things you are pointing out, especially your point about wanting each individual component to be published separately. +1 thanks again!\n. @maya this was happening b/c the YAML front matter was getting through to this page. See the following comment from the Jekyll maintainers for reference: https://github.com/jekyll/jekyll/issues/3476#issuecomment-74743312 \nMost recent push should fix this and that matter should not be compiling now. :+1: \n. +1!\n. +1 agreed. Thanks for the PR!\n. Sounds good! I'll wait for you to change that to an aside. \nAlso, since we are no longer using \"Patterns\" as a top level nav item for \"Elements\" and \"Components\", let's do the same for our collections infrastructure too. We'll need to create a collection for \"Elements\" and another for \"Components\" and folders for each of these too.\n. @carodew @colinpmacarthur I whole heartedly agree and would much rather make informed decisions based off of testing. \n. Looks good!\n. Refs #21 \n. +1\n. Looks good! The only thing I found was some weirdness with the hyperlinking. It looks like the the very last hyperlinked component on the page does not hit right above the title, as the others do. See preview below:\n\n. @maya hrmm... not sure that adding more content to the last list items will fix this? It may be more ambiguous on the spacing and therefore still cause the same interaction.\nAlso, I saw that you changed the title to slug in that commit and sorry I missed that!\n. 814dfa9 fixes the issue with a temporary solve until we get the final content. Thanks @maya!\n. Fantastic work @maya!!! :fireworks: \n. @ErieMeyer thanks for the pr! It looks like you are wanting to add a new collection and the _config.yml file will need to be updated too, along with a new folder for _content pages.\n. Closing this, as it was adapted to a single .html file in #106.\n. Closing this, as it was adapted to a single .html file in #106. I also added @Scotchester comment in there too.\n. @Scotchester a pull request has been opened to integrate this into the site, but is awaiting feedback from @ErieMeyer https://github.com/18F/govt-wide-patternlibrary/pull/106\n. @colinpmacarthur let's keep open until that we have some feedback first - thanks!\n. @mollieru assigning this to you, as you've been in contact with @kategarklavs on integrating the 18F content style guide into the site. What is the current status of that work?\n. @ErieMeyer happy to help and done in #106! :boom: There are some comments and notes to address in there too.\n. @maya looks good! Do we need to change the side navigation to reflect the following ask from @carodew: https://github.com/18F/govt-wide-patternlibrary/issues/73#issuecomment-114898137\n. :shipit: \n. +1 \n. +1\n. @carodew for pulse, this is how we did the layout for mobile and can do something similar for the pattern library website too:\n\n. @carodew haha! Nice use of emoji.\nI'd like to separate out the top bar from the feedback for now and get that implemented first. Is everyone cool with me moving forward for a pull request on the top bar?\n. Fixed in #69 \n. Updated issue to be more specific as to what style guide @ErieMeyer is referring to.\n. @meiqimichelle :+1: team front end FTW! \n. This is pending #189 being resolved.\n. @bwillman great suggestion! #9 is an issue already open for this an appreciate the feedback on how we should frame the docs too. Adding these suggestions to that issue as reference.\n. +1\n. This has been resolved and has been added into the workflow.\n. +1\n. Closing this PR, as it was fixed in #91 instead.\n. Desktop\n\nMobile\n\n. Desktop\n\nMobile\n\n. @dannychapman thanks for putting this out there! First step would be to determine how many government websites currently use or plan on leveraging those frameworks. From there we'd be able to make a more informed decision on whether or not to pursue working on this. Any suggestions on how we can collect that data?\n. Completed, per merge from #112.\n. @maya thanks for getting this work completed! are we planning on incorporating the download button outlined in the wireframes in the next iteration of this page? \nSee the following screenshot FYR: https://cloud.githubusercontent.com/assets/10144074/8410509/af388820-1e4c-11e5-8f12-44180f86a764.png\n. @msecret thanks for taking a look! I placed some answers to your questions and let me know if there are any other pieces you'd like changed before we merge in.\n. @msecret I found an issue with the borders on the accordion. Looks like commit 889893f571f761f038f6ff476bf3694d0040b29e removed the border at the bottom of the <li> in the accordion. See screenshot below:\n\n. @msecret +1 thanks for the changes and feel free to merge in!\n. Looks good! There are a few comments that need feedback from @msecret. \nAlso, there is the following overlapping on Footer Slim, see movie below:\n\n. @maya I am going to defer to @angel on how she'd like to visually handle this.\n. +1\n. Nice @msecret! A few notes:\n- Be sure to update the code snippet boxes with the updated HTML, CSS and JavaScript (starting here: https://github.com/18F/govt-wide-patternlibrary/pull/114/files#diff-14cc5ce9ad55a36abdbd1b1254840ae3R58)\n- See the following comment for an issue with the borders on the accordion: https://github.com/18F/govt-wide-patternlibrary/pull/109#issuecomment-118034227\n- There is an issue with the last accordion not opening properly. See screen recording below:\n  \nAlso, in the future it might be good to either submit the pull request against the one you are enhancing or be explicit that it is downstream from another request.\n. @msecret thanks for making those fixes! A few notes:\n- It looks like you are anticipating that the user will be downloading the components.js file, therefore making the accordion function callable. AFAIK for testing purposes we are wanting each of the code snippets to be able to stand alone and that the user will merely have the ability to copy/paste the code in order to create the accordion box. While I agree with the method you've incorporated, it is making a few assumptions that our research has concluded to. Open to other ideas, but would like to stay as close to the testing plan as possible.\n- Closing PR #138, as it looks like you made the same changes in this PR instead.\n. @msecret nice! There do seem to be a few issues in records to the .button-unstyled class that are effecting the look/feel of the accordion:\n- There is a border radius on the bottom of each button that should not be there, per design spec.\n  \n- On focus, each button is highlighted yellow. This is also not outlined in the design spec and should be addressed.\n  \nMy suggestion would be that our .unstyled button should be exactly that... unstyled. :) I'll open a new issue for us to come up with a solution as a team. It would also be good to have this resolved prior to merging this PR in.\n. @msecret perfection! Merging in :rocket: \n. Closing this PR in favor for the same changes made in #114.\n. @msecret I believe that this pull request is marked off as a [WIP] by @maya and should not have been merged in yet. Opened an issue (#173) for a visual bug that now appears due to some conflicts with the accordion menu and will be submitting a pull request shortly with a fix.\n. +1\n. Fixed!\n. Closing this in favor of #175 gix. Thanks @maya!\n. Added a note about the accordion component and how this change will effect the purpose of this test component. It's probably best to hold off on these visual tweaks until after this sprint and wait till we have more user feedback to determine the best solutions.\n. @maya I think this is a separate issue outside of this particular fix. Good point that the user would not have the issue if they did not include the pattern libraries code base! I am okay with merging this in, but ask that WIP pull requests not get merged in the future please :)\nAs for your second point, let's move this discussion into a new issue! Feel free to open and add your thoughts/ideas there - thanks!\n. @maya fixed!\n. Referencing https://github.com/18F/govt-wide-patternlibrary/issues/178#issuecomment-119341943 here:\n@maya thanks for the review! I added z-index ordering of the sidenav to be the equivalent of the .main-content should solve the issue.\n@msecret want to take a quick review?\n. textarea is not responsive on smaller screens. See image below:\n\n. Looks like it got fixed here: a81354925d6a0943f7f44afb4cc1d174c2385e0a\n. Hrmmm... @maya regardless, seems to be fixed now! :+1: \n. +1 Merging this in, as it looks like my feedback was irrelevant and @msecret was resolved.\n. Fixed #186 \n. Fixed per #194 \n. Nice work @maya! A few notes and a question in regards to the index.html file viewing:\n- It looks like {{ site.base_url }} needs to be changed on the image assets\n- Do we want to include the Back to top functionality in the zip download? //cc @carodew\n- head.htmll file is not being included in the output making the page unstyled, see screenshot below:\n\n. +1 we probably don't need the \"Download Zip\" text and button here. See screenshot below.\n\n. LGTM +1\n. Added here via the new gulp workflow task by @rogeruiz! :raised_hands: \n. Looks good - thanks for the fix @maya!\n. Fixed with #202 \n. @msecret assigning the final review of this pull request to you - thanks!\n. Thanks @angel!\n@maya I updated the initial comment with the correct image.\n. Completed here: https://github.com/18F/govt-wide-patternlibrary/pull/224\n. Completed and verified by the team - nice work all! :tada: \n. Waiting on final approval\n//cc @angel @carodew @colinpmacarthur @mollieru \n. Approved from @angel via Slack - thanks team!\n. Fixed in #212 \n. Approved and ready! Nice work team :rocket: \n. @msecret fix made, although really not liking this solve. Really wanting to spend some time to modularize the accordion functionality in general and want to keep this in mind as we build out the JS infrastructure.\n. +1\n. @carodew +1 on adding the UX wireframes along with the visual design when opening issues. We can address later if it seems to get cluttered.\n. Looks good!\nWhile we did discuss how to handle external JS libraries and implementing them into the pattern library, this seems like an okay enough short term implementation of politespace. We definitely need to consider moving to something more sustainable and how we can eventually create a separate space between the pattern library website and the pattern library itself.\n. Nice work! Made a few comments.\nIs there a specific reason why we are using usa-search instead of usa-searchbar for the classes and mixins? Might be good to be more explicit and stay consistent with the naming conventions we are using.\n. @maya +1 on changing to usa-search_bar\n. +1 nice work team! \n. Closing this PR, as it looks as if #227 is an updated version to an updated fix.\n. Spoke with @blacktm and will be moving over to using make for compilation. This work will take some re-organization of our Travis CI instance, as well as some of our contributing docs. \nMoving this into Sprint 5.\n. After discussing with the team, we all agreed that this is not a top priority. We are closing this pull request for now and will re-address as needed in the future. //cc @maya @msecret @blacktm \n. @rhewitt22 thanks for you question! Building Angular UI components that are in sync with the pattern library is something we have not discussed yet as a team. It's a good suggestion and will be adding it into our workflow to take into consideration for future development :+1: \n. +1\n. LGTM\n. @maya yup! @msecret added a note in the comment and added a note to the Trello card here: https://trello.com/c/0tokNtJF/200-password-reset-block\nWanted to go ahead and move forward with this initial stage of work :)\n. LGTM!\n. See screenshot below for reference.\n\n. +1\n. Fixed via #250 \n. Referencing https://github.com/18F/govt-wide-patternlibrary/issues/87 for background ideas and feedback.\n. Moving this outside of sprint, as there are some conversations on what is the best direction to go. #271 is adding a more simple date field input for now while we determine what direction to go for the full date picker option.\n. @maya cool. Removing this issue from the sprint, but am going to keep it open for future development.\n. Switching assignee from @blacktm to @maya, who has begun the work here: https://github.com/18F/govt-wide-patternlibrary/pull/259\n. Pending final approval from @angel and/or @mollieru.\n. LGTM!\n. +1\n. @angel @mollieru can this be closed or are there outstanding questions?\n. Closing issue, as feedback has been completed and the work is in progress. \n. @angel @mollieru can this be closed or are there outstanding questions?\n. Closing issue, as feedback has been completed and the work is in progress.\n. Looks good! There are some issues with the validation (see https://github.com/18F/govt-wide-patternlibrary/pull/264#discussion_r36466377) and movie below:\n\n. @carodew @colinpmacarthur thoughts on https://github.com/18F/govt-wide-patternlibrary/pull/264#issuecomment-128516091 ?\n. Cool - @msecret does that sound okay to you or do you need further clarification?\n. :+1: nice work!\n. LGTM; but needs a merge conflict fix first.\nAlso, is there a rationale behind why we are using *-screen ? Are we planning on using *-print sometime or...?\n. @maya cool! Not sure it's necessary to have screen, as there is nothing else it would be. I also don't see it as a blocker from merging in too.\n:ship: \n. LGTM\n. +1\n. Looks good - thanks!\n. @carodew @maya would one of you mind testing out some video recording of this interaction? Using either with an desktop emulator or a video camera to display what you mean by \"weirdness\" :)\n. @carodew the password reset form has been through two rounds of sprints and would rather @angel and @msecret discuss that height and margin, rather than creating another mock up - thanks!\n. Fixed in #282 \n. :+1: from me and @nickbristow \n. @jeremiak looks good! Merging this in and we'll be updating the code base with remove the current prefix values - THANK YOU!\n. @maya changed 7b54681\nGoing to go ahead and merge in - thanks all!\n. Received approved updated designs (v3) on 08/18/2015. Updating original comment on this issue to include this new design, which is primarily adding a bordered accordion option.\n. Approved and completed: https://trello.com/c/84fJX0Mf/390-v2-tables\n. @maya updates made and thank you for your (as always) helpful review! Let me know if it looks ok and/or if you have any other changes.\n. @maya added red border here bd5fac20bc025e27101f61a7da2322adf93d11dc\n. @maya completed here 7785d16\n. @maya yup! This work is currently blocked and is awaiting final designs //cc @angel @carodew \nSee https://trello.com/c/SzcgRNlR/388-v2-accordions for more info.\n. @maya @msecret this pull request has been updated to add in the bordered accordion option. Not 100% in agreement with the approach, but it is inline with the current *-bordered naming convention as tables. Let me know what you all think and/or if there are any changes!\n. This looks good to me!\n@maya any other changes?\n. Talked with @maya and here is the work that needs to be completed before this PR can be reviewed:\n- [x] Homepage artwork from @angel \n- [x] Bug on the buttons #313 \n- [ ] Icons and arrows need to be added to the buttons\n. +1\n. +1\n. @maya no worries! Closing this PR in favor of #319. Feel free to review and merge in :+1: \n. @maya looks good! Why are we using both usa and usfwds in our naming conventions for class names? Seems cleaner to choose just one and would lean towards solely using usfwds.\n. @maya changing to usfwds makes the most branding sense to me and would recommend sticking in that wheelhouse. \nOn that note, if we decide to go this route we'd want to change all of the usa naming conventions to use usfwds instead. It doesn't make a lot of sense to separate out the way we name classes for the design standards website and the design standards themselves. Users will be most interested in the code we provide and not as much on the code that we use for the site itself.\n. @carodew @maya YES! Agreed on all fronts and vote taking out usfwds completely. Once that is completed, this PR it good to go.\n. +1\n. @maya sadly, no. I believe this is b/c of the way the build process is setup and how Travis CI is running it. My recommendation would be to merge this in and then remove celluloid specificity.\n. On hold until WDS 2.0 roadmap is completed.\n. Possible solve found here: http://stackoverflow.com/questions/3773430/remove-outline-from-select-box-in-ff\n. @lmarkzon great question and apologies for the confusion!\nIt depends on what you are trying to do. If you are only wanting to build the site itself, just run gulp website:build. To be able to view the compiled site locally, run gulp website:serve which is what you will use to view any changes you make. It also watches as you make changes/save files and re-compiles the site when that happens. \n. @lmarkzon no worries and happy to answer questions anytime! \ud83d\ude04 \ngulp build builds the distribution directory.\ngulp website:build builds the Jekyll website and compiles the assets needed for the site.\n. Issue resolved via #903, see screenshots below for verification.\n\n\n. Closing, as it's a duplicate of #347 \n. This will be solved via an updated layout that @carodew and @ericadeahl have completed. \nLeaving open until that new layout is implemented - thanks!\n. \"View on GitHub\" link appears when sidenav is open on mobile view. See screenshot below:\n\n. Fixed in #1214 \n. On hold until WDS 2.0 roadmap is completed.\n. Closing this issues, as we now have page templates in production \ud83c\udf89 \nSee https://standards.usa.gov/page-templates/\n. @paultag we now have page templates where folks can view some example html: https://standards.usa.gov/page-templates/\nWe also recently updated our documentation to clearly outline how to link the Standards assets into your project: \nDownload method\n'npm' install method\nClosing this issue, but feel free to open a new one if there are other examples that might be helpful to you!\n. Agreeing with @maya.\n@wslack @awfrancisco closing this in favor for opening it in https://github.com/18F/intake.\n. @nickbristow thank you for confirming and to @StraightfaceStudios for bringing this to our attention! We'll be sure to add this into our workflow processes and make any adjustments accordingly.\n. While the WDS are currently installable using the npm command, the final step is adding the actual package to the registry. Issue pending closing until that work is completed.\n. Completed in #1156 \n. This will be solved via an updated layout that @carodew and @ericadeahl have completed.\nLeaving open until that new layout is implemented - thanks!\n. Adding a note about a possible template we can leverage for adding LICENSE information when incorporating the WDS into one's project:\nFrom @brittag:\n\nWhile chatting with @coreycaitlin about updating the LICENSE file for the 18F website, we realized that since the site repository includes Web Design Standards files that have a mix of license statuses, the LICENSE file should state that: https://github.com/18F/18f.gsa.gov/blob/dev/LICENSE.md. This may be helpful as a base for a recommended LICENSE template for projects that use the standards\n. Done here https://github.com/18F/web-design-standards/pull/1691. @brittag no problem! I also added the CONTRIBUTING.md file too, since it is referenced a few times in the README.md.. @IanLee1521 thank you for your contribution and helping us move forward for the work on #818! We appreciate it.\n\nClosing this pull request for now and will take a look again once we surface some more findings from the research outlined in the above comments.\n. On hold until WDS 2.0 roadmap is completed.\n. Putting this issue on hold for the time being, while our research team digs in to see overall usage. See Trello card below.\nhttps://trello.com/c/BRjAt3aT/19-is-ie8-still-in-heavy-use-at-libraries-senior-centers-and-other-public-computer-labs-and-do-we-have-an-obligation-to-support-it-\n. Thank you @fureigh for creating the Drupal theme! Closing this issue and encourage folks to follow along here: https://github.com/18F/web-design-standards-drupal\n. @alex thanks for opening this issue! We have updated our README.md file to include \"Getting Started\" instructions and information on how to install via npm. \nAs for CDV hosting, we've discussed some type of functionality implementing and are working through some possible options. See this comment for more info (and you love to hear your thoughts on security on this too!): https://github.com/18F/web-design-standards/pull/1100#issuecomment-207456638\nClosing this issue, as the primary requested functionality has been fulfilled.\n. Refs https://github.com/18F/web-design-standards/issues/1342\n. @maya added a new wiki page with this list here: https://github.com/18F/web-design-standards/wiki/Websites-that-use-the-Draft-U.S.-Web-Design-Standards\nSince we have not had a lot of activity on this issue, \ud83d\udc4d  to close in favor for the wiki page?\n. Looks good and thanks for the contribution @jeremiak! A few things I am noting:\n- Please add yourself to the contributors list in the package.json file! :smile: \n- Please add documentation for users to follow on how this new method of compiling works. I think the following file would be a great place to add it: https://github.com/18F/web-design-standards/#getting-started\n- I received the following warning after running npm install:\nnpm WARN deprecated lodash@1.0.2: lodash@<3.0.0 is no longer maintained. Upgrade to lodash@^3.0.0.\nNoting here for reference more than anything, but wanted to just note it for now. I don't see this as a blocker for merging in. Maybe add lodash 3.10.1 to the list to avoid any confusion to users and/or this error form appearing. \n- This pull request bumps the release to 0.8.3. Not entirely sure what categorizes a release bump and look to @maya for her thoughts on this.\n. @maya agreed on being a v0.9.0 release, but not sure we'd want to jump to that without hitting some of other bugs first. Might be good to create a release branch that this merges into instead of merging into 18f-page-staging //cc @jeremiak \n@jpyuda what are some other priority bug fixes that you think need to be completed before the v0.9.0 feature release?\n. @maya @jeremiak I went ahead and made that update to package.json :+1: \nI also created a v0.9.x branch (https://github.com/18F/web-design-standards/tree/v0.9.x) and merged these changes locally into that branch, rather than have Jeremia submit a new pull request. I'll be adding a tag for the v0.9.x release and will look to the core team to help build out a road map to this release. \nI've also created the following tag to point any updates to that are targeted for this release: https://github.com/18F/web-design-standards/releases/tag/v0.9\nIn regards to closing #767, I think this is part of the solution and that we'll want to add this as an installable package on npm before officially closing.\nClosing this pull request and thanks again @jeremiak for your contribution! :tada: \n. Fixed via https://github.com/18F/web-design-standards-assets/pull/20 and https://github.com/18F/web-design-standards-assets/pull/25\n. Looks good! Added note above about IE versioning, but otherwise looks good to me.\n. @maya :+1: merge away!\n. Placing this into the backlog until rebased.\n. Closing this in favor of the solve in PR #1098 \n. @maya please feel free to review #1098 and add any feedback. Discussed with Marco and the goal of those two pull requests are pretty similar. If you decide to review it, please feel free to assign yourself to that pull request - thank you! <3\n. @maya you are correct! These lines can be removed and are already part of the grid.\n@BrianDiggs thank you for your contribution and thoughts around making the Draft Web Design Standards even better! :rocket: \n. :+1: let's do it!\n. @rogeruiz :hand: happy to help!\n. @rogeruiz thanks for your review! There should not be any changes to the README.md installation/local usage workflow, as we now have the source pointing to the /docs folder. See here: https://github.com/18F/web-design-standards/pull/978/files#diff-aeb42283af8ef8e9da40ededd3ae2ab2R7\nDid some testing, but let me know if you have any specific errors or issues you are seeing as you build locally! :rocket: \n. @rogeruiz taking a second look and while the build is the same, there are some docs that DID need updating in response to where to find all the things! Those should be updated now.\n. @rogeruiz thanks for the feedback! The build is now fixed after updating the .travis.yml to remove the build via the ./go script. @mbland is working on a solve here >> https://github.com/18F/go_script/issues/16\nI've also updated the repo to only hold a src/ directory, as I see the dist/ directory coming into play once your gulpification of the repo is in place.\n. Just putting a note here that the build is now fixed and was due to breakage from the scripts for the Travis build. Issue has been opened here: https://github.com/18F/go_script/issues/16\n. LGTM! :+1: \n. @maya @msecret would love to know your thoughts before merging in, per Slack discussion.\n. :100: let's also plan on updating the docs and include a link to these new templates too! https://github.com/18F/web-design-standards/blob/18f-pages-staging/CONTRIBUTING.md#submitting-an-issue\n. Nice! I can see this being very useful, but we should definitely do some user research/testing of our contributors.\n. Looks good! Could we add the :compressed flag to the command and rename the css file output to uswds.min.css?\n. This also will fix this issue: https://github.com/18F/web-design-standards/issues/190\n. Brilliant! LGTM :rocket: \n. @maya is this still a WIP or is it ready for review?\n. LGTM after testing! :+1: \nStill would be good to get @msecret final sign off before merging/closing. What say you? :smile: \n. @rogeruiz maybe one more thing to add to the checklist:\n- [x] Update the docs to use the minified versions styleguide CSS and JS files.\n. Closing in favor of #1035 \n. @arielkennan thank you for your comment and making us aware of this. I am going to add this to our upcoming sprint planning. We appreciate your patience and support!. LGTM! :rocket: \n. WFM - thanks!\n. Removing from v0.9.0 release, as there are questions about whether or not we should actually change this verbiage for the Standards Website or not. While the team did vote and agree to these new terms when speaking about the standards, there was some confusion once implemented.\n@carodew @jpyuda per Slack discussion, should we move forward with these changes and build user research around these copy updates?\n. @rogeruiz is this ready to be merged in?\n. @daderonan thank you for your issue! \nAs @msecret mentioned, we encourage good practice of HTTPS and security measures. However, implementing a validation system is something that is not in scope of the overall WDS project.\n. Moving to the backlog for now until it is rebased.\n. LGTM :+1: :rocket: \n. @kategarklavs or @rogeruiz okay to assign to either of you? Moving to the backlog for now.\n. @joshbruce following up on this pull request. Is there anything else that you need from us to incorporate the changes @kategarklavs mentions here?\n. @noonkay thanks for opening this issue! Did you implement the Standards using npm, the downloadable zip file or with https://github.com/department-of-veterans-affairs/django-designstandards?\n. As mentioned here, we're going to aim for a more wholistic approach.\nRefs #860 \n. :+1: thanks for your contribution! :us: \n. Thank you everyone for you enthusiasm for the Draft USWDS! \nPer @jpyuda comment here, we are not looking at officially supporting a CDNJS version at this time.\n. @joshbruce thank you very much for your continued support and contribution to the Standards!\nWe're going to be taking a wholistic approach to how we are refactoring the form elements and are noting this inconsistency as part of that work. Closing this issue for now, but referencing for future consideration.\nRefs #860 \n. Thanks to everyone for weighing in on this and especially to @jbrucegsa for your contribution! :us: \nOverall, I don't think we can make assumptions on what our dev community wants or needs in regards to how we recommend implementations of a dynamic codebase without the user research backing. I agree with @maya and am going to merge her pull request that removes the [ ] from the code examples. If we find our community explicitly asking for this request, and in need of an example, we will review again at that time.\n. LGTM! \nRefs https://github.com/18F/web-design-standards/pull/1116#issuecomment-210045905\n. @jhfrench we've made some updates to the organization and installation instructions on the 18f-pages-staging branch. Try checking that out and see if you are still having installation issues.\nWe're going to close this issue for now, but please feel free to open another issue if you are still having installation problems. The goal is to make this process as painless as possible and your feedback is very valuable in refining these steps!\n. LGTM \ud83d\udc4d thanks for hoping in and making this fix @msecret!\n. Troubleshooting page added and included a solve for this particular issue to it \ud83c\udf89 \nhttps://github.com/18F/web-design-standards/wiki/Troubleshooting\n. This issue seems to be fixed with the re-config done in #1164 (removal of dist/). Tested locally and everything checks out.\n@joshbruce going to close for now, but please feel free to re-open if the issue persists.\n. Hi @dalfaro1 and thank you for your questions! \n1) Please see our Product Roadmap for future development. \n2) The code base for the left navigation of standards.usa.gov can be found here: https://github.com/18F/web-design-standards/blob/18f-pages-staging/docs/_includes/sidenav.html\n. @madmanlear thank you again for your contribution! We've made some updates recently and it looks like  we are needing you to do another rebase. Please let us know if you need any help. We really appreciate your contribution to the Standards!\n. @bradnunnally @kategarklavs @maya @rogeruiz is this ready to be merged in?\n. Hello @dalfaro1! \nWe currently do not have a specific UI component for a left side nav. However, please feel free to checkout our implementation of the left side nav on the website. You can find the code that makes this side nav work in the following locations:\n- https://github.com/18F/web-design-standards/blob/18f-pages-staging/docs/includes/sidenav.html\n- https://github.com/18F/web-design-standards/blob/18f-pages-staging/docs/assets/js/styleguide.js\n. Ref https://github.com/18F/web-design-standards/issues/770\n. LGTM. Thanks @cew821!\n. Refs https://github.com/18F/web-design-standards/issues/1342\n. @msecret assigning to you in reference to the work you are doing here: https://github.com/18F/web-design-standards/pull/1164\n. Work completed here #1164.\n. Nice work and good start! A few notes from my initial pass:\n- The following files need updates on where users can now download the compiled version of the standards:\n  - .github/CONTRIBUTING.md\n  - /docs/pages/getting-started.html\n- If I am understanding this correctly, we are using the dist/ directory as a .tmp dir. If so, let's maybe move towards that pathway of the tmp holding tank to help build out what we need. It looks like we have a task started for that in config/gulp/release.js.\n- There was an issue with image paths when building the site locally. I tested out updating the make-images-dir locally and I _think this may resolve the issue.\n//cc @rogeruiz would be great to get your \ud83d\udc40  on this too!\n. @rogeruiz thanks for your thoughts on the directory structure! I spoke with @msecret about this to get a better understanding of the intended goals are for this pull request. Here are some of the answers:\n1) The zip file creation is still going to be a manual process.\n2) The /dist folder will likely have it's assets copied around.\n3) The files included in the npm package would stay the same.\nAlso, thanks all for touching base this morning too! Sounds like we are moving forward, adding some documentation via another PR and working on some fixes.\n. \ud83c\udf89 nice catch @yozlet!\n. Done \ud83d\ude80 \n. Thanks @msecret! Ran the site locally and it looks like the homepage might not be pulling in normalize.scss, as there is a white border showing up around the edge. This does not occur on the interior pages of the Standards.\nScreenshot below from Chrome. Also seeing in the latest versions of FF/Safari:\n\n. After discussing with the WDS core dev team, we're deciding to hold off from moving forward with this for the time being. Due to the way Bourbon and Bourbon Neat are consumed by the WDS, we're needing to re-think how we would approach this solve.\n. @brendansudol thank you for submitting this issue! \ud83c\udf89  We'd love your help on the issue once it has been reviewed and accepted. \nAlso, check out our component maturity scale and workflow wiki pages to learn more about our processes. \n. Closing this in favor of https://github.com/18F/web-design-standards-docs/issues/102. Added stylelint here and closing this issue: https://github.com/18F/web-design-standards/pull/1419. hey @rogeruiz! @kategarklavs and I are going to pair on this later this evening. Hoping to help figure out a better way to do content reviews in PR! \ud83d\ude04  \ud83c\udf89 \n. @rogeruiz @yozlet would be great to have y'alls \ud83d\udc40  on this pull request! We might be able to compress some things to shorten the time for the CI to run (2:50 minutes), but am thinking it might be good to merge this in for now and we work on shortening that time in future PR.\nJust a reminder that this is downstream from #1195 \n. @yozlet thanks for the inquiry! This will not remove us publishing to 18F pages, as that is determined by what branches we have in place in the repo. See the docs for 18F pages for more info.\nAFAIK, this file was only in place to create the /designstandards route as the baseurl for the standards website. Assuming was because the original url was playbook.cio.gov/designstandards/. Going to revert this back for now, as I have a feeling like this might cause issues with our redirects.\n. @rogeruiz just checked aadf2dae204d2a95c46a0f8a8781ca5cf5afa083 and looks \ud83d\udc4d ! Makes sense to move the Ethnio script into the analytics include.\n. LGTM - thanks Yoz!\n. @maya is there a reason why a new class name was added instead of incorporating this change into this line? https://github.com/18F/web-design-standards/blob/017fe1d45461b90b7b1322e532e4fde8628eeadf/docs/doc_assets/css/styleguide.scss#L817 \n. LGTM - thanks Maya!\n. Fixed in #1224 \n. LGTM\nThanks for knocking this out so quickly @hbillings! \ud83c\udf89 \n. LGTM!\n. @mollieru thanks for opening this issue! Going to close for now per @bradnunnally response.\n. From @ericadeahl:\n\nI believe the components are all labeled correctly now (there were two different versions of this and we decided to go with the one where most things are in alpha)\n\n@bradnunnally want to make sure to get your sign-off too. Should all of the UI components be marked off as alpha for this release or use what is based in the WDS UX Audit doc?\n. \ud83c\udf89 \n. Branch has been create here and url is here.\nClosing this, as #1254 is more for automation and the initial work is completed.\n. Looks good from a coding POV! Added a note after testing locally.\n. It works! \ud83c\udf89 \n. LGTM\n. LGTM \ud83d\ude80 \n. \ud83d\ude80 \n. @terminaltraces fantastic! We welcome your contribution \ud83d\ude04 \n. Fixed in #1271 \n. LGTM - thank you @terminaltraces!\n. Fixed via #1273  - thanks @kamxhmartin!\n. Perfect - thank you for your contribution!\n. Tasks [pt 1] that were assigned to me are completed. Made one note directly to the codebase, along with a few more below.\n1) We should probably do another rebase with the latest state of staging. I'll ping you about pairing on that.\n2) New homepage content: Looks like the text is not displaying to full width on the new homepage, see Screenshot A below. It might be a limitation of our grid combined with the new updates, but wanted to point it out just in case.\n3) Top nav: \"Download code and design files\" and \"View on Github\" buttons not flush aligned at 1096px+ in Firefox, see Screenshot B\n4) Footer: The layout in the design files differs from the implementation, see Screenshots C1 and C2.\nScreenshot A\n\nScreenshot B\n\nScreenshot C1 (Design files)\n\nScreenshot C2 (Implementation)\n\n. NOTE: The sticky nav removal for mobile view is not to remove the sticky nav entirely. The fix in this pull request refers to removing the stickyness of the site-nav-secondary on scroll. You can see the solve in this commit: https://github.com/18F/web-design-standards/pull/1274/commits/05430378ed976fd4e516146c963960eb8b05e40d\n. The following UI Components need be changed from Alpha to Beta:\n- [ ] Typesetting\n- [ ] Lists\n- [ ] Text accessibility\n- [ ] Labels\n- [ ] Tables\n- [ ] Alerts\n- [ ] Text inputs and area\n- [ ] Checkboxes\n- [ ] Radio buttons\n- [ ] Search bar\n. @ericadeahl thanks! The doc I was pointed to for reference had them labeled differently. thanks for clarifying what they should be for this release.\n. @maya thank you! Looks like I was given the wrong direction and appreciate the clarification \ud83c\udf89 \n. @maya checked all of the tasks assigned to me and everything looks \ud83d\udc4d  - nice work!\n. LGTM - thank you @stephmarx!\n. @elarenee thank you for your contribution! We are closing this pull request, but the issue is still open. Please feel free to open a new pull request with the updates outlined here https://github.com/18F/web-design-standards/pull/1276#issuecomment-227181567\n. Thanks for the pull request @lmarkzon! Would you mind adding a screenshot with an example of this solve?\n. @lmarkzon no apologies needed and thank you for your contribution! \ud83d\ude04 \n. @iluvtatortots thank you for opening this pull request with the updates to the CONTRIBUTING.md file! \n@kategarklavs would you mind taking a look at the copy? This pull request adds additional instructions for those trying the get the Standards Website up and running on their local machine\n//cc @bradnunnally \n. @antislice thank you for submitting this issue! We separated out the website into it's own repo and updated our documentation to outline what needs to be installed on you system in order to get the site to run locally.\nIn terms of adding a reference Mac OS command line tools, we are trying to be as OS agnostic as possible when it comes to our documentation. However, we are always happy to answer any/all questions you may have.\n. The PR has now been merged. See new docs updated here: https://github.com/18F/web-design-standards-docs#running-locally\nHope this is more helpful for getting the website up and running on their local machines! \u2764\ufe0f  \ud83c\uddfa\ud83c\uddf8 \n. LGTM!\n. @patrickm02L thanks for opening this issue! We are currently preparing for release v0.9.5 and are updating our docs accordingly. Seems that we need to re-think this workflow to help avoid future confusion. \nI'll be closing this issue and we will address it in #1304 - thanks again for bringing this to our attention!\n. Release flow has been updated: https://github.com/18F/web-design-standards/wiki/Release-process\nTesting with v0.9.6\n. Closing. Release v0.9.6 with no issues arising with confusion on the links in the docs.\n. This issue is based off of the premise that code samples are generated with JS. The team is determining whether or not a Jekyll plugin makes sense as the best path forward.\n. \ud83d\ude80 \n. @ericadeahl thanks for the mock-up! Would it be possible to change the side nav to either show a list of all the release numbers or change to 0.9.x? \n. @afeld thanks for your comments and helping us determine a clear path forward for implementation. I remember seeing jekyll-get when doing some initial research on simple approaches. We could also use github-metadata too, but like the idea of only calling for the info that we need from the Github API instead of :all-the-things:.\nAs for the question around having our release notes on the WDS website, I defer to @bradnunnally and @ericadeahl to help make that distinction. IMHO, it does not hurt (and probably helps) us to have information about changes to the code base in various areas for folks to reference.\n. @ericadeahl that works!\n. @bradnunnally this could use your designer eye to make sure this is \ud83d\udc4d as we add more info to the \"Getting Started\" page (#1683).. https://github.com/18F/web-design-standards/issues/1686 is a sub-task for this issue.. @shawnbot already started that branch and it is automated ;) Stay tuned!\n@bradnunnally YAY! Would be great to get your thoughts/ideas/design brain on how we should link to the different release numbers. I keep moving forward without that nailed down, but wanted to make sure to get on your radar.. The initial layout/functionality is now on staging. Leaving this open until this page is added to the navigation, which is part of the work being done here.. Thank you @bradnunnally!. Navigation has been added to the subnav via https://github.com/18F/web-design-standards-docs/pull/116\nAlso, I left the release notes version #'s in the subnav for folks to reference @ericadeahl (\u2764\ufe0f ) had mentioned leaving those off, but it might be okay to leave in. Thought it might be something we can test and see how best to move forward!. LGTM - I'll update the 0.9.6 release pull request with this work! ^5\n. Thank you for your interest and contributing to the Draft U.S. Web Design Standards! We have received notification of your contribution and are currently triaging the work.\n. Thank you for your interest and contributing to the Draft U.S. Web Design Standards! We have received notification of your contribution and are currently triaging the work.\n. @shashashasha thank you for your contribution to the Draft U.S. Web Design Standards! We have split the docs/website and the package code base into two separate repos. Please feel free to open this PR over at https://github.com/18F/web-design-standards-docs/ \n. Closing this issue, since we now have a main top nav component as part of the headers work: https://standards.usa.gov/headers/\n\ud83c\udf89 \n. @maya agreed! However, this also removes the Something else: Please add a descriptive title bullet point and folks adding a [Enter some info] in the title. I am A+ for this improvement and for letting the labels do their job. Just want to make sure that you are cool with this prior to merging in.\n. \ud83d\ude80 \n. Thank you for your interest and contributing to the Draft U.S. Web Design Standards! We have received notification of your contribution and are currently triaging the work.\n. Thank you for your interest and contributing to the Draft U.S. Web Design Standards! We have received notification of your contribution and are currently triaging the work.\n. Referencing #1343 so that we can track the work that happens between these two issues, as they possibly relate with one another.\n. New issues have been created to make the tasks to complete this issue more granular.\n@maya @msecret as discussed in sprint planning, I have assigned you both to all the issues. Please feel free to discuss amongst yourselves on what you feel comfortable doing and what sprint it should belong in - thank you!\n. The groundwork has been completed for the new docs/website repo here: https://github.com/18F/web-design-standards-docs\nI have added a disclaimer in the README.md stating referencing back to this issue.\n. Technical documentation updated here: https://github.com/18F/web-design-standards/pull/1420\n. Thank you for your interest and contributing to the Draft U.S. Web Design Standards! We have received notification of your contribution and are currently triaging the work.\n. Thank you for your interest and contributing to the Draft U.S. Web Design Standards! We have received notification of your contribution and are currently triaging the work.\n. Referencing #1343 so that we can track the work that happens between these two issues, as they possibly relate with one another.\n. #1357 has been merged in, however I am not entirely clear that it satisfies everything outlined this issue. jQuery is still bundled into the Standards package due to our usage of Politespace which requires it as a dependency.\nGoing to leave open for now and look to @rogeruiz and @yozlet to close with their official \ud83d\udc4d \n. Referencing #1343 so that we can track the work that happens between these two issues, as they possibly relate with one another.\n. Nice work! Here is where I saw some errors lurking:\nAll browsers - /footers/\nuswds.js\nReferenceError: _ is not defined\nInternet Explorer - ALL\nUnmatched end tag\naccordions 465, 385\naccordions 496, 5\nInternet Explorer 10, 9\naccordions.js 11,1\nSCRIPT438: OBJECT DOESN'T SUPPORT PROPERTY OR METHOD 'PREVENTDEFAULT'\n. @rogeruiz agreed that it is out of scope for this PR and have removed from the list.\n. @yozlet perfect - nice work folks! \ud83d\ude80 \n. Looks good! I added a few notes in regards to how we move forward with the deprecated code for the accordion button styles. Just want to get some thoughts around it, but I don't see it as something that blocks merging this in.\n. @maya nice work! A few notes here and some in the code:\n1) The code samples are current not displaying correctly for all of the header examples.\n2) As discussed earlier today, let's go ahead and add the header content in another PR that branches off of add-headers and submit it back against it. I'd rather not merge this in without the content, as that could possibly slow down a release if not merged in in a timely manner.\n3) Tested in IE and came across some breakage on the basic headers and basic header mega menu in IE 9 [1]. The extended header styles are broken in all versions of IE [2]. \nThere are also now some merge conflicts due to the jQuery removal and more than happy to help resolve those for you.\n[1]\n\n[2] \n\n. Reached out to @jessieay and we decided to close this pull request without merge. Let's plan on re-opening if the issue arises again, otherwise folks are welcome to override these styles with a custom stylesheet.. Talked with @shawnbot and the above looks like a good approach. It's also a move towards making the code base for each component into smaller chunks that can easily fit together. A few things to think about:\n1. What do we do in instances where there is not a 1:1 relationship between roles or widgets and behaviors?\n2. What approach do we take in mapping out how these functions interact with one another throughout the application? \nIt's a good direction forward, but something we should document and plan out a bit more before implementing (something I think @shawnbot is up for, too! \ud83c\udf89 ).\n@maya @msecret @rogeruiz @yozlet would love to know y'alls thoughts about this too!\n. > finding a way to describe the framework in a less W3C-ish or formally object-oriented way for people who don't speak those languages.\nAgreed. I have a feeling that some of the upcoming research will help us inform how best to approach the content around implementation. //cc @donjo \nAnd if you are saying what I am thinking, I am all for the use of scuttle for mapping out these functions. \ud83d\udc1a \ud83d\udc26 \n. Talked with @kategarklavs and this for after the repo split, https://github.com/18F/web-design-standards/issues/1343.\n. The current documentation looks \ud83d\udc4c  to me and below are the dependencies for the Standards package, FYR. As mentioned in our meeting earlier today, I'll be taking a first pass at the docs (from a technical standpoint) as we split up the repos.\nBourbon\nNeat\nNormalize\nPolitespace\njQuery**\nWe also include the following dependencies for our website to work in all browsers. They are NOT required in our package, but want to mention them as recommendations for folks to include on their sites who require various browser support:\n- REM unit polyfill\n- Respond\n- selectivizr\n** This is a WIP and will most likely be removed once the split is completed. Leaving in for now, but should be removed once the PR is completed.\n. @msecret good question! As far as I can tell, this reference in the utility only breaks the sub navigation on the website. When debugging, I found that it is where the bug was introduced into the websites code base.\nHowever, being specific here does make sense and am closing this in favor of #1374.\n. LGTM \ud83d\ude80  - thanks @maya!\nMaking a note that this is being merged into our release branch so that we can continue with the 0.11.0 release.\n. @msecret would you mind adding a screenshot for @ericadeahl to review?\n. Making a note here... check out this comment on how we are moving forward in regards to Politespace removal.. @shawnbot just reviewed this work on #1419 and this looks \ud83d\udc4c to me!\n. Perfect - thank you! \ud83c\udf89 \n. @shawnbot happy to help! Added a few tasks to AC and let me know if those make sense or not.\n. Tested locally using npm link and verified correct file paths using a test Jekyll site (locally).\n. @kategarklavs yes! Would love your help in thinking about how to construct the content for both the website and the Standards repo. Going to slot some time to touch base with you about that this week! <3\n. @jameshupp adding you to this issue too, as you have already started this work here: https://github.com/18F/web-design-standards/pull/1420 \ud83c\udf89 \n. @shawnbot ah! I did not see your first point prior to adding it to the AC here: https://github.com/18F/web-design-standards/issues/1396#issue-171691844\nAlso, I am \ud83d\udc4d  on #1417 as being part of the work for this, but look to @Journerdism on whether or not it's added into this sprint. It would be great to have and would love to see this get in.\n. @shawnbot I tackled the stand alone testing here, which should free you up to implement #2. ^5\n. This can be closed once this is merged in: https://github.com/18F/web-design-standards-docs/pull/33\n. @maya I \ud83d\udc4d  this at first because I think I know where you are heading, but am not entirely clear what your thoughts are as an alternative. Can you explain your thoughts a bit more?\n. @maya in regards to this question:\n\nOne question I have is: should we remove the partials (dropdown, mega menu, secondary nav) from the src/html directory?\n. Can we add a <code> around the points in the docs that reference code? e.g. role=banner\n. @kategarklavs or @jameshupp might be good to get your \ud83d\udc40  on this one last time \ud83d\udc4d \n. @maya looks like you already made those fixes ^5! \n. @maya cool - I'll wait to get the green light from those folks before merging in.\n. After discussing with the core dev team we determined that the initial merging in of the headers. We have two pull requests coming in to complete the work for our next release.\n. @maya left some notes and took a quick look at the HTML/CSS and looks GTG. \ud83d\ude80 \n. @maya in reference to https://github.com/18F/web-design-standards/pull/1418#issuecomment-245671798\n\nThis flickering occurs do to the aria-hidden attr being added dynamically with JS and the \"hiding\" styles being added only when that attribute is attached to the given selector. Upon further review, this seems to be happening across various components that utilize this method of implementation.\nI'll be opening an issue for solving in the Draft U.S. Web Design Standards overall. This should not block merging this PR into staging.\n. Merge conflicts are now resolved. It looks like the docs/ folder was not explicitly removed, which is what was causing the plethora of conflicts. Simple fix.\nAlso, removed a few more tasks and references to docs. \ud83c\udf89 \n. @shawnbot no tears! Merge conflicts solved.\n. Adding a note here that we will want to remove prism.js as part of the Standards themselves, as it is not something that supports the package.\nSee https://github.com/18F/web-design-standards/blob/je-repo_split/package.json#L39\n. @jameshupp here is an initial take on the technical documentation we discussed earlier this week. Please let me know if you'd like to go over IRL too!\n. @jameshupp I made some updates to the copy and consolidated the coding conventions section. Let me know what you think and if that makes sense to you.\nAs for the licensing info, that is something I would recommend circling back with the comms team about. I was out on maternity leave when this got added, so there might be reasons why it is included in the README and CONTRIBUTING files, rather than just in a standalone LICENSE file. //cc @awfrancisco \n. The updates mentioned per Britta's note above were made 451d47527b33132a4127e1467b26797c839eecd1\nMerging this in and thanks all for your help and feedback ^5\n. \ud83d\ude80 \n. @ericadeahl done! Mind downloading again to get your final \u2714\ufe0f ?\n. \ud83d\ude80 \n. Fixed #1460 . Completed in #1595 . @kategarklavs perfect- thank you!\n. @ngehlenborg thank you for opening this issue! Our release process adds these version updates on an outside branch from staging (which is our default branch). Once the release is live, we back port into our default to upgrade our README.md, _config.yml and our package.json files. This helps to make staging a place that can always receive contributions, no matter where we are at in the release process. \ud83d\ude04 \n@maya or @msecret I'll open a PR to do this back port shortly. \ud83c\udf89 \n. Closing this in favor of https://github.com/18F/web-design-standards/pull/1456\n. \ud83d\ude80 . @jameshupp looks great! I added a few comments for tiny changes, but otherwise looks perfect \ud83c\udf89 \n. @jameshupp no worries! I'll take a look at those now and push up the solves.\n. @jameshupp @kategarklavs merge conflicts are now resolved. \u2728 Would you mind double checking the README.md and that it looks correct?\n. \ud83d\ude80 \n. Looks good to me.\nThanks for your contribution @carlosvalle!. LGTM!\n. @kategarklavs looks great and left some notes! \ud83c\udf89 \n. This issue was resolved here: https://github.com/18F/web-design-standards/pull/1476\nThanks all! \ud83d\ude80 \n. Perfect - nice work team! ^5\n. @jessieay @tysongach thank you for your patience! This has been reviewed and is slated for release 0.13.0. \n. @bruffridge thanks for opening this issue! @kcjonesevans is correct about running the npm run watch commands against both repos so that your assets compile when you make changes to either the Standards or website asset files. We are using watch and nswatch to make this happen.\nYou also have clearly pointed out where we need to update our documentation in the Standards - thank you! I'll be opening a new issue to make that update and help clarify this step in local dev.\n. @bruffridge I've open a new issue to make the npm run watch command more explicit in our docs. \nAlso, it looks like your fork does not have the latest docs for the Standards repo and does not include that watch command documentation. \nClosing this issue, but please let us know if you run into any other issues!\n. Excellent.\n. Looks good! Is there a reason why we want to keep var task in each gulp config file? Looks like we aren't using that variable anywhere other than in the top level task assignment (e.g. sass). Might make sense to remove that variable and just name the task accordingly.\n. @shawnbot yup! Let's do it. ^5\n. Going to go ahead and give the \ud83d\udc4d on this and merge in. We can make that update in another PR, but it makes sense to have the var in there.\n. Looks like Circle CI didn't update here once the build passed - weird. Rebooted build and all is well!\n\ud83d\ude80 \n. @shawnbot I think turning this pull request into an initial refactor is ok. I checked out some of the work you've done to get started (e.g. whitespace cleanup) here.  What else would you like to do?\nWe probably want some basic tests in for headers as soon as possible, but I don't see the harm in some initial refactor tasks.\n. @shawnbot just to clarify, are you wanting to have both hidden and aria-hidden attributes on certain elements? I am not sure we should/or need to do both.\n. @shawnbot ah! Thank you for clarifying the path you are wanting to take in regards to hiding/showing in general. Just want to make sure we are over thinking here and that we are not using two \"hiding\" type of values on elements. \nMergin' \ud83d\ude80 \n. Adding a note in here after Slack discussion with Shawn. We're going to do a bit more digging to see if we can find a simpler solution for #1572 for now, but am in \ud83d\udcaf on making this a CSS only \"toggle\".. @shawnbot a few things:\n1) We need to update our documentation to state that we are making this change: https://github.com/18F/web-design-standards/blob/staging/README.md\n2) Let's open a PR in https://github.com/18F/web-design-standards-docs that correlates with this change so that we don't run into any breakage on the site (e.g. gulp tasks)\n. \ud83d\ude80 \n. A few more things I want to note about this work:\n1. Windows 7 is the main platforms OS we will focus on for implementation testing.\n2. We should assume that most folks will aim for the Download the zip file route. We will still test the npm/Node method, but our priority to is help make the zip file usage more streamlined for users.\n. Something that I found with the download method is that we don't give great examples on how someone who downloads the zip file should implement the files/folders into their projects structure. Making note to add a more specific on how to implement in a bare bones HTML file.\nThis is also a step towards us making an example project too \ud83d\ude09 \n. The instructions are now in the README.md \ud83c\udf89 Testing them out with a few folks to qualify!\n. @acolter has kindly offered to help manage the user interviews to validate these changes - thank you!\nAdded her as an assignee \ud83c\udf89 \n. Closing this, as it has already been merged in and testing + refinements will be ongoing.\n. Ping @shawnbot to re-evaluate what is still needed on this issue and make any necessary updates.. FYI Adding a note that this has been rebased against https://github.com/18F/web-design-standards/pull/1530\n. @shawnbot I think that that build error was due to caching on Circle CI. Re-ran the build without caching and all is well now. \ud83d\ude3a \nMergin'.\n. @Journerdism @shawnbot and I broke up this larger issue into two smaller chunks for the Thanksgiving sprint milestone. We will be creating more issues to break down the implementation once we have a clear vantage point of what the users needs are for the Yeoman generator.\n. @Journerdism I also moved this into the Ninja Sprint, as Thanksgiving is upon us :turkey: \n. After a team re-group/critique, we have decided not to move forward with the Yeoman generator method of creating an example project for the WDS. This is due to our current research around Windows installation and the difficulty we've seen users have in getting dependencies installed on their local machine. Adding the level of complexity of using Yeoman does not necessarily aid in users gaining a better understanding of getting up and running with the Standards, something which we hoped it would do.\nClosing for now, but welcome folks to check out the 18F static site generator for implementing a Jekyll based static site with the Standards.. @bradnunnally great work and thanks for putting this out there!\nAre we wanting to increase the amount of forkage or track the contributions from forks or... ?\n. @shawnbot made a few updates to your checklist:\n- Make updates to website repo https://github.com/18F/web-design-standards-docs\n- Create zip file for download in release notes\n- Update README with correct version number\nI've also started on the release notes and opened an issue on how to prep for v0.13.2 on the website repo.\n. \ud83d\ude80  merging.\n. I think we can close this one \ud83c\udf89 . Talked with @shawnbot and here is what we came up with:\n- The WDS Yeoman generator should live in it's own repo under 18F (for now)\n- By doing the above, we are then testing our own creations!\n- It should be called generator-uswds\n. Completed userflow diagram and reviewed with the team. See PDF for reference.\n. @shawnbot added to README - good thinkin'\n. Done here https://github.com/18F/web-design-standards-docs/pull/96. Flight/AirBNB booked.. Looks great! \ud83d\ude80 . @blacktm thanks for opening the issue. A few questions for you, which are more for our user knowledge base than debugging:\n\nDid you copy the source code provided for the page templates?\nAre you currently using the CSS or Sass for styling your project?\n\nThe issue is around how the $em-base variable is set/imported on the Standards from Bourbon. We are currently \"pinned\" to Bourbon 4.2.7 which sets the !default value for the $em-base var here. When we changed the the variables to all have !default this worked for some of the variables, but not for the $em-base, since the default is already declared in Bourbon.. @blacktm thanks for the info! I submitted a fix here and it is now merged into staging. \ud83d\udca5  Thanks again for pointing out the issue and outlining it for us to debug quickly!. @shawnbot this LGTM! \nTo answer your question, this is something we should think about taking to our users. AFAIK, most folks are downloading the compiled files at this point. My thought is to first inquire who is using (or wanting to use the Sass) and determine the best path forward from that user set.\n//cc @bradnunnally would love to know your thoughts too!. @mstanaland thank you for opening your issue! This is a known bug in release v0.13.2  of the Standards and has been resolved here. This solve will be a part of our upcoming release, but we have also attached patch files to the v0.13.2 release notes if you are unable to upgrade to our upcoming release.\nClosing this issue, but please feel free to reach out/open a new issue if you have any further complications.. Just wanted to chime in here to get some clarification so we have a better understanding of the problem.\n@bruffridge what does your current project file/folder structure look like? Feel free to copy/paste the sample structure below to help show us how your structure is laid out:\nexample-project/\n\u251c\u2500\u2500 assets/\n\u2502   \u251c\u2500\u2500 stylesheets/\n\u2502   \u251c\u2500\u2500 images/\n\u2502   \u2514\u2500\u2500 javascript/\n\u2514\u2500\u2500 index.html. Looks like we found a solve and am closing this issue. ^5\n@bruffridge feel free to reach out if you need further assistance or run into any other issues! \ud83d\ude80 . @wslack thanks for following up! @msecret was working on a solve for this here. The sparseness is due to a max-width setting on that content. You can read more about that solve in the issue.\nAlso! We are doing our sprint planning session today to queue upcoming work for the weeks to come. This solve is definitely part of our first to-dos, but if you need something sooner please let me know and I'd be more than happy to help y'all out with a manual fix. I took a look and tried a few different approaches to accomplish this for the Standards overall. After doing so, I think it would be good to evaluate what it would take to customize the template on Federalist rather than make this change in the Standards main code base. In addition to my findings from this testing, our original design team had the following guidelines for why we made this width choice:\n\nLine length: Controlling the length of lines of text in extended copy makes reading more comfortable by helping readers\u2019 eyes flow easily from one line to the next. Somewhere between 50 and 75 characters per line is broadly considered to be a readable line length, while 66 characters is considered the ideal. \n\nAnd while I agree that this max-width limitation does make the page look sparse, there is design rationale behind this choice.\n@wslack I am going to close this issue for now and will reach out separately to see if we can come up with a direct solution for Federalist.. Adding a note here in regards to some Github metrics @bradnunnally requested. \nFor the period between July 30 - September 30, 2016 we have had 507 commits and 73 forks to the web-design-standards code base. We will be adding these metrics as part of the Google Analytics work, as well as automating these statistics in the future.. @shawnbot just added specific html for the address form on the docs site \ud83c\udf89  should resolve the issue you outlined above and help this get merged in.. Just making a note that @shawnbot and I talked about a few more changes and then I think this is good to go.. LGTM :shipit: . Thank you for your interest and contributing to the Draft U.S. Web Design Standards! We have received notification of your contribution and will add it to our backlog for future feature consideration.. Also noting that not all of those scripts in that filtered search link may be published on a live url.. Followed up with @jehlers on this to see where we are at. It sounds like we might be moving away from Ethnio overall due to GSA IT guidance around the service. Closing this issue for now, but we can re-open as needed.. @shawnbot feel free to submit any tweaks agains the release branch, if you think it would be beneficial to have them as part of this release.. @shawnbot ah! Feel free to merge this in and submit against release.. Thank you for your interest and contributing to the Draft U.S. Web Design Standards! We have received notification of your contribution and will add it to our backlog for future feature consideration.. \ud83d\ude80 . @msecret hrmmm... agreed that it would be nice to see this merged to test out if it works. However, not sure I want to hold off the release for this particular enhancement.. @Journerdism sounds good! Also making a note here that it might be good to point them to a tutorial on \"What is Github?\" too. Here is a link to a video tutorial @wslack made: https://www.youtube.com/watch?v=1-gLxOjkh4k\nNote (from Will Slack): as needed an update to (edit: reflect the new UX design of GitHub) but the explanations are still there.. Slides are here too: https://pages.18f.gov/slides/github-basics/#/. Started a script here: https://docs.google.com/document/d/157Om88riG2PKrH0BqSTJ35JhKaSq4q4z3KJ6L_AYBoY/edit#\nI also asked @shawnbot to take a look for a dev sanity check and make sure nothing is missing.. And just to clarify, the above script is only for the \"How to submit a Github Issue for the WDS\".. Video completed for the \"How to submit a Github issue to the WDS\". You can find the script and video here: https://drive.google.com/open?id=0B_NVRFrsefnvSmdCejlqeHF3U1E. Started script for the WDS repos and wiki overview here:\nhttps://docs.google.com/document/d/1YxuCkuf1pO0RI6rxWoBKL9uRahk7npoHsZD7H2Imhk0/edit#. I removed the task for the second video (Github repo + wiki overview) and made a separate issue instead here. . Posting the video in public Slack + Twitter early on the week of January 23.. Donzo!. Posting here for reference on where this video lives: https://www.youtube.com/watch?v=CiIcDXft8jM. Okay! @msecret @adborden thank you for your feedback. I've made some updates around your suggestions and replaced the npm login vars with an API token route instead - much smarter! I also added the check-publish command.. @msecret Per the npm docs, I think you need to add the following to your .profile:\n\nYou will also need to add this to your environment variables on your development machine. In OSX or Linux, you would add this line to your ~/.profile:\nexport NPM_TOKEN=\"00000000-0000-0000-0000-000000000000\"\nand then refresh your environment variables:\nsource ~/.profile\n\n. Ah! Also, noting that you should s NPM_TOKEN/NPM_API_TOKEN, since that is the var we are using here.. @adborden agreed! Glad we are hashing this out and figuring out best approaches.\nI'd like to continue down the path of using api tokens rather than the username/password approach. I've reached out directly to the folks at Circle CI and will also reach out to our infrastructure folks. I'll update here once I hear back!. @adborden okay! I think that we've got a final solve here. I pushed up a few changes:\n1) Removed .npmrc file 517bd25\n2) Setting the NPM_TOKEN in the circle.yml file instead! 5876345\nI wonder if we should set that inside of the deployment part of the config, since we don't need to set the token outside of it for other tasks - thoughts?. @adborden @msecret okay! I think this is good to go. I updated the npm config set to only run during the deployment config, see 6dcb9ea.\nShip it?. @adborden ping! Just wanted to let you know that the build was fixed when I re-built without the cache. \ud83c\udf89 . FWIW I think that is a Circle CI config that is completely un-related to this PR. See https://github.com/18F/web-design-standards/issues/1642. See https://github.com/18F/web-design-standards/issues/1603#issuecomment-274544954\nClosing this issue and taking another approach that is more direct for Federalist.. Met with @shawnbot @bradnunnally @msecret and wrote up some notes here:\nhttps://docs.google.com/document/d/1Avg08vSgly1eCDroLrPwvJVXtubyEjEgeAdyRsfLu9A/edit\nThe next step is to start documenting a more comprehensive plan for us to possibly start this work come Q2 2017.. Initial plan added here and ready for team feedback: https://docs.google.com/document/d/1Avg08vSgly1eCDroLrPwvJVXtubyEjEgeAdyRsfLu9A/edit\nI also added a v1.0 milestone to our design assets repo too \ud83c\udf2e . Thank you for your interest and contributing to the Draft U.S. Web Design Standards! We have received notification of your contribution and will add it to our backlog for future feature consideration.. Writing up some initial notes for guidelines around this work.\nWe currently have a few key places that talk about our release process: documentation and wiki. The goal of this work is to streamline some of these docs. Here are the steps that I think we need to take in order to complete this work, as well as what is suggested in the description:\n\nUpdate and merge the release process and release notes checklist wiki pages.\nMove the release process into a more forward facing vantage point. It feels like it is getting lost in the wiki. I like how the cloud.gov team has a RELEASE.md file in their root level dir.\n\n@shawnbot also pointed out that we should also adopt a formal git branching model which should also be part of the update/merge step.\nDocument started here.. Fixed here https://github.com/18F/web-design-standards/pull/1701\nClosing! \ud83d\udd28 . Following up here per a conversation I just had with @shawnbot about this. \nMy gut is telling me that we need to add some cache busting as part of our Circle CI builds. This error goes away if you rebuild without cache. We're going to circle back with some of our infrastructure folks to determine a solve. Stay tuned!. @bruffridge we've merged in your PR, as well as refined some parts of the build process for our Sass gulp task and testing. After testing locally, as well as on a test branch, these solves seem to have resolved this issue. \ud83c\udf89 \nClosing this issue for now. If we see the problem arise again, we can open a new issue.. @shawnbot truth and good call! Mergin' \ud83d\ude80 . @shawnbot thanks for adding! I think we can leave NIH out for this.. @shawnbot thanks for taking the time to write down these thoughts. I think we need to think in terms of what can we accomplish for the 1.0 release, but also some of these as super important for general evaluation (e.g. test coverage tooling). \nWhat do you think we can commit to in this sprint?\n. @shawnbot this all sounds great and I am totally onboard for visual regression testing through Github's visual diff interface (to start).\nOn a side note, we set-up Screener before and the team tried it out. It was \ud83d\udc4d from the team all around and we were looking into acquiring it as of September 12, 2016. //cc @msecret . Refs https://github.com/18F/web-design-standards-docs/pull/118. @shawnbot is doing this work as a part of the 1.0 homepage, which is being tracked in this issue\nClosing this issue so we can accurately track the work.. @shawnbot this looks good to me \ud83d\ude80 . @bradnunnally this looks good to me!. Draft for blog post written up and sent to the team for feedback prior to sending to CBP.. Blog draft started here: https://github.com/18F/blog-drafts/issues/624. FYR @shawnbot is taking the lead on creating the documentation around this by adding a RELEASE.md file to the project. Similar to https://github.com/18F/cg-style/blob/master/RELEASE.md. Also, putting this notes doc for reference: https://docs.google.com/document/d/1Ucxwc2-joe6oZYP2l7TNbpmmVLd6-aOEykdZ57Z_FYM/edit. @bradnunnally I think we can close this, no?. @bradnunnally comments left!. Done! . Quick note: I changed this PR to point to the release-1.0.0 branch.. Adding a note here that we are going to move over to Code Climate instead of Codecov.. WFM \ud83c\udfb8 . Completed in #1808 . @bradnunnally looks good. I think there will be times where we merge directly into master, but that will be few and far between. It might be good to utilize the labels we have in place for categorizing the priority of a fix.\nFor example, if something is needing to be resolved ASAP we label it Critical and are aware that it would then be merged directly to master.\nAlso, it might make sense for us to add this to the CONTRIBUTING.md instead of a wiki page so that contributors are aware of this workflow process.. We've had some internal discussion around this editorial workflow and what the use case is. I am a bit confused as to why we need a specific use case that is different from our normal git workflow? What is the problem statement here?. @bradnunnally is this completed?. Cool - for some reason I though we had completed this. Thanks for clarifying!. Done! \ud83d\udca5 . @svoynow thanks for your question and interest in using the Standards. \nWithout being able to poke around in the code base, my initial guess is that sass-brunch expects the @import lib/bourbon path to resolve at the root level of the dir instead of the root level of the uswds node module folder. I would take a closer look at how pathing is compiled.\nGoing to close this issue, but please stay in touch and let us know how everything worked out!. Thank you for your interest and contributing to the Draft U.S. Web Design Standards! We have received notification of your contribution and will add it to our backlog for future feature consideration.. Noting here that we are splitting release tasks for 1.0. I'll be tackling the website release and @shawnbot the Standards themselves. ^5. @shawnbot I think we are missing some new additions from staging in here? We might need to merge into staging first, see https://github.com/18F/web-design-standards/compare/release-1.0.0...staging. Thank you for your interest in the Draft U.S. Web Design Standards! We have received notification of your issue and will add it to our backlog for future feature consideration.\nIn the meantime, you can solve this issue by overriding the .usa-navbar styles. It looks like you are using the Basic Header, is that accurate?\nAlso, I am not sure if you are using Sass or CSS, but here are some solves I tried locally that seem to resolve the issue (see screenshot below FYR):\nSass\n```\n// path/to/my/scss/files/main/scss/my-custom_vars.scss\n.usa-header-basic\n.usa-navbar {\n  @include media($nav-width) {\n    width: 25%;\n  }\n}\n```\nCSS\n@media screen and (min-width: 951px)\n.usa-header-basic .usa-navbar {\n  width: 25%;\n}\n\n. @phae thanks for the clarification! Agreed that this is a bug not a feature and appreciate you pointing this out to us to help resolve.. @manavm1990 thank you for your interest and contributing to the U.S. Web Design Standards. \nSince Bourbon and Neat are both part of the the Standards, adding this note to the code base might make folks think that they need to be added manually. \ud83e\udd14 \nIt might make more sense to add something to our developer documentation that explicitly states that these libraries are part of our code base. Thoughts? . @manavm1990 I think you hit upon something that @evetsreklaw brought up in our public Slack channel. Just to clarify, are you also using Dreamweaver or have any blockers for installing Node?. Ok cool - thanks for clarifying! I am going to close this pull request and recommend we take look a closer look at our documentation around Standards Sass + Bourbon + Neat information. It sounds like it might be confusing how all of these live together.. @konklone thanks for opening this issue! While @shawnbot works on the header refactor, let's schedule some time to pair and talk about how we can update the language. . Talked with the team and @konklone today about this. We will be removing the copy in the banner until we can come up with a more general solution for this guidance.. Fixed in #1749 and will be part of the next release \u270c\ufe0f . @bruffridge thank you for opening this issue and great to hear from you! We are in the midsts of updating for our new documentation and will be making this update shortly.. Just resolved! develop now exists and is the new default branch.. Excellent! Quick note: we will also need to test that the code samples on standards.usa.gov are still compiling and displaying correctly.. @shawnbot something else to think about is name consistency. We use both html and templates to refer to these files. We also have src/html and dist/templates. This is confusing and we should pick one or the other. I am leaning towards html so we are more explicit and template might infer that these files contain a full page layout.\nThoughts?. Thanks for clarifying. While we understand the compilation process of going from a template to raw html, not all of our users might be used to this process. My thoughts are based off of the user research that we did on Marigold for usability testing on the Fractal interface. Some users were confused what the difference between the View and HTML tabs were or how they related to each. This may also be true for users when looking at the template to html folders when referring to or using this code base.\nThat said, I am of the mindset to implement, test and iterate! Going to add some documentation now to better outline what all of these things mean and will submit a pull request against the feature-refactor-templates branch.. Submitted a pull request to add some docs in our README about the new templates folder. \nAlso, I think /src/template/figure.html still has a reference to {{ site.baseurl }}.\n. Ok! So since we determined that the figure template is not currently \"published\" we can either remove or leave as is.. @fulldecent thank you for you opening this issue and great timing! We are looking at removing this guidance entirely from the government style banner. You can read more about this in this comment: https://github.com/18F/web-design-standards/issues/1738#issuecomment-283181463. @adborden thanks for opening this issue. This is an interesting pattern. Is there a particular reason why the sub-navigation links are anchors?. @gemfarmer @line47 cool. The expected behavior in the sub navigation is for those links to to go to a new page and not be anchor links.\nI've pinged @bradnunnally to further clarify and make some suggestions on some other options that might work.. @line47 thank you for that clarification and for the animated gif \ud83c\udf89  I've added this issue to our next sprint to take a closer look.. @shawnbot I think you are right.\n@gemfarmer @line47 I just tested this on Federalist and everything looks \ud83d\udc4d  to me! Closing this issue.. @WayneWhitten thank you for submitting this issue! \n\nI'm concerned about whether these standards impose any implementation conflicts.\n\nCan you tell us a little bit more about your specific concerns?\n\nI'm also concerned about whether any of them are mandatory, and whether they are noted as such.\n\nWe had another user post the same request in our docs repo and will be addressing this in the coming sprint.\n. @WayneWhitten thank you for taking the time to clarify - much appreciated! \ud83c\udf89 \nI've added a comment in the original issue posted in https://github.com/18F/web-design-standards-docs/issues/197 to take your comments into consideration as we come up with solutions. Going to close this issue since the objectives are similar.. \ud83d\ude80  this solve will be part of the next release. Nice work!. @sawyerh thanks for opening this issue. This sounds like a great idea to helping enhance the customization options for the Standards. Looking forward to reviewing your pull request!. Thank you for opening this issue. The team has added it to our backlog for consideration in our next sprint.. A duplicate issue was just opened on our docs site repo. Since the issue is based on our docs site and not an actual Standards component, I am going to close this issue.\nThank you again for opening your issue!. @jasonkaedingICE thanks for posting this question. I did some digging as to why this style is in place and it looks like this was left over from when our docs site repo and this repo were part of the same repo. This is implemented for instances where you would do something like this:\n<section class=\"usa-grid usa-section\">\n  <!--  margin-top: 0 is set to remove the margin value on the <h2>  -->\n  <h2>Main head title</h2>\n  <div class=\"usa-width-one-half\">\n    <h3>Subtitle</h3>\n    <p>Your amazing copy about this sub section.</p>\n  </div>\n  <div class=\"usa-width-one-half\">\n    <h3>Subtitle</h3>\n    <p>Your amazing copy about this sub section.</p>\n  </div>\n</section>\nIt makes sense to me to add .usa-grid-full to this configuration and am not entirely sure why we excluded.\nWe have talked about re-making our grid with no dependencies, but it is currently not slated on our product roadmap. It's something I'd like to see happen (and do!) and appreciate @shawnbot for bringing this up.\nAnd thank you for bringing up this question! The Standards get better and better by users like yourself submitting questions for us to to refine our code base.\nClosing this issue and opening a new one to make this change to typography.scss.\n. @mariamarrero thank you for writing this up and giving us some possible solution ideas to think about. The rationale for the \"Section Title\" not being linked to a page is because the click event is captured to activate the actual dropdown. Therefore we'd want to re-think how we do a dropdown overall and when that gets activated (e.g. onHover). \nI am going to pass this over to our UX Lead @bradnunnally to review the pattern you've presented as a possible solution and provide further feedback.. Quick note, talked with @nickbristow and we can remove this without having to replace with anything. Here are the spots that should be removed:\n\nsrc/templates/header-basic.html\nsrc/templates/header-extended.html\nsrc/templates/header-basic-mega.html\nsrc/templates/header-extended-mega.html \n\nWe'll also need to remove from the docs site repo in the following locations:\n\n_includes/navbar.html \n_components/page-templates/template-docs.html \n_components/page-templates/template-landing.html . Completed in #1793 and https://github.com/18F/web-design-standards-docs/issues/206.. Completed in #1792 . LGTM - thanks for the pull request @sawyerh! \ud83d\ude80 . Refs https://github.com/18F/clinical-trials/issues/37#issuecomment-285814115. Link to clickable prototype of Clinical Trials (nice work @austinhernandez!) https://projects.invisionapp.com/share/R9AVPDEU2#/screens/223853798_Homepage. The team has presented these designs to the partner. They will follow up if/when the partner comes back to build out the wireframes using the U.S. Web Design Standards.. Updating here, next steps are to get the new nameserver from folks at #infrastructure and get that over to Russell to update. ^5. Update: we have currently scheduled a time to go over the switch with GSA IT. Due to an issue around DNS propagation delay timing, we will need to coordinate this effort to create as little downtime as possible for this switch.\n\nSlating this for the next sprint milestone.. @jasonkaedingICE thank you for opening this issue. We have just completed sprint planning for this sprint and will add this to the backlog for our next sprint (3/27).. Ping @shawnbot . @saracope thank you for opening this issue! I've added it to our next sprint planning to take this into consideration for our next sprint.. @bruffridge thank you for posting this issue. \n@bradnunnally going to pass this over to you. Thoughts on adding these two social icons as part of the footer?. @joshuafarray thank you for opening this issue! I've added this to the next sprint milestone and incorporated with the current workflow.. Are we still using Source Code Pro or should this be removed?\n. Nitpicky fix. Please align the values on rows 42 - 52 (similarly to how you did the color values.\n. Please put the compression back in for production.\n. Are we still using Source Code Pro or should this be removed?\n. Nitpicky fix. Please align the values on rows 36 - 46 (similarly to how you did the color values.\n. Unless you are planning on using that variable elsewhere, I'd say removing that variable sounds like a good solution.\n. I added an issue here: https://github.com/18F/govt-wide-patternlibrary/issues/28 let's go ahead and put it back in for now and address this in that issue. :+1: \n. I think this should be located in _includes/sidenav.html, as the purpose of this include is for the main top navigation.\n. From @Scotchester:\nLink in this sentence needs updating. Refs https://github.com/18F/govt-wide-patternlibrary/pull/66#discussion_r33112278\n. Agreed. We'd probably want to point them to the pattern libraries contribution docs and make more explicit suggestions on how to this page edit there: https://github.com/18F/govt-wide-patternlibrary/blob/18f-pages-staging/CONTRIBUTING.md\n@ErieMeyer thoughts?\n. Under \"We welcome suggestions and feedback!\", it might be nice to make that link to https://github.com/18F/govt-wide-patternlibrary/issues/new. \n@ErieMeyer :+1: or :-1: ?\n. Will there be another pull request that adds the example?\n. :+1: works for me! Just wanted to clarify.\n. While I can understand the assumption that users would want to use an accordion more than once on a page, I'd rather leave that up to our UX team to determine. Let's go ahead and leave this as an ID for now and point out to the team that this is a good thing to test for. //cc @carodew @colinpmacarthur \n. This is a good point in moving these to classes, but again I think that would be something we'd want to test for.\nAlso, these pieces will be part of code snippets in which users are able to change/modify these snippets as they see fit. It will be interested to see how folks use, change and interact with them!\n. Right on. Thanks to the UX team for your feedback and letting us know the best way to move forward :+1: \n@msecret feel free to change this to a class and update the JavaScript to reflect this change.\n. Very possibly, but for now I'd like to leave as code-snippets.js. I'll be adding in the ability to copy the code in an upcoming pull request and would rather make this it's own file specifically for the code snippets portion of the pattern library website.\n. @msecret good question! I moved the code-sample class to be more specific to the area in which the code snippets live, rather than wrapping the entire area. It made more sense to separate those out.\n. Remove this line.\n. Indent the <li>.\n. While I agree with @msecret that we should probably be a bit more explicit here, it sounds like this is something that should be more thought out as we build out the grid styles. For now, let's leave as is.\n@maya would you open for re-assessing the way the grid integrates into the footer and refs this comment? Thanks!\n. +1 @maya want to open an issue?\n. Please put the correct reference back in so that users are able to use the image resource without having to download it.\n. Please put the correct reference back in so that users are able to use the image resource without having to download it.\n. Should this be called .usa-unstyled-button?\n. Yup! The comment, please.\n. Since we're not using # as the selector, this does not seem to be functioning correctly. Should we change the actual selector to match up accordingly?\n. +1 gotcha! I missed where the aria-controls were located and was not entirely sure how the accessibility portion was integrated in. Thank you for clarifying!\n. @maya should this be .usa-drop-text instead?\n. @msecret this was the link that the team provided.\n@carodew thoughts?\n. Add newline.\n. Add newline.\n. @maya @msecret we've been adding new lines to the end of every file and think it'd be good to stay consistent in this practice.\n. @maya search could be in relation to many things such as, search results, search autocomplete, etc. etc. In this case, I agree with @msecret and we should change to usa-search-bar. Thanks! \n. +1 on making it a class and not locking into <span>\n. New line at end of file.\n. Why are we using a wildcard here? Not sure this is best practice and would be hard for users to un-tangle.\n. New line at the end of file.\n. Why are we using a wildcard here? Not sure this is best practice and would be hard for users to un-tangle.\n. Rather than associate measurements with thumb prints, it might be best to say 10px for low resolution and give another measurement for higher res?\n. I think it would be good to be consistent with that note, so as not to question why it's in one place and not another.\n. +1\n. Agreed.\n@colinpmacarthur we also want to be sure to add <code> around parts of the copy that are related to coding examples.\n. I think this regex validation got missed?\n. Hrmmm... maybe before ensure so that it reads:\n\"If the color scheme of the buttons are adjusted, ensure all states...\"\n. Nope - thanks and it should also be input instead. Fixed here: b0f3bb2\n. It is for the plus/minus background image. I doubled the size and then specified here to make it a bit crisper on retina displays.\n. They were originally px and only left them this way b/c that is what they were before :smile: \nChanged in ea1d123\n. +1 on borderless\n. Possibly, yes! For now, I would recommend that we focus on implementing this work and add a card in the backlog for Sprint 7 to determine how best to handle. We're setting up the HTML to be very piece meal, but are not determining how forms are handled as a set of input fields. \nSound good?\n. @maya added in Sprint 7 here: https://trello.com/c/MNUwuyRr/391-wrapping-all-form-fields-label-input\n. @maya updated here b5413537212bea4a9a0504dd50f5abd1c865f6b3\n. We should be specific on the version of Internet Explorer that was having an issue. Please add which versions of IE this is effected by and solves for.\n. @maya hrmmm...  all versions meaning IE[X] - ? only the one's we support? Looks like you mentioned testing only on IE9 - 10.\n. @maya I still think we need to be explicit and state IE9 - 11, as we have not tested other versions of IE outside of those and don't want to make any assumptions.\n. Are we planning on pushing the dist/ folder somewhere so that these compiled files are available somewhere for non-dev folks?\n. Remove?\n. Change to 'src/stylesheets/_scss/all.scss'\n. Should we remove the no-gem flag here?\n. Why not point them to the minified versions, as well as the minified/non-minified JS too? \n. Should we recommend using the minified version?\n. Should we recommend using the minified version?\n. I agree with Roger on adding the version number to the filenames.\n. Sounds good!\n. Sorry for the confusion, but yes. My note was for us to explicitly recommend the minified version when implementing via the downloaded version of the\n@rogeruiz that is :100: okay in terms of using require('uswds'); and having the non-minified version. Maybe something to add to our research to see what our users are wanting/needing for this method of implementation. //cc @carodew \n. Remind me, the version # is not part of the folder name - right?\n. :+1:\n. Correct! The comments are hidden when rendered and there for guidance.\n. Fixed here faa43f3 - thank you @kategarklavs!\n. Changed to singular \"component\" here e11f14c\n@maya The distinction between \"Website\" and \"UI component\" was implemented because the website code and the UI component code live within the same repo. It's important for us to be able to have a clear idea which one a particular issue is addressing so that we can better assist our contributors.\n. Remove dist-gem/, as it has been removed and is no longer maintained. See https://github.com/18F/us_web_design_standards_gem/issues/15#issuecomment-203564667\n. Remove this comment about the dist/ and dist-gem/ directories.\n. Should be docs/assets/img\n. Is there a reason why the line breaks were left in here?\n. Add a width value here too, just like you did on the class above.\n. \ud83d\udcad  might look a bit cleaner by having one class or the other. Either way, when testing out the proposed implementation I get the following layout without that width value added in:\n\n. Yes.\n. @maya maybe we could make this link point to {{ site.repos[0].url }}/issues/new?\n. Why not just use the .usa-accordion-button as the target? Totally open if you think we need to cover both use cases, but seems like the class specificity will suffice.\n. Is this TODO still accurate?\n. Is this TODO still accurate?\n. Ah! I see that you left this in for backwards compatibility. Totally okay to do this, but would like to know your thoughts on when we should remove this use case as we move towards 1.0.\n. Dis-regard, as this is reference to the upgrades vs. newer class based specificity.\n. Dis-regard, as this is reference to the upgrades vs. newer class based specificity.\n. Was this changed for debugging purposes?\n. Adding note that #1357 has been merged into staging.\n. I think what Marco is saying is that we might want to start thinking about separating the header specific styles from the nav styles. This might help in creating the ability to using each of these sets of styles are their own. For example, we could possibly run into issues when want to use nav specific styles in another component, but are required to either remove or incorporate header styles.\n. Let's be sure to remove this new env and deployment prior to merging in. Happy to leave in for now, but not something we want to keep for long term.\n. Agreed. Please do not use <em> for adding styling, as it is a styling element within itself and could possibly be confusing even with documentation.\n. Do these changes relate to the header or a solve for another issue? No big deal, but want to make sure to account for any changes that help solve any open issues we need to account for.\n. @maya @msecret and myself met this afternoon to discuss a path moving forward. We are in agreement in leaving this as is for now, but that there eventually will be components/nav.scss file.\n. The quotes around \"role=navigation\" are a different typeset than the others. Might be a copy/paste error.\n. Missing alt text.\n. Yes! Much cleaner and fixed here caca489\n. Should be LICENSE.md\n. Should we be consistent and say Draft U.S. Web Design Standards instead of Draft Web Design Standards?\n. The second sentence might need some updating. Can we change to read something like  the following?\n\nWhen cutting a new release, we update the versioning on our files by branching off of the  staging branch and submitting a pull request into our release branch. This helps to make staging a place that can always receive contributions, no matter where we are at in the release process. \n\nRefs https://github.com/18F/web-design-standards/pull/1452#issuecomment-244222825\n. Can we just remove this?\n. Ah! I see now that we are removing this entirely \ud83d\udc4d \n. Is there a reason why we need to wrap this with usa-accordion?\n. This gets added to our code snippets. I worry that it might be possibly be confusing to users when looking at the snipper. They might wonder if the skipnav above this line is also part of our example code.\nAlso, are we doing this anywhere else in our other code snippets?\n. Same comment as above.\n. Is there a reason why we are using usa-accordion-content and not usa-banner-content?\n. s Specificies/Specifies\n. @shawnbot took a bit of time to take a closer look at this approach from holistic stand point. I agree with @rogeruiz on the multiple navs and also that we probably don't want to scope the code base to encourage that type of behavior. We also don't focus the scope in this way throughout the current JS code base and think it makes sense for us to be consistent. \nHowever, I did make the clickHandler available globally in 9754434. \ud83d\ude04 \n. Let's change this script release instead of build:package.\n. \ud83d\udc4d  let's remove this line entirely.\n. s task/'sass'\n. What does this do? Do we need it?\n. I think we use an image for this, no?\n. Change to navInit\n. Change to navOff\n. Change to navOff\n. Change to searchOff\n. Change to searchOff\n. Yeah. Let's add that image in so we are testing the correct markup around the navigation component.\n. s uwsds.css/uswds.css\n. s uwsds.css/uswds.css\n.  I've got an example of this in the new README.md changes here. Once this gets merged in, I'll update here to point to that example. ^5\n. Sure. Changed to MDN here 1fb5b6f.\n. @shawnbot @nkkl updated here b322233. Better?\n. Updated here b9e1c9b\n. Updated here eeb0b13\n. @acolter excellent ideas! I've made some updates here in this commit here: f587930 \nBetter? Worse? Same?\n. @shawnbot I thought about that too. Based on our user type, I'd rather be more explicit for users who may not understand why it's \ud83d\udc4c to not have the extension here. \nCool?\n. @shawnbot :thinking: do you think that our users would understand that as the name of the package? I don't think we've outlined that anywhere else in our docs.\n. @carlosvalle we are no longer using scss-lint so this line should be a-okay to remove.\nSee https://github.com/18F/web-design-standards/commit/95d626ad346748a71c9260514fae0771d83e22d3 for details on those changes.. Please remove.. I think we can just remove the addComment option altogether, since I think it is set to true by default.. Is this still a dependency?. Is this still a dependency?. @shawnbot sorry, I meant prismjs \ud83d\ude01 . Cool, that is what I thought. Probably makes more sense to move to devDependencies.. @shawnbot nope! Updated in 050bdd4. I don't think we need the above comment anymore. \ud83d\ude01 \ud83c\udf89 . We do use git tags for each of our releases. At the moment that only happens when we publish our release notes, hence pointing the at master. I'd like to change this up in the future where we remove the release branch and target releases with tags instead. \nHope that makes sense!\n. We can probably remove the after v1.0.. You can just say (breaking changes). s For instance/As an example. Let's open an issue for this instead of adding this TODO here.. s co/checkout since not everyone may have the co alias.. Should we add git checkout develop first?. Should we remove the git fetch origin here?. s co/checkout. This part is confusing and I think we can remove it.. Missing . at the end.. Remove.. Maybe change to:\n\nOpen a pull request from your release branch against master. You can see an example of this type of pull request format here.. We can use 1.0 as a link to the example. I think it would be good for folks to see what the expectations are for that PR description.. You can actually tag the release to master during the notes phase. This is nice for folks who might be prepping releases that are not using the Github CLI.. We should add some docs around what this look like. Something high level, but that helps give direction on what needs updating/changing over at web-design-standards-docs for a release.. Doh! I misunderstood that this is a different workflow and is separate from the \"intro'ing a change\".. Add space after [ and before ].. Add space after function and before (. @jasonkaedingICE thank you for pointing this out to us and expressing the need for better examples. I am going to take this information to an upcoming workshop where we are determining some next steps for design and research. In the meantime, check out the guidance found here to learn more about various states available for our form controls.. Let's remove sh. Let's see if we can be more specific on this and add a class name on button. \n",
    "maya": "another one... usapatternlibrary.*.gov\n. so like USA.gov/patternlibrary ?\n. @mollieru Re: 'web design standard' - I wonder what the association with the Web Standards movement from the 1990s + early 2000s would imply https://en.wikipedia.org/wiki/Designing_with_Web_Standards\n. There are many benefits to working in the open, but making it private as we get our bearings on the project sounds like a good plan. And then we can open it up to being public when we feel it's in a good enough state to share it. So we need to define what that looks like (e.g. our Alpha pre-release is when file structure is set up with basic components). \n@juliaelman previously mentioned we may like to open it at the end of Sprint 3 which sounds like a good goal to aim for (our halfway mark!). We can also revisit this the end of Sprint 1 & 2 and see where things are (who knows, maybe it'll be ready sooner... or maybe we'll want to push it back another sprint until it's a little more developed).\nI agree with @carodew's concern that we'll need to be heads down and not inundated with requests and many opinions to this project - that could really slow us down and we need to be super mindful of this and our ambitious schedule. So that's why I think some kind of buffer will be helpful.\nAlso, there are other ways to share our work that isn't opening up this repo. Another example is something like a Project Hub (live example). That way we have full control over what goes out, but still serves as a way to document our work and design artifacts as they progress. Could be a neat thing to look back at too!\n. Sounds good to me!\n. +1 I like it shorter.\n@jenniferthibault yes, the idea is we would namespace classes and prefix them with: usa- or usg- for example. So you'd have .usa-header.\n. I suggested that for the URL here: https://github.com/18F/govt-wide-patternlibrary/issues/5#issuecomment-105770048 :)\n. I think @rypan's main point with opening this issue is:\n1. That we are using the t in \"govt\" while not using that in other places. Using just gov is cleaner, nicer, and common practice.\n2. Separating \"patternlibrary\" with a dash between words to be consistent and legible.\nSo we can at least do that as we decide on a different name. I like both usa-pattern-library and gov-pattern-library.\nAnother question, should the repo name be consistent with the actual name? https://github.com/18F/govt-wide-patternlibrary/issues/10\n. Louder Than Ten has something similar - broader than a pattern library, they call theirs \"Manual\" http://manual.louderthanten.com/\n. @leahbannon @mollieru As a reference, gov.uk found out that calling out the next holiday date was really useful for people. And the upcoming and past dates are listed below. \n\"Previously the page listed all of the bank holidays throughout the year, but analysis of the search data showed that what the majority of people wanted to know was the date of the next one. So they redesigned the page to show that prominently, and list the other information below that. \"\nThis is how they do it:\n\nhttps://www.gov.uk/bank-holidays\nAlso, on their \"dates\" design pattern: https://www.gov.uk/service-manual/user-centred-design/resources/patterns/dates.html & discussion of it: https://designpatterns.hackpad.com/Dates-vpx6XlVjIbE\n. @juliaelman I added line breaks after steps to \"Submitting an issue\" to match the template you got it from. \nAlso, would you like to change the branch example from \"adding-styles\" to \"add-styles\"? That's the format I use, and looks like you do too.\n. I agree with @Scotchester, @cew821, and @mjovel. It's a great idea but don't think we should take this on so early in the project. I think it was only brought up once during the workshop by Scott. Let's keep an eye on it but tackle it later in the project.\n. Good point @mjovel. One possibility is we just offer HTML snippets for V1 and allow our users to download the SCSS/CSS files. Then we can continue research the other options. How does this sound? This certainly makes implementation simpler.\n. Also we need to add in the main content area as part of our list.\n. Thanks for the review @juliaelman! \nAnswering your first point:\nI noticed Bourbon Refills uses an all.scss file to import their scss. What do you think about changing assets/_scss/_base.scss to this? Then we can keep assets/_scss/core/_base.scss as is.\n. @juliaelman to me it's more confusing to have a file name repeated inside the same folder. Calling it \"all\" is semantic bc it demonstrates that all of the files are being imported.\n. @juliaelman Great! Done in a2ed301.\n. @juliaelman Can we chunk out the prism.js task into another issue? I think adding in a jekyll plugin is a large enough task to separate out from this PR.\n. @juliaelman Good call. Done in ae63159. New issue opened here: https://github.com/18F/govt-wide-patternlibrary/issues/31\n. Looks good, @juliaelman. This adds regular and bold font (400 and 700 weight). This currently does not include italics. Can we verify with design if we need italics or other weights? https://www.google.com/fonts#UsePlace:use/Collection:Source+Sans+Pro cc @angel @mollieru \n. Do we need 700?\n. We can try leaving it for now and if we feel it's too heavy, take it out. Although it would simplify things with only two weights, then we only have to declare normal and bold, rather than 400, 600, 700. Curious to hear other people's thoughts.\n. On second thought, we might as well be explicit with our weights (i.e. 400 and 700, not normal and bold) in case other people want to extend this and add additional weights.\n. True, @mjovel. Also the last commit removes Source Code Pro, the monospace version of Source Sans Pro for this reason. We are using prism.css which uses Consolas, Monaco, 'Andale Mono', monospace as its monospace font stack which relies on browser fonts.\n. Thanks for jumping in and clarifying folks! \n. I think that's an important point for accessibility. Here are some examples of bolder focus states:\nbright outline\ngov.uk\n\nopen fec\n\ndotted outline\ncfpb\n\nbox shadow \nhttps://open.foia.gov/\n\n. If it's a black button on white background the contrast ratio of the yellow focus state will be different for each.\n. It may be harder to implement error messages to the right of the field. I'd recommend an approach that places them below the field. It also gives a more consistent experience in smaller screens.\nThis is how gov.uk does it:\n\nOn http://app.homebasefix.com/, we also used error messages between the label and field.\n\n. @Scotchester Re: bold labels - We're only using two weights for fonts, normal and bold. Are you suggesting to see labels in a normal font weight?\n. @carodew I just realized we are recommending this pattern for Sign In error messages. Any idea why we are recommending two different error message patterns? How will people know when to use one or the other?\n\n\n. @andrewmaier @Scotchester Here are input labels in bold and normal weights:\nBold:\n\nNormal:\n\n. @andrewmaier Agree! We'll be working on error messages next sprint :)\n. Snoop around @noahmanger! I think once we get all this in code we'll actively fiddle with screen sizes to make sure it looks good at smaller sizes.\n. @Scotchester for list alignment, how about implementing this technique? https://j.eremy.net/align-lists-flush-left/\n. @Scotchester I just implemented that technique here 9950642.\nThis is what single digit lists will look like:\n\nThis is what multi-digit lists will look like:\n\n. @andrewmaier doesn't Font Awesome also provide SVGs? Are we just talking about what implementation we want?\n. We will be moving forward with SVG with PNG fallback due to: \n1. Government agencies that have security settings blocking IE from using webfonts\n2. Basic accessibility issues with the lack of alt text on icon fonts\nThanks all for this lively and informative discussion!\n. Thanks for a great discussion all. Moving future icons development to issue #762.. @juliaelman amazing, thanks so much!\n. The last commits add structure and placeholder text for \"Use\" and \"Accessibility\" for all collections. It also adds basic structure for our preview examples. This removes sample content that was in a few collections and used for testing.\nThis is what it looks like:\n\n. @juliaelman yep! I just removed the WIP tags from the PR.\n. You're right! Just fixed that in 3749066.\n. @mjovel @jonraedeke yes, I think we are leaning towards a BEM or modified BEM approach. \nThis is the current 18F \"modified BEM\" methodology:\nThe 18F recommendation for a naming methodology is a modified version of BEM. It still uses blocks, sections within blocks and modifiers, but doesn\u2019t use as long a syntax.\n```\n.accordion\n.accordion-item\n.accordion-item-selected\n.nav_bar\n.nav_bar-link\n.nav_bar-link-clicked\n```\n@msecret and @meiqimichelle who are leading the frontend guild have put a lot of thought into this as well. \nWould love to hear what you think about those approaches or where exceptions should be made.\n. @juliaelman on the index page, do you know why it's showing --- permalink: /patterns/ layout: styleguide title: Patterns --- before the patterns section?\n\n. @juliaelman I made a few updates, now it's good to go from me! :rocket: \n. Do we want Elements and Components to link to their location on the page? Right now they do not and are just text. The current styling makes them look like they're links.\n. This has been resolved and fixed in my last commits. This is what it looks like:\n\n. This PR also separates Elements and Components into separate pages to match the new sidebar navigation structure. Previously they were within \"Patterns\" page, which has been removed.\n. @juliaelman: I was incorrect about removing the aside. I previously read here: http://html5doctor.com/understanding-aside/ \"Navigation [...] are not directly related to the article and therefore do not justify the use of an <aside>\u201d That it should be used for content tangentially related to it. \nHowever, I\u2019m seeing in a newer article: http://html5doctor.com/aside-revisited/ \u201caside is now acceptable for secondary content when not nested within an article element.\" \"When used outside of an article element, the contents should be related to the site (e.g., a blogroll, groups of additional navigation, and even advertising if that content is related to the page).\" So it should be fine for navigation. I can go ahead and add it back in. Apologies!\n. Looks good to me @juliaelman. Adding a screenshot so others can see what it looks like.\n\nScreen recording after hitting tab button: http://cl.ly/bjss\n. @juliaelman I made a couple of fixes, looks good to me!\nI realized that you removed the anchor links from the index.html file bc we switched to absolute links instead of relative links so in page linking does not work on that \"show all\" page. One possible fix is a different sidebar include for \"all\" page, but realize it\u2019s not super high priority, but want it to be documented here.\n. With our updated nav structure, this is what the slideout nav looks like: \n\n. Also the last commit adds in a new frontmatter called \"slug\".\n. @juliaelman This is bc the page is too short, so there's nothing to scroll to at the moment. Once content is added to those last ones it will work as expected.\n. @juliaelman I'm pretty sure it will work, it's a common issue with one-page scroll sites. I've seen this issue many times before and as soon as content is added, the page height increases and it has something to jump to and works as expected. You can test this by adding an image and text to the last component. If you still experience the issue let me know and I'll take a look.\n. I just want to document that this appears to be a webkit bug, and works fine in Firefox, cc @juliaelman \nFirefox:\n\nChrome (webkit):\n\n. @mollieru this is fixed in: https://github.com/18F/govt-wide-patternlibrary/pull/70\nThis is what it looks like:\n\n. We'll consider adding this to the Standards if we create a larger \"dark patterns\" section or as part of the documentation for another component, like a static hero element. Closing for now, but thanks for your support on this issue!. @ErieMeyer thanks for your contribution! Quick question: If this is just a page of text, do we need to create a jekyll collection? Basically, are you planning on breaking this out into partials? At the current state it looks like a single page, which is fine and can live on the site as is.\n. @ErieMeyer Also, @juliaelman just brought to my attention that all of our current pages are written in HTML, not markdown, while the components feeding in to the pages are in markdown. Would you rather this content be in markdown or HTML?\n. @ErieMeyer actually leaning towards converting this to HTML for consistency. If this ends up becoming something more complex where we need more sections that you want to abstract out and use markdown, then I think that will be a good time to consider creating a jekyll collection for that.\nWould you like to do it or should we?\n. @juliaelman it's already included. See last commit and last line in description. Thanks!\n. This is done in this PR: https://github.com/18F/govt-wide-patternlibrary/pull/71\n. Resolved in https://github.com/18F/govt-wide-patternlibrary/pull/71\n. Completed in https://github.com/18F/govt-wide-patternlibrary/pull/69\n. @mollieru please see https://github.com/18F/govt-wide-patternlibrary/issues/76#issuecomment-114963532 and let me know if you have any questions.\n. Just added it in the checklist, it was included in the source files. Closing this issue.\n. @mollieru it's already been added to this PR #69, we just have not merged yet. Please refer to this PR for missing components bc I think the ones previously mentioned are already here. https://github.com/18F/govt-wide-patternlibrary/commit/8aaef3768aba3c69392c779ae1feacb8019efe2f\n. @ErieMeyer is this project private? I'm seeing a 404 page when I click that link.\n. @Scotchester what a handy tool! Does CFPB follow AA (4.5:1) or AAA (7:1) color contrast ratios? What are we supporting?\n. @dannychapman @Scotchester My understanding is the pixel values in the visual examples are geared more for visual designers and print but the library will indeed use rems/ems. You'll see currently they show both in the examples, but we'll be building out the one without guides. \nI think it could be cool to toggle to see the guides or just have a separate style guide for print designers. Open to suggestions.\n\n. @mollieru maybe we can validate this a bit more with user testing before adding it as a feature? @colinpmacarthur @carodew \n. Thanks @Scotchester. Let me know if https://github.com/18F/govt-wide-patternlibrary/pull/88 looks right to you.\n. @juliaelman added in the grid examples image. Otherwise looks good to me!\n. Yes, we are planning on building in this way. Thanks for your input @andrewmaier!\n. @andrewmaier we haven't started building that component yet. What approach do you recommend?\nHTML5 with JS fallback? Any examples of folks doing it right / that we can adapt?\n. From @andrewmaier... \nTL;DR It\u2019s a complex interaction and we don\u2019t know as much as the operating system / user agent\n. @mollieru This solution would mean we use browser defaults, so whatever Chrome, Safari, FF, IE use by default is how it would look and work.\n. :+1: \n. The last commits fix broken links and text issues. Also changes layout to styleguide to fix max-width text issue. This is what it looks like. \n\n. Last commit fixes broken link, otherwise looks good to me! \n\n. done!\n. looks good! :+1: \n. @dannychapman Yes! I think it's totally correct that our pattern library will not conflict with any framework as we plan to namespace our classes. Framework support sounds out of scope at this phase of the project.\n. @cew821 this library is using Bourbon, bc it's a simple, lightweight library. It also uses Neat, Bourbon's lightweight grid system. Our components will be modular enough that it won't conflict with any of the frameworks you are using.\n\"Bourbon is a Sass mixin library that simplifies the creation of cross-browser compatible stylesheets. Sass mixins are basically functions and thus only add to a CSS file\u2019s size when they are used by other style rules. As a result, Bourbon is very lightweight by default.\"\nWe did not want the library to be tied to a heavy framework, but wanted to build something lean, modular, and reusable. More research will need to be done around government use of frameworks to make an informed decision on providing support. It may make more sense to allow people who want to use this on different frameworks to fork our library for their use. Or just cherry pick what they need. Stay tuned!\n. Also note: We do not have inline styles in the typography section (italics, em, bold, strong, preformatted code, highlighted text). Do we want to add this in?\n. @juliaelman we are adding the download buttons on the two components we are testing with, accordions and footers. This is not one of them. Thanks for pointing this out!\n. @noahmanger added css-only accordion-style nav to 18f pages. Can we integrate with this work for the big footer? https://github.com/18F/guides-template/pull/16\nUpdate: we will be using our JS accordion which we've already built out for the library.\n. @juliaelman I can fix this with word-wrap: break-word;, but what elements should I set this on?\n\n. @juliaelman sure, I already messaged her earlier about this.\n. Do we want to consider providing an alternate label style for hints?\n\n. @carodew text size and shade of gray should be all I need.\n. @colinpmacarthur we haven't started building out forms, so not yet. \n. +1 @Scotchester hero units and carousels are two different things\n. This is done here: https://github.com/18F/govt-wide-patternlibrary/pull/137\n. I think we may want to consider adding a breadcrumbs into its own component in order to add the information @jjoteal is talking about. I think it may get lost with everything in the headers/navigation.\n. @colinpmacarthur It sounds like @jjoteal is referring to top-level link \"Topic\" while you're referring to the dropdown link \"Nav link 1\". This also occurs in the footer navigation.\n@dannychapman we use a darker color for hover states on links. Serif links have a dotted underline for links and solid underline on hover (along with the darker color). Not sure if we've considered active states for plain links. We have for buttons. What would you suggest?\n. The border width of focus state is currently 2px and agree this could be bigger.\n. Links already behave like this and explanations can be added via Usage and Accessibility guidance, which have yet to be written out.\n. Related: https://github.com/18F/govt-wide-patternlibrary/issues/172#issuecomment-119207401\nWe have to discuss at large at whether or not we should be recommending placeholder text at all. See alternate idea here: https://github.com/18F/govt-wide-patternlibrary/issues/117#issuecomment-119069873\n. Related: https://github.com/18F/govt-wide-patternlibrary/issues/38#issuecomment-119335648\n. @mollieru previously we included <button type=\"submit\">Submit</button> and <input type=\"submit\"> in buttons but the team decided to take them out bc they looked visually the same as other buttons. Now we just show <button>Static</button>. This may be something we'd want to include in usage, if we're not going to show in the example.\n. Sure, also other forms of buttons are <button type=\"button\">Button</button> and <button type=\"reset\">Reset</button>\n. @colinpmacarthur I believe @AccessForAll means that every form should always include a submit button and not rely on scripting to submit it or activate something.\n. We are already including this in our forms. Closing this issue.\n. Initial fixes for this here: https://github.com/18F/govt-wide-patternlibrary/pull/175\n. Great points @juliaelman! I think we gotta chew on this issue some more. Some thoughts: If a user does not include our list styles then we won't have the issue you reported. It will only occur when they include it, when that happens the unstyled list class will prevent the styling issue. \nI'm trying to think if there's another smart way of including the fancy flush left lists. For example, with the max-width: 500px for body text, I'm utilizing the cascade so when there is paragraph text inside a usa-content class, it takes that max-width. Could something similar work? I'd hate relying on the cascade too much, but maybe it's necessary for highly used elements like this.\n. @juliaelman small detail, but there is a flicker when hovering over the \"copy code\" button. It quickly shows the hover state and then switches to the regular button color.\n. lgtm :+1: \n. lgtm :+1: \ntiny tiny note....\nwe are somehow off by 1px in Firefox. Webkit is ok.\n\n. Update: changing .sidenav { top: 72px; } (from 73px) in only Firefox seems to resolve this. \nBut I don't know if we should be implementing FF-only fixes .But it's also just for the styleguide, so shouldn't be that big of a deal.\n. Note: this is just basic styling of text inputs and error messaging will be added in next sprint per @carodew. \n. @juliaelman that's odd, it is responsive for me. Wondering if someone else can reproduce it cc @msecret.\n\n. @juliaelman that was just alphabetizing it, I didn't add or remove anything.\n. Added in a couple of linebreaks. Otherwise, lgtm :+1: \n. Done in d6aab53.\nThis is what it looks like:\n\n. Updated to use bullets in a927ae8.\n\n. I think the idea was that they'd be including the component in their own project and need update the image URL to wherever they included it, as well as assets. Open to feedback @carodew @colinpmacarthur \n. @juliaelman @colinpmacarthur added head to the footer here: 638a8bd\n. @juliaelman I was going off the UX wireframe. \nSee:\n\n. Ohh you mean on the footer.html file. \n. @juliaelman done in 3224f31.\n. @mollieru No, it was never done bc we would need to change our whole build process which is not in MVP for the project.\n. Completed #218. Closing.\n. Updating to add legend and updating address text in f514e32. \nThis is what it looks like:\n\n. Added a few style updates. lgtm. :+1: \nThis is what it looks like:\n\n. @msecret we aren't implementing placeholder text. I think the 123-__-____ was to show when a user was typing in their SSN.\n. lgtm :+1: \n. Just got the :+1: on 508 from @nickbristow \n. @carodew thanks for your feedback! That's related to the grid that we put them in. As you can see as soon as it gets to the next breakpoint it switches to the next view. If you want to change the grid system and breakpoints, that would be best to do when we tackle the grids which is not in this sprint.\n. @juliaelman good point! If we want to include the \"bar\", I feel that @msecret may recommend we use usa-search_bar a la the 18F CSS style guide.\n. @carodew the reason they are different widths is be they are in a grid system and we are using 1/2, 1/3, and 1/4 container widths that they are in. A user does not have to use them in the grid system, if they don't then they all be the same width, like they are in the next breakpoints.\n. @juliaelman done in 12dc35a.\n. @carodew done in 8888659.\n. lgtm\n. :+1: from @nickbristow on 508\n. @arvalarva yes, we will be using sentence case. Fixed in 3da21a7. Will be updating throughout the site too. Updated the screenshot as well. Thanks for your feedback!\n. There's 1.5rem too much padding on the top margin of the comments field label. What's the best way to remove this?\n. Just adding that I fixed the issue with spacing / grids in 769428e.\n. @colinpmacarthur @rhewitt22 anyone using of the library is free to make this change themselves. Since we don't know the content and use case, it's best left to our users to make the call.\nI agree with @msecret.\n. I don't think this was complete @juliaelman. This still needs to add in password validation.\n. Inside the button itself like we are doing.\n\nI don't know if there's a better way to state this cc @nickbristow \n. @mebates I believe so.\n. @colinpmacarthur \"There are a few situations (as GDS points out) where date pickers are actually useful.\" GDS has only one date picker on their site and that is for prison visit scheduling - A very specialized use case.\n. @juliaelman After chatting with @msecret and @blacktm, we think this is out of scope for the MVP.\n. @nickbristow For color contrast, don't we want this to apply to everything not just inputs?\n. @nickbristow so at what points in the library do you think it should be mentioned? Colors, inputs, etc... ?\n. :+1: \n. this got a +1 from @nickbristow \n. This needs to match our current form dropdowns. It's what we currently have on the state dropdown:\n\n\n. Same comment I left on the closed PR: https://github.com/18F/govt-wide-patternlibrary/pull/246#issuecomment-125777664\n. Yes, we are using browser defaults on the dropdown items but the actual select element should match the style of our inputs. \n. Or we could apply that styling to the <select> element directly?\n. Looking good visually. This does not need a fieldset, just a label and id on the select element.\n. lgtm :+1: \n. this got the :+1: on accessibility from @nickbristow! \n. I thought I remember on a previous thread a discussion about wanting to keep the number of fonts low?\n. +1 to @msecret's thoughtful response!\n. It sounds like if we could limit the fonts to 4 we'll be in better shape for performance. Is it possible to just use one font for Merriweather, like just for headlines? Then we can keep regular, bold, italics on Source Sans Pro. @mollieru @Scotchester @msecret @angel \n. Wouldn't it not validate if the first one (have at least 1 uppercase character) wasn't met though? I think as soon as someone types a number that should check off. Otherwise there's no way to know and it seems confusing.\n. @juliaelman just fixed the merge conflict. \n\"Screen\" is just a general way to describe the medium it appears on. I didn't see this as having anything to do with using print. It just describes that there are a broad range of screens the website will appear on.\n. @carodew @colinpmacarthur sure, we can hide the up-down controls that appear on number inputs. \n. @carodew @colinpmacarthur fixed here e18c690, d576a96.\nThis is what it looks like:\n\nNote: TODO added to deprecate vendor prefix in favor of autoprefixer: https://trello.com/c/CiAFT0Oe/231-add-in-autoprefixer\n. This is a video to indicate the issue which may also be related to this experience on desktop: \nhttp://cl.ly/cFNv\n. Is this related to momentum based scrolling? Overflow?\n. cc @vgvg \n. This may have something to do with we are scrolling within a div as opposed to a page.\n.main-content has an overflow: auto\n\nSo when you scroll the content, you are scrolling within that div. We'd need to remove all that, make the nav position: fixed, and change how the page is laid out.\n. Fixed in #279.\n. @carodew is this on all input fields or just that component?\n. @vgvg awesome, thanks! I agree that changing the header to sticky and changing the way the page is laid out is a good possible solution. I may look into this today.\nI think this is also related to #275, so changing this may knock out both bugs.\n. @ZohidSB what site is the image coming from?. Quick test on making our buttons anchor links and this is what it looks like:\n\ncc @msecret \n. Update: we must add usa-button class to anchor links in addition to the specific button class, but this is not needed for buttons. \n@msecret says it's possible to refactor and use @extend instead to remove this requirement but not a priority atm and this would be something to add in for the future. \n. I want to align the variables better, but some are really short and some are really long so you lose track of them bc they're so far apart.\n. Completed in #310 #301\n. Completed and approved by @angel.\n. We're currently using usa-button-* convention. Should we use  usa-btn-* instead? It's much terser, saves space, and quicker to type. On the other hand, I don't think we're using abbreviations in other places.\nJust checked pivotal labs and salesforce and they use btn. Gov.uk uses the spelled out button.\n. The button-secondary-{hover,active}  were in there in order to remove chaining, like we chatted about earlier. They are there to display that state in the component library and provide helpers for JS.\n. Adds feathered box shadow for focus state in 9e065fe & addfe8f.\nThis is what it looks like:\n\n.  b3be08b updates the border radius variable to the new design's 3px. \nThis is what it looks like:\n\n. lgtm :+1: \n. @juliaelman the design uses a gray border in focus state: \n\nYours uses the blue border:\n\nCan you fix this?\n. Label text should be normal weight via the new designs.\n. Where is this error state (\"Helpful error message\")?\n\n. @juliaelman can we add in the left vertical red border like the designs have?\n. @juliaelman can you make the left border 4px? I checked and that's the width in the designs. Slightly thicker than the 3px input borders.\n. lgtm :+1: \n. @juliaelman visually looks good to me, but I heard @mollieru may want a \"bordered\" version so check with her.\n. lgtm :+1: \n. Talked to @angel and artwork will not be part of this sprint.\n. @msecret I moved skipnav into it's own scss file here: a5ee334.\n. @jeremiak yeah we might just change that so there's no grid in the header, especially not for the logo. I was just following the design comps initially which indicated a grid there.\n. @jeremiak my last commits remove the grid classes from the logo + nav list. Let me know if that works out better for you.\n. This has gotten so far out of date. Closing in place of #832.\n. Thanks @vgvg! I think @msecret is currently working on v2 search bars on #296. Marco, does this help? \n. Sorry I accidentally created a new branch while I was on a different branch. I cherrypicked your commits and re-added them here: https://github.com/18F/usfwds/pull/319\n. +1\n. @juliaelman good question! I thought I should specify that this is a style only for the styleguide and not for components themselves. Do you think we're safe to just use usa-heading? I thought users might want that class for something else. I also thought about usa-library-heading, usa-site-heading.\n. @juliaelman in terms of using usa vs usfwds as our prefix, I would stick with usa bc it's shorter, easier to read, easier for new people to type (we already asking them to prefix it), and bc we're already using it on everything.\nA lot of other pattern library's have styles for the library itself. I was wondering the best way to convey that or if we should just start with using usa-heading.\n. +1 @carodew  :us:  :us:  :us: \n. @juliaelman fixed in 6f0061a.\n. @msecret we're not applying it to every single heading element. We're just applying it to h2 and h3 in the library site. Users of the library will have default base colors for all of their headings.\n. More accurately, we're applying it to certain h2 and h3s in the site.\n. @juliaelman should this also roll back the celluloid fix we did in #318?\n. +1\n. I think this is bc we are using a custom way of displaying our lists, to get perfect alignment of the bullets with the edge of the page and the content after it. However, it should still work as you expect it. This is what a standard list looks like:\n\n. @carodew I couldn't replicate the problem.\n. Closing via #324.\n. +1 thanks!\n. lgtm :+1: \n. This is not on the roadmap and not being actively developed. Closing for now, but leaving the branch open.\n. We're following visual design guidelines so cc'ing @mollieru and @angel if they be interested in changing it.\n. @webinista thanks for bringing this up! That is actually the intended width of the form. To get the wider width, you can add usa-form-large class to your form element. This has a max-width: 46rem and will give you a wider width like the mailing address form: https://playbook.cio.gov/designstandards/form-templates/#address-form\n\nThe min-width part of the query was intended as we use mobile-first media queries.\n. If you just use a div without the grid class, it becomes full-width. You can even add the grid inside any div and style the parent div however you like, taking advantage of full-width, and then the contents inside it will behave in the grid.\nMaybe we just need to add something in the docs explaining how to do this?\n. Cool, closing this... I'm doing that for the homepage if you want to check it out too.\n. @jtag we have a repo for design assets here: https://github.com/18F/usfwds-assets\n. @colinpmacarthur We aren't using indesign, that repo has the Adobe Illustrator files.\n. @craigjh great point! How about if we go to our lighter version of green for success - it's 20% lighter than the current. I think red should be darker bc it's stronger and will stand out more.\nLight green:\n\nGreen (current):\n\n. @carodew yes, but we should definitely still change the green to a lighter one. For people with red-green color deficiency, what's most important with colors is that there is a noticeable difference in the lightness of the two colors. Green appears brown/beige to them. See how much lighter CFPB's green is from the red. We should do this as well.\n. @craigjh great point as well!\nHow about if we change the text to an accessible but lighter gray and go lighter with the fill on the checkbox too?\nCurrent:\n\nLight gray:\n\nLighter gray:\n\n. This was already done.\n. @msecret the behavior is working but are you working off of the latest accordions? There should be 2 versions: borderless and bordered. Another thing that's missing is the new hover styles. \nThe PR is still using the old site design so looks like it hasn't pulled in the latest work.\n. Also there should be a <div class=\"preview\">...</div> wrapped around all examples which appears to be missing here. The reason why is bc I'm going to need to grab this class with JS to output our markup for the code examples.\n. Closing in favor of: https://github.com/18F/usfwds/pull/351\n. @colinpmacarthur I would still vote to move this to \"low\" issue bc I think it's much too specific a use case and relates to the library site, not the components themselves.\nOpen to see if @vgvg has any thoughts too.\n. We'll need to implement the larger icons in #706 resolve this and also make sure the hit area is at least 44px.\n. This seems like a very low bug to me. I vote to change the label.\n. @carodew That is bc when you go to a primary item, you are going to a new page and when you click on a sub-item, you are scrolling within that page. The behavior you are describing was never defined to us. It's not really a bug it's just how the sidenav has been implemented.\n. We no longer have this type of functionality of in-page navigation in the mobile nav.\nClosed via #1274. \n. Is this issue considered a bug or an enhancement?\n. looks good :+1: \n. I don't think this is possible to fix with the current accordion behavior which closes open content and opens the content you click on. The way to achieve this desired outcome is to leave all content open when opening new content, rather than closing. cc: @bradnunnally \n. @bradnunnally I'm not sure, but that sounds more complicated than it should be. I'd defer to another dev for that approach. My recommendation would be to do something simpler and not reliant on additional javascript.\n. @bradnunnally just to clarify, is the idea that we'll change the behavior so items don't auto-close after selecting a new item? Or something else?\n. @jpyuda are you thinking we should make <td> cells white for the table component or custom styleguide CSS?\n. @colinpmacarthur this was a style issue and resolved on the latest PR of style tweaks. See staging for updated alerts.\n. This was resolved in #376\n. This works for me.\n. Update: we don't have a contact form anymore.\n. The site does not have a Contact Form anymore so closing this.\n. There's no Contact form anymore so closing this.\n. @colinpmacarthur's screenshot and @carodew's look like the opposite border width issue is happening. Is that correct? Thicker border on medium vs. small and large and vice versa.\n. I just checked on Moto G (don't have access to E) and not seeing this issue:\n\nIs this safe to close? cc @bradnunnally. \n. Closing for now. Please re-open if this remains a problem.\n. There's no SSN on the site, so closing. \n. Resolved via #505.\n. @cew821 just checking in if this is still an issue, we've since made changes to the text line height.\n. There's a new sidebar nav - I don't think this problem exists anymore.\n. @colinpmacarthur can u open a new issue or trello card about removing the search bars? Also did u check that we are not using any of the other variations in other components? Another alternative is to display them in 1/2 rather the the 1/4 so it doesn't get too small.\ncc: @msecret \n. nice work @msecret, i'm still wondering how this will work when we have more complex layouts, but we can review when we have more time down the road.\n. @colinpmacarthur I tested this in emulator for the iPad and don't see the issue. Can you confirm if this is still an issue?\n\n. @colinpmacarthur unfortunately we do not have an iPad to test this. This also is feeling like a library-specific bug that I would vote to move to low/post-MVP.\n. TODO: check why we are having these functions as instance members on the generateCodeSnippets function if we're not using that as a class. \nPossible reasons: \n- keep everything contained within the generateCodeSnippets function\n- make it easier for unit testing\n. @msecret we need to get rid of the other padding styles as well so it's flush.\n\nAlso I think @mollieru asked us to remove one of the Grids headings.\n. I fixed the above in 213c921, 4d4733a.\n. @msecret the changes are not visible for grids bc preview-no_border is added to grids.md in collections, however there's now markup added directly to grids.html in pages, and preview-no_border is not there.\n. Font guidance will need updating, but let's review as is and get the ball rolling so others can use the newest typography. @msecret \n. @msecret re: the performance.png - vizdee is working on custom graphics for that and what's there now is placeholder.\n. The reason why we're not using our own grid was bc this page used a custom design and has unique proportions which unfortunately do not correspond to our 12 column grid system. \nIf vizdee wants to change the design to work with our grid system, then we can definitely use our own grid. \n. I'd also add that this is the colors page, where the primary purpose is for designers to see the colors being used on the site. \nWe are not providing any code or saying that this should be the way to structure a page. It's a pretty bespoke / one-of-a-kind layout which I do not foresee ever being used or needed on a govt site.\n. So we will have some markup in pages and some in collections? I worry that this makes the organization inconsistent and will be hard for people to find where things are. \nAlso the way it is now we have some markup of grids in collections and pages. We should not have duplication and have grids markup in only one place in the repo.\n. @msecret yep, that's absolutely a-ok - my question is more about how it's implemented organizationally in the file structure, and how we're starting to break things up and it's losing its consistency.\n. @msecret yes it ensures that trello card is still complete. It only changed the underlying file structure.\n\n. @msecret not yet, this was just to implement the border radius update. But we can leave this open to fully test it, too if you like.\n. @mollieru @angel see @msecret's screenshot of the max width of text inside the accordion. Is this the desired result?\n. @msecret regarding the padding issue, can we keep the padding on the accordion as it was and then remove margin-top on the first heading?\n. @msecret is this going to be for all accordions or just the documentation?\n. @msecret right, so using a <p> tag will make it look decent?\nI think @mollieru would like to ensure that the design they outlined is met:\n\n. @msecret I talked with @angel and we want to know if we can remove the max-width on <p> text for text inside the accordion?\n. @msecret so it sounds like we need to go through and only use .usa-content when needed?\n. @msecret can you explain what you mean \"by using adjacent selectors\"?\n. Is this the correct PR to change max-width in?\n. @msecret I think the .usa-content issue should be done in a new PR, not this one. So I'd advise we leave it as is, and the other PR should resolve this issue.\n. @msecret looking good! it looks like the documentation accordion is just added to components. I'm not seeing it elements, grid, typography, etc...\n. lgtm :+1: \n. :+1: \n. I would choose a max-width for paragraph text but not sure if it makes sense to use for alerts. Typically alerts go full-width.\n. @msecret we could also recommend using the 2/3 grid for main content and an optional sidebar as the \"default\" layout. Since there is a mismatch between 2/3's layout and max width text, we could make our main container smaller and/or make our desktop text larger, until they match. This would offer the most flexibility and interchangeability between the two approaches.\nCurrently we are using max-width of text within usa-content class, so its up to devs to decide how close they should add the class to their content. For example, some devs may choose to add it site wide while others may add it per text block.\n. Yup, closing now.\n. @colinpmacarthur nothing wrong with that! It'll just drop a few items to the second line rather than keep them all tight on a single line.\n. @colinpmacarthur done in 3fc9b21.\n. @angel I talked to @mollieru and think it's fine to center based on the whole text bc it makes it more robust, and we can revisit this later.\n. This can be fixed with:\nselect:-moz-focusring {\n    color: transparent;\n    text-shadow: 0 0 0 #000;\n}\nvia https://stackoverflow.com/questions/19451183/cannot-remove-outline-dotted-border-from-firefox-select-drop-down#answer-19451423. The site doesn't include a range slider anymore so closing this out.\n. @carodew when a radio button is focused, it is selected. That's the way they work, you can key up and down to select it.\n. It's up and down keys for radio buttons\n. @carodew fixed in https://github.com/18F/usfwds/pull/479. Can you please test and confirm?\n. @carodew I just tested this and didn't see the issue like you did. Can you confirm if you're still getting this?\n\n. This is a browser setting that users have to set in order to access text links via tab. And is only for Firefox in which it's a setting. In Safari, you must use option + tab to access this. See: http://www.456bereastreet.com/archive/200906/enabling_keyboard_navigation_in_mac_os_x_web_browsers/ \nIf you switch to voice over, which people who have disabilities may be doing already, it works - you can tab through links.\nThis works in Chrome which has it enabled by default:\n\ncc @carodew\n. TODO: look into how line height is being set on small and medium search bar inputs.\n. @carodew resolved in #492.\n. Closing via https://github.com/18F/usfwds/pull/420\n. It follows this schema:\n```\n\n\n    Documentation\n  \n\nAccessibility\nAs you customize this form template, ensure it continues to follow the:\n\nItem 1\nItem 2\nItem 3\n\nThere are no other specific accessibility guidelines for this form template.\n<h4 class=\"usa-heading\">Usability</h3>\n<h5>When to use</h4>\n<ul class=\"usa-content-list\">\n  <li>Item 1</li>\n  <li>Item 2</li>\n  <li>Item 3</li>\n</ul>\n<h5>When to consider something different</h4>\n<ul class=\"usa-content-list\">\n  <li>Item 1</li>\n  <li>Item 2</li>\n  <li>Item 3</li>\n</ul>\n<h5>Guidelines</h4>\n<ul class=\"usa-content-list\">\n  <li>Item 1</li>\n  <li>Item 2</li>\n  <li>Item 3</li>\n</ul>\n\n\n\n```\ncc: @colinpmacarthur @carodew \n. @carodew we do not have focus states for text links. Should we? If so, @angel or @mollieru can you give us the design or expected behavior you would like?\n. @carodew fixed in https://github.com/18F/usfwds/pull/476. Can you please test and confirm?\n. Correct, and also: http://dowebsitesneedtolookexactlythesameineverybrowser.com/\n. Closing bc this is the expected behavior in IE8. Thank you @cvrebert.\n. Correct, and also: http://dowebsitesneedtolookexactlythesameineverybrowser.com/\n. Closing bc this is the expected behavior in IE8. Thank you @cvrebert.\n. :+1: thank you @colinpmacarthur! \n. Wonderful, thank you @jenniferthibault! you did it right :+1: \n. lgtm :+1: \n. I'm not seeing this in IE11 on Browserstack. Is it still an issue?\n\n. Related to https://github.com/18F/usfwds/issues/421 - we don't have a focus state defined for text links, so browsers are implementing their own defaults. Resolving #421 will resolve this.\n. @jpyuda correct, we have a focus state implemented on inputs and buttons. But we never defined the state for anchor links. Sounds good!\n. @carodew this a standards site-only issue and a style issue and would move it to \"low\". This is not browser specific. \nIt's bc @msecret implemented a margin-bottom = 0 for last-child elements in order to get consistent spacing for the last items in the accordion to the bottom of the accordion. This works for flat structure in accordions, but not when we start adding grid items into it. I'll defer to @msecret to decide the best course of action forward.\n. @jpyuda definitely, for the second bullet. Going to assign this to @msecret for the reasons above.\n. This was resolved in https://github.com/18F/web-design-standards/pull/496\n. @carodew this is also a browser specific issue with how IE renders box-shadows. I think we either implement a different focus style for all or leave this be. Will defer to @angel for alternate styles. \nI'm not sure if this feels like a medium level too.\n. The site doesn't have a range slider anymore so closing this.\n. Fixed in #1251.. @carodew this is not going to be an issue when we add the home page. I vote to close this. Feel free to check out the add homepage branch and review: https://github.com/18F/usfwds/pull/306\n. @carodew this is solved on the current site. cc @jpyuda \n. @angel after a few updates, this lgtm. Want to check through and let me know if these are ok?\n. @angel I fixed the first issue in 6ed0ff1.\nFor the second issue, we don't have that SSP light weight in our google-fonts.css or fonts assets.\n. @msecret can you look at this since you worked on PW validation. I don't think the issue is the blue checkmarks not appearing, I think it's actually not validating. Bc ie11 is a modern browser and should be able to get background images.\n. @msecret yep, for some reason, password validator has stopped working on all browsers. Can you review?\n. @msecret since you worked on buttons, would you like to take this one on?\n. @colinpmacarthur the homepage outline button was resolved in #608.\nThe big button and disabled button are still issues.\n. Fascinating, thanks so much @chinaowl and @brendansudol, this was a total mystery to us! :tada: \n. Fixed in #1101.\n. It still works tho, so maybe it's ok.\n. The point it's scrolling to is hidden bc there are no headings on those components.\nDo we want our forms to be consistent and everything to have headings? Right now some do and some don't. The reason we did that originally was bc we have the name of it already within the form itself via the legend. cc @mollieru \nAlso I chatted with @vgvg and this seems like an easy fix. Just needs to update the CSS selector used in JS to use our new sidebar selectors.\n. @carodew Ok and just to let you know @vgvg is currently working on this issue in order to get proper spacing back when you click on it.\n. @carodew if you follow the conventions from the rest, I don't think it should, but we can always test when he has the fix.\n. Fixed in https://github.com/18F/web-design-standards/pull/496 @jpyuda @carodew \n. @carodew which PRs?\nCan you describe what you are doing to see this issue?\n. Seems to be working, so closing this.\n. closing via #440\n. Closing as we do not support older IE anymore.\n. I think there is likely an unclosed HTML tag on this page bc it sounds similar to: https://github.com/jekyll/jekyll/issues/2313\n. Closed via #838.\n. I just reviewed with @nickbristow and got the :+1: \ncc @msecret \n. @colinpmacarthur I fixed the link in #498. Correction, you wouldn't hit spacebar, you'd hit enter. Part of the content gets hidden but that's bc we have a fixed header that covers it up. \nI don't think skipnav has anything to do with tabbing, it just skips you to the main content area of the page, visually skipping through navigation, but not even sure if it makes sense for the styleguide layout bc the content starts immediately, and we have a fixed header.\n. @jpyuda are you saying we should implement this with JavaScript? Can you send over an example that does it in the way you describe?\n. @jpyuda I thought this was being implemented in the standard HTML way. Is there something that looks off to you with how it's done?\n. Thanks so much @KimberlyMunoz! We are adding that in https://github.com/18F/web-design-standards/pull/519.\n. Fixed via #519.\n. @colinpmacarthur @carodew was this bug for the library site or our homepage? I think this was written before we added in the home page.\n. @carodew cool just wanted to point out that the homepage image that @angel posted has a focus state around text. It's not a link.\n. Adding a display: block to the button should resolve this.\n. Just looked again and not seeing this issue. This is what I see:\n\ncc: @carodew \n. lgtm\n. @colinpmacarthur this is the default behavior for buttons in IE, to shift when clicked. Do you want it removed for all? We don't do this in any other browsers.\n. Also this is only for button elements, so maybe you can add something in the documentation, that they need to add the disabled attribute?\nWe wanted this to be usable for any way someone want to use a button, and many people use anchor links and want this style. Another idea is we switch all of our buttons to use anchor links in the example. Bc we don't want that attribute in anchor links. cc @jpyuda \n. I actually think we should add disabled attribute here bc that demonstrates it's unusable and un-clickable.\n. Something strange happens, the dots cut off. I typed in 5 characters in the top and 4 on the bottom field. You can see they're partially hidden.\n\n. I just tested again in IE 10 and not seeing this problem. \n\n. @mollieru the grid margins are 30px\n\n. By default, Neat calculates gutters based upon the golden ratio and uses modular scale.\n$gutter: modular-scale(1, 1em, $golden) !default;\nhttp://thoughtbot.github.io/neat-docs/latest/#gutter\n. but the site margins are 30px.\n. Closed via #1284.\n. Looks good\n. @msecret will we run into any issues with nested first-child elements for this same reason?\nLike should we also add:\n> *:first-child {\n     margin-top: 0;\n   }\n?\n. @msecret can you add it in just to be consistent? I can't think of a regression we could get from doing this.\n. lgtm\n. @mbland done in f3c6bc4.\n. Great stuff @vgvg! \nHere is an image to show grids working in IE8:\n\n. Superseded by #520.\n. @carodew line 55 says \"Use\" should this be Usability instead?\n. Why are we opening the link in a new window? \nhttp://www.smashingmagazine.com/2008/07/should-links-open-in-new-windows/\n. @colinpmacarthur The wording change is fine, but you included opening in a new window in this PR.\n. Visually, this is an issue with using box-shadow for the outlines, will look into it.\nFunctionally, it is currently skipping it bc there is not href. This will change when we add in the link to the file.\n. I think this may be bc we have a heading inside of the anchor link.\n. Not an issue anymore since we are linking the text only.\n. @jpyuda It says it's coming from jQuery.\n. Fixed via #621.\n. This is fixed in #613.\n. Resolved in #602.\n. Answered above.\n. Resolved in https://github.com/18F/web-design-standards/pull/597\n. @jpyuda that's bc I'm forcing that link to be blue, but not the hover. Do we want the whole thing to have the visited purple style or blue underline even if it's been visited before?\n. The reason to do purple is to be consistent with the visited treatment we're recommending for links, since it is a link. However it is the homepage so could see a case for having it always be blue.\n. This was by design and for legibility.\n. All headings have a margin-top: 1.5em which is proportional to the font size. So a smaller heading of h3 will have less margin top that a larger heading like an h2. We don't want to change our type system just to acomodate this. \nWe can either target each issue selectively and add a little more padding. Or we can wrap each section in a div and add a margin.\n. This seems to have gotten fixed at some point and is no longer an issue.. Resolved in #708.\n. This was by design I believe.\n. Resolved via #709.\n. Resolved via #845.\n. Closed via #778.\n. @konklone I removed the link to the dap CDN and replaced it with our local file. Can you review and let me know how this looks?\n. @konklone that's how it was originally, but @msecret said we should switch to local bc CDN was not preferred. Which is why I reverted the deletion of dap.min.js and moved it here.\n. @konklone updated to use use the dap.digitalgov.gov hosted DAP code fc1dd07.\n. Resolved in #719.\n. If we add this rule then all lists get the underline like the sidebar.\n\n. Closed via #1274.\n. I checked and this is not possible to do. \n. This can be resolved by using webkit's styles when autofill is active for the select element. However, doing this, it loses our custom styles in this scenario, but this might be OK (or at least better than the icon disappearing).\nCode\nselect:-webkit-autofill {\n  appearance: menulist;\n}. Before moving forward with this, I want to check with @thisisdano to see if this would be an acceptable fix. This is what it would look like next to a regular input:\n\n. Related to #812.\n. This never made it into development.\n. Fixed in #608.\n. Is this on other text inputs as well? Or just search? Looks like safari is adding their own styles.\nhttps://css-tricks.com/webkit-html5-search-inputs/\n. @angel thanks, what a weird thing that it changes. Hopefully #603 fixes this.\n. Thanks for checking @carodew. Closing via #603.\n. @carodew are you hitting refresh in the emulator? I did not experience this in emulator or phone for most. I checked every documentation and only saw this effecting dropdowns.\nAlso is @jjoteal looking at our most up to date code on staging?\n. @carodew I was testing on an iPhone 5\n. This only happens on text with code snippets, which do not break.\n. Fixed via #663.\n. @carodew this is the new mobile header. \n\nWe never added the \"view on github\" by design.\n. Fixed in #635. Thank you.\n. I think just displaying the site title would resolve this.\n. Just tested on IE 10 and 11 and not seeing the problem. Closing for now, feel free to reopen if it pops up again.\n\n. Not able to reproduce the issue. Screenshots of the forms in Safari below:\n\n\nClosing.\n. I changed all background image sources from ../img/picture.png to /assets/img/picture.png to get it to work locally. Looks like it stopped working on the live site, bc it is looking for: https://pages-staging.18f.gov/assets/img/alerts/success.png instead of https://pages-staging.18f.gov/web-design-standards/assets/img/alerts/success.png\nWith ../img/picture.png it looks for: https://pages-staging.18f.gov/web-design-standards/assets-styleguide/img/alerts/success.png instead of https://pages-staging.18f.gov/web-design-standards/assets/img/alerts/success.png\n. Closing in favor of #607.\n. Another advantage is we could just include styleguide.scss and potentially include styleguide html and then our users would get their very own styleguide for free.\n. @msecret this just produces a shadow below the header, not all around:\n\n. @msecret I don't know why overflow: hidden was used.\n. Looks good.\n. @angel sorry just looked at this again. You added a h6 to the search bar and are visually hiding the label. This doesn't make sense. We should just use the label as it's title and remove the extraneous h6.\nUnless you always want the label hidden? cc @msecret \n. @colinpmacarthur they could potentially look identical visibly. This question is related to the markup. In this PR, we are visually hiding the label and adding an extraneous heading. I suggested to remove the heading and leave the label visible.\nUnless you think that someone should always have the label hidden, I would not hide it. So that's what we're asking you. \n. OK will leave it as is with the label visually hidden bc that's how we anticipate people using it on their sites.\n. cc @msecret for JS review.\n. @msecret how about we just have the medium breakpoint for the footer and any other components that need it? That will give us the most flexibility and less having to go and override things.\n. @msecret I'm not so much concerned that this is the homepage, what I'm concerned about is I see my use of the grid as a very normal thing that I'd expect our users to do as well.\n. @msecret I think a good general rule is to offer the less complex thing as default and when you add complexity to do it on a per case basis.\n. @msecret you mean as an override?\n. @msecret do you mean it should span 2 columns bc 2/12 = 1/6 ?\n. @msecret By going with 2 columns, that fixes the size, but the margins still get killed bc it's the 3rd one:\n\nAnd sure, we could override this too, however we shouldn't expect our users to keep up with all of this.\n. @msecret probably gonna close this and do it a different way.\n. Closing via #630.\nAs @norrishung once said, \"the grid has its limits, and you have to know when to not use it :smile:\"\n. @angel you need to make sure it works for desktop. Now it looks like this:\n\n. lgtm :+1: \n. Did we change the URL we plan to use from /design to /designstandards? @mbland @mollieru \n. @mbland your PR includes an older version of config.yml which still has:\n# 18F pages base url config\nbaseurl: /usfwds\nurl: https://pages.18f.gov/usfwds\nwhich has since been removed.\nCan you update to use the latest one. Currently it goes to http://127.0.0.1:4000/usfwds/ locally.\n. cc @jpyuda \n. Added in https://github.com/18F/web-design-standards/pull/662. Thanks @konklone! \n. This will need additional research into the new footer designs for #574 before we can merge this, so closing for now. #346 will remain open so we can follow that up separately.\n. @juliaelman there's still a lot of styleguide classes in this. Were you going to swap it for preview-first?\n. @juliaelman I don't mind adding preview-first to a heading before the actual code, but this also adds preview-first to the actual code and don't want people to copy that over.\n. How about adding a class to the preview div and trying to target the the selector through that? That will keep our code samples much cleaner.\n. Closing for now as this is not being actively developed and will have some new design work coming in to the website. #564 will remain open to address at a later point.\n. I can confirm that the JS error is gone in FF.\n. Hope this answered your question. Let us know if this still seems to be a problem.\n. @mollieru are al of your PRs related? Can you do this in a single PR?\n658 #659\n. @mollieru can you then create an issue about what you're trying to do and then we can assess in triage and a dev can help.\n. Will be done in another PR.\n. Will be done in another PR.\n. Will be done in another PR.\n. @mollieru I believe @jpyuda is working on this section.\n. @jpyuda I'm still seeing this issue on dropdowns:\n\n. Looks good. I agree, it will be hard to remember to keep adding these in.\n. Resolved via #676.\n. @alexose good call. I have hidden files hidden by default so didn't see these. I only see .DS_STORE, not  __MACOSX. When I delete it, it keeps coming back.\n. We will not be adding in version number to the site.\n. @mbland When I run the server now, it runs from http://127.0.0.1:4000/. Is this the expected behavior? Or is it also supposed to run from http://127.0.0.1:4000/designstandards/?\n. Great, thanks for the clarification! lgtm :+1: \n. :+1: \n. lgtm, @mollieru says that this follows our own guidance.\n. :+1: \n. Images are blurry. We should resolve.\nIs this the focus we want? the image is a link but doesn't have a focus state:\n\n. Thanks @alex!\n. I think putting an \"and\" between \"compliance, reuses\" would make this a grammatically correct sentence. cc @awfrancisco \n. Yeah I was wondering why we have that. Do we even need to say \"high standards\"? Can't we just say we follow 508 compliance?\n@mollieru @carodew @awfrancisco \n. @mollieru After chatting with the writing lab, we think we should be changed to \"industry-leading 508 compliance\".\n. Some more feedback...\n\"Start 'A team of U.S. Digital Service and 18F designers and developers built this resource to the highest standards of accessibility.'\n\"Otherwise you're starting two separate clauses about the same thing by describing it as \"built\"\n-@jameshupp \n\"Yes, I'd divide the intro into a few sentences\" \n-@kategarklavs \n. @StephenOTT thanks for your feedback. \nThe primary audience, at least initially, for using the standards is U.S. government websites. The \"usa\" namespace was an agreed upon short, but sweet namespace that we'd use for prefixing. That is an interesting idea to use a variable for the Sass, but how would we be able to have the HTML markup use a variable?\n. @StephenOTT yes\n. Your suggestion is appreciated, however it is not on the current product roadmap.. @robinwhittleton this is really great, thanks! \nI was actually meaning to add that in myself, but toward the end of the project we decided to officially support IE9 and up (See #644). However, this definitely does not hurt, so will share with the team. \nMany thanks! We :heart: GDS.\n. @robinwhittleton could you alphabetize the attributes so it follows our CSS coding styleguide? See: https://pages.18f.gov/frontend/css-coding-styleguide/format/\n. @mollieru the new content on the grids makes them uneven. Is this desired?\n\n. :+1: \n. @shawnbot agree, but the focus states don't look right when an anchor link is wrapped around the <img>, so that's why we took it out. Do you know a fix?\n\n. @mollieru I think this is the correct issue. \n@thatkahunaguy awesome! Looks like you cracked this :)\n. Fixed in #699.\n. @ErieMeyer this issue is around a search results pattern that would eventually be added into the design standards. But I think what you're asking is that it's hard to find things on the website?\n. @ErieMeyer there's a not widely known page (..shhh): https://playbook.cio.gov/designstandards/all/ that you should be able to control-F to your :heart: s content!\n. Closing as worked is moved to #1312.\n. @angel this has merge conflicts. After you fix, I can add this in.\n. sparkly, shiny, beautiful :sparkles:\n. @mbland can you resolve merge conflicts?\n. @mollieru See: https://github.com/18F/web-design-standards/issues/689#issuecomment-143040165\n. Oh I see you did break it up into two sentences.\n. @mollieru sorry, can we do one more update.... \"this resource follows industry-standard web accessibility guidelines\". Thanks!\n. @kategarklavs says.. \"I might replace \u200bIt serves as a guide ...\u200b with \u200bIt provides a guide for creating\u200b, and replace \u200bbeautiful and easy-to-use\u200b with \u200bbeautiful, easy-to-use\u200b\"\n@mollieru \n. @kategarklavs also recommends changing wording from \"American people\" to \"the public\" bc the content guide encourages use of \"public,\" when possible: https://pages.18f.gov/content-guide/conscious-style/\n@mollieru \n. @angel No that's fine. Sorry, just writing in a hurry and didn't know what was included. Feel free to specify on the PR.\n. Closed via #723.\n. Weeee! :100: \n. @mollieru can we update the intro paragraph to closer match what we went with on the homepage? There's some discrepancy between the 508 highest standards language that we went with on the site.\n. @kimballce hey thanks, I caught that here: https://github.com/18F/web-design-standards/commit/c2f08ec75d97c559cfaab5a54c8d79b30d98e1e5\n. Done in https://github.com/18F/web-design-standards/pull/725\n. @norrishung that's a good point. A few things to keep in mind: \n- the alert role is fairly aggressive and intrusive. \n- screen readers will announce the alert no matter where a user is on the page and uses a strong, assertive voice. \n- also, it announces \u201calert\u201d before each message. \n- I think it\u2019s meant to be used for dynamic changes too.\n\u201c...the alert role must be used sparingly and only in situations where the user's immediate attention is required.\u201d -MDN\nThere are other less aggressive methods like:\naria-live=\"polite\" (uses a friendlier tone)\nor\nrole=status, aria-live=assertive, and aria-relevant=all\n\nThis combination of attributes works reliably across all browsers and ATs that support ARIA, and causes messages inserted within the Span tag to be announced in succession without speech interruption, and does not cause the word \"Alert\" to be announced every time. https://www.linkedin.com/grp/post/4512178-138612399\n\nSo I think there's some nuance there, and not sure if our code samples should make any assumptions, when developers may need to decide on a per case basis what experience they want. But I agree that some examples would be useful. But we need to make sure the alert role is not abused or used incorrectly, which could happen if we added it in the code, and people copied and pasted without knowing what it's for.\n. For reference, here's a screenshot of the four alerts we provide:\n\n. You just used the latest assets folder right? bc we had other changes\n. @alexose confirmed that this was built from scratch, and not just removing politespace.scss. It includes other changes.\n. Looks good :+1:  Let's do this thing.\n. Sure, thanks @KHarshawat!\n. Currently the styles for the components are in assets and the website styles are in assets-styleguide. Can you clarify what you mean?\n. @maclover7 Ahh yes, we've talked about doing this. We'll have to see how it gets added on our project priorities in the coming weeks. Thanks for the feedback!\n. Complete in #978. Assets are now in src. Thanks @maclover7! \n. This is out of scope for the project at the moment.. Resolved in https://github.com/18F/18f.gsa.gov/pull/1206. Thanks!\n. :+1: \n. Resolved via #848.\n. @andrewhughey thanks for this! I just want to look into if there's a better way to manage z-index with Sass rather than just use z-index: 1 \nSee: https://css-tricks.com/handling-z-index/\n. @andrewliebchen good point! I think ultimately our active state will end up as a bold and blue link style so not sure if that focus state will stay. \nSee:\n\n@vgvg implemented this originally.\n. Realizing we still need this for tabbing, even with the new future style.\n. Thanks @andrewliebchen!\n. @codepo8 were you able to work this out based on the previous feedback? Let us know if you need our help.\n. @codepo8 hope the above comments were helpful. Let us know if you need anything else!\n. @harbichidian merged, thank you!\n. @deadbeef404 could you fix the merge conflict? We just updated that page. Thanks!\n. Superceded by #772 bc this has a merge conflict.\n. Could one of you review this? @msecret @vgvg @alex \n. @alex I did, but thanks anyways! :)\nThanks for the fix @kangax! :us: \n. Thanks for your feedback. We were also grappling with this same issue earlier when deciding how to write our anchor links on the standards site. \nWe found that when using #, if a user of the website clicks on a link, it jumps to the top of the page, creating an abrupt and unpleasant experience (like @kowdermeister pointed out).\nWe ended up going with javascript:void(0) bc it still functions like a link, except it does jump to the top of the page. We noticed Bourbon.io also did this. Do you have any other suggestions?\n. @dylanvalade @msecret wouldn't we want to call it in assets-styleguide/styleguide.js since this is just for styleguide presentation and we wouldn't need to bundle it in the component.js.\n. I'm pretty sure this fix is correct, can you also review this @nickbristow?\n. Thanks @SahAssar! :+1: \n. @mbland what action do you want us to take?\n. These were stale errors that occured right after launch and not an issue currently.\n. Thanks for this! Can you review @nickbristow @colinpmacarthur @carodew?\n. @dsturley thanks for catching this! :+1: \n. @aarongustafson yes, we should definitely add these in! We welcome PRs, but can also add it ourselves too.\nWould love to learn more about any other form patterns you think would be useful to include.\nAppologies for the delay. 18F is currently at our offsite this week!\n. @aarongustafson were you still planning on submitting a PR or should we do it instead?\n. @aarongustafson no problem! Let us know if you find anything else that needs updating. Thanks again!\n. @migurski GDS states: \"We\u2019re currently recommending using three fields as it\u2019s easier to reliably validate than a single field.\"\n. @migurski Right, we're just addressing memorable dates on the standards. \nAlso, https://pages.18f.gov/designstandards/ works. It's the proxy that's handled by OMB giving us issues. Our servers are fine.\n. That is a great answer @joelanman, thank you! I think context is everything, and you should test for your specific use cases.\n. Adding this note I received from Tom Byers of GDS:\nTo add to that, it does depend on the people using your form and how reliably you can validate the input. Our CMA cases page, for example, uses a single field because it has specialist users & is part of a Rails app. Because the types of users it has are more consistent than other services the team was able to check the date formats used by them and make sure to support them. Rails also has much better date libraries than other tech so this wasn't too much work to do.\nI worked on the https://www.gov.uk/register-to-vote service which uses a split field. This service had to work for everyone in the UK so the user-base was much more varied. Under these circumstances it was a lot less clear the things people would end up entering.\nResearch sessions for register to vote showed users found the supporting text, including validation messaging, and labels for the field are crucial in guiding their use of the field. This informed how we organised the work, in other words, with less data on what would be entered we focused on making the questions we asked as clear as possible.\nI can't point you directly at specific research but our teams use a Hackpad to share their research and discuss patterns. Here's the one for dates: https://designpatterns.hackpad.com/Dates-vpx6XlVjIbE. The one thing I'd point to in that is the research Alice did on the patterns her users were entering (mentioned above). This work was key to understanding the impact of enforcing a single-field approach and I'd recommend you do this kind of thing as much as possible.\n. @sequoia There's a discussion already around bower, so stay tuned. See #745 for more updates.\n. @Sequoia we now have a dist here: https://github.com/18F/web-design-standards/tree/18f-pages-staging/dist. \nAdded in: https://github.com/18F/web-design-standards/pull/1032\nThanks!\n. Thanks! We'll look into it.\ncc @mbland\n. We support the latest versions of Firefox. If you update your version of Firefox to the latest one, this will be resolved.\n. Thanks we'll look into this.\n. The standards now has support for international characters with Source Sans Pro: \n\n. Ah ok, thanks for the clarification @miguelsousa\n. This is not on the product roadmap, closing for now. . Thanks for the input, you make a good point. Are you saying to remove disabled from our list in our accessibility guidelines as items that must meet AA color contrast?\nAnd change to something like this?\n\nIf you adjust the color scheme of the buttons, ensure a minimum contrast ratio of 4.5:1 (for small text, 3:1 for large) for the default, hover, and selected states of the button. The disabled state may have less contrast to indicate that it is inactive.\n. @MickeyKay those are for styleguide-specific styles in styleguide.scss, not included in the assets you'll download in the library. I know it can be confusing not knowing this! Does that make sense?\n. @MickeyKay didn't hear back from you, so hope my answer sufficed!\n. :+1: \n. @wslack @awfrancisco I'm wondering if there's another repo about project intake or outreach that would be better suited for this issue. It doesn't really pertain to this repo.\n. Agree with @s2t2 that a good, lightweight approach would be an icons page describing that we use Font Awesome and how to add them to your project. We include a subset of FA icons in the image assets folder that the design system uses.. Thanks all! We went with the lightweight approach which you can now view here: https://designsystem.digital.gov/components/icons/. @dylanvalade it seems like there are two parts to your issue: \n- A bug in the first paragraph. \n- A design/usability preference about the menu button in the second paragraph. \n\nCould you split this into two issues?\n. :+1: \n. @imthatoneguy @Kireyin The maxlength attribute is not supported for number inputs. Do you have any other suggestions? I've included a min and max attribute in #777.\n. Resolved in #777.\n. cc @alexose, @vgvg, or @msecret can you review?\n. @afeld can you review?\n. The package is published and can be found here: https://www.npmjs.com/package/uswds\n. Completed in https://github.com/18F/web-design-standards/commit/b660bf3b858c97369e5648f73b318bec0ba5a07a.\n. This is a good idea, and we've been thinking about it too. Thanks!\n. I think if we go any direction, it may be closer to linking sketch to code like http://airbnb.io/react-sketchapp/. While a non-proprietary format would be great, the majority of visual designers we've spoken to use Sketch and haven't heard of any designers using Adobe XD yet. Will reopen this if we see a need from our users.. Refers to #783.\n. @Taitrnator this is going to go into our V2 site design, and we'll add it on to another PR. Thanks again!\n. I see you adde a margin-bottom on line 830. We don't want to add a margin bottom for all h6 alt headings, it's just that specific instance that has an issue. For those reasons, closing this PR.\nAlso if you could add a description in future PR's, we'd be able to understand it better and that would be appreciated.\n. @carodew I talked to @nickbristow and @andrewmaier and they both agreed with this route.\n. @carodew how do you plan to user test this? I can change this to a [WIP] PR if you like.\n. Also happy to leave this PR open and add to it as PRs get merged in.\n. Thanks for the question and kind words!\nThere are enough articles out there that describe why someone may not want to use Bootstrap. In fact, we take it for granted that Bootstrap is the assumed thing to use. \nBootstrap was built as an internal tool for employees at Twitter. Our system was built for designers and developers in federal government - with our own set of needs, requirements, and preferences. Our system was informed by speaking and testing with designers and developers throughout govt.\nHere are a few considerations:\n- We get to follow our own conventions and coding style of the 18F frontend guild\n- We built it from the ground up the way we commonly start our projects for the federal govt\n- We're building in accessibility from the start as a core competency\n- We would have to undo a lot of Bootstrap's CSS, so this is not very maintainable. Our system was built just for us.\n- We're thinking about modularity and reusability of our components in a holistic way\n- We built this to be lightweight, flexible, and modular\n- We\u2019ll be able to grow and extend our system as we test it out and learn from real-world projects\nFor your second question, we rather like using Neat's grid, so it doesn't present any problem for us. We think the folks at thoughtbot did a pretty good job with it and support open source projects. Our CSS is built mobile-first, outlined in the getting started section, so it's responsive from the get-go. \nSo yes, any UI system will have opinions and conventions, these are just ours ;)\n. @kottenator that's a great observation and feel free to open a new issue if you like. \nThere are advantages and disadvatages to each approach which is why it's possible to use either with the design standards. For people quickly spinning up prototypes, it seems that using predefined grids and widths is the easiest way for people to get started and change widths easily with classes. Perhaps you're right and we should use this less in our core components and more towards using includes like Neat recomends to keep it semmantic. However, I think the footer component is the only one using the grids. All the other use of grids are part of the styleguide scaffolding. \nA how to guide is a great idea.\n. Fixed in: #1274.\nView on: https://standards-staging.usa.gov/.\n. In case you're interested, here's a prototype of a breadcrumb: https://codepen.io/USWDS/pen/aqZLXp\nAnd I know pagination was mentioned too, so here is another one: https://codepen.io/USWDS/pen/eVzGzq. This is not on the current product roadmap, closing for now.. The idea of using breakpoints is that you just have to use the single class and it resizes based on the breakpoint. I'm not sure that I understand your question.\n. Oh I think I'm understanding better now after looking at your examples. When we initially made the grid, we sought to create something easy enough to drop in a class and have the grid work in a reasonable way (powered by Neat). For our super users, we're including Neat, so people can add custom grid settings when our solution doesn't work for them.\nGrids have their limits and you have to know when to use something else :smile: \nWe'll definitely keep this thought in mind, as we continue to build out and see what works for people.\n. \"two-sixths\" reduces down to \"one-third\". I think it's probably a good thing to learn how to spell twelfth :) I find that spelling out the ratio is more explicit than the numbers and easier to grasp, although I've used something like that in the past!\n. Thanks for your input! It\u2019s useful to get other perspectives. We\u2019ll stick with this as designed, but we can always look at this again later. If you want to modify this for your personal use, please feel free to fork it and go ahead!\n. This looks like it's the checkmark for the the password reset form. We'll make sure to get the png added in. Thanks for letting us know!\n. Thanks for catching this. Let's add something like:\n\nWhen adding a title to a table, include it in a <caption> tag inside of the <table> element.\n. I don't know if this works for date of birth bc we are using aria-describedby on the date of birth hint text. What should we do then? Could we use aria-labeledby instead and reserve aria-describedby for hint text? @nickbristow \n. Thanks for the catch. We'll work on getting this removed.\n. Thanks again.\n\nTODO: add this to the documentation:\nEnsure the heading level starts from highest to lowest so that you do not break the document outline.\n. Fixed in #1183.\n. @miguelsousa thanks so much for reaching out! \nWe're very interested in using the latest and greatest fonts (the current ones are just what was offered via Google Fonts). We'd want to consider performance impact as well, so optimizing it like you mentioned sounds like a good idea.\nA few questions:\n- Can you let us know what the file size difference would be?\n- What's new in those files?\nThanks again!\n. @miguelsousa I think we can only assign issues to collaborators/team members on the project. However, feel free to submit a PR and we'll be happy to review it.\n. Closing via #848. \nThank you @miguelsousa!\n. Hi @miguelsousa, just wanted to check in since it's been 2+ years since updating Source Sans Pro fonts. Are there any significant changes to Source Sans Pro since then that would benefit updating them once again?. Thanks for catching this!\n. Fixed in #808.\n. Thanks for the catch :+1: \n. @afeld Cool! I opened XCode, I didn't have to accept any TOC, but it did install some things. Getting an unsupported ruby version error now.\n. Sure!\n```\n ABORTING: Unsupported Ruby version \nRuby version 2.2.3 or greater is required, but this Ruby is version\n2.2.2. Consider using a version manager such as rbenv\n(https://github.com/sstephenson/rbenv) or rvm (https://rvm.io/) to install a\nRuby version specifically for development.\n```\nI'm not finding 2.2.3 listed as a stable version of ruby, just 2.2.2.\n. Ok just checked https://www.ruby-lang.org/en/downloads/ and seems like 2.2.3 is stable so I installed it and seems like we're back in business!\n. Our README.md states: \n\nYou will need Ruby ( > version 2.1.5 ).\n\nDoes this need to be changed to:\n\nYou will need Ruby ( > version 2.2.3 ).\n\n?\n@afeld @mbland \n. This is working now. Thanks all!\n. cc @brittag \n. @mapsam can you let us know if the new alert design works better for you (darker color border on the left)? Like @rtwell mentioned, we convey the state in other ways with an icon and text so it should be discernible even w/o color.. Wonderful, glad these are working for you! \ud83c\udf89 . @ericadeahl that makes sense to me. \nFYI the second issue about the external link icon is documented here: https://github.com/18F/web-design-standards/issues/575 so we can follow up there.\n. @WestonThayer absolutely, and I find number 2 \"Maintenance effort\" the most interesting part. Even within a single org, I bet we'll find a lot of variants in how the standards are used. We tried to build flexibility in from the start so that it would get adopted. This means we'd sacrifice some consistency but I think that's ok bc we want this to be accessible to the greatest number of people.\nA few things I think will help:\n- Trying not to change the HTML markup bc we're building on a solid HTML core\n- Keeping a detailed change log for people to follow along\n- Version control and dependency management via npm\n- Creating a rich community where we can talk about these exact things, like here\nWe'll be able to learn more after further research and testing.\n. We probably should add the change log too.\n. Related to https://github.com/18F/open-source-guide/issues/27\n. @IanLee1521 I think we were debating that very thing! Not sure if we know which is best practice, w/ or w/o abbreviations - since the value is the abbreviation too.\n. @carodew I was talking with my critique group and noticed we've never seen abbreviation before. Also, how is adding an abbreviation helpful for usability. Isn't hearing \"Ohio\" easier to understand than \"O-H\"? I think it would be good to do some usability testing before merging. Or sticking with w/o abbreviations until we've done testing.\nAlso, our label is \"state\" but we're also including military and territory codes. So do we need to change the label?\n. @carodew you mention users had to type a state. How would they type on a select input? It's just a dropdown.\n. So you saw them trying to type in the select input?\n. Interesting, I didn't know that people did that. It would be interesting to see if they thought they were typing in it like a text field or knew they could jump to different options.\n. @carodew do you have any thoughts around:\n\nAlso, our label is \"state\" but we're also including military and territory codes. So do we need to change the label?\n. @bohl3r Interesting idea! I think our current nomenclature relies on the big/small variants. However, we'll keep this in mind in case this seems to be a need for our govt partners. Thanks again.\n. @rusty1992 or even simpler:\n\nSection 508 of the Rehabilitation Act\nWhat do you recommend?\n. @rusty1992 great, thank you. \nI think @nickbristow would be the point of contact regarding engaging the the CIOC Accessibility Community of Practice (ACoP) going forward.\n. @burgwyn, thanks for opening this PR. Are you able to resolve the merge conflicts?\n. @burgwyn it still says there are merge conflicts. It's kind of hard to differentiate what changes were made currently, bc it shows 33 files changed, when I think you meant to change one line of code? If you could open a PR with just that 1 line changed, that would be best.\n. Updated to the briefer \"Section 508 of the Rehabilitation Act\" via https://github.com/18F/web-design-standards/issues/823#issuecomment-148146492 in 40f237f.\n. Still showed a merge conflict so superceded in #829. Thanks for catching this!\n. @tdlowden yep! that was grabbed from this WIP PR: https://github.com/18F/web-design-standards/pull/308\n. @gwongz Thanks so much for finding this fix! That makes total sense.\n. @nuthinking The <input type=\"number\"> does not support maxlength but does support min and max attributes which we're using.\n. Yeah I think that sounds like a good idea. Feel free to draft something up and we'll take a look @nickbristow.\n@msecret I think that point is something we can add into either the Getting Started or individually per component in the docs.\n. @coreycaitlin this is really great, thanks! \nWhat do you think @nickbristow @msecret @mollieru?\n. Resolved via #909.\n. lgtm :+1: \n. I've updated the footer to state the full email address in 9db4149.\nWhat do you guys prefer for the homepage on the bottom?\n\n\n@carodew @mollieru \n. @mollieru done in b078614. Also, adding the extra space resolves #552.\n. Since we're changing the whole name to Draft U.S. Web Design Standards, can/should we still use the phrasing \"model standards\"?\n@kategarklavs @gboone @brittag \n. Hi @brittag, our homepage has changed a lot since this was opened and wanted to followup to see if the current homepage (https://standards.usa.gov/) addresses your concerns. Thanks!. Yes, it was quite some time ago! I think we address some of those questions:\n\n\"Are these standards mandatory for new government websites?\"\n\nThe new tagline hopefully addresses that's it's just a design system federal agencies can use \"The Standards are a design system that allows federal agencies to quickly prototype and deploy digital products using a baseline of design patterns.\"\n\n\"How will we hear about updates?\" \n\nThe new \"What's New\" page in the main nav also hopefully addresses this, as well as the contribution section in the bottom. If we ever have a newsletter we'll be sure to include it too.\nClosing out for now, thanks again!. Hi @fureigh, just wanted to follow up on this issue. the main scss file is now called uswds.scss (https://github.com/18F/web-design-standards/blob/develop/src/stylesheets/uswds.scss). Does that resolve this issue?. This is awesome - thanks so much @miguelsousa!\nI think we can probably create a new issue about removing SVG fonts.\nThis will also resolve #737.\n. @miguelsousa Quick question: What are old style numbers?\nWhat do you recomend as the best place to view all available characters, glyphs, etc for Source Sans Pro?\n. This is not on the current product roadmap, closing for now.. Should we specify that the staging branch is 18f-pages-staging?\n. @kottenator just to followup, it will be easier for us to evaluate the issue if it's one item per issue, rather than several (This guidance will also be added to our contributing doc). Can you break this out?\nAlso our contributing doc encourages the use of images (before + after), which is a way we can involve our visual designers more easily as well. \n. @joshbruce Feel free to skip this in relation to the other issue you mentioned. This will need consideration and review from our UX team. Critical bugs are the thing to look at tackling: https://github.com/18F/web-design-standards/issues?q=is%3Aopen+is%3Aissue+label%3A%22%5BType%5D+Bug%22+label%3A%22%5BPriority%5D+Critical%22\n. We have a new design for our form elements and will be following this approach in #2136.. lgtm :+1: \n. @miguelsousa I was just chatting with another team member - did you consider the support for SVG fonts on mobile browsers, i.e. non-chrome android browsers?\n. @brittag in all of our other text we use the format: \"The files in /path/to/file ...\"\nIs it ok to deviate from that in this instance?\n. Yes, I like that @brittag. \n. @miguelsousa could you update the text from \"fonts\" to \"font files\" so it's consistent with the rest of the list?\nSo like this:\n\"The Source Sans Pro font files...\"\n\"The Merriweather font files...\"\n. :+1: \n. This appears to be a Firefox bug: \"max-width:100% is not respected within auto-width inline blocks\":\nhttps://bugzilla.mozilla.org/show_bug.cgi?id=932996\n. Re-opening bc I found this issue to exist for IE as well - in IE9 and IE10 on Browserstack. \nI think we need to include IE in the fix in #864.\n. Fixed via #940.\n. @msecret @vgvg @alexose can any of you review this?\n. @alex @paultag we're working on providing more in depth instructions for people to use the standards on a new website.\nIn terms of installing and distribution, we started the npm idea here: add-npm (we haven't had the bandwidth to complete it yet) and created a ruby gem here: https://github.com/18F/us_web_design_standards_gem.\nLet us know what you think!\n. Re: CDN - deploying to S3 to provide a hotlink is likely not in scope for alpha/beta, but more possible when we hit 1.0.\n. Related #767.\n. @edwelker thanks for your note! @jeremiak and @msecret would know more about what more we plan for add-npm.  We're pausing for a bit before starting up the next phase of work.\n. Just updating this that you can install the Draft Standards via npm now.\n. @mollieru going to leave discussions for this in the other repo.\n. Already completed in https://github.com/18F/web-design-standards/pull/845.\n. Added here: https://github.com/18F/web-design-standards/issues/877 \nThank you!\n. Thanks @alex!\nThe _site directory is jekyll related and appears when you bring the site down locally and run it. The reason we had this in our documentation like this was bc we compile our Sass to CSS using jekyll, but since we are manually taking a copy of main.css from _site/assets/css and putting it in assets/css it seems like we should change this so it's clearer and more consistent. \n. @alex I'm going to close this out for now in favor of opening issue #885.\n. @rickleegit thanks so much, we're glad you're finding the design standards useful!\nWe created this with websites and web apps in mind, so it's fascinating to here you're thinking of using it for apps.\nQuestion: What kind of apps are you looking to create with it (platforms, etc)?\n. @rickleegit What platform is the application on (iOS, Android, etc...)?\nIs there any way to take a look at how you're using it -- like the use cases you mentioned above?\n. Ah so it is still a web app. Each use case may have slightly different needs that should be developed specifically for that and tested with users. We may add general guidance about app flows in the future, but do not have that at this time. \nLooking forward to seeing what you're working on!\n. @paultag done, thanks!\n. @BrianDiggs Added the NuGet package to the list. Thanks! :tada: \n. Moving this to the wiki: https://github.com/18F/web-design-standards/wiki/Distribution-methods\n. @kottenator separating out changes is definitely the way to go. It help keep pull requests well-defined and easier to address.\n. @kottenator we're closing this until we publish guidance on our design contribution guidelines. Thanks again!\n. @jenter I believe all conversation and development for Drupal theming is happening in: https://github.com/18F/web-design-standards-drupal\n. Correct, thanks @garrypolley!\n. Thanks @edwelker!\n. Thanks for the suggestion! We'll consider it. Maybe we can think about including more documentation about our utility classes and mixins.\n. @awfrancisco :+1: :zap: \n. Idea: instruct people to download the zip.\n. @garrypolley currently the zip file in github releases is the entire repository. We'd ilke them to download the assets assets/releases/wds-v0.8.1.zip on the repo or https://playbook.cio.gov/designstandards/assets/releases/wds-v0.8.1.zip\ncc: @alex \n. cc @alexose @vgvg @msecret @Scotchester\n. @kottenator Currently we're more open ended to either approach depending on the needs of developers and how they wish to structure their projects. Some may want to quickly prototype something in CSS. Others may want to use the strict, semantic approach.\nI agree that we should add documentation stating how you can use grids with CSS and semantically with Sass mixins. Durring the next phase of work, we'll be working to improve our developer documentation, but we're not quite ready to begin any substantial overhauling yet. \nFeel free to draft some ideas here that we can refer to when we're ready.\n. Resolved via https://github.com/18F/web-design-standards/issues/895.\n. @webinista thanks for your feedback! We'd definitely like to review some of our specificity, so this is helpful.\n. @msecret I just checked src/stylesheets/components/_forms.scss and there's no element attached like this button[type=submit], input[type=submit], and input[name=password] on the form block, so it looks like this was previously resolved. \nWhat you're referring to is in src/stylesheets/elements/_inputs.scss - would you like to close this issue and re-open one for _inputs.scss?\n. @msecret Is there any issue with: https://github.com/18F/web-design-standards/blob/staging/src/stylesheets/elements/_inputs.scss#L149\ninput[type=\"checkbox\"],\ninput[type=\"radio\"]\nDo we want to change it to\n[type=\"checkbox\"],\n[type=\"radio\"]\n?\n. @pskim thanks for your feedback! That's a great idea, hopefully we can design one during our next phase of work.\n. Style I've used on a previous project:\n\nAlso, 18F site:\n\n. I think a sensible default sounds good and a specialized class too. We can always add usa-content hr in the future too. In my experience, I've needed hr's in components (non usa-content) also. \nA note on naming: we should think through how we name things a bit. Would usa-hr make more sense bc as a dev I'd be writing <hr class=\"usa-hr\">? Kind of like buttons are <button class=usa-button></button>. Or is something like usa-line more explicit? We might want to research other libraries to how they name this component too to get ideas. Also, consider spacing: in my last project I had a need for generous spacing (60px) for written content and tighter spacing 15px-20px for a sidebar filter component.. This is not on the current product roadmap, closing for now.. You can already do this by using our heading mixins. Simply add @include h1(); (or whatever heading level you'd like) and you'll get those styles.\nMore info in assets/_scss/typography.\nThanks!\n. @juliaelman yep! that works. Closing now. Wondering if we should add a note for people to email us new ones to add.\n. @line47 thanks so much for bringing this up AND the working code. There are several different possibilities for dealing with tables on smaller screens (from the simple horizontal scroll to the more robust Tablesaw by Filament Group) and we'll likely investigate this more as we start the next phase of work. Definetly think your idea is really good and will share with the team.\nStay tuned!\n. This is not on the current product roadmap, closing for now.. @nkkl we've addressed this in our new grid system in https://github.com/uswds/uswds-site/pull/580 which will be released in version 2.0. Could you take a look and see if it meets your needs?. Good things come to those who wait :). Thanks for reviewing @juliaelman! Following semantic versioning, the last number (\"3\" in 0.8.3) is for patches and middle number (\"8\" in 0.8.3) is for features. \nI think this would be considered a new feature, thus bumping it to 0.9.0. What do you think?\n. @juliaelman Minor versions may also include patch level changes, so this does not need to wait on anything else. \n@jeremiak since we may have other changes coming in, maybe we can hold off on adding the tag so it includes the most recent changes. Typically I'll add release tags right before pushing to production. Do we also need to update the package.json to 0.9.0?\n. Thanks for bringing this up @helenvholmes!\nThe issue #571 you referenced is about the space between the input field and button, but it looks like this PR is about the space between the input and the \"Show password\" link.\nI noticed on forms which wrap inputs and labels in a div we get a margin that is too large, so I think we should hold off on applying that style. This way the input margin will be consistent in different use cases.\n\nChanging input[name=\"password\"] to input[type=\"password\"] will get the margins consistent on the Reset Password and Sign In form. However, it seems it would be safer to apply a top margin to the \"Show password\" link instead.\n. Sure, it doesn't hurt! :smile: \n. @helenvholmes thanks for the help! :tada: :dolphin: \n. @d3netxer Yes, the styleguide site is built with Jekyll (the ./go script does this for you). We thought people will mostly want to use the assets for their own projects and the styleguide site as secondary, which is why we didn't mention it in Getting started or the Installation. Maybe we could make this clearer!\n. Closing in favor of #974.\n. Thanks for catching this! We're working on a fix. \n. Fixed in #907. \nThanks @davidstenger! :tada: \n. This got the :+1: from @nickbristow.\n. Is this bc our release tag is 0.9, not 0.9.0?\n. @fureigh I just deleted the tag bc it's not ready yet. I'll re-add before we release so it aligns with the last commit of the release. When I do so, I can make sure the tag is named v0.9.0. Would that resolve this issue?\n. Yep, will do! Thanks for catching! :100: \n. Moving this note about a11y from duplicate issue #1477:\n\nensure you focus on the the modal content when the button is pressed\nensure focus doesn't escape the modal window and leak onto the page behind it\nmake sure there's an escape button that's also keyboard accessible\n. Quite a nice modal here: https://design.cms.gov/components/dialog/\n\nWe have a usa-overlay class that could be used to darken the background (used on the mobile navigation).\nNote: we'd want to abstract some of the accessibility features added in #2347 into this as well (trap focus, esc to escape, etc...). This is not on the current product roadmap, closing for now.. >  I'm not entirely sure why we need two code boxes on the page -@carodew \nThis was a solution for the issue we had. The question is, why is there presentation classes in the first place? The answer is bc the two examples are styled differently. So by breaking it out into two boxes, I can add the class on the code sample box which will be hidden from the user.\nAn alternative to keep them in the same box would be to write the code manually, i.e. not auto-generating the snippet like in all the other examples.\n. Why there's two... I think the first example is more symbolic and the second is meant to show how it would look in the real world, with text. I'm sure @mollieru can say more.\n. @carodew I think it's just consistent to how we've been doing it, that each live example has a corresponding code snippet to go along with it.\n. This got the :+1: from team. Will open a new PR against v0.9.x branch.\n. It's a very subtle difference...\n757575\n\n767676\n\ncc: @jenniferthibault @jehlers \nHappy to go either way you think is best!\n. @jenniferthibault #757575 has equal amounts of RGB making it a neutral gray. It appears more red next to the bluer gray, but I think that's just how the human eye perceives color.\n. Talked to @jehlers and @angel who both liked #757575 bc it provides higher contrast against the black.\n. We went with #757575 for now in #917, but if you find a better shade, let us know and we can change.\n. Closed via #917.\n. This is not on the current product roadmap, closing for now.. This is not on the current product roadmap, closing for now. . Correct, the year is optional and not required. Neither is the \u00a9 symbol. More info here: http://www.copyright.gov/circs/circ03.pdf \nIt seems as though we should remove these since it's used in multiple places.\nHT @brittag \n. Closed via #922.\n. @vzvenyach yes, it prevents us from having to update it each year. Since it appears in multiple places, this will save a lot of work. Also, it will take time for products to update it, so it would require us to check to see if they updated it. It may be strange to have one thing with 2015 and another with 2016 bc it wasn't updated by them.\ncc @brittag @melodykramer \n. @msecret I think so, bc now I see it and it's a pretty long list. Do you think it's valuable to keep for that reason? I just don't like the idea of an all import for main.scss bc I want to see everything that's being imported and want to get rid of an extra step, but maybe for the other places it makes sense?\n. @msecret I think web_design_standards is too verbose and we often change our name. Ideally I think we'd use wds or uswds. On the other, you can still use these includes and it's still using the web design standards even if you don't use all of them. So in a way, all is semantically accurate. \nIf we bring back the all file, how about we just add the all imports to styleguide and homepage. I like listing them all out in main.scss for the reasons in my previous comment.\n. @msecret I agree that a shorter name like wds or uswds is the way to go, but I'd hold on this until our name is more defined or we have a chance to discuss it with the team. Currently, the project is called the Draft U.S. Web Design Standards, so technically it would be duswds. Keeping what we have, at least for now, will make it more resilient to another name change.\nWe have main.scss inside assets/css because it compiles out to main.css in that location.\n. @msecret fixed merge conflict above. FYI we must keep variables first in the import order of Core as some files use variables and need them defined. \n. @msecret I changed the imports again to how it was before, until we have time to assess this further. So this PR only includes alphabetizing import sections (excluding core bc it requires a specific order).\n. Hello @Drakenhart, that's a good question! \nThe pixels recommendation on \"Visual Style\" was meant for visual designers working on static designs. The rem/em units are intended for development as we use relative units in our code, which you can find in assets/_scss/core under \"Typography\". Does that help?\nLet us know if you have any other questions.\n. Closed in #621.. @rtwell The issue with file naming has already been resolved in: https://github.com/18F/web-design-standards/pull/912 and will be available in our next release.\n. @jenniferthibault I think we're keep the code named assets so people can drop the whole file into their source code. I think we'll end up adding something else to that file for it's version number, like a change log.\n. @rtwell @colinpmacarthur should we move this over to https://github.com/18F/web-design-standards-assets since it deals with the design assets?\n. @rtwell good point, we may end up updating how things are organized too, so no worries.\n. When we get around to this, let's consider using the 18F Glossary. \nFound this design draft that @bradnunnally made for a single-page glossary.\n\nDo we have any user research existing for this?. @stphnwlkr yep, that uses the 18F Glossary I referred to above \ud83d\udc4d . I chatted with @wslack about this and he was not using USWDS for the project but just looking if he could use something from here. He's looking for additional table styles.\n. I believe there was an independent solve for this, so closing this out.\n. @skonzem thanks so much for opening this PR! We'd definitely love bullets to appear correctly as widely as possible.\nQuick question: what was the older system you found that this issue was happening in?\n. @skonzem sorry for the delay! Can you describe how you were ingesting the files into your project?\nThanks!\n. @skonzem thanks for the background!\nI chatted with @rogeruiz and we think it may be good to declare this globally. We're debating whether to add it to _base.scss or _all.scss. Adding to _all.scss is good if someone intends to use it as is, and unchanged, and it adds it to the top of the file as the first thing. Adding it to _base.scss is good, if someone wants to use something other than all the imports. For example, if someone wants to use just the accordion, we'd advise them to also include everything in Core which includes _base.scss plus the accordion SCSS.\nThoughts @msecret?\n. @skonzem but the ultimate file you're using in your project is a single CSS file (compiled from assets/_scss/all.scss), correct?\n. Actually, it's assets/css/main.scss that imports all the files from assets/_scss/all.scss into _site/assets/css/main.css.\n. @msecret should we accept this PR to resolve the only known issue, or wait until we add it to all?\n. Thanks @tysongach! I like that idea too, seems like the simplest fix. That way we can add @charset later on when we decide to. @skonzem can you check if escaping the bullet character works for you?\n. @nathand that's a great idea! Definitely more efficient than what we have now. The code was originally written like that before we were generating the .usa-current class, so we just haven't had the chance to go back and update it.\n. That's a good point, @panr. Your modification definitely looks more disabled than our button. Cc-ing @nickbristow to review for accessibility reasons.\nThanks for the suggestion!\n. Looks like there are no color contrast requirements for disabled states. See - 1.4.3: http://www.w3.org/TR/UNDERSTANDING-WCAG20/visual-audio-contrast-contrast.html\n\nIncidental: Text or images of text that are part of an inactive user interface component, that are pure decoration, that are not visible to anyone, or that are part of a picture that contains significant other visual content, have no contrast requirement.\n. We have a new disabled button that follows this recommendation: https://standards.usa.gov/components/buttons/\n\n/cc @thisisdano @donjo just wanted you to be aware of the different background color issue and the opacity approach @humancompanion took.. @rossdakin it's definitely important that people use accessible colors, but I'm not sure if the experience of colors changing before your eyes will provide a good experience and enough control. The colors that the design standards provide, if used per the documentation, will be accessible. If people choose to use different colors from the provided palette, we recommend you to test color combinations compliance using color contrast tools.\nThanks for your idea!\n. @ErieMeyer we currently do not have a tabbed pattern in the library, but that's a good idea! We can revisit this for the next phase of work and see if there's a strong need.\nAdding some links here for accessible tabs: \nhttp://heydonworks.com/practical_aria_examples/#tab-interface\nhttp://getbootstrap.com/javascript/#tabs\nhttp://foundation.zurb.com/sites/docs/v/5.5.3/components/tabs.html#tabs-deeplink-3\n. Adding a note for possible design: We could take a cue from bordered accordion component bc its function is similar to the tabbed pattern. https://playbook.cio.gov/designstandards/accordions/\n. This is not on the current product roadmap, closing for now.. Related to https://github.com/18F/web-design-standards/issues/944.\n. @bbertucc Thanks for your request! We'll take a look at this and let you know if it's something that we see as a need to build out. Stay tuned!\n. Does this PR need to be opened against v0.9.x rather than 18f-pages-staging?\n. Chatted with @msecret, we can cherry-pick the commits ourselves into v0.9.x. Thanks @mbland! \n. Added into our v0.9.x release branch: https://github.com/18F/web-design-standards/tree/v0.9.x - thanks @mbland! \n. Closed via #950.\n. Thanks @jessieay. When when the staging branch gets pushed to production this will be resolved.\n. Fixed via https://github.com/18F/web-design-standards/pull/966.\n. +1 It would also be nice if we could provide variables.scss for people to download on the styleguide site to customize their variables and add the file themselves.\n. @carodew no, they are two separate issues.\n. @msecret we're using release branches. Can you open this PR against v0.9.x?\n. @msecret re: dev instructions - sounds like we may change our git workflow so will leave it as is until we discuss next week.\nAlso, @rossdakin had some feedback in #952. \n. @msecret please update the docs that refer to variables.scss\n. If we want to get this into the next release, this PR needs to:\n- [ ] update change log\n- [ ] re-make the ZIP file\n. I see some discrepancies between defaults and variables and fixed them in: https://github.com/18F/web-design-standards/pull/1125\n. I think this is still valid - that we don't need a variables file in addition to the defaults file. \ncc @msecret \n. Sure, I'm thinking more around the variables file being duplicative, we can add an issue around that.\n. Duplicate of #896. \n@wslack feel free to add any feedback in that issue.\n. @BrianDiggs thanks for your note! There is no  assets/css/stylesheet.css included in the downloadable assets zip file. Feel free to open another issue if you still find a problem.\n. Closed via #956.\n. @msecret good question. Since the main.scss file doesn't change, it should not happen again. When we get to automating the creation of the zip file, we'll need to instruct it to use just this.\n. Thanks so much for opening this issue! Based on the gif, it looks like you observed this in Firefox?\nNote: in Chrome (below), the height is 44px:\n\n. @20Fourteen I think you're original post is right on! I just wanted to specify that the issue only occurs in Firefox and not in Chrome. So we will have to debug this for Firefox.\n. Fixed in #1099.\n. @BrianDiggs thanks so much for catching this! I've reviewed the section of assets/_scss/components/_footer.scss and can't figure out why that code block is there in the first place:\nsass\n.width-one-sixth {\n   @include media($medium) {\n      @include span-columns(2);\n    }  \n  }\nIt appears to repeat what is currently in assets/_scss/core/_grid.scss (line 29) already and is not nested in any footer selector. For those reasons, I'd vote to remove that code, cc: @juliaelman @rogeruiz @msecret \n. @BrianDiggs closing this PR in place of #981. \nThanks again for bringing this to our attention :tada: \n. @Drakenhart thanks for the request! We already have pagination designed as part of search results here: https://github.com/18F/web-design-standards/issues/703. We haven't prioritized building that out yet, but will let you know when we do / any further developments.\nRelated to: #785.\n. Sample prototype for pagination: https://codepen.io/USWDS/pen/eVzGzq. Hi @buckaroogeek, thanks for following up! There are no updates beyond the prototype on CodePen at this time.. This is not on the current product roadmap, closing for now.. Will add the UX designs we have for desktop and mobile pagination via early designs on for a search page:\nDesktop\n\nMobile UX\n\nMobile visual designs\n\nI like how it tells you the page numbers on GitHub on mobile to provide context:\n\n. @shanear thanks for the issue! It's something I've definitely thought about as well. I'll make sure we discuss with the team the best approach forward.\n. Good point, cc: @juliaelman @msecret @mbland \n. @msecret what would you recommend? \n. @rogeruiz can you add \"Draft\" in front of \"Web Design Standards\" in all the documentation you added?\n. @rogeruiz did you also make sure to modify the assets/_scss/main.scss file so it removes frontmatter?\n. Update to above comment: @rogeruiz will remove that file (assets/_scss/main.scss) as node-sass compiles the Sass into uswds.css so it's not necessary.\n. Thanks for the request, @BrianDiggs! Next week we'll be roadmapping and prioritizing new features for the next 6-12 months. So we'll have a better idea of what we'll be building then.\n. This is not on the current product roadmap, closing for now.. Thanks @harrisj! Next week we'll be roadmapping and prioritizing new features for the next 6-12 months. So we'll have a better idea of what we'll be building then.\n. LGTM :+1: \n. Agree that if we don't need the nesting then we should remove.\n. @webinista we did some major restructuring to the repo, can you rebase this off of 18f-pages-staging to resolve the merge conflict? \ngit fetch --all && git rebase origin/18f-pages-staging\nOur team can also open a new PR to do this if you prefer.\n. @webinista In addition to those classes being used to display the styles on the styleguide website, I think it was kept in the production CSS so you could easily use the selectors with JS.\n@msecret is that correct?\n. Related to #752.\n. This is awesome work! I'd like us to include this too. Can you clarify what file(s) we have to remove frontmatter from in order to run scss-lint?\nAs a side note, we didn't spend a lot of time refactoring the styleguide.scss bc it wasn't part of our distributed code, but thanks for the improvements!\n. assets-styleguide/css/homepage.scss are the styles for the homepage https://playbook.cio.gov/designstandards/ and assets/css/styleguide.scss are the styles for the styleguide site https://playbook.cio.gov/designstandards/getting-started/ Both import the web design standards SCSS.\n. @nickjs now that this is merged, we're gonna hold you to those :100: warnings. Just kidding :wink: \nThanks again for the awesome work! :zap: \n. @rogeruiz would it be source or src?\n. @jonmost was this a mistake PR as well?\n. Does this PR also include creating a release and publishing to GitHub Releases or will that be done separately?\n. @rogeruiz rebased!\n. Thanks for your question!\nYou need a container to apply a max-width and margins to. Neat just allows you to do it to a semantic container. \nThe second reason is wrapping it allows us to trigger the correct nth child for responsive layouts where we need to remove margins on different screen sizes. Without it, we wouldn't be able to call the correct column bc the child numbers would get mixed up with the rows below and above it. Note: we started trying to do it without the grid wrapped but ran into issues for this reason.\nWe use GitHub so everything is in the open and everyone can benefit from discussion. Someone else might have this question too. If you prefer to email us, we're at uswebdesignstandards@gsa.gov, but this type of question is good for GitHub.\n. Hi @paultag! If you'd like to use four columns in a row, you should use the 1/4 columns (usa-width-one-fourth). With this grid system, the right margin is eliminated on the last column in the row, so if you change the last item from the third to the fourth by adding another item, the third column will have a right margin causing it to bump to the next row.\n. Ah I see now. I couldn't tell what you were trying to achieve from your first post. \nI think you're going to have to write some custom code to do this, something like adding margin-right: 0 on every even column and adjust the width to the right size (1/2) at that breakpoint.\n. Related: https://github.com/18F/web-design-standards/issues/787\n. @paultag our grid is just a layer over Bourbon Neat with breakpoint decisions we thought would be useful to most cases. Like @msecret said, you're free to use Neat any way you please since it's provided with the system.\n. Hey! This should be fixed in the new layout grid in version 2.0: https://v2.designsystem.digital.gov/utilities/layout-grid/ - we'll be deprecating the old grid.. ~~The fixes look good to me.~~\nUpdate: see below https://github.com/18F/web-design-standards/pull/985#discussion_r54621333\n. @nickjs hey there, it looks like this branch has merge conflicts that must be resolved. Let us know if you can resolve these. Thanks!\n. Hey @nickjs, will you be able to integrate the merge conflict fixes in https://github.com/18F/web-design-standards/pull/1063? We'd love to get this in.\n. This is not on the current product roadmap, closing for now.. @nickjs Commented on one but noticed it was in many places... why are the SVGs removed? We implement SVG with PNG fallback for all of our icons.\n. @nickjs hey there, it looks like this branch has merge conflicts that must be resolved. Let us know if you can resolve these. Thanks!\n. Hey @nickjs, will you be able to integrate the merge conflict fixes @rogeruiz posted above? We'd love to get this in. Thanks!\n. This is not on the current product roadmap, closing for now.. I know we sometimes favor readability over terseness here at 18F. I wonder what would be the advantage of using the mixin over shorthand?\n@include padding(20vh null 10px 3em);\nvs\npadding: 20vh 0 10px 3em;\ncc @msecret \n. @tysongach good thing we never used Bourbon's prefixing! :) We kept our eye on \"things that will be deprecated\" and didn't use them.\n\na hide-visually mixin\n\nInteresting, we have an sr-only \"screen reader-only\" mixin as well.\n. :clap: on the release log!\nOh ohs, I was thinking of the Prefixer mixin when you mentioned them being deprecated. I wasn't thinking of the transform and transition mixins bc it didn't mention them being deprecated on the site. That's good to know!\nReading the release log, I noticed, \"The em and rem mixins have been deprecated.\" Those are definitely in the standards: So we'll have to make a note to change this.\nIf I remember correctly, we tried the clip method first but ran into some issues that I can't remember right now. Good ole positioning offscreen was more stable. I'd be curious to know the performance hit it takes.\n. That's a good catch @wslack! We disabled the ability for clicking the hash # to return to the top of the page bc we're using it as a fake link on the footer links and didn't want someone to accidentally click a link and it go to the top. I didn't realize that by doing this, we removed the functionality of hitting the top of the page on the button it's meant to. That seems like it could be confusing!\nTo fix this we need to add a class to our JS to only target this function on usa-footer-primary-section class and anywhere else we'd like that behavior.\n. > where did we even get 17px from??\nThis was from the visual design of the type system when Source Sans Pro is the body font. You'll see when Merriweather is the body font, the type system changes, i.e. body for = 15px https://playbook.cio.gov/designstandards/visual-style/#typography.\nHow would we set the body font size to 17px without effecting the 10px ems?\n. @carodew setting it to 100% means that the fonts are set to whatever the user agent has - typically this is 16px (if they haven't modified it). I don't think it's related to zooming. Setting it to 10px is a little trick developers use to ensure 1em = 10px so they can develop in a consistent way.\n. Can you can set the parent element font-size to 1rem to get around that? I don't know that I see it is a problem that 1rem != 1em. \nIf we didn't set the 10px on html, then 1em would equal the user agent size which would be 16px unless the user had a custom size.\n. So are we moving away from the 10px base font size? What about this?\nhtml { font-size: 10px; }\np, span, label, li, ... { font-size: 1.7rem; }\n*Just tested and it seems to work.\n. > Also, was there a specific reason we didn't use rems everywhere?\nI think we'd need to go in and check to make sure ems and rems are being used appropriately. For example, we use ems on heading and paragraph text margins to ensure that they scale with the text size. We'd have to go one by one and recheck the others.\n. @msecret using this method, would we still want to set our paragraph text to what the designers outlined? So (17\u00f716)em or 1.0625em? Or would we set our HTML or body to 106.25% and our paragraph text to 1em?\n. The one downside of the first approach is that adding text without a defined font size is that the text will appear tiny. Setting a percentage on html ensures a little more stability in our font sizes across elements and components.\n. @btn0s not yet, but it's on the roadmap for 2018. Stay tuned.. @btn0s Thanks for checking in! \nWe have a bunch of bugs that could always use help: https://github.com/uswds/uswds/issues?q=is%3Aissue+is%3Aopen+label%3A%22%5BType%5D+Bug%22 - you could also look by high priority labeled issues too. \nFeel free to email us or join our Slack group if you want to chat more about ways to get started contributing https://chat.18f.gov/ \ud83d\ude04 . Base font size will be configurable in version 2.0. Closing for now.. Thanks @tysongach!\nWould the other variables (@include media($small) and @include media($large)) map out to our current breakpoints as well (481px and 1201px respectively)?\n. We hope to sunset Bourbon in 2.0, so this is no longer needed.. Hi @humancompanion, those are great questions about footers! Looping in @carodew who may have some insight around this.\n. This is not on the current product roadmap, closing for now.. Perhaps we chose jQuery 1.x before we settled on IE9 and up for our browser support, which came a bit later.\n. Thanks for this PR @burgwyn! \n\"no-console\": [ 0 ] is on line 4 and line 10 of .eslintrc cc @rogeruiz @msecret. \n. Hi @edwelker, we haven't published it to npmjs.org yet. It will be published in our next v0.10.0 release. cc @rogeruiz\n. LGTM :+1: thanks @lboonebah! \n. Yes, fixed via #1005.\n. Hello @bbgvisualjournalist! That's a great question. Dealing with image paths for different asset pipelines is something that's definitely come up before and using a Sass variable to handle this is an interesting idea.\nI could see us doing this with adding a Sass variable:\n```\n// Variable\n$usa-image-path: ../img/;\n```\nTo use this, we'd use interpolation syntax\nbackground-image: url('#{$usa-image-path}/arrow-down.png')\nAnd then you'd only need to worry about setting the $usa-image-path variable for your use case.\nThoughts @msecret @rogeruiz @juliaelman?\n. @rogeruiz is this still what we will be recommending? You mentioned the other day about not using the gem. Thanks!\n. Closing and :fire: as we no longer have a local gem.\n. So this will use the bleeding edge web design standards and isn't tied to a release. Is that what we want? People might not realize that things are being changed. Should we note this and that this is temporary and will soon be changed to use a published release package on npmjs.org?\n. Superseded by #1151.\n. Links needed: \n- [ ] Getting started: for designers (Playbook website)\n- [ ] Getting started: for developers (Playbook website)\n. Not that I'm aware of @msecret. Just one clearfix mixin should be good.\n. We can currently use checked and disabled together. Closing this out!. Thanks @ismamz! \n. Will also need to update in CONTRIBUTING.md and LICENSE.md.\n. Closed via 1019 and 1020.\n. This is not on the current product roadmap, closing for now.. Closing this in favor of #1033.\n. Hi @gigifrias! Thanks for your question. The reason we're using that strategy is to align lists flush left. Browsers behave very differently and it's surprisingly hard to align them across different browsers. We followed the approach here: https://j.eremy.net/align-lists-flush-left/ which goes into more detail.\nI haven't seen different spacing before between bullet and text, and tested it locally and am not seeing that either, so wonder if something else is going on in the CSS.\nFor reference, this is what we get with a very long list item:\n\n. No problem, @gigifrias! I forgot to ask in the previous message, do you have a live link for us to look at?\nI understand the spacing is not different within one list but I was not able to get a different spacing no matter the length of the list item I used, which is why I wasn't able to reproduce the issue.\n. Awesome! So glad to hear you figured it out. Keep us posted on the new site :tada: \n. This is not on the current product roadmap, closing for now.. That is a good find @humancompanion and we ought to do the same. Thank you!\nWe used that technique for accordions and alerts.\n. @elarenee feel free to familiarize yourself with: https://github.com/18F/web-design-standards/pull/1039 - there was an IE regression introduced on that solve that we couldn't figure out.\n. That's great to hear you were able to fix this, @arielkennan! Linking @brendansudol's fix here which found the \"tiny dot\" issue so the team can implement the fix: https://github.com/18F/web-design-standards/pull/1097. Looks off to me to capitalize \"Components\" in \"UI Components.\" \"UI components\" seems to read better. Thoughts @kategarklavs?\n. Can this be closed since we have an updated nomenclature from the V2 site designs?\n. @juliaelman since this has changes to src/stylesheets/components/_skipnav.scss it looks like it needs to be added to docs and dist, unless we're finished removing dist.\n. Looks good to me too. Looping in @msecret. \n. @rogeruiz do utilities need to be added to gulp since it's a new folder?\n. @tysongach when I remove our media() mixin, I get an npm build error. If they do the same thing shouldn't Bourbon's work the same?\n. I'd like to know what it looks like to use Bourbon's media mixin and remove ours and would prefer that (I think) over prefixing ours.\n. Blocked until we resolve the @include media issue.\n. Looks good! :us: \n. Hi @daderonan, thanks for opening this. Just to clarify, are you noticing an issue with HTTPS assets with our system or making more general suggestions?\n. Hi @noonkay, thanks for opening this. I'll bring this up to the team and see what we can do.\n. This is bc we specify the label pseudo selector after the input in the CSS.\ncss\ninput[type=\"checkbox\"] + label::before, input[type=\"radio\"] + label::before\n. Doesn't look like this will be possible, closing.. Thanks so much @ismamz! Looks like @rogeruiz is already on it via #1069. \n. Hi @jflowers45, thanks for opening this!\nLooping in @rogeruiz and @msecret, do you think @jflowers45's approach would serve us well? \n. Wanted to check in if this was still an issue?. @el-mapache do you have any idea if this is still an issue?. Hey @jbruce-gsa! Thanks for submitting this issue. Could you provide some screenshots of the problem you're experiencing?  What is a stepper component?\n. Thanks for those screenshots! That gives me a much better idea of what's happening. \nQuick question: is the stepper appearing when you view the date input here: https://playbook.cio.gov/designstandards/form-controls/#date-input\nOr just on your implementation?\n. I think I know what's happening. There should be a div with the class usa-date-of-birth wrapped around the inputs. This is missing from your code sample. You can see it in the code sample on the Draft Standards website.\nWe are hiding the spinners in the CSS.\nhtml\n  <fieldset>\n    <legend>Date of birth</legend>\n    <span class=\"usa-form-hint usa-datefield-hint\" id=\"dobHint\">For example: 04 28 1986</span>\n    <div class=\"usa-date-of-birth\">\n      <div class=\"usa-datefield usa-form-group usa-form-group-month\">\n        <label for=\"date_of_birth_1\">Month</label>\n        <input aria-describedby=\"dobHint\" class=\"usa-form-control\" id=\"date_of_birth_1\" name=\"date_of_birth_1\" pattern=\"0?[1-9]|1[012]\" type=\"number\" min=\"1\" max=\"12\" value=\"\">\n      </div>\n      <div class=\"usa-datefield usa-form-group usa-form-group-day\">\n        <label for=\"date_of_birth_2\">Day</label>\n        <input aria-describedby=\"dobHint\" class=\"usa-form-control\" id=\"date_of_birth_2\" name=\"date_of_birth_2\" pattern=\"0?[1-9]|1[0-9]|2[0-9]|3[01]\" type=\"number\" min=\"1\" max=\"31\" value=\"\">\n      </div>\n      <div class=\"usa-datefield usa-form-group usa-form-group-year\">\n        <label for=\"date_of_birth_3\">Year</label>\n        <input aria-describedby=\"dobHint\" class=\"usa-form-control\" id=\"date_of_birth_3\" name=\"date_of_birth_3\" pattern=\"[0-9]{4}\" type=\"number\" min=\"1900\" max=\"2000\" value=\"\">\n      </div>\n    </div>\n  </fieldset>\n. That's a great question! Looping in our UX-er @carodew - can/should this field be applied more widely to all date inputs?\nI remember there was some earlier conversation about other date inputs being better suited with different kinds of patterns.\nApologies for missing your earlier comment about removing the class.\n. Hi @stevenhaddox, tanks for opening this issue. \nIn general, you're free to include other CSS into your implementation of the Draft Standards, so would encourage you to use what makes sense for your project. Of course, using a single grid system would be the most consistent. \nIf you'd like to provide more details of what you need out of a grid system that ours doesn't provide, we'll be better able to assess if it can be modified to meet your needs.\n. Closing this as the path in the example was the intention and will need further research to see if this is confusing for others. Feel free to open an issue if you find this confusing or would like additional documentation.\n. Hey thanks @DruidSmith, I've added this as a feature request and we'll see how this fits with our product roadmap https://github.com/18F/web-design-standards/wiki/Product-Roadmap and component prioritization: https://github.com/18F/web-design-standards/wiki/Component-prioritization:-The-factors-that-guide-our-prioritization-process\n. Hey thanks @DruidSmith, I've added this as a feature request and we'll see how this fits with our product roadmap: https://github.com/18F/web-design-standards/wiki/Product-Roadmap and component prioritization: https://github.com/18F/web-design-standards/wiki/Component-prioritization:-The-factors-that-guide-our-prioritization-process\n. This is not on the current product roadmap, closing for now. \nThe geocoding is outside the scope of the project but we want to look into leveraging native HTML validation.. Hey @debracleaver, we use sentence case for headings. See info here: https://pages.18f.gov/content-guide/capitalization/#headings \n. Thanks @shanear! That's a good idea. When developing the .usa-additional_text class we only considered its use on input fields, not other form controls. \nI've added this as a feature request. We'll see how this fits in with our product roadmap: https://github.com/18F/web-design-standards/wiki/Product-Roadmap and component prioritization: https://github.com/18F/web-design-standards/wiki/Component-prioritization:-The-factors-that-guide-our-prioritization-process\nCc'ing @carodew.\n. We don't float these to the right anymore, it sits directly after the label, so this should be fixed \ud83c\udf89 . @brendansudol yep!\n. Agree :100:, but the USWDS does not recommend hint text below the input, so not sure what it's in regards to.. This is not on the current product roadmap, closing for now.. Hi there @debracleaver @justinelam, thanks so much for the question. We get this a lot actually. The reason we do this is bc lists are actually difficult to align flush and this technique allows us to do so. \nWe explain the reasoning here: https://github.com/18F/web-design-standards/issues/1027\nLet us know if you have any questions!\n. @debracleaver indeed! Closed it to soon, sorry, we typically wait around two weeks for a response from the issue opener before closing. Although we're discussing it internally as well. i.e. how important is standardizing alignment vs. working with the medium of the web.\n. Adding in @lukad03's feedback from the blog post (https://18f.gsa.gov/2016/04/05/three-teams-using-the-draft-us-web-design-standards-talk-about-their-experiences/):\n\nI'd like to see the Standards [...] remove the pseudo elements from list items by default. I've never seen this approach to list items before, so it would be nice if this treatment was handled through a class, i.e. usa-list-item.\n. @patrickcate @zaneriley thanks for those points, but I think it's different from the issue opened here which is about pseudo selectors. I've opened #1135 to address the specificity issue you bring up, feel free to add your thoughts there.\n. @fulldecent thanks for this request. We'll keep this open for consideration, but don't have a timeframe on when we can do this. \n\nRelated to #870.\n. @jbrucegsa thanks for opening this! Is the issue only with date inputs or was there an issue with standard text inputs as well?\n. Thanks @brendansudol! Even though the issues addressed here are both about inputs, we like to stick to 1 PR to 1 issue for ease of reviewing (realizes this should be in our CONTRIBUTING doc).\n. LGTM \ud83c\udf89 \n. @brendansudol one thing I noticed when testing this in IE is it also pushes the dropdown arrow to the left and I see a small artifact too.\nBefore:\n\nAfter:\n\n. @brendansudol I tested in IE 9 and 11 with the same result. Did you find something different?\n. How does this PR relate to #953? \nAlso, the title says it resolves #1007 but the description says #952.\n. This looks great @chinaowl! \nOne note related to our coding styleguide in https://github.com/18F/web-design-standards/pull/1101#discussion_r58977283. \nSince this change is just to the standards website, you should not have to check anything else in.\n. LGTM, thanks @chinaowl! \n. Thank you @akainic and @amyfens! Yes, I think adding in those error styles for those form fields is a great idea. \n. Closed via #1132.\n. Thanks for noting this @edwelker! \nWe originally considered whether or not we should include helper classes for colors in the CSS. The reason why we'd include it would be to help people easily access colors with classes and prototype more quickly. The reason against it was that users should apply the classes semantically to their use case and not rely on helper classes. Also, it would save some space from the file size.\nAt this moment, we just include the color variables in Sass and don't include code samples for colors on that page, like you'll find in other components, so this is a clue that there aren't any classes we offer. \nHowever, I'll discuss it with the team to talk about this more and consider if there's a strong need for this.\n. Thank you @Iceman52489 for your attention to detail! Getting vertically center aligned radio buttons and checkboxes is great. I'll reach out to a few people about this method. In general we try to avoid \"magic numbers\" and want something that will work if someone decides to change the font styles to a different pairing, so it's more reusable.\n. Hello @Iceman52489! \nI was looking at your PR and it was still a little off to me, nothing I tried was working until I managed to reset everything by removing line-height AND vertical align. After that, I added line-height based off of the checkbox and radio button height and width, and it aligned perfectly. Best of all, no magic numbers! \ud83c\udf89  \nYou were on the right track by removing line-height and vertical align, but adding in line-height with the value of the size of the input is what got it to work consistently.\nAlso, box-shadow was not effecting positioning for me.\nI opened a PR with the result here: #1127\n. Thanks @PeterDaveHello for submitting this PR! Saving space is really important for performance, and images are usually one of the biggest culprits.\nOur team will take a look at this in the next few days and get back to you.\n. I agree that since we will not be changing or adding images in the near future, doing it once should be fine.\nQuestion: Is there a way to have something automated only run on newly added images?\n. Hi @jbrucegsa, you're right! The name value should be the same for checkboxes.\n. Looks like it's used for this styling:\n.usa-fieldset-inputs label {\n    margin-top: 0;\n}\nI wonder if it's better to use this class or target the fieldset element directly.\n. @jbrucegsa thanks for catching! Yes, let's definitely remove that - type isn't a valid attribute of select.\n. @OpenGlobe thanks! I've opened an issue in our design assets repo here: https://github.com/18F/web-design-standards-assets/issues/18\n. @jbrucegsa thanks for submitting! any chance you can submit off of a fresh pull from 18f-pages-staging. This seems to have gotten a lot of other commits stuck to it.\n. LGTM \ud83c\udf89 \nThanks @jbrucegsa! \n. Thanks @jbrucegsa! Quick question: is there a reason you're using name[] instead of name?\nLooping in @nickbristow for more \ud83d\udc40 \n. I thought we preferred to go bracketless based off of conversations on slack @msecret bc we can't assume users are going to use rails or php and our code shouldn't make any assumptions but provide an abstracted pattern.\n. I agree that we shouldn't make assumptions, but I think adding the brackets is an assumption. Without them is more of an abstracted view which I think may be a cleaner approach.\nI'd like to hear thoughts from @juliaelman @yozlet @jpyuda \n. @ericadeahl @carodew this has design changes, but i'm guessing it was a visual bug before. Can you let me know if this gets a \ud83d\udc4d ?\n. @msecret I did rebase it, and also did a pull from 18f-pages-staging. It didn't have the necessary stuff from Circle CI so the test was failing which is why I did that.\n. Noting that this PR includes design changes and we haven't finished creating our design contributor guidelines cc @carodew \nThis PR will need approval from design (@carodew or @ericadeahl) before it can be merged.\n. @bradnunnally since this is visual design-related and has visual changes, shouldn't vizdee review it first?\n. Hi @ducklet, thanks for opening this issue! Can you point us to where you're seeing this rule in the code base?\n. Thanks for all the feedback! \nI agree with removing that from the CSS, and updating the instances that were relying on that to hide things in favor of something else (i.e. hidden attribute or display: none! on a per component basis like @scottaohara mentions in #1121) @nickbristow \n. Good news, I searched the Draft Standards and the only place using aria-hidden=\"true\" in this way is the accordion component. So if we can solve it there, we can remove this CSS.\n. @jhfrench Just wanted to note the hidden attribute is supported by IE 11 and above and this project supports IE 9 and above, so doesn't look like we can use it. http://caniuse.com/#search=hidden\n. @joshbruce nope, we're all good, I just wanted to reply in response to https://github.com/18F/web-design-standards/issues/1120#issuecomment-210470332.\n. @scottaohara @jhfrench Just wanted to note the hidden attribute is supported by IE 11 and above and this project supports IE 9 and above, so doesn't look like we can use it. http://caniuse.com/#search=hidden\n. @jhfrench the note was in response to @scottaohara's comment:  \n\nOr, as I mentioned in the aria-hidden issue, these components could instead be updated to use [hidden] set to display none, as that would be the HTML native equivalent of aria-hidden=\"true\" anyway.\n\nI think aria-hidden gives us a lot more in terms of accessibility, so may be the preferred method.\n. Thanks all for the fruitful discussion + @shawnbot for implementing this!\nClosed via #1224.\n. Closed via #1224.\n. @msecret I don't think this PR is meant to be the final switch over, but just add in the branches we need for cloud.gov. @yozlet says, \"Later, we'll want to remove the 18f-pages(-staging) branches from this configuration.\" so I'm assuming that step will happen after the redirects are set up.\n. @jbrucegsa thanks for this PR! We're still working on coming up with our contribution guidelines for new components which will help us evaluate new features from public contributors. I'll also add a note that we'll need to evaluate variations to existing components.\n. This PR has design changes @ericadeahl and @carodew. Let me know if it's OK! \n. @msecret would it be worth it to include in the installation instructions that you must install Bundler?\n. Hi @joshbruce, that's a neat idea to tie the background and text color into a mixin. I think that the mixins help to enforce these standards, but reduce flexibility in trying different combinations out. To be clear, this PR does not include the \"Colors on a white background\" in the example - is that right?\n. @msecret usa-bgcolor-* doesn't comply with our coding styleguide. What do you think would work better?\n. @chinaowl thanks for doing this, it looks great! \nLooping in @ericadeahl and @carodew for design review. \nSome background: this PR is applying the text field error styling to select boxes and text areas.\n. Code LGTM.\n. Thanks @madmanlear! We have a PR related to this already here: https://github.com/18F/web-design-standards/pull/1106 Have you taken a look at that?\n. Related to #1075.\n. Is h*+1 a real thing in HTML? That would be amazing if so.\nTo your first point, I don't see why it should be coded as a list. Most accordions I've seen do not and would love to drop it bc it causes a host of other issues.. Hi @joshbruce, we'll have to take a deeper look into the semantics of the accordion. Thanks for bringing it up. The team is currently at an offsite, so apologies for the delay.\ncc @nickbristow \n. Hi @madmanlear, sorry for the delay - the team is currently at an offsite. Thanks so much for submitting this PR!\nOne issue is that hovering is not accessible by screen readers, so unfortunately won\u2019t be a sufficient solution for us. I think there are usability issues with hovering as well, although @carodew would know more.\nWe'd love to fix the document outline issue you mentioned about the h4 incorrectly located within a list. This would resolve #794 if it's possible to bring it into another PR, we'd appreciate it.\n. @crwallace thanks for submitting this issue! Our team is at an offsite so will be a little delayed. \nIn general, if there's interactivity the component will likely need need javascript. You can find the javascript files broken out here: https://github.com/18F/web-design-standards/tree/18f-pages-staging/src/js/components. Seems like it's just the accordion, show/hide password (sign in and pw form), and password validator (password reset form).\nLet me know if that helps in the meantime.\nAgree that this should be clearer and hopefully will be soon!\n. I installed node-sass@v3.7.0 and it seemed to fix it. See: https://github.com/sass/node-sass/issues/1484\nPossibly leaving this open in case others update node.\n. @rogeruiz yeah I think it couldn't hurt to document this somewhere. The wiki makes sense for now (maybe later on the Standards site). We could have a \"Troubleshooting\" section.\n. @madmanlear @msecret I'd personally prefer if we left the h4's margin/padding as is and remove the li padding it's contained within. It will be more consistent with our type system. Right now it's off by a tiny tiny bit bc we're not using the padding defined by the type system.\nThat way if someone ever changes this to use another heading, it will take that headings' spacing.\n. @madmanlear for some reason, I just checked and this branch looks like it's missing the accordion links on mobile (could it be related to our big repo change?):\n\nAnd it also looks misaligned:\n\nI have not been able to check on the your previous responses bc of the above.\n. @madmanlear the rebase fixed it, thanks!\n. @madmanlear sorry for the trouble again, it's hard to review bc of the 361 files changed now. I think if this was rebased, we shouldn't show the 361. Would you be able to do that? Or resubmit it if that easier?\n. Closing in favor of #1183.\n. @juliaelman @bradnunnally - @rogeruiz mentioned wanting to add in an example issue and PR into the CONTRIBUTING doc. @rogeruiz - did you want to do that in this PR or another?\n. LGTM \ud83c\udf89 \n. Hey @ducklet! Thanks so much for submitting this. In order for us to not break the accordion component, we'll need to fix that before adding this in.\n. @joshbruce opening a new PR would be best! I'm going to close this out since it doesn't have what we need in order to accept it, i.e. we can't fix one thing and break another.\nBut we agree with the intent of this \ud83d\udcaf .\n. @joshbruce the branch switch is complete! Feel free to re-open.\n\nWhat caused the decision to not merge the changes prior to the branch name changing? (Would like to know in case I end up in a similar situation in my own GitHub workflows.)\n\nI believe there were changes on the dist and scss on docs which we no longer use (35 file changes).\n\nWhat action(s), if any, will be required on my part once it is done? (Assuming a PR into the new staging branch.)\n\nCleaning up the above should be all that's needed.\n. @el-mapache we do have a button class for anchor links, it's usa-button also stated in the documentation. Is there something else you need?\n. I think it's a little risky for the team to provide a button style override so it looks like an anchor link, mainly bc we shouldn't be promoting this as an approved pattern. Buttons with actions should look like buttons.\nIf individual teams need to override this for their use case, they should feel free to.\n. @msecret I didn't realize we were using this pattern. Is it only achievable with a <button> tag? I'd loop in @bradnunnally and @nickbristow on this issue for further guidance.\n. Thanks @nickbristow for the background info. Sounds like we're a-go to add this in then. If/when we add this in, it would be great to update our buttons accessibility section with this info? \n. I realized that we already do have this via the unstyled button mixin (@mixin button-unstyled) and usa-button-unstyled class located here: https://github.com/18F/web-design-standards/blob/staging/src/stylesheets/elements/_buttons.scss#L173\n@el-mapache would this meet your need?\n. Closing as this seems to be addressed already via https://github.com/18F/web-design-standards/issues/1162#issuecomment-245035130.\n. @joshbruce yeah I think a better idea would be each person has their own variables.scss file in their custom stylesheets that they'd use to override defaults.scss. I guess the only thing variables.scss is good for now is to easily let you copy and paste them into your own stylesheet.\n. @rogeruiz Since I opened this PR, I don't think I can be assigned to review it. Assigning it to you to it if that's alright :)\n. @gbinal will we lose all of our data by switching this?\n. yay! one small thing to note, when bringing in the patches, we'll want to change this one back to the original: https://github.com/18F/web-design-standards/pull/985#discussion-diff-54621333\n. @slowbot thanks so much for opening this! Looks like we may be implementing your fix for checkboxes and radio buttons, unless we find something else. \ncc: @nickbristow \n. Hi @joshbruce, thanks for making a new PR. We currently have content about progressive enhancement here: https://github.com/18F/web-design-standards/pull/1184/files#diff-c5ba760212cf8eed5d2784b94da8b680R12 and having it in two places is not ideal.\nBefore we\u2019ll consider publishing this, our team needs to make sure the content aligns with observed user needs. We\u2019ll also want to do a full edit (not in GitHub) to make sure the content mirrors the voice and tone of our existing work.\n. Does this mean we'd only need one requirement: \"password must be X characters long\"? \nI noticed NIST does not say how long it should be, so it makes it tough for us to enforce a rule that most people will copy straight out of the code. Their guidance is:\n\nThe minimum password length that should be required depends to a large extent on the threat model being addressed. \n. Adding a comment we got from email:\nPlease consider being more opinionated and updating the Reset Password example to reflect updated NIST guidelines on strong passwords, specifically emphasizing effective length instead of entropy-reductions like uppercase or numerical characters.\nThanks for the good work.. Fixed in #403 and https://github.com/18f/web-design-standards-docs/issues/371.. @humancompanion _defaults.scss is matching _variables.scss. See: https://github.com/18F/web-design-standards/blob/staging/src/stylesheets/core/_defaults.scss and https://github.com/18F/web-design-standards/blob/staging/src/stylesheets/core/_variables.scss\n\nPerhaps this error was on an older version of the Draft Standards. \n. @joshbruce accessibly-hidden please, that says accessibility-.\n. @ducklet What @joshbruce stated is correct. The mixin allows us to hide things dynamically based on the aria-hidden state -- it's only to be used for specific components/use cases, not for everything.\n.  These changes look good to me. Thanks again for your help, @joshbruce! \ud83c\udf89\n. Thanks @joshbruce! Re-pasting from my duplicate issue...\nErrors:\nstyleguide.js:1 Uncaught ReferenceError: $ is not defined\nuswds.min.js:3 Uncaught Error: Did you forget to define selectors in the aria-controls attribute? Check element undefined\nFrom @el-mapache:\n\n@maya I know that the uswds.min.js error is caused by the start.js script running on pages where the DOM element being jQuery selected isn't available (i.e. targeting a form control on the accordion page). I added the error message when I put in the PR for JS testing.\nSince start.js runs on every page, what do you think the best way to deal with an element that isn't there? We could add a conditional check in that script that only initializes plugins when the appropriate element \n. I've tested this is working and fixed in #1206. Thanks again @joshbruce! \ud83d\udc4d \n. I thought I got more errors so opened a new issue but turns out I didn't. Closing in favor of: #1193.\n. @joshbruce @msecret where else are we using \"allowing any element to opt-in to being toggled based on aria-hidden state\" on the site? \n. Will use #1192 instead of this.\n. @el-mapache thanks! I just checked and the code sample boxes are there, but not opening on click.\n\n\n. The homepage uses some polyfill scripts in docs/_includes/scripts.html but likely does not need the rest (styleguide.js, prism.js, or ethnio).\nWe can either create a scripts-homepage.js with just those, or add them manually to layouts/homepage.html cc: @rogeruiz \n. Also, the styleguide site and homepage have different JS requirements @rogeruiz @el-mapache - i.e. the homepage doesn't use JS, while the website does.\n. LGTM!\n. Fixed in #1213.\n. Everything works as it should and no errors appear \ud83d\udc4d\n. @juliaelman and I paired and figured this out. Reassigning.\n. Closed via #1263.\n. @donjo thanks for testing! let's see if I can fix this merge conflict and get this in.\n. @juliaelman it's a separate rule for just those longer text examples. That line groups heading elements (h1-h6) which it does not apply to.\n. @nickbristow can we add some background info about this to our accessibility guidance content?\n. @nickbristow will be drafting up some documentation.\n. Closing in favor of #1221.\n. LGTM! @nickbristow wrote the content and @kategarklavs and I reviewed it, so merging this even though I opened the PR.\n. > I find HTML readability improves a great deal if id is first and precedes class, which precedes all other attributes.\nI follow the following attribute order in which class precedes id: \nhttp://codeguide.co/#html-attribute-order\n\nClasses make for great reusable components, so they come first. Ids are more specific and should be used sparingly (e.g., for in-page bookmarks), so they come second.\n\nAlthough I don't think this guidance is in our coding styleguide yet.\n. Here's more detail on what needs to be fixed:\nTypography (9) \n- [ ] Duplicate id attribute value \"collapsible-0\" found on the web page. (7)\n- [ ] Duplicate id attribute value \"code\" found on the web page. (2)\nGrids (1)\n- [ ] Duplicate id attribute value \"code\" found on the web page. (1)\nTypography (9) \n- [ ] Duplicate id attribute value \"collapsible-0\" found on the web page. (7)\n- [ ] Duplicate id attribute value \"code\" found on the web page. (2)\nForm controls (9)\n- [ ] Duplicate id attribute value \"collapsible-0\" found on the web page. (4)\n- [ ] Duplicate id attribute value \"code\" found on the web page. (4)\nForm templates (7)\n- [ ] Duplicate id attribute value \"collapsible-0\" found on the web page. (3)\n- [ ] Duplicate id attribute value \"code\" found on the web page. (3)\n- [ ] Duplicate id attribute value \"password\" found on the web page. (1)\n. Closed via #1274.\n. Closed via #1274.\n. Closed via #1274.\n. Closed via #1274.\n. @ericadeahl slight issue with the footer in this design. I don't think we'll be able to have it span the full width of the page bc they both function independently of each other (you can scroll each of them). At the moment we'll only be able to keep it as it is in the main section. If the sidebar wasn't \"sticky\" we may be able to do this, but it would mean we'd lose the sidebar when scrolling through the main content.\n. @ericadeahl Yeah pages without the sidebar would have a full-width footer. \n. @ericadeahl do you think they'd be designed differently or would they be the same?\n. Closed via #1274.\n. LGTM, will bring these changes in to docs/_elements/form-controls.md as well.\n. There are accessible ways to create tooltips from a development side, but I think there may be usability issues around tooltips in general which we should verify before moving forward.\n. @bradnunnally I think what you're suggesting is doable. \nAnother question - do we think people will understand the label is clickable/interactive (on desktop) without indication? The way we present labels on the standards, they're static and more for presentational purposes.\n. Note: for building this out, maybe we can store this info in a single data file so it's easy to update.\n_data/maturity.yml\naccordions: alpha\nbuttons: beta\nfooters: beta\n...\n<a href=\"#\">{{ site.data.maturity.buttons }}</a>\n. @bradnunnally or @ericadeahl - can you specify the labels as above in https://github.com/18F/web-design-standards/issues/1239#issuecomment-225068056? Ideally in the order they appear on the site.\n. @mebates thanks for filing this issue! We've recently updated the Draft Standards to fix this here: https://github.com/18F/web-design-standards/pull/1215 it's just waiting on review from a member of our team to merge it in and be released. \ncc: @rogeruiz \n. Fixed in: #1215.\n. @joshbruce thanks for filing this issue! Agree that it would be helpful to add in some background color helpers to the standards. The benefit would be more for people to prototype things quickly so would not recommend it for production code in most cases.\n. @joshbruce I think it's fine to leave open for now, thanks!\n. Closing as this is being covered in the utilities work. Thanks!. @joshbruce thanks for submitting this pull request! This work is not on our current product roadmap, so will not be able to be reviewed at this time. Feel free to use it on your own project and keep us posted on how it goes.\nAs a last note: keeping PRs smaller in scope: 1 issue per PR, gives a better chance that it will be reviewed. \n. @joshbruce thanks for checking in. Sure, I'll close for now and we can revisit it when we're able to get it on the roadmap. Thanks again!\n. @joshbruce thanks for opening this PR! Just wanted to bring up this currently closed issue https://github.com/18F/web-design-standards/issues/706 with new footer designs. In this design, we're using larger icons to expand the hit area. But your solution of just expanding the hit area and keeping the icons the same size also works. Mostly, I'd like to know which approach our designers prefer - @ericadeahl @bradnunnally \n. @ericadeahl thanks for checking! I left a note in the issue #346 to use the larger icons and will be closing this PR.\n. @joshbruce sorry if I closed this too early, let me know if you'd like to implement the larger icons on this PR and I'd be happy to reopen.\n. @joshbruce sure! It's SVG + PNG fallback if you look at the markup.\nAlso, CSS properties must be alphabetized and use REM/EM values (per https://pages.18f.gov/frontend/css-coding-styleguide/)\n. > Curious to know the rationale regarding the alphabetical ordering as opposed to groupings similar to: http://codeguide.co/#css-declaration-order\nGood question! We find it's easier to find where properties are when it's alphabetical and easier for people to meet the standards and to review and lint - especially on such a large code base with external contributors. Our coding styleguide says we can use either on a project as long as it's consistent, but we've gone with alphabetical for the previous reasons.\n. We've also been using 2x pixel sizes for retina screens.\n. @joshbruce you should be able to do that with the svg and img size and do not need to change the svg files.\n. @rogeruiz Looks like we're going with #1262. Closing this so it's clearer.\n. @ericadeahl there's also a related issue about that here: #449\nI did that in fd9ad11, people will need to apply usa-input-error class to the div containing the date fields and add usa-input-inline-error to the single input that needs the error state. However, this state and how to do this is not really document anywhere on the site yet.\nThis is what it looks like:\n\n. also cc'ing @ericadeahl just for visibility.\n. @ericadeahl @bradnunnally: I wasn't sure if we wanted this style applied to external links throughout the site. Should we?\n. @bradnunnally @ericadeahl And what about the other point about the recommendation of opening new tab?\n. @ericadeahl @bradnunnally - slight issue, the icon is blue and the footer is currently blue as well, so they wouldn't appear. I realize we are changing the footer to white in the new designs so this wouldn't be an issue. We could create a white set of icons, but not sure it's worth the effort if it's going to change soon. I'm wondering what we should do in the meantime.\n. @kategarklavs will you be able to review some content changes. \nChanging:\n\nThis is a link which opens in a new tab.\n\nto something that shows it's opening an external website.\nCurrently using:\n\nThis is a link which goes to an external website.\n. @ericadeahl the links are currently white, should we change them to light gray?\n\nCurrent:\n \nWhite text + light gray (gray-lightest #f1f1f1) links:\n\nWhite text + light gray (gray-lighter #d6d7d9) links:\n\n. Also, I want to flag to your attention @ericadeahl. We cannot change the color of the icon for :visited links. The reason is the :visited pseudo-class doesn't permit the use of pseudo-elements because of privacy concerns.\nhttp://stackoverflow.com/questions/7371732/why-does-foo-alink-foo-avisited-selector-override-ahover-aactive-s\nSo visited external links will have the visited style but their icon will not.\n\n. @ericadeahl should the \"Learn more\" link in the disclaimer bar have the icon?\n\n. @kategarklavs done in 2bdc7f7. thanks!\n. @ericadeahl done! This is what it looks like:\n\nAlso, added a white hover state for the links:\n\n. @ericadeahl @bradnunnally - could you review the changes above?\n. Looking at the sketch file, seems like we may want to remove the horizontal lines from the last two items on mobile.\n. Superseded by #1259.\n. @rogeruiz yea, this needs design review first.\n. @ericadeahl @bradnunnally could you check this one out based on the screenshots above (I think we're having screener technical difficulties ATM, so I'll just point you here).\n. @rogeruiz no, page titles are correct and should be h1's as they are the primary headings of the page.\n. @ericadeahl how's this?\n. @ericadeahl I was thinking this button looked a little out of place. What do you think about changing it to a link?\n. @joshbruce looking at the branch, this is what it looks like:\n\nThis is what it's supposed to look like:\n\n@ericadeahl posted sizes for the icons in https://github.com/18F/web-design-standards/pull/1248#issuecomment-226310207 although they all appear to be the same 29px x 29px here.\n. @joshbruce was on the wrong branch, my bad! Looks like your screenshots :)\n. @joshbruce on mobile, the alignment looks like it's indented to the right, could we align this flush left?\n\nShould be:\n\n. Looks good!\n. @juliaelman @rogeruiz do the files copied into docs_assets need to be added to .gitignore?\n. LGTM \ud83c\udf89 \n. Prism.js does not seem to be working cc: @rogeruiz \nSee:\n\nShould be:\n\nupdate: this is fixed in 3fe7087\n. @juliaelman notes below...\n\n1) We should probably do another rebase with the latest state of staging. I'll ping you about pairing on that.\n\nOK!\n\n2) New homepage content: Looks like the text is not displaying to full width on the new homepage, see Screenshot A below. It might be a limitation of our grid combined with the new updates, but wanted to point it out just in case.\n\nIt's not supposed to, it's using our max width for lead text for optimal reading.\n\n3) Top nav: \"Download code and design files\" and \"View on Github\" buttons not flush aligned at 1096px+ in Firefox, see Screenshot B\n\nok will look into it, thanks\n\n4) Footer: The layout in the design files differs from the implementation, see Screenshots C1 and C2.\n\nC1 = full width page layout Design Principles\nC2 = layout with sidenav on the left\n. @juliaelman Firefox bug fixed in 08b102b.\n. @juliaelman if you scroll all the way to the right of the spreadsheet, you'll see the labels we're using - I believe @ericadeahl already planned this with @bradnunnally. \n. @ericadeahl done in b8ebf8b.\n. Hi there, this introduces a regression in IE that you can see here: https://github.com/18F/web-design-standards/pull/1097#issuecomment-208565824 It will need to be resolved before we can merge.\n. @elarenee hello! Just following up, will you be able to update this to use the technique stated above in https://github.com/18F/web-design-standards/pull/1276#issuecomment-227181567?\n. @lmarkzon can you change the class to heading-margin-alt and use it as the single selector in the SCSS (i.e. not chained or nested to another selector)?\n. @lmarkzon thanks! Seems like there may be a merge conflict now, could you take a look? Once we get that resolved we'll be able to merge it in \ud83d\ude80 \n. @PilgrimMemoirs hello! Just following up, will you be able to make the changes above?\n. Thanks so much for this! Someone on our team will review this and get back to you as soon as we can.\n. (closed by accident, please ignore :)\n. Hi @iluvtatortots, apologies for the delay! Please see our new repo for the Standards website: https://github.com/18F/web-design-standards-docs. Additionally, we've made changes to our installation instructions there. Feel free to take a look and let us know if it solves your problem.\n. Ouch, this should not have been in the src js, it should be in docs/doc_assets/js/styleguide.js. Thanks for discovering this! That being said, I think we want to move it to styleguide.js and the ideal solution would be to remove the behavior from \"Return to Top\" link without effecting the other footer links.\n. @rogeruiz just so you're aware as you work on this that the code is to prevent primary links from returning to the top which is the intended behavior. The goal is to get \"return to top\" links functioning without effecting the primary links non-functioning.\n. Closed via: #1283.\n. LGTM! \nFor reference, here's our label workflow for pull requests: https://github.com/18F/web-design-standards/wiki/Workflow#pull-requests. Looks like we'd keep \"Accepted.\"\nIn order for it to be in the \u201cReady\u201d column, it has to have the \u201cAccepted\u201d label on it.\nIt can also have \u201cReview needed\u201d, but also will need the \u201cAccepted\u201d label too.\n. Looks good to me! \n. LGTM!\n. @rogeruiz ah gotcha. thanks for clarifying! For some reason I thought I remembered seeing them at the end. Agree that ideally we wouldn't have errors.\n. Seems like this may have gotten fixed bc I'm seeing the errors close to the end.. @StraightfaceStudios thanks for filing this issue! It's already been fixed in: #1260. Stay tuned for the next release to see it!\n. Hi @joshbruce, sorry for the delay! We have a new repo for the Standards website: https://github.com/18F/web-design-standards-docs Feel free to re-open your PR there if the updated installation instructions do not solve your issue.\n. We use 18F\u2019s modified BEM naming methodology which uses underscores when block, elements, or modifiers have two words in them, and uses dashes in between. Also #5 in CSS architecture: https://standards.usa.gov/getting-started/\nhttps://pages.18f.gov/frontend/#suggested-custom-methodology\nFeel free to customize for your use, but we'll be sticking with the current methodology for now.\n. @willcbaker thanks so much for opening this issue. Can you give us a little more info about the problem you're experiencing? What did you expect to happen when viewing the button states? Is there a particular state that you thought was difficult to discern or what it all three states (default, hover, active)?\ncc: @nickbristow for awareness\n. To my knowledge, the WCAG 2.0 doesn't have guidelines that each state state must be discernible by a certain amount, it's more of an affordance. The idea is to know a change has occurred which you mentioned being able to see so closing for now.. @nicoleslaw thanks so much for submitting this! I see the link added but not the capitalization change (https://github.com/18F/web-design-standards/pull/1297/files). What is supposed to be capitalized?\nI would guess \"United States Government,\" but it was not changed in this PR.\n. @nicoleslaw can you re-open this PR against our staging branch? That's where all of our development work happens and is the default branch in GitHub. \nHere are some notes on our use of branches: https://github.com/18F/web-design-standards#our-use-of-branches\nClosing for now but can hopefully merge soon!\n. Looks good! \ncc: @kategarklavs \n. @egrivel thanks so much for opening this issue. We'll take a look at it and get back to you soon!\n. LGTM!\n. > and just use the version of Prisim that Jekyll provides\nTo my knowledge, Jekyll doesn't use Prism, it uses Pygments. Prism is superior for syntax highlighting.\n. Fixed in #1370.\n. What do you think about adding a status to the milestones?\n\n. And each status label could link to the milestone: https://github.com/18F/web-design-standards/milestone/13, with a descriptive tooltip like \"See our progress on this milestone.\"\n. @bradnunnally @ericadeahl if one of you could send me a list of the status of each item in Milestone 1, we can add them in.\n. @bradnunnally won't \"A public, up-to-date product road map. 50%\" be 100% when this launches?\nFor everything not 0%, shall I add in progress?\n. @ericadeahl should this have any lead text? Maybe the first paragraph?\n. Done in #1314.\n. @kategarklavs Hi! since Erica's out, I might jump in.... No strong rush on this, but would by next Friday be doable?\n. Here's screenshots, ignore the second heading below...\n\n\n. Blue h2's added to product roadmap in 7e34894.\n\nI did not use the second level of bullets.\n. @ericadeahl done in 81089c8.\n\n. Also, adds a status label to milestones. Each label links to the respective GitHub milestone. All info located in _data/milestones.yml.\nThis is what it looks like:\n\n. We've released horizontal navigation and breadcrumbs feature request is captured in #785. Closing this out, thanks!. @kategarklavs we're referring to the whole section here which includes many bullet points: https://standards.usa.gov/form-templates/ so I don't think we should change that.\n. @ericadeahl @kategarklavs done in 3a955dc.\n. Self merging into my own branch update-content.\n. I've done this on a few projects, it involves some creative use of flexbox: https://github.com/GSA/dotgov-home/commit/6d139af1f6f682dc895825060dd0bb54bf7c6236. Re-opening this as this work did not get done. Adding from Erica re: the external link icons https://github.com/18F/web-design-standards/pull/1253#issuecomment-226345030:\n\nI'm still not totally convinced this is the best practice for external links, and I've been reviewing some conflicting advice, so I'd like to mark this component for further review.. I think it's OK bc in the text before this we explain how we want them to write a title.\n. @nicoleslaw @kategarklavs Just noticed this was made against the 18f-pages-staging branch rather than the staging branch, so the changes aren't in. Would you mind re-opening these against the staging branch?\n. LGTM. Thanks @toolness! \n. This looks good, the only issue I have is the \"importing it before uswds in Sass\" bit. I think it could be rewritten a bit. Maybe say: \nadd your custom variables.scss import before the Draft Standards all import in your main.scss file.\n\nor \n\nimport your custom variables.scss before importing the Draft Standards all Sass in your main.scss file.\n\nPossibly addresses #1334 although I wonder if we need to add a section in https://standards.usa.gov/getting-started/developers/\n. @kategarklavs cool, and just checking \"changing variable values and importing it before uswds in Sass.\" sounds OK to you?\n. LGTM \ud83d\udc4d \n. \ud83d\udd14 Ringing content team @kategarklavs + @jameshupp...\nWill either of you be able to help with the points @ericadeahl mentioned above?\n\n\nA note in the header documentation about the purpose of this banner\nGuidance on setting up your site using https and why it's important. I don't think this guidance necessarily needs to be in the same place as the banner component \u2014 perhaps it could be added to \"getting started.\" Open to suggestions.\n\n\nFor reference, I'm building this out over here \ud83d\udc49 #1418 so it would be great to get this content in.\n. I don't know if this was implemented, but here is the link to the doc: https://docs.google.com/a/gsa.gov/document/d/1oTesssKfURI9jsOX5iBJe1LHz5inw3qxFZ-B3WZ-2Mg/edit?usp=sharing I think there was some testing that showed users were happy with the current level of documentation.. Closing out for now, can reopen if our content needs change.. After looking through this, the documentation does not say that this will produce a button functionality, but a button style which refers to the visual aspects of this. The second paragraph referenced makes the distinction between the function of links and buttons, so I don't see any issue with this. . Fixed in #1504 on Sep 27, 2016. \nAlso, found there's an inconsistency between required and optional styles. It's using: \"Label - optional\" and \"Label (*Required)\". If anyone has thoughts on feel free to respond in #2183.. > Anchor tags  should be explicitly set to href=\"javascript:void(0);\" to avoid jumping to the top of the page where appropriate\nThis is what we had initially. So will we revert the decision made here: https://github.com/18F/web-design-standards/issues/743 ?\n. Looks good, added same change in ff1d74b before seeing this so will close.\n. Notes from @ericadeahl:\nAll headers:\n- [x] I think we should disable \u201cdepartment of web standards\u201d link (it's disorienting to be taken to the WDS homepage)\nBasic headers:\n- [x] move all the section links to the left 15 px so the blue drop down doesn\u2019t touch the search bar when open\nExtended headers:\n- [x] for the drop down, extend the blue box behind the section title vertically so it reaches the gray line above it\n. > When you have a drop down open, then you click on a section without a drop down, the open drop down does not close (but it should!) Is this related to the JS issue or a separate bug?\n@ericadeahl Yep, only clicking on the button closes it. We will need #1363 implemented in order to add this functionality. cc: @rogeruiz \n. > Add documentation and code for using an image logo as an alternative to using a text logo. The solution we discussed for this was adding a section in the documentation displaying the different logo options, then including the image logo as a commented out section in the code snippets for all four headers\n@ericadeahl I think we started talking about commenting it out in the HTML, but thought we ended just saying we would add info just in the documentation. I may recommend this, just bc we are in a time crunch, and then we can do some testing around it later on. cc: @bradnunnally \n. Our skipnav link points to #main-content but there's no #main-content on the page since it's not a page template. For example: https://standards-staging-add-headers.apps.cloud.gov/headers/basic/\nShould we just add instructions to the documentation about this and leave the page as is? Or do we want to add a div with an id=\"main-content\" below.\ncc: @nickbristow @msecret \n. @nickbristow done in 06175e9.\n. @juliaelman thanks for the review!\n\n1) The code samples are current not displaying correctly for all of the header examples.\n\nRight on, I will open a separate PR for that.\n\n2) As discussed earlier today, let's go ahead and add the header content in another PR that branches off of add-headers and submit it back against it. I'd rather not merge this in without the content, as that could possibly slow down a release if not merged in in a timely manner.\n\n\ud83d\udc4d \n\n3) Tested in IE and came across some breakage on the basic headers and basic header mega menu in IE 9 [1]. The extended header styles are broken in all versions of IE [2].\n\nI'm not seeing what you are in IE 9 [1]. Here's what I see:\n\nIE [2] Fixed in dd60540.\n\nThere are also now some merge conflicts due to the jQuery removal and more than happy to help resolve those for you.\n\n\ud83d\udc4d  @rogeruiz volunteered to help with these.\n. @juliaelman merge conflict is resolved.\n. As of today 8/18/16, all the existing issues have been tackled listed in this PR and it has been fully reviewed. The remaining work will be coming via new PR's to the add-headers branch.\n. @el-mapache are you able to check if this work was done / if it's still an issue?. Works for me, closing!. Also, was wondering if #1513 refers to the ARIA role mapping you mentioned.. @joshbruce yes, the site-footer navigation only gets displayed on smaller screen widths.\n. Sure, we can close this. Thanks!\n. @rogeruiz We use these in many components: footer, forms, etc so I don't think the reasoning for it would go in links since it's styleguide site specific thing. But I love the idea of explaining our reasoning, so we should do that on the issue that was originally opened for it and tag the people involved in it.\n. Hi @joshbruce, agree that these should be consistent. Thanks for the catch! \n. Seems like \"type\" has been removed, so at least it's consistent now. Folks will have to add the \"type\" attributes themselves. https://federalist-proxy.app.cloud.gov/preview/uswds/uswds/develop/components/detail/buttons--default.html. Curious: since we fixed the custom variables issue, is this still necessary?\n. Added to the wiki: https://github.com/uswds/uswds/wiki#history. Hi @joshbruce, thanks for opening the issue. Agree that labels might be confusing for developers since <label> is an HTML element associated with form controls. We're not sure what else we could call them right now, but will let you know if we have any ideas. We found that \"label\" is a nice, abstracted way to refer to this component.\n\nWe have also run into times when designers have asked for tags and highlighted text and we point them to the Labels element: Is this the \"wrong\" place to point them?\n\nAlthough I'm not sure what \"highlighted text\" is, if your designer is looking for tags, then our labels are the right place! The label classes can be added to anchor links to make them into clickable tags.\n. @joshbruce thanks for opening this issue! We may start work on something to address this in the coming weeks. We'll make sure to keep you posted!\n. I don't think we understand the value in changing the select option, closing for now.. Hi @ducklet, thanks so much for opening this issue! Looks like it we may have just missed adding in five-twelfths and seven-twelfths into the grid. @bradnunnally @ericadeahl is that correct that we ought to add in?\n\nnor do ten-twelfths or five-sixths\n\nusa-width-five-sixths should work, it's here in the code: https://github.com/18F/web-design-standards/blob/staging/src/stylesheets/core/_grid.scss#L101...L103\n. @ducklet with our grid system based on Bourbon Neat, if you're using the Sass version of the USWDS, you can include the grid items on your div with @include span-columns(5); and @include span-columns(7); at the breakpoint you need.\n. @msecret since we're moving the website to https://github.com/18F/web-design-standards-docs, this PR will need to be re-opened there. Will you be able to re-open this PR to that repo or would you prefer one of us to do it on your behalf?\n. @msecret will be moving this PR to https://github.com/18F/web-design-standards-docs. Leaving this branch open until the move is done.\n. Hi @dalfaro1, thanks so much for opening this issue! Could you post a few screenshots so we have a better idea of what you're looking for.\n. LGTM\n. Added to: https://github.com/18F/web-design-standards/wiki/Distribution-methods\nThank you, @vjkapur! \n. x-posting @sawyerh's post from #2325:\nSo far we've done two rounds of user testing for the new HC.gov application. The format of the tests were InVision prototypes, so we haven't yet gotten a ton of results around the usability of the form fields themselves. There is one pattern that we've tested that we do have some preliminary results on, with secondary research, that have been encouraging and worth sharing:\nStep list\nDemo\nWe've been testing a \"step list\" pattern as a way to:\n\nIntroduce a user to the application so they know what's coming up.\nAllow the user to navigate to previous sections of the application.\nAllow a user to see their current progress, at a high level, within the application.\n\nThis pattern was inspired by GOV.UK's Task list pages, and they have some additional research notes here.\nThe first iteration we tested was this:\n| Step 1 | After completing step 1 | Example form page with \"View all steps\" link |\n| ------ | ------------------------ | -------------------- |\n|  |  |  |\nWe tested this prototype with 9 participants and some of the findings were:\n\nMost users tended to click the green \"Start\" button right away, not reading the text on the page. For our case, this is actually fine, and showed that users were able to quickly identify how to start their application, and understood to start from the first step in the list.\nSome users commented about the green button, one of them saying:\nI like green, green means go\n\n\nUsers understood that grayed-out steps were disabled, and that they needed to complete the steps one at a time from top to bottom.\nIn the design, the step titles were intended to be hyperlinks that would take the user to the same page as the \"Start\" button. The goal was to provide multiple ways for a user to proceed with their application, or navigate to previously completed step. However, this seemed to cause confusion for some users. Some users weren't sure where the title link would take them, and some thought it might take them to a page describing the step. Our takeaway here was to remove the link from the title in the next iteration.\nIn the prototype, when a user is on a question page, they can click a \"View all steps\" link to navigate back to the task list to see their progress. If a user hadn't yet started the next step, the button would say \"Start\". This caused confusion for some users. When one user came back to the page and the \"Start\" button moved to the second step, there was some concern that it would Start another application, and he suggested it would be clearer if it said \"Continue\". In future iterations the CTA will say \"Resume\" for subsequent steps, even if they haven't been started yet.\nUsers seemed to understand that to go back to a previous step, they would click the \"Edit\" link to the right of the step.. Thanks @goldenmeanie, this is really useful. Adding a screenshot of the form indicator:\n\n . Basically, it's forcing itself into the list width rather than sticking to the side of it.\n. The one fix I found was to manually add margin-left 200px (the width of the search form) to the secondary links list. I'd need to find out how to target IE9-11 to do this.\n. Looks good, thanks @hursey013! \ud83c\uddfa\ud83c\uddf8\n. One question I have is: should we remove the partials (dropdown, mega menu, secondary nav) from the src/html directory?\n\nFeel free to respond to this or emoji vote: \ud83d\udc4d or \ud83d\udc4e \n. @juliaelman sure, around what specifically?\n. @juliaelman @msecret partials deleted in 5bf151e. This is ready.\n. @juliaelman sure can you let me know what lines need it? (or comment directly on the line)\n. @juliaelman it was brought to my attention that @kategarklavs and @jameshupp are making updates to the documentation and they will be adding their updates here.\n. @kategarklavs's work has been incorporated from #1412. This is ready to review.\n. LGTM!\n. For \"update nesting\" in 271c7ba I meant \"update indentation.\"\n. Looks good! \ud83c\udf89 \n. hi @yozlet! Since we've merged the headers work into staging would it make sense to open this PR against staging?\n. @yozlet to answer your question, we officially support IE9+, so no we're not required to support IE8. A couple of times, if the fix is easy enough to support IE8 we've sometimes added it in.\n. The mobile.js is for small screens, so yes that's a fair assumption to leave it out -- I don't think many of our IE8 users will be using small screens.\n. Does this mean we want the whole banner to be a click target on desktop too? @shawnbot @donjo @bradnunnally @lauraponce\n. Made a few of @ericadeahl's change requests: \n- removed extra line break in 512dd46\n- updated border color in c8fcbdd\n- remove bold font weight on mobile in b38a633\n. @bradnunnally can you confirm from @donjo's screenshot in https://github.com/18F/web-design-standards/pull/1418#issuecomment-243249885. Are we keeping the increase in font size on mobile, but just un-bolding it? \n. Just spoke with @bradnunnally - ideally, the whole banner would be a touch target on mobile and not on desktop. However, for MVP it's OK if it's not the whole banner a target on mobile. We are still meeting Apple HID's recommendation of 44px touch target on the close button.\nI will investigate how heavy the lift is to make sure.\n. Added documentation reviewed by @kategarklavs in #1444.\n. Full touch target on mobile is added! cc: @bradnunnally \n. Quick check - there's a flash of content on page load. Is that OK? \nI know that's the current behavior of accordions so there's not much we can do, or is there?\n\n. @donjo .usa-banner-button[aria-expanded=false]:after and .usa-banner-button[aria-expanded=true]:after are actually relatively in the same location to each other and the icon is relative to the button so it moved together with the button text when we added vertical-align: middle; to the button. \n. @donjo Since this may be a background position issue rather than a vertical align issue, I moved it down 1px here: 167928e and it seemed to look right.\n. @jameshupp Chatted with @brittag and she recommended:\n\nI\u2019d suggest having the long version in LICENSE, a clear note in CONTRIBUTING that contributions are CC0 with a link to LICENSE, and a brief note in README\nit doesn\u2019t need to be the long version in more than one place in my opinion\nthe readme should basically point to the LICENSE and CONTRIBUTING files so that people don\u2019t miss that they exist while reading the README\n. @msecret for the font-smoothing mixin: is this something we'll deprecate once we add in post CSS?\n. This will also fix #1440.\n. Alerts already work without a heading and just text. Screenshot below. I'm not sure if I understand the problem, can you explain @msecret? \n\n\n. @msecret here is what it looks like with one line of text. This seems like more of a design problem than a code refactor one. If we want to move forward with it, we'll need some design guidance on this variation.\n\n@Journerdism @bradnunnally thoughts on moving forward?\n. A possible solution is to add a min-height to the alert. Another is to use a pseudo selector for the icons.\nI just want to make sure this issue is in the scope of work for code refactor since it's technically a design issue.\n. Dependent on #1418 for this mixin: https://github.com/18F/web-design-standards/pull/1418/files#diff-fced6c74fbf3140d02e92fd710e888eeR88\n. @carlosvalle thanks for that idea. I'm wondering if that method would add unneeded space when there's a heading above it?\n. Done in #2068.. What needs de-nesting in the sidenav component? The SCSS seems pretty flat to me @msecret \n. On another note, I chatted with @donjo before and talked about that there's a difference between the mixin and class name.\n@mixin usa-sidenav-sublist vs .usa-sidenav-sub_list\n(mixins can't have underscores)\nWhat do we think about renaming the class to .usa-sidenav-sublist? @msecret \n. Also, an honorable mention to Google's Material Design Lite bc they do code samples pretty effectively: https://getmdl.io/components/index.html\n. oof thanks @ericadeahl! \nScreenshots below for reference:\n\n\n\n. I noticed that what we have on staging looks good and is working: https://standards-staging.usa.gov/ @juliaelman if we release soon, maybe this will fix itself?\n. We just released 0.12.0 and it seems to have resolved itself in this release! \ud83c\udf89 \n. @philipashlock Good call, we should add this in. thank you!\n. Fixed in #1457.\n. @jkassemi Thanks so much for this! Someone on our team will review this and get back to you as soon as we can.\n. This will need a design review first, cc @bradnunnally @donjo.\n@jkassemi's PR would make the blank table cell in the top header gray. \n. LGTM\nThis is what it looks like:\n\n. Thank you @ngehlenborg! It looks like the whole README is still using 0.11.1 in various places.\n. LGTM\n. Hi @ckundo! Thanks so much for offering to add accesslint-ci to our CircleCI build. Feel free to open a PR and our team will review it for consideration.\n. @yozlet while I can't speak to the JS files themselves, I just checked the web UI and those components (gov banner, search header, mobile header) are all functioning correctly.\n. Ah yes, the click works bc it's using the accordion component but the class that needed to be added does not :(\n. @yozlet it works!\n. Going with left-aligned banner content: \n\n. @donjo good catch, fixed in 64d12d2. Anything else?\n. Closing, flickering fixed in #1512.. Looks great! I like the categories that you have so far. I noticed sometimes categories can border each other. For example: \"feature request\" and \"customization\" but I'll leave it to the discretion of people adding labels.\nI think bug reports may be common enough to be their own category. \nAnother one to consider, not necessarily right now is process or change management? I think right now we use \"selling points\" for those concerns. Not sure if we have a stance on answering those kinds of questions yet, but just something to consider.\nFor using the Standards, right now we have \"getting started\" and \"customization\" and I wonder if we need a \"troubleshooting\" or more broad \"implementation\" category.\n. @kategarklavs Happy to leave it as is and see how the categories hold up in use! Those were just some ideas that came to mind :)\n. Hi @kaelig, thanks so much for opening this issue and bringing to our attention common practices in content/news websites. We'll be able to consider this more when we update our grids component.\n. This is an old PR can revisit this at a later point.. Hi @dalfaro1, thanks for reaching out about an alert/modal component.\nWe have alerts here: https://standards.usa.gov/alerts/\nWe don't have plans to implement a modal at this point in time, however feel free to follow along our roadmap https://standards.usa.gov/about-our-work/product-roadmap/ and project wiki to stay up to date on what we're working on next: https://github.com/18F/web-design-standards/wiki\n. @teebolt a bit of time has passed since posting that link and the team just restructured the pages, so it looks like the roadmap is now here: https://standards.usa.gov/whats-new/product-roadmap/\nFor modal usability, I recommend this reading through this article: https://www.nngroup.com/articles/overuse-of-overlays/\nRegarding a11y:\n- ensure you focus on the the modal content when the button is pressed\n- ensure focus doesn't escape the modal window and leak onto the page behind it\n- make sure there's an escape button that's also keyboard accessible\n. Closing as a duplicate of #911.. Documentation here (tested by team): https://github.com/18F/web-design-standards-docs#using-the-latest-version-of-the-uswds-package\n. LGTM!\n. Great! I'd like to get some design eyes on this as well @donjo @bradnunnally, specifically around the medium screen ratios.\n. Hi @betson, thanks so much for opening this issue! I've started work to address this issue in #1491.\n. The banner seems to be \"sticking\" when you scroll past it on full screen. On smaller screen sizes it works fine. Is this related to the sticky nav code on the site or something else?\n\n. Found a bug where I'm getting http://127.0.0.1:4000/#undefined when I click on pages in the sidebar navigation of the site. \n. Fixed https://github.com/18F/web-design-standards/pull/1492#issuecomment-250018158 in https://github.com/18F/web-design-standards-docs/pull/46/commits/acdc2c200721242217c4b240325911fc6624ddea.\n. We found a bug where the code samples are not displaying either the correct component or is missing a lot of content.\n. Hi @dalfaro1, thanks so much for opening this issue!\nRadio button labels are clickable and control the input of the radio button so adding a hyperlink inside it won't work. However, you can add the link outside the label and it should work as expected.\n. Hi @RobLoach, thanks for reaching out about the KSS documentation on the Standards.\nWe don't have plans to implement KSS documentation at this point in time, however feel free to follow along our roadmap https://standards.usa.gov/about-our-work/product-roadmap/ and project wiki to stay up to date on what we're working on next: https://github.com/18F/web-design-standards/wiki\nIf you'd like to provide some context around your use case, that will help the team get a better idea of your needs.\n. Hi @allanj-uaag, thanks so much for opening this issue! It's a great idea to use the <caption> in the table example. \nThese h6 headings are used throughout all of our examples for consistency so we'll need someone from our design team to think about what we want a default table caption style to look like.\n. Noting for debugging: this happens on mobile devices, not on the browser window at small screen sizes.\n. @jessieay yep, the chrome device mode simulates those mobile devices which is where the problem is appearing. Thanks for reporting this issue!\n. via #2332:\n\nThe footer has a few classes that are incorrectly named given our naming pattern. More information can be found in PR #2330\nBecause renaming these without doubling up on the classes and leaving some deprecated ones behind would be a breaking change, we'll take care of this in 2.0. Closed via #2583.. I went through the unchecked issues above, made comments about whether they were still relevant and made sure the ones that were relevant had open issues associated with them. This meta issue can be closed.. We'll be moving forward with this name. See: https://github.com/18F/web-design-standards/issues/2240#issuecomment-358448749 for more details.. Just checked Tock, where this was initially happening and it doesn't seem to be an issue anymore!. The down-pointed arrow to the right of the button offers an affordance to indicate it's an interactive button (even though the text is styled similar to our text links). We haven't heard from users that this has caused a problem with using this element so will close for now. However, if you run into it being a problem for users, feel free to post it here and we can take another look. Thanks!. Coded up a prototype of it here styled as our accordions: https://codepen.io/mbenari/pen/zRPzxw/\n\nA big unknown is the state of accessibility of the <details> + <summary> elements.. This is the current state of accessibility support of the  <details> + <summary> elements:\n\n\nSafari w/VO iOS + Desktop (latest OS: High Sierra) announced as expanded/collapsed \u201csummary\u201d\nJAWS 2018 + FF (ESR) & Chrome announce as an expanded or collapsed button\nIE11 - details summary not supported\nEdge - details summary implementation under consideration\nNVDA 2017.4 + FF (ESR) announce as expanded or collapsed button. but do not convey state change when interacted with.\nNVDA 2017.4 + Chrome announce as expanded/collapsed button and appropriately convey state change.\n\n\nThanks @scottaohara \ud83d\udc4f . What would you use instead of a button? An anchor link? \nI believe it was used bc we don't have meaningful content for an anchor link's href and the a11y features that we get out of the box with a <button>.\n. As long as it's semantic and accessible and all that jazz, go for it! Using :focus instead of JS for the off-click would save a bunch of code.\nFor <button type=\"submit\">, it could also be a link where the href just points to a /search/ page, right?\n. Using their new fixed-width gutters could help keep things more consistent. Sometimes the flexible gutter re-shifts at different screen sizes and causes columns to break the layout when I'm mixing different columns. They use 20px gutter by default, the original uswds design used 30px gutters, but I would experiment to see which works the best for various layouts.. @whmii thanks for letting us know about Neat 3.0. It looks like we'll be deprecating the existing Neat-based grid for a custom flexbox grid, so this can be closed.. Sass reorganization is happening via the utilities work. If I remember correctly, the treejack test didn't offer clear results in the proposed direction. \nCan close this or leave it open to leave the door open on the \"everything inside a component folder\" approach.. @timwood it's not something that's on our roadmap at the moment.. Hi @timwood @jonraedeke, thanks for your responses! I can understand how it can take a lot of work to make sure your templates are up-to-date with our changes. Since we haven't released any breaking changes yet (it's still in the 1.x version), you shouldn't have any breaking changes from the updates. \nUnfortunately, the meta-template is not on our product roadmap and we won't be able to support building this in the near future. Our team is committed to supporting the base HTML, CSS, and JS, but can't support implementations of the system. This is something we can always return to once our current roadmap items are complete.\nWe hope the 2.0 release will help with at least some of these issues as you mentioned.. Closing as this seems to have been done in #1823. Other individual issues can be tackled via their respective issues.. Hi @westerjn, the current grid system will be deprecated in version 2.0 so we will not be including any additional updates to its docs. Please see the new grid system: https://v2.designsystem.digital.gov/utilities/layout-grid/.. Fixed in #1637.. I couldn't find any info in the header research docs recommending the search be closed: \n\ud83d\udd12 https://drive.google.com/drive/u/0/folders/1hsP34v5eAv7t0N1_0HYIj2LRl2lGPoxF\nOlder header designs have is open by default:\nSimple\n\nComplex\n\n. I think this feedback is right on, @mariamarrero. I'm unable to find anywhere information that suggests hiding the search field is a good pattern and https://www.nngroup.com/articles/magnifying-glass-icon/ states:\n\nAbove all, retain an open text-entry field next to the icon in the desktop version of a website.\n\nThe navigation in the image above is the layout I'd recommend we follow. \nNext steps: determine if implementing this would be a breaking change (2.0) or minor change.\nThanks again, @mariamarrero! . This was fixed in #2606 and will be available in the 2.0 release \ud83c\udf89 . The third item in the screenshot is a link and the rest are buttons. The buttons have a down arrow as a visual affordance to indicate it's an interactive button and are programmatically coded as expandable buttons, whereas the links are coded plainly as links (and without the down arrow).. This is a challenging one! We could do # 1 using an svg in the HTML but it would be a little more work for developers in the HTML. Still, I think it's probably better than needing a high contrast mode detection script and using a separate CSS style for that.. Hi @davidstenger, thanks for opening this issue. To my knowledge, JavaScript is not required as the site components should be progressively enhanced. You should still be able to access critical information and functions without JS. Is there a specific instance that this is not the case?. Noting that we go back and test each component without JavaScript to ensure it works as expected. Thanks.. The small search does not have a visual label but it has a label that's accessible to screen readers instead:\n<label class=\"usa-sr-only\" for=\"search-field-small\">Search small</label>\nIt seems to have the correct label and output \"Search small\" via ANDI:\n\nFrom w3.org:\n\nIn some cases, the purpose may be clear enough from the context when the content is rendered visually. The label can be hidden visually, though it still needs to be provided within the code to support other forms of presentation and interaction, such as for screen reader and speech input users.\n\nhttps://www.w3.org/WAI/tutorials/forms/labels/\n. I checked this with VoiceOver and ANDI and they were announced as collapsed and expanded, so seems like this can be closed.\n\n\n. ANDI, the accessiblity tool, shows the accessible name of \"close\" for the button, so it seems to be OK:\n\n@nickbristow can you take a look and let us know?. Closing this as it's programmatically determined. . There's no menu on the footer, nor an X to close it.\n\nNot a failure but the social media icons do not line up, may just be a spacing issue. (Mobile iphone SE)\n\nThey line up fine for me:\n\nFeel free to provide more details, but will close it for now as I cannot reproduce.. Agree with @toolness that the alt text can be set to null (empty) bc the logo text is already beside it. This applies to all footers. My guess as to why the alt text was there was perhaps to be overly cautious in case someone did not provide text for their logo, i.e. if the logo had text visibly.. Closing this as there is the alt text attribute on the logo already and will fix the issue I mentioned in #2345.. This appears to have been fixed: the heading elements are now part of the list items.\nHowever, it did seem to cause a regression #2344.. Misread, reopening.. Fixed in #2620. . Agree with @davidstenger, I like the orange outline approach on USA.gov and GOV.UK (they also do orange backgrounds on text links). It's been well tested by GOV.UK.. This is what the current focus styles (dotted gray) look like on the gray footer elements:\n\nIs this still considered passing WCAG AA? Since focus states don't have to pass, even though it would be good practice if they were visible cc @nickbristow \nDo we need an alternate focus style for gray backgrounds? Should the focus be a bright gold instead? @thisisdano . Agree with @thisisdano. Also, followed up with Nick about his 4.5:1 note and since WCAG 2.0 doesn't define a color ratio for focus, we should use what works best for folks, which I think the bright gold outline accomplishes. \nI'm also curious about the full background color on text links GOV.UK implemented.. Should update this with WCAG 2.1 now recommends at least 3:1 ratios for focus state.. I know the mobile navigation has changed over time and I'm not able to reproduce this. This is what I see:\n\nFeel free to reopen if the error is still present and I did not see this correctly.. Not able to reproduce this, closing it out.. Fixed in #2202. Thanks all \ud83d\udcaa . Unfortunately, the Sauce Labs ATO was not renewed and don't have a way to do this. Browser testing is something we'd like to figure out at some point, but there's no good solution at the moment. Closing for now.. Seems to be referring to previous content audit work that maybe no longer relevant?. I've also seen classes written as .usa-shift-one-twelfth in line with the include in case you'd like to consider an alternate naming convention.. Fixed in #2750.. This issue is fixed here on the live site and fractal instance: https://standards.usa.gov/components/headers/ and https://federalist-proxy.app.cloud.gov/preview/18f/web-design-standards/develop/components/detail/banner.html. Since the issue around notifying folks with the inaccurate text is in #2093, closing this issue.. Added documentation around how to add additional social media classes here: https://github.com/uswds/uswds-site/pull/502 Let us know if this helps with or resolves this issue @fulldecent. . Noticed this is a duplicate of #1800, so moving conversation there.. To provide some background on the nav link alignment, the alignment was intentional and based on the visual designs in the WDS Headers 070816.sketch file. In that design, the nav links align to the bottom of the logo text. There may be use cases where aligning it to the baseline makes sense, like a shorter header, but that would need to be checked with the team's designer.\nHeader visual design (Sketch file)\n\n. Duplicate of #998.. @bruffridge Added documentation on how to use additional social media icons here: https://github.com/uswds/uswds-site/pull/502 Let us know if this helps with or resolves this issue as well? \nRelated to #1752.. Consolidating the convo from #1752 here. @fulldecent also requested Medium and GitHub options.. Didn't hear back from the issue author, closing this out for now.. It sounds like we'd want the accordion component implemented on the footer link lists, but for it to just be a regular list on large screen sizes or an accordion that can't be opened and closed on large screen sizes. . Hi @mariamarrero and @DK1999, just wanted to let you know that we've fixed this in #2389 and will go out in the next release (in 2 weeks). You can preview it here. Thanks!. Yeah @shawnbot, the list line length issue looks like a bug, where the goal was to ensure that the max line length didn't get applied to component elements which use list elements to structure it (e.g. accordions), but unfortunately that means the max line length doesn't get applied to basic text lists, unless you explicitly declare it with a class.. @shawnbot Even though the list max-width is a separate issue from this, you could go about it by selecting list elements that are the direct children of the .usa-content element as shown here: https://github.com/18F/web-design-standards/pull/1867/commits/16bdbf01cdde30030c10f3909597998c32c87af4\nThis would ensure components like the accordion don't get caught up in the max-width issue since it's nested inside a div / not a direct child. And text-based <ul>'s which are direct children get the max-width applied bc it's directly inside the usa-content container.. Bc the variables.scss file changed so much, this now conflicts. Will be easier to close this PR and open a new one later.. Addressed via a more abstracted font size, though I think understanding which font sizes are appropriate for which heading levels would be helpful.. Done, preview: https://federalist-proxy.app.cloud.gov/preview/uswds/uswds-site/add-utility-docs/utilities/color/.. This looks like it's been implemented in 2.0: https://v2.designsystem.digital.gov/utilities/font-size-and-family/. Closed in #621.. We don't have plans to continue writing performance content, but cc'ing @jeremyzilar since this could be good content to move to DigitalGov.gov.. Moved this work into #1877 so it can be tracked in one issue.. Conversation will happen in the original issue: #939. Closing.. Each megamenu is using a single list so maybe this was previously resolved. Closing.. Re-opening with additional details... \nWhile the mega-menu is a single list, it includes a div as the child of a ul which causes an HTML5 error:\n\nElement 'div' not allowed as child element in this context.\n\nCSS multicolumn layout would work for the current design and once we drop IE9 support. But would not work for a design of columns with headings that need to be broken up with different numbers of links per columns. For example:\nPolicies (heading)\n- link 1\nBenefits (heading)\n- link 1\n- link 2\n- link 3\nContact (heading)\n- link 1\n- link 2\nFor the above, it would seem like it would need to support multiple lists.. Your suggestion is appreciated, however it is not on the current product roadmap. \nNote: we can change the example to 3 discrete lists in the meantime.. This is the correct way it functions, a bolder text will always be longer than unbold text. The sidenav links have adequate line height and supports running to two lines.. Your suggestion is appreciated, however it is not on the current product roadmap.. Yes, that was behavior was intentional. Also, the current grid will be deprecated in version 2.0, see https://v2.designsystem.digital.gov/utilities/layout-grid/ for more info.. @adborden you can turn it off with $output-bourbon-deprecation-warnings: false !default; fyi\nSeems like it should be turned off with Bourbon v4.3.2 https://github.com/lacroixdesign/node-bourbon/issues/37 not sure what uswds is using.. @toolness short-term you can move the rem() function to the custom utilities file, and upgrade bourbon. Longterm, decide whether the  rem() function is needed or not, i.e. remove if it's not needed. But you might want to explore typography and font sizes more generally and systematically as well, like how robust is it, how does it impact other code bases, how easy is it to change, does it work as expected, etc.. +1 would be good to see clicking somewhere else on the page closing the menu, but would want to ensure this is a usability best practice / the expected result for users.. Your suggestion is appreciated, however it is not on the current product roadmap.\nNote: these should be split into two issues.. Hoping this was resolved by now.. Hi @jungshadow, thanks for opening this issue. We've incorporated this in #2595 and should be available in version 2.0.. Just wanted to say Federalist added CORS support for the website codepen.io \ud83c\udf89, although I realize it doesn't resolve this. I think the Federalist team is cautious of adding CORS support for any site bc they don't want to create a CDN, although all Federalist sites are public anyway. \n@wslack could you provide the reasoning again here so we can track it?. Thanks all! Closing \ud83c\udf89 . Your suggestion is appreciated, however it is not on the current product roadmap.. I think some people may prefer required fields unlabeled and optional fields labeled, so think this may not be helpful. Going to close.. Was wondering if this issue implies that #690 is done, are you able to check it out @el-mapache?. Your suggestion is appreciated, however it is not on the current product roadmap.. What's proposed isn't in the code right now. Dependent on the usa- prefix being defined as a variable in #690.. Hi, thanks for opening this issue. We'll review this with our team and see how it fits on our roadmap. Stay tuned!\nAlso, it's some pretty simple CSS to do this. position: sticky and top: 0.. Duplicate of #1745, closing to move convo there.. I think the resizing was done intentionally. In any case this grid will be deprecated in version 2.0. See https://v2.designsystem.digital.gov/utilities/layout-grid/ for more info.. The current grid will be deprecated in version 2.0, see https://v2.designsystem.digital.gov/utilities/layout-grid/. Closing since there's no response from the issue opener.. @toolness That is high. It's possible that the jekyll template has something to do with it as well, as it's propagating it out to everyone who uses it. Are you looking at html files in that search?. Note: if this is removed, it won't have an adverse effect bc it doesn't do anything. It would be basically an extra div. The only use case I could imagine for this may be if we found a way to use multiple rows inside usa-grid. From the last I remembered, the system only works with one row per grid container. @msecret might remember as well / have thoughts.. The current grid will be deprecated in version 2.0, see https://v2.designsystem.digital.gov/utilities/layout-grid/. Hi, thanks for opening this issue. We'll review this with our team and see how it fits on our roadmap. Stay tuned!. Your suggestion is appreciated, however it is not on the current product roadmap.. Oof that's a bummer that expandable content isn't working bc this could be used for a lot of other banner-like content. Thanks for catching that @bruffridge! . Fixed in #2329, thanks for the help @bonez0607! . Your suggestion is appreciated, however it is not on the current product roadmap.\ncc @thisisdano to check if new media mixin has screen or not.. @toolness yeah it looks like it was an issue with the left value causing this issue. Sorry this issue was confusing \ud83d\ude2c. . Does the USWDS use autoprefixer? If it does, browser prefixes will be added in and no need for some of these Bourbon mixins. If not, you may want to check the browsers you support and add the prefixes in manually.. @thisisdano issues around base font size came up in Design Systems Slack: https://design-systems.slack.com/archives/C0ENULNQZ/p1498750113039260\nThis PR doesn't remove the rem function itself as we're still using an old version of Bourbon, but just the uses of it that trigger the warnings, and don't have an effect on the system as the function just ends up converting it to the rems that this changes it to anyway. \nNot saying we should do this, but GDS made a case to move from rem to px for browsers consistency (rem does some weird things in different browsers) which would also resolve the base font size issues.. Hi @sawyerh, yes we definitely would like to look into this. The current sprint is focused on small to medium sized bugs. Since variables are central to how the system works and this proposal is for a structural change, this would likely have to be tackled more comprehensively (with some research and user testing) to ensure we still have a strong, easy-to-use developer experience. \nCurrently, many developers rely on the variables.scss file as a single place to find all the variables, so would like to make sure any changes we make still supports a straightforward developer experience. If you have thoughts around this point, feel free to share.. Resolved in #2687. \n@sawyerh feel free to take a look.. Hi @brockfanning, thanks for trying to take a stab at this idea. \nYou're right that the standards site is using a mobile-specific navigation, but that's because when the site first launched, it was before we developed the navigation component. Also, the Standards site's mobile navigation is a little different from what we're currently offering bc the contents of the page appear in a side navigation rather than a dropdown from the header navigation. So this will need to be changed at some point to either add this functionality into the USWDS package or use the provided headers.\nThe way our CSS is written is mobile-first, so we don't add mobile-specific classes to our codebase, rather start from mobile sizes and expand out to desktop sizes when it's needed. Taking your suggested code, I think it can be simplified to:\n```\n// Navigation display helper classes --------- //\n.usa-nav-mobile {\n  display: none;\n}\n.usa-nav-desktop {\n  @include media($nav-width) {\n    display: block;\n  }\n}\n```\n*Note: we'll need to discuss with the team around adding this helper classes in, probably when we take another look at the headers. Which would also include how to name these classes (e.g. .usa-small-screen vs .usa-nav-mobile). Will let you know when it's on our roadmap.. @brockfanning sorry, I just rechecked and your code is \ud83d\udc4d.  \nI think the team still needs to do a bit of research on this to better understand different use cases and if this is a desired feature by others. The example on the USWDS site is very specific to that site, it's a fixed-width sidenav and previously dropped above the footer on mobile before being hidden as it is now. Ideally, we'd want to use the components provided in the library so would want to know if we should add this pattern/ability into the library or use an existing pattern.\nSo we can better understand your use case, in your example, what items are you trying to only show in mobile/desktop nav widths?. Thanks again for opening this @brockfanning. At the moment, the team is more focused on fixing bugs, but may re-open this when we have a headers-focused sprint and see that something like this would be beneficial. . Here is the code for that tutorial: https://github.com/udacity/ud891/blob/gh-pages/lesson2-focus/07-modals-and-keyboard-traps/modal.js. Since this issue is primarily about the vendor Bourbon files not being in the right location when using git to load the uswds and we plan to remove Bourbon #2694, this can be closed.. I think the current US flag icon was chosen bc it displays well at that small favicon size, not to be an accurate representation of the actual US flag. It's pretty common for icons to look different at different sizes and I would recommend to keep the icon as is bc the actual flag blurs everything together at that small size.. @thisisdano is our visual design point person and hoping he can provide some direction here. Any thoughts?. Hi @toolness, I noticed the WIP tag on this PR and wanted to check in: is this something you'll try to get to a ready state or should we close it?. Your suggestion is appreciated, however it is not on the current product roadmap.. I know somewhere it was mentioned the side navigation using the nav element, but what did the accordion need?. A main makes sense (and perhaps section too). I think the button is fine to get the accessible features from it, ideally, we could use a heading but we don't know what heading level someone would need and could see it leading wrong heading levels from copy + paste.\nSee Heydon Pickering's Collapsable Sections:\n<main>\n  <h2>\n    <button aria-expanded=\"false\">\n      Section 1\n      <svg aria-hidden=\"true\" focusable=\"false\" viewBox=\"0 0 10 10\">\n        <rect class=\"vert\" height=\"8\" width=\"2\" y=\"1\" x=\"4\"/>\n        <rect height=\"2\" width=\"8\" y=\"4\" x=\"1\"/>\n      </svg> \n    </button> \n  </h2>\n  <div hidden>\n    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque commodo purus quis mi cursus hendrerit eu eu metus. Aliquam aliquam arcu eget aliquet scelerisque. Pellentesque sodales turpis vitae venenatis vehicula. Ut id porta velit. Ut eu dignissim dui, quis gravida est. Cras quis venenatis mauris, a bibendum enim. Sed at augue libero. Nullam tortor metus, tincidunt ut urna id, posuere placerat orci. Ut quis risus dictum risus facilisis imperdiet quis sed eros.</p>\n  </div>\n...\n</main>\nhttps://inclusive-components.design/collapsible-sections/\nhttps://codepen.io/heydon/pen/QqzRvQ. We can try that, thanks \ud83d\udc4d . Here's the PR for the sidenav: #2359. @jordangov I opened a PR for the accordions in #2360, but I'm seeing this accessibility violation on a page with all the components:\n\nThe main landmark should not be contained in another landmark\n\nvia https://circleci.com/gh/uswds/uswds/2111\nhttps://dequeuniversity.com/rules/axe/3.0/landmark-main-is-top-level\nLet me know if you have any background on this or if it's a false positive.. This is done in #2360. Thanks for your help @jordangov! . @msecret looking through this and was wondering how is this a breaking change?. This is a PR to address the issue, not a duplicate.. Published in https://github.com/uswds/uswds-site/pull/505.. @AndreaSigz was this one ready to be published as well?. @AndreaSigz were you able to find this one?. Thanks so much. Is this approved to be published?\nOn Thu, Mar 22, 2018 at 1:54 PM, Andrea Sigritz notifications@github.com\nwrote:\n\nJust shared doc with uswds Google group. https://docs.google.com/\ndocument/d/1Y4D-JkOqO0i4N63lcrjXIvNFdE3ewzM0WIuS41EJ6yE/edit?ts=5992fb85#\nheading=h.789bbdqrhlil\nThanks!\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/uswds/uswds/issues/2076#issuecomment-375454257, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AFAZo8WPSMAuoXkArBCwygQW09FBhVsAks5thA-RgaJpZM4Ooty_\n.\n\n\n-- \nMaya Benari\nU.S. Web Design System https://designsystem.digital.gov/\nOffice of Products and Programs | 18F https://18f.gsa.gov/\nTechnology Transformation Service (TTS)\nGeneral Services Administration (GSA)\nmaya.ben-ari@gsa.gov\n. Fixed in #2160.. Your suggestion is appreciated, however it is not on the current product roadmap.. Still needs updated text:\n- [x] https://www.usda.gov\n  - \u2709\ufe0fEmailed feedback@oc.usda.gov (no public github for site)\n- [x] https://oes.gsa.gov/ \n  - \ud83d\udd27PR with fix created: https://github.com/gsa-oes/office-of-evaluation-sciences/pull/99 merged\n- [x] https://certify.sba.gov/\n  - \u2709\ufe0fEmailed help@certify.sba.gov. Also, the banner doesn't open.\n- [x] http://usajobs.github.io/design-system/\n  - \ud83d\udd27PR with fix: https://github.com/USAJOBS/design-system/pull/121 merged\n- [x] https://fardatacollection.sam.gov\n  - \u2709\ufe0fEmailed fardatacollectionpilot@gsa.gov\n- [x] https://developers.login.gov\n  - \ud83d\udd27PR with fix: https://github.com/18F/identity-dev-docs/pull/61 merged\n- [x] https://www.performance.gov\n  - Fixed. Issue: https://github.com/GSA/InterimPerformance-Dot-Gov-2018/issues/191\n\n[ ] :lock: Additional sites\n\nSites no longer exist:\nhttps://developer.login.gov\nhttps://sites.usa.gov/\nAlready fixed:\nhttps://federalist-docs.18f.gov/. @konklone all the sites with public GitHub repositories have PRs with fixes submitted. For the rest, I've notified them by email. Thanks for bringing this up!. The current grid will be deprecated in favor of this grid system in version 2.0 which should have much of what you're looking for. See: https://v2.designsystem.digital.gov/utilities/layout-grid/ for more info.. Your suggestion is appreciated, however it is not on the current product roadmap.. Closing this as it's a Firefox behavior and not something the USWDS team can resolve. Thank you for opening the issue in Firefox's Bugzilla and we'll track any progress from there.. @thisisdano: see @sawyerh's comment above.. Also, @sawyerh if you do decide to go this route (or another route), please let us know how it tests with users and the problem it solves. That will help inform a possible design solution.\nOne problem the proposed solution solves is developer convenience: it means you don't have to wrap the input in an element to style the left border. But I'd rather we chose a solution that responds best with end-users rather than developers.. Some feedback from the USWDS Slack around CSS Grid:\n\nsince it's (supposed to be supported in all browsers), it would like eliminate any if* statements. Also, I am just learning about it, but it's nice that empty divs that hold their width & height can be used and we don't have to write separately for mobile.  I used to have issues with grids within grids ... but this new (7 month old) thing may be an interesting solution\n. Implemented in #2422. Will be available in the next 2.0 release. Thanks for your thoughts, everyone!. Hi @njohnson, unfortunately we don't have any recommendations for a good accessible validation package, but feel free to let us know if you find one! Closing this as @toolness provided an answer to your initial question.. Hi, thanks for opening this issue. This issue is being worked on and should be fixed soon.. Fixed in https://github.com/18F/18f.gsa.gov/pull/2573. Thanks @danoc! . Fixed in #416.. Thanks for the explanation, I understand how you came to that decision with those constraints now. \n\nIf the solid background like GOV.UK introduces too much complexity, we can stick with simple outline. I don't recall seeing gold used on the forms recommendations, but assuming that it could come later. Also, from what I gather, adding space around certain elements requires extra code too.\nPerhaps testing with people with disabilities and developers could help stress test this solution. I'm generally cautious of making decisions for PWDs and just want to ensure the best solution come out for them (as well as minimizing introducing new problems for developers).. We can use any contrast ratio and still be 508 compliant since it uses WCAG 2.0 which doesn\u2019t have a contrast requirement.\nHowever, WCAG 2.1 does have a contrast requirement for focus states (1.4.11 Non-text Contrast) which is at least 3:1 (AA for large text). Section 508 doesn\u2019t have any foreseeable plans to require 2.1 as they only just incorporated 2.0 this year.\nIf we are OK with aligning with WCAG 2.0, we can use the current choice of Gold 30v (2.22 contrast). If we want to be future friendly and some may argue more accessible, we should align with WCAG 2.1. This would be the 40 values of the colors (although I found those colors didn\u2019t always meet AA large text)\nI recommend staying away from red and green bc they are used as error and success states on forms.\nI tested yellows, oranges, and blues. Did not test teal and purple, but people could potentially use it if it works with their color scheme.\nColor options AA\nRed warm 30v #e67549\n3 on white\n7 on black\n\nOrange 40 #eb8028\n2.74 on white \u274c \n7.65 on black\nPasses AA if you change text color to #E87516 New contrast ratio: 3.01\n\nGold 40 #ad8b65\n3.15 on white\n6.66 on black\n\nGold 40v #c98a0c\n2.95 on white \u274c\n7.12 on black\nPasses AA if you change text color to #C7880C New contrast ratio: 3.02\n\nYellow 40 #ab9149\n3.05 on white\n6.88 on black\n\nBlue 40v #009afa\n3 on white\n7 on black\n\nIndigo cool 40 #6d91ed\n3.03 on white\n6.92 on black\n\nCurrent\nLight gray #aeb0b5\n2.17 on white \u274c\n9.68 on black\nPasses AA if you change text color to #92949B New contrast ratio: 3.03\n\nGold 30v #e6a100\n2.22 on white \u274c\n9.46 on black\nPasses AA if you change text color to #C48900 New contrast ratio: 3.03\n\n\nWhy yellow?\nYellow is the most visible color on the spectrum, less likely to conflict with most color schemes, triad to default blue\nWhy blue?\nLight blue is used as browser's default focus color so people are accustomed to it and trust it, using a monochromatic / lighter tone of our default blue makes it cohesive, potential to have issues with a blue scheme with a bright/light background but this may not be often\nWhy orange?\nA mix of red and yellow it has high visibility, orange is complementary to default blue, the negative is it can be similar to the red error state especially if it doesn\u2019t have enough yellow.. It's also interesting to see the focus that the WCAG website uses: thicker gray underline and light gray background. The blue halo is the browser default.\n\n. I met with the 18F visual design team today to discuss this issue. \nThe team recomended we meet WCAG 2.1's requirements of AA large text (3:1 contrast ratio) in order to be future friendly and the most accessible.\nThe team favored Blue 40v #009afa as the focus state. They recommend adding a focus offset only to buttons (not links) to make sure it's visible on blue buttons.\nBlue 40v #009afa\n3 on white\n7 on black\n\nOne designer mentioned the original focus being too thick so I changed it to 3px thickness and 3px offset.\nBlue focus on landing page template\n\n. @thisisdano here is what it looks like in 2, 3, 4:\n2px\n\n3px\n\n4px\n. Did you mean 4px outline and 4px offset?\n4px outline and 4px offset\n\n4px outline and 2px offset\n\nOriginal: 3px outline and 3px offset\n\n/cc @jenniferthibault @AvivaOskow @austinhernandez \n. Should also add that orange was a solid second place to blue.\n\ud83e\udd47Blue 40v #009afa \n\nI would pick blue in this instance \u2014 it feels like it belongs in the system, looks nicest, and to me, feels in -line with my expectations which are set by that fuzzy blue browser default style.\nIMO blue looks the nicest but you can\u2019t see it on the buttons very well [@maya's note: before the added offset]\n\n\ud83e\udd48Orange 40 #eb8028 \n\nbright orange could look like an error state but it seems the most obvious to me!\nThe orange is most vibrant against the blue background, but feels slightly out of place/surprising against white (but maybe I\u2019d get used to it)\n\n\ud83e\udd49Gold 40v #c98a0c \n\nthe gold is definitely out for me here though, too muddled on white. Success Criterion 1.4.11 Non-text Contrast states its the contrast ratio against adjacent colors. This means the background color for the most part.\n\nWe can use box-shadow but that would be we can't offset it and get the background color to come through like we do now, we'd have to use multiple borders to do this and choose a border color (ie white) to fake it and then you'd have a strip of white and blue on anything besides a white background.\nI don't know what we like is as important as what works best for the folks who rely on focus to navigate the web. Maybe we should ask them?\nThe options above are not aiming to reach 3:1 on any background, just white and black. And something that is visible on most cases i.e. doesn't disappear like the gray did. . Many thanks for the feedback, everyone! The blue focus is implemented in #2604 and can be seen in use here. \nWe have some other strong options to consider like orange and @thisisdano's suggestion. We'd also like to test these options with folks that rely on focus to navigate the web, and maybe some have vision impairments as well, so that we can recommend the option that works best.. Hey @joshbruce, sorry you're having trouble getting into our Slack (assuming you mean our uswds-public channel). I'm going to ask the admins if they can let you in. Stay tuned!. @joshbruce have you filled out https://chat.18f.gov/?. And about your question of the A11Y Project - Yes! it's a great resource, we link to it on our accessibility guide: https://accessibility.18f.gov/ :). @joshbruce our Slack admins didn't see your info submitted on the https://chat.18f.gov/ form. They sent an invite to your email which you should have shortly.. Closing this as you made it into our Slack.. Since we have designs from Ryan already, maybe should use that to guide this.. Also, as a note, when we used the box-shadow property, the focus was a circle, but outline used now can only do squares. . Hi @joe-watkins, there were some updates made to the focus state (using outline instead of box-shadow) and wanted to check if this is still an issue for you?. Glad to hear! Thank you \ud83c\udf89 . Looks like a duplicate of #1071, closing.. Hi @joshbruce, glad you resolved this issue. Our team isn't clear how a markdown editor fits into the scope of the Standards. Closing this issue for now.. Thanks for sharing @joshbruce. This is a really interesting idea that we've heard requested before. We're starting a new phase of work with the Standards, where we'll be taking account of where we are and will be sure to consider this and if it's something we want to do going forward. . Seems to be a duplicate of #690. Could you repost in there to keep the conversation in one place? Thanks!. Glad that it's showing up now in desktop view.\nI see this in mobile view (a little wider):\n\nwhich goes to this in smaller sizes:\n\nQuick visual design check, the header now does not extend to the width of the page like before. I checked @rtwell's designs in https://github.com/18F/web-design-standards/issues/2086  and it seems to be page width too. Was this change intended or decided somewhere else? \nCurrent\n\nDesign via https://github.com/18F/web-design-standards/issues/2086\n\n/cc @thisisdano . ### Basic header with megamenu (current):\n\nDesigns:\n\n/cc @thisisdano . Thanks for letting us know @JJFranko, we're taking a look and will work on a fix ASAP.. @donjo fixed as part of f14ef54.. Fixed in #2161.. Hi @danamuses, thanks for opening this issue. We'll review this with our team and see how this fits on our roadmap. . @toolness no, it's not working for me.. Here's the error, but I don't know if it was the same as the one we got before:\n```\n\u279c  web-design-standards git:(revert-headers) \u2717 npm run spec\n\nuswds@1.4.0 spec /Users/mayaben-ari/Code/web-design-standards\nnpm run mocha -- 'spec/*/.spec.js'\nuswds@1.4.0 mocha /Users/mayaben-ari/Code/web-design-standards\nmocha --opts spec/mocha.opts \"spec/*/.spec.js\"\n\n/Users/mayaben-ari/Code/web-design-standards/spec/chrome-fractal-tester.js:9\nconst HOSTNAME = REMOTE_CHROME_URL ? os.hostname().toLowerCase()\n                 ^\nReferenceError: REMOTE_CHROME_URL is not defined\n    at Object. (/Users/mayaben-ari/Code/web-design-standards/spec/chrome-fractal-tester.js:9:18)\n    at Module._compile (module.js:569:30)\n    at Object.Module._extensions..js (module.js:580:10)\n    at Module.load (module.js:503:32)\n    at tryModuleLoad (module.js:466:12)\n    at Function.Module._load (module.js:458:3)\n    at Module.require (module.js:513:17)\n    at require (internal/module.js:11:18)\n    at Object. (/Users/mayaben-ari/Code/web-design-standards/spec/headless-chrome.spec.js:5:29)\n    at Module._compile (module.js:569:30)\n    at Object.Module._extensions..js (module.js:580:10)\n    at Module.load (module.js:503:32)\n    at tryModuleLoad (module.js:466:12)\n    at Function.Module._load (module.js:458:3)\n    at Module.require (module.js:513:17)\n    at require (internal/module.js:11:18)\n    at /Users/mayaben-ari/Code/web-design-standards/node_modules/mocha/lib/mocha.js:230:27\n    at Array.forEach (native)\n    at Mocha.loadFiles (/Users/mayaben-ari/Code/web-design-standards/node_modules/mocha/lib/mocha.js:227:14)\n    at Mocha.run (/Users/mayaben-ari/Code/web-design-standards/node_modules/mocha/lib/mocha.js:495:10)\n    at Object. (/Users/mayaben-ari/Code/web-design-standards/node_modules/mocha/bin/_mocha:469:18)\n    at Module._compile (module.js:569:30)\n    at Object.Module._extensions..js (module.js:580:10)\n    at Module.load (module.js:503:32)\n    at tryModuleLoad (module.js:466:12)\n    at Function.Module._load (module.js:458:3)\n    at Function.Module.runMain (module.js:605:10)\n    at startup (bootstrap_node.js:158:16)\n    at bootstrap_node.js:575:3\nnpm ERR! code ELIFECYCLE\nnpm ERR! errno 1\nnpm ERR! uswds@1.4.0 mocha: mocha --opts spec/mocha.opts \"spec/**/*.spec.js\"\nnpm ERR! Exit status 1\nnpm ERR!\nnpm ERR! Failed at the uswds@1.4.0 mocha script.\nnpm ERR! This is probably not a problem with npm. There is likely additional logging output above.\nnpm ERR! A complete log of this run can be found in:\nnpm ERR!     /Users/mayaben-ari/.npm/_logs/2017-10-05T23_36_26_008Z-debug.log\nnpm ERR! code ELIFECYCLE\nnpm ERR! errno 1\nnpm ERR! uswds@1.4.0 spec: npm run mocha -- 'spec/**/*.spec.js'\nnpm ERR! Exit status 1\nnpm ERR!\nnpm ERR! Failed at the uswds@1.4.0 spec script.\nnpm ERR! This is probably not a problem with npm. There is likely additional logging output above.\nnpm ERR! A complete log of this run can be found in:\nnpm ERR!     /Users/mayaben-ari/.npm/_logs/2017-10-05T23_36_26_028Z-debug.log\n```. Checked again and it's working \ud83d\udc4d . Closing this for now since public contributors don't have the tests run. We can come back to this at a later point.. Thanks for bringing this to our attention. I could see how this could be confusing without any documentation. We'll take a look at this issue and get back to you.. From @thisisdano in #2237:\n\nThe button color variants available at https://components.standards.usa.gov/components/detail/buttons--red.html aren't documented on our site. Users don't know these variants exist, which is a particularly acute issue since we changed the styling of usa-button-secondary to outline from red. These variants are important. They are often necessary to communicate functionality, and if they don't appear on our site they may as well not exist.\ntodo\n- Document all available button variants on standards.usa.gov. Hello again, we've returned to the previous naming convention in #2767 and show them all on the site: https://v2.designsystem.digital.gov/components/buttons/\n\nThis ensures they are more consistent with the themed variables these buttons use. Thanks again!\n. This is probably a good idea. Just need to review where it stands in the roadmap and verify that we're not degrading things design-wise. We'll need to check how this looks with the default bold nav items with and without the dark background (from the dropdown).. @andrewmaier thanks, yeah we used that technique for light text on dark backgrounds as described by http://usabilitypost.com/2012/11/05/stop-fixing-font-smoothing/ \"Antialiasing is useful for certain circumstances, such as for light on dark text...\", but maybe we should re-review this or only do it on bold text.. @andrewmaier just checked and https://github.com/18F/web-design-standards/issues/2172#issuecomment-335917410 is on their codebase, not USWDS, but thanks for sharing.. Hey Nick, thanks for opening this issue. Just realized you didn't get my email so re-posting here as well.\nThat's exciting to hear about how you're using the Standards. We've heard of folks wanting more viewport control in the past like you mentioned so we'll likely take a look at it in the future. I don't know when we'll be working on rethinking grids, but can check with the core team and see how it fits in our roadmap and if/when would be good time to collaborate. In the meantime, feel free to go ahead with your modification and let us know how it progresses.. @emes001 the timeline for 2.0 is likely in the next few months, in which updates to the grid would be included. The main focus right now is on our utility classes feature and will likely be taking a closer look at grids soon after that feature is complete.. This is really useful feedback @annekainicUSDS, thanks! Appreciate the thought behind backwards compatibility too. Also, a former team member had started some thinking around this too: #2137.. @ncksllvn yes, we'd be glad to collaborate on this. We're still in the middle of our work on utilities, but we'll touch base again in a few weeks. We'll be taking grids on next following utilities. . Hi all, we'd like to share some updates on this. We're working on a proposal for a new grid system which you can take a look at here that has viewport visibility toggles. \nPreview: https://federalist-proxy.app.cloud.gov/preview/gsa/10x/dw-design-refinements/layout-grid/\nNotes: \n- This would be a breaking change as it changes the names of the classes.\n- The idea is you'd add the viewport to the columns: .tablet:g-col-4 \n  - Could use .sm:g-col-4 rather than tablet bc tablet (and other device) size range is large, subjective, and ever-changing.\nThoughts? Feel free to post general thoughts here and specific thoughts on the code in the PR #2422.\n/cc @ncksllvn @emes001 @stphnwlkr @annekainicUSDS . The new grid is implemented in #2422. The visibility classes are also implemented in the release-2.0 branch.\nWill be available in the next 2.0 release. Thanks for your thoughts, everyone!. The WCAG requirement is a zoom level of 200% per https://www.w3.org/TR/UNDERSTANDING-WCAG20/visual-audio-contrast-scale.html, so we've met the standard. If there is a high use case for this, feel free to describe it. Closing for now. . @donjo some questions came up around the buttons that @thisisdano and I wanted to square away first in #2171. We went with the primary button bc it was more stable.. Merged this in so we can get the fix landed.. My bad @rtwell, I thought you designed the new homepage hero.\n@bruffridge yep, there's a PR open for that issue: #2175.. Hi @bruffridge, yes that was an intention design decision. Closing this out for now.. @sawyerh not picky at all! I'm working on a related issue here #2178 and uploaded a 2x png. Does that resolve it or does it need more work?. Ah, just realized you shared an SVG, not a PNG. Wonder how it compares to the new SVG I uploaded: https://github.com/18F/web-design-standards/pull/2178/files#diff-c92e431a8d1091d484058af08dee8196. Got it, I pulled in your code to my PR too: https://github.com/18F/web-design-standards/pull/2178/files#diff-c92e431a8d1091d484058af08dee8196. @joshbruce thanks for opening this issue! When I tried the currentColor technique, it used the text color, not the link color. This may be bc we're using a psuedo-element (:after) and background image and not putting the SVG directly in the HTML, but I'm not sure.. @donjo yep, fixed merge conflict in f751630.. Hi @jondandois, thank you for your comments. We all can agree that we want to convey the true meaning of the US flag to people seeing at the icon. To do this, it's important for us to have a legible icon which almost immediately conveys its meaning.\n\nArguments about blurry images and re-sampling from scaling seem to be at odds with the concept of an SVG and the fact that screen resolutions / pixel density continue to increase and are unlikely to decrease. \n\nWe need to support the ico file type which uses a 16px icon at the minimum. The actual US flag would be blurry as shown above. When used on the site as an SVG, the human eye would not be able to discern the actual flag in all its detail at this size. We also consider folks with vision impairments that are hard of seeing and are committed to using an icon that people with disabilities can see clearly. Lastly, it's industry practice in icon design to use the appropriate fidelity of an icon at different sizes. At the smallest size, icons need a lower fidelity and simplest shapes and can potentially increase fidelity as size increases. \nFor example, Iconic has three different shapes of icons depending on its size:\nhttps://useiconic.com/guides/using-iconic-responsively/\nhttps://webdesign.tutsplus.com/articles/all-about-responsive-iconography--webdesign-16232\n\nI'd even go so far as to quote USWDS on another topic of misrepresentation in government and point out #2240 regarding the use of the word \"Standards\" in the name of the project:\n\nWe've recently changed the name of the project to the U.S. Web Design System. You can read more about it here: https://designsystem.digital.gov/whats-new/updates/2018/01/17/changing-our-name/ \nThanks again for your comments and I hope this better explains some of our reasoning.. @donjo that makes sense. Moved it back to base.scss in e22bc97 and leaving the a:focus rule in typography. Do you think it should be a mixin since it's in two places?. @donjo done in bb70ee2. Also, had to move utilities.scss import ahead of base.scss in the import order in fe75f10 since it was referencing it.. Going with h5 styles per @thisisdano's recommendation. Also adds a flush left alignment for the first heading item in the borderless table.. Adding a preview link: \n\ud83d\ude0e Preview. LGTM, good work @thisisdano! \ud83c\udf89 . The way I'm hearing this can be done:\n\nyou could specify a preview template with an extra element (f.e. <div class='scope'><your pattern will be rendered here></div>, and attach the extra background styling to the .scope. Preview template markup is not rendered when the partial is embedded, so the div.scope won\u2019t be there when rendered.\n\nIt sounds like we'd need to create a preview template for each component that has scoped styling.. Looked through each component referenced and found that almost all instances of a scoped style is not shown on the uswds-site and has no effect to the end-user so this issue can be closed. Findings posted in the first comment.. I see {% include code/accordion.html component=\"grids\" %} on the grids page. Does this mean we're using the fractal code?. I see, bc we didn't want <style scoped>... injected on the docs site.. This is done in #2551 and https://github.com/uswds/uswds-site/pull/572 \ud83d\udea2 . >- Does the standard field have to be usa-input-required? Might usa-input be just as clear and more in line with our guidance to consider required the default?\nThe standard field is just <input>, .usa-input-required if for the required styling.. No, we only mark optional and that's what we show in the docs site. The required is just left in the CSS so not to break anything for folks that were using it before. Also, there's a use case where some people will use the required state if 10 optional fields and 1 required field. So we have it there but don't promote it.. Re: hardcoding vs. CSS content, that may be a question for @nickbristow. It was hardcoded when I was on the project so assume it was done for developer convenience and bc screen readers read content, but I haven't looked into the minutia of this.. Merging as visual design and front-end is \ud83d\udc4d and we can continue the convo here or in another issue.. @donjo the big button is used on the landing page and now looks a little funky when it drops to two lines: https://federalist-proxy.app.cloud.gov/preview/18f/web-design-standards/jd-big-button/components/detail/layout--landing.html\nNew big button:\n\nCurrent big button:\n\n. @thisisdano also wanted to make sure you gave some feedback around how the button should be applied in the hero component. Could you take a look?. \ud83d\udcaf to you hero change suggestions. In terms of this PR, I think if we use the regular button as @donjo has done already and remove its custom styling we should be good. And we can :raccoon: the rest of the hero improvements in another issue/PR. Regarding the link color on dark background, that was from a previous designer that thought light gray links look nice on dark backgrounds. You can see a similar treatment here: https://labs.usa.gov/. But you have the power to change that.. The pattern is also doing some validation (I wrapped it in a form element and added a submit button to test this):\n\n\n\nWouldn't this be valuable?. Ah, that's right! \ud83d\ude05 Sounds good, we can remove the pattern attribute.. @thisisdano also noticed this effects the preview of the sidenav component at small sizes bc it disappears a little from the negative margins: https://federalist-proxy.app.cloud.gov/preview/18f/web-design-standards/dw-sidenav-separation/components/preview/sidenav--default.html. @thisisdano it seems like there are some inline styles causing this in the preview usa-grid div: style=\"padding: 2em 0\" which removed the grid left/right padding. I wonder if we can remove this and makes me wonder if it should be there in the first place. This is also an issue in the internal page that resizes: https://federalist-proxy.app.cloud.gov/preview/18f/web-design-standards/dw-sidenav-separation/components/detail/sidenav--default.html. @thisisdano the negative margins are a bit heavy-handed to add it directly to the sidenav component. Would adding it to .usa-grid .usa-sidenav make more sense? We should think through all the use cases of this component to make sure we're not introducing any regressions.\nAlso, do we think the left bar is still as readable when it's on the left edge?. >Also, this line of code gave me pause:\n.usa-nav-primary {\n  @include usa-sidenav-list;\nThe mobile navigation uses the sidenav pattern style. Reusability ftw :) Would it make sense to abstract this into something else?\n\n. @thisisdano not yet, I need to look at it again. Do you want this to go into the release or can/should it wait?. @thisisdano were the fixes made? I haven't re-reviewed this yet.. Started a scratchpad as well to start thinking about this:  https://docs.google.com/document/d/1_dMUDbk0soPjPeqUaY1Xvl1CyYd0bACgGkMeBjlx0OE/edit#. Yep, they can be increased: the designs show 3rem top and 4rem bottom padding.. Is this meant for the docs repo?. Using the release draft instead of this issue.. Moved to the wiki, closing.. Also, added a step to publicize the release (i.e. posting it in the #uswds-public slack channel).. \ud83d\udd12 Working document - may move to markdown when complete.. We met and agreed to go with an approach that's clear, readable, and nimble to work with. \nA brief summary\nColors\nText color: .usa-blue\nBackground color: .usa-bg-blue\n*TBD the amount of colors we'll release.\nSpace\nAn abbreviated style similar to tachyons for margin and padding: .mt0\nTypography\n.usa-h1  or .usa-sans-s6 \nWe explored a few options, but have not come to a conclusion yet. Something like .usa-h1 is recognizable and familiar.  .usa-sans-s6 removes heading terminology from the size and provides more than 6 heading sizes. We may have to try out a few things as we start to build this out and see what works best for our users.\n. @btn0s sure, here are links to join the two slacks: https://chat.18f.gov/ and http://slack.design.systems. We can flesh this out more when we move it into our current sprint backlog; it's on our roadmap for the year.. Adding more detail here, which may help provide context @btn0s:\nWe should be able to provide expected margins in all use cases: alone, with other grid and column elements, with usa-section classes, etc...\n\nProper relative heading margins\nProper paragraph text margins\n\nProblems with the current method:\n fails with multiple grids and width classes stacked\n too many classes used to target width classes\nFrom @hursey013 (Slack):\n\nhey all :wave: i have a question regarding the grid, and whether i\u2019m using it correctly :grimacing: if i understand it right, when you use the grid it removes the top and bottom margin of the first and last elements within each grid box, which sort of feels unexpected to me. if i would like to add some space between the rows of a basic 2x2 grid like the one above, is the idea to create your own custom style to apply margin to the bottom of each grid box (or row), or override the WDS styles to add back in the top margin on the headings and bottom margin on the paragraphs?\n\nImage from Brian of the spacing failing:\n\n. One idea I'm experimenting with:\n going one-directional in p text margins (to help with multiple grid items stacked)\n zeroing in top margins of elements in the first grid item column items and leaving the rest with their natural spacing\n* when using the section classes (usa-section) which provide top and bottom spacing, remove top and bottom margins of first and last elements respectively, so that the section's spacing has the proper spacing. . See how the GOV.UK uses contextual adjustments to add top padding to headings that appear directly after paragraphs.\nhttps://github.com/alphagov/govuk-frontend/blob/master/src/core/_typography.scss#L157\nAnd how they add bottom margin on paragraph text:\nhttps://github.com/alphagov/govuk-frontend/blob/master/src/core/_typography.scss#L101. >Are these all styles that would apply only to optionally-prose-scoped elements?\nUp to us, right now they are not separate from the scoping part part of the code. We kind of left it alone until we had a better solution. Should it be?\n\nI like the gov.uk sibling-selector approach.\n\nThe one issue I see so far with the GOV.UK model is in an instance like this, where you have headings in grid items and rows:\n\nIn this case the heading 3 would not have heading top margins applied, is that what we want?. There probably is some utility in a class to remove the top margin of the first item and bottom margin of the last, right now, .usa-section does this, could be called .clip-margins. Fixed in #2696.. I think the this is how we've referred to it...\nWhen referring to it as a project, it's singular: \"The U.S. Web Design Standards is a project,\" \"The U.S. Web Design Standards is a design system\" \nWhen it's abbreviated to \"the Standards\" meaning a set of standards people should follow, it's plural. \n\"The Standards are something to follow.\". We've primarily referred to them as the \"U.S. Web Design Standards\" (full name) and \"the Standards\" (abbreviated), but not the \"Web Design Standards.\" However, folks may end up calling it many things! I don't think it's the time to revisit re-naming yet, but maybe during the roadmapping workshop.. This is done, correct?. Hi @adborden, thanks for opening this issue. I'm not seeing quite the same thing at 333px. It looks like it's working at 320px or small iPhone sizes.\n\nIt's when I go below 320px it start to wrap like that. What devices are you trying to support?. Thanks for finding this issue @line47! I'm thinking .usa-nav-close + * { clear: both; } could be a more robust solution so this clears anything immediately after the close button.. Doc updated with instructions.. Thanks for catching this, @joshbruce! Seems like the unused class can be safely removed.\nFeel free to open a new issue to describe the issues you mention using forms, so we can keep this associated with the bug.. I'm not seeing a class usa-form-control on the site. Could you give more details about this issue?. Ah thanks for clarifying, that's correct: elements/ is used for HTML elements (or atomic elements) and components/ is more complex components or the composition of elements. Adding a new folder form-controls/ at the root level likely doesn't follow what we'll do in the future though. It's useful to know if it trips people up though.. Thanks @joshbruce, I think consolidating forms may be the way to go, especially bc we've recently refactored forms to make it more elemental. Let's move convo to #1433 since that deals with that issue.. Great, looks like header already has 1.5rem / 15px of bottom margins between the search button and mobile nav so we're covered there. Lmk if we should change these to 1.6rem / 16px or use the existing spacing amount.\n\n\n. Spacing changes made in a9d7061.. Ah ok, I had thought you wanted 16px between all sections. I changed it from 30px, but will change it right back.. @thisisdano reverted that change in 066b8aa so it should be more spacious like it was before. Lmk if that works.. Actually hold that thought, looks like I may need to add in addition margins to the secondary nav for when there's no search form.. @thisisdano to clarify, 30px or 15px/16px between the primary nav + search + secondary links on the extended header:\n15px\n\n30px\n\n. @thisisdano changes made in d40db45, let me know if this works. Using with the 1.5rem for consistency, and can change this out if/when we do a larger spacing scale change.. Tests fixed in 052125a, will merge.. Hi @herrjosua, thanks for reaching out. I believe that is coming from the Bourbon library which is included in the project. See: http://bourbon.io/docs/#font-stacks Is that library being included in your implementation?. Sounds good, closing for now, but feel free to re-open if that doesn't solve your problem. Good luck!. We completed this at Clarity Conf. Related #2233.. Can this be closed?. I synthesized our vision work and statement \ud83d\udd12 here.. Thanks @herrjosua, working on a fix in #2252.. Duplicate of #2171. Will move this text there.. These are still part of the codebase here: https://github.com/18F/web-design-standards/blob/develop/src/stylesheets/elements/_inputs.scss#L89-#L92.\nWe discussed that we did not plan to deprecate these in terms of removing them from the codebase, we will just not be advocating them as a \"best practice.\" Teams may decide to use the required field if it makes sense for their use cases.. @amilie Correct! I don't believe we have plans to remove it, so that is no longer accurate.. @bendygirl thanks for reaching out. Yes, #2300 is where we're tracking work needed to be done for the name change. It's a top priority for the team and we're working on the announcement this sprint and will be able to share it with you soon. Thanks for your patience.. @bendygirl cross-referenced now and we'll share the announcement via the email as well, thanks!. Hello everyone,\nAfter listening to a lot of thoughtful feedback and discussion from a wide range of voices in the government web community, we\u2019ve decided to change our name to the U.S. Web Design System. (You don\u2019t need to update any code for this, it\u2019s simply an announcement.)\nHere\u2019s why we\u2019re making the change: \n\nWe wanted to clarify our project: they\u2019re not mandatory standards, but a system of tools and guidelines that anyone can choose to build better government websites and services. \nStandards also suggests something fixed and rigid, which is the opposite of our goal to create a design system that\u2019s flexible, modular, and always learning from its users and modern best practices. \nIt\u2019s a system whose various parts (e.g. visual design, accessible color combinations, interactive components, page templates, etc...) can be used bit by bit, all together, or extended into something new. \nA Design System is the real-world name for what we do and what we are. All kinds of organizations\u2014from governments to large corporations\u2014use design systems to help guide the design and development of their digital products. So we'll be consistent with real-world usage as well as gov-specific terminology.\nConveniently, we don\u2019t need to change the acronym (USWDS).\n\nMoving forward as the U.S. Web Design System is the right thing to do and will strengthen the system going forward. Our mission to provide research-backed design patterns for building accessible, responsive, and consistent digital products for the federal government is as important as ever, and we're focused on improving what we do and the benefits we provide to those who use what we make.\nWe\u2019d like to thank everyone for contributing their time and expertise to the discussion and your patience as we worked through this issue. We\u2019ll begin rolling this out in the next few weeks (see the task list). We look forward to continuing to work together in the coming year. \nThank you,\nUSWDS Core Team\nDan O. Williams, Maya Benari, John Donmoyer, Andrea Sigritz\nP.S. If you\u2019d like to see what we\u2019re working on next, check out our 2018 Product roadmap.. Closing this as we begin implementation in https://github.com/18F/web-design-standards/issues/2300#issuecomment-358077868. Thank you!. TODO:\n- Document what elements (files) have sizing styles applied to them. \n  - Take a look at normalize and font sizes.\n- Think about applying mixins to these elements to either apply to base elements or add'l classes\n- Question: should default be applied to base elements or not?\n- Do any other systems do this?. Here's a proposal that gets to this:\n\nBy default, typography styles are not applied to directly to elements with $uswds-global-styles: false !default;\nIf users would like typography styles applied to base typography elements, they'll add $uswds-global-styles: true\nTo use the typography styles, nest the elements inside a .usa-content element (could also be called .prose-* like Mapbox's Assembly, but we already use .usa-content)\nUse the styles as classes with utility classes e.g. .font-body-md, .font-heading-lg\n\nProposal 1: Style scoping\n```\n$uswds-global-styles: false !default; // Sets the default typography base styles to false, will be wrapped in usa-content\n@mixin uswds-global-styles($uswds-global-styles) {\n@if $uswds-global-styles == false {\n    // Opening .usa-content tag\n    .usa-content {\n  } \n      // Text styles go here\n      p {\n        @include paragraph-text;\n      }  \n  h1 {\n    @include h1;\n  }\n\n  // Additional text styles go here (e.g. headings, lists, etc...)\n\n@if $uswds-global-styles == false {\n    } // Closing tag\n  }\n}\n@include uswds-global-styles;\n// Class-based paragraph text styling. \n// This is just an example using the same mixins, as we have utilities here: https://v2.designsystem.digital.gov/utilities/font-size-and-family/\n.usa-p {\n  @include paragraph-text;\n}\n.usa-h1 {\n  @include h1;\n}\n```\nProposal 2: No style scoping, GOV.UK\n```\n@import \"links\";\n@import \"typography\";\n@mixin uswds-global-styles {\n  a {\n    @extend %uswds-link;\n  }\np {\n    @extend %uswds-body-m;\n  }\n// More styles...\n}\n@include uswds-exports(\"uswds/core/global-styles\") {\n@if $uswds-global-styles == true {\n    @include uswds-global-styles;\n  }\n}\n```\nLink to the code of GOV.UK:\nMixin\nhttps://github.com/alphagov/govuk-frontend/blob/master/src/core/_global-styles.scss\nVariable (switch)\nhttps://github.com/alphagov/govuk-frontend/blob/master/src/settings/_global-styles.scss (edited). Got some feedback on what GOV.UK does for their design system:\n\nI\u2019d say this has been one of the most interesting challenges of the GOV.UK Design System. We wanted complete separation, if a user imported our frontend package into their app it wouldn\u2019t leak out, and their code wouldn\u2019t leak in.\nAlthough this has a huge amount of benefit for the ecosystem as a whole, in research many of our users found needing to add classes to basic HTML elements quite frustrating.\nInitially we tried a scoped container where we would style HTML inside a container with a particular class, this was really good for type and some basic components but ended up with some specificity wars with some of our components.\nWhere we are now is that for (currently only) <p> and <a> tags we have a global switch $govuk-global-styles: false !default;. This lets the user decide if they want us to style their default HTML or not.. It looks like we'll go with some variation on \"Proposal 1\" with three options: \n- Scoped styles\n- Global element styles\n- Only class-based styles, no global element styles and no scoped styles. Thanks everybody for your thoughtful feedback. This is resolved in #2599 \ud83c\udf89 \n\nFeel free to give it a spin and let us know how it's working for you.. Hi @manavm1990, thanks for checking on this, however this is not a typo. It's for the blue background on each side if the mega menu. 100% corresponds the page width (980px) and this ensures even very large screens will have the blue background extending on each edge. We'll leave this in for now, but if you find a better solution feel free to suggest.. Here's what it would look like zoomed out with 100% (980px), it cuts off at a certain point:\n\nIt affords us even larger screens with 1000%. Again, if you think of a more efficient way of doing this let us know.. @thisisdano is this what the roadmap and post were? https://designsystem.digital.gov/whats-new/updates/2017/12/20/2017-where-weve-been-where-were-going/. Thanks @scottkellum. We have a section for browser support on the site's \"For developers\" page here https://standards.usa.gov/getting-started/developers/#browser-support, but could see how adding it to the contributing file would be useful too. Also, the wording is a little confusing around IE support.. @thisisdano @donjo is the browser support text still accurate?\n\nWe\u2019ve designed the Standards to support older and newer browsers through progressive enhancement. The Standards will officially support any browser above 2% usage as defined on analytics.usa.gov. This currently means the Standards supports the newest versions of Chrome, Firefox, Safari and Internet Explorer 11 and up. Due to what browsers the Standards originally supported, the Standards will continue to support Internet Explorer 9 and up until the next major release, 2.0.\n\nIf so, should we rewrite this to lead with \"the Standards supports [...] Internet Explorer 9 and above and will support Internet Explorer 11 and above in the next major release, 2.0.\" to be more direct about the current support?. That's clearer to me, the only thing that was confusing at first was 1.x.x, I wonder if we can say 1.0 or leave it out? @thisisdano how is this looking to you?. Thanks for the suggestions all, moving this and ongoing edits into this PR https://github.com/18F/web-design-standards-docs/pull/459.. @scottkellum this is fixed, thanks again \ud83d\udc4d Looking forward to your (possible) PRs. If you have any more questions around contributing, let us know; we may be revisiting spacing and type scales as well.. @scottkellum sounds good, thanks! Also, a team worked on data viz for the Census for a bit: https://federalist-proxy.app.cloud.gov/site/18f/uswds-data/ https://github.com/18F/uswds-data \nWe have this issue that may be relevant: https://github.com/18F/web-design-standards/issues/18 (closed now, but should it be opened @thisisdano?) . Hi @joshbruce, yes jQuery was removed some time ago, which makes this strange. Are you able to find where jQuery was located that gave this warning?. Not sure, @donjo @toolness do you know?. Agree these look pretty. Do we have pain points of the current system (e.g. too restrictive) from user research? Perhaps some visual designers could provide input as well.\n\nsensible defaults\n\nWhat would they look like? Is it just the existing palette? The new palette can look daunting so a default palette would ease the overwhelm of not knowing what colors to choose or where to start.\n\n\nNumbered level (brightness) variants within the hue\nA color level scale that ranges from 0 (#fff white) to 100 (#000 black) in increments of 10\n\n\nDifference in color is not just the lightness bc saturation plays a role in the perception of color difference as well. What's being changed to create the difference in color at each step? Is it using the lerp() function described here? Each color has a different curve of lightness and saturation.\n\nColor names: blue and red are very clear and recognizable (and short), ultramarine and cerulean are less recognizable and more obscure (and harder to recall), we should stay on the simple and obvious end of the naming spectrum (no pun intended) as much as possible. \n+1 on color blindness, greens and reds are problematic for folks with red/green color blindness (especially the lighter shades). Thanks for your reply. Another naming system that's simple and semantic we may want to explore is the Vox color naming system. For example, it uses $color-primary and $color-accent, which could help with theming.\n\n. x-posting email feedback (@runemadsen) with permission:\n\nIf you're providing a color system to a large user base that may or may not know about color accessibility, I believe that the number one goal of the system is to lower the risk of bad color combinations. When you're expanding your palette so much, you have a much higher risk of this happening. You could write some really great documentation to explain which combinations would work, but experience tells me that it won't matter much: Designers/Developers will look at your color boxes and just pick the ones they like. One way to beat this is to build constraints into your system, just like you have with your existing one: Splitting up colors in \"background\" and \"text\" makes it much less likely for a user to mess up. I would agree with some of the comments in the discussion that there's a middle ground here. My first step would be to remove colors that look identical for people with impaired color vision. You can remove 90% of all problems by limiting your red-green color palette (choosing one or choosing both but in different lightnesses). From then on I would also cut some of the darker and lighter colors that blend into each other, or redistribute the color scales with less colors and thus more spacing.\nI think this is a great start, and you don't need to over-simplify. But it might be a bit too general right now.. I had the chance to try this palette out on a style tile builder I'm working on. The idea behind it is to choose a single color and output all your variants based off of this numeric system (e.g. 60, 70, 80 of all colors).\n\nSome initial observations:\n- It was very easy to swap out different colors from recall (red, orange, yellow, etc...) and I enjoyed doing that\n- I tried to use \"purple\" and expected it to be there but it wasn't in the available choices \n- I had a hard time remembering which colors had warm and cool variants\n- Some of the ranges were a bit drab in my builder, so would like to find a consistent way to activate the vivid variants (it's a bit hard bc there's not a consistent range of vivid variants (i.e. no 60v, 70v, 80v across all colors) \n- I think I found myself wanting a good default for each color that could be the basis of the custom color palette\nI did not have this sheet above as a reference so perhaps it could have helped.. Thanks for opening this and letting us know.. @patrickww71 I realized this was already documented here: #2031, closing this as a duplicate. Thanks again!. Not sure what's causing this, but will just add that it seems that the container class or .usa-grid is working as the content centered in a 980px container, while the columns (e.g. .usa-width-one-half) are not. Those classes are both in the grid.scss file.. Hi, thanks for opening this issue. We'll review this with our team and see how it fits on our roadmap. Stay tuned! \nRelated to #992. ## Action items\n- [x] Create a utilities/ folder for utilities which are imported after everything\n- [x] Move utility mixins out of core/utilities.scss and into their own files inside a mixins/ folder (alternatively could be called tools/ folder).\nFuture: consider breaking variables into their own files in a variables/ or settings/ folder if a single file becomes hard to use.\n(Breaking up this file makes it harder to plugin to something like CodePen, so consider how what the user experience of this would look like. Already could be an issue with breaking up mixins but seems worth it bc the it's hard to see what's in that file.). I remember this worked in those browsers before, so wonder what's going on. Also wonder if it's related to this GSA logo being smooshed or something separate: https://github.com/18F/web-design-standards-docs/issues/331. I may propose that the utilities we add do not exceed the total size of the Tachyons system, or 14kb, which would bring the total CSS size to 88kb.. Ready for review?. We have a good sense of which ones to add first, closing this as we begin implementation (#2289).. This is only on components.standards.usa.gov, works locally for me too.. Yeah same, goes away when I disable aXe extension.. This seems to be fixed, https://github.com/frctl/fractal/issues/397.. Thanks for finding a fix \ud83c\udf89 \nFixed in #2275. (FYI should be doing a release Monday).. @jgacuca567 Thanks for opening this. Addressed the issues in #2277.. >for how long has this error been raised? Was there a particular changeset that triggered it?\nIt happened recently, after releasing v1.4.4 which had an upgrade to CircleCI 2.0 and changes to our package-lock.json file. I'm not aware of a change to a different version of aXe or a different version of fractal during this change.. @toolness the previous issue seems fixed, but we're getting a different aXe failure now. https://circleci.com/gh/18F/web-design-standards/1963:\n```\n  94 passing (10s)\n  2 failing\n1) fractal component \"before all\" hook: setup ChromeFractalTester:\n     Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves.\n2) fractal component \"after all\" hook: teardown ChromeFractalTester:\n     TypeError: Cannot read property 'kill' of null\n      at ChromeFractalTester.teardown (spec/chrome-fractal-tester.js:105:23)\n```\n. Yay! What do you think is a good timeout amount to set it to?. Cool, feel free to open a PR or let me know which file I should change to do that.. I tested breaking an accessibility issue and CircleCI is still showing it as an error which means it's working: https://circleci.com/gh/uswds/uswds/2921. We started with 2 SCSS files in the root and here it's grown to 6. I'm finding this a lot to parse and hard to see which files depend on each other. I think a flat ITCSS structure in a single file could be a lot more linear, simpler, and easier to see. Sticking with a structure that's known and used in the industry could also be easier to maintain. Would this work using the ITCSS structure?. Hi @francisrupert, thanks so much for your feedback. Part of why the USWDS didn't launch with color helper classes was for the very reasons you mentioned: we didn't want to promote bad practices within the code. After a couple of years, it's become clearer that folks would find this helpful (especially for prototyping), and thanks to the influence of utility systems like Tachyons. We hope to keep this utility set limited in scope (#2272), starting with color, space, and typography -- and extend it to a few layout items later on. \nThat's a good point about responsive flexibility. We haven't released responsive typography yet but it's something we're thinking about and have some designs created. We've mostly heard the responsive requests for a grid system, and that would be tackled later on. \nThe use of utility classes would have to be taken on by individuals using the system - some folks may prefer to use them, some may choose not to, others may use them for only prototyping, etc. We're hoping each team will make the decision that works best for them. We can likely provide some documentation of best practices though. If you have more thoughts about this, keep them coming.. @s2t2 thanks for the note. We'll be including float utilities as described here: #2272. You can also get a sneak peek here: #2316, but it may be more useful once we build out the documentation. We'll keep you posted!. Needs stuff at the bottom of the utes page: advanced docs. Now that advanced settings are in https://github.com/uswds/uswds-site/pull/590, this is done (!) . :lock: Naming decisions doc is complete.. - [x] Decide what to change it to: U.S. Web Design System\n  - [x] Shorthand: the Design System\n  - [x] Change name, shorthand, and email address throughout main repo, docs site, project wiki, twitter #2320, https://github.com/uswds/uswds-site/pull/487 -- @maya \n- [x] Write an announcement to explain the change as relevant to the work we\u2019re doing and what we\u2019re providing -- @maya\n  - [x] Review with writing lab https://github.com/18F/writing-lab/issues/315\n  - [x] Comms: post announcement to content manager's listserv, #2240, #1518, USWDS microblog\n- [x] Establish our own GitHub org for uswds -- @donjo\n  - [x] Reach out to #github-admins @gbinal \n  - [x] Move repo to new org (and related repos)\n  - [x] Rename repo to uswds\n  - [x] Update devops services #2317 -- @donjo\n- [x] Pick a URL: designsystem.digital.gov -- @thisisdano cc @jeremyzilar \n  - [x] Register URL\n  - [x] Set up redirects from old URL (using USA.gov's existing service) -- @smileytech\n- [x] SM comms around new URL, name, addresses, and GH org with roadmap and principles\n  - [x] Post update to #uswds-public, #general-talk, Content Manager's listserv (any other channels?)\n  - [x] Change name on #uswds-public Slack channel w/ post\n  - [x] Change Twitter display name\n  - [x] Change our team email to uswds@gsa.gov -- @thisisdano\n. @jeremyzilar Currently, playbook.cio.gov/designstandards redirects to standards.usa.gov. It may have been done by OMB CIO, but not positive. Has enough time passed from using that old URL that we maybe don't need it anymore?. Yes, that would make sense.. This is done. Thanks to everybody who helped get this across the line.. Finished the call, this can be closed.. @AndreaSigz were there any updates on this work / will it still continue?. @AndreaSigz did you plan to open the pull request for these or to share the doc/content for us to do?. @AndreaSigz sure! that would be great to share it here \ud83d\udc4d May have missed it when you first shared it.. @AndreaSigz thanks! should these two be included in the list as well? \n\n[x] DDS interview #2076\n[x] NSF interview #2074\n. @AndreaSigz are there any updates on the status of the posts above? Thanks!\n\nLooks like these three were left:\n- Stopbullying\u2014Waiting on OK from HHS\n- Innovation.gov\u2014Waiting on OK from Amy - Followed up with Amy to edit in July\n- ~~Drupal 8 theme\u2014Waiting on approval from DOJ~~ Not approved. Could you cc the USWDS team on the emails and we can take it from there? I didn't find any drafts for Stopbullying in the interviews folder. Could you share the link to it with us? Thanks. Closing since we\u2019ve reached out to the remaining two interviewees (the third was not approved), and will re-open/update this if we hear back.. Hi @jamesatheyDDS, thanks for opening this issue. Yes, it looks like that's a bug with the date of birth field and would need a new approach for the error input. We'll want to make sure the errored field gets a red border and we'll have to decide if it needs the vertical line.\nNote to team: it should look like this: https://govuk-elements.herokuapp.com/form-elements/example-date/\n\n. Hi @jamesatheyDDS, on another look at this, I found that you can get the error state to work. You need to apply usa-input-error on a containing element (e.g. div) around the whole fieldset. Then add usa-input-inline-error to the input. However, I don't love the way the classes are named when applying the error state to this so hope to update it in version 2.0 in #2661. \nhtml\n<form class=\"usa-input-error\">\n  <fieldset>\n    <legend>Date of birth</legend>\n    <span class=\"usa-form-hint\" id=\"dobHint\">For example: 04 28 1986</span>\n    <div class=\"usa-date-of-birth\">\n      <div class=\"usa-form-group usa-form-group-month\">\n        <label for=\"date_of_birth_1\">Month</label>\n        <input class=\"usa-input-inline usa-input-inline-error\" aria-describedby=\"dobHint\" id=\"date_of_birth_1\" name=\"date_of_birth_1\" type=\"number\" min=\"1\" max=\"12\" value=\"\">\n      </div>\n      <div class=\"usa-form-group usa-form-group-day\">\n        <label for=\"date_of_birth_2\">Day</label>\n        <input class=\"usa-input-inline\" aria-describedby=\"dobHint\" id=\"date_of_birth_2\" name=\"date_of_birth_2\" type=\"number\" min=\"1\" max=\"31\" value=\"\">\n      </div>\n      <div class=\"usa-form-group usa-form-group-year\">\n        <label for=\"date_of_birth_3\">Year</label>\n        <input class=\"usa-input-inline\" aria-describedby=\"dobHint\" id=\"date_of_birth_3\" name=\"date_of_birth_3\" type=\"number\" min=\"1900\" max=\"2000\" value=\"\">\n      </div>\n    </div>\n  </fieldset>\n</form>. Hi @BalajiJBcs, thanks for opening this. I checked with another developer, @toolness, who said this PR might make sense if there were a recommended/required IDE for contributors to use, but there isn't. As a result, we'd recommend you put those entries in a global gitignore instead: https://help.github.com/articles/ignoring-files/#create-a-global-gitignore \nClosing for now, let us know if you find anything else.. Hi @joshbruce, unfortunately, I don't think I have a clear answer for you regarding what went into choosing the linter rules as the person who set this up is no longer at 18F. However, thanks to this, I realized we're not using the Airbnb linter, which we should be and opened an issue for it here: #2310. It's probably a good idea to use a linter, the specifics are likely less important than the consistency of everyone following it, so feel free to use whatever makes the most sense to the team involved. Good luck!. Hi, thanks for opening this issue. A 404 page would be useful to include, but this would be better included in the documentation site repo: https://github.com/18F/web-design-standards-docs Unless you mean the system should include a 404 template?. This might be a good PR to try out Percy with (i.e. removing classes and making sure no visual changes occur).. Hi, thanks for opening this issue. We'll review this with our team and see how it fits on our roadmap. Stay tuned!. Will keep track of publishing in #2303.. Perhaps a more understandable metaphor than \"units and settings\" would be \"tokens and theme.\" I was wondering if \"units and settings\" would be more abstract for folks to comprehend. \nSalesforce's Lightning Design System defines tokens as:\n\nDesign tokens are the visual design atoms of the design system \u2014 specifically, they are named entities that store visual design attributes. We use them in place of hard-coded values (such as hex values for color or pixel values for spacing) in order to maintain a scalable and consistent visual system for UI development.\n\nThen themes use a subset of tokens (or not) for product-specific visual styles.. Hi, thanks for opening this issue. We'll review this with our team and see how it fits on our roadmap. Stay tuned!. @thisisdano caps should be used if Design System is a proper noun, but lowercase if it's more of a general thing.. Oh, I wasn't saying that it is a proper noun. It could be a proper noun in some cases and not in other cases. We have to make the call.. @thisisdano is this also good for approval?. Thanks for bringing our attention to this @arvalarva. Yes, it seems like moving focus to the top of the page would be the expected and most accessible user experience.. Fixed in #2403. . @sawyerh this is great stuff. It may make sense to x-post this in #1403 since that issue is closely related.. This is looking good! We've heard charts and graphs are something many agencies would need (see #18). We're still figuring out what our component submission workflow will look like and will let you know when we have more info. Appreciate the simplicity and focus on progressive enhancement here.. Thanks so much @scottkellum! We'll probably be able to start reviewing this (in some way) in the next sprint (or the one following that), as this sprint we're focused on building out utilities and we've tentatively planned the next sprint to be a technical debt sprint. The process may take some time as you're our first major component submission, so we appreciate the patience.\nBreaking up the review for the team, which could happen async:\n\n[x] UX -- @donjo (requested changes)\n[ ] Visual design -- @thisisdano \n[ ] Front end\n[x] HTML, a11y -- @maya (requested changes)\n[ ] CSS\n[ ] JS -- [TBD engineer]\n\n\nFor this to go on the main website, we'll need documentation.\nOpen question:\nIs this included in the main package, behind an experimental flag that's not included in the package unless you opt-in, or through CodePen?. Hey @scottkellum, could you fix the linting errors in CircleCI? You can also run npm test in your code.. @scottkellum I thought when I previously tested the rendered SVG it read it like the table, in that I was able to progress through each value one by one, but now it seems to read it all smushed together. Was that intentional?\n\n\nFor the title, it seems like it should render as a <title> in the SVG and a <caption> in the table.. For the font size, could we just use the $base-font-size (or smaller)?. Oh, nevermind about my comment on the font-size. Looks like it's responsive to the size of the chart \ud83d\udc4d. . Thanks @scottkellum! \nI've talked with a few people about this and heard the best practice is to make the SVG hidden for screen readers and include the table. The table would be visually hidden but accessible to screen readers and you could have the option to show it visibly too along with the chart.\nKarl Groves mentioned including tables allows you to identify table headers and explore the table using typical table reading commands.\nSome background from my colleague @toolness: \n\nas far as i can tell, [the best practice] is to provide a table as additional content, so that the bar chart is basically just an image (though its general shape could be provided as alt text) but the user can deep-dive into the data of the table\nheydon pickering gave a talk where he actually argues that showing the table only to certain users is actually non-inclusive, b/c even some sighted users (like himself) prefer tables to bar charts\ni find that SVGs are very unpredictable with screen readers--some readers essentially treat them opaquely like image elements, while others actually let you navigate through individual elements of the SVG\n\n. I see what you're saying and am checking if that's an issue. A little more feedback I've gotten:\nSomeone had mentioned using a toggle to show the table instead of a chart. For someone using a magnifier, the chart may be harder to read than the table. And he half-expected the link to data sources to show the table. \nWhether there's a toggle to replace the chart with the table or just show both may depend on the audience and am not sure which approach is the best way.. I've shared this with our Section 508 listserv and am getting some helpful responses (will keep them coming as I get them):\n\nMaya,\nI know it\u2019s not quite the question, but I\u2019m sighted and often prefer a table to a graph. Also, if I really want to get into the data, if there\u2019s a table, I can copy it into Excel and sort, filter, etc.\nSo, that\u2019s the general usability argument for keeping the table for everyone. As for accessibility, people with low vision or cognitive disabilities might be negatively affected by not having access to the table.\nPeople with low vision might also want to copy and paste into Excel to have more control over what they see. Some people with low vision have a very small field of vision, so looking at the middle of a bar chart could leave them without the ability to see the X or Y axis. A table might be easier to follow, even if the header row and first column are out of the field of vision. I don\u2019t know, but it\u2019s probably worth investigating. Also, some people with low vision have to zoom to 200% or more\u2014SVG is a great start, but that can still put the X and Y axes out of view.\nI also imagine there must be cognitive disabilities for which a table is preferable. I know for myself that the likelihood that I\u2019d prefer a table goes up with the noise or other distractions around me, so perhaps people with attention-related disorders?\nThey\u2019re just thoughts, really, but my immediate gut reaction to your idea was \u201cNo! Don\u2019t take my table away!\u201d Charts are great for most of us for a quick look, but as soon as you start really thinking about the data, tables are just way easier to use.\nBethany Letalien\nSection 508 Coordinator\nU.S. Office of Personnel Management\nOffice of the Chief Information Officer\n\nMaya,\nI prefer your last two display options: (1) show the table below the graph or (2) add a toggle to show the table instead of the graph.\nThe reasons:\n\nYou do not want actionable hidden content (e.g. the first \u201cdata sources\u201d link) to be accessible via the keyboard, because keyboard navigation is not always paired with using a screen reader to hear the hidden content.  Users may access content using only the keyboard for a variety of reasons, and a visual indication of where the keyboard focus is currently located is important.\nPeople absorb information in different ways. If the data is already prepared in both graph and table format, why not allow all users to access both?\nMaintenance\u2026 Hidden content often gets overlooked when updates are made.\n\nSide note:  I\u2019m using IE11. When I open your example link, the bar chart is empty and I do not see a table. If I view in Compatibility Mode, then the chart disappears and I only see the table.  It could be my locked down environment, or there could be some browser troubleshooting needed on your end.  Good luck!\nBest wishes,\n-Dawn\nDawn Wyse Hurto\nEnterprise Business Solutions  |  Office of the Chief Information Officer  |  U.S. Department of the Treasury\nDHS Section 508 Trusted Tester - Certification Number 300297. Hey @scottkellum, just wanted to check on this to see if you were still planning to work on the feedback above? If not our team may adopt this work to implement but may also close it until we have the bandwidth to work on it.. Ah OK, thanks so much for the work so far! Closing this PR for now until we have the bandwidth to pick it up and continue building on this great work.. Agree, it could have a different class name. How about usa-footer-meta (or first, top, etc...)?\nThe other two sections below it are usa-footer-primary-section and usa-footer-secondary_section which is inconsistent with the dividers preceding section and should be fixed too (e.g. usa-footer-section-primary, usa-footer-section-secondary). The modifiers above could be added after usa-footer-section-*.\nChanging the class names would be a breaking change, so we could merge this and fix the class name issue on our release-2.0.0-alpha branch.. Just realized this is a duplicate of #1505. . I'd check with @thisisdano with how he wants colors displayed (assuming we'll eventually pull this into the docs site). If we moved the text off of the color, then the errors won't flag. Or if we alternate to black text on lighter backgrounds, that would pass too. Want to go through this a bit as we know folks will be looking towards this for accessibility guidance as well.\n\nvia #2255.. Hi @bruffridge, thanks for opening this issue. Our base font color is defined as $color-base: #212121 in https://designsystem.digital.gov/components/colors/#palette so I'm also surprised it seems to be missing from the code base / not implemented. Thanks for pointing this out and we'll try to get this fixed.. Thank you @line47, @jseppi, @wslack! . Hi @joshbruce, thanks for pointing this out. Unfortunately, GSA IT has not given us approval to use High Sierra so we're unable to test this out just yet. . Since we disable this added browser styling already, I'd assume we'd do the same.. Duplicate of #1972.. @alex-page Thanks! The technique that we use is similar to a scoped version of that but it still causes some issues which is the reason for this PR. I've also heard from Heydon Pickering previously that even he doesn't recommend that technique on existing projects, it's much easier to add from the beginning. \nP.S. Great job on GOLD. Looks SOLID! \ud83e\udd47. @melwoodard thanks for your interest in this work! We're excited that this is something you're looking for. This work would likely make its way into our next major release (2.0) which is around a couple of months away. If you are able to use this work in your project and let us know how it's working for you, that would be great feedback for us and go a long way to making this update stronger and validated.. No updates yet, will probably work on this after #2241. If you'd like to get a better understanding of the issue, check out #2215 and GOV.UK's solution: https://github.com/uswds/uswds/issues/2215#issuecomment-405679277.. Closing this PR in favor of #2696.\n/cc @alex-page @melwoodard let us know what you think!. Should also note that the mobile behavior is fine (aside from an unrelated issue: #1857), the issue is just in desktop.. >Move to a standalone component? \n@el-mapache yeah, if we offer a modal component (#911), we'd use a lot of the same code, right?. Looked at pre and post-utilities build times to find the bottlenecks:\n\n\ud83d\udd12 Source . Re-opening as this work is continuing. Related: https://github.com/uswds/uswds-site/issues/335.\nWe're exploring:\n- Using npm ci to reduce installing node dependencies by 100 seconds.\n- Considering if we need to prep for a release on every build (creating the zip files and compressing assets adds time to the build)\ncc @hursey013 see @donjo's note above for additional things to look at. . Closing this via: #2407. \nWith the help of caching and removing unneeded steps, CircleCI build times are now around 1 minute (down from 2-4 minutes) and Federalist build times are 3 minutes (down from 4-6 minutes). Good work @hursey013! \nUpdated chart\n\n. Getting this error when I try that:\nnpm ERR! missing script: prerelease. Fixed in 9609c4c.. hey @toolness, any insight on this?. Yes, to make the tests run faster.. Sounds good to me, we can close this.. The error is referring to this \"kitchen sink\" page and is saying \"you can't have a <main> inside a <main>\" since the main content of the page is wrapped in a <main>. Is that error accurate?. >Basically, the {% for item in accordion.items %} needs a single element inside of it that represents the entire accordion panel?\nHmm... I didn't see each panel wrapped in an element in Heydon's example: https://codepen.io/heydon/pen/QqzRvQ. >Thought this was going to use the summary + details.\nI would love to use that element (#1526). The problem is I don't really know the state of how accessible it is. Would we ultimately have to write custom JS to make it accessible? So rather than getting the accessibility of a native button like here, we'd have to write JS to do that? So you end up either having to write JS to open and close it and get a11y for free, or have it open + close natively and write JS to make it accessible. We'd also need to provide a polyfill as it looks like it's not supported in any IE.\nThanks for linking to that issue, as you can see in here, we're not using lists for it :) . Also, posting this to look at: https://scottaohara.github.io/accessible_accordions/. @jordangov I think <header> would have to be changed to a heading level  (e.g. h2) to be more accurate. I worry it could be misused with copy + paste, so we can add a comment in the code to alleviate this.. Here are the last TODO's for this component:\n\n[x] Change usa-accordion-content to use the hidden attribute instead of aria-hidden=\"true\" since we're using display: none #1513\n[x] Ensure all accordion content is displayed when JS is disabled\n\nIf anyone has the bandwidth to assist with those, it would be greatly appreciated.. It sounds familiar, but when I ran the accordions with JS turned off, they're all closed. . Merging into 2.0 branch... bombs away. @stphnwlkr I assume you're referring to the first issue about grids, not the second issue? \nI think it could be fixed by making better use of the neat outer-container mixin it includes (from Bourbon Neat):\n@mixin outer-container($local-max-width: $max-width) {\n  @include clearfix;\n  max-width: $local-max-width;\n  margin: {\n    left: auto;\n    right: auto;\n  }\n}\nHowever, I don't want to get too deep into it in case we end up upgrading Bourbon + Neat to the latest version or use a different grid system.. Removing the box-sizing CSS from base.scss fixes the first issue, but I don't know where the box-sizing code is coming from that gets added as the first thing in the CSS file and would like to know.. Closed via #2404.. Adding a preview link:\n\ud83d\ude0e Preview. Sounds good, happy to update the variable name. \nI'd prefer to keep sample directory tree code in the documentation in this PR https://github.com/uswds/uswds-site/pull/504 not in the variable file.\nAlso, $asset-path: '../uswds/' !default; won't work it needs to stay as $asset-path: '../' !default;. Updated variable name in 5d40a3e.. Hi @bruffridge, thanks for the issue. Seems like a duplicate of #1636. Would you mind re-posting it there to keep the conversation in one place? Thanks! . That's a very good call. We weren't aware of the limitations of CSS \"content\" with those screen readers. Thank you.. Here is the commit where the change from HTML content to CSS content occurred: https://github.com/uswds/uswds/commit/472832d195901bd04263d88005b935bfdabad11d. Elaborated on the deprecated text in 9d63021.. Is it bc npm run build is only needed in the deploy process?. We've completed everything we could. Closing this and moving the larger issues to their own issue #2400.. Hi there, what version of webkit browsers are you seeing that in?  I'm not able to replicate. This is what I see in latest Chrome and Safari:\n\nWe probably want to change the gray background in Chrome/Safari to blue like Firefox.\n. We don't have an example of it yet, unfortunately, see #2374, but what happens when you visit: https://federalist-proxy.app.cloud.gov/preview/uswds/uswds/develop/components/preview/text-input.html and change the text input type to range?. @mbucknell Glad you found the issue, but no need to open a PR: we use gulp to build our dist file and it does a few things in the background like running PostCSS which adds browser prefixes for us. This way it's much easier to maintain. Maybe you can add this to your build too? Closing this out, but let us know if anything else comes up.. That's a very good point. Added #2375 for this issue. Feel free to add any background info or possible solutions you may think of. Thank you.. @mbucknell since you are using node-sass would you be able to add it like this https://github.com/postcss/postcss#npm-run--cli?. @thisisdano the range slider is not dependent on 2.0. Any reason it has the 2.0 label and pipeline?. Yes, autoprefixer is a PostCSS plugin.. Offering SCSS already prefixed could be a nice option for folks who don't use autoprefixer.. Hi @kateray, thanks for opening this issue. I checked and that is bc \"e\" is considered valid (an exponent). See https://stackoverflow.com/questions/31706611/why-does-the-html-input-with-type-number-allow-the-letter-e-to-be-entered-in. Not able to replicate this on an iPhone 7.. Looks like a fix was described in the duplicate issue https://github.com/uswds/uswds/issues/277#issuecomment-351320681. You'll want to make sure you're looking at the component directly too. Closing.. @thisisdano the grid doesn't seem to be working anymore. Can this be fixed?. The default buttons are using the wrong colors. Can this be fixed?\n\n. Tables are incorrectly styled, issues with the border (too thick):\n\n. The warning info box seems to be much lighter than the original and much lighter compared to the other boxes.\nBefore \n\nAfter\n\n. Pretty minor, but noticed the success color on form text input was somewhat different than the previous. The older one seems darker with more blue and the newer one lighter with more yellow. Did we hear issues with the existing colors or was this the nearest we could find in the system? I may guess that it was done to make it easier to see side-by-side against the red, though the lightening of it is a little harder on its own.\nBefore \n\nAfter\n\n. Is this up to date with the develop branch? Want make sure it works with the new build steps and to see if it saves time?. We want to ensure we support the people using various AT. According to Deque University, it's the best practice to use both: https://dequeuniversity.com/assets/html/jquery-summit/html5/slides/landmarks.html#best_practice_use_both\nThat is also echoed here: https://html5forwebdesigners.com/today/#aria\n\nI had a conversation on the web accessibility Slack to get clarity.\nHowever, there's not a strong consensus.\nkivi [10:01 AM]\nIt's hard to argue with the W3C.\nghanek [10:04 AM]\nIdeally we wouldn't have a need to be redundant. Unfortunately, we can't ignore the current states of IE and Edge, either, and their development roadmaps & timelines. (edited)\nmayabenari [10:06 AM]\n@ghanek Thanks, I'm not familiar with their roadmaps, can you clarify what that implies wrt whether we need to be redundant or not?\nAlso, are there any issues with landmark support on older screen readers that would be improved by being redundant?\nJust Scott [10:48 AM]\n@mayabenari - just released an article about landmarks last weekend http://www.scottohara.me/blog/2018/03/03/landmarks.html (edited)\nkarlgroves [10:48 AM]\n\nAccording to Deque University, it\u2019s the best practice to use both\n\nThat\u2019s out of date IMO\nmayabenari [10:50 AM]\n@Just Scott that's really helpful, thanks... Is the tl;dr don't use both except for <footer role=\"contentinfo\"></footer> which has a known bug?\nJust Scott [10:54 AM]\nbasically yes.  Test your landmarks in the browsers / AT you support.  if you find something doesn't gel, double up if need be.  Otherwise you shouldn't need to duplicate inherent role with ARIA role\ndylanb [10:57 AM]\n@kivi very easy to argue with the W3C, just because you write a spec, it does not mean you can use what that spec describes. It takes action by a lot of people first.\ndylanb [11:00 AM]\n@mayabenari the reason that we recommend that is to allow for support in older ATs. What is the negative impact of this in browsers that support ARIA 1.1 ?\nNothing!\nWhat is the potential benefit to users with disabilities who do not have the money to upgrade their expensive AT?\nPotentially huge! (edited)\nThat is the definition of a \u201cbest practice\u201d IMO\nmayabenari [11:05 AM]\nAgree @dylanb that it's best to serve the people using your product and not just follow specs\nWeb Axe [12:23 PM]\nI also suggest be redundant; as Dylan says it doesn\u2019t hurt and supports older AT. (PS: The only one not needed is role=main but again, doesn\u2019t hurt if it helps with auto testing, consistency, etc)\nkarlgroves [12:28 PM]\n\nWhat is the potential benefit to users with disabilities who do not have the money to upgrade their expensive AT?\n\nThe more likely case for a lack of support has more to do with the user\u2019s browser than their \u201cexpensive AT\u201d\nAT support for these roles has existed for a long time. Whether or not the user\u2019s browser supports exposing the appropriate mapping via the accessibility API is the issue WRT landmark roles on HTML5 sectioning elements\njamesn [12:38 PM]\n@karlgroves agree - in my last test it was only IE which didn't support HTML5 sectioning elements. Because of the bug in Safari documented here: http://www.scottohara.me/blog/2018/03/03/landmarks.html#note-about-landmark-bugs, we should opt to keep the role in for the footer. If Safari fixes this, and it works properly across browsers, we can remove. In general, we should be good to remove unnecessary roles. Thanks all!. @mbucknell thanks for opening this issue. Is it the overflow: hidden; CSS that is making this change? Or the other CSS as well?\n. Here are a few different techniques I've seen...\nWebAIM\n.hidden \n{position:absolute;\nleft:-10000px;\ntop:auto;\nwidth:1px;\nheight:1px;\noverflow:hidden;}\nBourbon\n.element {\n  border: 0;\n  clip: rect(1px, 1px, 1px, 1px);\n  clip-path: inset(100%);\n  height: 1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  width: 1px;\n}\nBootstrap\n@mixin sr-only {\n  border: 0;\n  clip: rect(0, 0, 0, 0);\n  clip-path: inset(50%);\n  height: 1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  white-space: nowrap;\n  width: 1px;\n}. Do you have a link to your site we could take a look at? Can you provide screenshots so we have a better idea of what's going on?\nDo you have overflow-x: hidden; added to your body?. Looks like this was resolved!. Adding a preview link for easy viewing.. Superceded by https://github.com/uswds/uswds-site/issues/552. How GDS does it:\n\nI don\u2019t know if it\u2019s directly applicable but we ask designers / devs from other departments to bring in 2 or 3 pages of a service that they\u2019re currently working on and get them to recreate it in the research session.\nWe initially asked them to recreate a page that we\u2019d designed but we later assumed (correctly) that having the user bring in their own work to replicate we\u2019d learn more about the kind of things people were trying to do.\nTo avoid just copy / pasting code we asked them to send the screens ahead of time and they worked from print outs.\nIf there was something we wanted them to do that they hadn\u2019t naturally done in the session, we might ask them how they might swap a button for a different one or add more space between these two things\u2026\n\nAlso:\n\nWe started out asking participants to use a fork of our prototype kit which was already \u2018set up\u2019 to use our new frontend framework, so we could focus entirely on the \u2018day to day\u2019 implementation (copying markup, using stylesheets etc). In more recent rounds of research we\u2019ve been asking teams to integrate it into their own project, which has helped us to test the \u2018setup\u2019 instructions. Most of this has been about implementing an existing component, so one thing we haven\u2019t really done yet is looked at how users might build brand new \u2018things\u2019 using our mixins / variables / guidance.. This is done \ud83c\udf89 . Thanks for submitting this! When I checked the preview I noticed that the imports were different colors\n\n\nThen I noticed that the first import didn't have a closing semicolon, but the second does. We should fix this too. . Added missing semicolon in c19656b.. Thanks @austinhernandez! It says \"You Need Permission\" so just requested access to view it.. The govt banner is the only thing that I can think of for now. In the future, if we ever provide a Privacy page or other policy pages that govt sites are required to have, it could be different. Also, there was some discussion around maintenance here: https://github.com/uswds/uswds/issues/1738.\ncc @konklone feel free to share your thoughts if something like this would be a good idea and if you'd like to continue any relevant discussion from the previous issue.. There was no decision to remove it and don't think it should be. It serves a real user need that was informed by solid research. Whether the USWDS or another group ends up being the gatekeeper of the text is another thing, but if it's not the USWDS, I don't know who would be the one to do this. This doesn't mean we can't have a blank banner component, too, that would be great to have.. Closed via #2399. For the future, we need to think about how to enable vivid variants in themes.. From @thisisdano: \n\nI think title is a better, more accurate descriptor, but heading is more consistent with our use of \"heading\" in class names, vars, etc \u2014 so I'd probably tilt toward heading for its pedagogical consistency :tomato: :shrug: :tomahto:\n\nSo going to keep this as is.. Looking good to me. Is the way its ordered for any particular reason? It seems more logical to me to order them starting with reds and ending with purples (a la ROYGBIV), that would make it easier for me to find the colors I'm looking for. . Closing this as I've broken them out into individual issues.. Hi, thanks for opening this issue. Agree that folks with a .mil domain should change this text accordingly. How are you implementing the banner on your site?. Hi @arichiv-usds, thanks for this PR. I'll have to check with the team if the fractal site is intended to be used for building the client-side components or not. I wasn't aware that they were. Are you using the fractal site to construct your components on code.mil? Would it make sense to add documentation to our site instead to change that text in the markup instead?. Agree with these changes... a few things:\n\n\nI'm testing the changes on the docs page. Everything is good the first time. After I click it the first time, then scroll back to the bottom and click it again, nothing happens.\n\n\nCan we remove the visible focus from the #main-content? It's not necessary for content and find it doesn't look clean.\n\n. @hursey013 did you push it up yet? Not seeing any new commits.. I tested this with VoiceOver. \n\n\nWhat I expected was how it works with the skipnav link which announces that I'm on the main:\n\nThe way I experienced the back to top link was this (rattles off the sidenav items):\n\nCan we bring the two in line with each other to get the back to top link behavior consistent with the skipnav behavior? . Sounds good, thinking future friendly, if/when we upgrade to Neat 2.0 do the names of the variables have to change?. This creates a new top-level folder in stylesheets vendor/ and I wonder if it's confusing since we already have a lib. Also, could be overkill for one file. Would we be able to add a variables-vendor.scss in core/ instead?. Upgrading to Neat 2.0 is TBD, but I think we definitely want to improve grids in general (some thinking started in #2137), likely as part of the USWDS 2.0 release. It's good to keep on our radar its changes, in any case, thanks!. Closing this as @hursey013 mentioned:\n\nnpm install + cache seems to always outperform npm ci. it doesn\u2019t seem like npm ci and caching play well together, plus in order to get npm ci to work correctly we have to add a few extra steps which seems to negate any speed increases. For step #2, it seems like it's repeating red a bunch of times. How about using $color-primary instead where it's set to red?. yes, that's similar how I set it up on https://codepen.io/mbenari/pen/zWBjPr. Closed via #2393.. Hi @cjk101812, thanks for opening this issue. Looks like buttons still use display: inline-block https://github.com/uswds/uswds/blob/develop/src/stylesheets/elements/_buttons.scss#L43 \n\nCould you show me where you're seeing the code for display: block?. Thanks for sharing that @cjk101812. It seems this only effects the submit buttons. Looking through the forms, I can't see that there's any reason to have  display: block aside from making the vertical spacing a little more consistent. Because of this, it seems we can remove this code. Will let you know how this progresses.. @cjk101812 just letting you know that this was fixed in #2425 and should go out in the next release. thanks again!. Duplicate of uswds/uswds-site#523.. Also related to https://github.com/uswds/uswds/issues/2375. We use PostCSS to add vendor prefixing.. This done, the branch is release-2.0 and merged the work in #2287.. Didn't end up using this in testing.. In the preview, it uses the tablet to denote size but tablet is so subjective, constantly changing as new devices reach the market, and has a huge range already. I prefer to use small, medium, large or sm, md, lg. This also keeps it in line with how we do this currently.. In the existing grid, all columns are built as 100% width at the smallest size and then trigger the declared column width at a larger size. E.g. usa-width-one-third gives you a 33% column which becomes a 100% column at the smallest size.\nIn the new grid, you have to write the width at the mobile size each time, e.g. g-col-12 tablet:g-col-4\nWould the new grid support the same kind of sensible default functionality of a 100% mobile column that's in the current grid?. That could work, but let's keep it as is for now and see how it does in testing and more exposure. There's something nice about the simplicity of g-col filling. Maybe I'll get used to it. Or maybe g-col-full could be a mobile full class, even though it's two extra characters. Or maybe there's a setting that you could set for a mobile 100% columns.. Moving @stphnwlkr's https://github.com/uswds/uswds/issues/2431#issuecomment-383679086 here: \n\nI asked this question a long time ago, but why are we attempting to reinvent the wheel? When it comes to the grid, why not just follow everybody else (bootstrap, foundation, CMS.gov) and use one of the variations (md-col--4, md-4, medium-4). People understand the t-shirt sizing and the column count combination. I am not sure you can come up with a system that the entire world will adopt or would not try to modify after the fact. This would certainly make adoption easier.\n\nFeel free to share any other thoughts.. Closed as we are not allowed to make pro-bono microrequests.. >Yes, I'd say they helper toggles should be the same type size.\nwhich did you prefer 15px or 17px?\nWe should probably note to fix these changes in the Sketch file.. The Sketch file has some inconsistencies around the button spacing. The Sign in button has the button closer to the input than the password reset, which has it after the helper toggle (also \"helper toggle\" might be a better class name than usa-form-note). I'm guessing you'd prefer the Reset password distance @thisisdano?\n\n\n. @thisisdano updated the styling to reduce the dissonance:\n\n. Updated so the margin bettween the submit button and input is 30px in order to maintain vertical rhythm between inputs.\n\n. For the future, I wonder if we should have this all in a single place so we don't have to update the content twice like we're doing now: in the docs site and README.. I think the system above could work well bc it's simpler, much easier to recall numbers, and easier to remember the system, especially as you're prototyping and need to adjust spacing on the fly.\nIn our current (old) grid system, we heard a couple people having problems with remembering how to spell certain ratios (one-twelfth, five-twelfths, -twelvths?) See \"The naming convention is confusing\" in #2137 and I think the previous spacing recommendation would have some similiar recall issues.. This is done and using a numeric scale as seen here: https://federalist-proxy.app.cloud.gov/preview/uswds/uswds-site/add-utility-docs/utilities/spacing/. Noted, thanks @stphnwlkr! . Works for me, I didn't realize we added the basic colors already. Was simply moving this issue from the previous list #2400 into its own issue. \nLooks like to start, we have full variants of black (0 to 100), white (1-4), and one color for each of the hue range (red, orange, yellow, etc...), 5 variants of primary and secondary (lighter, light, base, dark, vivid), and error, warning, success, neutral have 5 variants (lighter, light, base, dark, darker). Also looks like there's accent and some transparent colors. . Done, colors here: https://federalist-proxy.app.cloud.gov/preview/uswds/uswds-site/add-utility-docs/utilities/color/. Done, preview here: https://federalist-proxy.app.cloud.gov/preview/uswds/uswds-site/add-utility-docs/utilities/font-size-and-family/\n. This is some good reasoning that we can probably refer back to and possibly incorporate into docs. Closing as this has been addressed.. Done.. Hi @RonWilliams, thanks for opening this issue. What is a pager element? Do you have any examples of this element?. Ah, if so, that's already opened here: #959. Let me know if that's what you're referring to @RonWilliams.. Closing as it's a duplicate of #959.. Hi @johnnyporkchops, if it works for you without any noticeable issues, I'd say it's probably OK. It doesn't end up filling the full width of the grid row, which you've probably noticed, bc it's short one-twelfth of a column. I'd check with your designers to make sure this is intended. Hope that helps.. Superceded by uswds/uswds-site#552.. Hi @jchassy, there was nothing sent in the content of this issue. Could you state what your issue is and fill out the template provided? . This work is done, moving to build in https://github.com/uswds/uswds-site/issues/552.. Got the \ud83d\udc4d from @thebestsophist in https://github.com/18F/writing-lab/issues/345: \n\nLooked good to me, the folks from the diversity guild who saw it also said \ud83d\udc4d\ud83c\udffc So I think it\u2019s good to go!\n\n. Duplicate of #2459.. This has a lot more changes that I realized. Going to put placeholders for what would need review:\n\nContent\nUX design\nAccessibility\nFront-end\n\nAlso, I think I'd like to push back on changes that don't have a demonstrable need from our users -- i.e. if they didn't tell us something was difficult about the current UX and content of the current banner, we shouldn't change it. . Folks in the content channel agree that the original text is better and that there are issues with the rewrite:\n\n\"It really buries the lede if you ask me...you have to read to the very last word to get the object\". Also, if I remember correctly, the content guild preferred the old text to the new.. Fixed in #2526.. @hursey013 we use parentheses on a lot of other links on the page and it works fine. Do you know why it's only happening here?. Oh I think it's out of date on the site, fixed it here: https://github.com/uswds/uswds/commit/4c9d54539bbacef8df1f5211744ffd37ea567974#diff-29983973f8a9f1936ee33ab86ebb6b7a. Feel free to merge after approving next time :). How do we find out which version of Chrome/Chrome DevTools Protocol (I assume chrome-launcher?) and chrome-remote-interface can talk to each other?. Done in #2539 and uswds/uswds-site#559, though doesn't fix the issue we were having in uswds-site (updated the title to reflect the work to do).. You betcha! . I just checked the source code and it looks like the government banner is not part of the main document header: https://components.designsystem.digital.gov/components/detail/layout--docs.html\n\nThe page template Waldo is using is out of date. Once we can get fractal pulling in these templates, it should have the accurate HTML on our docs site. I still think it's semantically alright for the gov banner to be a section element though so should be fine to leave it as is.. The current code is \nsection > header\nheader (new block element)\nNot section > header > header, it's working on the existing code.. Thanks @mgwalker! \ud83c\udf89 \nPosting this for after I close the PR:\nIt failed on the \"Checking build\" step which I hope will prevent any accidental merges to master:\n```\n!/bin/bash -eo pipefail\nls -agolf dist/\ncodeclimate-test-reporter < coverage/lcov.info\nimg  ..  js  LICENSE.md  css  scss  README.md  CONTRIBUTING.md  .  fonts\nNo CODECLIMATE_REPO_TOKEN found. A CODECLIMATE_REPO_TOKEN must be specified as an environment variable.\nExited with code 1\n```\n\n\n . Thanks @afeld, that looks like it'll be helpful to achieve this. We welcome PRs too if you're still looking for projects to jump in on ;). @el-mapache when you have a chance, it would be great to get your eyes on this, so community-submitted PRs don't fail on CircleCI.. Closed via #2572.. Thanks so much, @1Copenut! We'll need to review the  best-practice ruleset to ensure it's what we want to run. By law, we need to ensure Section 508 and WCAG 2.0 AA are met, but of course, we can go above our requirements too. Looking at the list, cat.semantics might be something we want to add in the future as well. Stay tuned!. The axe failure is appearing on the components layout--landing-inner and layout--docs-inner bc it thinks it's a full page (I think). We need a way to exclude axe from running on them, it already runs on the full page which includes the elements it's looking for: layout--docs and layout--landing. FYI these components are hidden in fractal with hidden: true in their configs.\ncc @toolness for any ideas.. @toolness thanks so much for pointing us in the right direction! \nI couldn't see any examples of components that were excluded so was wondering if you could show what that would look like in SKIP_COMPONENTS?\nThe second idea you posted sounds like it could be the most sustainable so may give that a go too. What would the JS look like to exclude components with hidden: true?. Thanks! I found this version of the file with a lot of options enabled and components excluded: https://github.com/uswds/uswds/blob/73c586b26ba3643b04936361dc14a761d4281644/spec/axe.spec.js. Andddd the test is fixed in 1c4c1ec \ud83c\udf89 . Hi @lbai001, thanks for reaching out. The good news is that this was already fixed last year in #2186. Please make sure you're using the current version of the USWDS to get all of the latest bug fixes, or use the code that was added in the previous PR.. I've linked it to the scripts in line 28, however this line will change as soon as anything is added above it like contributors.. We were able to add new owners to this. However, I was unable to remove @shawnbot. The command looked like it worked and removed him, but when I listed owners, he was still listed.\nTODO: see if we need to change the npm token in CircleCI. . No worries. This ended up working, so we don't need anything else from you @shawnbot. The reason it didn't look like I removed you was bc npm was serving stale cache. \nThe team will need to still confirm we can still publish releases / if removing you effected the npm token in CircleCI, but closing out for now!. @openbrian sure, that would be great!. Is this related to #1955?. The current grid will be deprecated in version 2.0, see https://v2.designsystem.digital.gov/utilities/layout-grid/ for more info. We'll also be tackling this typography issue as part of #2215 to make this more consistent.. Fixed in #2562.. Hi @fpigeonjr, thanks for the suggestion. We'll review this with our team and see how it fits on our roadmap. Stay tuned!. Great, and if this something your team is able to develop we'd be happy to include it on our Implementations page. You're not the first person to ask about React and I know others would find it useful.. Is there a tab sneaking in? Looks larger than the space value.\n\n. When I tried to see if we could do this, I got hung up on how to recreate the variable width and auto-fill example shown here in CSS Grid: https://v2.designsystem.digital.gov/utilities/layout-grid/#auto-layout-columns Are you able to do this? When I looked into this, it seemed like the answer was no, and that's what flexbox was for.. Fixed in #2566.. The title of the PR is [WIP]. Did you mean to remove that instead and leave the title?. Hi, thanks for opening this issue. What path is it producing you after you set it?. Could you share the full path of what you used and full path of what you expected? And a link to the code or live site of the project?. Adding a link for a preview branch:\n\ud83d\ude0e Preview. Hi @mcharg, thanks for reaching out! We have not tested the side navigation location. There's some work out there that suggests it doesn't matter which side it's on. I'd recommend testing it with your users to see which gets the outcomes you desire. See: https://ux.stackexchange.com/questions/31031/how-to-choose-the-better-placement-for-sidebar-left-or-right. Fixed in #2577.. Closed in #2684.. Opened new issues for each of these.. I found this older IA @bradnunnally did a while back that seems to have had a content audit and research done to support it. I removed the services section from this as it's no longer relevant.\n\nTop 10 pages\n\nSummary of rank above\n\nComponents\nStyle\nPage templates\nGetting started\n\nHere is one potential proposal and observations:\n\nFold Getting started and \"Guidance\" into one page e.g. \"Guidance\" or \"Documentation\". Also open to keeping \"Getting started\" and a second docs nav item if needed.\nKeep Components, Utilities, Style, Page templates in a flat hierarchy rather than grouping them together. Or should they be grouped together?\nMove Design principles (9th visited page) to a more general \"About USWDS\" page. \"About USWDS\" in main nav or secondary nav. The IA above had this in \"Overview.\" \nWhat's new is 21 of the top visited pages. Maybe this should be moved to secondary nav, another page, location, or removed?\nAdd and promote a \"Community\" page - early advice from Andrea, gov.uk does this.\n\n\nPotentially have a megamenu for docs to differentiate Getting started from other Guidance:\n\nor via the sidebar a la gov.uk:\n\n. Depending on the page content, parts of \"What's new\" could move to the \"About USWDS\" page.. Resolved in uswds/uswds-site#604.. Fixed! Was missing /components/ in the URL.. Also, noticed the footer had the status of wip in fractal which didn't sound right, so changed it to ready in 00d373bf1643b1cf8204bac6cc5a76b433f4506d.. @wslack I'm not sure if the SVG change was correct. According to https://www.w3.org/2000/svg, http://www.w3.org/2000/svg is an XML namespace.. Yes, please bc http://www.w3.org/2000/svg is the valid XML namespace for SVG.. Merging this, @wslack feel free to give us a heads up if they find out what the second issue was.. @el-mapache this still has the WIP tag in the title so wasn't sure if I should merge it. Still working on this?. Fixed in #2750.. @el-mapache @thisisdano this is coming along! I have some questions above that would be great to get your thoughts on.. Should we have a switch for link and paragraph styles (like GOV.UK) and turn them on by default? Components will look strange without these basic styles.. I'm not sure I follow those first thoughts, I think we should have a solid scoped set of type styles that you can turn on/off with a class: usa-content or some other name. And that we should be simpler to start, and can add/tweak as we go. The refinement of what's scoped would be in the Sass mixin or in settings (that can be built in later on), but we would have a sensible default set of styles to start. . OK let's go with the link and paragraph text to start. I think we'll be updating p styles in #2215 to have less adverse effects, but that would be in a future PR.. Yes, merge conflicts resolved in ce1d8c2.. Updated the above to reflect it's an issue with the extended header, not just the landing page.. Here's what's happening: it's focusing on the search input and button before it's being toggled open. Those need a tabindex=\"-1\" to ignore it before it's toggled open, which could be removed once it's opened.. @thisisdano I used 3px for the outline and offset bc they felt the most balanced. Lmk if you find a system value that works better.. @thisisdano could you take a look at the design of this, I know the search bar looks a little wide but was following our own guidance of making it at least 27 letters wide.. It is dramatic! I think it's right on that ems might not be the best units to use as it accounts for the widest letter (m), not the average of all the letters, which ch's (0) might be closer. However, when I used 27ch it was dramatically small and didn't seem to actually allow for 27 letters:\n\nChanging it to 34-35ch got it closer or 190-200px. Thoughts?\n\n. It looks like it wasn't factoring the button width. When I changed it to calc(27ch + 4.5rem) where 4.5rem is the width of the button, it got us to the correct width:\n\n. Made the changes to search width and merging since this was previously approved.. We can always open new PRs to improve :) feel free to post any screenshots too so we can see what it would look like.. @el-mapache There looks like some issues in mobile.\nThis is what I see (nothing happens, no arrow appearing):\n\nThis is what I expect:\n. @el-mapache on desktop I think the spacing may be off between the heading item and list. Can you run the visual regression testing to make sure nothing's changed?. The link heading has the class usa-footer-primary-link, so as long as we apply styles and functionality to that, it should be good, right? usa-footer-secondary-link are the links within the list.. Yes, I was thinking we would want to pull (the JS code that refers to it) out the list bc it shouldn't have been in a list in the first place. We'd just want it applied to the class, but I haven't taken a look at the JS code in a while.. @el-mapache I'm fine for this to go into 2.0. will do this in a different branch. Here's some feedback I got from Nielson Norman Group's support email around this question:\n\nI am not aware of any specific research on drop-down caret orientation. However any particular study might not generalize to all situations, because there are several factors that affect the value of this design detail.\nIn general, it's best to provide explicit signals to differentiate each navigation state. So technically it is better to have the caret position change when the menu is expanded; especially if the menus are click activated (rather than hover activated), to suggest that once the menu is expanded, it can also be collapsed by clicking the 'up' caret.\nHowever if the menu is hover activated and has a background color that has high contrast against the page (such as dark blue over a white page), then the benefit of re-orienting the caret to indicate an open or closed state will likely be negligible, because it's already obvious that the menu is expanded and users don't need to click it again to close it.\nNote that the previous comments apply to horizontal menus such as the image you sent. Vertical menus have a different set of challenges and typically they do benefit from having distinct 'open' and 'close' icons.. Closed in #2923. \n\nNice work \ud83c\udf89 . @el-mapache Nice! Either solution sounds good to me. I don't think we need to prioritize this, but you can feel free to pick up if you don't have other things to work on.. Fixed in #2669. Will go into the 2.0 release.. Will units(1) still work? Bc I remember using that on the doc site so will want to update it as well.. Note to myself: Check color of footer: did we change our vars to use the utilities? Seems so.. @el-mapache yes, it works now! HTML and functionality are good to go. If it works for you, I can assign myself to this to take care of some last CSS and style work/finessing?. @el-mapache yeah it looks like the visual regression tester is only running the medium footer (not big or slim) so it makes sense why it wouldn't have failed for you.. Style fixes are in, this is g2g \ud83d\ude80 . Yeah i was looking for the units variables bc i was sure if i could use a custom size function inside a CSS calc() function.. Closed in #2690.. Probably a good time to update this page. Moved to \"review.\". We're on the path of this with other issues, e.g. #2685.. @stphnwlkr thanks for letting us know. That sure is an odd behavior in Firefox! I can't recall exactly why that was added, but if I'd have to guess it may have been for browser quirks (which makes this ironic) or to get it exactly a certain height. Will have to take a look to see if we can safely remove it though.. Hi @stphnwlkr, thanks for opening this issue. \nWe have this CSS from 1.0 that's also in 2.0:\n```\n.usa-background-dark {\n  background-color: $color-gray-dark;\np,\n  span {\n    color: $color-white;\n  }\na {\n    color: $color-gray-lighter;\n&:hover {\n  color: $color-white;\n}\n\n}\n}\n```\nWould something like this work? Or would you expect it to work differently?\nMaybe background-color: $color-gray-dark; ought to be $color-background-dark which you can control in your settings.\nMaybe links should just be white to make them more robust to different colors.. I also see we have very similar functionality in components/section.scss:\n```\n.usa-section-dark {\n  background-color: $color-primary-darkest;\n  color: $color-white;\nh1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6 {\n    color: $color-primary-alt;\n  }\np {\n    color: $color-white;\n  }\na {\n    color: $color-gray-lighter;\n&:hover {\n  color: $color-white;\n}\n\n}\n}\n```\nWe probably don't want both .usa-background-dark and .usa-section-dark and should choose one.. Done in #2731.. Navigation updated in #2750 which will be the source of truth so can close this. At some point we'll want to update the Sketch files.. I checked on an IE simulator and then on a Windows machine. Strangely hard refreshing makes it go away occasionally so it may be a browser/cache quirk? I think we can go ahead and close this if it's not a consistent issue.. Fixed in #2649 . Superseded by #2645.. Thanks! Also, feel free to clean up the JS and markup in the CodePen (e.g. forking it), I don't totally know what it's doing, only that it works :). - This didn't have anyone added as a reviewer, is this ready for review?\n- This has some updates to the accordion, how is this affected by #2648?. Fixed in #2672.. Closed in #2684.. Done in https://github.com/uswds/uswds-site/pull/622.. Closed in uswds/uswds-site#612.. Closed in #621.. The old grid on desktop had a width of 1040px with 30px margins on each side making the content width 980px. On mobile, the margins are 15px. This is how all the other components are built on the site. \nThis new grid has a width of 1024px with 32px margins making the content 960px. On mobile the margins are also 32px.\nThis will make it look disjointed from the other components unless it's all done together. Was this the intention?. Yeah I opened this issue #2662 around that.. Wrong repo https://github.com/uswds/uswds-site/issues/614. Fixed in #608.. \ud83d\ude80 @thisisdano do the bug fixes in this PR close any open issues in the backlog?. LGTM. Yep! Swapped myself to review.. @el-mapache is this working on your end? Doesn't seem to be on the preview branch: https://federalist-proxy.app.cloud.gov/preview/uswds/uswds/ab-2648/components/preview/accordion--bordered.html\nAlso, looks like the style got borked somehow \ud83d\ude2c . @el-mapache sure! Did you push the changes up? Not seeing any new commits.. @el-mapache yay, the accordion is working now! I can take the styling from here, since they're looking huge.. @el-mapache fixed the styles in ad932e8 so now they're matching what we have.. Hi @nolawi, which \"latest release\" are you referring to? It's in the latest code in the release-2.0 branch, but not in 1.x. Preview of the accordion.. Oh, I didn't realize that they were stripped out. In that case, I don't see a real reason to change.. Was this PR tied to any issue or epic (e.g. #2295)?. Sounds good, just wanted to make sure it was linked to the right issue/conversations, thanks!. Looking good. Do you have an example of this: \n\nAlternatively, you can add an .only to a describe or it block, and run the npm run test command.. For npm run mocha ${path/to/spec-file} is it like npm run mocha spec/screenshots/accordion_large-desktop.png will run visual regression tests? Are there other files in spec and other tests this will run?. Hi @awolfe76, thanks so much for reaching out. Unfortunately, we don't have a way to build or import single files at this point. It's not on our roadmap, but we'll keep you posted if this changes in the future.. Also, in v2 we may have more separation of components and may be able to do those kinds of imports.. @uswds/core it's showing aXe errors that are not accurate. The foreground color (text) is not #adadad. Where is that coming from and how do we resolve?. Oops wrong PR, ignore.. @el-mapache Do we need to publish tags as well?. Closed via #2697.. @el-mapache I checked the CircleCI test and it looks like lib isn't being ignored anymore: https://circleci.com/gh/uswds/uswds/3115?utm_campaign=vcs-integration-link&utm_medium=referral&utm_source=github-build-link\n\nAlso, should we ignore codeclimate/total-coverage issue? The issue it's linked to is about the footer which is unrelated to this PR.. Actually, it looks like some lib files are ignored, but this was what I saw being checked:\n/home/circleci/project/src/stylesheets/lib/* (many of these)\nAlso, can we not output each ignored file like we currently do? or group it so it doesn't take as much space.. @el-mapache oh interesting, do we know what the new errors are referring to, as we'll probably want to fix them?\n101 problems found\n severity level \"info\": 101\n  undefined: 101. I'm not sure that I understand that it wasn't being ignored before. I noticed that before we had 45 SCSS files checked (not inluding the lib files I mentioned) and in this PR it shows 134 sources checked (including ~89 lib files). Do we know why they're showing up now and not before?. @el-mapache yeah I think that error is bc we're using a super old stylelint (2 years old), if we upgrade it, this should go away.\nChanged: files matching ignore patterns no longer receive an \"info\"-severity message, which was always printed by the string formatter. Instead, the file's stylelint result object receives an ignored: true property, which various formatters can use as needed. The standard string formatter prints nothing for ignored files; but when the verbose formatter is used, ignored files are included in the filelist.\nvia https://stylelint.io/CHANGELOG/. we'll see what happens! \ud83d\ude00 \nIt also sounds like upgrading will hide the ignored files by default unless the verbose formatter is used, which will be nice.. Would this also require a publish to npm if we use release-2.0 as the base branch? . OK, if the verbose formatter is helpful for the error reporting then maybe we should leave it.\nre: stylelint-rules - does it make sense to depend on that repo? I noticied it hasn't changed since 2016. Would we be better off using our own stylelint config file, like we do on the docs site? https://github.com/uswds/uswds-site/blob/master/.scss-lint.yml I guess it would be good to know what changes would need to be made.\n/cc @thisisdano for visibility. Our own config file could still be based on the rules of the 18F one if it's sensible and that's what we'd want, right?. Once the base branch is set to release-2.0, this is good to go. We will clean up in another PR (use newer stylelint, use our own config file on our repo).. Fixed in #2695.. Done in #2778.. @el-mapache doesn't look like CircleCI is passing, can that be fixed?. @kangax thanks so much, and exactly! It's like a weight is lifted \ud83d\ude04 . @thisisdano possibly, but agree we should do it in another PR. . @el-mapache took a look at this, from what I can tell, those rules look good to follow, is it something we can easily fix with autofix? https://stylelint.io/user-guide/cli/#autofixing-errors or @thisisdano did you want to take a look at cleaning these up?. Can we keep this rule but ignore for else statements? https://stylelint.io/user-guide/rules/block-closing-brace-newline-after/#optional-secondary-options. Fixed in #2699. . Fixed in #2703.. Fixed in #2703.. Question about this:\n- Rename internal grid-units fn to prevent unintended use (grid-units() --> spacing-multiple())\nWill units(1) and $units-1 still work? as shown here: https://federalist-proxy.app.cloud.gov/preview/uswds/uswds-site/dw-add-utility-mixins/style/spacing-units/. The answer to the question above:\n\nyes units() is still the public function and the units var remains the same. This change is just for an internal function. this change is to prevent users from mistakenly using the internal function. @thisisdano the source map I checked seemed working for me. Were you still going to work on that or is it still ready for review?. Another idea, use adjacent sibling selectors, e.g.: p + * { margin-top: 1em; }. \nThis would still allow us to have sections w/o any added bottom margin.  /cc @thisisdano. @thisisdano another related issue, should the first p also not have a margin like headings? i.e. should it be rewritten as: \n* + p {margin-top: 1em} instead of p {margin-top: 1em}?. Fixed in #2706.. Approved, we can resolve the above Q's in another PR / issue.. Done in #2713.. @thisisdano the preview branch is not showing styles on any pages. See: https://federalist-proxy.app.cloud.gov/preview/uswds/uswds/dw-update-colors/components/detail/fonts.html. Done in #2716.. Published https://www.npmjs.com/package/uswds/v/2.0.0-alpha.3. @thisisdano will both @include u-text('white'); and @include u-color('white'); work? What should we use for this PR?. @thisisdano oops, didn't see your last message. In a way, I like that color is consistent with the CSS property, bc I'm trying to keep them alphabetized per our coding style guide and it's nice when they match. But I also understand wanting to keep it consistent with the utility. \nShould we keep both mixins, though?\n\nI don't know. Will it be confusing to have two mixins that do the same thing?. Changed the color mixin to text in 8c76720.. Can you add a preview link for the new work?. Not seeing any hover styles working on this.. I don't think we need it for border radius. This worked: border-radius: units($theme-border-radius-sm);. I actually think we should change the markup though so it's not tied to the h2 element / someone may want to use a different heading level.. @thisisdano we need to get that 1em of padding back to the top margin of the button, any idea on the best way to do that?. Also, probably want to remove the bottom margin of the button / or write it so it's the last element in the box, so that there's even padding all around.. Do we want to wait until @thisisdano finishes the button component? Maybe how the margins are applied will change in that? For example, maybe the bottom margin will be removed.. Also, adding usa-prose to the box gets the top margins applied to the button correctly, however it adds an underline to the button which we don't want (bc it's a link and the specificity of underlined links wins (usa-prose a)).. Added a few updates, this should be ready for re-review, cc @thisisdano. . When I added usa-prose to the callout, the link styles were applying to the button with an underline. I tried to add a :not(.usa-button) to the link styles but this somehow made the basic link styles too strong and override other things like the light link style on dark text, so removed that. Now this adds typesetting to the p text in the callout instead of using usa-prose to get the proper spacing.. I think I may need to clean up one thing where browser styles are added to the heading.... Done in 3275e34.. The red error color is looking a little light, we may want to downshift to a darker red to more closely match what we had before. We want the reds a little darker and greens a little lighter so that people with color blindness issues can tell them apart.. No, we should use red-60v for the error state so there's more contrast between the green-cool-40v. I tested this with someone who has colorblindness who said, \"It's easier to see the darker one bc there's a bigger difference.\" \n\n. @thisisdano is this ready for review? If so, do we want to remove the WIP in the issue title?. Looks like there's other work in this PR that got included (e.g. forms). Is there any way to remove that from the PR so it's only related to new typography work?. This is not done, but would like a review of the strategy, cc @thisisdano . On hold til sidenav is complete #2740. . Updated to v2 syntax in fa84aa0.\nAdded usa-prose to trigger the correct headings to the section in dcbf98b, but lmk if there's another way we should do this.. I reverted the usa-prose addition to the section and added font-heading-lg to the h3s in 31cf5b2 to keep it more specific.. @thisisdano updated to the 2.0 grid in d17fd86, but it's not working. Also, after merging the latest work, the font size is 10px. Can you take a look?. Fixed grid in c33bff2.. Added grid gap in e5ad6ba.. Not sure which gap you're referring to, feel free to add an image to show what you mean. But the spacing looks pretty balanced to me.. Should the default layout grid grid-gap be lg above tablet instead of desktop? This will give the component a larger padding at smaller sizes and more consistent with grid-container breakpoints.. Smaller margins added in e8f31bf.. @thisisdano any other changes needed to this one?. Closed in #2765.. There's a lot of stuff that says \"deprecated,\" should it be removed?. Give it a look and see if they should even be deprecated or not.. Should links look like links (underlined)?. That's probably what the original designers had in mind re: navigation. Agree, underline on hover is probably a good call. \nAs an enhancement, I wonder if there's a way to scope that to the navigation links. I remember making a custom footer for our main site and having to re-add an underline for something that I thought should be a default was odd.\n\n. I don't think we want the hover underline on the topic on large screen sizes since it only activates on small screens:\n\nOr pointer cursor for that matter.. @thisisdano how about we fix the JS right now, it's using 600px do you want it to be 480px? See: https://github.com/uswds/uswds/blob/dw-footer-v2/src/js/components/footer.js#L13. Closed in #2774.. Inconsistent spacing between buttons last form input and button. \n\n\nMaybe use the same spacing as the space between input and the following label of the next input?. Also the show pw text feels really tight on the top, should we give it a little breathing room (2px)?. if you use float right instead of text align on the show pw it will work.. @thisisdano looks like there's a merge conflict. Can you resolve?. Closed in #2776.. Have you tried changing these vars instead e.g. $medium-screen: 700px;?\nWe will be deprecating that grid in our 2.0 release in favor of this new grid and unable to support the old. . I'm not sure what else may be going on. 2.0 is a breaking change so it might be difficult to upgrade from 1.0. We're documenting the changes here so that would be a good place to start thinking about the upgrade: https://github.com/uswds/uswds/releases/tag/v2.0.0-alpha\nBeta 2.0 will be released at the end of the month and the official release will be around a couple months after. \nWhat website/project are you developing the theme for?. Let's consider issue #2636 as well in this.. Will give my impressions on the visual changes first. \nAdding lines to everything makes it harder for me to see the hierarchy. It makes it look like it's all one level. Adds more visual noise.\n\nThe side nav current state looks incomplete bc it doesn't reach the top and bottom, there's an awkward space between.\nThe plus sign is too small - out of balance from the minus sign which is larger. Should be larger.\n\nI'm more in favor of keeping it closer to the existing visual design, unless we heard there were issues from users.. The link and buttons are different heights, should be the same:\n\n\nPotentially for another time, but these probably should meet the touch target minimums as well since it's only used on mobile devices.. The desktop arrow size may have been accidentally increased:\n\n. FYI the reason the mobile nav buttons and links are different heights are bc the line heights are different.. Do we think the distance of the hover state is close enough to the line now that it should just meet the line or is the 4px of distance desirable (basic header)?\n\n\n. Since we're using flexbox, do we think we can use it to also address the issue around supporting longer logo titles #1729? Happy to do it another time too.. Long titles seem to expand the header vertically so is probably in a better place than it was when the issue was opened:\n\n. Sounds good, updated the PR to close that issue on merge \ud83d\udc4d . Do you think the current and hover states should cover the line as it does now? Like a fullbleed? You mainly notice it when there's a dark background used below. This was done by moving the underline on top of the line.\nThis PR:\n\nFullbleed:\n\n. @thisisdano lmk when this one is ready too.. I think the header's bottom border gives it a nice definition and that without it it looks lost and floating with no anchor.\n\n. >The bold nav links aren't really doing us any favors...\nI thought it looked fine with font smoothing, SSP bold without it looks a bit heavy. But understand that's an issue for other fonts. Can we add font smoothing just for SSP headers?\n. @thisisdano FYI I reverted the banner changes in this PR in 741abbf since they're addressed in another PR.. Superseded by #2760.. Closed in favor of #2758.. Is the suggestion to reduce the icon size in usa-alert-slim or for all the alerts at small screen sizes or both?. This was done in #2946. Thanks @nolawi for bringing this up!. @thisisdano let me know when the changes are in and I should check this again.. Related to #2754. Could also be combined.. Happy to close #2752 in favor of this, but just want to note that there's a good number of variables we can remove: \nhttps://github.com/uswds/uswds/pull/2752/files#diff-b5fa828d79411a4653dced7e478b914bR125. I'm wondering about the application on the normal font text and whether it's too thin, specifically the tags, which is something you probably want to stand out:\n\n\nWhat do you think?\n. It's also used on the hero paragraph text.. Maybe we should remove the offset, would make the input less aligned, but would simplify things.. It's the same technique we always used and gov.uk uses, it's more noticeable bc our inputs are shorter and the lines are thicker. Prefer to keep the technique and slightly bump up the height of the input (it's 38.39px (sort of random), can we do an even 40px (2.0 palette friendly)?). Would not be surprised if there were unintended consequences by changing.. Without the offset:\n\nCould be the mobile experience or desktop and mobile, depending on what we prefer.. Not that I know if. So which do you prefer: the above for both mobile and desktop or just mobile with desktop like we currently have it?\n\n. Fixed in #2766.. Also, would prefer $input-height to be units(5) instead of 38.39px, but don't really understand the function it's using.. @thisisdano anything else needed on this PR?. @thisisdano yep, seems good to me.. Don't really understand this comment:\n// This mixin is only needed until we fully remove the\n// deprecated usa-button-disabled style.\n@mixin disabledesque {\nAre we removing it?. Wasn't done during my time on the project so don't know. Should we remove the comment and let it stand?. Not that I can think of. Maybe a dev would want to access it using a class?. Also, the name of the mixin, disabledesque, is kind of interesting, maybe button-disabled or disabled-button?. Comment removed in 0a019e5.. Done in 57f07b6. We have classes for the other states (hover, etc...) so don't see why disabled would be any different.. Yeah. I think they meant it to be stylelint-enable. I ran the linter w/o the stylelint disable rules and it seemed to not throw errors so removed it in 7bbae54.. Hi @stphnwlkr, thanks for opening this issue. Yes, this is a bug and hope to get a fix in shortly. Will note that this hide/show search will not be used in the v2 header, it will be open by default.. What's the thinking behind leaving the list items as usa-nav-item rather than usa-sidenav-item. The latter would be following BEM.. Is there a way we can update the mixin to allow for both .usa-nav-item or .usa-sidenav-item. So we can use .usa-nav-item in the header and .usa-sidenav-item in the sidenav? Mixins shouldn't prescribe which classes we have to use, should they?\nOne idea is adding a second class to the mixin:\n.usa-nav-item,\n.usa-sidenav-item\nThen you can use both in different situations? But maybe there's another cleaner way.. Btw the nav-sublist mixin also has .usa-sidenav-sublist as its grandchildren class, though you would use that class for the header as well (e.g. usa-nav-sublist), right?. Though if the case is usa-nav-item is semantically the correct name for this item in the sidenav, then that's a different story.. changing to usa-nav-primary-item adds a bit of clarity too, which is good.. Removed usa-hero-content in a1b2be6.. just removing usa-hero-content will get it to work. In the component it's\nCurrent:\n\nW/o that usa-hero-content:\n\n. Fixed in #2772.. I've been thinking about the classes for button states (e.g. usa-secondary-hover). The reason they were added in the first place was:\n1. To show the different states on the docs site\n2. In case a developer wanted to add states via classes in JS\nThough I don't know how much the two reasons are valid for adding this in our code. As it doesn't enhance our code to have this and even has a couple of quirks. I don't have first hand knowledge of #2, but it could be the case? Whether these classes stay or go, now or in the future, this is something to consider.. Would like to merge in https://github.com/uswds/uswds-site/pull/650 first, bc this PR will break the site bc we use Bourbon mixins in the site Sass.. When this is in, should we remove Bourbon from uswds-site or temporarily add it back in on that project?. Also, needs to be removed from src/stylesheets/core/_required.scss, LICENSE.md, README.md, examples/grunt/yarn.lock, examples/gulp/src/css/main.scss.. Here is the current design of the government banner:\n\nvia https://federalist-proxy.app.cloud.gov/preview/uswds/uswds/release-2.0/components/preview/banner.html\nThe link in a different color helps set it apart.\nThis version does not have an extra space between the word know and the down arrow.. @ToniBonittoGSA we've updated the banner with your suggestion of removing the extra part of the underline. Can you take a look and let us know if there's anything else we should consider changing? https://federalist-proxy.app.cloud.gov/preview/uswds/uswds/release-2.0/components/preview/banner.html. Fixed in #2786.. Fixed these links, thanks!. Closing since 2.0 beta launched.. @thisisdano can you pull the latest changes into this? we merged at least some of this in already in #2785.. Also, will needs to bring these variable changes into uswds-site if they're used there. Will you be able to make those updates on that repo as well?. Which components use them?. Fixed in #2793. I support linking to https://accessibility.digital.gov/visual-design/color-and-contrast/ as a resource.\nI think it's perfectly reasonable to align with WCAG 2.1, which is AA, technically we only need to follow 2.0, but I'd support 2.1 since it's the future. People can always go above and beyond (AAA) if their project warrants it. \nIt could be nice if the magic numbers supported those that wanted AAA, e.g. a magic number of 60 or 70 would achieve AAA, so folks have the option.\n\nMake sure we mention (as we do on the accessibility site) avoiding very high contrast environments\n\nProbably nice to mention this, but wouldn't make it a requirement.. To clarify \"I'd support 2.1 since it's the future,\" I meant it's the future of what Section 508 will support at some point, though it is a recommendation by WCAG, so it is current.. Yes, it appears a difference of 50 will achieve AAA large text and a difference of 70 will achieve AAA normal text (tested with the gray family). AAA normal text is the same requirement as AA large text. We could easily update or documentation to add AAA normal support.. @thisisdano PR to add this in: https://github.com/uswds/uswds-site/pull/656. Fixed in #2793.. Should this be closed since it's a Chrome bug?. @thisisdano we can make this move pretty easily, want to do it now?. I don't have access to that repo, happy to do it if you give me access to it, otherwise, you can do it in Settings.. yeah, we could update mem.. it is, you can still update it though. Closed via #2800.. Closing as Federalist might not like @'s in branch names.. Not sure why Federalist isn't building this branch.. I checked package-lock.json and looks like 4.0.0 is showing up, but so it 1.1.0 - maybe best to way til they release the updated yargs like you mentioned.. Hi @dmethvin-gov, we agree with you. That's why we changed it to usa-memorable-date in v2: https://v2.designsystem.digital.gov/components/form-controls/#date-input Will close this out as it's been addressed there. . Superseded by #2840, #2839.. Done in #2950.. Looks like this was fixed in #2848 and can be closed.. My mistake, looks like there's an open PR for this #2857 to merge this into develop, re-opening.. Fixed in #2924.. Can this issue be closed now since these are merged in: #2963 #2957? /cc @saracope . Could be I'm using  npm 6.5.0 and node 11.4.0.. after removing node_modules and trying again, I get a different error: \n```\n\u279c  uswds git:(release-2.0) \u2717 npm install\n\ncanvas-prebuilt@1.6.5-prerelease.1 install /Users/mayaben-ari/Code/uswds/node_modules/canvas-prebuilt\nnode-pre-gyp install\n\nnode-pre-gyp ERR! install error\nnode-pre-gyp ERR! stack Error: 404 status code downloading tarball https://github.com/chearon/node-canvas-prebuilt/releases/download/v1.6.5-prerelease.1/canvas-prebuilt-v1.6.5-prerelease.1-node-v67-darwin-x64.tar.gz\nnode-pre-gyp ERR! stack     at Request. (/Users/mayaben-ari/Code/uswds/node_modules/node-pre-gyp/lib/install.js:118:27)\nnode-pre-gyp ERR! stack     at Request.emit (events.js:194:15)\nnode-pre-gyp ERR! stack     at Request.onRequestResponse (/Users/mayaben-ari/Code/uswds/node_modules/node-pre-gyp/node_modules/request/request.js:1074:10)\nnode-pre-gyp ERR! stack     at ClientRequest.emit (events.js:189:13)\nnode-pre-gyp ERR! stack     at HTTPParser.parserOnIncomingClient [as onIncoming] (_http_client.js:562:21)\nnode-pre-gyp ERR! stack     at HTTPParser.parserOnHeadersComplete (_http_common.js:113:17)\nnode-pre-gyp ERR! stack     at TLSSocket.socketOnData (_http_client.js:449:20)\nnode-pre-gyp ERR! stack     at TLSSocket.emit (events.js:189:13)\nnode-pre-gyp ERR! stack     at addChunk (_stream_readable.js:288:12)\nnode-pre-gyp ERR! stack     at readableAddChunk (_stream_readable.js:269:11)\nnode-pre-gyp ERR! System Darwin 17.7.0\nnode-pre-gyp ERR! command \"/usr/local/Cellar/node/11.4.0/bin/node\" \"/Users/mayaben-ari/Code/uswds/node_modules/.bin/node-pre-gyp\" \"install\"\nnode-pre-gyp ERR! cwd /Users/mayaben-ari/Code/uswds/node_modules/canvas-prebuilt\nnode-pre-gyp ERR! node -v v11.4.0\nnode-pre-gyp ERR! node-pre-gyp -v v0.6.39\nnode-pre-gyp ERR! not ok\n404 status code downloading tarball https://github.com/chearon/node-canvas-prebuilt/releases/download/v1.6.5-prerelease.1/canvas-prebuilt-v1.6.5-prerelease.1-node-v67-darwin-x64.tar.gz\nnpm ERR! code ELIFECYCLE\nnpm ERR! errno 1\nnpm ERR! canvas-prebuilt@1.6.5-prerelease.1 install: node-pre-gyp install\nnpm ERR! Exit status 1\nnpm ERR!\nnpm ERR! Failed at the canvas-prebuilt@1.6.5-prerelease.1 install script.\nnpm ERR! This is probably not a problem with npm. There is likely additional logging output above.\nnpm ERR! A complete log of this run can be found in:\nnpm ERR!     /Users/mayaben-ari/.npm/_logs/2018-12-18T23_03_55_314Z-debug.log\n```\nIt looks like canvas-prebuilt is deprecated in favor of node-canvas.\n. I was able to use the older node with nvm, will update the issue title to focus on canvas-prebuilt deprecation so that this can be used with a newer node version when that is updated.. If we are going to go so close to BEM, then why not just go fully?. Was this resolved in #2904 or is there more work to do?. Closed in #2904.. Done in #2931.. Looks like there are some merge conflicts. Can you resolve the conflicting files?. @thisisdano in the PR description you write the current setting is $theme-global-content-styles: true, but in the settings file it's set to false. Can you clarify what the state should be?\n. Got it now, thanks \ud83d\udc4d . Any reason to have use for utilities and uses for grid or should they be the same?. Yes, I'd go with use.. Hi, thanks for opening this issue. We'll review this with our team and see how it fits on our roadmap. Stay tuned!. Removed top and bottom margins from some headings in 6930c03. The 1em margins on paragraph text that Chrome provides works out as it's what we use/recommend, but there probably should be another way to do this in USWDS so we don't rely on user-agent sheets as there's probably some variance between them.. OK, I noticed the manual visited link color is not appearing so I guess a change needs to be made on the docs site. Also, wondering if it's worth showing some of the hidden \"alt\" examples at some point.. I believe in one or both of these fonts, the font creators created a subset of the font for us, but I guess it's OK to start using the latest. Can you share what version of each you're using? . Here are the latest releases of each:\nhttps://github.com/adobe-fonts/source-sans-pro/releases\nhttps://github.com/EbenSorkin/Merriweather/releases\nThough I don't know what Google fonts is using.. @miguelsousa previously did some post-processing on Source Sans Pro in #802 #848 to keep them performant and a small footprint size.. Yeah, that's quite a difference. Also, noticed a lot of changed on Merriweather since the last release https://github.com/EbenSorkin/Merriweather/commits/master. Should we check with @EbenSorkin to see if he plans on cutting a release anytime soon?\nIs this ready to go in now? @miguelsousa and @EbenSorkin can always provide feedback.. @miguelsousa also created a dedicated repository for this project where he mentioned being able to publish updates whenever there was a new release of SSP. Is this something we should refer to going forward?. I checked and I think the 0.5rem left margin on those links may have been meant to be bottom or top? As it messes up the alignment now:\n\n. Closed in #2941.. Fixed in #2942.. Just noticed in a previous iteration, the heading aligned with the links:\n\nDid we want the same alignment or not?. Fixed in #2947. @stphnwlkr let us know if there are any other issues!. It seems to be working fine here: https://federalist-proxy.app.cloud.gov/preview/uswds/uswds/release-2.0/components/detail/search--default.html. If you use usa-alert without anything else, you get the proper spacing:\n\n. Probably makes sense to give usa-alert--no-icon the same spacing as usa-alert. . .usa-button--unstyled and .usa-list--unstyled make the most sense to me for consistency sake. . Looking through some classes that didn't seem to use BEM, this is what I found:\n\n[ ] .usa-button-unstyled\nTODO .usa-button--unstyled\n[ ] .usa-unstyled-list\nTODO .usa-list--unstyled\n[ ] .usa-input-error-message\nThis is within .usa-form-group. .usa-input is an element following this. Should it be .usa-input__error-message?\n[ ] .usa-input-label-helper\nThis is label text that is placed inside label text. Suggest .usa-label--helper? (duplicate of .usa-form-hint)\n[ ] .usa-input-label-required\nTurns text red, sort of a \"hidden\" class. .usa-label--required? Should it also add an asterisk?\n[ ] .usa-media-link\nis media-link its own component or a modifier of a link? e.g. .usa-link--media\n[ ] .usa-social-link\nis social-link its own component or a modifier of a link? e.g. .usa-link--social\n[ ] .usa-form-hint\n.usa-form__hint? (duplicate of .usa-input-label-helper)\n[ ] .usa-input-list\nThis is the list element that contains radio buttons and checkboxes, effects line-height\n[ ] .usa-content-list\nThis adds max-width that was previously used on list elements before we added max-width to them within usa-prose, previously a max-width was left out. Remove?\n[ ] .usa-font-lead\nSuggest usa-font--lead, usa-text--lead, usa-lead-text?\n[ ] .usa-dark-background\nCould also be .usa-background--dark\n[ ] .usa-footer-* ... TBD\n[ ] .usa-nav-* ... TBD\n[ ] .usa-mobile-nav-active\nthere is no mobile-nav class, this is sort of a one-off. but could be written .usa-mobile-nav--active. No, the form subcomponents don't need a form prefix, they can stand on their own. Consider reviewing https://design-system.service.gov.uk/components/ as an example.. .usa-media-link is a link that's an image (e.g. for logos).. What are the edge cases? Let's look at those and see how we can make it work. \n\nAs Harry Roberts mentions: \"Just because something happens to live inside a block it doesn\u2019t always mean is is actually a BEM element.\" And based on what others are doing (GOV.UK, Australian Design System and CMS's Design System), it seems it's taking further than it needs to. \nI think the current approach .usa-radio and .usa-radio--input is correct. And your suggested .usa-form__radio and .usa-form__radio-input is incorrect bc radio-input is not its own component and breaks the relationship between its actual component usa-radio.\n. Based on that list and a few others, here is what I suggest:\n| current | suggested\n|--|--|\n| .usa-input-error-message | .usa-error-message\n| .usa-input-label-required | .usa-label--required\n| .usa-form-hint + .usa-input-label-helper | .usa-hint\n| .usa-content-list | Remove\n| .usa-font-lead | .usa-intro\n| .usa-mobile-nav-active | .usa-js-mobile-nav--active\n| .usa-input-list | leave as is, or remove it and remove the <ul> element it's in\n.usa-hint and .usa-error-message could potentially have a prefix but could also stand on their own.. I think the ul was there to make it a semantic list but after looking around a few other places, it doesn't seem like it needs to be there.. Do you think .usa-intro is specific enough for the lead text? In that we won't have another component called .usa-intro in the future that would be something different?. I feel good about the naming overall, was just wondering if .usa-intro was the best name and wasn't too general to describe the lead paragraph.. Added the prefix in 380bf9a. No good reason I could think of not to have it.. All good, we can add that in.. Added in d09a4f7.. Support is there for everything except for IE11 which is the oldest browser we support. Though if they would get an acceptable fallback, I don't think that would be too bad. https://caniuse.com/#search=variable%20fonts. I agree that we should probably have documentation on the what Node version to use as well as nvm. Glad you got it working eventually.. @joekarasek If you're interested in contributing to version 2.0, which is where all our latest work is, use the release-2.0 branch.. I know @toolness also did something similar here: https://github.com/toolness/docker-uswds. Hi @miguelsousa, thanks for opening this issue. We'll review this with our team and see how it fits on our roadmap. Stay tuned! \nFor some history about the current choices: In 2015, different font combinations were tested with government designers and Merriweather and Source Sans Pro performed the best with them. So I don't know how likely it is we will replace Merriweather with Source Serif Pro, although there's a possibility it could be added as another serif option in addition to it. @thisisdano would be able to speak to this.. Done in #2964.. Fixed in #2965.. If this is just for testing on the uswds-site repo, why not add it there?\nDo we intend to redraw all of our icons? Would they be in addition to or replace Font Awesome?. Going to close this as it was fixed in #2952, but thank you for checking!. @juliaelman Sure! Can you show what you were thinking about adding in a variable for production and development here? The only thing I could imagine is a separate config for dev and production, but you mentioned there's another way.\n. Fixed in 222e2e7.\n. Fixed in b1830dd.\n. No we're not. Prism.css includes a font-stack for code: font-family: Consolas, Monaco, 'Andale Mono', monospace;. Should we just remove the $font-mono variable?\n. I would separate this out to two different files.\n. This has been moved out of our Sprint priorities, so I think this can be removed for now.\n. Fixed and removed in cbd823e.\n. Done in 8e55dbe.\n. Updated here so it's easier to use: https://github.com/18F/govt-wide-patternlibrary/commit/e05f7d179e5caa657775c09e5782249cdf8eec07\n. Where would we add this instead? In core?\n. Like $bold?\n. Can't see this issue, looks good to me.\n. the normal <a> tag has has a border-bottom and serif style, which needs to get removed for the alternate sans-serif link.\n. Good point and this was previously in variables, but just removed to put it in theme instead. I don't have an answer yet about what style should be considered a theme or variable, but we should think more about it.\n. Someone would just add another theme file to the themes folder to change their custom theme. Also variables does not contain any live code or styling, just variables. The theme files contain the implementation of variables or other customizations.\n. We're thinking of components as a combination of elements. They are more complex than elements. \n. I reverted this in 3412d7b as it was messing up the sidebar navigation. I think the original intention of lists being unstyled by default is sound, as sometimes you'll want a list to have semantic structure but not styling. \nMaybe we'll have to document using a bit of HTML5. Can you think of another way to do this? Use something besides an article? Use a class for styled or unstyled?\n. Structurally it's still an HTML element (a link), just with a variant styling. So I think it's fine to include with elements. I think this will add more confusion by separating it out from the default links. \nWe also have components for more complex things made up of more than one elements.\n. Added in 79dc573.\n. What if we utilize the cascade here so p a gets the serif link style and a gets sans-serif style? AND/OR we provide targeted classes like sans-link or serif-link.\n. This is good discussion around themes but we should move this to its own issue, outside of the typography PR.\n. That's what I was thinking unless you feel that it must be included here.\n. @mjovel @msecret Added unstyled-list class here: 322ba49. Lists are now styled by default.\n. Updated links in 66574b2. Links will be serif style by default. When parent is a sans-serif font, it will have the sans styling (.sans a).\n. I don't feel strongly either way about this. I wonder if it's easier to have the rule apply to all selectors. Like will the exceptions help or confuse people?\n. Fixed in d2f6ac5\n. Done in  d2f6ac5\n. We don't right now, but I was planning for the future, in case the primary active and secondary active states would look different. Like if someone chose different colors from what we have, so they may want more control.\n. @msecret in order to get multi-digit list alignment to flush left. See this issue: https://github.com/18F/govt-wide-patternlibrary/issues/42#issuecomment-118968237\n. @msecret what do you mean use \"the\"?\n. @msecret we already include the for attribute, it's not filled though. Do you mean to fill it like:\n<label for=\"input-type-text\">Text Input Focused</label>\n<input class=\"usa-input-focus\" type=\"text\" name=\"input-type-text\">\n. Done in a813549.\n. Done in 13a9109\n. This is just for now, the user can replace this with their own link. Using javascript:void(0) instead of # prevents it from jumping to the top of the page.\n. Done in 668c818. \nA little worried bc I couldn't find where I was using that to update there. \n. Since so much in the library is already using this class, we should resolve this in another PR.\n. Done in 73cb03c\n. :tada: \n. Yes that was a concern. What does href=\"@\" do?\n. Oh let me explain... If you remember we discussed adding left/right padding to our grid-box class so that content wouldn't run to the edge of the page. However, in this case, I needed content to run to the edge of the page bc the design dictates a horizontal line from end to end. So to accomplish this, I removed the padding from grid-box but then re-added it for the child elements.\nThere is probably a better way but this is what I came up with now. Let me know if you have another solution.\n. Done in f95cfd5\n. Done in 9ff7797\n. Done in 9ff7797\n. Done in 7919055\n. Done in 1cee138\n. Done in 1cee138\n. This seems to be overriding it and it's not working without chaining it :/\n.preview img {\n max-width: 100%; \n}\nIt's in styleguide.scss\nAny suggestions?\n. @juliaelman which line? the comment?\n. Done in https://github.com/18F/govt-wide-patternlibrary/issues/188\n. Done in c95670a\n. Update: We want to make sure we test so users understand that they can change the href to whatever they want. @carodew @colinpmacarthur \n. Changed to use hash (#) instead in 358bc2d\n. Done in e4c090b\n. Done in a772057\n. Done in 6ac9303\n. @msecret Open to adding or waiting too. Maybe it'll be more consistent to just add it tho.\n. Added in 62d22cb.\n. Bc other forms have a different width like one half on the address block. What do you think we should do for this issue?\n. Done in  b3cf166\n. Leaving as is after discussing there are multiple form widths.\n. Done in 01e9f01.\n. Done in c9e9546.\n. Done in 620980e.\n. Yes, done in 38ab4b6.\n. I don't think we need this class with the legend styling from the other PR in #205 \n. Good point. @meiqimichelle wrote it this way so I wonder if using something else, like a class, would be more robust.\n. Done in b41a36b.\nfyi, it's \nmargin: {\n  top:\n  ...\n}\nNeed the colon after margin.\n. Done in e2ffbdc.\n. I don't think we need a new line if the new selector is directly following the parent selector with no properties or directives before it.\n. sorry, that stands for screen reader. So the legend will be viewable to only screen readers and off screen for everyone else. I've put this class in utilities.scss\n. Correct. Would you recommend we remove it here?\n. Done in acfc87f.\n. Good point since it's used multiple times in the file.\n. @msecret do we want to a dash rather than an underscore here since inline is a modifier?\n. This was switched back in d677129 bc it caused issues.\n. Added in 82d5e0d, but values aren't working. They aren't being replaced.\n. Bc we are defining these default values on button[type=\"submit\"] in our button.scss file and it is not working without this addition.\n. Can you change the value to \"submit\"?\n. Thanks! Feel free to include the commit in the comment too, just so we can trace it.\nFor example, fixed in a2ce15e :)\n. Thanks... @blacktm can you update to use a dash here?\n. Resolved in 1cdfb56.\n. Done in 07bd6c6.\n. The width I defined in the second media query is not appearing when added inside the first. I tried putting it before and after the include and no dice.\nBasically the large button is not getting its larger width in large screen sizes.\n. As @msecret says... \"only when you have \"{ }\" do you need space after\"\n. Resolved in 546a4fd.\n. I think that any link style (non-button) element will want this margin, regardless if it's the last or not.\n. It seems like this could be potentially abstracted further into .usa-input-inline? What do you think @msecret @blacktm Is there anything unique to it being a button?\n. What are we considering \"search\" is? \n. Sorry didn't realize that's what you meant. Done in a46c293.\n. :+1: \n. if it follows a button the first one will. On it's own, no.\n. Adding margin to the right of the button might be a fix that could apply to everything.\n. Done in 4eb245f.\n. This will: 2844baa.\n. Added a more robust solution here: 14273bb\n. What about lists and spans? Should we add them too? I didn't catch them so added the wildcard.\n. Updated in 54fdb72.\n. Done in 6034a4b.\n. Done in 9e55d3d.\n. Updated in d34550c and implemented in f7b58f9.\n. Ok seems like it could be safer. Updated here: 66b4a4b.\n. Fixed in 8b6035e.\n. Sure, done in 6cb74bc.\n. Yeah it will look like this:\n\n. I'm not positive how autoprefixer works with selectors, I know it'll be able to replace the attributes.\n. http://caniuse.com/#feat=input-range\n. Removed in margin-right in 4effb07.\n. Fixed in 9a1f8a6.\n. Since it's plural, wouldn't it be: \"These web design standards are\" ?\n. @msecret Do you think there's any value for leaving in the grays?\n. Removed after discussion\n. I thought about this, and think that the present tense outline is better and more consistent with how we write up our classes.\n. This is based on the outline style, so where is the outline class?\n. Can you change negative to inverse?\n. Can you remove the inline style and move to the styleguide stylesheet?\n. The dark wrapper extends too long. Can you make sure it extends up to the third button, not the full width of the container?\nHere's the design:\n\n. Can you remove the focus and active state?\n\n. Can you add back in the button text which states it\u2019s current state (static, hover, active)? Without this, users will not know what the 3 colors are for.\n. Exactly, bc inverse button are reusing styles from outline button, we should have this clearly shown with the class names as well.\n. So as a user on the site, how do you know what state you're looking at?\n. @msecret I just talked to @angel and agreed to add the button states added back in. \nHere is a picture for reference to the previous state:\n\n. Also note, this is more consistent with BEM methodology, since inverse is modifier of outline.\n. What about the design do you anticipate changing? What we have should be the the final ones to my knowledge.\n. I understand you. I don't see why we would not include outline in the class bc it clearly indicates it is a version of outline. This will make the class more understandable.\n. Do we like the class -borderless or prefer something else (for example clean, alt, minimal, subtle)?\n. Does this mean we should add a wrapping div around all inputs (label + input) to keep this consistent and able to trigger an error message?\n. Sounds good! As long as we have it documented somewhere.\n. Shouldn't it be input-error-message (with a dash) since it's a different element below input-error?\n. Please add usa- prefix to all classes.\n. @msecret I'm fine with making this a class.\n. Why did we remove fieldsets and legends? Did you check with @nickbristow about this?\n. @msecret done in 4049bb3.\n. Done in efc8d91.\n. @msecret done in efc8d91.\n. @msecret do you think we should go through the library and do the same thing for all the places we've used the usa-unstyled-list class?\nI think this is much cleaner markup.\n. @msecret I think it's more than just a single field bc we have a button in the group as well. \nThese were previous approved by @nickbristow with fieldsets so if we're removing it, we need to run this by him and make sure it's ok.\n. Did nick say we don't need it for the search component?\n. Bc it's applied to the list class and we have sublists nested beneath it (children and grandchild). So thought we should mark this out (list vs. sublist).\n. This is the grandchild list, it's nested in 1rem more from the first sub list.\n. Done in a91ac42.\n. Done in 4de2865.\n. Oops, this was brought in on accident from the headers styles. Removed in 134cedf.\n. For the slideout to function? I didn't change this, just copied this from how it was already.\n. I added the mixin in https://github.com/18F/usfwds/pull/331 - so when that gets merged I'll add it here.\n. Correct, usa-site-footer is just for the styleguide, that's why I added \"site\". \nI think we are going to have special styles just for the styleguide so we should agree on a naming convention to identify that. The class they'll need to look at is when they're looking at the footer component and see usa-footer.\nDo you have another suggestion you think we should use?\n. I think I added it bc I wanted to style it later for mobile, but removing for now: 53a5246\n. Like this? e93153e\n. @jeremiak I agree that ideally we wouldn't need this. However, I've seen other pattern libraries that use *-library or *-styleguide to make this distinction, so I don't think it's true for every case. I would vote move forward bc it's crunch time and we can open an issue to change this when we have more time. \nAlso, note: we haven't done v2's of the footer yet so this could help.\n. Cool, ya I'll change it to *-styleguide. Will let you know when it's ready to go.\n. @msecret styleguide class added in 56f4a2e.\nMerge conflict resolved in 43418ae.\n. @msecret definitely, can u commit this to the branch?\n. Done in 7e25cbb.\n. @msecret This was to keep everything contained within the generateCodeSnippets function. Is this a problem?\n. @msecret done in 5f55e89.\n. The color was not one of our variables, but I'll check with @mollieru \n. I can add span too, which form elements? @msecret \n. yes, before scrollTop did this for us.\n. Confirmed with @angel to use $color-gray-dark - done in 717868c.\n. @msecret I added span in aea5292. If you let me know which form elements you think should be added, then I can add it as well.\n. @msecret the reason why font sizes are modified is bc there are different sizes when serif and sans serifs are the base fonts. \nI think the correct way to do this is provide a different typography.scss and variables.scss depending on which family they choose. This was just done for now and to get it up quickly, but let me know if you think there's a better way to do this.\n. @msecret are you saying we should add this class along with a:visited in typography.scss?\n. Or we can provide the correct values in the documentation for each font pairing?\n. oops, I thought this was a different question\n. @msecret Done in: dff445b.\n. @msecret they are, on line 143-158 of typography.scss - these are the unique \"other font pairings\" as well as \"robust\" style with the usa-lead-alt.\n. @msecret we need to add in usa-heading class to all <h3> headings in the documentation in order to get the blue heading.\n. @msecret they do two different things. They both make text bold, strong gives more emphasis. I think it's even read louder in screen readers.\n. @msecret re-added in f1489d0. Let me know if that works.\n. @msecret done in 2de6b93.\n. @colinpmacarthur why did we remove this heading?\n. @msecret this was added bc we were missing the search role on the search form. We cannot add the role to the form tag itself bc form has its own native semantics. This means we can either add it to the wrapper around or inside of form. The reason I didn't add it to the wrapper around it is bc we have grid classes and thought it would be hard to distinguish bc they may not want to use it, and shouldn't have to use the grid. See: http://adrianroselli.com/2015/08/where-to-put-your-search-role.html\n. So that the error message would be part of the legend. I followed gov.uk's example: http://govuk-elements.herokuapp.com/errors\n\n. Not sure, I didn't do it. Happy to move it though. Also I'm updating a few script things in a different PR so I can include the move there too. Qq: would this be the first in our scripts?\n. It's not in this PR but it's in our styleguide.css - we have the class used for the sidebar bc we need a different approach for IE.\n. @msecret this is the exact location where it breaks. Before it used the medium breakpoint and it broke to 2 lines. If we use the large it'll disappear too early. What breakpoint do you think we should use?\n. @msecret this was one of those \"styleguide-only\" styles and was done to accomplish this trello card: https://trello.com/c/cYuS0RJm/447-clean-up-typography-on-mobile-footer\nIt was added to style our super bare footer, which is only text. Are you saying add a note to switch to use classes instead?\n. @msecret fixed in 0b5a1df.\n. @msecret removed in  1f018ed.\n. That was for the error input. Do you have another idea we could use?\nWithout it, it looks like this:\n\n. @msecret I'm ok with using that, but from the view of someone looking to use this component, they'd see this: <div class=\"usa-width-one-half\" role=\"search\"> and I'm worried they'd think they'd always need to use a wrapper div. We could put this information in the documentation, but for someone that wants to \"grab and go\" the code I'm worried this information will be lost.\n. @msecret As of right now, yes, it is just for the styleguide. But when we get into bug testing, we may need this again as well.\nWhy would we need to tell users they need it to get the library working? I don't think they'd need this information. None of the components require it.\n. Ok switched to large breakpoint in: 63c557a. I think it's better if it disappears early than the bad experience of it breaking to two lines. People can always adjust this breakpoint to something that works better for themselves.\n. @msecret done in 5d180bd.\n. @msecret my view is that putting it inside the form tag is better practice bc it won't get messed up as easily. The wrapper div around it is more for layout even though you could technically add it there. I think the cost of having an extra div on the inside search form tag is less than the cost of someone missing it / messing it up bc they remove the wrapping grid div. I vote to leave it as is.\n. @msecret fixed in 5596f6d. \n. @msecret added to this PR: https://github.com/18F/usfwds/commit/849a3dde9cf1e66bb8b34613bfb5bc1b57be087a\n. @msecret I'm pretty sure legends can be used without a fieldset. It's just that if you use a fieldset, you must use a legend.\n. @msecret I wrote a different rule, to resolve this issue here: 5d94448. Basically adding this alternate font size directly to the error message class.\n. @msecret at this point, the components do not. It was a styleguide-only issue.\n. @angel we have a 1.7 line height now? Is that defined in our variables? Are we using this in the site?\n. @angel Then we should define this as a variable if we are using it. Is this in the default styles or just in a specialty font pairing?\n. @angel did we update any styles to use it yet?\n. @angel oh cool, are the style changes something we want to add in to this PR or a different one?\n. End-row has always worked. Last-child is giving us issues in old IE. Unless I'm missing something?\n. Agree, fixed in another PR: https://github.com/18F/usfwds/pull/452\n. Agree, fixed in another PR: #452\n. Actually I think what it is is we're not using the grid-item class. Is that right? If so, I can remove it.\n. @msecret Yeah the assets when it's all been packaged by us.\n. @msecret Good point. For visual style guide, it should link to that page. But for UI components, which page should it link to? Getting started? cc @carodew @colinpmacarthur @mollieru \n. Yes, this was a remnant form before we had disclaimer in there. Removed in d7c787e.\n. cta stands for \"call to action\" - it's the div around the call to action buttons that tells people to view the standards. Is there another approach you'd recommend to make sure it clears?\n. Removed in da62ef6.\n. This is the max-width needed to accomplish the design of the main banner text content. We are not using the grids bc we do not want it to flex and change the text per line as you update the width of the site. It needs to be the same width until it drops to a very small size.\n. @msecret We don't have any rules to remove the margin-right on the one-half grid item. If you remove usa-end-row, it breaks the grid to another line.\n. @msecret fixed in 144e745.\n. I removed usa-disclaimer in d7c787e from your other comment. \nSkipnav is not currently in the library site. It's in styleguide.scss, which we're not using on the homepage. And since we don't offer a header / navigation where we may choose to add it, it needs to be here again. Let me know if there's anything else duplicate that needs to be removed.\n. @msecret the only other thing that works is.. I can remove the container div and apply this to the button:\nclear: both;\ndisplay: table;\nWould you prefer this instead?\n. @mollieru wouldn't it be plural (i.e. Two levels, Three levels)?\n. @mollieru we're not numbering anywhere else on the site where we have multiple versions of a component. Why are we starting this convention? Shouldn't it be consistent with the rest?\n. There are reasons to use both... Using grids is good if you want all the items to be proportionate with each other. Using max width is good if you want it to have a more consistent experience and reading experience. For the banner and design, max-width feels more appropriate.\nIf I really want to use grids and have a good reading experience, I would use: http://fittextjs.com/, mostly for the heading, but that seems unnecessary and bloated for this case. And a good experience can be achieved with max-width, so that's why I think we should use it.\n. @msecret yes, done in fac1b17.\n. @msecret that is part of a link block on line 47 of index.html\n\nFor all of our blocks, the image and heading share the same link so if you click on the heading or image, it takes you to the same spot.\n. @msecret That's just meant to target the h3's on the dark section to achieve this design:\n\nThe other h3's need top margin.\n. It's how you get the alignment for the images and text.\nw/o:\n\nwith:\n\n. standlast represents any section that you want to call out with larger paragraph text.\nI got the idea from standfirst on future learn's pattern library: https://www.futurelearn.com/pattern-library/standfirst\n\"Standfirst is a short introductory paragraph used to draw attention to specific information related to page content. Standfirst is displayed in larger font size than body text, on Gainsboro grey background. It is typically accompanied by a relevant call to action button. The elements within the standfirst component are center aligned.\"\nBut since it wasn't an introductory paragraph, I changed it to standlast. I didn't want to call it \"contribute\" bc even though it is descriptive I thought it's too limiting. I wanted a way to make it more generic so it could be used for other things. I'm open to calling it something else though if you have recommendations.\n. Yes, it's for the links in the example sites that go to external websites. Without margin-bottom it is too tight.\nw/o:\n\nwith:\n\n. Yes, we do have lead text, but if you look at what the properties are doing, you'll see I'm applying a different style (margin and color) for lead text inside a dark banner background.\n. Using usa-grid works on the first two sections, but when I tried using it on the section with 4 things, this happened:\n\nSeems like the table is needed.\n. Agree, we just haven't built out any templates that would use this.\n. @msecret yes, removed in 0f86c14. This was made before we did typography, so an artifact from before.\n. Agree, it was before we had usa-text-small in the library. Removed in 6172b86. But keeping in the text-align: center; bc I don't think that should be component-wide, but just for the homepage.\n. @msecret I thought it was only if it was on a label, like the others. Do you think it is?\n. @msecret I don't feel like we should require people to use a new div wrapper. If either works without doing that, why not just go with it? Seems like it'll be a nuisance for simple layouts like the one I made. \nFeels like this is a situation in which we have to decide if we want to offer flexibility or strict rules. Is there any downside with the way I have it? I tested by adding a few more grids like the way I have it and it still works fine.\n. @msecret I found your comment, it didn't disappear. Anyhow fixed in a5ee334.\n. @msecret Check out the design below... We'll be adding in this external link icon, so that's why I think the name should be external.\n\n. Haha, point taken! Again completely random coming up with it, just my best guess for the time. If you think of something better tell me and we can change it.\n. You're right, they should be the same. One of those pre-typography artifacts again. The one issue is we define the usa-font-lead size as 22px in the library, but the homepage uses 20px.\n. Yeah, but this specific section has a unique layout from the rest, it just happens to be dark. I can add another class to the section and target it that way, but what would be a good name to describe it?\n. @msecret What name would we use to describe aligning the text flush to the image, so it doesn't wrap?\n. @msecret like we could call it \"Principles\" but that is so specific and won't be able to use for other things?\n. It's the way in which we're styling the images next to the text.\n. @msecret fixed in d1384db. I'm going with calling it usa-graphic-list which should be modular and easy to use for other things.\n. @msecret fixed in d1384db. I'm going with calling it usa-graphic-list which should be modular and easy to use for other things.\n. @msecret Fixed in 4c9e498.\n. @msecret updated in ca4e324.\n. @msecret changing the grids fixed this issue, so removed the CSS in: f686b3b.\n. @msecret .button_wrapper and .usa-button-block have different styles and uses so I would not reuse.\n. @msecret ok addressed in af8b02c.\n. @msecret I think that's a valid point and something to look at down the road. It looks good and works for now, and since we are also running out of time, I think we should move forward with this. Also I just checked both options with @angel and she said this looks fine for now.\n. @carodew for some reason I'm not seeing a duplicate SSN form on staging. I'm seeing just one.\n. Is it OK we're using sentence case for the heading but capitalizing the legend?\n. Ok I see it now :+1: \n. @msecret fixed in latest commits.\n. can you set the 1.7 as a variable in styleguide.scss?\n. This should be a variable.\n. Do we need to chain the .usa-font-lead to the p tag?\n. So I checked the visuals and the default one is 22px bc the default uses sans serif lead text. So I think this should be changed back and the 20px one added in styleguide.\n. @colinpmacarthur can you go through and remove the extra space at the end of the list before the closing </li> tag? I think your other PR has this a few times too.\n. @angel I removed the p and it still worked in f139240 and 203c245.\n. @angel I didn't realize we were using 1.7 for our default style, so I added it as a variable in _variables.scss + _defaults.scss in 3f26be6.\n. @angel yup I didn't realize we were switching to serif lead for our default. This is fine then.\n. Victor mentioned to me that it would only work if this was in the head.\n. @msecret I don't have a preference. It was just there before. Do you think we should remove it?\n. @carodew please put the closing </li> on the same line as the list.\n. @carodew same as above https://github.com/18F/web-design-standards/pull/521/files#r39451769\n. the indentation is off, please align with the others.\n. please remove the extra white space before the closing </li> and review all of your additions to make sure it does this.\n. This is not consistent with what's below - Sign-in vs. Sign in\n. indentation is off, please fix\n. indentation is off, please fix.\n. It should be two spaces for each \"tab\". Make sure you are using spaces and it should be fixed.\n. @colinpmacarthur shouldn't this be removed?\n. @colinpmacarthur should this be removed?\n. This should be \"more that four\" not \"four or more\". Four is still ok.\n. I would love to include something about this font being inspired by twentieth-century American gothics, which is significant bc it became a staple of almost every type foundry coming after. It's a very American thing we can highlight.\n\"Source Sans Pro draws inspiration from the clarity and legibility of twentieth-century American gothic typeface designs. Distilling the best archetypical qualities of these models, Paul followed a rational design approach by simplifying glyph shapes by paring them to their essential form. \"\nhttp://www.fontsquirrel.com/fonts/source-sans-pro\ncc @mollieru \n. Looks like there's an extra space at the end of sentences. can you remove?\n. Indentation seems off here.\n. This should be using 2 spaces for each tab.\n. Please remove the space before the ellipses.\n. This is should align with the first <ul>\n. @msecret good point, do you think we should store in variables.scss or the top of the buttons scss file?\n. @msecret done in c88892c.\n. inputs must have labels, please re-add.\n. inputs must have labels, please re-add.\n. inputs must have labels, please re-add.\n. Why does this have a period? It's not a complete sentence.\n. Done in cf5b185. Good call! Totally forgot about that class.\n. Why is there a period if this is not a complete sentence? @mollieru @carodew \n. Sounds like we're ok with the space before.\n. Lets use rems for anything more than a few pixels per the 18F coding styleguide.\n. please put a space after the :\n. Is this accurate? I think it's perfectly acceptable to style links like buttons. Buttons don't have href properties, they are more for actionable forms.\n. Can we keep this to \"View on Github\"? and then just put the assets in a link on the readme? The reason is this should be our main link to the repo so it's not needed. \n. @carodew I prefer your update which explains the difference between using a button vs link in the context of screen readers. This lets the user decide which is more appropriate.\n. Agreed. Done in 0f55741.\n. This is effecting the actual lists. If you need to change component-wide spacing, it should be done in list.scss. In general we should not be messing with elements in styleguide.scss.\n. Why are we changing fieldset margins in styleguide.scss?\n. Can you add a class instead? That would be a less global rule.\n. Prefer to use a class if we need to change layout bc of the styleguide. Unless it's a global rule. Then it should be done in typography.scss.\n. Can you break this out to: \npadding: {\n  bottom: something;\n  left: something;\n  right: something;\n  top: something;\n}\n\n. This should be in alphabetical order.\n. this should be in alphabetical order.\n. What does this effect and why do we need this?\n. I would say they should use our screen reader only class or mixin and move this into implementation.\n. Ah, yes it should. Done in 03f8e51.\n. @carodew actually should all of these have periods bc they are complete sentences?\n. Also are we referring to ourselves as a framework now?\n. @carodew done in 8dd5c23.\nAlso added in periods bc they are complete sentences in 62daed3.\n. Agree, done in 3d98b6e.\n. The class is usa-sr-only. The mixin is @include sr-only; both found in assets/_scss/core/utilities.scss.\n. @angel this is already set to 1.7rem I believe\n. MadeA - is this right?\n. @mollieru is this supposed to be pie?\n. Do we need to wrap these in <p> tags?\n. Ok no it's ok, thanks @angel!\n. I just removed the extra space - this was written previously. I believe 18F recommends using the Oxford comma. @awfrancisco will be proofreading tomorrow.\n. @angel can you indent this like the others?\n. @angel I think this should be lowercase. See @awfrancisco's edits to the home page.\n. @awfrancisco we need quotes here, bc jekyll requires this in frontmatter when there's a :. cc @carodew \n. @awfrancisco see my comment. Text with a colon requires quotes. They are removed as jekyll generates the page.Please re-add.\n. @mbland this link doesn't work.\n. @mbland there's no link here.\n. Needed to restart server, bc _config.yml was modified. This works.\n. Needed to restart server, bc _config.yml was modified. This works.\n. It doesn't hurt. Do you think it shouldn't?\n. Is there an official or best source to link for BEM?\n. @shawnbot added link to our resource in \"modified BEM\" in 34518c0.\n. Is it follow or follows?\n. Changed to follow in 4762fd1 after chatting with @awfrancisco \n. Yes in it official language. Will leave as is.\n. Done in c2fe237.\n. Let's ask @brittag \n. @mollieru the license needs to go in LICENSE as well, just like the others.\n. I don't think we want to add this Codekit reference.\n. Do we want to include any GA handler events in this? cc @colinpmacarthur \n. For our production site, we currently have two URLs: https://pages.18f.gov/designstandards/ and https://playbook.cio.gov/designstandards/. Should we state both? \n18F pages (https://pages.18f.gov/designstandards/) is the faster, more reliable one, but https://playbook.cio.gov/designstandards/ is what is publically known.\n. Updated to the publicly known one here: 6d3eb63\n. Do we need to change this below in \"repos\" as well on line 18?\n. @msecret would you want [name=\"password\", [name=\"confirmPassword\"] nested inside form?\n. > Also, does adding bottom margin to these two password inputs work in different configurations of form elements? Such as when you could have password inputs before another form element?\nYes, I just tried and since we have a default margin-top: 3rem applied to labels which go before inputs and since margins collapse it works fine. @msecret \nI think that a better method in the long run would be adding margin-top to the show password link. But we can just add a note about this to change later.\n. This PR was mostly about consistent formatting and didn't look at em vs rem.\n. The main goal of this PR was consistent formatting. I didn't look into deeply into rem vs em. In this instance, it could be that the actual checkboxes are rem bc it's more defined, but the margins are ems as it's more related to spacing in proportion to text.\n. A screen reader on a desktop would read it and on a mobile device would not. I don't know what the priority of the stage text is for screen reader users. \n. This rem unit is for the icon image, where as the rest applies for text. I don't think there's a need to have a huge icon if there's larger text. Correct, in this case the margin top would change depending on the parent text size.\n. @msecret it may be good to keep it in a form to ensure people markup forms correctly. We can always update the specificity issue later down the line, so going to go ahead with this for now.\n. @jeremiak can you change SASS to Sass?\n. @jeremiak can you change SASS to Sass here as well?\n. @msecret I just checked.. it's indented with the background property which is one level in from .usa-grid so I think that's correct:\n\n. @msecret Ooops, looked at the wrong line. Fixing....\n. Fixed in 5ccaffe.\n. Done in 5689832.\n. Done in 5689832.\n. @jeremiak: @alexose mentioned liking having pre-built files in the repo so people can clone and get started right away. He also mentioned D3 as a good example that does this. cc @msecret \n. @juliaelman I didn't put the IE version bc it effects all versions.\n. @juliaelman Yes all versions of IE, I explicitly tested IE9-11 and assuming it effects below IE9 as well.\n. @juliaelman actually, just checked and it doesn't effect IE Edge. I can explicitly state IE11 and below.\n. Updated in 0ed253d.\n. @juliaelman fixed in c9cdb5f.\n. @msecret Doesn't the @font-face declaration just specify what fonts can be used and how to use them and doesn't add page weight until they are declared in CSS? \n. @msecret can you remind me what was the convention with mixed short and long selectors?\n. I don't know if we should add a presentation class to our code samples.\n. @nickjs why is the SVG removed?\n. Agree, \"Jekyll Documentation Website\" is pretty wordy. How about \"styleguide website\"? Also, agree that we maybe don't need Gem in the title. Also we use sentence case on titles, so only the first word should be capitalized.\nLooping in our content extraordinaire, @kategarklavs.\n. Where's the minified version located?\n. Can this be sentence case? \n. Also @kategarklavs, any thoughts on how we should refer to the website (e.g. styleguide website, Standards website, etc..)\n. This content hasn't been created yet. One possibility is we could change this section in order to get it merged and then re-add this when we're ready on the WDS documentation site side.\n. In addition to CSS and JS, the assets include images and fonts.\n. Another alternative is to remove button and input from the selectors (may also help with specificity issues). @msecret what do you think?\n. #eeeeee is not the same as $color-gray-warm-light (#e4e2e0), so let's switch back.\n. I think this should be @include span-columns(4);  see recent change here: https://github.com/18F/web-design-standards/blob/18f-pages-staging/src/stylesheets/core/grid.scss#L36\n. Does this still need to be removed or was it meant to be temporary?\n. \"overwriting\" should be \"overriding\".\n. We aren't really changing the variables themselves, but the variable values.\n. @kategarklavs thanks! done in 8640af8.\n. Added backticks to uswds in 6436fe4 rather than capitalizing to match how we talk about it in the code.\n. I think @juliaelman meant to add the minified version in addition to the non-minified version here. Is that correct? I don't think she mentioned updating the example HTML to minified but just for this section.\n. I sort imagined this paragraph would go below the link examples. Thoughts @kategarklavs? I think it's also obvious that minified is .min so not sure if we need it?\n. This is talking about an individual navigation component, not UI components as a whole, so the UI is unnecessary, cc @kategarklavs \n. Markup is singular.\n. Yep, exactly! Actually, we don't even offer a navigation component _yet. I am wondering what this sentence is referring to? Unless it's offered in our design files already?\n. I tend to follow this guideline for adding in new variables (http://sass-guidelin.es/#variables) in which both criteria should be met:\n- the value is repeated at least twice;\n- the value is likely to be updated at least once;\nAre both of these being met?\n. Can you change this value to 3.2rem? We only use px for detail work when it's 5px or less.\n. What property order is incorrect?\n. Our coding styleguide places media queries directly after the declaration list (See: \"Order\" https://pages.18f.gov/frontend/css-coding-styleguide/format/). This media @include is treated as a media query. Can you move this after the declaration list and before the nested button:last-child element?\n. I think it makes more sense to keep this as it was before, since the vendor-prefixed properties begin with a dash and it keeps the ones that begin with letters together. This is what thoughtbot Bourbon does: https://github.com/thoughtbot/bourbon/blob/master/core/bourbon/library/_prefixer.scss#L19\n. This shouldn't be included in the PR.\n. No, actually it's a name \"Sojourner Truth.\" We are not displaying pies, it changed but the internal values didn't change along with it.\n. Overwriting should be overriding. \nNeed to tell them they should do this in their own custom Sass files and not directly in _defaults.scss.\n. Overwriting should be overriding.\n. This has the circle CI updates that came after this branch was created.\n. Yes, it accounts for that. This only looks at the size of the button not text, it will always be centered.\nHere I made the text way bigger and it's still centered:\n\n. \"PULL REQUEST\" should link to the GH page.\n. What is [Website]?\nMaybe [UI components] should be singular since an issue would be about a single item, i.e. [UI component] cc @kategarklavs \n. Using <!-- ... -->  doesn't do anything in the markdown file. Maybe this should be marked up in another way, like the quote style, i.e. >Some text...\n. Makes sense! I just wanted it to link to something rather than just being text. Also didn't see your message before I posted.\n. @rogeruiz On second look, I think I'd prefer if the line was more actionable to what you're doing, like: Open a PULL REQUEST (link to new PR) and follow the template outlined. cc @kategarklavs \n. Same as below - if it links to a new issue the text should say \"Open a new ISSUE (link to new issue) and follow the template outlined.\" or if you want to actually link to the issue template page, then make sure the text says that's where they're going.\n. @kategarklavs thanks!\n@rogeruiz I think what was throwing me off is the \"[Website] - [UI components]\" both being together on that line. I was thinking that I needed to replace \"website\" with some website, and \"UI components\" with the component I opened this about. If it were just one it would make more sense, bc I think that's what we intend people to do. Maybe it should be more generalized? [name of issue] OR just use [UI component] bc I think that's more likely and more important than the website itself.\n. I think that makes sense, so we wouldn't need to tell people to remove that line then, if it will be hidden from view anyway, right?\n. Or other?\n. Fixed in 766543b.\n. Fixed in 22db757.\n. is this an extra line? @msecret \n. Sorry this is so late @kaelig -  :focus state for links is defined in src/stylesheets/elements/_typography.scss.\n. I somewhat agree with @scshepard that the goal should be to keep the explanation simple, that it means to start with functionality (a solid core of HTML) and add enhancements (CSS and JS) to the experience. And that you're not providing the same experience to everyone. The language around client-side servers obfuscates the meaning to me.\n. Josh, I'm getting the same thing. My comment keeps disappearing and\nreappearing. Looks like github is having some issues today!\nOn Mon, May 23, 2016 at 9:02 AM, Josh Bruce notifications@github.com\nwrote:\n\nIn docs/pages/getting-started.html\nhttps://github.com/18F/web-design-standards/pull/1184#discussion_r64244730\n:\n\n@@ -52,6 +52,12 @@ For developers\nThe standards are designed to support both older and newer browsers through progressive enhancement, and officially support Internet Explorer 9 and up, and the latest versions of Chrome, Firefox, and Safari. Internet Explorer 8 and below generally see very low usage today, and most agency websites should be able to safely begin support at Internet Explorer 9.\n+Progressive enhancement:\n+\n+Progressive enhancement is a web design and development strategy emphasizing accessibility through semantic HTML markup. Semantic HTML allows older browsers to present the content of a document to users. The semantic markup is layered with external technologies to enhance the user experience (specifically, CSS and JavaScript), without necessarily effecting the underlying funcitonality of the document and site.\n\nCommenting via email reply. Getting booted every time I try to sign in.\nAlso, every time I try to update the PR via branch commit - the PR is not\nupdated.(\nhttps://github.com/edx/edx-platform/wiki/How-to-Rebase-a-Pull-Request <\nhttps://github.com/edx/edx-platform/wiki/How-to-Rebase-a-Pull-Request>).\nThis was the same workflow used for the aria-hidden PR we did for #1160\nhttps://github.com/18F/web-design-standards/pull/1160 (#1160\nhttps://github.com/18F/web-design-standards/pull/1160). So, I\u2019m\nwondering if, for some reason, the inline notes are causing an issue\nsomehow. Or, if it is strictly a problem with sessioning - and the service\nproblems they are experiencing: https://status.github.com Anyway. Have\nthe changes made. They are queued. Now, we wait, I suppose.\n\u2026 <#m_-1873645326641936713_>\nOn May 23, 2016, at 10:54 AM, Kate Garklavs _@_.***> wrote: In\ndocs/pages/getting-started.html <#1184 (comment)\nhttps://github.com/18F/web-design-standards/pull/1184#discussion_r64236503>:\n\n@@ -52,6 +52,12 @@ For developers > > The\nstandards are designed to support both older and newer browsers through\nprogressive enhancement, and officially support Internet Explorer 9 and up,\nand the latest versions of Chrome, Firefox, and Safari. Internet Explorer 8\nand below generally see very low usage today, and most agency websites\nshould be able to safely begin support at Internet Explorer 9. > >\n+Progressive enhancement: > + > +Progressive enhancement is a\nweb design and development strategy emphasizing accessibility through semantic HTML markup. Semantic HTML allows older browsers to\npresent the content of a document to users. The semantic markup is layered\nwith external technologies to enhance the user experience (specifically,\nCSS and JavaScript), without necessarily effecting the underlying\nfuncitonality of the document and site. Also! Noticed that\nfunctionality is misspelled \u2014 please update! \u2014 You are receiving this\nbecause you were mentioned. Reply to this email directly or view it on\nGitHub <\nhttps://github.com/18F/web-design-standards/pull/1184/files/a754fd75d31c84c48e82a6d67823100392c7968e#r64236503\n\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly or view it on GitHub\nhttps://github.com/18F/web-design-standards/pull/1184/files/a754fd75d31c84c48e82a6d67823100392c7968e#r64244730\n\n\nMaya Benari\nInnovation Specialist, 18F http://18f.gsa.gov\nmaya.ben-ari@gsa.gov\n. Looks like this can be margin-left: 0\n. It's actually margin top and bottom: 0, left and right margins are not effected.\n. What if they use a different heading, should we allow this or keep it strictly h4?\n. Fixed in a7e8b2c.\n. Fixed in a7e8b2c.\n. @msecret removed the h4 dependency here: 1971c99\n. What about what's done here: https://github.com/frend/frend.co/blob/gh-pages/_components/accordion/accordion.css\nhttp://frend.co/components/accordion/\n.usa-accordion-content[aria-hidden=\"true\"] {\n  visibility: hidden;\n  height: 0;\n}\n. @joshbruce you're right, there may not be any benefit to the visibility: hidden method, that I could think of. We'll need to do more research. Anyhow, I tried a simple, classless method here: #1196. I'd like to hear what others think.\n. This says \"aria-hiddent=true\" - there is an extra t.\n. @msecret I'd be careful about calling it .hidden, so it doesn't get confused with the hidden attribute. Although that might have been just an example or it might be ok?\nAlso not sure I'd call the mixin aria-hidden either bc its not the true function of aria-hidden, just a special use case for this situation. Curious to here what are the benefits of using the mixin is too. Are we reusing this somewhere else?\n. @msecret: @joshbruce explained the benefits of the mixin in #1196:\n\nTo allow developers to @include within any class or element; thereby, allowing any element to opt-in to being toggled based on aria-hidden state based on CSS\n\nMy question is the same: do we see this as a common pattern/use case?\n. @yozlet our release branches follow the v0.9.x naming convention, 0.9.2 is used for tags and releases.\n. @joshbruce can you change the mixin name to accessibly-hidden?\n. Because the white background will override the gray table header unless this is changed to th.\n. Looks like screen reader is non-hyphenated: http://www.freedomscientific.com/Products/Blindness/JAWS\n. imited should be limited?\n. Removed that and the remaining <br>s in 2d81e6c.\n. note to change value\n. Done in b426683.\n. It's a little bit more complicated of an approach. \n1.) It would mess up button-styled anchor links without some kind of reset on them.\n2.) We'd have to figure out the best way to manage the user's domain in [href^=\"http:\"]:not([href*=\"my-domain.com\"]) which I was not really sure what approach we wanted (e.g. a Sass variable, etc..). I was thinking we could always enhance-up to this option. \nIf someone doesn't want this style, there's no easy override either. That's why I made it opt-in with a class and instructions on how to use the other approach.\nWhat do you think?\n. Fixed in 9e4becb.\n. Fixed in c50fa2b.\n. My thinking was that usa-input-inline-error would be added to the input with usa-input-inline so it would already have the width style.\n. Did you test it with this code?\n```\n\n\nDate of birth\nFor example: 04 28 1986\n<div class=\"usa-date-of-birth\">\n  <div class=\"usa-form-group usa-form-group-month\">\n    <label for=\"date_of_birth_1\">Month</label>\n    <input class=\"usa-input-inline\" aria-describedby=\"dobHint\" class=\"usa-form-control\" id=\"date_of_birth_1\" name=\"date_of_birth_1\" pattern=\"0?[1-9]|1[012]\" type=\"number\" min=\"1\" max=\"12\" value=\"\">\n  </div>\n  <div class=\"usa-form-group usa-form-group-day\">\n    <label for=\"date_of_birth_2\">Day</label>\n    <input class=\"usa-input-inline usa-input-inline-error\" aria-describedby=\"dobHint\" class=\"usa-form-control\" id=\"date_of_birth_2\" name=\"date_of_birth_2\" pattern=\"0?[1-9]|1[0-9]|2[0-9]|3[01]\" type=\"number\" min=\"1\" max=\"31\" value=\"\">\n  </div>\n  <div class=\"usa-form-group usa-form-group-year\">\n    <label for=\"date_of_birth_3\">Year</label>\n    <input class=\"usa-input-inline\" aria-describedby=\"dobHint\" class=\"usa-form-control\" id=\"date_of_birth_3\" name=\"date_of_birth_3\" pattern=\"[0-9]{4}\" type=\"number\" min=\"1900\" max=\"2000\" value=\"\">\n  </div>\n</div>\n\n\n\n```\nRe: cleaner - I think it depends on how people end up implementing it. It might be easier for people to add a new class rather than remove usa-input-inline and add usa-input-inline-error. It also stays consistent with the usa-form-group usa-form-group-month pattern above. Something we can test later on too.\n. Let's pair on this to see where the problem is happening, bc it looks like the image here https://github.com/18F/web-design-standards/pull/1251#issuecomment-225316504 with the above code on my machine.\n. I don't think we need variables. We only use variables if the value is repeated at least twice and the value is likely to be updated at least once. Can you remove?\n. 1. Use the use the sr-only() mixin instead of usa-sr-only class so it's even cleaner.\n2. Can you please indent these? Like this:\n<a class=\"usa-social-link facebook\" href=\"#\">\n  <span class=\"usa-sr-only\">Facebook</span>\n</a>\n1. Update usa-social-link to usa-social_link\n2. Update facebook (and others) to usa-link-facebook\n/cc @msecret \n. This can be moved into the rule above.\n. Is there a reason we're using 4.5rem instead of 4.4rem - which is what Apple defines?\n. @joshbruce yeah I was talking with @msecret and actually think .usa-social_link-facebook is technically more correct, but he said it was implied / not necessary.\nI don't have a problem with extends in this instance.\n. The medium size is the default search size, so we do not want an additional class for it. Can you remove this and style usa-search directly?\n. I'm OK with keeping $hit-area for that reason, but would remove the rest. \nCan we add a more descriptive comment on it:\n\nLink hit target is 44 x 44 pixels following Apple iOS Human Interface Guidelines\n. Remove extra space.\n. Remove extra space.\n. I mean background-size: auto 3rem; is repeated across all the social links so should go in usa-social-link class or in the extend if that's what we're using.\n. This is a styleguide-only change so should be in docs/doc_assets/css/styleguide.scss.\n. @kamxhmartin @juliaelman this was incorrectly added.\n. Remove this line break.\n. Can you move this code block to https://github.com/lmarkzon/web-design-standards/blob/66f49a4c860a594b6780f455c5b578df567dbd4c/docs/doc_assets/css/styleguide.scss#L284 so it's within the \"Styleguide content\" section?\n. Can you change this value to 6rem?\n. Add one line-break here. All of our files should have an extra space at the end of the file.\n. @rogeruiz I updated the scroll location to pick it up at the right spot (it was 50px short before or activating at the end of the secondary nav instead of the beginning (expected)), but it doesn't scroll back up properly. We need site-navbar to show again after scrolling up.\n. It must be a github thing, just checked this out locally and looks correct. \ud83d\udc4d \n. Since the link's text is \"Github repository\" I think it should stay the repo URL or main issues page, but we could link to a new issue on \"Create an issue\" since it's an action phrase. What do you think @kategarklavs?\n. What's the rationale of having two font sizes in the same ruleset?\n. @kategarklavs perhaps! what we're trying to say is they can change whichever variables apply to them for their project's needs. Does \"relevant\" infer that?\n\nAlso, what do you think about modifying \"copying _variables.scss\" slightly to: \n\ncopying the _variables.scss file...\n\n?\n. This should use the font size variable.\n. Should not use new class .usa-search-medium, should use default search class.\n. This should use the font size variable.\n. To keep it relative to the font size of the list: a bigger font = bigger padding.\n. Same as above: to keep it relative to the font size of the list: a bigger font = bigger padding. This is not an alteration, it's in the existing code already: https://github.com/18F/web-design-standards/pull/1375/files#diff-b0ad9f3afcfe47290d1cbd0e2a40274aL56\n. We had margin: 0 before (https://github.com/18F/web-design-standards/pull/1375/files#diff-fced6c74fbf3140d02e92fd710e888eeL31), when actually the only margins added in the list was top and bottom. We do not need to declare margin=0 on the left and right.\n. Note: it's not undoing our margins (we did not add any margins for uls), but webkits margins. You'll find:\n-webkit-margin-before: 1em;\n-webkit-margin-after: 1em;\napplied to ul in the user agent styles. Which makes me think, should we add these in to be more explicit?\n. Right, I wasn't suggesting adding -webkit-margin-before: 1em; ourselves. I meant should we add margin-bottom: 1em; ourselves, since webkit is already doing it + to make it more consistent across browsers. What do you think?\n. Done in 46a01a7. This will make it more consistent across browsers and match our paragraph text margins.\n. @rogeruiz should we remove this?\n. That is for the styleguide site header.\n. It's where the go to back to the site link is located on the demo page.\n\n. I think it's OK, and that we could do the removal of jQuery in another PR since we are waiting for #1357. cc @rogeruiz @yozlet \n. This is changed to have a centered grid rather than the disclaimer links floated to left and right. \n. No, we are not. It's all manual so far. \n. em is the HTML element for logos that are text, which is what they should semantically use.\n. Not for spacing but for breaks on the logo text: on desktop the logo text is on two lines and on mobile it's on one line.\n. It's not related to all buttons but a button on the mobile header component so I don't think so. buttons.scss is used for the button component https://standards.usa.gov/buttons/.\n. Same as above. We don't have a z-index system in place. Ideally, we should do some research on different z-index management systems and then choose one: https://www.google.com/webhp?sourceid=chrome-instant&ion=1&espv=2&ie=UTF-8#q=css%20z-index%20system\n. The only time you want to use antialiasing is light text on dark background which is what this is here. Sure we can add a comment. \n. It's the same reason above which is light text on dark background which comes into play on the active state of the button (white text + dark blue background).\n. I think it should: the container \"secondary links\" implies everything inside is a \"link.\" But if you can think of a good reason not to and another approach, let me know.\n. It's not a repeat of anything else. It's the button that hide/shows the search form, which is only present in the header component.\n. Here's the accordion code: https://github.com/18F/web-design-standards/blob/staging/src/stylesheets/components/_accordions.scss#L24\nThe only thing I see that's the same between them is background-repeat: no-repeat;\n. No reason in this case. Fixed in dc2235f.\n. Fixed in ed49e5f a271ec8.\n. nav is all the navigation links. navbar is no nav links. It's the extended div the logo is in that makes up the navigation bar on mobile.\nHere's some screenshots of it in mobile + desktop:\n\n\n. I'm wondering if this was just a rebase error that mashed the old accordion code with your refactor PR? I can't remember changing these.\n. I don't know what this does. It was code carried over from the site: https://github.com/18F/web-design-standards/blob/bd6f4a1c776eab2ff2565040a532423689fec3ac/docs/doc_assets/css/styleguide.scss#L267\n. Ooh I found it here: https://developer.mozilla.org/en-US/docs/Web/CSS/-webkit-overflow-scrolling\n\ntouch\nUse momentum-based scrolling, where the content continues to scroll for a while after finishing the scroll gesture and removing your finger from the touchscreen. The speed and duration of the continued scrolling is proportional to how vigorous the scroll gesture was. Also creates a new stacking context.\n\nhttps://css-tricks.com/snippets/css/momentum-scrolling-on-ios-overflow-elements/\nSays it's non-standard. I think we should remove it.\n. Removed in 8e56e89.\n. Since it's used in multiple places in the repo, do you think we should still add a comment? Sounds more like a repeated pattern.\n. Added the simple approach here: 8a92a09.\n. Nope, fixed in 34790e2.\n. Removed in 8fdc4fc.\n. There's a bit too much interaction between the header code and nav for it to make sense to put it in a separate file.\n. Added in 1503b53.\n. Not sure if it's worth it bc I assume we're going to add postCSS for vendor prefixing, so we'd just have to change it and now we'd be making a mixin that we know we'll be deprecating.\n. I'm going to add more info in our documentation: https://docs.google.com/document/d/1zMNdp5UqJlMUWmDOboirop2kBMg5U50cOfSOajA_Vt8/edit?disco=ou2agy5g7l5u\n. The nav and header are pretty entwined so not sure if we can accomplish this by separating files. I added additional comments to break it up and label the parts in: e6e4222. Does that help make it clearer?\n. If flexbox doesn't work, it reverts to non-flexbox view which is just a different order of the search box to nav links on mobile. Since it functions, I think this is an OK degradation that's in line with progressive enhancement.\n. Done in 70cdf7f.\n. It's to use the same code as our new headers.\n. tl;dr there\u2019s a lot going on with the headers. I recommend that we revisit this idea with validated user research. Implementing this is not something we shouldn\u2019t do (I even have a couple of ideas), but only that it\u2019s not as easy as it seems right now.\nNow for the longer bit...\nWhen we talk about the nav, it\u2019s important to understand the foundation of the component and code. All navs start out the same: they\u2019re essentially constructed as a mobile slide out nav and everything within it. This mobile nav then gets transformed into a horizontal oriented nav at large screen sizes, either the inset basic header or the extended header dropped below. It\u2019s a single unit that functions together.\nAlthough the markup is distinct, the functionality (i.e. responsive interaction via Sass) is interwoven. All these distinct pieces are orchestrated together in the stylesheets. The responsive behavior happens in the same code block, selector by selector.\nSee lines 6-9, you\u2019ll see three z-index variables for the header. Keeping them together ensures this is easy to manage and people know what is doing what and can find it in the same place. Splitting them apart would be confusing to manage. We wouldn\u2019t put them in variables file bc they\u2019re not global variables but scoped to the header.\n\nThis might help in creating the ability to using each of these sets of styles are their own. For example, we could possibly run into issues when want to use nav specific styles in another component, but are required to either remove or incorporate header styles.\n\nBefore drawing to conclusions, I\u2019d want to ask @ericadeahl. Has our user research validated this need? Do we have evidence of people wanting to use the navigation in another component that's not the header?\nUsing a header with a nav, and then a nav again somewhere else on the page will cause conflict bc the code is a mobile nav and that would overlap with each other.\nOn desktop, We use a custom variable $nav-width, if you\u2019re using the header and then you want to use the nav for another use case, you can\u2019t change this variable to something else. They will be the same, but you don\u2019t want them to be the same, you\u2019d want to be able to control the width for your use case. The current code doesn\u2019t support that. You\u2019d have to re-copy this code and then add a new variable, you can see this variable is used many times throughout the code.\n@juliaelman @msecret \n. @msecret not yet. \n\nas it is a styling element within itself\n\nWhat does this mean? em is a semantic element which has emphasis?\n. Adding a class in: f9bb134.\nAlthough by applying this to the semantically correct element which we want people to use, the em, we don't have to enforce this.\n. Removed in f224300.\n. Fixed in c39c6dd.\n. Fixed in a1401288ab1a1457e8dd6974d15473507cbfba4c along with 2 other un-optimized SVGs.\n. @msecret there's no _disclaimer.scss file anymore, this is gone.\n. @msecret I think this was commented on an old version of the PR. The new work is in _banner.scss and this code doesn't exist.\n. @shawnbot @juliaelman @yozlet thoughts?\n. Added in 2e5da47. @yozlet @shawnbot \n. @shawnbot would you happen to know?\n. In order for the accordion behavior to function, it needs this.\n. Do you mean are we adding a comment anywhere else in our examples?\nNo, we're not, but it might be a good practice to do so for complex components made up of many components. It could help add more clarity to the code. I appreciate how Google Material Design Lite does this: https://getmdl.io/components/index.html#layout-section\n\nThey might wonder if the skipnav above this line is also part of our example code.\n\nSince it all gets added to the code sample, I think they'll be able to see the entire snippet and know it's all together. \nAdditionally, we've not heard that concern from users before. We've actually heard the opposite, that it's hard to read/confusing when the snippets are too large (at least that's what I remember hearing from the listening tour).\n. No reason, updated in 48683f0.\n. Since this is the web-design-standards repo, you shouldn't need a link to it (you're here!). We should probably link to the web-design-standards-docs repo instead.\n. So I'm not sure if this is needed, or if it is maybe it should be stated differently bc it deals with utilizing the docs repo. Linking to that repo by stating something along the lines of \"run the docs site\" and linking to that repo may be enough.\n. Fixed in d5d9a59.\n. This is the HTML that people will download and use and we have not used {{ site.baseurl }} bc it needs to be framework agnostic, not jekyll-specific.\n. Same reply as above.\n. Yes, I like either of those, but I'm not sure if we can make that fix in this PR since it is a separate component, the footer, and this PR is more about the implementation of existing components. Instead, maybe we can open an issue around refactoring the footer so the next team can address it when they work on footers? What do you think?\n. I see what you mean. The usa-graphic_list-item is a row of media blocks. Happy to change it if you think \"row\" is clearer than \"item.\" I abstractly use \"item\" sometimes to refer to a single instance of \"a thing\" and see how it can be confusing.\n. Ah cool, I did not know it gets parsed out. If that is the case I'm \ud83d\udc4d to add it in.\n. Added in 2d18e1c.\n. Added in 2d18e1c.\n. That's good to hear the this is a common term in those frameworks. Updated in 9d45db9.\n. Hi @jasonkaedingICE, thanks for your question. I'm going to cc @juliaelman from the core team to help you with this as I have moved to a different project.. There should not be spaces here per the 18F front end guide which this project follows: https://frontend.18f.gov/#order @msecret @toolness . @msecret if you're thinking of this comment https://github.com/18F/web-design-standards/issues/1753#issuecomment-306972426 it wasn't about that it shouldn't be vertically centered, it was that not aligning the hover bar to the baseline was a design decision, not bug (although some designs may want this style). I often use a short header with the nav vertically centered. I've seen some designers align it to the top of the logo tho, different designers may want different treatments, so it may be good to account for this and allow for a bit of flexibility.. Can we use one of our line height variables for this? https://github.com/18F/web-design-standards/blob/develop/src/stylesheets/core/_variables.scss#L24-L26. This rem(24px) mixin technique was removed from use in https://github.com/18F/web-design-standards/pull/2006 due to Bourbon deprecation and loss of support in Bourbon 5.0, so I think we shouldn't use this.. When I use $heading-line-height or 1.3, it seems to have the same effect / doesn't change the size, so maybe we can stick with that?. @thisisdano also, can you add a zero before the decimal, so it's 0.35em?. In the future, is the top and bottom borders something we'd like to do in desktop as well or only mobile?. The negative left and right margins are contextual related to the space of it's parent container, specifically it's dependent on being inside a usa-grid that provides the margins. For this reason, I think it may be safer to make this relationship explicit in the code, i.e. .usa-grid .usa-sidenav-list for the negative margins. What if a user isn't using our grid?. This also removes left and right borders, even though there's no left and right borders present. Can we be explicit with border-top: none and border-bottom: none?. When I removed this code and it didn't have an effect on the margins because the top and bottom margins are already removed in the $medium-screen media query above. Can this be removed?. Is the left padding of $site-margins-mobile something we want across all sizes or only mobile screen? The current sidenav has a slightly larger left margin and want to make sure.. I don't know if we need to add this at this variable at this point, but maybe could think about it in the future. I'd want to have have a bit of research to back up what people are needing from a variable for this border and then determine where it should live (in variable.scss etc...) and documentation for it. The name $current-link-border implies the entire border value (0.4rem solid $color-primary;). If it were just the width, I'd expect the name $current-link-border-width. . @thisisdano for this new variable, a few things....\n- Each variable section's values should align, here it extends past the other values.\n- Is the variable applicable to more things besides the sidenav (or will be in the future)? \n- Would it work to call it $current-border-width or do we need highlight?\n- I think we can remove the comment \"// must be in rem for math\" bc many other variables are in rem and we don't state this. Can you add this comment here on line 115 (above this rule): // Ensure browsers that don't support SVG in background-image (IE 11 and below) fall back to PNG. See https://www.broken-links.com/2010/06/14/using-svg-in-backgrounds-with-png-fallback/. ?. @donjo minor thing: I don't know if it's documented but I think we try to do a 80 character limit for the code rule. Could probably drop \"See\" to another line.. Fixed in 2f2aee4.. Fixed in 2f2aee4.. Should this be removed (or added to)?. @thisisdano mentioned he needs to change the color names, so this would need to change.. Why is it 50% and not 100%?. Can you add a <caption> as the title giving a brief description of the table? See: https://webaim.org/techniques/tables/data#caption. In various places: can you add the appropriate scope attributes to identify your headers? See: https://webaim.org/techniques/tables/data#headers. For the JS file, I tried leaving it in the  src/js/components/ folder and added an underscore to the file like this:  src/js/components/_chart.js. The Sass files all have underscores already which is why I moved it into the src/scss/_experimental folder.. I'm testing other text elements (e.g. headings and lists) to ensure resilience and flexibility in the accordion panels, so keeping the text in the config for now.. Do we like this class name?. Should we add the required attribute like we do in the name form to be consistent?. Could also be -note, -info - open to something better.. Yes, required is red and helper is gray. . In my description above: \"Remove the line about using npm if you want to use Sass bc we provide Sass files in the zip.\" so if you want Sass you can use the zip file too.. Ah, I see... Yeah that is confusing. We could add the Sass info in the main Download section. What's confusing is that there's more general Sass info in the npm Sass section.. Added a line about it here: 5b4e81d.. note for future: these should probably be variables.. Please align values.. is it this https://github.com/uswds/uswds/blob/release-2.0/src/stylesheets/core/_functions.scss#L96 ?. I'd probably remove the md files docs from this example code as their not super vital and we're not showing everything in the folder in this example anyway. . For 2.0, we're IE 11 and up, so could remove 9 and 10.. Adding a form element was the only way to test this, i.e. to get the autofill to show up on the fractal site. Do we want to keep this in or remove?. Added in a2c60bb.. Yes, but in 2.0 bc this is going in develop. This attribute selector is already in the code so would be a breaking change if we changed the existing behavior.. I was wondering this too so I spoke to some people in the Design Systems slack about this and the consensus seems to be to double class it. tl;dr it seems to be more maintainable. See comments after this: https://design-systems.slack.com/archives/C0ENULNQZ/p1533067442000463. We can use theme.. See answer above.. See answer above.. Yes, browsers are weird. Feel free to check when you have time.. Done in a91cf05.. Fixed two class attribtues issue in cb7f266.. Yeah, we should add any notable changes to 2.0 in https://github.com/uswds/uswds/releases/tag/v2.0.0-alpha. Why does this use $theme-site-margins-mobile and https://github.com/uswds/uswds/pull/2668/files#diff-f387466a429ac4e7ace4438ebb06393bR19 and https://github.com/uswds/uswds/pull/2668/files#diff-d44185fbb54964385b1a02ae836e77efR8 uses $site-margins-mobile? \nWhen would you use $theme-site-margins-mobile over $site-margins-mobile and vice versa?. These values should all be unitless to scale with font size. Can you change this back?. Add a leading 0 here, since that's what we follow in our Sass coding styleguide and should apply to mixins as well.. Should be single quotes.. @el-mapache Should describe.only('my spec')) be in code ticks ie describe.only('my spec'))?. @thisisdano shouldn't this be @else if not @elseif? http://sass-lang.com/documentation/file.SASS_REFERENCE.html#control_directives__expressions. @uswds/core Since we disable this for @else, do we want to put these back to how they were? . or should we leave them for consistency, looking through some instances here, I see we wrote them both ways.. @thisisdano in this PR or a separate one?. That works for me, approved!. Done in 9f10773.. Why don't these have the '#{$theme-color-primary-family}-80v' pattern? Aren't we overriding them in the theme file? Wouldn't that be more abstracted / reuasable to keep these clean and consistent?. Same as above: should this be '#{$theme-color-accent-cool-family}-60v' and overridden in the theme file?. This section's alignment is off.. Done in a53e271, but I didn't do uppercase in the beginning bc I didn't see text-transform listed in the documentation: https://v2.designsystem.digital.gov/utilities/text-styles/#utility-mixins. Done in fe3ca1e. But also it wasn't clear we could do this from the documentation. Or would it be better if it was: @include u-font-size('body', 'sm'); (I cant tell what body size should be bc it says body is Merriweather in the docs, when it should be SSP)?. y padding was 10px before, thought that looked better, what do you think about 1.5?. what function do we use for font-weight?. Should I keep using this h5 mixin?. Updated in 1420978.. Should this be border-radius: units(2px); or the mixin?. Is there a border radius function a la border-radius: radius(sm);?. For colors, it's always best to use the highest level of abstraction aka theme values. In this case, gray 5 is base lighter. See: https://v2.designsystem.digital.gov/style/color/theme-palette/. 3px would need to be changed to a 2.0 palette value (2px).. In the old system, this corresponded to the darkest base color or what was off-black. In 2.0, I think this is $theme-color-ink which is base darkest.. The Sketch file is using a gap of 10px for this, do we want to bump this up to 8px/1 unit?. What's the variables/function for z-index?. See this https://github.com/uswds/uswds/pull/2722#discussion_r215398212, we already have a variable for text color, so it's not needed.. Shouldn't any new spacing variables we create be consistent with how we write our t-shirt sizes, i.e. xs, md, lg, etc.... Good question, I think $color-theme-base-lighter may work as well. I'm just looking through the variables file. I don't know if there's a preference for fn vs the variable.. Added the units function with border radius variable d0a8c88, seems to work.. Updated in e6add3b.. Use the appropriate size listed in the conversion table #2660. Use the function + token style.. Use the function + token style.. Use the function + token style.. Update this to the function + token style using units instead of the variable.. I think we have new media queries to use in v2.. Update to function + token style.. Yep! . Update this to be in the primary family (primary darker) to match the variable that was used originally.. Looks like this still needs to be done.. units is still there, it should look like how @thisisdano wrote it above.. Done in 64b23da. The latest Sketch file has it at 1px, so we'll need to update there as well.. This is on me, I recommended the units here bc I don't think there's a correlation between the site margins and the section component. I think it's fine as is.. We could, but I'm not sold that we should, as this ties it back to the variable we defined as white and black. . Should be mobile large (mobile-lg). I'm wondering if the success and error border width should be 4px / 0.5? Comparing it to https://design-system.service.gov.uk/components/error-message/#label. is this a pattern that we plan to do on all components?. Is this bc someone would want the font of the bordered accordion to be different from the default borderless accordion? . sure. sure. Can you change all the media queries to use the new 2.0 vars?. If you can find where this is being used and replace it with something in 2.0, then ok to remove.. Links should not be bold.. Idk where this came from, guessing vestigial code? If we can remove it, remove it.. Oh I see, I think that we should split this up though, to be in line with how we're styling our components, i.e. bordered would need usa-accordion usa-accordion-bordered so only the bordered style are added. . But should we do it now or in a different PR?. Added an issue #2736 to track this work. Add in more as you find them. . Ideally, if we could tackle this in the 2.0 PRs we're working on and look for this, that would be good.. We are going to deprecate using Bourbon I believe and this is a Bourbon mixin, so this should probably be written in a 2.0 margin way.. usa-grid will be deprecated, we'll want to use the new grid classes and margins to achieve this effect. What do you think is the best way of doing this @thisisdano? This will need to happen across all layout components.. null just means \"don't do anything\" so this line can be removed. It's specific to that Bourbon mixin, I don't even know if it works in ours.. Not using columns in this component, remove grid gaps.. padding to be added in a separate pr so can be removed. Since we're using a top margin model for paragraph text, can this be revisited so it doesn not have a bottom margin?. Use function font-weight('normal');?. I don't even know if disabled buttons are a good UX pattern or not, but I can barely read these. While I can read the existing ones better now. I know that these don't have to pass WCAG.. The heading has two colors: white and blue:\n\n. In case someone wants to add a link. It's not in the example, but may have been at one point.\n\n. It's in the code https://github.com/uswds/uswds/pull/2726/files#diff-d55517edab231c0570e713ee03a4d9dbR7. I think the default link color for this section is fine though, so removed in 5c1a955.\n\n. Done in 12127cd.. That's interesting, I was following the documentation where they are not quoted: https://v2.designsystem.digital.gov/utilities/layout-grid/#example-usage also I have not been quoting any media queries in any components by following this example.. This is similar to the section component where I asked the same thing. You recommended using that variable in a similar situation: https://github.com/uswds/uswds/pull/2727#discussion_r216104347. Updated to unit values in 1688ff6, but we will also need to update that file.. Updated to use quoted text in 185b7d8, but we will also need to go through all the components and update... not to mention updating the docs \ud83d\ude09 . Yeah that was my assumption, it's more verbose but at least it's consistent.. Done in 8243f73.. Done in 8243f73.. Done in 8243f73.. Done in f042eab.. I'm honestly not sure what this is for. What comes to mind is maybe the mobile nav? Removed in 90c4912 and hopefully everything still works as expected.. Woops, thought this was about the z-index above, well the z-index is still removed now \ud83d\ude02.. Removed in e5047d1.. Removed in e5047d1. But I think it was just easier to write it this way.. Should this variable be moved to another file? If so, which file?. This is a component variable, not a general spacing variable. I wonder if it makes sense to live in the sidenav component file? Or to have a settings file with component vars that we pull out?. Done in 60590cb. \n@thisisdano btw the change from 0.4rem to units(0.5) is causing an issue in this code:\npadding-left: units($theme-site-margins-mobile) - $sidenav-current-border-width;\nIt's outputting to:\npadding-left: 1.6rem-units(.5);\nDo you know how to get this to work?. Fixed in 54fbd8e.. @thisisdano how much space should we have between the bottom of the page and the nav below on mobile?. Updated in 6e52d90, thanks! Also, this PR is ready to review \ud83d\udc53 . No, it's for accessibility reasons, form has an inherent role. http://www.a11ymatters.com/pattern/accessible-search/. Done in 355a34e.. OK removed in 03c8a43, maybe we thought it would be good to have both a class and this at one point.. I think it enforces good markup so don't think so.. Yeah for a11y reasons http://www.a11ymatters.com/pattern/accessible-search/. No bc usa-search is the form element and [role=search] is the inner div and they have different style needs.. Answered above.. Answered above.. Answered above.. Tried to use @include grid-container instead of this, but it caused issues that I couldn't identify, cc @thisisdano.. Isn't a checklist an input like radio buttons?. I have been using verbose line-height() so it's clearer to people reading the code, let's save the shortened ones for prototyping. And do this consistently throughout the codebase. . Oh, I thought this was checkbox and didn't see the connection with validation. . it's so you can have a plain alert with no border (i think), try it with usa-alert.. there's a clearfix on this https://github.com/uswds/uswds/pull/2746/files#diff-70c90cf98b07e2f38faec5eb1e9fa4e3R188. units(3) to be the same as between input and the label?. Done in 30937b3. Had to add !important to change the grid's padding tho.. Would have liked to be able to add grid-gap but it messes up the margins - I'd prefer not to have to add another div.. Encountered some Sass errors when trying to move colors to settings file, left it for now, but it should be moved.. What of these can be removed?. Why do we have two groups of spacing variable scales? Are they both being used? Should there be only one? How confident are we of the chosen ones at these increments?\n. cc @thisisdano . Yeah it's a problem bc it's out of conformance with WCAG, 44px is the minimum we should go https://www.w3.org/WAI/WCAG21/Understanding/target-size.html: why not go a step above? . Nest this div. What do you think about compressing the SVGs so it matches the compression of the rest of the SVGs? e.g. https://github.com/uswds/uswds/blob/develop/src/img/angle-arrow-down.svg?short_path=87cfc3a\nThe tool I used was: https://jakearchibald.github.io/svgomg/. SVGs don't need most of the extra generated text like \"Created with Sketch.\". Prefer the previous format of one selector per line:\np {\n    &:first-child {\n. Something to consider is this technique it makes it harder for folks to find the selector via control + f, since it's not fully there. . In CSS style guide, we need a leading 0, but what about these functions?. what's the difference between scale and font-size? I used this as a guide for my v2 component rewrites and used scale following this example. Do those need to be changed as well?. I see the function name was changed here. Can you change the uses of scale to font size in the rest of the components?. Compress SVG.. Compress SVG.. Compress SVG.. @thisisdano this was marked resolved but is not compressed.. Alphabetize padding-* properties.. Maybe https://www.npmjs.com/package/stylelint-order#list-of-rules? Would rather the machine do this check than us humans. Though I don't know how it handles includes. Something to try out.. Do we expect this section to be used beyond the current design (heading + lead + button), e.g. customized with additional text?. @thisisdano can you help me understand why we're adding the border to the top of the next .usa-section or main rather than the bottom of the header itself. On the surface, it seems more fragile so just wanted to understand.. Done in baa8609.. Can you remove this line?. Did you want to try to resolve this or leave it out?. Can this be written as:\na { \n  @include typeset-link; \n}\nto be consistent with the rest of the code base?. aren't they all global? should it read \"content\" or \"content styles\" instead?. Is a prose scope example represented somewhere on the site/documentation?. Looks like we do use it on Typesetting, though the documentation needs updating.. Can this be in alphabetical order?. I think it's simpler and introduces fewer variables if we stick with one, the version we have in our .nvmrc file.. Do we know if anything above 10 works? e.g. does node 11 work?. Updated to be explicitly node 10 in f65e9fb.. ",
    "mollieru": "Should we consider living off of USA.gov?\nOn Wed, Jun 3, 2015 at 10:53 AM Julia Elman notifications@github.com\nwrote:\n\nClosed #5 https://github.com/18F/govt-wide-patternlibrary/issues/5.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/18F/govt-wide-patternlibrary/issues/5#event-321379657\n.\n. Ya.\nContext = growing interest in reducing the # of unique top level .gov\ndomains in the world\nOn Wed, Jun 3, 2015 at 11:03 AM Maya Benari notifications@github.com\nwrote:\nso like USA.gov/patternlibrary ?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/18F/govt-wide-patternlibrary/issues/5#issuecomment-108472191\n.\n. Sounds good! Works for me!\n\n\nMollie Ruskin\n503.928.2988\nmollieru@gmail.com\nOn Wed, Jun 3, 2015 at 11:17 AM, Julia Elman notifications@github.com\nwrote:\n\n@mollieru https://github.com/mollieru +1 I think for now we were\nthinking of getting something up quickly and a subdomain pretty\nsimple/straight forward. We should definitely re-think domain names as we\nget further along in the project.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/18F/govt-wide-patternlibrary/issues/5#issuecomment-108479824\n.\n. @cew821 I like what you're after. Do you know if/where convos are on the digitalservice.gov domain? \n\nSeperate thread, starting to think about the branding of the 'library' product (vs the components), I'm wondering, based on the early user feedback from @carodew and @colinpmacarthur shared, if we should steer away from the term 'pattern library' and think instead about 'web design standards' or 'web design guides' -- which would include, principles, a library of components and patterns, and a brand suite. \nSo maybe like:\nwebdesignguide.digitalservice.gov\n(This is sort of the CFPB branding approach).\n. It's important to keep in mind 'design' means more than one thing. I'm\nincreasingly into 'web design standard' or 'web design guide'.\nOn Thu, Jun 11, 2015 at 11:35 AM Andrew Nacin notifications@github.com\nwrote:\n\nPending ongoing branding and collaboration efforts, it's possible it ends\nup being digital.gov. Something super simple like design.digital.gov\ncould be interesting. Just throwing it out there.\nI'd probably piggyback on usa.gov for the moment. designguide.usa.gov? I\ndon't think \"web\" is needed here.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/18F/govt-wide-patternlibrary/issues/5#issuecomment-111175312\n.\n. Sounds great to me! @jpyuda + @mariamarrero I'm super excited about this living on USA.gov -- thank you for the invitation :) \n\nAlso into somethingrelevant.usa.gov -- working on what that 'something' now.\n. I don't feel a strong need for keeping it private. I'm happy to help own the curating of 'feels' from the wider community to keep you all focused and bring you each in when helpful to respond.  I do agree that we should always try to be as open as possible!\n. @jenniferthibault love the thinking here. One thing I wonder about changing the name: existing libraries we often reference - Materials, Bootstrap, Bourbon - their names don't change w releases, right?  Just wonder if it's confusing if we do a big promotion around \"Betsy Ross\" and then a few months later we start calling it \"Cowpens\" (also that's making me giggle). But if there's precedent to name releases uniquely, then I'm into it.\n. Just an update: sent a survey out to everyone on the Digital Service listserv. @mjovel + others, would love to get your input logged here as well:\nhttps://www.surveymonkey.com/s/JX6LHCD\n. @cfarm -> Anyone with a .gov or .mil email address can join by emailing listserv@listserv.gsa.gov, the message should have no subject and the body should say \"subscribe digitalservice.\"\n. @cew821 for some reason, now all I can think of is this: https://www.youtube.com/watch?v=TJLcrYiJB14\n. Thank you all for the input! Going to close this out for now as we've gotten oodles of good feedback and will report out. \n. I say let's resolve the repo name first since we're still discussing the\nbranding of the library.\nSince branding/style will be a component of this as well, I wonder what you\nguys think of broadening this beyond 'pattern library'...\nWhat do y'all think about \"usa-web-patterns-and-styles\"?\nOn Sat, Jun 6, 2015 at 5:49 PM Maya Benari notifications@github.com wrote:\n\nI think @rypan https://github.com/rypan's main point with opening this\nissue is:\n1. That we are using the t in \"govt\" while not using that in other\n   places. Using just gov is cleaner, nicer, and common practice.\n2. Separating \"patternlibrary\" with a dash between words to be\n   consistent and legible.\nSo we can at least do that as we decide on a different name. I like both\nusa-pattern-library and gov-pattern-library.\nAnother question, should the repo name be consistent with the actual name?\n10 https://github.com/18F/govt-wide-patternlibrary/issues/10\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/18F/govt-wide-patternlibrary/issues/11#issuecomment-109653241\n.\n. @leahbannon this is super helpful. Could you share a screenshot or sketch of an example or two? Totally fine if it's low-fidelity.\n. @leahbannon I think either would be a helpful start. Basically I think we need a little bit more context to ensure we design this in a way that is helpful for you guys!\n. Oooh really like both CFPB's and the MailChimp example.\nOn Fri, Jun 12, 2015 at 4:33 PM Carolyn Dew notifications@github.com\nwrote:\nI thought this was a nice example of a timeline as well, via MailChimp\nPattern Library http://ux.mailchimp.com/patterns/lists#activity-timeline\n[image: screen shot 2015-06-12 at 4 28 56 pm]\nhttps://cloud.githubusercontent.com/assets/10144074/8139280/4ec0d42c-1120-11e5-9188-2a46cf8ba3f5.png\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/18F/govt-wide-patternlibrary/issues/12#issuecomment-111606584\n.\n. Thanks @vz3 !  Would like to see more examples of form types/patterns that other teams think would be helpful. Would love to see screenshots from other folks -- specifically from VA, MyUSCIS, FDA, Ed.\n. @andrewmaier thank you! super helpful! we've started sketching some of those basic form elements, not comprehensive of your list yet, but you can take a peak here: https://github.com/18F/govt-wide-patternlibrary/issues/38\n\nAlso, alerts and error messages here: https://github.com/18F/govt-wide-patternlibrary/issues/37\nAnd, buttons here: https://github.com/18F/govt-wide-patternlibrary/issues/34\nalso to echo @vz3 , @emilyville I also really like the placeholder text...that seems like a really nice best practice we can communicate!\ncc @angel + @carodew \n. Form patterns and elements are well under way and in production. Closing this out for now! Thanks for the input y'all.\n. @amycesal this is FANTASTIC!  Thank you thank you for sharing!  We are trying to reuse and build on stuff other folks are doing. Would love to adapt what you're doing for a wider .gov audience!\nCan we work together on this?  < v excited >\n. Agreed! Esp if CFPB has something in the works, we can dovetail this in\nlater.\nOn Fri, Jun 12, 2015 at 3:13 PM Maya Benari notifications@github.com\nwrote:\n\nI agree with @Scotchester https://github.com/Scotchester, @cew821\nhttps://github.com/cew821, and @mjovel https://github.com/mjovel.\nIt's a great idea but don't think we should take this on so early in the\nproject. I think it was only brought up once during the workshop by Scott.\nLet's keep an eye on it but tackle it later in the project.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/18F/govt-wide-patternlibrary/issues/18#issuecomment-111592013\n.\n. @colinpmacarthur has been doing great homework on this. closing out. \n. Good Qs @juliaelman -- apologies for vagaries!\n1. .AI .PNG .EPS -- still deciding on if we'll also have Sketch files ready for this release\n2. Yes, one of each of the above for each component.\n. Works for me! Great plan. \n\n:green_button:\n. Feedback from @jjoteal on icon use in Accordion:\n\"https://pages.18f.gov/govt-wide-patternlibrary/components/#accordions\nWorried that the chevron icon is too close to the dropdown icon.\nI've come across this in Ed, where I've had a dropdown menu listed at the first element in an accordion. The result was 2 down-facing chevrons right next to each other. I ended up changing the chevron for the accordion to a plus/minus symbol for expand/collapse to address.\n \"\n. All helpful feedback, and quite agree. Thanks @andrewmaier + @Scotchester !\ncc @angel \n. The inline preview is smaller. Make sure you double click to see actual\nsize. Once you've done this, still too small?\nAlso, good advice Noah!\nOn Fri, Jun 19, 2015 at 8:27 PM Noah Manger notifications@github.com\nwrote:\n\n+1 to making the icons bigger, but I find the \"x\" icon on error confusing.\nOften times x's next to inputs can be used to clear the input, and that's\nhow I saw it at first. Maybe a \"!\" would be better?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/18F/govt-wide-patternlibrary/issues/38#issuecomment-113685193\n.\n. @angel in putting these elements to work on the form patterns (address, login, etc.), I'm starting to wonder if we might want just slightly larger input fields. Looking @ MyUSCIS, for example, they've got just a bit more breathing room around text, as well as the VA teams. What do you think?\n\nOur current field input:\n\nMyUSCIS field input:\n\nVA resume builder:\n\n. @angel also, I think we should adopt the asterix for required field, vs. writing the word required -- sometimes the field labels are long and run into the word. (See above)\n. ok good advice you two! We will work around the design constraint and find a good solution!\n. @andrewmaier great suggestions! #82 is an issue already open related to em styling. Adding this suggestion to that issue as reference.\nMoving your suggestion about 'progressive enhancement' to a new issue. \n. Comment from @AccessForAll from https://github.com/18F/govt-wide-patternlibrary/issues/169\n\"* The location is problematic for people who use screen magnification software, people who have cognitive impairments, and people who are using small screens.\n- Reconsider placing the error text above the input box.\"\n. @angel I think we need a smaller sans serif for things like Breadcrumbs, small disclaimers, etc. (Finding this when trying to use these styles for the Footer)\n. THAT is a really handy article. thank you @noahmanger -- super duper interesting.\ncc @angel for future iteratings on the font size\n. @angel I think we need a smaller versions of both serif + sans serif \n. Comment from @mariamarrero in issue https://github.com/18F/govt-wide-patternlibrary/issues/125 :\n\"Using web app icons sounds like a good option. However, agencies may have the need for icons that are not included in that list. In that case, they may be forced to create their own icons. Perhaps we can also mention some specs for the icons if there is that need?\nAlso, some agencies may have some security guidelines, block them and may not be able to use them.\"\n. Comment from @afeijoo in issue https://github.com/18F/govt-wide-patternlibrary/issues/125 :\n\"+1 @mariamarrero. We've found that quite a few agencies block Font Awesome icons, especially those with older versions of Internet Explorer.\"\n. Comment from @jjoteal in:\n\"https://pages.18f.gov/govt-wide-patternlibrary/visual-style/#icons\nSpecify source for icons (Font Awesome, etc.)\"\n. Good tip. @angel how's this looking? \n\n. Updated fat, medium + skinny desktop footers.\n\n. Here's v1 of mobile footers:\n\n. @maya has been thinking a lot about this!\n. I recommend adjusting the font-size of these words to 1.2em so that they look less like links. Meanwhile, I recommend that 'Patterns' link to a title 'Patterns' (just as 'Layout' does). \n\n. Resolution: what @angel said :) \n- removing 'Patterns' for now and elevating these to top level nav.\n. Thanks @maya ! Lookin good.\n. Love it!!\n. Thank you @ErieMeyer !! We're excited excited by this and will discuss and get back to you shortly!\n. updated to title to better reflect the request.\n. @ErieMeyer we're into it! The team is super jazzed and excited for what you produce! Merging in the pull request. Let's sync up about timelines offline. Thank you for leading this charge!! :racehorse:\n. Plus @kategarklavs who has been working on some cool stuff related to this as well!  \n@ErieMeyer hoping y'all can make some content magic together <3\n. Plus @deepa7 who's been noodling on this stuff a bit at USDS HQ.\n. Resolved, as 18F created a content guide, which we link to in the web designs standards.\n. +1! \n. Not seeing 'Dropdown' in your PR hitlist @maya \n. sounds good to me! \n@carodew what do you think about taking the content from the dropdown and adding it to the 'about' page for now?\n. (also +1 on your point about the 'Learn more' language)\n. roger! sorry.\n. @angel you've updated this yea? I think you can close this for now.\n. @mjovel go ahead and create new issues -- this was for an internal task, so I'll close it out. (in general, @carodew 's right -- you can always plop ideas in and we'll move it around if need be).\n. Would VERY much like for this to feed into our work however possible.  Will be sharing a link to the first release of our prototype shortly with instructions for how folks can feed in. @jjoteal and I have been in touch about getting her team's feedback on what we're doing...and hopefully there will be elements of this draft which can be repurposed for the college choice project!\n. To second what @maya said -- we can't access that link. Can we get access and/or screenshots?\n. Sounds like this is well underway, so closing out for now.\n. Rad, thank you for sharing @CaliforniaKara!\n. Transferring feedback from @mariamarrero from https://github.com/18F/govt-wide-patternlibrary/issues/127\n\"The mood boards contain very neat color palettes. Is the look and feel chosen only for the library or could these be choices for agencies to use? Some agencies may use colors that are similar, but not exactly, to meet internal color contrast requirements.\nIf this helps, a great color contrast tool that I always use to meet contrast requirements for foreground and backgrounds colors (text and graphics) is http://webaim.org/resources/contrastchecker/.\nMy favorite is the Modern American :) \"\n. Totally agree. Pro ems once we move into code. \nDo you guys think we should only give ems or both ems + pixels?\n. From @andrewmaier issue #38 :\nI'm personally not a huge fan of pixel measurements/requirements as it sets an unrealistic bar. I would prefer something in em's (that is, relative to the font size). This is what I'm doing on the Airforce (SBIR-EZ) project: the screenshot shows three differently sized buttons (the \"remove\" button is being hovered). I made the size of the buttons match the font-size of the text that the button appears next to.\n\n. This is all really helpful input! @mjovel I think some of the confusion may be derived from that in this iteration, we are displaying the components as flat, non-interactive mock ups. In the next release, the .pngs of the patterns will be replaced by working, interactive coded-out patterns, with code snippets, etc. underneath. \nThat said, if I understand your advice, sounds like you're thinking we should maybe save the view of a pattern with guides and padding for the editable art files?\n. Cool idea @mjovel ! Could I request you open a new issue w the feature\nrequest to toggle guides on and off?\nOn Fri, Jun 26, 2015 at 1:24 PM Michael Jovel notifications@github.com\nwrote:\n\n@mollieru https://github.com/mollieru - correct. I think those who\nvisit from the web based pattern library would be more likely to use web\ninspector to gather that information if needed. It would probably be more\nuseful for those using the editable art files so that they could get a\nsense of measurement as they layout their art file based mock-ups.\nIn regard to the non-interactive mock-ups I kind of like the single page\nsticker sheet referenced in #98\nhttps://github.com/18F/govt-wide-patternlibrary/issues/98. It made it a\nlittle easier to digest the mock-ups and I felt that the guides kind of got\nin the way of being able to respond to them. I think that would be a good\nscenario in which being able to toggle guides on and off would be good.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/18F/govt-wide-patternlibrary/issues/82#issuecomment-115787403\n.\n. That seems handy!\n\nI think this gives us some good direction on the need to provide 'ems' to\nfor interactive elements and 'pixels' for design files.\nOn Fri, Jun 26, 2015 at 2:18 PM Jennifer Thibault notifications@github.com\nwrote:\n\nWould this be a helpful bridge between flat and interactive mockups? Even\nthough many folks would still use the inspector, it could give you a rough\nidea of both up front.\n(em equivalent measurements not accurate in this quick mockup)\n[image: screen shot 2015-06-26 at 12 59 04 pm]\nhttps://cloud.githubusercontent.com/assets/11636908/8384257/d70656a2-1c0d-11e5-948e-a046e9179d94.png\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/18F/govt-wide-patternlibrary/issues/82#issuecomment-115822983\n.\n. @mjovel sounds good -- thanks for the clarification\n. @andrewmaier Makes really good sense for mobile/tablet...how does this work on desktop? \n. Totally into exploring it. I think it's relatively new territory for a bunch of folks so we'd need good grounding language and examples.  @andrewmaier  or @maya can you share some screenshots of what some of the browser defaults look like? \n\nRelatedly, is it safe to assume that Chrome, Safari, etc. are always going to be designing to the 508 standards we're after?  That'd be one of the only arguments to design our own if we're otherwise into this direction. \n. Also, re-sharing a helpful link from gov.uk that @carodew snagged, re designing for a range of date-types:\nhttps://www.gov.uk/service-manual/user-centred-design/resources/patterns/dates.html \n. @maya fixed\n. Thanks @KHarshawat ! I think we can do this for you. \n. @jenniferthibault suuuuper helpful feedback! will def do more polished prep as you suggest after meaningful iterations to the designs!\n. Yea, good call! \nI think what you're seeing here (and is a good catch, which we should address) is snapshots of different places in the flow. \nStep 1 \n- Arrive at a form which you haven't entered data into. \n- In the Form field, you see sample guiding text (in gray)\n  \nStep 2 \n- Enter your data, form replaces digits w dots\n  \n. More than just the style mismatch, you've also pointed out that we're not showing the full flow of the interaction consistently. Def something we can remedy!  Updating the title to match.\n. Cool! Thank you @KHarshawat !\n(unrelated, ping me offline and ask me to show you the workque we mocked up for USCIS in the fall. May be helpful.)\n. Plus @emilyville + @dannychapman who had suggested this to start. Did you guys have research or data behind this recommendation?\n. Great tip @afeijoo!  Do you have a few examples of where this is done well that you can point us to?\n. @afeijoo thank you for this suggestion! Can you load in an image point us to the specific search bar layout you're responding to? \n. @afeijoo @carodew @angel \nIn the past design projects, I have had need for the search bar and related filters to stay static throughout long pages of search results, which is where this pattern is derived. Here's an old example: https://fbopen.gsa.gov/?q=graphic+design&data_source=&naics=&parent_only=&p=\nGiven that best practice suggest line width should be between 45 to 75 characters (http://webtypography.net/2.1.2, http://baymard.com/blog/line-length-readability), my sense is that there should still be enough screen real estate to do a side bar search when needed.  \nRelatedly, more complicated searches often use a sidebar for filtering search results. EG: http://catalog.data.gov/dataset?q=health+care&sort=score+desc%2C+name+asc\nAll that said, sounds like we should also create a pattern for search results directly below the search bar, as there may be frequent need for this as well. \n. Thank you @mariamarrero and @afeijoo !  Moving your comments over to https://github.com/18F/govt-wide-patternlibrary/issues/43 where discussion on this topic is underway.\n. Thanks @mariamarrero! Moving this comment over to the issue w feedback on the mood boards: https://github.com/18F/govt-wide-patternlibrary/issues/80\n. Thanks @KHarshawat ! Can you offer one or two more examples?  (As close to specific to the context you need in gov design work, if at all possible). \nI think I understand what you're asking, just want to make sure we're designing for the use cases you're talkin bout.\n. Good tips guys! CC @angel \n. Moved this over to https://github.com/18F/govt-wide-patternlibrary/issues/43 w other feedback for icons.\n. Thanks @jjoteal ! Moving this to https://github.com/18F/govt-wide-patternlibrary/issues/36 where some convo on Accordion styling is under way.\n. @AccessForAll thanks so much! We did include color recommendations intentionally in this first iteration of the patterns so that we could more deeply research and test accessible palettes. We will absolutely be including more colors and they will meet AA standards at the minimum. Thank you for the resources!\n. Adding this to convo on this topic here https://github.com/18F/govt-wide-patternlibrary/issues/38\n. @AccessForAll thanks for the handy link + advice! Can you give us a screenshot or more detail on where you're seeing form patterns that do not currently not offer a submit button?\n. @maya good point, though I'm not sure that's what @AccessForAll was getting at. My interpretation was that we should make sure than any form pattern is accompanied by a 'submit' button.\n. Great suggestion, we've implemented so closing this out for now. Thanks @AccessForAll !\n. @maya @msecret was this resolved?\n. Feedback from @mebates:\n-          Have you used this tool? You pop in all your colors and test for passing.\n-          I\u2019m concerned about your blue for links. It fails on every color field, so you could never have a link in a well or on a sidebar. Consider making it darker to comply.\n-          With so many blues available, I\u2019m not sure why you have another row in \u201csecondary colors\u201d. Perhaps go more purple or orange to provide something different?\n-          The yellow is not accessible with white, so you couldn\u2019t use it with like an exclamation point in a circle, for example.\n-          We\u2019ve been nerding out on palettes lately, check it out.\n. Feedback from @mebates:\n-          Is there a consistent pattern to your leading? It looks tight on Display (what would happen if your second line has a capitalized letter?) We use a consistent 1.375 em calculation for our leading.\n-          I think the H2 is reading as more heavy/important that H1. Noticed this specifically on the dhs_sample file\n-          Are you specifying gray for H5? You\u2019ll want to test that against all of your Background Colors for accessibility too. I would consider leaving color out of your type hierarchy (what color is my H5 if all of my type is navy?).\n-          I would ask if the odd numbers are necessary (ex: 63 px vs 62 on Display). The more consistent and logical the hierarchy is, the easier it is to use\n-          Body copy is pretty big! I know that\u2019s the trend, but we might have a hard time with that on a copy dense pages (think less services, more explaining concepts) or blogs or press releases.\n. @esgoodman and @jtag -- would love to listen in to capture designer user needs\n. @angel i think we resolved this earlier. closing this out!\n. cc @angelk\nOn Mon, Aug 24, 2015 at 8:53 PM Maya Benari notifications@github.com\nwrote:\n\n@craigjh https://github.com/craigjh great point! How about if we go to\nour lighter version of green for success - it's 20% lighter than the\ncurrent. I think red should be darker bc it's stronger and will stand out\nmore.\nLight green:\n[image: screen shot 2015-08-24 at 5 50 37 pm]\nhttps://cloud.githubusercontent.com/assets/5249443/9456157/dae50094-4a88-11e5-9cea-91605e934744.png\nGreen (current):\n[image: screen shot 2015-08-24 at 5 52 26 pm]\nhttps://cloud.githubusercontent.com/assets/5249443/9456164/e7f01080-4a88-11e5-8b38-e0295b2175e6.png\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/18F/usfwds/issues/337#issuecomment-134428673.\n. Oops + @angel\nOn Tue, Aug 25, 2015 at 8:12 AM angelk notifications@github.com wrote:\n@mollieru https://github.com/mollieru I don't have anything in common\nwith this project, wrong cc ;)\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/18F/usfwds/issues/337#issuecomment-134566158.\n. @carodew @angel sounds like a good idea to me. \n\nWe are already showing non-color indicators by providing the red line and pop-up text w instructions about the error. But I think additional icon to further clarify may be helpful as well. \nHere are a few examples of this in practice:\nCFPB:\n\nUSPTO:\n\n(aslo long but helpful read on this here: http://designmodo.com/ux-form-validation/)\n. cc @angel \n. @jpyuda can you take the lead on this? \n. This is also happening on OS 10.8, Safari 6.2\n. Resolution: the sidenav should not include links to 'Home' or 'About' (which does not exist)\n. Original design does not include hamburger. Hold on this as we may need to remove hamburger all together.\n\n\n. @colinpmacarthur let's close for now. I made a note in the Trello card.\n. @carodew good point! will remove and add to the Trello card for this item (which is already in there).\n. Well, the readability needs remain true, even in alerts. If there is more than one sentence for alerts, it seems we shouldn't be putting text at full width.  \nIn any case, more interested in the general guidance -- not just the specific alerts use-case. \n. Ok thank you guys all for your input! \nBased on the feedback from you all, we will offer specific line-length guidance for the recommended web design standards typography, followed by general guidance for setting line length if you customize to your own fonts. \n. Yep, closing now!\n. @carodew on IE11 the focus state appears as designed. No faintness.\n. @angel \nPairing #3 should include the following fonts:\n1. Merriweather Bold 700\n2. Merriweather Light 300\n3. Merriweather Regular 400\n4. Merriweather Italic 400\n5. Source Sans Pro Regular 400\n6. Source Sans Pro Bold 700\nHere are the styles which need updating:\n\n. @angel agreed on buttons! thank you!\n. @angel we do still need to include the SSP bold though, correct? \n. @carodew oops, sorry - missed that! will revert.\n. @jpyuda now that examples are in, should we fix this?\n. I think this may have something to do w the 'Accordion' component itself, which is also not showing the focus state on tabbing:\n(hard to see, but I'm hitting 'tab' when the page is doing nothing at all, sometimes able to open and close hitting 'enter' but w/o focus state, can't see when and where)\nhttp://screencast-o-matic.com/watch/coQo3Zfdzx\n. @colinpmacarthur can you recall how you'd recommended we resolve this?\n. @angel ^^ we can tweak this early next week. looks like it's still reading a lil too 'dropbox-y'\n. :heart_eyes: \n. @angel @colinpmacarthur @carodew  huzzah! :trumpet: \n. @angel can you provide image and/or a little more detail?  also -- my suspicion is that because we didn't load things at 200%\n. @angel is this on multiple browsers or just 1?\n. @jjoteal what version of iOS are you running?\n. i have 8.3\n. @angel can you add a screenshot of this whole section (not just the first two principles)?\n. Also appears like this on iPhone Safari\n. I think related to https://github.com/18F/web-design-standards/issues/599 (and the issue about text cutoff in the 'documentation' as well)\n. @maya @colinpmacarthur updated per your helpful idea Maya!\n. Thank you @konklone !!\n. @robertsosinski we think this is because you're using the styleguide.css file for the Web Design Standards site itself in your own site. \nIf you use main.css this will give you everything you need, instead of needing styleguide.css \nHere's the general directions around this: https://pages-staging.18f.gov/web-design-standards/getting-started/\nCan you tell us how you got yourself to styleguide.css? \n. @maya I don't have access to the command line and haven't been able to figure out how to on the website. so sorry!!\n. @konklone thoughts on this language/linkery? \nAll fonts used in this design system are free, open source typefaces available on Google Web Fonts, licensed under the SIL Open Font License.\n. @maya is this good to be merged or do you need another dev reviewer?\n. Thanks for the catch @lukefretwell !  Last night was a soft launch to help catch these very things. Much obliged!\n. resolved in PR https://github.com/18F/web-design-standards/pull/694\n. @carodew perfecto. Will update accordingly. Thanks all!\n. This has been resolved.\n. @maya will fix those things. stay tuned. \n. @maya lmk if those fixes work. thank you for catching those!\n. @paultag cool! can you open a new issue w that request?\n. @maya can you add this to the list of final bugs to tackle on Thurs? feels\nimportant to make sure our components pass our 508 standards.\nOn Wed, Sep 23, 2015 at 5:51 PM Angel Kittiyachavalit \nnotifications@github.com wrote:\n\nAs I was updating the footer in the components page. I found that the\ndarker gray is #e0e0e0 which doesn't match any of our colors:\n[image: image]\nhttps://cloud.githubusercontent.com/assets/103496/10059739/9bd78044-6201-11e5-8d02-3f38f2b86f54.png\nand the primary color on our gray-lightest background #efefef does not\npass 508 compliance for the big footer:\n[image: image]\nhttps://cloud.githubusercontent.com/assets/103496/10059888/5dba5b1e-6202-11e5-992e-50c19a8268b5.png\nIf we change gray-lightest to #f1f1f1 then the contrast will pass.\n/cc @maya https://github.com/maya @mollieru\nhttps://github.com/mollieru\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/18F/web-design-standards/issues/699.\n. @awfrancisco good catch, thanks! @maya g2g.\n. @maya fixed the 508 language. all good?\n. @kategarklavs is it ok if we stick w the 'American people' in this sense because a) this might not only be used for the 'public' and b) gets a lil more at the feel of human-centered-ness (as in we're building tools for people)...\n\nPlus gives the sentence a lil more gravitas.\n. @maya fixed the intro paragraph to reflect language we're now using on the homepage. thx!\n. @maya I don't have experience w this -- can you ping someone to help pull the right part of the license text?\n. Thanks for the suggestion @maclover7 ... Feel free to send a PR and we'll take a peak. \ncc @maya \n. Thank you for catching this!  We are working on patching this up -- seems like a few folks were getting similar errors. Should be resolved shortly. \n. This has been resolved and the site shouldn't be serving up these errors anymore. Do let us know if you have any other issues!\n. Very cool suggestion, thank you! Can you tell us a little bit more about what kind of language/information you'd like to see here in order to encourage archiving?\n. Thanks for the feedback! We'll check it out. Stay tuned.\n. Thanks for the input! We've been discussing adding this as well. We'll keep you posted!\n. We had been leaning toward font-awesome for icons @esgoodman -- any thoughts on this?  Thread on icons here: https://github.com/18F/web-design-standards/issues/43\n. Thanks for the input! We're working on this and will keep you posted! Stay tuned. \n. Thanks so much! We're considering the options here -- stay tuned!\n. thanks for flagging @dylanvalade -- looking into this now.\n. Thanks @dylanvalade and @MsWebGirl -- we're taking a look at this and considering it for a future release. stay tuned!\n. @nickbristow does this need any action from our team? \n. Thanks @goetsu and @KimberlyMunoz -- looking into this now, we'll keep you posted. \n// cc @maya \n. @miguelsousa awesome, let us know when you've got something for us to look and we will merge it in! Thanks so much for keeping us up to speed :ok_hand: \n. @njohnson could you tell us a little bit more about what you're looking for? Thanks so much for your input!\n. @njohnson thanks for the suggestion! We won't be able to support this right now, but we encourage you to fork and create a spring framework for your projects. \n. @ultrasaurus any chance we could get you to submit this as a PR? will reward you w puppies and rainbows? :dog: :rainbow: \n. Thanks @ultrasaurus and @brittag for flagging these good points. We'll work in coming up w some better language!\n. Thanks! We'll take a look at this and come up w a solution that is more visually accessible. \n@angel can you take a look here? Happy to help you out!\n. @angel hey, can you take a look at this? feel free to ping other members of the team to help think through.\n. Really great discussion everyone.  @WestonThayer did you get your big questions answered? \n// sidenote: this would make great foder for the technical-focused blog post on development decisions of the standards. @maya @msecret you guys might want to hang on to notes from this discussion as you draft this!\n. Cool, good idea @msecret -- we'll consider this in our future roadmap. \n. Cool, thanks @brittag! We'll include this in a future release. \n. We're reviewing this now, thanks @IanLee1521 and @coquiaspiazu !\n. Cool! Good ideas all! \nOne thought: can we come up w another way of saying 'Start with accessibility'?  The goals of this are two fold: that we put a premium on accessibility from the get go, and that we wanted to it easier for teams to build accessible sites.  'Start with...' doesn't quite capture this for me. Gonna noodle on some idea...\nAlso...devil's advocate: have we heard that this is in fact confusing to people? or are we surmising?  I'm down to change it for the sake of clarity but just wondering what the feedback has been...\n. @maya the second option is compliant w our link styles (https://playbook.cio.gov/designstandards/visual-style/#links) so lets go w that one!\n. Thanks @dvito -- we'll consider this!\ncc @carodew @colinpmacarthur \n. @emilyville @raineystraus ^^ do you gals have a prototype for us to play w?\n. @maya lgtm!\n. looks good!\n. looks good!\n. These shades are different enough that I'm wondering if we should add the #757575 to the color palette.  Rationale: looking at the two grays in context, #757575 is light enough that when next to our black, it recedes to support a bit more distinguishable visual hierarchy.  See for example the difference below:\n\n\nBut I'm curious what other folks think about this -- @jenniferthibault @jehlers @rtwell @jjoteal ?\n. If so, thinking we might name it gray-medium -- thoughts/ideas on this welcome, too.\n. This isn't exactly an ideal implementation, but here's an example of one\nexisting adaptation of collapsable alert:\nhttps://certify.sba.gov/am-i-eligible/app?\nOn Fri, Feb 5, 2016 at 5:01 PM, Marco Segreto notifications@github.com\nwrote:\n\nI agree that a component like this would be good from a dev\nstandpoint(interested in hearing from design). The code could almost be\nre-used for the accordion. In general, it'd be pretty easy to implement for\na dev perspective.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/18F/web-design-standards/issues/988#issuecomment-180584854\n.\n\n\nMollie Ruskin\nUS Digital Service\nOffice of Management and Budget | Executive Office of the President\n. Happened to be looking for guidance on homepage layouts so was snooping around and this looks SO SO COOL!!! Awesome work y'all -- so excited to see this evolving!! \ud83c\uddfa\ud83c\uddf8 \n. Making a call for this product to use 18F's content style guide (very similar to the content style guide suggested by @ErieMeyer ):\nhttps://pages.18f.gov/content-guide/faqs/\nCurrently working to figure out if it makes sense to surface the content style guide directly on our site or link to 18F for this. Stay tuned -- expecting resolution shortly.\n. Chatted w @colinpmacarthur and we decided on the following language to make the headings a little tighter:\n1. Single level \n2. Two level\n3. Three level\n. Thanks for the correction! That sounds good. \nCopy edit: \n\"more than four\" \n. Trying to think of something a little catchier/more exciting, but falling short...\nI'm ok w calling this 'Examples' instead.\n. Source Sans Pro and Merriweather are also released on SIL Open Font License.  @maya @jpyuda do we also need to list those here? (See language here on font licenses: https://github.com/18F/web-design-standards-assets/pull/9/files)\n. per @jpyuda 's guidance, just added font license language\n. ",
    "cew821": "I feel like there are a lot \"pan-Digital Service\" products/content pieces that would benefit from a top-level domain, possibly a new one -- such as digitalservice.gov (though I am definitely not sold on this as the 'right' name).\npatternlibrary.digitalservice.gov\nplaybook.digitalservice.gov\njobs.digitalservice.gov\nguides.digitalservice.gov\nva.digitalservice.gov\nssa.digitalservice.gov\nYou get the idea... I feel like this style pattern library, the Playbook, the TechFAR, the 18F Guides, the job application, and a few other things want to be grouped under one home.\n. If we do wind up putting this in usa.gov, I think that implies that other similar products should be put there? Things like the Digital Services Playbook, 18F's Guides, and other things related to helping agencies deliver better services? \nI'm actually ok with that, but I do think it represents a conscious choice, and one that we should follow for other similar products like the Playbook, Guides, etc.\n. Interesting! I'd love to understand better. Is that because you think there aren't similarities between the products, or because you think the choice of URL doesn't really matter? Or some other reason?\nMy intuition was that it would be nice for similar types of resources to be grouped together, but definitely open to other reasoning!\n. I think @msecret is on the right track.\nIt feels kinda like there is something in \"E pluribus unum\" (out of many, one).\nexcept latin... gross. and \"Unum\" on its own doesn't sound or look that cool.\n. One more idea:\nFabric\n\nStars\n\nStripes\n. Love this choice. I \u2764\ufe0f bourbon/neat\n. Seems to me that getting closer to actual implementation of a data\nvisualization would be a lot of work, and would add a dependency on some\ntype of JS visualization library like D3. I also think charting\nimplementation is often dictated by (or helps dictate) how the back end\ndata API is structured, increasing the level of difficulty for building\ngeneric components that are usually useful.\n\n\nHowever, if done well, I could see how this could be a huge time saver for\na team looking to implement data visualization.\nStill, I would be surprised if this level of effort would be worth doing in\nthe early stages of the project. Definitely I wouldn't take it on unless\nyou can find a clear customer of the tool who will implement it in a real\napp as we build.\n. Yeah that sounds totally reasonable.\nOr maybe just a link to Tufte's Visual Display of Quantitative\nInformation book \ud83d\udcca\ud83d\udcc8\ud83d\udcc9\ud83d\udcd5\n. This is awesome. Could you do another one sorted by lowest resolution to\nhighest to get a better visual sense of the volume of people w small\nscreens?\nAlso it would be helpful to cut this by desktop tablet and mobile if that's\npossible? I think it is cc @konklone I think mobile and tablet are probably\na thing we should anayze separately.\n. I have DAP access already and could pull this, but sounds like we'd need to post it somewhere other than this repo.\n. The 20px padding on the content within the accordion feels slightly off to me. I'd like to see it at 15px, or perhaps giving it an extra 5px left and right to match the extra 5px height it's getting now.\n. I would love to see some more of the mood board examples come from services, instead of content sites. It's a bit hard to tell how the various proposals would impact something like a form or other transaction-oriented interaction from these mood boards.\nThat said, I think I have a slight preference for the first example, then 3, then 2.\n. I suspect there would be a high overlap between the teams likely to adopt a pattern library like this in the near-medium term and teams that are already using a framework like Bourbon/Bootstrap/Foundation etc.\nSo I am strongly +1 in having an answer for how the eventual end product of this could be integrated with some of the major frameworks out there, because I think that would speed adoption especially among teams that are already comfortable with integrating these types of frameworks.\nI also don't think it's necessarily the case that we should be agnostic about which framework(s) we support. It would be OK with me if we pick the framework we think is best, and add this pattern library on top of it.\n. I'd love folks to take a look at this PR with a hopefully \"shippable\" implementation of the standards on the Playbook:\nhttps://github.com/usds/playbook/pull/161\n. ",
    "nacin": "Pending ongoing branding and collaboration efforts, it's possible it ends up being digital.gov. Something super simple like design.digital.gov could be interesting. Just throwing it out there.\nI'd probably piggyback on usa.gov for the moment. designguide.usa.gov? I don't think \"web\" is needed here.\n. Yeah, <select multiple> is a terrible user experience, and browsers have done little to make it better, despite new UI/support for various HTML5 elements in the past few years.\nOther very commonly used libraries include Chosen and Select2. Many of these solutions, notably, can be used for more than just multi-select. Specifically, what is often called \"suggest\" or \"autocomplete\".\nI'll then just offer a differentiation there. \"autocomplete\" implies you are limited to the options being displayed, while \"suggest\" implies that you can also add an item that does not appear in the list (and it possibly becomes part of the list for the future).\nAnd then you can add \"multiple\" into the mix, and this gives you a wide variety of use cases.\n. ",
    "mariamarrero": "Just catching up with all the messages. Great feedback!\nUSA.gov is open to be the initial home for this design guide. I like the initial idea @mollieru suggested:  USA.gov/patternlibrary. We could even pilot the guides in USA.gov, so users can see the guides applied in the same place.\n. Thinking about what @jpyuda mentioned on this content being more towards insiders/devs, not users. USA.gov has a \"Developers\" page and just wanted to share that as another possible place. In our current site here is the page: http://www.usa.gov/About/developer-resources/developers.shtml, but in the future (starting next week - when beta.usa.gov becomes our only site) all the developers' content will leave here: https://beta.usa.gov/developer. Will that be another possible home for this content? Thoughts?\n. Sounds good and makes sense. Just wanted to put out there possible places :)\n. Another example is the focus state on beta.usa.gov. We have implemented the focus for every link (orange/yellowish as see in the screenshot). Indeed, needed for accessibility.\n\n. I am looking at the proposed Layout 2 in the library, which is a very common layout and the Main Content area is pretty wide. Unless the font is large, 75 characters seem pretty low. I don't disagree with the statement, I just think that we could make it sound less of a \"must\". \n. Sure thing!\nNot sure if this is helpful or not, but something we had to customize (based on the IA and content needs) is the amount of columns under the mega menu. We added a 4th column. There was extra space for this, so that was a plus.. Great! thanks @maya for the update!. Additional comments on text tweaks for the expandable link can be seen in ticket: https://github.com/18F/web-design-standards/issues/1748.  We (folks at USAGov) will be trying to make updates to this text and keep it. \nSome data: Crazy Egg reports already show users interested in this link in USA.gov and GobiernoUSA.gov.  . Would the following version of the GovBanner content work as a \"temporary\" version? It may not be the final one, but perhaps it is the next step so that agencies/partners that have already implemented it, can easily swap it as opposed to removing the link all together?\n\"The .gov means it's official. Federal government websites often end in .gov or .mil. Before sharing sensitive information, make sure you're on a federal government site.\" \n\"This site is secure. The https:// means that any information or browsing history you provide is encrypted and transmitted securely.\" \nThe USA.gov team is in the process of either disabling this link or just updating the text. However, the latter option would involve less LOE.\nThanks!. @bradnunnally , sharing a Crazy Egg heatmap we run on USA.gov header early this month. GovBanner link shows some activity. People seem to be interested in it and accessing it. \n\n. Agree with you @wslack. I am working with USAGov's content and IT folks to change it in USA.gov and GobiernoUSA.gov as opposed to removing it completely. . The USAGov team has made small tweaks to the language of the GovBanner and will be updating it in our websites (USA.gov and GobiernoUSA.gov). The text we will use is as follows:\n\"The .gov means it's official. Federal government websites often end in .gov or .mil. Before sharing sensitive information, make sure you're on a federal government site.\nThis site is secure. The https:// ensures that you are connecting to the official website  and that any information you provide is encrypted and transmitted securely.\"\nWe can certainly continue to make enhancements in the future, but we believe it is a helpful notice to have for our audience.  \n. Adding the ability of closing the accordion for footer links is a good idea. Our minds are trained to tap to open and close when we see arrows/+ or - for these types of sections. It would be great if that functionality can be implemented soon.. Hello!\nThe USAGov team implemented a solution for issue #2617 (close expanded dropdown navigation when user clicks away) on usa.gov and we have some preliminary results from this change that might interest you: \nThe data coming in from people closing the mega menu in three different ways suggests that the two new ways are welcome additions. Comparing a recent 7 day period to a random one before the change, the number of closings by clicking on the open mega menu button is the same, but about the same number of people now ALSO close it by clicking away. \nNote: we did not count if users clicked on a link that would navigate away from the page or same page (anchor link).\nIn theory, the click away people are mostly just closing it and looking at what is already in the viewport. Our assumption is that most people \u201cclicking away\u201d expect the menu to close when they do that.\nAttached is a screenshot with data.\n\n. @bpdesigns, that is exactly what we did in USA.gov. :). ",
    "jpyuda": "USA.gov seems like a sensible place.\nBut I'd suggest somesubdomain.usa.gov, both because it's a little easier to administrate that way, and the content is probably not of interest to most of usa.gov's audience. This is for insiders/devs, not users.\n. I think I'd prefer to keep it at a subdomain (at least for now) where we can update it more quickly, etc.\n. I don't think it implies that at all.\n. Well, the audiences are often pretty different. The playbook is for CIOs and program managers. The UI library is for designers and devs.\n18F Guides, on the other hand, will probably be a mix of a bunch of different things. But it seems like a case where the 18F \"brand\" may be an important part of the product.\n. To a user, this appears to be a bug. Re-classifying as such.\n. You could potentially make it a link using tel:1-800-... but then it would appear as a link on desktop devices.\n. (I don't find this very important at all, though. Very much in the \"nice to have\" space.)\n. Let's make the <td> cells white instead of transparent to at least get rid of the border bleeding through.\nThere may later be additional design changes aiming to fix the margins.\n. The zip code field should be type=\"text\" (browsers will drop leading zeroes if it is type number, and there are valid zip codes with leading zeroes). We can force the number keypad to come up by including this attribute: pattern=\"\\d{5,5}(-\\d{4,4})?\"\n. I can't get it to do any validation on staging. Odd.\n. I'll bet that's it. I'll download FF and hack around.\n. This is the expected behavior of mobile safari on iOS. I don't recommend building functionality to override it.\n. The Long Now Foundation approves of this behavior.\n. I can replicate on iPad Air 2 (also running iOS 8.4). Looks like what happens is when clicking a jump link, the page scrolls down a little but no javascript event fires to close the menu. And there's no on-screen control to close it, either. I can confirm that clicking on another one of the top-level links (like Layout System) closes the menu.\nThis only happens in portrait mode (the sidenav is persistent in landscape)\n. We may have actually seen different behavior. When following the steps above, the menu opened and would not close for me.\n. It still behaves as I describe but I believe that is as designed. Happy to close this.\n. I tend to think @msecret is right in terms of implementation details (though I tend to agree we would incur too much risk to change this right now).\nIn general, the max-width as implemented here is probably over-simplified. The 45-to-75 character rule of thumb (for single-column text, 66 is often recommended) is:\n- a rule of thumb, not necessarily something to be followed in a hard-and-fast way\n- meant to refer to long-form copy. Shorter pieces of text (like the alerts mentioned above, footnotes, pullquotes, headers, etc.) can often have longer line lengths comfortably.\n- only one dimension: legibility is affected by line length, leading (line height), typeface, weight, and other factors\nAlso of note, the average characters per line will vary by typeface and, in some cases, type size (depending on the type design). It will definitely vary based on roman/italic/bold.\nI'm thinking about how to boil down a topic as complicated as typography (there are entire books written on the topic, after all) into guidance that can be generally applicable. But it's probably right to offer guidance, not limits in this case.\n. A couple of other notes:\n- the method I prefer to calculate line lengths (which involves measuring the length of a lowercase alphabet and doing some conversions) puts 53rem at closer to the 66-character \"sweet spot\" than the 75-character max. So there's room to go a little wider (the 2/3 grid seems like it might be okay, though I'm not sure how many ems that is right now)\n- sizing in rems might be easier from a development standpoint than sizing in ems, but if we're talking about using different font sizes in some applications (alerts and footnotes would be great examples of this), then a max-width based on rems would be actively harmful. ems would be better.\n. Related to #447 \n. Our prioritization on the focus-state items was based on an (incorrect) assumption that we had implemented a custom one. I'm going to re-tag these as \"to be triaged\" to revisit tomorrow.\n. Can somebody with access to IE11 test this?\n. To my eye, there's also not enough spacing in Chrome (though it's not as extreme as the screenshot above)\n. True that it affects the site more than the components, but:\n- given that it's the typography page, poor typography makes us lose credibility\n- this would affect any structured content within an accordion... which seems like something people would do with the components\n. This seems like the expected behavior, but doesn't appear to have ever been implemented. We can discuss whether we can fit in any enhancements on the off chance that we have a light finding of bugs. (Or, we might decide that certain enhancements are relatively easy and more important than some purely cosmetic bugs)\n. If you open a desktop browser and change width, you'll notice the error field shrinks a bit sooner than the other ones.\n. This seems to work inconsistently for me in Chrome. Sometimes it scrolls, sometimes it does not.\n. It needs to move focus to the beginning of #main, not just visually move it. The primary use case is screen reader users (so they don't have to tab through a couple dozen links).\nIn general, we need to make sure we're moving focus to the correct part of the page when doing things in javascript. Not correctly managing focus is a common accessibility problem.\n. Not at all! If we just implement it with the standard HTML behavior, we should get the focus shift for \"free\". More making a note in case there are places where we're overriding that behavior with js.\n. I was assuming we were doing something with JS based on the fact that the focus is not correctly moving. Are we sure there's an id=\"main\" on every page?\n. Button does not appear to actually have disabled=\"disabled\" set\n. Links that look like buttons (and vice versa) can be a whole thing, because buttons and links actually behave slightly differently in the browser. Hmm..\n. Also does this in Firefox.\n. We'll want to fix this one once we have examples that are using the style guide. But I don't want to prioritize fixing it until we need it -- we can just delete the section if we have no examples.\n(I hope we have examples.)\n. It's throwing the error in jQuery, but it's very unlikely that it's an issue in jQuery. Most likely we're not correctly setting a variable somewhere and are passing in null when we think we're passing in a string.\n. The same thing we did for the skip navigation link should work for this -- just need to generalize it.\n. Are these links expected to have an \"active\" state? If not, focus doesn't move with a mouse click in all browsers -- I'm not inclined to mess with the native focus behavior unless it's problematic..\n. \nThis link. Only on the homepage.\n. Duplicate of #538 which is more descriptive.\n. The \"Contribute on Github\" link also doesn't work.\n. I think this is because when closing that accordion, the page is too short -- since the footer stays at the bottom of the window, there's not much we can do about the change in scroll position.\n. I believe the issue is that when you mouse over a link that does not have an underline by default, the hover state adds a border. That border appears to have the visited style when the link doesn't have said style.\n. Calling this one a medium because it is both very obvious and on the home page.\n. I don't know. \n. I'd rather give it a little extra space rather than too little (which was the previous situation).\n. Firefox does this too (but not consistently).\n. http://consumerfinance.gov/eregulations/1005\n(Section 2 is definitely long enough to require scrolling)\n. This appears to affect only tables, and is not limited to Safari (Chrome, at least, does it too)\n. Same situation as #558 \n. Good catch -- the breakpoint on this is actually just slightly smaller than the iPhone resolution in landscape. Expected behavior, and something we should have noted in the test procedures.\n. I can't replicate this on an iPhone 5S with 8.4.1\n. Is this still a thing?\n. Oh hey, there are br tags there. Take those out.\n. I'd rename the labels to be less confusing (what does \"high\" mean anyway?) as per @maya's suggestion.\nI think we should hold off on colors until we can extend the label component to support that more broadly.\nThe spacing above the sidebars is a \"low\" IMO.\n. Added another <wbr> to dropdowns.\n(Note: I don't think we'll likely keep up with adding these tags to new content, and ultimately I'm okay with that. That content will still scroll horizontally if somebody is stuck.)\n. This merge needs to be reverted immediately. These are not in scope for MVP/soft launch and present a serious risk to timelines. @vgvg \n. Closing until we get to a forms milestone\n. Closing pending a future forms milestone.\n. Closing pending a future forms milestone.\n. Closing pending a future search milestone.\n. I think if the intake team wants to come up with language/talking points about why 18F might want clients to use the standards, that's up to the intake team. I'm not interested in pressuring 18F clients into using them or not.\n. I'm a big fan of doing ZIP code first. There's some secondary research that supports it as a pattern, as well.\nAPI verification of address is probably a worthwhile recommendation, and we could even provide code snippets, but is something that individual implementors would have to do for themselves because of how USPS runs the API.\nAs far as the original question: I don't really know what the frequency and pattern for military mailing addresses is. I suspect the need varies quite a bit by agency.\n. Closing pending a future forms milestone.\n. We'll re-open this if research points us in the direction of IE8 support.\n. Old-style numbers have ascenders and descenders much like lowercase letters. They were traditionally used in running copy, while using lining numerals for tables. (when you want all the numbers to line up)\nhttp://theworldsgreatestbook.com/wp-content/uploads/2011/11/figureStyles1.gif illustrates it well.\n. Not sure we want to remove these. Blackberries are still heavily used among Congress and gov't employees, so seems a worthwhile thing to retain. Palm is not used much by anybody but as far as I know, that meta tag is not harmful to any other devices so I don't mind the slightly-higher download size to better support the odd Palm user.\n. Thanks for your contribution!\nWe're still figuring out exactly how we want to review and accept design contributions from outside of the core team, so we're going to need to put this pull request on hold for a little while as we define those guidelines and can apply them here.\n. I think we should consider #787878\n. Thank you so much for setting up the CDNJS instance!\nUnfortunately, our security practices prevent us from putting this forward as an officially-supported CDN. If we're to offer a hosted version of the standards, we need to be able to vouch for the integrity of all the servers in the chain of delivering that hosted code -- otherwise many government agencies would not be able to rely on it due to various laws.\nThat said, I think the CDNJS instance is very useful for non-government entities who are using the standards, as well as anybody prototyping/experimenting. We'll continue to think about whether (and how) we can inform the community about non-official tools like this.\n. We're interested in (but not actively working on) something of a middle ground: operating our own CDN, which allows hotlinking from .gov sites only. I'm sure there are quite a lot of intricacies of this (like I said, we're not actively working on or researching this setup) but it feels like a solution that helps to meet all of the needs discussed above.\n. Oh, we'll certainly reach out and plan sufficiently to ensure we have our ducks in a row on this one. \n. Right now, channels outside of the web are out of scope for our efforts, though I have had some discussions with folks at a couple of other agencies who are looking into print guidelines. I'm not quite sure this fits there, either, but it seems a better it. I'll point them to this issue and encourage them to reach out.\n. This is out of scope at the present time.\n. The name attribute has all kinds of implications for accessibility, and I would be very, very hesitant to treat it like an array without knowing what effects that would have on a broad range of assistive technology.\n. Broadly speaking, I like an approach similar to @jhfrench's here -- default to the accordion being open, if javascript is available, close it, and write in the buttons. (In the past I've mostly handled this in CSS using a no-js class but there are plenty of different approaches; the main thing is to have the content available to anybody who doesn't have js for whatever reason).\nAn additional improvement that would help both usability and accessibility would be explicitly, visually labeling the expand/collapse button with \"show\" and \"hide\" or similar. Those \u2795 and \u2796 icons are somewhat ambiguous and labels would help a lot.\nWe might also want to consider switching to icons that suggest movement (similar to CFPB's approach)\n. Ultimately, the web design standards will (and will have to) make a number of recommendations in areas that are either immediately adjacent to security or in the realm of security themselves. And that's not outside the goals; security has a profound affect on users' experience with government websites, and we are uniquely positioned to provide recommendations about how to meet security requirements usably.\nRegardless, in a case like this, a disclaimer that the text is only an example is very unlikely to carry much weight with implementors, who in many cases will likely lift this lock, stock, and barrel. I think it would be wise to have our recommendations agree with the latest NIST recommendations (which, ultimately, are moving in the direction of better usability).\nAs luck would have it, I think we're probably looking at identity and login recommendations coming to us from the login.gov team soon regardless. If not, we'll want to tackle login and signup as a coherent group sometime relatively soon anyway.\nIn the meantime, @brendansudol, if you submit a PR with the updated requirements, that would be fantastic.\n. > Does this mean we'd only need one requirement: \"password must be X characters long\"?\nGood question. I think it's one that I defer to @brendansudol, @esgoodman, and the login.gov team on - they've been working much more closely with NIST and have a better understanding of the new guidance.\n. So at that point we're looking at:\n- at least 8 characters, but stronger is better\n- avoid one or more dictionary words\n- feel free to use spaces/create a passphrase\n(I for one think it's appropriate to use some of that space suggesting what makes a password stronger, instead of just saying what the bare minimum is)\n. I actually kind of like just taking over the whole screen on mobile. It's not perfect, but it makes a certain kind of sense given the context (mobile devices are far more one-thing-at-a-time, really).\n. Option 4 seems like a winner.\n. Recommendation: put the required status of a field in parentheses just after the field name. This is helpful not just for low-vision users but also those with cognitive disabilities.\nLike this:\nName (required):\nMiddle name (optional):\n. Yes, the ok. It's a short form, but I don't want to get caught \"in between\" contractors and their COR if there's an objection for some reason.\n. @davidstenger I encourage you to post the issues as individual github issues so that we can better track progress, keep discussion clear (as opposed to discussing several possible issues in one thread) and so that non-GSA staff who use and contribute to the work can follow along.\nThanks!\n. Do not - I repeat, do not - remove this. If it's removed, put it back.. I'll put my comments over in #1748.\nThat said, I do think it's important, when requests like this come up, that we step back and make sure that we're serving user needs over agency desires. And by \"users\", I mean the general public. (More on this in the other thread as well.). I understand the concern here, and clearly the team needs to work on how they handle prioritization, but removal of this element would be a major concern to me.\nThis is one of the only (if not the only) user-driven addition to the standards in some time (we have clear research that points to why it's there), and if the Standards are going to be responsive only to stakeholder concerns and not address user needs, then I question why we continue the project at all.. Yeah, removing it completely would be a regression. The things we know:\n1. People are concerned about the security of their information online and worried about information theft. (source: federal front door research)\n2. When dealing with (ostensible) government sites, people take various strategies to figure out whether or not the site they're looking at is legitimate, including (source: FFD research):\n  - looking for .gov URLs\n  - looking for an agency's seal\n  - looking for the \"official U.S. government\" type banner\n  - a few other contextual items\n3. Several of the things people look for can be spoofed easily, so we want to reinforce the things that actually do help you determine whether or not it's a legitimate government site. And there are a number of cases of non-governmental sites spoofing government ones (sometimes with good intentions, sometimes with the specific intent to deceive).\n4. Some number of people are clicking on that link (source: USA.gov crazyegg research)\n5. People learn by exposure and repetition, so delivering this \"lesson\" via many different sites using the WDS is likely to be more effective than creating a microsite, or something to that effect.\nGiven that the user need here is centered around confirming that said user is at a government site, I think it's vital to favor plain language over nuance. We don't want to disseminate inaccurate information, but it doesn't need to reflect the history of the HTTPS memo, for instance. That's inside baseball and nobody in the public much cares.\nA few other items which I suspect, but haven't researched specifically in this context:\n1. Users are unlikely to want to leave the site they're on trying to achieve their goal, so having at least the core information in a modal/slidedown/on the page is important. A microsite might be a place where we can put more nuance to appease agencies and the like, but the link to that microsite should supplement -- not replace -- the text in the banner.\n2. While a number of agencies have spun up sites using .org/.com, this erodes user trust in government sites because it removes a tool they can use to ensure they're dealing with a legitimate site. Given that federal policy is to use the .gov/.mil domains, the Standards can provide a reinforcing nudge for agencies to do things correctly.\n3. While HTTPS everywhere has privacy advantages above and beyond when submitting information, this is the use case that is of primary interest to most of our users, so we should lead with that. And again, this can be a useful nudge for sites that are lagging behind compliance with the HTTPS memo.. Definitely change to design system. It's really really not worth the cognitive (and actual!) workload to continue using the \"standards\" name.. ",
    "carodew": "Seems like this conversation has run it's course, I'm moving this into our product backlog for the team to tackle. Thanks everyone for your comments! \n. By default I prefer public, but on this project I'm already experiencing the Everyone Has an Opinion, and a Strong One at That Phenomenon, so I wonder if opening this to public would mean being inundated with ideas and suggestions that would need a response and possibly clutter our own workflows. \nSince we're planning a feedback option (group email), would opening this up add additional benefits? Or would it be mainly another channel? \nI don't have a strong opinion either way, FWIW.\n. Open it!\n. Moving to backlog. \n. As long as we're in the expansive/generating lots of ideas part of the process, I think it would be cool to create a mindmap of ideas with branches connecting to different ideas. @ericronne, do you know if mural.ly can handle this? Or do you know of another collaborative program that might? \n. This is a crude example, but something like this: http://tomreillya2courseworkblog.blogspot.com/2011/10/finding-my-brand-name.html\nYou start with the core concept in the center, then start branching off different idea threads. The goals is to get a collection of words and concepts related to the product, which can then serve as inspiration for clever name ideas. E.g. In the center we could put \"US Pattern Library\" (or whatever working title we're going with). One person might be inspired from the 'pattern' concept and branch off with 'flags', then different terms related to the US flag (Betsy Ross, Stars and Stripes, etc). \n. Yes, thanks @ericronne!\n@mollieru et al. \u2013\u00a0do you think something like this would be useful? We shouldn't do the exercise if no one else sees the value in it (personally I like being able to see all the ideas in one place and being able to branch off of them, but that's just my preference). \n. Ok \u2013\u00a0I started a board here. Anyone should feel free to add, expand upon, or create derivatives of the ideas here: http://mur.al/Yx9XaOBG\n. Moving into workflow. Thanks for the comments!\n. Ditto screenshots/wireframes. I'd like to know more about what areas in the site the calendar would appear and then think about how that can be generalized to uses on other sites. And/or we can talk about it when we chat next week!\n. This is great \u2013\u00a0thanks for sharing! \n. I thought this was a nice example of a timeline as well, via MailChimp Pattern Library\n\n. Closing this and putting into our workflow. Thanks!\n. Ditto what @juliaelman said. That's good to know that there seems to be a bigger focus on HTML. We do  plan to do further research and testing into how people want to be able to use/access code \u2013 in order to put out something quickly that we can test we are making a few assumptions (and code use is one of those areas). \nOn that note, @maya and @juliaelman \u2013 since that area is more in question we can talk about things we can do to make it easier to build while still testable. For example, we probably don't need a 'copy' button right off the bat, since people will be able to manually copy/paste if they want to.\n. Here is the mobile wireframe: \n\n. I can say that on my previous team we used patternlab.io as a framework and initially it didn't provide different URLs for each pattern, so when I would tell a dev \"go find the project tile and use that\" I couldn't actually send them a URL straight to the pattern and it was a pain. Also, we might have had it configured wrong, because at some point URLs did start working for us and it was much easier. \nI was thinking that each of the top three sections would have one long page with all their subsections on it, but you could use anchor links to jump to the relevant spot on the page (and also be able to use that in the URL). In the new wireframe I started getting at that by including the top of the next component in line (Icons). \n. Closing this issue and moving into our workflow. Thanks all for the comments!\n. Moving into our product workflow. Thanks everyone for the comments!\n. @noahmanger I can see your point about the X's potentially being confusing\u00a0\u2013\u00a0is that something you've seen play out in user testing? \nI do think the icons could stand to be a bit larger (warning: personal opinion). I could see them being difficult to read for someone who has vision problems. \n. A couple of things \u2013\u00a0\nMarking the Optional fields vs the required fields has been shown in research to encourage more user completion of forms. Also, hopefully as one is designing their forms one is taking care to make sure there aren't very many 'optional' fields anyway, meaning that fewer fields will need labels. \nWriting out the word tends to be more user friendly and create less confusion. I've found that icons are more easily misinterpreted than just spelling out the words, even if it means the UI isn't as minimal as we design-oriented folks would like. So I would vote for keeping the words spelled out and coming up with an alternative layout for when labels are too long. \nSee: http://www.lukew.com/ff/entry.asp?725\nAnd: http://uxmovement.com/forms/why-users-fill-out-less-if-you-mark-required-fields/\n. I would just want to be sure there is some type of visual cue for the alerts other than the color red so that they can stand out even for the color blind. In @maya's examples, the top image has a vertical red bar on the left margin that draws attention. It could also be an icon or a background color. \n. There are generally two different types of alerts \u2013\u00a0one is the top-of-page alert that says what is wrong, and the other is the in-line alert that appears alongside (or below) the problematic form field. You can use both. It's hard to tell that the example on the sign in screen is intended to be the former, but it is. So the alert in question (in terms of positioning to the left or below or between the label and field) is only the inline-alert. On very short forms, including both may be too much, but on longer forms it tends to be helpful to have both. See http://static.lukew.com/webforms_lukew.pdf starting on slide 113. \n. +1 re: modifying typography\n. Closing this issue and moving into our workflow. Thanks all!\n. We've heard some concerns in user interviews that Font Awesome can be a bit cartoony, but it's not been widespread feedback. I do think that it would be worthwhile at some point to remove some of the cheesier icon options (beer? Checkered flag?) and/or recommend specific icons for specific contexts. \n. @logantpowell touch\u00e9. \n. Moving this issue into our team's workflow to consider all the feedback. Thanks!\n. Hey guys \u2013\u00a0there is a lot going on with edits to the nav today and I am concerned that we are making a lot of smaller decisions without looking at the bigger picture. I was hoping we could wait until Colin and I had a chance to test the navigation so we can make smart, informed changes, rather than making changes based on our gut reactions. I'm a little concerned that the team is doing a lot of work to modify the nav now that will just have to be undone when we do get user feedback. \n. :) I think this is our first anti-feature request. \n. Moving this into our workflow, thanks for all the comments! \n. Hi @mebates \u2013\u00a0we've got a road mapping meeting next week and we're going to talk about what we want to build in the next six months / year. I know it's been awhile, but the new team is working again and we should start seeing more progress soon. \nI personally am going to advocate that we provide guidance against anti-patterns and alternatives, because I think this is a good idea. If you want to add fuel to that fire, please feel free to add arguments here. :) \n. Also \u2013\u00a0gov timelines \u2013 AMIRITE?\n. +1 to smooth scrolling\n. Per Slack discussion, we agreed that for now we'll change the link that says \"Forms\" under the Elements grouping will be changed to instead read \"Inputs,\" and the link that says \"Forms\" under the Components grouping will be changed to read \"Form Blocks\" (excluding the punctuation). We'll then decide on further changes to the nav based on our sprint 3 user testing. \n. I asked about the \"An official website of the US gov\" bar in the design channel in Slack and there didn't seem to be consensus about whether or not it was useful to users. That being said, I'm not against adding it. \nI would suggest the following changes to the language: \nBAR: \nThis site is in alpha.\nReasoning: \"Learn more\" is vague language out of context. Potentially could link the entire phrase \"This site is in alpha\" as well. \nHave you thought about how it should appear in the mobile view? Does the FOIA site provide a precedent? \n. Can we add a :construction: ?? \nKidding, kidding.\n. I worry about the dropdown menu chewing up a lot of real estate on the mobile screen, although I like the ability to point people to how to provide feedback. \nI like both the FOIA and Pulse models of the top bar. \n. I realize the question was not directed at me, but @mjovel, do you want to post your comments here and we can decide if they should be separate issues? The team can always move them around if need be. I'm interested to hear your ideas. \n. Thanks for the feedback! \n. @mjovel \u2013\u00a0good points. I think that's something we'll need to consider moving forward. \n. Based on user research this sprint, there isn't a clear preference for notations being marked in pixels or ems so long as they're ems in the code. Closing the issue. Thanks!\n. Whoops \u2013\u00a0went back to an open browser tab and didn't check to see which one it is. :stuck_out_tongue_winking_eye: \n. That's a great suggestion! What kinds of content do you think pages like this should contain? What kinds of struggles have you seen designers and developers have with pattern libraries? \n. I've been holding off on weighing in on the issue because I'm of two minds. I definitely understand and support the idea of not overriding the browser defaults \u2013\u00a0particularly on mobile. I'm not an expert on 508 but I want to support it as much as possible, so in the absence of strong evidence otherwise, I would tend to err on the side of 508 and accessibility over fancy inputs. \nI was thinking about this issue last night and was going to post the above link to GDS (so I'm glad @mollieru posted it!) With that in mind, I do think there are reasons to offer date entry methods that don't rely on a calendar picker (based on their arguments and examples). \nI also think that in some cases, the default calendar picker (which I believe only shows one month at a time, correct me if I'm wrong) is not the best solution. For example, when I'm booking flights and I don't have a specific weekend in mind, I often like to see 2-3 months at a time. So there may be examples in which a custom calendar picker would offer a solution otherwise unavailable \u2013\u00a0but is it worth the cost/risk of overriding the browser/OS defaults in cases where the calendar picker wouldn't be appropriate? I do agree with GDS that a JS calendar picker should never be the only option for input. \nI also wonder if people in government will just build their own calendar pickers anyway if we don't offer anything, even if we explain our reasons. I wonder if we should aim to offer a few different options (similar to GDS) and explain the pros/cons to each? I don't have the answers to any of these questions. \nI'd love to see links to any existing research on the issue and if I have a chance to look into it today, I'll share them here.\n. We got some inconclusive feedback in interviews so far \u2013\u00a0as many people did not use these frameworks as did from the people we talked to (although if only half of websites use those frameworks it may be worth supporting). However I don't think we had a good enough sample in the first round to draw strong conclusions from that. It seems a number of agencies are also using Drupal, too, so we should consider that. \n. So far, user research has indicated that people are using a wide variety of frameworks \u2013\u00a0Bootstrap is mentioned a lot but just as many people don't want to work on Bootstrap at all, so we definitely don't want to require that framework to use this library. The front end stack (from what we've discovered so far) varies widely across agency websites. \n. Looks like we have consensus that we'll build to not conflict with Bootstrap and Foundation, but not require them as dependencies. Closing the issue! Thanks all!\n. I'm moving the additional suggestions to the product Ice Box, thanks all!\n. Be sure to check out the wireframe that @KHarshawat submitted in #115 for sortable columns.\n. Moving this feature request into our workflow, thanks for the feedback! \n. Adding the wireframes. \nSince we agreed that we'll need to do testing before we know for sure what works best, the team will build out the easier version (to reduce development time before testing) and build out each component page with a single download button. That button will download the files (HTML, CSS, JS if needed) for that component only. Since the download section layout is single column and pretty simple anyway, it will look the same in a mobile view.\n\nComponent page with code snippets (use for Accordion only for testing):\n\n\n. I think this is a great idea \u2013\u00a0I think long term it would be great to offer a few different solutions for various components with guidance on how to decide which to use. \n. @maya that looks good to me. Do you need anything from us or @angel to implement that? \n. Re color and size - sounds good, let's do it and we'll see what feedback we get from user testing. :)\n. We've put the notations in ratios because the grid is responsive. Would pixel dimensions allow you to do something differently?\n. I believe @maya was working on this for the next release, am I correct?\n. Yep! We'll definitely be checking the colors for contrast \u2013\u00a0a lot of the colors are 'for now' while @angel works on branding.\n. Agree with @Scotchester re: touch targets. As long as the negative space surrounding the checkboxes/radio button group is larger than the space between the options, they'll still look like a group. \n. @andrewmaier what do they struggle with, specifically?\n. @KHarshawat submitted a wireframe showing this concept in #115. \n. I'm thinking long-term we may want to offer a small sample of navigation schemes with guidance on best implementations.\n. Absolutely! Fonts will be specified in ems in the code \u2013 we are doing research right now into whether visual designers using the library would like to see pixel dimensions as a convenient reference for their mock ups, knowing that they'll be translated into ems in production.\n. Closing this as it's being addressed in workflow.\n. I believe the colors shown in the library are 'for now' while @angel is working on the branding and color scheme. But I agree that the yellow is problematic. \n. I'm adding this wireframe with annotations describing the interactivity of the password reset form. Note \u2013\u00a0we decided as a team to not worry about validation until the UX and visual design teams are able to incorporate some of the feedback about alerts/inline validation. However it would be good to add the checkmark validation within the \"Password must\" box. Some notes on that: \n- We aren't recommending any specific requirements for passwords, that's beyond our scope. These are just common examples. \n- The box should be able to serve as a static, informational box if someone wants to implement it without the interactivity. \n- Each criteria listed should be easily modifiable by whoever is implementing it. E.g., if a person's agency says passwords must be at least 12 characters long, they could modify that line. \n\nNote \u2013\u00a0the wireframe is showing a 2-column layout while the UI design is showing 1 column. 2-column is for wider screens/layouts and 1-column for narrower. EDIT: visual design has other priorities ATM so please work with the images provided to create the layouts, and feel free to reach out if you have questions, etc. \n. LGTM!\n. The above mock up looks good to me. \n. Yep \u2013\u00a0intended to be an input mask.\nThere are a lot of notes in the UX wireframes for each component that probably need to be carried over to the GitHub issues that track the components being built, not just the final UI design (which doesn't contain those notes). Something we should probably consider adding to our workflow. @juliaelman is that something Colin and I should track and take care of or something whoever sets up the issue should do?\n. Hmmm, some initial thoughts. \nI think we need to remove the :mag_right: placeholder icon in the search_big search bar so we don't have more than one search indicator (re: #123 ). \nSeems to me that when the three bars are all the same width, they should be the exact same design (e.g. medium screen view \u2013\u00a0why would two have \"Search\" and one have :mag_right: ? I think we should pick one and go with it. \nWhen it gets very narrow before the first breakpoint, the search text input gets too narrow to be usable, as noted in issue #124 : \n\nSeems like the breakpoint to full width on all three should be earlier to try to preserve the 27 characters wide target (any thoughts on how we can translate that width into a useful measurement, e.g. ems?). \nI'd like to chat with @colinpmacarthur and @angel to see if we can come up with a better wireframe/mock up to illustrate some of these ideas and the responsive behavior before you guys try to interpret this initial mind dump into FE action. \n. Just chatted with the design folks. Seems like one thing will be easy to fix \u2013\u00a0removing the placeholder :mag_right: from the Search Big: \n\nAll of the responsive / grid questions I think are more complicated and raise bigger questions, so we are still chewing on that. Please stand by. \n. Update for everyone \u2013\u00a0after chatting with folks we think we should make the change to the big search (removing the placeholder icon) and push to staging. For the responsive behavior, with @juliaelman's blessing I've made cards to account for the work in revising that for both UX and FE teams in a future sprint. \n. @noahmanger Yep, this is perhaps my favorite style guide page in existence. As in I'd like to print it out and frame it. :heart: \nWe haven't written the UX guidelines on this component yet and I'm not sure how many variations we can fit in under the wire, but I'm going to make a card in Trello to consider this. \n. Is now the time that I tell @nickbristow that I keep a record of funny things people say at every job I've ever been to? Congrats, you've been added to the archives. \n\" Like a visited state of a link, or the depressed look of a button. Not like, a sad button, but when you click it and its pressed in.\"\n. I added some in-line comments. Other than that looks good, thanks for tackling this! \n. +1\n. @msecret \u2013\u00a0I think these are good points. I like how you're thinking about the scenarios in which the library could be used.\nAnother thing to consider is that one of the use cases for the library is the ability to use it as a framework, which seems like it would also benefit from looking at it holistically from a performance perspective. \n. I agree with Maya and Julia. That specific requirement doesn't state that the password can't be all numbers, so I think we should stick with the literal interpretation. If there is a requirement for alpha characters that should be captured in a separate line. \n. @colinpmacarthur @maya \u2013 I believe it's the browser's default way to handle HTML5 number inputs. But it doesn't make sense for dates, definitely not years or dates (no one is going to click up 1979 times to get their birth year, for example). Is there a way of preventing the spinner controls from popping up? \n. lgtm2!\n. Adding a preview of a video showing the scrolling behavior. I think it's a momentum-based scrolling issue (not sure). On other websites, a swipe up or down with a finger will result with the scroll 'easing out' for a second or so after the swipe finishes. On our site the scrolling stops immediately when the swipe ends, making it feel throttled. \niPhone 6 running iOS 8.4, Safari (not sure which version). \n[edit Mar. 8 2018 \u2013\u00a0video removed since we can't share it publicly anyway]. It's on all text input fields. \n. Here's a video showing the behavior: [EDITED TO REMOVE LINK]\nEdit notes \u2013\u00a0I keep getting Google Drive requests to share the video, which I can't do per GSA policy. To save my email inbox, I'm removing the link from this comment. Scroll down to see an animated gif of the video anyway.. Received a request to access the video. Since I can't share the original video directly, here's a gif. Note that this issue has been resolved, I'm just providing it for the curious. \n\n. @juliaelman On the Trello convo I suggested to @angel that we need a mock up showing how the line height and margin would work when one of the requirements wrapped to a new line. Are we not doing that? \n. I don't normally have an opinion on the code, but I'd vote for sticking with usa for the reasons @maya stated, and also because that abbreviation has a meaning to users. usfwds doesn't really, at least not as strongly. And it's hard to type. \n. Also U! S! A! U! S! A! U! S! A! \n. @maya is this issue something that can be closed? \n. Hi @shanear \u2013 I've recently heard this feedback from someone else as well. We'll be doing a deeper dive into our form-related components in the relatively near future. Would you be willing to participate in a user interview so we can find out more about your experience working with the standards? \n. +1 @mollieru,  @colinpmacarthur or I would love to be involved in that. \n. Closing this for now since it's in our backlog to consider in the future. \n. Good catch @craigjh ! \n@mollieru @angel I think we should consider a non color-based indicator to tell the difference, perhaps a checkbox next to valid fields or an exclamation point in a circle for invalid fields. The positioning would just have to be in the visible range for people using screen magnifiers \u2013\u00a0so perhaps next to the label? \n. @maya makes sense!\n. Perhaps the disabled checkbox should not have a fill at all? \n. @colinpmacarthur will retest!\n. @colinpmacarthur \u2013\u00a0do you mean landscape mode, not portrait mode? \nother qqs: does this happen on other devices? \nWere we going to try to find a way to reduce the size of the \"This is an official site \u2026 currently in alpha\" header? Or is that accounted for somewhere else? Or is that a post-MVP kind of thing? \n. Samsung S5, Android Lollipop, Safari \u2013\u00a0similar issue. \nVideo: https://drive.google.com/open?id=0B1Wf-KSFneMUY08xWFIzSDhpRXc\nHow much real estate do we get back by reducing/hiding the header? \nI think a fixed header is useful on desktop but does seem problematic on mobile. Particularly with forms. \nI also wonder if the \"official site ...\" part of the header should be handled differently than the main site header. Maybe it's just hidden full stop when the vertical screen size is smaller than a specific height. Or reduced in some other way. Responsive can mean a lot of things. \n. Landscape mode. ;) \n. Also this would be a great issue to practice creating an interaction diagram, a la Gustafson. :D\n. Per request, I'm adding a gif of the video I linked to in my Aug 28 comment. \n\n. Putting this as a medium but barely a medium, so other medium level bugs should come first. \n. I think maybe just use the sample email \u2013\u00a0info@agency.gov ? \n. Also replicated on Samsung Galaxy S5, Android 5.0 Lollipop, Chrome\n. Point 2: How much do we care if the formatting changes as long as it works? And if we do care, can we use CSS to give it our own styles? \n. @Scotchester :boom: \n. Also replicated on Samsung S5, Android 5 Lollipop, Chrome\n. We need to decide what the fix is for this. \n. It's the same behavior, but it's on the username/email field instead of the password field. \n. @jpyuda you have been flagged to add what the thing should be.\n. I just tested this today and validation is working on the field, except it is showing a five-digit zip as invalid. \nBoth 5-digit and 9-digit zips should be valid inputs. \nInvalid input with five-digit ZIP\n\nTested on\nMacbook Pro\nYosemite 10.10.5\nFirefox 39.0.3\nstaging\n. @jpyuda Maybe it's how Firefox handles HTML5 validation? \n. Unclear if this is how it is supposed to work in Safari on iPhone \u2013\u00a0maybe it is supposed to be that if you hit 'Enter' anywhere in the form it triggers submit. Need more research to define the intended behavior. \n. Update: I have no idea how to research this. I did some Google searches but I don't really know what I'm looking for. // cc @jpyuda @mollieru @colinpmacarthur \n. @maya @colinpmacarthur We checked in staging and it looks like this may have been fixed, can you confirm or check? \n. @colinpmacarthur did you get a video of this behavior? \n. Would like to test text boxes on other sites and see how those handle long inputs. \n. Was able to reproduce this problem on Google's search bar. Further investigation indicates this might be an iOS 8 bug, and not anything to do with the way our site is coded. \n\nFound a couple other GitHub discussions of the same issue: \nhttps://github.com/react-bootstrap/react-bootstrap/issues/1164\nhttps://github.com/twbs/bootstrap/issues/16988\n. Does anyone know if this is a confirmed iOS 8 bug? I don't really know how to check this. \n. Going to check a few more text inputs on other sites, maybe some other sites from 18F. \n. Closing because it's iOS behavior. \n. What is the default behavior? \n. Resize does not appear to be supported on most mobile browsers. \nRef: http://caniuse.com/#search=resize\nClosing this issue. \n. @mollieru will look at all form fields and see which ones need validation and check with front end on how this might fit into the workflow. \n. I would suggest the following: \nMonth input only accepts numbers 1-12, with and without leading 0s. That is the user typing in the number 1 or 01 for January, 2 or 02 for February, and so on, all of these would be valid inputs. The number 34, however, would not be a valid input because it is >12. \nDay input accepts numbers 1-31, with and without leading 0s. \nYear input accepts any four numerical characters.\n. @colinpmacarthur is this going to be resolved with the work being done on the search bar right now? \n. The border on the medium search bar should be the same weight as the other two. \n@angel can confirm the specific width. \n. By the way, we've been in major focus mode on the project, so apologies for not getting back to you earlier. But this looks really great! Thank you for sharing! Also pinging @mollieru and @angel re: your notes on the typography. \n. Closing this issue since we've increased the line height since it was created. \n. Need to define what the correct solution is. \n. @mollieru any progress on this? \n. Thanks @jenniferthibault ! I added a link to this GH issue to the relevant Trello card that represents the work to rejigger the side nav. \n. Can anyone replicate this on another iPad? \n. @colinpmacarthur to find out if it's the same behavior or different or related.\n. Colin to investigate further to see if this is just his device. \n. No longer can be replicated. \n. Was this specified in the original feature? If not, shouldn't it be added as a new story in Trello, and not a bug? \n. As long as the Trello card isn't already in development. If so, we should not be making changes to it. If it's in development I think this should be a new card in the backlog. \n. Correct behavior is that the disabled button is not tappable and that no tap shadow appears. \n. Closing this since we're tracking the same issue in #493 \n. I wasn't going to weigh in but here are my two cents \u2013\u00a0\nWe've got a bit of a challenge here in that we don't know how users are going to implement text in their sites. If we did, I think we could say something like \"don't have text span more than # columns\" and then we design our grid takes care of the line length. Or we suggest a # of columns for main content area. \nAre we trying to control something we can't control by adding a max-width style on <p> text? How much is this something we should enforce via CSS rules in the pattern library vs. recommending best practices and trusting designers to make the best choice? And/or is this a v2 release when we can get into recommended page layouts more in depth? \nFor the design standards site itself, I prefer the first set on the paragraph text, v2 could simply be adding a column of white space at wide screens across the right margin.I'm not a fan of either alert options.  I think the alert box should be about as wide as the text within it. </nothelping></sorry>\n. This sounds like a good conversation to reference in a card in the Trello\nIce Box, so we don't lose these ideas when we look at post-MVP planning.\nOn Tue, Sep 8, 2015 at 4:52 PM, Maya Benari notifications@github.com\nwrote:\n\n@msecret https://github.com/msecret we could also recommend using the\n2/3 grid for main content and an optional sidebar as the \"default\" layout.\nSince there is a mismatch between 2/3's layout and max width text, we could\nmake our main container smaller and/or make our desktop text larger, until\nthey match. This would offer the most flexibility and interchangeability\nbetween the two approaches.\nCurrently we are using max-width of text within usa-content class, so its\nup to devs to decide how close they should add the class to their content.\nSome devs may choose to add it site wide. Others may add it per text block.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/18F/usfwds/issues/406#issuecomment-138696621.\n\n\nCarolyn Dew\ncarolyn.dew@gsa.gov\n470 558 4323\n@18F\n. Seems like this has been resolved by #665. Can this issue be closed? @mollieru @maya @colinpmacarthur @jpyuda (I don't know who to ping, clearly). \n. Can this issue be closed? @maya @angel \n. When we do tackle this after MVP we should see if this shows up on other websites. \n. Actually I'm having trouble tracking this down in the real world, seems like a lot of radio buttons don't have visible focus styles. This might not be a bug, but that seems wrong to me. Currently awaiting further clarification from the accessibility guild. \n. @nickbristow says \"always focus!\" \n. @mollieru and @angel \u2013\u00a0can you provide a visual design for the focus state? \n. I think that's ultimately your decision. \n. Ok. well, I can't tab through them on the keyboard or if I am tabbing, there is no visual indication of where focus is on radio buttons. \n. I guess the issue is that if I set focus on a checkbox above it and I see a distinct focus state I know where focus is on the page. If I tab through I expect the focus to move to the radio button group in some way (which seems to be the case), but there is no focus state (even on the selected radio button) to tell me where focus is on the page. So it feels like I'm lost. @nickbristow \u2013\u00a0any thoughts? \n. So basically, all we need is a version of the selected radio button that also has focus. A deselected radio button would never have a focus style. \n. @jpyuda tested and confirmed. Closing this issue!\n. Seems to be fixed, closing the issue. Thanks for following up!\n. Discussed in bug triage and closing for the reasons stated above \u2013\u00a0\nit's a setting in FF\nusers of FF who need this enabled probably already have\n*overriding this might get wonky.\n. lgtm! closing. \n. lgtm \u2013\u00a0I checked in Chrome and FF. Closing the issue!\n. Looks good!\n. My concern is that if the site itself is buggy, users will consider that an indication of the quality of code that went into the component. That would be a shame, because I know how much effort you've put into it, but people make these knee jerk judgements all the time. \nWe thought this warranted a medium because it is a typographic problem on the typography page, which seemed to make it more problematic than it would be had it appeared in another part of the site. \n. And @angel can probably consult on the issue as well.\n. Possibly related to #443\n. We left it at medium because we worry that IE11 could be difficult for keyboard users if they can't clearly see the focus outline. \nI'm still digging into the issue\u2014I saw this on an emulator in SauceLabs and ideally we could see what it looks like on the native browser. I don't suppose anyone has access to IE11? Thoughts @jpyuda @mollieru ? \n. @mollieru to check this at work. \n. Changing this to an enhancement since (per our discussion) it hasn't been implemented yet. \n. Related to #751 \n. Looks good. \n. Just confirmed it's not working in Chrome either.\n. @maya yeah, we did make that decision, although without realizing this implication. \nThere's another wrinkle \u2013 we have intro text for each individual form template that is supposed to go right under the header for each one. I can easily plop that in myself, but for the two forms that don't have a header it's a little trickier. I'll bring this up again in bug triage today.\n. From bug triage \u2013\u00a0I'm going to go in and add headers when I go in and add intro text (which I have to do anyway). Will check when done to see if this fixes the jump issue. We can discuss later if the headers seem duplicative (it might be different now given the different header styles). \n. @vgvg Will my adding headers and intro content in screw this up? \n. kk. So should I move the id up to the h2, and remove it from the preview div?\ne.g. \n<div class=\"preview\" id=\"name-form\">\nturns into \n<h2 class=\"usa-heading\" id=\"name-form\">Name form</h2>\n<div class=\"preview\">\n. Anyway \u2013\u00a0see PR #485\n. I'm still experiencing the issue. I think there are some other PRs that need to be merged in before we can close this, see thread above. \n. NM \u2013\u00a0it is working for me now. Closing!\n. @jpyuda and I discussed in triage and still think we should fix things in IE 11 first (as it has the highest number of visits to DAP sites by far) and work through other versions as those are completed. \n. We'll be taking a fresh look at the footer design based on new feedback and information, so issues related to the current footer will be moot moving forward. Closing these out for now. \n. @maya, @msecret, @vgvg \u2013\u00a0if you know what's going on right away feel free to tackle this as you are able. If it's slightly unclear what is going on and what the fix is, let @jpyuda @colinpmacarthur and I investigate further for you.\n. @angel if you haven't already, can you design a focus state for the page title, which is also a link to the home page?\n. @angel any progress on this?\n. That works for me. I think Colin wrote the original steps to recreate before the homepage was added, so I just want to note that the halo also needs to be added on the standards pages too: https://pages-staging.18f.gov/web-design-standards/getting-started/\n. @maya I think we posted at about the same time. ;)\nWe'll need it for both places, regardless. Focus should not disappear when tabbing. https://pages.18f.gov/accessibility/checklist/\n. Doh! Right then, it should not have a focus state.\nOn Mon, Sep 14, 2015 at 5:17 PM, Maya Benari notifications@github.com\nwrote:\n\n@carodew https://github.com/carodew cool just wanted to point out that\nthe homepage image that @angel https://github.com/angel posted has a\nfocus state around text. It's not a link.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/18F/web-design-standards/issues/483#issuecomment-140208389\n.\n\n\nCarolyn Dew\ncarolyn.dew@gsa.gov\n470 558 4323\n@18F\n. @maya it's on the password reset form, not the sign-in form. :) \n. I need to migrate some content for some of the form templates in today but I don't want to create a new branch to avoid merge conflicts. Could someone review this and merge or at least hold off and I can add the additional content in here? TY! @msecret @maya @vgvg \n. Would be higher if we knew it submitted a form on accident but we don't know that at this point. \n. +1\n. None of us could replicate this during triage, so Colin is going to try again and see if we can replicate it. If not, will close. \n. Weird thing \u2013\u00a0I just replicated it on IE 11 in SauceLabs. \u00af(\u30c4)/\u00af\n. This will be resolved when #514 is merged.\n. This has been resolved. Closing. \n. FWIW, this is what I see with background on the two containers: http://recordit.co/XdvyZZ1QJe.gif\nEDIT: updated the example to use background colors since borders (in the original) add width. \n. Just for the sake of not forgetting, @mollieru is going to post an example of this with real text instead of dummy text. \n. Closing this issue since this is behaving as expected. \n. @msecret Yah, I thought it looked strange. :/\n. Soooooo ... @maya recommended I take my edits and move them to a new PR. \nBut it looks like this thing has gathered more commits in the meantime? \n. moved my form template documentation to a new branch: https://github.com/18F/web-design-standards/pull/520 \n. Hey, I've already made these changes in PR #514\n. Should be fixed in 9dd3c0b. \n. Good catch. fixed in  7a9b6e9\n. Also IE 11. I'm guessing this is not a browser specific bug. \n. Possibly related to #539\n. The issue seems to be on the Download the Components button: \n\n. Or, rather, it doesn't in Safari. \n. Closing since this is expected behavior in Safari. \n. I'm seeing a similar thing in Chrome. \"Enter\" works to open/close the code/docs accordion but the headers don't show a focus styling (even when they have focus). \n. Also I'm seeing focus styles appear inconsistently in IE11, although that may just be an artifact of the emulator. \n. should go here: https://18f.gsa.gov/dashboard/stages/#alpha\n. Based on previous conversations with Bristow, we think this will pass WCAG standards. We'd still like to address it but probably after MVP.\n. Possibly related to #525\n. The download the components buttons seems to have a focus state, it just appears faintly against the dark blue background:\n\nThis was discussed in #537 and decided to be an enhancement. \nThe rest of the links actually point to things so that is not the issue. But I believe they are covered in #526 and #528. Sorry I didn't catch that earlier. \nWith that, it seems like everything in this issue is already covered elsewhere, so I'm going to go ahead and close it. \n. Duplicate of #534, which is more descriptive so we're going to keep that open and close this one. \n. @jpyuda @maya IMO, the underline should be blue. I think it would look weird to have purple headers. \nBut I think it's probably a call for visual design. @angel ? \n. We'll revisit this issue when we look at navigation schemes more broadly, forthcoming. \n. Wondering if this is a browser bug or something based on how we've built it? \n. Seems to be an issue with how browsers handle scrolling, so closing.\n. Hi @JuliaWinn Thanks for helping out! This is a duplicate of #347, so I'm closing this issue so we only have one point of reference on it. \n. Expected behavior I think is to space bar to select/deselect. \n. @angel can you provide a screenshot and be more specific on where you're seeing this issue? \n. In lists: \n\nNot in lists: \n\n. Something's up with site wide icons right now, will come back to this to try to replicate. \n. Icons are fixed now so I rechecked. I think our icon is being overridden by -webkit-autofill styles for background-image.\n\n. The problem is the same as in #595 \u2013 because these are live forms the submit button wants to do something. \n. Related to the accessibility issue in #812 mentioned above, the underlines help with accessibility and shouldn't be removed. We may need to update the visual guidance for links. \n. related to #347 \n. As mentioned in a previous issue thread, we'll be revisiting the footer design based on new feedback and information. \n. \n. The issue is that there is a WH initiative that links leaving .gov sites are required to warn you that you are leaving a government controlled site.\nOn the other hand, many agencies don't think this icon is enough to fulfill that requirement. \nAlso, if this is why this is a high, the text needs to be different. But not before launch. \n. We're going to revisit icons for and buttons again pretty soon, will revisit. \n. Marked as a \"high\" to fix the rounded corners styling in iPhone. \nThat they all appear the same on mobile is as expected, the main difference between the three of them is most apparent on desktop. \nThanks!\n. This seems to be fixed now.\n. I'm able to replicate this using an iPhone 5 simulator, but not on my iPhone 6 (which is also running 8.4.1).\nVery strange. \nTo simulate: \n1. Open Chrome developer tools:\n2. Toggle \"Device Mode\" to on and select \"Apple iPhone 5\" from device list. \n3. Navigate to the accordion page and scroll down to the accessibility guidelines. \nYou'll see this, which matches the issue above: \n\n. I think the issue is in the phrase aria-controls=\u2018collapsible-# because the part that says controls=\u2018collapsible does not wrap, which is forcing the entire text area to be wider than it should be. \n. It's only on iPhone 5 and only on sections where there is a code snippet within the documentation that is not wrapping, and forcing the text block to be wider than the accordion. E.g. on the Accordion Accessibility documentation. I noticed it in a couple other places, which I can list if it's helpful. \nI can verify I did refresh and I am on staging. \n. Arguably this could be a medium, but it looks bad so we put it as a high. Happy to revisit during triage. \n. wbr \u2013\u00a0word break opportunity might be a fix. \n. @maya, I just did a quick scan of the entire site, and I only found the issue in two places: \nAccordions (Accessibility)\nDropdowns (Usability / Guidance)\n. This also will be fixed when we implement the new header. \n. This will be addressed when we implement the new header. \n. We'd like to see \"Home\" added back to the side nav for MVP.\n. Perrrrfect. \n. Also when I hit the \"Skip Content\" the top of the page is hidden behind the fixed header. \n. @mollieru reports there is another section that looks more broken, screenshot to be added. \n. Calling this a Safari bug and closing. \n. Bug triage thoughts: \nit's because there is a submit button that is trying to submit something\nshort term solution would be to not make it a submit button, but that would make the code not relevant for people who download it\n*long term solution might be to create a JS solution that would prevent the button from reloading the page\n. @NatalieEMoore I believe this is expected behavior as we don't want the code wrapping excessively. It is possible to scroll horizontally to see the full line width \u2013 possibly we should also have a horizontal scroll bar visible if it's too easy to miss. I'll add that to our list of research questions to address after the MVP. \nThanks!\n. Hi @NatalieEMoore \u2013 you beat us to it. We had a brief issue yesterday evening when some files were restructured and temporarily broke the links to the icon font across the site (issue #600). It's been fixed, just to be sure I double checked on my phone and everything looks ok now. \nThanks!\n. Same as #598, for the code this is expected behavior. \nI'm still looking into the issue of documentation text cut offs though.\n. Personally, I am not going to lose sleep over this, and I think either way is probably fine, and we just need to make a call. \nI would lean towards treating the label in the way we want people to use it in their sites, which sounds like we want it accessibly hidden, right? Otherwise, users will have to either hide it themselves or might remove it entirely if they don't want to show it, which would not be accessible. \n. Just checked again given the new margins and this looks the same to me so far. Since this is marked as a low I think we should pick this back up after launch.\n. yep.\n. @colinpmacarthur will change to \"Fast\" and \"Medium\" for clarification. \nWe think we can ship without the color change and the spacing. \n. lgtm! (edit, just saw Maya's comment and will respond)\n. It would still be a mouthful, and a bit of a run-on sentence even if it's technically correct. \nAlso I don't think we're using the 'highest' standards of 508 compliance, aren't we using one version under the most strict? \nHow about something like:\n\"Built and maintained by a team of U.S. Digital Service and 18F designers and developers, this resource follows high standards of 508 compliance, and reuses the best practices of existing style libraries and modern web design. It serves as a guide in creating beautiful and easy-to-use online experiences for the American people.\"\n. As with the other footer issues, we'll be incorporating new feedback into the footer design so there are some forthcoming changes. Closing to prevent confusion. \n. This looks good to me. Are you still editing on this PR, or shall I merge? \n. @awfrancisco I made a couple extra tweaks that would be great for you to look at. \n@mbland and in the process created another merge conflict. :cry: \n. Hey @shawnbot ! When this is no longer WIP can you re-add the to-be-triaged tag? \n. @mollieru we fixed, correct?\n. @melodykramer \n. @codepo8 \u2013 also is there something in our documentation that we should revisit? \n. Lgtm. \n. Thanks @aarongustafson! I'm going to look at these today (just returned home from our 18F offsite). \nThanks also for talking to our team a few weeks ago. I was watching remotely from Atlanta and I enjoyed the way you graphed the different responsive interactions, and I plan on trying out the technique next time I get the chance. \n. @aarongustafson did not realize you were so close, I was in Chattanooga a few weeks ago! Would definitely be up for getting together. LMK if you're ever heading down. \nI will keep my eye on Code & Creativity, sounds cool! \n. Thanks for the feedback, we put this alpha version out for this exact purpose! We can definitely see how our overall recommendations might be contradictory and we\u2019ll want to resolve that. \nIn the long run we\u2019d like to offer a few different variations on date inputs and recommendations on what contexts they would be appropriate for (feel free to search our issues for \u2018date picker\u2019 and \u2018date input\u2019) \nOur reasons for recommending three fields were specifically because: \n- Javascript-based input masking to add formatting (which we\u2019d want for a single-date input on older browsers) can lead to bad accessibility problems (See a demonstration here: https://docs.google.com/a/gsa.gov/file/d/0B9rGmqNcHo-mRGpMS0xQbzVzeGM/edit). We\u2019ve partially solved this in other areas by using PoliteSpace by Filament Group (https://github.com/filamentgroup/politespace) but in our testing we found that sighted users expected the formatting to appear both when the field has focus and when they click away.\n- We wanted to visually separate each element of the date to make it easier to validate. For example, it\u2019s easier to validate three inputs rather than one: if someone types 11315 do they mean 11/3/15 or 1/13/15? \n-  The UK\u2019s Government Digital Service has found success using three separate fields. They visually separate the elements of the date and avoid using Javascript-based masking techniques. (See https://designnotes.blog.gov.uk/2013/12/05/asking-for-a-date-of-birth/) \nWe actually recommend against using JavaScript to automatically move focus to the next field in any form.\nThat being said, we\u2019re open to hearing arguments on why this might not be the best choice. Given what we\u2019ve mentioned above, do you still think that one input field is better? Are there other solutions we might consider? \nThanks!\n. I'm reopening this issue since there is still a lot of conversation happening, and I want to be sure feedback is captured (and stays in one place, as much as possible). \nThanks everyone for your thoughts! Ultimately this is just our first iteration (and alpha)  and we will consider this feedback as we further test and refine this pattern. \nHere are a few of our reasons for starting with this particular pattern: \nHints within text inputs (placeholder text) can have a lot of accessibility issues, and are easy to abuse. Some of the trickier aspects include:\n- The gray text that appears usually does not meet 508 contrast requirements, making it difficult to read for people with sight issues. \n- Making the text darker to meet these contrast requirements can lead to sighted users scanning the form to think that the form fields are already filled out. Hence, we're not using placeholder text and instead ask that instructions and hints be included within the label element to remain accessible to screen readers.\n- Placeholder text disappears as soon as the field has focus, meaning people using keyboards have to read ahead to catch anything useful the text provides. This also presents issues for people with memory problems. \nAll that considered, that doesn't mean that placeholder text can't be used, but we wanted to start out our recommendations with the safest possible default. As Tom Byers mentioned above, it ultimately depends on your audience and context, so be sure to do your own user research.  \nWe do want to add input validation and that will be coming in a future release. \n. Thanks @natdudley! That's a good point. We're going to look into this more closely. \n. @mbland I'm in no way qualified to review this, but I was tagging things to be triaged and noticed that Travis failed.\n. I'm all for avoiding proprietary formats when feasible, but I strongly suspect that most designers won't feel familiar or comfortable with using SVG files when they're likely more used to working in those proprietary formats. We plan on doing some user research on what tools/software civic designers use most frequently and we can see if we can work in questions about how open they'd be to working this way. \n. Also I'd apologize for the delayed response but it seems almost comical at this point. ;) \n. I thought we needed more research to make a decision on how to move forward with this? \n. I didn't realize @nickbristow and @andrewmaier had reviewed this. If that's the case, then I'm ok with merging this. @colinpmacarthur and I are starting to discuss the next steps for user research now, so there isn't a formal plan yet. \n. We did discovery research early on with developers working within several federal agencies and learned that they: \n- prefer to pick and choose the components they need and only download the bare minimum code necessary, which they reported was difficult to do in Bootstrap\n- felt that Bootstrap was too class-heavy and opinionated\n- reported that Bootstrap was difficult to customize and tweak\n- often had to spend many hours reverse engineering Bootstrap components in order to make them accessible and 508-compliant, a requirement for government websites. \n. @joewiz These are things that we're considering adding to the design standards in a future release, but we don't have them included at the moment. \n. @Drakenhart Sorry for the delayed reply. Yes, we'd love to hear more about your data. Any information you can provide about the context you used pagination in (what kind of page, etc) (even screenshots) and who you tested with would be extra helpful. Thanks!\n. @Drakenhart It's probably best to discuss the multi-page tables as a separate discussion. Of course, the length of the scrollable table really depends on the use case. ;) \n. This will be fixed in our next push to production, thanks!\n. Thanks! You raise a good point and we're going to take a look at this. \n. As we address this we'll need to update our guidance here: https://playbook.cio.gov/designstandards/visual-style/#links\n. @msecret Great points! I agree on all the framework decisions. I just want to clarify a few things that came up in the user research:\nWe found that developers, when asked to consider whether they would use a specific component in their project, went through three primary steps: \n1. Kick the tires of the component. In this phase they would play with the component itself and see if it behaved in the way they desired or expected. \n2. Examine the code. After playing with the component, developers would look at the code and look for things like, \"is this HTML clean and semantic? Does the CSS make sense to me? What can I modify here and not break the component?\" This is why we needed to display at least the HTML on the page itself. They wanted to do this process before committing to downloading something. I think in future iterations we should explore also showing some of the SCSS and possibly JavaScript, but I'm listing those in decreasing importance, and more research needs to be done in this area. \n3. Download the code. The last phase is downloading the code, and we actually found that instead of copy/paste, having a download package for the entire component was the easiest. When we make users copy/paste the HTML and then link up the CSS and JS files, all sorts of problems and difficulties come up. The files aren't linked correctly (they aren't linked at all), they didn't have the entire line of CSS or JS that they needed, etc., or they would have to add in the HTML header and footer accoutrements to make everything work correctly.  Some users want to download everything in a package, but most users also expressed a desire to pick and choose what components they wanted to use, and didn't want to be forced to download something in it's entirety (adding a lot of extra weight to their code). \nThe question came down to feasibility within the MVP and what was the minimum we needed to include prove the concept. There were a lot of questions we had yet to resolve, including, what do you do if someone downloads the header and footer separately, both of which rely upon the same CSS styles? Does the user download duplicate files in that case? What if a user downloads a footer and accordion separately, while the accordion is actually contained in the footer? Do you have to download both? Does the footer break if you don't download the components it contains? \nAs we move forward into the next phase I think we can address a lot of these questions through more research and iteration, and provide more options for downloading the code. Build, measure, learn. :) \ncc-ing @colinpmacarthur on this response in case he has anything to add. \n. @colinpmacarthur do you think that adding the state abbreviations to each option will cause issues for screen readers? \n. @IanLee1521 I checked with some of our accessibility experts about the screen reader experience and they all thought the abbreviations were fine, and probably even a benefit (since a user could skip the option more quickly). So I think we're ok to merge!\n. We had initial user testing indicate that people had trouble typing in the state when the state shared first letters with other states. For example, typing in \"New\" brought up New Jersey but users had to revert to mouse clicks or other navigation types to get to New Mexico or New York. Hence why I thought abbreviations might solve that problem. But as it is non-standard I'm happy to add that to our testing backlog to further validate that assumption. And in fact it might be easier to have a different solution altogether and not use a dropdown. A text box with type-ahead might solve all of these issues and might be easier to use. \n. They didn't have to type. But for most it was their first choice of interaction rather than opening the dropdown and scrolling. \n. Yes, as a way to jump to the correct option.\n. FWIW, I am not entirely convinced that a drop down is best solution for a state selector, although it is one that people are very familiar with. It seemed to be more challenging on desktop/laptops than text boxes, but on mobile, text boxes seemed more difficult.\nIt might be better as some type of text box with type-ahead suggestions (as a progressive enhancement), but I'm not sure. It's an area I'm hoping we can do more research into in the future, including how best to accommodate military addresses. \n. Can we write out the full email address? Many people don't have their primary email client set up on the computer and clicking on the email link opens an email client they don't use and haven't set up an account with. Writing out the email address means they can also copy/paste into their preferred email  client. \n. Is there a prototype we could click around/play with? Hard to really examine it with just a screenshot. :) \n. Noice!\nI'm really, really, really excited to see this. Also, might you or one of your team mates be interested in participating in a usability interview about your experience using the web design standards? \nI think the content is well organized and I like the horizontal strips of information. If I were a UX-er on this project, I'd probably have the following research questions that I'd want to test with my users: \n1. Do people think the category headers (Benefits, Resources, Process, Connect) in the footer links are clickable? Do they confuse these with links or are they visually distinct enough that it's clear? \n2. What do users think the category Process means? What do they think the Playbook is? What is the difference between a Benefit and a Resource?\n3. I notice the speech-bubble/lightbulb icon in the lower right is fixed to the viewport, while the rest of the content scrolls with the rest of the site. Do users understand what that does or what that's for when it's not paired with the explanatory text? Is it a priority for users or should it be fixed with the rest of the footer? \nVisually I'd like to see the spacing around the Crisis Line refined a bit but that may already be part of the plan. I think it stands out nicely given the color contrast. I'd be curious to know the emotional state of someone calling the crisis hotline and how that affects how they use the site. \n. It would be interesting to test the flat design/drop shadow question with hard-to-serve populations. We did initial user testing on our form fields and found that folks had no issues understanding the <label> <box> configuration, but testing different populations may yield different results. I'd be interested to see any related research about that. Thanks!\n. @rickleegit If you're available, would you (or one of the front end developers on your team) be willing to talk to myself and @colinpmacarthur for about an hour about your experiences working with the standards in your project? If so, what is the best way for me to send you more information? Thanks!\n. We'll not be focusing on anything app-specific in the next few months but are focused on making sure everything is responsive and we will be looking at form interactions and patterns more closely. Stay tuned! \n. I agree with removing the presentation classes. I'm not entirely sure why we need two code boxes on the page, or why we would need to present both grids \u2013\u00a0one with the fraction widths as text and the other with the example text. Wouldn't one code snippet be enough? And probably the one with fraction widths be easier to manipulate? \n. I understand why there are two examples, I'm not sure why each one needs a code snippet. \n. Hi @cvrebert, thanks for the suggestions. We'd like to look more holistically at how this pattern fits within a broader UI flow so we can also offer guidance on how it will be used. We'll look into it in the next phase! \n. Thanks! Same with the last one, we'll take a look at this within our broader road map for the next phase. \n. The focus of work for the product team in the near term will be to focus on providing a core set of web patterns that could be applied across frameworks \u2013\u00a0unfortunately creating themes for difference CMSs isn't in scope at the moment. But happy to follow the effort linked to above!\n. I'm all for this. :+1: \n. I think it might also be valuable to include the color contrast pairings for typography in the colors file (or the typography file). Thoughts? \n. The original suggestion has been implemented, the current illustrator file has the color palette drawn out on the artboard and global colors. I'll create a separate issue for adding the color contrast pairings. \n. @rtwell What's going on with the guides preview? Are the pink boxes indicating where the guides should be located? \n. Eeenyway \u2013\u00a0fixed all of these issues except the guides alignment issue in this PR: https://github.com/18F/web-design-standards-assets/pull/20\n. This is a really cool idea but out of scope for what we're doing. The roadmap will be made public soon, stay tuned!\n. Not exactly tabs but USAJOBS has a horizontal nav pattern that could be the starting point for tabs: http://usajobs.github.io/design-system/nav-secondary/\n. Is this at all related to #960 ? Or two different things? (honest question) \n. Moreover, we've heard feedback that the color names themselves are confusing for designers, and probably needs more thought and research put into it (from our team) beyond namespacing the variables (although I agree that namespacing seems like a good idea). \n. I'd like to keep track of areas where the grid system that we offer isn't meeting implementer needs. I have a hunch that there's probably a lot we can do to improve it (I've heard similar things from other developers, but not enough to find consistent patterns yet). \n. @simsong I think this is a great idea and it's something I personally hope to offer in the standards at some point in the future. Can't give a firm timeline on that at the moment, but it's definitely something that is being discussed.\nI'm curious \u2013 what contexts do you encounter the need to enter latitude and longitude? The others are all pretty self evident. \n. @simsong \u2013 what do you mean by 'proposed semantic standards'? Is that just a description of what it should look like? \nIt sounds like it would be helpful, I just can't picture it at the moment. :+1: \n. Thanks! This is great, and exactly the way I think we should be thinking about these patterns (best practices, backed by usability testing, etc).\nOne thing that @colinpmacarthur and I have struggled with is that input masking \u2013\u00a0while usually great for sighted users \u2013\u00a0is terrible for people using screen readers. Check out this recording: https://docs.google.com/a/gsa.gov/file/d/0B9rGmqNcHo-mRGpMS0xQbzVzeGM/edit\nWe've implemented PoliteSpace by Filament Group in cases where we've wanted to use input masking to get around this problem, but the implementation isn't perfect. For one, it doesn't provide visual hints when the text field has focus, so that doesn't actually help sighted users while they're typing (our initial research indicates that they want this). Also, when there is also password masking available, things get a little wonky (see issue #494). Not sure that particular issue bothers sighted users a whole lot but it might. \nWe're still looking for solutions for the above, and how to address the needs of both sighted and unsighted users. \nSimilarly, three separate text fields that use JS to automatically advance focus is really bad for keyboard users (it's hard or impossible to move back to an earlier text box if there is a mistake). \n. I've heard input masking used to refer to two different things: \n1. automagically adding in formatting (such as the -'s within an ssn) to a text field as the user types\n2. hiding what a user types by replacing all characters with a symbol, e.g. if a user is typing into a password field, you often don't see what they are inputing but instead see a series of \u2022\u2022\u2022\u2022\u2022\u00a0\nInternally we started referring to the first as input masking, and the second as password masking, just for clarity's sake. \nI agree about copy/paste. \n. You know, we overrode that behavior without really considering whether or not people wanted to be able to test the functionality. It might be worth thinking about undo-ing that, or it might be something we think about including in page templates. \n. Am I wrong in thinking it is (or was) considered a best practice to set the baseline font size to 100%, so that users can zoom more easily? Sincere question \u2013 I thought that was the case but I'm certainly not putting effort into keeping up. \nBut yeah, seems like the baseline em and rem should be the same in whatever scenario. \n. :100: \n. @humancompanion It would be great if we could talk to the developer/developers involved in working with the subsections in the footer so we could learn more about how it was difficult.\nAs for the required links \u2013\u00a0at the time of the MVP launch, we hadn't had the resources to do enough usability testing or user research to determine how those links would best fit into the footer design we're offering here, so we left it pretty generic for the time being. As user needs dictate, we may look into adding more detailed guidance on this issue in future iterations of the footer.  \nWe'd be very interested in learning what you discover from your own usability tests, so please reach out whenever you have something to share. Not entirely sure what links will be required for your site. \nWe're not against fat footers, but it depends on how well it works for your specific users and contexts, so it's hard to say whether or not that's the right solution for USAJOBS. \n. Thanks for the feedback, and for sharing the results of the research you did! \nWe're going to be revisiting the footer design fairly soon and will take this feedback into account. \nI'm curious \u2013\u00a0do you think that most users are interested in finding information about the Privacy Act, FOIA, or other required links? My hypothesis is that there is not much desire for that content from the vast majority of users, and it probably makes sense to include them on the page in a way that does not impede the main user goals. At any rate, I do think there is a place for the Standards to address the required links in some fashion.\n. Previous user research has shown that spelling out the words \"required\" or \"optional\" are easier for users to understand than just the asterisk, which is true for sighted users regardless of whether the form is coded correctly for screen readers. Sometimes asterisks mean a field is optional and sometimes it's required. This is based on recommendations from Luke Wroblewski's book Web Form Design: Filling in the Blanks. \nI also (personally) think that coloring the asterisk (or label) red is a little too close visually to an error (which are usually also red) and could impede scanning through the form to look for error validation. \nWe recommend labeling the fields as required or optional based on which is fewer, although hopefully if you've designed your form right, there are always going to be fewer optional fields (because you aren't asking for information you don't need). Also, there's been other research that shows people are more likely to complete a form when the optional fields are labeled rather than the required. \nI think it's worth considering the placement of the label in re to screen magnifiers. We specifically did not position that label to the far right of the form fields for that reason, but I'm open to exploring if the required/optional labels should immediately follow the name label (for example, First Name), but the trade off could be it makes it harder for sighted users to scan the form and quickly see what is required or not. That might be an ok trade off. \nWe will be working on building our our form templates at some point in the next phase and will definitely consider this feedback. None of the advice we (or any other pattern library, for that matter) should trump your own usability testing with your own users. \n. Check out this article: http://uxmovement.com/forms/why-users-fill-out-less-if-you-mark-required-fields/\nI may have slightly misspoke \u2013\u00a0it seems that people are more likely to fill out all the fields in a form if you mark the optional fields. But ultimately it's whatever has fewer fields \u2013\u00a0required or optional. Although hopefully you've eliminated as many optional fields as possible. \n. Hi @amyfens \u2013\u00a0I do think there needs to be a visual cue that indicates the checkbox is disabled. I am not aware of any research specifically about the usability of disabled and checked checkboxes, but the general guidance of affordance would indicate that there should be some kind of indication. \nYou could try using the current disabled styling for the unchecked box and add a check, so it's consistent with both the disabled state and the enabled checkbox. Just be sure to consider appropriate color contrast for the thing. \nWe may possibly address this when we focus on building out our form components, which is upcoming, but I can't give a specific timeline on this.\n. @patricknowlan interesting idea. We've talked about adding some type of pattern for a site-wide alert or banner, something a little more abstracted from this but could be adapted to this use (as well as other things, such as alpha and beta alerts for in-progress sites, etc). \nI think (on a gut level) it would be good for any such message to include instructions (or a link to instructions) that further explain what this means to the user \u2013\u00a0should they take (or avoid) any particular actions? \nOur near-term priorities include streamlining the workflow for standing up or designing a simple website, which includes header elements. This might be something we could include on a second pass of that work. \n. As mentioned in Slack, I think we should hold on this and possibly add an option to download the design stencils, but that should be a separate card that goes through the full workflow. \n. I think it would be good to get @kategarklavs 's :eyes: on this before it gets merged.\n@jbruce-gsa  \u2013 Kate is the content strategist on our team. \n. As far as I know at the moment no further action (but the devs on the team may say differently). I just wanted to be sure our content person had a chance to review \u2013\u00a0more a note to the team than to you. TY!\n. Hi! My belief is that different types of date inputs will be more or less appropriate depending on the context. Given the short amount of time we had to launch the alpha version, we didn't have time to design, validate, and build additional input styles, but you can get a sense of the different types that might be viable from GDS: https://www.gov.uk/service-manual/user-centred-design/resources/patterns/dates.html\nIt may make more sense if we abstract the CSS class to something more like usa-memorable-date instead of being DOB specific. \n. This has been fixed! \ud83c\udf89 \n. LGTM!\n. As long as this doesn't change the actual color combinations that we recommend for text accessibility, I don't think this needs a separate visual design review. Personally I like the idea of using mixins to make the process easier but still allowing flexibility, although ultimately I defer to the dev team on that one. \n. Thanks for pointing that out! Just merged a fix. \n. Hovering is not accessible to screen readers or to keyboard users, but it's also more difficult for mouse users who have motor difficulties (think hand tremors). Overall I'd avoid using hover to expose essential interactions on any app, but especially navigation. \nI'm also tagging @bradnunnally since he is taking over the UX role on this project. \n. Adding some context here \u2013 adding this detail text came from the FFD discovery research that indicated that folks don't know how to distinguish a government site from a spammer site, which is a big problem in some contexts. For example, private scammers who charge people for filling out the FAFSA, the free application for federal student aid. This text is intended to help folks understand how to recognize official, secure government sites. The banner text is also intended to help push agencies to use best practices (.gov domains, https). I'm sad to see you're moving away from supporting an identified and researched user need. . \" (mostly) unnecessary because it describes properties of sites that users are already viewing.\" \nFollow up \u2013 this is a bad assumption. People who know DO look for the dot gov and https to see if they can trust the site, the effort here is to help more people know to look for that. \nText tweaks could fix the problem with the minor inaccuracies. . Let's make the linked text be \"Filament Group's Politespace\" .... thanks!\n. So the tricky thing here is when screens have differing pixel density. I agree that the 2mm is a confusing measurement and not very useful, but it's based on the size of an average finger/thumb tip (touch size). 10px on a low resolution screen is smaller than 10 px on a high resolution screen. See http://www.lukew.com/ff/entry.asp?1085 \nI wish there was an easier way to provide guidance on this. Maybe we just need to be more vague and say \"The average adult fingertip is between 8-10 millimeters in diameter; make sure any interactive elements within the collapsable region are far enough from the headers so that users don't accidentally trigger a collapse.\"\n???\n. Should we refer to the note in accessibility about Politespace? Or is that junking up the content too much? \n. Suggestion for word-smithing to be shorter: \n\"The magnifying glass is almost universally understood and doesn\u2019t need to be visually paired with the word \"Search.\" However, be sure to provide text for screen readers, as noted under Accessibility.\"\n. Suggested word smithing: \nAlways include the word \"search\" inside the <button> element for screen readers. You can hide this text with position: absolute; left: -999em; (as we have here).\n. fixed in e4fb0b8\n. removed in 48886ee\n. It's not in the side nav, but it is between the address form and the login form. \n. Well, generally we should be using sentence case as per the 18F content style guide (https://pages.18f.gov/content-guide/capitalization/) but your question made me stop to think about SSN being a proper noun. So far the writing lab seems to think Social Security Number should be capitalized. \n. ok, fixed in e0d2a6c\n. fixed in 968122c\n. fixed in 968122c\n. I don't know how to do that within GitHub.\n. Sign-in as an adjective or a noun. Use the sign-in form to access your account. \nSign in as a verb. Please sign in to access your account.\n. fixed in 6a6b5bf\n. I believe there is supposed to be a space before and after an ellipses. @angel\u2014do you want to weigh in? \n. Ok with me if ok with @mollieru \n. fixed in 2765104\n. changed in  920d155\n. Per Writing Lab clarification\u2014phrases that are not complete sentences in this context do not get periods. I will update this PR!\n. Fixed in f4394c7\n. How about \"Buttons should display a visible focus state when users tab to them.\" ?\n. Apparently there is a fair amount of controversy surrounding this. @colinpmacarthur and I spoke and we thought a more cautionary, less prescriptive approach would be more fitting our 'design for flexibility' goal. But it probably deserves a mention given the parallel priority of accessibility. How about this, @maya ? \n. I'd prefer \"View on GitHub.\" Code seems implied. If it's not adding something meaningful I'll always opt for the pithier version. \n. should it read \"on a dark background\" instead of \"on dark background?\" \n. checking with the #writing-lab to see if Web Design Standards should be capitalized or not. Otherwise, yes. \n. Also on line 967, probably should be \"on a light background\" instead of \"on light background\" \n. Ooooh, good question. I would recommend against doing that, since there was a lot of negative response from users in regards to frameworks. They want to use one thing or another, but not be required to use everything. \n. As far as capitalization, our writing lab has said that stylistically it could be either Title Case or not, either is fine. But suggested making it less formal and more conversational. Such as \"this pairing is included in our design standards.\" \n. I don't mind being specific on which class or mixin to use, but a) I'll need you to tell me specifically which class or mixin to use, as I don't know what that is and b) I think it's good to mention in accessibility as well, as it's an important concern in that area. \n. added in 35923ab\n. please change Wse to Use. :) \n. @awfrancisco I would not have caught this earlier, but am now remembering from a previous conversation with the Writing Lab that we decided \"Social Security Number\" should be capitalized. \n. Think we can delete the word 'project'? Sounds horsey to me. \n. Dang. I missed this one. Thanks for catching it!\n. I think we agreed earlier that we'd use it as a plural, since it sounds more natural. \n. I really don't think we should ever use the word 'pretty' in reference to design, let alone say something we're offering is 'less pretty.' Can we recast this sentence to put things in a more positive light? \n. This url doesn't seem to work? Try this: https://github.com/18F/web-design-standards-assets/archive/master.zip\n. Can we make the link text start on \"Check out our Getting Started for Designers information\" ? \n. ",
    "angel": "Sounds good to me too! Open away! \n. I like gov-pattern-library or usgov-pattern-library as well. \n. I think we'll need at least 400 italics. We'll also need 600. That's what I've been using for the buttons. Thanks!\n. Yes, headers are in 700. If you think the page load will be too much, I would rather take out the 600 weight. \n. Agreed @noahmanger! Thanks for pointing that out! Will work on a focus state. \nThanks for the examples @maya!\n. @mollieru is header 5 too big? We can add a header 6. Let me know what size you think is would be good. \n@mebates I will look into a sans-serif body option. The list items do feel too close. I have them at a line-height of 22px right now. Thanks for the feedback! \n. Here's an updated list: \n\n/cc @mebates \n. These look good to me. I would reduce the padding between the Primary Nav heading and the secondary link to be the same distance as the secondary links. \n. Looks phat to me! :+1: \n. I think if we are going to separate the \"patterns\" to \"elements\" and \"components\" those sub sections should be linked to sub headers that say \"elements\" and \"components\", so then it would make sense that those are clickable as well. \n. @mebates yes, the latter! An option for the look and feel for the standards themselves. We will definitely be sure to pick 508 compliant colors as we narrow and refine the look and feel. If you have any favorite 508 resources please let me know! Thanks for your feedback!\n. @KHarshawat I put everything into one .ai file, which can be found here: https://drive.google.com/file/d/0B4cLTFDoVvuDcjlJakFLcFd3Z0E. I'll upload it into the assets repo, but before I do I wanted to make sure it's formatted in a helpful manner. Is there anything missing? Are there things I should take out? Do you need guides or things to be in different layers? Let me know. Thanks! /cc @jenniferthibault @mollieru @emilyville @jjoteal \n. @maya @juliaelman I think the phone number and email should drop down to a second line, so the links can have more room to breathe. \n. @maya I would say $color-gray-600 (#757575, the lightest gray we're using that passes contrast with white background) and 14px (1.4em). What do you think @carodew?\n. I think it's an input mask too.\n. :+1: \n. +1!\n. @carodew @colinpmacarthur updated assets in this PR: https://github.com/18F/web-design-standards-assets/pull/8. I was wondering for the \"download visual style assets\" on the typography page should that include the UI components and color files? Right now the zip just includes fonts and pairings for that button. Let me know what you guys think and I can update as needed. Thanks!\n. @nickbristow our green-light (#48a463) doesn't pass the 508 color contrast but is 3.1:1. Is that ok to use for success stroke and icon color in this context? If so, then I think we should go with the green-light. Happy to add icons additional icons, @carodew if you can give some guidance and make a trello card for me that would be great! Thanks!\n. @nickbristow just for the stroke and the icon color. Like this: \n\n. Sweet, thanks for your help @nickbristow! \n. @craigjh @maya @carodew @mollieru Here is the v2 version of the checkboxes. Would our gray-lightest work?\n\n. @carodew the border should be 1px. I'm not seeing the border difference on my iPhone 5s, but I do see it as rounded!\n\n. @maya @msecret can we up the max-width to be whatever 2/3 of the grid would be, I think that's about 65rem. As for the padding it would be awesome to keep the margin 30px all around to match the design, but if that causes too many problems then we can go with what you think is best. /cc @mollieru \n. @maya oh sorry, for some reason I thought that was in this thread. Will find a better place to put it. \n. @maya Ok, here are the changes:  \nPairing 1: Default: Merriweather headers, Source Sans Pro body (basic)\nDisplay line-height: 1.3em/68px\nh1 line-height: 1.3em/52px\nh2 line-height: 1.3em/39px\nh3  line-height: 1.3em/26px\nh4  line-height: 1.3em/22\nh5 line-height: 1.3em/20px\nh6 font-family: 'Source Sans Pro'; font-weight: 400; line-height: 1.3em/17px\nLead paragraph  font-size: 20px (not reflected in example); also should be Merriweather in the example; line-height: 1.7em/34px\nBody copy  line-height: 1.5em/26px \nItalic body copy  line-height: 1.5em/26px\nPairing 2: Merriweather headers, Source Sans Pro body (robust)\nDisplay 1 line-height 1.3em/68px\nDisplay 2 font-weight: 300, line-height: 1.3/52px\nh1 line-height: 1.3em/52px\nh2 line-height: 1.3em/39px\nh3  line-height: 1.3em/26px\nh4  line-height: 1.3em/22\nh5 line-height: 1.3em/20px\nh6 font-family: 'Source Sans Pro'; font-weight: 400; line-height: 1.3em/17px\nLead paragraph 1  line-height: 1.7em/34px; font-weight 300 (not reflected in example)\nLead paragraph 2 font-size: 17px; font-weight: 300 (not reflected in example); line-height: 1.7em/29px\nBody copy line-height: 1.5em/26px; ssp not reflected in example\nItalic body copy  line-height: 1.5em/26px; ssp not reflected in example \nPairing 3: Merriweather with minor Source Sans Pro\nDisplay 1  line-height 1.3em/68px\nDisplay 2 font-weight: 300; line-height: 1.3/52px\nh1 line-height: 1.3em/52px\nh2 line-height: 1.3em/39px\nh3  line-height: 1.3em/26px\nh4  line-height: 1.3em/22\nh5 line-height: 1.3em/20px\nh6 font-family: 'Source Sans Pro'; font-weight: 400; line-height: 1.3em/17px\nLead paragraph 1  line-height: 1.7em/34px; font-weight 300 (not reflected in the example)\nLead paragraph 2 font-weight: 300 (change in example); font-size: 17px; line-height: 1.7em/29px\nBody copy font-family: 'Merriweather'; font-size: 15px; line-height: 1.7em/26px\nitalic body copy font-family: 'Merriweather'; font-size: 15px; line-height: 1.7em/26px\nPairing 4: Source Sans Pro only\nshould say 300 not 700 for the #1 font\nDisplay 1 line-height: 1.3em/77px\nDisplay 2 font-weight: 300; line-height: 1.3em/57px\nh1 line-height: 1.3em/57px\nh2 line-height: 1.3em/44px\nh3 line-height: 1.3em/31px\nh4 line-height: 1.3em/25px\nh5 line-height: 1.3em/21px\nh6 font-weight: 400; line-height: 1.3em/17px\nLead paragraph line-height: 1.5em/33px; example should be 300 weight\nBody copy line-height: 1.5em/26px\nItalic body copy line-height: 1.5em/26px\nPairing 5: Source Sans Pro headings, Merriweather body\nDisplay 1 line-height: 1.3em/77px\nDisplay 2 font-weight: 300, line-height: 1.3em/57px\nh1 line-height: 1.3em/57px\nh2 line-height: 1.3em/44px\nh3 line-height: 1.3em/31px\nh4 line-height: 1.3em/25px\nh5 line-height: 1.3em/21px\nh6 font-weight: 400, line-height: 1.3em/17px\nLead paragraph font-family: line-height: 1.5em/33px (not reflected in example); also example should be source sans pro and 300 weight\nBody copyfont-family: 'Merriweather'; font-size: 15px; line-height: 1.7em/26px\nItalic body copy font-family: 'Merriweather'; font-size: 15px; line-height: 1.7em/26px\nAlso, Pairings that only have one lead paragraph should just say lead paragraph instead of lead paragraph 1 and all the number listings of the fonts don't need any commas, so just Source Sans Pro Light 300 for both Merriweather and Source Sans Pro.\n. @maya can we take 2px off the bottom. I know it's suppose to account for the descenders so then that is centered but I think it looks better when the Capital letter is centered within the box. \n. @carodew Can we do the same blue focus we are doing for the text input? \n. @mollieru I updated the fonts for the 3rd pairing. The body has been changed in this PR. I thought it was weird to have a button style for just one pairing, so I didn't add it. I think we should just state in the buttons section that all buttons should be in sans. \n. @mollieru yeah, I think so. Since it would be a font they would need for that pairing.\n. Added the rest of the typography fixes to address the stuff that was left in my first comment. \n. @maya Almost looks good! Lead paragraph 1 should be font-weight 300 for the 2nd pairing like the 3rd pairing in the example. The lead paragraph in the example for the 4th and 5th pairing says 300 when I inspect the element, but it doesn't look like it is to me. Once those are fixed we're good to go!\n. Ah! Cool, all looks good to me! Thanks @maya! +1\n. @mollieru did you want the \"As a work of the government...\" to right align with the button? \n. Let's use the focus halo we use for everything else and do: \n\nWould that work @carodew?\n. No focus state on Chrome either.\n. @carodew Accessibility-wise, would it be ok if we have the link be the primary-darker always instead of the normal primary colored links? /cc @maya @mollieru \n. Thanks for your feedback @KHarshawat! As @maya stated above this is by design. We are recommending that line-length be no more than 75 characters for desktop and to left align text both for optimal legibility: https://playbook.cio.gov/designstandards/visual-style/#typesetting.\n. @maya is right, that's how it was designed. I think full width would be too big on the page for each screenshot, but maybe there's another solution that would take up the whole width, like if we had two in each row. Thoughts @KHarshawat @mollieru?\n. Revisited the examples section of the homepage and decided to update the images to full-width in this PR: https://github.com/18F/web-design-standards/pull/709.\n. @KHarshawat Haha, yay! Glad you like it! Thanks Kavi! You are awesome! :) \n. Thanks @KHarshawat!\n. @mollieru your suspicion is correct and I'll be saving the in 2x and doing a PR. \n. Also doesn't work for Chrome.\n. Jk, I see that if I use the arrow key it opens it up!\n. Sorry was ahead of myself. I see now that the arrow keys work! \n. @mollieru I only checked on Chrome, but looks like Safari:\n\nand Firefox as well:\n\n. @maya just search. When I click inside and type it actually turns to what it's suppose to look like:\n\n. @mollieru @carodew added two more screenshots above. \n. @colinpmacarthur @maya same for staging on safari on my iPad mini. Also no checkmarks for checkboxes and password reset must box. \n. @maya added the labels back and class=\"usa-sr-only\" to keep them hidden but accessible! \n. @maya I think we always want the label hidden. The h6 is just there as part of the preview title. Not part of the component itself. I would defer to @carodew @colinpmacarthur @mollieru if that doesn't make sense. Thanks!\n. @maya Fixed! Sorry should not do a PR so late! :P Let me know if I missed anything else!\n. @maya made some updates based on your feedback, let me know if I missed anything. Thanks!\n. @maya unlinked the images. Waiting on higher res images. \n. @maya yup, images have been updated and the class has been removed. Let me know if I missed anything else. Thanks!\n. @maya fixed, let me know if I missed anything else. \n. @maya this zip doesn't have the components just the colors, pairings, and fonts. I've updated the version number from 1.0 to .8 and the gray-lightest to #f1f1f1. Did we want the components in this zip as well?\n/cc @mollieru \n. @maya lgtm! \n. @maya I wasn't sure if it's defined, but we wanted the line-height of the lead paragraphs and body that are in Merriweather to be 1.7.\n. @maya agreed! I did not update any styles with it in case there was already a variable I was missing or if we wanted to create one. :)\n. @maya let's add it to this PR. There was also some lead paragraphs that I didn't know where to change the sizes and font families for. The things I missed are in the very first comment.\n. @maya the visuals of the site? @mollieru and I decided that if we have serif headings we would have serif lead text and that's what we're doing for our default, so I think that 20px should stay. @mollieru thoughts? \n. @maya  It wouldn't work otherwise. Happy to change if there's a cleaner solution. \n. @carodew @mollieru could we say \"Examples\" or something else that avoids the ellipses all together? I think it would look cleaner that way. /cc @maya \n. @carodew @mollieru @maya According to http://www.thepunctuationguide.com/ellipses.html \"Each period should have a single space on either side, except when adjacent to a quotation mark, in which case there should be no space.\" \n. Added!\n. @maya I had taken out the top margin on the preview box trying not to change the margin of the elements themselves, since some elements had margin tops to begin with. For the h6s they have a 4rem margin normally but the first one should be only 3rem. The > a was just for the link within that preview so that would only take that margin top when it was in a preview and not effect the a itself. ul and ol I wanted to take the margins out just for that box, but agreed that it should not effext the component itself. Will look into using a class this weekend.\n. Added a styleguide class\n. @maya good catch, removed!\n. @maya they were in p tags for the links that were merged before so I just added the images. It gives consistent spacing so I left it in. Let me know if you think we should take it out. \n. ",
    "colinpmacarthur": "+1\n. I will pursue getting DAP access so that I can find out the answers to these and other similar questions. \n. (Added to the project's Trello icebox.)\n. I'm in agreement with @carodew: I think what she describes is a good way to go.\nAlso, so glad each component will have a URL! You all are the best.\n. +1 to Carolyn, especially on writing out the words. I think asterisks seem\nlike a common convention, but I've seen them not get noticed / used by less\nexperienced users in usability tests at other agencies.\nOn Mon, Jun 22, 2015 at 8:10 AM, Carolyn Dew notifications@github.com\nwrote:\n\nA couple of things \u2013\nMarking the Optional fields vs the required fields has been shown in\nresearch to encourage more user completion of forms. Also, hopefully as one\nis designing their forms one is taking care to make sure there aren't very\nmany 'optional' fields anyway, meaning that fewer fields will need labels.\nWriting out the word tends to be more user friendly and create less\nconfusion. I've found that icons are more easily misinterpreted than just\nspelling out the words, even if it means the UI isn't as minimal as we\ndesign-oriented folks would like. So I would vote for keeping the words\nspelled out and coming up with an alternative layout for when labels are\ntoo long.\nSee: http://www.lukew.com/ff/entry.asp?725\nAnd:\nhttp://uxmovement.com/forms/why-users-fill-out-less-if-you-mark-required-fields/\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/18F/govt-wide-patternlibrary/issues/38#issuecomment-114118488\n.\n. Thanks for all the suggestions, everyone!\n\nAll the suggestions on this issue have either been:\n- responded to,\n- split into separate issues, or\n- added to our project's workflow for possible inclusion/addressing later.\nFeel free to open new, separate issues for more feedback.\n. If we decide to discourage carousels, let's give some good reasons and cite the relevant research (like http://www.nngroup.com/articles/designing-effective-carousels/). Even better, let's suggest some good alternatives. \n. @juliaelman: May I close this issue because of the pending pull request?\n. Thanks! I've added this to our project workflow.\n. Thanks! We've added this to our project workflow.\n. Adding this to our project workflow. Thanks!\n. Our usability testing didn't find any problems with folks navigating to input and form block patterns, but there are broader navigation problems we'll be working on this sprint. \n. Thanks so much! Added to the project's workflow.\n. Thanks! Closing and adding to the project workflow.\n. Added this to the project workflow. (Trello icebox.)\n. Thanks for sharing!\n. Thanks for the suggestion @vz3! I'm adding this to our project workflow.\n. I think we should probably try to avoid placeholder text whenever we can. Check out http://www.nngroup.com/articles/form-design-placeholders/, also linked above.\nTLDR: Really not good to rely on placeholder text as the only label for a field, but also not great to have placeholder text with additional information. The big issue is that folks have to remember what those placeholders said after they enter something into the field.\n. Looks like we have an alternative approach for text field hints (other than placeholder text). @maya: Has this been implemented? Or shall I put it in the icebox?\n. I will add this to the project workflow. Thanks for the good discussion, everyone!\n. Thanks so much @afeijoo and @Scotchester! I\u2019ve added this suggestion to our project workflow.\n. Thanks so much all! I\u2019ve added this suggestion to our project workflow.\n. Thanks so much @afeijoo and @Scotchester! I\u2019ve added this suggestion to our project workflow.\n. Thanks so much @afeijoo ! I\u2019ve added this suggestion to our project workflow.\n. Thanks for the suggestion, @afeijoo! I've added this suggestion to our project workflow so we can mull on it more.\n. Thanks! I've added this to our project workflow.\n. Thanks! I\u2019ve added this suggestion to our project workflow.\n. Thanks so much all I\u2019ve added this suggestion to our project workflow -- we'll need to mull over your suggestions to figure out the best way forward.\n. If you have a chance to add another example or two, we can add this to the project workflow, @KHarshawat. Just want to make sure we're clear on what's useful. :smiley: \n. Many thanks! I've added this suggestion to our project's workflow.\n. Thanks so much @afeijoo. I\u2019ve added this suggestion to our project workflow.\n. Thanks for the thoughts, Scott and Maria! We'll add this to our project workflow.\n. As Maria points out, what's most important is that links look \"clickable.\" However, there's some debate over whether underlining them does that. Some relatively recent research on this topic (http://www.nngroup.com/articles/clickable-elements/) doesn't come down heavily on one side or the other. Some older academic research found underlined links actually reduce readability (https://vsis-www.informatik.uni-hamburg.de/getDoc.php/publications/119/www2003.pdf). \nI think this is an ideal candidate for usability testing.\n. Thanks for your thoughts, all! I've added this to the project workflow.\n. Thanks @Scotchester and @mariamarrero! We'll have to do some thinking about the hero unit -- I've added this suggestion to our project workflow.\n. Thanks so much! I\u2019ve added this suggestion to our project workflow.\n. Many thanks! I have added this issue to our project's workflow so it may possibly be addressed in future versions of the library.\n. Many thanks! I have added this issue to our project's workflow so it may possibly be addressed in future versions of the library.\n. Many thanks! I have added this issue to our project's workflow so it may possibly be addressed in future versions of the library.\n. Many thanks! I have added this issue to our project's workflow so it may possibly be addressed in future versions of the library.\n. Many thanks! I have added this issue to our project's workflow so it may possibly be addressed in future versions of the library.\n. Many thanks! I have added this issue to our project's workflow so it may possibly be addressed in future versions of the library.\n. I know @angel's working on the colors in general (and accessibility is certainly a factor in those decisions), so I'm closing this out.\n. Many thanks! I have added this issue to our project's workflow so it may possibly be addressed in future versions of the library.\n. Many thanks! I have added this issue to our project's workflow so it may possibly be addressed in future versions of the library.\n. Many thanks! I have added this issue to our project's \"icebox\" so it may possibly be addressed in future versions of the library.\n. @jjoteal: There are (sort of) breadcrumb suggestions built into Header Nav / Complex / Active. What other suggestions would be most useful?\n. Makes sense to me. I included them with the header and nav because they're\nusually deployed there. That said, they're easy to separate and I can\ndefinitely understand your arguments.\nOn Tue, Jul 7, 2015 at 12:19 AM, Maya Benari notifications@github.com\nwrote:\n\nI think we may want to consider adding a breadcrumbs into its own\ncomponent in order to add the information @jjoteal\nhttps://github.com/jjoteal is talking about. I think it may get lost\nwith everything in the headers/navigation.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/18F/govt-wide-patternlibrary/issues/148#issuecomment-119068735\n.\n\n\nColin MacArthur\nExperience Design, 18F\n(617) 283-8166\n. Many thanks! I have added this issue to our project's \"icebox\" so it may possibly be addressed in future versions of the library.\n. @dannychapman and @jjoteal: When we were wire-framing this, we were thinking users would click on the top-level links to reveal the mega menus (for the reasons you suggest). The wireframe annotations are in the process of migrating into nicely worded guidance for each component. \n. Ah, yes @maya, I misread @jjoteal's comment. Sorry about that! \nWhitehouse.gov and uspto.gov don't make their \"Topics\" headings clickable. I agree with their decision. When the children of each topic are already displayed, I doubt that landing pages for each topic would be used much.\n. Sounds like the conclusion here is that:\n- \"Topic\" links in the navigation shouldn't be clickable (like they aren't in the current version of the footer).\n-  Users should click on (not hover over) the top-level links to reveal the mega menus\n  Thanks for helping us clarify, @jjoteal and @dannychapman.\n. Thanks for the feedback @jjoteal! I agree with @Scotchester -- we're trying to make sure there's enough space for touch targets on a mobile device. I think we'll close this issue for now, but will keep an eye out for confusion around the radio button/checkbox spacing during usability testing with end users.\n. Check out #22, which suggests the same thing. You are not alone! :)\n. Many thanks! I have added this issue to our project's \"icebox\" so it may possibly be addressed in future versions of the library.\n. I think we put social media icons in the footers because most govt. websites do, too. That said, I don't think they have to be there and I (personally) don't have a problem with them being elsewhere. \n. (Hopefully we answered your question @jjoteal -- if not, feel free to reopen the issue.)\n. Many thanks! I have added this issue to our project's \"icebox\" so it may possibly be addressed in future versions of the library.\n. Many thanks! I have added this issue to our project's \"icebox\" so it may possibly be addressed in future versions of the library.\n. Generally open, but feel a bit cautious about encouraging alphabetical indices. They're useful when they match users' mental models, but are easy to implement even when categorization or a search feature would make more sense. Check out p. 99 of http://media.nngroup.com/media/reports/free/Site_Map_Usability_2nd_Edition.pdf for thoughts.\n. Many thanks! I have added this issue to our project's \"icebox\" so it may possibly be addressed in future versions of the library.\n. I believe the library's font suggestions are under discussion and the final decision will factor in readability considerations. Many thanks!\ncc: @angel \n. Many thanks! I have added this issue to our project's \"icebox\" so it may be addressed in future versions of the library.\n. Many thanks! I have added this issue to our project's \"icebox\" so it may be addressed in future versions of the library.\n. This issue is almost certainly because the current production version of the library (at https://pages.18f.gov/govt-wide-patternlibrary) has pictures of (not the actual versions of) the buttons and other clickable components. Thus, many buttons don't appear clickable yet. This will change as we roll out new versions of the library.\nI'm going to close this issue, but feel free to reopen @AccessForAll, if I've misinterpreted the issue you raise.\n. We've addressed this issue for footers in #172 and I think #117 came to a useful conclusion about alternatives to placeholder text in general. Thus, I'm closing this issue. \n@AccessForAll: if you see other patterns with placeholder text, feel free to submit another issue specifically for each one. Many thanks!\n. Many thanks! I have added this issue to our project's \"icebox\" so it may be addressed in future versions of the library.\n. @AccessForAll: Could you help us by clarifying? Are there forms in the pattern library that don't include submit buttons, but should? Or are you suggesting that we need a template for <button type=\"submit\">Submit</button> specifically?\nMany thanks!\n. We agree! @maya's implementation of the footer removes placeholder text in the fields. Those changes will be visible in the production version of the library soon.\n. Added this to the Trello \"icebox.\" Closing out.\n. Added this to the Trello \"Icebox.\" Closing out.\n. @maya: It would be great if, when developers download the ZIP and open the .html file, the images render without further modifications to the code. They may need to change the image URL's to reference their own assets later. Does that make sense?\n. Maya's right. I think the idea is that the 123-__-____ is an input mask, not placeholder text. When a user starts typing, their SSN number is automatically into dashed chunks. Before they type, there should be nothing in the box.\n@carodew - correct me if I'm wrong?\n. Thanks @rhewitt22 for submitting an issue!\n. Any thoughts on this one @maya? Shall I put it into the project workflow?\n. @maya re: \n\n\"The magnifying glass has been shown to be almost universally recognized by users as an indicator of search functionality, and doesn\u2019t need to be paired with the word \"Search.\"\" \u2014 but you need to provide screen reader text\n\nIs there a particular place we need to provide the screen reader text?\n. Just to pile on here: I think we should definitely encourage folks to use caution with the date picker (for the reasons outlined by GDS, the frontend slack channel and by all smart design people). And I think our \"use\" guidance will be a great place to do that.\nI don't think anyone's arguing against this, but I think we should definitely continue to offer a date picker because:\n1. Developers requested them in our initial workshop\n2. If we don't offer them, folks will make their own\n3. There are a few situations (as GDS points out) where date pickers are actually useful.\n. @carodew: Can you double check these edits? Thanks!\n. Thanks @carodew and @juliaelman! I've made changes in response to your comments. \n. WoW!\n. +1 to Carolyn\n. Few minor suggested edits, but looks good to me otherwise! Thanks!\n. Changes all look good to me. Thanks @juliaelman!\n. @maya: Looking good!\nIn the original GDS pattern, there aren't any up-down controls in each of the fields. They are just plain ol' text fields. Thoughts about why you included those controls here?\nThanks!\ncc: @carodew @mollieru\n. lgtm3!\n. I replicated this behavior on an iPad 2 running iOS 8.4.\n. Replicated this bug on iPad 2 running iOS 8.4\n. I believe Sketch and Omnigraffle templates are coming out soon (thanks @bradnunnally and @esgoodman!). The repo Maya references has all the indesign files.\n. Open question: Physically prevents from scrolling or is just strange?\n. Looks like PR #383 was superseded by PR #399. I tested #399 on my iPhone 6, iOS 8.4 and it seems to have fixed the problem.\nWhen @vgvg merges #399 to staging, I think we can close this issue. I'm going to assign this issue back to him.\n. @carodew and @mollieru:\nAfter discussion with @angel while she was redesigning the header, I propose we close this issue because:\n- It only applies on relatively small mobile screen sizes in landscape mode\n- The Moto E has the same problem with all mobile websites with sticky headers\n- Making the header any slimmer would make the menu button very hard to tap\nThoughts?\n. @carodew: All good questions!\n1. Yes, landscape not portrait. So amended above. :)\n2. The header in staging has reduced the size of both the header and the official site banner,\n   but the problem persists: \n   \n3. I cannot replicate this problem on my iPhone 6 or iPhone 4 because:\n   - The soft keyboard is relatively smaller on iOS\n   - iPhone screen sizes are slightly larger\n   - iPhone pixel densities are higher\nMaybe a good next step would be trying to replicate on your Android phone?\n. @mollieru also asked a good related question in a related Trello card: \"does this problem happen on ssa.gov, my.uscis.gov or doi.gov?\" It doesn't; those sites don't have sticky headers, so the header doesn't persistently cover a portion of the screen like ours.\n. Wowzer. That's not so good. I retract my proposal to close this issue.\nThe root of the problem seems to be that Android soft keyboards are quite large in landscape orientation. \nI will update the Trello card where Angel is working on the revised mobile header accordingly.\n. Still having the same issue @vgvg. FWIW, the header is still persistent on Android.\n\n. I'm open to that. I'll retag this \"to be triaged\" so we can revisit it at tomorrow's bug triage meeting.\n. I think this problem has two roots:\n1. Android 4.4 only makes phone numbers that don't include letters tappable (our examples include letters).\n2. When Android makes a number tappable, it does not change its formatting (like iOS does).\nWe could solve problem 1 by changing the default phone number to (800) 555-555. But problem 2 is a little harder.\n. One response to point 2 could definitely be: it stinks that tappable phone numbers don't always look tappable on Android, but that's not our problem. \nUnfortunately, when Android makes phone numbers tappable, it doesn't add any new attributes or elements to the HTML. I suspect that forecloses the most elegant CSS solutions. But I'm really speaking beyond my expertise here.\n. Also replicated in iPhone 5/Safari.\n. @msecret and @carodew: I've verified that this happens on all sites on this device. Closing this issue.\n. @carodew: The final decision was to keep all three search bars, but to put them all in a half-width grid box. (Done in PR #390.)\nThe problem persists:\n\n. @angel: Can you file a separate issue for the rounded searchbox problem?\n. Unassigning myself. Think this issue contains all the info it needs to be solved.\n. This also happens on Windows 7, IE 8.\n. This also happens on Windows 7, IE 10.\n. @jenniferthibault: I can't speak to the design questions, but in response to:\n\nI'm often confused about why \"Footer\" is not next to \"Header\" in order. As a result, even after visiting the site at least 3 or 4 times to look at the footer, I have a hard time finding it. (See screenshots below)\n\nWe agree! The next iteration of the project's navigation has the header and footer links next to each other.\ncc: @carodew \n. @msecret: I pulled this down my local machine and need to chat with @carodew about the search bar (know that's a high priority component). Thoughts arriving shortly.\n. @msecret: @carodew and I reviewed the new grid and its impact on the high priority components. Everything looks good to us.\nThe one change we'd like to make is removing the small and medium search bars all together. At the moment, they are too narrow at screen widths larger than 1200 px. I think one search bar will do fine for MVP and figuring out how to make the smaller ones work with the grid is going to be hard. Let me know if I should open a separate issue for this.\ncc: @mollieru \n. @jpyuda: sounds like we're describing two different bugs? (I can't replicate your experience on my iPad.) @mollieru and @angel -- could you repeat the steps above on your iPads and see whether you have experiences like mine or Yuda's?\n. @maya: Yes, this still persists on the actual device. I've never been able to reproduce it in the emulator.\nDo you or @msecret have an actual iPad to try it out on? @angel or @mollieru: could you help us out?\n. I can't replicate this issue on my device anymore. @jpyuda -- can you still replicate the issue you described?\n. @mollieru: Good catch. \nShould I:\n- close this issue because the sidebar nav is still being implemented?\n- leave it open, but change it to be about removing the hamburger icon from the desktop version?\n. Great work @maya!\n@carodew pointed out that the 18F content style guide discourages using ampersands. Any bad effects from changing the few & in the navigation to \"and\"?\n. Sounds good!\nOn Thu, Sep 3, 2015 at 1:11 PM, Maya Benari notifications@github.com\nwrote:\n\n@colinpmacarthur https://github.com/colinpmacarthur nothing wrong with\nthat! It'll just drop a few items to the second line rather than keep them\nall tight on a single line.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/18F/usfwds/pull/410#issuecomment-137514726.\n. @msecret: Can we prepopulate the \"Documentation\" accordion with something like this: \n- Documentation accordion\n  - h3: Accessibility\n  - p: As you customize this form template, ensure it continues to follow the:\n  - ul\n  - li: Item 1\n  - li: Item 2\n  - li: Item 3\n  - p: There are no other specific accessibility guidelines for this form template.\n  - h3: Usability\n  - h4: When to use\n  - ul\n  - li: Item 1\n  - li: Item 2\n  - li: Item 3\n  - h4: When to consider something different\n  - ul\n  - li: Item 1\n  - li: Item 2\n  - li: Item 3\n  - h4: Guidelines\n  - ul\n  - li: Item 1\n  - li: Item 2\n  - li: Item 3\n\ncc: @maya \n. Yay!\n. When you get to the Name and Address form, the problem is even more extreme.\n. Replicated in IE 10:\n\n. Also happens in IE 8, Windows 7, emulated on Sauce Labs.\n. This also appears on the home page:\n\n. I can no longer replicate. Closing.\n. Good idea, Marco! I will change accordingly.\n. @msecret:\nThinking a little more about this, I think we may want to stick with event listeners.\n1) For \"view on Github\" links, it's a bit strange to force a page load event for external links. At best, it looks weird. At worst, the Analytics view we're assigned actually excludes those URLs, so we don't register that data.\n2) For the \"view the standards\" links, we want to differentiate between clicks several links on the sampe page that lead the same place (the inside of the site), but are different places on the homepage. I don't think we could differentiate them with a forced page view.\n3) We could definitely use page views for the \"download\" links, but then we get into defining some goals in terms of page views and some in terms of the pageviews and some in terms of events. That can get messy too.\nThoughts?\n. I was just trying to make it consistent with the link you all put at the top of homepage page. I'd have no problem with you closing this PR and reopening another to make the link at the top of the page consistent with the one at the bottom.\n. @maya OK. The footer link no longer opens in a new window per 6e8e0a5\n. Same bug as #463. Closing this issue and will make a note in the other.\n. Also happens on Windows 7, IE 10.\n. Hmm. Don't think I ever weighed in on this one (but I could be forgetting). I agree with the link Carolyn suggests.\n. We've agreed that the sub-items won't be bold and blue when viewed due to limited developer time before MVP. \n. I too can replicate in Chrome and Firefox, but both inconsistently. I cannot replicate on other websites, but it's hard to find other sites that mimic our exact navigation style.\n. Thanks @jpyuda. Same issue happens on that site. I suggest we close this issue because it seems to be a browser problem?\n. This issue was logged in Android in #352. I'm going to close this issue and mention that this happens in iPhone in the other. Thanks!\n. Closing this because it's mentioned in #493. Thanks!\n. @angel: Could you post a screenshot showing the decision we need to make? Thanks!\n. Got it. \nI'd argue for keeping the label and not including the h6 here for a couple reasons:\n- as it is @angel's latest commit with both the h6 and the label, a screen reader will say the same name twice, right?\n- as @maya points out, we have to keep that label for accessibility reasons. So, if we don't want redundancy, we keep the label, right?\nBut! My opinion is probably not the most important one here. @mollieru and @carodew should probably chime in on this one, too.\n. In response to @angel's three points in the issue description:\n\nThe page performance header should top-align with the paragraph on the right.\n\nWe decided this was a separate low priority issue at bug triage. Opened #648 in response.\n\nThe high and medium labels of the pairings should be switched.\n\nAlthough the wordings on the page were from the original copy, everyone agreed they were confusing. #647 changes the labels of \"high\" performance font pairings to \"fast.\"\n\nThe labels should have colors associated with high and medium. Can we make high be the secondary color with white text and the medium to be gold with base text? \n\nWe agreed at triage that this was an enhancement because we currently don't offer colored labels in the library. Opened #649 with that enhancement suggestion.\nThanks @angel!\n. This looks good to me @carodew!\n. @weboverhauls: Thanks again for submitting this issue. We totally agree that links shouldn't use color alone to identify themselves. There are several different ways to do that -- we're going to think about the right one to suggest.\n. Agreed with @carodew.\nI'll just reiterate that, although developers wanted Bootstrap-style HTML snippets on the standards site, they also expressed interest in some kind of downloadable  \"packaged\" version of the components. We didn't include that in this alpha, but I'd certainly argue for it in the future.\n. :+1: \n. Hmm. I'm not completely sure, but that's definitely a concern. A question for our accessibility folks?\n. Nice work!\nI agree with @carodew's comments. \nA few other questions pop to mind: \n1. Any thoughts on having both \"vets.gov\" at the top of the footer as well as \"Department of Veterans Affairs\" at the bottom?\n2. Any thoughts on the capital VA in addition to the VA seal? Trying to include both a logo?\n3. Would love to hear more about why the crisis line and contact us / social media icons are in different places?\nNone of these are meant as criticisms - just trying to understand the design constraints so we can make the standards' footer better. :)\n. Thanks for the kind words and raising the issue @cathydeng! \nI'm having trouble replicating this, but maybe I'm not doing the right thing? Could you post a little screen cast or suggestions on how to replicate? \n. Thanks for the gif! @maya and @msecret - thoughts? This seems to be firefox specific.\n. :+1: \n. We need to do a bit more research into what we need to do to support government Blackberries, but will come back to this when we figure that out. Thanks!\n. Blerg. Sorry I didn't check staging.\nOn Fri, Oct 30, 2015 at 10:10 PM, Maya Benari notifications@github.com\nwrote:\n\nClosed #873 https://github.com/18F/web-design-standards/issues/873.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/18F/web-design-standards/issues/873#event-450987791.\n\n\nColin MacArthur\nExperience Design, 18F\n(617) 283-8166\n. This makes sense to me and should probably be our approach moving forward, but @carodew should also chime in.\n. I'm not totally sure, but I think that the two code snippets are so that we can display the code for each example without displaying the surrounding \"presentation\" markup. If they're the same example, whatever headers or other elements separate them are also included in the markup. Thoughts @maya?\n@mollieru might remember more about the intention of the two examples. Maybe so one can see how the grid handles div with different amounts of text?\n. Thanks for starting this @bbertucc! We're excited to keep an eye on this effort.\n. Re # 1: How did you know it wasn't purposeful, @rtwell? :)\n. Accordions are tricky. They increase the number of clicks necessary to traverse a page's content. They make it more difficult to compare content on two pages. They're generally a bit of a usability minefield. See http://www.nngroup.com/articles/accordions-complex-content/.\nThat said, if a developer makes a conscious decision to use one accordion, I can't think of a reason why it would be bad to use multiple ones.\nI'd love to hear @carodew's thoughts. \n. @carodew and I just chatted about this.\nWe think there are several legitimate uses of multiple accordions per page. (e.g. Accordion nav and accordion in the content.) We also think that the library should lean towards accommodating lots of different uses for a given component (think that's been the strategy so far). So the UX team is all for making it possible to have multiple accordions per page. \ncc: @juliaelman and @mollieru \n. Addressed in 13999f2\n. Addressed in 5c5f14c.\n. This one is tricky. The exact pixel recommendation varies based on device's pixel density and touch precision (which vary substantial device to device). In 5c5f14c, I made this a general principle using @carodew's suggestions. Thoughts?\n. Does \"label's\" need an apostrophe?\n. Comma after ensure?\n. Sounds good to me!\n. @maya: That heading just seemed duplicative, because the page\u2019s \u201cSide navigation\u201d title is just above it. But am I missing something?\n. Fixed in e4d9b24.\n. Good catch. Fixed in 47985e2.\n. Good catch. Fixed in 47985e2.\n. Fixed in 8203f00\n. This is @mollieru's copy, so Iet's double check with her.\n. Makes sense to me, tho.\n. Fixed the spaces in ffbb395.\n. Changed in 15fa803\n. Fixed in c9aac21\n. Fixed in c8ced10\n. Thanks!\n. Fine with me. (I can see how \"View code on GitHub\" seems very redundant.) Thoughts @mollieru? Or @carodew?\n. ",
    "rypan": "If you want to continue the pie theme...you could name the versions after pies...\nApple Pie\nBlueberry Pie\nCranberry Pie\n:smile: \nI also like a word like Union...\n. ",
    "mjovel": "Anthem\nCitizen\nMonument\n. Maybe rather than naming releases you could go for a hub and spoke approach for the library and component groupings kind of like Bourbon > Neat > Bitters > refills or atoms > molecules > organism , etc. It might be an interesting way to both fit-in to the front-end world while still making the library/frameworks intent known as well as explaining how each piece fits together as one cohesive unit?\n. @mollieru Here are a couple of different examples of data visualizations that currently exist in the FDA world -\n- http://www.fda.gov/drugs/developmentapprovalprocess/druginnovation/ucm381397.htm\n- http://www.accessdata.fda.gov/scripts/oce/inspections/oce_insp_searching.cfm\nI don't think the team would have to reinvent the wheel but possibly just create some standardizations of appearance on existing libraries.\n. Agree with with everything @cew821 and @Scotchester have said here\n. Well done!  I really like the use and accessibility content. I was wondering what the use case was for the css and scss tabs within the source tabs? Is it for people to extract those styles and use them within their own set-up? customize them? Most other pattern libraries I have seen have tended to focus on the html. Does listing the css and scss encourage presentational changes leading to increased abandonment of patterns through customization?\n. @maya and @angel I think limiting to two weights might be prudent from a performance perspective. Maybe discussions of what a performance budget for the framework that comes with the pattern library should be? I would think this would be less than the average sites budget as content imagery and media by the frameworks user. That might make the decision easier to quantify?\n. @andrewmaier @maya Normally I would say I would recommend a SVG based system but as this is an icon set which in theory would be shared across multiple agencies I feel like font based solution like Font Awesome offers the most efficient method of loading icons. with SVG w/ Png fallback we would either have to worry about multiple http requests or explaining automation of spritesheet creation, or a larger generic spritesheet with icons that are not being used. Do we have metrics from DAP that estimate % of gov site visitors that use devices that do not support @font-face?\n. @arvalarva Good call on the webfont blocking! Is there a way to efficiently offer more than one solution? Would it be better to just take the ~450k hit for the full SVG/png spritesheets and leave it to the advanced users to trim that down via for individual implementations?\n. @andrewmaier I agree that from a technology standpoint svg with fallbacks and even more so grunticons is the best way to go.  I have used both on a few projects (not gov stuff).  That said my concerns is for a framework that is supposed to be used across many agencies with many stacks and with people of many technical abilities if it is too tall an order? Truthfully, this is not a question I can answer. To be honest I have had quite a bit of trouble on getting my agency onboard with moving off of webfont icons which is where my concern stems from.\n. @andrewmaier My concern is the creation of the dependency of teams having to run a grunt task (or do something like grumpicons) to reduce amount of data downloaded either via http request or uri data in css to display icons. I fear implementing a workflow change like that can be dealbreaker for some. I am kind of curious what the size of the icons-data-svg.css and icons-data-png-css files for the full ustpo/awesomefont library of icons?\n. @jonraedeke Last I heard they were strongly considering BEM. Not sure if they have gone further than this @maya could probably provide a more definitive answer here.\n. @maya I think the modified BEM approach you reference sounds good to me.\n. @angel @mollieru I did not see the search results layout under the designs for feedback.  I have two small things for consideration. Would you like me to submit them as issues? or via some other mechanism?\n. I would suggest if you are to use pixels that it be kept to the sketch/photoshop prototyping libraries that I believe was being rolled out alongside the library.  I think it would be of greatest utility to non-coding designers who can decipher rems/ems in css/sass. Although, it would likely come with the understanding that there will not be pixel perfection on the interactive versions. Part of the confusion I am feeling is that by currently seeing the guides it makes it a little harder to react to the components themselves. I am feeling torn between the feeling that I am looking at a printed styleguide and an interactive one.\n. @mollieru - correct. I think those who visit from the web based pattern library would be more likely to use web inspector to gather that information if needed. It would probably be more useful for those using the editable art files so that they could get a sense of measurement as they layout their art file based mock-ups.\nIn regard to the non-interactive mock-ups I kind of like the single page sticker sheet referenced in #98. It made it a little easier to digest the mock-ups and I felt that the guides kind of got in the way of being able to respond to them. I think that would be a good scenario in which being able to toggle guides on and off would be good. \n. I agree with @maya that further validation would be a good thing before adding it as a feature. It would likely be a sizeable lift for unknown value return. Actually, what I intended with the toggled functionality guides was on the editable art files and not the online pattern guide itself.\n. I think much of the work being done on the framework associated with this pattern library is tackling many of the same problems of a bootstrap or a foundation except with a more accessible and gov focused mentality. I think dependency on bootstrap or foundation would be a bad idea. If however compatibility is what you are looking for. I think there needs to be determined at what level that compatibility begins given the modular nature of the this gov based framework? I kind of agree with @maya that those who are already wed to a framework would be best of cherry picking components they need.\n. :+1: \n. +1\nWe do this at fda using badges - \nhttp://google2.fda.gov/search?client=FDAgov&site=FDAgov&lr=&proxystylesheet=FDAgov&requiredfields=-archive:Yes&output=xml_no_dtd&getfields=*&ie=UTF-8&ulang=en&&access=p&sort=date:D:L:d1&entqr=3&entqrm=0&wc=200&wc_mc=1&oe=UTF-8&ud=1&q=pill+inmeta:gsaentity_filetypes%3DPDF&dnavs=inmeta:gsaentity_filetypes%3DPDF\n. I would opt for having an oocss class of \"unstyled-list\" over changing the default behavior of a list.  the same would go with inline lists as well.\n. If you make unstyled list the default and styled-list what content creators need to use to create what is otherwise an html default expected behavior it will cause greater confusion.\n. ",
    "jenniferthibault": "Some flag history nerdism perhaps? http://www.ushistory.org/betsy/flagfact.html\nBetsy Ross\n\nCowpens\n\nBrandywine\n\nSerapis\n\n\n\nMaybe this is getting too obscure, but I like the idea of incorporating historical design/pattern reference that has a time-based sequence. I <3 the pies, but there's nothing that tells me if apple pie was released before or after blueberry pie. Again the flags might be too obscure of a reference for this.\n. All hail @msecret for naming precedent 101! \n. I had the same thought yesterday when looking at the slack channel name (govwidepatternlibrary). My vote goes toward gov-pattern-library or usgov-pattern-library if it needs to be more specific. gov-wide seems nearly redundant. @maya would usgov track to some of the very early thoughts on css style naming you mentioned?\n. another option: usa-pattern-library\n. Would this be a helpful bridge between flat and interactive mockups? Even though many folks would still use the inspector, it could give you a rough idea of both up front. \n(em equivalent measurements not accurate in this quick mockup)\n\n. This is certainly usable! \nIf/when the library gets bigger, I could see it being useful to put separate elements on separate art boards within the same file (in keeping with @KHarshawat 's feedback), though not necessarily all one one art board. Side thought: that would limit compatibility with Adobe suites earlier than CS5. \nThis would likely be for down the line for a final deliverable, but something to pay attention to at that point for max-polished-deliverable-status would be how the .AI doc itself is set up. For example: \n- Use the layers feature and perhaps put one element group per layer, rather than having every element on a single layer.\n\n- Remove unused color swatches in the swatch panel\n  \n- Set up the document Character & Paragraph styles panel \n- Other things like this that make the file itself easy and ready to use for designers\n  -  I could potentially see it being helpful to designers to be able to view the markup showing proportions and spacing, like on the site, even if this was on a locked layer that was default hidden. Having those specs where you're building could mitigate the potential for inconsistencies.\n\n(Again, these are way down the line for a more final deliverable, but hope the early feedback is helpful!) \n. Oh! Hadn't even looked at it that way, but you're right, it could also refer to the dummy text in the empty field. I was just noticing the link style of the \"Show SSN\" and \"Show Password\" text. \n. I should have known you folks would already be on top of it :+1: \n. Holds breath for opinion that is probably in the minority.... but....\nI actually don't find the first executions (with 75 characters/53rem max-width) to be too narrow relative to the size of the characters! I even find the second options with longer lines to be too long relative to the size of the characters. I wonder: are you viewing this on a thunderbolt monitor? Or a laptop with a larger than 15-inch screen? That could account for the extra white space that feels imbalanced to us big screened designer-types. Just a thought.\nI make the distinction about size of character above, because that's what influences readability. Visually, yes, I do find that in your screen shots of the 75 ch mockup above you have some extra white space that is making the layout feel sparse (which I think, you are trying to solve by taking up some of that space with wider body copy lines). But the readability of the line lengths I find to be excellent! While reading the lines, my eye did not drift, or ache for a break to help me keep my place, as they did in the second set of layouts.\nI am also with @mollieru on the alert lengths: would not make them full width, but would keep to the character-bound ratio for readability, no matter if they are one sentence or one paragraph. Same source as @jjoteal for tinkering with the conversions, but check out this article on the same site for a skimmable long read on typography ratios on the web if you want a little more: http://www.pearsonified.com/2011/12/golden-ratio-typography.php\n. As someone who wants to use the standards on a few projects, I have also looked for (and asked someone about the existence of!) this type of list so that I can see what other people are doing with the various elements. \n. I'd be curious to know why you then need the darker grey. Could #757575 replace #5b616b ? I don't know your use cases for #5b616b , but I see the benefit of #757575 with black in the screenshots above.\n. An alternative! If you do need multiple greys....\nYour existing grey #5b616b is a cool blue grey, while #757575 is a grey with much more red in it, which is why they feel like they are mismatched when put next to each other. To keep it more in-palette, try a lighter blue-based grey to match your ##5b616b.\nHere's what I mean.\nCurrent:\n\n\nWith grey #656970, in the blue family. With white, color contrast ratio of 5.51:1 :\n\n\nYou may find that you need it lighter still, so play around, but I'd recommend exploring within this principle. \n. @rtwell : I just tried this out, and noticed that it actually unzips v0.8.2.zip to a folder called assets\nIf you have your finder window sorted by date, they'll appear next to each other in order, and see this:\n\nIf you have your finder organized alphabetically (which is my default) \"Assets\" sort of :ghost: s to the top. So if you downloaded the first set of assets at one point, and it's still hanging out in your downloads folder (which it is for both of us, so seems not uncommon) it LOOKS like the file you just opened is wds-design-v0.8.1\n\nI agree with @rtwell and suggest that the unzipped folder should have, or start with, the same name as the zipped file (v0.8.2.), so that this sorting conflict is no longer a risk.\n. Ohhhh - you were downloading just the design assets, I was downloading the whole components (from the front page). I think this means it could be a two-part improvement \nSo from your findings, wds-design-v0.8.1 should be renamed wds-design-v0.8.2\nFrom what I found, assets (which is the whole shebang of code and components) should be renamed wds-v0.8.2\n. @maya from the comments, I can't tell if #912 addresses the assets naming inconsistency as well or not. Is that something you are also thinking about changing? \n. +1 to @oghaffari !\nBased on spacing on other elements in the Standards, I'd expect this icon to have a larger buffer between the it and the text. Looking at elements like the dropdown box, the off-site link icon indicator, and even the side nav, the established pattern for spacing in this visual system leans generous, and here, it feels very cramped. I would have probably assumed it was an implementation error, not how the pattern is supposed to look.\nHere are some other examples of spacing that I was looking at for clues:\n\n\n\n\nHope this helps!\n. Follow-up question/observation now that I see it all together: Why is the drop-down carat bolder weight when it's in a drop-down box with an outline, but lighter weight when it's not? If you're looking for opportunities to simplify, it would make sense to me if they were all uniform weight, regardless of in or outside a border. \ud83d\udc4c . Hey @maya, what do you think about adding some more data here in order to make a good recommendation? Seeing these against white doesn't capture the different background color use cases you know about, and mentioned above. \nHere's one way you might be able to do that: \nWhat are the most common ~3-5 solid background colors used on sites using USWDS? When you get that list, then add mockups of these colors against those backgrounds and see if any options disqualify themselves. \n. \ud83d\udc4b @thisisdano \nThe title of this issue (a \"color system\") is very spot on to guidance I crave from the existing USWDS, yet what you've outlined in your proposal I would consider to be a color palette. And yep, I'm gonna dig into those words with all my excitement \ud83e\udd13 \nThe difference I see between the two is that a color system tells me how to use color, no matter which color values I choose. What's a highlight? Where do my primary and secondary colors get used? Where do they not get used? What color relationships are used for alerts? etc.\nSo that no matter what variation of the palette I choose, I'm implementing it consistently with how another visual designer at another agency might implement it, as long as we're following the prescribed system. I'd hope that if we outline a system of color use, we'd not only be decreasing the likelihood that designers choose inaccessible color combinations, we'd also be less likely to find applications that feel widely different because each designer has chosen to use/allocate their color palettes in different approaches.\nAn example of a design system that does this intentionally and well is Google Material Design's color system. Their color tool visualizes how to use the color system through demo-ing selected colors.  (PS: I'm not trying to say we need something this advanced, but the core demonstration of how to use colors is what I'm trying to point out.)\nThe palette you've outlined above seems mathematically sound (at first blush), gives a formula for combining colors accessibly, and speaks to nuanced needs through the vivid variances. I worry though that without guidance on how to structure our approach to using colors, a wide palette like this will broaden the visual differences we're already seeing\u2014which is what I'm choosing to read as one possible concern behind @esgoodman 's comment above as well. \nThanks for inviting the feedback and for reading this far in, glad to keep discussing!. @ericronne paraphrased \u261d\ufe0f better :)\nThis seems like a great starting point: the raw materials for building out a system. But what would really help me in my work is to give a few color sets based on these, and show me how to plug & play them.\n. ",
    "msecret": "From a developer's perspective, if you change names based on release, it should serve a specific purposed. For instance, Ubuntu names new releases of it's OS with various animal or other names, it's purpose is make it easier to remember versions. The public communication includes both the name as well as the numbered version, so something like \"Ubuntu v14 Saucey out now\". It's important that the primary name, \"Ubuntu\", is always there and consistent. This still has the downside of confusing people what name belongs to which number.\nTaking this back to the pattern library, it could be called \"US Pattern Library\" and each release could have a fun name: \"US Pattern Library v4 Betsy Ross out now\". Although a question to ask would be if the amount of versions this library has really warrants a second name. If you're releasing versions more then a year apart, the extra name might just increase confusion.\nAlso, I've rarely heard of actual frameworks and libraries using release names like OS's do, usually it's just numbered versions. This could mean that using a release name could create confusion among developers, but this hypothesis should be tested.\n. In terms of primary name, the front end community is known for random and abstract naming: \"bourbon\"/\"neat\", \"ampersand\", \"Sass\", \"Susy\", \"Penguin\", \"Inuit\", \"Rizzo\". Even libraries that could have concrete names like \"chart lib\" are often named something fun \"Rickshaw\". I think these names have a light and fun feeling. Another aspect about picking names like this is that the developers can design a really fun site to promote the tool. Like the \"Penguin\" library has a fun penguin illustration on it's site.\nDepending on how we want to brand this, it might make more sense to have a more concrete, serious name which actually explains what this is: \"US Pattern Library\", \"US Components\", \"US UI\", etc. Or picking a more fun name, \"Apple Pie\", could insinuate that this library fits in with the front end world. It really depends on how this should be branded.\nMy personal opinion is to pick a name that has some sort of meaning as to what the library is. Good example of this: \"Foundation\", it provides a basic CSS foundation, \"React\", a framework for reactive programming, \"Moment\", working with dates in JS, \"Howler\", and audio library. I'll try and think of examples for this actual library.\n. I like gov-pattern-library\n. +1 for this idea.\n. You should also look into including good source maps for the compressed CSS. If you could get source maps working correctly for the compressed files in all supported browsers, you may not need to include uncompressed files at all. \n. There's lots of existing resources out there for responsive tables (such as the one Andrew posted above)> I would suggest an existing resource be used in the pattern library rather then building our own.\n. @juliaelman fixed the border problem in  7fbcd54, sorry about that\n. Future considerations:\n- Allowing a button tag to be styled like a text link. This is helpful for when you're using JS for links and don't want to put an href attribute. So this would probably be .unstyled class on button.\n- Being able to style a <a> tag like a button.\n. @juliaelman I was thinking that the user would copy the whole code sample I wrote, but I think I forgot the update the JavaScript code snippet. I can do that now.\n. I just merged this in. It was a difficult merge, so I may have caused some issues.\nSome questions:\n- I put in all the JS in the JS code section. Should I make an effort to make it more concise? @juliaelman,  I wasn't sure what you mean't by your comment.\n- This code uses the .button-unstyled class defined in buttons.scss. This was a similar issue to @maya list thing. I want to discuss solutions to this, but can just copy it over to the CSS for now.\n. +1\n. I agree with Julia that if some visual tweaks are causing problems in other components we should hold off on them.\nI'm also concerned that we're going to have some major headaches dealing with dependencies if we continue like this where adding some code in the base CSS could break any number of components both when they're alone or included with the library. We should consider solutions for mitigating that problem.2\n. We would have to compile the pattern library SASS separately from the Jekyll compilation, as mentioned in #110 \n. @carodew @angel @colinpmacarthur , I was having trouble understanding how to implement certain parts of this, such as the UI when you show the SSN. In that UI, it shows that the UI will fill in placeholder for the rest of the SSN that the user hasn't entered yet: 123-__-____. This is a little weird in code because when the user wants to go back to edit their ssn, they'll have to clear away the placeholder text.\nI'm guessing you wanted to clear the placeholder text when they focus back on the ssn input? I was also wondering if this was meant to be a more fancy interface that fills in the placeholders as they type the ssn. Either way, it might be good to discuss quickly.\n. In general, this is looking good\n. I think it depends on the context, meaning that we should ideally build the code so it can be used with any text html tag somebody would want.\n. Everything looks good to me. \n. \n. I'm fine with building a date picker but do think we should be a little careful. We should avoid using a bloated jQuery plugin that comes with it's own styles which are hard to override. This will make more work for us as well as our end user. If possible, I'd opt for a polyfill to the browser date picker over a separate library to use, or ensure we find a library that's not large and intrusive (which might be hard these days).\n. @maya I thought we said we were doing browser defaults?\nAlso: I don't think it's a good thing if the <select> with no classes added is broken, which is what is currently happening.\n. Does that mean just to get a <select> working a class has to be added to it?\n. I agree with @Scotchester, having to include two separate with various weights and sizes is a dangerous proposition.\nThe nature of the pattern library makes fonts more difficult to account for. On a standard website, it's easier to limit the amount of styles and weights of a font family that are needed based on the design, which allows the team to reduce the total amount of fonts downloaded. For instance, a designer might decide to ditch the Italic heading to save on performance after being consulted by his front end developer. For a pattern library, the design is more general, and is meant to be very flexible so developers can extend from the library for their needs. This would mean, from a developer user experience, we'd want to give them many font options to work with, which in turn means including more fonts to the point of it being a performance problem.\nA way to get around this would be to design UI or developer interfaces to inform developers about the impact of fonts and allow them to limit the fonts based on their needs. I could imagine this being many different things, but one idea would be a UI where developers can select which fonts are required for their design when they download our bundle of files.\nBuilding this pattern library puts us in a position of offering best practices on creating well-designed interfaces based on our user research. I think we should also push for best practices on performance, which would mean limiting the number of font choices.\n. @juliaelman part of me feels like I want it to work like that, in that we don't want them to use a password that's only numbers. I read it as it should have at least 1 number, but shouldn't be only numbers.\n. It looks like you caught all references that I could find.\n. Regarding usa-btn-* I have no strong opinion. I do feel we should table this now and focus on getting to MVP.\n. I'd prefer a less specific rule such as:\n.label + .label {\n  margin-left: .5rem;\n}\nbut this is probably fine.\n. Yea this is fine, I'm working on search bars but it'll take a least another day, so its fine to fix this now.\n. So it seems wrong to me that we're applying usa-heading to every single h element. Is the a reason we don't just make the h elements headings by default?\n. Yea agreed, I actually didn't even know that worked. Awesome to hear though\n. Thanks @konklone .\nAlso: I think a lot of this site's setup came from a template @mbland provided us with. You might want to check that out to ensure this stuff stays correct across projects.\n. I hope this doesn't break anything.\n. I moved this here as there was a problem with the tracking on this branch: https://github.com/18F/usfwds/pull/351\n. Is there an example/fake email address it should open up as?\n. I think we would have to make the phone number a link of a certain type. Maya and I researched this at a certain point but didn't implement.\n. @maya the table component. This is something that will come up outside of our docs.\n. Is this a duplicate of already closed issue: https://github.com/18F/usfwds/issues/367? @carodew \n. Can we check if theres something specific about our site that's causing this? Or does this happen on most sites?\n. One solution: we could put a max-height on the logo to ensure the height of both will line up to the content on the right side.\n. How is the performance.png being used? The image stays at the same level of performance so how is it showing different performance?\n. It worries be that we wouldn't be using our own grid classes for simple layout like this. The more we add to styleguide.css, the more we're proving the library is hard to use for making websites. What about these rules mean we can't use the grid classes here? Should the rules be added to the pattern lib?\n. We removed Layout from the MVP so grid is not the top level and only layout system.\n. So I updated this based on this issue:\nhttps://trello.com/c/dH0qYKGo/281-1-grids\nDo your changes here still ensure:\n\u2022 Title of page should be 'Grids' (no longer 'Layout System')\n\u2022 Remove all sub-titles ('Grid' and 'Grid Example')\n\u2022 Remove the border around the examples\n\u2022 Remove all of the 'Layout' section of the page.\n. So I'm still confused, in this current PR, does it ensure all things in https://trello.com/c/dH0qYKGo/281-1-grids are still working? Because if it does, I'll merge it because the structure doesn't matter to me at this point.\nIf your PR is changing something so https://trello.com/c/dH0qYKGo/281-1-grids is no longer considered fixed, then I think we should table this as it was a very temporary solution until we get Layout back up.\n. Did you check if these dropdowns are working correctly in IE browsers and mobile?\n. @maya I fixed problem 1 by removing the padding on the accordion. I think this is a better fix then hacking out the margin-top on the first heading.\n. @maya for all accordions. What I'm recommending is that you don't have blank text in accordion content. You wrap it in a semantic tag, which I think is better practice anyway.\n. So removing the <p> text inside the accordion and on the usa-font-lead text and all the other things that come up will be a maintenance disaster.\nAlso: if we're already needing to override the max-width on our own elements, it seems very likely to me our users will find instances where they will need to remove it too.\n. @maya yes I think that's the best option.\n. I've thought about the padding, and realized that it would have been better if we were more careful about setting margin-tops on our <h> and <p> elements by using adjacent selectors. That would be pretty hard to do before MVP, so I might want to find a way to make this work.\nBut I think you're correct, the parent container should define the padding. I just wish we could do that without having to hack at things.\nI don't care what we set the max-width to, I just don't think we can set it at such a broad scope as we are doing now. I think we should change that soon.\n. What should be the next step here? @maya do you want to implement .usa-content on a more specific scale as you probably know better where it's supposed to be used? In the meantime, I can figure out a solution for the padding and continue implementing these documentation accordions.\n. I wanted to add my opinions here for future reference. I don't think any of this needs attention before MVP, but wanted my opinion to be written down for the future of the library.\nFrom a front end developer perspective, I agree with Caroline in that we shouldn't force a max width with CSS but should offer guidance on how to treat text. Here is my reasoning:\n- Enforcing a max width on all p tags is very strict from a code standpoint. People use and write HTML in many different ways and I don't think we can see all the cases where people wouldn't want a max width on their p tags. For instance, even our library has a \"lead-text\" class that we apply to p tags to make them larger in font size. Our max-width seems misplaced here because larger text doesn't need as small of a max-width.\n- The majority of websites and CSS frameworks/libraries don't have this convention of forcing a max width. We should have a really good reason for choosing to build something that doesn't go along with the majority. I'm confused as why we didn't even consider or discuss other libraries and frameworks in our decision.\n- It misses a good opportunity to stand apart from CFPBs library and be more broad and all encompassing.\n- It requires confusing logic in CSS for lists vs paragraphs. We have rules to set a max width on all <p> tags but we can't enforce this on lists, <ul>'s, because theres way too many use cases where they shouldn't have a max width. This means all <ul>'s require a class to be set on them to set their max width while <p>'s will have it already set because the class is set at a more global level. This is bad programming because the user has to remember to do different things in different contexts to get the same result.\nI also wanted to discuss a few opinions with the current implementation of max-width. Essentially, if we're going with a forced max width, I think we should follow CFPB a little more closely. It looks like they have a well thought-out implementation of max width.\n- Our max width doesn't align with any of our grid classes. On CFPBs site, their max-width is the same width as their 2/3 grid class. This means a developer can easily mix and match p tags with grid-based content. Instead, our max-width is smaller then our 2/3 grid class. I think this could lead to problems for developers who want to line content up. I think we should ensure our max-width lines up with our grid as it will lead to a much cleaner interface for design and developers. I've attempted to show this in the following screenshot:\n  \n- I think if we force max-width we should embrace it more fully, meaning we shouldn't have our container classes (like accordions and alerts) have text that doesn't fill their space. This means these classes should have the same width as our max width to ensure there is empty space in them like there is now. This is done on CFPBs library through the use of grids(https://cfpb.github.io/design-manual/ui-toolkit/expandables.html), which we should emulate.\n- I think we should apply a max width to paragraphs with a class rather then a blanket rule as we are doing now or at least at a more specific level the the whole document. This will keep in consistent with the <ul> tags as I was talking about above. It would also negate many of the points I brought above about being too strict from a code standpoint. While it will be more markup and I'm still not 100% onboard with this implementation, it's a more consistent code interface and less strict of a rule allowing more freedom for the developer.\n. Fixed by https://github.com/18F/web-design-standards/pull/506\n. Fixed with https://github.com/18F/web-design-standards/pull/505\n. I think we should time box searching for a solution to this to about 3/4 of a day. If we haven't found a solution in that amount of time, I think we should actually have a conversation about dropping IE8 support for the MVP and first release.\n. @maya I didn't do it because I wanted to keep the amount of code changed to as minimal as possible to lessen the chance that I could create more regressions. Although it would make sense to have that rule.\n. @carodew it looks like some extra commits where tagged onto this one. Don't worry though, I think one of the devs should work with you to figure out the workflow.\n. Are we sure we don't want to send a pageview rather then a custom event for these? In my GA experience, I remember custom events are hard to dig into with different parameters while a pageview acts like any other pageview. \n. If you think we can get enough functionality with events then that's OK by me.\n. So if this is only because these links are pointing to anything, I'm guessing we should ignore this for now because they will eventually point to something?\n. The font size of the medium and small search bars is currently 1.4em, meaning this was likely completed. I'll close this issue for now, please re-open if more work can be done related to this.. @maya read the description in the PR.\n. @maya you might want to try having the 1/6 widths go to 1 column at medium, but only if that doesn't break other things like the footer. Otherwise, at this point, we might have to look at applying a fix to just this contents medium breakpoint.\n. @maya the footer and other components are official examples of using the library. I think users would expect the grid to work and look like those use-cases more then the homepage (which already has a lot of custom CSS anyway). I think we should keep the medium rules on the components to ensure users don't have unexpected experiences with the grid because they're not using a \"footer\" class or something.\n. But I also see the way the grid is being used for the footer as a likely use case. How do we know which will be used more?\n. I don't think that rule applies in this situation, but before we go really far into this, did you try  having the 1/6 widths go to 1 column at medium?\n. @StephenOTT, I'd like to understand the pain point in the usa prefix a littler better. Is it specifically that the prefix is \"USA\"? For instance, if one were to use the pure.css library (another CSS framework similar to these standards) then you would have a pure prefix like so:\n<a class=\"pure-button\"></a>\nIs that also a blocker for you?\nI do agree that it wouldn't be too hard to variablize the prefix, but wanted to fully understand the problem to come up with the best solution.\n. Thanks for the information @StephenOTT . I do think it would be a good idea to make the prefix configurable in the future, including being able to remove it entirely. \n. This looks good. Do we need a process documented for when we add new SVGs?\nActually now that I think about it, I think we'd eventually move SVG optimization into the build process. It's something I've done with Peace corps before\n. I agree with @dylanvalade solution.\n. @Sequoia thanks for the recommendation. This has been something we've previously thought about (splitting the site and lib into two separate repos).\n. We should pay attention to performance when we make this change. Essentially do a before and after to determine the impact.\n. Hey @paultag, I would say right now, checking on the actual web standards website is an OK example. There's also a template somebody else on our 18f team made that would make a good example: https://github.com/18f/federalist-modern-team-template.\nI think we should keep this issue open as advice to add this in a more formal way in the future.\n. I believe we've removed all instances of colored buttons with black text, so I will close this issue. Please feel free to re-open it if this is incorrect.. I agree. I think we would likely do this with browserify.\n. Our main reason for using jQuery was to ensure we had old IE browser support while developing the standards in a relatively tight timeline.\nThat being said, it's not being used excessively right now so we do have interest in removing it in the future.\n. Good catch!\n. @rtwell as new visual designer, do you have any thoughts here?. Hi @WestonThayer, I'm one of the front end developers who worked on the standards.\nThere's a couple of reasons we've chosen the approach we did. I think the bar to entry is a major reason for choosing this method. Our initial research highlighted that many of our potential users in government were more comfortable and would be better served by a simple copy and paste method of applying the standards. Many of the people we interviewed didn't have the workflow setup to easily implement something like React or Angular. The fact that React, and likely Angular, requires a build process would alienate some of our potential users. In terms of web components, we found that people were more comfortable coding HTML and CSS and staying out of the Javascript land.\nAnother aspect of this, which is still being debated within our group at 18F, is accessibility when Javascript is disabled. Many of the projects we've worked on at 18F have requirements that the page is at least readable and presentable when Javascript is turned off. This requirement makes it harder to go with the web components route (I've never actually seen a widely supported method of rending web components without javacript) and would make the React and Angular routes even more complicated (having to do server-sided rendering). We at 18F eventually want to research and come to a formalized conclusion on whether we should build sites that won't work without Javascript, but until we do that, we have to accept it as a requirement for at least some of our sites.\nI should also mention that maintainability is something we considered while build our library in this way. It's been our goal to make the style of our components separated from the markup. This means trying to stay away from styling specific HTML elements and using classes instead. Our hope here would be that we could change the styling of the standards without having to change the markup at all. That being said, we did find it difficult to fully support this idea, so we have some additional work and research to do in order to be successful with this.\n. This looks fine from a code perspective. @carodew @colinpmacarthur, feel free to close if you're good to go on this.\n. Yea I've thought about this. What's making the framework accessible is mostly the HTML code snippets which include correct HTML attributes. There's also some custom JS code for tabbing and ensuring the HTML is set up so tabbing works down the page. If a developer changes the HTML, which they potentially could, then accessibility might not work.\n. This generally sounds like a good idea.. I think when we have any rules like this:\ninput[type=\"text\"],\ninput[type=\"email\"],\n...\nwe should change to this:\n[type=\"text\"],\n[type=\"email\"],\n...\n. Yes their in inputs here: https://github.com/18F/web-design-standards/blob/staging/src/stylesheets/elements/_inputs.scss#L21.\nSomething to try: why do we need the specific type rules if they all include input. What if the rule was just input {?\n. I wouldn't close and reopen an issue, I'd just reuse this one.\n. I think an issue should be opened to check the codebase for consistency with em/rem units.\n. So was the purpose of the all.scss file to make it so you don't have to repeat that large list of imports in 3 places?\n. I think it does make sense to only have one list. I'm not sure it should be called \"all\" though, it should be called something like \"web_design_standards\".\n. We have to consider how an outside user would be using this. If they wanted to import the sass for the library, wouldn't they be importing from this file? If that's the case, we should name it something related to the standards, like wds or uswds so it's easy to understand where the import is coming from.\nFor instance, if I download bootstrap, then I get a bootstrap.less file with I require as \"bootstrap\".\nIt sounds like we don't need the main file. Whats the purpose of keeping that around?\n. LGTM\n. This would actually be useful to have on the docs site for the new web performance content. That content includes many new terms that would benefit from a quick resource to their definition. . I don't necessarily see anything wrong with adding it to every component and element file, besides the labor in doing so, as @skonzem mentioned.\n. Why wouldn't we use a style property as well as css and scss?\n. LGTM\n. @rossdakin you're correct on the last point.\nWe can keep the variables.scss file and not import it, that's fine.\nI've been thinking about the file paths problem and I think we should explore dependency management soon. I'm interested in hearing more about how your build process works, do you have a link to the repo in question?\n@maya, that also sounds fine as long as they're copying the file out of the uswds dir and inserting it into their repo. We should stop having people edit the libraries source files or we're setting them up for problems when they want to upgrade the standards.\n. This has been fixed in release 0.10.0\n. @maya can you update the dev instructions then: All development and pull requests should be done against the 18f-pages-staging branch.\n. Are we doing any releases before 1.0?\n. How do we ensure this doesn't happen again? Do we have instructions on how to generate the zip file that we could add this to?\n. I agree with removing teh code\n. I'm actually not sure I agree with this.\n. This technically looks good to me. We might want to test on a few sites that have implemented the standards just in case the change in specificity broke some custom CSS code, although I'm not sure that's even necessary (especially considering that we haven't come up with that sort of testing structure yet).\n. Yes, the idea was that you could manipulate those classes with JavaScript in certain circumstances.\n. @nickjs, just to check; is the linting also being run on the files in ./assets/_scss? Did those files not report any errors? \n. I'd be fine adding this now, it's a good start. We could also set the config to lint _scss and setup HoundCI because it will only complain about new code, which would be a great way to move toward reducing the linting errors.\n. So I think we should commit this change as is, ensuring that assets/_scss is linted. From here we'll add HoundCI at some point to move out codebase closer to consistency.\n@nickjs, if you'd like to take a crack at fixing a bunch of the errors, we'd be very thankful. Maybe that can go in another PR \n. I say src\n. When npm linking this into another library, and attempting to require uswds.js with browserify, I'm receiving the following error:\n```\n\nbrowserify ./src/js/main.js -o ./js/cg-style.js\nError: Cannot find module './components/accordion' from '/Users/msegreto/Development/govt-wide-patternlibrary/dist/js'\n``\n. @paultag if you're writing this in scss, you might consider using the neat grid system. I _think_ this should be available if you@import` the standards. More here: http://neat.bourbon.io/examples/.\n. I'll look into fixing the merge conflicts with this\n. LGTM\n. I agree that a component like this would be good from a dev standpoint(interested in hearing from design). The code could almost be re-used for the accordion. In general, it'd be pretty easy to implement for a dev perspective.\n. @tysongach just to be clear, the updates in this PR don't require Bourbon be updated, that's for other features?\n. @carodew in some ways thats true, but I think it depends how users are zooming in or changing their browsers font size.\n\nI found one article that says 100% should be used for when people set their font-size in their browser settings: http://terrillthompson.com/blog/589. I generally think this could warrant some more research as it depends on browser versions, etc.\nThere's also potential problems with the setting to 10px rule as talked about here: https://www.filamentgroup.com/lab/how-we-learned-to-leave-body-font-size-alone.html.\n. What parent element do you mean? \nAlso, was there a specific reason we didn't use rems everywhere?\nsrc/stylesheets/components/_alerts.scss:  margin-top: 1.5em;\nsrc/stylesheets/components/_alerts.scss:  padding: 1em;\nsrc/stylesheets/components/_footer.scss:      line-height: 2em;\nsrc/stylesheets/components/_footer.scss:    padding-left: 1em;\nsrc/stylesheets/components/_forms.scss:    margin-bottom: 1.5em;\nsrc/stylesheets/components/_forms.scss:      padding-left: 2.7em;\nsrc/stylesheets/components/_forms.scss:      padding-right: 2.7em;\nsrc/stylesheets/core/_utilities.scss:      margin-right: 2em;\nsrc/stylesheets/core/_utilities.scss:      margin-top: 0.5em;\n...\nAnd \nIf we didn't set the 10px on html, then 1em would equal the user agent size which would be 16px unless the user had a custom size.\nem would be 16px for the default then relative to 17rem set on <body>, so it wouldn't be 16px, but something else which I don't feel like doing the math for right now.\nAnother option here is rather then setting our body to 17px in any way, we set it on the elements we need it for, or the * selector.\nSo rather then this:\nhtml { font-size: 10px; }\nbody { font-size: 1.7rem; }\nWe do this:\nhtml { font-size: 100%; }\np, span, label, li, ... { font-size: 1.7rem; }\n// I'm actually not sure about this next one, it might cause the same problems.\n* { font-size: 1.7rem }\nAnother option is to set html to 17px, and have everything be relative to 17px. This would potentially go against both best practices mentioned in those articles.\n. I just read an article that did a great job discussing the tradeoffs in what we're discussing:\nhttp://zellwk.com/blog/rem-vs-em/\nOne of it's primary points is \n\"Although this is possible, it\u2019s often a bad idea to set font-size in the  to a pixel value because it overrides the user\u2019s browser settings.\"\nI've come to agree with this statement. Sure, it means that you're typography may not always be as consistent but trying to control you typography could end up hindering certain users of your page that have specific needs in terms of their font usage. While on some sites I'd recommend setting a px font-size on html for consistency, I think the standards should not due to it's commitment to accessibility. These means our html { font-size: 10px; } rule should be removed. I still think it's fine to set a percentage value on html but that is also a different discussion on how to setup the typography of the page and where em and rem units should be the same size by default.\n. @maya that's more about whether we want ems and rems to equal the same value. I personally would want them to, which would mean setting p to 1.0625rem. But I'd like to get some insight from other developers on what they'd expect from a framework.\n. @maya the other option is to set a certain percentage on html so that the base em and rem sizes are relative to 17px everywhere. I haven't fully considered which option is the best, both have trade-offs.\n. So wouldn't this require to change calls like this:\n```\n@include uswds-media($medium-screen);\n@include media($medium);\n``\n. Could this also mean that if a project that imported the standards did arequire('jquery')`, browserify would be smart enough to only include it once (if the versions matched up)? Either way this is fine.\n. We're not support IE8 anymore, is there a good reason to stay on jQuery 1.x?\njQuery 2.x has the same API as jQuery 1.x, but does not support Internet Explorer 6, 7, or 8\n. Also, how are we supposed to maintain that contributor list? What about the public contributors?\n. @rogeruiz I'm going to work off this branch to do https://trello.com/c/3J13uLIH/34-as-a-master-builder-i-want-to-be-able-to-know-what-dependencies-are-required-to-successfully-work-with-the-wds-and-i-want-the-op.\nI also realized something: we changed our main in package.json to point to the src JS, which may means those JS files are now dependencies, not dev dependencies. Or is that wrong?\n. So if the standards was on npm, you'd npm install, and the require('uswds'). That require points to src/js/start.js, which is unbuilt code that does require('jquery'). So in that case, isn't the user of the library using code that wasn't built yet?\n. @rogeruiz does the gulp command work?\n. @rogeruiz I see what you mean now, you're in a project that's consuming the standards. I have a local project too that doesn't have gulp support, maybe I'll take a look.\n. @rogeruiz I did get it to work by changing the node-sass command to this:\nnode-sass --output-style compressed assets/style.scss dist.css\n. I think it is a path problem otherwise. If you use cat assets/style.scss | node-sass --output-style compressed > dist.css\" then node-sass won't know that you're coming from the assets directory. I also did it the cat way and changed the @import to ./node_modules/uswds... and it worked.\n. @rogeruiz how are you including the wds repo? For instance, I'm using npm linking and ensuring I did npm install and gulp build in the wds repo.\n. Hi @ryanjgill, so we're not manually setting the height to anything. The reason the body height is 0 is like you said, the position fixed elements. For instance, if you change the header to position: fixed to static, the height becomes the height of the header. \nI can't think of a reason why you'd need to set the height of body to 0 so might need more context there to understand what you mean. Another point: using position: fixed like on the standards site isn't necessary to use the standards, it's just how we happened to implement the styleguide.\n. @edwelker, in the mean time you can install the standards through git with the following:\nnpm install --save git+https://git@github.com/18F/web-design-standards.git#18f-pages --registry https://registry.npmjs.org/\nIt should be noted that when we do publish to npm, the library will have a different structure, so some file paths may be different.\n. This may have been fixed\n. I ended up using a postcss plugin to do this on cg-style specifically because my code was consuming the css rather then the sass. Might want to consider that as an option on top of the variable if that's going to be a common use case (using the css rather then sass).\n. This was completed here: https://github.com/18F/web-design-standards/pull/1415\n. Added a note about the language, but looking good.\n. @kategarklavs I think this is looking good. Do you know when we're going to update the gettings started section on the actual WDS site https://playbook.cio.gov/designstandards/getting-started/? Some things are outdated on that page now.\n. I don't know of this clearfix doing anything that the bourbon one doesn't do. @maya can you recall anything?\n. I did a quick manual visual test of the code and it looks godo\n. Hey @tysongach, I've actually been working on this here: https://github.com/18F/web-design-standards/pull/999/files#diff-b9cfc7f2cdf78a7f4b91a753d10865a2. \nOne problem I ran into: I'm changing the include paths in the uswds gulp scss task to include the bourbon and neat paths, but when I'm using the src sass files on another project that uses the standards, the paths for bourbon and neat aren't there. \nHave you heard of a good way to solve that besides just using the full node_modules path (@import \"./node_modules/bourbon/...\") and not using the includePaths functionality in node-sass?\n. Sure I'll try and explain in some more detail.\nSo I have a separate repo, https://github.com/18F/cg-style, that pulls in the standards with npm, and the @imports the src scss files:\nmain.scss\n@import \"../../node_modules/uswds/src/stylesheets/all.scss\";\n...\nWhen this main.scss file is run through sass in the cg-style project, it complains that it can't find bourbon and neat anymore because their being reference by their names and cg-style didn't manipulate includePaths\nuswds/all.scss\n@import \"bourbon\";\n@import \"neat\";\nI can look at the direct bourbon and bourbon-neat packages. I also like the idea of eyeglass as this may be something missing in sass dependency management. \n. LGTM\n. @roger I'm getting this error when running npm install on the branch:\n```\n[12:04:30] 'scss-lint' errored after 4.52 s\n[12:04:30] Error in plugin 'gulp-scss-lint'\nMessage:\n    Error code 7\nError: Command failed: /bin/sh -c scss-lint 'src/stylesheets/all.scss' 'src/stylesheets/components/_accordions.scss' 'src/stylesheets/components/_alerts.scss' 'src/stylesheets/components/_disclaimer.scss' 'src/stylesheets/components/_footer.scss' 'src/stylesheets/components/_forms.scss' 'src/stylesheets/components/_search.scss' 'src/stylesheets/components/_sidenav.scss' 'src/stylesheets/components/_skipnav.scss' 'src/stylesheets/core/_base.scss' 'src/stylesheets/core/_defaults.scss' 'src/stylesheets/core/_fonts.scss' 'src/stylesheets/core/_grid-settings.scss' 'src/stylesheets/core/_grid.scss' 'src/stylesheets/core/_utilities.scss' 'src/stylesheets/core/_variables.scss' 'src/stylesheets/elements/_buttons.scss' 'src/stylesheets/elements/_figure.scss' 'src/stylesheets/elements/_inputs.scss' 'src/stylesheets/elements/_labels.scss' 'src/stylesheets/elements/_list.scss' 'src/stylesheets/elements/_table.scss' 'src/stylesheets/elements/_typography.scss' 'src/stylesheets/lib/_bourbon-deprecated-upcoming.scss' 'src/stylesheets/lib/_bourbon.scss' 'src/stylesheets/lib/_neat-helpers.scss' 'src/stylesheets/lib/_neat.scss' 'src/stylesheets/lib/_normalize.scss' 'src/stylesheets/lib/addons/_border-color.scss' 'src/stylesheets/lib/addons/_border-radius.scss' 'src/stylesheets/lib/addons/_border-style.scss' 'src/stylesheets/lib/addons/_border-width.scss' 'src/stylesheets/lib/addons/_buttons.scss' 'src/stylesheets/lib/addons/_clearfix.scss' 'src/stylesheets/lib/addons/_ellipsis.scss' 'src/stylesheets/lib/addons/_font-stacks.scss' 'src/stylesheets/lib/addons/_hide-text.scss' 'src/stylesheets/lib/addons/_margin.scss' 'src/stylesheets/lib/addons/_padding.scss' 'src/stylesheets/lib/addons/_position.scss' 'src/stylesheets/lib/addons/_prefixer.scss' 'src/stylesheets/lib/addons/_retina-image.scss' 'src/stylesheets/lib/addons/_size.scss' 'src/stylesheets/lib/addons/_text-inputs.scss' 'src/stylesheets/lib/addons/_timing-functions.scss' 'src/stylesheets/lib/addons/_triangle.scss' 'src/stylesheets/lib/addons/_word-wrap.scss' 'src/stylesheets/lib/grid/_box-sizing.scss' 'src/stylesheets/lib/grid/_direction-context.scss' 'src/stylesheets/lib/grid/_display-context.scss' 'src/stylesheets/lib/grid/_fill-parent.scss' 'src/stylesheets/lib/grid/_media.scss' 'src/stylesheets/lib/grid/_omega.scss' 'src/stylesheets/lib/grid/_outer-container.scss' 'src/stylesheets/lib/grid/_pad.scss' 'src/stylesheets/lib/grid/_private.scss' 'src/stylesheets/lib/grid/_row.scss' 'src/stylesheets/lib/grid/_shift.scss' 'src/stylesheets/lib/grid/_span-columns.scss' 'src/stylesheets/lib/grid/_to-deprecate.scss' 'src/stylesheets/lib/grid/_visual-grid.scss' 'src/stylesheets/lib/functions/_assign-inputs.scss' 'src/stylesheets/lib/functions/_contains-falsy.scss' 'src/stylesheets/lib/functions/_contains.scss' 'src/stylesheets/lib/functions/_is-length.scss' 'src/stylesheets/lib/functions/_is-light.scss' 'src/stylesheets/lib/functions/_is-number.scss' 'src/stylesheets/lib/functions/_is-size.scss' 'src/stylesheets/lib/functions/_modular-scale.scss' 'src/stylesheets/lib/functions/_new-breakpoint.scss' 'src/stylesheets/lib/functions/_private.scss' 'src/stylesheets/lib/functions/_px-to-em.scss' 'src/stylesheets/lib/functions/_px-to-rem.scss' 'src/stylesheets/lib/functions/_shade.scss' 'src/stylesheets/lib/functions/_strip-units.scss' 'src/stylesheets/lib/functions/_tint.scss' 'src/stylesheets/lib/functions/_transition-property-name.scss' 'src/stylesheets/lib/functions/_unpack.scss' 'src/stylesheets/lib/css3/_animation.scss' 'src/stylesheets/lib/css3/_appearance.scss' 'src/stylesheets/lib/css3/_backface-visibility.scss' 'src/stylesheets/lib/css3/_background-image.scss' 'src/stylesheets/lib/css3/_background.scss' 'src/stylesheets/lib/css3/_border-image.scss' 'src/stylesheets/lib/css3/_calc.scss' 'src/stylesheets/lib/css3/_columns.scss' 'src/stylesheets/lib/css3/_filter.scss' 'src/stylesheets/lib/css3/_flex-box.scss' 'src/stylesheets/lib/css3/_font-face.scss' 'src/stylesheets/lib/css3/_font-feature-settings.scss' 'src/stylesheets/lib/css3/_hidpi-media-query.scss' 'src/stylesheets/lib/css3/_hyphens.scss' 'src/stylesheets/lib/css3/_image-rendering.scss' 'src/stylesheets/lib/css3/_keyframes.scss' 'src/stylesheets/lib/css3/_linear-gradient.scss' 'src/stylesheets/lib/css3/_perspective.scss' 'src/stylesheets/lib/css3/_placeholder.scss' 'src/stylesheets/lib/css3/_radial-gradient.scss' 'src/stylesheets/lib/css3/_selection.scss' 'src/stylesheets/lib/css3/_text-decoration.scss' 'src/stylesheets/lib/css3/_transform.scss' 'src/stylesheets/lib/css3/_transition.scss' 'src/stylesheets/lib/css3/_user-select.scss' 'src/stylesheets/lib/settings/_asset-pipeline.scss' 'src/stylesheets/lib/settings/_disable-warnings.scss' 'src/stylesheets/lib/settings/_grid.scss' 'src/stylesheets/lib/settings/_prefixer.scss' 'src/stylesheets/lib/settings/_px-to-em.scss' 'src/stylesheets/lib/settings/_visual-grid.scss' 'src/stylesheets/lib/helpers/_convert-units.scss' 'src/stylesheets/lib/helpers/_directional-values.scss' 'src/stylesheets/lib/helpers/_font-source-declaration.scss' 'src/stylesheets/lib/helpers/_gradient-positions-parser.scss' 'src/stylesheets/lib/helpers/_linear-angle-parser.scss' 'src/stylesheets/lib/helpers/_linear-gradient-parser.scss' 'src/stylesheets/lib/helpers/_linear-positions-parser.scss' 'src/stylesheets/lib/helpers/_linear-side-corner-parser.scss' 'src/stylesheets/lib/helpers/_radial-arg-parser.scss' 'src/stylesheets/lib/helpers/_radial-gradient-parser.scss' 'src/stylesheets/lib/helpers/_radial-positions-parser.scss' 'src/stylesheets/lib/helpers/_render-gradients.scss' 'src/stylesheets/lib/helpers/_shape-size-stripper.scss' 'src/stylesheets/lib/helpers/_str-to-num.scss' --config=.scss-lint.yml --format=JSON\n[12:04:30] 'build' errored after 4.58 s\n[12:04:30] Error in plugin 'run-sequence'\nMessage:\n    An error occured in task 'scss-lint'.\nnpm ERR! Darwin 15.3.0\nnpm ERR! argv \"/Users/msegreto/.nvm/versions/node/v4.2.3/bin/node\" \"/Users/msegreto/.nvm/versions/node/v4.2.3/bin/npm\" \"install\"\nnpm ERR! node v4.2.3\nnpm ERR! npm  v2.14.7\nnpm ERR! code ELIFECYCLE\nnpm ERR! uswds@0.9.0 prepublish: gulp build\nnpm ERR! Exit status 1\nnpm ERR!\nnpm ERR! Failed at the uswds@0.9.0 prepublish script 'gulp build'.\nnpm ERR! This is most likely a problem with the uswds package,\nnpm ERR! not with npm itself.\nnpm ERR! Tell the author that this fails on your system:\nnpm ERR!     gulp build\nnpm ERR! You can get their info via:\nnpm ERR!     npm owner ls uswds\nnpm ERR! There is likely additional logging output above.\nnpm ERR! Please include the following file with any support request:\nnpm ERR!     /Users/msegreto/Development/govt-wide-patternlibrary/npm-debug.log\n```\n. @rogeruiz that worked.\nRemind self to look into using node-based Sass linter.\n. LGTM\n. LGTM, just had one comment.\n. LGTM\n. @rogeruiz what's the state of the regression you found?\n. @rogeruiz I actually see no reason as to why we should use our own, we should only use the bourbon/neat media mixin. I'm guessing to switch we have to change what grid-settings variables we pass to it?\n. Hi @daderonan. Thank you for writing. I understand what you're saying but would like some clarification on how it could fit into our Standards project.\nCurrently, the standards is a front-end CSS and JS library. It doesn't really make any assumptions of how it's assets are being served and what the backend server is. So for example, if you wrote a validating script, what programming language would you write it in? When would it be run?\nWe can encourage good practice of using HTTPS assets by ensuring our own documentation site, https://playbook.cio.gov/designstandards/. While we could also make a recommendation on always using https when including other off-site assets, we're still determining the scope of recommendations the standards should make. \nWe do have a team that's measuring how federal government domains are meeting best security practices on the web. Their website is here: https://pulse.cio.gov/.\n. Yes @nickjs, it should. \nUnfortunately, it now needs to be rebased again. I'll try and take a look at some point. \n. LGTM, @rogeruiz can you take a look.\n. LGTM, @rogeruiz \n. Hi @jflowers45. I agree that the event is firing too much, but I think the better approach is to find a way to eliminate the JS events altogether. We have a goal in our roadmap of \"UI components are comprised of clean, semantic code\" which this issue fits in well with.\n. @jflowers45 let's leave it open for now, I've added it to the correct milestone.\n. @IanLee1521 we actually purposefully wrote the paths as such, to advocate a convention that files in the lib directory should not be modified.\n. Hey @IanLee1521. I see your point. I think our assumption was that the user would already have or create a new lib folder.\nIn making this change to have the path like this, we had a hypothesis that we'd limit people from the bad practice of editing the src files of the standards by logically separating it into a libs folder. I think your confusion shows that it might not be the right solution. Regardless, I want to keep this open as an issue until we can do more research or collect more feedback.\nThanks for writing in! It's very helpful to see what confuses our users.\n. Hi @justinelam, I think I figured out your problem.\nYou have another accordion in the top nav, view able on mobile only, that is interfering with this accordion. In order to stop the interference, you have to change the ID properties to be different. I've changed the id and aria-controls property of your second accordion to include a \"b\" before these properties:\nhtml\n<div class=\"faq-box usa-accordion\">\n          <ul class=\"usa-unstyled-list\">\n            <li><button class=\"question usa-button-unstyled\" aria-expanded=\"false\" aria-controls=\"bcollapsible-1\">Can I vote in person before the election in Alaska</button><div id=\"bcollapsible-1\" aria-hidden=\"true\" class=\"answer usa-accordion-content\">Yes. Check out our <a href=\"/early_voting_rules#alaska\">Early Voting</a> page for details.</div></li><li><button class=\"question usa-button-unstyled\" aria-expanded=\"false\" aria-controls=\"bcollapsible-2\">Do I need to provide ID when I register to vote in Alaska</button><div id=\"bcollapsible-2\" aria-hidden=\"true\" class=\"answer usa-accordion-content\">First-time Alaska voters must verify their identity when registering to vote OR when voting for the first time (either in person or by absentee ballot). You can verify your identity by submitting a copy of one of the following with your voter registration form:current and valid photo identification; driver\u06eas license; passport; state identification card; birth certificate; hunting and Fishing license.If you register to vote from outside of Alaska you must also submit proof of your Alaska residency with your voter registration form. You can provide a copy of your current Alaska driver's license, Alaska hunting or fishing license; student loan or college tuition documents showing Alaska as your state of residence; proof of employment in Alaska; or military leave and earnings statement that identifies Alaska as the state of legal residence. Proof of your Alaska residency must be in your own name.If you do not provide proof of Alaska residency, your application(s) will not be processed. If you do not provide proof of Alaska residency, your application(s) will not be processed. </div></li><li><button class=\"question usa-button-unstyled\" aria-expanded=\"false\" aria-controls=\"bcollapsible-3\">Do I need to provide ID when I vote by absentee ballot in Alaska</button><div id=\"bcollapsible-3\" aria-hidden=\"true\" class=\"answer usa-accordion-content\">First time Alaska voters need to verify their identity before voting by absentee ballot. You can verify your identity by submitting a copy of one of the following with your voter registration form:current and valid photo identification; driver\u06eas license; passport; state identification card; birth certificate; hunting and Fishing license.You'll also need to provide proof of Alaska residency if you apply for an absentee ballot from outside of Alaska. You can provide a copy of your current Alaska driver's license, Alaska hunting or fishing license; student loan or college tuition documents showing Alaska as your state of residence; proof of employment in Alaska; or military leave and earnings statement that identifies Alaska as the state of legal residence. Proof of your Alaska residency must be in your own name. If you do not provide proof of Alaska residency, your application(s) will not be processed. If you do not provide proof of Alaska residency, your application(s) will not be processed. </div></li><li><button class=\"question usa-button-unstyled\" aria-expanded=\"false\" aria-controls=\"bcollapsible-4\">What if I'm in a remote location and want to make sure my Alaska absentee ballot gets delivered in time</button><div id=\"bcollapsible-4\" aria-hidden=\"true\" class=\"answer usa-accordion-content\">For Alaska voters who are located in areas where mail service may be slow (for example, remote areas of Alaska), Alaska provides a special advance ballot to allow additional time to cast a ballot. This is a blank ballot with spaces for the voter to write in the names of candidates and/or issues. This ballot is mailed beginning 60 days through 28 days before Election Day.In addition to the special advance ballot, voters are mailed the official ballot beginning approximately three weeks before Election Day. Voters are encouraged to vote and return both ballots. If both ballots are returned in time, only the official ballot will be counted.You can request a special advance ballot by checking the appropriate box on your <a href=\"/files/voter_forms/Alaska_absentee.pdf\">Alaska Absentee Ballot Application</a>.</div></li>            \n          </ul><!--.usa-unstyled-list-->\n        </div>\nIn order to be as accessible as possibly, our accordion uses IDs referenced in the aria-controls property. Unfortunately, there can only be one id per page, so having two of the accordions on the page as from our example won't work. This is something we might be able to find a solution for as we develop the library further, as I don't think it's a great experience for the front end developer. \n. Hi @justinelam. We've found the issue: there's a bug where having another class in the same selector as usa-accordion would cause the accordion to be ignored. We have a fix for this at #1085 and are planning to do a patch release (v0.9.1) to push this fix to production.\n. I tested this locally and found that even if I added a second class to an accordion, it still works.\n. I'm going to close this issue as it looks like it was fixed in #1127 \n. Thanks @PeterDaveHello for this PR. I'd also agree with @Haroenv and @jhfrench that it would be very helpful for us if the process you took to optimize these images would repeatable in our nodejs build process. This would mean we could keep this work consistent when we add new images.\njpegoptim seems to have an npm package, although it seems to depend on libraries like libjpg and I wonder how often that's available on different OSes. I also found https://github.com/imaya/zopfli.js. @PeterDaveHello, what do you think about adding this to the build process?\n. @jbrucegsa thanks for writing and showing what code you're using to fix this inconsistency. \nWe'll take a look at this when we start to work through our roadmap. I've attempted to label this issue so it's categorized correctly. Also feel free to open a PR if you have a recommended fix.\n. @jbrucegsa I think a consolidated PR would work, as it's one shared idea.\n. @jbrucegsa I just had one comment around how to name the name variable.\n. @maya the arguments in that conversation were based more off preference. It's also not necessarily only a rails and PHP thing, other frameworks in other languages also potentially have them.\nThe web design standards is more of a front end framework, so isn't really mean to take a strong decision on backend. I think showing examples like this that are commonly accepted is perfectly fine.\n. That being said, if users find it confusing in the future, we'll address it then.\n. I still agree with @jbrucegsa here. I think this is somewhat of a standard in the dev community and is fine to use in our examples.\n. @maya it seems like this has to be rebased.\n. ahh sorry, I closed it by mistake\n. I rebased it\n. Thanks for all your comments! We've known about issue 1a, I think we have it tracked somewhere (although I can't find it right now so might need to make a new issue).\nWe're currently looking into the other concerns, including #1120 .\n. Ok created an issue #1122, please feel free to submit PRs for that, although the solution may be dependent on what we decided to do with #1120 \n. So this solution doesn't rely on Jekyll and allows us to run build commands on a CI server before deploy? Because that sounds awesome!\nIs there a reason for using Circle CI rather then travis? I know we already use Travis, but there's so little being done I'd be happy to move everything over to Circle.\n. Just thought of more things; is this PR going to be where we actually switch over? We'll need to update some documentation probably (like the main repo page) to point to the new URL.\nHow could we redirect from the current playbook page to the new URL? Should we deal with that in another PR?\n. Thanks for the PR @burgwyn! We're liking going to switch our JS coding styleguide to AirBnb's, but this is a good step forward in the meantime.\n. @burgwyn https://github.com/airbnb/javascript\n. I checked out the code and rebased this.\n. @jhfrench I think it might help to see more output, as I can't find the reason the command failed here.\nAnother issue currently with our prepublish hook: it requires ruby and bundler to be installed. Could that be the issue?\n. I want to keep this issue open to document people having trouble with ruby and bundler being dependencies.\n. @joshbruce I think that slightly improves although I think what's here is also fine.\nCould you restructure this code based on what we talked about in #1137 , moving the changes from docs to src and running the build process? Again, sorry for having you do that. We could potentially help out by forking off your fork if you're interested.\n. @joshbruce it would actually help us a lot to close PRs that aren't being actively worked on because we're working though the large amount of PRs currently submitted.\n. @madmanlear I saw you were working separately on getting the footer working without JS, can we close this PR in favor of that solution?\n. From my perspective, the reason for the list is semantic: it's a list of headings with content. If we were to work to improve the accordion, I'd be happier to focus on ensuring it works with both lists and a single div if there isn't more then one element.\n. First off, what does the acronym AT refer to? Working in government, we often have too many acronyms floating around to remember any new ones.\nFor now, I think dt not being able to take h-tag elements might mean that we don't want to use dls in our main example of how to use the accordion. That being said, we thrive to ensure our styling code works with whatever markup our developers want to use. So if you want to use dl's for accordions and that doesn't work because of the way our CSS is structured, we'd be very happy to look at that and fix our CSS code so it will work in any context.\nSo feel free to test out the dl accordion, I don't think we'll change our main example for now though.\n. @joshbruce, I commented on #1136, I'm not sure I agree with removing the list aspect from the accordions.\n. Should be fixed in v0.9.2\n. Looks good to go\n. @joshbruce thanks for the issue, I'm checking this with our accessibility experts to hear what they have to say and will get back to you soon.\n. @joshbruce it's true that we switched the standards from using just a Jekyll build process to using an npm gulp workflow. We haven't completely figured this process out yet and are spending time right now fixing some of the issues people are having.\nI'll keep this issue open in the mean time as an example of some of the trouble people are having.\n. Hi @madmanlear thanks for the PR! First off, could you run the build process and commit some of the compiled files? It should just be npm install && npm run build. I think these files should have changes and should be checked in:\nsh\n        modified:   dist/css/uswds.css\n        modified:   dist/css/uswds.min.css\n        modified:   dist/css/uswds.min.css.map\nSecond, the first <li> now needs a little bit of bottom margin to stay consistent with what's current on the site. I think this is due from it changing from an <h> to a <li>. You can see the difference if you compare the space between \"Topic\"'s and \"Secondary link\"'s on your branch vs https://standards.usa.gov/footers. I took a look and I think it needs this:\nscss\n.usa-footer-primary-link {\n   margin-bottom: .8rem;\n}\nBesides those two things, this is looking good for a merge.\n. This looks good for me, @maya wanna take a look? Also, @madmanlear there are merge conflicts now probably because of other things I've been merging in this afternoon. You'll likely have to rebase and run the build again when you get merge conflicts. I can also open up another branch and do that for you if it helps, I'm very used to it by now.\n. @madmanlear it depends on what you named the upstream remote, in this case the 18F/web-design-standards remote. If you named it upstream, and your own fork origin:\n```\ngit checkout 18f-pages-staging\ngit fetch upstream\ngit rebase upstream/18f-pages-staging\ngit checkout footer-h4-semantics\ngit rebase 18f-pages-staging\nmerge conflict!\nnpm run build\ngit add .\ngit rebase --continue\nif another merge conflict, repeat last 3 steps\ngit push -f origin footer-h4-semantics\n```\n. @madmanlear I'll guide you through what I did to clear up these conflicts, and hopefully that will work.\n```\ngit checkout 18f-pages-staging\ngit fetch upstream\ngit rebase upstream/18f-pages-staging\ngit checkout footer-h4-semantics\ngit rebase 18f-pages-staging\nYou'll get merge conflicts here, likely about certain files being deleted\ngit status\nCheck the status, this will show you what files are in conflict, likely about files in the dist directory\ngit rm -rf  dist\nYou might want to check status again here and make sure all files are \"added\", or are green.\ngit rebase --continue\nAt this point, you may or may not get more merge conflicts. If you do, try git rm and rebase continue in exact same way as above.\n```\nLet me know if this works. You should ideally have only a few files changed in the src/stylesheets dir.\n. Most of this was done in #1159.\n. @el-mapache, can we build off #1159 and add the tests so they run in circle ci?\n. Thanks @el-mapache !\n. @joshbruce we just merged the somewhat large change to not check in the compiled dist files as well as not copying around files into the docs folder. This means this PR is merge conflicted, but the good news is there should be much less merge conflicts in the future.\nWhen you rebase, none of the files in dist or docs/assets should be checked in. For more info check #1164.\n. @maya we need to go the other way: a class to turn a <button> into a normal looking link, ie <a>.\n. @maya I think this is a pattern that is actively on our docs site and it something that's been discussed in the front end world. Here's an example on our docs site:\n\nIt sounds like there's a use case for this: textual buttons that aren't links. Why isn't it an approved pattern?\n. @joshbruce see #1164.\n. @juliaelman I'm not actually sure what would need to happen in your second point, dist as a tmp dir. Also: it's a temp dir in that it doesn't get checked in, but if you're developing locally or download the zip or from npm, it should exist.\n. Theres a merge conflict but otherwise, I think this looks good\n. LGTM once the conflicts are fixed.\n. I'm OK with this change for now, although I think we need to refactor the footer code in the future.\n. This question has come up before, and I'm of the opinion that we shouldn't be making recommendations on security as it's out of our goals for the WDS.\nIf we agree with that, I think the fix here is to add language that this UI is not a reflection of security recommendations but an example use case of the reset password component.\n. @yozlet I've been working with Adam on using Stylelint for ndoe-based linting across 18F, so I'd hold off on trying to find a new linting tool\nWe've discussed changing some of the rules, such as the selector depth. I think we should evaluate where we're breaking the rules and attempt to refactor code before we change any rules.\n. Hi @joshbruce, thanks for the PR. What do you mean by \"causes double-click requirement\"?\n. @jessieay what linter and linting configuration are you using?\n. @jessieay I'd also suggest to look at the 18F scss-lint configuration. This will keep our whole organization consistent in CSS style and will be compliant with WDS standards. If you ever run into problems with that configuration, we can also change it.\n. I'm going to merge this without the documentation changes because I think it's more important for it to be done.\n. ## Plan\nPurpose\nTo improve code quality, maintainence and improve experience for develops who use or are planning to use the standards\nPlan\nFor each component:\n1. Look for existing issues filed by users of the standards that are related to refactoring for the component, such as:\n   - Specificity in CSS problems\n   - Code implementation problems.\n   - Problems with code/HTML/selectors not being clear.\n   - Problems with not being able to override aspects of the standards.\n   - Having to write additional CSS to overwrite something the WDS does.\n   - Any sort of bugs and errors related to code.\n2. Refactor the component by fixing the issue if it's valid.\n3. Refactor the component by rewriting the code to fix general problems with the code in order of importance:\n   - Remove duplicate code.\n   - Decrease specificity.\n   - Rename confusing selectors.\n   - Allow HTML code to be more configurable and malleable for developers using the WDS.\n   - Decrease complexity of HTML.\n   - Shorten long class names, attempt to keep class names below three levels of modularity (A-B-C).\n4. After refactor, if there was breaking changes:\n   - Add a deprecation warning to the documentation of the component.\n   - Add written instructions for how to upgrade from deprecated component.\n. I did some research and here's an idea list we can work from:\n- Remove margins on text elements so they don't need to be reset\n- Extra specificity on input selectors, #891\n- Button vs link semantics, #1162\n- Switching linting from scss-lint to stylelint (more accurate in relation to styleguide, doesn't require ruby).\n- Create mixin for dark background font smoothing\n- Ensure all uses of ems over rems make sense\n- Attempt to reduce specificity in base table code.\n- Remove any written css code from /core\n- Make alerts work without header and with different sizes of text.\n- Remove extra specificity, and complex class names in footer, break up some\n  parts into separate files\n- Move form checklist to new component\n- Refactor form file so base form stuff is in elements\n- Split up header components to separate files\n- Reduce unnecessary specificity in search component by de-nesting classes\n- Reduce unnecessary specificity in sidenav component by de-nesting classes\nThis is definitely not complete, just what I've found from generally looking around at code and issues.\n. LGTM\n. LGTM\n. @ericadeahl pinging you to see what you think of the visual design implications of this change.\n. I think I'm starting to see what you mean here.\n- The WDS uses a fieldset and then a legend for the whole form. This means the legend has a large size applied to it.\n- Micropurchase uses a fieldset and legend for groups or parts of a form, so the legend doesn't need such a large size.\nLegend and fieldset can be used to describe a whole form, a group of elements or even one element, so both uses cases seem to make semantic sense. I would agree with @jessieay that applying a large font size on all legends doesn't necessarily seem correct, because there's no guarantee that the legends is the heading for the form. \nMaybe we could leverage the \"only-child\", \"only-of-type\" selector to only set the legend to a large font size if the fieldset is the only one on the form. If there are more then one, then we won't set the font size so large.\n``` css\nform fieldset legend {\n  font-size: $some-normal-font-size;\n}\nform fieldset:only-of-type legend {\n  font-size: $h2-font-size;\n}\n``\n. Checking in with @ericadeahl on the visual design implications of this change. From a code perspective, everything looks good.\n. THis looks good to me\n. Is the addition of the descendent reference break something else somewhere on the site? Or are the accordions broken in some way? \n. I decided yesterday to movecg-style` off this branch and track the npm package, so I don't think this is necessary anymore.\n. \n. Did you do these things from the PR template:\nBefore you hit Submit, make sure you\u2019ve done whichever of these applies to you:\nFollow the 18F Front End Coding Style Guide and Accessibility Guide.\n Run npm test and make sure the tests for the files you have changed have passed.\n Run your code through HTML_CodeSniffer and make sure it\u2019s error free.\n Title your pull request using this format: [Website] - [UI component]: Brief statement describing what this pull request solves.\n. You're correct, you don't really need to run codesniffer on this.\nI would say this is technically related to the UI components. The website is the documentation files in the docs folder, which you didn't edit.\nAnd the tests passed on circle which means things look good.\nIn terms of other testing, you could check that the current docs site is working by running gulp website:serve to see it locally.\n. Yea you do need to have Ruby ~ 2.2.3 and scss-lint installed\n. @jessieay did you also run npm install with npm version above 0?\n. I'll turn around\n. Confirmed that things were working on @jessieay computer.\n. Reviewed everything looks good. I'd say this is ready to go after comments looked at.\n. @shawnbot I'm not sure I'm following. Doesn't the release need to include bourbon, neat and normalize? Or are you saying when you use the standards, you use the include paths so they aren't in the npm package?\n. yes that sounds right\n. @maya have you tried one with just one line of text. Your only options here have multiple lines of text.\n. Some notes:\n- Each footer link uses a grid class (like 1/6) to position itself. What if this was more dynamic, so a user wouldn't have to figure out what grid class to use but could just add as many links as required.\n- Possible ways to split up:\n  - Footer sections, like footer-primary, footer-secondary\n  - Horizontal navigation component for links\n  - Horizontal block navigation (for nav of big footer)\n  - Logo component\n  - Sign-up block isn't specific to footer.\n- contact links class just aligns right\n- social links class just removes text decoration from links (could maybe be done in a nav class)\n- Should the social links really be background images? seems like it makes them less extendable because you have to add a new class to add a new one, rather then just adding HTML link and image.. Is there a reason Salesforce Lightning isn't on that list? It's one of the more thorough design systems and we've used it for a lot of inspiration.\n. @carlosvalle thanks for submitting! Could you help us out a little by posting a screenshot of what some of your custom alerts look like?\n. I've completed the more simple part of this here: https://github.com/18F/web-design-standards-docs/pull/80. Will work on the more complex moving customization out as a separate PR.. I've put a draft of a more complete customization section here: https://github.com/18F/web-design-standards-docs/pull/81. It might make more sense to just merge this one and ignore 80. It could be helpful to merge 80 if 81 takes a long time.. @juliaelman @adborden I'm getting the follow arrow when I pull this down and try and run npm install something.\nError: Failed to replace env in config: ${NPM_API_TOKEN}. According to analytics.usa.gov, IE8 is now under 0.1% of all usage government site usage. That's a very small percentage and most companies will stop supporting browsers with that little users.\nThat being said, IE7 is at 1% of all users. This is likely due to IE7 being the browser that ships with Windows XP, which is not completely phased out. Would removing IE8 support further break the site for IE7 users?. One (probably small) danger of including the SASS in the zip, is users could think it's OK to edit those files directly, blocking themselves from future upgrades.. Good points, I have no actual basis that this would be a problem, it'd be helpful to learn from actual users before worrying about this as a problem.. In that case, I think the best way forward is to include the SASS files in the zip file. I asked about this in the Design Systems slack, asking if anybody has done any user research on successful ways to show code samples. Nobody had, but in generally, people advocated for showing full code samples, uncollapsed, near or next to the view of the component.. Document comparing metrics https://docs.google.com/document/d/1Q9A09Edke_VNR-KwiXtkj6UYM4B6Z_D6FcQCc_3For8 (GSA only). I will do a second pass-through of the comparing metrics document to ensure it conforms to what I discussed in the meeting:\n\nGenerally recommend 4 primary, direct metrics\nAdvise developers to look through metrics documentation and decide what's best for their site.. I updated the document but still feel it could use a restructuring. What I want to say is, deciding what metrics is based on team, so we can't one recommendation that fits all, but here's some general advice on what you should track.\n\nAnother idea, maybe the first part of the document should be more story-based, taking a website team from deciding metrics, to deciding metric budgets to deciding how to track. And then leave the rest of the document to the categorization?. I think this depends on https://github.com/18F/web-design-standards/issues/1784, as the tools to use really depends on the metrics to track.. Blocked by #1791 . Passed onto Eric for review.. Also to note: this became more about HTTP/2 guidance that HTTPS guidance as thats much more relevant to site speed.. There's also Getting Started -> For developers which goes over a lot of dev centered discussion such as architecture. But I don't think it really belongs in a \"Getting started\" section.. A lot of performance recommendations today focus on metrics and budgets. A team will define what metrics are important for them(speed index, render start, total page weight, etc) and will set a budget for them based on type of site, how their competition compares. The build fails if the measurements go over the budgets. While not every team would require this type of setup, I definitely think linking performance to the build in this way is a great way for the team to always be thinking about performance, and to guarantee that future teams or open source contributors don't commit code that degrades performance.. This also makes me realize we should ask in our interviews: what does the long term maintenance of the website look like, what team will maintain this in the long term, etc.. This seems promising and supposedly the tool uses lighthouse, so we could just add it to our existing setup.\nhttps://habd.as/monitor-pwa-website-performance. This would fit in really well with our current nav structure for web performance as defined here: https://github.com/18F/web-design-standards-docs/pull/250.\nIt could be the first section, titled \"What is web performance\" or Overview or something else.. Thanks @AndreaSigz. I'll work on adding this to the \"what\" page.. Draft here: https://docs.google.com/document/d/17fvQBTEf2XJjxILhLhspvwV9iyZJPjETzbgQjRAirNI/edit#\nNot sure if it warrants much of a review, maybe just a passthrough.. First draft here, requires review: https://docs.google.com/document/d/1rLwN-3ZnfuaBf8xrjsGtVy57ifNOSD1PnGX3EfyD_ew/edit#. So we don't really know if people are using our private APIs currently? If that's the case, I'd probably assume that people are, and I don't think it would be right to break those APIs for them. I'd agree with @toolness @mgwalker of adding the V1 API shim and hopefully include deprecation warnings.\nIn the future, I'm not sure just having a list of public APIs is enough. I think it's more important to provide users with what they need then assume they won't use internal things. So as a user, I should be able to import the accordion component and init it directly, I shouldn't be forced to use the whole thing.. As a developer, I don't usually look through unit tests to determine what's public, but who knows, maybe some developers do. I'm not sure the tests are the main factor here though. I think it's more about how our users are perceiving the internal APIs. In this case, it kinda sounds like our users are perceiving them as being public, and using them.\nSo for example, if I'm using X framework, I don't end up using the private APIs because of at least a few of these reasons:\n\nThey are nowhere in the documentation, and the documentation is thorough enough to understand the public API.\nThe framework provides me with the tools I need, therefore I don't need anything but the public APIs.\nI get warned, either programmatically, or through documentation, about using private APIs.\nIt's not possible to use the private APIs unless I do something really weird or modify the code (such as the modules not being importable)\nIt's very clear what's private and public through naming conventions, for either the modules (like being underscored _moduleName) or through directory names.\n\nRight now, from what I've seen, we're not doing a whole lot of those ^. For instance, I'm not sure we're doing 2 because developers are using our private APIs to get work done. We don't do 3 or 4 or 5 either (although we don't necessarily have to do all). So what I'm seeing, is that it's pretty hard to use the standards now and know whats private and public. This means I think we owe our community to not break what we considering private.\nI think in the future, rather then just keep a list of public vs private, we should think about what our users needs are and then using more extensive techniques to keep private things private. There will always be users that still use the private APIs, it happens in every system. I've seen React issue warnings about it, I've seen it in tutorials as warnings and I've seen it in changelog notes for updates. If we made a good effort to prevent users from using our private API, then I don't think we're at fault for breaking it in a non-major release. But in our case, I think we still are.. This is outdated. @shawnbot I guess if we've done the research and we're positive we won't break anything for our customers, it's ok to make a breaking change. Doing so kinda negates my previous arguments.. Yea it's not supposed to work nested, but I think you technically can hack it a bit to make it work. It could potentially keep some consistency in code, especially if the code is componentized like React, or templated. For instance, lets say I have a react grid component where I can pass how many columns I want. I should be able to pass one column. If this class didn't exist, then the structure of the code would change from being something like:\n<div class=\"usa-grid\">\n  <div class=\"usa-column-one\">\n  ...\n</div>\nto:\n<div class=\"usa-grid\">\n  ...\n</div>\nThat ^ changes the structure of the HTML, which could be confusing and cause other things to break. So it might make sense to have the one column grid just for consistency like that.. It does exist as a class, and that class does have CSS applied to it. Here is some of the CSS rules for the .usa-width-one-whole class:\ncss\nmargin-right: 0;\nfloat: left;\ndisplay: block;\nwidth: 100%;\nBecause it's 100% width, 0 margin and floated left, it's not practically doing anything. But it's totally fine to keep in your code because it's not doing anything bad.. That's great to hear that aria-multiselectable actually fixes this. Maybe the fix for this would be to include that property in the HTML documentation?. @toolness yea it's fine to merge the code first then write docs. How would it change for people import uswds? So do we publish an includePaths property now similar to bourbon / neat?. I definitely think this could be done in some areas. We'd have to be careful of using context-based tags, like aside, main for certain components because the components could be used in different contexts. For example, somebody might use the accordion for nav, but it could also be used in main content.. I think this part is ready to go.. Because this is a breaking change, it needs to go into a major release, probably not develop. Is there a way to do that? Should a branch be created for version 2?. Pretty sure I know what happened:\nbutton_wrapper-dark is a styleguide class, meaning it's not in the standards at all, it's only in the additional SCSS file on the docs site to help with things like this: styling needed just for the documentation. So when we moved the HTML from there to here, we didn't move the class, so it didn't work. Your solution sounds fine.. Here's my proposed solution:\nI think we should go with the 2% threshold, taking cues from UK Gov. They're standards is something we've followed before and is generally well researched and trusted.\nGoing below 2% would also mean we have to support browser's we don't even currently support, and browsers that we don't have data on, and are not commonly supported in web development.\n\nAs per the screenshot, going below 2% means we'd have to support IE7, which we don't currently do, meaning we'd have to go back and fix issues. We'd also have to support unknown things like Android Webview, which we don't know anything about.\nWe should change our documentation on https://standards.usa.gov/getting-started/developers/ to reflect this decision. The documentation should not longer be about which browsers but about the percentage value of 2%.. I'd go into effect with some release, it should probably be a major release if it'd cause breaking changes.. I think we did this already? Under the Visual Design Polish tag. @toolness I think lifting the <h3> out is a good solution.. Yea I'm figuring out the best way to get the colors now. @rtwell yea that is the existing mobile behavior. Because I didn't see a mobile mockup, I kept that behavior, but we can definitely revisit it. It would be easer (and get rid of code) to keep the icon size the same on mobile.. @rtwell no-header isn't technically a variant / different design, I just have it here for us to see that the alerts work with or without a header. It's more there so we can see if we break something on the alerts code.. @donjo I'll take a look at the spacing. I think the issue with margins is more to do with when there's a single line vs the header + line. In the former case, I add more bottom margin to the line to make up for the difference in height, and ensure the height stays consistent. This mean's in code, you can have either one line or line + header and not have to add another class.. @donjo fixed the spacing issue, was due to a bad selector that I didn't realize.. So I experimented with the dashed outline focus and here's what I found:\nWe can apply positive padding and negative margin to inline elements to add some space between the element and the outline while keeping the element as a whole from moving:\n\n\nFor block level elements, like buttons, this becomes a problem, because they're whole structure is already defined by their large padding. So if if set the custom padding they become too small:\n\nHere is what they look like without the padding:\n\n. There is also the outline-offset CSS3 property, which adds exactly what we want: space between the outline and the element.\n\nThe outline-offset property does not have any support in IE, but has support in the rest of the browsers. Using it in IE would probably mean there's not space between the outline and the element.. Closing this in favor of new way of doing it. This all looks reasonable to me. I branched this off the focus state PR. I wonder if there's some sort of better njk solution. Or adding the empty space in the config file would technically work.. I found one issue on the small breakpoint while I was testing the change:\n\n. @rtwell Please take a look. https://federalist-proxy.app.cloud.gov/preview/18f/web-design-standards/ms-visual_design_header/components/detail/header--basic.html\nI've found a lot of inconsistencies with whats even in the \"Old\"/original mockups and what's actually part of the header, so I wasn't really sure anymore what I should update. Especially the mobile view, it seems like a lot of elements are missing. Should I add things on to get it as close to your new mockup as possible or should we re-access? . I fixed part of the problem where the nav actually blocks the logo. In terms of the nav moving down, I'm not sure much can be done there because there's just physically not enough room for both the nav and the logo to fit. . The current nav on components site doesn't actually have any visual indicator when it's active, so I'm not really sure what that's supposed to look like. Maybe it had a visual indicator that broke at some point? I can add one if I see what it looks like.. @rtwell when we discussed the header, we didn't talk about adding that visual indicator. Should we add it at this point?. Researched finished here: https://github.com/18F/web-design-standards/issues/2137. Criteria:\nA. Documented offset classes\nB. More then max columns requires additional usa-grid containers\nC. Can't nest grid columns\nD. The naming convention is confusing\nBASSCSS\nA: fail, there are not offset classes in the grid.\nB: pass, can add as many columns and things will flow correctly to next lines\nC: pass, can nest\nD: unsure, the system is more widely used but the naming convention is somewhat atomic, which isn't necessarily in the WDS style.\n. Bootstrap\nA: pass, there are offset classes in the grid.\nB: fail, I think everything has to be nested in a row class\nC: pass, can nest\nD: pass, a well known naming convention. reflex\nA: fail there are no offset classes.\nB: pass can use an auto column class to automatically flow as many columns as needed. Not the default though\nC: pass says it supports nested grids but doesn't have any examples\nD: maybe not as used and some things are common in other grid systems, like the auto class. Is also relatively complex compared to other grid systems.. @joshbruce yea flexbox is a possibility, but I think we'd have to do more research on how well IE11 supports flexbox, because it's marked as only partial support and I've heard there are problems and bugs. If we could find a way to get flexbox working well IE11, it would definitely work. We could even potentially look at CSS grids, although I think they have even more issues with IE11.\nThanks for the links! I'm also hesitant on the mixin structure, as that's what our current grid is and there's been some problems with it.. Hi @joe-watkins thanks for looking into this and reporting it to us! We did make a change to the focus state in the last sprint iteration, but haven't released that change yet. It could fix this problem though: https://github.com/18F/web-design-standards/pull/2112.. Are you seeing the docs site issue or the fractal site issue? They're probably separate.. Why is this under an article rule? What happens if I want this list style when I'm not using an article? What about users that aren't really using article tags because they don't know much about html5 elements? How it is going to be documented that you need to nest it in an article tag?\n. Classes should eventually be moved out of elements. This is partly due to organizational reasons: you would only expected to see bare html elements in an elements folder. This will also help with a trending upward specificity curve when you import the files. So elements imported first (lowest specificity), then components (medium specificity) then patterns (high specificity) etc.\n. If this is already defined on body, isn't it not needed here?\n. You might want to make font weights variables. If a user changes to a different fonts, they may need to reset what the various weights are according to their font.\n. The indentation for these lines below seems off by 1 tab.\nI'm also confused why these are mixins. I would expect mixins for classes but not necessarily elements. How would you see a customer using these?\n. So I've been thinking about this:\nHow will people use the theme file or create new themes?\nWhats to be gained by putting the color rules in the themes file? Like if I want to change a color for my site, I'd prefer to just set a variable, I won't need all this code here because it's just setting the color for various things. \nOne worry I have here is that this file is already pretty large, and it's the begging of the other code, meaning this file could potentially get huge. It migiht be good to really think about what goes in the theme file, (I'm still thinking about it right now). I think variables themselves are the best way to control theme.\n. Technically this is a component, its a link component. I'm not sure how you were going to do your component files but it could just be components/link.scss\n. Yea it could follow typography conventions: $light, $book, $medium, $bold, $exbold, whatever. In reality, most web fonts will only use 2 or 3. Maybe just $light, $medium, $bold will do, but you might want to talk to the designers.\n. Isn't this technically more complex then an element because it uses a class? It kinda means that it takes the base element (all the rules of the a tag) and builds on top of them.\nIn my own work I've separated components that are really simple like this from components that are more complex and made up from the simple components.\n. I think if you want to have unstyled lists as the default you should move these rules under a \"styled\" list class. I think my issue here is that it doesn't necessarily make sense that the styled list would be under an article tag.\n. You should nest the nest the style rules if that's how you want the links to be used. People will probably want both, default styles to work for most situations and ways to override them with classes.\nI still stand by what I said before though. As a developer, when I see an elements folder, I would suspect only rules for html elements, a, h1, etc, would be in there, no classes. So I would have trouble finding where the usa-link class would be if I was working on the code base. It would also help for specificity organization that classes don't come until later in the import order in the final file to ensure you have low specificity first so don't override unwanted things.\nI think you have to make the best decision on the research you guys did. Just be careful with specificity problems, that's like one of the only things in CSS architecture that really matters.\n. Yea I agree with @mjovel, I think styled lists should be the default, and use a class for the unstyled lists. I think I remember it being what I've seen in other libraries.\n. Space between closing bracket and li\n. newline after this.\n. There should be a space after this line\n. There should be a space after this line.\n. There should be a space after this line.\n. There should be a space after this line.\n. I added a rule in our styleguide that selectors separated by commas only have to be on new lines if they are more then 5 chars, so this would be fine. Let me know if you want them to always have newlines, so like this:\n```\nul,\nol {\n...\n```\n. I like it this way, I'll keep it for now and we can change later if needed.\n. From your research, do you think people will want to control button size? We could potentially variablize this sizing stuff.\n. Please keep properties alphabetically ordered according to style guide.\n. Please keep - properties together either at top or bottom.\n. Remove all prefixes and replace with what would be in auto prefixer:\nhttps://github.com/postcss/autoprefixer/wiki/support-list\n. Why are we using ids here? Using a class like usa-accordion would allow people to put multiple on the page, would lessen potential issues with specificity in the CSS code.\nLet me know if you're OK with changing to IDs and I can update the code.\n. These selectors are fragile, in that if somebody wants to make an accordion out of different elements then ps for headers, the code wouldn't work. I suggest using classes instead to ensure the code breaks in less situations.\n. Same comment as above for here. This using a p tag here has the added problem of hurting accessibility because it's not going to be shown as a link or button.\n. OK thats fine, we can keep things like this until we see there being an actual problem in testing.\nIt would be good to make sure all devs are on the same page in how we are dealing with nested parts of components like this.\n. Do you need a separate class for secondary? Will usa-button-active not be enough?\n. I thought this PR was just for adding functionality to the style guide itself, not the actual pattern library code. Why was this selector added?\n. Is there a chance there will be any more JS code needed for the style guide itself like this? In that case, I'd call this file styleguide.js, otherwise this is fine as is.\n. Whats the reason for building the list like this, as a table with the :before rule with the bullet?\n. Newline below this line.\n. Newline below this line\n. These properties should be alphabetically ordered:\ncss\nborder-radius: 0;\nmargin: 0;\nright: 0;\nposition: absolute;\ntop: 0;\n. You might want to use the production URL as described here:\nhttps://rawgit.com/\nThis will ensure that customers of the library won't have this break when due to throttling or blacklisting.\n. It might be good to actually use the for attributes, to show best practice.\n. These properties should all be alphabetized based on style guide.\n. use the for attributes on the <label> tags.\n. Yea that's all I meant.\n. So by setting href=javascript:void(0) here we're saying we don't want the link to do anything?\nIf that's the case, we should consider using un-styled <button> for this, its been coming up in articles recently.\n. Why isn't this class usa prefixed?\n. Why isn't this and the rest of the grid classes usa prefixed?\n. For this class name, is each part of it a separate part? So is this a footer that's a secondary footer that's a section of a footer? Or is it a footer that's a secondary section of a footer? If the latter, I think usa-footer-secondary_section makes more sense.\n. I like the accessible attributes!\n. @maya I remember you had the concern that if a user didn't add this usa-top-of-page id to their body, this wouldn't work. Maybe we should just make this href=\"@\"?\n. These rules a and p here scare me a little. We're saying all <a> and <p> tags should having padding on them. I could see this potentially being restricting if somebody wanted to customize the footer to their own liking.\nThen again, I don't know how the users will be using the pattern lib, so maybe they won't be modifying it like I say.\n. Newline\n. Don't need a line here.\n. Don't need a line here.\n. Alphabetize\n. Don't need a line here.\n. Don't need a line here.\n. Why do you need the img part of the selector? Wouldn't .usa-footer-logo-img be enough?\n. What's this 600 number represent? Is it a breakpoint?\n. This is introducing globals variables, we should file and issue to change to a better module scheme.\n. I wouldn't think we should actually set em font-style to normal, I can file an issue.\n. If these classes are so specific, maybe they don't have to be nested, which will keep specificity low. I'll file an issue for it, it's not urgent.\n. Are we going to prefix the width-one-half classes too? They sound like they could potentially be a naming conflict. I'm potentially OK with waiting though.\n. Yea, and the reason we are doing this now is to have less code to change in the future.\n. These classes should be usa prefixed, like input-small and additional_text.\n. I think you can remove the class=\"\"\n. Is there a reason this can't be on the form class itself? I feel like this insinuates that you can do form-two-third, or form-one-half, but in reality you can't, which might be confusing to somebody using the library.\n. Might want to make this a variable if it's being used twice.\n. The selector should end up as #password as aria-controls = password. What aspect isn't working? I'm expecting it to change the password field to a normal text field and back to show and hide what you typed into it.\n. No newline here.\n. Should we use a fieldset here now?\n. Will this or does this always have to be a <span>? Is there a chance that the user might want to make it another element besides a <span>?\n. Can you do \nmargin {\n  top:\n  ...\n}\n. I'm not sure the !important rule is good here.\n. Will this work on all our supported browsers?\n. Is this supposed to be an input or a link?\n. I would think \"Politespace\" would be the link here. Or the \"FIlament Group\" and \"Politspace\".\n. I think I was confused by line 184, because theres both an input and a link, but now I see that there should be both. I'd recommend moving the link onto the next line.\n. We didn't put actions and methods for any of our other forms right? I think we should stay consistent and do it for all of them or none of them.\n. I don't know what sr-only means. Is it an abbreviation?\n. This looks like another selector problem but, why not use .usa-search-submit?\n. I'm confused why this rule is separate from the rule above, which is just a generic input of type search. why do they have to be separate?\n. Can't you put this in the media query aabove and remove this one?\n. I think the 8.5rem, 4.5rem values should be placed in variables at the top of the file and used throughout. I think it might make it a little more clear, and would make maintenance easier in the future.\n. The inline sounds like a modifier so I would say a dash works better.\n. I think this would be more robust if it used something like:\nbutton:last-of-type,\ninput:last-of-type {\nThat would mean the user could put the buttons in any order they please and wouldn't be confined to needing a usa-button-cancel\n. Thats what I thought, so just checking.\nI'm still thinking through if we should fix that problem, but its fine for now.\n. Yea lets remove\n. What issues did it cause?\n. Thats a good point, although maybe the first one won't.\n. I'm fine with this as is.\n. This should actually be usa-search-bar because the bar in this case is a sub element of the search. Is that the correct thinking?\n. We could change this so its all text elements, <a>, <p>, <h1>, etc. Or we could change the code so you add the class to the actual element you want to modify rather then the parent (which would be more verbose but safer.\n. Clip is deprecated:\nhttps://developer.mozilla.org/en-US/docs/Web/CSS/clip\nWe should definitely not use it.\n. This have to be alphabetically ordered.\n. I think this should be indendted another step\n. I actually think it's better to not do this and just include the .usa-alert class on each element. I remember a case where I tried to do exactly this for Peace corps, and I had to switch back for some reason (I can't remember the reason right now).\n. Is there a reason why we can't put the usa-sans rule in usa-alert?\nI feel like I see that class everywhere.\n. What if a table has not class (neither bordered or unbordered)? Does it still look OK?\n. Are we going to be able to replace these with generics when we add auto-prefixer? Or are these stuck as browser prefixes?\n. Do you know what browsers this is going to work on?\n. Why are the margin values em but the padding values rem?\n. Why aren't these background values using variables?\n. Are we going to get rid of the rest of these colors once we remove the references in the code?\nIf so, could you add a \"deprecated\" comment?\n. In the design, they all say \"Sign up\", so I purposefully removed them.\n. There's no inverse styles that aren't also outline, so why not have it like this?\n. This is an issue with the design, and I'm waiting to get the new layout design like we had talked about previously.\n. I'm not sure you understand me: theres never a button that's just inverse and not outlined.\n. I think these should be rem, or em units. Is there a specific reason they're px here?\n. What's 13px?\n. I'm not sure this is the best selector to encompass the header. One thing: do you know if this selector will work in other browsers? Besides that, as a developer, I wouldn't ever suspect a role attribute to effect styling. Another thing, this a strong selector (one lvl1 plus one lvl2). Is there a reason we shouldn't just make this a class?\n. Why not just .usa-logo?\n. I think we should use a mixin here for usa-unstyled-list\n. I thought we didn't need fieldsets for a single field? I thought that was even what you told me. Anyway, here is what @nickbristow said: \n\"its basically when you need to group fields with a title. or like, question answer, so question is a legend for a fieldset of radio buttons\"\nHere's what Sasha said:\n\"I am pretty sure as long as the label is associated with the input then no\"\n. Why can't we just add a :visited rule to the selectors above?\n. Why can't it just be .usa-sidenav?\n. This color should be a variable\n. I don't think this needs to be nested in usa-sidenav_list.\n. This is the same selector that this rule is already nested in, right? What is this rule doing?\n. Why is this rule needed? I can't find it being used anywhere.\n. Why does this button have an id?\n. What's .usa-header-logo-title doing? I can't find it being used in the current codebase.\n. I think usa-button-list should use the unstyled-list mixin.\n. So the usa-site-footer is just for the actual styleguide?\nMy one concern here is if users look at the actual markup on the styleguide to learn how to do things and they come across a class like that.\n. Can we make the simple change so this includes *-styleguide in the class name? I'll also merge once conflicts are resolved.\n. Vendor libs should go before our own, so this should be moved to the line before main.js\n. I don't understand the point of having theses functions as instance members on the generateCodeSnippets function if we're not using that as a class. Why wouldn't this just be:\n``` js\nfunction parseCode(previewBox) {\n}\n```\nSame goes for render.\n. This long string is really hard to process. I'd suggest breaking it up onto newlines and using tabs to organize like actual html. Like so:\n``` js\nvar sampleCodeBox = $(''+\n  '' +\n    '' +\n      '<button ...etc\n```\nIt's not perfect, but it'll improve the readability a little.\n. Declaring a function within generateCodeSnippets would contain it as well, so I'm still confused it's being declared on this rather the just being declared. Maybe to make unit testing easier? Maybe just add a TODO comment to rethink the structure of it.\n. I think my comment was lost, but could you clean up this huge string by breaking it up into lines and tabs?\n. What about span, or form elements?\n. Why is this not a variable?\n. Mobile sometimes has issues with fixed positioning. Have you tested on mobile?\n. Are we animating scrolling?\n. Why would this rule be here? Isn't it in the pattern library?\n. Is this a pattern library style? Why are these sizes being modified? Shouldn't we be showing the users the exact font sizes they should be getting when they use the library?\n. Yea, if it's being done here right? Is there a reason this should only be in the styleguide?\n. Yea that could get complicated for the user to set up but I understand what you're doing now.\n. Why wouldn't display and lead be in the pattern library?\n. Shouldn't this use <strong> rather the <b>.\n\"According to the HTML 5 specification, the  tag should be used as a LAST resort when no other tag is more appropriate.\" - w3c\n. These are using the old documentation scheme, and I had already updated these.\nAm I correctly looking at the code where you fixed the merge conflicts?\n. Why was adding this div done here? Accessibility? I remember Bristow saying this was fine as is.\n. Why is this legend needed?\n. I just realized, why is this being included here in the head rather then with the rest of the scripts in the scripts file? The scripts should also be included at the bottom, not the head.\n. Why was this added? I can't find the class being used in this PR.\n. Why is this measurement in em while everything else is in rem? Shouldn't all of them be rem?\n. I don't think we should be using random breakpoints. This is hard to maintain, and right now, impossible to change via variables.\nSometimes I've found things that are not \"perfect\" at a certain screen size. Sometimes this is better then having code that's hard to maintain.\n. Why aren't this @include media() rules?\n. When is a legend not under a fieldset? Or is it that a legend is always supposed to be before a fieldset? Either way, it seems weird to have different rules for when a legend is in a fieldset vs when it's not.\n. Is this needed anymore?\n. I feel like this is a particularly bad rule to put in styleguide.scss. I get how we're out of time so can you put a comment here saying to investigate further? Like this;\n// TODO investigate why this is required in styleguide.scss.\n. I'd prefer adding it to the wrapper div rather then complicate the code with another div which we were successfully able to remove. But I'll defer to your best judgment.\n. If you're dealing with scripts in a different PR, this can wait.\n. Is this just being used for the styleguide? Are we somehow instructing our users that they need this class to get the library working?\n. You should use whatever existing breakpoint that works the best. We might have to concede that it won't be perfect right now.\n. No I'm saying to add a note to see why it wouldn't be in the main pattern library css.\n. I was saying if the components required it, then we would need to tell them.\n. This shouldn't be in the head, it should be before the closing body tag.\nProbably in scripts.\n. This shouldn't be in the head, it should be before the closing body tag.\n. I thought we weren't really going to use end-row anymore because it doesn't work for mobile?\n. What would this be? Like the scss or something?\n. This link will currently take the user to the top of the page. Is that desired?\n. Don't we already have classes to do stuff like this? Like the grid system or the usa-content?\n. Whats \"cta\"?\nThis seems like it's applied only to divs. Why does it need a display block?\nIt seems a little strange to have a class just for clearing things. \n. Should we not use usa-end-row anymore because it might break different breakpoints?\nAlthough technically, I think a one-half will be fine, it might not be good practice to have this in our code.\n. Yea that's right.\n. I remember seeing this already in styleguide.scss. Is this duplicated? Same with .skipnav and a few others.\n. Why do we have a random max-width here? Why aren't we conforming to our grid system or using a variable for max-width?\n. I still find it very problematic that we can't even build our own site with our own pattern library. I personally think the design should change so this can happen.\n. Should this be using @include media?\n. I don't think you're supposed to wrap block level elements in inline elements. So it should always be <h3><a> rather the <a><h3>.\n. This rule seems kinda strange. Why not just remove margin-top on all h tags? What clear does this seem to be overriding?\n. What is this going to do?\n. We already have a lead text class, why is this different?\n. What does standlast mean?\n. So is this a link that goes off the site? Why would a link like that need a larger bottom margin?\n. What about using usa-grid? Shouldn't that clear content above?\n. Just as a note: this sounds like a thing we'd want in the main library.\n. Is this a non-standard font size? Like, is there an existing h that matches with this size?\nWe have very specific typography with various sizes to use, why are we overriding something here to something that isn't standard?\n. I feel like I've seen something like this before. Maybe .button_wrapper? Can that be re-used rather the creating another class thats seems similar?\nAlso, code that would help wrap buttons to be side by side seems useful for the library.\n. Why are we overriding existing .usa-text-small? I'd consider this to be something to question with design. We should be using our existing styles.\n. I see what's going on here, a problem with our grid or in general, how the neat grid works.\nTechnically if you have two one halfs next to each other, the second one should not have the margin right, meaning it won't break to the next line. This isn't happening here because you have <div class=\"usa-intro\"> first under usa-grid. This causes the first one-half to have the margin-right 0. \nOne way to fix would be to move usa-intro out of this usa-grid div and into it's own above. Although I'm curious to hear your general thoughts on this.\nWe do have to be careful about usa-end-row because if we want to do interesting things with the grid at various breakpoints, it could break that functionality because it's forcing where the grid breaks.\n. Is the for needed at all for accessibility reasons?\n. Is this supposed to be here?\n. You don't have to make this a comment, you can just remove it.\n. So to me, this seems more like \"link-example\" then \"external\". I think when I saw external, I thought you were styling all external links on the site, which is why I was confused. Does \"link-example\" make sense to you?\n. Considering it's used elsewhere, I think the name is OK. Although my rule for naming: if more then two people are confused by the name, I usually change it.\n. Ok I see it's called usa-font-lead in the library, is that correct? Should this also be called usa-font-lead or is there another usa-lead that I'm missing?\nI guess what I'm trying to get at is removing duplicated classes that seem like they could be the same.\n. I would use a different abstraction to get this interface working. Like a class you apply to these h3 and p tags to do this rather then just applying this to the h3 and ps themselves. Then you could use it for different things from h3 and p. Or maybe even a class that gets applied to the same element that usa-width-one-half is on.\n. So I guess what I'm thinking is that I'd expect a dark background to only have to change the background color and the text to a white (which you do have here). Why would a dark background have to modify positioning? \nAren't we also using like a \"section\" class? It would make more sense to me if that changed positioning rather then something thats more cosmetic, like a dark background thing.\n. So what about this case:\nIn a year from now everybody gets a super large monitor and we decide to expand the whole pattern library and add another breakpoint for mega size screen. At this mega breakpoint we change 1/2 so it's actually 1/4 so we can get 4 by side. This won't work with a usa-end-row because we're forcing it to always break at 2 by 2. Theres also current cases where using an end row with 1/4 widths will break on smaller breakpoints, and that's happening in our current code.\nSo what I don't want to see: 1. a user looks at our code, see's where using this method for a grid with 1/2 items and then use the same method for a grid with 1/3 items and have it break on them. 2. creating code that can't adapt to changes in the future.\nIf this is something we care a lot about, I don't even think we should be using the neat grid system, because as I've understood it, this has always been a requirement in it (although I may be wrong).\n. Whats different about this section which would break it?\n. Yea I think the icon is perfect, I think the styles for the font size and the margin bottom should be in a separate class like 'link-example'. \nI also just realized something: why don't we just wrap this link in an h tag of appropriate size? I think that would fix what I was talking about.\n. I would rarely suggest using js for styling like that. I still don't understand why grids wouldn't be used here as I think they're consistent with the framework and don't require extra CSS, with somewhat random values, to be written. But if you're positive about this, I'll trust your judgement.\n. Can you indent this so its lined up with the  above?\n. Should this be an h4 or an h3? Right now you have <h4> as the opening tag and </h3> as the closing tag.\n. Same as above but this time h5 and h4.\nSo this should either be <h5>When to use</h5> or <h4>When to use</h4> depending on what's needed for the design.\n. I think you can use .on now rather then .delegate. I just read this on jquery's site:\nAs of jQuery 1.7, .delegate() has been superseded by the .on() method.\nhttp://api.jquery.com/delegate/\n. I'm not sure I understand why this is needed. Could you explain? Maybe withe a comment as well.\n. If you're doing this twice, would it make sense to just pass anchor into calculateAnchorPosition?\n. Is there a reason for this to be in head at all?\n. Does a skipnav link really need a transition?\n. The only comment I'll make about this is that these would be better in data- attributes which get parsed more globally with jquery. But This is fine if we want to keep things moving.\n. Is there a way to store inset 0 0 0 2px in a variable to use in all the places rather the repeating it?\n. Top of buttons file\n. 13 should probably be a constant declared at the top of the function or file so people know what it is:\nvar ENTER = 13;\n. This seems potentially problematic if the focus happens after an animation is done. If a user is using the keyboard to navigation because they're not browsing the site visually, then this pause before the focus could be confusing. Although technically, I've never heard any official guidance on this. What do you think?\n. Can we use usa-content-list instead? It will be a less global rule and that seems like a good use case.\n. I think this would require more research. We have an accessibility expert on staff, I'll try and ask him today\n. I think theres a problem in the sass which is causing an error here.\n. I can't find the matching brace for this. It's either missing the closing brace or the alignment is off. I'm not sure which one it is, because I'm not totally sure when it should be closed.\n. First off, does this work with just the attribute selector?\n[name=\"password\", [name=\"confirmPassword\"]\nIf it doesn't work, then having the tag in there as well is fine, but was hoping we could move to having just attribute selectors across the site to fix specificity problems.\nAlso, does adding bottom margin to these two password inputs work in different configurations of form elements? Such as when you could have password inputs before another form element?\nGenerally, I think it would be more successful if all these inputs used top margins and adjacent sibling selector, so we could do something more like this:\nform > * + *\nbut we're a while away from that so if the two things I bring up are looked at, I'm OK with this change in the mean time.\n. Why is an rem unit being used here and an em down there? Should the ul margin top be changed based on a parent font size?\n. Does it need to appear to screen readers regardless of size? I'm actually not sure what a mobile screen reader would publish its size as.\n. Why are these em rather then rem?\n. There's a mix of em vs rem units in this file and I'm not sure if its' intentional.\n. @maya it probably doesn't need to be nested.\n. This is hard to see in gh, but shouldn't the lines below be indented in one more?\n. @jeremiak did we completely figure out npm support? Like could I currently do npm install and @import 'wds' and it'll work?\n. yea I guess its two different use cases.\nimport \"wds\"; would import the scss file which you then compile. There's also the use case of like require('wds') using webpack, which could be the CSS. We'd potentially have a different npm module for the Sass files, I've seen this done before. \nFor when we're publishing this to npm, I don't think you should have to build it to get the CSS, which is what federalist is doing now. You should npm install it, and the CSS should be compiled somehwere, and then I think there's even something like a \"main-css\" directive you can put in package.json to point to it.\nAlso, what is the plan to publish this on npm?\n. Isn't it just supposed to be npm run build-sass?\n. Doesn't pre-publish mean that the task will be run before they even install it. Why would the user need to know this information?\n. Why would the user ever need to know this?\n. I like this idea of saying this. It can be scary to get warnings, although they are common in node installs.\n. I think these instructions should be moved to a larger different section in the docs thats dedicated to developing the standards. This ensures theres no confusion about which install method to use when. If it's too much to restructure right now I'm fine with this for now.\n. Just thinking into the future:\neventually we'll want to move all JS in USWDS into one output file. If we suggest this now, how do we ensure people that followed these instructions don't include jquery twice (once with this script, and another time within the uswds.js file)?\n. Doesn't this file include 8 fonts? When we discussed fonts originally we decided to limit the default to 3 or 4 or 5 (can't actually remember what we agreed on) to limit performance problems. Should we not be recommending people to include all 8 fonts if they don't need them.\nOn my cloud.gov project where I imported USWDS, I ended up creating my own fonts file with just 3 @font-face links included. \n. Our styleguide technically states that selectors less the 5 characters can be on one line, I'm not sure if we can configure the linter for this though.\n. Done, https://github.com/18F/frontend/pull/90. We should also think about changing the convention in the styleguide.\n. @nickjs lets keep it for now, I'd prefer to have all selectors on new lines then none.\n. I like that\n. We could also alias important commands like build to npm scripts. This would also mean we could keep gulp-cli and a dev dependency and they wouldn't have to install.\n. What JS styleguide are we using btw.\nI have to be honest, I hate having this amount of space inbetween ()\n. Doesn't this need to be dist/js/uswds.js?\n. Is there a reason this is images rather the img like above? A ruby reason? Just checking\n. I think simplifying might help, something like \"Local Development with Jekyll Documentation Website\". I also question whether \"Documentation Website\" is the right term. Would contributors know what this is? Maybe we could show the link like \"Documentation Website (playbook.cio.gov/designstandards)\n. Should we also tell them about the minified version @maya @rogeruiz ?\n. Nvm, I don't think we added the minified version into the build process yet.\n. Because these instructions are out of date, I think it's best to remove this and just have the last bullet point, \"review this README for installation instructions...\"\n. I think this line can be removed because it's in the Download section below.\n. I'm using these instructions and I'm not seeing my updated code on the local website. Is there something else that might have to be done here?\n. Why do we need to ignore the exact file names? This seems very hard to maintain when we add new image files.\n. If this is the case, where does style specific to the docs site go? Like styleguide.scss or homepage.scss?\n. I'm a little confused how if can find \"uswds\" here. Isn't the file technically called \"all.scss\"? Where does this actually import from?\n. So @rogeruiz yesterday explicitly wanted to have the version in the name. Is there a reason why this changed?\n. Another comment here and for :50.\nAbove we're telling them their folder structure would be like uswds-0.9.0/css/etc. Should we include that folder structure here too?\n. :+1: \n. So should this line be more like:\n/path/to/your/assets/lib/uswds-0.9.0/cssuswds.css\n. I'd agree with you, this will be fine for this release\n. I think it should be /path/to/your/assets/css/lib/uswds-0.9.0/uswds.min.css.\n. /path/to/your/assets/js/lib/uswds-0.9.0/uswds.min.js\n. Should we now call this \"Standards website\"\n. Won't this fail if you run this without Ruby and scss-lint installed, even though the pre-publish hook says no-test? I can test this if needed.\n. If that's what we're expecting, then I agree with you, we should keep the path as this.\n. I personally think that we shouldn't require ruby as a dependency to work on the project and we should just put gulp no-test build here, but am fine with this for now.\n. Where does this end up getting used?\n. What's the reason for not doing $('.usa-accordion')?\n. Ah I remember now. \nI'm of the opinion that $('.usa-accordion,.usa-accordion-bordered') is a better solution. This is because with our CSS methodology, we could have classes like .usa-accordion-child that wouldn't represent the whole accordion, but an element of the accordion.\nI don't see us creating that many different accordion types, and I think I'd be expected that if you did, you'd expect to have to add a selector for a new accordion type.\n. Although it's already incorrect, could you change this so that every property is in alphabetical order? https://pages.18f.gov/frontend/css-coding-styleguide/format/\n. Would name in these three places actually be called something like \"pies[]\" as thats technically what this collection is?\n. Why are these changes in here?\n. What if somebody changes their base font sizes, then wouldn't this no longer be aligned? Could this be written so it accounts for that?\n. So unfortunately the files in docs/ are not actually the source files and shouldn't be hand edited. The files in src are where the scss files should be edited which will then be copied into docs.\nI'm sorry for this confusion, it was done to limit complications with the Jekyll docs site and we're actually working on fixing it right now. In the meantime, it would help us if you could move your code changes in this file to src/stylesheets/components/_accordions.scss and then run the build process with npm run build or the more specific gulp tasks.\nLet me know if you'd like some help with this. You've been a great contributor so I'd be happy to get these files into the correct form.\n. Sure let's work through it.\nWhat happens when you run gulp website:serve? Is there an error you could show me?\n. Cool, so instead of npm update you should run npm install. See what happens after that.\n. @joshbruce first off, did that solution work for you at all?\nBased on the documentation on npm, and what I've read, there doesn't seem to be a large difference(http://stackoverflow.com/questions/12478679/npm-install-vs-update-whats-the-difference), I gave you that command just to ensure we're both doing the same thing to make debugging a little easier.\n. Ah @joshbruce I figured it out:\nIn package.json we have a prepublish script that executes certain commands after npm install (which doesn't make much sense). I guess those have to be run before website:serve.\nI'll keep this in mind when working on improving the dev workflow this week.\n. An interesting post-MVP idea to explore here: have this file be a standard HTML file or handlebars file. This would bring us closer to having a components HTML separated with the component, in the same way fractal does.\n. It should technically be anything.\n. When this lint tasks finds errors, will it point to this tmpdocs directory as the path of the files with problems?\n. So is this being done because scss-lint needs files prefixed with _?\n. Awesome, I think that's perfect then\n. Jekyll sucks\n. Is there a reason we need the accordion to have it's own class for display none, or should this be put in a general utility?\n. Just realized something about this:\nThe code compiled from start.js is distributed as part of the WDS separate from the docs site, but this code is assuming you're on the docs site because it's testing for URLs of the docs site. So if a user had the standards on their own site, this if statement wouldn't be called correctly because they won't have a form-controls page (it's really confusing knowing how the WDS is separate from the docs site)\nWhat is this check attempting to protect from? Would it make sense to uses classes rather then URL's to test for existence? \n. I think when I said a global utility, I mean a class, such as .hidden. Sorry for the confusion. Although, what might be the benefits of using a mixin like this? It might be a better solution.\n. Thanks for the explanation @joshbruce , I think you've convinced me that the mixin is a good way to go. I'd agree with @maya that we should come up with a better name for it though.\n. Does this fail the build if screener detects visual changes?\n. Is the build kicked off by somebody going into Travis and restarting it?\nI think this looks great btw. I'll start a discussion with team to see if we can merge now.\n. Why does this fix the issue (the th should already be nested in a a tr) and why was the rule tr before?\n. Oh wait, that makes sense you would because it might not be a code change. K well we still have time to figure out what the full workflow would be.\n. I thought most of our svg images had png fallbacks. Why is that not the case here?\n. Can you alphabetize these?\n. Why not just do this now?\n. Yea that sounds good.\n. porject -> project\n. I'd almost want to add an alternative link for nvm as it fixes the sudo problem you have below. Thoughts?\n. A mistake\n. Sure I'll write up an idea of what it would be:\n\"\nIf you do not see a version number, go to the Node.js download page to install Node.js or install using the Node Version Manager (nvm)\n\"\n. Now that I see that, I'm struggling with how to word it. The basis of what I want to say is:\nWe recommend you use the node version manager to install Node because it ensures you won't have to run sudo for install packages and allows you to easily switch between different node versions. You can also install directly from the Node website if nvm doesn't work for you.\n. What are these comments? Are they a special syntax for documentation or something?\n. What's the reason for this? I haven't seen this pattern before.\n. Why would this be em rather then rem?\n. Why would this be em rather then rem?\n. So this rule will be expanded to:\nmargin-bottom: 0;\nmargin-top: 0;\nI definitely don't think it's a good idea to mess with the webkit specific margin before rules. Those should be overridden with regular margin rules.\n. Agreed\n. I'm guessing I shouldn't merge these changes right?\n. Whats site-header for?\n. Whats the demo footer? How does it relate to headers? Why doesn't it need all these separate CSS rules?\n. What's the difference between navbar and nav? Is there a better name for navbar, I don't really understand it in this context.\n. Is it OK semantically to have an <li> as not the child of a <ul>?\n. Could the usa-grid-full be mixed in to usa-megamenu-col to reduce one extra div of structure?\n. Is it OK that this is jquery code? Whats the plan to merge it in with the jquery removal?\n. These additions might be a merge conflict problem as this code should be in the mixins in the above file.\nDid you want to make any changes to the accordion style? You might want to get rid of these changes and make your changes manually if it's hard to figure out the conflicts. I may have gotten something wrong when I was working on it with you.\n. What's the need for this new addition?\n. Are we setting z-indexes in variables yet? How are we keeping track that 1 makes sense here?\n. I don't quite understand what content em would be representing here. Why does a tag for emphasis have so many additoinal rules in the header?\n. What do you think about putting all the nav related code in a separate components/nav.scss file?\n. Are we using <br> tags for spacing? Or does this somehow cancel out moving something to the next line?\n. Is there a reason this shouldn't go in buttons.scss?\n. These have to be in alphabetical order.\n. Same comment about z-indexes, how are we tracking them? This seems like it's a magic number.\n. Could you explain the reason for these rules on these specific nav links? A comment might be good here.\n. I'm a little hesitant to use includes like this. What benefit does the include provide that pure css doesn't have?\n. Does this rule have other browser equivalents?  What does it do?\n. Why does just this button need to have these browser specific rules?\n. Man of these rules seem like repeats from accordion. Do you think we should try and put some of it in a shared place to avoid repetition? Or is the code not similar enough?\n. Should these rules definitely apply to all a tags within secondary links?\n. Is this repeat of the search bar component? Can we share reused code?\n. Do you think we should add a system now? I think I remember seeing a couple of z-index values in the header file.\nWe could also just do variables in this header file to start, which would potentially make it easier to move them to site wide in another refactor.\n. Some ideas on how to create variable names:\n- Based on the actual components: https://css-tricks.com/handling-z-index/\n- Based on where in the stacking order; background, foreground, above ground, etc.\n. I think we should because as a WDS developer, I still didn't know about it.\n. I find that confusing. As a developer, I don't think I'd understand that the em is supposed to be a logo.\n. I think it needs to be split up in some way. This file is pretty massive right now, and I'm finding it pretty hard to understand. I think some sort of separation could help that.\n. Another option if it's a repeated matter: make a mixin for it that's well named and use that.\n. Have we tested this in IE yet? Flexbox can be somewhat inconsistent in IE for version 10, 11.\n. So this should actually go in core/_defaults.scss and should be $font-path: '../fonts' !default;\n. You could keep what you have here in variables.scss although I think we'll get rid of that file at some point.\n. Was this addressed @maya ?\n. I think we should talk about this in person/virtually as there's a lot of discussion going on here. I generally think this is not just about user need of using the nav but about code organization and modularization.\n. The space after ! feels a little weird.\n. Should this be click and touch?\n. Should this be a generic function rather then one just in this file?\n. I think this svg file can be optimized/minimized. I did a quick google search and found this: http://petercollingridge.appspot.com/svg-optimiser, but maybe there's something better.\n. Can this be removed?\n. This value is technically more then 5px, can it be an rem unit?\n. Does this require an e.preventDefault()?\n. Is there a reason you have to disable trailing whitespace?\n. Whats the reason for this change?. Oh I see. Could there be any [type=\"submit\"] code around that relies on this?. I'm also fine with marking it as a breaking change, either is fine.. Why are we disabling this rule here? Couldn't we just add a newline on line 1?. This rule is not re-enabled.\nBut I'd also potentially prefer to just move .usa-current outside of a because I'm not sure the extra specificity is needed?. Actually, it might be required because things like a:visited might override it.. Is this rule ever re-enabled? Or does it need to be?. Yea maybe in another PR we should configure that rule, not sure it makes sense.. Do we use git tags for this at all? So we publish a git tag (which shows up on the github releases page) and then publish to npm?. We had good success using a npm module called check-publish for this, as it will check if the current package.json version is already on npm, and only attempt to publish if it's not.\nSee cg-style build. Yea great idea @adborden . I'm a little confused why this is needed.. I would kinda expect the nav component to include a nav element, but it also sounds like it would be hard to split them up with it? What were your thoughts on this?. Just as a secondary note, not relevant to this PR, the usa-menu-btn class seems a little out of place. It doesn't follow the usual naming convention for buttons of being button rather then shortened btn and it's confusing where it's supposed to be as a component ('menu' or 'button').. Is there reason for logo to be split into own component, or is that not necessary?. This sounds like it fills a similar space as usa-menu-btn? Or maybe not at all, but unsure where this fits in.. So another note that best not addressed now:\nIf you need to use the mega menu here, you have to add both usa-megamenu and usa-grid-full. I wonder if we could use sass to mixin usa-grid-full into the megamenu class so only that's needed. Might improve the dev experience to only require one extra class.. Whats the difference between dist and build?. Are we OK using arrow functions for our browser compatibility?. There's also this: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\nBut I assume it's not compatible enough with other browsers?. Should this code be taken out?. This could probably be done a little cleaner with a library like sinon.js, where you can use spys. But it's fine for now.. Whats jq?. I'd keep the conditional for the future, it seems like it would make sense for me that it would come up.. I thought based on the conversation, @maya was saying the nav wasn't meant to be vertically centered liked that, so I actually purposely didn't do it. . When I see htmlEl, I don't really differentiate it from el. Should it be docEl or something?. Would it make sense to have win and htmlEl be optional, defaulting to window and documentElement if they don't exist?. Ha oh duh, I don't know why I didn't read it as that.. Rather then doing this in a finally, you can use the sinon sandbox and restore in in an afterEach. Then you wouldn't need both of these. Or is there something else about the try that's beneficial?. Shouldn't we have a util for this?. Or I guess we're not, seems pretty simple so maybe it's fine. Where is run defined?. Should this be done.fail like Jasmine? Or will Mocha be smart enough to know that this failed and exit with 1 rather then 0?. Yea I found this early too, glad it was caught by axe. Ha I was thinking of exactly this too.. Why is this called goldenData?. I think the most successful thing would be to take a screenshot of each component in isolation. That would mean if you change the height of something at the top of the page, it wouldn't invalidate everything below it. That being said, I think that's out of scope for this work.. I agree, would definitely be good to do that.. I like this naming system.. This looks like a breaking change right? Because if somebody has a button with outline-inverse, then the button won't be targeted for those rules anymore? Did you have thoughts on whether it's OK to break this?\nIf we feel that it's necessary, we can keep the code the way you have it, and add a \"Deprecated\" section at the bottom of the file that has the rules to ensure nothing will break. Then we can remove the deprecated section once we upgrade to 2.0?. Based on my understanding of the WDS CSS, I'd expect there not to be another usa-button-secondary-disabled class, but that if you add the usa-button-disabled to a button with usa-button-secondary it would correctly apply the right disabled styles. I definitely think .usa-button-secondary:disabled makes sense though. Same as 173. I think we're supposed to use {%- here to remove the whitespace? I might have that wrong though, I haven't done it yet on my PR.. Does this whole promise block need a catch?. Can this just return a Promise.resolve?. Should we add npm script commands for these just got consistent. That makes sense.. What if we just did a usa-focus class that could work for focus state on any element? Or should there but a button-focus class specifically?. Does it make sense to use the $spacing-medium variable for these values?. I realized, I set it to value=\"\" in the other file, but this already existed as value. So I think this one is correct and I have to change the other one.. I kinda think this is too long of a class name. That being said, I think fixing would be better done in a refactor, so ignore unless you already have a better idea.. On which one of the nav pages are you seeing the button not appearing? I had this problem locally at first, and I ended up having to run npm run build every time I changed an image, otherwise they wouldn't be copied over to the dist folders correctly. I'm seeing this on the Federalist for the basic nav:\n\n. ",
    "dhcole": "preamble\n\nan introductory, succinct statement of the principles at work\n. \n",
    "ericronne": "Murally may be about as good a tool for that as any. What's your vision for\nthis piece?\nOn Fri, Jun 12, 2015 at 8:38 AM, Carolyn Dew notifications@github.com\nwrote:\n\nAs long as we're in the expansive/generating lots of ideas part of the\nprocess, I think it would be cool to create a mindmap of ideas with\nbranches connecting to different ideas. @ericronne\nhttps://github.com/ericronne, do you know if mural.ly can handle this?\nOr do you know of another collaborative program that might?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/18F/govt-wide-patternlibrary/issues/10#issuecomment-111495059\n.\n. Yep. Provided you begin with a sufficiently compact \"core,\" murally should\nwork well for such an application. If it gets too large, you can select\neverything and resize. Perhaps use the title tool for labeling, and connect\ntitles with lines (drag them over titles, notes or images in order to make\nthem \"stick\"). For an organic feel, you could even scan a rough base and\ndrop it in as a background. :) That help?\n\nOn Fri, Jun 12, 2015 at 10:59 AM, Carolyn Dew notifications@github.com\nwrote:\n\nThis is a crude example, but something like this:\nhttp://tomreillya2courseworkblog.blogspot.com/2011/10/finding-my-brand-name.html\nYou start with the core concept in the center, then start branching off\ndifferent idea threads. The goals is to get a collection of words and\nconcepts related to the product, which can then serve as inspiration for\nclever name ideas. E.g. In the center we could put \"US Pattern Library\" (or\nwhatever working title we're going with). One person might be inspired from\nthe 'pattern' concept and branch off with 'flags', then different terms\nrelated to the US flag (Betsy Ross, Stars and Stripes, etc).\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/18F/govt-wide-patternlibrary/issues/10#issuecomment-111535352\n.\n. usa-pattern-library strikes me as a good patriotic option :)\n\ngov-pattern-library may offer a couple advantages, tho ...\n- connotes \".gov\"\n- the lack of specificity may suggest this work as a standard for other govs (state, local, international) to imitate\n. ",
    "cfarm": "@mollieru how do we get on that listserv?\n. ",
    "jonraedeke": "Another reason for a short fun name would be for package managers like npm or bower. @contolini brought up the issue of packaging/delivery of the library in #48.\n\"Columns\" is cool name with a double meaning, but is not unique enough for a namespace. \"USUI\" could work as an abbrev. for a long official name like \"US Government UI Pattern Library\"\n. I really like that syntax.\n. I'd love to help!\n. @el-mapache Our scenario is very similar to @subtera745. We are building Drupal 8 themes for government sites and having to create Twig component template markup from scratch in most cases even though the Nunjucks templates are similar in syntax.\nSome of that customization stems from our desire to use KSS node to build the living style guide. Some of it is due to how Drupal works. For example, the way the menu is built needs to be done with a Twig macro. Some is simply due to the needs of the site and stake holders.\nSo I'm not sure this solution would eliminate the need for maintaining custom templates, but it would really speed up the process and make it much easier to update.\nI also think this becomes less of an issue with the USWDS 2.0 since that provides more generic utility classes to build more custom components like Bootstrap. The templates become less important than the style building blocks IMO.. ",
    "leahbannon": "Example of the way agencies are currently doing this? Or examples of doing it well? \nAlso meant to cc @noahmanger @jenniferthibault\n. So here's a survey of some of the ways the most popular government websites display dates and calendars and oh my holy face palm. I learned that you can type any government website into google + the word \"calendar\" and get a lot of results. And they are not pretty. Now I need to go apologize to anyone who automatically follows my boards on Pinterest. Enjoy: \nhttps://www.pinterest.com/leahbannon/calendars-for-gov-good-bad-ugly/\n. ",
    "mebates": "Here's an activity log we're working on at CFPB. For events in the past: \nhttp://beta.consumerfinance.gov/activity-log/\n. Our discussion on expandable styles has been extensive: https://github.com/cfpb/design-manual/issues/143\nOne choice we made is to include the words 'Show/Hide' when the page size is big enough, to improve accessibility. \n. What type size are you using for the text input labels and the text the user fills in? Is it 16 px, aka H4?\nI would make the X and check icons a bit bigger. \n. We often use sans serif for body copy, especially for subheader-type content. I would also suggest more space between items in the bulleted list! (Not sure if this is the type of feedback you're looking for right now.)\n. We have been debating the 75 character line length standard at CFPB as well. @Scotchester has set type in Capital Framework to a max-width of 35em, though it could be closer to 36 or 37 em to match the 75 character standard. We haven't had a thorough debate on how that relates to the grid and if that's the best choice (but we intend to!).\n. Did this make it into the standards?\n. @angel This is the look and feel of the pattern library itself, right? Not the standards we're hoping other sites will use. (I remember @mollieru talking about providing a few options for that. Though it would make sense if this look/feel were one option).  If so, I prefer the modern american look. Just be super-aware of 508 compliant type with thin fonts and light backgrounds. I would look at the 508 type/color field relationships before committing to colors. \n. Are labels the same thing as tags? \n. A few other notes from my colleague @caheberer, looking specifically at the Data.gov example:\n- What are the rules around using all-caps in the typography? In ours, the all caps options are defined as part of the hierarchy. On Data.gov, the header/nav hierarchy is hard to follow. A suggestion would be to limit the use of all caps to one type style.\n- Lead Paragraph doesn\u2019t feel different enough from h2. Maybe you could try a few more examples to make sure these two are different enough to lend them as separate styles or explore the relationship between Lead Paragraph and it\u2019s proximity to other type styles.\n. Also looking for some help on the fixed gutter width! More detail in the grid section would be great. CFPB's is a bit more clear: https://cfpb.github.io/design-manual/ui-toolkit/grid-and-layout.html\n. We need \"Are you sure?\" modals as well for certify.SBA.gov. Right now we're using the default javascript alert box.\n. I'm still in need of pagination! Regardless of search ... \n. +1 for table sorting standards. \n. Awesome, thanks @maya ! :tada: \n. Hey @ericadeahl this is great to see - I have been working on a top navigation on my project for a while and the team is about to implement it next week. What's the timeline on this component?\n. Will you create designs for a page with a header navigation AND a left navigation?\n. For context, our nav on this SBA project looks like this:\n\nLet us know if you need more details! \n. This looks like it might relate to issue #1312 \n. ",
    "noahmanger": "Love that Activity Log! I could definitely see a similar pattern on FEC.gov\n. I've used Chosen, and while I like the interaction model, I had a couple concerns (and so actually removed it from the FEC project):\n- 1. It didn't seem to work with keyboard navigation, so not really accessible\n- 2. It was really cludgy to override the CSS and style it in a way that blended in with the site style\n. Curious what others think on this, but my hunch is that it's important for :focus states of buttons to be distinct from :hover, or at least be very visually obvious. If you're tabbing through a page and the only indication that a button is focused is a slight darkening, it can be hard to tell. I find outlines more helpful, if a bit unsightly. (I'm sure there's more conclusive research on this)\n. +1 to making the icons bigger, but I find the \"x\" icon on error confusing. Often times x's next to inputs can be used to clear the input, and that's how I saw it at first. Maybe a \"!\" would be better?\n. @carodew I haven't tested it myself, no. But then again, I haven't needed to. \n. Don't mind me...just snoopin around the repo, but curious: were you going to do modify the typography at different screen sizes? IMO this is super important, so you don't have enormous headlines with terrible line breaks. \n. FWIW I came across this a while back about responsive typography: http://www.smashingmagazine.com/2014/09/29/balancing-line-length-font-size-responsive-web-design/\n. We've been working on date inputs on FEC and I came across this really helpful article from GDS: https://www.gov.uk/service-manual/user-centred-design/resources/patterns/dates.html\nThe main thing is that date pickers aren't always the most usable component, and it really depends on the type of date you're asking for. It might make sense to have a couple different options of date inputs with recommendations for when to use which. \nI don't have the answers, but I found that piece helpful so wanted to share for further discussion.\n. ",
    "emilyville": "Here's an example from the existing application that is for clinicians to enter/edit/view data about patients: \n\nAnd our (very, very stock bootstrap) replacement of it, or a screen like it. \nhttps://whispering-dusk-4439.herokuapp.com/\n\n. And another, that is public facing for people (veterans) to create a resume\nhttp://department-of-veterans-affairs.github.io/employment-center/create.html\n\n\n. Thanks @mollieru and @vz3! \nI think it is worth creating an emphasis on elegant defaults to put suggestions and help text (i.e. placeholder text, and content that would go in something like tooltips) inline, That way it's easy to avoid hovers and tooltips since they often cause issues later with accessibility across people, browsers, and devices. \nAlso feels like this type of helper-content often piles up at the end and wasn't afforded by the original layout/design, so maybe a styleguide could assist in preempting this problem! \n. @carodew Here's a URL to see something close\nhttp://department-of-veterans-affairs.github.io/beta-site/\nNote that this is in foundation. I'm building one for the GI Bill tool now that is using web design standards. I'll send that one when it's up somewhere shareable!\ncc/ @rickleegit\n. ",
    "andrewmaier": "Here's a list of basic form elements that I try and style on most projects:\n- input fields\n- textareas\n- radiobuttons\n- select boxes \n- Buttons\n- Custom buttons (primary action, cancel buttons, icon buttons)\n- Fieldsets (which need custom markup because the browser default is laughable)\n- Custom fieldsets (address blocks, phone number blocks, name blocks, date-range blocks)\n- Tooltips / help text\n- Custom widths\n- Success messages\n- Error messages\n- Error styles\n- Disabled styles\n- Hover styles (with accessible fallbacks)\n- Focus styles\nIn general, I also try and progressively enhance forms: starting by building things in a way that uses browser-default styles and doesn't require javascript (no modals).\n. +1 to @noahmanger \n. These look good! Are there any mobile-specific styles?\n. Might be nice to color match the icons to the notification (deep green icon for success, etc.)\n. I'm personally not a huge fan of pixel measurements/requirements as it sets an unrealistic bar. I would prefer something in em's (that is, relative to the font size). This is what I'm doing on the Airforce (SBIR-EZ) project: the screenshot shows three differently sized buttons (the \"remove\" button is being hovered). I made the size of the buttons match the font-size of the text that the button appears next to.\n\nIt's also really important to me that this be implement this in a modular/\"progressively enhanced\" way.  FilamentGroup has a number of plugins that they use to enhance forms and I've reliably customized them on client-facing work. See http://www.filamentgroup.com/code/ (esp. the code links under the \"Accessible form elements\" heading) Whenever possible, we should use HTML5 elements, such as <input type=\"date\">, and leave the default styling. On an iPhone, for example, it presents the user with a really nice, touch friendly input:\n\n. @maya +1 to normal fonts. (See my screenshot above)\n. Normal++\n. @colinpmacarthur @maya In more accessibility-related news: you shouldn't communicate state by color alone. Error/Success states should have icons or some kind of wording to explain that their data is valid.\n. Icon fonts are almost an anti-pattern for most applications: they're difficult to update/maintain, not semantic, and poorly rendered/supported. Instead, I'd recommend we use SVGs with a PNG fallback. There's a really good presentation on the benefits of this approach, here: https://docs.google.com/presentation/d/1CNQLbqC0krocy_fZrM5fZ-YmQ2JgEADRh3qR6RbOOGk/edit#slide=id.p\n\n. @mjovel The script referenced in the presentation I suggested handles this efficiently by only loading the most contemporary assets supported by a user's browsing agent. You can see this programmatically, here:\nhttps://github.com/filamentgroup/grunticon/blob/master/example/output/preview.html\nSpecifically this bit:\ngrunticon([\"icons.data.svg.css\", \"icons.data.png.css\", \"icons.fallback.css\"], grunticon.svgLoadedCallback);\nIt's essentially loading SVGs if they're supported, PNGs if they're not, and then a CSS sprite in the \"worst\" case. That way, users only download the best asset for their browser. More information is here:\nhttps://github.com/filamentgroup/grunticon\nBut I think the presentation is a little bit more accessible to a non-developer audience. :) See also Chris Coyier's posts on SVGs vs. Icon Fonts: https://css-tricks.com/icon-fonts-vs-svg/ and https://css-tricks.com/svg-sprites-use-better-icon-fonts/\nI also enjoyed Ian Feather's post describing why Lonely Planet switched from icon fonts to SVGs http://ianfeather.co.uk/ten-reasons-we-switched-from-an-icon-font-to-svg/\n. @mjovel I 1000% agree with you there. I think, though, that the choice is that we either promulgate sub-par practices\u2014say, icon fonts\u2014or we point the way towards the \"best\" ones as of the time we create the pattern library. \n. @maya Can you shed some light on how you're building this? Are you using input type=\"date\" and then only showing a popup (custom, js-powered) calendar if the user agent doesn't support touch events? I wouldn't recommend that approach because it rests on the assumption that mobile devices are the only devices with touch. (Remember that many Windows laptops support touch.)\nOn the other hand, styling native input type=date appears to be, well, not fun:\nhttp://codepen.io/tgrant54/pen/LFblv\nCurious what we're thinking.\n. I would just use the new (HTML) default. Maybe make the border match the other inputs. If the user's agent doesn't support the new input type, consider using javascript to mask the input so that it guides users to giving us the correct information. http://igorescobar.github.io/jQuery-Mask-Plugin/ (So long as there are instructions and example formats around that have aria-describedby attributes.)\n. @mollieru The new normal is that there's \"no such thing\" as desktop. :-/\nWindows Surface, for example, is making very large touchscreen devices which means we may need to design for fat fingers (a large calendar) in the desktop world. That wouldn't fit on a small display, though, like a touchscreen phone. There, the best design is likely the default one provided by the browser/OS.\nBy not means do I want to sound dictatorial about this. I think it's possible to design good calendars / date pickers, but I also think that the best design is contextual and that's not something we can reasonably anticipate in a pattern library (which should just be smart, considered defaults).\n. I will admit to still using this format for address blocks even after I've seen users struggle with it in usability tests. :-/ \n\n. @carodew The labels below the fields confused them. In general, the users I observed read forms vertically, top to bottom, and struggled if they had to scan up or recall earlier information. Any horizontal movement (columns) was difficult for them.\n. Related: See Dana Chisnell's \"Universal Tenets of North American form fillers,\" that I referenced here: https://www.civicquarterly.com/article/paper-cut-the-bleeding-edge-of-government-forms/\n. I believe this issue may be related to this antialiasing as well:\n\nSeen on the Partnership Principles page. Context matters more than consistency in design. My vote would be to offer guidelines in the spirit of, say, Apple's Human Interface Guidelines. Design guidelines should encourage consistency while also empowering folks to make well informed decisions about the tradeoffs they're making throughout the design process.. Do we need to say \"official\" US government website? Does the US government have unofficial websites?. ",
    "vz3": "@emilyville good stuff! those forms look so much better!\nI love the use of the placeholder text for examples.\nDid you consider any other layouts for the label+field relationship? (Left aligned, top-aligned)\n. ",
    "Scotchester": "In our breakout group, I was the one who mentioned this item. I agree with @cew821 that offering implementation of it is probably outside the scope of the first release, maybe outside the scope forever, but I think that offering some design best practices advice would be a useful thing to do.\n. Also, to call it out explicitly, advice for making charts & graphs accessible would be extremely valuable, too.\n. Related discussion: https://github.com/18F/accessibility/issues/48\n. We've found it very hard to get working sourcemaps on production-level CSS, coming from Less source files. The main reason is that sourcemaps are created by the Less compiler, but we run a couple post-processing steps on the CSS (Autoprefixer and LegaCSSy) after that, which ruins the line numbers in the sourcemap. There may be a way around this, but we have tabled that troubleshooting activity for now, as we've begun to investigate PostCSS/cssnext and are hoping that will eliminate the problem.\n. The WCAG 2.0 contrast guidelines are specific to the readability of text. I don't believe there are any specific guidelines for the contrast of UI elements like focus outlines.\n. Nice. Clean and simple!\nThis is a pretty minor thing, but it might be nice if the icon height matched the height of the heading and first line of description. The icon sorta looks vertically misaligned when there's only a heading and one line of description.\nA couple variations you might consider offering:\n- A version that has only one type of copy in it (i.e., heading or paragraph, but not both).\n- A dismissible alert.\n. I would caution you about the error/success messaging pattern of having the icon appear to the right of the field. We set a similar standard, but in practice found that it was often difficult to pull off \u2013 specifically, any time you want to have two fields sitting next to each other horizontally. Consider: How would this work in your example address field if the user neglected to fill out the required City field?\n\n\n\"I'm starting to wonder if we might want just slightly larger input fields.\"\n\nNah, I don't think so. The USCIS ones feel like they have too much space, to my eyes. The VA ones look about the same as your proposed designs, to me, or even slightly less, and they feel very comfortable to me.\n\nLast, maybe it's just me, but the labels set in bold feel too heavy to me.\n. Yes, I'd like to see them at Normal and see if they work okay that way.\n. I feel like they're friendlier in the normal weight, but that's just my opinion :)\n. @noahmanger Awesome article! Thanks for sharing it!\n. A few scattershot questions/comments:\n- Consider adding patterns for the following base HTML elements that folks should be able to assume have some base styling:\n  - blockquote\n  - dl (definition lists)\n  - h6\n- I suggest increasing the tracking of text set in all caps (i.e., the H5), to improve readability. letter-spacing: 1px ought to be sufficient.\n- Please show all potential link states (normal, visited, hover, focus, active).\n- I recommend avoiding the border-bottom technique for your link underlines. Learn from our mistakes :wink: That issue describes the technique I'm investigating as a replacement, but have not finished implementing yet.\n- Tighten up the list bullets and numbers so they're not hanging a couple pixels into the left margin.\n- What will happen to the numbered list numbers if you hit double digits?\n- Might be worth showing an example of a list that goes another level deep.\n- What's the spacing between two major sections of a page (i.e., the space between an H2 and whatever element precedes it)? We've found we like this to be extra generous (we use 60px), so it's easy to see at a glance how the sections are divided up.\n- I would suggest keeping the H4's bottom margin >= 20px, because to me it's odd if you have multiple paragraphs under a heading and the spacing between the paragraphs is greater than the spacing between the heading and the first of those paragraphs.\n- Please clarify the heading levels in the example on the right, so it's clear what amount of margin each heading level has.\n. Came across this comment in #43:\n\n\"Some large firms and government agencies have security settings that block IE from using webfonts.\" \u2013@arvalarva\n\nLeaving aside personal feelings on the wisdom of such policy, I am reminded that we should be sure to test any pattern involving a webfont with the fallback font, to ensure that the chosen style doesn't appear broken if the webfont is unavailable.\n. Looking good! :)\n. :+1:\n. Looks like this can be closed? I've got a couple thoughts about the content of the content style guide, but those probably belong in a new issue.\n. The Modern American mood board resonates most with me right away, but it's more of an emotional response than a logical one. I do like the mid-century propaganda art source images for the inspiring and empowering board, but am not sure that it translates very well into a contemporary web design language.\n:+1: to @cew821's comment about wanting to see some more examples of services/transactions in these boards.\nRe: Color contrast\nWhile checking individual color pairs is great, I heartily recommend this whole-palette contrast evaluator tool, which lets you input all of the colors in your palette and evaluate each one against all of the others for acceptable contrast. The linked example shows how CFPB's current palette stacks up.\n. CFPB follows AA. I think that's what I'd suggest for this project, too. AAA\nis really hard!\n. @dannychapman I believe that they already are. I suspect pixel values are being used in the copy/diagrams as a convenience. It's easier to get your head around the computed size than to think in (r)ems.\n. Looks good to me! :+1: \n. Also consider sortable tables.\n. :+1: to being able to style a, button, and input elements using these button styles.\n. :+1: but I think that space should be used for reminding the user what their search query was. I assume the query will remain in the search box, but in some of the layouts, the search box is narrow enough that a longer query would get cut off.\n. :+1: This is a must, in my opinion.\n. I agree that they seem misplaced, since they break up the left alignment and interfere with scanning, but I'm not particularly worried about the load time, given that the icon is likely to already be cached by the time a user gets to this page.\nIt does seem redundant with the \"PDF\" label to the right of the title, though.\n. I don't love it to the left of the title. I'd rather be able to scan the titles more easily, but I think that might be largely personal preference. I'd be curious to see user testing on this.\n. Why wouldn't it be realistic?\n. My personal opinion is that I've seen enough research to be sold on that guideline as a \"must\", but I recognize that it does necessitate some concessions when it comes to typical layouts. This is something I'm still trying to get everyone on board with in my own organization.\nThere are several ways that this can be tackled, from a design perspective:\n- The main body paragraph width does not have to fill the entire available width in the layout column. One can simply set a max-width that equals the top end of the ideal range of character count, and let there be some extra margin on the right side.\n  - The extra margin could be balanced between the left and right sides, or be placed entirely on the left, as well. The presence of other design elements to anchor things will somewhat dictate this decision.\n  - The extra margin doesn't have to be wasted space, either. I'm fond of doing things like pulling floated images into margins like that. Also, you can still use the full width of the area when warranted, like when displaying a table of data.\n- The main column width could be completely constrained to the max paragraph width. This might result in a narrower overall page width than people might normally expect, but that's not necessarily a problem, if the design serves the user. One potential drawback to this, though, is that it would restrict the ability to have subgrid layouts within the main content column \u2013 e.g., it might become unrealistic to have three-column sections within the main content column.\n. Related: I came across this page about links' contrast with surrounding text color and colorblindness. It recommends that the default link color have at least a 3:1 contrast ratio with the surrounding text color, and that something in the blue family be used to avoid creating problems for the most common type of colorblindness. Food for thought as decisions about color palette are made.\n. One word of caution about the idea of making text bold on hover: This will shift text position as the text expands on mouseover and then contracts back to what it was on mouseout.\n. To play devil's advocate: heroes aren't necessarily for fanciness like carousels/sliders/rotators. They can serve as simple introductory material for the page. Here are a couple examples from our work:\n- http://www.consumerfinance.gov/you-have-the-right/\n- http://www.consumerfinance.gov/owning-a-home/\nWe've found that we usually want to drop the illustration at mobile sizes, so the hero area doesn't take up nearly the entire screen.\n. :+1: \n. :+1: \n. Could consider recommending that text overlaid on an image always include a drop shadow to help ensure it remains readable.\n. I'd disagree, if that's how they would be spaced on a touch device, and it's probably not worth changing the spacing via media query for different devices.\n. That's an awesome tool!\n. I'm a little concerned with the potential number of fonts that will be required and the performance implications of that.\nIs the intention to use both the sans-serif and serif stacks on the same page/site? If so, we're looking at a webfont load of at least 10, by my count. Or at least 5 for sans and 5 for serif, if you don't combine them.\nSans: 300, 400, 500, 700, 400 italic\nSerif: 300, 400, 700, 800, 800 italic\nPlus, in both cases, any other italics in different weights that you might find necessary in the non-body styles.\nAside from pure performance implications, this article that's been my webfont implementation gospel for a couple years indicates that using more than four in the style-linked technique will break IE7 and IE8, if we still care about those browsers.\n(Separately, the style-linking technique breaks on iPad 1 and BlackBerry devices, so it may not be advisable anyway, in which case it's purely a performance concern.)\n\nAgree with @mebates on wanting to see an example of a wrapping Display heading with a capital on the second line. Disagree that they should all be the same. Line height for body copy is far too large for display copy, and we don't actually keep it consistent, as she states :)\n. Yes to all those thoughts! :+1:\n. You could do that and override the link styling on desktops.\n. If you follow Yuda's suggestion and make it a tel: link, then you have\nthe necessary styling hook to customize the Android formatting.\n. :+1:\n. Links in this sentence need updating.\n. :+1:\n(Especially for 18F's sane capitalization rules ;))\n. ",
    "amycesal": "I'm pulling together a design manual issue for CFPB on this: https://github.com/cfpb/design-manual/issues/230 and I put together a data vis style guide for Sunlight Foundation when I worked there: http://sunlightfoundation.com/blog/2014/03/12/datavizguide/\nThe thing that's nice about the style guide was that it didn't just rely on one platform like tableau or D3, but was broader, then templates for specific programs could be made from it. \nI think as @Scotchester mentioned, accessibility and 508 compliance is a big issue. It looks like census has done some investigation into this: https://fcsm.sites.usa.gov/files/2014/03/AccessibilityCompliance.pdf and there's also color blindness: http://www.dashboardinsight.com/news/news-posts/visualizing-for-the-color-blind.aspx to consider. Also avoiding misleading graphics should be key: https://eagereyes.org/papers/evaluation-of-the-impact-of-visual-embellishments-in-bar-charts\nMy first take on this has just been to label everything, not rely exclusively on color, and make sure things are legible. My next step is to see what we have, and set some standards across the board. If all platforms can't exactly replicate the standard (hello excel) getting templates as close as possible. \nI'd love to talk more about this at a broader level beyond just CFPB too. \n. ",
    "konklone": "FWIW, anyone with DAP access can go and cut up the stats any way they want. :) I didn't use API access -- I just navigated the GA dashboard and clicked the Export to CSV button. If you don't have DAP access yet, you should contact dap@gsa.gov to get it.\n. I also deleted dap.min.js from the repo, on this branch.\n. @maya DAP's preferred integration is through the DAP CDN, so that security updates and other bugfixes can be deployed instantly. Is that an issue for the project?\n. Here's a slightly longer version that acknowledges the security aspect:\n\nThese standards are designed to support both older and newer browsers through progressive enhancement, and officially support Internet Explorer 9 and up. Internet Explorer 8 and below generally see very low usage today, and most agency websites should be able to safely begin support at Internet Explorer 9. Because IE8 is the last version of IE available on Windows XP, beginning support at IE9 also allows an agency to more easily adopt modern security standards.\n. Thank you!\n. :+1:, as long as my reading of their FAQ is correct and there are no extra requirements on websites that use it (like attribution). It looks like the attribution requirements of the OFL are for those distributing derived works, rather than embedding websites.\n\nSo looks all good to me!\n. Even with SRI, I would still recommend that the USWD not promote the use of a third party CDN for distribution of the USWD code, especially for its intended audience (US government websites). SRI removes much of the security risk, but there is still a privacy impact of sharing online citizen/user activity with a third party.\nThe primary reason to use a third-party CDNs is performance, but HTTP/2 means that the performance hit for downloading self-hosted USWD assets is minimal, and much faster than the CDN-hosted version when the user doesn't have it cached already. It would be great if USWD actively recommended that government agencies using their assets self-host them, with an additional suggestion to enable HTTP/2.\n. > My personal view is that insisting everyone self-host imposes a non-trivial\n\nbarrier to usage (frontend package management is still not outstanding, and\nsomething like bootstrap can be used without needing to care about that\nwhole thing), and I think lowering the barrier to adoption is particularly\nimportant given the goal of providing commonality across a large and\ndisparate set of websites.\n\nBut SRI means that code can't be updated in place without making client-side updates to signatures, so the CDN can't update the version on behalf of their customers. So, controlling which version of the code you're running is always up to the site owner, and upgrading always takes manual work on the part of the site owner -- I don't see how this would be any more a barrier than self-hosting.\n. @jpyuda That's a reasonable thing to do, though if you do begin actively working on that, I recommend talking with me and with the Digital Analytics Program. They've moved to a CDN for their JS, at dap.digitalgov.gov, and it is a serious responsibility. If their JS were compromised, it would be very bad, and DAP instituted new processes to handle the increased importance of content integrity. Also, right now there's still a privacy leak to Symantec (that they are working on resolving) that makes me deeply uncomfortable. My point is just that if you centralize things, you have to think harder about things that might be less important when when it's distributed.\nAnd the DAP can't use SRI, because the whole point they are promoting the use of a CDN rather than self-hosting is so they can deploy updates (including security updates) reliably across participating agencies without requiring manual intervention from each agency, and SRI would make that impossible. The USWD might not have that as a goal, but if not, then my comment above applies about the CDN not really lowering the barrier to deployment.\nIn general, I think HTTP/2 undermines the value of SRI for most websites, and third party CDNs for all websites. First or second party CDNs, like something shared within the government, continue to make sense when they're stood up for the right reasons and managed with appropriate care.\n. I'd like to re-open this, and now feel more strongly that this banner should just be removed from the USWDS ecosystem. Obviously, if individual sites like usa.gov want to continue using such a banner, they are free to, but I think it's proving unsustainable for the USWDS ecosystem to maintain and update accurate text about a key issue.\nAs of this comment, https://standards.usa.gov is still using the inaccurate text, and people are (quite reasonably) assuming that the version on https://standards.usa.gov is correct and copying it into new designs, further distributing the inaccurate text -- 7 months after I first raised the issue and we worked out more accurate text.\nSo I'll again ask that the team consider removing this text from the USWDS components altogether, as I think it is proving more harm than good.. I understand, but let's try to distinguish between what users want from government websites, and what the US Web Design Standards project can reasonably be asked to deliver with the quality users expect. \nTo be clear, I'm not trying to say it's a bad idea for a government website to show this text, or that downstream users like www.usa.gov should take down the accurate text that they are showing. \nI'm saying that the USWDS project may not be set up in such a way (and it may not be reasonable to ask it to be set up in such a way) that it can satisfy this need as part of the Standards. It's one thing if the USWDS team can't rapidly get improvements in responsiveness or aesthetics out to its community in a consistent manner. Prominent inaccurate text like this could plausibly be made an issue by an agency's legal counsel or congressional oversight committee, which is the sort of thing that could really damage the USWDS project's reputation in the federal community.\nThere are other factors to weigh over what users say they need -- for example, even if federal developers asked for a central CDN to host USWDS assets for them (which was also suggested to potentially fix this text problem), the security and privacy ramifications would make it unlikely for it to be a responsible thing for the program to do. The team would have to change how it works and make a significant investment in a new and highly disciplined workflow to ensure that the security and privacy ramifications of that central hosting were worth the risks. \nIf the team makes a concerted effort, I'm sure they could go and get most/all of the downstream users of the USWDS to update their text to be accurate. But I think the fact that the inaccuracies made it out so far before relevant subject matter expertise was consulted, and the fact that it's been so challenging for so long to get it fixed, suggests that the project (in its current state, anyway) would find it easier to not be responsible for this kind of process going forward.. Thank you, @maya. \n@donjo, did you want to continue discussing the maintenance topic here, or another thread, or to not continue?. That language is definitely much more accurate in both cases (though the browsing history part is still confusing to me, and the most likely interpretation of it would not be accurate).\nI do still question the utility of these statements. The .gov statement isn't highly helpful, and focuses on \"sharing sensitive information\", when I would say that the .gov is just as important for \"non-sensitive\" information, as in trusting the integrity and authenticity of what users are reading.\nSimilarly, the https:// part focuses on the user sending sensitive information, whereas the benefits and rationale for HTTPS is basic privacy/security even for \"non-sensitive\" sites (as explained at https://https.cio.gov/everything/ and elsewhere -- data integrity is paramount in all cases). Drawing this distinction was critical to getting the political will to use HTTPS on sites like usa.gov, which did not use HTTPS until after the https.cio.gov policy was finalized.\nI understand that it's appealing to have these things, and I can understand why users would click on them (I did the very first time I saw one). While more accurate, I do still think they run the risk of being too simplistic and not worth the screen real estate and potential confusion.. That text is accurate, so I don't have any objections on that front.\nHowever, I encourage you to think carefully about what you're solving for. I understand your user research suggests people look carefully at a number of things. However, there is only one thing that guarantees that they are at the right place:\n\nA valid https:// connection to the official URL\n\nNote that these aren't enough alone:\n\nA valid https:// connection\nBeing at the official URL\n\nAnd also note that during an attack, it is trivially easy for an attacker to display:\n\nThe official US government banner\nThe agency's seal\nAny other contextual clues that rely on the display port below the URL bar\n\nGiven all that, encouraging people to train themselves to verify that they are at an official URL over https:// is a good thing, as long as it's being conveyed accurately and as that combination. \nI encourage USA.gov and the USWDS team to keep those things in mind as they try to respond to user needs and integrate educational text about these issues.. :+1: from me. What are the best instructions to users of the USWDS to help them migrate? . Also, the USWDS homepage itself has incorrect banner text:\n\nhttps://standards.usa.gov\n\nHow can we resolve this? I believe inaccurate text on a banner designed to assure users of the authenticity of federal content is a significant issue, and it affects our technical credibility.. Niiiiiiice. The correct URL is https://developers.login.gov, which still exists.. Can this be re-opened? There are still a substantial number of sites with the inaccurate text. Here are a couple:\n\nhttps://www.farmers.gov\nhttps://www.commerce.gov\n. > I agree that \"standards\" can cause confusion, but if possible, I don't want to give up all of the benefits that the current name allows for the government.\n\nI think the issue is that, to the extent there are benefits that the current name allows for the government, it's based on the \"gravitas\" the word \"standards\" has in the government, which is directly connected to the general government expectation that standards are mandatory.\nSo I think it's difficult to have our cake and eat it too on this one, and would recommend we move to U.S. Web Design Resources or U.S. Web Design Toolkit (or something like that), which may have less gravitas, but is more likely to communicate the role of the project more effectively and generate less confusion.. ",
    "smarina04": "Data that is not displayed or available for download on the public dashboard on analytics.usa.gov is for DAP users only and is not for public view. To request access to this data in the DAP application, please send requests to dap@gsa.gov. \n. ",
    "alex": "Without suggesting a specific implementation, a select-box-with-autocomplete component would be super valuable.\n. I think you wanted Alex Ose, not me. But it looks good to me.\n. Thanks! I left a comment there explaining a middleground that addresses both the security concerns and the CDN/usability concerns.\n. @maya interesting, perhaps that section should indicate you need to run jekyl first?\n. :+1: \n. The appropriate way to address this is through Subresource Integrity, a sort-of-new HTML standard that allows you to include the hash of the downloaded javascript, which means you dont' have to trust the CDN for integrity.\nIf you look at the bootstrap CDN instructions, they include the SRI attributes right in their example, meaning users who take the path of least resistance get all the integrity protection of hosting locally, with the benefits of a CDN: https://getbootstrap.com/getting-started/#download-cdn\n. (Current deployment status: http://caniuse.com/#feat=subresource-integrity)\n. My personal view is that insisting everyone self-host imposes a non-trivial\nbarrier to usage (frontend package management is still not outstanding, and\nsomething like bootstrap can be used without needing to care about that\nwhole thing), and I think lowering the barrier to adoption is particularly\nimportant given the goal of providing commonality across a large and\ndisparate set of websites.\nOn Fri, May 20, 2016 at 7:26 PM, Eric Mill notifications@github.com wrote:\n\nEven with SRI, I would still recommend that the USWD not promote the use\nof a third party CDN for distribution of the USWD code, especially for its\nintended audience (US government websites). SRI removes much of the\nsecurity risk, but there is still a privacy impact of sharing online\ncitizen/user activity with a third party.\nThe primary reason to use a third-party CDNs is performance, but HTTP/2\nmeans that the performance hit for downloading self-hosted USWD assets is\nminimal, and much faster than the CDN-hosted version when the user doesn't\nhave it cached already. It would be great if USWD actively recommended that\ngovernment agencies using their assets self-hosted them, with an additional\nsuggestion to enable HTTP/2.\n\u2014\nYou are receiving this because you commented.\nReply to this email directly or view it on GitHub\nhttps://github.com/18F/web-design-standards/pull/1100#issuecomment-220741247\n\n\n\"I disapprove of what you say, but I will defend to the death your right to\nsay it.\" -- Evelyn Beatrice Hall (summarizing Voltaire)\n\"The people's good is the highest law.\" -- Cicero\nGPG Key fingerprint: D1B3 ADC0 E023 8CA6\n. ",
    "meiqimichelle": "I've been hearing about option 2 on many 18F projects. I imagine it depends on your specific project case, but people seem to be making happy noises about the two config solution (or rather, having a second config that overwrites parts of the first as necessary).\n. +1\n. Hey all! I'm already in convo with @juliaelman about this, it will get fed back. It is only 508-compliant form elements -- so, more properly called a 'form coding guide' perhaps?\n. Ah, which I see Julia already updated the title to be more specific :) Yays.\n. ",
    "jjoteal": "Curious as to if the yellow used in the focus state meets 508 contrast guidelines? Maybe the 4.5:1 contrast does not apply to focus states?\n. @angel this format works for me!\n. I second the guidance for responsive tables!\nAlso, many of the tables that I come across contain many more columns than the ones shown in the pattern library. Perhaps also include guidance on simple tables vs. complex tables?\n. I was thinking that pixel dimensions might be helpful when setting up a Photoshop file for the desktop version of the site. The guides could set accordingly. Maybe another suggestion might be providing a downloadable PSD file that already has the grid built in?\n. Ahhhh, I see. I'm assuming breadcrumbs are recommended on all navigation systems?\nPerhaps include recommendations on breadcrumb text styling, > indicators, and how to handle breadcrumbs in cases where \"pages\" are shared between multiple sections? The last one is a usability issue, so not sure if it should be included in the pattern library...\n. Yep -- you answered it. Just wanted to make sure there was nothing preventing folks from including social icons in the header, as I am frequently asked for guidance on that.\n. I frequently refer to this tool: http://www.pearsonified.com/typography/ when trying to figure out the optimal character count per line per the golden ratio. This might be a good place to start, as it will suggest the optimum readability recommendation for the specs that you enter.\n. 8.4.1\n. ",
    "arvalarva": "So far, Font Awesome has met the vast majority of the U.S. Patent and Trademark Office's needs. The community can also request new icons, or simply add icons within GitHub to the core Font Awesome library. Also, Font Awesome is becoming so widespread, that the goal of easily recognizable icons (instructions) for our customers is easily met.\n. Be careful in selecting a single solution. Some large firms and government agencies have security settings that block IE from using webfonts. As you know, we are using Font Awesome, but have an SVG option, since we are one of those government agencies here at the USPTO.\nFrom: Michael Jovel [mailto:notifications@github.com]\nSent: Thursday, June 25, 2015 10:35 PM\nTo: 18F/govt-wide-patternlibrary\nCc: Adams, Arva\nSubject: Re: [govt-wide-patternlibrary] [Icons] Do we like the Font-Awesome solution? (#43)\n@andrewmaierhttps://github.com/andrewmaier @mayahttps://github.com/maya Normally I would say I would recommend a SVG based system but as this is an icon set which in theory would be shared across multiple agencies I feel like font based solution like Font Awesome offers the most efficient method of loading icons. with SVG w/ Png fallback we would either have to worry about multiple http requests or explaining automation of spritesheet creation, or a larger generic spritesheet with icons that are not being used. Do we have metrics from DAP that estimate % of gov site visitors that use devices that do not support @font-facehttps://github.com/font-face?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/18F/govt-wide-patternlibrary/issues/43#issuecomment-115469201.\n. @Font-face doesn\u2019t work in IE behind our firewall. Web-based font icons work in Chrome and Firefox, even behind our firewall. We tested, and some of our customers at large firms also cannot see font-based icons (or any web fonts, for that matter) using IE behind their firewalls.\nIt\u2019s a great solution, but you need a properly coded svg back-up, as I saw someone else suggest in this thread. Right? I\u2019m adding Brian, who knows more.\nThanks,\nArva\nFrom: Logan [mailto:notifications@github.com]\nSent: Tuesday, June 30, 2015 4:26 PM\nTo: 18F/govt-wide-patternlibrary\nCc: Adams, Arva\nSubject: Re: [govt-wide-patternlibrary] [Icons] Do we like the Font-Awesome solution? (#43)\nCould we do something like thishttp://code.tutsplus.com/tutorials/quick-tip-ever-thought-about-using-font-face-for-icons--net-11233\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/18F/govt-wide-patternlibrary/issues/43#issuecomment-117331008.\n. 18f's writing style guide is using sentence case. You're using title case in this component. Can you explain why? We go back and forth with this issue A LOT here at the USPTO.\n. Last Source Sans Pro update was 2014. 2.0.1.0 http://www.adobe.com/products/type/font-information/Source-Sans-Pro-Readme-file.html\nFrom: Maya Benari [mailto:notifications@github.com]\nSent: Monday, December 18, 2017 9:11 PM\nTo: 18F/web-design-standards web-design-standards@noreply.github.com\nCc: Subscribed subscribed@noreply.github.com\nSubject: Re: [18F/web-design-standards] Update Source Sans Pro fonts to the latest version (#802)\nHi @miguelsousahttps://github.com/miguelsousa, just wanted to check in since it's been 2+ years since updating Source Sans Pro fonts. Are there any significant changes to Source Sans Pro since then that would benefit updating them once again?\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHubhttps://github.com/18F/web-design-standards/issues/802#issuecomment-352618189, or mute the threadhttps://github.com/notifications/unsubscribe-auth/AHw4Dja5lVR1JHbZu3cRhX1ebnRu0QDSks5tBxsqgaJpZM4GKJuj.\n. In case it helps:\nhttp://uspto.github.io/designpatterns/1.x/docs/components/tabs.html\nFrom: Carolyn Dew [mailto:notifications@github.com]\nSent: Tuesday, March 29, 2016 10:49 AM\nTo: 18F/web-design-standards web-design-standards@noreply.github.com\nSubject: Re: [18F/web-design-standards] Tabbed pattern? (#946)\nNot exactly tabs but USAJOBS has a horizontal nav pattern that could be the starting point for tabs: http://usajobs.github.io/design-system/nav-secondary/\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly or view it on GitHubhttps://github.com/18F/web-design-standards/issues/946#issuecomment-202934911\n. ",
    "logantpowell": ":+1:  \"God is in the details\" - Mies van der Rohe\n. :-1: \"Beer is the proof that god loves us and wants us to be happy\" - Benjamin Franklin\n. I'm not an expert, but I'd say that - if the intention is to create an icon set for everyone to share, this is a good way of doing it. I.e., in terms of maintenance/updates/etc... However, you have a good point about the support. \nI would say it depends on the market you're thinking of providing a solution for... Here's a take on the US mobile browser market:\n\n. Could perhaps some best practices for making these semantic be included in the spec? Like telling folks to include a label of the meaning (e.g., \"email icon\") of the icon? Idk... I figure someone has some ideas about this...\n. Could we do something like this?\n. ",
    "bmathews": "@mjovel: The USPTO set is 115k for the gzipped svg sprite and 5k for the gzipped icon CSS. Does that answer your question, or did I misunderstand? Inlining all the svgs into the css would probably be about the same size. Font Awesome is pretty big, and there are probably quite a few icons that'll never get used by the USPTO.\nIt looks like you've all discussed pretty much all the options, and they all have support/color/flexibility/maintenance/size pros and cons to weigh. It's not a fun decision to make, and it does sometime depend on the tech stack, tooling, and team like @mjovel mentioned. \nAt the very least, maintaining and providing all the source svgs individually gives your consumers some flexibility if they aren't able to use whatever method you end up going with. \nDetecting whether IE is configured to block webfont downloads isn't great. \n. ",
    "JJediny": "Never appropriately licensed these all from all the sources but I'd previously collected all the open licensed svg/ttf repos out their for cartography purposes but this may give others ideas and places to look:\nhttps://github.com/JJediny/NEPAnode-MapIcons\n. Thanks @gbinal @pjdufour ! Completely agree that the move be made over to Project Open Data Always intended that to be the case - just wanted to proof the concept with the web-design-standards as the \"reuse it yourself\" approach to the frontend/design/layout/components of the web-design-standards combined together with a data.json entry as a Jekyll page as a way to provide both aspects. \nWill move the conversation over to project-open-data/simple-catalog-generator#3. \n. ",
    "bendygirl": "The government of Buenos Aires created fonts for use across all of BA. They're available here http://gcba.github.io/iconos/ best use of icons (in my opinion) their last one, the Tango. Formats are EPS and PNG \n. Hi, it's been a while, a month to be exact. \nWhat's the plan on removing \"Standards\" as this is a clear term in govspeak and not so much for this repository.  I've been hearing the words \"Compliance with the web design standards\" now from a couple of places. I remind them you can't have compliance with something that is not a regulation or law. So it'd be incredibly helpful to me not to have to continually explain this to folks who know what \"standards\" and \"Compliance\" are but not necessarily what design or development are.. Is this now OBE with this issue https://github.com/18F/web-design-standards/issues/2300\nspecifically this: \n\nChange name and shorthand throughout main repo and docs site \nWrite a blog post to explain the change as relevant to the work we\u2019re doing and what we\u2019re providing -- @thisisdano\nLess about the name, more about the benefit, pedagogy \u2014 benefits of system design thinking, similar to standardization without the baggage, rigidity\n Pick a URL: designsystem.gov / designsystem.digital.gov -- @thisisdano cc @jeremyzilar\n\nSo, I can't read the accompanying document, but is there a time frame for when the blog post and name change will take place?. @maya I've also noted this on the content list, and I referenced my comment so anyone who hits the link should be able to follow along. You might want to respond to the email if possible that work is being done in this vein. I have been going through the issue que to see since this open ticket wasn't apparently cross referenced (at least not that I could find).\nThanks\n. I've posted to the internal drupal lists so the govies also know where to find the info on this moving forward.. ",
    "jhfrench": "Does the IEOld end-of-life (moment of silence, as we contemplate the terrors that once visited upon our code), and subsequent mandate to adopt IE11, change any of the logic against using webfonts?\n. > Basic accessibility issues with the lack of alt text on icon fonts\n@maya I believe alt text is required/expected for meaningful images, particularly when the meaning of that image is not otherwise conveyed. So if you have...\n<i class=\"fa fa-refresh fa-spin fa-3x fa-fw\" aria-hidden=\"true\"></i>\n<span class=\"sr-only\">Refreshing...</span>\n...than you're good:\n- The sighted user sees a spinning refresh icon, but no \"Refreshing...\" text\n- A non-sighted user gets \"Refreshing...\", but is otherwise unecumbered by a trivial image (which is not even really an img, so it doesn't need an alt attribute, nor does it get \"read\" to the user!)\nIf I'm wrong about this, someone please re-educate me quickly!\n. @jbrucegsa  \n\n...what is the appropriate icon for \"unarchive\" action?\n\nClearly @davegandy needs to devise an icon that conveys this sentiment \n. @bendygirl I just need everyone to know that I want to live in a world where the government of Buenos Aires created an icon project code-named \"Tango\"\nThis post may or may not have added a meaningful contribution to the conversation :grin:\n. I'm a little confused....is 18F getting traded to another country? \n[just checked my fantasy developer league's newsfeed--don't see any mention of it]\nJust think of the \"USA\" namespace as a very minor hat tip to the project's sponsor.\n. @BrianDiggs do you have any guidance on what styling variations you'd like to see for DLs? Were you thinking of something along the lines of Bootstrap's styling of description lists?\n. DataTables is a well-written open-source, free, plugin for progressively-enhancing tables to add filtering, sorting, pagination and even optional exports to PDF, CSV and clipboard. A lot of thought has gone into it.\nPerhaps the good play here is to create a \"Design Standards\" theme for DataTables. That way a project that needs the enhancement(s) can include DataTables, and the relevant theme's CSS and get what they need, while the Design Standards core stays \"clean\" of extra code that won't always be desired.\nI'll donate the time to create the theme if it is wanted...just let me know! \n. The visualization can be a little more tricky. I'd love to see Highcharts (which is \"pure\" JavaScript) adopted for this purpose. I know they are fleshing-out the DOM-reading widget of that software...perhaps they would allow the distribution of their product within the Design Standards in exchange for making that part of their product better? Highcharts is free for non-commercial organizations...perhaps US Gov already qualifies?\n. Since the project already uses NPM, it could build upon that to incorporate Gulp and something like Spritesmith.\n. I take @Haroenv 's suggestion to mean \"wouldn't it be better to incorporate gulp-imageoptim (or similar) into the build process so that any future image adds or edits will automatically be optimized?\"\n. @maya There is a way to automate zopfli to only run on newly added (or changed) images.\n~~Sorry to beat the Gulp drum...it's just the only tool I know. I'd bet that anything that can be done with Gulp can also probably be done with other build tools.~~Ummm...just kidding (now that I've read the CONTRIBUTING.md and see the project uses Gulp). :grin:\n. FWIW: The state of hidden content support in 2016\n. To take this a little further--consider removing the button element entirely, and instead progressively-enhance .usa-accordion [aria-controls] ... something like (quick and dirty in jQuery)\n$('.usa-accordion')\n    //hide all but the first panel\n    .find('.usa-button-unstyled').not(':first').attr('aria-expanded', false).end().end()\n    .find('.usa-accordion-content').not(':first').attr('aria-hidden', true).hide().end().end()\n    .find('[aria-controls]').attr('aria-role', '').on('click', function(){\n        var $this=$(this);\n        //show or hide the child panel associated with the clicked panel header\n        $('#'+$this.attr('aria-controls')).toggle();\n        //set aria-expanded attribute on the panel header\n        $this.attr('aria-expanded', !($this.attr('aria-expanded')===\"true\"));\n    });\nSo the HTML could be:\n<div class=\"usa-accordion\">\n    <ul class=\"usa-unstyled-list\">\n      <li>\n        <h3 class=\"usa-button-unstyled\" aria-controls=\"collapsible-0\">\n          First Amendment\n        </h3>\n        <div id=\"collapsible-0\" class=\"usa-accordion-content\">\n          <p>\n          Congress shall make no law respecting an establishment of religion, or prohibiting the free exercise thereof; or abridging the freedom of speech, or of the press; or the right of the people peaceably to assemble, and to petition the Government for a redress of grievances.\n          </p>\n        </div>\n      </li>\n      <li>\n        <h3 class=\"usa-button-unstyled\" aria-controls=\"collapsible-1\">\n          Second Amendment\n        </h3>\n        <div id=\"collapsible-1\" class=\"usa-accordion-content\">\n          <p>\n          A well regulated Militia, being necessary to the security of a free State, the right of the people to keep and bear Arms, shall not be infringed.\n          </p>\n        </div>\n      </li>\n    </ul>\n</div>\nThis approach provides a usable experience even without JavaScript (but a better experience with it).\n. You might also consider incorporating role=\"tablist\", role=\"tab\", and role=\"tabpanel\" into the example HTML.\n. @maya  True story, we still can't use it to reliably toggle visibility. So I edited my April 14 code snippet to accomodate and created a working fiddle for demonstration purposes.\nBecause aria-hidden support is improving, I believe there is value in \"setting\" it.\n. @maya oh, hold on, misread that. You are talking about HTML5's hidden, I was talking about aria-hidden. I just checked my code to confirm that I do not make use of the hidden attribute, so what I write above still \"stands\".\n. @jbrucegsa may I ask why you favor a button (and, therefor, form) over an a tag that has an internal href attribute? You probably have a good reason in mind.\nMy concern is a form-based approach might get tricky when the alert is already a child of a form.\n. @msecret I don't already have ruby and bundler installed on my system (if needed, can instructions be added to CONTRIBUTING.md?)...but this particular issue sure looks like it's isolated to the Gulp install/instantiation/[pedantically-correct verb].\nI suspect that some of the dependencies reference since-deprecated Gulp package versions, and the above error is the result of that.\nIf you try a fresh install within the latest NPM, does it work for you?\n. @joshbruce \n\nI did start working on a solution that used hover on the container if there was no JavaScript \n\nDon't forget about mobile devices--they don't know about \"hover\" (well, not yet...and not reliably).\nI think the safest approach is to load with all accordion children visible, and progressively-enhance to collapse only if the browser can support the relevant JS for expanding.\nA CSS rule like this (assummes Modernizr syntax) would get you there:\nHTML.js .usa-accordion-content.collapsed {\n    //only hide accordion content if browser supports JS\n    display: none;\n}\n. ",
    "Drakenhart": "@jhfrench First, the idea seems doable but would need to be tested to see if it works well for screen-readers.\nAn added point - if it is an alert status of some kind you will have to make sure screen readers users understand it. There needs to be context. Ex: If an alert is informational, it should state that. If it is a warning, it should state that.\n. @jbrucegsa That is what my project is doing. We limit our icons use for one to only items that are either very important, or need to be quickly found through users scanning the site. We pair them up with appropriate text as well. If we feel any additional information is needed for screen readers but might interfere with the visual design, we use a SR-only class to hide the information visually.\nAs for \"unarchive\" why just use\" move\" instead? :)\n@jhfrench epic, undead epic.\n@maya The CMS we use has a folder for the web fonts and the web icons, so if someone can reach the web service we can still serve the fonts and icons from the on-network server.\nI'm not sure if that is a good solution or not, because I do believe that in some cases the block may be local to the computer itself?\n. Sometimes it may not be the icons, but the spacing around them as well. If the icons are smaller, just make sure there is adequate padding/margins to give it a 44px x44px tap area.\n. What I find most useful on this mock, that I don't see on the website, is the reference to the white space. I had to dig through code to find the padding and the margins, before. ^.^\nWhen working with type, white space is very very important. ^.^\n. https://dusted.codes/making-font-awesome-awesome-using-icons-without-i-tags\nSomething to consider?\n. @mattlangan Also it's good semantics as the \"i\" tag (wasn't previously used but) seems to have been re-worked.\nhttps://www.w3.org/International/questions/qa-b-and-i-tags\nhttps://www.w3.org/TR/html5/text-level-semantics.html#the-i-element\n. Our project has been testing pagination options from both a visual design as well as a 508 compliance side. @carodew would it be helpful to share the data we've discovered here?\n. @carodew I understand. The Holidays complicate online communication. I will see what I can manage.\nFor context:\nWe have need for multiple-page table-based lists. Having a single massive page that scrolls more then a screen height only works for screen readers, it's too much information for the user base (all at once).\nSo as to not hijack this issue further from breadcrumbs, should I open a new one?\n. Side note- on the breadcrumbs topic.\nThe common design pattern is to use breadcrumbs as a secondary form of supportive navigation. Also the best practices, as I understand them, is that one does not use H-tags in a breadcrumb.\nI was curious about the choice, as it is very unique. Where did the inspiration for it come from and why do it this way?\n. @carodew understood and agreed. I'll create a new item. :)\n. @jbruce-gsa That's how I understand it as well, and one of the reasons I've found it a good choice for navigational usability. The research done by Nielsen-Norman-Group back in 2007 seems to still hold true, depending on how deep a site goes.\nThose who understand their use, use them and to great effect and those that don't ignore them and move along (if there is a main navigation to follow). \nBut it also depends on how it's used:\nLocation- Physical IA-based\nPath - user choice action-based (like you might see on an e-commerce site)\nAttribute - Category based on user choices (again like you might see on an e-commerce site)\nedited\nRelated project uses h tags in their breadcrumb trail. \nSorry.\n. @maya For some users who are non-visual, this may not be as big an issue. However, @line47 is right, few of them are not obvious that you can scroll sideways.\nScroll sideways in general on websites as a whole is something that we've tried to move away from over the years, as it is not a natural motion for someone using the web from a desktop (or at least hasn't been since before the inception of tablets that can surf desktop-sized sites).\nThe same could also be said of someone using a phone. Mobile users (including tablet) do not often scroll or swipe sideways unless it is a designated sideways swipe feature. (ie menu options)\nThe question then begs if you break up a table in a menu-style side swipe, how does that effect non-visual users?\nA second question too, is the use of tables that are already stacked? Will tables be forced to be one style only (horizontal)? Or can we design them to be stacked as well? How would they be made responsive?\n. I support this improvement.\nWorking on another government project I had to dig through the code to find this sort of information and used a significant amount of time trying to find this so I could set up a Photoshop document for my visual design work. (I use both Illustrator and Photoshop to work up visuals.)\n- [ ] Note what the base font size is (please).\n- [ ] Make it more obvious that some of this information is in the accordions (font size, weight, etc are all hidden and it's not obvious where this information is easily located).\n- [ ] Also when clarifying responsive design, please specify how this handles higher resolution devices (ex. ipad, iphones) that might otherwise display the desktop layout on a phone. \n:+1: \n. Would it be for designer flexibility@mollieru?\nThis project has a nice, wide range of color choices. I could see it being made and added color just for designer choice.\n. @maya Thank you. However, re-reading what I wrote I realize was not quite clear. My apologies. :)\nI was asking, initially, if perhaps the rems/ems/base pixels could also be documented in the same way the static pixels are as well? I realize that this was for those working on static design.\nI was hoping that having the rems/ems/ base pixels openly noted would help those who have to recreate the look and feel because they cannot use the code out of the box. It's an time-box / work-effort issue, really.\n. Every designer has different patterns of behavior when it comes to their work flow. Not everyone is going to realize that the color swatches are pre-loaded.\nI realized this myself a bit late and opted to create my own color boxes.\nIt makes it easier to have colored objects (circles or rectangles for example) on a Layer inside and Ai document.\nSo I agree and support @rtwell 's suggestion.\n. Agreed @carodew that would also be helpful.\n. Some sites that require explanation of technical or medical terms will need a glossary, or tool\ntip (which can be made accessible: http://heydonworks.com/practical_aria_examples/#input-tooltip).\n- Consider many sites within the VA with its the medical terminology and jargon that cannot for technical reasons be reduced to more simple, plain language.\n. User testing suggests that text-only pagination controls are too much, and visual button-like controls are too little.\nWording choices used is also important for clarity of what function or action is expected by the user.\nA hybrid approach is suggested. \nLocation (left, middle, or right & top of list, bottom of list, or both). Top right, and if the list is long enough adding it to the bottom is also suggested.\nFurther testing in encouraged.\n. Seems both hit the primary best practices. Although I think the layout you have here is a bit more usable then the other (although the visual treatment for the other works very well). Maybe a hybrid approach?\nAs for mobile what if it was like this?\n<   page 1 of x   > \nWith target area around the elements so they don't accidentally trigger each other?\nedit\nFound this article from Smashing: https://www.smashingmagazine.com/2016/03/pagination-infinite-scrolling-load-more-buttons/\nHowever this was focuses on eCommerce. Some of the points may trickle over, but not all of them. Even they noted that it depends on context and why a person is on a page.\nThis is an interesting article from Neilsen: https://www.nngroup.com/articles/infinite-scrolling/\nI hope this helps. :)\n. Thanks @joshbruce !  I do try to be helpful. ^.^\nThinking about your comment, maybe the load more button is a type of pagination. o.O It's not what one might think of when someone says \"pagination\", to be sure. But thinking more on the functionality of it, it kind of does fit the bill in a slightly abstract super minimal sense.\nAnd, yeah, I agree that infinite scrolling for certain content isn't a good way to go. I'm not a fan of parallax scrolling either, personally (I haven't found anything to quite win me over, yet).  Especially when you are looking at users who may have cognitive needs (memory, information overload, difficulty reading, etc).\nAgain, I think it's a context need. Not all pagination will fit the content type. (Search page versus image gallery). Maybe that's something to consider? Kind of in the same idea of how the footers were worked out, where you have a couple different versions maybe?\nArticles, tabular data, lists, could have a specific kind of pagination. Where as Image galleries, \"Carousels\", slide shows (power point like), and such might have a different version? You'd still have the consistency, but it would be based on a pattern type. Thoughts?\n. @simsong Are you speaking about microfromats and structured content?\n. Return to top is sometimes used in FAQs if the list is long.\nWith Government websites as complex as they are sometimes, they often have massive FAQ lists.\nSomething to think about. ^.^\n. Setting a base font size is needed for responsive design if you want to control your typography more consistently. \nNot setting the body\u2019s font size just means the default value of 1em is relative to the browser\u2019s default font-size (usually 16px). But not all browsers are built alike and this can cause major issues in both design and Type on a page.\nIf the elements are em-based, they are going by the default or declared font size in the body, right? So if you don't delcare it not only does the type suffer, the elements based on ems suffer as well. Or so I understand.\n^.^\n. Typography on the web has been a favorite topic for me for years. There are pros and cons to bother sides of the argument.\nSetting strict values and not letting the user control them is a big problem. This is poor usability and poor accessibility.\nBut setting a base (preferably not pixel based, you can do it as a percentage too), and then adjusting it by ems and rems gives you more flexibility and has been the compromise set between strict control (preferred by those who do print graphic design work) and no font control (preferred by those who understand the nature of the web and don't care about what happens to their fonts).\nI come from that hybrid theory stance, from the no font control stance. This is due to accessibility concerns in regards to readability of text. The cpl (character per line) is in direct relation to the font size and line height. A bigger font means a wider cpl, and to do that you need to declare a base font size to sort out the rest of the Web Typography math.\nSo even if a user scales it up, it should responsively change to fit and not deform the site. That's the key to the compromise. Not deforming the site, but still have it readable (and user controllable).\n^.^\nhttp://typecast.com/blog/a-more-modern-scale-for-web-typography\nhttp://alistapart.com/article/more-meaningful-typography\nhttp://alistapart.com/column/responsive-typography-is-a-physical-discipline\nhttps://bootstrapbay.com/blog/web-typography-best-practices/\nhttps://www.smashingmagazine.com/2013/05/typographic-design-patterns-practices-case-study-2013/\n. I also would like to know what the usability testing was on this, as we are using a simple red asterisk currently.\nForms, if coded as required, will voice \"required\" for JAWS users, so our testing has shown. We will be doing further testing of our forms at a later date, but any input now on this matter would be very beneficial.\n. People are more likely to complete a form when the optional fields are labeled rather then the required? Do you have a link to this research. I don't think I've come across it yet to date. Also thank you for the book reference as well. It is appreciated.\nIn regards to the other point of quick scan-ability of the form. Perhaps a typographic treatment of the Required and Optional labels might be in order if they are moved to the LHS so they are more easily noticed?\n. @carodew Indeed. Thanks again.\n. It would also be better for screen readers, as it would make more sense contextually.\n. A suggesting might be to encourage them to create web content as they normally would and have a designer who is print styles savvy to go in and create a printed version of the web document. It may be a bit \"weird\" for some folks to think of it that way, but if someone can come up with a solid example of how this would work and show them, they might be okay with it.\nPlus sides to this: Time and effort reduction - you can modify the website content once when edits are needed, where as you would also have to update the pdf as well.\n. @joshbruce You are correct the dl can only take the dt and dd elements, semantically. \nThe dt can take other flow elements except section-creating elements (header, footer, section, h-tags, etc).\nThe dd element can take any flow content elements.\nSo using the definition lists for the accordions might be a way to go. It would be a lot cleaner and semantic as well over all. (Avoiding span-salad and div-soup).\nIn regards to AT it would depend on what browsers supported the mark up, but there would be an understood (or should be an understood) context between the elements as well.\n\nUsing dl, dt, and dd ensures that relationships between terms and their definitions are preserved if the presentation format changes and that the list of terms and definitions is treated as a unit.\nhttps://www.w3.org/TR/WCAG20-TECHS/H40.html\n\nAlthough this particular technique is for an actual list of defined words or terms, it does suggest there is a contextual correlation between the elements.\nI think it's worth giving it a shot and testing it. :)\n. I'm curious and a bit confused.\nWhy would you make a button not look like a button?\nIt's a classic piece to a form, and buttons look inherently actionable (which is what in part gave rise to the links that look like buttons trend). Links can get lost, especially if there is a bunch of them on a page (ie, use case: Add, Edit, Delete, Cancel buttons as links).\nI suppose I'd need more convincing. ^.^\n. Those are some strong points. I generally agree that buttons should do button things. With some interfaces there can be too many buttons that can be visually distracting. I'm still torn though. It's going against the grain of what has been done for years... But maybe that shake up is needed?\n. You can also nest sections within sections, if you want to stay away from divs even more. This is still semantic and acceptable by the standards.\nOr for individual pieces of the style guide that could be pushed out or might be stand alone (like perhaps major H1-sections), you can make them articles and still be semantically correct.\nMy other suggestion might cause a huge re-write, as flexbox is more layout friendly in general (however not easily supported by IE - which many government systems use almost exclusively). However, it is another option to use pure semantically correct elements. ^.^\n. Gosh I've been away for a while.\nFlex box is a new thing coming up in the standards (if you haven't already google-fu'd it by now).\nBasically no more divs and spans unless you really need them - because all the elements can be laid out by just using their elements, no more wrappers (more or less)\nReferences:\nhttps://www.w3.org/TR/css-flexbox-1/\nhttps://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Flexible_Box_Layout/Using_CSS_flexible_boxes\nhttps://css-tricks.com/snippets/css/a-guide-to-flexbox/\n. I know the Bootstrap team is moving to flexbox for Bootstrap4 - so I've been watching that develop as the various flexbox bugs come in. But their mentality is very \"forward thinking primary\".\nSo far not many workarounds have been found, as there are so many many bugs in IE versions 9 and under.\nBut then Microsoft has always had to do it's own thing. ;)\nMost recent Microsoft info on flexbox:\nhttps://msdn.microsoft.com/en-us/library/hh673531(v=vs.85).aspx\nFlexbugs (FYI): https://github.com/philipwalton/flexbugs\nHowever, I'm of the same mind, @shawnbot - Government sites have very specific needs due to their heavy use of Microsoft products. Until the various offices upgrade to a newer version of IE, flexbox is not likely to be very useful.\n. Have you considered pure CSS accordions? Is there a reason to rely so heavily on javascript for them? \nPure CSS accordions have been made as far back as 2013 (although the ones I've seen are a bit \"hacky\" as they use a radio button or check box input that doesn't display visually). \nThe accordion already uses a button element rather then a link.\nAlso is there a reason to use the Aria attribute as a hook? I'm curious as we have heard that often it is better to just visually hide elements (if needed), but display them to screen readers (ie don't hide them from the DOM). This was something we got feedback on in regards to pagination of data lists (don't hide them behind a next link - give them the whole page).\nThe only reason in that regard to limit on-screen output for screen readers is if it is too much of a data load for the server.\nIn this regards as an accordion, why use the aria attribute at all to hide the accordion content? Wouldn't that lead to more user frustration on a screen reader users part? Or do you have data that suggests otherwise? I'd love to know. :) \n. @joshbruce Thank you for indulging me on those points. I appreciate it! It's sometimes hard to keep track of the various other conversations as well, so thank you for the link! :)\n. @joshbruce @donjo This is a beautiful idea, and having a repository of downloadable \"skins\" I suppose you can call them for different content management systems would be a brilliant idea. Even if they just used the very basic styles here.\nIt would also help reduce government costs in certain areas too. ^.^\nMy concern in seeing the code portion is... wow that is a LOT of divs where <section> and <article> and <main> could be used instead. ;) (Hard habit to break, I do it too still.)\n. ",
    "joshbruce": "Another alternative would be to include both an icon and text. This would be a more \"mobile-first\" approach as there is no \"hover\" state on mobile; therefore, no display of the alternative text as a tool tip.\nOne of the things we are attempting at my program:\n\n\nThis way the icon is not the only communication vehicle - this is particularly helpful when the icon is not as obvious to communicate ideas. For example, what is the appropriate icon for an \"unarchive\" action?\n. @jhfrench - Sorry it's taken me a moment. For unarchive (undo), I recommended, the FA undo icon: http://fontawesome.io/icon/undo/\nEdit: Changed \"recommend\" to \"recommended\".. @jpdevries et. al. - You can also include the library and fonts, which overcomes the limitation of seeking outside/CDN resources for those \"more secure\" locations. You lose the ability to take advantage of a cache from a CDN, but you can also be a bit more picky by optimizing the FA Sass if you want to do that sort of thing. I think it would be a later performance optimization in the grand scheme of things.\nThe USWDS is already doing this with the inclusion of the Source Sans and Merriwhether (sp?) fonts.. Could we make the menu not \"sticky\"...still not a lot of room, but could at least scroll.\nThis would allow it scroll off the page, and out of the way. If there is a concern about users having to scroll too much - I know iOS, at least, has a \"soft button\" at the top of the browser that scrolls to the top in rapid fashion.\nAlso, do users fill out forms in landscape more often than portrait. This seems like one of those problems that would not be specific to the Standards...how are others addressing the problem - if at all?\n. The Apple iOS HIG recommends 44x44pt hit area - this can, generally speaking, be converted to 44x44px. Note: The hit area does not need to be the visible size of the link.\nFor example:\na {\n  display: inline-block;\n  height: 44px;\n  width: 44px;\n}\nThis doesn't work so well when the contents are variable - true links - but could be a workable solution here.\nps. I might not be able to get to it today.\n. One option would be to wrap tables in a div (or, preferably, different element). See UIKit's \"Responsive Table\" at the bottom of the page:\nhttp://getuikit.com/docs/table.html\n. Could disable the button as well - this would require adding a styleguide class to give the proper button color, but would make it so the page doesn't reload. Could also use JS prevent default.\n. Sorry - stumbled across this and had to comment.\nFrom a reusable module perspective - I think having the namespace as a variable would be nice. For example, I have actually decided to grab the standards for a personal project. I'm modifying them enough that changing the namespace makes sense - with proper license notices, of course. At present, this means I am no longer able to npm update from the uswds - no big deal, I find the standards to be more manageable than alternatives and a great starting point. (Thank you!)\nFor government sites specifically - and the ability to PR back into the root project - I think leaving USA is the better option. For example, the program I am on can use the usa- classes, while creating our own namespaced Sass for our program and create our own npm with a dependency to the uswds. In fact, that's what we're trying to do and, for a lot of stuff we are doing locally for the program - we are submitting PRs to the uswds, which means we can lighten our load, if those PRs are adopted and released.\nJust throwing copper. Cheers.\n. For the program I'm working with, we do include FontAwesome and ask our designers to follow the style of those icons. Therefore, the FontAwesome icons won't clash with our custom work - and we don't have to design icons already covered by FontAwesome.\n. @mattlangan - Your mention of \"helper methods\" brings me to ask: What language(s) are you using on your project?\nThe underlying destination is that the program I am on has been working on kit containing configurable helpers to return USWDS-based components. Think template engine - only independent of framework - and for components, not whole pages.\n. @mattlangan - Nice! And agreed. \nMy program is still figuring out if we are going to change our server-side framework. As a proof-of-concept, this is what we put together:\nhttps://github.com/joshbruce/iae-uikit-php/blob/master/src/FormControls/Select.php\nI've iterated a lot on the concepts since then, but the basics are still in play. If you're not familiar with PHP the short version is - you feed it a configuration key-value array (Hash or even JSON). It returns the  HTML - similar to the way UI Kit works for iOS development.\nIf we decide to go with Rails - would you be interested in something like that? \nps. I'm trying to gauge demand outside of my program. If demand is low, we would make one gem (in the case of Ruby) specific to us, and still open to the public. If demand is moderate to high though, we might split it into two gems - one generic to USWDS components and the program-specific one that is dependent on the first, again, open to the public.\n. @mattlangan - I didn't think there was a PM capability here, but I agree on the hijacking. I've proposed something similar to a few folks in the USWDS community, and have felt bad every time. So, I made the following for it:\nhttps://github.com/joshbruce/iae-uikit-php/issues/5\n. Funny story, as I completely shift from my original position in #43. I've actually removed all icons and gone to text.\nA few reasons, if I may:\n\nThey simply don't really add much to the UI and experience, at least not for my purposes. (I do use a text editor plug-in that has icons, but that's not my UI, technically.)\nI was using all of two (this is for the platform I'm developing than the one discussed in #43). An icon, when done well (and totally in my opinion), communicates its purpose, and there just weren't a lot of areas where the icon-set could actually do that nor could I figure out an icon to create that would.\nGiven I was using two icons and bringing in the entire Font Awesome base CSS, seems a bit much.\n\nSo, if we go with icons and all that, I think it might be worth putting in the guidance regarding usage something like: If you have room for text, use text. Of course, the con here is in localization and internationalization. :)\nAlso, just found this while looking for another WWDC session (on the difference between glyph and icon and other design tasties): \nhttps://developer.apple.com/videos/play/wwdc2017/823/. @StraightfaceStudios - Would you say this is the same regarding background and text colors in general? I'm thinking about the \"Visual style\" page - at the bottom regarding contrast and accessibility.\n. @Drakenhart - This is somewhat conjecture, but I think the use of breadcrumbs is a leftover UX design pattern from when people were more accustomed to navigating a file tree on their computer than using a browser with a back button. Further, a lot of older sites had very deep pages buried under multiple levels of files and were easy to get lost in. Information Architecture has moved a long way and made them less desirable or necessary, in my opinion. For the program I am on we use them for helping navigate actual hierarchical data or if the user is more than 3 levels deep (which already goes against the levels provided by the Side Navigation component).\nBut I'm curious to see where this discussion goes.\n. @swirtSJW: That's an interesting reference, thank you!\nI also think, from an information architecture and UX perspective, there might be some room to consider the two as different things.\nThe trail of breadcrumbs is something that should lead me back to where I started from the way I came - a copy of the history stack...this is literal breadcrumbs.\nThe docs say \"breadcrumbs\" is more like a copy of the information architecture...not really breadcrumbs...leaving a user with the back buttom and dropdown in their browser.\nMight be my semantic and liguistic brain training to communicate what is really being generated. In the case of the docs, it's more like a linear file tree (mirrors the route/information architecture). Thanks again! Didn't know that existed.. See #1215 \n. Was going through critical priorities today - was going to tackle this one: #1094\nAfter researching the previous PR made on it - saw the PR associated with #860 (you're here) ticket. Is the aforementioned issue something I should skip in my consideration until the core team determines a way forward? Maybe close #1094 and reference this one, which appears to be a consolidation issue.\nWould that turn this ticket into critical, given the priority of #1094?\n. This component is prioritized for my project. We will share when we get the HTML and SASS...see what y'all think. \nWe are considering two styles: One rectangular outline and one based on the #703 ticket.\n< prev 1 ... 5 6 [7] 8 9 ... n next >\n- This would keep the number of links down to something like 10 per page. \n- Always able to get to the first. \n- Always able to get to the last.\n- Always able to navigate from the current page plus or minus 2 or 3.\nThe difficulty we're running into is mobile presentation. Should we go vertical? Let it wrap? Convert to a select? And so on.\n. Thanks @Drakenhart - When we first started talking about it we did consider progressively enhancing into the load more button. I think we decided to avoid infinite scrolling, and maybe that's a type of pagination?\nGood tip on the hit area - when I did #346 that was the reasoning we had (adding @vkatari123 and @tarandhupar for heads up).\niOS HIG\n\nProvide ample spacing for interactive elements. Try to maintain a minimum tappable area of 44pt x 44pt for all controls.\n. Adding another team member: @jagannathch\n\nps. @Drakenhart - and you usually do it well! :)\n. @maya and @juliaelman - I promise I'm not trying to plug a PR...I have some time right now to contribute and am going through looking for issues I might be able to finish before heading out for the day.\nSee Issue #1239 \nSee PR #1244\n. See #1124\n@msecret, @harrisj, @carodew, and @mollieru \n. I think, in some ways, we could use/modify the standard alerts to accomplish this mission. The language I should could definitely be done in a more robust call to action fashion; for example, on classified pages, the question is generally: Do you have a need to know?\nFor the program I am working with, we have added in a recommendation for print styles that would include/display proper file marking and handling labels. Not sure if that is truly related to this topic, but seemed to be in my mind.\n. @carodew - Thanks for letting me know. This is my first time going through this process. Is there anything else I need to do; just want verification there's no action on my part. \nThanks again, much appreciated. \n. @rogeruiz - No worries. Glad it is appreciated. :) \nThink your recommendations are spot on as well.\nI've also been playing around with the following:\nhttps://toddmotto.com/flawless-clickable-drop-down-navigation/\nI'm enjoying it so far because I am telegraphing my intent to use JS on the element and if I decide to change it later, I know there might be some JS that needs to be reconsidered - and no . Not sure if this would be of interest nor where to put this concept in the standards.\n. @kategarklavs - Thanks, I think I caught the ones I understood. The one in the \"Browser support\" area re that first sentence I wasn't really sure about. I tried to interpret it with the \"Update browser support first and second sentence\" commit a99734e.\n. @juliaelman - I can see what I can do. \nThe PR is a little bit old and may require a new PR due to some technical things on my end becoming disassociated with the original branch. For a different writing I added external links to pages such as Wikipedia and the W3C. I will see what I can do and will flag those actively participating in the conversation here.\n. See PR #1184 \nClosed by requester.\n. @rogeruiz - Thanks! Decided to just close it because I actually think I removed the repo itself from my GitHub for a moment. Probably not the brightest decision I've ever made, but still getting used to GitHub workflows - used to having access to the main repos I host outside of GitHub. \nAh, the learning experience. Thanks again.\n. With Error Handling\nAdding the same error handling pattern to the date field input results in the fields being butted against each other when the border is applied. Also, the float to the left causes the wrapper to break.\nHTML\n<fieldset>\n<div class=\"usa-input-error\">\n    <legend>Broadcast On...</legend>\n    <span class=\"usa-input-error-message\" id=\"broadcast_on-input-error\" role=\"alert\">The alert needs a broadcast on date.</span>        \n    <span class=\"usa-form-hint usa-datefield-hint\">The date to begin displaying the alert.</span>\n    <div class=\"usa-datefield usa-form-group usa-form-group-month\">\n        <label for=\"broadcast_on_1\">Month</label>\n        <input aria-describedby=\"dobHint\" class=\"usa-form-control\" name=\"broadcast_on_1\" pattern=\"0?[1-9]|1[012]\" type=\"number\" min=\"1\" max=\"12\" value=\"12\" required=\"required\">\n    </div>\n    <div class=\"usa-datefield usa-form-group usa-form-group-day\">\n        <label for=\"broadcast_on_2\">Day</label>\n        <input aria-describedby=\"dobHint\" class=\"usa-form-control\" name=\"broadcast_on_2\" pattern=\"0?[1-9]|1[0-9]|2[0-9]|3[01]\" type=\"number\" min=\"1\" max=\"31\" value=\"\" required=\"required\">\n    </div>\n    <div class=\"usa-datefield usa-form-group usa-form-group-year\">\n        <label for=\"broadcast_on_3\">Year</label>\n        <input aria-describedby=\"dobHint\" class=\"usa-form-control\" name=\"broadcast_on_3\" pattern=\"[0-9]{4}\" type=\"number\" min=\"1900\" max=\"2000\" value=\"1900\" required=\"required\">\n    </div> \n    <!-- Added to fix box-model problem on float -->\n    <div style=\"clear:both;\">&nbsp;</div>\n</div>  \n</fieldset>\nCSS: _inputs.scss\n```\n.usa-form-group-day, \n.usa-form-group-month, \n.usa-form-group-year {\n  clear: none;\n  float: left;\n  margin-right: 2rem; // was 1.5rem\n  width: 6rem; // was 5rem\n}\n.usa-form-group-year {\n  width: 8rem; // was 6rem\n}\n```\n. Putting the date field into a grid inner-container usa-width-one-half, for example, causes misalignment of hint text.\nCSS used to correct\n.usa-form-hint {\n    display: block; // new property\n}\n. @maya - Sure! I think. Never done that here and didn't have time in the moment to research how to do it - let's see if the drag-and-drop actually works.\nBefore\n\nAfter\n\nSpacing on error:\nBefore\n\nAfter\n\nAlignment of hint: I cannot seem to replicate at this time - sorry. At least I know how to add images now. Thanks!\nps. The \"stepper\" is one of the OS X UI Components - sorry, I do iOS and OS X dev as well - that's not a common term?! ;)\nApple Docs, if you're curiosity gets the better of you.\n. Interestingly enough, no.\nWonder if something got changed when I ported it over to being a reusable component.\nMy output:\n<fieldset>\n    <legend>Publish On...</legend>\n    <div>\n        <span class=\"usa-form-hint usa-datefield-hint\">The date to begin displaying the alert.</span>\n        <div class=\"usa-datefield usa-form-group usa-form-group-month\">\n            <label for=\"broadcast_on_1\">Month</label>\n            <input aria-describedby=\"dobHint\" class=\"usa-form-control\" name=\"broadcast_on_1\" pattern=\"0?[1-9]|1[012]\" type=\"number\" min=\"1\" max=\"12\" value=\"\" required=\"required\">\n        </div>\n        <div class=\"usa-datefield usa-form-group usa-form-group-day\">\n            <label for=\"broadcast_on_2\">Day</label>\n            <input aria-describedby=\"dobHint\" class=\"usa-form-control\" name=\"broadcast_on_2\" pattern=\"0?[1-9]|1[0-9]|2[0-9]|3[01]\" type=\"number\" min=\"1\" max=\"31\" value=\"\" required=\"required\">\n        </div>\n        <div class=\"usa-datefield usa-form-group usa-form-group-year\">\n            <label for=\"broadcast_on_3\">Year</label>\n            <input aria-describedby=\"dobHint\" class=\"usa-form-control\" name=\"broadcast_on_3\" pattern=\"[0-9]{4}\" type=\"number\" min=\"1900\" max=\"2000\" value=\"\" required=\"required\">\n        </div>\n        <div style=\"clear: both; overflow: hidden; height: 1px;\">&nbsp;</div>\n    </div>  \n</fieldset>\nThe only difference I see is that I removed the \"usa-date-of-birth\" class from the containing div - as I don't think it is, strictly speaking, a DOB-specific element (unless I'm using it incorrectly)?\nAnd, the hack div at the end to fix the float problem when doing the error thing.\n. Oops. Sorry - I hid the following at the bottom of that comment:\n\"The only difference I see is that I removed the \"usa-date-of-birth\" class from the containing div - as I don't think it is, strictly speaking, a DOB-specific element (unless I'm using it incorrectly)?\"\nIt's a semantics concern as well as a, \"Am I only supposed to use this for DOB fields\" question.\n. @carodew - I definitely think the rename of class would be worthwhile. I will keep the ticket open for now, as a reminder to myself when I have time.\n. @maya No worries - really hoping to help this project out. \nUnfortunately, I haven't made it through everything yet. \nWith the standard CSS, there did not seem to be a visual change to other text inputs - almost like the declaration could be removed without any side-effects.\nThe only other pattern of inputs I think might be affected would be in the name or address forms, but I have not gotten there yet in the following project: https://github.com/jbrucegsa/uswds\n(Hope that project is kosher with y'all. Starting with PHP and available through Packagist to set up a prototyping environment locally. Considering ports to straight JS in the near future. If you setup a local PHP server (MAMP or XAMPP or something else) and point to \"public\" you should see the outputs using the compiled CSS and UI generator.)\n. Even though this is closed - it's an interesting conversation.\nCorrect me if I'm wrong, CDN would offer the ability to pull the compiled CSS and JS, which is fine if no changes to the defaults are made.\nOtherwise, developers would have to add more CSS to compensate or override (same with Bootstrap or other CDNs). Whereas, having it as a modular package allows developers to pick and choose more easily. The modularity would not necessarily be lost as long as the full package is still available through npm. \nAn interesting poll might be to ask those using the Standards how much customization has been performed - if any.\nSome questions this thread brought to mind:\nWhat primary purpose of the Standards is being taken? \n- A toolset to be used? \n- An edict to be followed?\n- Walking the fine line between the two?\n- Or something else?\nI believe the writings about the Standards points a certain way - and am more interested in hearing the views of others as this project proceeds. It may also not be the right time to CDN the Standards (still a beta pre-one-oh release). @jpyuda did allude to a future possibility of a hosted version without an external provider (Federally hosted and vouched for - and, honestly, outside my wheelhouse).\n. See #1129 \n. Not sure why this one jumped up to the top of the issues feed for me, but I'll take it. :)\nSee #1244 \n. @maya - Thanks! I noticed that when I ran into another issue - sort of related to #1094.\nThe question you asked was whether I saw it affecting other inputs.\nhttp://uswdsx.local:8888 - I created this project to extend the USWDS project I have - it has a static page to show the components in various configurations. \nWhen the radio and checkboxes are placed inside the error container - that style causes a bunching of the options. But, not the same issue as seen #1094.\nHope that's not confusing - brain is a little fried and distracted.\n. \n@maya - As you can see, applying the input-error-label to the legend gives us a different font-size when not using usa-sr-only. I would actually prefer to see the legend text the same as a label - separate multiple radios or checkboxes and offers consistency with the select and other inputs.\nThe label margin-top setting to 0 makes sense for all other input types.\nHere is the sass I'm using to create consistency:\n```\nul label {\n    margin-top: 2rem;\n}\n.usa-input-error {\n    input {\n        width: 100% !important;\n    }\n.usa-field-set {\n    margin-top: 0;\n\n}\n\nul label {\n    margin-top: 2rem;\n}\n\n}\n```\nNote: We have reduced the spacing between the radio and checkboxes slightly from the Standard. And, just in case it's not obvious, the attached image is before applying the include sass.\n. @msecret - Will do!\nJust demoed the UIKit we've been building; so, not sure how much time I will have to contribute for a minute - need to port to JS and make it properly open sourced. I was thinking of doing the error wrapping for all the form controls - with modified scss. \n. @msecret - ps. Would you prefer a separate PR for radio, checkbox, dropdown, and date input? Or, on consolidated PR?\n. @maya - See other PR.\n. @maya - Always asking good questions that make me learn!\nI do it so the checked values get POSTed as an array of the same name. Without it, I usually only get the last element to be checked of that name.\nTo POST as an array of the same variable: name[]\nTo POST as a single yes/no toggle-style question, the way we have it now (can be difficult to process server-side; having to check the existence of each potential, but GET could be easier): name\nTo POST as a keyed array (GitHub profile settings): name[key]\n\nSome examples I'm seeing from the W3C go the unique name-value pair route; however, the spec does say checkboxes can share the same name: http://www.w3.org/TR/html401/interact/forms.html#h-17.2.1.\nMaybe something in the description notes?\nI've been doing this a while and things might have changed. So, if I'm being too old-school, let me know.\nOther resources\nRuby on Rails\nhttp://stackoverflow.com/questions/4037585/http-post-with-multiple-checkboxes-ror\nhttp://stackoverflow.com/questions/4425176/in-rails-how-to-handle-multiple-checked-checkboxes-just-split-on-the-or\nPHP\nhttp://stackoverflow.com/questions/4997252/get-post-from-multiple-checkboxes\n. @msecret - Agreed! Sorry about that. :)\n. @maya & @msecret - I should have numbered those. If we decide to lose the brackets - the second POST concept is correct and we can just revert this merge.\nThe brackets are appearing to be a common pattern:\nhttp://stackoverflow.com/questions/10560345/can-i-pass-multiple-checkbox-values-with-one-name\nhttp://www.dyn-web.com/tutorials/forms/checkbox/same-name-group.php\nI did, however, find this example demonstrating only the same name:\nhttp://www.javascriptkit.com/javatutors/radiocheck2.shtml\nHowever, it does not appear to return an array of only the checked checkboxes - still have to loop through.\nAgain, maybe the description should or could be updated to account for the three variations?\n. @jpyuda - That's fair - and interesting. If I get the opportunity, I'll see what I can do on that score.\n. ps. I wasn't sure if I needed to update the SCSS in the /src; so, I erred on the side of caution. Please let me know if that will be necessary in the future.\n. Fixes #1076\n. Fixes #1094\n@maya - Thanks. May also want @msecret (no autocomplete on my phone) per the initial issue fix.\n. Hi @ducklet, I'm curious about this as I really try to make thing accessible as much as possible. \nCan you show the markup that is causing it to be read by the screen reader?\nFor example:\n\n<i class=\"fa [icon]\"></i>\n\nor something else.\n. @maya - Not sure implications, and not in a position to verify. The hidden attribute, if memory serves, is different than aria-hidden; so, #1192 still stands, yeah? Or, do we need to revisit?\n. I had a much longer response related directly to JS and the accordions, but I'm thinking @shawnbot and #1224 has most of the concerns and requirements pretty well covered. (I'll store my longer text elsewhere for a moment in case it's needed.)\nI'm curious about the possibility for stuttering on load based on how many accordions are on the page.\nAside re hidden\n@scottaohara does bring up an interesting point regarding a root-level attribute selector effectively giving IE9 support for the hidden attribute.\nMaybe something to consider in general - not just for the accordions? As in a separate \"enhancement\" issue could be opened to discuss further?\n. See also PR #1066 - comments re same concern.\n. ps. I am not setup with AT tools, and not sure who to loop in that part of the conversation.\n. @maya - No worries! So far this seemed to be the only new-new item that we thought could be applied across the USWDS - not just application of design patterns to existing components (like the error handling on form controls).\n@jhfrench - Great question! \ntl;dr\nYou're correct, the W3C does not allow for sub-forms; therefore, putting a dismiss form inside another form would not work; however, a button, by itself, could by giving the button a name and value attribute.\nAs to other deciding factors (some of the thoughts prompted by the question):\nPart of choosing a button comes from the USWDS itself: \"Use buttons to signal actions.\" Given dismiss is an action, it seemed appropriate. Placing it in a form is mainly to allow a complete (standalone) non-JS solution - otherwise, we could apply an event override via JS or the aforementioned name and value to the button - something we would probably need to do if the dismiss button was used in conjunction with a modal presentation (see the \"download and share\" functionality here: http://www.census.gov/popclock/).\nRe alert dismissal specifically: The USWDS application of alerts within a form seems mainly for extended instructional purposes not served by the inline hints (http://127.0.0.1:4000/form-templates/#password-reset-form); therefore, probably not a good place to use dismiss functionality. Further, dismissing alerts, at least for the program I'm on, is specific to dismissing system alerts; therefore, they do not reside within a form and would be in addition to any forms already displayed.\nI added display: inline-block to the class definition, which allows the visual and functionality to be applied to an anchor tag should other developer solutions require it to be placed within a form - though, as I'm thinking about it - if the page refreshes from the link (non-JS), that might disrupt the user's ability toe complete the form. So, the dismiss button is starting to feel more and more like a rarity - like some of the alternative buttons available.\nHope that helps. Thanks again for the question! Let me know if you have more.\np.s. I'm not sure why this change causes CircleCI to not build.\n. Ran into this error today when doing\n$ gulp website:serve\nwebsite:serve jekyll 3.1.3 | Error: kramdown\nNot sure why, given that kramdown is not used - unless it is a dependency for red carpet.\nUpdate: Needed to delete Gemfile.lock and run $ gem update \n. @maya and @msecret: For the extension I'm working on for my program, this is the current CONTRIBUTING.md regarding getting set up locally - would this work? \nIf so, I will submit a PR. Note: I have not uninstalled everything to test - only set up another teammate who had nothing - also there are links and headers, just not included here.\nNote: I could not figure out a way to get the go_script to run the gulp commands; so, we have removed that dependency. Also, while I appreciated the ability to use $ npm start, from a UX perspective I felt having multiple options (gulp, ./go, and npm) could confuse novices. But, this whole note is more a different issue all together, I think.\n\nBuilding the project locally with gulp\nYou've cloned the repository. Now, we just have to make sure your environment can do what it needs to in order to serve the site locally.\nStart by opening Terminal (OS X) or Command Prompt (Windows).\nConfirm Ruby\nTo serve the site locally, we will need Ruby. Confirm Ruby is installed:\n$ gem -v\nIf you do not see a version number, install RubyGems.\nConfirm Ruby Bundler\n$ bundle -v\nIf you do not see a version number, and you have confirmed Ruby:\n$ gem install bundler\nConfirm NPM\nTo install the required modules, we will need Node Package Manager (NPM). Confirm NPM is available:\n$ npm -v\nIf you do not see a version number, install Node.js.\nConfirm Gulp\nTo compile the site, we will need Gulp - an NPM module. Confirm Gulp is available:\n$ gulp -v\nIf you do not see a version number, and you have confirmed NPM:\n$ npm install --global gulp-cli\nServe the site locally\nIf you've made it here, you are ready to go. Launch Terminal (OS X) or Command Prompt (Windows) and move to the locally cloned repository.\n$ cd ~/path/to/cloned/repo\nInstall/Update gems (this could take a moment):\nFirst time: $ bundle install\nTo update to latest versions: $ bundle update\nUpdate node modules (this could take a moment, especially the first time):\n$ npm update\nServe the site:\n$ gulp website:serve\nAfter running this command, you should be able to view the Standards website locally (http://127.0.0.1:4000).\nThis also sets up gulp and Jekyll to watch for file changes; so, as you update files, you should only need to refresh your browser to see the changes. If you do not see the changes, go to Terminal or Command Prompt and see if there were errors during the regeneration.\nNote: For a list of available gulp commands use:\n$ gulp\n. Hey @maya - Thanks. You are correct - the main set for this PR used the non-white backgrounds found in: https://standards.usa.gov/visual-style/#text-accessibility\nHowever, if we want, more can always be added and, I believe, the mixins would only increase the compiled size if used. If it would be beneficial I can add the white-backgrounds in another PR.\nRegarding flexibility - there's a root mixin all the pre-defined mixins use:\n@mixin bgcolor($background, $color)\nThis allows any background and text color combination and would be available for anyone including the utilities.scss to their sass builds. The root mixin also only sets background-color; so, background-image et al can still be applied. Only setting background, I believe, would cause issues.\n. ps. @maya - On further reflection - we could eliminate the other mixins in favor of just the bgcolor() one to reduce confusion and the number of mixins in _utilities.scss. Would need to modify the change done to the _alerts.scss for this PR.\n. @maya - I'm considering closing this and resubmitting - as I don't think I can do what I want to without doing so.\nTo increase flexibility even further we could define the root mixin as:\n@mixin colors($text: $color-black, $background: transparent)\nThis work though not tested. This is a better function name semantically for what it does. This also allows us to create a default of transparent with black text. Further, we can set the font color without having a background color. Finally, the mixin maintains the core functionality and flexibility.\nThoughts?\nps. If you know a way for me to update this PR to make that change without having to close and submit anew - please let me know.\n. @msecret - I think I will want to do a different PR for this one anyway. So, yes, can definitely start switching over to modifying the /src.\nThis PR, as it stands, does not consider the a tag, which I believe we would want to. Might be worth reaching out to @carodew again to see if this affects design considerations. Especially since this could apply to links within alerts and the label component.\n@maya - That's fair. I will wait to do anything further on this score until hearing back regarding what to name the mixins and if @carodew has anything to add re links.\nSorry I might have jumped the gun on the PR part of this - appreciate the methodical and reflective approach in its consideration.\nWould like to leave it open, for now, if possible. Or, convert to an issue. Whichever helps y'all the most with your workflow.\n. @msecret - Know how that goes. Not a problem.\nSee #1158 \nClosing.\n. @msecret - Interesting point and I think I see where you're coming from with it. \nWhat you're describing sounds like a dl - a list of heading-content pairs. Where the heading would be the dt and the content would the dd. Otherwise, wouldn't it be a single list item containing two distinct pieces of content - semantically?\nFrom the spec (http://www.w3.org/TR/html5/grouping-content.html#the-dl-element): The dl element represents an association list consisting of zero or more name-value groups (a description list).\nThe documentation in PR #1137 references the HTML spec for other pieces of the current implementation; so, I won't bog this conversation down with that, unless it would be helpful.\nFrom an AT and alternative perspective, I think it would be possible to use straight semantic markup (sorry if the class names are incorrect):\n<h*>Lead in for accordion group</h*>\n<div class=\"usa-accordion\">\n    <h*+1 class=\"usa-accordion-button\">Heading</h*>\n    <section=\"usa-accordion-content\">\n        <p>First paragraph</p>\n        <ul>\n            <li>List item</li>\n            <li>List item</li>\n        </ul>\n    </section>\n</div>\nThink my semantic assertion would be: That accordions are just collapsed content sections - not a list in the fashion of:\n1. List item.\n2. List item.\nHowever, the concept of using the dl is starting to sound like a viable option.\nAs an aside, I ran into an issue with putting list content with an accordion content block.\n. For completeness in response:\n<dl class=\"usa-accordion\">\n    <dt class=\"usa-accordion-button\">button title</dt>\n    <dd class=\"usa-accordion-content\">\n        <p>Hello world!</p>\n    </dd>\n</dl>\nAt this point, might be able to clear out classes on dt and dd as Sass and JS can just look for the dl and affect the two valid child elements...I don't believe a dl can take any other direct children - semantically.\n@msecret - Might give us what you're looking for re: \"I'd be happier to focus on ensuring it works with both lists and a single div\" - maybe...??\n. @msecret - Sorry about that, saw AT used by others and figured it was common vernacular here: Assistive Technologies.\nI'm not sure I agree with the dt being the issue, as it would be used for the buttons. Would we want to put h-tags in the button?\nThe dd does not have the same restrictions regarding sectioning content - more like an li in that regard.\nAs always, thanks for the consideration.\n. h+1 not a thing...same with h not being a thing. Was making the argument that accordions should not use lists...they used to - with div inside the li - technically correct from the HTML spec (unless I\u2019m not following where I mentioned a list).\nWas saying that one could have a well-formed document that just so happened to use expand collapse (like Wikipedia for mobile) and wouldn\u2019t have to change the JS...much.\nhtml\n<h1>The h* bit</h1>\n<section>\n<h2>The h*+1 bit</h2>\n</section>\nWhere each section is an accordion. Again, same direction as the PR...probably with a lot less JS, just not sure about why some of the JS decisions were made to get the one we have now.. To verify I am understanding.\nIn the this example, the label is read and considered the label:\n<label for=\"input-id\">Hello</label>\n<input id=\"input-id\">\nIn this example, the aria-labelledby causes the label to be overridden by the span:\n<label for=\"input-id\">Hello</label>\n<span id=\"input-id-error-message\">Helpful text</span>\n<input id=\"input-id\" aria-labelledby=\"input-id-error-message\">\nBoth the following could result in a similar output from the screen reader, but the aria-describedby may not be read by default:\n<label for=\"input-id\">Hello</label>\n<span id=\"input-id-error-message\">Helpful text</span>\n<input id=\"input-id\" aria-labelledby=\"input-id-error-message input-id-long-description\">\n<p id=\"input-id-long-description\">Some longer instructions.</p>\n~ or ~\n<label for=\"input-id\">Hello</label>\n<span id=\"input-id-error-message\">Helpful text</span>\n<input id=\"input-id\" aria-labelledby=\"input-id-error-message\" aria-describedby=\"input-id-long-description\">\n<p id=\"input-id-long-description\">Some longer instructions.</p>\nIn all cases, except the first, the label is overridden as the descriptor for the element?\n. @nickbristow - Thank! I've been toying with VoiceOver a bit over the last couple of days. I haven't had a chance to test against this issue, and definitely appreciate the assist. That's too bad that VoiceOver doesn't recognize the aria-describedby.\nThinking about testing an internal link to accomplish the same - for both those using assistive technology and those not. \nThanks again for following up.\n. @msecret - Sounds good. And no worries - trying to figure out the gulp thing myself.\nI think our conversation in #1137 helped a great deal on this score...at least it helped me.\n1. $ bundle update - to avoid kramdown error (must be done prior to $ npm start).\n2. $ npm update\n3. $ npm start - runs copy-vendor-sass as prestart and sticks to npm commands instead of switching.\nAlternatively, using gulp:\n1. $ bundle update\n2. $ npm install - runs copy-vendor-sass\n3. $ gulp website:serve\nI'll close #1137 momentarily based on conversations elsewhere.\n. @ducklet - Per the request on #1137 - I'm curious, as I don't know if it's possible.\n- Can I check out this branch and update this pull request directly? \n- Or, do I need to create another PR entirely?\nI would prefer the former as it would be easiest. I've done some very brief Google-fu and saw that it was a feature request, but not finding instructions on doing it.\nMaybe @maya knows?\n. Adding @ducklet - There you go, I think. If you look at the \"replace lost functionality\" commit - you should be able to see what was done with the JavaScript - jQuery makes it pretty simple when you know the functions and classes. :)\n. Fixes #1120 \n. @msecret - No worries. Will see what I can do. Maybe @ducklet can duplicate the changes and do a separate PR - as I think I will have to anyway as well (not sure what all is involved in a \"rebase\" and what it allows for).\nI will add it to my backlog though.\n. @msecret - Don't merge this if it integrates. I need to add the new class to the pages that use accordions. Just wanted to see quickly what would happen.\n. @msecret, @ducklet - Should be good to go. \nI could only find collapsed accordions on the Typography page that were not code samples generated from the JavaScript.\nGood job to the 18f crew on isolating /src and the other directories, much easier to understand what needs to be changed.\n. @rogeruiz - No worries. Couple of questions:\n1. What caused the decision to not merge the changes prior to the branch name changing? (Would like to know in case I end up in a similar situation in my own GitHub workflows.)\n2. What action(s), if any, will be required on my part once it is done? (Assuming a PR into the new staging branch.)\n. Would something like this get us close?\n```\nIgnore website:serve generated files.\nNote: The reserved files are not generated by gulp; therefore, should be kept.\n/assets/\n!assets/css/homepage.scss\n!assets/css/prism.css\n!assets/css/styleguide.scss\n!assets/js/styleguide.js\n```\nI saw the note in the .gitignore and needed something similar for the project I'm on. This should still allow contributors to make changes to only the style guide, while only using /src files for the rest.\n. @msecret - Saw that. Thanks for letting me know as well.\nElegant solution - think I might follow you on the idea of moving the style guide specific assets into a separate directory to allow for ignoring /assets all around.\n. I actually appreciate having the variables.scss file.\nI was confused as to why when I first started using the Standards. The conversation I found in GitHub was to allow an override point (variables.scss), while maintaining a reference (defaults.scss), without having to comment out things in defaults.scss.\nI suppose I could still create my own variables.scss to ensure defaults.scss doesn't override my customizations. So, just throwing copper.\n. @maya - Agreed. It would clean things up a bit and be less confusion for users.\nMaybe a comment in defaults.scss regarding overriding and setting up a variables.scss?\nNot sure how often users are overriding versus extending.\n. See also: #1066 \nAdding conversationalists: @carodew, @kategarklavs, @rogeruiz, @juliaelman, @maya. \nWent a complete less verbose route with this one. Let me know what y'all think.\n. @kategarklavs - I'm also horrible at the whole affecting and effecting thing...sorry if I chose poorly (now I want to watch Indiana Jones).\n. @maya - No worries - do what needs doing to suit the mission - just trying to give back where I can. ;)\nIf I may speak as a user of the Standards, to put two cents in (so to speak): \nFor the project I am on - the idea of progressive enhancement is pretty foreign to the developers we have. So, when I saw the \u201cprogressively enhanced\u201d mention - I was elated, because I know what it means. When I mentioned it to our developers who were not doing things in a progressive enhancement manner, there was (read \u201cis\") a lot of confusion and pushback. \nWhich prompted me to update the standards I\u2019m responsible for (which are an extension of the USWDS) and submit the initial PR to see about promoting the idea and clarification to the broader user community.\nAnd I understand the desire to explore user need - I\u2019m one of the resident UX people on my project - and for that project, it was definitely necessary. :)\nJust throwing copper.\n\nOn May 23, 2016, at 12:02 PM, Maya Benari notifications@github.com wrote:\nHi @joshbruce https://github.com/joshbruce, thanks for making a new PR. We currently have content about progressive enhancement here: https://github.com/18F/web-design-standards/pull/1184/files#diff-c5ba760212cf8eed5d2784b94da8b680R12 https://github.com/18F/web-design-standards/pull/1184/files#diff-c5ba760212cf8eed5d2784b94da8b680R12 and having it in two places is not ideal.\nBefore we\u2019ll consider publishing this, our team needs to make sure the content aligns with observed user needs. We\u2019ll also want to do a full edit (not in GitHub) to make sure the content mirrors the voice and tone of our existing work.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly or view it on GitHub https://github.com/18F/web-design-standards/pull/1184#issuecomment-221018067\n. I'm going to step away from this until GitHub gets back up and running a little bit more. Seems CircleCI is not running. Will most likely check back in tomorrow.\n. To throw some copper on the matter. I do find not being able to go 3 deep as being problematic in some areas - particularly with more compound navigation/menus.\n\n.primary-navigation {\n  ul {\n    li {\n      ul {\n...\n      }\n    }\n  }\n}\nTo comply with the linter, I believe, classes would need to be added; or some other solution that hasn't come to me yet.\n. Adding from #1160:\n@msecret, @ducklet, @rogeruiz, @maya \n. @msecret - Good question.\nWhen I used the following with hide:\n$content.toggleClass('accordion-content accordion-content-collapsed');\nAnd the following to show:\n$content.toggleClass('accordion-content-collapsed accordion-content');\nIt would require hitting the accordion button twice to actually get it to collapse or expand, respectively. Therefore, I may have misinterpreted what toggleClass() really did under the hood. It appears it will either add, or remove, a class if the class is set or not; however, it will not change one class name into another class name. \n. @maya and @msecret - Updated PR, with both the simple (#1196) and utility concepts. Can always rollback and update PR, if desired. However, I do appreciate Maya's simple solution.\n. @yozlet - Hey. Sorry, I missed your request for the revert on Gemfile.lock. Because I had to start fresh from a new fork - long story - I had to run $ bundle update (tried running just $ npm install - did not seem to work). See my comment on #1128 \n\nRan into this error today when doing\n$ gulp website:serve\nwebsite:serve jekyll 3.1.3 | Error: kramdown\nNot sure why, given that kramdown is not used - unless it is a dependency for red carpet.\n\nAnd, of course, $ bundle update rewrites the Gemfile.lock.\nIn PHP (using Composer) we sometimes ignore composer.lock file in .gitignore to try and overcome this. Could do the same thing in Gemfile with specific version numbers instead of just the gem name and .gitignore the .lock file.\nIf there's something we can do to make a fresh clone (or fork) work without needing $ bundle update - let me know; otherwise, I'm not sure I can revert the file by itself. Or, of course, I could be do something wrong on the fork-clone front.\n. @yozlet - Done. Thanks for the instructions there. It appears there is a deletion from what in the current project: \"bundled with 1.12.3\"\n@maya - @mixin name changed.\n. @maya - Sorry. Thought that was a typo. :)\n. @yozlet - Did a copy-paste from staging as of today.\n@ducklet - I asked a similar question in the comments and have decided to leave it to the judgement of the Standards team. I believe this particular concept is the notion of an assistive technology consideration driving sighted user's experience. So, instead of display: none (sighted experience) being the driving force for assistive technologies, we allow assistive technology state aria-hidden=true to drive the visual experience. This would help adopters use this accessibility-first pattern more easily.\nI believe the choice for naming is based on the fact that it is directly tied to the aria-hidden=true state; therefore, directly related to an accessibility consideration - not just display: none.\nFrom looking at the line notes - the additional class was the original solution provided - the concern there was creating \"yet another class\" for adopters to use and remember. Though this fix does not necessarily remove the learning it - it does keep the class list one smaller than the other solution - while allowing adopters to add the @mixin to an element they so choose; therefore, adding display: none to any element with aria-hidden=true.\nI agree that !important is icky - and I believe the Standards has attempted to remove its use altogether.\nCheers! Looking forward to seeing how this goes. :)\n. Verified against serving default staging branch.\n. @maya - Very nice alternative - didn't think of it myself until your comment. Well done!\n@msecret - If I'm thinking about this solution, combined with the utility suggestion from #1192 we would get something like:\n@mixin aria-hidden() {\n  &[aria-hidden=true] {\n    display: none;\n  }\n}\nTo allow developers to @include within any class or element; thereby, allowing any element to opt-in to being toggled based on aria-hidden state based on CSS, yeah?\n. Analysis results: Pages using the collapsible-0 attribute were the only pages with duplicate id attributes found. \n\nWhat does id=\"collapsible-0\" actually do? Is it deprecated and can it just be deleted?\n\nA search for collapsible-0 did not appear anywhere one might expect (as a selector for CSS and JS) - only the attribute definition within the element. This search also resulted in finding collapsible-0 being used as an aria-controls value. (http://www.w3.org/TR/wai-aria/states_and_properties#aria-controls)\nThe analysis also turned up usage in combination with aria-controls attribute - but inconsistently applied. If the existence of id=\"collapsible-0\" is an accessibility consideration (or requirement) - then collapsible-0 could not be removed; instead, we'd want to index the others.\n\nIs the use of id=\"collapsible-0\" meant to be an accessibility consideration? If so, documentation accordions, when there is more than one, would need unique identifiers and aria-controls attributes to correct the current inconsistency. Further, we'd probably want the other accordions (code mainly) to follow suit, yes?\n\n\nChecked denotes no duplicate id found.\nChecked with notes indicates curiosity of whether the element actually requires an id for functional purposes.\n- [x] Home\n- [x] Getting started\n- [ ] Visual style: duplicate collapsible-0.\n- [x] Grids: collapsible-0\n- [x] Buttons: collapsible-0\n- [x] Labels: collapsible-0\n- [x] Tables: collapsible-0\n- [x] Alerts: collapsible-0\n- [x] Accordions (thanks @shawnbot): documentation - not sure what this id does, if it became a norm, it could end up being in the same position as collapsible-0.\n- [ ] Form controls: collapsible-0\n- [ ] Form templates: collapsible-0 - curious whether some of the id are actually being used for something. For the Standards we created for my program we find some contributors adding attributes to elements because they believe all elements need to mimic something - not because the attributes are actually necessary - wonder if this is what happened with some of this id question.\n- [x] Search bar: collapsible-0\n- [x] Side navigation: collapsible-0\n- [x] Footers: collapsible-0\nMaybe we could create another issue regarding removing unnecessary id and class attributes. Add it to the \"clean, semantic code` milestone as well...??\n\nSince we're talking \"clean, semantic code\" - a recommendation about coding style - not sure how prescriptive we would like to be here.\nI find HTML readability improves a great deal if id is first and precedes class, which precedes all other attributes. \nBecause id must be unique to the page, it's easier to skim when id is in the first position because you don't have to sift through the other attributes applied to the element. See https://github.com/8fold/html5-generator-php - for the coding style recommendation I'm using right now for my more personal work on the score of attribute ordering.\n. @shawnbot - We need a h/t emoji, I think.\n. @maya - Interesting and I do appreciate a lot of the style recommendations there. I can see the perspective. I think it is also a reason I prefer the id first as well. It hints to me, as a front-end developer, that chances are the id is not being used for styling alone; instead, as a reference for some other purpose - aria labels, internal links, label for declarations, and so on. Classes on the other hand...??\nHaving said that, I'm with @shawnbot. \ud83d\ude09 \n. @Drakenhart - Not sure I'd go so far as nesting sections just for the sake of avoiding the div, but point taken. \nGood call on h1. I believe, according to validator the only way to avoid the only have one h1 per page warning, we'd have to do the multiple article or main thing.\nCan you expand on the \"flex box\" comment? (Save me, and others, some Google-fu?) :)\n. @mollieru - Luckily we were able to get them to be short enough not to have them wrap anymore. \nHaving said that, before we were able to - the default wrapping seemed to work fine. From a UX perspective - I try to keep menu items no longer than two to five words (and that's stretching it). In my experience I have not met a menu item that actually needed to be longer than that.\nIf we are looking to modify behavior to reduce title links for menu items (the title of the page can be as long as it needs to be) - we could truncate and ellipse; the trade off there being that some users may not know exactly what they're clicking on.\n. If we are linking, the label element itself doesn't denote that it is an interactive element compared to the other interactive element styles. If #1244 is accepted, it would add an underline to indicate and style the link based on the background color. \nMobile also replaces hover states with a click vent; so, I'm not sure if this would cause a double-click requirement to actually hit the link versus the hover state on mobile.\nMaybe instructive text on the first label of the page? \n\"Alpha - click to see maturity scale\"\nFrom a UX perspective that should train our more active users quickly - while still giving new users a stepping stone.\nWe could also switch to a button styled link (not that the label and button styles are completely different beyond all-caps and padding)?\n. @maya - Agreed. I try to \"pair design\" as much as possible - having a designer paired with a developer; so, I'm constantly thinking of ways to allow developers to quickly change the look and feel without having to switch out of the HTML. In my experience, something like this - and other classes - can be used to quickly change things based on designer (or user) feedback, in the moment, with a more consolidated definition created from it.\nWhere we went with #1262, my mind is starting to work on an alternative (addition...??) to the #1244 implementation; though I do appreciate the flexibility (affordances) offered by the @mixin.\n. @maya - Would you like me to close this issue?\nSee also comment on #1244 \n. Hmmmmm...seems Screener caught the change I made to the \"Visual style\" page. Given the nature of Screener failures being thrown anytime there is a change to the rendered page, I'm curious about how the team handles failures in general.\nAre the reasons for failure investigated further or trusted without further investigation?\nI'm pretty sure I know the answer, but would like to check my assumptions.\n. @maya - Thanks. Will do.\n. @maya - Thought the status of the PR became closed the other day; so, not sure what, if anything I should do here. Maybe change the PR from \"fixes\" to just references - that way it's not a multiple issue PR? Or, would you like me to close this?\nJust don't want to clutter up either the issues or PR spaces.\n. @rogeruiz - I believe the fix, based on the conversation in #1121, was to remove aria-hidden=\"true\" from all accordions - have them all expanded by default - then let JS kick in and collapse.\nCode accordions don't display without JS. All other accordions within the Standards are documentation blocks, which are set to aria-hidden=\"false\" (expanded) anyway. So, it should be limited to the \"Visual style\" page.\nI could either wait for feedback on #1244 and add the changes there. Or, make a new branch.\nSlight concern on making a new branch since some of the line changes could cause a valid merge conflict beyond Screener failures.\nThoughts?\n. ps. The expand-collapse behavior still depends on JS modifying the aria-hidden attribute; so, leaving any accordions collapsed on load will result in not being able to expand.\n. @Drakenhart - I agree - the checkbox (or radio button) is a hack - and potentially very confusing to users when their screen reader says there's a checkbox there without an associated form.\nHTML 5.1 has, for the most part, an accordion element. Details + Summary - though support is the limiting factor there and would require a polyfill (JS solution anyway).\nI did start working on a solution that used hover on the container if there was no JavaScript - if you had JS, then it would work on the click event. However, I believe the current is a solid one to address the JS and no-JS problem.\nSee #1192 for some discussion around the use of aria-hidden.\n. @jhfrench - Agreed, and why I decided against submitting the PR. :) \nThe accepted implementation is what you describe. #1224 \nWith the follow on #1247 to cover the accordions in the visual page.\n. Note: Since I'm working this PR and #1244, I can just as easily add this change to that one...depending on how much deliberation is needed for #1244. \nFurther, after marinating on it a bit, my concerns about possible merge conflicts (see #1245) should not be a problem given the areas of each file that are being modified by this and #1244.\n. @rogeruiz - I did some analysis at one point - thought it was on #1245 to be honest (can't find the issue for some reason and not sure why I didn't reference it here - sorry) - maybe @shawnbot remembers. \nThe findings, after looking at each rendered page individually, were:\n1. All \"documentation\" accordions are expanded by default and do not need the attribute applied. However, for the sake of refactoring, it could be removed.\n2. All the \"code\" examples are generated through JS; therefore, don't display if scripts are turned off - not affected by this solution.\n3. The only page with accordions generated from markup appear on the \"Visual style\" page.\nSo, while accordions are used on every page - they are unaffected by the accepted solution for the site as it was at the time of PR submission.\n. @rogeruiz - That was killing me - I was thinking of the ID conversation from #1225. Having said, the assessment from the previous comment still holds and is, essentially, an expanded version of the note in the second bullet of the PR description.\n. @rogeruiz - Rebased. Tests running now.\n. text-align: right\n\ntext-align: center\n\ntext-align: right\n\ntext-align: center\n\nPR solution: text-align: center & left: 13px\n\nPR solution: text-align: center & left: 13px\n\n. @colinpmacarthur - Just wanted to let you know and get your thoughts.\n. @maya - Thanks! I like that design direction a great deal. I don't see a specified height and width in the comp for the icons or the resulting hit area. \nHaving said that, this setup could be used as a foundation for #706. If either dimension is less than 44px; or, we could maintain a square hit area - matching width (seems the smaller of the two) to height.\n. @maya - I should be able to do that. \nBecause we are using SVG, I should be able to just change the dimensions - and update the hit area to accommodate. \nFrom what I can tell, the \"larger\" icons are not modified structurally from those already used, is that a correct assumption?\nIf you reopen the PR I should be able to make the minor modifications to get us there.\n. @maya - Thanks! Sorry for missing the PNG fallback - skimming the code quickly. :)\nCurious to know the rationale regarding the alphabetical ordering as opposed to groupings similar to: http://codeguide.co/#css-declaration-order - I'm not always good at doing this, but it is how I typically look at things.\nI should be able to do the update next week. I might end up submitting an alternative PR to accomplish the same thing, just a little more flexibility, imho.\n. @ericadeahl - I cloned https://github.com/18F/web-design-standards-assets - I'm not sure if I'm seeing the larger icon set in there - can you give me the target dimensions for the icons (sorry, I don't see the dimensions in the comp from #706)?\nThe Facebook icon width:height in the AI file I have is ~ 13:27 pixels. \nThe files stored in /src/img/social-icons/png are 77:52. And the images displayed are at 26:39.\n. \n\n. See also: #1262 \n. Thanks @maya and @rogeruiz - was waiting for the merge or definitive yay/nay to close it myself.\nThanks again.\n. @maya and @ericadeahl - What SVG compiler are you using - I see the SVG generated for this is huge compared to what it was.\n. \n\n. @rogeruiz - Thanks. Saw the traffic and wasn't sure. Will push in two seconds and see what happens.\nMight need some follow-on help, if you're up to it.\n. @maya - Odd. Here's what I see:\n\nThe screenshot is from Safari 9.1.1 on the macOS 10.11.5.\nThe next one is from Chrome 51\n\nThoughts?\n. @maya - Good catch - sorry about that. \nNot quite an exact match - mainly because I don't think the \"should be\" image accounts for the margin and increased height and width. Having said that, the spacing is consistent with the medium screen.\n\nWould you be willing to school me on how you managed to see the branch from this PR? I was trying to that with my program's standards the other day and could not get it to show up.\n. @maya - Sorry - forgot the spacing between the icons on top and bottom - should be good now.\n\n. Would something like this have helped?\n\nConfirm Ruby\nTo serve the site locally, we will need Ruby. Confirm Ruby is installed:\n$ gem -v\nIf you do not see a version number, install RubyGems.\nConfirm Ruby Bundler\n$ bundle -v\nIf you do not see a version number, and you have confirmed Ruby:\n$ gem install bundler\nConfirm NPM\nTo install the required modules, we will need Node Package Manager (NPM). Confirm NPM is available:\n$ npm -v\nIf you do not see a version number, install Node.js.\nConfirm Gulp\nTo compile the site, we will need Gulp - an NPM module. Confirm Gulp is available:\n$ gulp -v\nIf you do not see a version number, and you have confirmed NPM:\n$ npm install --global gulp-cli\nServe the site locally\nIf you've made it here, you are ready to go. Launch Terminal (OS X) or Command Prompt (Windows) and move to the locally cloned repository.\n$ cd ~/path/to/cloned/repo/sam-web-design-standards\nUpdate gems (this could take a moment):\nFirst time: $ bundle install\nTo update to latest versions: $ bundle update\nNote: Sometimes you may get an error asking you to update a module. If you run $ bundle update, and see Gemfile.lock in your commit, discard changes before submitting a pull request.\nUpdate node modules (this could take a moment, especially the first time):\nFirt time: $npm install\nTo update: $ npm update\nServe the site:\n$ gulp website:serve\n- or -\n$ npm start\nAfter running this command, you should be able to view\nthe Standards website locally (http://127.0.0.1:4000).\nThis also sets up gulp and Jekyll to watch for file changes; so, as you update files, you should only need to refresh your browser.\n. That's fair. Do you think it would be worth separating the environment requirements from the actual serving?\nBecause the npm commands still use the gulp commands, the \"confirm\" pieces are only there to setup the environment itself. Beyond that, a user can use npm or gulp commands to do everything else.\n. Just to throw it out there as a different perspective/curiosity:\nIs the automation of, what essentially a copy-paste operation, necessary? Can't contributors just copy and paste the preview code into a code block div? How often are the previews changed or created?\nAgain, not offering an opinion on either side here, just some curiosities toward an alternative perspective.\n. I concur with the assessment of the \"slight weirdness for visited links\" made in the related merge. Three images could be used (inverse, normal, and visited). Alternatively, Font Awesome has a unicode character that might be worth trying to add via ::after - because it's an actual glyph it will adopt the color attribute - otherwise, any text-based color changes will run into similar issues.\nWe might also consider putting it in a sup position. This would allow an annotation look; thereby, making a consistent style choice between footnote references (a al Wikipedia https://en.wikipedia.org/wiki/Middle_Ages) and external site notification. I also remember seeing an icon (might have been in Stack) that was less obtrusive compared to the Font Awesome image.\nSorry if this is way off topic, just saw an opening and took it. ;). Tagging my team so they are aware: @BrianGilmanGSA, @ChristyHermansen, @jenbesergsa \n. @bradnunnally and @kategarklavs - Are we accepting sign ups already; or, will that be a different pass?\nWant to make sure my program gets in the running.\n. Interesting. \nIs the groundwork laid with the accessibly-hidden() utility?\n. Ah. Thanks @shawnbot. \ud83c\udfa9  \nInteresting and definitely has potential.\nWith the accessibly-hidden() utility in the utilities SCSS (from when we removed the display none from aria-hidden) we could create a class .usa-accessibly-hidden, for example, which would just include the utility and apply it to an element.\nFor example:\n<section role=\"tabpanel\" id=\"some-panel\" class=\"usa-accessibly-hidden\">\nFor the affected element, whenever aria-hidden is set to true there is a display: none applied. Therefore, whenever the toggle is \"on\" aria-hidden on the controlled element would be false - displayed. When the toggle is \"off\" aria-hidden on the controlled element would be true - display none.\nCould the toggle-control (toggle-switch or just switch) concept only be applied to a button element; or, would there be a case where checkboxes or something else would be desired? (Think we talked about this as being a hack when removing the JS requirement from the accordions.)\nMy only hesitation would be something @ducklet talked about when we were doing the Accordions: Using ARIA states to control visual display becoming a \"misuse\". (Not the exact phrasing; I might look for the exact quote later.) \nI've been preoccupied and haven't looked at the latest menu executions - are the animations handled via CSS? (I'm assuming, yes, but want to make sure.)\nSomething that came to mind while responding:\nhttp://www.w3.org/TR/html/interactive-elements.html#elementdef-details\nhttps://developer.mozilla.org/en-US/docs/Web/HTML/Element/details\nhttps://developer.apple.com/library/ios/documentation/UserExperience/Conceptual/UIKitUICatalog/UISwitch.html\n. ps. Obviously this is dealing more with the affected element not the switch itself.\n. @maya - Thanks! I see the labels and don't want mess y'all up. So, would like to close this?\n. @donjo - Hello! For your reference: https://gsa.github.io/sam-web-design-standards/page-templates/\nCheers.\n. @Drakenhart - Agreed. I'm marking this. Because we are actually trying to do exactly that...including elements and components via kits. We are building one from JavaScript for use on Node.js servers.\nTagging: @ChristyHermansen, @BrianGilmanGSA, @jenbesergsa\nReferencing: I created a ticket once about the concept to determine demand probability for other Agencies. I'm marking this as a request. :)\n. Hi @maya. Thanks, as always. Re \"highlighted text\": A completely string of text - not a short bit. So, say I do a search, and we want to \"highlight\" part of the return value (obviously a different color background).\n. Thank @maya! \n. @shawnbot - This seems like an interesting solution. It also feels familiar to something I did once based on the iOS delegate patterns - years ago (so, be gentle): \nhttp://www.census.gov/popclock/\nhttp://www.census.gov/popclock/js/animator.min.js\nhttp://www.census.gov/popclock/js/odometer.min.js\nIt's an opt-in pattern. The animator has an array of delegates - which front-end developers can add DOM/JS object instances to. Then there is a protocol that would require an update function to exist in the delegate.\nSomething like this for the Toggle Tab example:\n``` javascript\nfunction ToggleTab() {\n    this.delegates = [];\n}\n/\n\n * Protocol: required\n * function handleToggleTab()\n \n/\nToggleTab.prototype = {\n    // called on user interaction\n    handleEvent: function() {\n        for (var i = 0; i < this.delegates.length; i++) {\n            this.delegates[i].handleToggleTab();\n        }\n    }\n    // called by component wanting to adopt protocol\n    addTab: function(tab) {\n        this.delegates.push(tab);\n    }\n}\nvar tabToToggle = { ... };\nToggleTab.addTab(tabToToggle);\n```\nThis allows each component to react to similar events in a different manner, if they choose. Further, each component could ignore the event altogether. \nExample usage and experimentation details (for the PopClock with \"animate\" as the event):\n1. Some components do not require animation.\n2. Some components only animate for a period and then stop until forced to start again by the user.\n3. Some components needed to always animate.\nInitially setting this logic in the component caused a great deal of lag and a host of other limitations. \n1. Extracting the timer into a singleton allowed us to create one timer for the document. \n2. Creating the delegates array allowed us the freedom to change the HTML patterns ad hoc as we didn't rely on HTML patterns to grab a component - and the captured DOM object could still respond.\n3. By letting the component determine what to do in order to handle the event we were able to have the odometers react differently to the same event than the progress bars. Further, we were able to have the age-sex pyramid react differently again.\nThrowing copper - and I think possibly saying the same/similar things. (Also, starting to think I may not have entirely understood the identified issues above.)\n. Yep. It has its limitations. Unfortunately, short of hopping into browser vendor channels, think the best we have for pulling them to take it seriously is to use it and overcome the shortcomings (doing it entirely in JS probably helped move that conversation along anyway)...reminds me of the IE6 must die movement.\nSafari still doesn\u2019t support data lists, and there\u2019re so many ways to do autocomplete there\u2019s not a lot of reason to improve support for it.\nBeyond accessibility is that you can\u2019t style it for anything. Same with most of the new ones - especially when we (developers) don\u2019t use them (sorry if this seems to lean too much on rant).  \nImagine the HTML, CSS and JS we could throw out if everyone started using dialog despite (or in spite) of a lack of wide vendor and browser support? (https://caniuse.com/#search=Dialog - funny story, Mozilla has a demo despite FF not supporting it. If you mess with the demo, be sure to close it before opening it again.)\nA decade ago we would literally put warnings for people using IE6 that said, \u201cDon\u2019t expect this to look good or work entirely. Please update your browser.\u201d\nBut, gotta pick the battles and understand users and context.\nAnyway to support both? One to handle now while preparing for the future? \n(@colinalford-gsa was doing something interesting with datalist on this score...without polyfills.). @shawnbot - Looks pretty good! The interesting part of the concept of a uswds folder is that it seems to presuppose that customizing will start with a copy of the USWDS project - good on you for searching out the various patterns.\nTo add a log to the fire: https://github.com/GSA/sam-web-design-standards/tree/gh-pages-staging/src/stylesheets/lib\nWe copied the project to give us the ability to make a Jekyll site via GitHub. Added the USWDS as a dependency. Updated the build process to copy the uswds to lib. Then do the component/element-level copy. \nThis allows us to override the defaults, without being overwritten upon updates to the USWDS. We can also override (rewrite) the style for individual components/elements. We do the same thing with JS. \n. @shawnbot - I think so. For me, when I use Bourbon and Neat, I still do the copy to a vendor folder, then do the @import. So, when I use the USWDS:\n1. Add uswds to package.json\n2. $ npm update\n3. $ jekyll build (or whatever build process)\n4. Copy /node_modules/uswds/stylesheets/**/* to /assets/vendor/uswds/\n   5.all.scss contains multiple @import\nSo, it sounds like, I would do something like this - modifying step 4\n- Copy /node_modules/uswds/stylesheets/uswds/**/* to /assets/vendor/\nIs that legit?\n. @shawnbot & @francisrupert - I think this is where we're going as well. So, it seems like the recommendation is a pretty good solution and I could do something like this:\n1. USWDS package.json in project\n2. Copy /node_modules/uswds/stylesheets/uswds/**/* to /my/project/stylesheets/lib/uswds\n3. My all.scss could @import 'lib/uswds/all' to adopt the USWDS wholesale. (Immediate bootstrap.)\n4. Then I can iterate as I create my own components, override, and so on. \nYeah?\n. @shawnbot - I've updated multiple times, and it's been pretty easy, without much in the way of regression or breakage...except accordions.\nAs to the other questions. If we are saying accordions.scss gets renamed details.scss (for HTML 5.1 <details> element), I think the proposed solution of keeping both around for a bit would be viable. I would hope there would be a sunsetting period though - to keep the clutter minimal (a bunch of Sass files that only import other Sass files could become confusing or intimidating).\nAs to the private partials notion, I believe we have sort of started this, yeah? The utilities.scss could be viewed as the base for something like this. Maybe create a directory inside of core called utilities and rename utilities.scss to mixins.scss or something. Though, this concept could get out of hand - tipping the scales in favor of reusability while potentially sacrificing global versus local knowledge. In other words, the learning curve is pretty minimal for the system, because 90% of the information needed for each component can be picked up from looking at the Sass. With a bunch of includes or partials we start losing that ability.\n. @shawnbot - Yep. You and I need to find some time to chat in person (or virtual), I think. The reason I say that is because we are currently iterating on something in Angular 2 you might find interesting.\nThis is not exactly what I'm referring to above.\n- /core\n- /elements\n    - /table\n        - sass\n        - js\n        - template\n- /components\n    - /header\n        - ...\n- /pages\n    - /home\n        - ...\n_all.scss\nRe the deprecation pain point - agreed - and maybe putting it as comments in _all.scss would be helpful...?? Then, of course, updating the site. Maybe deprecated should be part of the maturity scale (if it's not already)...??\n. @shawnbot - Added you to a private project...it's been deprecated moving forward, but the Angular one is on an Enterprise GitHub instance, which I don't think I can get you on. Really wish there was a direct message option in GitHub. :)\n. Thanks @shawnbot - gonna tag some of the crew. They might have some thoughts and lessons learned. Wish we could make our code more open - getting there - just taking a moment.. Wow! @shawnbot you've been busy. Not sure why I just now got the email on this. Having issues with local development and things...gonna tag in some teammates to see if they can help out. Having said that, it might be moot at this point.. @shawnbot: You found me... ::looks around for other cyber-stalkers:: ...I wasn't doing anything, I swear. ::grabs all the cookies and sneaks away::\nSeriously though, hey, brother.\nSAM Web Design Standards has been replaced by a private solution. Just haven't taken the repo down yet (I still reference some of the things). We did the * because I was contributing like mad back to the USWDS and wanted us to be as up to date as possible. Now with the 1.0+ releases, we've adopted a static approach to version inclusion of everything.\nThe 8fold Style Web is for my personal company 8fold. I really do approach the work y'all are doing and am taking what I can, when I can. ;)\nAlso, now that you're moving more into the interaction piece of progressive enhancement, y'all might be interested in another project I am doing for 8fold: API Documentation site for various things I'm making. Not quite ready to come out of the oven but, if you want, I can ping you when it's fresh out of the oven...??. I do appreciate this concept and definitely think it can go beyond the navigation concept. For example, I have a profile page wherein the desktop experience has three links near a progress bar; however, on mobile, I would like those links added to the navigation menu. In reality all the links are always there - the links in the side navigation have a class of large-hidden and the progress bar + links component uses standard CSS break points to hide things on mobile.\n\n. I appreciate this move a great deal. Will the marks be \"against\" the text input itself?\nThe reason I ask is that I have made a generic pattern out of all the form controls. So, putting it on the error wrapper would cause checkboxes to look really odd. :). If I saw the #2071 correctly, would flex-box also be a possibility now? \nAlong with Element UI we might also want to check out Turret CSS. Neat also has a flex-box switch that can be flipped, if memory serves. Foundation is kicking around and now has something they're calling XY Grid (dropped June 27th); release notes say it's based on w3c css-grid.\nTurret is written in Less, but I did find a converter to Sass somewhere. My big takeaway from some of these libraries is the emphasis on mixins. That, of course, has its own plusses and minuses.\n2017 is starting to feel like 2005. Only instead of focusing on HTML everyone seems focused on CSS. :). @msecret: Found this recently - https://github.com/rachelandrew/gridbugs\nI've abandoned IE11 support for my own work. The gov't program I'm on is also looking to use CSS Grid instead of float and flexbox - I think it's only advanced features that seem to be sketchy on IE11 - and there is a polyfill or two, I think.\nHaven't had any negative feedback regarding the sites I've created using CSS Grid; so, there might be visual differences, but not enough to make people freak out.. @shawnbot: Sorry to hear. Hopefully, we can still be GitHub friends. :)\n@maya: I did fill out the form. I don't believe I received any follow on communication. Sorry, foggy brain - been doing too much development. :)\n. @njohnson: Would it be possible to paste in sample HTML and a screenshot. I'm having difficulty visualizing the code you have and the result you're getting.. Hmmmmm...\nI may not know enough about .NET; so, I do apologize. I'm also writing some of this for my own verification or to cover someone else coming in; not making assumptions about your aptitude, I could be wrong with some of this.\nThe label + input interaction (clicking the label, interacts with the input) uses the for + id attributes on the two elements. The standards seem to try and cover this possibility by making the width of the input 100%; thereby, as you point out, putting the hit area over the label, not just the input.\nI would recommend changing this because it also negates the idea of adding a link to the label, like the use case I have for my own site where registering users must agree to the terms of service, which is linked to in the label:\n\nPutting width: auto on the checkbox/radio definition should do the trick (I haven't upgraded to the latest standards; so, mine is a little different:\n```css\n// Custom checkboxes\n[type=checkbox],\n[type=radio] {\n  // The actual input element is only visible to screen readers, because\n  // all visual styling is done via the label.\n  @include sr-only();\nwidth: auto;\n.lt-ie9 & {\n    border: 0;\n    float: left;\n    margin: 0.4em 0.4em 0 0;\n    position: static;\n    width: auto;\n  }\n}\n```\nThis does seem to be an odd user experience if I'm understanding the on-screen output properly. Maybe reconsider this user flow?\nThe general html pattern I use for checkboxes is something like the following:\nhtml\n<fieldset>\n  <legend class=\"usa-sr-only\">{label}</legend>\n  <span class=\"usa-error-label\">{error text}</span>\n  <span class=\"usa-hint\">{hint text}</span>\n  <ul>\n    <li>\n      <input type=\"checkbox\" name=\"input1[]\" id=\"input1\"><label for=\"input1\">{checkbox label}</label>\n    </li>\n  </ul>\n</fieldset>\nAt this point, you should be able to handle an error on form submission. Add hint text. Optionally display the legend and so on. From there, you can make it look however you like...including adding the links to the checkbox labels (which it sounds like you want to do).\nI'm still not certain what the output looks like (don't share if you can't). It may be a case of the .NET labeling system not being flexible enough in its output, as opposed to the standards not being flexible enough in its definition. (Note: I do not work for 18f.)\nIn other words, in the example HTML above, the only part that's necessary for styling purposes, according to the standards is the input and the label. Everything else is something I do in order to create a more generic pattern for form controls and semantic markup regarding a legend, the error and hint texts, and so on. Wrapping in the h2 obviously gave you something, but I'm not sure what.\nAre the standards the only CSS being applied?\nps.\nThe more generic pattern being:\nhtml\n<block-element>\n  <label or legend></label or legend>\n  <error-label></error-label>\n  <hint-label></hint-label>\n  <input(s)></input>\n</block-element>\nIf that makes sense. If not, look at the code sample from the text inputs: https://standards.usa.gov/components/form-controls/#text-input\n . I went ahead and made these, but for my program, it would probably easier if GSA did something there, you know?\nhttps://github.com/8fold/marked\nhttps://github.com/8fold/simplemde-markdown-editor. @maya: No worries.\nFor what's it worth, I wasn't thinking of the standards on this one. :)\nInstead, thinking Federal Government in general. GSA specifically as GSA IAE uses it. But the program may not feel comfortable taking it on. Might be something worth adding to the 18f suite of federal tech.. @colinalford-gsa: Nice. That's another reason I'm wary about JS being used for everything; especially data entry on the user side.\nGiven the Government's security requirements, the use of rich text editors for those who don't \"write code\", and the universal nature of plain text (a la Markdown) I really do think the Government would be well served (and maybe serve the greater community) by taking something like this on.. Heading down the demo trail as I get the opportunity to slow down and revisit my own style library... :)\nhttps://github.com/8fold/8fold-web-assets/blob/develop/config/gulp/stylesheets.js - gulp tasks\nhttps://github.com/8fold/8fold-web-assets/blob/develop/config/gulp/environmental.js - the method that actually does the find, replace, save.\nhttps://github.com/8fold/8fold-web-assets/blob/develop/src/stylesheets/components/_alerts.scss - not replace $usa variable prefixes at this time.\nhttps://github.com/8fold/8fold-web-assets/blob/develop/src/stylesheets/core/_variables.scss - now you can set a prefix variable in _variables.scss and have your namespace compiled into the final CSS.\nCompiled output:\n```css\n.ef-accordion-button[aria-expanded=false] {\n  background-image: url(\"../img/plus.png\");\n  background-image: url(\"../img/plus.svg\");\n  background-repeat: no-repeat;\n  background-size: 1.5rem;\n}\n.ef-alert {\n  background-color: #f1f1f1;\n  background-position: 2rem 2rem;\n  background-repeat: no-repeat;\n  background-size: 5.2rem;\n  padding-bottom: 1.4rem;\n  padding-left: 3rem;\n  padding-right: 2rem;\n  padding-top: 2rem;\n  position: relative;\n}\n.ef-alert::before {\n  background-color: #8b8b8b;\n  content: '';\n  height: 100%;\n  left: 0;\n  position: absolute;\n  top: 0;\n  width: 1rem;\n}\n```. No worries. It does seem to actually be working. Running into a couple places that are odd.\n\nThere is at least one JS reference to a class without the PREFIX; not sure why given the surrounding code uses it.\nThere are some mixins that are still namespaced. Not sure if that's because of collision with Bourbon or for some other reason. Mixins don't use variable replace.\n\nThose are the only ones I'm running into so far. But it allows for an interesting stacked approach to extensibility.\n```bash\n- /resources\n  - /sass\n    - /components\n      - _framework-navigation.scss (can import MY_CUSTOM_STYLE_LIBRARY\n\n/MY_CUSTOM_STYLE_LIBRARY\n\n/sass\n\n/components\n_navigation.scss (can import USWDS)\n\n\n\n/USWDS (you know this)\n```\n\n\nThis setup is allowing me to let the uswds be the universal and generic foundation. Then I can extend it and make a library that's available for others, but a little more specific. Then I can take that library into my actual project to be completely concrete. And, as time marches on, I might be able to cut away from parts of the uswds or the custom library.\nGiven the mission of the package, I think it fits; could be wrong.. I actually appreciate the change with primary and secondary (was already using them that way. The specific change I appreciate is the separation between intent (function) and straight color (see variables).\nThough I am considering a button class in my extension:\n\nusa-button-destructive\n(and possibly, though not likely) usa-button-destructive-outline\n\nThen the style and naming make sense from a UX perspective. \n\nPrimary action.\nSecondary action.\nDestructive action.\n\nCould translate to:\n\nSave.\nCancel.\nDelete.\n\nRespectively.\nDidn\u2019t even know about usa-button-red - thanks for that.\n. That's fair. Think I come from the school that colors should be named colors. :)\nGiven the changes to the variables.scss separating the functional names from the color names - and having the functional names reference the color names I wouldn't be surprised if 2.0 saw the functional color name become deprecated entirely; thereby, having the palette be divided between primary, secondary (and possibly tertiary). . I ran into a similar issue when trying to use the fill color on the SVG concept. I am starting to think it may just not be necessary (see other thread with @thisisdano, at least I think that's who it was).\nWhen the web was new we really needed to orient users to what was going on and what was going to happen; now, I'm not so sure. Every link in Facebook (and many others), for example, go to different sites and open in a new tab/window. Makes sense given that you may want to like or comment on the position you were in within the feed. Back in the day opening new tabs/windows was also frowned upon because users would get lost - \"I thought I was in this window, but I wasn't\". Doesn't seem like that's the case too much anymore. I think Wikipedia still does it because it's the default format for their Markdown parser with footnotes.. That caption element is also slightly different than the thead element in that it mimics the purpose of a figure caption, only for tables. Of course, we could debate on the justification of text for a figure caption as well. ;). Hey @maya. Mostly a recommendation. When I posted this I believe there were two folders - elements and components. In a way that makes sense because elements were usually closer to being for a single HTML element while components were more complex; however, it was difficult for me to remember where the form controls (input, date, etc.) were.\nSo, was just thinking calling form controls out by putting them in their own folder might be beneficial:\n/components\n/elements\n/form-controls\n. Interesting. Mainly just frustrating in some cases. Think even if all the form-related things were in the /components folder might be less confusing.\nTell me about the future plans! ;)\nTotally close-able without hurting my feelings...don\u2019t want to myself in case that was an opening for more conversation from others.. Agreed. Very legaleze in this space. Law, policy, standard, and guideline all carry different weight. I actually appreciated that when I saw more use of the word \"system\" as the final \"s\". As that's really what we're talking about anyway.\nIf you don't use the HTML patterns, the styles, and JS in combination it doesn't work the same...at least not compared to the examples. It does work, that's kinda the point of using progressive enhancement, yeah?\nSo, yeah, my two cents (skimming through), just toggle the standards for a system, you're good. Probably the whole point of this and the other conversations mentioned. :)\nSystem: a set of things working together as parts of a mechanism or an interconnecting network. Computing a group of related hardware units or programs or both, especially when dedicated to a single application.\nps. Laws, policies, standards, and guidelines do inform the system.\n . Hey @maya: The version the program (I'm back on) I'm on was still using 0.13.1...having said that, I see it in the devDependencies of the package.json file on master right now. \nCurious why that's the case.. @Maya and @donjo: Here's an interesting integration we just put on another project I maintain. Having actually put it into practice but I like the idea of it: https://github.com/apps/wip. Anytime @maya \nhttps://github.com/chjj/marked/issues/999#issuecomment-356060385\nAccording to this comment on marked - ESLint has an option??. https://tailwindcss.com. @carlosvalle . Hey @donjo, fair questions.\nBack in the day there was a decision made by the USWDS to remove the secondary UI components from the component (#1076). We decided to hide those using some webkit- styles, I think (??). Was just letting everyone know that it's back.. Can a page have more than one main? Thought this was going to use the summary + details.. Oh! My bad @Maya - was looking at this on my phone - thought each accordion was a main for some reason. I dig it. \nIn case you didn't see this conversation before - not sure if there's anything that might change anything here: https://github.com/uswds/uswds/issues/1136. I feel like we\u2019ve been here before, but I missed where we went a different route. Seriously getting a sense of de ja vu.\nThe JS used to run on load to set aria-hidden to true, which handles the accordions expanded by default thing, because they would collapse when JS ran...think I actually did a PR for something related to it; could be wrong.\nThen @maya and I played a PR iteration dance that was fun related to an aria-hidden thing.\nGlad to the div and list go away and trying to get back to possibly a more simplified implementation.. Yeah? \nSo weird. Check this file...and related things (including CSS): https://github.com/joshbruce/web-design-standards/blob/staging/src/js/components/accordion.js\nFor the CSS, check PR history. Their was like three of us involved. A user with\u201dduck\u201d in his handle is coming to mind.\nAnd all the conversation re aria-hidden and how it shouldn\u2019t be associated with CSS - specifically display: none.. Feels like JS maybe started expanding a bit more than it maybe needed to (compared to progressive enhancement)?? \nBut I wasn\u2019t paying attention to the conversations that got that going...this general trend on the web is partially the inspiration behind: https://m.8fold.pub/on-constraints-internet-bandwidth-eab05c20e218?source=linkShare-f4442260749b-1518840173 - shameless plug...a little sorry about that.. https://caniuse.com/#feat=css-variables\nhttps://stackoverflow.com/questions/46429937/ie11-does-a-polyfill-script-exist-for-css-variables\nI'm starting to consider switching over to CSS variables to reduce dependency on Sass going forward. IE11, of course, is the problem child.. Same in Chrome. Similar in FF\n\n. Ended up prefixing.\ncss\nselect {\n    appearance: none;\n    -webkit-appearance: none;\n    -moz-appearance: none;\n    background: #ffffff;\n    background-image: url(\"../img/arrow-both.svg\");\n    background-position: right 1.3rem center;\n    background-repeat: no-repeat;\n    background-size: 1rem;  \n}. @hursey013: Yes. It was happening on the 8fold site. Only referenced the DS site because it was there as well. What are you using to add the prefixes? Believe Bourbon is deprecating their implementations and asking folks to use packages specifically designed for that purpose.. Would definitely help me out as I started using CSS Grid and therefore no longer use the grid from the USWDS.. Committed.\n@kategarklavs - I didn't write the sentences related to browser support; so, not really sure what to do with the \"ending the first sentence with...\" piece. Maybe @rogeruiz can help me out?\n. Done, I think. :)\n. done\n. Date input is a little tricky due to legend default styling. Could remove the first variation in favor of a consistent typography across all label-like concepts. Without the field-set class, the default is used, with it, the legend takes on the properties of a label.\n. Thanks @msecret! \nI thought that's where we were going with gulp.\nWould the gulpfile.js found here help inform the fix you are looking to make with the gulp build? (https://github.com/BrianGilmanGSA/sam-web-design-standards)\nRight now I cannot run a gulp build (see #1148) - I can only do $ ./go serve to confirm the changes, which doesn't update the /docs. If you could help me out on that score, I would be more than happy to make changes and resubmit along with using the /src directory for future PRs.\nThanks again.\n. Sorry, meant the website.js file: https://github.com/BrianGilmanGSA/sam-web-design-standards/blob/gh-pages/config/gulp/website.js\nNote: There are changes to the other /config/gulp files as well to separate out the /src from the /scss for the Jekyll build.\n. I'm going to clone directly from the 18f repo instead of my fork - just to make sure.\n1. Cloned 18f/web-desing-standards\n2. $ cd ~/path/to/repo\n3. Completed\n4. Ran bundle update\n5. Completed\n6. Ran npm update\n7. Completed\n8. Ran $ gulp website:serve\n9. Halted with: jekyll 3.1.3 | Error: File to import not found or unreadable: lib/bourbon. Load path: /path/to/repo/docs/_scss on line 3\nIt appears /src/stylesheets/lib no longer exists: https://github.com/18F/web-design-standards/tree/18f-pages-staging/src/stylesheets\nOn the initial clone, /docs/_scss/lib does exist: https://github.com/18F/web-design-standards/tree/18f-pages-staging/docs/_scss\nWhen $ gulp website:serve removes /docs/_scss the /docs/_scss/lib directory is removed and not replaced.\nLet me know if you experience something different - or, of course, if I'm doing this incorrectly.\n. Fascinating.\nStill needed the $ bundle update - just in case that shouldn't be necessary.\nCan you point me to why install versus update makes the difference?\nReading the Terminal didn't seem much different.\n. @msecret - Sorry, should have been more explicit.\nYes. The build completed.\nI'm not sure what difference there was, but it was enough for /src/stylesheets/lib To appear. Not sure why though, as I thought install and update only effected the /node_modules directory.\n. @msecret - Just a quick follow up - I'm a curious soul - sorry for blowing up your inbox. Wanted to show some screenshots to isolate when it happens.\nBefore $ npm install\n\nAfter $ npm install\n\nThe point at which the /src/stylesheets/lib directory appeared.\n\nLooks like $ npm update does not run the $ gulp copy-vendor-sass - from the npm prestart (??), which makes sense. To test that hypothesis - I did the following.\n1. $ bundle update - to avoid the kramdown error (must be done prior to $ npm start).\n2. $ npm update\n3. $ npm start\nIt worked. Which makes sense as calling $ gulp website:serve does not appear to call $ gulp copy-vendor-sass. If the goal is to not call gulp directly - then it works as expected.\n. Commenting via email reply.\nGetting booted every time I try to sign in.\nAlso, every time I try to update the PR via branch commit - the PR is not updated.(https://github.com/edx/edx-platform/wiki/How-to-Rebase-a-Pull-Request https://github.com/edx/edx-platform/wiki/How-to-Rebase-a-Pull-Request). This was the same workflow used for the aria-hidden PR we did for #1160 (https://github.com/18F/web-design-standards/pull/1160). So, I\u2019m wondering if, for some reason, the inline notes are causing an issue somehow. Or, if it is strictly a problem with sessioning - and the service problems they are experiencing: https://status.github.com\nAnyway. Have the changes made. They are queued. Now, we wait, I suppose.\n\nOn May 23, 2016, at 10:54 AM, Kate Garklavs notifications@github.com wrote:\nIn docs/pages/getting-started.html https://github.com/18F/web-design-standards/pull/1184#discussion_r64236503:\n\n@@ -52,6 +52,12 @@ For developers\nThe standards are designed to support both older and newer browsers through progressive enhancement, and officially support Internet Explorer 9 and up, and the latest versions of Chrome, Firefox, and Safari. Internet Explorer 8 and below generally see very low usage today, and most agency websites should be able to safely begin support at Internet Explorer 9.\n+Progressive enhancement:\n+\n+Progressive enhancement is a web design and development strategy emphasizing accessibility through semantic HTML markup. Semantic HTML allows older browsers to present the content of a document to users. The semantic markup is layered with external technologies to enhance the user experience (specifically, CSS and JavaScript), without necessarily effecting the underlying funcitonality of the document and site.\nAlso! Noticed that functionality is misspelled \u2014 please update!\n\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly or view it on GitHub https://github.com/18F/web-design-standards/pull/1184/files/a754fd75d31c84c48e82a6d67823100392c7968e#r64236503\n. @msecret - Interesting suggestion. I'm not sure I'm seeing the utility solution that you might be. If we make a mixin for display: none, wouldn't we still need to @include it somewhere that distinguishes the two states? \n\n@maya - Seems an interesting alternative. After looking at the JavaScript for the Frend accordion, it appears, to overcome setting height: 0 by calculating heights for the expanded accordions - might need to test and verify. If so, it would be more JavaScript dependence to make the accordions expand (#1121 & #1122) - unlike the display: block route. See lines 90 through 122.\n. @maya - Saw that. It's  good solution. Incorporated it here. Also tested just doing height: auto, which did work - no JS changes needed. I do like the height solution from the screen-reader perspective - though I'm not sure if visibility: hidden would cause it to be skipped. Which brings up the question: Do we want accordion content to be hidden from screen-readers?\n. @msecret & @maya - I think having it as a mixin also establishes a pattern of how to handle display: none related specifically to accessibility considerations - similar to the unstyled-list mixin.\nI don't think this particular pattern is used with any other UI component. I think the problem we were trying to solve initially was that aria-hidden shouldn't display: none on elements that use that attribute setting. @maya's simple solution solves this problem and limits its scope to the accordion-content class. This PR extends the flexibility of that implementation, which may be a pre-optimization (capability with no demand from developers, internal nor external)...??\n. @kategarklavs & @shawnbot - \"aria-expaded\" shouldn't that be \"aria-expanded\"\n. Hmmmm...either way is fine for me. \nThe initial reason - specifically for the hit area one is actually because, according to the CSS coding style, I couldn't put width and height next to each other alphabetically. The other two came about just to further separate the static values from the implementation - OOP-style.\nAgain, I'm fine for whichever.\n. I'm not quite sure how this one lands for me...given that the current setup cannot be used without usa-social_link. This change would make it:\n<a class=\"usa-social_link usa-link-facebook\" href=\"#\">\n  <span>Facebook</span>\n</a>\nHaving the .usa-link-facebook piece makes me think we are driving toward a Sass extension:\n```\n.usa-social_link {\n  ...\n  span {\n    @include sr-only(); // At least I think that's what the comment about using the @mixin was driving at\n  }\n}\n.usa-link-facebook {\n  @extend .usa-social_link\n  ...\n}\n```\nThis would give us HTMl like this:\n<a class=\"usa-link-facebook\" href=\"#\">\n  <span>Facebook</span>\n</a>\nAdmittedly cleaner than the current PR, requires less global knowledge of the Sass, and easily extensible - even with a multiple class solution using .usa-social_link in conjunction with another - or extending it via Sass. The name does seem to imply there is a .usa-link somewhere - is there?\nThoughts?\n. Not really. Will change.\n. I'm not sure I'm following. Would this establish Facebook as being a \"default\" social link - then the others as add-ons?\nI believe this is moot if we decide to go with the suggestion of using @extend from the comment in footers.md, because it would separate the rules entirely.\n. @maya - I'm not sure why the blank line is not showing in the diff...? I added periods to the comments in order to get this commit to work. My file shows 350 line long.\nThoughts?\n. @msecret - I may not be following here. Can you give me a specific example of verbiage?\n. Interesting, I believe we have hit a knowledge gap for me with regard to Node. It sounds like there are three possibilities:\n1. Something I did not know existed nvm - and don't know how to write to that without a reference to what it is and how it works with Terminal/Shell.\n2. Terminal/Shell + sudo to make global.\n3. Terminal/Shell without sudo: https://github.com/sindresorhus/guides/blob/master/npm-global-without-sudo.md\nSound about right to you? \n. ",
    "jpdevries": "\nI feel like font based solution like Font Awesome offers the most efficient method of loading icons\n\nWell usually with Font Awesome you are loading 600+ icons even if you need to use two. Yes you can use IcoMoon to create a web font with just what you need, but not many people do. I think an SVG implementation and/or SVG <use> would be the most efficient. \nFontAwesome is moving towards supporting SVG icons natively! But there are ways to use build tools like Grunt to create your own SVG sprites of SVG icons (Font Awesome or any other) today\nhttps://markup.tips/projects/grunting-icons-into-svg-sprites.html. I've been doing some research on SVG icons vs icon fonts in https://github.com/tootsuite/mastodon/issues/1469#issue-220749234\nThere's some browser stats and Pros and Cons there. \nTL;DR\n - SVG has better browser support than font face\n - SVG is more accessible for user agents that may change the font(s) of the page. ",
    "ostranme": "Have you considered govicons (http://govicons.io/)? I've tried to align this with fontawesome as much as possible but making it specific to government themed icons.. :+1: for continuing the discussion on Angular. We like the 18F Web Standards and are currently trying to implement into a project of ours. Looping back into the convo above, do you see some kind of Angular UI components being built anytime soon? I'd be nice to have some kind of Angular directives/components for the web standards.\n. Another shameless plug for http://govicons.io/. Might be worth considering as an option.. ",
    "yowill": "CFPB has a set too that's neato: https://cfpb.github.io/design-manual/brand-guidelines/minicons. Fixed in 1.2!. @lauraponce Check this out!. Adding all components to Marigold\n. Done!. @kategarklavs Hey Kate, this hasn't been updated in a while so I just wanted to check in, is this completed for the current launch of 1.0 in the next 2-3 sprints? (I'm trying to clean up the \"sprint 1\" items that are still hanging.) If we need to keep it open, is there an artifact or document for the comms plan you that can be posted here for future referal?\n. Marco created these subtasks related to this issue: \nhttps://github.com/18F/web-design-standards/issues/891\nhttps://github.com/18F/web-design-standards/issues/1071\nhttps://github.com/18F/web-design-standards/issues/1162\nHe'd like to do some research and discuss with the devs what are the bounds of what we'll refactor, and since that isn't clearly scoped and we're behind on Sprint 3, we're going to move all of this to Sprint 4. In the meantime, he's going to do a little research, make a recommendation to the Devs for discussion and next Tuesday we'll have clearer (and smaller) tasks to knock out. :)\n. @shawnbot Okie dokie, that sounds like a good thing to discuss in the future, but it's not in the current sprint. Let's finish our tasks for St. Patrick's Day and look at this for next Sprint.\n. Closing! \n. GOOD ENOUGH TO SHIP FOR 1.0!\n. Talked to Yuda for his feedback on getting this into 1.0: We're going to make this part of our workflow going forward on components we modify/update and for new components. In the future we can do a full audit, but until then we'll close this. \n. Console warning is a nice to have, maybe in the future, but for shipping 1.0, we'll close this.\n. Closing and new issue for post-research discussion will be created by @donjo !\n. If y'all think it's part of the natural progression of steps to get the Split Repo finished, let's knock it out\n. @juliaelman and @shawnbot Breaking this up a little more into sprint accomplishable tasks\n. They moved it to a week later, moving to next sprint. yup!. @bradnunnally breaking this up a little more into sprint-accomplishable tasks\n. #5 on the (forthcoming) OMB web policy memo can help fuel/incentivize the need for elevated mobile focus [link removed by @shawnbot]\n. Collecting things here: https://docs.google.com/a/gsa.gov/document/d/1ap-mHfBswXfCoSVygYpH11Gm2JoKm20WHbk7PWUziho/edit?usp=sharing\n. Added to the Wiki! https://github.com/18F/web-design-standards/wiki/Web-Design-Standards-wins. Angela drafting fcsf funding proposal, discussing today, sending up the flagpole asap.\n. Proposal sent to Yuda, Slack, Nico and Lane. They're all working different angles to see what might be possible.\n. Have a meeting with Rob coming to be lined up, Slack investigating options too. This task post- Dave meeting is complete though.. Can we re-ping them now that we are after the holiday? . Sweet! Thanks!\n. Draft: https://docs.google.com/document/d/1ar-9ZIaFl4i9uxXfkGuotzztfIV6ksCUjP4luz_dtqU/edit\n. @bradnunnally Would the \"wins\" documentation go under \"about\" or where do you think that would be best placed?\n. Thank you for your interest and contributing to the Draft U.S. Web Design Standards! We have received notification of your contribution and will add it to our backlog for future feature consideration.\n. Done! http://recordit.co/rvLtAL8aDg\n. Hey @shawnbot, do you know roughly how many hours this would take?\n. Not gonna do it!. Brainstorming Notes https://docs.google.com/a/gsa.gov/document/d/1K2UjquNZjl_acJ3VSIlOyRxBekhcX5Fz0VfVu8DDlK8/edit?usp=sharing. Let's try to get this all locked down and booked this week! Ideally today for some of the bigger things like the house rental if possible?. Lane and Angela are booked today too. All set.. Closing since it's go time! Great job!. Draft here for team review:\nhttps://docs.google.com/document/d/1tJUEa_tyhHl2n5mZk8xO59s-WOe4t8ht2yBqkpz_Vsg/edit#. Updated on staging, all links pointing to this now: https://standards.usa.gov/about-our-work/product-roadmap/. That was easy!. Assigning @juliaelman, I think we talked about how we want to do this out of the USAgov tutorial, I can help set up the live streaming/recording, we can do it live with them or record it separately before or after. Or record it before, they play it to them and see what they think? Lemme know which you'd prefer.. Added some notes to clarify things a little more for folks who might not use github regularly, overall it looks great!. @acolter This looks good! Can you take a look at the previous guidelines and tracking spreadsheet and see how we might integrate and update that into a cohesive and streamlined community strategy for responding and tracking feedback? Especially if you could propose a workflow and ownership -- I think we'd talked about having someone 'on point' for a week or two owning the communications or at least being a traffic cop for tracking and responding? Maybe we make that a two week stint that rotates to help spread the work around and set the cadence with the sprint assignments.. Sent Friday!. Moving to Q2 since this is blocked and out of our hands. :(. Finished! https://docs.google.com/presentation/d/168kCyOAy4z_yYQ7BhDVkZZDbYvf9BoVmiFphKavHP54/edit#slide=id.p  \nhttps://docs.google.com/document/d/1_ZRJ0jQwRpphH-Lg-W34coTkQzNsVzJQ9K7KeBZg3u8/edit. Web council presentation is now limited to 20 minutes (as you probably saw by the email) and slides should be added to this Google Doc: https://docs.google.com/presentation/u/2/d/1tSRO99p2V1GUbycZNIVJTo4oBycoogR_lXoOhjNgf2c/edit?usp=sharing_eixpa_np&ts=58821cd7. All done! Great work. . @bradnunnally Please run it through outreach if you can.. This task should sync or maybe be done by whomever does this task: https://github.com/18F/web-design-standards/issues/1675. Draft for team feedback: https://docs.google.com/a/gsa.gov/document/d/1o4oIdCYQ1a514Kr1l1UVF1IUi0fqj6Mg8GMMloZf-mE/edit?usp=sharing\n. Action items out of the other one, this is done. This task should sync or maybe be done by whomever does this task: https://github.com/18F/web-design-standards/issues/1671. Draft for team feedback here: \nhttps://docs.google.com/a/gsa.gov/document/d/1o4oIdCYQ1a514Kr1l1UVF1IUi0fqj6Mg8GMMloZf-mE/edit?usp=sharing. Done!. @bradnunnally already rocking out here: https://drive.google.com/drive/u/2/folders/0B0PiNB9rY3lfcmM3NDdmRENNZHc. Sounds good, @bradnunnally! Depending on what's on the \"Intro\" page (there's currently 2 sentences on that page), I might say we should just post the videos there since there will only be 2-3 at this moment and they're an easy, non-technical way to get involved quickly and prominently (and not under a sidebar, 2 navigation structures deep): \nThese also need a home somewhere in this structure (from the list above), if you can update where you think they should be placed that would be awesome (most of them are just links over to other resources, but they are frequent resources we site or get asked about): \n- Add a link to the Github milestones or issues for a more granular view of the work\n- WDS Public slack channel (questions and community support):\nhttps://chat.18f.gov\n- WDS Wordpress theme from Broadcasting Board of Governors' open sourced:\nhttps://github.com/BBGInnovate/bbgRedesign\n- WDS Drupal theme created a while ago from an 18F colleague (not recently updated, but a start if you're looking for one):\nhttps://github.com/18F/web-design-standards-drupal\n- Sites using WDS (that we know of):\nhttps://github.com/18F/web-design-standards/blob/staging/WHO_IS_USING_USWDS.md. Follow up sent! \n. Cleaned up and ready to go forward. . Boomshakalaka! https://github.com/18F/staffing-and-resources/issues/302\n. (moved back a sprint because of rescheduling). Draft here: https://docs.google.com/document/d/14bCOn_rKrnXejVOVoCnMWDCRprqBP6D9DLlNnRWaUFk/edit\n. Included in the comms plan, shipped up the chain for approval :crossed_fingers: : https://docs.google.com/document/d/1tFgMM3n8Xv3Vzryct6wHsLO3-J9aY6bx64XFQNitBP4/edit#. Marco, the last piece of the puzzle is being confirmed today. I think this is done as it can be.. Yea, sounds good. Plan is in place, early March WDS support will begin, capacity is still a bit tbd, but we'll do our best as always. Here's notes and more info about the engagement https://docs.google.com/document/d/1wE7kKsBcTx69Q741Sbwwq0LmB0sgTDXrkeMINWlwx9k/edit\n. DONE!. Doh, forgot to run the message by the team but it shipped and is getting results! \n. Sent!. Ideally if we can make this a group call for the team I think that would be best @lauraponce and it might be tough to get everyone in a room at the same time so we should try to book this as soon as possible. DONE! https://docs.google.com/document/d/1gtuY96eq-JhNwZCusenWFcckQJWodCUKOtlcID2iGts/edit. Pinged with details. Done!. Done in #2131 . Sent!. I think we have completed this as of Tuesday, closing!. @msecret Can you post a link to the content in a google doc here so we can get this copy edited and posted? CC @AndreaSigz . https://docs.google.com/document/u/1/d/19nb9CG9j49KRfdY6fJlV8HzEdli2K7X6MmCzvCBa4dY/edit# cc @AndreaSigz can you give this a peep for launguage/editing?\n. I think #2 sounds like the better of the two options. We should integrate it into our Design principles by name too and maybe link over when we launch.. Done!. Already made an issue for this.. derp.. Deck and presentation prepared here: https://docs.google.com/presentation/d/1aXNTK2a5CrfIwpcejxprm-IL8SIIYEjJZOlaMg3r480/edit#slide=id.g1de9a1d4da_0_349 Will be shared with AP for feedback and next steps next sprint.. @AndreaSigz Sure, I think the general theme is what are the big wins or value delivered from this project, especially anecdotal work (I think our Q&As/case studies have some interesting info that could be used for this). This would be for Rob and GSA comms to help spread to inform more people about the WDS and the value/savings for the country. . All set on this send up the chain. . @bradnunnally This task was for usa.gov actually, but we do have one in for USAJobs too next sprint. https://github.com/18F/web-design-standards/issues/1843  If one is available before the other we can swap the sprints tasks since they're both about the same amount of effort.. @bradnunnally Did this ever get started/interviewed?. Will pinged Steve in Slack, he's interested and checking with his folks if it would be possible\n. Done!. Finally got some quiet time! Draft here:\nhttps://docs.google.com/document/d/1EDpC9Ctedz-UsXSvkHtcwIy_vLUpj3vNsNEZLr-mQ_U/edit\ncc @AndreaSigz . Forgot to post, Sent to Comms!. Finished last week!. All done!. Done!. With them for review! . Remove from other places on the site if any exist\n. Done!. Done!. Finished!. Done. https://www.youtube.com/channel/UC0Qdj2gXMkcGu56UbhMcjcQ. Done! Great job!. Just caught up reading all this -- this seems solid. Let's do it.. Done. Done!. ",
    "shawnbot": "I'm solidly in the SVG camp. Here are a few good write-ups to consider:\n\nInline SVG vs. icon fonts [CAGEMATCH]\nSeriously, don't use icon fonts\nTen reasons we [Lonely Planet] switched from an icon font to SVG. I'm putting this back on our radar because I think that I've found a solution, but I want to talk about it with the rest of y'all.\n\nYou can see that in this prototype that #1836 introduces support for aria-multiselectable=\"true\" on accordions (see screenshot below), which allows multiple sections to remain open at the same time. This is an opt-in feature, so it wouldn't necessitate bumping to v2.0.\n\n. @jeremiak I move to close this in favor of #767\n. Oof, confirmed after about a half an hour of hacking: I don't think that there's a reliable way to do this. Chrome's (WebKit / Blink) user agent stylesheets do some funky stuff with select:-webkit-autofill that doesn't appear to be easy to override. Specifically, the background-image is being nullified and/or clobbered by one or more user agent styles.\nI'm going to close this for now, but if anyone finds a solution we're all ears!. Actually, I'm going to keep it open and move it to the backlog.. I'm pretty sure that this is no longer valid because we ditched the performance sidebar a while ago.. I'm really interested in this, and I'm wondering if you all could weigh in on what point in the build process you'd like to be able to do this. Having a Sass variable might look something like this:\n``` sass\n// in _variables.scss\n$namespace: 'usa' !default;\n// later...\n.#{$namespace}-accordion {\n}\n```\nI'm not sure if $namespace is descriptive enough, or if we want to call it $class-namespace or something else. Thoughts?\nAlternatively, we could make a postcss plugin that you could incorporate into your build process and (essentially) replace every instance of .usa- with a namespace of your choosing. (IMO, this would be preferable to a brute-force search-and-replace.)\nOr are there other points in the integration (or different ways entirely) that you all would like to be able to do this?\n. I was reminded in #1834 that custom prefixes will also need to be incorporated into JavaScript builds for this to work. I started fleshing out this idea in #1836 with PREFIX constants in each of the component scripts. Instead, we could have a single module that defines the prefix like so:\n```js\n// component.js\nconst PREFIX = require('./prefix');\n// prefix.js\nmodule.exports = process.env.USA_PREFIX || 'usa-';\n```\nThen we could bake it into the browser bundle with envify:\njs\nbrowserify -t [ envify --USA_PREFIX='usa-' ] ...\nAnother way to do it would be to expose a CommonJS configuration object that could be changed in a browser bundle, e.g.\n```js\n// uswds/config.js\nmodule.exports = {\n  PREFIX: 'usa-',\n};\n// custom bundle\nrequire('uswds/config').PREFIX = 'oig-';\nrequire('uswds');\n```\nYou could even combine the two approaches. Anyway, food for thought!. Looks good! :shipit: \n. :boom: \n. Hmmm yeah, that's a funky focus ring. Not sure how to fix that. :(\n. See #723.\n. Thanks, @carodew. Hey @msecret, what do you think?\n. OK, so I'm going to rewind this back to just having optimized SVGs and I'll let @msecret and @jeremiak tackle this in #767.\n. @msecret I've still got the commits (one each for the Makefile and the package.json) locally, so let me know if you want one or the other.\n. Yep, automating it should definitely be a thing. The Makefile looked like:\n``` make\nbin ?= ./node_modules/.bin\nsvgo ?= $(bin)/svgo\nall: \\\n    optimize-svg\noptimize-svg:\n    $(svgo) -f assets/img\n    $(svgo) -f assets/img/social-icons/svg\n.PHONY: optimize-svg\n```\n. @msecret we should also consider Webpack. It's pretty straightforward to configure for multiple output files, e.g. one per component and another for all of them.\n. Hey no worries! I don't think that SVG precludes designers opening the files, since both Illustrator and Sketch can open them. Maybe that's something to surface in research: Would designers feel comfortable opening an SVG in Illustrator or Sketch and saving it out in the native format?\n. I'm upgrading the priority for this one because we need to be able to measure performance before we start trying to improve it.. Okay, so after a bit of research, I think there are a bunch of tasks to stub out in separate issues for this one. As I write this, I'm thinking that we probably won't get all of this done in a single sprint.\n\n[x] Survey existing measurement tools #1757\n[ ] Decide which metrics to measure #1784 \n[ ] Decide which tool(s) to use #1785 \n[x] Get this repo to generate testable HTML files, and possibly to publish them somewhere public (Federalist) that they can be tested by services such as Google PageSpeed Insights #1749 \n[ ] Get reporting working on our CI service with the chosen tool(s) #1786 \n[ ] Figure out how to track variance (e.g. between scores on a given branch and master, which is how our code coverage tracking works), where reports \"live\" that they can be compared (CI build artifacts?), etc.\n[ ] Decide if, and under which conditions, a variance fails a CI build (e.g. if the Google PageSpeed Insights score goes down by 5 points or more, or if the [YSlow] grade drops)\n[ ] Run through the process a couple of times to test and validate it\n\nBefore I go and start filing issues, does anyone have any thoughts? Are these tasks too granular, or not granular enough? @msecret @lauraponce @juliaelman @yowill \nAlso, I have a lot more written down about tools, but I didn't want to dump it all here.\n[YSlow]: http://yslow.org/. Okay, and with #1791 all of the sub-tasks from the above comment have been broken out. We're going to close this issue and move forward with the more granular ones. \u270c\ufe0f . :tada: \n. Hey @edwelker and @toolness, would you mind looking at 18F/web-design-standards-docs#98 and offering any input there? Here's a screenshot, since we don't have public previews anywhere: \n\nDoes this meet your needs? I'm going to be away on vacation until January 2nd, but one of my fine teammates can like scrub in and rework if necessary. Thank you!. Happy new year, everyone! We're still waiting for our funding paperwork to go through, but if anyone has input on this we'd love to collect it now so that we can close this out as soon as the ink dries.. This is definitely one to look into for #1534.\n. I think that's a great call, @line47. We could be even more explicit and list it as $color-primary.. This might also be a good candidate for addressing in #1534.\n. cc #1534\n. FYI, I fleshed out a proposal for the sortable table in #1643. We've ditched jQuery recently, so DataTables as a specific solution seems less appropriate. A solid stepping stone to offering our own component would be well-researched 3rd party library recommendations (as we've done with Politespace for zip code masking on the address form), and I would happily suggest DataTables for folks who use jQuery elsewhere. I'd also like to recommend vanilla JS solutions, though; if you know of any, feel free to mention them in #1643.\nRe: data downloads, I could see describing download controls as a table-related pattern like our form templates, rather than a separate \"component\". If that's still useful to any of you, feel free to open up another issue with some more specific information about your needs.\nData visualization, though right up my alley, is a much bigger category of feature that I don't think we're ready to tackle yet. (For more context, check out our product roadmap.) @DruidSmith, @jhfrench, and others: if you have time, we'd love to hear about your more specific visualization needs in new issues. In the meantime, I'm going to close this one.. I'm going to move this and #1528 out of our sprint backlog for now. We need to get our measurement house in order before we start making changes like this, which will also necessitate a jump to 2.0 because it'd be a major change on the HTML side.. I'm not too concerned about the performance on load until there are hundreds of accordions on a single page, in which case I'd suggest that the author consider restructuring their content. \ud83d\ude09 \n. FYI, I'm working on incorporating the stylelint work that y'all have done into the split repo work that @juliaelman started. Mostly I've just nixed all of the scss-lint references and replaced them with  stylelint, but one important thing to note is that I've had to disable the stylelint prerequisite to the sass gulp task because it fails (there are a lot of linting errors). I've also removed the linting task from the test script so that the linting errors don't fail the CI build.\nI think it's best to push off fixing the linting errors to another issue and reincorporate the linting steps into the build and test scripts once they're working again. Thoughts, anyone?\n. I think it's actually worth either re-opening this issue or creating a new one. Any preferences?\n. Okay, reopening!\n. Oh, and I also updated the tables documentation to use double-quoted attributes, for consistency. \ud83d\ude2c \n. cc #1121\n. :tada:\n. I've addressed the duplicate ids in the \"Code\" and \"Documentation\" collapsibles in #1224 by setting the former's id to code (instead of collapsible-0).\n. @juliaelman I'm sorry for not being 100% clear about this. There are still lots of duplicate ids on some pages. I've only fixed the issue on the accordion docs page.\n. Thanks for the detailed assessment, @joshbruce! Glad to hear that there aren't that many left to fix.\n. This is the best I can do: \ud83d\udc49 \ud83c\udfa9 \n. Personally, I prefer id first because it makes it easier (for me, anyway) to scan the HTML and understand at a glance which elements are \"important\"\u2014assuming that elements with an id are more \"important\" than those without. I'm happy to go with whatever convention y'all decide on, though!\n. There are no longer any duplicate ids on accordions, but there are on form controls.. This was fixed in 18F/web-design-standards-docs#279.. I'd like to include this in #1534 as well.\n. Flexbox is indeed the future, but as long as we need to support IE, we won't be able to use it because no version of IE supports it fully (at least, not without lots of bugs). Of course, if there are workarounds for the known bugs, I'd be happy to consider ditching Neat v1's grid altogether and either using an existing, flexbox-based system or even building our own.\nThe other option is to upgrade to Neat v2, which uses calc() extensively, and which keeps it basically compatible with IE9+. (IE8 will have problems, but that's already the case for us right now.)\nWhat do you all think?\n. Thanks so much for the offer @whmii, and for your input @Drakenhart. Let's move the Neat 2.0 discussion to #1555. \ud83c\udf7b \n. I like this approach a lot. FWIW, I think that the inline SVGs could have been sized in CSS and the <image> elements given width=\"100%\" height=\"100%\" to solve the redundant dimensions issue. This approach is even cleaner, though, and requires a lot less markup for users to implement, which is always a good thing.\n. Woohoo, thanks @joshbruce!\n. @juliaelman I wonder if there's a good way to automate syncing the github releases so we don't have to copy-paste these?. \ud83d\udc4f \n. Horizontal nav might be a better name for the common pattern in our \"primary\" and \"secondary\" header navigation lists. cc #1596. @jasonkaedingICE yeah, I'm actually thinking more in more general design terms: is there a name for the pattern that dictates how these nav elements behave? Or is \"horizontal\" a bad term because it implies a specific display that isn't even applicable on smaller screens?. See also: #1596. @yowill I'd like to propose reprioritizing this effort for one of our upcoming sprints.\nI've spoken with several 18F colleagues recently who have either begrudgingly used the Standards or avoided them altogether, and what I've heard is that:\n\nThe CSS is difficult to customize or override.\nThe HTML is unwieldy, and modifications that don't require corresponding CSS customizations are not well documented, if at all.\nMany components are tightly coupled with seemingly unrelated style rules. For instance, our typography styles influence the appearance of every component, in ways that can sometimes be difficult to disentangle.\n\nI think there's a strong case to made for modularizing our components into individually packaged (or, at least, package-able) CSS, JS, and HTML templates. This would make the system easier to adopt, and would make it easier for us to test components in isolation. I can suggest some folks to interview if we want to get more details.. My proposal for incorporating this into Jelly Bean Sprint is to first catalog what we have now, and come up with a plan for refactoring that we can execute over the following sprint or two. I think that most of the cataloging of our components via HTML is done in our first pass at Fractal integration (#1827), but I'd like to do something similar for both our CSS and JavaScript.\nThe JS is pretty self-contained, and if #1836 pans out then we'll have a really easy way to list out the selectors that drive our interactive components in a way that we can clearly document them.\nThe CSS, though, is another story. I've created #1837 to for that work, which we should be able to tackle in the next sprint.. @msecret I think that with Fractal (#1827) we're heading in the right direction here. Phase 3 (#1862) of the implementation plan suggests colocating the component CSS and JavaScript with their HTML templates and documentation. Could we make a more specific issue for doing that, or rewrite this issue to address that specific task?. FYI, I'm checking off the website dependency and code items on this list, but #1394 and #1395 remain open for now.\n. I think that we need to have a discussion about whether we should include Politespace just to implement the zip code input, or if we can just point people at Politespace or FieldKit as accessible solutions for the input masking problem to use with USWDS, rather than part of the system. I think we're going to come across a lot of things like this that may be legitimately useful, but don't necessarily make sense to bundle with our CSS and JS. Thoughts, @bradnunnally?\n. Also, with the tests linted and cleaned up in #1520, it's now a lot easier to find all of the places where we require('jquery') to test the components. We should be able to replace these with DOM API calls (document.querySelector(), etc.).\n. As of v0.13.2 we no longer package jQuery in uswds.js (though we do use it on the site). We're still using it in our unit tests, but I don't see that as a blocker. I'm going to close this; let's move any further discussion of Politespace to #1385 and/or 18F/web-design-standards-docs#82. \ud83c\udf7b . Yes yes yes count me in!\n. @joshbruce I can't speak to that, but here's what I've been thinking about: accordions and many other types of buttons fundamentally just toggle the state (aria-hidden in this case, but there are others) of one or more other elements. This is useful functionality to accordions, but also makes sense for other types of buttons, for instance a menu button that toggles its own aria-pressed state and the visibility of its target menu.\nWhat's interesting to me is that you can make something that functions like an accordion from a set of \"toggle buttons\", but an actual W3C accordion \"widget\" is necessarily a tablist role with aria-multiselectable=\"true\" and one or more pairs of tab and tabpanel roles. In either case, though, the underlying behavior is the same:\n1. The button toggles its own relevant state (aria-expanded if it has a tab role, or maybe aria-pressed in most other cases).\n2. Depending on the newly toggled state, the state of its target(s) is also toggled. Usually this would toggle aria-hidden to the inverse of its own state, but it could reasonably toggle other states.\nSome of this is described in the W3C's \"abstract\" definition of a button \"widget\". I think there are some nice and simple ways to define the behavior of a toggle button with attributes that tell it \"how\" to toggle, e.g.\nhtml\n<button aria-controls=\"some-menu\" aria-pressed=\"false\">\n  Toggle Menu\n</button>\n<!-- JS sets aria-hidden=\"true\" because aria-pressed=\"false\" -->\n<menu id=\"some-menu\">...</menu>\nor:\nhtml\n<button role=\"tab\" aria-expanded=\"false\" aria-controls=\"some-panel\">\n  Tab 1\n</button>\n<!-- JS sets aria-hidden=\"true\" because aria-expanded=\"false\" -->\n<section role=\"tabpanel\" id=\"some-panel\">...</section>\nHere's an example of a custom element that extends <button> and doesn't require any additional JavaScript to initialize, for reference:\nhtml\n<button is=\"aria-toggle\" aria-controls=\"details\">Show details</button>\n<section id=\"details\">...</section>\n. Okay, so here's a proposal, based on a structure that I've been playing with in aria-tools:\n1. Define behaviors that mirror ARIA roles or widgets, and can either be attached to individual elements or handled with event delegation; e.g.\n   - Button: toggles its own state (aria-pressed, aria-expanded) and that of the target element(s) identified in its aria-controls attribute.\n   - Tab: a specific implementation of the Button behavior that toggles aria-expanded and aria-hidden on its targets.\n   - Tablist: a collection of Tab instances that may target elements outside their own DOM tree. The aria-multiselectable attribute determines the behavior of selecting a tab: if true, then the Tab behavior is implemented as-is; if false, then only one tab may be selected at once.\n   - Accordion: per the W3C definition, this is just a Tablist with aria-multiselectable=\"true\".\n2. Each behavior is a collection of functions that manage an element at different points in its lifecycle:\n   - Setup: adds any necessary ARIA roles and initializes states and properties as needed, and adds event listeners for reacting to interactions.\n   - Update: updates the ARIA states and properties of relevant elements based on the current state, which is always derived from the DOM. (In other words, behaviors are stateless.)\n   - Teardown: removes any event listeners added during setup.\n3. Components are just implementations of one or more behaviors. For instance, a v0 custom element that implements the Accordion behavior could look like this in ES2015:\n``` js\n   const Tablist = require('./behaviors/tablist');\nclass AriaAccordion extends HTMLElement {\n     attachedCallback() {\n       this.setAttribute('aria-multiselectable', true);\n       // this uses event delegation to respond to clicks any [role=tab]\n       Tablist.setup(this);\n     }\n     detachedCallback() {\n       Tablist.teardown(this);\n     }\n   }\ndocument.registerElement('aria-accordion', AriaAccordion);\n   ```\nAnd a button component might look like:\n``` js\n   const Button = require('./behaviors/button');\nclass AriaButton extends HTMLButtonElement {\n     get extends() { return 'button'; }\n     attachedCallback() {\n       // this doesn't need event delegation\n       Button.setup(this);\n     }\n     detachedCallback() {\n       Button.teardown(this);\n     }\n   }\ndocument.registerElement('aria-button', AriaButton);\n   // Click me\n   ```\n4. Alternatively, the low-level behaviors can be used directly, for instance to \"activate\" known elements on a page:\njs\n   const forEach = function(selector, fn) {\n     [].forEach.call(document.querySelectorAll(selector), fn);\n   };\n   forEach('[role=tablist]', Tablist.setup);\n   forEach('button[aria-pressed]', Button.setup);\n@rogeruiz @msecret @yozlet @juliaelman what do you think of this? Crazy, technically unwise, or out of scope?\n. I have some thoughts about those points, @juliaelman, and apologies in advance if this gets a little too jargon-y. I think one challenge of this approach is finding a way to describe the framework in a less W3C-ish or formally object-oriented way for people who don't speak those languages. Anyway:\n\nWhat do we do in instances where there is not a 1:1 relationship between roles or widgets and behaviors?\n\nI think that one specific design principle of the low-level behaviors should be their \"abstract\" nature: that they should be easily configurable or extensible (in the sense that a tab role is really just an implementation of the button behavior that toggles its own aria-expanded and its targets' aria-hidden states). This matches up with my reading of the ARIA roles spec and the authoring practices, which define the more concrete roles and widgets as extensions or compositions of other roles and widgets.\n\nWhat approach do we take in mapping out how these functions interact with one another throughout the application?\n\nPaging @rogeruiz \ud83d\ude00 \n. Yep, I'm looking at Scuttle now! Here's what I made with js-sequence-diagrams to illustrate the high-level relationship for accordions:\n\nTitle: ARIA Behaviors\nNote over Button: role\nButton->Tab: Extends\nNote over Tab: role\nTabpanel-->Tablist: Composes\nTab-->Tablist: Composes\nNote over Tablist: role\nTablist->Accordion: Extends\nNote over Accordion: widget\n. This is basically done in #1836. As you can see, the new accordion component is implemented as a behavior that uses the toggle function under the hood.\nI'm going to keep this open, but suggest that we hold off on further refactoring our behaviors to map necessarily 1:1 with ARIA roles before doing more research.. Hi @tomberek, that's actually intentional. We removed Politespace as a dependency from the Standards \"core\", but are still using it on the site for demonstration purposes.. I think that this is basically done in #1419:\n1. @yozlet and I removed all of the Ruby-related files (Gemfile, Gemfile.lock, .ruby-version).\n2. I merged Yoz's in-progress integrate-stylelint branch and wrapped up most of the work in replacing scss-lint with stylelint, but there are now tons of linting errors, so I've disabled the stylelint gulp task as a build prerequisite and in the test script for now. See this comment for more information.\n3. I removed a bunch of unused dependencies from package.json, so npm install should be a bit faster now.\nAnything else?\n. @juliaelman, maybe you can review this? Also cc: @rogeruiz \n. Also, if it's more helpful to split this work off on a separate branch and merge that into the je-split_repo branch, I'm happy to do that.\n. Here's what has been done in #1419 so far:\n1. @juliaelman did most of the work in removing the gulp tasks and npm scripts specific to building the site.\n2. @yozlet and I wrapped up the removal of Ruby from the repo entirely, as well as the build and deployment tasks in circle.yml. Now only tests are run on Circle.\n. Aaaand as of 6f4ff50 the entire docs directory is gone! \ud83c\udf89 \n. I'm pretty sure that this is wrapped up in #1419. I could use a review from @juliaelman, though.\n. Can we get more granular about what the test steps are here? I'm not sure what we need to do to call this one done.\n. What sort of QA are you looking for here, @Journerdism?\n. I think I understand this better now, so here are some more specific acceptance criteria that I propose:\n1. Ensure that the repo installs properly and builds its assets during the npm install process. We can test this out locally with npm link.\n2. I would also consider addressing #1417 so that the Sass include paths are easier to work with.\nAnything else?\n. Closing as duplicate of #1225, where @maya has documented all of the things that need to be fixed. \ud83c\udf7b . For reference, I'm looking at what it would take to build a Yeoman generator that incorporated Bourbon, Neat and WDS and built them with the 18F Felt recipe. My sass.config.js looks like this:\n``` js\nvar includePaths = [\n];\n['bourbon', 'bourbon-neat'].forEach(mod => {\n  try {\n    mod = require(mod);\n  } catch (error) {\n    return;\n  }\n  includePaths = includePaths.concat(mod.includePaths);\n});\nmodule.exports = {\n  includePaths: includePaths\n};\n```\nIf we followed the Bourbon/Neat pattern, we could just add uswds to the list of modules whose includePaths are concatenated. The list of sass modules could even be moved to package.json:\njson\n{\n  \"sass\": {\n    \"include\": [\"bourbon\", \"bourbon-neat\", \"uswds\"]\n  }\n}\njs\n// sass.config.js\nvar includePath = [];\nconst pkg = require('package.json');\npkg.sass.include.forEach(mod => {\n  includePath = includePath.concat(require(mod).includePaths || []);\n});\n. Another thing that I came across when trying to simplify the gulp sass task is that we might be able to get away without the whole copy-vendor-sass rigamarole if we don't need to include Bourbon, Neat, and normalize.css in the release build. @msecret, can you speak to that?\n. Ah, well if the standards needs to include it (I wasn't sure if it did), then it would be preferable if you the bourbon and neat include paths could be included in the require('uswds').includePaths so that I could just use those instead of manually including Bourbon and Neat directly. Copying the Bourbon and Neat files over as part of the npm install process would be unnecessary in that case. Or maybe they could be symlinked instead, so that folks using other Bourbon or Neat mixins (via node-sass, at least) would be referencing the same files?\n. @lukad03 be on the lookout for the next release, which should solve this problem! See #1530 for more info, and let us know if you see anything wrong with this approach. \ud83c\udf7b \n. I just want to +1 @donjo's suggestion for turning the whole top area into a touch target, specifically by wrapping that whole shebang in the <button>. @maya and I actually chatted about this when we were looking for an easier way to manage the event handlers, but we weren't sure if that was desirable from a UX standpoint.\n. Merge conflicts are back. \ud83d\ude22 \n. Thanks, @joshbruce. One important thing to note about custom elements is that they don't necessarily require adhering to any particular programming pattern other than a thin layer of OO inheritance. You can use a delegate, singleton, or similar pattern to manage multiple instances; or each instance can manage its own state internally. They're also compatible with other frameworks like React and Angular, which I see as a big advantage over the current structure.\nThrowing some more copper into the mix: The Case for Custom Elements (part 1), specifically detailing their application in pattern libraries.\n. I'm breaking this out into two separate issues so that we can address the issue of DOM manipulation (which is a core feature of Angular, React, and other frameworks) \"breaking\" our interactive components separately from the question of whether or not to implement custom elements. That question is moving to another issue, #1805.. cc #1388 re: documentation. Hi @bruffridge and @smmckeehan, and thanks for weighing in. We're wrapping up a sprint and hoping to release v1.1.0 next week. I'm going to take a look at how difficult this may be to implement before the end of the week, and we'll let you know here (after sprint planning on Monday) whether it can make it into that release or not.\nMy goal is to figure this out in the next two-week sprint regardless. If it doesn't make it into the next release, we should still be able to get a pre-release out for you to test with before the end of the sprint. In the meantime, I've upgraded this to \"critical\" priority.. For those of you using React, I have some good news. I read up on React DOM reconciliation, and the docs specifically state:\n\nWhen comparing two React DOM elements of the same type, React looks at the attributes of both, keeps the same underlying DOM node, and only updates the changed attributes.\n\nI'm pretty sure this means that React won't touch attributes with constant (static) values, which is what I've been observing in the example app: The accordion <button> elements get aria-expanded=\"false\", which React sets then leaves alone, even after USWDS updates that attribute when you open or close an accordion section.\nSo a good rule of thumb for React integrators might be something like, \"Always set dynamic component attributes (such as aria-expanded) statically, so that updates made by the Standards JS aren't overwritten by React.\". I've also tested this very shallowly with Angular 1.x in this CodePen fork. If anyone with Angular chops could take a look and even  test out the work in #1836 with some a representative Angular app, I would be very grateful!. #1836 merged! With any luck, this will be part of the forthcoming 1.2.0 release.\n@bruffridge, @smmckeehan: if you want to test this on your projects, you can re-install uswds directly from github and point it at our develop branch:\nsh\nnpm install 'uswds@https://github.com/18F/web-design-standards.git#develop'\nLet us know how it goes! \ud83e\udd1e . OBE. This is mostly done in #1836. The validator \"component\" needs to be described and documented, though.. Here's a narrative description of how the validator component works:\nBehavior\nGiven an <input> element with a data-validation-element attribute:\n\nWhenever the input is changed (on keyup or change), validate the input using the following steps:\nDetermine the validation \"checklist\" by getting the data-validation-element attribute, which is interpreted as either the id of another element in the document or a CSS selector if it begins with #.\nIf the specified validation checklist element doesn't exist, throw an error. \u2716\ufe0f \nIterate over the keys of the input element's dataset, and for each that begins with 'validate':\nLowercase the key to get everything after the data-validate- prefix of the attribute name to get the validator name.\nForm a CSS selector from the validator name, e.g. [data-validator=\"numeric\"], and query the checklist for the corresponding element.\nIf the corresponding checklist element doesn't exist, throw an error. \u2716\ufe0f \nTest the data-validate-* attribute value as a regular expression against the input's value.\nIf the regular expression matches the input value, set aria-checked=\"true\" and add the usa-checklist-checked class.\nOtherwise, set aria-checked=\"false\" and remove the usa-checklist-checked class.\n\n\n\n\n\n\n\nExamples\nSee the unit test template for a reference implementation. On the site, the password reset form demonstrates it interactively.\nStyles\nThe CSS that controls the display of the checklist lives in src/stylesheets/components/_forms.scss.. I'm a little worried that this works, because based on my reading of the JS, it shouldn't. \ud83d\ude15 \n. This looks great, @yozlet! :shipit: \n. Okay, so there appear to be a couple of distinct \"phases\" to account for once an accordion is in the DOM:\n| Phase | CSS | JS | Screenreaders | Sightedusers |\n| :-- | :-- | :-- | :-- | :-- |\n| 1. Loading | \u274c | \u274c | \ud83d\udde3 | \ud83d\ude48 |\n| 2. Loading | \u2714\ufe0f | \u274c | \ud83d\udde3 | \ud83d\ude48 |\n| 3. Loaded! | \u2714\ufe0f | \u2714\ufe0f | \ud83d\udde3 | \ud83d\udc40 |\n1. CSS and JavaScript haven't loaded yet. In this case, we want the content visible to screen readers only.\n2. CSS has loaded, but JavaScript hasn't. Same as above, so our CSS shouldn't touch it yet.\n3. JavaScript has loaded, so we can explicitly hide the content from sighted users unless aria-expanded=\"true\" on a given tab.\nHere's the catch, though: screen readers should skip over closed tabs if JavaScript is loaded. So let's redo that table for a given tab and include a column for whether it's open (aria-expanded=\"true\") or not:\n| Phase | CSS | JS | Open? | Screenreaders | Sightedusers |\n| :-- | :-- | :-- | :-- | :-- | :-- |\n| 1a. Loading | \u274c | \u274c | \u2795 | \ud83d\udde3 | \ud83d\udc40 |\n| 2a. Loading | \u2714\ufe0f | \u274c | \u2795 | \ud83d\udde3 | \ud83d\udc40 |\n| 3a. Loaded! | \u2714\ufe0f | \u2714\ufe0f | \u2795 | \ud83d\udde3 | \ud83d\udc40 |\n| 1b. Loading | \u274c | \u274c | \u2796 | \ud83d\udde3 | \ud83d\ude48 |\n| 2b. Loading | \u2714\ufe0f | \u274c | \u2796 | \ud83d\udde3 | \ud83d\ude48 |\n| 3b. Loaded! | \u2714\ufe0f | \u2714\ufe0f | \u2796 | \ud83d\ude4a | \ud83d\ude48 |\nIn other words:\n- Open tabs should always be visible and readable.\n- Closed tabs should always be invisible, and readable only until (if) JavaScript loads.\nPaging Dr. @nickbristow: does this sound right? \n. Okay, thanks @nickbristow. Here's what I'm thinking:\n| Phase | CSS | JS | Open? | Screenreaders | Sightedusers | Solution |\n| :-- | :-- | :-- | :-- | :-- | :-- | :-- |\n| 1a. Loading | \u274c | \u274c | \u2795 | \ud83d\udde3 | \ud83d\udc40 | visible by default |\n| 2a. Loading | \u2714\ufe0f | \u274c | \u2795 | \ud83d\udde3 | \ud83d\udc40 | visible by default |\n| 3a. Loaded! | \u2714\ufe0f | \u2714\ufe0f | \u2795 | \ud83d\udde3 | \ud83d\udc40 | visible by default |\n| 1b. Loading | \u274c | \u274c | \u2796 | \ud83d\udde3 | \ud83d\ude48 | hide with CSS |\n| 2b. Loading | \u2714\ufe0f | \u274c | \u2796 | \ud83d\udde3 | \ud83d\ude48 | hide with CSS |\n| 3b. Loaded! | \u2714\ufe0f | \u2714\ufe0f | \u2796 | \ud83d\ude4a | \ud83d\ude48 | set HTML hidden |\nThere are a bunch of different states to account for here, but in plain English:\n1. Open panels:\n   1. should always be screen-reader-accessible and visible to sighted users.\n2. Closed panels:\n   1. should be screen reader-accessible until JS loads; and\n   2. should always be invisible to sighted users.\nThe trickiest scenario is the closed panel before CSS or JS has loaded. Aside from inline styles and the hidden attribute (which would render them inaccessible if JS doesn't load, or until it does), there's no way to hide these elements visually until our CSS has loaded. I think we should ignore that case, since our CSS is blocking rendering of the page anyway.\nTo achieve the effect of visually hidden but \"inert\" (pre-JS) accordions being invisible but screen-reader-accessible, we could hide all panels with CSS that aren't immediately preceded by an expanded button:\ncss\n[aria-controls]:not([aria-expanded=true]) + .usa-accordion-content {\n  /* position offscreen, etc. */\n}\nOr, because :not() isn't supported by IE8, hide all .usa-accordion-content elements by default, and specifically show the ones that are immediately preceded by an expanded button:\n``` css\n.usa-accordion .usa-accordion-content {\n  / position offscreen, etc. /\n}\n.usa-accordion [aria-expanded=true] + .usa-accordion-content {\n  / undo absolute positioning, display visually /\n}\n```\nIn either case, the JS can just manage the aria-expanded state of the buttons and hidden on the corresponding panels. So when it loads, it looks for aria-expanded on the buttons and updates the panels accordingly (doing nothing if aria-expanded=\"true\", setting aria-expanded=\"false\" on the button and hidden on the panel otherwise), and any time a button is clicked it flips the value of aria-expanded and applies the same logic.\nI think that covers all the cases, but if there are holes in my plan I'd love to hear them!\n. Are any/all of these done?\n. I feel like the ship has sailed on this now that we've had a split repo for several months. What say you, @Journerdism?\n. Er, I meant to tag @jpyuda.\n. Works for me! \ud83d\ude80 \n. @maya I dug into the above issue, and it looks like the .site-header element doesn't exist on those page templates. That would explain why it's \"jumping\": the calculated height is null, so the top padding is always set to zero when the scroll top is greater than zero (because 1 > null is true, but 0 > null is not).\nI'm not sure if .site-header has been renamed to .usa-header entirely, but if it has, all you should need to do is replace all instances of site-header with usa-header in the HTML, CSS, and JS, and this will work again. Let me know if you want to pair on it just to be sure.\n. See 18F/web-design-standards-docs#46 for more info on the sticky nav fix.\n. This should be part of #1874.. There isn't yet, but I think that this is a great idea! I've added some labels so that it should be easier to find when we do our next round of issue prioritization. Thank you!. Thanks, @davidstenger! The feedback your team gave us is very welcome and helpful. We're going to start adding individual issues from the doc that you shared, and if you'd like we can tag you on them as we go. We'll close this issue once they're all in.. I've also created a \"[Partner] USA.gov\" label that we can use to tag and filter issues for USA.gov.. Just to clarify: I'm working off both and the spreadsheet linked above and this document, which lists some specific changes that USA.gov makes (and some of which address accessibility issues listed in the spreadsheet).. Update: @davidstenger and his team are adding issues, and you can find them all under the USA.gov label. Here is a checklist for us to compare:\nHeader and footer accessibility issues\n\n[x] Visual Appearance of Control Does Not Match Function #1644 \n[x] Expand/Collapse Images coded as CSS background images. #1645 \n[x] Users Not Notified that JavaScript is Required #1646 \n[x] Missing visual label for the Search field #1647 \n[x] Unnecessary aria-label used for the link #1648 \n[x] User is not informed about the Menu has been collapsed #1649 \n[x] Colors used in navigation bar it indicate currently selected status #1650 \n[x] Illogical Tab Order #1651 \n[x] Visual Focus Indicator Lost #1652 \n[x] Focus indicator is lost in Responsive view. #1653 \n[x] Missing ARIA Landmark role=\"search\" #1654 \n[x] Focus indicator is not clearly visible on the Menu button. #1655 \n[x] Incorrect role is used for the Close button #1656 \n[x] Footer when reviewed on Mobile. #1657 \n[x] Missing Alt on Logo #1658 \n[x] Topic part of list items #1659 \n[ ] H6 (\"I'm sure this is just because of the WDS page but we should never get to a H6 heading on a page.\")\nThis refers to the docs site headings --Maya\n[ ] Default browser focus #1660\n\nOpen questions re: header/footer implementation\n\n[x] JS error in uswds.js (\"Uncaught TypeError: Cannot read property 'classList' of undefined\") fixed in #1606\n[ ] HP Header: Scrolling menu issue, In iPhone (6), when you open the Menu and try to scroll down, the content in the background also moves. It should not.\n[ ] HP Header - Text Does Not Resize, with browser menu text resizing options. It is required to use \u201cscalable fonts\u201d or fonts that will allow the customer to increase and decrease text size using the browser functionality (e.g., View > Text Size > Larger). Use relative rather than absolute text sizes so that users can make text larger or smaller using the browser text resizing options.\n  -- I was able to ctrl + to resize the header text --Maya\n[ ] HP Content - Incorrect Heading Structure, Currently H1 set for entire page and there is no <h1> on the page. Each page should have a level one heading (<h1>) defined at the start of the main content area to provide an easy way to identify the page. As a best practice, the text for the <h1> should include/match the text from the page <title>. Update the page to have an <h1>. This can be visible or can be hidden using CSS if you do not want to change the visual design of the page. Generally, visible <h1> headings are preferred to provide an easy means for all users to identify the page they are currently on. Code \"Most Popular\" as the H1 heading text.\n-- I believe this refers to #2594.\n[ ] HP Header - Unnecessary list attributes are used, Each of the submenu items should be coded in one nested list to accurately convey the parent/child hierarchy of the item. All logically related items must be coded in one unordered list structure. List items_ExtendedHeader.png. Currently, these links are coded in in 3 or 4 unordered lists and the child elements are not being properly nested beneath the parent elements. this is confusing screen reader users. #1884. Okay, I'm going to close this one out and open a new PR with some more specific tweaks to the gulp tasks that don't break the publishing workflow. \ud83d\ude2c \n. Okay, this is a good band-aid. This comment still stands, but I have a fix in mind that I'll describe there. I think we should merge this and close #1465, but carry over the accessibility concerns to #1513.\n. Copied over from #1465, which we'll close when #1512 merges:\n\nOkay, so there appear to be a couple of distinct \"phases\" to account for once an accordion is in the DOM:\n| Phase | CSS | JS | Screenreaders | Sightedusers |\n| :-- | :-- | :-- | :-- | :-- |\n| 1. Loading | \u274c | \u274c | \ud83d\udde3 | \ud83d\ude48 |\n| 2. Loading | \u2714\ufe0f | \u274c | \ud83d\udde3 | \ud83d\ude48 |\n| 3. Loaded! | \u2714\ufe0f | \u2714\ufe0f | \ud83d\udde3 | \ud83d\udc40 |\n1. CSS and JavaScript haven't loaded yet. In this case, we want the content visible to screen readers only.\n2. CSS has loaded, but JavaScript hasn't. Same as above, so our CSS shouldn't touch it yet.\n3. JavaScript has loaded, so we can explicitly hide the content from sighted users unless aria-expanded=\"true\" on a given tab.\nHere's the catch, though: screen readers should skip over closed tabs if JavaScript is loaded. So let's redo that table for a given tab and include a column for whether it's open (aria-expanded=\"true\") or not:\n| Phase | CSS | JS | Open? | Screenreaders | Sightedusers |\n| :-- | :-- | :-- | :-- | :-- | :-- |\n| 1a. Loading | \u274c | \u274c | \u2795 | \ud83d\udde3 | \ud83d\udc40 |\n| 2a. Loading | \u2714\ufe0f | \u274c | \u2795 | \ud83d\udde3 | \ud83d\udc40 |\n| 3a. Loaded! | \u2714\ufe0f | \u2714\ufe0f | \u2795 | \ud83d\udde3 | \ud83d\udc40 |\n| 1b. Loading | \u274c | \u274c | \u2796 | \ud83d\udde3 | \ud83d\ude48 |\n| 2b. Loading | \u2714\ufe0f | \u274c | \u2796 | \ud83d\udde3 | \ud83d\ude48 |\n| 3b. Loaded! | \u2714\ufe0f | \u2714\ufe0f | \u2796 | \ud83d\ude4a | \ud83d\ude48 |\nIn other words:\n- Open tabs should always be visible and readable.\n- Closed tabs should always be invisible, and readable only until (if) JavaScript loads.\nPaging Dr. @nickbristow: does this sound right? \n. I'm all for removing the variable, though there are a couple of different places where each is used, e.g. in fonts.js with gulp.task(task, ...) and dutil.logMessage(task, ...).\n. This is OBE and stale. Closing for now.. For posterity: I accidentally published v0.13.0 to npm with some files in my working directory that shouldn't have been. I immediately un-published that release, but we had to bump the version number to re-publish because npm now disables force-pushing versions.\nMy bad!\n. @wslack I agree that \"system\" on its own may have an \"all or nothing\" connotation, but (for me, at least, and for many web designers) the phrase \"design system\" connotes something comprehensive but also, specifically, modular.\nIMO, a good design system addresses needs of all types (in the same way that ours addresses everything from plain language, to color and typography, to functional components), can be broken down into its clearly constituent parts, implemented in different technologies, and maybe even by definition outlives any particular code associated with it.\nI think that's a case that we can make for the USWDS, and it's one way that we might even be able to help ensure a life for the broader goals of the project beyond the HTML, CSS, and JavaScript that we deliver today.\n. @juliaelman I think it actually might make sense to turn this into a PR for refactoring the tests and doing the header tests separately. Thoughts? Also, I'd love @rogeruiz's eyes on these if you have time! \ud83c\udf7b \n. Okay, ready for review!\n. I just rebased from staging and force-pushed, FYI.\n. Note that this probably shouldn't trigger a minor revision bump on its own, because technically the API hasn't changed. We should bump the minor revision if we end up changing any of the CSS\u2014for instance, if we decide to explicitly support the navigation or search components outside of the header \"component\".\nThis might also be a good time to start thinking about how we talk about and distinguish visual and functional components. In its current forms, the header is a fairly complicated combination of several discrete \"components\":\n- the skip nav, which is not visible, but serves a critical purpose for screen readers\n- the \"official government site banner\", which is both a visual and functional component (it's implemented as a single-tab accordion)\n- the actual <header> element, which provides visual framing of the site title\n- the primary navigation, which uses the accordion functionality but is displayed horizontally on large screens and as a collapsible menu on smaller screens, and optionally as a \"mega menu\"\n- the optional secondary nav in the \"extended\" header\n- the search \"link\", which is actually a button that looks like the other links, and reveals the search input when clicked (and is revealed again when the input is blurred)\nI think we need to find some new terminology for these other than \"component\" because, as a user, I find the categorization of the monolithic header as a single component confusing. But that's probably a discussion for another, larger issue.\n. Okay, I think this is ready for an initial review, @juliaelman. The tests pass, but I'd love to pair tomorrow and test it out manually, then look at the code and see what you think. Then we can talk about how to juggle this with the other PRs that need to be merged first.\n. Okay, so I nixed the stylize() utility function in 56fe0bc, added default CSS for [hidden] in   f56369b, and updated the search component to visually hide the form on init and when you click off the search input. This caused the tests to fail, so I refactored those in 448b893 to reflect the visually hidden state of the form, both after initialization and after click interactions.\nI think between this and the accordion visibility issues discussed in #1465, I'm starting to see a pattern in the types of rules that we need to set up for conditionally showing and hiding things:\n- The CSS needs to be more carefully crafted not to hide (with display: none) anything that requires JS to be shown. Elements that are hidden this way probably need to get the .usa-sr-only (or some new mixin that does off-screen positioning, clip, etc.) treatment instead of display: none, especially in @media rules dealing with screen size.\n- Components need to be super explicit about what they're hiding and how\u2014visually vs. for all users. In the case of search, we can't just set hidden on the search form, because that makes it inaccessible to screen readers.\nI have one question for @nickbristow about this: Is it legit to set hidden (which hides elements for all users, including screen readers) on elements that can be later revealed by JS? If so, the rule(s) of thumb might be to:\n1. Hide things visually in CSS to start, so that screen readers can access them if JS doesn't load (or before it finishes loading).\n2. In JS, swap out the visually hidden class for hidden on elements that are conditionally shown and hidden by JS.\n3. Maybe: ensure that any element hidden by JS can also be made visible again with a clearly identified (with aria-controls?) button.\nThis stuff is going to be a lot easier to work on once we have browser tests, which we can use to ensure that elements are hidden (visually or otherwise) in different browsers. After messing this one up, I'm a little worried that without tests it's going to be hard to avoid introducing regressions once we start refactoring the different classes (.hidden, .is-visible, .is-hidden, etc.) and their CSS (a lot of display: none in there).\nI think that this is ready to go for now, though, @juliaelman. \ud83d\ude2c \n. @juliaelman No, sorry if I wasn't clear. There's a lot going on here, but the issue I'm seeing is that we hide a lot of things with display: none in our CSS that are supposed to be either eventually shown by JavaScript or only visible at certain screen sizes. I'm less worried about the Flash of Un-styled Content with the CSS because our stylesheets live in the <head> and should block rendering until they're loaded; but if JS at the end of the document fails to load (because the document doesn't finish loading, etc.), any of that JS-dependent content is completely inaccessible.\nSure, the no-JS situation an edge case. But if we're serious about progressive enhancement, shouldn't the markup we're suggesting people use work well without JS? If that's the case, then I think we should never use hidden in static markup, and use some other attribute(s) (including aria-hidden) that can be \"upgraded\" to hidden by JS when interactive elements are activated.\n. What, me overthink things? \ud83d\ude06 \n. Update: the fix for this is ready in #1544.. Fixed in #1544! \ud83c\udf89 . @maya I'm having a hard time reproducing this. Can you post a test case?\n. One nice thing about these elements is that they don't need id and aria-controls attributes to work. So if polyfilling works well, we could simply style details and summary elements the way that we currently style .usa-accordion and .usa-accordion-button, respectively.. Also, I should probably ask @maya and @bradnunnally to weigh in on whether this is a good idea. It's quite possible that you tried to do this previously but were stymied by CSS or accessibility issues. \ud83d\ude2c \n. Here's what I think we could boil it down to:\n- a specially classed or attribute-laden <form> (or other element) to scope the relevant CSS (maybe [role=search]?)\n- an <input type=\"search\"> followed immediately by a <button type=\"submit\"> (so we can do style the button with input:focus + button, etc.)\n- CSS:\n  - camouflages the input to look like its link siblings in the secondary nav\n  - :before prepends the word \"Search\" to the input\n  - :focus \"reverts\" the camouflage so that it looks like the search bar and hides the :before content\n. After discovering #1572, I'm starting to think that this one is worth bumping up as a solution. @juliaelman what do you think?. Anecdotally, we've also heard from the usa.gov team that they have a need for a search input that appears more consistently (as in, just like when it's focused). We should make the CSS-only \"behavior\" opt-in with a new class.. This article covers some other nice techniques.\n. One of the negative impacts of using a postcss plugin-specific CSS syntax in our Sass would be that people using our Sass would also be required to use postcss in their own build process. This seems like a not-good thing. There are node- and ruby-specific implementations (that is, they don't require postcss, but require a language-specific Sass compiler), but they use different syntax.\nAnother option is that our Sass variables could include a flag for whether or not to inline SVG assets (the default for which would be false) and our own build would set this flag to true so that our CSS builds include inline assets but users of our Sass sources aren't required to. The more I write about this the more complicated it sounds, though, so... \u00af\\_(\u30c4)_/\u00af\n. I'm moving this and #1095 out of the sprint backlog for now. We need to get our measurement house in order before we start making changes like this, which will also necessitate a jump to 2.0 because it'd be a major change on the HTML side.. Here are some more notes on what we could do here:\n\nInlining our SVG assets (icons, mostly) makes it possible to remove many (if not most) of the images from our distributions, which makes them easier to use.\nIf we use postcss in our pipeline, we can make that step optional for people building their own CSS. For instance, if we generate standards-compliant url() references from Sass, users can still generate their own CSS from Sass as long as they bring along the images.\n\nHere are the things this will change as a result of this:\n\nHTML will be simplified because we can do away with some unnecessary <img> elements (such as the close icon in our header mobile menu).\nHTTP 1 users (anyone without HTTP/2) will get a speed boost from not loading a bunch of different URLs from the same host.\nOur CSS will get bigger.\n\nAs we consider this, we should be sure to compare our web performance scores before, during, and after to see what the effects will be.\n. This was done in #1530.\n. 1. Yes, agreed! The docs state in this file that:\n\nThe main Sass (SCSS) source file is here:\nnode_modules/uswds/src/stylesheets/all.scss\n\nAnd this just needs to be changed to say uswds.scss.\n2. I've tested it locally, and it doesn't require a change because of the _all.scss fallback. But yes, we should point it at the right file. \ud83d\ude04 \n. Okay, so I've got some updates locally that add a version comment (fixing #1529) to the generated CSS, as well as some tests to confirm that the build process is generating the right files and including the version comment in each. I'll update the description accordingly.\n~~I can't push these because it looks like United is blocking whatever port git uses, so for now I'm marking this as WIP.~~\n. Okay, ready for your review, @juliaelman! I think we can handle the documentation updates separately once this is merged.\n. Okay, fixed those typos @juliaelman! \ud83d\ude2c \n. This postcss plugin might be the thing!\n. Also, we should lint for browser support with doiuse. Currently the site produces only a handful of warnings, but this would be a good thing to automate. \ud83c\udf89 \n. CSS stats is also good for this.\n. Superseded by #1837.. Thanks, @joshbruce! I'm going to take a look at this as part of #1534.\n. I'm fairly certain that this was resolved in #1536, where we deprecated core/grid-settings altogether. \ud83c\udf89 . Okay, I've updated the issue description and checked off a couple of the boxes. I think this is mostly a documentation issue, so maybe we should open something over in the other repo. @msecret, ping me if you have questions or thoughts!. This is basically done, with the exception of a separate section on \"theming\". I'm going to close this and open a separate issue for that one, where we can discuss what that looks like in more detail. Thanks, @msecret!. Err sorry, there is a section on customization and theming already! Checking off that box, too.. Cc'ing @joshbruce on this. Josh: Am I on the right track here? Does this capture #1532, and can we consolidate the issues if so?\n. I'd like to merge #1530 before getting started on this, and work in parallel on release notes that document how users should update their Sass to accommodate the next release. My hope would be that we can get users to refactor their imports down to something like:\nscss\n// customizations\n@import 'variables';\n// FKA 'all'\n@import 'uswds/uswds';\nor, if selectively importing different components:\nscss\n@import 'variables';\n@import 'uswds/variables';\n@import 'uswds/core/typography';\n// etc.\nOf course, to do this, we would need to nest all of our partials under a  uswds directory within our src/stylesheets hierarchy, which is not what #1530 does yet, so... \ud83d\ude2c \n. And if we're unsure what to do, we should probably take some time to learn more about how people are currently customizing the standards by searching on github and reaching out to those users.\n. Okay, so I did some digging around, and I found when searching github for instances of \"uswds\" + variables, defaults, and grid-settings that there are a couple of different patterns of use for these three files, ranked in terms of popularity:\n1. Import uswds' all.scss, then modify variables:\n   - SAM WDS\n   - USDA-FSA\n   - USDA-FSA docs\n   - VA Healthcare Application\n   - vets.gov\n   - cloud.gov style (cg-style)\n   - this Jekyll site\n   - this \"forked CFDA Angular UI\"\n2. Copy variables.scss and import that _instead of ours, as we suggest in the docs:\n   - USAJOBS design system has its own, heavily modified version of _variables.scss\n   - 18F micropurchase (Rails)\n   - CivicActions/agile-ms (see: _uswds-vars.scss)\n   - FedRamp dashboard\n3. Set variables, then import the defaults:\n   - vote.gov Wordpress theme\n4. Modify some variables both before and after importing uswds/all:\n   - uswds-rails-gem\nI'm actually kind of relieved that the copy approach isn't the most popular. \ud83d\ude05 \n. @joshbruce I was actually thinking more of how Bourbon and Neat work, but on further inspection I see that this is only the case when you use the CLI tools to install (see: Bourbon's instructions and Neat's) a full copy of either library. So I think that means that my original goal in #1417 still stands:\n1. If you install uswds via npm or one of the Ruby gems, you would @import 'uswds';\n2. If you copy the SCSS files into your project directory, you would @import 'path/to/uswds'\nDoes that sound right to you?\n. @joshbruce So currently, you can do this:\n``` sh\nnpm install --save uswds\nhopefully this goes into a standalone shell script or a package.json \"script\"\nso you don't have to remember how to do it when you update to the next version:\nrsync -avr node_modules/uswds/src/stylesheets/ assets/vendor/uswds/\n```\nthen, in your SCSS entrypoint:\nscss\n@import 'vendor/uswds/all';\nThe only thing that would change after #1530 merges is your import line:\nscss\n@import 'vendor/uswds/uswds';\n(And this would be optional, because all.scss has just been renamed _all.scss.)\nFor Jekyll specifically, I think that we could provide better guidance on simply adding that first path to the config, assuming that the site will always be built in an environment where the npm dependencies are installed:\n``` yaml\n_config.yml\nsass:\n  load_paths:\n    - node_modules/uswds/src/stylesheets\n```\nEventually, I'd love to support npm (and maybe Eyeglass) users more explicitly by providing, in order of roughly increasing complexity:\n1. Guidance on adding node_modules/uswds/src/stylesheets to your node-sass includePaths and importing via @import 'uswds';\n2. A JS includePaths array export that you can use with node-sass's JS API, a la Bourbon and Neat. (This is tricky because require('uswds') already does something completely different.)\n3. An eyeglass-exports.js that also handles asset path munging.\nIn the cases of 2 and 3, we (again, eventually) wouldn't need to copy the Bourbon and Neat source files because we could include those libraries' include paths in the list we export, which would look something like:\n/path/to/node_modules/uswds/src/stylesheets\n/path/to/node_modules/bourbon/core\n/path/to/node_modules/bourbon-neat/app/assets/stylesheets\nBut for now, baby steps! \ud83d\ude09 \n. @joshbruce yep, that sounds like what we'll recommend for Jekyll (and other users of non-Node frameworks, static generators, etc.). Note that in the forthcoming release (v0.14.0) you will be able (but not required) to import lib/uswds/uswds instead of lib/uswds/all.\n@francisrupert thanks for weighing in! The same will be true for you, and you may wish to import lib/uswds/core/variables instead of .../core/defaults (which will be eventually deprecated).\nI'm also curious to hear from both of you if you've had to upgrade uswds from npm yet, and what that process was like. If so, did you encounter any issues? I'm mostly wondering if our (semantic) versioning strategy should include Sass partials\u2014e.g. if we rename a partial that any of our users are referencing, maybe we would keep the old partial around and have it @import the new one, and clearly document the deprecation of it in the release notes? Maybe there are there internal partials that are essentially \"private\", and which we can move around without documenting because they're not part of the public \"API\"?\n. @joshbruce: Yep! We definitely plan on gradually deprecating the SCSS \"API\", and even if we were to go the #1526 route (replacing the accordion with <details>), I think that we would need to support the \"legacy\" accordion for at least a full major version. We should explicitly articulate this promise somewhere in our docs! (cc @juliaelman)\nWe're mulling over a fairly major reorganization of our component styles (no issue yet, as it's not even on the roadmap) that would \"colocate\" all of each component's assets (SCSS, JS, and potentially HTML template(s)) in their own directory. My hope is that the directory structure provides clearer component boundaries and might allow you to do something like this:\nscss\n// in your Sass entry point; imports all the \"dependencies\" automatically\n@import 'uswds/components/header';\njs\n// in your browserify/webpack/etc. bundle entry point;\n// \"activates\" the header via custom element definition or event delegation\nrequire('uswds/components/header');\nOne thing to consider is that the gradual deprecation approach can be a huge pain to support. I wonder if it's better to be really clear which of our SCSS constitutes a \"public API\" and state that you @import anything else at your own peril? I also started adding some unit tests to ensure that both our uswds and all (\"deprecated\") entry points work via @import; one thing we could do is put tests in place for the most-referenced partials to ensure that upgrades don't break, then remove those tests when we remove those partials for good.\n. Yes, \ud83d\udcaf to adding \"deprecated\" to the maturity scale! And yes, let's chat!\n. This is done in #1536 and #1530! \ud83c\udf89  @joshbruce and @francisrupert, what do you think of this deprecation notice in the forthcoming release notes?\n\n\nWe have reorganized some of our SCSS \"partials\", and will be removing the deprecated paths in a future release. If you import the USWDS into your own Sass or SCSS files, here is what you need to know:\nWe have replaced the SCSS all \"entry point\" with uswds, and set up an alias for all (_all.scss) to ease the transition for users of previous versions. Upgrade instructions:\nreplace @import 'all'; with @import 'uswds';, or\nreplace @import 'uswds/all'; to @import 'uswds/uswds';\n\n\nWe have deprecated the SCSS uswds/defaults partial in favor of uswds/variables, and added !default to all of our variables so that they can be selectively overridden by a previous import. Upgrade instructions:\nremove @import 'core/defaults'; or @import 'uswds/core/defaults';\nadd @import 'core/variables'; if you don't import it already\nmove your variable customizations before @import 'core/variables'; for consistency\nremove any unmodified variable declarations from your customizations to avoid accidentally overriding future changes\n\n\nuswds/core/grid-settings is no longer necessary, as the grid settings are all declared in uswds/variables. Upgrade instructions:\nremove @import 'core/grid-settings'; or @import 'uswds/core/grid-settings';\n. This is definitely a breaking change. It seems safe to deprecate core/defaults in favor of core/variables because very few users seem to be using both of them (and which is a noop anyway), and the way that I've changed things in core/grid-settings shouldn't impact anyone because I haven't seen any instances of users modifying the grid (though I'm sure they're out there).\n. Not sure what the issue is on Circle CI, but I guess I should look at that too. \u2639\ufe0f \n. We are cooking with \ud83d\udd25 \n. Actually, nix this. I'm going to work on the component-specific entry points in marigold, and will reopen a PR here when we're ready to think about the CSS/JS/template colocation.\n. FWIW, I wasn't able to reproducing #1524. @maya, could you help us understand that one better?. I've updated the description to account for #1524 being closed. Now to fix the merge conflicts!. FWIW, I read KPIs as \"key performance indicators\", which also works. \ud83d\udc4d \n. This is great, Brad. Something just clicked in my brain that I haven't explicitly stated yet, though, so I just want to put it out there: Many of the goals on the code side don't necessarily need to be validated with users. Modularity is pretty subjective, but performance, accessibility (at least, insofar as we are following best practices), clean/semantic code, and \"modern web [compliance]\" are all elements that we can address with little user input. Would it help to come up with some metrics for these goals?\n. #1556 is the issue about the actual reorganization.\n. @bradnunnally should we re-open this when we run the second test?\n. Done in a189a6f7b4358e558ed9a9eeced13e0b218f666c. Now, to see if it passes on CI.... Passed! Closing; this will be fixed in our next release. \ud83c\udf89 . An update from our friends at Thoughtbot: Neat 2.0 removes the node-sass dependency! cc #1554. Hi @dalfaro1, that actually is the accordion component inside the header. It's just styled differently in the mobile navigation. You can see how we mark it up here. Let us know if you have any more questions!. Validation is done, but given how poorly people scored on it I'm inclined to put off this reorganization until we can discuss further changes to the structure, as I've suggested in the wiki:\n\n\n\nWe should consider taking a cue from Material Design Lite's decidedly flat directory structure, in which the src directory contains a single directory for each component, rather than attempting to categorize them in any way.. Also, for future reference, check out @emileighoutlaw's wonderful report on a treejack test that she did for FEC.. cc #1518 . It has a home! Closing.\n. Okay, so the results are in, and I'll be honest: This was a humbling exercise. We only dramatically improved people's \"scores\" on a single task; the average score for all tasks actually dropped slightly from 4.5, which is pretty bad to begin with.\n\nHere are a few of my observations, which I'll tidy up and add to the [wiki] tomorrow:\n\nI went into the first test armed with some fancy Sass guidelines, and didn't even consider that people wouldn't know what to make of the abstract directory. (Spoiler alert: they didn't!) Six participants responded to the question of what they would change about the file structure with a response along the lines of, \"What the heck does 'abstract' mean?\" In hindsight, this might have been the most obtuse name possible for a project aimed at users with little to no knowledge of Sass, let alone any specific set of wonky guidelines. \n\nWhat I found even more interesting, though, was that the directory named settings performed slightly worse than abstract. My only hope is that we can blame this on the fact that there were more participants in the second test (115 started, 63 completed) than the first (48 started, 23 completed), and likely not much overlap in the participants of both tests.\n\nI categorized some of our components into more specific directories, with form templates in a new patterns directory alongside components, assuming that users would understand the distinction (something like: \"pattern is to component as template is to function\"). Just to make things even more confusing, we decided to add an examples directory at the last minute. Users were almost universally confused by these three directories at one point or another, which I guess proves that the \"component\" vs. \"pattern\" distinction isn't as universal as I'd assumed. To quote one of the participants when asked what they would change:\n\n\nClarify the difference between patterns, components, and settings. Condense, rename, or remove one of them.\n\nMy main takeaway is this: We can't assume anything about our users. As is often the case in design, the solution to the problem of helping people find things in our file structure appears to be relentless simplification. My hunch is that \"flattening\" the directory structure and removing some of the directories that exist purely for categorization (e.g. patterns vs. components, as opposed to just putting everything in components) will help people avoid going up and down the tree in search of specific things.\nSee [the wiki page][wiki] a more in-depth rundown of the results from both tests. I'll close this out once I've synced up my thoughts here with the wiki page, but if anyone has observations or thoughts on either our methodology or the results, feel free to let me know here! \ud83c\udf7b \n[wiki]: https://github.com/18F/web-design-standards/wiki/Component-reorg-treejack-test-results. I've incorporated the above notes into the wiki page. Closing this one out!. This looks great. Should we link to it from the README in addition to the soon-to-be-deprecated wiki page?\n. Thanks @dalfaro1. We've discussed this in #896, but haven't put it on the roadmap yet. I'm going to close this as a duplicate, but feel free to weigh in there if you have any more thoughts!. Okay, so I was actually wrong about the HTML snippets living in the docs site! They live here, and are copied as part of the build process in the docs site. That's a good thing!. @bradnunnally posted the following data in Slack after we reviewed the [Digital Analytics Program (DAP)][DAP] data together in Google Analytics, by 2016 fiscal quarter:\nQuarter | Users | New Users | Page views\n:--- | ---: | ---: | ---:\nQ3 | 64.3m | 56.0m | 478m\nQ2 | 59.7m | 52.8m | 487m\nQ1 | 57.2m | 50.9m | 450m\nWe created a custom report using the following regular expression to match domains known to have incorporated the Standards either as-is or (more commonly) via extension or adoption of individual components and principles.\n^(18f.gsa|(analytics|labs).usa|apps|cbp|certify\\.sba|cloud|(atf-eregs|playbook-in-action).apps.cloud|code|earthquake\\.usgs|ecpic|epa-notice\\.usa|(ers|newfarmers).usda|federation-data|gsa|(history|vsfs).state|(compliance-viewer|e-manifest|federalist|micropurchase).18f.gov|itdashboard|marketplace.fedramp|midaas.commerce|open\\.fda|opportunity.census|(paygap|weekofmaking).pif|petitions\\.whitehouse|(playbook|techfarhub)\\.cio|sbst|tsa|usa|usaid|usajobs|my\\.uscis|www\\.uscourts|usich|vets|vote|worker|c6f\\.navy|ntis)\\.(gov|mil)$\nMany, many thanks to @tdlowden for crafting this and setting us off on the right path!\n[DAP]: https://www.digitalgov.gov/services/dap/. It's worth noting that the further back in time we go, the less reliable these numbers become because we're not sure when all of these sites started using the Standards. But we're also not counting all of the sites that use them (including some non-federal sites such as mass.gov), so it may be a wash.. @aaronsnow we can generate whatever kinds of reports we want! If we're going to make a habit of it, though, it might be worth roping in @gbinal so that we can set up a shared view (\"profile\"?) that includes these sites, and which we can all look at without having to create our own (private) reports. \nI think we'd want @bradnunnally, @Journerdism and I (at the very least) to be able to edit the filter criteria for it. Gray, what say you?. Brief update: I've got some UAs to work with, and am looking at analytics-reporter to query some data.. Another update: I'm working on getting the Analytics API connection set up. Doing it right means getting DAP's Tim Lowden to authorize a \"service access\" account to read the gov-wide account data, after which we can get pretty much anything we want. This probably won't happen until Monday because it's late on a Friday.. I'm going to estimate that this takes about 24 hours to complete.. @bradnunnally: I was chatting with @tdlowden today about API access, and he asked me whether the CSV reports sent via email would suffice for this. I told him I would ask you, but after thinking about it some more, my gut tells me that working with CSV email attachments is going to be painful in the long run because we can't automate them as well as API access.\nBut maybe we could start by manually generating quarterly reports from the web UI, set up email reports to go out for the next quarter, and see how easy the stats on the site are to update with the CSV attachment?. Well, re: the API, one constraint is that we\u2014TTS, I think?\u2014are only allowed a certain number of GA API requests, and it sounds like analytics.usa.gov is already using most of those. @tdlowden, can you shed some light on this?\nI don't see CSV as being any more \"precarious\" than the API; just not as flexible. We can easily spec out different parameters for each call to the API and collaborate on those; whereas the GA custom reports aren't easy (assuming it's even possible) to share, at least in the sense that we could all generate reports using the same parameters. One nice thing Jekyll gives us is the ability to access CSV data in our page templates, so I'm going to investigate a workflow that looks something like:\n\nExport CSV reports for each quarter\nSee if we can pull the metric totals from those files without having to munge them with other tools\nIf so, place the reports in the Jekyll data directory with a predictable naming scheme, e.g. _data/analytics/2016-Q4.csv\nUpdate the page template to read data from site.data.analytics['2016-Q4'], etc.\nDocument the process for exporting the next quarterly report\n\nThis shouldn't take too long, and if I run into trouble then we'll know quickly that this isn't going to be a sustainable way to do it. Then we can nudge Tim about API access again. \ud83d\ude09 . Just an update on where this stands in 18F/web-design-standards-docs#96, since it looks like I won't be able to finish this completely before the I leave on Friday:\nI've manually created a CSV of the stats we care about for the last three quarters and created a table for them on the About overview page. What I could use input on on are the following points:\n\nIs this the right format for the data?\nIf so, should we do the same thing for github? (That data would be easier to get from the API!)\nShould we list sites that use the standards on this page so that it's clearer where these stats come from?\n\nI think that's it for now, but if I think of anything else before Friday I'll leave it here.. Oh, one other thing: as @lauraponce mentioned in #1635, we are stymied on getting API access for the time being. So the CSV reports are probably our best bet for updating the stats at this point.. Update: @lauraponce has GA access now, but we're not sure if she can spend time on this project. @bradnunnally, what should we do about this issue?. I also may have been confusing this with #1635... sorry. \ud83d\ude2c . I confused this issue with 1635. Most of the work for adding a high-level (no domain breakdown) report from the Google Analytics reports is done in 18F/web-design-standards-docs#96. I've asked Julia and Brad for reviews there to wrap this up. \u270c\ufe0f . Thanks, Brad. I updated the docs issue description to note the following steps for finishing:\n\nRemove the dead link to the non-existent list of sites (me)\nContent review by @bradnunnally\nCode review by @juliaelman\n\nLet's wrap this one up!. Note: I'll be (hopefully!) joining remotely because I'm scheduled to call in for jury duty on December 12. \ud83d\ude2c . Band-aid it is then!. I wrote up some ideas for improving the selector situation later in #1596.. Here are a couple of thoughts on refactoring after spending some more quality time with the header:\n\n\nTrying to generalize a template for the header (see this abandoned example) proved really difficult, mostly because the differences in HTML from one to the other weren't obvious.\nFor instance, the basic header wraps all of its contents in a .usa-nav-container, but the extended one doesn't. This makes for a hard-to-read diff and an awkward workaround in the generalized template that shouldn't be necessary. More importantly, though, it makes for a potentially difficult and/or frustrating experience when a user decides to add or remove the secondary nav. One solution for this would be to always include the container div, but negate its sizing in the usa-header-extended styles.\n\n\nUsing \"basic\" or \"extended\" modifiers and the presence of \"megamenu\" navigation to describe variants of a single component isn't going to scale as we introduce new header features. We need to break up the component into logical subcomponents that can be more easily tested in isolation and be given variants of their own, so that we don't end up having to mint a new variant of the header for each permutation of difference in subcomponents. The components I've identified are:\n\nThe banner, which already technically exists as a separate component.\nThe .usa-navbar container, or what old web designers like myself might call the masthead, which wraps the site title and/or \"logo\" (see #1594).\nThe rest of the header gets collapsed into a mobile navigation on smaller screens. I would want to give this part a more specific name like usa-nav-collapsible.\nThe \"primary navigation\" needs to be its own component that can host links, menus, and \"megamenu\" link lists.\nThe \"secondary navigation\" (in the extended header) should likewise be its own component.\n\nSo, in HTML custom element parlance, a fully loaded header looks something like:\nhtml\n<header>\n  <usa-banner/>\n  <usa-masthead/>\n  <usa-nav--collapsible>\n    <usa-nav--primary/>\n    <usa-nav--secondary/>\n  </usa-nav--collapsible>\n</header>\n\n\nThe \"mega\" menu container elements (ul.usa-nav-submenu.usa-megamenu) shouldn't need the usa-grid-full class; those styles should be supplied via @include in the SCSS.. I'm putting this into the Mario Day sprint to get it onto our radar. We can move it later if it gets bumped by higher-priority issues.. Moving out a sprint so that we can get our bearings with Fractal in #1826.. Here's where we stand with most of the Standards working in Fractal:\n\n\nOur \"basic\" and \"extended\" headers are pretty well specified in their respective templates now, and I have a pretty good sense of both what the moving parts are, and what's lacking in their implementation:\n\n\n1594 Header should support a logo\n\n\n1729 .usa-logo-text should support longer runs of text\n\n\n1753 Basic header layout issues\n\n\n1613 Search form should be always visible, larger (see also: #1435, #1654, #1640, and others). This is essentially done now that all of our header variants are in Fractal and you can more easily compare, for instance, the markup that drives the basic and extended headers. @yowill, the issues referenced above might make sense to bundle up into an epic, but I think we're open to tackling them individually, if that's your preference.. Hi @bruffridge! I think your best bet for ease of upgrading to future versions is to maintain your own version of uswds.scss (nasa.scss?) that does the above. The simplest version of this, assuming that you want everything from USWDS, would just look like:\n\n\nscss\n@import `variables-nasa`;\n@import `uswds`;\n(There's no need to import core/variables yourself, because uswds does that for you.) Then, in your NASA variables file, you would only specify the variables that you're overriding, so the defaults remain intact when you upgrade to the next version of USWDS.\nDoes that make sense?. @bruffridge Not necessarily! I think we'd need to learn more about where you're referencing the CSS to know for sure, though. Would you be interested in chatting with me and @juliaelman to figure it out together?. So @bruffridge are you juggling the connection using npm link the same way that we are? Because if so, there isn't really anywhere in the docs that you'll need to update that reference uswds.css. The docs site has its own Sass stylesheet that imports vendor/uswds/uswds directly. \nIn your case, if you were to maintain your own nasa.scss alongside uswds.scss in the code repo, you could either:\n\nChange this line to read: @import 'vendor/uswds/nasa'; or\nModify _override_variables.scss to import your overrides from, say, vendor/uswds/core/variables-nasa.\n\nLet us know if you'd like to chat in realtime and work it out together.. Okay, I've updated the description and removed the WIP status. @juliaelman, I'd love a review from you before we merge this.. We have a deeper problem with removing the data-politespace attribute from our form template, which is that the site pulls the templates from our HTML directory. I can work on a fix for that by \"overriding\" that particular form template in the docs repo. I've added a checklist to this PR that includes that item.. Okay, back to you for review, @juliaelman!. Per @juliaelman's suggestion, I've also removed the unused prismjs dependency, which should speed up npm installs.. We're going to close this because we've pointed a lot of people at this file, and what we need to do is set up a proper link to the \"official\" one rather than deleting it.. Okay @msecret, I pushed a bunch more fixes, and the two generally of note are:\n\nI removed all of the double quotes from attribute selectors, e.g. [type=submit] (because our config wants single quotes, and they're not necessary)\n\nI made a variable to work around stylelint refusing to treat this as an expression:\nsass\n@media screen and (max-width: ($nav-width - 1px)) {\n//                   wants a \":\" here ---^\nbut this works:\n\n\nsass\n    $lt-nav-width: $nav-width - 1px;\n    @media screen and (max-width: $lt-nav-width) {\nAnd, finally, I re-enabled the stylelint task as a dependency of gulp sass, so our styles get linted before being compiled! \ud83c\udf89 . cc @davidstenger. I have some tweaks that I'd like to suggest, but they don't need to hold up this release so I'll create some new issues.. @juliaelman lemme file a PR against your branch to do that, unless you want to merge this first?. @bruffridge We are very interested in this! I can't speak to if or when we would be able to work on it, but I do know that if there is enough interest from users we can prioritize it on our roadmap (which is woefully out of date, but we're basically in Milestone 2). In other words: if you know other people in your agency or elsewhere who want this, ask them to weigh in either here or on our mailing list: uswebdesignstandards@gsa.gov\nThank you!. The video is perfect, @juliaelman. Well done! \ud83d\udc4f . I provided some input on the script and created a v1.0 milestone for us to start filing issues against.. Thanks for this, @mariamarrero!\n@juliaelman, I think this is the sort of use case that would be easier to create a test for if the navigation were a distinct component.. For reference, here is what the USA.gov navigation looks like right now:\n\n. This is related to #1435 and #1596.. I'm scratching my head over this one. My first hunch is that the async gulp call isn't finishing before the tests run, but I'm not 100% sure if that's even possible.. @bruffridge can you confirm that rebuilding without the cache makes the error go away?. So this is the place to look if anyone gets around to this before I get back from vacation. I think what might be happening here is that npm or gulp is forking and thechild_process.exec() callback is firing when before some deeper \"ancestor\" process exits. That's what I would expect to be the issue with builds failing with no obvious pattern, anyway.\n@msecret @rogeruiz Do you guys have any idea what might be going on here?. See #1680 for what I think is a robust fix on top of #1664.. I like the solution of styling links so that they're more visibly distinguished as such. There are lots of pitfalls in casting links as buttons (using role=\"button\" or not), such as this one from the MDN article on the button role:\n\nBe careful when marking up links with the button role. Buttons are expected to be triggered using the Space key, while links are expected to be triggered using the Enter key. In other words, when links are used to behave like buttons, adding role=\"button\" alone is not sufficient. It will also be necessary to add a key event handler that listens for the Space key in order to be consistent with native buttons.\n\nNot to mention validation issues of <a> without (or with an invalid) href.\nIf the use of <button> causes issues because the navigation or header is wrapped in a <form>, then I'm pretty sure that you can disable the submit behavior by adding type=\"button\".. To be done as part of #1596.. My impression was that the use of aria-expanded=\"true\" on expanded nav items was announced by screen readers. It sounds like we need to do some more research to validate this approach, though.. I'm happy to report that this is no longer relevant now that we're removing all of the content hidden behind that button. See the comments on #1738 for more info. \u270c\ufe0f . Visually this is very similar to our sidenav component. Does this do what you need, or should we describe it differently?. Thanks for this, @bruffridge! We're prioritizing this for our 1.0 release.. This is interesting. I tried to replicate it, but found that I was unable to in Chrome. Sure enough, this CSS should ensure that the button has right padding of 5.5em, which is more than enough for the plus sign.\nI also tried a couple of different variations of HTML and got the same (correct) results. I'm going to follow up with Shaila via email and see if they can provide more info. Marking accordingly for now, and moving it back to the backlog.. This one also fell off my radar because I forgot to assign myself to it.. This turns out to be more complicated than I'd originally thought. There are a lot of moving parts here, and I would be way more comfortable tackling this when we have visual regression tests in place to help guard against unintended breakages elsewhere. @juliaelman, maybe we could pair soon and talk through it?. I spoke with @juliaelman and @yowill and we've agreed to move this out of the current sprint and into the backlog for re-prioritization.. @bruffridge I believe that's the intended behavior, but you can override by changing the CSS order property. The other thing to consider is whether what you're using as side navigation can \u2014 and, more importantly, should \u2014 be part of your site's primary navigation.\nIMO, our duplication of the side nav in the mobile menu on the docs site is a hack, but I also don't think that we should just drop the long list of components into a primary subnav menu, either. One solution might be some JS that moves the side nav into the mobile nav when the screen shrinks, and/or when it's opened, so that implementors don't have to manage the duplication in their own templates.\ncc @donjo @bradnunnally . What follows is my evaluation. I don't know that it makes sense to commit this in code.\nTL;DR action items:\n\n[x] Get guidance from the engineering chapter on code coverage tools, and incorporate one into our testing process. We would do this first, to better understand what we're testing and, more importantly, what we're not.\n[x] Modify our test suite to run unit tests in real browsers on Sauce Labs. This documents exactly which browsers we officially support, and lays out a clear path for deprecating legacy browser support down the line.\n[x] Evaluate visual regression approaches using a subset of Standards components and report back on which one(s) are worth considering. Specifically:\nThe GitHub approach\n[BackstopJS]\nScreenr\n\n\n\nMore detail below:\nCode coverage\nWe currently don't use any code coverage tools, the purpose of which is to determine how much of our JavaScript code (statement by statement) is actually tested when we run our unit tests. Without this, we can't really know whether our unit tests are covering all of the conditions we address in our code.\nWith respect to CSS, we could also evaluate existing CSS coverage tools, such as Clairvoyance and css-coverage. These would address the need identified in #1531.\nUnit tests\nOur existing unit test suite does a decent job of ensuring that our JavaScript functions as expected under ideal conditions. However, as I mentioned above, it's impossible to know for sure whether we're testing everything without a code coverage report to lean on. The other problem is that our tests run in a \"simulated\" browser environment called jsdom, which\u2014assuming it implements the DOM API to spec\u2014theoretically tells us whether our code will work in a standards-compliant (\"modern\") browser, but does not ensure that we're covering legacy browsers such as IE9.\nVisual regression\nVisual regressions are a category of bug in which changes to some part of the design implementation (HTML, CSS, or JavaScript) inadvertently affect the appearance of a component or page. Regressions are sometimes) intentional, but most often they are caused by overly broad bug fixes that cause problems in other contexts. (For instance, if somebody were to change the way that ul elements were styled, they might forget that accordions are implemented as unordered lists and forget to update the corresponding styles.) There are lots of different tools and techniques to perform visual regression tests, but they generally do some variation of:\n\nGiven a specific state of each page or component, take a \"baseline\" screenshot from one or more browsers\nEach time the test suite is run, take new screenshots of each component or page, in each state, and diff the pixels of the new and \"baseline\" images\nIf the number of pixels that differ exceeds some threshold (e.g. 1%), the changes must be manually approved\n\nThe simplest and most lightweight approach to this that I've seen is to commit the screenshots to git and do manual approvals for images that differ via GitHub pull requests. One issue mentioned by CM on Slack was that this approach (assuming it regularly generates slightly different images) might cause the git repo to balloon in size and quickly become unwieldy to sync. I think we need to do more research before committing to an approach, or a specific solution such as [BackstopJS] or Screenr.\n@juliaelman, could you review this evaluation? Assuming it's all good, the next step would be to create separate issues for each of the action items above and prioritize them accordingly.\n[BackstopJS]: https://garris.github.io/BackstopJS/. Bare minimum, we should have code coverage in our 1.0 release so that we have a baseline to measure against. I expect that later improvements to our unit tests would also improve our code coverage.\nI think some form of visual regression testing would be great to guard against accidentally breaking our CSS and, conversely, justify major version bumps when we introduce significant deviations. I would relish the chance to test the github-based solution.. Okay, all of the action items above have issues associated with them now. Only the code coverage one (#1696) is assigned to the 1.0 release. #1697 and #1698 are in the backlog awaiting review and prioritization.. This one fell off my radar because I forgot to assign myself to it. Fixed that problem!. cc @rogeruiz because the gulp stream recycling technique might be applicable elsewhere. Hey @donjo, is this fixed in your PR?. NICE! Fixed in #1925.. Resolved in #1661, which will be live in v1.0.0. We can add documentation for pre-1.0 releases if need be, but let's check with our users first.. Okay, I've checked off the release notes sub-tasks and added a new one to deprecate the wiki pages. Let's tackle that and the branch re-org tomorrow.. All of the code-related things are done here, so I'm going to close this and create a new, post-1.0 issue for the branch migration.. The code-related changes are done now, and will be part of the 1.0 release. The branch migration should happen post-1.0 in #1703.. This is basically done in #1702. Let's create a new issue to document what code coverage means, and how we deal with it in pull requests and/or releases.. This is done, and I've moved the documentation tasks over to #1704.. Done!. I removed the word \"Draft\" from config/gulp/doc-util.js. Merging!. Thanks, @juliaelman! I've pushed a commit with fixes for most of the above recommendations. The only one I haven't done yet is:\n\n[add] a note at the end that folks can email us or open an issue with questions or suggestions regarding the release process.. Okay, I've added a \"Questions?\" section.. Description updated, and I've marked this as WIP.. Okay, so I'm almost done with the migration to Code Climate. I had to contact support when I added the repo because I couldn't access the project settings to get the API token that the CI tool uses to submit reports, but they fixed it and the report is running now.. Well, we've got Code Climate now, but it's not reporting any coverage. I think this is because there's no coverage info available for the default branch (staging), so my suggestion is that we merge this to staging before 1.0 and test the coverage reporting in another PR. Thoughts, @juliaelman?. Putting this back on our radar for 1.0 wrap-up.. Done!. For the record, #1806 demonstrates what a slight reduction in code coverage looks like in GitHub:\n\n\n. Also, Code Climate enumerates the coverage \"issues\" that change in each branch, as you can see in the branch for #1806:\n\n. Hi @hrod! I'm\u2014personally and professionally, in my role as a front end designer here at 18F\u2014a huge fan of web components, and I've proposed implementing some of our \"UI components\" as HTML Custom Elements in #1423. But we've very interested in hearing from our users what their experiences with web components have been like, and whether they'd be helpful in the Standards.\nCan you tell us more about what you're doing (or thinking about doing) with web components at CivicActions?. @nerdstein no, but we will definitely consider it! Thanks.. Done in 18F/web-design-standards-docs#129, viewable on staging.. Done in 18F/web-design-standards-docs#129, viewable on staging.. I think this is a great addition. Thanks so much for your work and your patience, @colinalford! We're looking at merging this before our next release.. Hi @colinalford! Have you and/or your team written any documentation for this feature yet? We'd like to include something about it in our docs to accompany the next release. If so, could you either post it here or offer up a pull request on this file? Thank you!. @donjo @msecret this is all you!. For whoever is taking on the banner in this sprint, it might be good for focus to work on related style issues in #1662, then #1738.. This is also no longer relevant now that we've decided to remove all of the banner content in #1738.. DONE!. I merged staging into this branch! \ud83c\udf89 . See also: 18F/web-design-standards-docs#167. This is tracked in the aforementioned docs issue, so I'm going to close this.. Thank you for this, @konklone! For me this signals a need to refactor our header code and promote the banner as a discrete component. See #1596 for more info.. Thanks again to @konklone for pointing out that this copy is both wrong and (mostly) unnecessary because it describes properties of sites that users are already viewing. From here, my suggestion is to do the following:\n\nRemove the button and expandable content from the headers (and remove a whole bunch of attendant CSS and JavaScript! \ud83c\udf89)\nPromote the banner to \"component\" status\nMove the banner out of the header component and update our page templates accordingly\nMove our guidance for promoting trust on government web sites (using HTTPS and, whenever possible, using .gov and .mil domains) to the new component page. The current state of things is that we've removed this content, but that change has not been released to the public yet. It's easy to bring it back, but before we do I think we need to get a couple of things straight:\n\nI understand that some people simply don't know how to verify the authenticity of government sites, but did we validate that this particular implementation taught them to do so? Because I'm skeptical that folks are clicking that link and reading all of that text, then retaining that information next time they go looking for government web services.\nIf so, I'm certainly open to bringing this back and fixing the language, in which case we have several distinct issues to address:\n\nThere are quite a few government sites that are not on .gov or .mil domains, so that text is misleading. Maybe it makes sense to say that \"all .gov and .mil sites are [official blah blah blah]\", rather than suggesting the inverse (that .com, .org, or .fed.us sites are not)?\nThe HTTPS text is misleading. First of all, there's nothing stopping somebody from putting this banner on a site served over HTTP. In fact, according to Pulse, 25% of government-owned domains do not use HTTPS.\nThe mention of \"SSL\" as opposed to HTTPS is wrong.\n\nGiven the difficulty in communicating the domain and security criteria both simply and accurately, I think it makes a lot more sense to have the \"Here's how you know\" button replaced with a link to an official URL where we can explain all of this stuff with more authority and nuance. What we've got now is an accumulating content debt situation in which we're embedding static content on hundreds of sites with no plan\u2014or mechanism, besides expecting our users to copy and paste\u2014to keep it up-to-date.. Obviously I don't have any say in this since I'm no longer on the team or in the federal government at all, but I feel like I need to say something here.\nI'm 100% with @konklone on this one. I don't think that the Standards (or 18F) should be in the business of telling other agencies what content they can or should put on their sites. They can suggest everything from visual and functional patterns to voice, tone, and even specific language. But to say that the banner is this specific thing that federal sites need, with prescriptive (and inaccurate!) content, seems to me to overstep the responsibilities and boundaries of this project.\n\nThis is one of the only (if not the only) user-driven addition to the standards in some time (we have clear research that points to why it's there), and if the Standards are going to be responsive only to stakeholder concerns and not address user needs, then I question why we continue the project at all.\n\nI'd appreciate being able to have a conversation about the language and purpose of a UI component without diving into hyperbole like this. But maybe it's a fair point: If the project can't withstand a reasonable challenge to \"its only user-driven addition,\" then I'd say that's a pretty big problem. How the banner came to be is not, IMO, a good enough reason to saddle every USWDS user with its issues; and even removing it entirely (which is not what I would suggest) should not be the end of this project.\nI'd suggest offering the banner as a customizable component with suggested language, and allow agencies to customize it to their needs. Some may choose to use it without the expandable content; others may opt for content that better suits their needs. You could even remove a bunch of JS and CSS by refactoring it to use native <details> element and the graphic list/media block styles.. Some background: I suggested to @juliaelman that, in the spirit of using our own patterns on the site, we replace our bespoke side navigation layout with the one that the docs template provides. I time-boxed this today and \"did\" it fairly quickly, but I broke the side nav \"stickiness\" in the process.\nComing back to it this afternoon I found a solution that seems to work, but I haven't yet rolled back the other, hopefully unrelated, changes. So I think it's possible, but I'd like to reimplement it from scratch with a pairing partner to help ensure that we've considered all of the potential regressions. The other tricky thing is that Chrome shipped native support for position: sticky, so we need to find a representative browser that doesn't implement it for testing that Stickyfill is doing the right thing.. Thanks, @bruffridge! We're using Stickyfill, and it seems to work pretty well. As I mentioned above, the trick is making sure that the polyfill works as advertised now that Chrome has shipped native support.\nI'm also open to taking a strictly progressive enhancement position (so to speak) on this, which would mean probably using @supports to \"protect\" browsers that don't implement it natively from any of the sticky-specific styles. According to caniuse.com it's been available in Firefox and Safari for a long time, but IE still hasn't implemented it.. @bruffridge Did you also specify a top (or bottom)? From the MDN:\n\nYou must specify a threshold with at least one of top, right, bottom, or left for sticky positioning to behave as expected.  Otherwise, it will be indistinguishable from relative positioning.\n. Yeah, weird. I made a test case that illustrates the same behavior. You'll have to make the preview area really wide and relatively short to see it:\n\n\nSorry, but I don't have much more time to diagnose this, and I'm not with 18F anymore. \ud83d\ude22 . There's also some discussion of this in #1342.. This is basically done in #1749. Our build process now generates standalone HTML files from Nunjucks templates, and Federalist builds everything in our dist directory. You can see our docs and landing pages live there.. Thanks for weighing in, @jpyuda and @smileytech. I agree that a progressively enhanced approach might serve users better. Perhaps there's some sort of hybrid solution, for instance:\n\nThe static HTML puts a link in place of the \"Here's how you know\" button that points to some canonical guidance (maybe on standards.usa.gov, maybe not).\nThe JS upgrades the link to a button that reveals the updated content and links to the canonical guidance so that we can provide more info.. So as of f1277fa this is building on Federalist, and it looks like both the landing and docs pages are fully functional. \ud83c\udf89 . Indeed. I think we can work on the docs side of things when we get closer to the next release that this PR makes it into. In fact, this would be a great way to test out our new pre-release workflow. \ud83d\ude09 . One more thought: we might want to consider organizing these templates more logically, i.e.\n\nsrc/templates\n\u251c\u2500\u2500 components\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 accordion.html\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 banner.html\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 footer-big.html\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 footer-medium.html\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 header-basic.html\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 header-extended.html\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 etc.\n\u251c\u2500\u2500 pages\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 docs.html\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 landing.html\n\u2514\u2500\u2500 misc (?)\n    \u251c\u2500\u2500 meta.html\n    \u251c\u2500\u2500 scripts.html\n    \u2514\u2500\u2500 styles.html. We're going to hold off on organizing the template directory any further for now.\n@juliaelman and I also agreed that some very cursory tests should exist for this, and they need only ensure that our gulp build task does the following:\n\ncreates a dist/html directory\ncreates standalone HTML files in that dir for our \"docs\" and \"landing\" layouts\nboth of those files contain correct references to the CSS and JavaScript\n\nJulia has volunteered to write up some basic documentation for these files, too. \ud83c\udf89 . Okay, basic tests are in, as are HTML comments in our page layouts that include the (npm) package name and version, which in our case is uswds@1.0.0.. IMO, there is consistency in putting actual templates in the template directory and static, \"raw\" HTML in the html directory. Also, there already isn't a one-to-one relationship between the files in src and dist: we're transforming src/stylesheets into dist/css, for instance.\nHere's how it might look if we were more consistent:\n```\nweb-design-standards\n\u251c\u2500\u2500 src/\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 images/\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 fonts/\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 js/\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 sass/      (instead of stylesheets)\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 templates/ (note: plural)\n\u2514\u2500\u2500 dist/\n \u00a0\u00a0 \u251c\u2500\u2500 css/       (generated)\n \u00a0\u00a0 \u251c\u2500\u2500 html/      (generated)\n \u00a0\u00a0 \u251c\u2500\u2500 images/\n \u00a0\u00a0 \u251c\u2500\u2500 fonts/\n \u00a0\u00a0 \u251c\u2500\u2500 js/\n \u00a0\u00a0 \u251c\u2500\u2500 sass/\n \u00a0\u00a0 \u2514\u2500\u2500 templates/\n```. @juliaelman I thought you fixed this recently on the docs site. Is the problem that we haven't propagated that change to core yet?. After mulling this over a bit more in #1823, I'm thinking that we should lean more on our grid as a solution to this layout problem, and make it easier to horizontally and vertically align elements within the same grid. The side-by-side \"basic\" header should just be a two-cell grid with an adjustable midpoint, e.g.\nhtml\n<header>\n  <div class=\"usa-grid\">\n    <div class=\"usa-width-one-fourth\">\n      <!-- site title -->\n    </div>\n    <div class=\"usa-width-three-fourths\">\n      <!-- navigation -->\n    </div>\n  </div>\n</header>\nThis pattern could also apply to the extended header, which is really just a basic header with a secondary nav immediately followed by the primary nav:\nhtml\n<header>\n  <div class=\"usa-grid\">\n    <div class=\"usa-width-one-fourth\">\n      <!-- site title -->\n    </div>\n    <div class=\"usa-width-three-fourths\">\n      <!-- secondary navigation -->\n    </div>\n  </div>\n  <!-- primary navigation -->\n</header>\nThis has a pretty serious flaw, though: screen readers will announce the secondary nav before the primary one. However, if our guidance is that search should go first in the secondary nav, this order might actually make more sense. Thoughts, @donjo?\n. I also have to note that in order to keep the mobile navigation working, we probably need to keep it all in the <header>. I wonder if there's a way to turn this into a more generalizable pattern, though... i.e., can we turn anything into a collapsible mobile nav? \ud83e\udd14 . Moving this to the next sprint, once we've got Fractal up and running in #1826.. One thing I'd like to suggest we do here is cook up a standalone test case so that we can be 100% sure both that we're able to reproduce this and that our proposed fix resolves it. Here's one way that we could get there:\nOnce we have this repo building on Federalist (done in #1749, but not yet merged) we'll have generated CSS that we can test against on a branch-by-branch basis, e.g. this URL from the aforementioned PR and similar ones for our develop and release branches. (That's one fringe benefit of Federalist building our release branches: publicly accessible static builds with predictably versioned URLs!) There will probably be CORS issues with linked assets, but I'm confident that we can work around those when we get to that point.\nHaving these versioned URLs will make it easier to whip up test cases that can be forked with just a change to the versioned stylesheet URL to demonstrate whether the proposed solution works. So, not a state we'll likely get to immediately, but something to consider for bugs like this that are hard to demo.. Okay, we've got our analysis in this google doc (not public). @yowill, is there anything else you'd like to see here? E.g. should we summarize the analysis in this issue?. We spoke about this today and agreed to hold off on any further analysis until we've done some more interviews with folks who can speak to their own performance metrics needs. In the meantime, @msecret and I will be prototyping with Google's PageSpeed Insights and Lighthouse tools, both of which have command line interfaces, to see what we can reasonably do in an automated way. Issues for those forthcoming!. Whoops, this is a dupe of #1746. \ud83d\ude2c . Thanks for bringing this to our attention, @jasonkaedingICE. Our process for dealing with this will look something like this:\n\nCreate a failing test case in our unit tests\nResolve the problem without any regressions\nInclude the fix in our next \"patch\" release (likely 1.0.1). Update: I'm going to take a stab at patching this for now, but we should consider this specific case in #1423 and/or #1805.. @jasonkaedingICE I'm having a hard time reproducing this. Does this test case reflect your setup, or is there something I'm missing?. Whoops, you're right! How about this one? I lazily added an onsubmit=\"return false;\" form attribute to prevent the form from submitting (so we can see what's happening), but otherwise it appears to be exactly the same.. Hmm yeah, linking to the docs site JS and CSS might be the problem. Let me poke at it a bit more here. Thanks for helping me figure this out!. Okay, so this one appears to exhibit the bug. I've linked directly to the CSS and JS generated on our develop branch. I also nixed the open state so that we can be sure it's openable and not closable.. Okay, I think I worked out a fix in #1806. I updated the Fiddle above to point at the uswds.min.js generated on that branch, and it appears to work as expected.. For posterity, this updated Fiddle works with our new published filesystem layout, which puts all of the distribution files under the dist/ directory.. \ud83d\udcaf  One way to enforce some discipline around this is to start using a Jekyll theme for the docs site, which we've started talking about in 18F/web-design-standards-docs#130.\n\nIn this scenario, our site would consist almost entirely of content (Markdown and some basic HTML), shed most of its custom CSS, then embed and link out to standalone component previews and code samples generated by this repo. We could even consider replacing the entire components section of the site with Fractal.. This is tricky to trace back because the diff between v0.8.3 and v1.0.0 is huge and the difference in the grid is particularly difficult to disentangle from the rest of the work. However, I think the idea behind the grid is that the .usa-grid and -full classes aren't intended to host elements other than .usa-width-* as direct descendants. In other words, I think you want:\nhtml\n<div class=\"usa-grid\">\n  <div class=\"usa-width-one-whole\">\n    <h2>In the grid</h2>\n    <p>Hey, I'm in the grid!</p>\n  </div>\n</div>. Honestly I'm not sure, but my guess is that the Neat grid (we're still using v1.8) generates some of those rules automatically.\n@juliaelman can probably speak to this better than I can, and has also suggested that we nix Neat (and maybe even Bourbon) altogether, because rolling our own grid would not be that hard.. You're right, @jasonkaedingICE: incorporating a logo is not very straightforward right now because of the way that what I call the \"masthead\" and what we've dubbed the \"navbar\" is laid out in CSS. My suggestion for now is to implement the logo as a CSS background image with sufficient padding:\ncss\n.usa-logo-text {\n  background-image: url(/path/to/logo.svg);\n  background-position: left center;\n  background-repeat: no-repeat;\n  background-size: 1em;\n  padding-left: 1.25em;\n}\nYou can see a live example of this here. One caveat: if your title text might wrap to more than one line (on small screens, for instance), you should use background-position: left top, which will keep the logo aligned with the first line of text.\nRelated:\n I've suggested more formal support for a logo in #1594\n I've suggested refactoring of the header into more discrete and flexible components in #1596\n* Some more specific issues with the header layout are documented in #1753 and #1729. Yep, that's definitely a shortcoming of this fix. Feel free to weigh in on #1594 if you have any other thoughts, and thank you for your patience!. Sad face! But good to know, and good to pass along to our users. Thanks, @nickbristow!. Talking with @konklone the other day, we also discussed an idea for measuring HTTP 1.1 speed vs. HTTP/2, which is theoretically possible if we can get HTTP/2 support enabled on our (or Federalist's?) CloudFront instance(s). Eric, I'm very new to HTTP/2 and may need your help better understanding our options here. @wslack, we may need your help on the Federalist side for this, too.\nThis would add another dimension to the \"matrix\" of things to measure, so it's probably not reasonable to include in this issue. But I wanted to make sure we had it written down somewhere and put it on the radar of our friends who know about this stuff. \u270c\ufe0f . As a first step, here are the results of running a couple of our URLs through the PSI web app, with an emoji showing Google's color levels:\nPage | Mobile | Desktop\n:--- | ---: | ---:\nsite: Landing (home) | 62 \ud83c\udf4e   | 77 \ud83c\udf4a \nstandalone: Landing | 69 \ud83c\udf4a  | 83 \ud83c\udf4a\nsite: Docs (components) | 76 \ud83c\udf4a  | 79 \ud83c\udf4a\nstandalone: Docs | 83 \ud83c\udf4a  | 90 \ud83c\udf4f \nSo, that's interesting, right? There's a 7-point difference between the site and the standalone implementations of both page layouts, and the difference between mobile and desktop scores for each URL varies from 3 to 14 points. More tomorrow!. @wslack Yep, Eric mentioned that the other day. I'm just not sure what we need to do to turn it on, and how we can force HTTP 1.1 for testing purposes.. Ahhhh, shoulda read the fine print:\n\nHTTP/2 is enabled by default for all new Amazon CloudFront distributions, and for existing distributions HTTP/2 can be enabled by editing the distribution configuration.. We're going to include the initial measurements from this comment into a news/update on the site. I'll create a new issue for that and reference this one.. This is done. I huddled with our friends at GSA IT as they transitioned us over from a CNAME to an NS record, which now delegates DNS authority of standards.usa.gov to 18F. The lesson here is that if we ever want to use another subdomain of usa.gov (or any other GSA domain), we should get NS delegation first, rather than asking for a CNAME.\n\n\u270c\ufe0f\ud83e\udd13\u270c\ufe0f . Decided: we will use Google PageSpeed Insights and Lighthouse! \ud83c\udf89 . This is blocked by #1784 and #1785. Moving to the next sprint.. Update: the infrastructure for updates was merged in 18F/web-design-standards-docs#205. Next up, we need to swarm on making some content for the case studies and any other updates. (We can back-date any of these if publishing them all on the same date seems weird for whatever reason.). We also talked about including an update on our web performance research. I suggested to @bradnunnally that we include the initial PageSpeed Insights scores from #1776 into that post, because it's more of a snapshot of performance than something we want to commit to updating. I'm going to create a new issue for that post.. The build-out for this section was done in 18F/web-design-standards-docs#205. I'm closing this because we now have separate issues and pull requests (with one exception: the CBP case study) for each of these updates:\n\n18F/web-design-standards-docs#224 NASA case study\n18F/web-design-standards-docs#226 post-1.0 research workshop update\n18F/web-design-standards-docs#227 analytics (unresolved)\n18F/web-design-standards-docs#225 sticker sheet/design asset update\n18F/web-design-standards-docs#228 CBP case study. I see what this fix does, and it seems to solve the problem, but I'm not sure if the JavaScript fix is the one we want. In our accessibility guide (see: \"Skip navigation\"), we suggest setting tabindex=\"-1\" on the target of the skip link, #main-content. I made this change in the IE11 inspector, and it worked.\n\n@jasonkaedingICE, can you try adding tabindex=\"-1\" to your main content element and let us know if that fixes the problem in your 508 tests?. Thanks, @jasonkaedingICE. We're mulling over options in this pull request, so feel free to weigh in there if you have any thoughts on the implementation.. Cheers, and thanks for helping us figure it out @jasonkaedingICE!. I really like the idea of performance being an explicit design principle.. See previous discussions in #815.. Yeah, good points @msecret. Cc'ing @lauraponce on the interview question tip.. Waiting on updates to the contribution docs in #1874.. Okay, here we go!. Thank you, @CharleyPeng1, but I'd like to keep the explicitly fenced code blocks because they allow you to indent and un-indent the content at will and retain the formatting, and to change the syntax highlighting language if need be.. A fix for this was introduced in #1835 with the new usa-embed-container class, and we're queueing up the fix's implementation on our site to coincide with the next release. Thank you for reporting it, @joshuafarray!. cc @joshbruce for visibility. Note: I haven't yet been able to create a failing unit test for this issue because I couldn't figure out how to get jsdom to throw a validation error. However, I was able to make two standalone demos that fail and pass, thanks to the JS generated by our Federalist builds:\n\nThe \"failing\" demo points to the JS generated by our develop branch\nThe \"passing\" demo points to the JS generated by this branch, patch-accordion-events\n\n@juliaelman: I'm happy to pair on figuring out the unit test issue if the JSFiddle demos aren't sufficient.. @jmolayem this sounds interesting! Can you elaborate a bit for us, or provide some examples?. Update: 1.1.0-pre is out!. We're going to let users kick the tires on the pre-release and push this out in a week, assuming nobody discovers any show-stoppers.. Done in #1796! See #1898 for more details.. Here are my observations so far:\nMarkup variations\nThe HTML variations between one configuration of the header and another were unexpected, and make it difficult to migrate from one to the other:\n\nOnly the basic headers wrap the contents of the header element in a .usa-nav-container.\nOnly the extended headers wrap the contents of the nav element in a .usa-nav-inner.\nOnly the basic-mega header requires adding the usa-header-basic-megamenu class to the header.\nBoth -mega headers require additional usa-megamenu and usa-grid-full classes on their ul.usa-nav-submenu, which are nested deep inside the primary navigation.\nThe columns in mega-menus are constructed from individual unordered lists, which is tricky to automate (from a templating standpoint) and might be awkward to navigate via screen reader.\nThe fixed column arrangement in mega-menus also has challenges with multi-line links and large link counts (as mentioned in #1638), but I'm not sure that we should/would recommend lists long enough to require 5 columns. (Maybe we need to suggest a limit?)\n\nComponent boundaries\nI'm starting to get a better sense of how we can break the header up into distinct components so that we can test them more easily and document them more clearly. Here are some of the moving parts I've found, and a few of their quirks and shortcomings:\nPrimary navigation\nThis has three visual configurations:\n\nIn the basic header, the navigation aligns with the site title's bottom edge and flows from the right edge of the container.\nIn the basic-mega header, the navigation moves to its own line and flows from the left.\nIn the extended and extended-mega headers, the navigation appears like basic-mega with an additional top border.\n\nSecondary navigation\nThe secondary nav only appears only in the extended headers, and looks just like the basic header's primary nav, only with lighter text weight and | separators between each link. In our templates, it always includes an instance of the search input, but this is clearly optional.\nSearch input\nThe search input only varies from one configuration of the header to the other based on whether it appears in the primary or secondary navigation:\n\nIn basic headers, this is displayed in the primary navigation and always appears flush right, aligned with the other primary links. (In markup, it's actually the last item in the unordered list that contains the links.)\nIn the extended headers, this is displayed in the secondary navigation and becomes an interactive component with a button (styled to look like a link) that hides itself and shows the actual search input when clicked. Clicking outside of the input hides the input and shows the button again.\n\n\ud83d\udc1b  \u26a0\ufe0f  When JS fails to load (or there are multiple instances of the search input on a single page, as is the case on our header test page), both the button and input remain visible:\n\n\n\n\n\nThe search input seems ripe for simplification. We can nix the JS behavior altogether and alleviate some accessibility problems by either doing all of the stuff we're doing now in CSS (see #1435) or simply eliminating the link-like appearance altogether, as suggested in #1640.. Thanks, @line47 and @donjo! Let's keep CSS changes out of this for now.\nOne thing that I like about where we're going with the templates is that they suggest a more explicit, 1:1 relationship between data and component templates, which is how I think things should work. I've isolated the parts where we break that rule, mostly so that we can have the docs and landing page templates work without specifying different navigation data to each one.\nIn a Fractal world, though, each component would expect a single template variable to drive its logic, and page templates would become compositions of all the relevant components (the docs template would compose header--basic, and landing would use header--extended) and their own context data. (You can see how this works now three levels deep in header-basic.html, nav-primary.html, and search.html.) Porting these over to Fractal should be really simple, and would give us previews of all of the individual components out of the box. \ud83e\udd17 . Thanks for the review, @msecret! I just want to point out that we haven't committed to officially supporting these templates yet; they're really just a way for us to more easily output static HTML, and for us to wrap our heads around how well our components are specced out. I see this as a stepping stone to getting everything in Fractal\u2014which, time permitting, I think we can start next week. \ud83c\udf89 . Hi @angela-smithers, can you tell me more about your setup? It looks to me like you're linking directly to our source JavaScript files rather than the generated uswds.js or uswds.min.js files in the zip distribution:\nhttps://github.com/18F/web-design-standards/releases/download/v1.0.0/uswds-1.0.0.zip\nYou won't need another framework to use the Standards if you follow the download installation instructions. I'm not familiar enough with SharePoint to suggest a tool that works with CommonJS modules, but my recommendation is to get your site working with the static (zip) distribution first, then follow the npm installation instructions when you need to do something more complicated.\n. Okay, thanks! Feel free to re-open this issue or create a new one if you encounter any other problems.. Phase 1: complete in #1827!. Yeah, the messy HTML output is bugging me too. Let's file a separate issue for that, and the dark buttons (which I think comes from a docs site-specific rule). Also, merge conflicts. \u2639\ufe0f . Okay, I fixed this up so that it's building on Federalist now, and the Fractal CLI (npm start) works locally. @msecret, the one thing I'm a little concerned about is that we had to move a lot of dependencies to \"production\" (dependencies, vs. devDependencies) to appease Federalist running npm install --only=prod.\nIt's not a bug, exactly, but this will likely cause npm installs of uswds to take quite a bit longer. I'd like to push back on Federalist's behavior, but for now there doesn't appear to be any other way to get this repo to build.. Thanks for reporting this. We've determined that disabled/inactive form elements don't have the same contrast requirements as interactive ones. See #757 for more info, and this thread on UX Stack Exchange.. That's an interesting challenge. Maybe a non-interactive element (an image, say) with aria-checked=\"true\" would allow you to show an image and provide more informative cues to non-sighted users?\nPaging our resident accessibility expert @nickbristow \ud83d\udea8 . I'm so sorry for the confusion, @angela-smithers! The README currently reflects our develop branch, which has not yet been merged into master for our next release. Even then, our generated page templates don't include accordion examples (yet). If you're looking for example accordion code, then this template (which is actually just static HTML) is your best bet. You can also find it on the site, in the \"Code\" accordion beneath the live example:\n\n. Can you tell me more about which files and browser you're using? From that screenshot it looks like you're using the right JS file (which should be js/uswds.js or js/uswds.min.js in your unzipped distribution), but I've never seen that particular issue with the \"bundled\" script.. Okay, so the require() calls in the JavaScript are an artifact of browserify, the tool we're using to \"bundle\" all our little JS files and third-party dependencies. They're supposed to be there, as you can see in both the (forthcoming) v1.1.0 build and the minified one.\nChrome shouldn't have any problem with these files, at least insofar as reading them. I think what you're seeing is an execution error, but it's hard to say without seeing your console output. Would you mind either posting your HTML and console output here, or even creating a standalone test case on JSFiddle?\nHere is an example that references the v1.1.0 JS and CSS from the above URLs after I pasted them into the \"External resources\" section of the UI:\n\nOr, if you want to more closely mimic your local environment with your files, you can copy and paste the contents of your uswds.js and uswds.css files into the respective panes of the UI, as in this fiddle. If you can do this and post the URL of your test case here, I should be able to more easily diagnose the problem. Thank you!\n. Okay, so you're not actually getting any errors about missing files in the console: those are just bad paths to your FontAwesome web font.\nI can't test this HTML directly because it references a lot of assets from your local network, but it looks to me like the problem is that you're using oig- prefixed classes rather than usa-. We don't officially support custom class prefixes, though if you must have them you'll need to replace all instances of usa- with oig- in both the generated CSS and JavaScript. Before you do that, though, I would suggest using the usa- classes first to make sure that everything works without modification, as expected, in your environment.. I couldn't tell from your last comment whether you were able to get the accordions working or not. By \"All else is the same\", do you mean that they're still not working?\nWe're hoping to release v1.1.0 next week, but that's not going to give you the ability to easily customize the usa- prefix. My suggestion for now is to do an automated search-and-replace of usa- with oig- in both the generated CSS and JavaScript. That's something you should be able to do with a future release without much trouble.. I'm going to close this out now that we've merged our Fractal work in #1827 and updated the README accordingly.. Thanks for taking a look, @toolness! I took some time this afternoon to make a little React app to test out this approach, and it appears to work. Check it out. Only the gray section is actually rendered with React (every time you click one of the two buttons), but it works the way I'd expect it to: if you open an accordion with delegated listeners then re-render the DOM with React, it doesn't change the aria-expanded and aria-hidden attributes that control the visibility of the sections.\nThis is the first time I've really used React, but it seems to me that users can either go this way (using the Standards JS) or re-implement the accordion interactivity in React, which seems like it might actually be pretty straightforward.\nUpdate: you can also peep the code for the React app.. Okay, so this React app actually turns out to be a pretty decent test of all the components I've upgraded to use event delegation. Everything outside of the React-rendered accordion is vanilla JS and appears to work well. The tests pass in jsdom, too!\nTime to test out Angular?. Hey @joshbruce, I could use your eyes on this, as it affects what your team is doing with Angular. The TL;DR is that this refactor uses singular listeners on <body> to route events to the right component-specific handlers, which should solve issues caused when Angular re-renders DOM elements that receive component interactions (accordions, header navigation, etc.).\nIf you have a second, would you mind doing one of the following?\n\nGrab this JS (minified) and test it with your Angular stack locally; or\nMake a publicly viewable test case that uses the above linked JS, e.g. on JSFiddle or CodePen?\n\nThank you!!. Well, this has quickly evolved into a complete refactor of our JavaScript. Along the way, I've been refactoring the jsdom-based unit tests, too, and noticed that there are tests missing for at least two \"components\":\nOur skip-nav link behavior, which is currently a no-op because it targets the wrong class. It might actually solve 18F/web-design-standards-docs#238 if we update it and add tests, but my preference is to axe it entirely and create it from scratch when we decide to re-prioritize that issue.\nThe footer behavior is poorly documented, uses an egregious magic number for the mobile nav breakpoint, and has zero tests. I didn't even realize, for instance, that it only targets the \"big\" footer. We should take a look at some of the implementations out there to see if users are even using this, and axe it if not.\nThe lack of tests for these is a big contributor to our code coverage gaps (some of which this PR closes!), especially with the footer being one of the more complicated behaviors.. Here are some issues I've identified looking at the Fractal build of this branch:\n\n[x] The accordion doesn't recognize that it's closed on the first click.\n[x] The big footer accordions don't collapse automatically when you shrink the screen width.\n[x] The password reset form doesn't toggle the visibility of the password.\n[x] The header navigation defaults to open.\n\n(Checked ones have been resolved.). I've resolved the above issues and added the Fractal preview link to the description.\n@AndreaSigz, @donjo, @bradnunnally, @yowill: if any of you have a moment to spare, would you mind clicking around at the above URL and see if anything doesn't work the way you expect it to? You can resize the component preview panes to test out responsiveness with the handle along the right side.. Okay, @jseppi gave me a preliminary review, and here are some things we identified:\nPonyfills and polyfills\n\nI accidentally removed the classList polyfill from our polyfills module.\nThere's a call to Array.prototype.reduce() in my dataset ponyfill without a corresponding polyfill. We could also reduce the surface area of our own code by replacing this with a well-tested npm module.\nRather than using the array-foreach and array-filter ponyfills and turning them into polyfills, we should just require() two polyfills.\n\nWe should either look into using autopolyfiller or include Babel's.\nES2015/ES6\nOne potential solution to the ES2015 bundling issue mentioned in the description (in which ES5 users won't be able to use our JS modules without Babelifying) is to change our main entry in package.json to point at the generated browser bundle, rather than src/js/start.js. I did some digging on github and found that most users are do require('uswds'), in which case this would be fine. The problem would be for users who require submodules directly, such as @labzero folks in their React header. (Their code would need to change, but not drastically, to support the new API.)\nEither way, I think we should bring back js/src/start.js so that people referencing it directly aren't completely hosed. (cc @joshbruce and co. in sam-web-design-standards) For ES2015/ES6 users, we could add \"jsnext:main\": \"src/js/uswds.js\" to package.json, which should give the new hotness to ES6 users automatically.. Okay, so as of c8085f8 I think the polyfill/ponyfill situation is much better: I've replaced our home-brewed DOM ready and dataset implementations with domready and elem-dataset, respectively (which eliminates the reduce() call, too); the classList/DOMTokenList polyfill is back, and I've kept the hidden polyfill because it's so dead-simple and I couldn't find a 3rd-party replacement that wasn't much larger. As it stands, the last two are the only changes that our JS makes to the global environment, which is good practice.\nI've also renamed uswds.js back to start.js, and updated package.json accordingly in f6dc769.\n. @joshbruce thanks! FYI, you and your team can test this branch by npm installing from git, a la:\nnpm install --save \"uswds@https://github.com/18F/web-design-standards.git#feature-event-delegation\". Thanks for the review, @jseppi! I agree that we should be using the guild-approved config; let's tackle that in a future PR, too. In the meantime, I'll fix up some of the other stuff you raised above.. Also: I did a quick manual test of the accordion in IE9 on Sauce Labs, and... it works! \ud83d\udca5 \n\n. Okay @jseppi, I think I'm ready for a final pass.\nI addressed all of your comments above (saving more advanced ES6 features for later, normalizing all click events, etc.), tests pass, and it looks good in Fractal. I even added both a Fractal variant for the multiselectable accordion (won't be available until Federalist finishes the build) and some additional unit tests in 44ac51e.. Here we go... \ud83e\udd1e . Some articles and tools to get us started:\n\nCSS Audits on A List Apart\nCSS Dig is a Chrome extension that audits selectors, properties, and unique colors.\nType-o-matic is a Firefox extension similar to CSS Dig.\ncssaudit tells you which selectors in a stylesheet aren't used in one or more URLs, which sounds like exactly what we need.\ncss-style-guide-audit\nHow to perform a CSS audit is opinionated, but worth considering.\n. This might also dovetail nicely with #1705, since there may be CSS rules or properties that we can remove once we've officially abandoned IE8.. Let's close the issue after we merge the PR. :). Hi Nancy, I'm going to forward this response to the mailing list for posterity:\n\nThere are lots of different ways to do this (depending on your deployment environment, etc.), but the simplest way to get started is to create a .sass or .scss file in your Sass source directory that imports the Standards directly from the node_modules directory created by npm. So, assuming that you've run npm install --save uswds to install the Standards npm package, you could have a sass/main.scss file that reads:\nscss\n@import '../node_modules/uswds/src/stylesheets/all';\nAnd when you run npm run sass, you should end up with the Standards CSS in css/main.css.\nThere are more detailed instructions on our getting started for developers page.. I'm so sorry, @njohnson! I was referring to this from your email:\n\nI installed node and added package.json   It seems to be fine. I also installed node-sass and seemed to compiles when I added \"sass\": \"node-sass -w sass/ -o css/\"  to the script section of\npackage.json\n\nSo I assumed that you had this in your package.json:\njson\n\"scripts\": {\n  \"sass\": \"node-sass -w sass/ -o css/\"\n}\nIf you replace the \"scripts\" portion in the JSON you posted with the above snippet, you should be able to run npm run sass to build and watch files in the sass directory, and any .scss or .sass that doesn't begin with _ (e.g. sass/main.scss, but not sass/_variables.scss) will be converted into a corresponding .css file in the css directory. \ud83e\udd1e . Okay, let's break this down piece by piece:\n\nYour package.json tells npm which dependencies to install (uswds and node-sass), and which \"scripts\" you want to run as shortcuts.\nWhen you execute npm run sass, npm runs the \"sass\" script with ./node_modules/.bin in your shell path, so that it can find the locally installed node-sass executable, ./node_modules/bin/node-sass.\nWithout the -w argument, node-sass sass/ -o css/ will look for .scss or .sass files in ./sass/, and output a corresponding .css file in ./css/ for each one that doesn't have a leading _ in the filename.\nThe -w argument tells node-sass to \"watch\" the input file(s) for changes, and recompile automatically.\n\nI think that if you have the above working (there are no errors when you run it), then the problem is probably the -w switch, which (I just learned) does not build the CSS files when you first run it. Remove that, and it should work.\nJust to be sure, I whipped up a quick example gist that demonstrates the setup, with a separate sass-watch \"scripts\" entry that passes the -w flag to the sass script. Good luck!. Hi Nancy,\nI'm confused about your package.json. It looks like you might have cloned this repo, because that's what it would look like if you ran npm init -y in that project's directory. Did you try starting from scratch with this gist?. Thanks for reporting this, @chenxsan! We'll take a look at it as soon as possible.. @jdmb77 I'm fairly certain that the presence of the disabled attribute is all that matters: disabled and disabled=\"\" (or disabled=\"disabled\", which used to be common practice in HTML4) are all functionally equivalent.\nEither way, it looks like the issue is that we don't actually have any general styles for disabled text inputs. Firefox gives them a gray background by default, but Chrome doesn't, as evidenced by my inspector:\n\n. Not rude at all! For comparison's sake, I made a test fiddle that demonstrates the bug. In Firefox (left), the disabled text input has a gray background; in Chrome (right), it's white:\n\nThis is the extent of the user agent styles that Chrome (v57.0.2987.133) shows me:\n\nInterestingly enough, if you remove the Standards CSS from that page and keep the white background (in this fiddle), they've both got white backgrounds:\n\nAnd with no JSFiddle framing at all, just:\nhtml\n<input type=\"text\" value=\"enabled\">\n<input type=\"text\" value=\"disabled\" disabled>\nthey both look pretty much identical:\n\nFirefox (v47.0.1) applies the following user agent styles to input:disabled:\n\n\nI honestly can't make heads or tails of why that background color (#dadada) is only applied to our styled inputs and not the un-styled ones.. @jdmb77 I think this might actually be a platform thing. Chrome and Firefox both probably have different user stylesheets on Windows than on Mac to better match the OS's native text field appearance.. This is as good a place as any to talk about what's wrong with the current footer accordion, which you can see in action in Fractal.\n\n\nIts behavior isn't documented anywhere. There are some vague references on the site, but they're not particularly helpful:\n\n\nCode the navigation so that pressing the tab key moves focus from link to link in the navigation, even when the navigation has collapsed into an accordion.\nUse the big footer when you want to replicate your site\u2019s navigation scheme in the footer and offer newsletter signups.\n\n\n\n\nOn the HTML side, there's a very big accessibility problem: the <h4> elements act as buttons, but they're not actually buttons. I think it'd be great if the primary nav that we use the header could just be transposed to the footer and work as expected.\n\n\nOn the JS side, we've got a bunch of logic that kind of implements the same behavior as accordions, but not really. I'm not sure why this isn't implemented as an actual accordion, as in the header.\n\n\nOn the CSS side, there are a bunch of styles that implement the accordion behavior with an un-prefixed hidden class. See also: #1837. @donjo since you've reviewed this I've pushed a few commits refactoring the header templates so that there's less duplication of context data and HTML. Mind taking another look when you get a chance?. Ping!. I'm putting this on the sprint docket so that we can discuss whether it's time to move to using the Jekyll theme (and cutting down dramatically on the amount of custom CSS and HTML that we use on the site) and, if not, what else we need to do to get us there.. This is essentially superseded by https://github.com/18F/web-design-standards-docs/issues/130. We'll hold off on meta-template-izing the components until we're in a better funding position.. We can cut this before the site updates are ready. We'll need to at least publish this to npm and update the dependency on the docs site, and the release notes won't be published on the docs site until we publish the github release in this repo first.. Thanks, @maya, this is great. It's definitely something to consider when we get around to working out a general solution for line lengths in #1603 and #1682.. I'm queueing this up for v1.2. Thanks, @maya!. This would also be a good chance to do #960.. We could pretty easily do this with a Sass map and an @each loop:\n\n\n```scss\n$colors: (\n  primary: $color-primary,\n  primary-alt: $color-primary-alt\n);\n@each $name, $color in $colors {\n  .usa-fg-#{$name} { color: $color; }\n  .usa-bg-#{$name} { background-color: $color; }\n}\n``. Moving this to the current sprint so that we can split it up and prioritize individual items accordingly.. Switching this back to WIP so that I can add docs.. Okay, ready to go!. Thanks for reporting this, @njohnson! We'll take a look as soon as possible.. @njohnson can you give us any more info, such as the version of Firefox? Thanks!. Closing for now because we aren't able to reproduce.. This will need to be done as part of #1915.. One thing we could do here might be to show diffs between v1.1 and v1.2 bundling examples, maybe as part of #1923?. Support for [webpack babel-engine-plugin](https://github.com/SamVerschueren/babel-engine-plugin) is done in #1940. The plugin should detect that theuswdspackage is compatible with Node v4 and above, and compile its JS down to ES5 accordingly.. This is basically done. Remaining documentation tasks moved to #1951.. This looks like a bug to me. We're [applyingmargin-left: -2remto all checkbox and radio inputs](https://github.com/18F/web-design-standards/blob/master/src/stylesheets/elements/_inputs.scss#L143-L145) \u2014 **regardless of context** \u2014 then rendering our fancy-looking controls with generated content [withwidth: 1.8rem](https://github.com/18F/web-design-standards/blob/master/src/stylesheets/elements/_inputs.scss#L177). You can see how we paper over this with2em` of padding around the radio buttons in Fractal, and how even then they hang outside of the content box:\n\n. Thanks for the input, everyone!\n@msecret, we do know from searching on github that there are some common uses for the \"private\" APIs. The thing is, most of them are workarounds for the problem that #1836 addresses. For instance, React users are importing our components to re-initialize behaviors after re-rendering the DOM. That API would be a no-op in the forthcoming release.\nWhat I'm not totally clear on is what constitutes our \"public\" and \"private\" APIs when we've got unit specs that test an API we haven't documented anywhere. If our specs were refactored to run on browsers and use the generated JS, then I'd feel a lot more comfortable rolling this refactor into the 1.2 release because the tests would continue to work. My question is: Does the fact that we've written our tests against the internals make us responsible for keeping those APIs around until we bump to 2.0?. Decided: we're going to build in a 1.x API compatibility layer so that we can release the event delegation refactor in v1.2.. This was automatically done on Circle CI when we merged #1796. You can check out the release on npm. :all-the-party:\nOne thing to note is that the first build on Circle failed because the services caches npm dependencies between builds on the same branch. We get around this by rebuilding without the cache (which fetches dependencies again from scratch, and rebuilds the cache in the process), but it would be nice to avoid having to do this manually in the future. One way we could do it is to rm -rf node_modules after the build finishes, which happens before Circle saves the cache. We'd probably only want to do this on the master branch, though, which only gets new commits when we release.. Yeah, this is super annoying. I tried disabling them to no avail. See also: #1046 #1555 . @mariamarrero Thank you! I think these are both great bits of feedback. The menu staying open when you click anywhere else on the page is something that's been bothering me for a while, so thanks for bringing that to our attention. I'd like to queue this up for our 1.2 release.. Thanks, @donjo. Would you mind fixing this for me? I don't have my laptop with me today. \u2639\ufe0f. Thanks for this, @line47. I agree that using color: inherit is the fix here.. This is a duplicate of https://github.com/18F/web-design-standards-docs/issues/278.. Yep, we need to figure this out. Duplicate of #1904.. This was fixed in https://github.com/18F/web-design-standards-docs/pull/285. Thanks for letting us know!. Here's what I've found when searching for \"private\" API references on github, which I'm sussing out by searching for \"uswds/src/js\":\n\n\n~This style guide depends on ^1.1.*. It imports utils/when-dom-ready and utils/select for its own Dropdown component, and uses utils/when-dom-ready for its site navigation. @joshbruce is the maintainer.~\n\n\n~This procurement prototype depends on ^1.0.0 and imports components/accordion, components/navigation, and utils/select, then initializes accordions with new Accordion and the header navigation by calling navInit() without any context. In this case, Accordion can be a noop, and navInit() should be a noop because we don't want to add duplicate event listeners to existing elements. No activity in 2 months, though, so this may not be relevant? Maybe @JeffreyATW can shed some light.~\n\n\nThe FDA's FSA styleguide depends on ^0.13.1, and doesn't use any of our JS. @francisrupert appears to be the maintainer.\n\n\nThe PIF school meals prototype depends on ^0.11.0, and makes accordions work in React by bringing along jQuery and initializing each instance with new Accordion in componentDidMount(). In this case, the Accordion class could be a noop because all it's intended to do is add event listeners. According to the README, this prototype is no longer active. @rossdakin, can you confirm?\n\n\nThe SAM design standards depends on * in its package.json \u2014 which we don't recommend! \u2014\u00a0and appears to only require start.js directly. @joshbruce, we should talk about this when we're closer to releasing so that you can make this more future-proof.\n\n\nFor those of you tagged above: Sorry to disturb you! I just wanted to give you a chance to let us know if these projects aren't being worked on so that we can de-prioritize them. Also, if you have internal projects that use the Standards and reference \"internal\" APIs (via require('uswds/src/js/...'), etc.), please read #1885 and weigh in here if you have thoughts or questions! \ud83c\udf7b . Okay, so with the two repos that Josh and Jeffrey no longer active, we're left with only 0.x references, which are safe to ignore. The school meals prototype is marked as no longer active, and Josh noted the SAM design standards have been deprecated; leaving only the USDA FSA style guide, which depends on ^0.13.0.\nIn other words: if GitHub is any indication, there don't appear to be any active projects using the private JS APIs. Just to double-check, I reviewed some of the Standards-based framework implementations, such as uswds-react, and found that they were either re-implementing component behaviors in the framework (e.g. uswds-react's Accordion) or just not implementing anything dynamic.\n@msecret, I'm starting to think that a backwards compatibility layer might be unnecessary. \ud83d\ude2c . Thanks, @rossdakin! This is about deprecating the \"private\" JS API in a future release, which won't affect that project because its package.json essentially tells npm to use the latest 0.x release. We will never un-publish releases unless there's a serious security concern or similar issue.. @msecret I've already the work in #1908, and it seems like the right thing to do \u2014 especially since we don't know much about people using it outside of github. If you have the time to review that PR, we should be good to go here. \ud83e\udd1e . Fixed in #1908.. Oof, sorry @francisrupert. Friday (5/26) is my last day, but I might be able to help you before I leave, and I'll always be around on github afterwards! I don't think that getting the Standards to \"work\" with Node v0.12 would really be a problem, but you'd be pretty drastically limited in which other tools you could use. For instance, I just tested it, and it's totally possible to at least install v1.1.0 with 0.12 under nvm:\nsh\nnvm use 0.12\nnpm init -y\nnpm install --save uswds\nYou'll see a lot of complaints from npm that the uswds package's dependencies and sub-dependencies expect a later version of Node (most want v4 or greater), but there's nothing  complicated going on in the standards code that prevents you from using them with other v0.12-compatible tools, such as Gulp or Grunt. Does that make sense?. @francisrupert that's very weird. Maybe the version of npm that ships with Node v0.12 doesn't recognize the leading @ in the @frctl/fractal dependency? \u2639\ufe0f . For reference: Node.js long-term support (LTS) plan. So, I think there are two things that need to be decided here:\n\nIs long-term support (LTS) for major versions even applicable? In other words, does this team want to commit to releasing bug fixes for 1.x releases after 2.0?\nDoes a regular release schedule make sense for this team? For instance, does it make sense to commit to releasing at least a patch or minor version every other sprint?\n\nRe: 1), I think it's really up to us. If we don't have the time or resources to manage bug fixes (let alone new features) for 1.x and 2.x, then the answer should be no. You may want to defer this decision until you really understand what types of breaking changes 2.0 will include.\nRe: 2), I think that having a regular release schedule would help everyone get in the habit of releasing more often and thinking more long-term. The more often you do it, the quicker you'll get better at it.\nAnd with that, I'll hand this issue over to @yowill. \u270c\ufe0f . So in this comp, the bordered area is a live preview, right @bradnunnally? Also, what type of content goes in the \"Documentation\" accordion vs. above the preview? This might need to be addressed on a case-by-case basis, but I could also see putting the documentation above the preview.. Oh right, the screenshots! I was going to look into automating that :)\nI didn't develop any of the content, either. If the images are going to be that big, though, I think the documentation content should come first so it doesn't get pushed below the fold.. @donjo maybe, but I worry that scaling the content rather than screenshotting it gives a false impression of how it looks or behaves, because I think that people have different expectations when they see an image as opposed to an interactive thing. Could we first identify which components need to be unresponsive? Is it just the header and footer?. Oof, yeah. I'm running the app locally and don't see the layer control, so I can't debug it directly. But if I were to guess, I would assume that this is an issue of the Standards CSS applying styles to <label> that aren't friendly to Leaflet's markup. However, I did visit Leaflet's demo page and added the Standards CSS with this JS snippet:\njs\njavascript:(function(){var s=document.createElement('link');s.rel='stylesheet';s.href='https://unpkg.com/uswds@1.1.0/dist/css/uswds.min.css';document.head.appendChild(s);})();\nand I'm not seeing that issue:\n\n@EricSchles can you deploy the app to your cloud.gov sandbox so I can see what you're seeing?. Okay, so I was right: this is an incompatibility between the Standards CSS and Leaflet's controls. The <label> elements have margin-top: 3rem (which seems really big!) and the radio inputs themselves are hidden\n\nI was able to get it looking (mostly) right by disabling a bunch of our CSS rules:\n\nIn other words, I think that you could add the following CSS to override this behavior in another stylesheet referenced after uswds.css:\n```css\n.leaflet-control label {\n  margin-top: initial;\n}\n.leaflet-control input[type=checkbox],\n.leaflet-control input[type=radio] {\n  appearance: initial;\n  -moz-appearance: initial;\n  -webkit-appearance: initial;\n  display: initial;\n  height: initial;\n  margin: 2px initial initial;\n  opacity: 1;\n  outline: initial;\n  padding: initial;\n  position: initial;\n  width: initial;\n}\n```\nCan you try this and let us know how it goes, @EricSchles? \ud83e\udd1e . @donjo I think this merits opening another issue around how we style radio and checkbox inputs by default. This is related to #1881, but I think there's something that we might need to do to either scope our input selectors more specifically (either with a containing class or a class on the inputs) or add a class that undoes the default styling.. Hey y'all, I think this might be easier to isolate and hack on elsewhere. Here's a starter fiddle without any of the custom CSS. If you prefer CodePen (which refreshes automatically), you can start from this one.. Hi @bruffridge, we closed https://github.com/18F/web-design-standards/issues/1724 because, as of 1.1, the banner no longer has any collapsible content. See #1738 and #1748 for more info.. This is ready for review! You can browse the examples here. (Maybe we should add a README in that directory, too?). I'm on the fence about who we're targeting with these, but I defer to @yowill. When we last met in person at the beginning of this fiscal year, we agreed (if only informally) to target our \"Master Builder\" and \"Lone Ranger\" archetypes, both of whom likely know just enough to be dangerous, and are at least passingly familiar with Node.js, npm, and Sass.\nIf we want to open it up to less experienced users, maybe we could turn this into a choose-your-own-adventure thing, where we guide them more helpfully through the basic concepts if they're not familiar with Node.js, npm, Sass, or even the more general concepts of JS bundling and CSS preprocessing?. Yeah, let's get this merged now, and create another issue for creating a /examples/README.md, and maybe even corresponding docs for the site that link to these examples with more narrative instructions?. This also fixes #1682, right?. I added a preview link to the alerts page for easy access. \ud83d\ude01 . Hi @AceInfoSolutions,\nI think that we have a fix for this forthcoming in v1.2.0. I'm not super familiar with Angular 1, but I believe that this is an issue of timing: The scripts load serially, but the Angular components render asynchronously, and the Standards JS assumes that the DOM is \"fixed\" when it's ready. If this is the case, another fix would be to asynchronously load your current uswds.min.js only once Angular has finished rendering. In other words, something like:\njs\n// you'll need to implement or replaced `whenAngularIsReady`\nwhenAngularReady(function() {\n  var script = document.createElement('script');\n  script.src = 'path/to/uswds-1.0.0/js/uswds.min.js';\n  document.body.appendChild(script);\n});\nFor more info, see #1423. If you'd like to test it, you can download our (pre-release) 1.2.0 JS.. Great, thanks for getting back to us! I'm going to close this in favor of #1423.. @msecret I would really appreciate your eye on this, since it mainly concerns backwards compatibility in #1885 and #1915.. Hi @jgacuca567, can you tell me which version of uswds was saved in your package.json, or share your code repo? I'd just like to be sure we can get as close to mimicking your environment as possible.. @jgacuca567 The whole (or, at least, a working) Gruntfile.js and your package.json would be super helpful. Thanks!. Cool, thanks @jgacuca567. I downloaded your files, used nvm to run it with the same version of Node, created scss/style.scss with @import 'uswds'; as its contents, and encountered the same error. So I looked at the grunt-sass docs, and saw that the sass object expects a slightly different structure than what you've got. When I moved options out of the dist object and replaced loadPath with includePaths as an array, it worked! Try this:\njs\nsass: {\n    options: {\n        style: 'compressed',\n        includePaths: [\n            'node_modules/uswds/src/stylesheets',\n        ],\n    },//options\n    dist: {\n        files: {\n            'css/style.css': 'scss/style.scss'\n        } //files\n    }//dist\n}, //sass\nClosing as resolved. Feel free to re-open if you run into anything else Standards-related. \ud83c\udf7b . My pleasure! You can also silence the Bourbon deprecation warnings with this, via #1904:\nscss\n$output-bourbon-deprecation-warnings: false !default;. Thanks for reporting this, @jasonkaedingICE. We're still figuring out whether it's possible to enable CORS headers for branch previews on Federalist, but in the meantime you can use unpkg.com to link to assets for published versions. For instance, if you want v1.1.0 assets, you can link to:\nhttps://unpkg.com/uswds@1.1.0/dist/js/uswds.min.js\nhttps://unpkg.com/uswds@1.1.0/dist/css/uswds.min.css\nunpkg does CORS, so the linked fonts should work from those URLs.. You're right, we should definitely add some documentation around using unpkg to the site.. @jasonkaedingICE Yes! Here are some good rules of thumb:\n\n\nUse unpkg.com for rapid prototyping and creating tests. (See, for example, https://github.com/18F/web-design-standards/issues/1919#issuecomment-303206058, which uses unpkg URLs to isolate an interaction between the Standards and Leaflet.)\nDon't use unpkg.com (or any third-party CDN URLs) in production, mostly for security/privacy reasons.\n\n\nUse the static distribution (JS, CSS, fonts, and images) in development and production. (For example, the Jekyll theme copies all of the static assets from the node module directory into assets/uswds.)\n\n\nIf necessary, use the Federalist URLs to test development code, e.g. to confirm that a proposed change in a forthcoming release fixes your issue.\nNever reference those URLs in your own applications \u2014\u00a0even for testing \u2014 for the same reasons that we suggest you don't use CDN URLs generally, but also because we can't guarantee uptime for the Federalist preview URLs.\n\n\nWe only use Federalist to preview our own changes, releases, etc.\u00a0\u2014 the idea being that all of the static assets on each git branch are at least internally consistent. During periods of relatively high code churn, referencing the JS or CSS from our develop branch is bound to get you into trouble.. This is done in #1937.. The only merge conflict was in package.json with the version, because I cut this branch from v1.0.0 instead, then we bumped to v1.1.0.. Conflicts fixed in package.json.. @donjo I updated the description with some wrap-up tasks. Maybe we can pair on those?. Ready to go!. Merge conflicts fixed!. For reference, the Federalist PR that disabled installation of dev dependencies on build containers is https://github.com/18F/federalist-docker-build/pull/31, and https://github.com/18F/federalist-docker-build/pull/35 updates npm install to use the more future-friendly --production flag.. @jmhooper @brandocalrissian @jseppi I was able to work around this by calling npm install --dev in our federalist npm script, as you can see in #1942. Let us know if this isn't a good idea, but I'm happy to call this done because it builds successfully.. This is good to go, as evidenced by the successful Federalist build! We might want to include this in v1.2.0. @donjo, let's see about merging this tomorrow.. There's also fuse-box.. Oof, sorry @toolness. Thanks for trying.. Just waiting for the tests to run, then I'll push the green button!. \nI really like the focus rings too, y'all. Nice work. \ud83e\udd17 . Hey @joshbruce, I'm no longer at 18F or on the USWDS team. \u2639\ufe0f  I leave you in @maya's very capable hands!. Hey, sorry for dropping the ball on this!! I started it last week and had some trouble logging into npm. It sounds from your DM the other day like I just need to remove myself as a package owner, right?. Do these links need to be bolded as well?\n. It would be nice to link to a description of BEM here, or even something about \"modified BEM\" more specifically.\n. Nope, no strong opinion either way. ;)\n. This file name is misspelled: it should be \"accordion\".\n. Ditto on the \"accordion\" spelling.\n. In my experience, most JS at 18F is of the more compact style if (foo) { .. }, function(done) { .. }). Some of us have informally agreed to use the Airbnb style, which also opts for less whitespace.\n. Yes, good catch!\n. I generally agree, but I think that the $hit-area variable is helpful here. @joshbruce maybe move the comments alongside the properties instead?\n. I don't think it requires one, but it's probably a safe bet. The only reason I can think that it would help is if the banner lives in a <form> and you want to short-circuit submission when the button is clicked. You can solve this on the markup side with type=\"button\", but e.preventDefault() works too. Any other reasons, @msecret?\n. When I was looking at using dispatch() for the banner I originally thought that being able to pass true (or {capture: true}) to catch clicks during the \"capture\" phase would be helpful. The changes we made should probably stay in so that we can pass listener options at some later point if need be.\n. I defer to you on this one, @yozlet. IIRC, we cribbed the banner initializer from one of the other ones, and (at that time, at least) whichever one we copied didn't export an initialization function.\n. This should either be called headerClickHandler or the reference below should be updated.\n. The problem with moving this function out of the headers loop is that the header variable is out of scope now. One solution might be to bind the click handler to the header and reference the button through event.target, a la:\n``` js\nvar headerClickHandler = function (event) {\n  // ...\n  var expanded = event.target.getAttribute('aria-expanded') === 'true';\n  // ...\n  toggleClass(this, 'usa-banner-header-expanded');\n};\nheaders.forEach(function (header) {\n  var headerClick = headerClickHandler.bind(header);\n  select('[aria-controls]').forEach(function (button) {\n    dispatch(button, 'click', headerClick);\n  });\n});\n``\n. I think there's some trailing whitespace here?\n. This wholeifstatement can go away, right?\n. Should these selections be scoped tothisore.target? IOW, is there any chance that there might be multiple nav elements on the page?\n. Yep, @juliaelman and I agreed thatthisis what we want, not the event target.\n. Sounds good to me! We can always revisit it in the future if need be.\n. Joining with,was producing some weird (but perfectly valid) HTML.\n. @rogeruiz this actually ended up being a problem with the.join(',')` below, which was producing invalid HTML.\n. Not in the test suite, no. But if you want the test template to be more representative of our recommended markup, then yes!\n. Not necessarily, but I fleshed out the tests anyway. Thanks for pointing it out!\n. I would really prefer not to reference anything on w3schools. Could we point to either MDN or the WebPlatform docs?\n. Could we rephrase as something like:\n\nIf you are using Windows and are unfamiliar with Node.js or npm, we recommend reading Team Treehouse's tutorial for more information.\n. We should probably wait on this change until we've discussed #1536, which suggests a different mechanism of overriding variables.\n. This assumes that #1530 is merged, right?\n. Yeah, I think it's best to nix the $ faux prompt.\n. Sorry, ignore this comment! I didn't realize that this will merge into the rename-scss branch. \ud83d\ude0a \n. DERP\n. How about:\nUse the uswds npm package if:\n. I think it's better to leave off the .scss extension here.\n. Yeah, that's a good point. Don't let this hold things up!\n. cc @juliaelman for visibility: this seemed like an oversight, and is actually unrelated to the refactoring work\n. I think that's possible, yeah. Aside: should we track (potentially) breaking changes in a changelog that gets committed, so that we can add them as we go?. stylelint-disable-line doesn't need to be re-enabled; it only applies to the line \ud83d\ude00 . IIRC, stylelint was throwing errors for every @include rule in the file.. Yeah, I was hoping that we could focus this PR on reducing/eliminating linting errors, then address any CSS-specific stuff separately.. Nope, not in this repo. Just in the docs!. Good call; will do.. Yes, it's still used in the tests, e.g. here.. Do we still need these data-grouplength and data-delimiter classes?. done in 6747ef5 \ud83d\udc4c . Cool. I'm going to link to the site from \"Web Design Standards\", too.. How about \"For example\"? Just because \"As an example\" sounds weird leading up to a list of multiple examples.. \ud83d\udc4d  It's already a sub-task of #1686.. \ud83d\udc4d  Good catch. I was going to point back at the content guide, but this is a complete sentence and should get a period.. It's used in id.html to output the package name and version in a comment on each page.. The problem here is that different variants of the header nest the navigation elements differently: the extended headers wrap the nav contents in .usa-nav-inner, but the basic ones don't. If we think of this as a documentation task, I think that it succeeds in highlighting issues like this. \ud83d\ude04 . Probably not right now, but it's worth considering in #1594.. I'm honestly not sure either.. I agree 100%.. dist is where all of the gulp tasks write to, and build is where Fractal puts everything.. Let's call this usa-embed-container.. I think this might make more sense as a mixin with a configurable aspect ratio, then use the mixin to generate the styles for our .usa-embed-container:\n\n```scss\n@mixin embed-container($aspect) {\n  // ...\n}\n.usa-embed-container {\n  @include embed-container(16/9);\n}\n``. \u26a0\ufe0f The commit message says \"v7\", but this is clearly v6.. Yeah, we're still using Node 6, so I was sticking to the subset of ES2015 supported natively. Let's tackle this in a future PR. :). Same, re: ES2015 and Node v6.. Same, re: ES2015 and Node v6.. Yeah, it's actually [polyfilled by receptor](https://github.com/shawnbot/receptor/blob/170bfca7877305e3d5dae38dc3f997101a4f195b/delegate/index.js#L2) viaelement-closest, which _also_ polyfillsmatches(). (Which I guess means that we're not necessarily playing nice in that respect...). Yeah, I'm on the fence about this one. In other cases (e.g. witharia-controls, it doesn't feel like an error if no elements resolve because it's _theoretically_ possible to have a button that toggles just its own state. But in this case, the link should resolve, and if it doesn't, that's at least an accessibility error.. Very good question :). That's true, but our mocha/jsdom testsrequire()the modules directly. \u2639\ufe0f . After looking at this a bit more closely, I'm going to leave it as-is for now. Throwing an error seems like the right thing to do, but that would effectively stop the link from working, and I'm a little weary that just doinglink.getAttribute('href').slice(1)is naive. I'd rather users just don't get thetabindexbehavior because their link is malformed (and the link still works, possibly) than preventing the link from being followed altogether.. Indeed!. The indentation is one level too deep from here until the.. Yep, we're compiling to ES5 with Babel.. Yeah,object-assignis a ponyfill.. Addendum: [browser support](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign#Browser_compatibility) is pretty good, but doesn't cover IE and some mobile browsers.. Nope, this is the v1.x shim :). Agreed, though we'll be jettisoning the wholedispatch` utility in v2.0.0.. ",
    "ErieMeyer": ":+1: \n. Thanks for catching! :+1: \n. > Single page is fine! Thank you!\nI can see a world where there are multiple languages that would need more pages, but for now, one is great.\n. To make sure it's standard with the rest of the stuff you're doing, I would love if you took a run at it. Let me know if it's a pain, and I'll do it!\n. Excellent -- thank you!!\n\ud83c\uddfa\ud83c\uddf8\ud83c\udf37\ud83d\udcaf\n. Just want to +1 that this feature would be super helpful! I have to go to the repo to search instead of even being able to do control-F in the design standards.\n. Yes! Was specifically looking for the word \"tab\" or \"tabbed\" and couldn't figure out how to search quickly -- other than going to the code itself.\nHope that helps!\n. Thank you!! \n. ",
    "AccessForAll": "+1\nMore anti-carousel references:\n- WebAIM, featuring an accessibility point of view: Should I Use a Carousel? \u2013 http://shouldiuseacarousel.com (background info on the \"Should I Use...\" site: http://www.creativebloq.com/accessibility-expert-warns-stop-using-carousels-7133778)\n- Search Engine Land (with suggestions for alternatives): Homepage Sliders: Bad for SEO, Bad for Usability \u2013 http://searchengineland.com/homepage-sliders-are-bad-for-seo-usability-163496\n. Yes, I should have been more specific. The pointer should change to a hand over all navigable items (including buttons), which doesn't always happen. Perhaps we can add that guidance to the accessibility section.\n. ",
    "kategarklavs": "Thanks for tagging me, @mollieru! \n. @mollieru That sounds good to me (and I like the connection between people + human-centered design). \n. What about this?\n\" \u2014 model standards anyone can adopt and build upon\" (?)\nThe first portion of the statement identifies that these components/guides are for the purpose of building beautiful experiences across websites; a second mention of websites doesn't seem totally necessary. (And I'm also in favor of reworking to communicate that people are doing the work!) \n. Per @msecret's suggestion, changed a few references in the Getting Started section \u2014\u00a0encouraged developers to use the README to get started, and encouraged designers to use current Playbook. (Will update this once we have the updated Playbook.)\nAlso reinstated the existing \"Reuse\" section. \n. Many thanks, @maya! \n. @maya :+1: Thank you. Merging now. \n. Merging! \n. Merging now \u2014\u00a0thanks @maya!\n. @rogeruiz Taking a look now!\n. @rogeruiz Hey! Just took a look and made a few comments/recommendations. If you have any questions, please send them my way! \n. @rogeruiz Checking now! Thanks for the heads up.\n. @rogeruiz OK, just took a look and made one comment about adding a colon \u2014 aside from that, this looks good to go :+1: \n. @rogeruiz Taking a look now! \n. @rogeruiz Okey doke \u2014\u00a0made a few suggestions. Let me know if you have any questions! \n. @rogeruiz Aye aye! \n. Howdy @rogeruiz and @jbruce-gsa \u2014\u00a0just added a few line notes. If you have questions or want to chat more about these suggestions, just let me know! \n. @juliaelman Yes, feel free to assign to me, if you like! \n. @joshbruce No apologies necessary! I'm glad to take another look. And now I also want to watch \"Indiana Jones\" \ud83d\ude01 \n. @joshbruce Hello! Thank you again for your insight and contributions \u2014\u00a0we very much appreciate them. For now, we're going to close this PR, but we'll be sure to revisit it after we conduct more research around this topic. Meanwhile, let us know if you have any questions.\n. Yep! Stay tuned ... we'll have more info soon.\nOn Thu, May 26, 2016 at 9:38 AM, Julia Elman notifications@github.com\nwrote:\n\nhey @rogeruiz https://github.com/rogeruiz! @kategarklavs\nhttps://github.com/kategarklavs and I are going to pair on this later\nthis evening. Hoping to help figure out a better way to do content reviews\nin PR! \ud83d\ude04 \ud83c\udf89\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly or view it on GitHub\nhttps://github.com/18F/web-design-standards/pull/1195#issuecomment-221925806\n. @yozlet and @rogeruiz -- I just took a look and made a handful of tiny, tiny recommendations. This gets my \ud83d\udc4d \n. @shawnbot I just looked over everything and have no proposed changes \ud83d\udc4d \n. @maya Hello! My only change to the content you proposed is changing the which to that: \n\nThis is a link that opens in a new tab.\nAnd that's it!\n. @juliaelman Hello hello! Just made some recommendations/comments as line notes -- if you have any questions at all, send 'em my way \ud83c\udf89 \n. Looks good! \n. Hey! Just saw this -- it also lgtm \ud83d\udc4d \n. @ericadeahl Hey! Thanks for the heads up \u2014 what's the timeline for the intro text/documentation?\n. @maya Hey! Thank you for picking up this conversational thread \ud83d\ude0e Yep, next Friday seems doable. I'll work up a draft & send it along to the team for review.\n. Hey all! @jameshupp has offered to take this task on -- I'm going to reassign the issue to him \ud83c\udf89 \n. (Err, the content portion of this issue, that is.)\n. @ericadeahl Thanks again for all your help with the header content \u2014\u00a0I made the final batch of updates this morning, and I think the copy is good to go. (There's still a note for @maya to check one section, but that shouldn't prohibit us from publishing it.) \nI just checked off Content in the to-do list \u2014\u00a0let me know if you need me to do anything else \ud83d\udc4d \n. @ericadeahl Agree that this could be clearer. How do you all feel about the following?\n\"When you're creating forms with multiple controls or customizing these templates, make sure the order of the form controls is the same in the HTML as it is on the screen. Please don't use CSS to rearrange the form controls. Screen readers narrate forms in the order they appear in the HTML, and rearranging that order can provide a compromised experience for some users.\"\nIf you all think the additional note at the end isn't necessary, feel free to cut(!) \n. @ericadeahl Word -- thanks for clarifying (and +1 to removing the in addition). Would you all like me to take a more comprehensive look at the whole section, too, or is the removal of the in addition good for now?\n. Sounds good! \n. Howdy @cfarm \u2014 thanks for adding this link! \n. @nicoleslaw Howdy! Many thanks for catching (and correcting) these errors. \n. Lgtm! Thanks for the update, @juliaelman \ud83d\udc4d \n. @maya This looks good to me. Also, I'm happy to chat more about adding a new section to the Getting Started section, if you think that this is necessary. \n. @maya Hello again, and apologies for not being clear before \u2014\u00a0that sounds good to me \ud83d\udc4d \n. Sounds good to me! Thanks for pinging me, @maya \n. @bradnunnally Many thanks! Will take a look shortly & send you any questions I have.\n. Update on this: @jameshupp made an excellent edit to the copy (and my sense is that this copy is good to go). Thoughts, @bradnunnally? (If you'd like more revisions, let me know!) \n. @ericadeahl This looks great(!) True, there's a goodly amount of text, but I don't know that we could condense it any further without impacting the clarity. (Also, +1 to the bolded .gov/regular .mil.) \n. @jameshupp For smallish tasks like this one, I'd be comfortable saying we're done once the copy is signed off. To clarify things, we could also create a checklist of sub-tasks (write copy, revise copy, create design, etc.). Not sure if that would be helpful (or maybe too detailed), but it's something we can consider!\n. @ericadeahl Hmmm, that is a bit clunky :/ I just checked out the Standards site on mobile (which I'd never done before), and I didn't immediately see a great spot. Let me mull this over a bit \u2014\u00a0want to touch base on Monday?\n. @jpyuda I can see the benefits of the taking-over-the-whole-screen approach. @ericadeahl -- thoughts?\n. Late to this conversation, but I am in agreement \ud83d\udcaf \n. @ericadeahl and @bradnunnally \u2014 the content for this issue is done. Would it be cool if I closed this issue (and we could open a new one for the design)? Also happy to keep this open, if that's the best practice.\n. Just talked to @bradnunnally and @ericadeahl, and we've decided to keep this issue open rather than opening a separate one for front end. \nUn-assigning James + myself (but if you all have any questions, feel free to reach out to us). \n. @jameshupp Hey! I just left a few comments in the document. On the whole, I agree that the .gov might not be critical to users' understanding that a site is, in fact, a government site; maybe we could add something along the lines of, \"The .gov, along with other elements, can help users verify that a given site is, in fact, work of the federal government.\" (Or is that too diluted?) \n. Just re-reviewed the copy and resolved all but one comment in the Google doc (one small outstanding question). IMO this is good to go! \n. Note: @jameshupp and I began our internal interview process yesterday \u2014 we're hoping to have responses from the team by COB 7/20/16. \n. Tentative to-do list:\n- [x] Conduct internal interviews to identify core team members' needs/ideas around a comms plan\n- [x] Synthesize research/identify audience priority order\n- [x] Develop external comms strategy (6 mos.)\n- [ ] Develop strategy for soliciting contributions (from 18F team members + outside contributors)\n- [x] Add individual comms tasks as GH issues\n- [x] Label issues with projected deadlines (this sprint, this month, three months, six months)\n- [ ] Metrics for tracking strategies' success \nLook good, @jameshupp? \n. An update on this issue: @jameshupp and I have mapped out comms to-dos for this sprint, the next month, the next three months, and the next six months. (Naturally, these might shift around a bit, but we do have a tentative plan.) \nWe shared our initial comms plan draft with the team and are in the process of incorporating folks' feedback/refining. \ncc @juliaelman and @bradnunnally\n. @Journerdism Howdy! So, the comms plan itself is done, but some of the sub-tasks I've listed above (checklist) aren't. If it's OK with you, I'll close this issue and open new issues for the remaining subtasks (develop strategy for soliciting contributions, metrics tracking, etc.). How does this sound?\n. Created new issues for the outstanding sub-tasks \u2014 closing this issue now. \n. @juliaelman Hey! Thanks for tagging me in this. I'll block off some time on your calendar (and/or on other folks' calendars) to pick your brains about the necessary documentation. \n. @bradnunnally Yep, on it! Will take a look & make any comments in Suggesting mode. \n. Made a few tiny changes -- this looks good to me! \n. Interview questions are now in the latest version of the interview guide -- this portion of the task is complete!\n. @jameshupp and I are discussing how to create better documentation re: release-related content tasks. Will keep this card open until we've come up with said documentation.\n. Link to some notes on Yahoo's pattern library: https://docs.google.com/document/d/1_PEbVegQ-5b7S2Ff2Sqdc-Z46V0AFzZoeyZ_22Dn8Hk/edit\n. Just wrapped up some notes \u2014\u00a0@bradnunnally and @jameshupp, want to check out the recommendations for copy updates? If you're on board with the recommendations, I can start making edits!\n. Updated the document to reflect what will accompany each  component. Right now, here's the list:\n- A description of what it is\n- A description of what it does\n- Examples of when to use it\n- Examples of when not to use it\n- A \u201cfurther reading\u201d or \u201cadditional resources\u201d section containing links to useful articles/posts/etc.\nAs far as next steps go, @jameshupp and I need to figure out who will claim which components, and then we can start reviewing the existing content and writing new stuff, when necessary.\n. Just a heads up to @bradnunnally \u2014 @jameshupp and I will be asking for the team's help in assembling resources (blog posts/articles/etc.) for the \"Additional resources\" sections to accompany each component. (Our assumption is that folks may already know of great resources, and we'd love to make the best use of people's extant knowledge.)\n. Update on this: @jameshupp and I will have copy to share with @bradnunnally and @ericadeahl tomorrow! \n. Just shared the draft document with the team & requested feedback by Friday.\n. @maya Just left you a line note re: a particular phrasing. Otherwise, this looks good to me! \n. \ud83d\udc2d !\n. @nicoleslaw @maya LGTM! Merging now ... \n. @juliaelman Many thanks for your help (and thanks too for the detailed update). Will you ping @jameshupp and I once this documentation is ready for an editorial eye?\n. @juliaelman Went through all the markdown files in web-design-standards-docs and made copyedits + a few stylistic changes. Let me know if you'd like me to make additional edits \u2014 going to close this issue, for now, but please feel free to reopen! \n. @awfrancisco Hey! Thanks for sharing this. @jameshupp and I recently put together a comprehensive comms plan, and better sharing the Standards' history is one of our action items. On that topic, we're planning (in the next few months) to create a series of case studies, revamp the design principles page, and write more blog posts documenting the ideology underlying the Standards/the process our team follows, and why. \n. @msecret Hey! I apologize for the belated reply on this \u2014 I'm catching up on email/issues/other things from last week. To answer your question, I'm a fan of Deprecated version, which seems less likely to cause confusion than Deprecated. (I agree that Deprecated could convey that the whole component is deprecated.) \nAs far as placement goes ... I think the current placement is OK! Not sure if other folks have thoughts on this, though. \n. @juliaelman and I are meeting on 8/29 to discuss! Will post updates as we have them.\n. Howdy all \u2014\u00a0here's a document with the content for different channels (listservs, Twitter, 18F internal newsletter, etc.):\nhttps://docs.google.com/document/d/1_KYKjygTxjiCOWYYBIqLSITAjjR3Qlca1iFhrNzfzUY/edit\n@jameshupp and @juliaelman are going to take a look/leave feedback, after which I'll make my revisions. I'll then reach out to comms folks re: getting these tweets out + including this news in the next internal newsletter. (We can handle README updates and listserv messages ourselves -- no comms involvement needed.)\n. Also! @jameshupp updated the documentation, so I checked that item off the Acceptance Criteria list. (And James, I'm happy to take a look at any documentation-related updates if you'd like another set of eyes -- just let me know!) \n. Reached out to @awfrancisco (in #outreach) to find out how to contribute content to the next internal newsletter. As far as tweets go, I can submit them via #tweet-this on the days on which they're to be posted. Other comms efforts fall on us! \n. And, finally, shared the link to the google doc in our channel & asked folks to submit their feedback by COB 9/6 \u2014 this will give me time to address any potential changes/make updates, as needed.\n. @jameshupp Yep! In fact, I'll close it now \ud83c\udf89 \n. @juliaelman Hey! How can I help with updating the documentation? I'm happy to pair write (or review after the first draft is done) \u2014\u00a0let me know what works best for you \ud83d\udc4d \n. @juliaelman Sounds good! My schedule this week is a bit hectic (on account of the listening tour), but my cal is up to date \u2014 feel free to reserve some time for us to talk & we can get this task started! \ud83c\udf89 \n. Howdy! Is this documentation ready for review? (If so, I'm happy to start reviewing.)\n. Being that the repo-split comms plan is in solid shape, I'll claim this task! \n. I've got a draft document going here: https://docs.google.com/a/gsa.gov/document/d/1KcEzMmop_kbp_eWf-af9OJja_zCvraSprv7xKw78vYU/edit?usp=sharing\n. @jameshupp and I have created a draft of the plan (which will undoubtedly change a bit as time goes on). Up next: filing individual issues for sub-steps of the plan. \n. (On that ^^ note, going to close this issue, for now, as we have an initial plan. @jameshupp \u2014 if you'd like to reopen, please do!) \n. Added documentation page copy and asked @jameshupp and @maya to review it (I'm happy to add more sections/expand on the existing ones, if necessary). \n. @juliaelman Yes! That's correct \u2014 we'd written this header copy before @jameshupp and I finalized the format for all the other components. This should be done soon(!) (EOD, most likely)\n. \ud83c\udf89 indeed! \n. Looks good to me! \n. Looks good to me! Merging now.\n. This also looks good \u2014\u00a0merging! \ud83d\udc2d \n. @jameshupp Hey! Just reviewed this & made a few small comments \u2014 this looks \ud83d\udc4d \n. @juliaelman Yup! Will do.\n. @juliaelman I just checked out the README, and it looks great(!) \n. Assigning myself this issue, as @jameshupp is working on creating an easy-to-use/easy-to-locate metrics tracking sheet \ud83d\ude0e \n. Okey doke: Initial draft of the guidelines/checklist doc is here: \nhttps://docs.google.com/a/gsa.gov/document/d/1ogpJvc_8qor9_Hv9B-CKvB0Qeqn5ImbdgF3tYNmD870/edit?usp=sharing\nNote: It's still pretty messy and could definitely benefit from team feedback!\nYou'll also notice I created and linked to a project-specific style sheet. Haven't gotten started on this yet, but I'll create an issue for it and get to work. An initial draft shouldn't take more than a day or two. \ncc @juliaelman @jameshupp & co.\n. @juliaelman Excellent! Going to check those out shortly \ud83d\ude0e \n. Good news! I've updated the guidelines, done a final edit, and published them to the wiki (they live in a new category \u2014 Documentation). Going to close this issue out \ud83c\udf89 \n. On 9/15/16, @jameshupp and I discussed our metrics-tracking plan and brainstormed some ways to update our comms log. We deprecated the previous sheet (which folks can still view \u2014 it's just labeled as deprecated), and we created a new sheet with drop-downs. The preset options will make it easier for folks to record communications from all channels, and the issue-type buckets will help us identify, at a glance, the types of content that might need work. Additionally, there's a notes field where people can list how they addressed (or plan to address) various issues. \n. Ahh, that's a good point. My only thought re: logging GH issues is that having all feedback types consolidated in a single form would make it really easy for folks to have an at-a-glance view of % of inquiries coming through each channel (GH included). (That said, I'm not precious about keeping it!)\n. Ah, right on! In that case, I'm happy with keeping GitHub, and if we find the info isn't useful, we can always modify the sheet. \n. @maya Hey, thank you for your feedback \u2014 this is excellent!\nRe: your point on \"feature request\" vs. \"customization,\" I see what you mean. As I was creating the categories, I was envisioning \"feature request\" as a means of capturing fairly straightforward feature requests (For example, \"Can you all add more data tables?\"), and \"customization\" was more to capture questions about whether the Standards are customizable/how people can customize them \u2014 does this seem like a reasonable distinction? (I'm also open to new categories that might be more precise.)\n+1 to change management \u2014\u00a0I like it! \nAnd on the topic of \"troubleshooting\"/\"implementation\" \u2014\u00a0I'm of two minds here. On the one hand, I like the idea of a broader \"troubleshooting\" category; on the other, it feels like that category might be too broad to direct our attention to certain pieces of content. (As an example: If folks are having difficulty understanding how to contribute, we'd file that inquiry under \"Contribution,\" and would then know to make our contribution guidelines more specific.) Does that make sense? That said, I'm open to \"troubleshooting\"/\"implementation\" if you all feel like they'd help us capture actionable data. \n. @maya Cool cool! That works for me :) And my sense is that we'll need to keep adjusting the categories as time goes on.\n. @jameshupp Sweet! I'm going to review/address comments in our metrics-tracking doc, and then I can help out with this, too \ud83d\udc4d \n. Just chatted with @jameshupp, and we agree that is is set to be closed (we've created our Google sheet & come up with some strategies). In our offboarding doc, we'll include metrics tracking as an ongoing task to be completed. \n. Okey doke \u2014 this issue is done! We now have an mvp style sheet, which will live in the wiki. All team members are welcome to contribute \ud83d\udc4d \n. @maya Excellent comment about no longer needing the [Website] and [UI component] tags any more \u2014\u00a0for both repos, I think [Brief description of issue] will suffice for the title line. \nTaking a look at your document now! \n. @maya Ah, you read my mind! (I literally just tagged Julia in a comment in a Google doc asking whether we should spell out the process/whether we should provide only high-level guidance). \nI'll update the README and then ping you for review \u2014 sound good?\n. Update: The web-design-standards-docs README has a new section titled \"Using the latest version of the uswds package,\" which has already been reviewed/approved by the team. I talked to @maya, and she confirmed that no updates to the web-design-standards README are necessary. All in all, I think we're in good shape. That said, if you all feel like we need additional documentation, let me know and we can reopen this. \n. @maya Howdy! I took another look at @jameshupp's content (and made a few tiny copy edits) \u2014 if James is happy with the Template 1 content, I'd say it's good to go. \n. Also @msecret \u2014 would the minified version need a separate section w/its own intro? Or could this info be seamlessly included in the current section? \n. This looks good to me! \n. I'd add a colon after \"page\" (because of the preceding \"adding the following link\"). \n. I'd replace \"Please make sure that you are not\" with \"Please make sure you're not\" (just a stylistic update to make the tone a wee bit more conversational). \n. Hey! A few comments:\nI'd add \"the\" before \"Draft U.S. Web Design Standard's JavaScript.\" Also, I'd recommend capitalizing \"uswds\" in the second sentence (because USWDS is an abbreviation of a proper noun). \n. I'd replace \"Questions\" with \"Have questions or ...\" \nAlso, to promote concision, I'd remove the \"Feel free to\" and start the second sentence with \"Open an issue here:\"\n. @juliaelman had a great point \u2014\u00a0namely, that \"If you'd like to use gulp\" makes usage sound optional.\nLet's replace \"If you'd like to use ...\" with \"To use gulp, first make sure ...\" (just to communicate that usage isn't optional).\n. To tighten things up a bit, I might recommend starting this sentence as follows:\n\"To start, run the following command to ...\"\n. Would it be OK to remove \"To help you get started\" here, and instead begin the sentence with \"Here are a few of the common tasks ...\"\n. lowercase \"website\" here \n. Could we change this to active voice (best practice)? \nFor example:\n\"You can build the Draft U.S. Web Design Standards website using gulp with the following command:\"\n. please replace \"setup\" with \"set up\" (latter = verb)\n. Ah, OK: So, as I was reading this, I could see how a user might get confused by the statement \"Here are a few of the common tasks,\" which is followed by one example (gulp build).\nWhat if we were to reword this to \"The following examples cover a few common tasks\" -OR- \"The following examples detail a few tasks you'll encounter as you use gulp\" \u2014 something along those lines?\n. Please add a colon after \"as you use gulp,\" so the sentence will read as follows:\nThe following examples detail a few tasks you'll encounter as you use gulp:\n. Hey @maya \u2014 I'm totally OK with this comment appearing below the examples (we'll just need to update the last sentence to say, \"The examples above recommend using the minified version.\"). As far as the necessity of the explanation goes: My sense is that this explanation is to help out newer users, but if it's overkill, I'm also OK with removing it. \n. A few notes:\n1) Please change \"Standards is\" to \"Standards are\" (unless \"Standards\" is considered a singular item). \n2) I'd change \"designers, developers, as well as anyone\" to \"designers, developers, and anyone else interested ...\"\n3) Please update \"frontend\" to \"front end\" \n. Small stylistic recommendation \u2014\u00a0I'd update \"less pretty, but usable\" with \"less pretty (but still usable) ones\"\n. Is \"markup\" meant to be plural here? (I wasn't 100% sure.) If it's not meant to be plural, please change \"components are\" to \"Components is\"\n. @maya Howdy! My thought was that \"UI Components\" (as we're using it) is a proper noun \u2014 it refers to our components. \nIf the components being referenced here are a more general, non-WDS set of components, lowercasing is the way to go.\n. Gotcha. In that case, it should also be lowercase, correct? (\"use the navigation component, instead.\") \n. As I thought! So this should be changed to the following:\n\"markup for the UI Components is located in:\"\n. Please capitalize Standards here (per our style sheet)! \nI'd also recommend ending the first sentence with \"progressive enhancement,\" and constructing the following sentence as so:\nThey officially support IE 9 and up, along with the most recent versions of Chrome, Firefox, and Safari.\n. Replace \"Internet Explorer 8 and below generally see very low usage today,\" with \"Internet Explorer 8 and below see very low usage,\" \n. Capitalize Standards and lowercase progressive enhancement. \n. Please replace this:\nThis means the majority of processes are run on the servers hosting the site, therefore, not dependent on resource availability of the client (mobile devices typically have fewer resources than a desktop or laptop, for example).\nwith this:\nThis means most processes are run on the servers hosting the site, meaning they aren't dependent on the client. For many users, this offers substantial benefits \u2014\u00a0mobile devices typically have fewer resources than desktops or laptops, for instance, and progressive enhancement offers mobile users a better experience all around.\n. If possible (that is, if it makes sense in this context), I'd change this to active voice:\n\"When you run npm start to preview the website locally, you generate many files that are tracked by Git.\"\n. Hey! I'd make the following stylistic changes to the sentence \"This leaves ... daunting task\" with the following:\n\"This leaves your working directory in a dirty state, and it can make knowing which files to include in your commit seem like a daunting task.\"\n. I might suggest replacing \"The following steps can help in committing changes\" with \"The following steps will make it easier for you to commit changes while the team looks into different approaches for handling changes to the Standards website and the uswds package.\" \n. I'd add a colon after \"following directories\" (to indicate a list), and then move \"This is due to how ...\" to below the list. \n. Please replace \"it's\" with \"its\" (no apostrophe). \n. @maya That works for me! \n. @maya If it's much likelier that people will only be addressing one component in a given issue, then I think using [UI component] makes more sense. \n. Might recommend replacing etc. with And so on OR And so forth. (Reasoning: Our content guide recommends against using etc. because it can feel jarring.)\n. Please add a comma after feel (and before or). \n. Maybe for Something else, we could include a parenthetical: (Please add a descriptive title)\n. If possible, I'd recommend replacing the use of passive voice (e.g., \"are leveraged\") with active voice. What is doing the leveraging, here? \n. I don't have push access & so can't edit directly, but here are my proposed changes:\nThe Standards embrace progressive enhancement, which is a web development strategy with accessibility and responsiveness at its heart. Progressive enhancement uses server-side languages and frameworks to generate HTML. The strategy enhances pages with CSS to create a richer user experience and design. Finally, progressive enhancement applies client-side languages (like JavaScript) to add the final layer of enhancement to the experience without compromising the underlying functionality of the page or site. This means most processes are run on the servers hosting the site \u2014 they aren't dependent on the client. For many users, this offers substantial benefits. Mobile devices typically have fewer resources than desktops or laptops, for instance, and progressive enhancement offers mobile users a better experience all around. Further, you can focus on the functionality of the site, ensuring it works properly (the expected HTML is delivered) before continuing to enhance the experience. Finally, by maximizing server-side processing, you minimize the negative impact on battery life client-side processing can have.\n. cc @juliaelman and @rogeruiz \u2014 if this looks good to you both, I think it's ready to go!\n. I'm OK with a much simpler definition (that may or may not include language around client-side servers)! \n. @maya \u2014 I also agree that removing mentions of client-side servers would clarify this definition. \n. Hey! A few notes here:\nI'd reword this:\nlayered with external technologies to enhance the user experience (specifically, CSS and JavaScript)\nto this:\nlayered with external technologies (specifically, CSS and JavaScript) to enhance the user experience \n(Does that make sense/is that still correct?)\nAlso, please change effecting to affecting\n. Also! Noticed that functionality is misspelled \u2014 please update! \n. Hey! A few minor tweaks to line 118:\nWhen developing, we create a feature branch from staging, do our work in that branch, and then create a pull request that merges back into staging.\n. Re: Line 122: Now, this might seem super nitpicky, but I'd recommend replacing the & with the word and (unless there's a specific stylistic reason for using the ampersand). \n. One final note (line 122): Please remove the hyphen from auto-deploy!\n. You're most welcome! And hyphenating is, admittedly, tricky business. A general rule of thumb is to hyphenate in instances where the hyphen will clarify the intended meaning \u2014 for example, to hyphenate compound adjectives:\nmean-spirited dog\nHowever, if the description comes after the noun, no hyphen is necessary:\nthe dog is mean spirited.\nAt any rate, I'm always game to talk hyphenation!\n. Hey! Can we add clarification to why this page is helpful? (Is it helpful with both installations, or just one? For everyone, or just novices?) \n. Also, I might add some language around sequencing: \"First, install Node.js and npm. Once you've done that, install Ruby and the DevKit, which you can find here:\" \n. Question: Are these tasks folks will definitely encounter, or may encounter? (If the latter, let's say \"may encounter.\")\n. How would you all feel about this rewording?\nThe task above, an alias for running gulp sass javascript images fonts, builds all assets.\n. \"directory, which makes all the contents of the ZIP archive available for download.\" \n. This feels a bit disjointed where it currently is. Could we include this as a note at the end? Something like, \"A few notes: The files in 'dist' contain no documentation, and are compiled and bundled ...\" (Please ignore this comment if it's totally off base!) \n. \" ... locally, which is useful if you're debugging for build errors or generating a deployable version of the site.\" \n. \"This creates a site directory that contains the Jekyll-built site \u2014 the same build step we use to deploy the website.\" \n. is this \"aliased by\" construction a best practice, in this context? (I would like to avoid passive voice, if possible, but I understand completely if it's necessary in this context!) \n. @maya Would it make sense to say \"changing the relevant variable values,\" or is that overkill?\n. Hey! Relevant works, but applicable might be even more precise \ud83d\udc4d \n. Hey! One note \u2014\u00a0found a lowercase instance of standards (\"more clarity to both people who want to work with the standards\"). Otherwise, this looks excellent. \n. @juliaelman To respond to your point, I either use the full name (\"Draft U.S. Web Design Standards\") or simply \"Standards\" \u2014 @jameshupp thoughts?\n. Capitalize Standards here (\"in the Standards\") \n. Ahh, I see \u2014 I may have been confused about the nature of the request (I thought both READMEs needed to be updated). But, being that the docs README is updated, I'll go ahead and cancel these changes ...\n. ",
    "CaliforniaKara": "Love how varied the different mood boards are! I dig the bold, confident nature of the fonts in #1, the aspirational, welcoming color scheme in #2, and the approachable nature of the images in #3.\nIf you think it'll help, here are the style tiles from PIF1 MyGov project: http://beta.presidentialinnovation.org/mygov/2012/11/05/style-tiles/ They're based on research done at Library of Congress and National Archives we did on how the federal government historically communicated with the people, and vice versa. You can click the image to see all 4 style tiles we created (the first 3, then the final).\n. ",
    "dannychapman": "Thanks all! Love the idea of using both pixels and ems. Pixems? \n. It's really a question of integration or not. I don't think you want to create dependencies on any framework, so perhaps it's just alternate code snippets that leverage / augment existing framework modules. Or, as a baseline, confirming that nothing built conflicts with either framework. \n. OK, makes sense. As long as testing is in place to ensure it doesn't conflict with anything, I'm good with that. \n. @carodew Makes sense. As long as there is a good effort made to not conflict, I think we're good!\n. :+1: for tablesaw \n. Moving form field labels inside a field (not to be confused with placeholder text) does show worse completion times (Luke W. has data to support this, and I'm sure he's not alone), but placeholder text can be used effectively as another tool to help with completion. The first link listed here supports this too. I think simply supporting this practice of using it in addition to, and never in place of, might be a good place to start. \n. Also, is there any guidance on this for hover vs click state, or both? I'd advocate for click vs hover for both accessibility (motor impairment) and touch screen devices. OK if hover works too I guess. \n. For Nav link 1, perhaps a focus / active state, same as hover, or perhaps slightly darker / stronger?\n. :100: \n. LGTM!\n. A good compromise for alerts might be to center them with 2/3 grid width line length. Just a thought. \n. ",
    "lukefretwell": "FWIW, we're working on a project related to local government sites where the front-end is built on Bootstrap, and the dev team has discussed integrating the work you're doing here with that. \ncc @jlyon \n. @fulldecent is this available? If so, where can I find? Thank you.\n. ",
    "KHarshawat": "@angel looks great! I'll probably continue to have feedback as I use it but for now it looks like everything I'd want :)\n. Hey there! As you guys are developing a more comprehensive solution to this you might want to take a look the following findings:\nInitially we tried just using a red asterisk like the screenshot below:\n\nWhile we found that the red was somewhat successful in drawing people's attention, we felt the USWDS use of the word \"required\" would be better. As Shane mentioned, USWDS doesn't currently support non-fixed width questions like those with radio buttons or check boxes. I came up with the following solution which we'll be customizing now for all our questions. \n\n\nI believe this gives us the benefit of using the \"Required\" label as we do in USDWS, making the label work for fixed with or variable width questions and draws attention to the label with by using red.\n. ",
    "mpeter88": "Is that work queue the queue for a single worker, meaning the set of managed work items per person, like a standard work queue? \nFor example, I can manage my work items, e.g.,  add/drag work items to my work list (sometimes only supervisors tod this), manage/update them, e.g. take actions on the case, delete those on which I'm no longer working (sometimes only supervisors do this). \nOr do all workers have to coordinate their work on the entire list of items?\n. Two comments:\n1. To the last response from joelanman: Due to the the possible formats of date representation, date input fields typically need a format hint such as \"MM/DD/YYYY\", and as such a single box is no different from three boxes. You all use \"Month\", \"Day\", \"Year\" plus an example so that the user knows it's 2-digit month and day, and 4-digit year. Users need that hint in case the first box was, e.g., DD (Europe) vs. MM (USA). As such there is no inherent clarity in using three boxes vs. a single box. So it seems to be a stylistic choice, which is fine.\n2. Input validation: Text entry requires validation on both the client and server side to make sure that valid input was received. Using drop downs (or spinners in terms of mobile devices) is easier in that regard, as it constraints input to an enumerated value on both the client and server side, reducing the validation burden and possibility of an introduced error. It also offers some UX optimization due to allowing either drop-and-click vs. fingers-on-keyboard, or shortcut entry, e.g., where \"F\" or \"2\" brings up \"February\". From an engineering perspective, this is the best practice.\n. ",
    "afeijoo": "@mollieru https://duckduckgo.com/?q=tax+form+1040\n. @mollieru https://pages.18f.gov/govt-wide-patternlibrary/assets/img/static/Search_Results_UI_v1.png\n. +1 @mariamarrero. We've found that quite a few agencies block Font Awesome icons, especially those with older versions of Internet Explorer. \n. ",
    "blacktm": "Related: \"Why Use Make\" from the creator of D3.js\n. @msecret Sorry, which part?\n. @juliaelman Yes, I downloaded the package from the site and used the CSS included. I then browsed through the header and footer components in the documentation and copied the code provided in the accordions. I noticed the inconsistencies when comparing the online demos, for example the basic header, with what I was getting when linking to the CSS from the downloaded package.\nHope that helps!. I forked the uswds-rails gem and updated for 2.0.0 Beta 4: https://github.com/blacktm/uswds-rails/tree/update-2.0.0-beta-4\nSo it's compiling the Sass. Ah, ok, missed that. We're trying to incorporate USWDS into a Rails application. Dropping in a gem makes it super simple for everyone on Rails, but must be missing that autoprefixing step. I'll do some research, see if I can find a solution.. I found the autoprefixer-rails gem , fixed it right up. Thanks.. D'oh! Fixed.\n. Got it, will do.\n. Yep, fixed in 4c60e94.\n. ",
    "njohnson": "I would like to know more about Angular with your templates.   I am a contractor who does front-end development on interactive government sites,  our engineers would like to utilize Angular.   I like the simplicity of it. but am exploring accessibility of angular. At the same time,   I came across the playbook and would like to integrate both Bourbon and Angular.  Our middleware in Spring and Oracle backend. \n. The engineer is actually using Spring Boot as a middleware into a war file. We may go to a standalone in the future as we move to a cloud based application.  We are looking a possibly using angular as the JQuery library and I would like to move to bourbon using either node or rails for presentation.  His solution is the same as buckaroogeek.  \nThank you. \n. missing the script sass when I run 'npm run sass'\nattached is a log that I change the email and user name slightly so it is\ntxt format.\nOn Tue, Apr 11, 2017 at 3:59 PM, Shawn Allen notifications@github.com\nwrote:\n\nHi Nancy, I'm going to forward this response to the mailing list for\nposterity:\nThere are lots of different ways to do this (depending on your deployment\nenvironment, etc.), but the simplest way to get started is to create a\n.sass or .scss file in your Sass source directory that imports the\nStandards directly from the node_modules directory created by npm. So,\nassuming that you've run npm install --save uswds to install the\nStandards npm package, you could have a sass/main.scss file that reads:\n@import '../node_modules/uswds/src/stylesheets/all';\nAnd when you run npm run sass, you should end up with the Standards CSS\nin css/main.css.\nThere are more detailed instructions on our getting started for developers\nhttps://standards.usa.gov/getting-started/developers/ page.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/18F/web-design-standards/issues/1840#issuecomment-293382868,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AA0wK_jnsXtPS74Eq4L-hx7QrHptoc6yks5ru9ubgaJpZM4M6JHs\n.\n\n\n0 info it worked if it ends with ok\n1 verbose cli [ 'C:\\Program Files\\nodejs\\node.exe',\n1 verbose cli   'C:\\Program Files\\nodejs\\node_modules\\npm\\bin\\npm-cli.js',\n1 verbose cli   'run',\n1 verbose cli   'sass' ]\n2 info using npm@3.10.10\n3 info using node@v6.10.2\n4 verbose config Skipping project config: C:\\Users\\N.Johnson/.npmrc. (matches userconfig)\n5 verbose stack Error: missing script: sass\n5 verbose stack     at run (C:\\Program Files\\nodejs\\node_modules\\npm\\lib\\run-script.js:151:19)\n5 verbose stack     at C:\\Program Files\\nodejs\\node_modules\\npm\\lib\\run-script.js:61:5\n5 verbose stack     at C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\read-package-json\\read-json.js:356:5\n5 verbose stack     at checkBinReferences_ (C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\read-package-json\\read-json.js:320:45)\n5 verbose stack     at final (C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\read-package-json\\read-json.js:354:3)\n5 verbose stack     at then (C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\read-package-json\\read-json.js:124:5)\n5 verbose stack     at ReadFileContext. (C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\read-package-json\\read-json.js:295:20)\n5 verbose stack     at ReadFileContext.callback (C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\graceful-fs\\graceful-fs.js:78:16)\n5 verbose stack     at FSReqWrap.readFileAfterOpen [as oncomplete] (fs.js:366:13)\n6 verbose cwd C:\\Users\\N.Johnson\n7 error Windows_NT 6.1.7601\n8 error argv \"C:\\Program Files\\nodejs\\node.exe\" \"C:\\Program Files\\nodejs\\node_modules\\npm\\bin\\npm-cli.js\" \"run\" \"sass\"\n9 error node v6.10.2\n10 error npm  v3.10.10\n11 error missing script: sass\n12 error If you need help, you may report this error at:\n12 error     https://github.com/npm/npm/issues\n13 verbose exit [ 1, true ]\n{\n  \"name\": \"n.johnson\",\n  \"version\": \"1.0.0\",\n  \"description\": \"\",\n  \"main\": \"SASS/index.js\",\n  \"scripts\": {\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"\n  },\n  \"author\": \"n.johnson@xxx\",\n  \"license\": \"ISC\",\n  \"dependencies\": {\n    \"uswds\": \"^1.0.0\"\n  }\n}\n. thank you I have this compiling but cant figure out the syntax in\npackage.json  to control where it compiles  or it could be /_all,scss\nI have the package.json on the top level of users/my name\nnode_modules where uswds is located is also top level of users/my name\nthe css folder either winds up also in users / my directory or the same\nfolder as the uswds.scss depending on how I code the import in _all.csss\nI can put main.scss anywhere with a path to _all.scss  however within\n_all.scss  if @import 'uswds'  the css is generated in the same folder   If\nI pu '@import 'uswds.scss' it compiles two files  one in a css  in the top\nlevel of users my name with a file name main.css and the other in the same\nfolder as uswds.scss with the file name uswds.css.  If I do anything else\nit won't compile.\nnode sass is also in the  user my name/node_modules/node-sass\nThese little details are driving me crazy and can't find a definitive way\nto control where the files go.\nthanks Nancy\nOn Apr 12, 2017 12:44 PM, \"Shawn Allen\" notifications@github.com wrote:\n\nI'm so sorry, @njohnson https://github.com/njohnson! I was referring to\nthis from your email:\nI installed node and added package.json It seems to be fine. I also\ninstalled node-sass and seemed to compiles when I added \"sass\":\n\"node-sass -w sass/ -o css/\" to the script section of\npackage.json\nSo I assumed that you had this in your package.json:\n\"scripts\": {\n  \"sass\": \"node-sass -w sass/ -o css/\"\n}\nIf you replace the \"scripts\" portion in the JSON you posted with the\nabove snippet, you should be able to run npm run sass to build and watch\nfiles in the sass directory, and any .scss or .sass that doesn't begin\nwith _ (e.g. sass/main.scss, but not sass/_variables.scss) will be\nconverted into a corresponding .css file in the css directory. \ud83e\udd1e\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/18F/web-design-standards/issues/1840#issuecomment-293638632,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AA0wK2bj-hSAtqFL40P86-nsfAB4FhGEks5rvP98gaJpZM4M6JHs\n.\n. The setup is fine.  Its just compiling to an incorrect directory.   Sass\nwatch doesn't work but that is not the issue.\n\nThe only issues is The css folder is automatically created in the\nincorrect folder.   I removed  _all.scss and changed the core file name\nwith all the  imports uswds.scss  to ncjcj.scss added a custome scss file\nand changed that.  It compiles fine with all the chages.\n/users/myname/package.json\ncss folder  is automatically created at\nusers/myname/css/stylesheets/..two css files  that are the same.\nmy project is at\nusers/myname/myproject\nsass stylesheets at  users/myname/myproject/stylesheets\nThe automatically generates a folder and css files at\nusers/myname/css/stylesheets\nI want the css to be at\nusers/myname/myproject/css/\nThe main uswds package is at  users/myname/node_modules  as does the\nnode-sass and I also installed node-sass-loader but made no difference.\npackage.json contents\n{\n\"name\": \"wrapper \",\n\"version\": \"1.0.0\",\n\"description\": \"wrapper\",\n\"main\": \"SASS/index.js\",\n\"scripts\": {\n\"sass\": \"node-sass sass -o css\",\n\n\"sass-watch\": \"npm run sass --\"\n\n},\n\"dependencies\": {\n\"node-sass\": \"*\",\n\n\"uswds\": \"^1.0.0\"\n\n},\n\"repository\": {\n\"type\": \"git\",\n\n\"url\": \"git+https://github.com/18F/us_web_design_standards_gem.git\"\n\n},\n\"author\": \"njohnson\",\n\"license\": \"ISC\",\n\"bugs\": {\n\"url\": \"https://github.com/18F/us_web_design_standards_gem/issues\"\n\n},\n\"homepage\": \"https://github.com/18F/us_web_design_standards_gem#readme\"\n}\nterminal: running\nYour environment has been set up for using Node.js 6.10.2 (x64) and npm.\nC:\\Users\\myname>npm run sass\n\nwrapper@1.0.0 sass C:\\Users\\myname\nnode-sass sass -o css\n\nRendering Complete, saving .css file...\nWrote CSS to C:\\Users\\myname\\css\\stylesheets\\testing.css\nRendering Complete, saving .css file...\nWrote CSS to C:\\Users\\myname\\css\\stylesheets\\uswds.css\nWrote 2 CSS files to C:\\Users\\myname\\css\nC:\\Users\\myname>\nThanks again.   I can manually move the css..  but would like to control\nwhere the css goes\nNancy\nOn Fri, Apr 14, 2017 at 3:23 PM, Shawn Allen notifications@github.com\nwrote:\n\nOkay, let's break this down piece by piece:\n\nYour package.json tells npm which dependencies to install (uswds\n   and node-sass), and which \"scripts\" you want to run as shortcuts.\nWhen you execute npm run sass, npm runs the \"sass\" script with\n   ./node_modules/.bin in your shell path https://kb.iu.edu/d/acar, so\n   that it can find the locally installed node-sass executable,\n   ./node_modules/bin/node-sass.\nWithout the -w argument, node-sass sass/ -o css/ will look for .scss\n   or .sass files in ./sass/, and output a corresponding .css file in\n   ./css/ for each one that doesn't have a leading _ in the filename.\nThe -w argument tells node-sass to \"watch\" the input file(s) for\n   changes, and recompile automatically.\n\nI think that if you have the above working (there are no errors when you\nrun it), then the problem is probably the -w switch, which (I just\nlearned) does not build the CSS files when you first run it. Remove\nthat, and it should work.\nJust to be sure, I whipped up a quick example gist\nhttps://gist.github.com/shawnbot/3c6ec939177eb0ab92c1e7dd3dfb85ad that\ndemonstrates the setup, with a separate sass-watch \"scripts\" entry that\npasses the -w flag to the sass script. Good luck!\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/18F/web-design-standards/issues/1840#issuecomment-294218903,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AA0wK1CkwrKXkb8EW8FlC491sep5zbnDks5rv8ekgaJpZM4M6JHs\n.\n. I tried to move this package.json into the project but didn't work.   Will\ntry to recreate.  I've added and removed items here.\n\nThank you for all your help\nNancy\nOn Mon, Apr 17, 2017 at 1:04 PM, Shawn Allen notifications@github.com\nwrote:\n\nHi Nancy,\nI'm confused about your package.json. It looks like you might have cloned this\nrepo https://github.com/18F/us_web_design_standards_gem, because that's\nwhat it would look like if you ran npm init -y in that project's\ndirectory. Did you try starting from scratch with this gist\nhttps://gist.github.com/shawnbot/3c6ec939177eb0ab92c1e7dd3dfb85ad?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/18F/web-design-standards/issues/1840#issuecomment-294529422,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AA0wK-8iSzo1ttuxrOVp16y8XqpP35dOks5rw5uAgaJpZM4M6JHs\n.\n. Thank you.   It is enabled, the accordions are working with navigation.  it\nwas only those two instances.\n\nI just tested again, both my personal PC (windows 8) and work pc (windows\n7) also have touch screens and work with I use the touch screens, but not\nwith the mouse.   My Mac book pro is not a touch screen and the mouse\nworked.\nNancy\nOn Wed, Apr 26, 2017 at 12:41 PM, John Donmoyer notifications@github.com\nwrote:\n\nHi @njohnson https://github.com/njohnson I tried to replicate this this\nmorning and was only able to do so when I had javascript disabled in the\nbrowser. Do you happen to know if javascript had been disabled on the\nmachines you were testing on? Knowing that some agencies disable javascript\nin means we'll definitely want to figure out a way to address this but I\njust want to see if I've re-created the correct scenario.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/18F/web-design-standards/issues/1875#issuecomment-297470545,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AA0wK4emdE4tV9Aq3pJFJJklefganLGfks5rz3PTgaJpZM4NC51P\n.\n. spoke too soon, still having issues with Firefox even touch..\nChrome works with touch for me.\n\nCould it be conflicts with addons or something?\nOn Wed, Apr 26, 2017 at 7:44 PM, Nancy Johnson njohnson53@gmail.com wrote:\n\nThank you.   It is enabled, the accordions are working with navigation.\n it was only those two instances.\nI just tested again, both my personal PC (windows 8) and work pc (windows\n7) also have touch screens and work with I use the touch screens, but not\nwith the mouse.   My Mac book pro is not a touch screen and the mouse\nworked.\nNancy\nOn Wed, Apr 26, 2017 at 12:41 PM, John Donmoyer notifications@github.com\nwrote:\n\nHi @njohnson https://github.com/njohnson I tried to replicate this\nthis morning and was only able to do so when I had javascript disabled in\nthe browser. Do you happen to know if javascript had been disabled on the\nmachines you were testing on? Knowing that some agencies disable javascript\nin means we'll definitely want to figure out a way to address this but I\njust want to see if I've re-created the correct scenario.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/18F/web-design-standards/issues/1875#issuecomment-297470545,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AA0wK4emdE4tV9Aq3pJFJJklefganLGfks5rz3PTgaJpZM4NC51P\n.\n\n\n. Hi,\n\nIn my version of Firefox using Firebug on my windows 7 and comparing to my\nversion of IE edge using inspector.\nFirefox does not seem to add usa-mobile_nav-active to the body nor does it\nadd is-visible to usa-overlay and usa-nav with the click is added.\nNancy\nOn Apr 27, 2017 1:24 PM, \"John Donmoyer\" notifications@github.com wrote:\n\nHey Nancy,\nSo I was able to reproduce this today in Firefox on a Windows 7 machine\nbut it seems to be working for me when I view the development version of\nour site. I can't figure out what changed between the current version and\nthe update we plan to release at the end of the week that could have\naffected this but I may ask you to give it another shot in a few days to\nsee if you're still seeing the problem.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/18F/web-design-standards/issues/1875#issuecomment-297782803,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AA0wK8bO-wCYtLYyJXZSVFwhEOuf81b_ks5r0M9RgaJpZM4NC51P\n.\n. Thank You.  Yes these are the two issues and the images are correct.\n\nIn the previous version of the usds.js.  The only issue was the menu\nbutton on responsive, but the  accordion global menu worked.\nIn the latest version Neither the menu button nor the global menu works.\nI downloaded your latest version and compared with the earlier version that\nI am using and looks like there were a great deal of changes around the\naccordion and firing of the aria-expanded.\nWindow 7 is within my company portal and windows 8 is my personal and not\nwithin the company portal.\nI dont have access to windows 10\nNancy\nOn Jun 30, 2017 9:53 AM, \"Atul Varma\" notifications@github.com wrote:\n\nAlso, in step 2, by \"a dropdown menu\" I assume you mean e.g. the \"Section\ntitle\" dropdown in the nav area?\n[image: one]\nhttps://user-images.githubusercontent.com/124687/27738608-cf5c22e2-5d79-11e7-86ee-1e9f89bee45a.png\nAnd in step 3, by \"menu\" I assume you mean the button at the top-right\nthat shows up when you make the browser window smaller?\n[image: two]\nhttps://user-images.githubusercontent.com/124687/27738621-dbbee83a-5d79-11e7-8738-327e6c882b95.png\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/18F/web-design-standards/issues/1999#issuecomment-312272931,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AA0wK6aN6SSpX4YmRy_YEztz-YcMJpTGks5sJP2_gaJpZM4OJSmG\n.\n. I just tested chrome snd firefox window 7 and both the menu button and\naccordion navigation work fine\n\nThanks\nOn Jul 7, 2017 8:08 AM, \"Atul Varma\" notifications@github.com wrote:\n\nHi @njohnson https://github.com/njohnson, I think I might have fixed\nthis bug. Can you try this alternative version of the site and let me know\nif the bug is still present on it?\nhttp://atul-uswds-test.s3-website-us-east-1.amazonaws.com/\n(Note that this URL might go down sometime in the next few days because\nit's in a temporary location that gets cleared once per week, but if that\nhappens I'll put it back up monday morning.)\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/18F/web-design-standards/issues/1999#issuecomment-313664102,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AA0wK89C_SQNc5XxFALmYHGFCpRZtDcCks5sLh_HgaJpZM4OJSmG\n.\n. Thank you.\n\nDoes your company recommend a good accessible validation package?\nI have used both https://jqueryvalidation.org/ and\nhttps://github.com/ericelliott/h5Validate    both are based on HTML5\nrequired with customization.\nThey can be made accessible but wondering if you know of a better tool.\nNancy\nOn Wed, Sep 6, 2017 at 11:30 AM, Atul Varma notifications@github.com\nwrote:\n\nThanks for contacting us @njohnson https://github.com/njohnson!\nCurrently, the standards don't provide much client-side form validation.\nThe closest thing we have to it is this validation component, which is\nlargely used for providing user feedback on different requirements for\npasswords and such:\nhttps://standards.usa.gov/components/form-controls/#validation\nIt should be noted that the component is only really useful for providing\nfeedback, in the form of check-marks, to a validation criteria. It doesn't\nactually prevent the user from submitting the form with invalid input or\nanything like that.\nAside from that, we have styling for what invalid input and error\nmessages should look like visually, e.g. in the text input section\nhttps://standards.usa.gov/components/form-controls/#text-input, but we\ndon't currently provide any actual client-side logic to make such feedback\nappear.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/18F/web-design-standards/issues/2138#issuecomment-327521370,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AA0wK9ijP3dktOOW4HoC_GeWkFbIp5H7ks5sfrp4gaJpZM4PNav4\n.\n. It is a complex TOC page where the checkboxes collect data to print, create\nPDF or in some cases depending on role, save to selected chapters to a file.\n\nThe mid-tier is .dotnet 4 webforms.   We are using their checkbox labeling\nsystem.\nThe visual user does not need the label so I have hidden it  creating a\nspan within the label with the class .usa-sr-only.  The approved design\nalso has no visual label\n\n\n  <span><img id=\"collapsed\" runat=\"server\"\n\nsrc=\"~/Content/images/fmcsa/plus-black.svg\" width=\"162\" height=\"168\"\nalt=\"collapsed\" >\n   <span class=\"usa-sr-only\"><%--For screenreaders only--%>click to see\n\nsubsections\n      </a>\n\n                    <h2>\n\n                       <a id=\"hypChapters\" runat=\"server\"\n\nhref='...'>\n                    </h2>\n\n                    <asp:HiddenField ID=\"...\" runat=\"server\"\n\nValue='...'>\n                 *   <asp:Checkbox ID=\"...\" runat=\"server\"\n\nChecked='...' />         *\n\ncheck to save chapter\nto my files *\n\n\nEach line has the option to expand to sub-sections, the title of the\nchapter and the checkbox to collect data to print.\nI've tried\n\n\nwrapping the label around the chapter that is a <h2 and link to the\ncontent, but it broke the backend, so the engineer asked me to remove it\n\n\nwrapping the label around the input, lost the styling\n\n\ntried adding the .usa-sr-only to the label and finally\n\n\nadding a span within the label with a class .usa-sr-only.\n\n\nThe .dotnet checkbox also generated a span around the checkbox so I\nhad to ask the engineer to modify this as it lost the styling.\n\n\nThe checkbox is now picking up the styling from  _inputs.scss line\n21, input,textarea, select {width:100%} so the hotspot is outside the\ncheckbox.\n\n\na.      Adding a div around the checkbox and label with a position relative\nin the div seems to help but not perfect.\nThanks,\nOn Sep 22, 2017 10:22 PM, \"Josh Bruce\" notifications@github.com wrote:\n\n@njohnson https://github.com/njohnson: Would it be possible to paste in\nsample HTML and a screenshot. I'm having difficulty visualizing the code\nyou have and the result you're getting.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/18F/web-design-standards/issues/2148#issuecomment-331604371,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AA0wK1BzML7ulNT-8SkOha-aIv-UOLm1ks5slGtigaJpZM4Pd3zJ\n.\n. \n",
    "nickbristow": "@maya yes, color contrast standards apply to all text on a web page. The confusing bit of this happens when people don't realize that it includes all states of a page or element. Like a visited state of a link, or the depressed look of a button. Not like, a sad button, but when you click it and its pressed in. \n. @maya I don't think it should be mentioned everywhere, but I do think it should be mentioned for the buttons, because people miss it. \n. @carodew \ud83d\ude2c<- awkward grin\n. @maya is correct. Fieldset is only necessary when you're adding extra instructions (legend) && grouping inputs. \n. Looks good!\n. Its good!\n. @angel is that color just used on the border or on the text?\n. @angel yep, its perfectly fine. Color contrast only applies to text. Also, for borders like that, i think 3:1 is perfectly fine. \n. @carodew so default focus state for radio buttons is a slight outline around the radio button itself, then you can move through them with the arrow keys, \nThis focus is pretty hard to see when a default option is selected. You can see an example of it here, http://www.w3schools.com/html/tryit.asp?filename=tryhtml_radio\nNot sure this answers your question, but really the answer is just, don't hide that default, or change the color to match your scheme \n. @maya yes, (aria-hidden = true) ~= (display: hidden, invisible, offscreen)\nSo this pr addresses the issue.\n. While I usually just look at contrast for compliance reasons, color/brightness ratio is also a good metric to look at and you make a good point @StraightfaceStudios \nI wouldn't fail it from a 508 perspective, but I'm all for making things better @juliaelman \n. \ud83d\ude4c\n. I can't find anything that says fieldset and legend aren't supported, and when I tested it, the legend was read on mine. Using (10.9.5)\nIs there a specific version that isn't supported? \n. Thanks @goetsu \nThat is strange that something so basic is still overlooked by apple. I'm sure its been done, but I filed another bug with apple and we'll address it on the standards. \n. @mollieru @maya \nYes this is a bug in iOS/OSX voiceover. I'm sure its been done, but I've filed a bug report with apple. \nUpdating the code as goetsu pointed out, is a workaround for the issue. \nWe could also note the issue in the accessibility section. \n. We are getting really in the nitty gritty of specific screen reader support here, but to make this work with voiceover, we should be able to do for example, \n<label for=\"car_4\">Car</label>\n<input type=\"text\" id=\"car_4\" aria-labeledby=\"car_4 carmakedescription_4\" /><br/>\n<span id='carmakedescription_4'><i>Please enter Make and Model</i></span>\n^^ that will read the label and the description text. \nIn theory you could do \n<label for=\"car_5\">Car</label>\n<input type=\"text\" id=\"car_5\" aria-describedby=\"carmakedescription_5\" /><br/>\n<span id='carmakedescription_5'><i>Please enter Make and Model</i></span>\nbut voice over doesn't currently support  aria-describedby so ^^ that example will only read the label with macs voiceover. Jaws will read it just fine. \nIt's very hard to keep up with screen reader versions, which is why i tend to do tool agnostic testing. \nYou can find these examples here https://pages.18f.gov/accessibility/forms/\n. @rusty1992 Thanks for the correction, \nWe were looking around, and it is written in several different ways. Not sure which of these is the best to go with in this context. It would be great to have your input on this. \nSection 508 of the Rehabilitation Act of 1973\nSection 508 of the Rehabilitation Act - 29 U.S.C. \u00a7 798\nSection 508 of the Rehabilitation Act of 1973, as amended (29 U.S.C. \u00a7 794 (d))\nSection 508 of the Rehabilitation Act of 1973, as amended in 1998\n. I like it @maya \n. Good to go\n. \ud83d\udea2\n. @maya this is correct, no color contrast requirement under WCAG 2.0 AA, \nNote though, there is a contrast requirement for DHS for disabled buttons, but we are following WCAG for the standards, so go for it. \n. I did some research, as far as I can tell, AT doesn't seem to be looking at the name attribute for anything. We have the fieldset for grouping and proper labels. \nUsing the [ ]'s should be fine as its just a string value and shouldn't affect accessibility. \nI think this is just a best practice/how do we want to show this example in the clearest way possible. Will people be confused by the brackets? Do we need to explain what the attributes are doing and how they are used?\n. This is a good point @ducklet \nWe should change how aria-hidden=\"true\" is handled with CSS @maya \nWe may need to add to update some things that were being hidden that way. \n. aria-labelledby overwrites the default label. You can also do aria-labelledby='for-value-of-label{SPACE}id-of-instructions' so that it reads both/multiple things.\naria-describedby should read additional info, but may not be read by default depending on your screen reader. \n. @joshbruce So I put some examples on our little guide page. If you have a screen reader you can test these examples. I also recorded the output of voiceover there as well. \nThe gist is, aria-label, aria-labeledby override the default label and aria-describedby doesn't work with voice over on OSX but should work with jaws. \nhttps://pages.18f.gov/accessibility/forms/#car_1\n. You're welcome!\nOn Friday, May 20, 2016, Josh Bruce notifications@github.com wrote:\n\n@nickbristow https://github.com/nickbristow - Thank! I've been toying\nwith VoiceOver a bit over the last couple of days. I haven't had a chance\nto test against this issue, and definitely appreciate the assist. That's\ntoo bad that VoiceOver doesn't recognize the aria-describedby.\nThinking about testing an internal link to accomplish the same - for both\nthose using assistive technology and those not.\nThanks again for following up.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly or view it on GitHub\nhttps://github.com/18F/web-design-standards/issues/1145#issuecomment-220723089\n\n\nNick Bristow\n18F Innovation Specialist\nNick.Bristow@gsa.gov\n. As per this technique, https://www.w3.org/WAI/GL/wiki/Using_ARIA_role_of_alert_for_Error_Feedback_in_Forms\nthe alert role should be monitored by AT and should be sufficient for conveying the information to the user. Also, will open an issue to apple about voiceover not reading aria-describedby by default. We should try to be tool agnostic with these designs. \n. Traditionally things that do button things should be buttons. Links are best reserved for navigating to new resources. I personally don't have an issue with styling buttons to look like links. \nScreen reader users expect links to navigate them, and buttons to do something to the current page, so when they do the opposite it can be confusing. \nIt's less confusing for sighted users, so I don't mind the <button class='link-style'> pattern. \n. Reviewed and works now with iOS voiceover. \ud83d\udc4d \n. @maya \ud83d\udc4d \n. thanks @allanj-uaag! \nThis is a good point and we will put it on the to do list. \n. @maya I would add a div with that id. Just so its clear. \n. Ideally everything on the page is correct as it loads, something is hidden has the proper aria tags. If javascript changes the visible state of something, the aria is updated then. \nTabs loaded open, should say they are expanded and vice versa. \n. @shawnbot i think i understand. Its \ud83d\udcaf percent fine to hide from everyone, even if JS shows it later. \nDid i get that right?\n. @maya I would consider it AA compliant, but I would recommend making it more visible. \nAs noted in the WCAG\n```\nAlthough not required for conformance, the following additional techniques should be considered in order to make content more accessible. Not all techniques can be used or would be effective in all situations.\nHighlighting a link or control when the mouse hovers over it (future link)\nProviding a highly visible highlighting mechanism for links or controls when they receive keyboard focus (future link)\n```\nMy rule of thumb is to make focus indicators 4.5:1, the same as text. . @jasonkaedingICE @shawnbot I actually was just discussing this with someone else. The issue with using disabled form fields to convey information is they are completely ignored by screen readers. \nI would definitely look at alternate solutions for displaying that information. Shawn's suggestion would work.. I don't think i've ever tested that pattern. I would assume it would get pretty inconsistent results. . I did a bit of digging about accessible smooth scrolls and tested a couple with the screen reader. At most, focusing after the animation would cause a minor inconvenience, and even that is a bit of a stretch. \nAs long as its clear, that its a link targeting another section on the page, and you move focus to the new area after the animation, it should be good. \nI don't think disabling smooth scrolling for keyboard navigation is necessary. \n. ",
    "vgvg": "PR #399 should have fixed this.\n. This appears to be a bug with Safari on iOS itself. Found some references to similar behavior: https://bugs.webkit.org/show_bug.cgi?id=138201\nIt seems to be a symptom of having an input box inside of a container with overflow set to scroll. I was able to replicate the bug with just a very basic div with overflow: scroll, and an input in the middle of it and have not been able to find any clean css ways to fix it.\nThe two ways that would work to remove this bug are to remove the use of overflow scrolling on the main body of the page and either 1) have the header be sticky some other way, 2) let the header scroll along with the page on iOS. Are these options something we would want to do?\n. @maya yeah I just looked at that bug, changing overflow on a container and using the entire page's scrolling would help fix #275\n. PR #399 should have fixed this one.\n. Saw this in the simulator as well. Feels like an artifact of the overflow scrolling on the container. Might be fixed by PR #383.\n. Should be fixed now.\n. Hey @colinpmacarthur, would you mind testing this again on Android? This works on iOS now. I believe the changes made to the scrolling behavior and having the header fixed differently now seem to result in a better behavior on iOS, I wonder if android might also be handling it better now as well.\n. I couldn't reproduce when the field is masked, but was able to when clicking the \"Show me what I'm typing\" buttons.\n. We could also just choose to not have a sticky header, which would simplify and remove the need for this code and some of the workarounds in here.\n. Also seems to work pretty well on IE11\n. @colinpmacarthur I'm going to go ahead and merge this if you agree and didn't notice any bugs while you were testing it.\n. @maya here's a cross-browser fix to make sure the nav works well\n. @msecret addressed comments in latest push\n. @msecret @maya This should get IE8 to work ok. There's still a weird FOUC, but at least things look ok after.\n. Turns out that $(\"#\") will cause this in FF (but not Chrome). However, $(\"\"), $(\"idonotexist\") or $(null) do not. Fix in #652 \n. :+1: \n. LGTM\n. LGTM \ud83d\udc4d\n. :+1: \n. :+1: \n. :+1: \n. :+1: lgtm\n. :+1: LGTM\n. :+1: \n. No preference for me, I've seen it used both ways, I've even seen it in an assets/stylesheets folder.\n. Much more clear. :+1:\n. :+1: \n. This weird css is here to make sure anchor tags line up with the bottom of the header, and not with the top of the browser since that means the h2 gets covered when header is fixed. Another approach is to use negative margin and an offsetting positive padding on the element itself.\n. I tested on iOS 8.4 (iPad & iPhone) and it seemed to work well on there. Do not have access to an Android device to test on there.\n. The normal behavior of anchors is to position themselves at the top of the browser window. Because the header is position: fixed, this means that the title of the section is by default covered by the header. This fixes that by setting scrollTop on page load when a user lands on a page with a hash on the url.\n. Yeah, I can clean this up and just do it once inside of that function\n. Yeah, it doesn't seem to work if it's not in the head. The entire page layout gets screwy.\n. done\n. Yeah, I agree. I didn't notice too much of a delay since the animation is set to 200 ms so done fires super fast, and doing the focusing before breaks the animation. Maybe it's even better to just skip the animation entirely if the keyboard was used?\n. ",
    "sujithuix": "Add -webkit-overflow-scrolling: touch; to the scroll div. The scroll will become smooth then.. ",
    "henlz": "\nAdd -webkit-overflow-scrolling: touch; to the scroll div. The scroll will become smooth then.\n\nI used this for some time to fix the problem, but it added other issues with z-index and position: fixed elements, so be careful when using that \"hotfix\".. ",
    "psr1919plus21": "For those, who still have related problem: \nThis bug occur when input nested into parent with position: fixed.\nChanging position to absolute resolved this problem for me.. ",
    "litsazib": "i already fix this problem \ud83d\udc4d please user this code ...\nhtml,body{ -webkit-overflow-scrolling : touch !important; overflow: auto !important; height: 100% !important; }\n. ",
    "purvishah165": "-webkit-overflow-scrolling : touch !important; not working in iOS 11. It disabled user to scroll. Did anyone face the same problem?. ",
    "zsaidov": "Scroll down and notice how the cursor also moves past the border of the text box,\n\n. ",
    "dotrajesh": "Insert the cursor into a text field. This puts focus on the field and triggers the mobile keyboard to appear.\nNot Issue fixed . ",
    "NorhanSamir": "I've the same cursor problem on scrolling and I can't fix it on ipad and iphone any help?! . ",
    "denveloperj": "@NorhanSamir you need to remove the position:fixed that maybe on your parent container.. ",
    "merbin2012": "Conclusion: All the Apple product is very worst. Only the brand name is familiar. I have Apple,.... ",
    "jeremiak": "Some feedback from trying to implement this on jeremiak/sbst-template:\nThe grid system inside the nav bar isn't the most intuitive to me. For example, I have the following code for putting the site title in the upper left hand corner:\n<a href=\"/\" accesskey=\"1\" aria-label=\"Home\">\n    <h1 class=\"usa-header-title\">{{ site.title }}</h1>\n</a>\nBut the problem is that the text wraps after just the first word (screenshot here).\nIt still happens even when the number of menu items is fewer, though still a reasonable 4 (screenshot here).\nI'm used to working with frameworks like Bootstrap that are pretty forgiving in how the .navbar works and doesn't rely on an internal grid system, instead relying more on having a logo/title and then a flexible list of menu items.\n. Ya, from my perspective I'd very much like the grid to not have to be as present as it is. It seems to mostly get in my way and not be easily to debug. So for the main content page, I get using .usa-grid to create a new grid and then using the column classes and .end-row to get the effect I want.\nHowever, for the navbar I really just want to make a title and then make a UL with my menu items.\n. Hi all, love the feedback! I like where this is going and completely agree that we should make the design standards a bit easier to leverage in your projects through dependency management tools (i.e. bower or npm). However, 18F projects don't use bower as a matter of policy (18F's front end policies and guidance can be found in our Front end guide).\nI'm going to close this issue, as I did wth #760, in favor of #767 (making the standards available through npm) because it strives for the same goal of making it easier to include the design standards in your project and get started using them.\n. Hi @robertmain - thanks so much for opening a PR and getting involved. I like where this is going and completely agree that we should make the design standards a bit easier to leverage in your projects through dependency management tools. However, 18F projects don't use bower as a matter of policy (18F's front end policies and guidance can be found in our Front end guide).\nI'm going to close this issue in favor of #767 (making the standards available through npm) because it strives for the same goal of making it easier to include the design standards in your project and get started using them.\n. Some background: It is pretty clear from #745 and #760 that folks want to be able to easily use the design standards with the dependency management tools already in their toolchain. The 18F front end guild provides guidance around dependency management through the respective guide, which advises the use of npm instead of tools like bower.\n. Hey @openbrian that looks pretty cool, nice work. I followed a pretty similar pattern in #902\n. :+1: \n. Thanks for the review/feedback @juliaelman. I've gone ahead and added myself as a contributor and updated the getting started section of the README. I put in the v0.9.0 tag so I think this PR should not be merged until that release is pretty much imminent. \n. Wonderful, thanks @juliaelman!!\n. Cool, I'll take a look at the PR @mbland but also wanted to answer your question. In my opinion the benefit of having the library on NPM is that it can be a declared dependency to ease installation and deployment. If you are var wds = require('uswds')-ing then I would assume that wds is an object from the index.js file in that repo and be the JavaScript components of the library.\nAs far as those other keys, they're definitely not yet standards with regards to their semantic meaning or place in package.json. But :+1: for shipping it with documentation, as it enables flexibility for any arbitrary build tool chain.\nAs an example, on Federalist we use the build-sass script to compile the CSS.\n. :+1: \nI didn't know about parcelify before, nice find @mbland!\n. I guess I don't understand the need to have a seperate bit of CSS for the style guide (perhaps beyond doing some margin fixing for presentation inside another grid). Ultimately, I'm going to be looking through the source of the documentation site to determine the class structure for elements and I don't think I'm going to remember that distinction all the time.\nWhen I look at other CSS frameworks they generally use the framework itself for the documentation.\n. Well, we're using it on Federalist but we run the build task on our side and then we move that CSS around. See scripts here\nI'm curious, what would you expect if you were to import 'wds'?\n. I like the approach that Bootstrap uses:\n- There will be a css and a scss key in the package.json that each point to a file. The main key in the package.json will point to the main javascript for the library. This means that if you require('uswds') you will get the main JavaScript file, not the CSS.\n- To get to the css and scss keys programatically one could require('uswds/package.json').css or require('uswds/package.json').scss\nI don't think we should commit compiled code to Github, instead using npm prepublish scripts and maybe even having Travis build and publish when appropriate.\n. ",
    "webinista": "Just ran into this. This media query:\n@media screen and (min-width: 600px) {\n    form {\n       max-width: 32em;\n    }\n}\nResults in a very narrow form width at larger viewports.\n\nThe min-width part of the query should probably be max-width instead.\n. A work in progress: http://codepen.io/webinista/pen/WrjMNo\n- It borrows heavily from the Refills accordion/tabs pattern.\n- Our use-case is for internal software, so this example isn't (yet) optimized for touch input or smaller screens.\n. @maya okay ... turns out that I had to add the original repo as another remote, and run git fetch --all && git rebase upstream/18f-pages-staging. I've (finally) resolved that merge conflict and I think I did it correctly.\n. Makes sense.\n. My bad. This is a problem on our end. Closing.\n. ",
    "shanear": "@maya The width of the form fields is great, but by putting the max-width property on the form tag we're having a difficult time positioning things that may not fall into that max width, like our submit buttons.\nsee the screenshot below to see what we're talking about:\n\nRight now our only option seems to be to override the max-width property on form.\nCould you tie the style to a class like .usa-form instead of the form element itself?\nSo we could do something like this:\n<form>\n  <div class=\"usa-form\">\n    <input type=\"text\"/>\n  </div>\n  <input type=\"submit\"/>\n<form>\n. @carodew definitely :+1: \n. ",
    "esgoodman": "@jtag let's set up a time to walk through my Sketch symbol library to see what should be in there.\n. That's exactly what I was thinking. FontAwesome is a generalist set of icons that works great for general interest sites. It doesn't present a wide range of options for many subjects that concern government websites, such as financial transactions, sign-in/identity management (my own concern), security, etc. \n. Whoohooo! It's been great to see how the discussion in comments led to a solid -- but lightweight -- first step. \ud83c\udf89  . This palette is lovely. It feels like the other end of the complexity spectrum from the current Standards palette. What would a middle-range palette look like -- with fewer colors and more contrast between them? . ",
    "jtag": "So so good. Thank you.\n. ",
    "mbland": "@msecret Yep, done: 18F/guides-style#1\n. FYI, you can get rid of the baseurl: from the _config.yml and view the site locally at localhost:4000, and it will still show up as https://pages.18f.gov/web-design-standards/. (This capability was added in 18F/pages#24, by way of 18F/pages#22.)\n. All the links internal to the site, images included, need to start with {{ site.baseurl }}, in this case {{ site.baseurl }}/assets/img/.... Let me know if that doesn't do the trick, or y'all need a hand, etc. I'm heading home now, but can pick it up either a little later tonight or first thing tomorrow if you need me to.\n. Sorry, yes, that was suggested in an offline email thread.\n. Ping... It appears https://playbook.cio.gov/designstandards is ready and waiting... :smiley:\n. @maya  That's updated in your 18f-pages-staging branch; when you merge that into 18-pages, the _config.yml file will receive those updates. If we make those changes in this branch, it'll likely cause conflicts when the merge takes place. This _config_18f_pages.yml file is brand new, and won't cause a conflict.\n. After chatting with @maya, going to close this PR and open a new one to merge into 18f-pages-staging.\n. Yes, that's expected. If you want to run it at http://localhost:4000/designstandards/, run it with bundle exec jekyll serve --config _config.yml,_config_18f_pages.yml.\n. Sorry, it's back now. Had to tweak the nginx config on our side to get it working properly with the proxy forwarding from playbook.cio.gov. See 18F/hub#444.\n. @maya Done!\n. Just for the record, confirmed that @maya needed to restart her local Jekyll server, since the aforementioned link as just added to _config.yml. :-)\n. No problem. Fixed. Gotta love trailing whitespace conflicts.\n. Thanks for the catch! But can you actually push a commit to replace go script with [go script](https://github.com/18F/go_script)?\n. (This also reminds me I should update the ./go script to use the new go_script gem.)\n. I figured y'all might check out how those asset references are ending up in assets-styleguide and figure out how to properly reference them or remove the references entirely. I'd imagine the higher-occurrence errors would take priority. (Just noticed that assets-styleguide/img/home/example_voteUSAgov.png showed up 827 times!)\nI also didn't know if any of those other missing assets were red flags of any kind, hence I included them all. And I wonder if some of the errors are due to access on devices that weren't explicitly tested, e.g. a media query specific to a particular phone+browser combination resulted in an asset reference that didn't exist.\n. Thanks for the catch, but this was also reported in #744.\n. Ah, easy fix. On it.\n. All fixed now, @carodew!\n. Dupe of #754. But guess we'll finally go ahead and update the Gemfile.\n. Just bumped the version in the README, too. @maya, ready to do the honors?\n. Sorry, just getting back in ow. Yes, the docs should be updated. As for why, 2.2.3 includes a fix for a RubyGems vulnerability.\n. The ./go script will try to install Bundler if it isn't already installed.\n. Since I've scrubbed in to try to help @maya with this, I've run into some questions for @jeremiak and @msecret.\nSo when we talk about \"npm support\", we're talking about being able to write browser-only JavaScript that can require('uswds'), ostensibly after browserifying it? We're not talking about being able to require('uswds') from an arbitrary Node program or the Node REPL and having it work without errors? For example:\njs\n// npm.js\n// Compiled using: browserify npm.js -o index.js\n'use strict';\nrequire('uswds');\nAnd then in the HTML file:\nhtml\n<script src=\"./assets/js/vendor/jquery-1.11.3.min.js\"></script>\n<script src=\"./index.js\"></script>\nThis seems to behave in my browser; whereas require('uswds') in the Node REPL dies horribly.\nAnd these programmatic require('uswds/package.json').css or require('uswds/package.json').scss directives aren't actually standardized yet, but proposed standards, correct? I saw that bootstrap uses the less and style tags, but gives no guidance on how they're used. Then I found that the parcelify npm supposedly uses style, but again, that requires the user knowing to use it. Also:\n- http://stackoverflow.com/questions/32037150/style-field-in-package-json\n- This hints that some npms exist to overload the @import directive: http://techwraith.com/your-css-needs-a-dependency-graph-too/, namely:\n  - resin\n  - rework-npm\nPoint being, if we add these keys, we'll have to document how to use them. So basically, the package.json needs updated to something like this, plus some documentation, and we're good to go:\njson\n  \"main\": \"assets/js/components.js\",\n  \"scripts\": {\n    \"build-sass\": \"node-sass assets/_scss/all.scss > assets/css/uswds.css\",\n    \"prepublish\": \"npm run build-sass build\"\n  },\n  \"assets\": \"assets/\",\n  \"css\": \"assets/css/uswds.css\",\n  \"scss\": \"assets/_scss/all.scss\",\n. No, I get the benefit of npm packaging. I was checking whether my understanding of how it would be used is (now) correct, that it would be required by browser scripts only. This after pulling a fair amount of hair out trying to get it to load without throwing a stack trace in the REPL.\n. @msecret Added a style key. PTAL.\n. Good catch. I'd had a separate \"build\" target previously that I'd since taken out. Done.\n. ",
    "angelk": "@mollieru I don't have anything in common with this project, wrong cc ;)\n. ",
    "bradnunnally": "A couple of thoughts just to get them out there:\n- Can we hide the address bar when the user is inputing information into a form?\n- Can, should, we try to hide the suggested word bar on the keyboard?\n- Are there other keyboard layouts available to us in the Android platform that is still a qwerty keyboard but more condensed than the one being shown in the gif?\nPoking around the interwebs, this is a problem many run into and it's been flagged as a bug in Chrome on mobile. The other option, which is more extreme, is to revisit how people navigate the site on mobile and test out using a navigation bar that is tied to the bottom of the screen rather than at the top. \n. Is it not possible to scroll to a hotlink, where the position of the hotlink is defined after the animation occurs? \n. @maya Sounds good to me, the idea came to me so I wanted to bring it up. \n. @maya and I just spoke and for the time being we are going to leave the component as is. But it'll be flagged for future research, both design and development, and a new version will be created that resolves this issue and any others that the team is aware of. \n. @iluvtatortots Awesome! Let me know how it goes and if you have any questions. \n. @iluvtatortots Just wave at me! I'm sitting over by the wall. \n. @lmarkzon Awesome! Let me know how it goes and if you have any questions. \n. @elarenee Awesome! Let me know how it goes and if you have any questions. \n. @ericadeahl I agree with your thoughts. \ud83d\udc4d \n. After reviewing everything and doing some research on accessible form design and such I'd like to explore the following options. None of these are meant to say \"this is the direction\" rather some prototypes we could build out to test with. \n1. Use a combo-box design pattern that allows for both selection and type ahead, where the format of the data set is STATE (XX). This would allow for both full state input as well as the abbreviation. \n2. Use a combo-box where the data list is just the name of the state/territory/military location, and there is hidden meta data which would allow someone to type in the shorthand of a state. E.g. CA for California. This metadata would be screen reader available though to ensure accessibility.\n3. Look into using APIs like that USPS Verify An Address tool to assist users in correcting any accidental errors. (Can an API connection like this be included in the component design or is that best left up to the implementation team using the standards?)\n4. Do some outreach with people that frequently send mail to either a territory or military address to validate if the label State makes sense? Or if another label or additional microcopy is needed. \n5. Can we move the zip code entry up in the order of fields to pre-fill city and state, while providing the option to correct any errors if the wrong city is pre-filled? (The flow here would be Address Line 1 & 2 -> Zip Code -> Verify/Correct City & State)\nI'll put some thought to this in the coming days and post a few prototypes that illustrates these different scenarios. \n. This issue has some relation to the PR #1118. We are closing that PR and will pick all this up at a later date when we look to enhance the form elements design. \n. Some examples we can use as inspiration for this type of page \nhttps://www.uscis.gov/tools/glossary?topic_id=i#alpha-listing\nhttps://www.congress.gov/help/legislative-glossary\nWe could use the accordion pattern to provide something similiar. . Draft of this is complete. Closing this issue and going to create a new issue (#1877) to review with the team and write the content. . Closing the related PR and will use the information contained in #1124 when creating the new component. \n. @j-ta Awesome! Let me know how it goes and if you have any comments you'd like to share. I'm sitting over by the wall. \n. This solution looks good to me! Assigning to @juliaelman for closing out. \n. Assigned to @ericadeahl for visual design review. \n. After team discussion, we are going to close this PR and tie it into issue #860. Thanks for all the input and we will use it as guidance when revisiting the form elements overall design. \n. Closing PR. Will revisit when #988 is picked up. \n. Looks good to me @juliaelman \n. @jsimon727 Awesome! Let me know how it goes and if you have any questions or comments. \n. @stephmarx & @lisli - Awesome! Let me know if you run into any issues or have any comments.\n. @cella Awesome! Let me know how it goes and if you have any questions. \n. Echoing what's already been mentioned. Something that has helped me in the\npast when struggling with long nav titles is stopping and asking myself why\nthe title has to be so long. Sounds simple, but in the past its reminded me\nthat most of the time it's for bad reasons (It's always been called this\nthing, or it's a phrases that the design team got stuck on and never\nconsidered alternatives).\nErica brings up a good point though that anything that spans more than 3\nlines should be rethought and shortened for sure! If the only label that\nmakes sense is more than two lines, maybe the content in that section needs\nto be broken up into two different sections.\nOn Tue, Jun 7, 2016 at 1:27 PM, Erica Deahl notifications@github.com\nwrote:\n\n@mollieru https://github.com/mollieru Agreed that it's preferable to\nkeep titles short, but in some cases the wrapping might be unavoidable. In\nthose cases I wouldn't recommend truncating the title. I don't think the\nwrapping is a problem, I'd just make sure there's sufficient spacing\nbetween nav items (or another visual indicator like a rule) to make sure\nusers read the long title as one nav item and not two. And I wouldn't go\nover two lines of text.\n[image: screen shot 2016-06-07 at 11 19 13 am]\nhttps://cloud.githubusercontent.com/assets/5911280/15869587/e79b8852-2ca1-11e6-9ca8-dd96c5cc16ea.png\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/18F/web-design-standards/issues/1238#issuecomment-224371007,\nor mute the thread\nhttps://github.com/notifications/unsubscribe/AL73GJltBfvx25rCm-A2zhyBSUSjG5Arks5qJbgngaJpZM4Iv_4a\n.\n\n\nBrad Nunnally\nInnovation Specialist\n18F  https://18f.gsa.gov/\n|\nGSA http://www.gsa.gov/portal/category/100000\n618-407-6490 | brad.nunnally@gsa.gov brad.nunnally@gsa.gov\n. I think linking to the wiki is a great idea, we will just want to make sure it opens in a new tab and doesn't take them fully away from the site. \nHowever, if we include it in getting started section we could link to that. \nOne final thought - What about a tool tip? That gives a brief description with a call to action to learn more either on the wiki or getting started? I'm not sure what history there as been discussing tooltips so if tooltips are bad then we can just ignore this thought. :D\n. Agreed about wanting to check in on accessibility concerns regarding the tool tip. As shown I think it solves the problem nicely. \nI think @joshbruce is on to something too regarding the clickablity of the label. For mobile, I wonder if we just present the content by default and only use the tooltip on desktop? \nThoughts? \n. @maya As long as the information behind the tooltip isn't required reading/necessary to complete a task there doesn't tend to be usability issues with them. Tooltips are good elements to use when showing supplemental information, which I think is what we are trying to do here with a short explanation. \n. @maya Since the tooltip, and the label really, are low priority elements on the screen. They are mostly \"FYI\" in nature, I'm not too concerned about the overall affordances of them. These aren't actions we want to ensure that every user can do every time they come to the site. \nThe context of use is more around supporting a sub-set of users curiosity. \n. Just fixed the last that had ??? in the cells. \nGood to go from my point of view!\n. Hey @joshbruce. We are working on the workflow the team is going to be using for Screener since it's a new tool for us. Based on a conversation yesterday, we (the designers on the team) will be looking at screener if:\n- Developer asks us to take a look based on a failure\n- If a Pull Request has a design review associated with it\n- If it's a formal release, a design review via screener will occur along with any of the development review that is part of a formal release.\n@msecret & @ericadeahl - Did I miss anything? The above was based on the notes I took during out chat. \n. Agreed with @ericadeahl we should follow our own styles as much as we can. It's fine to break the rules when it makes the sense. /cc @maya \n. Agreed with @ericadeahl's assessment. It's probably good enough for now, but given the research Erica has done it'll need more focused analysis at some point in the future. \n. @Yulia-O This is great feedback! If you have a free moment today I'd love to discuss this further with you. \n. I think this makes a lot of sense, especially to show folks outside of\ngithub that things are actively being worked on\nOn Mon, Jul 11, 2016 at 8:16 PM, Maya Benari notifications@github.com\nwrote:\n\nWhat do you think about adding a status to the milestones?\n[image: screen shot 2016-07-11 at 6 12 07 pm]\nhttps://cloud.githubusercontent.com/assets/5249443/16752097/7f264e44-4793-11e6-91bd-0e26aafa4478.png\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/18F/web-design-standards/issues/1309#issuecomment-231911641,\nor mute the thread\nhttps://github.com/notifications/unsubscribe/AL73GLFPUkGMOnvnDaoKXs26Lij5m8CAks5qUur7gaJpZM4JISPR\n.\n\n\nBrad Nunnally\nInnovation Specialist\n18F  https://18f.gsa.gov/\n|\nGSA http://www.gsa.gov/portal/category/100000\n618-407-6490 | brad.nunnally@gsa.gov brad.nunnally@gsa.gov\n. @maya and @ericadeahl  - This is based on the workshops results from last week. If anything has changed, lets flag it and make sure we all agree. \n- A public, up-to-date product road map. 50%\n- A public maintenance plan. 75%\n- A bare-bones HTML starter page, with CSS and JS pre-linked and necessary tags and classes. 25%\n- Defined processes for active and public implementer support. 50%\n- Contribution guidelines for both designers and developers. 75%\n- Form patterns that include recommendations for just-in-time instructions. 0%\n- UI components are comprised of clean, semantic code. 50%\n- Simple \"Getting Started\" process and instructions. 50%\n- A core set of common, usable web components. 50%\n- Ready to go HTML templates (and related design stencils) for common types of government site pages. 0%\n. @maya There ya go using logic! ;D\nYes you are correct, and making everything else in progress works! Thanks!\n. My thoughts on having the notes on the website:\nTLDR - We should do. )\nWhy? Key information, such as the release notes, should be where the users are. They might not always be on Github (and we've heard hints of this in recent research). \n. I remember this now! :D Still looks good and will work really well with what we have planned. The only difference will be the side nav. . For the side bar, we should use the design that's present in this comp - https://gsa.invisionapp.com/share/FBAA2B78N#/217092077_1-0_-_What-s_New. We should also revisit the content in the opening blurb since the title of the page isn't What's New anymore. . @maya, @kategarklavs and I discussed and this content is going to be included in the broader effort to add \"context of use\" content to all the components that are on the site. I'm going to close this comment for now. \nThanks for the push on getting content like this out. \n. @kategarklavs and @jameshupp Took a look at the draft copy and made some comments and suggested changes.\n. Looks good to me!\n. Agreed. Option 4 seems the strongest\nOn Tuesday, August 2, 2016, John Donmoyer notifications@github.com wrote:\n\nI dig option 4!\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/18F/web-design-standards/issues/1340#issuecomment-236991584,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AL73GGzkifKdGN3bcBLrIYHtXv1dYKGRks5qb4gLgaJpZM4JQC--\n.\n\n\nBrad Nunnally\nInnovation Specialist\n18F  https://18f.gsa.gov/\n|\nGSA http://www.gsa.gov/portal/category/100000\n618-407-6490 | brad.nunnally@gsa.gov brad.nunnally@gsa.gov\n. #1345 this is issue is related\n. @donjo and I created an email template to help recruit folks for upcoming user research. \n@kategarklavs & @jameshupp - Could you take a pass at this please?\n. @joshbruce It's not too late! We haven't kicked off this effort just yet. Can you email me some info about your project and agency? brad.nunnally@gsa.gov\nThanks!\n. Created a draft V2 of the interview guide given the current focus of the team's research. \nDocument is located on the project folder. \n. @shawnbot I think this makes sense and matches some of our updated assumptions coming out of the research we just performed. Basically, giving teams the foundation and then point them to the various solutions we would recommend so they can assess what would work best for them and their product. \n. Here are next steps from the teams meeting @donjo and @lauraponce we had yesterday:\n- MVP & Fidelity\n- [ ] Create a landing page that describes the purpose and use of templates\n- [ ] Create a template for a document based site\n- [ ] Create a template for a marketing site\n- [ ] Fidelity of of the templates should use the colors and styling of the WDS to give people the best starting. \n- Location\n- [ ] Include as a main nav item with linking from Getting Started\n. @maya I'll take a look at this today.\n. My thoughts on the X is to leave it as is. It's a standard location for interactions like this and add it where the open was I think will make that area kind of crowded. Agreed making the whole upper banner the touch target though just to make it easy to tap. \nX for affordances, whole thing touch target for usability. \n/cc @maya @donjo @lauraponce \n. I'd say these 8 are good. It represents most if not all of the popular systems out there today and will give us great insight into what they are offering that we are currently missing and vice versa. \nThanks @lauraponce!\n. This change makes sense as it makes the first row consistent visually. \ncc @maya @donjo \n. @rovo79 That'll be the plan, but due to some internal constraints on our end the survey will be limited to those with a .gov email address. \n. Hi @rovo79, @lauraponce was referring to some of our internal slack messages here at 18F. Contractors are allowed to complete the survey if they have signoff from their COR. \n. @kcjonesevans  @jpyuda would know more about the process, he was the one who initially gave me that guidance. \n. LGTM!\n. I think this is a great start of the conversation. I'm flagging this for something to dive deep into during our upcoming team workshops because I think the name is just a part of the overall problem. It's probably the biggest part though. \n:High-five: to @shawnbot for raising this and articulating it so well. \n. What happens if we drop US Web Design? Just throwing that out there...\nOn Wednesday, October 19, 2016, Will Slack notifications@github.com wrote:\n\nIn order of my preference:\n- U.S. Web Design Styleguide\n- U.S. Web Design Resources\n- U.S. Web Design Goods\n- U.S. Web Design Supply\n- U.S. Web Design Products\n- U.S. Web Design Materials\n- U.S. Web Design Capital\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/18F/web-design-standards/issues/1518#issuecomment-254931375,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AL73GP2i5OEnHr8ErSACHisncTKRMfdAks5q1n3ggaJpZM4KQdgB\n.\n\n\nBrad Nunnally\nInnovation Specialist\n18F  https://18f.gsa.gov/\n|\nGSA http://www.gsa.gov/portal/category/100000\n618-407-6490 | brad.nunnally@gsa.gov brad.nunnally@gsa.gov\n. I want to flag this as a task we will pick up for the next sprint, where I'll meet with @philipashlock and @wslack to learn more about some of the stuff that was linked and we can maybe put a timetable in place for the name change. . Thinking this through, the overall design and code of the search would be\nsimpler if it the toggle was removed.\n. Only focusing on the Master Builder and the Lone Ranger in terms of goal narrative. \n. This is complete with goals detailed out for the target user archetypes. \n. This issue is no longer relevant and may be reopened later when more interactive features are available. . We can close this out no? @Journerdism. The draft list of business objectives include:\n- Increased Exposure\n- Increased Engagement\n- Drop Off Points\n- WDS Set Up\n- Visitor Demographics\nPlan is to review them with the team on 11/2 for feedback and revision. \n. Initial list of objectives were reframed as Product Objectives to be more accurate and consolidated into three objectives. \nThis task is complete and moving on to fleshing out the three objectives. \n. KPIs initially defined. The targets will need to be defined at a later date once an initial baseline is set. Setting the baseline will be part of the overall approach that #1548 will address.\n. Meeting with someone from the Analytics guild the morning of 11/4 to review the proposed strategy. Next is to document the approach and develop the roadmap. \n. Final draft and MVP has been created. \n\n@acolter @juliaelman @shawnbot @Journerdism Thoughts?\n. @juliaelman I think that's one of our end goals, or at least keep track of what the current metrics is. \n. The write up is being created - https://github.com/18F/web-design-standards/wiki/analytics-strategy\n. @acolter Here is the revised copy \nOur research has shown that potential users of the Draft USWDS want to see a mix of qualitative and quantitative metrics that show the value and usefulness of adopting the Draft USWDS. This need exists to help justify the use of USWDS to their peers, managers, and executive leadership. Government is naturally risk-averse, and seeing proof that the USWDS is being used successfully helps reduce the hesitation to adopting the USWDS. To meet this end, the team is going to focus on publishing metrics that showcase where the Draft USWDS have been put into use and to show quantitative measures that speak to the value and impact of the standards.\n. Draft has been created. Iterations will be made next week to finalize. \n. Refinement can be made during the next sprint. \n. Requires team collaboration to discuss the technical nature of putting the strategy into place. \n. Will be completed once #1566 occurs\n. Meeting scheduled with the team to come up with initial draft. \n. MVP has been defined. The long term strategy needs additional prioritization and alignment with future product development goals. . Rough (very rough) brainstorming based on past research, workshops, and discussions. Some of these are repeats and the list needs to be consolidated and whittled down to something more manageable. The goal of these is to help define and communicate the underlying philosophy of the USWDS and to help guide the design and development of the product. \n- Streamline product development\n- Accessibility out of the box\n- Foundation for any kind of project\n- Validated by the user, for the user\n- Mobile First\n- Performance Focused\n- Showcase Success\n- Modular by design\n- Designer and Developer Friendly\n- Data backed architecture\n- Guidance, not hand holding\n- Reduce barriers to modern web\n- Support using what's available, but support those that need to extend and customize\n- Accommodate all design and developer skill levels\n- Focused on governments technical needs\n- Support for the Community (Training, workshops, tutorials)\n- Code is semantic and clean\n- Taking back \"Good enough for government work\" \n- Cross channel and responsive\n- Support for simple to complex products\nThoughts @acolter @juliaelman @shawnbot @Journerdism \n. @shawnbot That's a great point! I'll see what I can come up with when I take a stab at this again. \n. Revisions and updates will occur in the next sprint. \n. Thanks @acolter, I added that concept to the muraly board. I'm glad to see some overlap between our two ideas.\n. Initial draft created. Iteration and validation can occur in the next sprint. \n. Treejack test has been closed and we are reviewing the results. \n. @shawnbot I'd create a new task, so it's documented we performed an iteration and went to test that iteration. \n. Revised principles have been drafted and await the teams review. . Here are the new design principles. Any updates can be made prior to posting them online. \nUSWDS Design Principles\nGet help when you need it\nThe Draft U.S. Web Design Standards is a product that is here to support its users build user friendly and modern digital products. The instruction we provide designers and developers both general and customized guidance on how to use, extend, and customize the USWDS. No matter what a team\u2019s skills are, they should be able to use the USWDS. \nDesign for flexibility.\nOur patterns and designs are easy to adapt to support the diverse scope and needs of government digital services. The tools and components provided in the USWDS are focused on performance, both from a technical and team based point of view. To ensure this, everything should be validated for the user by the user. The USWDS wants to empower teams across to government to make the statement \u201cgood enough for government work\u201d means something again. \nShowcase benefits for agency and users\nTeams around the government should easily be able to find inspiration from among their peers. This inspiration can jumpstart many teams own efforts but also lay the groundwork for making the business case for adopting the Draft U.S. Web Design Standards. The success of both USWDS and its users will be cataloged both quantitatively and qualitatively. \nMake the best thing the easiest thing.\nThe Draft U.S. Web Design Standards is the easiest path for teams around the federal government to comply with the latest federal policy for websites and digital services. The USWDS support modern web development practices, such as mobile first and responsive frameworks. By offering open-source, quick-to-download code and assets, the Standards make it easy to deliver the highest-quality government websites to the public.\nOffer accessibility out of the box.\nEvery asset we offer should meet the high accessibility standards outlined in Section 508. For teams that need to customize the USWDS to meet their agency needs, guidance will be offered to ensure any extensions and customizations that are made comply with Section 508 guideline.\nReuse, reuse, reuse.\nTeams should not be burdened with recreating basic components and patterns for every new product they create. The tools, patterns, and components present in the USWDS will be a comprehensive collection of tried-and-true assets that reflect industry best practices. This will enable teams to focus on the unique aspects of their product to ensure the general public is getting the best possible service. \n. Meeting scheduled with team. \n. I think so, but something to discuss during the critique meeting for sure!\nOn Thu, Nov 17, 2016 at 11:47 AM, Will Sullivan notifications@github.com\nwrote:\n\n@bradnunnally https://github.com/bradnunnally Would the \"wins\"\ndocumentation go under \"about\" or where do you think that would be best\nplaced?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/18F/web-design-standards/issues/1564#issuecomment-261300475,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AL73GBC0242B3kWEWo3FIDwn_enuV9l5ks5q_IUngaJpZM4Kxk3q\n.\n\n\nBrad Nunnally\nExperience Design Supervisor\n18F  https://18f.gsa.gov/\n|\nGSA http://www.gsa.gov/portal/category/100000\n618-407-6490 | brad.nunnally@gsa.gov brad.nunnally@gsa.gov\n. Critique has been completed with the team and feedback collected. The outcome is that a vision of the future site will be created in the form of a wireframe to propose where WDS can go in the future and potentially take on the form of a platform rather than just a product. . Team determined the key activities for the next few months. Long term roadmap will be defined in the next sprint which will be tackled once the MVP is in place. . Using https://github.com/18F/web-design-standards/blob/staging/WHO_IS_USING_USWDS.md as main reference point. Going to cross reference with https://analytics.usa.gov/. Completed the mapping. Next step is to work with @juliaelman on pulling the data out of the analytics for sites that report to analytics.usa.gov and finding a way to automate reporting those numbers both on the site but to the team. . @aaronsnow Currently the top 10 for Q3 of 2016 is \n\nBut I love the idea of making the report something more public or at least shareable with the team. \n. Here is the documentation for the API around for pulling reports out of google analytics. More research going to occur to figure out the technical aspects of doing this. \nhttps://developers.google.com/analytics/devguides/reporting/core/v4/. Updated the mapping document and sent to @shawnbot with UA reference numbers that I could find. It's unclear how many of those UAs are actually part of the DAP program. . This is all done and included in staging on the docs site. . This was re-scoped and will be tackled as part of the automation work when it comes to analytics and usage report out. . @shawnbot That's basically what we are doing now by looking at the report and updating the numbers manually via the markdown file. My gut (knowing none of the technical stuff) would thing parsing that from a CSV file and updating the markdown file in an automated way sounds precarious. \nWhat are some of the concerns/constraints around using the API? . Probably best to keep this in the backlog until we revisit the whole analytics work effort. That was reprioritized in our last meeting right? ( @yowill is that right? )\nHowever, if we get to the point where we've got some spare hours I'd love to see if we could get @lauraponce working on this again. . I've reviewed the content and it looks good. . Some rationale\n\nCreate pitch materials - slides, tear sheets, one pagers, emails, web site call to actions\nProject Types\nPricing Plans\nProject Plans & Staffing\nIdentify Potential Leads & Outreach\nDefine consolidated roadmap\nCreate Q2 backlog and development plan. My flight is booked and I booked the Airbnb. . Moving this to the next milestone. Tasks outside of the project demanded more time than expected and I wasn't able to take up this task. . My plan here is for a revised homepage, a service offerings page, and the landing page for the patterns. Any thoughts or suggestions on if another page type should take priority?. Wireframes drafted and posted - https://gsa.invisionapp.com/share/JC9T2H47H\n\nNext steps should include:\n\nTeam providing feedback directly on Invision\n@lauraponce updating based on the feedback where it makes sense\nDetermine the plan for when other pages types should be wireframed out. \n\ncc @juliaelman @shawnbot @Journerdism @acolter . Going to start thinking through this today and work with @acolter early next week to refine the strategy to meet our future needs. . Discussed an updated outline with @acolter. I'll be updating the new strategy and moving it to the docs repo. The high level outline includes:\n\nSign up for research participation methods\nStandards interviews with federal digital services teams\nAnalytic usage report outs\nInvestigate usability testing as a service\nInvestigate setting up DAP integration as a service\nHost \"demo\" days where teams can learn about WDS and share what they've done\nBi-annual \"listening\" tours to have semi-casual interviews with teams on site. I've posted the initial draft of about 75% of the content onto a branch of the docs repo. \n\nhttps://github.com/18F/web-design-standards-docs/blob/update-research-strategy/pages/about-our-work/research-strategy.md\n@acolter feel free to take a look and comment. . Pull request created to merge the research strategy into the docs repo and to appear on the main site. . After looking at the potential tasks that this might include, the flows would be very simple since there is only one main action on the site currently and that's download. I'll make an issue to finish mapping that out with @juliaelman but any other flows will wait until the site/product has more to offer. . PR to staging created and merged. It'll be included in the next release. . Going to start sketching this out today and work with the team early next week to get feedback and refine. . Discussed the value of this work with @juliaelman this morning, and given the simple flow that this is currently on the site doing a flow at this time doesn't help the team or inform any of our work. In the future, if the download/install flow is more complex with additional options it would make more sense, but for now I'm moving on to more important tasks. \ncc @shawnbot . MVP has been created on add-analytics branch of the docs repo. \nhttps://github.com/18F/web-design-standards-docs/blob/add-analytics/pages/about-our-work/overview.md\n. This information has been submitted in a PR to put on the main site. Next steps is to find a way to automate the data report out in some way, which can be tackled next quarter. . This is completed and has been merged in the latest release. . Going to base this off a presentation I gave previously and iterate based on team feedback. First step is to create the outline then get feedback. Once that's complete, a draft presentation will be created. . I'm going to start with the summary that @carodew and @colinpmacarthur wrote up from a past conference and update based on where the project is today. . Initial draft of two proposals up for team review. . These are ready for Outreach review. @yowill do you want to handle that or would like me to?. @elainekamlley is going to review the two proposals - https://docs.google.com/document/d/1vGTAeGAcQgKE1CdiOn9P2qNfwRCgcdY-bpeE8xOuUX4/edit#\nOnce reviewed, I will reach out to the two conferences listed above ( @elainekamlley do we have any formal connections with either of those events?) to see about presenting at their event. . @elainekamlley Sounds great! and Thanks @gboone !!. Proposals sent to the above conferences. Closing the issue out. . We can remove the release notes guidelines and checklist and the release process pages in the wiki.. Content inventory is complete, will need some review and conversation with the team to ensure the accuracy of the audit and the recommended action. This is an initial draft, final draft will be once the team reviews and discusses. \nhttps://docs.google.com/spreadsheets/d/1PsZhPKdJhZOI1mdAhMNQf3ZAfFV0js8AJDjLGD3by-w/edit#gid=0. The team met to review the content audit and the following next steps were defined:\n\n\nDraft up a Content Editorial Process which will inform how the content on the main website will be maintained and how quick edits can be performed without breaking anything from the code base. \n\n\nRevise the site structure of the main website to find appropriate homes for the content that is moving to the site from the wiki \n\n\nCreate the issues that map to each action that is present in the content audit. \n\n\nIssues for these 3 steps will be created for the product backlog. . @yowill looks good!. This link is going to live on the What's New comp which can be found -  https://gsa.invisionapp.com/share/FBAA2B78N#/217092077_1-0_-_What-s_New. Should this be closed since it's part of the new issues we created from the monster issue. \n@yowill @juliaelman ?. This will be accomplished once #114 in the docs repo is complete. Closing this for now. . New splash page concept - https://gsa.invisionapp.com/share/FBAA2B78N#/217289279_1-0_-_Homepage\nThanks to @juliaelman for helping me scale this back and not over think it too much. Ready for review @yowill @shawnbot . update draft is posted here - https://drive.google.com/open?id=0B7qPjLYzv4b6a1FPUEdXbjFFa0k\nThe big todos is content review and edits. . Updated link to the presentation - https://docs.google.com/presentation/d/1VC5rXAfrczZMqkiIQhNj1gnbkG1hMR2qbL-4AsE0Xm4/edit#slide=id.p30. My goal with this is to start with a revised sitemap, to figure out exactly what needs to be promoted to the main nav and what should live under getting started. This will be quick. \nFrom there get the teams \ud83d\udc4d  or \ud83d\udc4e  . Here are is the outside for the two pages that would need to be revisited as part of this story (which will need to be broken up to track the work appropriately)\nNote: SN is short for it being present in the side navigation component. \nGetting Started\n - Intro\n - (SN) Wiki Call to Action (Phase 1 is linking to the wiki here on Github, Phase 2 can be looking for ways to pull that content into the site directly to avoid duplication)\n - (SN) Video Tutorials \n - (SN) Code Guidelines\n - (SN) Product Roadmap\nWhat's New\n - Usage Info\n - (SN) Blog\n - (SN) Release Notes\n - (SN) User Research\n    - Current Research\n    - Research Strategy\nThoughts on this outline for each page? @yowill @juliaelman @shawnbot?\nNext step is to break this up into 3-4 different stories. \n. Initial take of the What's New page that includes the updated nav bar and footer - https://gsa.invisionapp.com/share/FBAA2B78N\nPlease comment directly on the Invision comp. @juliaelman @shawnbot @yowill . Updated Getting started page - https://gsa.invisionapp.com/share/FBAA2B78N#/217421484_1-0_-_Getting_Started\nReady for review @juliaelman @shawnbot @yowill . Closing this issue has it's been broken into a bunch of smaller more manageable tasks. . Updated footer has been included in the wireframe I'm working on for #1683 . @juliaelman I'll close it after the pages are taken down and properly archived. . Blog post draft, mostly just the bullet points and placeholder text. https://docs.google.com/document/d/120pSykH4tnyQvu6eUNKPRFBXRtF6yM3Tnf0MWvXp15I/edit. @juliaelman @shawnbot @yowill The blog draft is ready for review - https://docs.google.com/document/d/120pSykH4tnyQvu6eUNKPRFBXRtF6yM3Tnf0MWvXp15I/edit. Ready for review @shawnbot @juliaelman . General outline and high level flow I wrote yesterday. Sorry for taking so long to post here for review. \nWds Website Editorial Workflow\nAny member of the team should be empowered to make small updates to the content of the main website without having to wait for a new release to be created. The changes that should still go through the normal release process deal with major content changes to the site, structural changes to the site itself, and new content that is being added to the site. \n1 - Flag content that needs to be updated as an issue on github\n2 - Create branch to create the change\n3 - Make the content update and flag another team member for review. \n4 - Once content change has been approved, create a pull request that merges the created branch with Master. \nThoughts @juliaelman @shawnbot @yowill . I've placed this guidance on the docs repo wiki - https://github.com/18F/web-design-standards-docs/wiki/Content-Editing-Workflow\nIt's ready for review. . @juliaelman Can you take another look today? If the updates look good, I'll incorporate them into the contributing.md file for cross reference.. @yowill Can you provide some guidance? I recall this issue came about from a problem that you saw or foresaw happening. . Closing this issue as our existing process already accounts for this. . @juliaelman It is not. We should flag it for the next sprint though along with other future website stuff we've been chatting about lately. . Put the initial draft together and I'm going to validate it against the content audit I performed a few sprints ago. Final draft should be ready for team review early next week. . Proposed revised sitemap draft. Will require a review by the team and then revision based on feedback. \n\n. Final revision is posted here based on feedback and collaboration with the team - https://gsa.invisionapp.com/share/35BB46989#/229329785_Sitemap\n. Initial wireframe comp created. Requires a team review (will do at the next stand up) before putting the done stamp on it. \nhttps://gsa.invisionapp.com/share/FBAA2B78N#/219059320_1-0_-_Video_Tutorial. Is this close-able since these are on the calendar and we've been doing them?. Draft letter here - https://docs.google.com/document/d/1W_Wu99YPZDIFG96wtCkLu3UiAnL6fbAaP2kl1bbZ9bc/edit\nReady for review @yowill @shawnbot @juliaelman . @yowill Can the message we sent to the UX COP work for this list serv? I'm not a member so I wouldn't be able to post to it. . Reviewed the designs with the team and made the recommended update to the page. The final design for the update listing and the content page for updates are:\nListing page - https://gsa.invisionapp.com/d/main#/console/10194661/222392364/preview\nContent page - https://gsa.invisionapp.com/d/main#/console/10194661/222392363/preview. @mariamarrero Ohh interesting!! That's a great data point banner. \nI'd like to run your proposed copy past a few folks that brought up the original issue with our copy to get their thoughts. I'll be reaching out to them today. . It's pretty uncommon interaction behavior to have main navigation drop down items act as anchor links. The expected behavior is often to go to another page. \nWas a side navigation considered? The implementation that Bootstrap used for their side nav and anchor links is a pattern I've seen for pages like this. http://getbootstrap.com/components/. This is a really creative solution to the problem. I recall that the reason why the OnClick behavior is present on the mega menu is for accessibility and mobile issues that pop up when using OnHover. \nThe one thing I'd be interested in testing with users is the visual weight of the proposed button/link. However, this solution makes sense (and is akin to stuff i've tried in the past with other mega menus) and is something we should try to incorporate as an alternative implementation of the mega menu. \n@mariamarrero @juliaelman . Initial focus areas look to be around the following:\nPartnerships\nAnalytics\nGrowing Pattern Library\nAdvanced WDS Use\nFuture of WDS\nChecking with the team to see if this makes sense for us to pursue and if there might be anything else missing. . Initial draft of the one page brief for our product sponsors is here - https://docs.google.com/document/d/1l5layPgjYP200z8VQbF4OQHIEy8OlnAuoUJJLosr_S8/edit#\n. Over the last year, Illustrator and Sketch have been the predominate in the types of sticker sheets that are downloaded. \n\nSince Omnigraffle has only been downloaded 335 times directly from the website. This sticker sheet might need to be retired. I'm going to continue my analysis though. . Only about 4-5% (VERY rough estimate based on web analytics) of the federal workforce is on a Mac. This is an important metric because Sketch is a Mac only application. . Based on the review of analytics and looking at the use of Macs around the government, my suggestion is that we continue to make Illustrator our primary means of providing a sticker sheet with Sketch being secondary. \nWe should retire the Omnigraffle file and open it up to be maintained by the community rather than by the core team. \nI'll bring this up in the stand up tomorrow for final discussion. . PR created to move the Omnigraffle file to a retired design file section. https://github.com/18F/web-design-standards-docs/pull/216. Flagging this to be discussed at the stand up today. Is the content for this ready yet? While we can determine where it should live in the current site, doing any design work on the page without the content in at least a draft stage will not be possible. . Meet with the Web Performance team yesterday and along with @shawnbot we determine that going through the effort of creating design comps for this is not necessary as we already have established page templates for the content that's being produced. \nThe big lift here is to determine where it lives on the site for now. Two options were discussed:\n\nMake it part of UI Components as an introductory to the whole section. \nMake it part of Getting Started, to help guide people from the beginning that Web Performance should be a focus for them. \n\nThe second option is stronger, has it is presented to users from the beginning of their \"journey\" with the Standards. \n@yowill @shawnbot . @yowill I think that's a great idea. Lets create another issue for making that update to design principles. \nThe rest of this can be closed out, and picked up when the development tasks is pulled in from our backlog and I can collaborate with @shawnbot to get it slotted in the right spot. . I think that's a great suggestion @bruffridge, especially for Instagram. I'd be hesitant to suggest Flickr since the future of that platform is unknown but I know a lot of agencies have a pretty deep library that's hosted there. . @bruffridge I'm not aware of original source of those icons, but h/t to @juliaelman for pointing out Instagrams branding assets which includes an icon we/you can use for the footer - https://en.instagram-brand.com/assets. The draft is 75% of the way done and located here - https://github.com/18F/web-design-standards/wiki/research-plan-spring-2017.\nGoing to close this issue and create a new one to finalize this once the research effort has been approved. . ^ @donjo \nThanks @sawyerh that's fantastic that ya'll are building out a design system. I'm pinging John, as he is the new design lead for the WDS. Hopefully you two get a chance to connect.. Pulling this back into the backlog and remove it from the sprint. Going to bring it back one the research effort has been approved. . There was already an issue for this - https://github.com/18F/web-design-standards-docs/issues/211. The PR for this is located - https://github.com/18F/web-design-standards-docs/pull/251. Hopefully scheduling a meeting with them for early next week. . Interview scheduled for Tuesday at 1 PM EST. . Interview note file is - https://docs.google.com/document/d/1K_psBk5xSN3yeDugchqUTAuVZKvoydRn6bOpcfNnNN8/edit#. @yowill Is this meant to be the job.usa team or something else?. No this one did not.\nOn Mon, May 22, 2017 at 12:37 PM Will Sullivan notifications@github.com\nwrote:\n\n@bradnunnally https://github.com/bradnunnally Did this ever get\nstarted/interviewed?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/18F/web-design-standards/issues/1842#issuecomment-303169081,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AL73GDIRCfPw932-0DnAb5kQb3-_qLQGks5r8cfMgaJpZM4M6Msr\n.\n-- \nBrad Nunnally\n\nExperience Design Supervisor\n18F  https://18f.gsa.gov/\n|\nGSA http://www.gsa.gov/portal/category/100000\n618-407-6490 | brad.nunnally@gsa.gov brad.nunnally@gsa.gov\n. Awaiting response. . I'm going to give the USAJobs team until next week to respond, then I'll move this out of the sprint since that's a blocker for it being completed. . Followed up about trying to get this done this week. . Pulling this into the next sprint as we haven't heard back from the USAjobs team yet. . Pull request here - https://github.com/18F/web-design-standards-docs/pull/280. Here is the first step solution of removing code from the Docs site and linking people over to the Fractal site. \nFuture research and design will need to be done to see how Fractal can be more integrated into the site so people aren't having to go offsite. \n\n. @shawnbot For this first pass, I assumed (potentially incorrectly) that the bordered area would be a screenshot of the component. Mostly because we will have some components that won't fit in that area if it's a live preview no? E.g. Header and Footer. \nAs far as the content goes, I'm not sure. Since the glossary specifically is the first component I've done for the WDS, I'm not sure how the content for the other components was developed. . Will we need Issue templates for the different types of issues we're looking to track/have? The way this one is currently written seems to be more for a bug. What would an issue for a new component or enhancement look like? \n. That makes sense to me. \n. ",
    "donjo": "Closing this one out since it appears to have been fixed at some point.. Version 1.4 came with a number of footer spacing adjustments which can be seen in action here so this issue may no longer be relevant. If there are additional concerns, feel free to re-open or open a fresh issue. . These search bars are more responsive now which I believe resolves some of the issues. Also a greater min-width may have been added at some point because I was able to see the entire text and then some with a 900px wide window.  . @mollieru Hey Mollie! A few of us are starting to take a look at building some HTML templates that folks can use with the standards and I came across this issue. Do you have any research or other resources that inspired some of the directions shown above that we should take into consideration? \n. Closing this issue since the name form template is just an example and at the end of the day developers using the standards will have to adjust the fields they are asking for based on the data store their form is connecting to. In the guidance section of the name form template we now provide the following guidance to let folks know that there are exceptions to the rule:\n```\nWhen to consider something else\nIf you don\u2019t need to parse out the separate pieces of a person\u2019s name, consider letting them enter it into a single text field.\n``. Closing this out since the new layout has been implemented!\n. I think I prefer the.usa-lineclass method over the.usa-content hrstyle, at least initially, since I don't think we've been very explicit about what happens to things inside.usa-content` and it's kind of a class you discover once you start copying template code and wondering where paragraphs got their margins. \nMaybe create the standalone class rule first and then think about whether there are any other things that should be brought under the .usa-content scope and no longer be globally defined (or have different definitions when they are part of a content block) and add a default hr rule at that time. . This exists now at least in a basic form as the Hero component https://components.standards.usa.gov/components/detail/hero.html. The outline buttons have been updated in v1.4 so you can check out the current styles here under the \"Secondary\" and \"Secondary Inverse\" styles. . This particular issue was addressed here by @line47.\nThe color page will need to be reworked to account for the new color variable naming that happened in 1.4 but for now we are at least showcasing usable color variables on the page. . For now the standards do not have color utility classes that can be appended to elements but we do provide some guidance on how to override the standards css here and in 1.4 all color variables in _variables.scss were given descriptive names (like $color-aqua-dark instead of just $color-secondary-dark) so you could override .usa-label's background color with any color variable you'd like. . Closing this issue since the architecture of the project has changed and the documentation site exists as its own repo at 18F/web-design-standards-docs with its own stylesheet. . Closing this out for now since it looks like the associated PRs were closed. However, utility classes and/or mixins to add color may be on our radar in the future and we'll reference the previous discussions when we come to it. . Looks like we've decided to keep these around on the docs site for now. Closing unless this still seems necessary. . Tested on a Nexus 5 in Chrome and it worked for me \ud83d\udc4d \n. Closing this out for now as it's beyond the current scope of the standards. Will re-open if we ever look into providing more guidance around information collection. . Closing this out since contributing.md has since had a number of updates and this may no longer apply. Feel free to open up a new issue (or re-open this) if there are still any pieces of the documentation that could use extra clarification. . \ud83d\udc4d \n. I dig option 4!\n. Posting this example of how Gov.uk does page templates that @ericadeahl sent over for future reference/inspiration.\nhttp://govuk-prototype-kit.herokuapp.com/examples/\n. I spent some time cataloging the ways that some of our existing users utilize the standards (starting with those listed in the wiki) and noted a few things:\n- The colors, grids, and buttons were some of the most widely used components.\n- Most users used the actual WDS CSS when using a component from the standards (as opposed to copying the visual styles into their own code) \n- Javascript components are underutilized at this time\n- WDS fonts are very popular though not always utilized to the best of their ability\n- The WDS are most often used on single or multi-page content-heavy information/marketing sites\nI'm not going to spend too much time speculating on the \"why\" behind these observations right now since the standards are still young and we don't have visibility into internal app usage but I think it provides a little bit of background for our upcoming research and just looking at 20-30 sites using the standards gave me some ideas about how we can increase quality across the board through better documentation/examples (including themes/templates).\n. Re: #2 on the list of things to do. I spent some time looking at the theme/template sites for other popular front end frameworks to see what style of sites are rising to the top in popularity. While we tend to serve a slightly different user base, I think there are a lot of parallels. \nSome things to look at:\n- WrapBootstrap (https://wrapbootstrap.com/) - third-party bootstrap theme site\n- Bootstrap Themes (http://themes.getbootstrap.com/collections/all) - first-party themes offered by the bootstrap team\n- Foundation Templates (http://foundation.zurb.com/templates.html) - a handful of layout options for Foundation users\n  - Foundation Building Blocks: (http://zurb.com/building-blocks) something that exists somewhere between components offered by the front end framework and full-fledged templates\n- Pure (http://purecss.io/layouts/) - a handful of layout options for PureCSS\nSaaS sales pages, company/agency landing pages, analytics dashboards, web apps, and blogs tend to be the most popular options across these sites. \nBased on what I've seen after looking at all the existing sites utilizing the standards, I think building a documentation layout (not unlike the site the standards themselves are on) and a single-page information site (used for providing details on a new program/event or advertising a small government team) could be some easy wins early on while the standards are still maturing. \n. Closing this out for now since we're going to stick with the current name for Labels but we'll be sure to reference this post if other users seem to be encountering the same thing. . Closing this for now. Feel free to open with additional information on what you're trying to achieve and we'll take a look. . Closing this out for now since we've added a few things to enhance the dev experience around using our USWDS with other systems. There is the customization and themeing section and also the new /examples directory in the main project. Closing this out for now since the project has moved organizations and this subtask may turn into a separate effort with its own set of issues. . @jameshupp They will be rendered from HTML in a demo page, similar to how the headers documentation works currently. \n. @ericadeahl I like the two proposed changes, though I'm not sure how I feel about the collapse button at the bottom. If the entire top bar were a touch target (as opposed to just the hyperlink) could that work? Or some combination of the two with a lighter bottom-border and 1.5rem margin instead of 2rem? \n\n(Note: that's a random light grey I chose via color picker, I didn't consult the style guide for something we should actually implement) \n. Oh, a thing I missed earlier when vertical aligning was that the down arrow needs to be aligned to match the text now that the text moved.\n.usa-banner-button[aria-expanded=false]:after {\n   vertical-align: middle;\n}\n. Tagging @toolness for guidance on where to put this documentation . Looks good to me. \ud83d\udc4d \n. One thing I didn't notice til I pulled down the code and looked at it was how the text inside the \"here's how you know\" is pushed up a little bit relative to the non-linked text to it's left because the <p> has vertical-align and the button/span doesn't.\nAdditionally, it could use a little space between \"And official website of the US gov\" and \"Here's how you know\". About 3px worth looked right to me.\n\n. I believe this was all looked at in #2002 so closing this out. re-open if I misinterpreted something. . Closing this out since a lot of things have changed since then but will reference when we take another look at the docs site IA. . Hey @davidstenger do you happen to remember which search fields didn't have the search role applied? I just combed through the search examples I could find and they seemed to have <div role=\"search\"> applied. It's possible that this had been fixed at some point without referencing this issue but just checking to make sure.\n. This was addressed via #2112 and the new focus state is a grey dotted line that should be a bit easier to see against the blue menu button. There is also a focus-outline variable in _variables.scss that can be modified to fit different background styles. . @shawnbot yep. contributing.md has been updated since this was created, closing for now but feel free to open if there is a specific part the doc isn't addressing. . We've since adopted the following official stance on browser support so going to close this one out. . Going to merge this in and document in #2008.\nThanks! . FWIW the point @shawnbot brings up is basically the conclusion we came to when looking at how/if we should present the Password Reset Form. Instead of going down the rabbit hole of ever-changing best practices for password creation, the Standards are better suited to provide the styles for where the guidance/validation in the component should go but not pretend to be the authority for what they currently are or should be for your agency. In future versions of the documentation the text will be more clearly placeholder and we'll link to the appropriate places you can go to learn what your password reset guidance should actually look like. . Closing this out since spring 2017 has come and gone. will establish a new issue for any future research trips/plans. I think your breakdown of the 3 main visual styles makes sense. I have some comments on suggested CSS changes based on how this is broken down so should we save that for another thread or are they still relevant here? \nOne example would be how the overall height of the navbar is set through a mix of heigh on usa-navbar and padding-top on usa-nav both of which are applied to different elements and have to stay in sync. \n\u2764\ufe0f the header preview page! . The last row of buttons in the examples relies on button_wrapper-dark to be visible on a white background. Is there a way to bring that into here? \n\n. Nitpicking here but do you know what is adding the random returns and spaces in a lot of the code samples? Here's an example from the Labels component but I saw it a few other places (Hero, Tables, etc)\n\n. Case study has been written and sent to the USAJOBS team for review . https://docs.google.com/document/d/11yrCDZaE0EUhFsWoPB7jZwjYXRjt8fLz30-Mdw5cZfY/edit?ts=591f537b draft here. will create new task for publishing/approval\n. Hi @njohnson I tried to replicate this this morning and was only able to do so when I had javascript disabled in the browser. Do you happen to know if javascript had been disabled on the machines you were testing on? Knowing that some agencies disable javascript in means we'll definitely want to figure out a way to address this but I just want to see if I've re-created the correct scenario. . Hey Nancy,\nSo I was able to reproduce this today in Firefox on a Windows 7 machine but it seems to be working for me when I view the development version of our site. I can't figure out what changed between the current version and the update we plan to release at the end of the week that could have affected this but I may ask you to give it another shot in a few days to see if you're still seeing the problem.. Thanks for catching this!. Unclear which list this refers to so I'm going to close it out in favor of a more specific issue if one presents itself in the future. . Hey @tiffanybbrown-va it looks like the span-columns for 3/4th is set to 6 and then 3 for 1/4th at the medium viewport so it makes sense that those are the compiled percentages. However, I don't know much about the history on how we arrived at those numbers.\n@shawnbot any idea how those break points came to be and if there is anything in Neat 2.0.0 that we should be paying attention to? . @shawnbot thanks! fixed. Fixed in #1953 . Case study has been drafted and is now out for review. Interview itself is done, writing up Q&A and will start a new issue for tracking that. \nTalked this over with @AndreaSigz and we're going with this for now and will revisit things like the hero image and overall structure of the page in a later release. . Would using iframes with a -transform: scale(0.5) be a valid approach? I've never tried that before but if it works that could be a way to handle component preview embeds on full page stuff like the header. . @EricSchles I'm not seeing an example of your latest screenshot on the permit finder URL you included above. Does it need a fresh deploy? . @shawnbot I think the directory should probably have a brief readme that says how to use the examples. I tried my best to put on my beginner's mind hat and came out with a few questions that a readme in the example directory could probably answer. I don't know how much we want to assume about js/sass knowledge but I'd probably lean towards \"this is my first project getting third party code from a package manager\" as the assumed experience level. \nOpen questions/comments/suggestions: \n- What do I do with these examples? do I copy them? create them in the root of my project? \n- Where do I run npm install? Does it matter which directory I'm in? \n- What else goes in main.js? (maybe some commented out examples? suggesting structure for including custom JS you write?) \n- A short explainer on how package.json works, specifically the versioning component. \n . It's also possible that a more involved how-to could be part of a training we develop or instructional content we generate while doing work for an agency partner. So maybe these READMEs don't need to be more detailed than they already are.. @shawnbot yep. There is another issue related to changing the text width var from rem to ch but I think we can make and test that decision separately. @shawnbot added some previews for lists within usa-content on the Kitchen Sink page. \nNot sure if there are any other cases (beyond accordions) I'm not thinking of where a list would exist inside the class for paragraph text. If there are, maybe there is a better approach than adding 2 more exceptions to that rule.  . fixed in #1971 . Fixed in #2002 . @sawyerh thanks for catching this! Could you change the link href to href=\"javascript:void(0);\" as that's the pattern we're trying to use for blank links across the standards site? . @kyle-jennings Thanks Kyle, I looked at the source in _grid.scss and it looks like it generated the right thing based on the rules but I'm not sure the rules are correct. Like should one-fourth span more columns than one-third? I'll try to figure out the history around these decisions.\n```css\n@include media($medium) {\n  .usa-width-one-whole {\n    @include span-columns(6);\n  }\n.usa-width-one-half {\n    @include span-columns(3);\n  }\n.usa-width-one-third {\n    @include span-columns(2);\n  }\n.usa-width-two-thirds {\n    @include span-columns(4);\n  }\n.usa-width-one-fourth {\n    @include span-columns(3);\n&:nth-child(2n) {\n  margin-right: 0;\n}\n\n}\n.usa-width-three-fourths {\n    @include span-columns(6);\n  }\n```. Update: releasing production fractal as a subdirectory of standards.usa.gov may not be possible for both technical federalist reasons and the rules of our ATO. Looking into the possibility of serving this content over a URL like standards-components.usa.gov. Will be good to go once 18f/dns#122 is merged.. Published!. I think it probably should. At the very least let's start with adding a few example grid combinations to Fractal. . @AndreaSigz not yet, it will be included in the next docs site release which we plan to do on Monday. You can check it out on the federalist build of the dev site here. Ahh sorry I should have updated the issue. I had reached out to @davidstenger on slack and he provided further clarification. The example given in the original issue was an example of an area that needed to be changed not the correct way to do it. \nHere's what he had to say:\n\nNo problem at all. Looks like the role=\u201csearch\u201d has been added but in the wrong spot. It should come before the <form> example: \n<div role=\u201csearch\u201d>\n  <form method=\u201cget\u201d class=\u201csearch-form\u201d action=\u201chttps://www.search.com\u201c>\n    <label>\n        <span class=\u201cscreen-reader-text\u201d>Search for:</span>\n        <input type=\u201csearch\u201d class=\u201cform-control\u201d placeholder=\u201cSearch\u2026\u201d value=\u201c\u201d name=\u201cs\u201d title=\u201cSearch for:\u201c>\n    </label>\n    <input type=\u201csubmit\u201d class=\u201cbtn btn-primary\u201d value=\u201cSearch\u201d>\n    <!-- debug: searchform.php -->\n  </form>\n</div>\n. @paultag they seem to be working for me too. I'd try clearing the cache as suggested but if that doesn't work, let us know what browser + operating system you're using and check to make sure your browser isn't blocking javascript resources. . @IanLee1521 thanks!. done. https://docs.google.com/document/d/1Y8aXG21RI_wulhzthnTytcChwIZDhofpNEv_N5h25to/edit. Closing this out since there are no active research projects at this time. . Reminding myself to do this as part of #2008 . going to approve and merge this since it fixes the issue and the small things I was talking about will get addressed in @rtwell design audit. We'll make sure to drop some instructions in the release notes but it should be as simple as copy/pasting some HTML from https://components.standards.usa.gov (will link to the more specific page) into the appropriate part of their app. . @toolness Yeah let's see what we decide about what kind of code samples should exist on the docs site (and where the one true source of code is) before opening that back up. . I like this proposal. Would this go into effect with 2.0 or something that we'd start immediately? Like could we tell users in the future \"if you need support for IE9, use USWDS 1.3.1 or earlier\". yep! closing out. fixed via #2118 . fixed via #2115 and #2116 . fixed via #2116 . fixed via #2115 . @konklone started an issue for updating it on the standards site. \n\nhttps://github.com/18F/web-design-standards-docs/issues/374. I think the margin-bottom on the slim version is too large. There is a padding-top: .5rem; and bottom should be the same amount. Also, should it be padding on both top and bottom or is there a reason to have one side being positioned by margins and the other padding? . Spacing looks good, I'll merge in but note that I think we should figure out some kind of visual design rules for a global focus style (and whether it should match the new buttons in any way). done!. wait, not done. thinking of the wrong thing. Looks great \ud83d\udc4d \n. @atul sounds good . @wslack do you need this open anymore or did you finish testing? re-open if necessary.. @wslack yeah I'm not sure what exactly was going on but I restarted some builds and everything has been building fine going forward.. @msecret \n\nThis is the screenshot I meant to attach for that one. I don't think we ever had this style in the past and it was something new that @rtwell added.\n. I think for this one the idea was to increase the default horizontal padding a bit more on the big button to better differentiate the look and feel from the default buttons. It could probably go from 3rem to 5rem or whatever you think feels right. . I don't have a mock for this but the idea was to bump the focus outline out by about a pixel on these. The default works well for square things but for something circular like the focus button it creates a square that goes right up against the edge of the radio button circle. It's not a huge deal if the mysteries of CSS make this difficult to achieve but a bit of space between the element and the outline could make it more noticeable. . @toolness if I recall the discussions @rtwell and I had when we were doing this originally, those button types should all have the same disabled button style (the solid light gray) as the primary button so they'll need whatever css changes are necessary to make that style show up for those button types . @toolness for that one I think we decided just using a fully solid grey disabled button with black text (even though all the others are outline). Still seeing the issue here with this fix. Any other ideas on what may have changed in the release? . On the fractal site. I saw your mention of that on Slack but just repeating it here for historical record. . Ok, I pushed some changes up to @msecret's branch and this should be working now.  . @maya to answer the first question, the change to the megamenu width was deliberate and I confirmed with @msecret and @rtwell. Sorry for not giving you all the info you needed to QA on that.\nSecond, I'm not seeing the problems you're seeing with the mobile nav. Maybe things are being cached? I was having problems with that yesterday but a hard refresh fixed it. The screenshots did, however, let me know that the spacing was off between the top item in the list and the submenu list items so I pushed up a fix for that. . closing this out since the work has moved to #2161 . One more visual design thing I didn't notice the first time through but ideally the bottom highlight under an active link should go from the edge of the word to the edge of the downward arrow.  Example below: \n\n. I checked with Ryan this morning and they are ok to still have the grey hover states (the old way) so any change to how it is now must have been unintentional \ud83d\udc4d \n. I'm up for removing them if it makes things easier and a bit less intimidating. One thing to note is that the CI doesn't build on PRs from folks outside the organization so maybe that's why they were put there in the first place (see this PR for an example).. My guess is that it was in _base because it's applying to input fields, buttons, nav items, etc. so I'm not sure if _typography is the place for it (though makes sense for the a:focus rule). I'm not sure _base is the most descriptive or expected place to find the rule but I'm not sure there is a better one for that. . @maya I like that idea!. Not currently. For the docs site to be using the code sample from fractal _includes/code/components/grids.html will need to have its contents replaced with \n{% fractal_component grid %}\nI believe the blocker was trying to come up with a better way to contain the styles so the grid example would look like it does on designsystem.digital.gov instead of the way it looks on components.designsystem.digital.gov\n. Yeah, though there are a few other pieces too. The docs site has some custom CSS that's serving the same role as the styles in <style scoped> so just references the fractal code directly creates something that's a little off. That would need to be cleaned up a bit.\n\nOne of the ways we talked about doing this in the past was to put a wrapper class around fractal examples so you could clearly write custom styles that only affect the output of sample code (something like .fractal_example > .usa-grid > * > *)\n. It looks like the hero image button was using font size override and the usa-big-button class was being applied just to add the vertical padding. Since the button more closely resembles a standard button I decided to take the class off and add the padding to the .usa-button style.\nAnother alternative would be to just use the usa-button class with no customizations but it would be making the font larger and the vertical padding less and no longer look like the old version. . I agree, I like the 8px and 3rem padding one more so I swapped in that change. . @thisisdano ready for re-review. I ended up making the hero changes too. . @thisisdano sounds good. done!. @maya you're right. Upon further inspection, the actual footer component doesn't need this adjustment because the components inside the footer have their own padding (adding to the footer's padding) so this style should be an override for the custom footer the docs site uses. I'll close this in favor of a docs site issue. . I updated the template to reflect the way our docs repo deploy flow plays out these days. Closing this one out. Good job everyone \ud83d\udc4d \ud83c\udf89 . Well the original one was written in a time when it was assumed 2.0 was going to be the next release (not only the next major release) so the present tense made a bit more sense then. However, since 2.0 isn't quite as imminent as once presumed, I think we could re-write the paragraph to be more clear. I'm thinking something like:\n\nWe've designed the Standards to support older and newer browsers through progressive enhancement. The current major version of the standards, 1.x.x, was designed to support the newest versions of Chrome, Firefox, Safari, and Internet Explorer 9 and up. Upon the next major release, 2.0.0, the Standards will begin following the 2% rule where any browser above 2% usage as observed by analytics.usa.gov will retain official support. This currently means future versions of the Standards will support the newest versions of Chrome, Firefox, Safari, and Internet Explorer 11 and up. . Looks like it is a dev dependency because it is still being used in our tests (see #1351) even though it is no longer required for UI components. That said, we should probably bump the version in the near term and consider whether we want to re-write those tests in the long term. . Some examples/observations of how other design systems are documenting their utilities\n\nhttps://app.mural.ly/t/gsa6/m/gsa6/1513615127144/7358927e99c25e4332ff569e496bb522aec81e16. After reviewing the utility class documentation examples we are going to schedule a sketching session to decide how we can implement some of the best ideas here with any ideas of our own. . Thanks for sending this in. I just took a look and it seems like IE isn't falling back to the PNG option for the dropdown icon like it should. I'll look into some possible solutions. . @maya Yep!. Are you seeing this locally? I'm able to replicate the problem on components.standards.usa.gov but not on my local install of the develop branch. . Hmm I started to see it locally too but at unpredictable intervals. I noticed I couldn't replicate it in any other browsers so I figured there may be a browser extension causing problems. I uninstalled the aXe extension and it seems like the problem is gone. Did you have that installed? And if so, when you uninstall it does the problem go away? . @toolness is this the timeout you're talking about? looks like it is already set to 20s but is only using 2s as the actual timeout (is that a global default of some sort?) https://github.com/18F/web-design-standards/commit/71a7701a75a9e4f4a50ea3a6e7c29f4208cec943 . Update from @jseppi in Slack: seems to be a memory issue as memory usage jumps up to 1.2G during npm install --dev and container size on Federalist was set to 1G. Going to close this one out for now and create a new issue to look into slimming down that package list. . Currently have a support ticket with CodeClimate to figure things out with the badge. Will put out a patch release tomorrow to release some small fixes and update README changes (which propagate to NPM) to see if the NPM project link is updated.. CodeClimate badge working now (I forgot to add the new API key to the environment variables list in CircleCI) . With the latest update deployed I can confirm that NPM was updated too. . Hey @scottkellum, got a chance to look at this a bit more thoroughly today and offer some general UX/design feedback. I'll mention ahead of time that a lot of this is based on things I learned in working on a mini discovery project with census (github.com/18F/uswds-data) where we were trying to establish the baseline of some data design guidelines. That said here are some suggestions and I'm curious to hear what you think. \nAdd titles and source placeholder text\n- One thing the Census team kept driving home was the importance of linking to data sources. While it won't be necessary 100% of the time, it could be useful to include a placeholder here to nudge users into including a link to the raw data if they have it. As for titles, looks like @maya already has that covered. To go with that I'd suggest moving the chart keys to below the chart\nSeparate njk for line chart\n- Would be helpful for folks looking at the component library to see there are multiple options without having to read the comments. \nAdjust font size on label\n- May just be a personal preference but the labels seem a bit large and overpowering. What do you think about going from 4.25px to 4px in \n.usa-chart-gridLabel {\n+  text-anchor: middle;\n+  font-size: calc(4.25px - .25vw);\n} \nI think that's all I got for now. Great work!\n. Hi Ryan, \nWe happen to have a publicly accessible fractal site that you can find at https://components.designsystem.digital.gov/\nAs for getting your fractal build command running locally, can you provide any additional details on which error you're seeing and what steps you tried beforehand? . I think this makes sense but I also think that maybe this should get a different class name that describes what is being styled since we're not really styling the word \"return to top\" as much as we're styling a div that provides some spacing above the rest of the footer. Maybe usa-footer-anchor, usa-footer-page_nav, usa-footer-pre_section? \nSomething that communicates that it's for things that are intended to be at the bottom of the page but context-aware of the page you are currently on.. Hmmm so while this was just intended to be a PR for some placeholder content I'm realizing that it's not going to be able to pass any of the aXe tests unless we manually change the text color some of these color examples. I'd vote for turning off the testing on all the utilities examples since their job is to just be a visualization for the tokens in the system and not actual endorsed implementations. However, I'm not quite sure how to do that (this problem is blocking us on uswds/uswds-site#450 too). Oh yeah, that style makes sense. Just pushed a temporary change to move the text out of the backgrounds so it will past tests but we can talk about better ways to display that (maybe like the sketch example above). I looked into this on my personal machine and it seems like that's just the styling Safari uses for autofill now (the dropdown is to pick which name/profile you want to fill).\nWere you just curious where this is coming from, suggesting we disable it if possible, or wondering if the USWDS could profile style overrides for it? (or something else). A few things we learned here:\n\nThere was an extra unnecessary build step happening, that is being removed in #2371 \nThere is a certain amount of node startup time that can't really be avoided, it takes a bit longer in Circle than it does on local machines but that is to be expected considering our laptops are supercomputers compared to the instances that Circle spins up.\nThere may be gains to be had by embracing parallelism, a feature offered in Circle 2.0, but will require some refactoring of our test suite to potentially see gains. We may look into this once an engineer is added to the team.\nThere are still mystery variables we have yet to uncover. For example: why does the aXe test suite need to finish in 20000ms to avoid timeout errors? . @maya oops, the command is actually prepublish \u2013 try that one. To answer the question: I'd say leave them in as deprecated since it would be a breaking change otherwise. Maybe elaborate on the note to say why they were deprecated so we (or someone else) remembers what exactly is being cleaned up when 2.0 comes along.. @maya \n\nYeah I believe we had it in there as a quick way to make sure we were starting with a fresh build right before deploying to NPM but since that happens separately in the deploy process, we're good to go on that front. \nThe project itself gets built as a subset of the npm install process and the build that is produced there is the one that tests and code coverage reports are run on. . \ud83d\udc4bhello, I'm in . extra 't' in 'the'. \nAlso this is currently getting rendered on the page because of the --!> at the end.\n\n. it's > its \n. I notice some spots we reference assets with a {{ site.baseurl }} before the / and this one doesn't have it. Should this be consistent or are those different scenarios? \n. same comment as the other (should this have site.baseurl)\n. is it appropriate to call this usa-graphic_list-item when it contains multiple items? Maybe graphic_list-row? Though I suppose the divs inside are determining how many are in a row so I don't know if row should be implied.\n. same graphic_list-item thing, flagging for visibility.\n. should this be usa-footer-primary_section given how usa-footer-secondary_section is done below?\nor usa-footer-section-primary/usa-footer-section-secondary\n. That makes sense, however, there are some other places in this that template do reference {{ site.baseurl }} like the gov banner. It may not matter though because they get parsed out and the end product that shows up in the code snippet portion of the docs site doesn't include template tags.\n. Yeah that makes sense. I can open up a separate issue. \n. I feel like there is probably better terminology than row but I can't think of any and it is a term that bootstrap and foundation use in similar situations so I think we should align with that unless there are strong opinions against it. \n. release candidates isn't linking to anything here. I think because it's defined as a singular at the bottom of the doc. . correct URL is https://babeljs.io/ I believe . This should be 54% (in conjunction with the other change I'm requesting). I think 1.9rem was correct otherwise the text isn't vertically centered. Looking back at the issue I see where that was coming from now. However, we do have a new visual design lead so maybe @rtwell will care to chime in on how we should approach things going forward. \nRyan, my proposed style is included above where the text is vertically centered, the dropdown starts below the nav, and the hover highlight is aligned with the bottom of the nav bar while remaining inside that container. . \nfwiw we can also adjust the bottom border on the span so it doesn't line up with the bottom of the nav if we want to fit the style but keep things centered.. Oh nice! Didn't realize that was a thing. Those random whitespaces were really bugging me.. took care of this one. The removal of some of these classes makes it so the focus state isn't being show on the fractal example like it should (example of how it should look below)\n\nDoesn't have to be done in the same fashion as the past but some njk files may need to be adjusted otherwise.. good call. changed these here and then made a comment to say why the radio button uses different values.. does this need to be set to option value=\"\"? I saw that's what it was in a different PR for the dropdown.njk file and I'm not sure which is right. . agree. it fits the pattern of the current stuff in this section but the pattern that's there isn't necessarily good. I think we should address in a refactor . could you do the -%} close style on these if/else statements in the njk files so the generated html samples in Fractal don't have a bunch of extra blank lines. \nThere's an example in the button PR of how it works here https://github.com/18F/web-design-standards/pull/2098/files#diff-c95f7975ef5ea8e3cfc3fb942baa9055R2. This doesn't seem to be working \n\n. hmmm it's magically working now. @maya good call, fixed!. following the pattern of the sass example did you mean for this to be !src/js/_**/*.js?. In an effort to keep HTML tags out of the config we should probably move the <p> here to wrap {{ item.content }} . that sounds good to me. I could see wanting to keep it more descriptive like usa-input-label-required but there are probably multiple uses here. . I think one example of the usa-input-label-required class would be good somewhere. ",
    "cvrebert": "Not surprising, since it uses type=\"text\" instead of type=\"email\".\n. Probably because you have pattern=\"^d{8}$\" instead of pattern=\"^\\d{8}$\" (missing a backslash).\n. IE8 doesn't support border-radius for native CSS rounded corners: http://caniuse.com/#feat=border-radius\n. IE8 doesn't support border-radius in the first place: http://caniuse.com/#feat=border-radius\n. ",
    "robinwhittleton": "This also affects radios. I\u2019ve made a PR that fixes this issue in IE8: https://github.com/18F/web-design-standards/pull/692\n. Yep, I saw your official support schedule. A small fix never hurts though \ud83d\ude07\n(in other news, your radios / checkboxes also don\u2019t work in iOS5, i.e. iPad 1s. We fixed that with a horribly hacky onclick=\"\" on each label. I haven\u2019t done a PR for that as it\u2019s pretty ugly, but let me know if you want to know more)\n. No problems, I\u2019ve amended my original commit to alphabetise the properties and added an extra line above to make it consistent with your styleguide.\n. ",
    "bensmoif": "Verified on Chrome as well. \nInputs like these (multiple fields on a single line for example: social security #s, phone #s, dates) could be termed \"inline inputs\"\nI'm unsure what the error state should be if any one of these inline inputs. Does the red left border show on the line? Does the one offending input get the red border? How do we direct the user to the one or multiple problematic inputs that are part of the same set of input (on the same line)?\n. ",
    "iluvtatortots": "I'd like to take a look into this :)\n. @bradnunnally Help! How do I bug you? Are you in the slack channel?\n. ",
    "chinaowl": "I started to take a look at this, but got stuck. It seems like the width of the button depends on how many buttons there are inside button_wrapper. In the image below, I added another default button and another big button. The width of the big button now looks correct, but the default button is a little bit too short:\n\nNow when I add another default button for a total of three, the width for default buttons looks correct:\n\nRemoving display: table from button_wrapper makes the width consistent regardless of the number of buttons, but doing that has other side effects.\nI don't have a solution, just wanted to share what I discovered.\n@maya @msecret\n. @brendansudol thanks, I can try that out and submit a PR.\n. @maya thanks for the feedback! I'm out of town this weekend but I'll make the change on Monday. \n. @maya I made the style change! Looks like it's ready to be merged now.\n. ",
    "brendansudol": "this actually isn't a disabled / big button specific issue. When there are less than 3 button elements within a  button_wrapper, regardless of the size or state, the widths are not 100%; changing the button_wrapper display property from table to block should fix this (I don't see any ill side effects).\n. can we close this issue now, @msecret?\n. thanks for comments -- breaking these out into two separate PRs :)\n. Hmm, that's odd -- what IE version is that, @maya?\n. You're right -- I see it now \ud83d\ude22 -- I don't think this solution will work in light of this... I think maybe the way to go is that add a white background to the chevron image (instead of the current transparent one); this should have the desired effect of not having the option value text overlapping with the chevron dropdown area... thoughts? \n. adding a virtual vote for US Web Design System; a few reasons / externalities: it better defines what it is, it's a term used throughout the community for this type of thing, it keeps USWDS nickname intact . the reason i didn't do that is because there is another class to check for as well, namely usa-accordion-bordered\n. agreed\n. yes, they are used twice -- once for the property declarations and once for the height property computation. i'm not sure i fully understand the second criteria (for example, aren't there certain variables that won't be updated yet are still valuable to have abstracted because they're used throughout?)\n. sure thing @msecret -- thanks for the link; i wasn't sure what convention we followed\n. done!\n. ",
    "KimberlyMunoz": "There's a webkit bug that causes focus not to move correctly on skip links. It looks like the issue has been fixed in Chromium nightly, but I haven't seen it pushed out to the latest stable version and we're using JS from the myRA project to move the focus for now.\n. It doesn't encompass everything, but CFPB has open-sourced icons with an icon font at https://github.com/cfpb/cf-icons. \n. :+1:\n. I've seen a few problems when I've tried testing tables with voiceover and found some articles about iOS's bugs with reading tables, legends and fieldsets in certain versions. \nHere's a video of the legend/fieldset bug:\nhttp://www.tyack.net/2015/01/27/accessibility-frustrations-with-apple-voiceover-on-ios-8-1/\n. I found that http://khan.github.io/tota11y/ was a great tool to test the heading levels when I was doing an accessibility check across our project.\n. I'm not sure if either is discoverable unless you do focus management to make sure to move the focus to the errors after submit. \nWhether you use aria-labelledby or aria-describedby (which I'd want to test to make sure aria-labelledby doesn't conflict with label in most standard screenreaders) appropriate focus management might be something worth adding to the guidelines.\n. ",
    "patrickcate": "I would suggest adding pointer-events: none to the usa-button-disabled class and button disabled attribute so hover and click events are not registered. Browser support for the CSS property is pretty good:\nhttp://caniuse.com/#feat=pointer-events\n. I've run into this issue as well. After doing a fresh Drupal 7 install to look at the Drupal 18f theme project incorporating the standards, the list pseudo elements caused layout issues with the Drupal admin toolbar. \nI think this is going to cause major issues down the line as well because using the ul and ol tags for semantic html structures is very common. I foresee many sites trying to implement the WDS will have to regularly override these pseudo elements.\nPerhaps a good middle ground would be to move the current pseudo element list styling to a utility class usa-list?\n\n. ",
    "wardpenney": "From an email chain:\nFor the gutter, the value you set on $gutter is only used to calculate the relative width of gutters to columns ($column). So ultimately setting it to 30px will just result in a different ratio if $column is defined in px as well.\nThis is by design, since having fixed gutters would require relying on calc() and is not compatible with Neat's interpretation of a fluid grid.\n. ",
    "lmarkzon": "I'm looking into this issue!\n. @bradnunnally or whoever knows - Question regarding the local setup instructions on the contributing.md page: \nafter the commands to download npm/gulp do you need to enter gulp build and gulp website:build before gulp:website serve? Or just one of the commands?\n. @juliaelman Thank you, so what's the difference between gulp build and gulp website:build ? Sorry for all the questions - just curious!\n. @juliaelman thank you! that makes sense!\n. @juliaelman yes sorry about that - just added them!\n. @maya yes I will change the name of it and move it to styleguide.scss and push it up again!\n. @maya Yes -  made the changes and pushed them up!\n. ",
    "fureigh": "@llolly Hey there! If you'd like to unsubscribe from notifications, click the Watch button in the upper right and select Not watching or Ignoring.\n\n. Thanks for the correction, @rusty1992!\n. @maya: Feel free to reject that last commit if it's overkill. Just went to http://www.section508.gov/content/learn to doublecheck and noticed that the year information is longer than just 1973, so I changed it to read \"Section 508 of the Rehabilitation Act of 1973, as amended in 1998 (29 U.S.C. \u00a7 794 (d)).\"\n. :+1: Merging...\n. (cc @maya and @baccigalupi)\n. Initial repo: https://github.com/18F/web-design-standards-drupal-d7\n. Great minds think alike: just reached out to AlexB-appnovation about his sandbox and how best to collaborate.\n. @jonraedeke Fantastic! Good to talk with you earlier. :)\nSounds like Alex has also started working on a Drupal 7 theme, so I'll continue toward a Drupal 8 version and we'll be comparing notes.\n. Looping in @AlexBrown-appnovation. :wave: \n. Let's leave this issue open until a theme has been released, but in the spirit of leaving clear breadcrumbs: all further conversation and development is happening in https://github.com/18F/web-design-standards-drupal.\n. @pjurquilla Neat, thanks for sharing!\n@bbertucc Not that I'm aware of. I'd say go for it and work in the open so other people can find you. (ccing @gboone, who also mentioned WordPress interest)\n. @bbertucc To rephrase that a little more clearly: it's awesome that you're ready to start building! Please do, and share your work. :)\n. Hooray! Plenty of work to go around. Feel free to loop me into that call; happy to see how I can best support.\n. Looping in @jenter, a front-end architect who's been doing some related work for a client. Want to make placeholder issues or work-in-progress pull requests for anything you're particularly excited to contribute back?\n. @bbertucc :+1: Thanks for doing that! [edited to add:] It's exciting to see so much work happening on themes that will make the USWDS more readily usable for many site builders.\n. @jenter: Thanks for those thoughts!\nResponses in order:\n- Panel layouts: Definitely interested in seeing the panel layouts. Let's bookmark the question of whether to let the theme require Panels, but at minimum these could be a valuable enhancement.\n- Preprocess functions: These would be great to have first! The preprocess functions sound most foundationally relevant because they'll apply the grid classes, etc. throughout. The guiding principle here has been to err on the side of out-of-the-box functionality, so while commented-out examples would be good as part of code documentation, let's go ahead and use those preprocess functions by default. We can later expand on that to allow users to enable and disable that extra markup through the UI.\n- Gulp setup: :+1: I just merged the one @AlexBrown-appnovation submitted in https://github.com/18F/web-design-standards-drupal/pull/20, but @iris-i is continuing the conversation about linters &c. in https://github.com/18F/web-design-standards-drupal/issues/25.\n. Same as #856 but with reference to the correct branch. :)\n. @maya Absolutely. Good catch.\n. I believe so.\n. @maya That should resolve it. Test the instructions before deploying just to be sure, of course. Thanks!\n. I removed the Accepted label, which appears to have been automatically added \u2014\u00a0if I'm messing with the project's workflow by doing so, just let me know.\n. Ah, thanks for the link, @maya! I hadn't seen that and interpreted Accepted to mean ready to be merged, which of course this wasn't before it was reviewed. :) Will keep the label workflow in mind for the future.\n. @maya Good catch! Addressed in #1283.\n@kamxhmartin, for future reference, using git add -p can be helpful for making sure you commit what you intended to commit and only what you intended to commit. :) Thanks for your pull request!\n. ",
    "mbmoore": "I am going to take a look at this issue.\n. ",
    "elarenee": "@jovchinnikova and @elarenee are working on this!\n. picked up this issue!\n. Ah, yes I just saw your comment on the issue card...\n. ",
    "maryjom": "In addition, the code doesn't match the .pdf of the components_sticker_sheet_and_read_me_V.8 which shows the icon on the external link.\n. ",
    "danamuses": "I would love to see guidance here about how to indicate exit links. For example, on Archives.gov we use an arrow icon which provides disclaimer language in the hover state or links to a full disclaimer page on our website.. From the perspective of an agency that has begun to implement the USWDS across our platforms, I have found it to be incredible helpful in my outreach to stakeholders that these are \"design standards.\" I like to point out that there is flexibility within the standards (e.g., multiple ways to apply the font choices, a pretty wide color palette). I also often frequently note that these standards have been developed based on expertise in usability and accessibility--so the fonts were chosen because they are readable (and not \"just because\" or \"they look nice\"), etc.  If this were simply a \"toolkit\" or \"resources\" I would have a much harder time selling them as something we should adopt and implement. So put me as a check mark in the \"keep name\" column, please!. ",
    "PilgrimMemoirs": "ON IT! \ud83d\udc83\n. Addresses issue #594 \n. ",
    "kamxhmartin": "Working with above! :100: \n. On it!\n. ",
    "kaelig": "You might want to optimize the SVG and PNG icons using services such as ImageOptim (https://imageoptim.com/) and SVGO or https://jakearchibald.github.io/svgomg/ to save some precious bytes (unless they're optimised at deploy time using a build step I would have missed?).\n. I'd like to mention that if you're planning to set the font-size on the HTML element to % instead of px, you might also want to apply this hack for IE11:\ncss\n/**\n * 1. Set baseline font size to 10px\n * 2. Fixes an IE11 bug where rounding with % would create scaling issues  \n *    See http://bit.ly/1g4X0bX\n * 4. Set default text size to 17px (at default zoom level)\n */\nhtml {\n    font-size: 62.5%; /* 1 */\n    font-size: calc(1em * .625); /* 2 */\n}\nbody {\n    font-size: 1.7em; /* 3 */\n}\nThis trick used to be in place on theguardian.com, see source: https://github.com/guardian/guss-typography/blob/v3.0.0/_typography.mixins.scss \u2013\u00a0Note that they switched to font-size: 100% on the html element (and use PostCSS to convert px to rem).\n. Closing this as it is stale and I'm cleaning up my issues.. Any reason why there is no :focus state defined?\n. ",
    "alexose": "We'll make sure that whatever build process we use in the future strips them out automagically :)\n. :+1: \n. :+1: \nLots of good stuff here!\n. :+1: \n. :+1: \n. :+1: \nZip looks good.  No hidden OSX files anywhere :)\n. :+1: \nLooks good-- Sorry I missed it in the first place!  This will teach me to grep more carefully..\n. Rouge 1.9.1 was causing ./go serve to fail, so I pushed a fix.  I can confirm that all the commands work now :)\nReviewing this also had the fringe benefit of informing me about https://github.com/18F/go_script !  Great work.\n. Looks good.  I agree that only \"error\" alerts should get the alert role based on what MDN says.\n. LGTM.  Although Chrome doesn't highlight invalid numbers the way Firefox does.  Not a show-stopper-- just something I learned :)\n. Looks good!\n. Hooray changelogs! :+1: \n. :+1: \n. I see you've added:\nComponents_sticker_sheet_v.8.sketch\nComponents_sticker_sheet_v.8_omnigraffle\nComponents_sticker_sheet_v.8_omnigraffle/US_Web_Design_Standards_v.8.gstencil\nComponents_sticker_sheet_v.8_omnigraffle/US_Web_Design_Standards_v.8.gstencil/data.plist\nComponents_sticker_sheet_v.8_omnigraffle/US_Web_Design_Standards_v.8.gstencil/image1.pdf\nComponents_sticker_sheet_v.8_omnigraffle/US_Web_Design_Standards_v.8.gstencil/image10.pdf\nComponents_sticker_sheet_v.8_omnigraffle/US_Web_Design_Standards_v.8.gstencil/image11.pdf\nComponents_sticker_sheet_v.8_omnigraffle/US_Web_Design_Standards_v.8.gstencil/image14.pdf\nComponents_sticker_sheet_v.8_omnigraffle/US_Web_Design_Standards_v.8.gstencil/image15.pdf\nComponents_sticker_sheet_v.8_omnigraffle/US_Web_Design_Standards_v.8.gstencil/image16.pdf\nComponents_sticker_sheet_v.8_omnigraffle/US_Web_Design_Standards_v.8.gstencil/image17.pdf\nComponents_sticker_sheet_v.8_omnigraffle/US_Web_Design_Standards_v.8.gstencil/image2.pdf\nComponents_sticker_sheet_v.8_omnigraffle/US_Web_Design_Standards_v.8.gstencil/image3.pdf\nComponents_sticker_sheet_v.8_omnigraffle/US_Web_Design_Standards_v.8.gstencil/image4.pdf\nComponents_sticker_sheet_v.8_omnigraffle/US_Web_Design_Standards_v.8.gstencil/image5.pdf\nComponents_sticker_sheet_v.8_omnigraffle/US_Web_Design_Standards_v.8.gstencil/image6.pdf\nComponents_sticker_sheet_v.8_omnigraffle/US_Web_Design_Standards_v.8.gstencil/image7.pdf\nComponents_sticker_sheet_v.8_omnigraffle/US_Web_Design_Standards_v.8.gstencil/image8.pdf\nComponents_sticker_sheet_v.8_omnigraffle/US_Web_Design_Standards_v.8.gstencil/image9.pdf\nComponents_sticker_sheet_v.8_omnigraffle/US_Web_Design_Standards_v.8.pdf\nAnd it looks lovely!  :+1: \n. Oxford comma... ynm?\n. ",
    "quepol": ":boom: \n. ",
    "awfrancisco": "Agreed. Would also add \"the\" after \"reuses.\" \n. Added two small edits, otherwise good to go. \n. I'm going to wait to copy edit this section until this PR is merged. \n. Fixed\n. Good to merge. Moving to the next section. \n. Looks all good to me!\n. Let me know if you'd like help editing on this. \n. +1\n. I like the second one. \n. I'm still waiting to hear back from @vzvenyach about his talks with OGC on the contributing docs. I'm not sure where that conversation stands. \n. Should be \"ranking, hierarchy, or series\"\n. \"...lists to display text...\"\n. Yes, that sounds right. I'll edit. \n. None of the other sections have quotes on the lead. \n. Got it. I was looking at the wrong colon. Will fix. \n. Yup. \n. Our style would put a comma after distribute, but if this is official legal language it's fine to leave it. \n. \"...and reuse the best practices...\"\n. ",
    "StephenOTT": "@maya which markup are you specifically talking about?  Do you mean the Code Examples?\n. I would write a small extension to jekyll or just a little ruby file that runs on travis build that \"compiles\"/cycles through all of your HTML files and searches for the placeholder variable and text replace with the user defined namespace/\"usa\" replacement.  You could probably do it all in a single Repo.  Have Master for the version with the variable and the gh-pages branch for the compiled version.\n. @maya actually, was not thinking that one through very well... Should have just used the jekyll front matter variables and/or data files: http://jekyllrb.com/docs/datafiles/\nCreate a global variable for the namespace and apply that throughout.  Obviously the default would be, usa, but if someone needed to make the change, it would be a single line change in the data file.\n. @msecret sorry for the late reply.  been busy.\nThe use case and pain point is just the concept of usa or any sort of us gov driven prefix being related to a country.    The pure-button is not a problem. the problem is the literal word 'usa'.  It seems like a 'stupid' issue, and it often is, but many governments when they start to look at the usage, there is always that conversation of \"can we remove the \"usa\" and use something else?\".  If it was gov-pure there should not be a problem or any other branding.  Even 18f would likely not be a problem.  It is purely a vanity/perception issue that gets raised when a non USA government looks to use the same framework.\n. Agreed. The reason for having the docs change is so when groups have internal style guides that use the 18f base, the style guide and examples don't have \"USA\".  Assume that most would be modifying a few styles, colours, etc, and they want to generate their interactive/dynamic style guide.  Similar to how so many generate their implementation of bootstrap's style guide.\n. @shawnbot \ud83d\udc4d . ",
    "Sequoia": "Doesn't seem like there'd be a need to generate the HTML for the examples; just make usa the default & have the examples use the default prefix. Default behavior stays the same & there's a caveat that you can change it if you like but you'll need to find/replace usa if you want to copy/paste markup examples.\n. Well, abstracting usa for use would be great, abstracting it from all the examples strikes me as above-and-beyond/nice-to-have. I mean, 18f doesn't \"owe\" anyone either of these, but asking them to accommodate your own internal style guide system and remove their mark from everything seems like a lot to ask.\nAnyway I suppose one of us should write a PR if we feel strongly about it :)\n. :+1: this was very confusing. :smile_cat: \n. OK maybe a link to there in the \"getting started\" section then :smile_cat: \nedit: with accompanying instructions that don't direct user to _site\n. ",
    "paultag": "Yeah, it'd be great to get a link -- I'm interested in seeing some example markup, and the example links go to a .png image :)\n. Perhaps using Travis to do a continuous deployment of the assets to S3 would be cool to do, too!\n. Any thoughts?\n. @maya mind updating the URL to https://github.com/department-of-veterans-affairs/django-designstandards ? Moved it this afternoon\n. Hey @maya - yeah I know :)\nI want three per line, but not to define the rows in html\nDefining rows would make it hard for the app to be responsive, consider 6 elements.\nFull size, you have two rows of three.\nAs the screen is smaller, you get three rows of two.\nWith rows on each line, you either end up with an oversquashed three lines, or two blocks on one line, followed by one line of one, followed by two, followed by one, throwing off the flow.\n. I saw this too, I thought I had a bug in my code, until I noticed the labels were after the input in the example. It'd be nice to get this fixed!\n. Still broken after uninstalling and re-installing both Chrome and Firefox. I'm using GNU/Linux, but that shouldn't matter - I'm using Chrome Version 59.0.3071.115 (Official Build) (64-bit).\nI'm fine closing this if it's just me\n. Can confirm - I have a touch screen, touching the bar works, clicking does not\n:us:. ",
    "thatkahunaguy": "With the image wrapped in an anchor tag display: inline-block; on the parent anchor may do the trick. Quick inspector edit showed this resolves focus to wrap around the entire image (though it still comes a bit below the image as well so needs a bit more work).  More info on potential troubleshooting here http://www.ssbbartgroup.com/blog/using-css-floats-image-links/\n\n. @maya glad to hear it.  Love the work the USDS is doing - refreshing to see some industry best practices being deployed in government\n. ",
    "jessieay": "awwwww yeah :rainbow: \n. https://github.com/18F/micropurchase/blob/develop/.scss-lint.yml\n. @msecret @maya in that case, does this seem like a case where we should be using BEM? \nhttps://github.com/18F/web-design-standards/blob/29aac953002f1d295f9374bb6c3ea756c4c9175d/src/stylesheets/components/_footer.scss#L174\n. I was able to fix this locally\nsee app/assets/stylesheets/core/_layout.scss at https://github.com/18F/micropurchase/pull/868/files\n. to give more context on visual design, this is what my form looked like with old legend size:\n\n. and now\n\n. @ericadeahl this is the change the legend style for fieldsets. we don't currently have any examples of this in the web design standards docs but the screenshots here show what we have now vs what it would look like with the proposed changes.\nI believe this is a good change because fieldsets are usually used to group fiels  together. When the legend is large, it is so much bigger than any other content in the form that it is overpowering. More on fieldsets: https://www.sitepoint.com/web-foundations/fieldset-html-element/\n. more on legends / fieldsets: http://www.htmlgoodies.com/tutorials/forms/article.php/3479111\n. Actually, I just inspected the code on the docs and realized that I am wrong: that is a fieldset! But it isn't being used like a normal fieldset. \nPerhaps there are also accessibility reasons for using a fieldset but in most apps I've worked with people only use them for visually grouping fields together.\nIn most forms I've worked with, we add a header to the top similar to the Name header in the form in the web design standards docs (which is actually a fieldset legend in that case). We reserve fieldsets for cases like micropurchase where there are some fields within the form that we want to group, but not for grouping the whole form together.\nWith the fieldset legend being as large as it is, what would you recommend using as the main header for the entire form?\n. that's a nice idea, @msecret. \n. Not sure what the best way to test this is....\n. updated at 97bce0f -- thanks @pkarman @msecret \n. Oh yeah, I was going to create an issue for this:\n- What is a UI component?\n- What does Website mean here?\n- this isn't HTML, what would I run HTML codesniffer on?\n- npm test failed but It seems unrelated to change I made? Figured if CI was passing that was OK.\nSeeing this when I run npm test:\nMessage:\n    You need to have Ruby and scss-lint gem installed\n[13:31:14] 'scss-lint-docs' errored after 577 ms\n[13:31:14] Error in plugin 'run-sequence(lint-tmp-docs-scss)'\nError\n    at finish (/Users/jessicayoung/dev/web-design-standards/node_modules/run-sequence/index.js:56:13)\n    at Gulp.onError (/Users/jessicayoung/dev/web-design-standards/node_modules/run-sequence/index.js:67:4)\n    at Gulp.emit (events.js:129:20)\n    at Gulp.Orchestrator._emitTaskDone (/Users/jessicayoung/dev/web-design-standards/node_modules/gulp/node_modules/orchestrator/index.js:264:8)\n    at /Users/jessicayoung/dev/web-design-standards/node_modules/gulp/node_modules/orchestrator/index.js:275:23\n    at finish (/Users/jessicayoung/dev/web-design-standards/node_modules/gulp/node_modules/orchestrator/lib/runTask.js:21:8)\n    at Stream.<anonymous> (/Users/jessicayoung/dev/web-design-standards/node_modules/gulp/node_modules/orchestrator/lib/runTask.js:52:4)\n    at Stream.f (/Users/jessicayoung/dev/web-design-standards/node_modules/gulp/node_modules/orchestrator/node_modules/end-of-stream/node_modules/once/once.js:17:25)\n    at Stream.emit (events.js:129:20)\n    at /Users/jessicayoung/dev/web-design-standards/node_modules/gulp-scss-lint/src/index.js:36:16\n    at tryCatcher (/Users/jessicayoung/dev/web-design-standards/node_modules/gulp-scss-lint/node_modules/bluebird/js/main/util.js:26:23)\n    at Promise._settlePromiseFromHandler (/Users/jessicayoung/dev/web-design-standards/node_modules/gulp-scss-lint/node_modules/bluebird/js/main/promise.js:507:31)\n    at Promise._settlePromiseAt (/Users/jessicayoung/dev/web-design-standards/node_modules/gulp-scss-lint/node_modules/bluebird/js/main/promise.js:581:18)\n    at Promise._settlePromises (/Users/jessicayoung/dev/web-design-standards/node_modules/gulp-scss-lint/node_modules/bluebird/js/main/promise.js:697:14)\n    at Async._drainQueue (/Users/jessicayoung/dev/web-design-standards/node_modules/gulp-scss-lint/node_modules/bluebird/js/main/async.js:123:16)\n    at Async._drainQueues (/Users/jessicayoung/dev/web-design-standards/node_modules/gulp-scss-lint/node_modules/bluebird/js/main/async.js:133:10)\n[13:31:14] 'test' errored after 706 ms\n[13:31:14] SyntaxError in plugin 'gulp-mocha'\nMessage:\n    /Users/jessicayoung/dev/web-design-standards/node_modules/jsdom/lib/jsdom.js:3\n() => `jsdom 7.x onward only works on Node.js 4 or newer: https://github.com/t\n ^\nUnexpected token )\nStack:\n/Users/jessicayoung/dev/web-design-standards/node_modules/jsdom/lib/jsdom.js:3\n() => `jsdom 7.x onward only works on Node.js 4 or newer: https://github.com/t\n ^\nSyntaxError: Unexpected token )\n    at exports.runInThisContext (vm.js:73:16)\n    at Module._compile (module.js:443:25)\n    at Object.Module._extensions..js (module.js:478:10)\n    at Module.load (module.js:355:32)\n    at Function.Module._load (module.js:310:12)\n    at Module.require (module.js:365:17)\n    at require (module.js:384:17)\n    at Object.<anonymous> (/Users/jessicayoung/dev/web-design-standards/spec/unit/setup.js:2:13)\n    at Module._compile (module.js:460:26)\n    at Object.Module._extensions..js (module.js:478:10)\n    at Module.load (module.js:355:32)\n    at Function.Module._load (module.js:310:12)\n    at Module.require (module.js:365:17)\n    at require (module.js:384:17)\n    at Object.<anonymous> (/Users/jessicayoung/dev/web-design-standards/spec/unit/accordion/accordion.spec.js:4:9)\n    at Module._compile (module.js:460:26)\n[13:31:15] Finished 'eslint' after 982 ms\n. yeah I tried to serve the site but saw same errors as above. :( I can try to debug later, figured that maybe web design standards setup needs some additional docs (or maybe my local setup is just screwy)\n. ok just manually installed scss-lint, now seeing this when I try to serve the site:\n``\nUsing colorator 0.1\nUsing ffi 1.9.10\nUsing sass 3.4.21\nUsing rb-fsevent 0.9.7\nUsing kramdown 1.10.0\nUsing liquid 3.0.6\nUsing mercenary 0.3.5\nUsing rouge 1.9.0\nUsing safe_yaml 1.0.4\nUsing json 1.8.3\nUsing redcarpet 3.3.4\nUsing bundler 1.11.2\nUsing rb-inotify 0.9.7\nUsing jekyll-sass-converter 1.4.0\nUsing scss_lint 0.47.1\nUsing listen 3.0.6\nUsing jekyll-watch 1.3.1\nUsing jekyll 3.1.2\nBundle complete! 5 Gemfile dependencies, 19 gems now installed.\nUsebundle show [gemname]` to see where a bundled gem is installed.\n[14:12:24] Finished 'bundle-gems' after 2.62 s\n[14:12:24] generate-code-snippets Generating files for tables.html\n[14:12:24] generate-code-snippets Generating files for text-input.html\n[14:12:24] generate-code-snippets Generating files for typesetting.html\nevents.js:85\n      throw er; // Unhandled 'error' event\n            ^\nError: Cannot find module 'lodash.debounce' from '/Users/jessicayoung/dev/web-design-standards/src/js/initializers'\n    at /Users/jessicayoung/dev/web-design-standards/node_modules/browserify/node_modules/resolve/lib/async.js:46:17\n    at process (/Users/jessicayoung/dev/web-design-standards/node_modules/browserify/node_modules/resolve/lib/async.js:173:43)\n    at ondir (/Users/jessicayoung/dev/web-design-standards/node_modules/browserify/node_modules/resolve/lib/async.js:188:17)\n    at load (/Users/jessicayoung/dev/web-design-standards/node_modules/browserify/node_modules/resolve/lib/async.js:69:43)\n    at onex (/Users/jessicayoung/dev/web-design-standards/node_modules/browserify/node_modules/resolve/lib/async.js:92:31)\n    at /Users/jessicayoung/dev/web-design-standards/node_modules/browserify/node_modules/resolve/lib/async.js:22:47\n    at FSReqWrap.oncomplete (fs.js:95:15)\n```\nI get the same error on the staging branch so seems unrelated to this PR\n. yes, this is the backtrace from npm install\n``\nnpm ERR! Darwin 15.6.0\nnpm ERR! argv \"node\" \"/usr/local/bin/npm\" \"install\"\nnpm ERR! node v0.12.7\nnpm ERR! npm  v2.14.2\nnpm ERR! code ELIFECYCLE\nnpm ERR! uswds@0.11.0 prepublish:bundle && gulp copy-vendor-sass && gulp build`\nnpm ERR! Exit status 1\nnpm ERR!\nnpm ERR! Failed at the uswds@0.11.0 prepublish script 'bundle && gulp copy-vendor-sass && gulp build'.\nnpm ERR! This is most likely a problem with the uswds package,\nnpm ERR! not with npm itself.\nnpm ERR! Tell the author that this fails on your system:\nnpm ERR!     bundle && gulp copy-vendor-sass && gulp build\nnpm ERR! You can get their info via:\nnpm ERR!     npm owner ls uswds\nnpm ERR! There is likely additional logging output above.\nnpm ERR! Please include the following file with any support request:\nnpm ERR!     /Users/jessicayoung/dev/web-design-standards/npm-debug.log\n```\nMy npm version is 2.14.2\n. @maya the gif above was created in chrome on my laptop using the button for changing to \"mobile\" view in the inspector (what is that thing called?)\n. Another thought on this: maybe we shouldn't even pass the arg, and just declare the scss variable instead?\nSee https://github.com/thoughtbot/bourbon/blob/v4-stable/app/assets/stylesheets/css3/_font-face.scss \nThe font-face mixin itself uses $asset-pipeline: $asset-pipeline\nlooks like the bourbon default for $asset-pipeline is  false:\nhttps://github.com/thoughtbot/bourbon/blob/a50249ad24521bda3ac60f0c5cd3febeb7ff2fe0/core/bourbon/settings/_settings.scss#L36\nbut you can set it to true and I'd assume that would cause an override anywhere that we are calling the font-face mixin as long as we don't pass the $asset-pipeline arg?\n. @tysongach Thank you so much for weighing in! I just updated this PR to remove the asset-pipeline argument so that we instead depend on the asset-pipeline global variable defined in  src/stylesheets/core/_defaults.scss\n. ",
    "djKianoosh": "Re: @maya But we need to make sure the alert role is not abused or used incorrectly, which could happen if we added it in the code, and people copied and pasted without knowing what it's for.\nTrue. But at the same time, something is better than nothing. So it's important to try to agree on a sane default for code examples. Can't worry too much about misuse, and these guides are as much about teaching developers as anything, right? ;-) \n. ",
    "maclover7": "Might be easier for contributing and organization to move assets folder to the master branch (separate from the site)\n. ",
    "BrianLefler": "Pretty sure this was the same issue with the MAX.gov proxy buckling under load (throwing a lot of 503s -- this error is only unusual in that the first request succeeded and it was the assets that 503'd).  In that case, we did nothing and it seems to have recovered on its own.\nWe don't own the first hop in the chain, so permanently fixing this will either require us to roll our own proxy server or to work with MAX.gov to bulletproof the proxy server we're currently using.  We are using a proxy in the first place to support https, as described here by konklone: https://github.com/isaacs/github/issues/156\n. ",
    "nullhandle": "Thanks for your interest. There are many recommendations in the documentation I linked to above. Most of those are appropriate to the U.S. Federal Government web context.\nIf I had to distill down to a more limited and prioritized set of recommendations, they'd be:\n- Make links discoverable; make links meaningful (see sections \"Make links transparent\" and \"Represent web app states with links\" on the Capture page)\n- Make good use of robots directives (see section \"Be careful with robots directives\" on the Capture page)\n- Return reliable and useful HTTP responses (see sections \"Return reliable response codes\" and \"Implement caching enhancements\" on the Capture page)\nI've invited the web archivists involved in the aforementioned initiatives to weigh in here, as well; they can offer additional perspective based on their own experiences attempting to archive U.S. Federal Government websites. I suspect they might also be willing to draft more specific language and guidelines for co-inclusion with the U.S. Web Design Standards, depending on what you're amenable to or how you see it potentially fitting in.\n. ",
    "melodykramer": "Just fixed and deployed to staging. @awfrancisco, mind pushing go?\n. This tweet indicates that year may not be necessary. IANAL but think it's worth checking if it will prevent the need for yearly updates. \n. ",
    "cademarkegard": ":+1: \n. ",
    "hanibash": ":+1: \n. ",
    "andrewliebchen": "Thanks @maya. At OpenGov, we use a combination method of a map variable to store the z-index key value pairs for each type of component, and a mixin to call that value in your components. \nI reserve z-index >= 10 for local components...since z-index is relative to it's nearest relative parent, I don't stress about it too much within components. I'm plenty fussy about the components themselves.\n. Yay! Glad to help...looking forward to seeing what else I can do.\n. NPM too.\n. It is though. React and React components are distributed on npm. So is Bourbon, which is a dependency if this library. It's not tough to publish to both bower and npm.\n\nOn Sep 29, 2015, at 12:07 PM, Robert Main notifications@github.com wrote:\nnpm isn't really for client side dependencies though\n\u2014\nReply to this email directly or view it on GitHub.\n. You could probably combine this issue with this issue. That way, you'll set up npm to handle your dependencies and publish at the same time.\n. \n",
    "landaire": "This would probably be an issue on your end. Make sure the public key for your related private key is added to the account or try cloning over HTTPS. I was able to clone the repo just fine over SSH.\n. ",
    "codepo8": "This is the line in the docs - that's why I filed it. Using the repo URL I was able to clone and build fine. Maybe replace it with the full URL or the zip download link?\n. ",
    "DJMcK": "@codepo8 Looks like you're attempting to clone using SSH without first adding the SSH key to your Github account. See this help document for more.\n. ",
    "tiborsaas": "I tend to skip the href attribute completely in these situations. This also has the effect, that if the link is fake, underline and mouse pointer should be added via CSS. \nIf using a # the problem is that if no preventDefault is called in the handler function, then the page will jump to the top.\n. ",
    "kfranqueiro": "preventDefault should be called either way, even with javascript:void(0) links, as there is a somewhat obscure yet infamous bug in IE9-10 (maybe also 11?) where event handlers registered with addEventListener get completely juggled when a link that doesn't actually navigate anywhere is clicked.\n. ",
    "dylanvalade": "If the primary goal is \"Make the best thing the easiest thing\" then # is easier than javascript:void(0).\n. An event handler attached to the document can handle links added both when the DOM renders and after dynamic DOM changes.\n``` javascript\nfunction handleDisabledLinks() {\n$(document).on('click', 'a[href=\"#\"]', function (event) {\n// Stop default browser action which would likely return to the top of the page\nevent.preventDefault();\n\n});\n}\n```\nThen call handleDisabledLinks() in $(document).ready here:\nhttps://github.com/18F/web-design-standards/blob/18f-pages-staging/assets/js/components.js#L334\n. @maya  Good call.  I've broken them out to #782 and #783.\n. Glad it worked out.  Thanks for the quick resolution!\n. ",
    "liquiddandruff": "I've updated it with the correct link, now it makes sense. Thanks!\n. ",
    "matyasfodor": ":+1: \n. ",
    "kiblerdude": ":+1:\n. ",
    "matthewjewell": ":+1: \n. ",
    "aarongustafson": "I can drop in the required bits a little later today. As for other patterns, I have an overview/recap in my An Event Apart talk \"Falling in Love with Forms\". A full rundown of the patterns (for dissection) is on CodePen.\n. @carodew Awesome!\nPS - If you\u2019re in ATL, we should get together some time; I\u2019m just up in Chattanooga. On a side note, we run an event series called Code & Creativity up here you might be interested in since you\u2019re so close.\n. My apologies @maya, I got caught up in work stuff. Thanks for updating @msecret!\n. ",
    "jcbelanger": "I also strongly agree!  You should always avoid trying to be clever and use a single, traditional input.  My reasons are:\n- A field broken into sections also requires proper aria markup to ensure each section is properly handled by screen readers.\n- How should form errors be represented to a screen reader when the input is split into sections?\n- A user can't selecting text across multiple inputs (to copy/paste or clear contents).\n- A user should be able to input for a field without having to hit tab / use the mouse.  The extra steps are not conventional and can cause issues for users with cognitive/motor disabilities!\n  - A field broken into sections often includes scripting to manage field focus / cursor placement.  This will not work without JavaScript enabled.\n  - Even changing the user focus pragmatically can be distracting and can cause issues for people with cognitive disabilities if it isn't exactly as they expect / used to.\n  - If focus goes forward to the next section automatically, it should go backwards automatically with backspace.  This means supporting ALL of the platforms cursor keyboard shortcut conventions: shift+left/right=select text, ctrl+left/right=move cursor by a word, home/end/shift/etc...  This all has to work across potentially multiple sections!  Any mix can cause issues for users with cognitive/motor disabilities!\n. I'm glad your group seems to be taking the feedback from alpha seriously!\nWhile I'm glad we both agree moving user focus is bad, I brought it up because I thought it highlights a tendency UX designers have to create changes that go against platform conventions.  And it's these changes that can cause a worse UX in other cases.  This is why I'd also be hesitant to use something like PoliteSpace that you linked.  (I love most of the work by the Filament Group too!)  An input field represents what the user entered.  If it's not EXACTLY what the user typed, it can cause some confusion.  Pretty, formatted, styled content belongs in a new element.   elements are for raw input and should not be overloaded.  This is why I suspect your users were confused to find the difference between the editing and display of their input.\nWhile a single input might not be as pretty, it's SIMPLE and avoids all of the subtle issues that arise with splitting inputs.  I don't find the 3 reasons listed for splitting inputs as strong because each of the UX changes brings similar issues that the focus management changes brought.\n- Masking. I believe the browser's convention is to use placeholders instead.  It's nice that when you split an input, you save the user from having to input formatting characters, like the '/' in '1/1/2015'.  But this is at the cost of the user having to hit tab (and hoping no script messes with the focus) or use a mouse, which is really bad for users with motor disabilities.  And even then, you'll still need placeholders for each section.\n- Validation.  If someone types \"11315\", you should report it as a formatting error!  People are always trying to interpret a user's intentions and constantly getting it wrong.  I believe it's better to give the user feedback in the form of an error instead of potentially interpreting their input incorrectly.\n- Visual.  I completely agree that 3 inputs can look visually better than one.  This neglects non-sighted users who will rely on the placeholder (as fallback) to gather context about the field.  Marking the \"MM\" field as invalid is not very helpful to the user!  This raises the issue of how to represent an error over the entire input.  If your business logic limits your dates to a range, will a screen reader say 3 fields are invalid for each invalid date?\nHere's one more issue I just thought of: I also don't think splitting inputs works well for optional field components.  For example, the Country Code / Area Code components of a telephone number might be optional depending on the use case, but a split telephone number would be much more verbose to the user.\n. There already seems to be a \"Download the components\"  button on the homepage\nI personally don't like committing build assets to source control.  I suggest creating a github \"release\" of the dist folder.  Then there will be a download link that people can use without having to download the entire source.  However, many javascript front end frameworks end up committing dist anyway.\n. ",
    "AdamDavis321": "I also agree. In addition to the points made by IDisposable and jcbelanger, I think using a single input field would allow for more consistency with HTML 5 date input fields and the date input components provided by most JavaScript frameworks. In my opinion, users will not be surprised by single-input fields for date entry, and they will be seeing that paradigm more and more in the future.\n. ",
    "migurski": "Yikes\u2014anyone here have any research results from putting this in front of users to support a change? GDS formally recommends split fields for \u201cmemorable dates,\u201d distinct from other kinds of dates.\nThe USDS playbook is down right now (\u201cMAX.gov is scheduled for maintenance on Sundays 2:00am-8:00am EST\u201d) and I don\u2019t recall if USDS similarly distinguishes a variety of date types.\n. Yep, that\u2019s the one for memorable dates. The recommendations are substantially different for other kinds of dates, e.g. \u201cIf you don\u2019t need an exact date and users are likely to struggle to remember it (for example the date you started your first job), make sure you allow users to enter approximate dates like \u2018June 1996\u2019\u201d which would imply a single input for that kind of date.\nKind of a pain that the standards are down every weekend. Are the servers powered by union hamsters?\n. :+1: :100: \n. ",
    "joelanman": "Hullo - I worked on the GDS guidelines.\nWhen you give users a single input box for date, it's more ambiguous what date format you want from them. We've tested it and regularly seen people pause and wonder what format they should use, and be unsure that what they enter will be accepted.\nWhen your input pattern is more defined (as with using three boxes) you don't have that problem.\nAs with everything, we'd recommend people test the pattern in your context with your users.\n. ",
    "edwelker": "So it would seem that a /dist directory has been created, and the add-npm branch points to the contents.  Can the documentation be updated if this is indeed the case?\n. @maya I have cycles (and motivation) to work on this... what more did you plan for add-npm?\nAlso seems somewhat related to\n752 (Where is the dist)\n732 (Separate website from base SCSS / JS)\n. Sure! Let me know if we can help.  Full disclosure: NCBI (www.ncbi.nlm.nih.gov) is going to be using these web-design-standards as the basis of a few new experiments (which may become production), so we've got a vested interest in contributing. :)\n. Thank you. :)\n. Thanks @shawnbot!  Lemme tag @ducklet, and get her to glance at it.  :). Thanks!!   Just wanted to point out that your documentation on master currently says it's available.  :)\n. cc: @ducklet\n. https://github.com/18F/web-design-standards/blob/18f-pages-staging/src/stylesheets/core/_base.scss#L23\n. ",
    "miguelsousa": "@maya that's not quite right. The original Source Sans Pro fonts support Greek and Cyrillic (along with extended Latin), but the subset font versions I submitted as part of issue #848 do not support Greek nor Cyrillic. The glyph/character set supported by the subset fonts is shown in this PDF.\n. Here's the complete list of (Unicode) characters supported by the subset fonts:\n```\n  0020 SPACE\n! 0021 EXCLAMATION MARK\n\" 0022 QUOTATION MARK\n0023 NUMBER SIGN\n$ 0024 DOLLAR SIGN\n% 0025 PERCENT SIGN\n& 0026 AMPERSAND\n' 0027 APOSTROPHE\n( 0028 LEFT PARENTHESIS\n) 0029 RIGHT PARENTHESIS\n* 002A ASTERISK\n+ 002B PLUS SIGN\n, 002C COMMA\n- 002D HYPHEN-MINUS\n. 002E FULL STOP\n/ 002F SOLIDUS\n0 0030 DIGIT ZERO\n1 0031 DIGIT ONE\n2 0032 DIGIT TWO\n3 0033 DIGIT THREE\n4 0034 DIGIT FOUR\n5 0035 DIGIT FIVE\n6 0036 DIGIT SIX\n7 0037 DIGIT SEVEN\n8 0038 DIGIT EIGHT\n9 0039 DIGIT NINE\n: 003A COLON\n; 003B SEMICOLON\n< 003C LESS-THAN SIGN\n= 003D EQUALS SIGN\n\n003E GREATER-THAN SIGN\n? 003F QUESTION MARK\n@ 0040 COMMERCIAL AT\nA 0041 LATIN CAPITAL LETTER A\nB 0042 LATIN CAPITAL LETTER B\nC 0043 LATIN CAPITAL LETTER C\nD 0044 LATIN CAPITAL LETTER D\nE 0045 LATIN CAPITAL LETTER E\nF 0046 LATIN CAPITAL LETTER F\nG 0047 LATIN CAPITAL LETTER G\nH 0048 LATIN CAPITAL LETTER H\nI 0049 LATIN CAPITAL LETTER I\nJ 004A LATIN CAPITAL LETTER J\nK 004B LATIN CAPITAL LETTER K\nL 004C LATIN CAPITAL LETTER L\nM 004D LATIN CAPITAL LETTER M\nN 004E LATIN CAPITAL LETTER N\nO 004F LATIN CAPITAL LETTER O\nP 0050 LATIN CAPITAL LETTER P\nQ 0051 LATIN CAPITAL LETTER Q\nR 0052 LATIN CAPITAL LETTER R\nS 0053 LATIN CAPITAL LETTER S\nT 0054 LATIN CAPITAL LETTER T\nU 0055 LATIN CAPITAL LETTER U\nV 0056 LATIN CAPITAL LETTER V\nW 0057 LATIN CAPITAL LETTER W\nX 0058 LATIN CAPITAL LETTER X\nY 0059 LATIN CAPITAL LETTER Y\nZ 005A LATIN CAPITAL LETTER Z\n[ 005B LEFT SQUARE BRACKET\n\\ 005C REVERSE SOLIDUS\n] 005D RIGHT SQUARE BRACKET\n^ 005E CIRCUMFLEX ACCENT\n_ 005F LOW LINE\n` 0060 GRAVE ACCENT\na 0061 LATIN SMALL LETTER A\nb 0062 LATIN SMALL LETTER B\nc 0063 LATIN SMALL LETTER C\nd 0064 LATIN SMALL LETTER D\ne 0065 LATIN SMALL LETTER E\nf 0066 LATIN SMALL LETTER F\ng 0067 LATIN SMALL LETTER G\nh 0068 LATIN SMALL LETTER H\ni 0069 LATIN SMALL LETTER I\nj 006A LATIN SMALL LETTER J\nk 006B LATIN SMALL LETTER K\nl 006C LATIN SMALL LETTER L\nm 006D LATIN SMALL LETTER M\nn 006E LATIN SMALL LETTER N\no 006F LATIN SMALL LETTER O\np 0070 LATIN SMALL LETTER P\nq 0071 LATIN SMALL LETTER Q\nr 0072 LATIN SMALL LETTER R\ns 0073 LATIN SMALL LETTER S\nt 0074 LATIN SMALL LETTER T\nu 0075 LATIN SMALL LETTER U\nv 0076 LATIN SMALL LETTER V\nw 0077 LATIN SMALL LETTER W\nx 0078 LATIN SMALL LETTER X\ny 0079 LATIN SMALL LETTER Y\nz 007A LATIN SMALL LETTER Z\n{ 007B LEFT CURLY BRACKET\n| 007C VERTICAL LINE\n} 007D RIGHT CURLY BRACKET\n~ 007E TILDE\n  00A0 NO-BREAK SPACE\n\u00a1 00A1 INVERTED EXCLAMATION MARK\n\u00a2 00A2 CENT SIGN\n\u00a3 00A3 POUND SIGN\n\u00a4 00A4 CURRENCY SIGN\n\u00a5 00A5 YEN SIGN\n\u00a6 00A6 BROKEN BAR\n\u00a7 00A7 SECTION SIGN\n\u00a8 00A8 DIAERESIS\n\u00a9 00A9 COPYRIGHT SIGN\n\u00aa 00AA FEMININE ORDINAL INDICATOR\n\u00ab 00AB LEFT-POINTING DOUBLE ANGLE QUOTATION MARK\n\u00ac 00AC NOT SIGN\n\u00ad 00AD SOFT HYPHEN\n\u00ae 00AE REGISTERED SIGN\n\u00af 00AF MACRON\n\u00b0 00B0 DEGREE SIGN\n\u00b1 00B1 PLUS-MINUS SIGN\n\u00b2 00B2 SUPERSCRIPT TWO\n\u00b3 00B3 SUPERSCRIPT THREE\n\u00b4 00B4 ACUTE ACCENT\n\u00b5 00B5 MICRO SIGN\n\u00b6 00B6 PILCROW SIGN\n\u00b7 00B7 MIDDLE DOT\n\u00b8 00B8 CEDILLA\n\u00b9 00B9 SUPERSCRIPT ONE\n\u00ba 00BA MASCULINE ORDINAL INDICATOR\n\u00bb 00BB RIGHT-POINTING DOUBLE ANGLE QUOTATION MARK\n\u00bc 00BC VULGAR FRACTION ONE QUARTER\n\u00bd 00BD VULGAR FRACTION ONE HALF\n\u00be 00BE VULGAR FRACTION THREE QUARTERS\n\u00bf 00BF INVERTED QUESTION MARK\n\u00c0 00C0 LATIN CAPITAL LETTER A WITH GRAVE\n\u00c1 00C1 LATIN CAPITAL LETTER A WITH ACUTE\n\u00c2 00C2 LATIN CAPITAL LETTER A WITH CIRCUMFLEX\n\u00c3 00C3 LATIN CAPITAL LETTER A WITH TILDE\n\u00c4 00C4 LATIN CAPITAL LETTER A WITH DIAERESIS\n\u00c5 00C5 LATIN CAPITAL LETTER A WITH RING ABOVE\n\u00c6 00C6 LATIN CAPITAL LETTER AE\n\u00c7 00C7 LATIN CAPITAL LETTER C WITH CEDILLA\n\u00c8 00C8 LATIN CAPITAL LETTER E WITH GRAVE\n\u00c9 00C9 LATIN CAPITAL LETTER E WITH ACUTE\n\u00ca 00CA LATIN CAPITAL LETTER E WITH CIRCUMFLEX\n\u00cb 00CB LATIN CAPITAL LETTER E WITH DIAERESIS\n\u00cc 00CC LATIN CAPITAL LETTER I WITH GRAVE\n\u00cd 00CD LATIN CAPITAL LETTER I WITH ACUTE\n\u00ce 00CE LATIN CAPITAL LETTER I WITH CIRCUMFLEX\n\u00cf 00CF LATIN CAPITAL LETTER I WITH DIAERESIS\n\u00d0 00D0 LATIN CAPITAL LETTER ETH\n\u00d1 00D1 LATIN CAPITAL LETTER N WITH TILDE\n\u00d2 00D2 LATIN CAPITAL LETTER O WITH GRAVE\n\u00d3 00D3 LATIN CAPITAL LETTER O WITH ACUTE\n\u00d4 00D4 LATIN CAPITAL LETTER O WITH CIRCUMFLEX\n\u00d5 00D5 LATIN CAPITAL LETTER O WITH TILDE\n\u00d6 00D6 LATIN CAPITAL LETTER O WITH DIAERESIS\n\u00d7 00D7 MULTIPLICATION SIGN\n\u00d8 00D8 LATIN CAPITAL LETTER O WITH STROKE\n\u00d9 00D9 LATIN CAPITAL LETTER U WITH GRAVE\n\u00da 00DA LATIN CAPITAL LETTER U WITH ACUTE\n\u00db 00DB LATIN CAPITAL LETTER U WITH CIRCUMFLEX\n\u00dc 00DC LATIN CAPITAL LETTER U WITH DIAERESIS\n\u00dd 00DD LATIN CAPITAL LETTER Y WITH ACUTE\n\u00de 00DE LATIN CAPITAL LETTER THORN\n\u00df 00DF LATIN SMALL LETTER SHARP S\n\u00e0 00E0 LATIN SMALL LETTER A WITH GRAVE\n\u00e1 00E1 LATIN SMALL LETTER A WITH ACUTE\n\u00e2 00E2 LATIN SMALL LETTER A WITH CIRCUMFLEX\n\u00e3 00E3 LATIN SMALL LETTER A WITH TILDE\n\u00e4 00E4 LATIN SMALL LETTER A WITH DIAERESIS\n\u00e5 00E5 LATIN SMALL LETTER A WITH RING ABOVE\n\u00e6 00E6 LATIN SMALL LETTER AE\n\u00e7 00E7 LATIN SMALL LETTER C WITH CEDILLA\n\u00e8 00E8 LATIN SMALL LETTER E WITH GRAVE\n\u00e9 00E9 LATIN SMALL LETTER E WITH ACUTE\n\u00ea 00EA LATIN SMALL LETTER E WITH CIRCUMFLEX\n\u00eb 00EB LATIN SMALL LETTER E WITH DIAERESIS\n\u00ec 00EC LATIN SMALL LETTER I WITH GRAVE\n\u00ed 00ED LATIN SMALL LETTER I WITH ACUTE\n\u00ee 00EE LATIN SMALL LETTER I WITH CIRCUMFLEX\n\u00ef 00EF LATIN SMALL LETTER I WITH DIAERESIS\n\u00f0 00F0 LATIN SMALL LETTER ETH\n\u00f1 00F1 LATIN SMALL LETTER N WITH TILDE\n\u00f2 00F2 LATIN SMALL LETTER O WITH GRAVE\n\u00f3 00F3 LATIN SMALL LETTER O WITH ACUTE\n\u00f4 00F4 LATIN SMALL LETTER O WITH CIRCUMFLEX\n\u00f5 00F5 LATIN SMALL LETTER O WITH TILDE\n\u00f6 00F6 LATIN SMALL LETTER O WITH DIAERESIS\n\u00f7 00F7 DIVISION SIGN\n\u00f8 00F8 LATIN SMALL LETTER O WITH STROKE\n\u00f9 00F9 LATIN SMALL LETTER U WITH GRAVE\n\u00fa 00FA LATIN SMALL LETTER U WITH ACUTE\n\u00fb 00FB LATIN SMALL LETTER U WITH CIRCUMFLEX\n\u00fc 00FC LATIN SMALL LETTER U WITH DIAERESIS\n\u00fd 00FD LATIN SMALL LETTER Y WITH ACUTE\n\u00fe 00FE LATIN SMALL LETTER THORN\n\u00ff 00FF LATIN SMALL LETTER Y WITH DIAERESIS\n\u0152 0152 LATIN CAPITAL LIGATURE OE\n\u0153 0153 LATIN SMALL LIGATURE OE\n\u0178 0178 LATIN CAPITAL LETTER Y WITH DIAERESIS\n\u02c6 02C6 MODIFIER LETTER CIRCUMFLEX ACCENT\n\u02dc 02DC SMALL TILDE\n\u2007 2007 FIGURE SPACE\n\u2012 2012 FIGURE DASH\n\u2013 2013 EN DASH\n\u2014 2014 EM DASH\n\u2018 2018 LEFT SINGLE QUOTATION MARK\n\u2019 2019 RIGHT SINGLE QUOTATION MARK\n\u201a 201A SINGLE LOW-9 QUOTATION MARK\n\u201c 201C LEFT DOUBLE QUOTATION MARK\n\u201d 201D RIGHT DOUBLE QUOTATION MARK\n\u201e 201E DOUBLE LOW-9 QUOTATION MARK\n\u2022 2022 BULLET\n\u2026 2026 HORIZONTAL ELLIPSIS\n\u202f 202F NARROW NO-BREAK SPACE\n\u2039 2039 SINGLE LEFT-POINTING ANGLE QUOTATION MARK\n\u203a 203A SINGLE RIGHT-POINTING ANGLE QUOTATION MARK\n\u20ac 20AC EURO SIGN\n\u2122 2122 TRADE MARK SIGN\n\ufb01 FB01 LATIN SMALL LIGATURE FI\n\ufb02 FB02 LATIN SMALL LIGATURE FL\n\u0100 0100 LATIN CAPITAL LETTER A WITH MACRON\n\u0101 0101 LATIN SMALL LETTER A WITH MACRON\n\u0102 0102 LATIN CAPITAL LETTER A WITH BREVE\n\u0103 0103 LATIN SMALL LETTER A WITH BREVE\n\u0104 0104 LATIN CAPITAL LETTER A WITH OGONEK\n\u0105 0105 LATIN SMALL LETTER A WITH OGONEK\n\u0106 0106 LATIN CAPITAL LETTER C WITH ACUTE\n\u0107 0107 LATIN SMALL LETTER C WITH ACUTE\n\u010c 010C LATIN CAPITAL LETTER C WITH CARON\n\u010d 010D LATIN SMALL LETTER C WITH CARON\n\u010e 010E LATIN CAPITAL LETTER D WITH CARON\n\u010f 010F LATIN SMALL LETTER D WITH CARON\n\u0110 0110 LATIN CAPITAL LETTER D WITH STROKE\n\u0111 0111 LATIN SMALL LETTER D WITH STROKE\n\u0112 0112 LATIN CAPITAL LETTER E WITH MACRON\n\u0113 0113 LATIN SMALL LETTER E WITH MACRON\n\u0116 0116 LATIN CAPITAL LETTER E WITH DOT ABOVE\n\u0117 0117 LATIN SMALL LETTER E WITH DOT ABOVE\n\u0118 0118 LATIN CAPITAL LETTER E WITH OGONEK\n\u0119 0119 LATIN SMALL LETTER E WITH OGONEK\n\u011a 011A LATIN CAPITAL LETTER E WITH CARON\n\u011b 011B LATIN SMALL LETTER E WITH CARON\n\u011e 011E LATIN CAPITAL LETTER G WITH BREVE\n\u011f 011F LATIN SMALL LETTER G WITH BREVE\n\u0122 0122 LATIN CAPITAL LETTER G WITH CEDILLA\n\u0123 0123 LATIN SMALL LETTER G WITH CEDILLA\n\u012a 012A LATIN CAPITAL LETTER I WITH MACRON\n\u012b 012B LATIN SMALL LETTER I WITH MACRON\n\u012e 012E LATIN CAPITAL LETTER I WITH OGONEK\n\u012f 012F LATIN SMALL LETTER I WITH OGONEK\n\u0130 0130 LATIN CAPITAL LETTER I WITH DOT ABOVE\n\u0131 0131 LATIN SMALL LETTER DOTLESS I\n\u0136 0136 LATIN CAPITAL LETTER K WITH CEDILLA\n\u0137 0137 LATIN SMALL LETTER K WITH CEDILLA\n\u0139 0139 LATIN CAPITAL LETTER L WITH ACUTE\n\u013a 013A LATIN SMALL LETTER L WITH ACUTE\n\u013b 013B LATIN CAPITAL LETTER L WITH CEDILLA\n\u013c 013C LATIN SMALL LETTER L WITH CEDILLA\n\u013d 013D LATIN CAPITAL LETTER L WITH CARON\n\u013e 013E LATIN SMALL LETTER L WITH CARON\n\u0141 0141 LATIN CAPITAL LETTER L WITH STROKE\n\u0142 0142 LATIN SMALL LETTER L WITH STROKE\n\u0143 0143 LATIN CAPITAL LETTER N WITH ACUTE\n\u0144 0144 LATIN SMALL LETTER N WITH ACUTE\n\u0145 0145 LATIN CAPITAL LETTER N WITH CEDILLA\n\u0146 0146 LATIN SMALL LETTER N WITH CEDILLA\n\u0147 0147 LATIN CAPITAL LETTER N WITH CARON\n\u0148 0148 LATIN SMALL LETTER N WITH CARON\n\u014c 014C LATIN CAPITAL LETTER O WITH MACRON\n\u014d 014D LATIN SMALL LETTER O WITH MACRON\n\u0150 0150 LATIN CAPITAL LETTER O WITH DOUBLE ACUTE\n\u0151 0151 LATIN SMALL LETTER O WITH DOUBLE ACUTE\n\u0154 0154 LATIN CAPITAL LETTER R WITH ACUTE\n\u0155 0155 LATIN SMALL LETTER R WITH ACUTE\n\u0156 0156 LATIN CAPITAL LETTER R WITH CEDILLA\n\u0157 0157 LATIN SMALL LETTER R WITH CEDILLA\n\u0158 0158 LATIN CAPITAL LETTER R WITH CARON\n\u0159 0159 LATIN SMALL LETTER R WITH CARON\n\u015a 015A LATIN CAPITAL LETTER S WITH ACUTE\n\u015b 015B LATIN SMALL LETTER S WITH ACUTE\n\u015e 015E LATIN CAPITAL LETTER S WITH CEDILLA\n\u015f 015F LATIN SMALL LETTER S WITH CEDILLA\n\u0160 0160 LATIN CAPITAL LETTER S WITH CARON\n\u0161 0161 LATIN SMALL LETTER S WITH CARON\n\u0162 0162 LATIN CAPITAL LETTER T WITH CEDILLA\n\u0163 0163 LATIN SMALL LETTER T WITH CEDILLA\n\u0164 0164 LATIN CAPITAL LETTER T WITH CARON\n\u0165 0165 LATIN SMALL LETTER T WITH CARON\n\u016a 016A LATIN CAPITAL LETTER U WITH MACRON\n\u016b 016B LATIN SMALL LETTER U WITH MACRON\n\u016e 016E LATIN CAPITAL LETTER U WITH RING ABOVE\n\u016f 016F LATIN SMALL LETTER U WITH RING ABOVE\n\u0170 0170 LATIN CAPITAL LETTER U WITH DOUBLE ACUTE\n\u0171 0171 LATIN SMALL LETTER U WITH DOUBLE ACUTE\n\u0172 0172 LATIN CAPITAL LETTER U WITH OGONEK\n\u0173 0173 LATIN SMALL LETTER U WITH OGONEK\n\u0178 0178 LATIN CAPITAL LETTER Y WITH DIAERESIS\n\u0179 0179 LATIN CAPITAL LETTER Z WITH ACUTE\n\u017a 017A LATIN SMALL LETTER Z WITH ACUTE\n\u017b 017B LATIN CAPITAL LETTER Z WITH DOT ABOVE\n\u017c 017C LATIN SMALL LETTER Z WITH DOT ABOVE\n\u017d 017D LATIN CAPITAL LETTER Z WITH CARON\n\u017e 017E LATIN SMALL LETTER Z WITH CARON\n\u0218 0218 LATIN CAPITAL LETTER S WITH COMMA BELOW\n\u0219 0219 LATIN SMALL LETTER S WITH COMMA BELOW\n\u021a 021A LATIN CAPITAL LETTER T WITH COMMA BELOW\n\u021b 021B LATIN SMALL LETTER T WITH COMMA BELOW\n```\n. @maya happy to learn that you welcome this improvement.\n\nThe file size will be comparable to the current one. I won't know the exact number until I work on it, but the new font files may actually come in slightly smaller because we took out the license's full text from the fonts.\nIn terms of differences, the design got a bit more polish (intermediate weights are better interpolated; the diacritics were resized), and the TrueType hints were redone from scratch (a comment from a TrueType expert was actually what prompted us to reach out). The font family received other improvements, such as the addition of Greek and Cyrillic, but these are not relevant for your project.\nFeel free to assign me to this issue. I'll report back once I have more news.\n. @maya @mollieru the PR is ready for your review.\n. @maya there have not been any changes. The fonts that I submitted to this repository were based on Roman v2.020 and Italic v1.075; these are still the latest releases.. @maya \n\nI think we can probably create a new issue about removing SVG fonts.\n\nI can take care of that, if you want.\n\nWhat do you recomend as the best place to view all available characters, glyphs, etc\n\nThis PDF is probably the best place. Keep in mind that this is showing the subsetted fonts that were submitted in the PR and not the original fonts. The original fonts have a lot more glyphs and support a lot more languages. If you come across characters that are not supported by the current subsetted fonts, let me know and I'll generate new subset fonts with broader support.\nI will also try to remember to update the fonts here by submitting a PR whenever a new version of Source Sans Pro comes out. I've created a dedicated repository to make that easy and reproducible.\n. @maya Mobile browsers support at least on of these formats: TTF, WOFF, WOFF2.\niOS 4.2 added support for TTFs; until then SVGs were required.\nTTFs have been supported by Android since version 2.2.\nI'm quite confident that removing the SVGs is safe.\n. Good suggestions. I'll make those changes.\n. @maya sure. I also gave some more thought to the removal of the word \"custom\" and I think it should be in there, because the font files were actually modified from the original versions. The original fonts have more characters than the version that is now part of this project, and this project does not include all the styles that are part of the original Source Sans Pro.\n@brittag and @maya what do you think about using, \"The Source Sans Pro font files in assets/fonts are a customized subset of...\"\n. OK, all the changes we've discussed have been made.\n. I'd like to review the new font files before this PR is merged. Please allow me a couple days for that.. @thisisdano I can tell you right now that the new Source Sans files have less character support (and less language support) and are lacking the small cap glyphs, so I expect several issues will regress if you merge this PR as is.\nI would also like to understand why a few new styles (e.g. Black) are included.. @maya that's right. I was about to mention that repo.\nFor the record, even though there are newer versions of Source Sans Pro available, I haven't felt the need to update the subset fonts used by USWDS because the changes have no impact on the subset. \nBut I'm willing to generate new subsets from the latest version in order to get the version number in sync and to add the new weights.. @thisisdano please fetch the Source Sans subsets from here https://github.com/miguelsousa/source-sans-pro-subset/tree/master/subset. Only the roman/upright styles have small caps. So no small caps in the italics.\nThe fonts also contain oldstyle numbers (onum), ligatures (liga), numerators (numr), denominators (dnom) and fractions (frac).. ",
    "goetsu": "yes that it but to be more accurate maybe you could include focus state : \n\"If you adjust the color scheme of the buttons, ensure a minimum contrast ratio of 4.5:1 (for small text, 3:1 for large) for the default, hover, focus and selected states of the button. The disabled state may have less contrast to indicate that it is inactive.\"\n. Legend was announced and read when you reach it but the main Accessibility feature of fieldset legend was not supported by VO ios and OS X < 10.11. Normaly when you reach an input inside a fieldset with a legend the content of the legend must be added to the label value. In case of VO it's not\nhttp://pauljadam.com/demos/voiceover-ios-html-aria-support.html\n. ",
    "MickeyKay": "Yep, got it. Thanks maya!\n. ",
    "joewiz": ":+1: \n. I'm also interested in pagination - both numbered and prev/next.\n. Okay, I'll follow developments.\n. No answers here, but to advance the troubleshooting: Can you paste in the full error now? Which version of OS X? \n. ",
    "skonzem": "In addition to an example of the HTML, it would be very useful to see an example of how to manage a project incorporating these standards over time. As improvements and bugfixes are made to the standards, it seems like a user will want to update their entire standards assets directory periodically. Basically, the standards assets directory would be vendored in, and any custom assets that aren't part of the standard would probably live somewhere else.\nThe Federalist Modern Team Template is a helpful example of how to use the elements, but it doesn't appear to make use of this exact code. I'm not sure whether it's an older version or a superset. For example, I noticed that the Modern Team Template defines styling for the skip-nav element, but that's not present here. If the Modern Team Template were refactored into the part that's these standards and the part that's added on, then it would provide better guidance on how to structure the project directory and update it over time.\n. Just an older Linux box set to ISO-8859-1.\n. To be clear, this is a problem that happens during the \"jekyll build\" phase. According to the SASS Reference (http://sass-lang.com/documentation/file.SASS_REFERENCE.html#encodings):\n\"Sass follows the CSS spec to determine the encoding of a stylesheet, and falls back to the Ruby string encoding.\"\nMy guess is that I'm falling back to Ruby's string encoding, which defaults to my system locale.\n. Nothing too fancy. I copied the assets directory into a new Jekyll site without modification.\n. @maya I think this setting may be per-file. It seems to affect how the file gets read into Jekyll. I just tried reverting this change and adding it to assets/_scss/all.scss and assets/_scss/components/_base.scss, but I got the same problem as before.\n. @maya Yes, I'm actually importing main.css. I just tried adding the line to assets/css/main.scss, and that also did not work.\n. At least in the Bourbon and Neat code included here, the charset declaration is everywhere, as shown by this search. Perhaps that is the way to declare it universally?\n@rogeruiz Ruby 2 something (meaning after a lot of the unicode changes). Forgive me for not being more specific.\n. I'd be happy to amend this PR or submit a follow-up.\n. @maya @msecret I notice there's now a merge conflict due to the new directory structure. Since this PR needs revision anyway, I'm seeking guidance on whether to apply the change to the rest of the files while I'm at it.\nI'm also not 100% clear how to run the bleeding edge version in another site. Would I just copy over the src directory, as I used to copy over the assets directory? In the readme, I only see instructions for using the release copies of the assets, and for running the Design Standards site.\n. @tysongach @maya It's actually the bullet character, \\2022, but yes that approach works. Adding the charset still seems like a good idea given that the developers are using modern computers. The advantage of leaving the character as-is is that it's more readable.\nGulp may be a challenge for my antiquated machine. I could submit an untested PR, or we could file this as an issue and let someone else take over.\n. @rogeruiz Thanks for volunteering to test! I've updated the PR to the \\2022 entity.\n. ",
    "rogeruiz": "The examples contained on the Draft Web Design Standards site are available as examples of HTML. They are markdown files with HTML embedded in them. I agree that these HTML examples should be available to non-technical users that would rather have code to work with rather an going through the docs or building the project locally.\nI see including example HTML files within a dist directory for users of the standard something that we could do to support this.\n. Closing this ticket for now so we can switch over branches easily. Once we move forward on our roadmap 2.0, we can reopen this PR.\n. Closed in light of #1175 \n. @skonzem what version of Ruby are you using?\n. Hey @skonzem, Since #978 and #980 have landed on 18f-pages-staging, we will need to rebase this branch onto 18f-pages-staging. Once you've done that, the src directory contains the files that were once in assets. You can add the charset line to all of the source files. Thank you!\nThe project now uses gulp to automate various tasks around bundling and compiling if you want the compiled distribution files you can follow these steps.\nshell\ncd path/to/repo\ngem install bundler scss_lint\nnpm install\ngulp # which will give you a list of available commands\ngulp build # which will build the `dist` and `dist-gem` directories.\nThere will be more documentation coming soon as it's on our roadmap for the next release.\n. @skonzem If you rebase this branch, I can test and merge this PR for you so you don't have to pull down and run gulp. Let's use the \\2022 entity instead of the character for now. Since it's only one character. We can revisit this if and when we introduce more characters.\n. Took a look at this on my local machine, and the escaped entity gets converted to a bullet character because of my utf-8 system. So having the original entity there works as expected. Thanks for your contribution @skonzem!\n. For this project in particular, I don't think it's necessary to scope it. There also seems to be some npm related errors to linking and scoped packages that would require the documentation to be updated. So I'm going to be closing this issue for now.\n. Seeing some errors around dependencies. I'm going to fix these and that means adding Browserify to the project in order to include other npm_modules along with updating the prepublish step to build the components.js file. Thoughts on how to best do this would be appreciated. Here's a glimpse of issues happening.\n\n. I've since built out a little npm-friendly front-end starter kit that I think would be a good example of how this project would be ingested via npm. You can see it here. Those dependencies can be fixed on a few different ways, but I'll be opening a separate issue for that one.\nThis updated documentation is good to go, I think. If you check out that project I linked to above, you can follow the Install with npm-link instructions in this PR and test what it would be like to require the uswds package into a project.\n. I've added some more documentation around using this package with npm. Because jQuery is a dependency of the code in components.js, I've included instructions that point users to use the included jquery file within the vendors directory. I've also added the .npmignore file that is needed since this project also contains the website and we don't necessarily want to publish that to npm.\n. Thanks @maya. I've added Draft. I'll make sure to be aware of it going forward.\n. The packaged up assets directory is now better aligned with the downloads ZIP file that the website contains. I've updated npm to ignore the styleguide.css file along with the releases/ directory. @msecret Could you take a look at this when you get a chance?\n. @msecret @maya I've updated the documentation and the npmignore around the topic of what files should be included and how user's can use the library once it's installed via npm install. I think this should be good to publish to npm and closes #767 along with #948.\n. I've updated this PR to be rebased off of 18f-pages-staging now with the latest production code at it's base. I've run through it as well, and aside from some updates in the README around the version number I think we are good on documentation at this step.\n@msecret @juliaelman @maya I don't think that this is ready to review because of how closely it is tied to the discover / design phase of the other related card.\nI'm going to close this PR for now and reopen it pointing to the appropriate branch, but the contents of the README here contains the direction for the npm installation instructions I'm going for. I need to split this apart a little more right now in different issues and update those two cards.\n. This is ~~fixed~~ addressed with the documentation provided in #962 \n. :+1: looks good. \n. @msecret and I are in agreement that we will hold off on actually publishing the package to npm until #978 and #980 land on 18f-pages-staging. We reviewed the code and docs yesterday and all should be good to go. This PR does need to be merged into 18f-pages-staging before #980 can be merged in.\nCould someone merge this in please? CC: @maya @juliaelman\n. @msecret This PR has been rebased onto 18f-pages-staging to remove any of the conflicts post the refactor of #974.\n. Closing this ticket for now so we can switch over branches easily. We can cherry-pick these changes into a new branch so that we're not committing 309 changes into 18f-pages-staging. I'm assuming the changes here are just these two commits right? @webinista @maya @msecret \nhttps://github.com/18F/web-design-standards/pull/972/commits/6a5575982982160f32de1fbc6dc3e9b613db2123\nhttps://github.com/18F/web-design-standards/pull/972/commits/a57c6e3a13f5ab848e1b424f636e25042ddba240\n. Actually publishing the releases is still a manual process. This automation workflow facilitates the manual process by generating the bundled / compiled files in two distribution directories. The automation workflow also helps with manual testing of styles and JavaScript within Jekyll site by generating a local copy of the ruby gem before the Jekyll build and serve commands.\n. Would it be possible to have scss-lint only run on files within the _scss directory? The main.scss file for the assets directory only import files from the _scss directory and doesn't need to be linted. This would solve the issue around yaml front-matter.\nAlso, @nickjs, there are two big issues landing in the next release. These issues are #975 and #974. The latter issue will refactor a lot of the project and separate code from the site and the actual library. The former issue is one I'll be working on, and I'd like to have these changes integrated into that PR. For now we can leave this PR open to discuss this more, but eventually we can work in tandem to get these changes in once those two issues are closer to being resolved.\n. Good idea, let's merge this in. Should we include any documentation on this\nso far? Or are we going to be using HoundCI for now since it's a manual\nprocess?\nOn Mon, Feb 1, 2016 at 3:52 PM, Marco Segreto notifications@github.com\nwrote:\n\nI'd be fine adding this now, it's a good start. We could also set the\nconfig to lint _scss and setup HoundCI because it will only complain\nabout new code, which would be a great way to move toward reducing the\nlinting errors.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/18F/web-design-standards/pull/976#issuecomment-178183150\n.\n\n\nRoger Steve Ruiz\n804-539-2255\nInnovation Specialist @ 18F\nGeneral Services Administration\n1800 F St. NW, Washington, DC 20405\n. Hey @nickjs. This looks great! Thanks for taking the time to add scss-lint to the project and using our own 18F standards as a config. For now, the front matter issue is mentioned in the README. After #974 and #975, the work done here will be integrated and the front matter issue should be taken care of. \nThanks again! :rocket: :guitar: \n. This looks great. We should document the new Jekyll development process in the README. I'm not quite sure, based on the documentation in the readme, how these changes affect building the website locally. Could you update that in the readme?\n. Seeing some strange errors on the build for this PR.\nhttps://travis-ci.org/18F/web-design-standards/builds/106562512#L174-L184\nI'm going to attempt to rebuild this, but the new documentation looks good to me. I think it makes more sense to split the repository up into two silos with source, dist, and docs living at the root directory along with the necessary config and dotfiles within this PR. I'm comfortable merging this in once the source directory is created and pushed up. \n. Looks good to me :+1: :rocket: :guitar: :dancer: \n. Right, so politespace has some issues, but it does work as intended. I want to submit a PR that fixes it so we can get rid of this mess.\n// README: This is necessary because politespace doesn't properly export anything\n// in its package.json. TODO: Let's open a PR related to this so we can fix it in Politespace.js\n//\nvar Politespace = require( '../node_modules/politespace/src/politespace' ).Politespace;\nThere isn't a main in the package.json. But, the module isn't being exported as well.\nThe Politespace constructor is just being added to the w variable as a property. In a browser-environment, that w will be the window object. But, when it is being required through browserify the w variable will be equal to an object. This is why the require statement above says .Politespace at the end. The code needs to be refactored a bit in the library to do something along the lines of this to be compatible with browserify.\nif (typeof module === 'object' && typeof module.exports === 'object') {\n    module.exports = PrivateEye;\n  } else {\n    w.PrivateEye = PrivateEye;\n  }\n. The commits here now reflect only the work done for #975 :dancer: \n. Yes. This PR will address everything already in #975 and Trello. As far as posting to Github Releases, I'm not entirely sure of the best way to do it. The point using GH Releases is that we'd be able to Draft releases without needing the commit file changes in the Changelog file. \n. I've updated the README documentation to include instructions on how to use the gulp workflow. I am going to put it here as well.\nInstall\n``` shell\nwithin the root of the project directory\nnpm install --global gulp-cli # necessary, if you don't have gulp installed globally.\nnpm install\ngulp\n```\nCC: @juliaelman @maya @msecret \n. @msecret The issue with browserify consuming uswds.js is related to #962 not being merged in. It contains a .npmignore file that updates what is copied during the prepublish. I've also updated the prepublish command in package.json to properly create the npm distribution directory.\n. Awesome! Tests passing is great :tada:\nThis PR now has all of the base automation tasks resolved.\nStable features\n\n[x] gulp outputs all available Gulp tasks and flags to modify tasks.\n[x] gulp build will create all of the necessary distribution directories ( i.e dist, dist-gem )\n[x] gulp clean-dist will remove all the distribution directories\n[x] gulp production build will run gulp build in production-mode ( i.e. minification / uglification )\n[x] gulp website:build will build the website using the Gem from Github in the _site directory\n[x] gulp website:serve will serve the website using the Gem from Github\n[x] gulp local-gem website:serve will serve the website using a locally built copy of the gem instead of Github.\n[x] gulp local-bundle-clean clean-dist will remove all the files associated with creating a local-gem. This needs to be run before committing since it affects the Gemfile.lock.\n\nThere needs to be better documentation around some of these tasks ( i.e. gulp local-gem ... ), perhaps in the CONTRIBUTING.md guide. The reason these needs good documentation around these workflows is because there are some of caveats / gotchas around locally developing a Ruby gem.\n. I've rebased this branch to reflect the newest merge with 18f-pages-staging => #962. To avoid having to rebase this anymore, I recommend we merge this next before any other PRs. :100: \n. Looks like this was fixed before #978 landed. We'll need to rebase the branch onto 18f-pages-staging and resolve any code conflicts, @maya.\n. Looks good :+1: \n. Thanks @nickjs for opening this back up. Right now the scss-lint is going to be a part of #980. Let's hold on merging, but we can keep it open, this in at the moment. Once 18f-pages-staging is more stable we can review the code against this PR. I'll make sure these changes aren't lost in the shuffle again. Thanks!\n. Hey @nickjs. Good news! #980 is merged in. We'll need to rebase the branch onto 18f-pages-staging and resolve any code conflicts. Once that's done, I can review this and merge it in. Thanks!\n. Awesome. Thanks @nickjs. once this lands in 18f-pages-staging, can you rebase #987 as well? I'll merge this in once it passes. :+1: :rocket: \n. @nickjs ah good catch. We've been discussing this here 18F/us_web_design_standards_gem#15 about whether or not the gem should include the source files or if it should include the compiled files. Seems like we should refactor our gem process to include the bundled / compiled JS and keep the source Sass files within the gem. \n. Closing this PR in favor of #1180 which will cherry-pick these commits.\n. Pairing with @yozlet \nWould be interesting to replace Politespace with FieldKit since Politespace doesn't support not using jQuery. #1351 #1357\n. Hey @nickjs. We'll need to rebase the branch onto 18f-pages-staging and resolve any conflicts. Once that's done, I can review this and merge it in. Thanks!\n. Hey @nickjs, I did a rebase of your branch on what's on 18f-pages-staging and\nI found these two merge conflicts. The first one needs to be there, so I think\nthat your channges on the bottom should be removed, but feel free to modify it\nwith a commit if it introduces any new linter warnings. The second one, I think\nwe can just take your updates, as it seems to just be a whitespace merge conflict.\nThanks!\n``` diff\ndiff --cc src/stylesheets/elements/_list.scss\nindex a6e212c,7a7b3a6..0000000\n--- a/src/stylesheets/elements/_list.scss\n+++ b/src/stylesheets/elements/_list.scss\n@@@ -27,14 -25,8 +25,19 @@@ ol\n    }\n  }\n++<<<<<<< 69a216d9378154df0c759fca72da08506e8cf491\n +ul li {\n +  display: table-row;\n +\n +  &:before {\n +    content: \"\\2022\";\n +    display: table-cell;\n +    padding-right: 0.4em;\n +  }\n++=======\n+ ul li::before {\n+   content: '\u2022';\n++>>>>>>> Fix some scss-lint warnings in _list.scss\n  }\nol li {\n```\n``` diff\ndiff --cc src/stylesheets/core/_utilities.scss\nindex 8462591,454ae1a..0000000\n--- a/src/stylesheets/core/_utilities.scss\n+++ b/src/stylesheets/core/_utilities.scss\n@@@ -5,6 -5,17 +5,20 @@@\n    }\n  }\n++<<<<<<< b7fbc05658138dd433c3bcd2c4fff544c3ee5ecd\n++=======\n+ // Clearfix helper\n+ @mixin clearfix() {\n+   &::after {\n+     content: '.';\n+     display: block;\n+     height: 0;\n+     clear: both;\n+     visibility: hidden;\n+   }\n+ }\n+\n++>>>>>>> Fix lots of scss-lint warnings\n  // Screen reader only helper\n  .usa-sr-only {\n    position: absolute;\n``\n. Closing this PR in favor of #1180 which willcherry-pickthese commits.\n. Hey @tysongach Thanks for this. I wonder if there are any other areas we can leverage Bourbon more. \n. That's a nice feature of Bourbon's mixins to include passingnull` params to prevent resetting margin / padding. \n@tysongach Are the new features anywhere we can review them?\n. This is great! I think this is good to merge in. Thanks @tysongach. Let's\ngreat an issue around updating Bourbon and revisit its use throughout the\ncodebase. We can keep track of the conversation there.\nOn Tue, Feb 9, 2016 at 11:46 AM, Tyson Gach notifications@github.com\nwrote:\n\n@maya https://github.com/maya Watch out for rendering implications with\nyour sr-only() mixin. The off-screen position approach causes the box to\nbe drawn to the size specified, in this 999em, which can decrease\nperformance. We chose to utilize the clip method, for this reason.\nRegarding the prefixing mixins: I think a few of them may have made their\nway into the code [image: :grin:]:\n- _skipnav.scss\n  https://github.com/18F/web-design-standards/blob/18f-pages-staging/src/stylesheets/components/_skipnav.scss#L2\n- _skipnav.scss\n  https://github.com/18F/web-design-standards/blob/18f-pages-staging/src/stylesheets/components/_skipnav.scss#L12\n- styleguide.scss\n  https://github.com/18F/web-design-standards/blob/18f-pages-staging/docs/assets/css/styleguide.scss#L153\n- Maybe more\u2026but a couple quick searches returned these.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/18F/web-design-standards/pull/989#issuecomment-181951168\n.\n\n\nRoger Steve Ruiz\n804-539-2255\nInnovation Specialist @ 18F\nGeneral Services Administration\n1800 F St. NW, Washington, DC 20405\n. Good catch @pra85! Thank you for this PR. It looks good to merge in. :tada:\n. @msecret brought up a good point here https://github.com/18F/web-design-standards/pull/1048#issuecomment-199391657 about leveraging Bourbon Neat's media mixin rather than using our own. I agree with this, but it requires us to refactor our current calls to [uswds-]media with Neat's version of media. Ours only takes one argument, while theirs takes three.\n. we should get rid of the cleanup variable in the website.js file instead of including it. gulp-cleanup isn't being used for anything.\ndiff\ndiff --git a/config/gulp/website.js b/config/gulp/website.js\nindex 3c06d5d..e47e886 100644\n--- a/config/gulp/website.js\n+++ b/config/gulp/website.js\n@@ -2,7 +2,6 @@ var gulp = require('gulp');\n var dutil = require('./doc-util');\n var process = require('child_process');\n var spawn = process.spawn;\n-var cleanup = require('gulp-cleanup');\n var runSequence = require('run-sequence');\n var clean = require('gulp-clean');\n. Looks good to me :+1: :rocket: \n. I was able to test this in a new project and had everything run correctly via just using require('uswds'). Looks like browserify was choking on the relative paths in the require when the dist/js/uswds.js file was being consumed. \n. Yeah, I believe so @msecret. I'm going to do more testing on this and post here / submit a patch. I'm not sure which version would take precedence. I'll report back here about whether we'll need documentation to clear this up.\n. @msecret Yeah, I'm not sure about the contributor's list. We could add a file. This list is specifically for the npmjs.org registry.\nAs far as jQuery version number, I'm willing to update it to be the latest or something else. I made it 1.11.3 because of what is included in the docs/assets/js/vendor/ directory.\n. Hmm. That is true. Since they would need to require it themselves and it would lead to errors. So anything that is JS related will need to be a dependencies item. \n. @msecret Running into the following error when I try using node-sass on the command line.\n``` sh\n\nnpm-front-end-starter@1.0.0 build-css /Users/rogerruiz/Developer/npm-front-end-starter\ncat assets/style.scss | node-sass --output-style compressed > dist.css\n\n{\n  \"formatted\": \"Error: File to import not found or unreadable: ../../node_modules/bourbon/app/assets/stylesheets/bourbon\\n       Parent style sheet: /Users/rogerruiz/Developer/npm-front-end-starter/node_modules/uswds/src/stylesheets/all.scss\\n        on line 3 of node_modules/uswds/src/stylesheets/all.scss\\n>> @import '../../node_modules/bourbon/app/assets/stylesheets/bourbon';\\n   ^\\n\",\n  \"message\": \"File to import not found or unreadable: ../../node_modules/bourbon/app/assets/stylesheets/bourbon\\nParent style sheet: /Users/rogerruiz/Developer/npm-front-end-starter/node_modules/uswds/src/stylesheets/all.scss\",\n  \"column\": 1,\n  \"line\": 3,\n  \"file\": \"/Users/rogerruiz/Developer/npm-front-end-starter/node_modules/uswds/src/stylesheets/all.scss\",\n  \"status\": 1\n}\n``\n. That error above looks like it's related to the file paths being relative to where I run thenode-sasscommand.\n. @msecret Well this is within another project that doesn't havegulpsupport. Maybe I'm not testing this properly? I was expecting to be able to include theuswdspackage after installing it using the following code in my _project's_scss` file.\nscss\n@import 'node_modules/uswds/src/stylesheets/all';\n. @msecret Cool. The project I'm using is this one https://github.com/rogeruiz/npm-front-end-starter\n. I'm still seeing an error here\n``` sh\n\nnpm-front-end-starter@1.0.1 build /Users/rogerruiz/Developer/npm-front-end-starter\nnpm run build-css && npm run build-js\nnpm-front-end-starter@1.0.1 build-css /Users/rogerruiz/Developer/npm-front-end-starter\nnode-sass --output-style compressed assets/style.scss dist.css\n\n{\n  \"formatted\": \"Error: File to import not found or unreadable: ../../node_modules/bourbon/app/assets/stylesheets/bourbon\\n       Parent style sheet: /Users/rogerruiz/Developer/npm-front-end-starter/node_modules/uswds/src/stylesheets/all.scss\\n        on line 3 of node_modules/uswds/src/stylesheets/all.scss\\n>> @import '../../node_modules/bourbon/app/assets/stylesheets/bourbon';\\n   ^\\n\",\n  \"message\": \"File to import not found or unreadable: ../../node_modules/bourbon/app/assets/stylesheets/bourbon\\nParent style sheet: /Users/rogerruiz/Developer/npm-front-end-starter/node_modules/uswds/src/stylesheets/all.scss\",\n  \"column\": 1,\n  \"line\": 3,\n  \"file\": \"/Users/rogerruiz/Developer/npm-front-end-starter/node_modules/uswds/src/stylesheets/all.scss\",\n  \"status\": 1\n}\n``\n. @msecret All I ran in thenpm-front-end-starter` repo was this command. I was downloading it from Github.\nsh\nnpm install --save git+https://github.com/18F/web-design-standards#update-package-json\nI checked in the node_modules/uswds/ directory to make sure it was installing the correct branch. I'm going to investigate this morning and I'll post anything I find here.\n. Seems like doing the above install, didn't run any of the hooks for the uswds package to install it's own dependencies. I'm going to look into the npm documentation to see why that would be. After going into the node_modules/uswds/ directory and running an npm install I was able to get it to work properly. The reason being here that the npm install within the uswds package will create a node_modules/ directory which will allow for the @import for bourbon and bourbon-neat to resolve properly.\n``` sh\n\nnpm-front-end-starter@1.0.1 build /Users/rogerruiz/Developer/npm-front-end-starter\nnpm run build-css && npm run build-js\nnpm-front-end-starter@1.0.1 build-css /Users/rogerruiz/Developer/npm-front-end-starter\nnode-sass --output-style compressed assets/style.scss dist.css\n\nRendering Complete, saving .css file...\nWrote CSS to /Users/rogerruiz/Developer/npm-front-end-starter/dist.css\n\nnpm-front-end-starter@1.0.1 build-js /Users/rogerruiz/Developer/npm-front-end-starter\nbrowserify assets/start.js > dist.js\n``\n. ~~I did run into this issue as well, when I ran annpm installwithin thenode_modules/uswds/directory.~~ This issue is related to the following comment below aroundnpm v3` flattening the dependency tree.\n\nsh\n~/Developer/npm-front-end-starter/node_modules/uswds master*\n      \u276f gulp scss-lint                                                                                                                                                                                  ruby-2.2.3\n[11:05:48] Using gulpfile ~/Developer/npm-front-end-starter/node_modules/uswds/gulpfile.js\n[11:05:48] Starting 'scss-lint'...\n[11:05:48] 'scss-lint' errored after 663 ms\n[11:05:48] Error in plugin 'gulp-scss-lint'\nMessage:\n    Input file did not exist or was not readable\n:mag: Investigating this error too before we can :shipit:  :mag_right: \n.  @msecret I figured it out. The problem is with the way npm v2 and npm v3 handle dependency nesting.\nRead more here => https://docs.npmjs.com/how-npm-works/npm3\n\nWhile npm2 installs all dependencies in a nested way, npm3 tries to mitigate the deep trees and redundancy that such nesting causes. npm3 attempts this by installing some secondary dependencies (dependencies of dependencies) in a flat way, in the same directory as the primary dependency that requires it.\n\nHere's a screenshot after an npm install and the resulting node_modules/ directory.\n\n:thought_balloon: My suggestion would be to force npm v2 since we're looking to have nested dependencies or maybe we actually need to use something like eyeglass in order to properly resolve these paths? :thought_balloon: \n. Thanks for the suggestion @aredridel. The relative path that we're trying to match is within a scss file though. Would resolve still work in this case?\n. Cool. Sounds possible @aredridel at least.\n@msecret looks like we'll have to do something about managing those sass dependencies in the prepublish hook.\n. Looks good. There is a small change that needs to happen for npm install [...] to work. Because of how the package gets built we need to remove .scss-lint.yml from the .npmignore file.\ndiff\ndiff --git a/.npmignore b/.npmignore\nindex 2bc134f..e1008f5 100644\n--- a/.npmignore\n+++ b/.npmignore\n@@ -13,7 +13,6 @@ dist-gem/\n .travis.yml\n _config.yml\n _config_18f_pages.yml\n-.scss-lint.yml\n Gemfile\n Gemfile.lock\n go\nWithout it, npm run prepublish was complaining about an scss-lint error.\n[11:06:33] 'scss-lint' errored after 2.01 s\n[11:06:33] Error in plugin 'gulp-scss-lint'\nMessage:\n    Input file did not exist or was not readable\n[11:06:33] 'build' errored after 2.14 s\n[11:06:33] Error in plugin 'run-sequence'\nMessage:\n    An error occured in task 'scss-lint'.\n. Looks good to merge in based on the initial scope of just managing dependencies for Sass/CSS/JavaScript.\n\nThough, we need to update the documentation around fonts and images in the Readme. There isn't a good way to reference them or copy them over using npm. We found a solution in the ffd-microsite around this but the specifics would be project based.\nExamples using gulp for images and fonts:\n- https://github.com/18F/ffd-microsite/commit/25a79d31f83f58d2c6037e149f8753beff3bd162#diff-b9e12334e9eafd8341a6107dd98510c9R122\n- https://github.com/18F/ffd-microsite/commit/11796376721d92227e6bc97d1b3d9a24b40c5a05#diff-b9e12334e9eafd8341a6107dd98510c9R128\nTo get the screenshot above working properly, I needed to manually copy those directories out of the node_modules/uswds/ directory by running:\n``` sh\n~/Developer/npm-front-end-starter integrate-uswds*\n\u276f\u276f\u276f\u276f\u276f\u276f\u276f cp -r node_modules/uswds/dist/fonts ./fonts\n~/Developer/npm-front-end-starter integrate-uswds*\n\u276f\u276f\u276f\u276f\u276f\u276f\u276f cp -r node_modules/uswds/dist/img ./img\n```\nWe could have some language in the README like:\n\nThe compiled and bundled CSS expect to find /fonts and /img directories at the root level of the web server. For example: http://localhost:8000/fonts/merriweather-bold-webfont.woff2 and http://localhost:8000/img/minus.svg\n\n:point_up: This would be a great time to standardize on whether want the expectation of having /fonts and /img being at the root of the web server or having them prefixed with an /assets directory. User's bringing the uswds package won't have the ability to update these paths without editing the source. This issue was brought up here I believe. https://github.com/18F/web-design-standards/issues/1007\nI don't think this can make it into this particular release for v0.9.0 and can be something that we should iterate on in further releases.\n:thought_balloon: @maya @juliaelman @msecret \n. Looks good to be merged in. Because a few PRs ( i.e. #1032 ) related to the release depend on these changes, I'm landing this in 18f-pages-staging. \n. Looks good to me :+1: :rocket: \n. I think this is a good approach @maya. I like the idea of having variables for \nthe value section. What about having @mixins for the property part as \nwell? Something along the lines of:\n``` scss\n$usa-image-path: 'images';\n@mixin usa-property-builder ( $prop, $value ) {\n    $prop: $value;\n}\nbody.ruby-on-rails {\n    @include usa-property-builder( \n        background-image, \n        asset-path( '#{$usa-image-path}/foo.png' )\n    );\n}\n```\nThis could go a long way to address some of the issues in 18f/us_web_design_standards_gem#15\n. Thanks @msecret and @maya. I updated the heading. Let me know if there is anything else we'd like to update here. I'll also wait for @kategarklavs to weigh in as well.\n. @maya yes! I agree with that thought. I'll add a note mentioning that this is a pre published release based on what @msecret said in #1003\n. @maya I've updated the docs with a quoted disclaimer around the volatility of using Github to integrate the uswds package in an npm project.\n. CC: @maya, @msecret, @juliaelman\n. Looking through my trove of notes on this subject, I found this mega PULL_REQUEST_TEMPLATE that I've used parts of. I don't think we need to actually use all of it. We could pick and choose some sections from this. I like the idea of including a checklist that will help contributors get their PR reviewed and merged quickly.\n\n\n\nShort description explaining the high-level reason for the pull request\nAdditions\n\n\n\nRemovals\n\n\n\nChanges\n\n\n\nTesting\n\n\n\nReview\n\n@user\n\nScreenshots\nTodos\n\n\n\nChecklist\n\n[ ] Changes are limited to a single goal (no scope creep)\n[ ] Code can be automatically merged (no conflicts)\n[ ] Code follows the standards laid out in the front end playbook\n[ ] Passes all existing automated tests\n[ ] New functions include new tests\n[ ] New functions are documented (with a description, list of inputs, and expected output)\n[ ] Placeholder code is flagged\n[ ] Visually tested in supported browsers and devices \n[ ] Project documentation has been updated (including the \"Unreleased\" section of the CHANGELOG)\n. Whoops, I just noticed that some of the npm updates that were made to the README here #1009 were removed in this PR. No worries, I'm going to submit a new PR for the npm section.\n. Closing this ticket for now so we can switch over branches easily. We can reopen this once we have our new branches set up.\n. Looks good to me. This is the current state of the uswds package since it isn't on the npmjs.org registry yet. Since people will be coming to this repo expecting to be able to npm install ... this repository, they'll need to know how to do it using the github... URL instead of the command that is currently in the repository.\n\n:thought_balloon: @msecret, @juliaelman ? #1003 brings up the issue that npm install --save[-dev] uswds doesn't work. I don't believe that that issue would have been opened if the original README had had these instructions. These instructions were in 18f-pages-staging when #1009 landed.\n. Does it make sense to merge this in @maya? Since we're going to be releasing v0.9.0 soon maybe we can keep this PR open and update it to the new version once we have that ~~figured out~~ ready.\n. Looks good to me. Include the 'single-quotes'will prevent globbing in the terminal :+1: \n. @kategarklavs The copy edits have been made to the Readme\n@maya I've added the Contributing updates around using gulp to build, preview, and build the website as well\n. @msecret try a bundle install in the repo\n. @msecret I'm thinking it might make sense to include some \nnpm start\nnpm run build\nnpm test\nCommands that can handle gem installation and cleaning of temp directories. And a standard way to watch and serve the website. These commands would still use gulp if appropriate. \n. I added in some aliases, @juliaelman @msecret. I don't think we need to update our documentation though since these are just light wrappers around npm / package.json conventions.\n. Giving some more context around the discussion in all the line-notes.\n- [x] Update the Downloads section of the README.md with the minified\n  versions.\n- [x] Possibly update the examples in the Downloads section with a path\n  that includes lib.\n. @juliaelman @maya @msecret This is good to be reviewed now with the updated suggestions in the checklist! :tada: \n. ah yes! this is already in #1035 @juliaelman \n. @kategarklavs I only added to what was already here in the contributing docs, but if you could take a look at this that'd be ~~good~~ helpful.\n. @kategarklavs and @msecret I've updated the branch and addressed your comments :tada: let me know if there is anything else this needs before we can merge it in. Thanks! :rocket: \n. I still consider this PR to be a work in progress until all linting errors and warnings are fixed.\nI updated the JS to pass the linter. The Sass files are waiting on #985 and #987 to be merged in since @nickjs has a large amount of fixes on those branches / PRs.\n. Closing for now. I will open an issue for this.\n. \nWith the new copy updates, the ZIP file with only the code assets is now called UI Components.\n. Looks good! \n. Hey @tysongach! Thanks for this PR. This is great in helping us migrate to Bourbon 5.0 ( #994 ). I don't think we'll want to have any visual regressions due to removing the prefixes. Specifically for IE9 and Safari iOS 8.4 which require the prefix. Since we now have a gulp asset-pipeline, could you add Autoprefixer to this PR as well?\nHere are two gulp plugins that you can use: gulp-autoprefixer and gulp-postcss using the npm autoprefixer package. Either one is fine for now as it will prevent CSS regressions in the targeted browsers I mentioned above. Let me know if you need any help getting them in the asset pipeline. You will need to make sure you add the transformations to the defaultStream and the minifiedStream found here.\nThanks again!\n. Sounds good. Let's leave it open and we'll need you to rebase this later on\nso we can merge it in. :+1:\nif ( typos ) blame( fingers );\nRoger Steve Ruiz ::: XFBB\n202-600-1208\nOn Mar 15, 2016, at 2:54 PM, Tyson Gach notifications@github.com wrote:\n@rogeruiz https://github.com/rogeruiz Ah, I assumed Autoprefixer was\nalready in place! If it\u2019s alright, I\u2019ll leave this PR as is and your team\ncan get gulp-autoprefixer set up in another PR, as I don\u2019t have the\nbandwidth at the moment.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly or view it on GitHub\nhttps://github.com/18F/web-design-standards/pull/1046#issuecomment-196971526\n. Closed by the work on #1176 \n. Hey @tysongach! Thanks for this PR. According to the W3 HTML spec, the [type=\"image\"] attribute can be used to select an x and y position from an image.\n\nA coordinate, relative to a particular image's size, with the extra semantic that it must be the last value selected and initiates form submission\n\nSources: \n- Attributes: Input types table\n- 4.10.5.1.19 Image Button state (type=image)\nI think we should keep this in the Standards for now, although we may refactor the CSS if we create a UI component for input[type=\"image\"].\n. Hey @tysongach! Thanks for this PR. This looks good to me. :tada: :+1:\n. Hmm, sorry about this, @tysongach. I can help you debug this. @msecret, I took a further look and I'm seeing some visual regressions comparing your branch to 18f-pages.\n\n\n. @tysongach Ah Jekyll does not, but the gulp automation should. How are you running the server, try using npm start after rebasing what's on 18f-pages-staging.\n. Ah yes. This is due to a refactor in the way we deploy the /docs site. We'll need to add some documentation on how to commit changes to /docs, /dist, and /src. :thought_balloon: \n. @maya From what I can see, gulp is successfully copying the files over\n\u25be docs/\n  ...\n  \u25be _scss/\n    \u25b8 components/\n    \u25b8 core/\n    \u25b8 elements/\n    \u25b8 lib/\n    \u25be utilities/\n        _grid.scss\n        _usa-sr-only.scss\n      .DS_Store\n      _uswds.scss\n. @msecret It seems like the ordering of the _grid.scss file is the culprit.\n@import 'utilities/grid';\n@import 'core/mixins';\nThe regression goes away when _grid.scss is pulled in before _mixins.scss.\n. @tysongach Great catch on two media mixins. I'm seeing that we're only using \nit for the grid.scss and then using our custom media mixin for uswds \nspecific styles. For now, I think prefixing ours with uswds- would be the best\nway to make sure we're not clobbering the media mixin in Bourbon.\nI think we can either merge this in or I can create a new PR with your changes \nand mine and we close this one. Let me know. You can apply the patch file I'm \nattaching using the following command, once you unzip the uswds-media.patch\nfile:\nsh\ngit apply uswds-media.patch\nuswds-media.patch.zip\nHere's a long diff of where we need to change it. \n``` diff\ndiff --git a/src/stylesheets/components/_alerts.scss b/src/stylesheets/components/_alerts.scss\nindex cb390ce..4663419 100644\n--- a/src/stylesheets/components/_alerts.scss\n+++ b/src/stylesheets/components/_alerts.scss\n@@ -6,7 +6,7 @@\n   margin-top: 1.5em;\n   padding: 1em;\n\n@include media($medium-screen) {\n@include uswds-media($medium-screen) {\n     background-size: 5.2rem;\n   }\n\n@@ -26,7 +26,7 @@\n   padding-left: 3.5rem;\n   vertical-align: top;\n\n@include media($medium-screen) {\n@include uswds-media($medium-screen) {\n     padding-left: 5rem;\n   }\n }\n@@ -34,8 +34,8 @@\n .usa-alert-heading {\n   margin-bottom: .3rem;\n   margin-top: 0;\n\n@include media($medium-screen) {\n+\n\n@include uswds-media($medium-screen) {\n     margin-top: .3rem;\n   }\n }\ndiff --git a/src/stylesheets/components/_disclaimer.scss b/src/stylesheets/components/_disclaimer.scss\nindex f5cc6d4..b0ddf5b 100644\n--- a/src/stylesheets/components/_disclaimer.scss\n+++ b/src/stylesheets/components/_disclaimer.scss\n@@ -4,7 +4,7 @@\n   padding-bottom: .5rem;\n   padding-top: .5rem;\n\n\n@include media($small-screen) {\n\n\n@include uswds-media($small-screen) {\n     font-size: $h5-font-size;\n   }\n }\n@@ -15,7 +15,7 @@\n   display: none;\n   float: right;\n\n\n@include media($large-screen) {\n\n\n@include uswds-media($large-screen) {\n     display: block;\n   }\n }\ndiff --git a/src/stylesheets/components/_footer.scss b/src/stylesheets/components/_footer.scss\nindex 07700dc..71ea7b0 100644\n--- a/src/stylesheets/components/_footer.scss\n+++ b/src/stylesheets/components/_footer.scss\n@@ -11,7 +11,7 @@\n     padding-bottom: 2rem;\n     padding-top: 2rem;\n\n\n@include media($medium-screen) {\n\n\n@include uswds-media($medium-screen) {\n       border-top: none;\n     }\n   }\n@@ -33,7 +33,7 @@\n     padding-left: 2.5rem;\n     padding-right: 2.5rem;\n\n\n@include media($medium-screen) {\n\n\n@include uswds-media($medium-screen) {\n       padding-left: 0;\n       padding-right: 0;\n     }\n@@ -41,14 +41,14 @@\n     li {\n       margin-left: 1rem;\n\n\n@include media($medium-screen) {\n\n@include uswds-media($medium-screen) {\n         margin-left: 0;\n       }\n     } \n   }\n\n.usa-grid-full {\n-    @include media($medium-screen) {\n+    @include uswds-media($medium-screen) {\n       padding-left: 2.5rem;\n       padding-right: 2.5rem;\n     }\n@@ -58,15 +58,15 @@\n .usa-footer-medium {\n   .usa-footer-primary-section {\n     padding: 0;\n-  \n-    @include media($medium-screen) {\n+\n+    @include uswds-media($medium-screen) {\n       padding-bottom: 1rem;\n       padding-top: 1rem;\n     }\n   }\n.usa-footer-nav ul {\n-    @include media($medium-screen) {\n+    @include uswds-media($medium-screen) {\n       align-items: center;\n       display: flex;\n     }\n@@ -80,8 +80,8 @@\n.usa-footer-primary-section {\n     padding-bottom: 2rem;\n-  \n-    @include media($medium-screen) {\n+\n+    @include uswds-media($medium-screen) {\n       padding-bottom: 1rem;\n       padding-top: 1rem;\n@@ -98,14 +98,14 @@ li.usa-footer-primary-content,\n li.usa-footer-primary-content {\n   border-top: 1px solid $color-base;      \n\n@include media($medium-screen) {\n@include uswds-media($medium-screen) {\n     border: none;\n   }\n\n&:last-child {\n     border-bottom: 1px solid $color-base;\n\n@include media($medium-screen) {\n\n@include uswds-media($medium-screen) {\n       border-bottom: none;\n     }\n   }\n@@ -116,7 +116,7 @@ li.usa-footer-primary-content {\n   padding-left: 2.5rem;\n   padding-right: 2.5rem;\n\n\n@include media($medium-screen) {\n\n@include uswds-media($medium-screen) {\n     float: right;\n     padding: 0;\n   }\n@@ -147,20 +147,20 @@ li.usa-footer-primary-content {\n }\n\n.usa-footer-big-secondary-section {\n-  @include media($medium-screen) {\n+  @include uswds-media($medium-screen) {\n     padding-top: 5rem;\n   }\n }\n.usa-footer-contact-links {\n-  @include media($medium-screen) {\n+  @include uswds-media($medium-screen) {\n     text-align: right;\n   }\n }\n.usa-footer-big {\n   .usa-footer-primary-section {\n-    @include media($medium-screen) {\n+    @include uswds-media($medium-screen) {\n       padding-bottom: 4rem;\n       padding-top: 3rem;\n     }\n@@ -169,14 +169,14 @@ li.usa-footer-primary-content {\n   ul {\n     padding-bottom: 2.5rem;\n\n@include media($medium-screen) {\n\n@include uswds-media($medium-screen) {\n       padding-bottom: 0;\n     }\n&:last-child {\n   border-bottom: 1px solid $color-base;\n\n\n@include media($medium-screen) {\n\n\n@include uswds-media($medium-screen) {\n         border-bottom: none;\n       }\n     }\n@@ -193,7 +193,7 @@ li.usa-footer-primary-content {\n       background-size: 1.3rem;\n       padding-left: 3.5rem;\n\n\n@include media($medium-screen) {\n\n\n@include uswds-media($medium-screen) {\n         background: none;\n         padding-bottom: 0;\n         padding-left: 0;\n@@ -209,7 +209,7 @@ li.usa-footer-primary-content {\n         cursor: pointer;\n         margin: 0;\n\n\n@include media($medium-screen) {\n\n@include uswds-media($medium-screen) {\n           background: none;\n           padding-left: 0;\n         }      \n@@ -226,7 +226,7 @@ li.usa-footer-primary-content {\n }\n\n.usa-sign_up-header {\n-  @include media($medium-screen) {\n+  @include uswds-media($medium-screen) {\n     margin: 0;\n     padding: 2rem 0;\n   }\n@@ -247,9 +247,9 @@ li.usa-footer-primary-content {\n.usa-footer-contact-heading {\n   margin-top: 0;\n-\n-  @include media($medium-screen) {\n-    margin-top: 1rem;\n+\n+  @include uswds-media($medium-screen) {\n+    margin-top: 1rem;\n   }\n }\n@@ -257,7 +257,7 @@ li.usa-footer-primary-content {\n   display: block;\n   padding-top: 1rem;\n\n@include media($medium-screen) {\n@include uswds-media($medium-screen) {\n     display: inline-block;\n     padding-left: 1em;\n   }\ndiff --git a/src/stylesheets/components/_forms.scss b/src/stylesheets/components/_forms.scss\nindex 2998822..c137119 100644\n--- a/src/stylesheets/components/_forms.scss\n+++ b/src/stylesheets/components/_forms.scss\n@@ -1,7 +1,7 @@\n $usa-form-width: 32rem;\n\nform {\n-  @include media($medium-screen) {\n+  @include uswds-media($medium-screen) {\n     max-width: $usa-form-width;\n   }\n@@ -15,7 +15,7 @@ form {\n     margin-bottom: 1.5em;\n     margin-top: 2.5rem;\n\n@include media($medium-screen) {\n@include uswds-media($medium-screen) {\n       padding-left: 2.7em;\n       padding-right: 2.7em;\n       width: auto;\n@@ -45,37 +45,37 @@ fieldset {\n }\n\n.usa-form-large {\n-  @include media($medium-screen) {\n+  @include uswds-media($medium-screen) {\n     max-width: 46rem;\n   }\n }\ninput.usa-input-tiny {\n-  @include media($medium-screen) {\n+  @include uswds-media($medium-screen) {\n     max-width: 6rem;\n   }\n }\ninput.usa-input-medium {\n-  @include media($medium-screen) {\n+  @include uswds-media($medium-screen) {\n     max-width: 12rem;\n   }\n }\n.usa-input-grid {\n-  @include media($medium-screen) {\n+  @include uswds-media($medium-screen) {\n     padding-right: 5%;\n   }\n }\n.usa-input-grid:last-of-type {\n-  @include media($medium-screen) {\n+  @include uswds-media($medium-screen) {\n     padding-right: 0;\n   }\n }\n.usa-input-grid-small {\n-  @include media($medium-screen) {\n+  @include uswds-media($medium-screen) {\n     float: left;\n     width: 35%;\n   }\n@@ -90,7 +90,7 @@ input.usa-input-medium {\n }\n.usa-input-grid-medium {\n-  @include media($medium-screen) {\n+  @include uswds-media($medium-screen) {\n     float: left;\n     width: 65%;\n   }\n@@ -105,7 +105,7 @@ input.usa-input-medium {\n }\n.usa-input-grid-large {\n-  @include media($medium-screen) {\n+  @include uswds-media($medium-screen) {\n     float: left;\n     width: 100%;\n   }\ndiff --git a/src/stylesheets/components/_search.scss b/src/stylesheets/components/_search.scss\nindex 33cebac..5a14331 100644\n--- a/src/stylesheets/components/_search.scss\n+++ b/src/stylesheets/components/_search.scss\n@@ -27,7 +27,7 @@ $usa-btn-big-width:     11.6rem;\n     padding-top: 0;\n     width: calc(100% - #{$usa-btn-small-width});\n\n@include media($small-screen) {\n\n@include uswds-media($small-screen) {\n       width: calc(100% - #{$usa-btn-medium-width});\n     }\n   }\n@@ -42,7 +42,7 @@ $usa-btn-big-width:     11.6rem;\n     padding: 0;\n     width: $usa-btn-small-width;\n\n\n@include media($small-screen) {\n\n\n@include uswds-media($small-screen) {\n       background-image: none;\n       width: $usa-btn-medium-width;\n     }\n@@ -51,13 +51,13 @@ $usa-btn-big-width:     11.6rem;\n   .usa-search-submit-text {\n     display: none;\n\n\n@include media($small-screen) {\n\n@include uswds-media($small-screen) {\n       display: block;\n     }\n   }\n\n&.usa-search-big {\n-    @include media($small-screen) {\n+    @include uswds-media($small-screen) {\n       $height: 4.4rem;\n       $width: $usa-btn-big-width;\n@@ -77,7 +77,7 @@ $usa-btn-big-width:     11.6rem;\n   }\n&.usa-search-small {\n-    @include media($small-screen) {\n+    @include uswds-media($small-screen) {\n       $width: $usa-btn-small-width;\n   [type=\"search\"],\n\ndiff --git a/src/stylesheets/core/_mixins.scss b/src/stylesheets/core/_mixins.scss\nindex e8e07e0..0b6d897 100644\n--- a/src/stylesheets/core/_mixins.scss\n+++ b/src/stylesheets/core/_mixins.scss\n@@ -1,5 +1,5 @@\n // Mobile-first media query helper\n-@mixin media($bp) {\n+@mixin uswds-media($bp) {\n   @media screen and (min-width: #{$bp}) {\n     @content;\n   }\ndiff --git a/src/stylesheets/elements/_buttons.scss b/src/stylesheets/elements/_buttons.scss\nindex 54d9dfe..e277d31 100644\n--- a/src/stylesheets/elements/_buttons.scss\n+++ b/src/stylesheets/elements/_buttons.scss\n@@ -34,7 +34,7 @@ button,\n   width: 100%;\n   -webkit-font-smoothing: antialiased;\n\n@include media($small-screen) {\n@include uswds-media($small-screen) {\n     width: auto;\n   }\n\ndiff --git a/src/stylesheets/elements/_typography.scss b/src/stylesheets/elements/_typography.scss\nindex 2b7118b..11deda3 100644\n--- a/src/stylesheets/elements/_typography.scss\n+++ b/src/stylesheets/elements/_typography.scss\n@@ -153,11 +153,11 @@ p,\n   @include h3();\n   margin-bottom: 0;\n\n@include media($small-screen) {\n\n@include uswds-media($small-screen) {\n     @include h1();\n   }\n\n\n@include media($medium-screen) {\n\n@include uswds-media($medium-screen) {\n     @include title();\n   }\n }\n\n``\n. @msecret Let's comment our thoughts on this in #994. I agree with @tysongach about merging this in. With this PR landed, we're one of sum closer to leveraging Bourbon more. :+1: \n. Closing this ticket for now so we can switch over branches easily. Once we have a solution for the@include mediaissue, we can reopen this PR.\n. Hey @tysongach! Thanks for this PR. This looks good to me. Thanks for helping us leverage Bourbon more ( #994 ), fixing some whitespace, and adding the!defaults`. :+1: :100:\n. Yay! All tests passed! :tada: :sparkles: \n\nhttps://travis-ci.org/18F/web-design-standards/builds/115404938#L1262\n. We're waiting for one more PR from @maya to get some consistency around these parts of the README\nuswds-0.9.0/\n  \u251c\u2500\u2500 js/\n  \u2502   \u251c\u2500\u2500 uswds.min.js.map\n  \u2502   \u251c\u2500\u2500 uswds.min.js\n  \u2502   \u2514\u2500\u2500 uswds.js\n  \u251c\u2500\u2500 css/\n  \u2502   \u251c\u2500\u2500 uswds.min.css.map\n  \u2502   \u251c\u2500\u2500 uswds.min.css\n  \u2502   \u2514\u2500\u2500 uswds.css\n  \u251c\u2500\u2500 img/\n  \u2502   \u251c\u2500\u2500 social-icons/\n  \u2502   \u251c\u2500\u2500 favicons/\n  \u2502   \u251c\u2500\u2500 alerts/\n  \u2514\u2500\u2500 fonts/\n- node_modules/uswds/\n  - dist/\n    - css/\n    - fonts/\n    - img/\n    - js/\n  - src/\n    - fonts/\n    - img/\n    - js/\n    - stylesheets/\n. Awesome! Thanks @maya for catching and fixing this! :tada: \n. Seems like it's not necessary to add this and have the site build twice.\n. Thanks @bsmithgall! This issue has been resolved in #1059 :tada: \n. This PR closes #1058 \n. Closing this PR in favor of #1180 which will cherry-pick these commits.\n. Forgot to ping @kategarklavs on this one. Could you take a look at this documentation for committing files to the project? Thanks!\n. Thanks @kategarklavs. I've updated the PR with your suggestions. :+1: \n. I'm quoting the changes in this comment for better visibility:\n\nThe standards embrace Progressive Enhancement, which is a web development strategy with accessibility and responsiveness at its heart. Server-side languages and frameworks are leveraged for the majority of HTML generation. These pages are enhanced with CSS to create a rich user experience and design. Finally, client-side languages (like JavaScript) are applied to add the final layer of enhancement to the experience without losing the underlying functionality of the page or site. This means the majority of processes are run on the servers hosting the site, therefore, not dependent on resource availability of the client (mobile devices typically have fewer resources than a desktop or laptop, for example). Further, you can focus on the functionality of the site, ensuring it works properly (the expected HTML is delivered) before continuing to enhance the experience. Finally, by maximizing server-side processing, you minimize the negative impact on battery life client-side processing can have.\n. @jbruce-gsa This looks great! Thanks for the PR.\n\n@kategarklavs, I wonder if it might make sense from a content / user perspective to include examples of what the Standards do to embrace progressive enhancement. Here are a couple of examples off the top of my head:\n- Vendor prefixes in our CSS\n- Minimal JavaScript for accordions and input elements ( Forms still work without it )\nThinking about that last one, we may need to update the examples on the Accordion page to always be open when JavaScript is disabled.\n. Hey @joshbruce, if you do rebase this branch onto 18f-pages-staging I have some guidance I've written up to help deal with any merge conflicts. \nSorry for any issues arising from our recent modification of the 18F/web-design-standards repository structure and build pipeline. We're moving very fast towards 1.0.0 and our 0.9.4 release contains some breaking changes with your PR. We would like to include this PR in our 0.9.4 release which removes the dist/ directory from the repository.\nYour PR may have some strange conflicts reflecting deleted by us or deleted by them when you run git status after git rebase upstream/18f-pages-staging or git merge upstream/18f-pages-staging. These conflicts are due to your branch having commits in the dist/ directory after we've deleted the dist/ directory. To remove these conflicts during a merge conflict, you can run the following command:\n``` sh\ngit rm -r --cached dist/*\nyou may also need to actually remove the files in those directories\nrm -rvf dist/*\n```\nAfter this is run, you may either have a clean working directory, a staged working directory, or a unstaged working directory with the dist/ directory being shown. Remember to not recommit the dist/ directory, and run git rebase --continue or git rebase --skip to move past the conflict.\n. Thanks @lobsteropteryx for this. A PR updating the variables to\nvar spawn = require('child_process').spawn;\nvar exec = require('child_process').exec;\nvar execSync = require('child_process').execSync;\nmight be the cleaner route than using child_process as the variable isn't being used for anything other than getting to the spawn, exec, and execSync commands. Node will cache the require('child_process') calls.\n. Fixed by #1073\n. Interesting! Thanks @lobsteropteryx for testing this on Windows. A PR with the Windows fix would be great. Do any of the other commands fail on your machine? I can take a look at your PR and make sure there are no regressions on other platforms.\n. Leaving this documentation reference here for the sake of visibility.\nhttps://nodejs.org/api/child_process.html#child_process_spawning_bat_and_cmd_files_on_windows\n. Fixed by #1073\n. Awesome @tysongach good eye. \n. Closing this one in favor of #1073 which includes the two commits on this PR.\n. Thanks @lobsteropteryx :tada: Cross-compability between unix-like, linux, and windows is something we strive for. Thanks again for submitting and testing the fixes!\n. Cool. @msecret ~~Can you also push up a tag for v0.9.1 with release notes for the new version?~~ Whoops. Never mind. I see the draft and the git tag! ~~Seems like all we need is a git tag.~~\n. Looks good :+1: \n. Closing this pull request for now as it doesn't completely solve the issue in #1039\n. Closing this ticket for now so we can switch over branches easily. This PR should be reopened and rebased after the dist/ directory is removed.\n. @maya Seems like this is related to needing to rebuild the libsass binary after the upgrade in order to update the node-binding. I believe that this is an issue whenever you're updating upgrading/downgrading node. But I'm not sure.\nDo we think we should be documenting something like this in the readme or wiki for troubleshooting node/npm install or asset pipeline issues? \ud83d\udcad \n. @madmanlear Adding to what @msecret posted above \u261d\ufe0f\nI did a local rebase from your branch on madmanlear/footer-h4-semantics onto\nour current 18f-pages-staging and found that there only be six commits\nreflecting your changes.\nThe six commits are as follows:\nsh\n648d93b wrap big footer h4 in li\n docs/_components/footers.md | 8 ++++----\n 1 file changed, 4 insertions(+), 4 deletions(-)\n42c1960 remove top margin from h4 in big footer\n src/stylesheets/components/_footer.scss | 4 ++++\n 1 file changed, 4 insertions(+)\n8373b72 fix footer primary link formatting\n src/stylesheets/components/_footer.scss | 11 ++++++-----\n 1 file changed, 6 insertions(+), 5 deletions(-)\n5c95c28 src: fix primary link spacing on desktop\n src/stylesheets/components/_footer.scss | 1 +\n 1 file changed, 1 insertion(+)\nd727a34 remove top margin from h4 in big footer\n src/stylesheets/components/_footer.scss | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\ncb5ee11 fix footer primary link formatting\n src/stylesheets/components/_footer.scss | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\nIf you'd like to rebase your commits onto 18f-pages-staging one more time, you\nare more than welcome to. You need to be careful to discard any commits made to the\ndocs/ and dist/ generated files. These changes aren't related to other files\nyou may have changed in the docs/ directory.\nHere's a shell history of the commands I ran to clear those commits.\nsh\n: 1464006881:0;git co madmanlear/footer-h4-semantics\n: 1464006894:0;git co -b footer-h4-semantics\n: 1464006915:0;git rebase origin/18f-pages-staging\n: 1464006930:0;git rm -r --cached dist\n: 1464006943:0;git rebase --skip\n: 1464006967:0;git rm docs/assets/js/vendor/uswds.min.js\n: 1464007072:0;rm -rvf dist\n: 1464006981:0;git rebase --skip\n: 1464007033:0;git add src/stylesheets/components/_footer.scss\n: 1464007083:0;git rebase --skip\nWhen rebasing your changes onto 18f-pages-staging you will need to make sure\nthat any files or directories that are going to conflict such as the dist/\ndirectory or the docs/assets/js/vendor/uswds.min.js file get deleted. Then,\nduring the git rebase you'll need to proceed by skipping those commits using\ngit rebase --skip.\nI've pushed up another branch with your changes in this PR #1183. Feel welcome\nto comment, add to via a PR, or rebase this PR with the instructions above.\nThanks for you contributions, @madmanlear! :tada:\n. This looks good to be merged in, and I can hit the \ud83d\udd18 on it. The only thing missing for me is an example in the CONTRIBUTING.md of a PR and Issue using the new templates. But I'm also open to us iterating on this based on user's feedback.\n@maya I think we can leave it out for now and just merge this in \ud83d\ude80 \n. @el-mapache take a look at this WIP PR. https://github.com/18F/web-design-standards/pull/1041\nIt's considered WIP as it would break the deployment since we still have a lot of linting errors. But once they're fixed, that branch can be merged. \n. Looks good from here \ud83d\udc4d \n. Hey @joshbruce, we're doing a little branch switcheroo and will need to close this since the branch names will change. We would still like to get these changes into staging once the branches are switched over. We will return to this work once the branch switch is complete.\n. @juliaelman @msecret I can see the confusion around the dist/ directory name for the directory now that we're not checking it in. We could rename it as a tmp/ directory. We would also need to update a few things about the build.\n- Update file paths for the various copy / build / release commands\n- Since the directory is ephemeral, it should be deleted when the build finishes. \ud83d\udc23 \n- Update various documentation to point to the new tmp/ directory\n\ud83d\udc23 : This would keep it inline with being a temporary directory. This would also affect where we store the uswds-*.zip file after we build it. This may not be needed if we decide it's easier to keep the directory around.\nI'm not sure if going the route of updating the name from dist/ to tmp/ has any major implications and it mostly comes down to semantics, but it does require us to change a few things about how the package is compiled / bundled, the website is built, and the package is released. The dist/ / tmp/ directory is a copy of the distribution files for the package and is used as a temporary directory when building some of the files for the documentation website. Some files are placed in dist/ compiled and ready to be archived into a zip directory ( I think it's specifically only the CSS styles that are not copied out of the dist/ directory since the documentation site works with the Sass style files ). Other files in the same directory are later copied using the gulp website:build from the dist/ directory into the doc/ directory.\nAll of the above taken into account, the gulp release process already creates a temporary directory named after the package and the current version number. This folder is created, archived, and then deleted. I propose something similar to that for a temporary directory since it communicates that these files shouldn't be relied on.\nThe original intent around the dist/ directory was to make sure that if someone was building the project from source, they would have the files compiled / bundled on their local machine in a place where they can verify it's contents.\nBecause so much of the pipeline is dependent on the dist/ directory being named so and having dist/ exist locally for users would want to build the project from source, I think it makes more sense to keep the names of the dist/ directory as is and follow up on updating the documentation related to where users can now download the compiled version.\n. \ud83d\udcaf \n. Good catch. \ud83d\ude80 \ud83c\udfb8 \n. This looks good to be merged into @msecret 's branch around dist/directory removal.\n. Thanks @maya. Looks good. \n. \ud83d\ude80 \n. Are there any implications to building the project locally within another project that installs the uswds package? I remember we ran into an issue with that because of npm@v3's flat dependency structure, @msecret.\n\nnpm3 resolves dependencies differently than npm2.\nhttps://docs.npmjs.com/how-npm-works/npm3\n. ~~@yozlet, where are we at for errors and warnings? Are we at peak fixes?~~ never mind, I commented below with what I found. :+1:\n. I'm posting this here for visibility. With all the work on this branch, I ran gulp scss-lint-docs scss-lint to see what the remaining ~~errors~~ warnings are.\n\nsh\n[12:09:55] 2 issues found in /Users/rogerruiz/Developer/federal-front-door/web-design-standards/src/stylesheets/components/_accordions.scss\n[12:09:55] components/_accordions.scss:29 [W] QualifyingElement: Avoid qualifying attribute selectors with an element.\n[12:09:55] components/_accordions.scss:36 [W] PropertyCount: Rule set contains (13/10) properties\n[12:09:55] 8 issues found in /Users/rogerruiz/Developer/federal-front-door/web-design-standards/src/stylesheets/components/_forms.scss\n[12:09:55] components/_forms.scss:12 [W] QualifyingElement: Avoid qualifying attribute selectors with an element.\n[12:09:55] components/_forms.scss:12 [W] QualifyingElement: Avoid qualifying attribute selectors with an element.\n[12:09:55] components/_forms.scss:25 [W] QualifyingElement: Avoid qualifying attribute selectors with an element.\n[12:09:55] components/_forms.scss:25 [W] QualifyingElement: Avoid qualifying attribute selectors with an element.\n[12:09:55] components/_forms.scss:54 [W] QualifyingElement: Avoid qualifying class selectors with an element.\n[12:09:55] components/_forms.scss:60 [W] QualifyingElement: Avoid qualifying class selectors with an element.\n[12:09:55] components/_forms.scss:134 [W] QualifyingElement: Avoid qualifying attribute selectors with an element.\n[12:09:55] components/_forms.scss:134 [W] QualifyingElement: Avoid qualifying attribute selectors with an element.\n[12:09:55] 2 issues found in /Users/rogerruiz/Developer/federal-front-door/web-design-standards/src/stylesheets/components/_sidenav.scss\n[12:09:55] components/_sidenav.scss:37 [W] MergeableSelector: Merge rule `&.usa-current` with rule on line 32\n[12:09:55] components/_sidenav.scss:58 [W] QualifyingElement: Avoid qualifying class selectors with an element.\n[12:09:55] 2 issues found in /Users/rogerruiz/Developer/federal-front-door/web-design-standards/src/stylesheets/core/_base.scss\n[12:09:55] core/_base.scss:21 [W] ImportantRule: !important should not be used\n[12:09:55] core/_base.scss:26 [W] ImportantRule: !important should not be used\n[12:09:55] 1 issues found in /Users/rogerruiz/Developer/federal-front-door/web-design-standards/src/stylesheets/core/_variables.scss\n[12:09:55] core/_variables.scss:88 [W] ColorVariable: Color literals like `rgba(#000, 0.3)` should only be used in variable declarations; they should be referred to via variable everywhere else.\n[12:09:55] 2 issues found in /Users/rogerruiz/Developer/federal-front-door/web-design-standards/src/stylesheets/elements/_buttons.scss\n[12:09:55] elements/_buttons.scss:7 [W] PropertyCount: Rule set contains (20/10) properties\n[12:09:55] elements/_buttons.scss:165 [W] SpaceBeforeBrace: Opening curly brace `{` should be preceded by one space\nThe styleguide files are passing the linter without an issue, but they are also disabling quite a few rules to do so. The reason being outlined in this commit. Some of the scss-lint rules in the yaml file are good for most problems, but others should maybe be ignored?\nThe use of !important is something that we might actually need in the core/_base.scss file. and the ProperyCount rules are also things that might need to be ignored as well. The QualifyingElement rule within the components/_forms.scss is something that we may want to ignore too, because these are targeting <form> child-elements that need to be qualified since they may/can share attributes.\nI think we can either ignore some of these linting errors and warnings with scss-lint:disable comments, or fix them. And if we fix them, we might have to update some markup or we might not. But I'd rather get a consensus from the team on how to approach this issue. Because these are edge cases for sure.\ncc: @yozlet @maya @juliaelman @msecret \n. Thanks @joshbruce. The less verbose route is easier to understand. Because this is much different than the changes in #1066, @kategarklavs could you look through this version to see if there is anything that should be edited? Thanks! \ud83d\udc4d \n. Looks great \ud83d\ude80. Merging it in.\n. \ud83d\udca1 This came up while we created this issue.\nWhen creating these --orphan branches, should they contain redirects to all internal pages ( for example https://pages-staging.18f.gov/designstandards/getting-started/ redirects to https://standards-staging.usa.gov/getting-started ) or should they contain only one redirect for the homepage ( for example https://pages-staging.18f.gov/designstandards redirects to https://standards-staging.usa.gov/ ). Please emoji vote on this comment.\n\ud83d\udc4d for all internal pages\n\ud83d\udc4e for only the homepage\n. This should be resolved with #1206 once it auto-deploys to staging. @joshbruce can you take a look. I believe we've squashed \ud83d\udca5 the bug \ud83d\udc1b\n. @kategarklavs could you take a look at the content changes here? The branches have been renamed from 18f-pages to master and 18f-pages-staging to staging.\n. \ud83d\ude80 \ud83c\udfb8 looks good. I'll let @yozlet weigh in. I ran this locally from a fresh clone and everything went smooth.\n. I added a small commit to move Ethnio into analytics.html which is outlined in the commit.\n. @el-mapache It wouldn't be a good idea as the styleguide.js code isn't actually a part of the uswds package. Currently, the code in the package doesn't instantiate the components it ships. Also the docs don't have any documentation alluding to that fact either, I don't think. So the source in the docs/doc_assets/js/styleguide.js is the place for JS instantiation but isn't documented anywhere at the moment.\n. @el-mapache absolutely. that would be good to have in this PR to help avoid this in the future. The docs/**/styleguide.js and the src/**/start.js have very different responsibilities.\n. @el-mapache This commit seems to have reverted all the changes rather than just some of them. Only the jQuery <script> tag needed to be brought back, but I do like the restructuring of _includes/scripts to _includes/doc-scripts. I have time to pair on this later in the day if you'd like. We should not include the docs/_scss directory in this PR as we ~~fought~~ coordinated to remove it in the PR from @msecret #1164.\n. Looks good \ud83d\ude0e \ud83c\udd92 \ud83c\udf66 \n\nThat's me clicking at super speed. Everything was working properly at half-speed. \ud83d\ude01 \n. Looks like the regression was introduced in this commit.\nWe can refactor the copying over of Sass files into the docs/ directory to mitigate the fact that Jekyll doesn't watch changes outside of it's source directory defined in the _config.yml. When the Sass files are copied over they should be ignored by git so they aren't checked in in a duplicated directory.\n. Closes #1205 when it lands in staging.\n. @juliaelman I've confirmed that @joshbruce's assessment above is correct. The only page with duplicate id=\"collapsible-0\" are the form control and form template pages.\n. Looks good to me!\n. @joshbruce This touches on the typography page. Are there other pages that need the aria-hidden attribute updated?\n. Awesome. Thanks @joshbruce, I'm going to rerun these tests in CircleCI and merge this in then. We can tackle the <code> example accordions relying on JS in another issue / pull request as needed. \ud83d\udc4d \n. Hey @joshbruce. Looks like you'll need to rebase this branch onto the latest work on staging. 18F/web-design-standards#1261 has removed screener and that will get this PR to pass in CircleCI. If it's helpful, I can rebase these changes manually and submit a new pull request with that update. Thanks!\n. Thanks @joshbruce \ud83c\udf89 \n. @joshbruce Looks like you'll need to rebase this branch onto the latest work on staging. 18F/web-design-standards#1261 has removed screener and that will get this PR to pass in CircleCI. If it's helpful, I can rebase these changes manually and submit a new pull request with that update. Thanks!\n. Awesome, thanks @maya\n. Awesome work @maya. Thanks for getting this out the door @maya @ericadeahl @bradnunnally \ud83d\udc4d \n. @maya Looks like this failed on the Screener test. I'm not sure how to best look into Screener, but I'll look at it locally as well.\n. @maya, would it make more sense to make the Getting Started or the secondary heading on any of the other pages below the navbar the non-<h1> element and keep the navbar <h1> instead?\n. Looks great @maya. I'll merge it in.\n. Hey @joshbruce. Looks like you'll need to rebase this branch onto the latest work on staging. 18F/web-design-standards#1261 has removed screener and that will get this PR to pass in CircleCI. If it's helpful, I can rebase these changes manually and submit a new pull request with that update. Thanks!\n. Awesome, yes! Thanks you @juliaelman \ud83c\udf89 \nwill wait for checks to pass\n. I think they already are @maya \n. @juliaelman I've updated the top comment on this PR \u261d\ufe0f to reflect who is assigned to verifying which item is working.\n. @maya verified all of the tasks assigned to me & everything looks \ud83d\udcaf  - great job!\n. Woo! :100:\n. Thanks for the contribution @elarenee! It looks like @brendansudol had a good suggestion in https://github.com/18F/web-design-standards/pull/1097#issuecomment-208584886 around updating the background of the image to not be transparent instead of using padding-right.\n. Thanks for the contribution @PilgrimMemoirs! There is one issue in the src/stylesheets/components/_search.scss file you updated.\n``` shell\n$ npm test\n... output from other tests\n[11:19:18] 1 issues found in /Users/rogerruiz/Developer/federal-front-door/web-design-standards/src/stylesheets/components/_search.scss\n[11:19:18] components/_search.scss:79 [W] Indentation: Line should be indented 2 spaces, but was indented 0 spaces\n... output from other tests\n```\n@maya has some line notes around removing some extraneous lines as well. Once these are addressed, we can merge it all in \ud83d\udcaf \n. @iluvtatortots Thanks so much for your contribution to getting started on a Windows environment. This is awesome! @kategarklavs has included some line comments with suggestions to the copy and I've commented where I can help clarify. Once we have those suggestions cleared up, we can merge this in. \ud83d\udc4d \nI have another suggestion as well, the instructions for getting set up on a Windows machine are helpful, but I don't know if we need to duplicate the instructions for using gulp under both Mac and Windows unless they're different experiences. We should have a single canonical source for each section of instructions.\n\nMac instructions\nWindows instructions\ngulp instructions\n\nThoughts? @kategarklavs @iluvtatortots @maya @msecret \n. Hey @iluvtatortots! Any progress on the comments above \u261d\ufe0f? Please let me know if there is anything I can help out with to land this contribution on staging. Thanks!\n. Awesome contribution, @j-ta. Thank you for your contribution. I'm going to be testing this locally to see if I can comment with a patch containing the necessary changes to get the Return to Top working. It looks like this can be merged in after I run local tests. Thanks. \ud83d\udc4d \n. Alrighty, @j-ta. I looked into the issue a bit further and saw that the error was not tied to the footerAccordion function you modified in src/js/start.js. It's tied to the handleDisabledLinks function in the docs/doc_assets/js/styleguide.js file.\ndiff\ndiff --git a/docs/doc_assets/js/styleguide.js b/docs/doc_assets/js/styleguide.js\nindex a79fb96..90a22c2 100644\n--- a/docs/doc_assets/js/styleguide.js\n+++ b/docs/doc_assets/js/styleguide.js\n@@ -7,7 +7,11 @@ $(function(){\n   function handleDisabledLinks() {\n     $(document).on('click', 'a[href=\"#\"]', function (event) {\n       // Stop default browser action which would likely return to the top of the page\n-      event.preventDefault();\n+      // unless it's an actual return-to-top link\n+      var isReturnToTop = 'return to top' === $(event.target).text().toLowerCase();\n+      if (! isReturnToTop) {\n+        event.preventDefault();\n+      }\n     });\n   }\n   handleDisabledLinks()\ncc @maya \n. Closed in favor of #1285\n. Looks good \ud83d\udc4d \n. Looks good @fureigh thanks!\n. \ud83d\udcad we could add a linting checker that can run in another terminal separate from the build / watch process. Like a watch task for linting only. Right now, the linter only runs as a dependency of the build / serve tasks. Ideally the linter wouldn't have any errors, and would break the build if it encountered them.\n. cc: @yozlet @msecret @maya \n. As @juliaelman mentioned above, the root cause is that the code snippets aren't being generated at build time. Right now the code snippets live in partials that are not being consumed more than once during the build step for the site. They are being rendered on the page above the accordion. We need another partial which takes the code and places it within an accordion. Which is all the JS is doing but on the client instead of during the build.\nBy moving the code snippets generation to the server, we can also remove the Prisim dependency on the front end and just use the version of Prisim that Jekyll provides. \n. @maya yes. Sorry about that. We will need to use something that Jekyll supports. That also means that the styles for the code blocks will need to be updated.\nThere's another option here, and that is using gulp to convert the code blocks using Prisim and then giving that data to Jekyll. It might be worth doing if the styling of the code blocks is going to be a big effort. \n. @joshbruce great question. The automation is essentially a copy-paste operation that needs to occur on the build step of the website. Currently, code blocks are injected via JS on all the pages that render them and the issue is that without JS there are no code blocks. Automating this would allow for the build step to do this processing and rendering on the server before the site is built and deployed. That way we can remove the dependency on this functionality on the client side. \nAlso automating this would mean that as contributors and maintainers, we would only need to update a single version of the code blocks instead of maintaining multiple HTML copies of the components in separate files.\n. Thanks @saracope! The current download is in a draft within our Releases tab. I believe that non-maintainers cannot see it though as it isn't published yet. We're going to be deploying a new release very shortly, and we rely on the structure of the URL to be there when we publish the release.\n. Thanks again @saracope! After we've shipped v0.9.5, the link now works. We have some documentation related to our release process in our wiki. We're going to be iterating on that release process in the future to hopefully mitigate any issues that might come up similar to this one in the future. \ud83d\udc4d \n. We should include these in the Releases draft. but this looks good to me\n- [ ] @maya Update sentence to remove link         84d3377\n- [ ] @maya    Fix incorrect link          db42a48\n- [ ] @maya    Remove \"In addition...\" sentence            face091\n- [ ] @maya    Remove add issue type           a5d9437\n- [ ] @maya    Fix landscape bug           3a595e3\n- [ ] @maya    Add comment         0ae1371\n- [ ] @cfarm   Add link to Content Guide reference         f9bd004\n- [ ] @juliaelman  Small update to about our work copy         1d6f2ca\n- [ ] @maya    Remove variables from import            0f30e1b\n- [ ] @toolness    Replace 'ol li' rule w/ 'ol > li' rule. Fix #1328.          150efa4\n- [ ] @msecret Update incorrect documentation on variables  \u2026            c4ac427\n- [ ] @rogeruiz    Fix header trigger for Android;         627634e\n. pairing with @yozlet\nWe should add integration tests that run locally in the browser for manually-triggered automated tests for new utils library.\n. \ud83d\udc4f \ud83d\udc4f \ud83d\udc4f\n\nBasically, giving teams the foundation and then point them to the various solutions we would recommend so they can assess what would work best for them and their product.\n\nAwesome! I think this is the best approach for anything we don't want to take ownership within the boundaries of the standards.\n. @maya yes I would say so. Because since using this handle-disabled-links JavaScript we've had an issue with the website and PR work associated with it.\nIssue: #990\nPR: #1285\n. @juliaelman Please take a look at this and help us tick the last checkbox in the first comment.\n. Hmm that styleguide.js Seems out of scope for these changes. I don't think the jQuery removal touched anything in there. \n. Do we want to add some documentation for the reasoning behind #1378 in this PR? We've gone back and forth on this issue of href=\"#\" versus href=\"javascript:void(0);\". I'd like to remove the ambiguity here and avoid discussions around what we suggest. The latter, href=\"javascript:void(0);\" should be what our examples use so we don't need any additional javascript to prevent href=\"#\" from going to the top, but we should have some documentation on the UI component for links maybe that discusses:\n-  why we do this in the examples\n-  why your mileage may vary when setting href=\"#\" when implementing the standards.\nThoughts on this @yozlet @maya @msecret @juliaelman @kategarklavs @jameshupp\n. This does not touch the sticky-nav.js or any of the JavaScript related to the side-navigation UI component. Those will need to be worked on in another PR.\n. Tied to the issue #1353 and merging into #1368 once it's reviewed.\n. cc: @msecret @maya @juliaelman @yozlet \n. interesting. what branch is this merging into? is the dist/ directory still being tracked on that branch? @toolness @msecret \n. Merging into #1368 and addresses #1353.\n. Could you review this @yozlet \n. This seems like the last nail on the coffin to remove Politespace and replace it with FieldKit.\n. Alas, prepublish runs on npm install according to the documentation found here\n\nprepublish: Run BEFORE the package is published. (Also run on local npm install without any arguments.)\n\nThe project needs to be built on publish to include the vendored dependencies before the upload process since npm publish uploads a snapshot of the directory when it's run. \nThe gulp copy-vendor-sass only needs to run once because of the way npm v3+ flattens dependencies. If you tie it to the gulp sass command it will run even when local sass files are modified, slowing the process down a bit.\n. If the user of the standards would like to integrate the standards into their own asset-pipeline, they may want to know how it is generated. But I do agree that it might be too much for the readme and the project in it's current state. I'll be updated this section to fix this along with the prepublish comment above.\n. I've updated this to be in the CONTRIBUTING doc for now.\n. I think this line was added to explain why the CSS file isn't in the repo. A user that clones the project won't know where the CSS file is since it's only generated when it's published to npm.\n. Yeah, I agree on the future thinking. I'm not quite sure the best way to recommend this. Above this line, I add the requirements about jQuery and $ needing to be on the window object.\n. Taking a look at the output of uswds.css there are no references to fonts.\n. I'm okay with updating the JS to any style. I'm using the jQuery style of liberal spacing for readability. But I am open to anything as long as we can lint for it. I know eslint supports enforcing either style around spacing.\n. I agree with this. Aliasing commands to npm-run scripts is :100: \n. The files in the app directory are specific to the Rails convention of adding assets\n. Awesome. I'm in agreement with this. I'll add a few rules to the eslintrc around enforcing it for this repo and cross post it to the frontend repo issue @maya made. \ud83d\udcaf\n. I can update this to say Playbook website / documentation website. I'll wait for @kategarklavs to weigh in as well.\n. Not sure if this is a typo? $SCEENER_GROUP_ID\n. It's coming from this part of the copy-assets task here => https://github.com/18F/web-design-standards/pull/1035/files#diff-150b96ca2a378526f6a28dfc8c3e7687R44\n. They are copied over in a new copy-assets task which has some moving and copying going on.\nhttps://github.com/18F/web-design-standards/blob/rm-jekyll-gem/config/gulp/website.js#L15-L126\n. Well for JS a require('uswds'); is all they would need to use for npm. There is no ~~good or~~ standard way of doing this with CSS so we are leaving it up for the developer's interpretation.\n. @msecret it changed due to maintaining the documentation using the version number. It's not a good idea to have to update version numbers everywhere whenever in the documentation when we update the package's version. Also, it could be a user pain to have our users update and then break their asset-paths.\n. @msecret second note\nThe folder structure is included a little further above those lines :point_up: \n. That sounds like a great idea! @juliaelman \n. I think path/to/your/assets/ lets them decide enough about where it should go. but :thought_balloon: welcome. Let's settle on something, lib or vendor. \nIt might make sense for it to look a little more like this.\n<link rel=\"stylesheet\" href=\"/path/to/your/assets/css/lib/uswds.css\">\n<script href=\"/path/to/your/assets/js/lib/uswds.js\"></script\n. The problem exists because we don't have #1007 resolved yet. The assets for images need to exist in that directory and because there are already files in that directory, we need to ignore the files explicitly.\nA fix we could do now and then revert later would be to update all the image paths into a new subdirectory of img for the Styleguide website and then explicitly not ignore that new subdirectory. But I figured that level of effort was better spent on resolving the issue about image paths.\nThen we could just copy the files into a folder called img/vendor or something similar.\n. I would say though that we could fix it and close an issue in the next release :wink: \n. @maya @juliaelman \nI see, well for the npm instructions there is no way for them to used the minified code using require('uswds'); They need to use the source files and the entry point is referenced in the package.json here. Minifiying the source when using npm is something that those specific developers would need to do on their own. We could definitely add a sentence about that though. Thoughts?\n. I don't know if we want to include the folder. We name the folder uswds-VERSION_NUMBER so users can keep track of it when it gets unzipped, but we're assuming that they are copying the files out of that folder and putting it somewhere in their project right? not just sticking the whole folder into /path/to/your/assets/**/* @msecret \n. @msecret https://github.com/18F/web-design-standards/pull/1036#discussion_r55734103\n. @msecret yup! @juliaelman and I are working on a set of PRs that address the UI Component and Standards website in the /docs/**/* and *.md files\n. The version number is part of the folder and the ZIP archive, but not the filenames any more.\n. yeah I agree with this, but the /docs directory is still a Ruby project so the Gemfile being there is what makes it a ruby project. 0.2% is still something I guess.\n\n. ah ha not any more. I'll remove it.\n. Let's link to the ISSUE_TEMPLATE file here\nfollow [our ISSUE TEMPLATE](/.github/ISSUE_TEMPLATE.md)\n. Let's link to the PULL_REQUEST file here.\nfill out [the PULL REQUEST](/.github/PULL_REQUEST.md)\n. \ud83d\udcad Sounds like a better idea than linking to the templates. I like it.\n. @maya would we be doing the same here? linking to the new issue page?\n. This can be linked to the new issue page\nhttps://github.com/18F/web-design-standards/issues/new.\n. I'm not sure how to best link to the new pull request page, maybe this link? https://github.com/18F/web-design-standards/compare\n. If a user reviews the template file themselves, they can see the comments. Otherwise the comments would appear in the textarea on the PR and Issue pages. We could remove these instructions here and include them in the contributing guide, but then users would need to split their attention between two different pages. With the comments here, we can ensure that users can read them when they are editing the PR / Issue but that they won't be rendered once they submit it.\n~~When users are creating a PR or Issue the template will be used exactly and these notes shouldn't be rendered in the final preview / rendering of the markdown.~~\n. I think once these templates land on our default branch, we can iterate on them going ~~further~~ forward and break parts of the templates into categories using the --- triple dash rulings.\n```\nBug related to [ Website ] / [ UI component ]\nDescription\n\nNew component for [ Website ] / [ UI component ]\nProposal\n```\nrendered below\nBug related to [ Website ] / [ UI component ]\nDescription\n\nNew component for [ Website ] / [ UI component ]\nProposal\n. The breakdown of [ website ] and [ ui components ] is further down in the comments on line 4.\n. This current browser support is mentioned here starting after Browser support:.\n. It's because scss-lint doesn't like files that start with \n```\n\n``\n. It should only include the file name and line number, so it doesn't matter where the file lives. But, the initial line of where it found the errors, will be in thetmpdocs/directory. We could have it say that it's checking files indoc_assets/` before it outputs any errors. That way people know where to find them more easily.\nHere's some output from running it locally right now.\n[16:08:29] Starting 'lint-tmp-docs-scss'...\n[16:08:30] 13 issues found in /Users/rogerruiz/Developer/federal-front-door/web-design-standards/tmpdocs/homepage.scss\n[16:08:30] homepage.scss:39 [W] EmptyLineBetweenBlocks: @include declaration should be followed by an empty line\n[16:08:30] homepage.scss:47 [W] StringQuotes: Prefer single quoted strings\n[16:08:30] homepage.scss:51 [W] EmptyLineBetweenBlocks: @include declaration should be followed by an empty line\n[16:08:30] homepage.scss:73 [W] EmptyLineBetweenBlocks: @include declaration should be followed by an empty line\n[16:08:30] homepage.scss:150 [W] MergeableSelector: Merge rule `.usa-circle-block` with rule on line 130\n[16:08:30] homepage.scss:154 [W] SingleLinePerSelector: Each selector in a comma sequence should be on its own single line\n[16:08:30] homepage.scss:154 [W] SingleLinePerSelector: Each selector in a comma sequence should be on its own single line\n[16:08:30] homepage.scss:154 [W] SingleLinePerSelector: Each selector in a comma sequence should be on its own single line\n[16:08:30] homepage.scss:154 [W] SingleLinePerSelector: Each selector in a comma sequence should be on its own single line\n[16:08:30] homepage.scss:154 [W] SingleLinePerSelector: Each selector in a comma sequence should be on its own single line\n[16:08:30] homepage.scss:159 [W] SingleLinePerSelector: Each selector in a comma sequence should be on its own single line\n[16:08:30] homepage.scss:182 [W] SpaceBeforeBrace: Opening curly brace `{` should be preceded by one space\n[16:08:30] homepage.scss:198 [W] MergeableSelector: Merge rule `.usa-section-examples` with rule on line 24\n[16:08:30] 98 issues found in /Users/rogerruiz/Developer/federal-front-door/web-design-standards/tmpdocs/styleguide.scss\n[16:08:30] styleguide.scss:32 [W] EmptyLineBetweenBlocks: @include declaration should be followed by an empty line\n[16:08:30] styleguide.scss:40 [W] EmptyLineBetweenBlocks: @include declaration should be followed by an empty line\n[16:08:30] styleguide.scss:46 [W] SelectorDepth: Selector should have depth of applicability no greater than 3, but was 4\n[16:08:30] styleguide.scss:49 [W] SelectorDepth: Selector should have depth of applicability no greater than 3, but was 4\n[16:08:30] styleguide.scss:49 [W] NestingDepth: Nesting should be no greater than 4, but was 5\n[16:08:30] styleguide.scss:61 [W] EmptyLineBetweenBlocks: @include declaration should be followed by an empty line\n[16:08:30] styleguide.scss:70 [W] EmptyLineBetweenBlocks: @include declaration should be followed by an empty line\n[16:08:30] styleguide.scss:75 [W] SelectorDepth: Selector should have depth of applicability no greater than 3, but was 4\n[16:08:30] styleguide.scss:79 [W] SelectorDepth: Selector should have depth of applicability no greater than 3, but was 5\n[16:08:30] styleguide.scss:79 [W] NestingDepth: Nesting should be no greater than 4, but was 5\n[16:08:30] styleguide.scss:88 [W] ColorVariable: Color literals like `white` should only be used in variable declarations; they should be referred to via variable everywhere else.\n[16:08:30] styleguide.scss:88 [W] ColorKeyword: Color `white` should be written in hexadecimal form as `#ffffff`\n[16:08:30] styleguide.scss:91 [W] ColorVariable: Color literals like `#616161` should only be used in variable declarations; they should be referred to via variable everywhere else.\n[16:08:30] styleguide.scss:93 [W] EmptyLineBetweenBlocks: Rule declaration should be preceded by an empty line\n[16:08:30] styleguide.scss:95 [W] EmptyLineBetweenBlocks: Rule declaration should be followed by an empty line\n[16:08:30] styleguide.scss:97 [W] SelectorDepth: Selector should have depth of applicability no greater than 3, but was 4\n[16:08:30] styleguide.scss:101 [W] EmptyLineBetweenBlocks: Rule declaration should be followed by an empty line\n[16:08:30] styleguide.scss:105 [W] EmptyLineBetweenBlocks: Rule declaration should be followed by an empty line\n[16:08:30] styleguide.scss:118 [W] EmptyLineBetweenBlocks: @include declaration should be followed by an empty line\n[16:08:30] styleguide.scss:140 [W] IdSelector: Avoid using id selectors\n[16:08:30] styleguide.scss:147 [W] ColorVariable: Color literals like `#fff` should only be used in variable declarations; they should be referred to via variable everywhere else.\n[16:08:30] styleguide.scss:152 [W] EmptyLineBetweenBlocks: Rule declaration should be preceded by an empty line\n[16:08:30] styleguide.scss:162 [W] ColorVariable: Color literals like `#000` should only be used in variable declarations; they should be referred to via variable everywhere else.\n[16:08:30] styleguide.scss:201 [W] SelectorDepth: Selector should have depth of applicability no greater than 3, but was 4\n[16:08:30] styleguide.scss:223 [W] EmptyLineBetweenBlocks: @include declaration should be followed by an empty line\n[16:08:30] styleguide.scss:228 [W] EmptyLineBetweenBlocks: Rule declaration should be preceded by an empty line\n[16:08:30] styleguide.scss:234 [W] EmptyLineBetweenBlocks: Rule declaration should be preceded by an empty line\n[16:08:30] styleguide.scss:250 [W] EmptyLineBetweenBlocks: Rule declaration should be preceded by an empty line\n[16:08:30] styleguide.scss:253 [W] EmptyLineBetweenBlocks: Rule declaration should be followed by an empty line\n[16:08:30] styleguide.scss:268 [W] SingleLinePerSelector: Each selector in a comma sequence should be on its own single line\n[16:08:30] styleguide.scss:271 [W] EmptyLineBetweenBlocks: @include declaration should be followed by an empty line\n[16:08:30] styleguide.scss:282 [W] ColorVariable: Color literals like `#fff` should only be used in variable declarations; they should be referred to via variable everywhere else.\n[16:08:30] styleguide.scss:285 [W] ColorVariable: Color literals like `#eeeeee` should only be used in variable declarations; they should be referred to via variable everywhere else.\n[16:08:30] styleguide.scss:286 [W] EmptyLineBetweenBlocks: Rule declaration should be preceded by an empty line\n[16:08:30] styleguide.scss:301 [W] PseudoElement: Begin pseudo elements with double colons: `::`\n[16:08:30] styleguide.scss:302 [W] StringQuotes: Prefer single quoted strings\n[16:08:30] styleguide.scss:311 [W] PseudoElement: Begin pseudo elements with double colons: `::`\n[16:08:30] styleguide.scss:312 [W] StringQuotes: Prefer single quoted strings\n[16:08:30] styleguide.scss:323 [W] ColorVariable: Color literals like `#f5f5f5` should only be used in variable declarations; they should be referred to via variable everywhere else.\n[16:08:30] styleguide.scss:324 [W] ColorVariable: Color literals like `#e0e0e0` should only be used in variable declarations; they should be referred to via variable everywhere else.\n[16:08:30] styleguide.scss:328 [W] SelectorDepth: Selector should have depth of applicability no greater than 3, but was 4\n[16:08:30] styleguide.scss:333 [W] SelectorDepth: Selector should have depth of applicability no greater than 3, but was 4\n[16:08:30] styleguide.scss:333 [W] NestingDepth: Nesting should be no greater than 4, but was 5\n[16:08:30] styleguide.scss:344 [W] SingleLinePerSelector: Each selector in a comma sequence should be on its own single line\n[16:08:30] styleguide.scss:415 [W] ColorVariable: Color literals like `#000` should only be used in variable declarations; they should be referred to via variable everywhere else.\n[16:08:30] styleguide.scss:429 [W] TrailingSemicolon: Declaration should be terminated by a semicolon\n[16:08:30] styleguide.scss:436 [W] ZeroUnit: `0rem` should be written without units as `0`\n[16:08:30] styleguide.scss:448 [W] TrailingSemicolon: Declaration should be terminated by a semicolon\n[16:08:30] styleguide.scss:448 [W] ColorVariable: Color literals like `#323a45` should only be used in variable declarations; they should be referred to via variable everywhere else.\n[16:08:30] styleguide.scss:465 [W] EmptyLineBetweenBlocks: @include declaration should be followed by an empty line\n[16:08:30] styleguide.scss:486 [W] EmptyLineBetweenBlocks: @include declaration should be followed by an empty line\n[16:08:30] styleguide.scss:491 [W] SpaceAfterPropertyColon: Colon after property should be followed by one space\n[16:08:30] styleguide.scss:498 [W] EmptyLineBetweenBlocks: @include declaration should be followed by an empty line\n[16:08:30] styleguide.scss:517 [W] EmptyLineBetweenBlocks: @include declaration should be followed by an empty line\n[16:08:30] styleguide.scss:536 [W] MergeableSelector: Merge rule `.usa-color-name` with rule on line 462\n[16:08:30] styleguide.scss:627 [W] MergeableSelector: Merge rule `.usa-color-gray-dark` with rule on line 570\n[16:08:30] styleguide.scss:631 [W] MergeableSelector: Merge rule `.usa-color-gray-light` with rule on line 574\n[16:08:30] styleguide.scss:745 [W] MergeableSelector: Merge rule `.usa-color-text-gray-dark` with rule on line 741\n[16:08:30] styleguide.scss:778 [W] QualifyingElement: Avoid qualifying class selectors with an element.\n[16:08:30] styleguide.scss:783 [W] SingleLinePerSelector: Each selector in a comma sequence should be on its own single line\n[16:08:30] styleguide.scss:783 [W] SingleLinePerSelector: Each selector in a comma sequence should be on its own single line\n[16:08:30] styleguide.scss:783 [W] SingleLinePerSelector: Each selector in a comma sequence should be on its own single line\n[16:08:30] styleguide.scss:783 [W] SingleLinePerSelector: Each selector in a comma sequence should be on its own single line\n[16:08:30] styleguide.scss:783 [W] SingleLinePerSelector: Each selector in a comma sequence should be on its own single line\n[16:08:30] styleguide.scss:783 [W] SingleLinePerSelector: Each selector in a comma sequence should be on its own single line\n[16:08:30] styleguide.scss:809 [W] QualifyingElement: Avoid qualifying attribute selectors with an element.\n[16:08:30] styleguide.scss:809 [W] QualifyingElement: Avoid qualifying attribute selectors with an element.\n[16:08:30] styleguide.scss:809 [W] SingleLinePerSelector: Each selector in a comma sequence should be on its own single line\n[16:08:30] styleguide.scss:810 [W] Indentation: Line should be indented 2 spaces, but was indented 4 spaces\n[16:08:30] styleguide.scss:813 [W] QualifyingElement: Avoid qualifying attribute selectors with an element.\n[16:08:30] styleguide.scss:813 [W] QualifyingElement: Avoid qualifying attribute selectors with an element.\n[16:08:30] styleguide.scss:813 [W] SingleLinePerSelector: Each selector in a comma sequence should be on its own single line\n[16:08:30] styleguide.scss:817 [W] SingleLinePerSelector: Each selector in a comma sequence should be on its own single line\n[16:08:30] styleguide.scss:817 [W] SingleLinePerSelector: Each selector in a comma sequence should be on its own single line\n[16:08:30] styleguide.scss:817 [W] SingleLinePerSelector: Each selector in a comma sequence should be on its own single line\n[16:08:30] styleguide.scss:817 [W] SingleLinePerSelector: Each selector in a comma sequence should be on its own single line\n[16:08:30] styleguide.scss:817 [W] SingleLinePerSelector: Each selector in a comma sequence should be on its own single line\n[16:08:30] styleguide.scss:817 [W] SingleLinePerSelector: Each selector in a comma sequence should be on its own single line\n[16:08:30] styleguide.scss:821 [W] SingleLinePerSelector: Each selector in a comma sequence should be on its own single line\n[16:08:30] styleguide.scss:821 [W] SingleLinePerSelector: Each selector in a comma sequence should be on its own single line\n[16:08:30] styleguide.scss:821 [W] SingleLinePerSelector: Each selector in a comma sequence should be on its own single line\n[16:08:30] styleguide.scss:821 [W] SingleLinePerSelector: Each selector in a comma sequence should be on its own single line\n[16:08:30] styleguide.scss:821 [W] SingleLinePerSelector: Each selector in a comma sequence should be on its own single line\n[16:08:30] styleguide.scss:825 [W] SingleLinePerSelector: Each selector in a comma sequence should be on its own single line\n[16:08:30] styleguide.scss:825 [W] SingleLinePerSelector: Each selector in a comma sequence should be on its own single line\n[16:08:30] styleguide.scss:830 [W] Indentation: Line should be indented 2 spaces, but was indented 4 spaces\n[16:08:30] styleguide.scss:837 [W] QualifyingElement: Avoid qualifying attribute selectors with an element.\n[16:08:30] styleguide.scss:841 [W] MergeableSelector: Merge rule `.preview` with rule on line 280\n[16:08:30] styleguide.scss:873 [W] EmptyLineBetweenBlocks: Rule declaration should be followed by an empty line\n[16:08:30] styleguide.scss:883 [W] EmptyLineBetweenBlocks: Rule declaration should be followed by an empty line\n[16:08:30] styleguide.scss:908 [W] MergeableSelector: Merge rule `.usa-font-lead.usa-font-lead-alt` with rule on line 904\n[16:08:30] styleguide.scss:924 [W] MergeableSelector: Merge rule `.usa-font-lead.usa-font-lead-alt` with rule on line 920\n[16:08:30] styleguide.scss:932 [W] SingleLinePerSelector: Each selector in a comma sequence should be on its own single line\n[16:08:30] styleguide.scss:932 [W] SingleLinePerSelector: Each selector in a comma sequence should be on its own single line\n[16:08:30] styleguide.scss:932 [W] SingleLinePerSelector: Each selector in a comma sequence should be on its own single line\n[16:08:30] styleguide.scss:932 [W] SingleLinePerSelector: Each selector in a comma sequence should be on its own single line\n[16:08:30] styleguide.scss:932 [W] SingleLinePerSelector: Each selector in a comma sequence should be on its own single line\n[16:08:30] styleguide.scss:1013 [W] EmptyLineBetweenBlocks: @include declaration should be followed by an empty line\n[16:08:30] Finished 'lint-tmp-docs-scss' after 1.4 s\n. @msecret \nI added this line to the output of gulp scss-lint-docs\n[16:16:54] scss-lint-docs Linting files found by `docs/doc_assets/**/*.scss`\n. ~~On further inspection, I've also noticed that all linting line numbers are now off by three within this gulp task because of the empty lines at the top of the file without the --- triple dashes.~~ Nevermind on that. It was human error. \ud83d\udcab \n. Love use of emphasis on this line \ud83d\udc4d Thanks @yozlet \n. I agree @msecret good catch. This should be targeting classes or ids related to form-controls.\n. Well the src/js/start.js isn't a part of the docs/ but rather a part of the package. It can be very confusing. Sorry @el-mapache.\n. The link is helpful to install both node and npm as they now ship together in the same download. I agree on the sequencing, adding First, along with Once you've done that, where applicable. Thanks @kategarklavs \n. The tasks here are things that are used by the underlying npm run [ script_name ] commands, but can also be run directly using gulp [ task_name ]. I'd say definitely encounter.\n. The npm run deploy command is an alias to the running the following command: gulp copy-vendor-sass && gulp website:build. Maybe we can change it to \n\nThe npm run deploy is an alias for building the website.\n. I think this can be put at the end within a <quote> block.\nA few notes: building just the package is useful if you'd like to create your own\ndistribution bundle for frameworks that aren't supported via npm. The files in\n/dist contain no documentation and are compiled and bundled CSS, JavaScript,\nfonts, and images files.\n. Nah. They're just notes for what utilities will be replaced by jQuery methods.\n. These files still exist in the repository, but the file names that they pull in, represented by the component=\"\" parameter, are now generated using gulp and come in from src/html.\n. Yes just for debuggability. We should revert this @yozlet\n. Same goes for this line. It needs to be reverted. \n. We should revert these changes so they don't get committed. \n. Should we just reference require('jquery'); here rather than the whole path? Otherwise it looks good. :100:\n. That's a good point @shawnbot. But, I can't be sure what the e.target is going to be here right? I don't think there will be multiple navigations on the page. I think other parts of the codebase also rely on the idea of including elements globally rather than contextually.\n. \n",
    "robertmain": "Hi @jeremiak \nThanks for that, I do have a few points to add\n1. Communication. In issue #745 @mollieru mentioned that bower was something being considered and it seemed (at least.to me) that bower support was a possibility. I think a little communication between authors of this project wouldn't go amis so that contributors (such as myself) know what's going on\n2. Bower. I realise that you don't like it, but that doesn't mean that everybody feels the same way. In fact I would go as far as to say that bower (in my opinion) is more suited to front end dependency management than npm due to the lack of nested dependencies (although I acknowledge this has been fixed somewhat in later versions of npm). Seriously, it's one file that a few kb in size - why not include it in your repo for folks that want to use it?\n3. Tooling. Currently I use gulp to compile all my dependencies into one file (as many people do). That relies heavily on main-bower-files to read bower.json and present its dependencies as a stream. Whilst such a solution may exist for npm, I'm not currently aware of such a thing.\n. ",
    "wslack": "Will do. Filed this for Mollie and others; will defer to them for how it should be drafted.\n. I filed it here at Mollie's request; we can chat about it on another platform if you prefer.\n. @juliaelman I don't think its an issue for the Intake repo; just wanted talking points for why the draft standards are useful like:\n- Provide common tools\n- Accessible\n- Easy to deploy\n- Reflect 18F researched best practices\n. @jpyuda I apologize for not being clear. It's not my desire to have talking points. I was asked on calls about why the draft standards should be used by agencies, and I wanted to be responsive to the request. There's no pressure implied here - just being responsive to the question. As of right now, I'll plan to say we have found them useful in our work and will point them to https://playbook.cio.gov/designstandards/.\n. The only idea I would add after noticing this on another site:\nIt might be possible (maybe?) to use something like the bubble effect on the Mac dock, which would expand text in middle of table but still showing that there's more context not displayed full size.\n. @maya I didn't solve it with an additional style, but it's not a vital feature for me. :)\n. Thanks, was on mobile and github search doesn't really search there...\n. Thanks @maya! If you do know of sites using that link, would like to see how that looks in practice.\n. @donjo we can host these using Federalist if y'all don't mind listing them as sample templates for Federalist users to fork cc @el-mapache @jeremiak @brandocalrissian \n. In order of my preference:\n- U.S. Web Design Styleguide\n- U.S. Web Design Resources\n- U.S. Web Design Goods\n- U.S. Web Design Supply\n- U.S. Web Design Products\n- U.S. Web Design Materials\n- U.S. Web Design Capital\nI don't think \"system\" is good unless you intend it to be \"all or nothing.\" System, I think, connotes one object, whereas I've thought of USWDS as a bundle of resources.\n. https://federalist.18f.gov/preview/18f/federalist-docs/uswds/pages/how-federalist-works/ has an example where bulleted lists have different widths than other text. Does not look great. Any idea of timing for looking at this? (this is with my Federalist hat, not my P&P hat). Totally fine to wait for your process to run! I will hold on merging the USWDS code into federalist-docs and look forward to seeing the change.. @juliaelman only question is that right now, it seems like the line length control is inconsistent between standard text and lists or bullets: https://federalist.18f.gov/preview/18f/federalist-docs/uswds/pages/using-federalist/launch-checklist/\nI understand if there's a design choice to limit characters but the different lengths make pages look choppy.\n. This issue is now tracked here: https://github.com/18F/federalist-docs/issues/45. Hmmm. I still like the idea of training people to look for .gov and explaining what the https cert means. We should be educating people to look for that on more sites and to pay attention to URLs.\nWhat about:\n\nThe https:// ensures that you are connecting to the official website, helps keep any personal information you enter safe, and limits monitoring of your browsing activity by your internet provider.\n\n. I think we have HTTP/2 on CloudFront for all new distributions (maybe GovCloud is different); @konklone can confirm https://aws.amazon.com/about-aws/whats-new/2016/09/amazon-cloudfront-now-supports-http2/. It's not our preference and I'm not sure how CDN's are involved (this is all set behind all of our CDNs). It's a requirement from GSA IT not to put a * exception, but instead to use a white list.\nI get that its irrational but I don't want to pick this battle unless there's high impact.. Hey @jmhooper, I don't have sufficient experience to triage this. Should we prioritize it while you are still on Federalist and open a companion issue in our own repo? cc @brandocalrissian @jseppi . Hmmm. I had the same issue a few months ago but it was fixed in https://github.com/18F/web-design-standards-docs/pull/279 and the accordions are working just fine for me now on Chrome. Have you tried clearing cache?. So weird though! You see this in the code right? <button class=\"usa-accordion-button\" aria-controls=\"code-text-input\" aria-expanded=\"true\">Code</button>. What a bug. Good job @toolness.. ty ty @donjo \nHere's the previous PR (I think) that did this: https://github.com/18F/web-design-standards-docs/pull/202\n. Correct @toolness! I mean \"components\" like components.standards.usa.gov - if we should change that URL to be clearer, that is ok with me.. Thank y'all! I put the site in for re-scan.. Do not merge; something weird happened with the version bump. @donjo I didn't but did y'all solve the issue blocking builds?. kk must have been NPM. I would suggest people read through https://github.com/18F/web-design-standards/issues/1518 for the thoughtful comments - thanks for referencing that issue Dan. I listed some alternative name ideas there last time we discussed, though I admit recent feedback has changed my view a bit.\nI don't think the current name misrepresents (strictly speaking), though it does have a potential of confusion. We're in a space that intersects several competing sets of norms, and in the world of web design, a \"design standard\" isn't legally required. It represents best practice and allows for a consistent experience (e.g. http://www.justinmarxdesign.com/nordstrom-ux-design-standards/ https://www.uxmatters.com/mt/archives/2014/08/principles-over-standards.php https://uxplanet.org/7-deadly-ux-sins-and-how-to-avoid-them-f47292e1f5dd http://digitaldesignstandards.com/ http://design.comcast.com/standards/)\nIn other words, a \"design standard\" is policy, not a legal mandate.\nHere is the policy guidance from OMB M-17-06:\n\n\nEnsure a Consistent Look and Feel Across Websites\nCommon user interface components and visual styles help create a seamless transition across an\nagency\u2019s websites and improve the ease with which the public can find information.\nFederal Agencies should ensure a consistent look and feel of their public facing websites and digital services.\n\nThe U.S. Website Design Standards, found at https://playbook.cio.gov/designstandards/gettingstarted/,\nis available to all agencies to assist with this process. \n\nI think this says that it is policy for agencies to have a consistent look and feel - which means that agencies should be working off of \"design standards.\" The USWDS are an example set of standards.\nI don't think its quite fair to say, within this context, that the USWDS are supposed to only be \"voluntary guidelines.\" We know from talking with partners that the \"standards\" name has been helpful within agency internal discussions about web design - they have been useful resources \"in the corner\" of developers arguing for better practices on their websites. They assist agencies in doing the right thing - though agencies can promulgate their own design standards to serve the OMB ask, instead of leaning on our general product. US government web design is in a better state right now because civil servants \"lean on\" the standards to do the right thing for the users.\nFinally, in line with the NIST guidance, the USWDS are meant to \"import\" best private industry practice into the government. They are completely in line with that part of the guidance.\nMy suggestion would be to determine what you want the name to accomplish and then look at various possibilities against that criteria of success. I agree that \"standards\" can cause confusion, but if possible, I don't want to give up all of the benefits that the current name allows for the government. I wonder what other names can continue these benefits and be accurate in industry parlance without the possible confusion that's present today.. Lots of good comments in this thread.\n@bruce-usab: Thank you for the critique! All of those names can work for me, and I accept that the USWDS didn't conform to those bullets from NIST - I was saying more generally that the idea of the standards is in line with that use of the term.\nI think \"reference design\" does the best job of any name I've seen so far of keeping the benefits of the current name. I'm personally doubtful that \"design system\" is clear, but user research is a better judge of that than I. . We can run URL changes for cloudfront in two different ways:\n\n\nNew site on new cloudfront domains (I recommend this one)\n\nWill makes new domains\nYou point DNS for the new URLs to the new domains\nconfirm the HTTPS got set\nYou change the URL in Federalist settings for the repo\nYou set up redirects for the old URLs, possibly using a separate federalist repo that's already scanned\n(if needed) Will points the old cloudfront address to any redirect repos.\n(otherwise) the old CloudFront distribution is deleted\n\n\n\nNew site on old cloudfront domains\n\nWill updates your domains to serve for both URLs\nYou point DNS for the new URLs to the old cloudfront URLs\nconfirm the HTTPS got set\nYou change the URL in Federalist settings for the repo\nYou set up redirects for the old URLs, possibly using a separate federalist repo that's already scanned\n(if needed) the old URL DNS is pointed at a new cloudfront address\n\n\n\nNote that these are separate from changing the Github repo name or your org, which is currently only possible via deleting and re-adding the site to Federalist.. I might be totally wrong; want me to circle back and ask them?. KK. Waiting for GSA IT to tell me what the mixed content issue was.. ",
    "anthonygarvan": "+1\n. ",
    "scoota69": "Also fonts would be appreciated too along with the icons\n. ",
    "MsWebGirl": "+1 @KimberlyMunoz as a agency that presents a lot of financial information, having specific govt-wide financial icons for instance, would be helpful\n. +1\n. ++!\n. ",
    "JHKennedy4": "+1 from Vote.org\nWe send our <3.\n. ",
    "mattlangan": "What are the accessibility implications (thinking screen readers here) of adding the the \"i\" tags where the icons are used? It's my understanding that I should add aria-hidden=\"true\" to all such tags, which could get a bit cumbersome. I'll likely begin using a helper method to render all such tags but wanted to explicitly state that point of concern.\nFWIW I've had great experience working with font-awesome and just integrated it seamlessly into my latest USWDS-based project.\n[edited to remove html syntax for \"i\" tag because it was being parsed as html!]\n. @joshbruce I'm using Ruby on Rails. The majority of places where I'm rendering an icon are already using helper methods (nav links) to run additional logic like applying .usa-current. I can just add an additional param to the request to pass the icon declaration. I think you and I are thinking along similar lines with regard to generating html without writing it :)\nI've also been tinkering with what I'm calling \"Protosketching on Rails\", which is to be a pre-configured Rails scaffold that includes core features like USWDS, Devise w/ User model, etc... It's more of a focus on feature scaffolding rather than UI, but still leveraging the underlying UI framework that comes out of the USWDS box.\n. @joshbruce ~~will move convo to PM to unhijack this thread~~ (TIL no PM on github)  - I'm an old-school fronted guy who moved into the backend more recently so I'm most comfortable writing my views in html, and just using methods when I need some intelligence applied to the output. However, I wouldn't be surprised to learn that I am rather unique in this. I know front-end abstractions are all the rage these days.\n@Drakenhart Yes that definitely looks compelling, especially since I've heard that the aria hidden declaration might not be 100% reliable. I also believe that CSS-generated content is ignored by screen readers, which is precisely what we would want in this case.\nFrom http://www.ssbbartgroup.com/blog/csscontentproperty/\n\nNow those of you who know a little bit about screen readers are probably having a moment of truth right now and/or a conniption. This is because screen reader software usually reads from the DOM that initially loads in the browser before the stylesheet is applied. The symbols that are inserted into the page using the content CSS property are generated symbols loaded after the DOM loads.  The screen reader will not announce generated content to the user who is blind \u2014 even if the user refreshes the screen reader\u2019s buffer after the page loads. This can be a problem if the symbols inserted into the page are essential to understand the meaning of the page. If the content CSS property is used to insert a little smiley face, for example, it\u2019s no big loss to the screen reader user if he doesn\u2019t know it\u2019s there.\n\nI'd want to dig in to make sure that change isn't at the expense of using the \"i\" tag (which might still have a place... or might not) but the approach you linked certainly seems to eliminate excess tagging without changing the way FA is working and without running into font-family conflict.\n. @Drakenhart well that ends the discussion for me. gonna re-work to strip \"i\" tags. thank you very much!\n. ",
    "s2t2": "As a developer using USWDS for the first time, I was kind of expecting Font Awesome to be in here. It seems FA icons are used in uswds-assets, but not in the standard itself.\nThe argument for inclusion is reasonable. Font Awesome is perhaps the most popular set of icons on the web. And Twitter Bootstrap has included an icon font in their framework for years. Inclusion provides developers with a consistent and effort-minimizing out-of-the-box experience.\nHowever the argument against inclusion is also reasonable. FA is not the only possible icon set and is not necessarily comprehensive for government-purposes (as discussed in comments above). Also, Twitter Bootstrap has removed icon fonts from their newest version (4.0).\nA good compromise would be to at least add information to the USWDS docs providing links to various icon sets, and guidance on the recommended approach for how to include and use them in conjunction with USWDS.\n. Hey I just wanted to chime in that an officially-supported CDN would be a desired way to leverage this library, especially helpful for rapid prototyping. \nSee also: Twitter Bootstrap - Getting Started w/ CDN.. Hi, I was looking for float utilities like pull-right and pull-left. See Twitter Bootstrap: https://getbootstrap.com/docs/4.0/utilities/float/.\nEDIT: It would be nice to maintain as much parity with Twitter Bootstrap as possible, to provide a consistent developer experience. So as many utilities as possible would be helpful.. ",
    "Kireyin": "That and validate only if numbers are inputed.\n. ",
    "afeld": "@maya Looks good to me! I would just check out this branch locally and make sure that you can run all of the important commands.\n@mbland Maybe worth listing some \"manual testing notes\"?\n. :shipit: \n. Can you try opening XCode (like, the desktop app)? It should pop up a ToS agreement which you need to accept, then try again. \n. Some thoughts on implementation:\nTo have the release notes reflected in https://github.com/18F/web-design-standards/releases and on the USWDS site, you will probably want to use the API to show/copy data from one to the other. There are a few ways of tackling this:\n- Have a script that copies from one to the other that you run with the release, or whenever you want to sync them.\n  - :+1:: Only dependent on network connection at release/sync time.\n  - :-1:: Not immediately obvious what the \"source of truth\" is (i.e. they could get out of sync unless the team is careful about how they're updated).\n- Have the Jekyll call out to the Releases API on build to generate the page, e.g. using jekyll-get.\n  - :+1:: Your release notes will (almost) always be in sync.\n  - :-1:: Your build becomes slower, and reliant on a network connection to GitHub.\n- Generate the page with JavaScript, calling out to the Releases API on page load.\n  - :+1:: Your release notes will always be in sync.\n  - :-1:: Page loads will be slower than normal static ones, and reliant on a network connection to GitHub.\nAll of this being said, I question the virtue of having the release notes reflected in two places. You should seriously consider having them in one place, linking from one to the other, and be done with it.\n. Shameless plug for a plugin I built that you may want to draw inspiration from: https://afeld.github.io/bootstrap-toc/. Workarounds: https://discuss.circleci.com/t/create-separate-steps-jobs-for-pr-forks-versus-branches/13419. Today I learned!\n. ",
    "openbrian": "Hey all, i was teaching myself about NPM packaging today, and i thought i'd use my team's project from the recent #GSAhackathon as a test subject.  We wanted to use the WDS in our sails and sass based project.  Being new to this, i'm not sure i did this in a reasonable way.  I followed a pattern based on node-bourbon and node-neat.  It uses node-sass so it's all ruby based.  Check it out, use what you can.  https://github.com/openbrian/18f-contrib-web-design-standards  Any feedback is appreciated.\n. When I add .usa-width-five-twelfths to that list and recompile the SCSS it acts like one-third.. If you want, I can submit a PR with the missing widths.. ",
    "stphnwlkr": "The SVG format would be the way to go. With the release of Adobe XD for both Windows and Mac, you need a more open standard for organization that do not support the Apple platform willingly.. Throwing in my two cents...one like they have on USA Spending would be really nice. Available on every page and potentially contextual.. For what it is worth, I created a helper file for colors so that I could mix and match as needed. I use it all the time. I do need to update if the 1.4 update color changes are going to be the way forward. https://github.com/evetsreklaw/USWDS-Extended/blob/master/colors.scss. @bruffridge We had the same requirement. I created https://github.com/stphnwlkr/USWDS-Extended/blob/master/_table.scss (I still need to update the color references).. Thank you for adding this.. I do think having documentation is a bad idea. I am fairly certain most people understand the risks whether it is SASS, CSS, JS, etc... As the originator of this request, the problem is that systems are locked down as part of the normal security policy and the installation of Node is not an option in many cases. On top of that, 95% of the customization most people are doing is CSS related and access to all the SASS files is what is needed.. Interesting. As you noted, adding aria-multiselectable=\"true\" resolves the issue. Definitely needs to be addressed in the standard accordion.  Update: Should say that using  aria-multiselectable=\"true\" is a work around, not a resolution.. It is part of the 1.2 update which is why I knew about it, but using the single select, basic version should not have this problem. Focus should be reset to the top of the newly opened panel.   Reference : https://federalist-proxy.app.cloud.gov/preview/18f/web-design-standards/develop/components/detail/accordion--multiselectable.html. @toolness It works perfectly in Dreamweaver CC 2017 - uswds.css generated without error.  This would have saved me so much time. Thank you!\n\n. I am of the school that CSS is about styling and not about user interaction. This way you simplify and minimize they styling you need (write once use in several places). Since I am not building it myself, I just need to know what the road ahead will be so I can make the necessary changes. In my opinion, moving from 1.3 to 1.4 should not be breaking basic styling and certainly not without documentation.. I guess it would have helped if I looked at variables.scss in detail. I think it answers my question about the road ahead. I am definitely not opposed to colors being named colors. I agree with your assessment for 2.0.. I just went through my code and made the updates. I would like to make a recommendation that the terms \"primary\" and \"secondary\" should only relate to hierarchy and never be related to color. The button-primary and button secondary are not logical names (IMO). Since default and primary are the same, do away with primary and just use usa-button and usa-button-inverse. Secondary-inverse should just be use-button-black-outlined. . A third. I have started looking at alternatives as well because the grid is too limiting. The CMS team has done a nice job as well as the more popular frameworks. . Thanks for the effort on this. I was a fan of \"standard\", but I understand the need to adapt. Looking forward to system updates.. Please! Keep in mind that there are color perception issues as well so an indication that colors are susceptible to different conditions would be helpful. Creating one or more visualization palettes would also be nice feature. . I tend to be a fan of not reinventing the wheel. Some nice work already done at Patternfly - https://www.patternfly.org/styles/color-palette/ - also a big fan of fluent https://www.microsoft.com/en-us/design/color and material https://material.io/guidelines/style/color.html#color-color-palette. This is a good list. If grid is referring to something like bootstrap's breakpoints (xs-6 or md-8) that would be number one for me. Many of the others I have created and I am sure others have too so I hope others share what they have done. Colors - usa-fill- and usa-text- + color at https://github.com/evetsreklaw/USWDS-Extended/blob/master/_colors.scss. . Asked the same question on Slack a year ago (March 12)... Shawn Allen replied \"it's mostly an artifact of how we've structured our Sass\u2014specifically, using @include vs. @extend :confused:\nthere are tools that you (or we) could use to post-process the CSS and optimize selectors and properties a _lot more \nthe flip side is that debugging the CSS becomes a lot harder when you optimize it like that.\". Yes. Sorry I wasn\u2019t clear on that. . So with all the discussion about which naming convention, especially with all the variations, why not just use the value? No ambiguity with margin-top-32 or padding-left-20 or layout-1440. . @thisisdano Thanks for the response. I find that the ambiguity of xl or larger or, God forbid, triple-plus for spacing would send me back to the source code to figure out what those values actually are. For me, the grid 8 would be my next choice because it is just math.  The numeric values are easier for me to visualize as I am working. . Not trying to beat a dead horse, but replacing \"30\" with \"triple\"  or \"35\" with \"triple-plus\" is the opposite of abstraction. You are now hiding simplicity with complexity. Especially if you change your base to 16, then you have to remember that triple-plus now means 56, where 35 always equals 35.  The only place where it makes some sense is negative spacing, but I am not sure if that should drive the entire convention. I really like the way 2.0 is headed and I will learn the system when it is published -  just voicing an opinion.. I asked this question a long time ago, but why are we attempting to reinvent the wheel? When it comes to the grid, why not just follow everybody else (bootstrap, foundation, CMS.gov) and use one of the variations (md-col--4, md-4, medium-4). People understand the t-shirt sizing and the column count combination. I am not sure you can come up with a system that the entire world will adopt or would not try to modify after the fact. This would certainly make adoption easier.. Please keep seven variations.. I believe he is referring to pagination for large data sets or even simple next and previous. Bootstrap example http://getbootstrap.com/docs/4.1/components/pagination/. Is it even required? How many implementers of the USWDS are actually using it and what value does it serve the citizenry if they even notice it is there? I suspect most people know what https and .gov indicate.. Should look at what bootstrap did when they went to version 4. https://getbootstrap.com/docs/4.0/migration/. Having attended An Event Apart and seeing the power of CSS Grid as well as learning that Internet Explorer supports almost everything, I think this should be reopened and implemented as the primary grid to minimize the need to redo  and relearn the grid system is a few months.. I think that is sort of inherent to the grid using minmax(). In some ways, it is a bit of a paradigm shift. There are definite uses for flexbox and multicolumn but none exclude using the other. I should have added that if all you need is a row to do something then display:flex might be the better choice (like a navbar).. I think it would be beneficial to have fullwidth as an option in _settings.scss ($theme-grid-container-max-width) so that all the locations that read the setting adjust accordingly. Right now the $theme-grid-container-max-width setting is not being used, but I am assuming it will be.. This was a result of the system fonts being loaded and not design system fonts.. I think the issue will be bigger because of the new background color utilities.  Not sure if there needs to be one for every color, but certainly withinin the useable background combinations to help reinforce color contrast requirements (light text - dark background, medium light text - medium dark background, normal). The medium combination could be unneeded or may need to be a local creation, but adding it for consideration. I also think you may need to address a:visited.. I would be curious to know where are you seeing this? I use Edge all the time and have not experienced this issue.. I say yes. This would help explain what you're doing, how we might be able to take advantage of them in our extended styles, and serve as examples for others leaning some of the advanced features of Sass.. @maya Not trying to interrupt your workflow, but as it relates to the UWDS footer I would say no underlines. My rational, this is a NAV area and not mixed content.  VA's new preview site uses underlines which I think are needed on the dark background, but it really adds to the noise in the footer (my opinion).. I think underlining on hover or some other effect (i.e. background change) is ideal. I just created a new footer with no hover effect (color change too subtle) and I do not like it.. Thank you.. Just in the mobile menu. I am not sure either...compared Chrome to Edge and no difference.. Interesting...apparently it is a known issue.  list-style-type:none not loading on initial page load. Refreshing the page fixes the problem. I have never noticed it.\nhttps://github.com/webhintio/webhint.io/issues/210. I submitted a bug to Microsoft (I think it might be a regression). \nSort of related but not browser specific -  usa-accordion-bordered does not set list-style-type to none, but requires usa-accordion. See https://v2.designsystem.digital.gov/components/typography/#pairings-and-styles. So will the accordion fix be like buttons where \"bordered\" is just and extension of usa-accordion ? . Excellent!. Took me a minute to reprocude, but it turns out that button-visited wipes out the modifiers. Since those on the demo page don't have an action associated with them, you can't reproduce it. I put two buttons on Project Corsair and you will see once you click them, they revert to button-visited.. Integrated the changes and buttons are working as expected, but the links that are not buttons in the mobile menu are now impacted.. Leaving a comment as requested. I have two sites 98% converted from 1.68 to 2.0 beta - one of which should be live this week...learning curve is not steep, but more like rolling hills. . Downloaded the zip, recompiled css (I use the scss files exclusively), tested, deployed to production. No errors - button issue resolved (thank you).. @thisisdano the beta 2 folder has all the bourbon and neat files in the lib folder again. Doesn't cause errors, but may cause confusion and adds to the file size.. @jbalboni I am not a USWDS rep, but I am fairly certain this is why the multiselect option was removed from 2.0 and accordions no longer use the ul element.. I will add my opinion. I do not think it is the responsibility of the USWDS to provide anything more than the core layout, visual styling, JavaScript functionality, and best practices guides. If the user community wants to extend it for the framework of the month then what might be nice is an official  location for sharing extended features, component, framework implementations, themes, etc. . The crosswalk from b5 to b6 is terrific. . FWIW, I agree that this was the right way to go. I like your approach to differentiating the base and modifiers.. I would add that since you are now setting the standard for the future of government websites (by law), it might make sense to adopt BEM fully. It sets the expected baseline for usage, contributions, and may improve adoption.. Turns out there is more to this than just the comma... doing some more research. . Yes it is still a problem...see  https://stphnwlkr.dev/. It is the comma...there were 47 instances and I missed a couple of key ones. Strange, I removed \"background-image: none;\" and it fixed the problem. Otherwise it was missing in desktop and mobile.\n. My mistake...I was seeing two hyphens in usa-search--small but there was only one. . \n+1. ",
    "gbinal": "Hey @JJediny.  \nSo - I totally agree with the usefulness of this.  Taking the same model (laid out here), I got started building this here.  \nI definitely think a number of agencies would use this if we iron it out, but regardless, I recommend we take this over to Project Open Data, since I think the goal is pretty distinct from the web design standards. \n. Made a note about these ideas over at https://github.com/project-open-data/simple-catalog-generator/issues/3.\n. +1 - expanding the pull request to do that \n. We definitely could.  It's a bit lengthy though and may not look good.  I don't see it as a big problem but am fine either way.\n. It won't be integrated into the new standards.usa.gov profile, but you won't be losing any data.   \nYou'll always have access to it via the playbook profile.\n. \ud83d\udc4d \n. As an aside, I want to applaud this project for its continued success.  It has been re-used by scores of government websites and is a great example of open source in government.  No one has to use this project but for those who want to, it's a really solid resource that saves time and money, while normalizing the look and feel of government websites.  The 1,028 closed issues and 1,050 closed pull requests speak to the robust collaboration that continues with this project.  I haven't worked on it but I sure appreciate those who have.  \nPersonally, I've been amazed at the frustration and annoyance that has been directed at the project's name.  Despite reading all of the threads over the years about it, I still don't understand why those who want to use it, can use it and those who don't want, don't have to, especially given all of the work that we all have in front of us.  \nBut it seems clear to me that the move is to go on and change the name.  My suggestion:  \n\nPick one of the words that starts with S that have been suggested above.  \nDo some research to ensure that the candidate for the new word to replace standards doesn't trigger some other similar problem.  \nGo ahead and put in the effort to change the materials and the project URL and set up redirects for the old URLs.  \nMove on in life and keep delivering.  . +1 to that URL, @thisisdano.  It's a good balance.  . \n",
    "pjdufour": "Put this together:  https://github.com/pjdufour/datajson-builder.  Check out the live site at http://pjdufour.github.io/datajson-builder and http://pjdufour.github.io/datajson-builder/data.json.\nI put in some example data from State's data.json at http://state.gov/data.json.\nI think using Jekyll to build YAML posts into a data.json could be immensely useful.  This lightweight approach would enable agencies to leverage the great social aspects (issues, PRs, etc.) of GitHub to manage publishing of open data.  CKAN could harvest directly from this site.\n. ",
    "csakis": "I welcome bourbon and neat. I think they are very interesting and modern techniques, I have never used them myself but am looking forward to learn them. By choosing them you made your job much harder convincing others to comply with this new standard. \n. What's wrong with JQuery? Have I missed something?\nOn Mon, Oct 5, 2015 at 11:05 AM, Marco Segreto notifications@github.com\nwrote:\n\nReopened #784 https://github.com/18F/web-design-standards/issues/784.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/18F/web-design-standards/issues/784#event-427029461.\n. \n",
    "kottenator": "BTW, you use Neat which documentation says:\n\nWe built Neat with the aim of promoting clean and semantic markup\n\nThis means that Neat wants to avoid .another-grid > .col-3. \nBut you bring .usa-grid > .usa-width-one-third which is opposite to Neat's aim...\nI understand that it's necessary in order to use plain CSS instead of SCSS... \nSo I come to a general question: do you strictly recommend to use plain CSS? Or do you also recommend to use SCSS with \"pure\" Neat and Bourbon?\nIt would be great if you'd provide how-to / quickstart / guides for both ways\n. Ok, I've created a new issue - #889\n. Hi!\nI've created a pull-request with new box-shadow implementation for form inputs. @carodew mentioned that shadow inside the field requires some research and proof, so I've not added it for now. What I've changed is the outer glowing shadow.\nSee my comments about what has been done - inside the PR.\nI'm not sure where the discussion should go - here or in pull-request comments?\n. Hi!\nSure, everything you say sounds reasonable. I will decouple this issue (and my pull request) into several\n. What about focused state?. I've launched a demo site to show my changes. It's a temporary site running on Cloud9 so it will disappear in future.\n. My pull-request contains both new feature (new focused inputs shadow) and bug fixes. If you're not sure about new feature, I can split my PR into two. What do you think?\n. Thanks for the feedback! What about bugfixes/SCSS improvements without touching the UI? Do you want me to separate them into another PR?\n. ",
    "nitos": "Yes, right side please. \nhttp://www.uxmatters.com/mt/archives/2013/02/how-do-users-really-hold-mobile-devices.php\n\n. ",
    "thednp": "What's wrong? \"jQuery - Write less do more\" is no longer a valid sentence. Also for old IE there's a ton of polyfill, users may opt to use or not. So yes, crap.\n@msecret it's a good think to have tht in mind. Thanks for your reply.\n. ",
    "swirtSJW": "If we embrace breadcrumbs then is would be good to be aligned with these standards\nhttps://www.w3.org/TR/2017/NOTE-wai-aria-practices-1.1-20171214/examples/breadcrumb/index.html. ",
    "Taitrnator": "I think the breakpoint system is good but its somewhat unique. It forces people to respect responsive a bit more but limits the options. \nI just think lots of people are accustomed to adding classes for different sizes. \nfor instance a dev might want: \nusa-medium-one-half usa-large-one-fourth \nId like to see the grid as it is, automatically respecting the breakpoints but also extended with some classes to override that behavior. \n. better yet, what about just going with one number:\nusa-one = 1/12 \nusa-six = 1/2 \nor 1/3 as you mention becomes usa-four\nthen those can be rounded up one for smaller screens.  where the intention is to use 6 columns.\nusa-one rounds up to usa-two for medium screens \nor usa-seven rounds up to usa-eight \n. ",
    "buckaroogeek": "Nancy\nI have not used Spring for almost 10 years now, but I would image it would\nentail writing a build task that builds a template based on this standard\nin whatever template format your Spring implementation is consuming.\nBrad\nOn Wed, Oct 7, 2015 at 10:46 AM, Nancy Johnson notifications@github.com\nwrote:\n\nHow can we include this into a spring framework?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/18F/web-design-standards/issues/806.\n. We are in the process of evaluating some additional tooling around our web\nand web application standards so that we can continue to support multiple\ntechnical stacks that are present in our agency. The public facing web is\nbuilt on Drupal or a Java Portlet standard (headed towards retirement) as\nwell a number of static pages served up by plain old apache. On the web\napplication side of our agency there are applications based on JBoss,\nOracle Weblogic, Websphere, IIS, PHP, and so on.\n\nMy thinking is that tooling that includes a build process (eg gulp) and a\ndependency manager (npm perhaps) and possibly yeoman could help us\nimmensely in publishing standard versions of our agencies template that\nwill work well in these different stacks. Having components as a foundation\nand standard published versions generated by the built process seems to be\ndoable.\nSomething that is definitely a work in progress at the moment.\nBrad\nOn Fri, Oct 9, 2015 at 1:06 PM, Marco Segreto notifications@github.com\nwrote:\n\nHi @WestonThayer https://github.com/WestonThayer, I'm one of the front\nend developers who worked on the standards.\nThere's a couple of reasons we've chosen the approach we did. I think the\nbar to entry is a major reason for choosing this method. Our initial\nresearch highlighted that many of our potential users in government were\nmore comfortable and would be better served by a simple copy and paste\nmethod of applying the standards. Many of the people we interviewed didn't\nhave the workflow setup to easily implement something like React or\nAngular. The fact that React, and likely Angular, requires a build process\nwould alienate some of our potential users. In terms of web components, we\nfound that people were more comfortable coding HTML and CSS and staying out\nof the Javascript land.\nAnother aspect of this, which is still being debated within our group at\n18F, is accessibility when Javascript is disabled. Many of the projects\nwe've worked on at 18F have requirements that the page is at least readable\nand presentable when Javascript is turned off. This requirement makes it\nharder to go with the web components route (I've never actually seen a\nwidely supported method of rending web components without javacript) and\nwould make the React and Angular routes even more complicated (having to do\nserver-sided rendering). We at 18F eventually want to research and come to\na formalized conclusion on whether we should build sites that won't work\nwithout Javascript, but until we do that, we have to accept it as a\nrequirement for at least some of our sites.\nI should also mention that maintainability is something we considered\nwhile build our library in this way. It's been our goal to make the style\nof our components separated from the markup. This means trying to stay away\nfrom styling specific HTML elements and using classes instead. Our hope\nhere would be that we could change the styling of the standards without\nhaving to change the markup at all. That being said, we did find it\ndifficult to fully support this idea, so we have some additional work and\nresearch to do in order to be successful with this.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/18F/web-design-standards/issues/813#issuecomment-146974727\n.\n. Greetings - just checking to see if there has been progress beyond the useful prototype on codepen.. Thank you\n\nOn Mon, Jul 16, 2018 at 12:14 PM Maya Benari notifications@github.com\nwrote:\n\nHi @buckaroogeek https://github.com/buckaroogeek, thanks for following\nup! There are no updates beyond the prototype on CodePen at this time.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/uswds/uswds/issues/959#issuecomment-405350363, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/ABQ8Ht1SEm3injU2KzLxS6cAceSHud3xks5uHOX6gaJpZM4HH69a\n.\n. I would like to see a css grid and flexbox variant of the standards. . \n",
    "brittag": "I'd suggest the simple modification of \"As a work of the United States Government, this project is in the public domain.\" I like that this provides a tiny bit of context for the license.\nA bunch of embedded components by non-government people are not in the public domain (mostly MIT licensed), so I believe \"This project is in the public domain\" wouldn't provide enough information.\nThe full summary would be more like \"Most of this project is a work of the United States Government, which means it is in the public domain within the United States, and this project waives international copyright. Some components are works of other people, not in the public domain.\" But I don't think I can condense that into two lines. :)\nAdditional consideration: this text seems to be just for guide page footers, and the guide pages are in the public domain since government people wrote them. But the guide pages do have a link at the top for \"download code\", which includes the non public domain code, and overall the project is a mixed project. (I just filed #816 to suggest including the full license in the \"download code\" file.)\n. Tiny point while this footer is up for discussion: looking at 18F's Content Guide on capitalization, it recommends not capitalizing \"government\".\n. Thanks @juliaelman! I'd encourage including a template LICENSE file in the download zip file, or otherwise making a template LICENSE file prominently available from https://standards.usa.gov/download/ and https://standards.usa.gov/getting-started/developers/\nLooking at this thread, I'd encourage considering the related original issue in this thread a bug and not an enhancement, since carefully complying with open source license requirements is part of our obligation as open source community members.\n. Hooray, thank you @juliaelman!. I'd suggest saying \"Section 508 of the Rehabilitation Act of 1973, as amended in 1998.\" It looks like the 1998 amendment added these accessibility requirements, so that's nice to mention, but likely it's slightly too formal for this context to give the specific reference to the part of the law. :)\n. Perhaps it would be helpful for this readme to briefly summarize what the go script will install for this project, to help people have more confidence before running it (and to have a tiny bit more context about how this project works internally, in case they're interested in modifying it)?\n. This email address would be nice to mention in the README as well.\n. Thanks, that adds to the importance of explaining on this homepage what \"alpha\" means to this project. :)\nAs an alternate bolder way of communicating that these standards are optional, the lead could include a bit more information, such as adding \" \u2014 model standards that any website can adopt and build upon\":\n\nI prefer to make people the subject of phrases instead of saying that websites are doing the work, but I'm not sure how I'd fit that into very brief phrasing.\n. Oh wow, this was a long time ago! Looking again at the site, the answer to \"Are these standards mandatory for new government websites?\" is still unclear to me, and \"How will we hear about updates?\" takes some digging (I see that the release notes are visible, but I wouldn't immediately know how to subscribe to notifications of new releases).\nI don't know though whether these two questions are still important (I don't know whether people still ask them).. Tiny copy suggestions: Should \"The Source Sans Pro font files\" and \"The Merriweather fonts\" have matching phrasing (either \"font files\" or \"fonts\")? Does it make sense to simplify \"a custom subset\" to just \"a subset\"?\n. @maya I'd say it's fine! The goal of that phrasing is just to help readers identify which files have which licenses. Maybe \"font files\" instead of \"fonts\" would be more consistent with the rest of the list.\n. Sure, that makes sense to me!\n. ",
    "rtwell": "These alerts are compliant: we use more than color alone to convey information about the alert. In theory users will not see those alerts side by side, so discerning between them is, from a practical standpoint, irrelevant. That said, there are folks that DO see them side by side, and it would be great if we could accommodate them!\nI would recommend:\n\n\nRefine the design of our alerts to include a darker slab of color on the far left, whilst preserving the light tones for legibility, perhaps something like this: \n\n\n\nUpdate our color palette with tones of color that are more easily distinguished by everyone. Here's what i get when I unzip the contents of v0.8.2.zip:\n\n\n\nNo assets folder to be found. \n. I think that is a great idea!\nOn Wed, Apr 13, 2016 at 2:01 PM, Carolyn Dew notifications@github.com\nwrote:\n\nI think it might also be valuable to include the color contrast pairings\nfor typography in the colors file (or the typography file). Thoughts?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly or view it on GitHub\nhttps://github.com/18F/web-design-standards/issues/933#issuecomment-209596065\n. up to you. i knew that repo existed but couldn't find it\u2026seems simpler to\nkeep all things USWDS in one repo, but i'm not github power-user either.\n\nOn Mon, Dec 21, 2015 at 10:41 AM, Maya Benari notifications@github.com\nwrote:\n\n@rtwell https://github.com/rtwell @colinpmacarthur\nhttps://github.com/colinpmacarthur should we move this over to\nhttps://github.com/18F/web-design-standards-assets since it deals with\nthe design assets?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/18F/web-design-standards/issues/934#issuecomment-166354163\n.\n. my suggestion would be to implement a design that considers the color of the component , which would be new functionality we bake into the WDSs. For example, all primary blue buttons receive a focus style XYZ, whilst secondary red buttons receive a different style ABC. . i'm thinking we could shave off a few of our button choices, and that would\nmake the focus issue easier to solve\n\nOn Tue, Jul 18, 2017 at 4:02 PM, Atul Varma notifications@github.com\nwrote:\n\nCool, that sounds good to me! I think that there is a general guideline to\ntry to keep the focus style as consistent as possible, so that folks can\njust e.g. \"look for the pink rectangle\" or whatever whenever they press\nTab, but that might not be possible with the Standards.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/18F/web-design-standards/issues/1655#issuecomment-316196723,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AL-58evMi7dbnG7_lN-iYYSlRJshb1qwks5sPR1YgaJpZM4LTQLo\n.\n. someone should probably review / proof my work. here's the current version for download.\n. ### Labels\n- [ ] Change from blue to gray #5B616B\n- [ ] Corner radius should be 2px\n\n\n. https://github.com/18F/web-design-standards-docs/issues/370. ### Checkboxes\n- [ ] Border radius 2px\n- [ ] Checkboxes should be 20px square\n- [ ] Overall spacing consistency\n- [ ] Disabled checkbox should be border: gray-light #aeb0b5, background: gray-lightest #f1f1f1\n- [ ] Disabled state text should be gray-lighter #d6d7d9\n\n. ### Radio buttons\n- [ ] Button should be 20px square\n- [ ] Overall spacing consistency\n\n. https://github.com/18F/web-design-standards-docs/issues/371. https://github.com/18F/web-design-standards-docs/issues/372. ## Basic header\n- [x] Overall spacing adjustments\n- [x] Hover state should turn all elements blue\n- [x] Underline element should span the width of the words + the down carat, regardless of state\n\nBasic header with mega menu\n\n[ ] Overall spacing adjustments\n[ ] Links should obey our grid \n[x] Provide examples of links that are longer and flow onto more than one line\n\n[x] Background color for menu should be #122E51\n\n. ## Extended header\n\n\n[ ]  Overall spacing adjustments\n\n[x]  Hover state should turn all elements blue\n[x]  Underline element should span the width of the words + the down carat, regardless of state\n[x] Search icon should be primary blue #0071bc\n[x] Utility links in the top right should underline on hover\n\n\nExtended header with mega menu\n\n[ ]  Overall spacing adjustments\n[ ]  Links should obey our grid\n[x]  Provide examples of links that are longer and flow onto more than one line\n[x]  Background color for menu should be #122E51\n\n\n. ## Mobile headers\nBasic header\nDefault state\n\n[ ] Spacing adjustments\n\n\nMenu open, nav collapsed\n\n[ ] Spacing adjustments\n[x] Close \"X\" turns blue, and gets a little larger (15px x 15px)\n[x] Larger \"+\" expandable icon\n[x] Provide examples of links that are longer and flow onto more than one line\n\n\nMenu open, nave expanded\n\n[ ] Spacing adjustments\n[x] Provide examples of links that are longer and flow onto more than one line\n\n\n. ## Slim footer\n- [ ] link for \"info@agency.gov\" should be base\n- [ ] Overall spacing is more compact\n- [ ] Return to top receives an underline\n\n. ### Medium footer\n- [ ] link for \"info@agency.gov\" should be base (currently not meeting contrast requirements as primary blue)\n- [ ] circle for agency logo is smaller (82px or 1 col + 1 gutter)\n- [ ] Agency name scoots to the right of the logo\n- [ ] Agency contact info changes from a stacked design to side-by-side\n- [ ] Overall spacing\u2014elements should align with our grid\n\n. ### Large footer\n- [ ]  link for \"info@agency.gov\" should be base (currently not meeting contrast requirements as primary blue)\n- [ ] Overall spacing\u2014elements should align to our grid\n- [ ] Footer links are 15px (1.5 rem)\n\n. ### Mobile footer\nSlim\n\n[ ] Overall spacing adjustments\n[ ] Return to top gets an underline\n[ ] Agency contact information does not stack\n\n\nMedium\n\n[ ] Overall spacing adjustments\n[ ] Return to top gets an underline\n[ ] Agency logo scales down to a 1 col width\n[ ] Agency contact information does not stack\n\n\nLarge\n\n[ ] Overall spacing adjustments\n[ ] Return to top gets an underline\n[ ] Agency logo scales down to a 1 col width\n[ ] Agency contact information does not stack\n[ ] Secondary links should be 15px\n\n. this looks fantastic! \n\ncan we adjust the color of the left border to be #02bfe7 - primary-alt?. i noticed that the icon is scaling when it reaches a smaller width\u2014is that default behavior? doea our type have a scale for mobile? This may be a broader conversation best had somewhere else?. seems like no-header and slim could be one and the same (the slim design), we just need to shrink that icon a wee bit. @sawyerh here's one example that came to mind: https://github.com/18F/web-design-standards/issues/1655 \nBlue-on-blue for the focus state isn't the easiest thing to see, especially when the focus has no padding to help separate it from the element. Our choice for this iteration accomplished a few things:\n1) the dotted styling helped it feel different from the rest of the elements and functionalities on the page\n2) the middle gray color was the most flexible choice to sit on either a dark background or a light background\n3) offsetting the focus from the elements made it easier to see, as well. after talking with @msecret we've decided to research a couple topics/issues:\n- [ ] @msecret will research how we might improve the WDS grid:\n1) make the grid more flexible\n2) rethink our breakpoints (esp the outlier 951px for the nav) and make a univeral set of breakpoints\n3) reach out the design / engineering communities and see what kind of functionality they might want for the grid\n- [ ] Explore what a typescale might look like for the WDS\n- [ ] Explore mobile versions of the alerts. see my response here: https://github.com/18F/web-design-standards/pull/2112#issuecomment-327863317\nalso, correct, there is no color that will work on every website. gray + dotted is the most neutral, and is less likely to be confused with interactive elements (the shadow focus styling looking like a simple shadow, not focus). and while, the gov.uk solution is nice, it is not one focus for all elements, but requires different code for different elements (as i understand it, anyway). also colors like orange, red, yellow and green mean different things in forms, which the WDS are used frequently. when there is an error or a warning and then that element is focused, it's much harder to track.. disabled should look disabled, and color contrast isnt an issue here. imo the button outline and text should be dark, like so:\n\n. @toolness love it!\n. Never seen this, or designed that\u2014and i'm no longer on that project, sorry!\nOn Thu, Oct 12, 2017 at 1:07 PM, Brandon Ruffridge <notifications@github.com\n\nwrote:\nI was just going to open this bug. The biggest issue is the white button\ntext on white background!\nhttps://standards.usa.gov/page-templates/landing/\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/18F/web-design-standards/issues/2176#issuecomment-336219386,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AL-58YvrxCeKtk5N888T_kVy2jnveKjGks5srlVigaJpZM4P3QPa\n.\n. \n",
    "mapsam": "Hey, these look really great! \ud83d\udc4d from this Deuteranope. . ",
    "ericadeahl": "@maya I recommend we use the standard link style with the underline, and not distinguish between a link with or without surrounding text. Thoughts @bradnunnally ?\nIf we do that, we should simply remove all references to \"This is a link without surrounding text.\" on the site, in the code, and in the design files.\nOne additional issue in the links section: the design file includes an icon to indicate a link that will open in a new tab:\n\nbut the icon is missing on the Standards website:\n\nWhen we make this update, could we also add the new tab icon to the site?\n. @maya Oops cool, thanks!\n. @leannegunn Thanks for your note! This has been updated in the latest version of our Sketch, AI, and EPS files (and Omnigraffle update to come.)\n. @maya Looks good to me! (And it's helpful to have the screenshot, thanks!)\n. This looks fine to me! And sorry for the delay. \ud83d\udc4d \ud83d\udc4d \n. @maya @msecret Just reviewed this in Screener. Looks good generally, but could we please make a couple exceptions:\n- On the homepage, remove the underline from \"UI Components\" and \"Visual Style Guide\" \n  (Note: in the new design, we will no longer be using this heading style as a link.)\nhttps://screener.io/app/states/56ce27e2c35ab629470001cf/57462220b5cbdc7271000066/1280x1024/Chrome:env:?state=6666cd76f96956469e7be39d750cc7d9-0\n\n- In the footer component, none of the links labeled \"Primary link\" should have an underline.\nhttps://screener.io/app/states/56ce27e2c35ab629470001cf/57462220b5cbdc7271000066/1280x1024/Chrome:env:?state=95e56b66884f4cdd7a7a8879de278dd2-0\n\n. @maya Hmm yeah I wondered if that was going to be an issue. I wondered if there might be a workaround, where we could keep the sticky sidebar but still have the footer appear once you scroll down past the end of it \u2014 but I wasn't sure if that was feasible. \nIf we change the footer so it doesn't span the full width, what would you recommend doing on the pages that don't have a side nav? They look pretty odd with a footer that doesn't go all the way across. Would we have two versions of the footer?\n. @maya I think they'd have to be a bit different. Something like:\n12 column (Design principles, Future case studies page):\n\n9 column (Components, Getting started, About our work): \n\n. @mollieru Agreed that it's preferable to keep titles short, but in some cases the wrapping might be unavoidable. In those cases I wouldn't recommend truncating the title. I don't think the wrapping is a problem, I'd just make sure there's sufficient spacing between nav items (or another visual indicator like a rule) to make sure users read the long title as one nav item and not two. And I wouldn't go over two lines of text.\n\n. These labels correspond to the three stages of the component maturity scale that will appear on the Standards site: alpha, beta, and recommended\nI propose adding a simple label next to each component's title to indicate its maturity. (These are the small labels from the Standards with color coding added.)\n\nWhen there's a single component on the page, the label should go next to the H1 title:\n\nFor components that are subsections, the label should go next to the H2 title:\n\nWe'll also need to help folks understand what the labels mean. I think we could add a short explanation to the \"Getting started\" sections. We could also potentially have the labels link to the component maturity scale wiki \u2014 I wonder if that would be annoying/confusing. Thoughts, @bradnunnally?\n. @bradnunnally What if we give the label a rollover state (just bumped the background color to the darker shade), and when you hover over it you see a tool tip indicating that clicking the label will take you to an explanation of the component maturity scale. Then we can just link folks to the wiki in a new tab.\nI like this approach but just want to verify whether there are accessibility concerns.\n\n\n. @bradnunnally @maya @juliaelman Agreed with Brad's point that the tooltip information is not critical information; plus this information will be added into \"Getting Started\", so many folks will be familiar with the maturity scale if they've reviewed that section. Let's proceed to build this out and we can make any necessary adjustments after getting it in front of users.\n. Some specs on the labels:\n\n. @maya Yep I can provide that, but I have a few questions for @bradnunnally about the labels we've assigned to some components in the UX audit. I'd like a chance to review with him before handing that over.\n. @bradnunnally @juliaelman @maya Cool, so let's go with what's in the spreadsheet as the definitive source of truth now. Looks like there's just one discrepancy with the site - \"labels\" should be beta instead of alpha.\n. @maya Sounds good to me to keep the larger icons and also make sure the hit area is at least 44px in width and height.\nIt looks to me like the design files already have the larger icons incorporated, but the Standards site still uses the smaller ones.\n. @joshbruce Sorry for the confusion; we haven't implemented the comps from #706. The larger icon size I was referring to is the one from the current Illustrator file (see screenshot.) The icons there appear to be larger than the ones on standards.usa.gov.\nThe dimensions from the design file are (approximately):\n\n14:27 / 26:20 / 24:29 / 23:23 \n(all in pixels)\n. @maya The design looks good to me! \nNot sure if this would be in scope, but for the functionality it would be nice if the red boxes only appeared around the field(s) returning an error.\n. @maya @bradnunnally I could go either way on this, but I think it's probably good practice for us to use the styles we're recommending. So, yes. There may be some exceptions though, such as the links to the examples on the homepage (the icon makes sense for body copy links, but will look weird at header size.)\n. @maya This will likely be an issue for other folks as well, so it seems worth it to add a line here \"This is a link to an external website on a dark background\", with a light gray colored link/icon.\nRe: new tabs, I was always a fan of external sites opening in new tabs, but I'm convinced by these arguments for linking in the same window as a best practice. Let's stick to that.\n. @maya @bradnunnally I'm still not totally convinced this is the best practice for external links, and I've been reviewing some conflicting advice, so I'd like to mark this component for further review. However for the short term I think we can proceed as discussed. I recommend we:\n- Use the blue icon for external links on a light background (despite the slight weirdness for visited links.) I took a look at using gray/black instead of blue for the icon color, but I think it gets confusing when the icon looks like it's more related to the surrounding text than to the link.\n- Use #d6d7d9 for the external link and icon on a dark background (since that's what's specified in the Standards.)\n- Remove the external link icon after the \"learn more\" link in the disclaimer\n- One more thing: could we reduce the size of the icon relative to the text size? It would be less obtrusive if the height of the icon was closer to the x height rather than the cap height. So for body copy the height of the icon would be 11px: \n  \n. @maya All looks good, thanks!!\n. @maya For the medium screen one: this isn't a big deal, but I think the contact info should probably appear in a single column to the right of the primary links. So on the same grid you're using, but in this order:\nPrimary link   Primary link   (800) CALL-GOV\nPrimary link   Primary link   info@agency.gov\nOn small screens, there shouldn't be a rule between the phone number and email address. It should match what's currently on the site:\n\n. @maya Looks fine based on the screenshot \ud83d\udc4d \n. @maya \ud83d\udc4d  Looks good, thanks!\n. Looks good, thanks!\n. @maya Looks good to me!\n. @juliaelman I believe the components are all labeled correctly now (there were two different versions of this and we decided to go with the one where most things are in alpha)\n. @maya Re: component maturity scale \u2014 please change \"Labels\" from alpha to beta then we're good to go. (@bradnunnally and I had different interpretations on that, sorry for the change!)\n. \ud83d\udc4d Looks good to go!\n. Text sizes look good to me! Thanks!\n. @maya Screenshot looks good to me!\n. @maya Sounds like a great idea, as long as we're willing to keep it updated.\nSmall detail: could we say \"in progress\" instead of \"doing\"\n. That all sounds good!\n. @juliaelman @bradnunnally Agreed that we should have the notes on the site since folks aren't always on Github.\n@juliaelman How about we drop the release numbers from the side nav altogether (so in the side nav it would say \"What's new\", without anything underneath.) Listing all the releases there will get very long, and since the notes will be chronological folks can easily scroll down to see earlier releases.\n. Hi @mebates ! We don't have an exact timeline on this yet. Probably a few weeks - you can keep an eye on progress here.\nWe are releasing something this week that might be helpful to you though. We've done a slight redesign of the WDS site itself, which features a header navigation used along with a side navigation. Although the top nav isn't integrated into the components package yet, it will be the basis for these future components and might be a helpful example to borrow from.\n. @maya @bradnunnally Here's a mockup of how the headers could look on the site. The headers would be pngs, then you would click to preview a full-width version on an otherwise blank page. \nI think we could improve the clarity of how this is visually presented (the \"Basic\" and \"Extended\" titles aren't super visible, plus it's a bit odd to have a white element on a white background.) But those styles are used across the site and I didn't want to break with them \u2014 perhaps that's something we can tackle across the board at a later point.\nOne question: it's a bit odd that we're showing the actual footer component on the site (which is full width, so it has the same challenges as the header), but we're doing a different thing here. I like this new approach because people will be able to see the element full-width, without a lot of clutter around it. Perhaps we could go back and change how we show the footers since we're planning to use this new approach with the page templates and any other full-width components.\nAlso tagging @kategarklavs : a heads up that we'll need an introduction and some documentation for this!\n\n. @debracleaver Thanks for the tip! Agreed that we probably don't want links that are just fun things to click on. After reviewing the content, it looks like there was never an external link, and the text is in fact referring to itself.\n@maya @kategarklavs let's remove the link and change that sentence to:\n\"As you customize these templates, make sure they meet the accessibility guidelines in this introduction and as described for each control.\"\n. @maya Looking good.\nFor the component maturity scale:\n- Could you add a screenshot lower down the page so I can see the header styles?\n- Also, I just noticed in the wiki that the text has two levels of bullets, and that's not necessary. We can remove the bullet point from the first line of text so there's only one level. I just made that update to the wiki text: https://github.com/18F/web-design-standards/wiki/Component-Maturity-Scale\nFor the product roadmap:\n- Please make the H2 titles (\"Milestone 1\" , 2, 3) blue\n. @maya Thank you! Could you make the H2s on the Component maturity scale blue too, then it's good to go.\n. @maya That second sentence is also confusing. (\"In addition, when creating forms with multiple controls or customizing these templates, be sure to:\") I think we could just remove it. Thoughts @kategarklavs ?\n. @kategarklavs You can see the text in context here: https://standards.usa.gov/form-templates/ We're just trying to make the introduction text before the bullets clearer. It currently reads:\n\"As you customize these templates, make sure they meet the accessibility guidelines in this introduction and as described for each control.\nIn addition, when creating forms with multiple controls or customizing these templates, be sure to:\"\nThe two sentences are referring to the same list of instructions, so \"in addition\" doesn't make sense, and \"when customizing these templates\" is redundant. I thought maybe we could just cut out the second sentence.\n. @kategarklavs Cool, I think we're good for now. @maya let's just remove that sentence starting with \"in addition\"\n. @jameshupp @kategarklavs @bradnunnally Here's a pass at what this could look like integrated with the official government site banner (still need to consider what it would do on mobile.) What do you think?\nCollapsed\n\nExpanded\n\n. Cool, yeah I also don't mind the length of the text on desktop.\nIt's definitely clunkier on mobile. I think it's probably still beneficial to have the expandable banner here...but we could consider moving this content somewhere else. Thoughts? @kategarklavs @jameshupp @bradnunnally @donjo @jpyuda \n\n\n. @jpyuda @kategarklavs @bradnunnally @jameshupp I don't mind it taking over the whole screen for mobile. I think what was bugging me was the text flowing onto two lines for that banner, which will be present across the site. Here are a few slight variations for mobile. Any preferences here?\n1: Experiment 1 for getting the text onto one line for mobile\n\n2: Experiment 2 for getting the text onto one line for mobile\n\n3: This is what I posted earlier. It's the closest match to the desktop design.\nThe questions that were coming up for me about this design: \n- Is the \"Here's how you know ^\" link prominent enough that folks will know to click on it to close the banner?\n- Should the banner expand above the header/menu/homepage content, and push the rest of the page down? Or is it better for the expanded banner to be its own page, that users must close to get back to the homepage?\n\n\n4: A slightly different variation responding to those two questions.\n- There is a big close X on the expanded banner \n- The expanded banner is a standalone page (rather than pushing down the rest of the content)\n\n\n. These are the final designs for desktop and mobile. Sketch files and icons are here.\nI'm thinking we should add this expandable banner style onto the existing headers. We will also need to add:\n- A note in the header documentation about the purpose of this banner\n- Guidance on setting up your site using https and why it's important. I don't think this guidance necessarily needs to be in the same place as the banner component \u2014 perhaps it could be added to \"getting started.\" Open to suggestions.\nDesktop collapsed\n\nDesktop expanded\n\nMobile collapsed\n\nMobile expanded\nWhen expanded, the banner takes over the whole screen and the user must click the close button to exit.\n\n. A few comments from our chat today:\n- [x] Change \"view\" to \"demo\" on buttons\n- [ ] Add a documentation section under each header (for component-specific documentation), as well as a text section after the intro text for any general header documentation \n- [ ] Add documentation and code for using an image logo as an alternative to using a text logo. The solution we discussed for this was adding a section in the documentation displaying the different logo options, then including the image logo as a commented out section in the code snippets for all four headers\n- [x] Add a fixed footer to the demo pages that links back to the WDS site\n\nOne more thing I noticed:\n- [ ] When you have a drop down open, then you click on a section without a drop down, the open drop down does not close (but it should!) Is this related to the JS issue or a separate bug?\n. @jessieay @msecret I'm not sure whether I understand the proposed change. Would this reduce the size of the form template titles on https://standards.usa.gov/form-templates/ (\"Name\", \"Mailing address\", \"Sign in\")?\nIf so, I think we should hold off on making that change, because the appropriate title size depends on context. The smaller titles work on the Micro-purchase page, where there are several sections next to each other and the sections are split into separate boxes. In other contexts the large titles might be more appropriate.\n. Looks good to me!\n. @msecret @juliaelman Apologies for the delay getting to this. The design looks fine to me, but I wonder whether the big \"deprecated\" title implies that the whole component is deprecated? I wonder if it would be clearer if we removed the title of the alert or changed it to something more specific, like \"Deprecated version\" or... I don't know what? @kategarklavs do you have opinions/inspirations?\n. Hi @maya! A few comments on the banner:\nOn desktop and mobile:\nPlease remove the space between \"The gov means it's official\" and the rest of the text, so it looks like this. The space was in the design, but the alignment is looking weird to me when I see it on the site.\n\nOn mobile:\nOoh, this is looking better than the last time I looked at it!\nI know I designed it this way, but I'm finding it jarring to have that \"An official website\" text jump around and get bold, and that dark line appear below. I think we should just treat this like the desktop version, so the top portion remains the same collapsed and expanded, like this:\n\nMy only worry is that it might not be obvious enough how to close the banner. Wondering if we should add a big collapse button at the bottom. Thoughts? Is it weird to have duplicate ways to collapse the banner? @maya @bradnunnally @donjo \n\n. @donjo @maya Yeah I'm ok with that solution. The color of the bottom-border should match the rule that's under the top navigation on the site:\n\n@bradnunnally @lauraponce I know @donjo is out on vacation the rest of the week, so once this change is made, could one of y'all check this out on a mobile device and make sure it feels ok? One of the reasons I was thinking about removing the \"X\" was that when I looked at it on mobile I expected the close link to be in the same place as the open link; having to move my finger over to the X was cumbersome. But making the whole area the touch target could help that. It might be worth putting it in front of a few people to validate - I leave it to you!\n. @juliaelman I confirmed that those are the correct versions now, thank you!\nTwo things:\n- Could you please include the Font folder (with the three .zip font files in it) for all 4 downloads\n- The AI download includes a Config folder - could that be removed?\n. @juliaelman Looks good to go!\n. ",
    "leannegunn": "This should also be removed from the design files (Sketch, etc).\n. ",
    "rwfeather": "I agree that the technical details of the specification may benefit from a more component-esque approach. The Bootstrap approach works in a lot of UI framework cases where you don't mind the individual designers having more freedom. Bootstrap and frameworks like it simply provide the styles which in turn provide the \"components\". \nFor an example of a component-first approach, take a look at Elemental UI. Where the relevant html, styles, and scripting are encapsulated in the React component and customization happens through verifiable properties. This may more closely align with the goal of standardization rather than providing a framework.\n. ",
    "WestonThayer": "I totally agree, we need standards, not a you-must-work-this-way framework. I think that's one of the big downsides to Angular or Ember components. React or Web Components + polyfills seemed like the two strongest candidates when I was researching. Elemental looks like its off to a great start. My money is on style guides taking this approach eventually.\nThe downside to both of these approaches is the bar to entry. It's easy to reference some CSS files and paste some  into your HTML. It's asking a lot more to figure out how to incorporate a component library. I'm interested in ways to lower that barrier. If you guys end up going this route in the future, let's talk.\n. @msecret Thank you, that's exactly the insight that I was looking for. Excellent call with the accessibility piece, I hadn't thought of that. It'll be interesting to look back in a few years and see how much markup ends up needing to be changed. Hopefully not much :)\n. Definitely, thank you. I agree, this would make an excellent blog post :)\n. ",
    "coquiaspiazu": "I found that you address this in the next section and your standard is to just leave blank. \n. ",
    "IanLee1521": "Pull Request #819 if this is a desired change :)\n. Would it be better if I removed the state abbreviations? I was just following along the proposed change from #818. Presumeably this must be a solved problem on some form somewhere? :)\n. @maya I've used select boxes this same way. For example for me, I'll often start typing 'C' as a way to jump in a select box to 'California'. Or when I lived in Connecticut, hitting 'C' three times would often accomplish the right thing ('C' => 'California', 'CC' => 'Colorado', 'CCC' => 'Connecticut'.\nSimilarly for month selectors, though there it is tougher because sometimes the selector is by spelling, e.g. 'August' and sometimes it's '08' (and then sometimes just '8'...)\n. I should add that I fully understand that I'm typing in a text field. As a quick example, if you use the w3schools TryIt for the <select> tag, if you give focus to the select field (I clicked in the result area and hit TAB until it was in focus). You can get to the 'Saab' option just by typing 'S'.\nIn case it matters, this is in Chrome on OSX, not sure it it's an OS / Browser dependent feature. :)\n. hmm, so where does that path show up? What I get from the download tarball doesn't actually have those paths, which is why I thought it was an error.\n. ",
    "jungshadow": "Out of curiosity, have you uncovered any additional research on this that you can share? A standard component that can handle both US and international/military addresses would be extraordinarily helpful (probably to everyone) :) Thanks!. Following some of the conversations on here, it seems as though uswds is going through some fairly substantial revisions. If this issue doesn't apply to the new changes, feel free to close. Thanks!. ",
    "acki": "Definitive using here that keyboard option too - on Firefox / OS X, but works also on other OS and Browser.\n@maya Maybe you name it \"State / Military / Territory\"? With state alone the military user maybe didn't know they could select their codes.\n. ",
    "KeithBohler": "Didn't realize the actual size of buttons at the time. Re-reporting my suggestion that makes sense.\n. ",
    "rusty1992": "that's fine   \"Section 508 of the Rehabilitation Act\"\nMore importantly, going forward, we need to ensure we have the CIOC\n Accessibility Community of Practice (ACoP) engaged in going forward.  Who\nshould I be engaging with on 18F to make this happen?\nOn Wed, Oct 14, 2015 at 1:35 PM, Maya Benari notifications@github.com\nwrote:\n\n@rusty1992 https://github.com/rusty1992 or even simpler....\nSection 508 of the Rehabilitation Act\nWhat do you recommend?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/18F/web-design-standards/issues/823#issuecomment-148128339\n.\n\n\nJohn J. Sullivan,\nDirector, Information Resources Management Division\nOffice of Information, Integrity, and Access, Office of Government-wide\nPolicy, and\nProgram Director, Government-wide Section 508 Program\nU.S. General Services Administration\n1800 F St, NW, Washington, D.C. 20417\n(o) 202-501-1983\n. ",
    "burgwyn": "I've checked in the merge conflicts.  Let me know if it needs any cleanup.\n. Closing pull request and creating another\n. Cool, you have a link for that style guide?\n. ",
    "tdlowden": "@maya oh sorry I missed it. Awesome. Look forward to the merge. I'll close. Thank you!\n. @shawnbot setting up a separate view/profile for all the sites would be difficult, bc you need the same GA UA-ID on all the sites so the data can flow into one account. Unfortunately, I can't give you a view in DAP bc we are limited and reserve them for agencies. But, I think we can get a lot of the data you are looking for but getting creative with those custom reports.. ",
    "gwongz": "My pleasure! \n. ",
    "coreycaitlin": "Okay, it sounds like the key things to address here are:\n- \"Everything you need\" implies that they won't have to worry about it at all, which isn't true.\n- The great thing about the standards is that at least people won't be swimming upstream to make sites accessible \u2014 it's about starting with an accessible framework, rather than putting it off until the very last step.\nAnd it would be nice to make the heading a gentle imperative phrase, so it's more parallel with the other three call-outs.\nBecause this is such a small slice of text, I'm putting it here for discussion, and will make the change and issue a PR if it looks good. Here's what I've got so far:\n\nStart with accessibility\nThese guidelines focus on accessibility at every step of the design process, setting you on the path to building a usable, accessible site. From colors to code, these tools help you meet high standards of accessibility and conform to Section 508 Standards.\n\nLet me know if this solves things, or if you have any questions or notes.\n. Yes! I was just trying to come up with a verb phrase to make it parallel with the others (Make, Design, Reuse). Other possibilities: 'Prioritize accessibility' or keeping 'Accessibility out of the box.'\n(I'm not sure what feedback has been \u2014 but I can see the value of clarifying that the framework doesn't quite have \"everything you need,\" since the customization and content can make a big difference for the accessibility of the final product. Regardless of framework, accessibility requires end-to-end awareness and effort.)\n. Okay, I issued PR #909 to change the short paragraph, but left the header as-is. Didn't want to keep this in the air too long, since it's a pretty small change.\n. ",
    "gboone": "Big :+1: to this. We have been getting many of these exact questions on the content managers listserv. We can (and we plan to) write a blog post that answers these but clarity on the site will go much further. Specifically to the definition of alpha: many people have different ideas about what that specific word means and assume it means these are mostly broken and not to be trusted until  happens.\n\nthe page it links to may be confusing since it has a general explanation of alpha stages rather than a specific explanation for this project.\n\nThe 18F/Dashboard team is currently researching the \"stages\" and what these terms mean for 18F and how they need to be reworked to better reflect our products. Hopefully we can get input from this team during that research.\n. Here's a start on a WordPress theme. Just a start :wink: https://github.com/gboone/uswds-theme\n. @bbertucc Coo! I'll check it out. It's been a while since I made a theme so I may just fork yours and work together rather than in parallel.\n. ",
    "7jux": "This would be awesome.\n. See also: Federal web design standards to become ready-to-use Drupal, WordPress themes \nhttp://www.fiercegovernmentit.com/story/federal-web-design-standards-become-ready-use-drupal-wordpress-themes/2015-12-03?utm_medium=nl&utm_source=internal\n. ",
    "bbertucc": "@fureigh - is there a repo for the WordPress theme? I'm ready to start building if none exist.\n. thanks @fureigh  .. I'm going to play with some ideas locally. I'll definitely share and keep it open when I'm ready to create the repo. \n. @gboone - I too started a repo for a wp theme .. https://github.com/bbertucc/us-web-design-standards-wp ... currently working on a _s and sage integration aswell .. will be syncing them sometime this week .. excited to watch your progress, and maybe work together ..\n. @bbgvisualjournalist @gigifrias @gboone @fureigh  - I just launched a separate issue thread to address the need of a USWDS WordPress theme: https://github.com/18F/web-design-standards/issues/926\n. Started a repo with development roadmap for a USWDS theme: https://github.com/bbertucc/us-web-design-standards-wp\n. Any updates to the disabled button should also anticipate disabled outline buttons. I added some examples, inspired your suggestions @panr, to issue #947 \n. ",
    "iris-i": "It was great speaking with you @fureigh! @AlexBrown-appnovation Civicactions would love to be part of the drupal7 work on this. We have a week assigned to this project starting on 12/14 - 12/18. That amounts to about 80hrs of work between @kevwalsh @stevecurtis & I. We're thinking of getting on a call with you this week, to figure out how best to start working on this so we can hit the ground running next week. Please let us know if you will be free to connect and chat. Looking forward!\n. Hey @jenter! I started an issue to document gulp plugins we could add to a task, would you like to put your thoughts in here? https://github.com/18F/web-design-standards-drupal/issues/25\ncc: @fureigh & @AlexBrown-appnovation \n. Awesome. Yep that does look better. Thank you!. ",
    "AlexBrown-appnovation": "Hey @iris-i ! That's great, glad to have you on board!\nYes feel free to email me and we can chat further - alex@appnovation.com.\n. ",
    "jenter": "@fureigh great chatting with you yesterday. \nHere's some initial notes but we can correspond about the details:\n- I have a couple of panel layouts already I can cleanup and commit in a PR \n- I have some preprocess functions, but wanted to get your thoughts first. Are you planning having these used when installed OR are you going to have a collection of commented-out examples?\n- We are using a simple gulp file http://screencast.com/t/jC8L838N but wanted to get your thoughts on any advanced task running (linting, img compression,etc)\n. @maya thank you \n. ",
    "jflowers45": "Hi all,\n  @bbgvisualjournalist, @gigifrias and I are also working on a standards-inspired theme that will tie together a few federal WordPress sites and we used _s as our starting point.  Our repo is at https://github.com/BBGInnovate/bbgWPtheme - mainly just chiming in to say hello but will share more as we have it.\n. Thanks for starting this!\n. @msecret sounds good.  Should I close this issue or leave it open for reference?\n. ",
    "subtera745": "@fureigh is the Drupal theme still being updated and maintained by 18f? It unfortunately is in a beta stage for Drupal 8, I was curious if you by chance knew when it would be made a production release at its current stage?. Is this something that could potentially be implemented in the future?. @el-mapache to make a long story short, my company I was recently employed at works on quite a few government websites, and the lead front-end developer is having a lot of issues having to go and fix a lot of templates he shouldn't have to. Now we do drupal work, and there is a drupal version of USWDS, but he's not comfortable with it not being updated enough for standards, as well as the fact there's a security issue with it.\nSo my thought process on building this, and forgive me I'm still relatively new, is that with the meta-template, we would be able to write a script that on build will make sure all the .njk files are converted into twig-php files and be on the latest stable version. Saving a lot of time and effort of building twig templates from scratch.\nOn top of that implementing pattern labs in order to bring the various components to where they may need to be on various pages.\nMy mentor at the company and I have already played a little bit around with the project, we definitely want to use and incorporate this into our build. It just needs a little bit of tweaking to work where we need it. . ",
    "rickleegit": "I believe that the link styles are also preparing to be altered. \n. Always happy to participate in UX interviews conversations!!!\nFollowing launch, that is. :-)\n. We already are, actually. We are applying it to the GI Bill Comparison Tool\nat DSVA.\nThe app is relatively simple, but the large form elements and spacing,\nwhile nice and clean, do present challenges when the application relies\nheavily on user inputs.\nOn Tue, Nov 3, 2015 at 11:56 AM, Maya Benari notifications@github.com\nwrote:\n\n@rickleegit https://github.com/rickleegit thanks so much, we're glad\nyou're finding the design standards useful!\nWe created this with websites and web apps in mind, so it's fascinating to\nhere you're thinking of using it for apps.\nQuestion: What kind of apps are you looking to create with it (platforms,\netc)?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/18F/web-design-standards/issues/876#issuecomment-153415985\n.\n. Rails app. Responsive. Will have a production version in a few days and I\nwill post the link at that time!\n\nOn Tue, Nov 3, 2015 at 1:10 PM, Maya Benari notifications@github.com\nwrote:\n\n@rickleegit https://github.com/rickleegit What platform is the\napplication on (iOS, Android, etc...)?\nIs there any way to take a look at how you're using it -- like the use\ncases you mentioned above?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/18F/web-design-standards/issues/876#issuecomment-153440239\n.\n. I dm'd contact info via slack.\n. \n",
    "cathydeng": "I'm using firefox & see this issue at all window sizes. here's a gif:\n\n. ",
    "andrewhughey": "I dunno. Including these tags just feels like front-end voodoo. \nThese tags pre-date responsive design and are vendor specific (Avantgo/Palm browsers and Microsoft) that saw some limited and unknown adoption in other mobile browsers. I hate to be including them just for completeness sake, especially if we aren't targeting or testing on those devices. Firing up a couple BB emulators just gets me a blank screen for the site; what's it look like on real devices?\nA few references:\n- The viewport metatag\n- Layout Meta Tag: MSDN article from 4/2010 written for Windows mobile 6.5\n. ",
    "BrianDiggs": "I am not affiliated with this packaging except as user:\nType: NuGet package\nAuthor: Abdul Ahad Monty (https://www.nuget.org/profiles/montyaahad)\nURL: https://www.nuget.org/packages/web-design-standards/\n. There is similar front matter in assets/css/stylesheet.css\n```\n\n```\n(My apologies if creating a new issue would have been more appropriate; it is very closely related and this one was still \"in progress\" .)\n. I did not have any specific suggestions or recommendations in mind. Looking at Bootstrap's styling, those seem to be reasonable suggestions, and I particularly like the inclusion of a dl-horizontal option and the built in responsiveness.\n. ",
    "toolness": "Hi, I just wanted to \ud83d\udc4d this suggestion.\nI'm currently writing up an 18F Content Guide section on naming links accessibly in https://github.com/18F/content-guide/issues/131, and in some scenarios, using a CSS system's screenreader-only classes can be helpful.  My current draft of the section mentions usa-sr-only and it'd be great if it could hyperlink to a section in the USWDS docs!  I can help draft that section too if you like.\n. This is perfect @shawnbot -- thanks!. At the very least, should we provide a link to the NIST documentation? For example, the \"guidance\" section of our password reset forms currently says:\n\n\nThe requirements shown above are just provided as an example and should not be taken as recommendations.\n\n\nA quick way of making this situation better might be to add the sentence \"For more guidance, see NIST's Appendix A\u2014Strength of Memorized Secrets\" to the end of that list item.\nThat said, I do like the idea of at least trying to make this sample form conform to the NIST guidance as much as possible, and I generally agree with what @jpyuda mentioned earlier in this thread.\n. @rtwell has thoughts on this so I'm adding this issue to the current sprint to make sure we don't forget about it!. Good questions!  We'd talked a bit about using the real USWDS 0.10.0 since the custom variables issue is fixed in that, but there is a bit of concern regarding how much work will be involved to make sure there aren't any visual regressions when we do this (for example, one we'll have to deal with in cg-style is the removal of auto-hiding elements with aria-hidden=\"true\").\n@rogeruiz this is merging into the branch that cg-style is currently using to pull uswds into the cloud.gov style guide.  It's super out of date compared to the latest release of uswds, however, and I believe it needs the dist/ directory because cg-style checks it out of git directly (instead of using npm) and seems to use the pre-built CSS instead of using the original SASS.\nSo right now I think the possible solutions are:\n1. Just merge this PR now and we'll at least get the fix for #1328 into cg-style, which will be particularly helpful for the cloud.gov docs, as there are a number of places we want to have unordered lists nested within ordered ones. This is low-risk but still leaves cg-style using a really old fork of uswds; it's not a great long-term solution.\n2. Leave this PR unmerged and change cg-style to use uswds 0.11.0 via NPM, since the reason that this branch needed to be used in the first place--something having to do with custom variables--has since been resolved in mainline uswds.  This is great for the long-term but does carry with it the risk of causing visual regressions for cg-style, since a lot has changed in uswds since cg-style's fork branched from it.\n. So right now I'm wondering if we should have a section under Form controls called \"Passwords and validation\".  This could document both the validator component as well as the toggle-form-input behavior that allows passwords and other sensitive inputs to be hidden/shown via markup API.\nAlternatively, we could separate these two into a \"Passwords\" and \"Validation\" section too. But either way, putting them under \"Form controls\" rather than \"Form templates\" seems like a good idea--the latter seems to imply an example gallery that uses the information provided in the \"form controls\" section without introducing any new concepts, so it's kind of surprising that there are new concepts in there already.\nDoes that make sense?. Er, also, we probably shouldn't fix this issue until #1992 (or something like it) is merged, as the validator component isn't actually usable by client code, as far as I can tell.\n. Do we have a use case for the validator component outside of passwords?  If so, then I could use that to document the validator component individually.... Oh, @kyle-jennings made an awesome Wordpress theme and presented it to some of us a few weeks ago!  It's at https://github.com/kyle-jennings/Benjamin.\nI was about to ask if we should list it in the implementations section of the docs, but it looks like we already do.. Since a great WP theme exists, I'm going to close this issue, but feel free to re-open if needed.. Ah, I didn't realize this issue existed when I did https://github.com/18F/web-design-standards-docs/pull/330 and https://github.com/18F/web-design-standards-docs/pull/343. Basically, rather than removing the aria label, we changed it so it was more specific about whose home the link took you to. Closing this issue now!. I'm able to reproduce this problem, but not sure what the best fix is: odds are that, since this DOM ordering is part of the templates we've given to other agencies, there are now tons of sites that use this DOM ordering. If we change the DOM ordering, we'd likely have to change the CSS to ensure that the visual appearance stays the same--but then when other sites upgrade their version of USWDS, it might break their sites, unless they manually update their DOM ordering too, which could be a big hassle for them.\nArg.\n. Actually, this might be easier than I thought, because our CSS appears to be a lot more flexible than I thought (see e.g. #2037).  But, that said, this still won't fix the websites that use the incorrect DOM ordering, since they've copypasta'd our incorrect templates.. Hmm, I'm having trouble reproducing this one. Looking at the history of search.js, though, I'm also not seeing it explicitly fixed anywhere--it looks like the code has always tried to focus on the input field when it shows, and right now it appears to be succeeding at it.\nI'm going to close this issue for now, but feel free to re-open it if you disagree!. @rtwell do you have any suggestions on this one?  \n\nWe're providing the same focus styling on the menu button that we apply to other parts of the site; however, the problem here is that the menu button itself is the same shade of blue as the focus ring, so it's actually hard to tell that the menu button is the current focus target.  Basically the only visual differentiation is that the menu button has a fuzzy border now instead of a straight one.\nAny suggestions on how we might better indicate that the menu button is focused, without breaking visual consistency?  One solution, for example, might be to apply an underline effect to the \"MENU\" text, or we could change the focus ring color for just this one button.... Cool, that sounds good to me! I think that there is a general guideline to try to keep the focus style as consistent as possible, so that folks can just e.g. \"look for the pink rectangle\" or whatever whenever they press Tab, but that might not be possible with the Standards.. Hmm, this might have changed since this bug was filed. As far as I can tell, right now the close button consists of a <button> that wraps an <img alt=\"close\">, which means that it has a role of button, a value of \"close\", and a state of ... unpressed, I think?  In any case, it seems to work fine with NVDA, though on some browsers it says \"graphic close\" instead of just \"close\" which could be confusing. Probably fixable by putting aria-label=\"close\" on the wrapping <button> element.... @nickbristow would you mind taking a look at this one?  As far as I can tell, we're currently using a valid role/state/value for the close button, but we could use a second opinion.... Which footer is this?  On the footer--slim example, there is an alt attribute on an image that appears to be a logo:\nhtml\n<div class=\"usa-footer-logo\">\n  <img class=\"usa-footer-slim-logo-img\" src=\"../../dist/img/logo-img.png\" alt=\"Logo image\">\n  <h3 class=\"usa-footer-slim-logo-heading\">Name of Agency</h3>\n</div>\nHowever, I'm wondering if the logo has appropriate alt text--given that it's essentially decorative, as the actual name of the agency is right below it, perhaps alt should be set to an empty string...\n. Hmm, is this fixed?  As far as I can tell, we are putting a big blue focus outline around everything:\n\n\n\nThe one place focus becomes a bit hard to identify is when blue/primary buttons are highlighted, e.g.:\n\n\n\nThe only way one can tell that this button is in focus is because its borders are \"fuzzy\" instead of straight.. Oh hey, this is basically done as of #2067, #2100, and #2129.. Note that < IE9 support has potentially been \"broken\" for some time, at least on the standards documentation site: when adding automatic 404 detection in https://github.com/18F/web-design-standards-docs/pull/321, we discovered that a bunch of < IE9 support scripts, like html5shiv.js, were being referenced in HTML, but no longer existed anywhere in the repository.\n. To clarify, I took a look at the slack conversation and it seems @evetsreklaw is using Dreamweaver CC, which apparently supports SASS natively.  So our solution should be geared not merely towards folks who don't have access to node, but also to folks who may be uncomfortable with the command-line in general.\nWould it be helpful to just include the SASS files, along with bourbon and neat, in the compiled assets ZIP file?  It seems like Bootstrap and Foundation both require the user to use node/npm if they want to do stuff with SASS, so there's not really any conventions there that we can crib from... Hmm.. Hmm, couldn't that happen with the CSS files too, though?  I guess we could put a README.md in the SASS directory pointing them to our docs on how best to extend the SASS?\n. Ok! I can try taking this on.. Did some experimenting this morning and discovered that Fractal has a nicely-documented API, and one of its stated goals is specifically for \"integrating your component library into your production site or application.\"\nI think that one potential route we could go is, rather than styling our fractal site to be more USWDS-like and attempting to replace our docs with it or \"embed\" the fractal site into our docs site, we could simply use Fractal's API to generate our documentation pages for us, with a similar look and feel as they have currently. This could just be an under-the-hood refactoring that has little to no effect on the outward UX of the docs site, but would streamline things internally to avoid the massive amounts of duplication that we're currently seeing between the two repositories.\nFor instance, here's a snippet of code you could paste into a JS file in the root of the repository to output the rendered HTML for the @header--basic component:\n```js\nconst fractal = require('./fractal');\nfractal.load().then(() => {\n  fractal.components.render('@header--basic').then(html => {\n    console.log('html is', html);\n  });\n});\n```\nIt's not hard to see how we could go from here to automatically generating some of the markdown/HTML files in the _includes/code/components directory of the documentation repository, thereby cutting down on lots of duplication.\nI should also mention, though, that I'm not sure if separating the code examples from the documentation to the end-user is a good idea. Perhaps I'm misinterpreting, but requiring end-users to jump between pages or websites to go from a component's documentation to its code examples seems like a step backwards in usability to me.  From the description of this issue:\n\nThe Standards components code samples are currently located in a collapsed accordion window on each component page. This can be cumbersome when trying to locate the code needed for your project, component states (e.g. error input).\n\nI think that the solution here is to make it easier to find those code examples, rather than to divorce the code examples from the documentation. One way to do this, for instance, might be to show the first several lines of a code example, but hide the rest behind a \"show more\" button, thereby making the code easier to spot at a glance. That might not be the best solution, of course--I'm just trying to make the point that the best documentation I've seen interleaves code with explanatory text, rather than separating it, and we may want to explore other alternatives to our documentation before pointing users to the fractal site.\n. Oh, I just learned about Brad Frost's The Workshop and the Storefront metaphor, and I think it's perfect for this. Fractal is our workshop, while standards.usa.gov is our storefront.\nI think it's still a good idea to treat (non-core) developers as \"customers\" and keep some highly-polished, canonical code snippets in the storefront. The workshop, on the other hand, can contain tons of edge case examples that we use during development to ensure that we don't break anything. But those examples could easily just be noise for the average developer who's trying to get a handle on how to get up and running with the Standards.\n. I really like this idea--we used custom elements extensively in CALC for precisely this benefit. The one trade-off is that if you need different kinds of custom elements to work together, it can be a bit of a chore, because you have to account for race conditions in custom element upgrading.\nI think this could also help make our code a bit more understandable, too. At least by people who already understand how custom elements work, I suppose.. Cool!\nI'm not very familiar with how the USWDS JS components currently work, so I guess one question I have is, how do the virtual DOM interop concerns you have for this PR not also apply to the current state of the JS, outside of this PR?\nI've used third-party code with React a bit (see the lots of legacy section of the CALC React migration notes) but the main way I've evaluated whether to rewrite a dynamic component in React vs. use a native DOM implementation has largely centered around how \"encapsulated\" the component is in the DOM.\nFor example, with CALC, the d3 histogram was an easy decision to make because it's easy to just take that one DOM node and tell React \"let me manage this DOM node, don't mess with it\".  It's just a black box to React, and we can just subscribe to React's component lifecycle methods to make the native DOM changes required when the component's props are changed, remove any event listeners when the component leaves the DOM, and so on.\nOn the other hand, things might get more complicated if there's lots of interleave between DOM and virtual DOM components.  An example of this might be a native DOM-based accordion component, where the \"frame\" of the accordion is managed by native DOM code, but you want content inside the accordion panels that's managed by a virtual DOM.  This is something I don't have much experience with, so it might be possible if you're careful, but it's also where I'd start seriously considering just re-implementing the native DOM code in React, to avoid any possibility of things exploding unexpectedly. Again, though, I don't have a lot of experience with this kind of situation, so I could be wrong.\n. Just wanted to mention that Chrome 59 has CSS coverage support built-in, so this is potentially really easy to do now!. So I was talking about this with @edmullen yesterday, who would like to see this issue resolved, and we think there's a few routes we can take here:\n\n\nAdd separate SCSS files for each variant, e.g. _typography_robust.scss, and include them in the built CSS bundle.  Each variant could have its own class, so that you could e.g. have <html class=\"usa-typography-robust\"> and it'd just work.  The only downside here is that we're bloating the CSS a bit--odds are that a site is only going to use one of these variants, which means the others are just dead weight.  \n\n\nAdd separate SCSS files for each variant, or define them as mixins or some other extensibility/substitution mechanism built-in to SASS, but don't include them in the built CSS bundle.  Tell users that they'll need to manually include them via an @import in their own SASS (or leverage the mixins or whatever other extensibility mechanism we decide to use) to take advantage of them. The upside here is that there's no added bloat, but the downside is that it requires users to use SASS, which is a higher barrier to entry than simply using the pre-built CSS file.\n\n\nThe parings/styles documentation already has CSS properties in it:\n\n\n\nIt wouldn't be hard to just add CSS selectors around each of those blocks to make that real CSS that users can just copy and paste into their own custom stylesheet.\n\n\nSome combination of the above?\n\n\nAnyhow, this seems like a bit of a higher-level customization philosophy question too.  Combining options 1 and 2 might give us what I think is the philosophy for Foundation, where the built CSS file is the \"kitchen sink\" that includes every possible thing you can do with Foundation, at the cost of a large file size, but folks who want a slimmer, customized build can use SASS and include only the styling they want via SASS includes and/or mixins that are well-defined and documented. I'm not very familiar with SASS myself so I defer to y'all for guidance on this!\n. Just wanted to mention that we just interviewed Scott Weber about the creation of seedfund.nsf.gov and he said it was a bit challenging to figure out how to change the default fonts. His site doesn't use one of our recommended pairings, it actually changes the fonts entirely to be on-brand with the NSF Seed Fund, so this isn't precisely the same problem as this issue, but does speak to the usefulness of simply documenting the SASS variables used for fonts.\n. I might be missing the point, but is it possible to introduce the v1 API \"shim\" but have it log deprecation warnings whenever anything in them is called?  That way the users of the current version could at least be given a \"heads-up\" that their thing will break in the next version.\nAt the very least, though, documenting the breaking changes in the v1 API's private methods might be helpful--it doesn't have to be too thorough, e.g. like Django's docs on private widget classes removed in 1.11, just enough to give folks a heads-up that upgrading might not be straightforward if they're using undocumented methods.\n. This will make a nice first bug for me! I will take it.. Hmm, USWDS's package.json says it wants bourbon version ^4.2.6, and that caret means that it should use the latest minor version. Indeed, on my local checkout it's using 4.3.4, but these deprecation warnings are still being logged.\nHmm, so it looks like that issue @maya referenced is only relevant when SASS that doesn't actually use any of bourbon's deprecated methods is compiled. In USWDS's case, however, we are using some of those deprecated methods: according to a GitHub search for rem we're using the deprecated rem() function in _variables.scss and _inputs.scss, for example.  So it makes sense that those deprecation warnings are being logged.\nWhat should we do about it?  It's really spamming up my development workflow, unfortunately... I've put $output-bourbon-deprecation-warnings: false !default; in my uswds.scss for now, but I'm afraid of accidentally committing it.\nIt seems like we have a few options here:\n\n\nJust commit the $output-bourbon-deprecation-warnings: false !default; hack for now, but include a comment that mentions that it's just a temporary fix, with a link back to this issue.  Then whenever this issue gets resolved, the PR will need to also include code that removes the hack.\n\n\nFix all the deprecation warnings by using whatever the recommended fix is. I have no idea what the recommended fix is for our warnings, though, as I'm new both to USWDS and Bourbon, so I don't think I'd be a good candidate for this solution...\n\n\nAny other thoughts?\n. @maya I think the link you provided to your custom fixes is now out-of-date because that file has been changed since you created the link... Is this the commit that fixed things on your end?\nhttps://github.com/18F/clinical-trials-prototype/commit/9bc2d20a697968eacdd94a1d12f09c38f453910e\n. Hmm, I guess I have reservations about using these. Because we're not a conventional static site, I think we're likely to need to do lots of little things that go off the \"rails\" that these kinds of frameworks offer--and while the good ones will allow us to go off those rails easily, we'll still have to figure out how to do that, and then we'll have to write custom code to do it our own way... So this could potentially turn into a situation where we're using one of these tools, but overriding a ton of its default behavior to do things our way, which actually results in more complexity than we'd like. It would also actually increase the barrier of entry to developers who happen to already be familiar with gulp.\nSo unless there's clear advantages that these frameworks give us that we don't currently have--e.g. significantly faster build times--I'm really skeptical about its utility.\nAs an example, I just tried creating a new project with Blendid (via blendid init), and while there does appear to be lots of configuration options in the config directory it automatically made for me, this default project skeleton appears to be very similar to a static site generator like Jekyll or Hugo--it sets up a data directory with JSON files, and expects us to use nunjucks for templating a static site,  While it might be fine for a new static site, undoing a bunch of its defaults and making it behave just like our current build system seems like a heavy lift, and I'm not sure how much it benefits us.\nThat said, I'm happy to hear any counterarguments!\n. I just spent an hour trying to use Blendid and found it quite frustrating. I don't think we should use this tool, so I'm closing this issue.\n. Oh hi @shawnbot! Haha, I shouldn't have been so harsh--I was frustrated at the time. It actually looks like a pretty cool tool, but we'd definitely need to heavily use the \"custom gulp tasks\" feature of it, and that particular feature seems to be a bit immature (or at least under-documented) at the moment. Aside from that I was actually pretty impressed with how quickly it rebuilt assets!. Hey, sorry for the late reply here... I'm guessing this might be an issue with babel/webpack configuration--judging by the unexpected character it's running into, it might not be transpiling the code to es5 before passing it on to uglify?  Another way to determine this may be by not uglifying it and checking the output--if it contains string template literals (search for the backtick character) then it likely hasn't been transpiled to es5.\nBased on the module rule you provided, it seems like it should be transpiled to es5, but webpack/babel can be extremely finicky about configuration; I've spent hours debugging my own configurations, unfortunately.\nIf you need further help, could you upload a ZIP file containing a minimum project that reproduces the error?\n. I've been running an analysis of how various sites use the Standards, and according to it, around 31% of sites that seem to use the Standards are using usa-width-one-whole, which is a lot (in fact, the only column widths that are more popular appear to be one-half, one-third, and two-thirds).  So if we do get rid of this, we should be sure to communicate it very broadly, since a lot of folks appear to be using it.\n@maya do you have examples of improper use of this class?  If we have e.g. a CSS selector that can be used to detect improper use, then I can write a script that finds all improper uses of it across USWDS sites.... Oh, this one took me a little while to figure out--it looked like I couldn't reproduce the bug at first, because the link actually works for me, but then I realized that the CoC repo itself is private!\nI've looked into this and it appears that there's an issue at https://github.com/18F/code-of-conduct/issues/4 which explains the situation--sadly, you won't be able to read it @jmccormick28 because it's under that same private repo, but the basic jist of it is that we've created a \"version 2.0\" of the CoC which still needs to be approved by the Office of General Counsel before it can be made public.\nOne would hope that we could still link to the version 1.0 CoC in the meantime, but I guess that isn't possible due to the way we're directly linking to the markdown file in the repository. Urgh. I'll see if there's anything I can do to fix the link soon!. Oh nice, thanks @sawyerh!  I think we can just link to that instead, and assume it'll change accordingly once 2.0 is approved by the OGC.. I'm closing this in favor of #2022, since that one's already assigned.. A really weird thing about IE11, at least on Windows 10, is that the \"governme\" cut-off is not reliably reproducible.  It might only show up on a cold cache, as I've had trouble reproducing it even after the first load.\nHowever, as @bruffridge mentioned, this is a duplicate of #1922, and shawn closed that because he said \"as of 1.1, the banner no longer has any collapsible content\".  Yet the landing page template on the develop branch of the docs, and the current live site, does have collapsible content--does that mean we should remove the collapsible content on the docs templates?\n. Oh, I guess https://github.com/18F/web-design-standards-docs/issues/315 might have something to do with this.\nI am still confused though.\n. Hmm, actually, I'm confused... The description for #1654 doesn't mention anything about wrapping the <form> in a <div role=\"search\">, and in fact the example in the description has the opposite:\nhtml\n<form action=\"\u2026\">\n  <div role=\"search\">\n    <input type=\"search\" aria-label=\"Search\"> <button type=\"submit\">Search</button>\n  </div>\n</form>\nThe ARIA specification doesn't seem to mention anything that contradicts this, either.\nYou seem to have mentioned that everything looks OK to you in https://github.com/18F/web-design-standards/issues/1654#issuecomment-309852945 so I'm confused as to what prompted this change. Are there specific ATs that don't work properly with things the way they are?\n. Ohh got it! Yeah, in that case this looks great!. Ok, @donjo messaged me on Slack and said he couldn't find any mention of the validator's disabled-ness being intentional, so we're going to go ahead and merge it.  I'll file a separate issue to deal with removing the js-validate_password class.. I'm curious if this might be related to #1999, which involves accordions and/or menus not working and is specific to Windows 7/8.  Browser bugs specific to operating systems are unusual but sometimes happen, especially with new-ish platform features, e.g. position: sticky at https://github.com/18F/calc/pull/1455#issuecomment-283992122. I'm not familiar enough with our accordion code to have any hunches, though.\n. Thanks especially to the efforts of James Frankowski, I think we've zeroed-in on at least one cause of this problem: our event-handling code is \"Apple-centric\" in that it's making the assumption that a device is either touch-based or has a mouse, but can't be both.  In src/js/events.js:\njs\nmodule.exports = {\n  CLICK: ('ontouchstart' in document.documentElement)\n    ? 'touchstart'\n    : 'click',\n};\nThis CLICK symbol is used in several places throughout the code to attach event handlers, and it's essentially saying, \"if the user's device supports touch, respond to ontouchstart events, otherwise respond to click events\".  This is fine for Apple devices which only support one or the other, but it means that on non-Apple devices which support both, such as the Microsoft Surface Pro, users will only be able to interact with some USWDS components using their touchscreens.\n@mjoyce91 and @paultag -- do either of your systems have touchscreens?  If so, does tapping on the accordions work?  If not, could you open up your JS console and type the following:\n'ontouchstart' in document.documentElement\nIf the console prints out true, then this is definitely our culprit!\nAgain, huge thanks to James Frankowski for doing much of the detective work on this.\n. Thanks for the report!\nBetween steps two and three, do you mean that we should be making our browser window smaller so that it switches from \"desktop mode\" into \"mobile mode\"?\nI'm trying to reproduce this on Windows 10 and am unable to, but I can try finding a 7/8 machine if needed. Just want to make sure I am doing exactly what you did to reproduce the bug first.. Also, in step 2, by \"a dropdown menu\" I assume you mean e.g. the \"Section title\" dropdown in the nav area?\n\n\n\nAnd in step 3, by \"menu\" I assume you mean the button at the top-right that shows up when you make the browser window smaller?\n\n\n. Hi @njohnson, I think I might have fixed this bug. Can you try this alternative version of the site and let me know if the bug is still present on it?\n\nhttp://atul-uswds-test.s3-website-us-east-1.amazonaws.com/\n(Note that this URL might go down sometime in the next few days because it's in a temporary location that gets cleared once per week, but if that happens I'll put it back up monday morning.)\n. Awesome, thanks @njohnson!\n(I'm going to classify this as a duplicate of #1993 and close it, since the fix for that issue resolves this one too.). @maya, can you take a look at the fractal example I added in this PR?  Does it reproduce the same behavior you were seeing?\nAlso, does the HTML template in this PR seem OK to you?  I wanted to use a list for the options, and I notice your fix for your own code used li in its CSS, but I'm unclear on how to create a multi-column list with USWDS, since a <ul> can only contain <li> elements as children, i.e. individual <li>s can't be wrapped in <div class=\"usa-width-one-third\">. Nor does using <li class=\"usa-width-one-third\"> seem to do the trick either.... Wait, I am really confused. At first I assumed this bug only occurred when the individual checkboxes of the same <fieldset> were in multiple columns, but I am having a hard time getting it to work.. Is #1929 even specific to a three-column layout?  I seem to be able to produce the same behavior with just a one-column layout... Though that said, the only \"bug\" I've been able to produce on my end is that the bounding box of the very last list item extends kind of far vertically, e.g. I can click almost a full line below the last option and it will get toggled.  But the other list elements seem to be triggered fine...\n. Oy I am having a hard time reproducing the bug.  @maya can you provide an HTML snippet that reproduces it?. Um wait, I think I may have actually reproduced it and fixed it.\nI decided to take an approach of using the sr-only() mixin on checkboxes and radios, as it reduces the complexity of our CSS and also makes sense semantically, since (as I understand it) all actual visual styling of our checkboxes and radios is coming from our rules on the <label> .\nThe only remaining thing I don't understand from @maya's fix in https://github.com/18F/clinical-trials-prototype/commit/9bc2d20a697968eacdd94a1d12f09c38f453910e is that she included the following rule:\nsass\n.usa-fieldset-inputs {\n  li {\n    position: relative;\n  }\n}\nI'm not sure I understand the purpose of this part, so I haven't included it in my fix... @maya do you remember why you included it in your fix?\n. Hehe no worries! I guess this PR is ready for review.... Woot thanks @maya!!!  This is awesome, sorry we haven't looked at it yet... will soon!!. According to our gulp sass task, it looks like we do indeed use autoprefixer!. Woot!\n@maya it looks like there's one linter error that's preventing CircleCI from being OK with this PR:\n\nsrc/stylesheets/components/_navigation.scss\n41:3  \u2716  Expected empty line before at-rule   at-rule-empty-line-before\n\nOne that's fixed, I think this PR is ready to merge!. I think I've done as much as I can without the kickoff meeting, so I'm going to close this one now!. Fixed by #2015!. @paultag and @mjoyce91, can you try the website at the following URL and let me know if the accordions work on it?\nhttp://atul-uswds-test.s3-website-us-east-1.amazonaws.com/\nNote that this URL might go down sometime in the next few days because it's in a temporary location that gets cleared once per week, but if that happens I'll put it back up monday morning.\n. Awesome, thanks for taking a look at this everyone!\n@msecret I think this is ready for review.\n. I'm wary of binding to touchstart, though, because of #2013--the accordion buttons have a tiny bit of latency on touchscreens when they bind to click, but the advantage is that they can be used as scrolling surfaces, which is important when the page consists mostly of accordions.\nThat said, I may be wrong, but I think that touchstart pre-empts click events from ever being synthesized as a result of touch-based actions, so binding to both events should be OK, if we want to fix #1993 without addressing #2013.\nSince you've approved this PR, though, I'm going to merge this for now since we've verified with the affected users that this fix works well, and we can re-address in a separate issue/PR if we want to change things further!. Ok, I think this is ready for feedback!. Thanks! Yeah, I was originally looking for some kind of NAV_CLICK event but I couldn't find one, so I just used the most straightforward approach I could think of. At least the tests are written in such a way that if we decide to refactor later to use such an event, we hopefully won't need to rewrite the tests.\nThat said, I do like the idea of adding such events, and documenting them nicely, the way Bootstrap documents its JS events (except sans jQuery).. Thanks @brockfanning! Sorry for the long response time on this one, and thanks for explaining the context behind this on the CMS call last week.\nIt strikes me that this could potentially be used beyond the concept of pure navigation, to be something that a site can generically use to make any content mobile-only or desktop-only. What do you think of renaming the classes to e.g. usa-desktop-only and usa-mobile-only? Hmm, I guess the only strange thing about that is that the breakpoint depends on a variable called $nav-width, which does suggest the concept of navigation specifically... Hmmm.\nActually, so others have context of how you're using this, can you post a screenshot or two of how you're using this class in your Drupal theme/module?\n. Note that this problem doesn't occur with accordions that aren't in the same auto-collapsing group. For example, on the standards site, every example has a \"code\" and \"documentation\" accordion, but expanding one doesn't collapse the other, so this bug doesn't occur on them.. @msecret that's a potential fix, but it means that it'll be impossible/unsupported to create accordions that aren't multi-selectable (i.e., which allow only one accordion to be expanded at a time).  If we do that, we might want to also remove any JS that deals with non-multiselectable accordions. Unless there is a clear UX argument to why non-multiselectable accordions shouldn't be allowed though, it seems like we ought to continue supporting that use case, but make it more usable by fixing this bug...\n@donjo do you have any thoughts on the UX of this?. I've implemented a potential fix for this in #2025, which you can play around with on the federalist build of that branch's fractal site. See the PR for more details on how to do this.. I think this is a duplicate of #1980?  But since this one is already assigned to @donjo I guess I'll go ahead and close #1980 instead.\nA funny thing I just discovered is that this is actually a regression: I was watching the old USWDS developer-focused tour of the standards from November 2015 and at 32:22 @maya shows off the grid page, and the example code for the grid is right there. So it got removed at some point!\nHopefully that means that fixing this is as easy as just adding the requisite accordion include, rather than having to write any new example code.. Thanks @bruffridge! I think this is a duplicate of #1984, right?  You participated in that issue, too, so I don't want to mark this as a duplicate without your acknowledgement.... Oh geez, I was really out of it this morning! Never mind, this is totally different from #1984, my bad.. Thanks for the contribution, @bruffridge !. @donjo can you review this one?. @evetsreklaw I'm including a \"prototype\" bundled ZIP file below. The SCSS is in the uswds-1.2.1/scss directory. Can you try using it with Dreamweaver CC to see if it fits your needs?\nuswds-1.2.1-with-scss.zip\n. That's awesome @evetsreklaw!\nNow I just have to write docs... Since those will happen over on the docs repo, i wonder if we should just review + merge this PR now.  Thoughts @msecret ?. Ok, I think this is ready for review. I've manually tested it on Chrome, Firefox, and IE11 and it seems to work fine on them.. Ok, I just resolved your concerns and also fixed a merge conflict due to #2006.  I also added some comments around some of the CSS changes I've made, because I think they're particularly non-obvious, in that they don't change the behavior of the site for sighted users, but do affect its usability for keyboard and AT users.. Hmm, we might actually want to save this for 2.0 because I think it will require anyone that imports uswds via npm to change their code.. I've copied some of the stuff in this PR, specifically 0f7a6b96a6051bb1cc934b5bf5e05a600ff078b3, over to #2036, so eventually this PR will be a bit smaller.. Yeah, I think we'd publish an includePaths, and then folks who want to use our SCSS would either need to:\n\nTake our includePaths into account when using our SCSS at src/stylesheets, or\nSupply their own versions of our dependencies (bourbon / neat / normalize) and make sure they're on the SASS path so that the @import 'bourbon' etc. used by our SCSS works, or\nUse our pre-collected, standalone SCSS stored in dist/scss (this would only work if they checked out a version directly from npm, which has gone through our build step; it couldn't be used when installing uswds w/ a GitHub URL b/c dist wouldn't exist)\n\nBlerg.\n. Nah, not really--let's close it!. Woot!. Erm, so in 3774c5ed0459f32778c8573151af55607f1f5078, I removed the gulpfile and its dependencies in config from the .npmignore file, which at least allows dependencies to install the package from a git URL and build the SASS/federalist site/etc on its end if it really wants to. I'm using this right now in 18F/web-design-standards-docs#357 to make CircleCI pull the version of uswds in this PR and use it when running tests.\n. Note: I've changed CircleCI to use Ubuntu 14.04 (Trusty) so installing Chrome works.  (The docs repository was already configured to use this image, which is why this problem didn't crop up when I made https://github.com/18F/web-design-standards-docs/pull/344.). Hmm, that's interesting, we're getting an Ensures buttons have discernible text error on the search component on CircleCI that isn't showing up on my local machine.  That said, my local machine has a slightly different version of Chrome than the one that CircleCI is using, so that might have something to do with it... Odd.\nUpdate: Wait, actually, I'm confused as to why this error isn't showing up on my system, because it seems to be a legit error when the screen width is less than 481 pixels, which it is in headless chrome. \ud83e\udd14 \nUpdate update: Nevermind, I figured it out--I'm developing with docker-uswds, which is launching headless Chrome without passing any window size parameters.  It's only when run-axe.js takes care of launching Chrome itself that window size is set explicitly (and that's what happens on CircleCI).. Ok, I think this PR is big/complex enough that it should probably just get merged now, and then I'll file separate issues to fix the individual fractal components that are failing the aXe tests and resolve those later.\n@msecret I noticed you approved these changes, but I did make a few relatively small changes after your review--should I go ahead and merge or do you want to take a second look?. For reference, these are the buttons in question:\n\n\n\nThe empty white space on the left is actually a button. These three buttons are wrapped by a div with class button_wrapper-dark but that class doesn't seem to have any CSS associated with it; I think if we gave that class styling such that it had a dark (e.g. black) background, it would probably fix things, as I assume these button styles were made for dark backgrounds.\n. @donjo any idea what the button_wrapper / button_wrapper-dark CSS used to be?  If we could dig through the git history to find it, maybe we can get this component to look a bit less broken.... Oh, I didn't know about usa-background-dark!  Using this class now, instead of background: black.. Ahhh so that's what it is! Thanks for the explanation @msecret!\nI guess we'll be talking about this kind of thing during the fractal meeting in a few minutes.... Good point @msecret -- I'm currently working on a very basic front-end that can show a visual diff. Hope to have something presentable by demo time today!\nAlso, I thought a bit more about the word \"golden\" and I think it's actually appropriate (or at least, I can't think of a better word)--I just have to use the word more,  not less, so readers can better understand what it means.\n. @msecret does this seem OK to you for a first pass?  I realized you approved it a few days ago, but I've added the whole HTML5 front-end with visual diffing since then... I also improved the front-end since I last demo'd it to y'all on Friday.\nIf this looks good I will add docs and punt the other stuff to issues; I'm full-time on PCLOB this week so I won't be able to work on this PR and other core USWDS stuff as much as I've been doing.. Related: it looks like the UK Government's official threshold is 2%.. Nice, I like it!\nShould we also mention that PRs to add support for < 2% browsers are welcome?  That way if some team really needs IE9 support, they could add it to the standards themselves... Though we'd be under no obligation to continue ensuring that our own contributions didn't break that, I suppose.\nAnyways, it's an unlikely situation regardless. I like the 2% threshold.\n. Good catch! It seems like this may have been introduced with 157b6557bbd7868da50b7e53490c35b4fb8f7d6a, which was part of #2026. The following patch seems to fix it on my end:\n```diff\ndiff --git a/src/stylesheets/components/_header.scss b/src/stylesheets/components/_header.scss\nindex 0a46c42e..cdc6a827 100644\n--- a/src/stylesheets/components/_header.scss\n+++ b/src/stylesheets/components/_header.scss\n@@ -193,7 +193,7 @@ $z-index-nav:     9000;\n       &[aria-expanded=false],\n       &[aria-expanded=true] { / stylelint-disable-line selector-no-qualifying-type /\n         @include media($nav-width) { / stylelint-disable-line selector-no-qualifying-type /\n-          background-position: right 1.5rem top 44%;\n+          background-position: right 1.5rem top 50%;\n         }\n       }\n     }\ndiff --git a/src/stylesheets/components/_navigation.scss b/src/stylesheets/components/_navigation.scss\nindex 0afe7700..35bb1d7d 100644\n--- a/src/stylesheets/components/_navigation.scss\n+++ b/src/stylesheets/components/_navigation.scss\n@@ -159,7 +159,7 @@\n     padding: 1.4rem 1.5rem 1rem 1.8rem;\n @include media($nav-width) {\n\n\n@include padding(null 3rem 3rem 1.5rem);\n@include padding(null 3rem 1.9rem 1.5rem);\n       color: $color-gray;\n       font-size: $h5-font-size;\n       font-weight: $font-bold;\n```\n\nHowever, that patch just reverts some of the changes made in the aforementioned commit. I'm sure @msecret had a reason for changing those values in the first place, so I am guessing that this patch just fixes the regression while breaking something else... @msecret do you have any thoughts on this one?\n. If we completely remove the reset password thingy, we might also want to get rid of the validation component in general, since it might only really be useful for password validation... Aside from that, its markup API is kind of hard/confusing to explain, as can be seen from the docs I wrote for it as part of #1432.\n. Good catch, @bruffridge!\nTo clarify, the problem is with this HTML in our footer template:\nhtml\n        <address>\n          <h3 class=\"usa-footer-contact-heading\">Agency Contact Center</h3>\n          <p>(800) CALL-GOVT</p>\n          <a href=\"mailto:info@agency.gov\">info@agency.gov</a>\n        </address>\nThe problem is that according to the HTML5 <address> specification, <address> elements can't contain headings. \nI wonder if we should lift the <h3> outside of the <address> element, so that it's the previous sibling of the <address>?\n. I've created a new project called uswds-crawler which will make it easier for us to scan USWDS sites for deprecations like this. Will add some functionality to make it specifically find sites w/ this issue and post back here once I've got a list.\n. Ok, it looks like the following additional sites are using old gov banner text:\nGeneral Services Administration Office of Evaluation Sciences website (https://oes.gsa.gov/)\nSBA Certify (https://certify.sba.gov/)\nUSAJOBS.gov Design System (http://usajobs.github.io/design-system/)\n. Thanks! I just added functionality to load sites that don't have any usa- classes in headless Chrome, as a way to support single-page apps that load their initial content dynamically, and found another site that's using old gov banner text through it:\nFAR Data Collection Pilot (https://fardatacollection.sam.gov)\n. Erg, so this diff is kinda big, but it's mostly due to the refactorings... @msecret I'm happy to walk you through these on a video call, let me know if that'd be helpful!. Er, so to clarify, by \"components site\" we specifically mean https://components.standards.usa.gov/, right?  The docs site at https://standards.usa.gov/ is fine and doesn't need to be touched?  Just wanted to make sure because I originally misinterpreted this issue to mean \"the UI components section of the docs site\", which is why I filed https://github.com/18F/web-design-standards-docs/pull/378.\nI'll start a totally different PR tomorrow morning to address this issue on components.standards.usa.gov!\n. Woot thanks Scott!. Hmm, good question... I can think of two potential issues with showing only the URL:\n\n\nSometimes, for more minor projects, the URL might be long, and just the domain part of the URL might not be very informative. For example, the NASA web style guide is at https://company-76458.frontify.com/d/NZPXDvjOcz5x/nasa-web-style-guide, and \"company-76458.frontify.com\" isn't very useful.\n\n\nEven if a URL is short, it can still be uninformative for folks who aren't \"in the know\"--for instance, if someone doesn't know that USDA stands for \"U.S. Department of Agriculture\", then the domain name may be less helpful than the full name of the agency.\n\n\nWhat do you think of maybe putting the full name of the site, followed by the domain name in parentheses if it's short/memorable?  So the USDA site might read as:\n\n\nDepartment of Agriculture (usda.gov)\n\n\nBut the NASA web style guide would just be:\n\n\nNASA Web Style Guide\n\n\nsince the domain name for that one isn't helpful?\n. Woot! would it be easier for you to edit the WHO_IS_USING_USWDS.md file and issue a pull request?. Hmm, so this is an interesting problem that I'm not sure what to do about.\nAccording to Firefox bug 756028:\n\n... we try to implement the focus behaviour of the native operating system as best we can. Which means that on Mac, buttons are not focused when clicked\n\nThis isn't the whole story, though. As @linzhaoken mentioned, this problem doesn't occur on Safari, even though Safari doesn't focus the button when the user clicks on it.  It does update the \"current tab index\" when the user clicks on it, though, which is why expected behavior occurs when Tab is pressed. The same is not the case with Firefox, however. I've just filed Firefox bug 1391428 to address this.\nHowever, until this bug is fixed on Firefox's end, I'm not sure what we should do.  One alternative might be to forcibly focus the button when it's clicked; this would fix our immediate concern, and it would effectively make button-clicking work like Chrome's does on all platforms (Chrome ignores the \"button clicks do not focus the buttons\" convention on OS X).  We could even do user agent detection for Firefox, to ensure that Safari's behavior stays the same. My only concern about this approach, really, is that it's not very easy to unit test.\n. Ok, @donjo told me that CircleCI's caching system might be responsible for the build failing until I committed fcd799533a79c374adeee0bb475bc9750d9c88c7 here.  It looks like that commit fixed everything, though, so that's cool.. I am super confused by the diff of this PR. I'm tempted to just close this and file a separate PR that only increments the version number, since that's really all that's changed.\nThoughts @marco @donjo?. Ok, I'm trying to come up with a list of all the changes since our last release.\nAccessibility improvements\n\nThe search button's submit text is now visible to screen readers on all viewport sizes (#2065).\nA number of accessibility improvements have been made to the fractal site (#2057, #2064).\n\nVisual changes\n\n\nAlerts now have a high-contrast left border to help differentiate them from each other and surrounding content (#2095).\n\n\n\nButtons' corners are more round to help them feel more button-y and to differentiate them from other elements, like labels. The spacing of the type inside the buttons is now balanced. (#2098).\n\n\n\nThe focus state has been updated to address concerns about contrast. Users told us the blue focus state on the common blue background color was hard to see. Our update 1) choses a neutral gray that has higher contrast that works well on dark backgrounds and light (big caveat here: while there is no perfect focus state color for every site, one goal we had here is to help designers think critically about what focus state works best for the site they are designing.), 2) we offset the focus state a bit in order for the type to breath a wee bit and help make it more noticeable, especially on objects that are flush the edge of a browser window. (#2112). \n\n\n\nDropdown menus have been updated. 1) the default state for a dropdown menu should indicate that the menu contains, not the first item on the list. 2) changed the icon from a down carat to a selector. (#2115). \n\n\n\nA new usa-input-optional class has been added, and the form examples have been changed to use it instead of usa-input-required (#2116). The latter is now deprecated and will be removed in a future release of the Standards, due to evidence that labeling optional fields over required ones is a best practice. If you feel strongly about this issue, however, please contact the Standards team, as we may un-deprecate usa-input-required if a compelling argument exists.\n\n\nCheckboxes have been updated. 1) Spacing adjustments for a cleaner look. 2) slightly less rounded corners. 3) Disabled state looks more disabled (contrast requirements do not apply to disabled elements). (#2117).\n\n\n\nLabels have been updated. 1) less rounded corners to look less button-y 2) changed the labels from primary-blue to gray to differentiate from buttons. 3) Adjust the spacing to feel more comfy (#2118).\n\n\n\nThe footer has been visually revamped (#2130).  1) primary-blue links didn't have enough contrast on the light gray background. 2) Agency logo scaled down to a medium size for the medium footer. 3) contact info moved onto one line to consume less vertical space (esp on mobile) 4) overall spacing adjusted to be more consistent. \n\n\n\nThe header has been visually revamped (#2131). 1) Underline marker extends beneath the down arrow. 2) Balanced column spacing to align with the grid and allow for longer page titles. 3) overall spacing improvements for consistency.\n\n\n\nOther changes\n\nThe footer example provided by documentation included an <h3> inside an <address>, which was not standard HTML. The <h3> has been moved outside the <address> (#2128).\n\nNew features for core development\n\n\nA mechanism for testing for visual regressions has been added (#2067, #2129).\n\n\nThe aXe accessibility tool is now run on all fractal components during testing, to ensure that accessibility regressions don't occur.\n\n\nConcerns\n\n\n~~My biggest concern about releasing our current develop branch as the new 1.4 is #2142. Given that we have accessibility advocates in our community urging us to hold off on this particular change until we have more data to back up this change, do we want to revert it for 1.4?~~ We've provided a rationale for the change and @maya is OK with shipping it, so we'll ship it now and change in future releases if needed.\n\n\n~~In https://github.com/18F/web-design-standards/pull/2130#pullrequestreview-59637200, @msecret mentioned that he wanted to \"refactor the complex class hierarchies but that should happen as it's own task\".  As far as I know, this hasn't been done yet.  Should it be done before we cut a new release, or should this particular change be held back from a new release until those refactorings are made? (In part, this has to do with the meaning of \"refactoring\" in this context; is it ultimately something that will affect USWDS users who are trying to upgrade, either now or in the future?)~~ See below.\n\n\n~~What do the visual refreshes mean for legacy HTML?  For example, will a legacy header's HTML still look OK with the new CSS?  I'm noticing, for example, that #2131 adds a new usa-width-one-fourth class and uses it in the nav-primary template--will legacy nav-primary HTML still look okay with the new CSS?~~ I created a bookmarklet that allows new CSS to be applied to old fractal sites, thereby allowing us to easily determine if legacy HTML works with newer CSS:\n\n\n\ndocument.querySelector('.Preview-iframe').contentDocument.querySelector('link').setAttribute('href', 'https://federalist-proxy.app.cloud.gov/preview/18f/web-design-standards/develop/dist/css/uswds.min.css');\n\nRunning this, John Donmoyer found no regressions, so we should be good to go!\n. Ok, closing this now, as #2151 supersedes it.. Oh, the one potential downside of converting the markdown to YAML is just that it won't be quite as human-readable, on GitHub at least.  In fact, if we convert it to YAML, we might just want to move it over to the docs repo, instead of keeping it in the USWDS repo... hmmmm.\nAlso, regardless of whatever changes we make to the structure, I should update uswds-crawler to work with them.. Thanks for contacting us @njohnson! Currently, the standards don't provide much client-side form validation. The closest thing we have to it is this validation component, which is largely used for providing user feedback on different requirements for passwords and such:\nhttps://standards.usa.gov/components/form-controls/#validation\nIt should be noted that the component is only really useful for providing feedback, in the form of check-marks, to a validation criteria. It doesn't actually prevent the user from submitting the form with invalid input or anything like that.\nAside from that, we have styling for what invalid input and error messages should look like visually, e.g. in the text input section, but we don't currently provide any actual client-side logic to make such feedback appear.\n. Note that I made a merge commit that resolved some merge conflicts--they were happening b/c of the 1.3.1 release, which was a hotfix made directly to master.\n. Ok I think this is ready for review! Can y'all also review the release notes in the description of this PR? I'll directly paste them into the new release I create once this PR is approved.. Oh weird, good catch... @msecret any idea why this is happening? You can see it on any of the fractal button pages, e.g.:\n\n\n\nAnd strangely, the disabled button looks just like that on all the fractal pages, e.g.:\n\n\n. Um... I think this may have been introduced way back in #2098.  That PR seems to remove usa-button-disabled and its preview branch appears to have the bug too, whereas the PR before it does not. Hmmmm.\n\nI'm not sure what the best fix for this is, for various reasons, so I'm going to file a separate PR to address it, which we can merge into this.\nUpdate: filed as #2152.. Also, as far as I can tell, we don't currently have :disabled styles for the following button styles:\n\nDefault (not primary but default, i.e. buttons w/o any usa-button class)\nSecondary inverse\nAqua\nGray\nRed\n. Oh ok. Should I just assign that style to all :disabled buttons, as well as usa-button-disabled and its variants, to keep backwards compatibility with old markup for now? (i.e., option 3 in the original description of this PR). Ok I think I am almost done with implementing option 3. The only thing left seems to be the disabled variant for the secondary inverse style:\n\n\n\n\nUnfortunately, the disabled style looks very similar to (perhaps identical to) the hover style.  Any suggestions @donjo @rtwell ?\n. Ok, how's this?\n\n\n. Hmm, the new example is funky to me b/c the example is still implying that people should provide validation feedback, but because the example doesn't use real validation rules, we don't use the validator component in our example... honestly i don't think it's a great idea to remove the validator component entirely then, b/c it's kind of like us just removing a tool that we still encourage people to use, but that we refuse to use in our examples.\n\nSo one alternative might be to use the new copy provided in this PR, but also keep the validator component (it's documented in a different section of the docs), and link to it from the \"update password\" example, mentioning that it might be useful in providing live feedback for whatever their password requirements happen to be. That way devs can \"connect the dots\" and use the validator component in their own concrete password validation implementations, even though we don't use it in our example.\nDoes that make sense?\n. @maya can you run this on your system and make sure that npm run spec works ok?. Hmm, does it still give the same error it gives without this PR?. Woot thanks!. Thanks @maya, I've just updated the release notes for 1.4.0 to reflect this:\n\n\n\nI also just filed https://github.com/18F/web-design-standards-docs/issues/455 to ensure that usa-input-required becomes documented (lest this become a secret feature that only long-time users of the standards know about).. Ah, I bet it's the changes to package-lock.json then--it's likely that cd6d7efd0b10c1e25a21e7ba94f949ca877d9342 (from 2 days ago) or even f6a222cffab2427180e93ac8a2ea35fa77a0d7b0 (from 2 weeks ago) might be the culprit.\nAdditionally, it seems like landmark-one-main is a relatively new feature in axe-core, as it was only merged about a month ago: https://github.com/dequelabs/axe-core/pull/498\nSo, my guess is that the aXe tests weren't failing before because we were using an older version of axe-core which didn't detect for landmark-one-main, but then when package-lock.json was upgraded, this check was activated, and because the Fractal site never had one main landmark, the aXe tests started to fail.\nUnfortunately I don't have the time to issue a PR myself right now, but the above diff I provided should do the trick--can you try that and let me know if it fixes the problem?. It looks like that timeout is just an intermittent failure, likely caused because Chrome might take more than 2 seconds to start up... we should increase the timeout there.  I re-ran the CircleCI job and everything seems to work ok!\n. Hmm, maybe like 15 seconds, just in case CircleCI happens to be under a lot of load or something?. Oh, hmm...  I'm not sure if there's an easy way to disable the aXe tests currently, though they ran so quickly that I didn't mind them running.  The visual-regression-tester.js script does have a -g/--grep flag that allows you to only run tests matching a certain pattern (e.g. large-desktop) but it doesn't currently provide a way to skip tests matching a certain pattern, which might be useful for skipping the aXe tests. \nThe test runner is also just calling mocha under-the-hood, but it looks like mocha doesn't support skipping certain tests based on a regex.\nI guess the closest thing that can be done is to define an environment variable that tells the runner whether to skip the aXe tests or not, and then check that environment variable when defining the aXe tests.\nIs there a particular reason you want to skip them?  Just to make the tests run faster, or something else?\n. Hmm, unfortunately I don't have much extra time to dive into this, but here are some options:\n\n\nAdd the components to the SKIP_COMPONENTS array in spec/headless-chrome.spec.js.\n\n\nModify getHandles() in spec/chrome-fractal-tester.js to filter out any Fractal components that have hidden: true in their configs. I don't actually know if this is possible, but it seems like it ought to be?\n. Oh try looking at the history of that file; SKIP_COMPONENTS used to be populated but it's not anymore.\n\n\nUnfortunately I don't know what the JS would look like to exclude hidden: true because I don't know anything about how fractal's data structures work :(. Hi @maya!  Let me know if you have any questions about that docker-uswds thing, happy to answer anything you need.. Is it actually possible for a navigation to not contain an accordion?  I thought it was, but looking through the examples in our fractal site, I'm actually not sure anymore... If it's not possible, then I guess we might as well get rid of this conditional, maybe.. I wonder if it'd be useful to write:\ncss\n  /* For IE11 */\n  display: block;\n  /* For newer browsers */\n  display: initial;\nThat way the display: initial would still be set for all browsers that actually support that rule.\nHowever, I'm unfamiliar with the CSS in question, so I don't actually know if display: block is all that's needed for things to look just like they do with display: initial... If it is, then I agree that only using display: block is the way to go!. Er wait, I'm being silly. I think just replacing initial with block is fine!. I wanted to have copy-vendor-sass be a dependency here, but gulp seems to always run task dependencies even if they've already been run during the gulp process' lifetime, so I left it out, because I didn't want to execute copy-vendor-sass multiple times during the doggone build process.\nI guess another option might be to have copy-dist-sass mention copy-vendor-sass as a dependency, and then have sass depend of copy-dist-sass instead of copy-vendor-sass, but I don't like that either because copying the SASS to the dist directory is really orthogonal to compiling the SASS in general. Blerg.\n. Changing the transition from all to just transform was crucial for ensuring that we could still focus on the close button immediately after the user clicked on the menu button: with transition set to all, even visibility was being transitioned, which meant that when focus() was called on the close button, nothing happened because the button wasn't actually visible yet!\n. This ensures that keyboard focus can't go into the nav menu unless it's visible, either because desktop mode is active, or because the mobile nav is active.. I got rid of this and the focus logic that required the close button be inside it because the close button isn't inside a <header> on standards.usa.gov, which meant that the close button wasn't even being focused on that site after the user activated the menu. \ud83d\ude1e . The check for context === undefined is actually unneeded here because isElement takes care of that case.\nHowever, TypeScript's strict null checking is not smart enough to dig into our isElement() function and infer its return value if context happens to be null or undefined, so we'll explicitly check for null and other falsy values here, ensuring that TypeScript knows exactly what's going to happen if context has one of those values.. These are all documented in TypeScript's compiler options.\n. Good idea, I will switch it to docEl... For your second comment, I think that is what I'm doing by using ES6 default parameters?. Ah nice, I didn't know about sinon sandboxes!  Thanks, I'll convert this to use them.. Well, this is annoying. Basically, our inclusion of chrome-launcher adds @types/core-js to our dependencies, which TypeScript then gets fussy over because I guess it's an ancient version of that library or something.  In any case, we're not actually type-checking any of our code that uses chrome-launcher or core-js.  There's no way to black-list packages under @types in TypeScript, so instead we'll have to take the whitelisting approach and explicitly list every @types package we want to enable here. Blerg.\n. It's explained in the URL I put in the comment above that line--basically if you need to do some async stuff in order to define what tests are available, which we need to do b/c we have to ask fractal what components are available, then you can pass a --delay to mocha (which we do in our mocha.opts file) and then you're expected to manually call run() whenever you're ready to define all your tests.. Nah, done() in mocha is like a node callback function in that it gets called with a falsy first argument to represent \"no errors\" or an exception as the first argument to represent an error.. I'll add a bit more context in this file to explain this better!. I was tempted to just remove the {% if %} statement from both of these modified lines entirely, as I doubt we're actually defining lang or meta.title anywhere, but I left them in just in case.... Related: #2058. I'm not sure why, but aXe takes a lot longer to run if it needs to check iframes, so I'm explicitly telling it not to dive into iframes with a data: URI source here.. For more details on this object, see https://github.com/dequelabs/axe-core/blob/develop/doc/API.md#context-parameter.. Oh, I've sometimes heard of this notion of \"the expected output\" as being called \"golden\". For example, it looks like Go's test suite for gofmt uses files with a .golden extension to contain the expected output of various calls and stuff:\nhttps://golang.org/src/cmd/gofmt/gofmt_test.go\nhttps://golang.org/src/cmd/gofmt/testdata/\nThat said, it's confusing out of context, especially since I don't use the word \"golden\" anywhere else in this code, so I'll change it to something else like previousData.\n. Since these fractal components are becoming more likely to be included in the docs (see e.g. https://github.com/18F/web-design-standards-docs/pull/357), I'm curious if we should start using {%- and -%} to remove excess blank lines from the resulting HTML code?  Using it on the above code, for instance, would get rid of the blank lines in the HTML rendering:\n```html\n\n\n    <h3 class=\"usa-alert-heading\">Information Status</h3>\n\n    <p class=\"usa-alert-text\">Lorem ipsum dolor sit amet, <a href=\"javascript:void(0);\">consectetur adipiscing</a> elit, sed do eiusmod.</p>\n</div>\n\n\n```\nIt also makes the code snippet nicer to read on the fractal site too, of course, but it's really up to you.\n. Hmm, my only concerns about that are that folks are likely going to want to run this with arguments. They can run the tester with --help to get CLI help, and as with mocha, they can run it with -g <pattern> to only run tests that match a certain pattern, which is particularly useful because these tests take longer to run than pure unit tests.\nWhile passing extra arguments to npm/yarn can be done with  --, it adds extra typing and isn't very discoverable. With npm, updating the golden screenshots would become npm run visual-regression-tester -- --updateGolden which is more of a mouthful. Also, unless we come up with a shorter name, visual-regression-tester takes long to type and can't be easily autocompleted with Tab like spec/visual-regression-tester.js can.\nAnother annoying thing with npm < 5 (but fixed in yarn and npm 5) is the huge amount of debug output that appears when something fails, which this command is frequently expected to.\nSo, I guess I just don't feel like this is a very good fit as an npm script, but if you feel strongly about it, we can convert it over.\n. This is just the runAxe function from the old code, and it's expected that the caller catch anything that is thrown.  Right now, the promise is simply passed on to Mocha so Mocha will nicely display any exceptions that are thrown.. Hmm, this is just old code that's been moved to a new file, but that's a good point, I'm not sure why this isn't just a Promise.resolve! I'll change it.. I ended up using an inline script instead of creating a JS file because the static assets directory for our fractal site is dist, and I didn't want to pollute it with static files that are unrelated to core USWDS.. This is obsolete as of https://github.com/18F/web-design-standards-docs/pull/349.. The uswds dependency is in the dependencies section of the package.json, not the devDependencies section (maybe it was at some point?).. ",
    "garrypolley": "I like the idea of the zip download.  Could tell developers to go to the releases page: https://github.com/18F/web-design-standards/releases\n. ",
    "thecristen": "This got me thinking about some possible designs.\nWith $gray-cool-light: \n\nAnd $gray-warm-light: \n\nA bit thinner now: \n\n(Codepen if anyone wants to play: http://codepen.io/thecristen/pen/dGbJjP)\n. ",
    "thisisdano": "There are some great suggestions in here, and I think it's a good idea to provide some styling for the hr element. My primary concern with this is that we begin to limit the scope of styling we apply to base elements.\nWe're learning that styling base elements causes problems when developers try to integrate the standards into an existing codebase \u2014 for instance, the USWDS styling of an h2 would very likely clash with a pre-existing definition of h2. To make our code more interoperable, we're learning to reduce this base element styling.\nHow to do this?\nI like David Bushell's method of scoping base element styling to a content container \u2014 in our case, to usa-content. Scoping our base element styling to something like .usa-content hr allows reliable styling from CMS output without affecting application styling outside the content container. CMS output is also a good place to support hr styling because styling options can be very limited in CMS content.\nOutside the content container, it's less clear that using hrs is a good idea. If we're interested in adding lines/rules, it's usually a better and more consistent to add a border to an existing element's box styling. I'm comfortable adding a .usa-line class rule we can apply to hrs, but I don't think it should be a common solution. For that reason, I'm disinclined to build out a full suite of variants for usa-line (like usa-line-thick or usa-line-primary). Let's add a sensible default, with a practical scope, but leave it minimal for now.\n// @maya @donjo thoughts?. Yeah, I'm comfortable with that. Thanks. The usa-content scope issue is a nontrivial one for later.. I think I like usa-hr since it shouldn't be used on anything but an hr.. We're getting back into responsive tables, and I'm interested in this solution. On the plus side, it seems pretty bulletproof. You lose some of the context of a column of data, and get a lot of redundancy, but I'm inclined to think it's worth it in many cases.\nI'm going to try and implement it on the v2 website and then think about if and how to incorporate it into our standard component.. After three years.... @line47 in the intervening time, have you come to any different conclusions about a good solution?. Other js-based options:\nhttps://datatables.net/\nhttp://filamentgroup.github.io/tablesaw/demo/swipe.html. Let's see if we can address this in https://github.com/uswds/uswds/issues/2658. Thanks @sawyerh \u2014 We'll be expanding our supported components in 2019 and it's very likely that tabs will be a part of that group of work. And the work that you and others have done on a component is an important factor in our decision whether or not to pursue official support . This should be further improved by https://github.com/uswds/uswds/issues/2656. This makes a lot of sense.. How might our consider our guidance on external links given the findings from gov.uk that discovered the external link icon technique wasn't useful or effective?\nhttps://designnotes.blog.gov.uk/2016/11/28/removing-the-external-link-icon-from-gov-uk/\nhttps://github.com/alphagov/govuk_frontend_toolkit/pull/293. Duplicate of #992. @el-mapache Can you take a look at this and help us evaluate as potential future work? I don't think I get all the ins-and-outs, but I know it was interesting to @shawnbot at the time.. Thanks for contributing to USWDS. Unfortunately, this issue is not on our current product roadmap.. This is a duplicate of #1640. Closing.. Thanks for contributing to USWDS. Unfortunately, this issue is not on our current product roadmap.. Thanks for contributing to USWDS. Unfortunately, this issue is not on our current product roadmap.. Thanks for contributing to USWDS. Unfortunately, this issue is not on our current product roadmap.. Thanks for contributing to USWDS. Unfortunately, this issue is not on our current product roadmap.. Thanks for contributing to USWDS. Unfortunately, this issue is not on our current product roadmap.. It's maybe good to recognize (as the extract from the WCAG notes as well!) that no :focus state will really ever be perfect \u2014 getting a standard :focus to have good visibility across all backgrounds just isn't really possible/practical. Solutions that look good on some backgrounds and elements will fail on others. Solutions that pass some strict accessibility measurements fail other kinds of UX measurements.\nThat said, I do like a thick bright gold :focus outline with no outline offset. :). This is fixed now, and we're working on general focus state styling right now.. I'm gonna scope this issue to the spacing issue only. I think there are valid concerns around the position of the sidenav at the bottom, and with the Standards grid, but I know we can fix this spacing issue, so goshdarnit, that I will do.\nBut, for the record, I think that reordering the position works in the \"where do I go next, now that I've read this page all the way to the bottom?\" sense, but does not work in the \"I've arrived on this page and want to orient myself contextually\" sense. Nav is complicated, and while I don't think I can solve it here, I think there's potentially a good role for something like a breadcrumb trail as a reliable initial contextual indicator. \nAs for the grid, yeah, it's really brittle, inflexible, and too interconnected with good-intentioned but irritating-in-practice style rules. I tend to think that grid should really only be used horizontal width/rhythm and gets into trouble when it tries to do much more than that. And I also think that the current grid is too opinionated about what it should do at each breakpoint. If I want a gridded section that displays in halves at mobile width and thirds at medium width, I'm SOL. Personally I'd prefer something like div.grid-one-half.md-grid-one-third or some other kind of clearly defined markup solution to trying to assume too much (and expecting too much) about how a single grid class will behave at all widths.. Thanks for contributing to USWDS. Unfortunately, this issue is not on our current product roadmap.. Thanks for contributing to USWDS. Unfortunately, this issue is not on our current product roadmap.. Thanks for contributing to USWDS. Unfortunately, this issue is not on our current product roadmap.. Thanks for contributing to USWDS. Unfortunately, this issue is not on our current product roadmap.. Thanks for contributing to USWDS. Unfortunately, this issue is not on our current product roadmap.. Thanks for contributing to USWDS. Unfortunately, this issue is not on our current product roadmap.. Thanks for contributing to USWDS. Unfortunately, this issue is not on our current product roadmap.. Thanks for contributing to USWDS. Unfortunately, this issue is not on our current product roadmap.. Thanks for contributing to USWDS. Unfortunately, this issue is not on our current product roadmap.. Thanks for contributing to USWDS. Unfortunately, this issue is not on our current product roadmap.. Thanks for contributing to USWDS. Unfortunately, this issue is not on our current product roadmap.. This is related to our styling of base elements, which we know is causing problems. While I think there is room for helper/utility classes for sizing, we may want to extend its scope beyond headers (that is, have a more abstract system of type sizing that users could apply to any type element \u2014 like what I did here on cloud.gov/united) and make this change in concert with a change to how we handle base element styling.. Two-level (or multi-level) variables are something I'd like to discuss as we move forward. That is, something like the relationship between $var-role (something more semantic) and $var-value (something more utility). This could be used for something like $color-primary and $color-red, where themes could be set up to access the semantic var, and the semantic var can be assigned a utility var (which may or may not be, itself, assignable/mutable).\nThe utility vars would function something like a palette.\nIn general, though, there's a broader question about how we use abstraction to keep customizations to variables and out of custom CSS, which could have implications for ease of upgrade in subsequent versions. . I think a combination of Sass and variables is the only way to make this work sustainably. A higher-level idea here is how do you implement a theme or a variation \u2014 is it through classes, variables, or some combination of both? Determining how we document and use variables is critical to understanding how to solve this \u2014\u00a0and at the heart of how we build a flexible, sustainable system.\nAnd to add a bit more opinion to this: I think the current styling of the Standards should be considered a theme itself, and the core standards should be much more minimal and less opinionated. That is, what can we consider minimum usable styling for the Standards? and how do we establish and encourage sensible variants that adhere to our guidance and allow a realistic upgrade path to subsequent improvements?\nWe need to build the idea of flexibility into the Standards in a way that works. This, I believe, is is deeply related to how we use variables/tokens and provide recipes/guidance for their setting and (re)combination. \nSemantic UI is possibly a good example of doing this well.. Yeah, keep #690 open for now. I have some work that relates to it, tho.. I have one general comment on this that I'd raised in Slack a while back but will recapitulate here:\n\nHowever, if we don't use the rem() function and write in straight rem, we'll have an issue if the base font changes from 10px. But if a site has a different base font size (say 15px), we should be able to just adjust the base font size variable in our default overrides to the site's base (in this case, 15px) and the USWDS rem-sized rules should just update and the site should display the same. (A long way of saying that the base font size shouldn't matter to the display of the USWDS styles.) But, if our own variables aren't calculated using a function like rem() we're gonna see the problem you point out. So, if we don't use calculated variables for our sizing, we really should.\n\nThe main point is that removing a function like rem() means that sizes previously calculated with that function are now hard-coded and more susceptible to being damaged by a change to the base font size.\nPerhaps this is OK as a temporary fix, to address what I consider a mistake that the Bourbon team is making. But I think that we want to use calculated values more broadly in the long term, and not be writing hardcoded rem.. Thanks @maya \u2014 that's interesting context. rem to px feels like a big philosophical shift, and one that feels good to me. It would make lots of things seem (be?) more consistent, understandable, and modular (i.e. less dependent). I still have all ye olde concerns about hardcoded rem, but I'm confident that this is a temporary thing.. I'm open to this \u2014\u00a0let's look at potential solutions as we synchronize and square existing USWDS variables with the new 2.0 variables.\nI suppose we could have a _settings-all.scss that collects all the settings files together and also break out individual settings files more granularly \u2014 just as we're going with uswds-components, uswds-fonts, uswds-layout-grid, and uswds-utilities packages that are collected into uswds with \n```scss\n// -------------------------------------\n// import specific USWDS modules...\n// @import 'uswds-fonts';\n// @import 'uswds-layout-grid';\n// @import 'uswds-components';\n// @import 'uswds-utilities';\n// -------------------------------------\n// ...or import all USWDS modules\n@import 'uswds';\n```. I think there are good arguments to make about how we display our flag. How do we best preserve the legibility of the flag at small sizes? It's impossible to reproduce a fine level of detail at certain levels of scale, and the art of iconography is in capturing the essential and removing everything else. \nSuccess criteria\n- Crisp and clean at the favicon size of 16x16 pixels (or 32x32px displayed as 16x16px)\n- Use the same image for the official banner that we use for the favicon\n- Clearly reads as the United States flag with no magnification\nConstraints\n- The aspect ratio of the official US flag is essentially 2:1 (actually 1.9:1) \n- 7 red bars and 6 white bars, alternating, starting and ending with red\n- 50 white stars in a blue rectangle (the union): aspect ratio 1.4:1\n- The union height is 7 bars (red to red)\nSolutions\nScaling down a standard US flag results in a muddy image without clear distinction between the bars, and complete dissolution of the stars. (FYI, it's hard to display this with pixel fidelity in the following screenshots, and every screen has different display density.)\n\nWhile this is an \"accurate\" flag, it doesn't read as accurate. The stars and bars both are reduced to soup. How might we rebuild the flag file to make it read better? Assigning each bar to a single pixel gives a clear distinction between bars, but requires changing the number of bars. Getting closest to the accurate 2:1 ratio results in a flag with 9 bars:\n\n\nTo my eye, this reads as too few bars, and the resulting union is too small to display many stars. Moving to 11 bars results in a flag that's closer to my mental image of the flag:\n\n\nAdditionally, an accurate flag reads as too dark and unsaturated at small size. You could be forgiven for thinking the flags below were reproduced in grayscale, particularly at a glance, and if the brightness on your machine is turned down:\n\nThis brighter version reads more clearly as red at small size. (And I should be clear that the changes are explicitly for very small sizes. They don't hold up at even double the size.):\n\n\nI know that facts matter, and the flag is the flag is the flag, but in a specialized display environment there are compromises, and as a visual designer I'm focussed on the experiential, and most often hew to the \"adhere to the spirit of the law rather than the letter of the law\" dictum. And in the mind's eye, the flag looks something like this:\n\nClear red and white bars, a blue squarish rectangle in the upper-left corner from red bar to red bar with some number of distinct stars set in an offset pattern inset from the boundary, all inside a flag that's more rectangular than an old tv, but less rectangular than a new one.\nAnd all this leads me to suggest a small flag very similar to the flag we currently use:\n\nBut what I might suggest is that we build a cleaner, sharper version (or versions) and do a better job of controlling its display (by, say, limiting its width in the banner to 16px). \nAnd while I'm being something of an apostate, I may as well say that I'd be open to using a high-contrast black and white version of the flag icon in certain situations. I just want to work to honor the spirit of the flag and present it in the best possible light over multiple display environments. \n:us:. I'm closing this PR to address this issue via #2190. There's a lot to think about and I appreciate all the ideas and input.. Duplicate of #1435\n. Reopening to put on the near-term roadmap.. @sawyerh At this point, I would consider this proposal more of a design exploration and not something we consider on the roadmap. The constraints you mention (and others) definitely impact the resilience of this solution, and \u2014 at least for now \u2014 this is a solution in search of a problem. . @buckaroogeek me too. I feel like a total broken record always looking to gov.uk, but I do like the gov.uk block highlight style (as distinct from their text highlight style)\nhighlighted:\n\nnot highlighted:\n\nAs you can see, there's some overlap with adjacent elements, but outline is probably the right call here, as it doesn't affect layout as border might.\n$highlight-color could also be a var just in case you're designing a yellow-heavy site \ud83d\ude2c . I'd prefer to have variance in color rather than style, and I prefer a solid outline to dots.. Since 3px isn't in the new spacing unit palette, could we try it at 2px and 4px as well?. I would probably move in the direction of 4px \u2014 better to have one that has too much presence than too little, I'd say. hmmmmmm. This whole issue has me a bit twisted, as I think the WCAG 2.1 guidance is not as helpful as I would have expected. That is to say, it is practically impossible to follow, understanding that focus states occur over all kinds of background conditions and it is not context aware. I also don't really think that AA Large is a good solution for focus state either (whatever that means, AA Large against the background? against the text? is a small, but high contrast indicator preferable to a larger, less contrast indicator? who knows!?)  \u2014 I think it begins to get the color too close to common UI colors (in terms of level) and starts to introduce ambiguities, like the necessity of offsetting the outline around buttons since you have to use a color that looks like a button color! If your vision was blurry, even the offset wouldn't be enough the fix that ambiguity.\nYuck.\nI just think the offset looks pretty janky no matter what it is, and even outline itself, while a good solution, looks pretty crude. Would box-shadow: 0 0 0 4px [color] be an acceptable solution (as we see on some focus states on Github)? At least then it follows the rounded edge of buttons.\nAnd I think I don't really like 40 level focus indicators. And it's not just \"liking\" \u2014 AA Large contrast doesn't seem like a thoughtful accessibility solution to this problem, more of a bolt-on. Am I nuts for thinking this? Focus state is about contrast, but also about highlighting and context \u2014\u00a0and almost anything would be an improvement on the default, which is fuzzy, low contrast, and gray. I really think that a 20v or 30v level indicator (like gold-20c or orange 30v), if sufficiently vivid, would be a better solution.\nAnyhow, sorry for being so prickly on this topic. It's important, but I don't think there's reasonable best-practice guidance yet \u2014 it seems like even the experts are struggling.. That makes me a little interested in a potential combinations of colors, like multiple drop shadows, to account for changing background color context. I don't necessarily think offset is a crucial part of the solution here. It could be, but not necessarily. \nIt would also be fascinating and useful to have real feedback and information from actual people who rely on focus-tabbing for navigation.. Here's potentially an interesting solution:\nEDITED (forgot one of the 0s in the box-shadow):\na:focus {\n  box-shadow: 0 0 0 1px rgba(0, 0, 0 ,.9), 0 0 0 5px #FAAF00;\n}\nThis uses a thin, dark stroke and a larger gold-30v highlight to result in something that should have AA Large contrast against any background, has good vividness, and provides distinction against filled buttons.\n\n\n\n. @donjo if you can drop a little issue info in here I can take a crack at this. @donjo if you can drop some issue context in here I can try to take a crack at this, too.. Thanks for contributing to USWDS. Unfortunately, this issue is not on our current product roadmap.\nWe do suggest Font Awesome for icons. See https://designsystem.digital.gov/components/icons/. Thanks for contributing to USWDS. Unfortunately, this issue is not on our current product roadmap.. I will say that I understand the concerns around tablet vs sm but I do think that a more explicit name is more useful and helpful when conceptualizing a size.. @donjo @maya So, this change here is a result of the confusion over the way we changed buttons in 1.4.0 \u2014 the confusion is mostly outlined in #2171, but I will recap, mostly for my own benefit, because... it's complicated \ud83e\udd37\u200d\u2640\ufe0f . So, as of 1.4.0:\n\nbutton-primary is a non-outlined button and button-secondary is an outlined button with a white background. \nprimary and secondary no longer refer to colors (at least for buttons)\nwe use named colors for button backgrounds, of which we seem to have three: aqua, red, and gray... and a blue color (not named, but $color-primary) as a default, if no color is specified\nthere seems to be no class for changing outline colors of button-secondary\nwe seem to still use $color-primary and $color-secondary as functional color variables, including for styling the buttons themselves\n\nThis is confusing. And not documented.\nIt feels like a problem to introduce what could be considered a breaking change in a point release.\nAll of that said, what do we do about the issue at hand? We need to fix this button so it's actually legible. And it would make sense to fix it in a way that's less dependent on the 1.4.0 changes, just so we can address those changes without introducing more tech debt into our own code.\nKeeping the button styled with .button-primary.button-big seems like something that's safe and future-forward, even if we temporarily lose the red background.\n. Thanks for contributing to USWDS. Unfortunately, this issue is not on our current product roadmap.. Thanks for contributing to USWDS. Unfortunately, this issue is not on our current product roadmap.. In general, I don't like mixing centered heds with left-justified heds, but the \"caption\" here is maybe an exception, because the caption falls directly above the table heds, and the cell inset makes left alignment tricky. I think I'd go for something like your h6 suggestion \u2014 something allcap and letter-spaced (to something like 0.05em), and also centered.\n\n. Good changes in general, tho! \ud83d\udc4f . @maya I just addressed that last review comment. lgtm. this is all in line with gov.uk guidance, which makes sense to me. http://govuk-elements.herokuapp.com/form-elements/#form-optional-fields\ncouple Qs:\n\nShould we include the (optional) text as pseudocontent? There's perhaps a modest accessibility gain to hardcoding it in (link) \u2014 and I have slight queasiness about pseudocontent in general.\nDoes the standard field have to be usa-input-required? Might usa-input be just as clear and more in line with our guidance to consider required the default?. Do we have better reasons than gov.uk for why we explicitly mark both required fields and optional fields?\n\n\n\nonly ask for the information you absolutely need\nif you do ask for optional information, mark the labels of optional fields with \u2018(optional)\u2019\n\ndon\u2019t mark mandatory fields with asterisks. Re: required \u2014 I saw this\n\n\nKept the * in required for the accessibility reasons\n\n\n\nand assumed that meant that we were marking required fields with an asterisk, which is counter to the gov.uk guidance:\n\ndon\u2019t mark mandatory fields with asterisks\n\nI'm definitely not saying we need to follow their guidance by default, but it points to a difference of opinion around which I don't know the reasoning.. Re: pseudocontent\nhttps://tink.uk/accessibility-support-for-css-generated-content/ is my reference for the accessibility implications of pseudocontent, but those aren't the only issues I have with pseudocontent. That is: is content content (markup) or styling (css)? Is this a distinction that's too old-school?. \ud83d\udc40 . Well, that sure is a big button. Gotta say, I think it looks a little horsey and off-kilter.\n\nOriginal: \n\n\nHere it is with 8px border radius and 3em x-padding:\n\nThis seems a bit tighter to me. I'd have to go in and modify the Sketch file if we made this change. What do you all think?\nAnd one super-froofy pedantic point: When we say the font size has increased to 24pt (points) it's actually increased to 24px (CSS pixels; as distinct from hardware pixels). This is a very small point, and I apologize for bringing it up, but I can't help myself!\n. So, re: the hero button \u2014 I don't really like that it has a lot of custom styling, and I think I'd prefer if it were a little closer to the default style. I also don't really understand why our hero includes both a text link and a call to action. Is it necessary to have two actions in the hero? Can we just stick with the button?\nAnd perhaps, instead of a link, we might want to include something like a couple sentences of followup text.\nAaaaand it seems like there's more custom spacing under the h2 than strictly necessary. 2rem seems like plenty. \nIf we do all that, we get an example like the following:\n\nNow, is all that crucial to addressing usa-button-big? Ha obviously not. But there's a benefit to using fewer customizations in our examples, and trying to work closely as possible to our default styles. If the default styles don't do what we want, why not? What can we do to either improve the defaults, provide sensible variants, or use some other technique (like utility classes) to avoid proliferating custom styles and edge cases? I want us to be real about the strengths and capabilities of our system, and try not to hide the weaknesses with customization.\n. Oh, and one more thing (Columbo-style): Do we need to assign links $color-gray-lighter in section-dark? If links were regular white, like text, we wouldn't need an override for our friend the button here.. @maya agreed. And I also agree that gray links look good on blue, but perhaps not good enough to outweigh the consequences. :)\nAs Thoreau was so thoughtfully edited once: \n\n~~Simplify~~, simplify.. \n\n. If we want to go ahead and make the hero changes, I'd suggest\n\n\nremove the custom styling from the hero button, that is the .usa-hero-callout .usa-button rules\nremove custom class from the p.usa-hero-paragraph\n\n\nbefore:\n\n\nafter:\n\n\nIs this an aesthetic improvement? Arguably not (perhaps arguably so?), but it simplifies the code, makes it a bit more flexible, and helps us work closer to the defaults, which I think is a useful way to keep us aware of the expressive gamut of the default system.\n. Oops. I see this has affected .usa-nav-primary. \nONE MOMENT PLEASE.. Is the fractal display question one that could/should be addressed with a preview layout?. If I use the @uswds-content preview template, all is well. It has an override of 2em padding on each side. Perhaps these preview templates could be given more functional names (like @padding-y and @padding-xy) \u2014 either way, I got it to display better. Updates incoming soon.\nAlso, this line of code gave me pause:\n.usa-nav-primary {\n  @include usa-sidenav-list;\nI don't need to get into it rn, but if this is an abstracted pattern, it should probably have a more abstracted name. It's definitely confusing that the sidenanv is imported into the primary nav, and maybe speaks to some quirks in component abstraction.\nEther way, I'm pulling that code out into the most sidenav-specific location.\nAnd yeah, the flush margin does minimize the active bar \u2014 which I would probably categorize as an upgrade. Full disclosure, indented content in the sidenav (or any y-bordered indented content) is def a pet peeve of mine. But the active content is also boldface and blue, so I was hoping that the combination of all those things together would get the point across. Maybe not?. Also, regarding the flush highlight bar position: at this width, by the time you even see this nav, you've already read the page, so hopefully that'll also add to the disambiguation of the current page.. Re: reusability \u2014 I'm :100: for it. My only concern is that it can be confusing to see something like \n.usa-nav-primary {\n  @include usa-sidenav-list;\nFor me, this is because if I see @mixin usa-sidenav-list my brain connects it strongly to the sidenav, and, by a kind of exclusionary principle, doesn't expect to see it in the primary nav. What could be more \"abstract\" (dunno if that's the right word in this case) might be something like nav-stacked, which is neither sidenav nor primary nav, but something that might conceivably apply to either.\nThis feels less dissonant:\n.usa-nav-primary {\n  @include nav-stacked;\nNow, I don't necessarily know if we should do something like this right now, but I hope it's a data point worth considering.\n\nNow, about the top and bottom border. I think that a top border can look good in a sidenav. In a sketch for plainlanguage.gov, I worked up a sidebar with a border on the top of the nav, but also with a \"nav hed\" above it, without a border. \n\nAt mobile width, there's a border on the top and the bottom:\n\nI tend to think that's a good pattern: border on top and bottom at narrow widths, and on the top as a sidebar.. @maya Do you think this PR is OK to merge?. It could wait, but I think it's solid enough and limited enough to be ready for this one.. @maya is this ready to demo?. Closing to rename version. Thanks for contributing to USWDS. Unfortunately, this issue is not on our current product roadmap.. ### Mural\n\nVoting results\n\n. Publish roadmap to site. Guess we didn't do this!. Are these all styles that would apply only to optionally-prose-scoped elements?. I like the gov.uk sibling-selector approach.. The text-decoration: none declaration only seems to affect the secondary links in footer--big.\nThe font-weight: 400 declaration has no effect on any default styling.\nSo, let's remove the font-weight declaration. That's the easy one.\nThe secondary link is more of a problem, since it's not classed. So:\n\n[x]  Remove the entirety of the .usa-footer a rule\n[x] Secondary links should be classed \u2014 and usa-footer-secondary-link seems like the obvious class.\n[x] Target the classed links with .usa-footer .usa-footer-secondary-link { text-decoration: none; } as we do for the primary links. \n\n[x] To prevent breakage, we could target the unclassed links with a complex sibling selector like .usa-footer-secondary-link ~ li a { text-decoration: none; } (I don't like this kind of styling, but it's necessary in this case for backwards compatibility.). I think the sketch file is too tight and our current style is too loose.\n\n\nThe close box should something like 16px (1.6rem) of margin-bottom to separate the target area from a target below-adjacent (like a search box).\n\nThe secondary section needs about 16px whitespace on top if there's no search section above it. If there's a search, it should have no whitespace on top (as it does now).\n\n\n. yeah, 15px is ok for the top. I do still think the secondary section needs about 16px whitespace on top if there's no search section above it.\nCurrently I see when I move/remove the search box:\n\nAnd there isn't enough separation between the secondary and primary navs\n. I guess the issue it that 16px is OK for the separation between search bar and primary, but it too little between the primary abutting the secondary.. Once this passes circle, I'm good.. ### USWDS / Where we\u2019ve been and where we\u2019re heading\nThis was a big year for the U.S. Web Design Standards. In March, we released version 1.0 \u2014 the culmination of nearly two years of work researching, designing, building, testing, and iterating. Today our design system is used by over 100 websites and services, reaching tens of millions of users. And our project continues to demonstrate the potential of open source software. Over the lifetime of the project, our community of nearly 400 contributors and commenters from across government and beyond closed over 1000 issues and merged over 1000 pull requests on GitHub, generating over 8000 comments in the process. \ud83c\udf89 We\u2019re going strong, excited for the future, and ready to do more.\nWe built the USWDS to help build fast, consistent, responsive, accessible websites from research-strengthened components for the American public. It\u2019s a continuing process of learning: not only from modern best practices, but particularly from the people who use the system and the people who use the sites built with the system. We continue to be humbled and inspired by the intelligence and creativity of those who are building and extending and improving on what we\u2019ve done. We want to keep getting better by helping these builders, designers, and program managers focus on their mission and the challenges that matter.\nWe\u2019re listening to your feedback and we\u2019re evolving. In 2018 we intend to move forward with some ambitious goals. Here\u2019s some of what we\u2019re planning:\n\nAn easier way to prototype and build consistently and incrementally\nBetter support and guidance for Federalist and Jekyll\nClearer, more specific design and implementation guidance\nBetter typographic flexibility and resilience, with or without web fonts\nA more flexible, consistent color system\nA clearer connection between user research and patterns and components\nA clear, reliable way to stay up-to-date and track component changes and status\nA path to contribute components and research back to the system\nChanging our name to more accurately describe what we are and what we do\nGrowing our core government communities and our larger open source community\n\nAs always, accessibility, research, rock-solid markup, and trustworthy guidance are at the center of what we do \u2014 as well as a commitment to remaining completely free and open-source.\nWe learn when we listen. Feedback matters. The grit sharpens the blade. So let\u2019s keep talking. Is there anything we\u2019re missing? How can we help you build high-quality websites for the American public? Let us know by sending us an email, joining our Slack community, or commenting on this very issue. Onward!\n\ud83d\ude80 . Here's one to start: https://github.com/18F/web-design-standards/wiki/Recap:-Ideation-session-1. Might they be better as issues? It's kind of annoying, since the wiki is so hard to track and harder to use than issues \u2014\u00a0but issues carry so much baggage. \ud83e\udd14 . @AndreaSigz I'm sending it out to the listserv now :). @wslack Thank you for jumping in! I definitely realize this is an issue with roots and existing thoughts. The Standards vs Design Standards distinction really resonates with me because of how familiar I am with design standards, standards manuals, etc. It's definitely aligned with the Design Standards Manuals developed for the Federal Design Improvement Program in the 1970s. (Which I truly \ud83d\ude0d btw.)\nAnd I think you're right, misleading is probably a little harsh. But I also think it's real, and the distinction between a standard (as in OMB Circular A119) and a design standard (perhaps more of a term of art) is not as clear in the government context.\n\nMy suggestion would be to determine what you want the name to accomplish and then look at various possibilities against that criteria of success. I agree that \"standards\" can cause confusion, but if possible, I don't want to give up all of the benefits that the current name allows for the government. I wonder what other names can continue these benefits and be accurate in industry parlance without the possible confusion that's present today.\n\n\u261d\ufe0f This is good advice.. > I think the issue is that, to the extent there are benefits that the current name allows for the government, it's based on the \"gravitas\" the word \"standards\" has in the government, which is directly connected to the general government expectation that standards are mandatory.\nOh boy that. It's unfortunately kinda \"part of this complete breakfast\"-y. But undeniably effective.. @lanebecker I believe \"design system\" is probably the most accurate descriptor of what the USWDS is \u2014\u00a0at least in contemporary usage. I'm not sure what currency that usage has outside design professionals (yet) but it is the way I describe the USWDS to others, and I would say that's how we think of it internally as well. The Nava/CMS system is very interesting to us, and a useful example in many ways!\n@andrewmaier I'm sympathetic to that point of view, and I'm curious how more high-level guidance (at something of the level of HIG) might be important to our system, because, as you've probably seen yourself, USWDS projects deviate from the standard styles far more than they conform to them. I think this is a feature, not a bug, and we expect that this will continue. And because it will, higher-level guidelines are much more important, since we wouldn't want necessary customization to be inconsistent with critical best practices. How can we encourage adaptability within a greater system of good-for-people design (as a verb) consistency?. @gillick It's good point to reiterate that words (and a name is a big word) create an echo that persists, some of which you intend and control, and some of which you do not. Wherever we go with this, hopefully it's with a thoughtful understanding of the intended and unintended echoes and effects. \nAnd I'm very glad to be listening!. A note to all following this issue: Hi! It's good to hear so any voices from so many different corners of government. It is quite thrilling to be in good company.\nI think this thread has been great and but I also want to set realistic expectations around this issue:\n\nWe will not be making any kind of decision on our name in the immediate future. This issue is a component of our current long-term planning, and we're not going to be making any decisions in 2017 (that may sound dramatic, but there are only a few weeks remaining).\nI will keep the thread up to date on our progress.\nWe will work in public as much as possible.\nWe will continue to solicit a broad range of opinions, and try hard to hear quiet voices.\n\nThanks!\n\ud83c\udf3e . @gbinal That nice to hear. I tend to agree with your suggestions and expect that this will be the way we go. Furthermore, the S word at the top of the leaderboard is System \u2014 as this is current accepted name for what the USWDS is outside of government.\nSome other examples of design systems. I've run into this scoping issue myself (adding the government banner to digitalgov.gov) and it hurts. Our base element styling (and our current use of rems) effectively prevents integrating the USWDS into existing sites. I had to do a lot to limit the scope of the USWDS styles to only my component.\nI would also hope that this kind of change would be appropriate for our primary css as well (not just a variant), or possibly configured through something like a sass variable. But it may be tricky! (It always is.). How's this:\n\nWe\u2019ve designed the Standards to support both older and newer browsers through progressive enhancement. The current major version of the Standards (1.0) and subsequent minor and patch releases were designed to support the newest versions of Chrome, Firefox, and Safari, as well as Internet Explorer 9 and up. The next major release (2.0) will follow the 2% rule: we will officially support any browser above 2% usage as observed by analytics.usa.gov at the time of the major release. Currently, this means that Standards v2.0 would support the newest versions of Chrome, Firefox, and Safari, as well as Internet Explorer 11 and up.. Thanks @scottkellum I have some thoughts on type scale and whitespace scale coming up that would benefit from your \ud83d\udc40  and \ud83d\udcad , and am very curious to hear more about infographics and dataviz! (Love your type scale tool btw.). Good point! Working toward guidance for color perception (\"color blindness\") is an important next step.. @esgoodman Thank you for showing up here! I wonder if a mid-range option might look at lot like this one with the multiples of 20 removed! :)\n\nThat's cheeky, but it's also meant seriously. Do you think the system looks complicated? I guess I would say that it looks fine-grained. It has complexity (or nuance?), but perhaps, like good information design, can support that complexity/nuance with a certain structural/conceptual scaffolding. What I'd hope to accomplish with something like this is to provide something that, if not perfect, could get designers very close to their desired effect and capture a wide range of design decisions within the supported palette. And definitely not overwhelm.\nI suppose, as a visual designer, I'm looking for expressiveness and tonal correctness, and as a systems designer I'm looking for the...mmmm...... remixable discrete? \u2014 that is to say a sweet spot of discrete options that allows broad expressive gamut even with (relatively) immutable building blocks.\nFurther, I'm inclined to start with a broader palette set and then highlight subset palettes that could be useful for specific applications. I think it's better, easier, and more consistent (conceptually, and practically, for, like, naming) to start broad and subset than interpolate a finer grain retroactively.\nThat said, I'm working through all this, too. It's somewhat uncharted territory.. I would say definitely yes the current color system (if you can call it that) is far too restrictive. Almost every USWDS project deviates from the default colors, and when it does deviate, the designer and implementer are on their own. A broad common palette like this one gives a deeper starting point, and a clear, useful palette of out-of-the box accessible options.\nDefaults \u2014 probably organized something like the current semantic taxonomy of primary, secondary, tertiary, warning, success might hew relatively closely to our current palette \u2014 but could also provide some additional tonal starting points. Or with a focus on color-blindness for, say, dataviz or other areas where hue has significance. (Still, as guidance goes, we know not to assign unique significance to color, and should continue that practice.)\nThe steps are not created with a function, rather created manually and checked against the rubric. (Though I'm fascinated by the Programming Design Systems chapter you linked to @maya.) They tend to be less saturated as they get darker, and more saturated as they get lighter, but I've chosen them manually to be sure to \"hit\" certain tones. The palette tends toward less saturated primaries for a more subdued experience, allowing for vivid variants with higher saturation.\nI tend to agree with simple names, but we are clearly faced with the reality that color taxonomies tend not to be as sophisticated as color itself. Once we get past the common primaries and ~~tertiaries~~ secondaries, it is a more... expressive world and less systematized. But thinking through color names is a thoughtful, poetic enterprise, and one I'd be happy to continue.\n. I like that \u2014\u00a0it makes sense, but maybe seems too simple for more complex theming? (Or maybe there are more than the 4 vars shown here...) The most interesting part of all of this wrt theming and scale is the interaction between the semantic system (what we might think of as the \"settings\") and the utility system, and how the utility palette is mapped onto the settings.. I think I need some work on the cool-white and cool-gray hues. I want to make sure that these are good reliable grays, and that the white hues move smoothly into the gray hues. I think they're a little too cool right now.. Unfortunately, I don't know if there's a (color) wheel that's an accepted, universal standard like the wheel wheel. But I know what you mean; the whole point of a design system is to build a class of remixable modular design decisions so designers can spend their time on decisions closer to user and business needs. That is, what doesn't need to be reinvented every time to allow opportunity for more necessary inventions? So I try to look to what's needed and necessary in a tool for designing and building. What reduces non-focus effort? And to some degree I'm not particularly interested in arguing de gustibus \u2014 there's plenty to like and love about all kinds of palettes. But what particularly sets the IBM palette apart is the pedagogic rubric: 50 = AA, 60 = AAA, 40 = AA Large. This is what makes this system particularly useful and more than an exercise in pure \"aesthetics\" (scare quotes added because taste and aesthetics are scary).. @jenniferthibault \u2014 Thank you! I think you outline the next steps really really well. And I ++++100 on your ideas for them. This palette is just the raw material of the guidance system \u2014 a way to quantize the choices before digging deeper into just how to work with those choices. And that's where it starts to get more interesting :)\nAnd this is one of the many places where I'd hope we could build more continuing guidance with input from visual designers \u2014 up-front guidance for sure, but living guidance that could grow, change and extend as the system matures. This, I think, is part of the role of visual designers working in this system.\nOne of the specific pieces of guidance would be around color perception and avoiding unique significance. There should be other suggested palettes that achieve different goals. We want to provide implementation guidance around this palette, but there's a bit of a chicken-and-egg problem. So I'm proposing we start with the egg and use it to build out the chicken. \nSo here's my big, overarching idea: the system provides a toolbox of quantized bits, building blocks, recombinable units of... erm.... style. (In this instance, a color palette \u2014 but other examples might include whitespace scale, type scale, animations/interactions, and grid.) This toolbox will provide lots of choice, and allow a pretty wide expressive gamut, but it's the responsibility of the guidance to mold this palette into useful combinations.\nThis architecture choice (wide but relatively fixed palette with living guidance) is one way \u2014 and I think a good way \u2014 to grow consistency and coherence while allowing and even encouraging necessary mutations and unforeseen solutions.\n\nThis seems like a great starting point: the raw materials for building out a system. But what would really help me in my work is to give a few color sets based on these, and show me how to plug & play them.\n\nThis is exactly it. (!) But this may be your responsibility at first (and that of other visual designers). This is the fun part. I am very excited about this, FYI.. Updated palette \n\n\n. ROYGBIP, maybe?. \n. This work is complete and will be part of USWDS 2.0. Thanks for contributing to USWDS. Unfortunately, this issue is not on our current product roadmap.. Thanks for contributing to USWDS. Unfortunately, this issue is not on our current product roadmap.\nRelated to https://github.com/uswds/uswds/issues/2204. Let's check to make sure that this is still an issue. My latest work should address the issues mentioned in https://github.com/uswds/uswds/pull/2378\nIt should \n- fix the grid\n- update to the correct blue color\n- update to the correct light gold color\n- use normalize as expected in tables and elsewhere. I can merge in develop to resolve those conflicts.. @hursey013 In resolving merge conflicts in package-lock.json when merging develop, I just chose everything in develop \u2014 assuming that reflected (y)our new work. But, honestly, not 100% sure. Can you check the diff and validate my choices?. Shoot, it looks like my merge broke something!. Yeah, all that comment stuff is really ugly. Is there a flag we can use to strip those comments from the un-minified css?. I think this work is consistent with ITCSS, so maybe we can talk about what would make the organization simpler.\nIn general, though, there are four files instead of one to make it simpler to include only the parts of the system you want to include:\nuswds-components is all the components\nuswds-utilities is the utilities\nuswds-fonts is the @font-face declarations \u2014 broken out to make it simpler to inline critical styles in the head\nuswds packages all these together as one\nrequired.scss is imports common to all of these \u2014 this file could live somewhere else.\nI've used it in a project like \nsass\n// project.scss\n@import \"uswds-utilities\"\nwhen I didn't want to include the components. You could do a similar thing if you didn't want the utilities. (You can't put import directives inside a conditional and control output using, say, an $output-utilities bool.)\nThat said, there's probably another way to organize everything that makes it extra clear. Let's talk it through.. Let's just keep an eye on our dependencies. Federalist docker container size is no longer is pressing issue.. What kind of a transition plan do we need for this?. Closing this epic with the release of the 2.0.0 Beta.. Closing this epic with the release of the 2.0.0 Beta. We still need to figure out the Sketch part of this epic, but I'd like it to be part of a different epic. URL-wise, I think I'm leaning toward designsystem.digital.gov \u2014 it may not be a future-forward as designsystem.gov, but I like how it establishes the digital scope of our product. It doesn't oversell us.. I'm inclined to hold on too much in the way of cards and direct promo until we move to our new URL. I think our first announcement is that we will be changing our name, and a link to the relevant GH issues.\nThen we do all the stuff in the list above, then we direct folks to the new URL and possibly the new GH org. I want these to be connected to tangible next steps, and to the more pedestrian task of re-bookmarking, etc. @jeremyzilar what do we need to do to start getting moving on designsystem.digital.gov?. We should issue-ize those URL-related steps.. Thanks for contributing to USWDS. Unfortunately, this issue is not on our current product roadmap.. Thanks for contributing to USWDS. Unfortunately, this issue is not on our current product roadmap.. Thanks for contributing to USWDS. Unfortunately, this issue is not on our current product roadmap.. Seeing all these together makes me wonder whether we should use capitals when referring to the design system in shorthand. As in \nIf your project is currently using the Design System and you do not see it on this list...\nvs\nIf your project is currently using the design system and you do not see it on this list...\nI see how caps is consistent with our earlier usage, but I wonder if it's the right call now.\n. Yeah, I get the proper noun thing, but that usage does have a whiff of incorrectness even though it's technically correct, like.... Internet or... Kleenex. But I'm comfortable moving forward with it now. I don't think this is a decision that can't be modified at any later date if it seems more wrong/weird.. Thanks for contributing to USWDS. Unfortunately, this issue is not on our current product roadmap.. Thanks for contributing to USWDS. Unfortunately, this issue is not on our current product roadmap.. hm, hm, hm!\nI'd originally thought that $uswds-path was more clear and correct, though now I'm not so sure.\nSo this var is set so the compiled CSS points to the proper spots for CSS-referred files like background images and font files (are there any other kinds of files CSS might refer to?). It is the relative path from the compiled CSS to the referred assets.\nI get it confused in my head because something like $uswds-path is also the kind of var I might need to set in my gulpfile to make sure that the sass transpiler knows where to find the USWDS sass source files (in addition to the override sass files I've created to modify the defaults).\nSo, since this is really scoped to \"where to find the USWDS assets\", now I tend to think that $asset-path in the context of a USWDS sass project setting var (with the other path vars listed below, and maybe some helper text as well) is the most clear and correct option.\n$asset-path: '../uswds/' !default; \n// path to font and image assets from the compiled USWDS CSS\n// example:\n// \u251c\u2500\u2500 css\n// \u2502   \u2514\u2500\u2500 main.css\n// \u251c\u2500\u2500 other-stuff/\n// \u2514\u2500\u2500 uswds\n//     \u251c\u2500\u2500 img/\n//     \u251c\u2500\u2500 fonts/\n//     \u2514\u2500\u2500 ...\n$font-path: '#{$asset-path}fonts' !default;\n$img-path: '#{$asset-path}img' !default;\n\ud83e\udd37\u200d\u2640\ufe0f . Fine with leaving documentation on the site for this, but I wonder if including/repeating some documentation in the code might make it more useful. ## Scope\n\n[ ] media queries - square values to use USWDS, in the future em?\n\nUsing tshirt, will set current USWDS to defaults, but can be set in settings\nusa-u-md:hover:border-t-sm\n\n[ ] fo, ho - resolve issues - write out name\n\nUsing hover:, focus:, etc\n\n[ ] placeholder - remove\n\nRemoved.\nProduction utility properties\n\n[ ] colors - add in ROYGBIV + cyan, find the scale of colors to add in the system (likely 5) - naming - is it red-50 or red-light in this (leaning to the latter)?\n\nOngoing issue \u2014\u00a0currently using the color values from current USWDS, but can add any other in settings.\n\n[ ] colors - resolve the ui, id confusion by potentially using primary + [secondary or accent]\n\nOngoing issue \u2014\u00a0currently using the color values from current USWDS\n\n[ ] border radius - add modifiers, edit values\n\nAdded modifiers.\n\n[ ] clear - change name to clearfix, remove left and right from prod, use mixin: https://www.bourbon.io/docs/latest/#clearfix\n\nCurrently removed \u2014\u00a0will add back in as clearfix, using settings from USWDS\n\n[ ] display - add table, rethink hide value to none\n\nDone. Added table-cell, too.\n\n[ ] font family and font size - would like to see a more generic, single purpose option as well as family+size\n\nNot sure about this. I still feel strongly about regularization and I'm loathe to split.\n\n[ ] font weight - include light, normal, bold and fw1 - fw9\n\nCan add light, bold, normal and perhaps tie to some settings. Reference bold etc as the word, not the numerical value.\n\n[ ] line length -  adjust variable names\n\nFolded into max-width as reading and reading-sm but I think this needs more tweaks\n\n[ ] list reset - use the USWDS mixin\n\nCan do \u2014 will change rule to reference that mixin.\n\n[ ] margin - remove some values\n\nDone\n\n[ ] text transform - change names to match CSS values\n\nDone\n\nThings that can be resolved in the future through testing:\nFuture\n\nborder radius - observe if the name \u201cradius\u201d works, as opposed to border-radius or br\n\nChanged to border-radius\n\ncolor - consider whether some values should be removed\n\nThis work is TBD.\n\nfloat and flex - who gets the f?\n\nBoth written out now\n\nfont size - naming f1 vs font-size-l\n\nThis will have both \u2014 either can be activated depending on settings. Using a master scale now that I'd like to change.\n\nline height values ambiguous\n\nChanged to numerical, but that isn't working \u2014 gonna change to something more verbose/explicit\n\ntext align vs float naming conventions\n\nAll written out now\n\nShort vs longer names - ambiguous vs easy to type\n\nNow all longer.. I think it was just because we thought we could add it easily by the time of the 2.0 release. But it could release earlier \u2014 no need to wait.. We use PostCCSS? I do see we use autoprefixer, and I feel that's a fine best practice. I'm pretty sure we don't want to prefix manually, but we could give some guidance about what post-compilation steps our sass requires if someone has their own pipeline.. It doesn't affect the validity of this issue at all one way or the other, but it is a little confusing to me because USWDS does not directly use PostCSS. Our autoprefixing is through gulp-autoprefixer link, which could be implemented as a plugin to PostCSS via gulp-postcss link and autoprefixer link but USWDS does not currently use gulp-postcss or its plugin system.\nThat said, it very well could be a good idea to move to PostCSS and its plugins to do all our processing! (I'm inclined to want to do this.)\nI'm strongly for giving guidance around using some form of autoprefixing for folks who compile USWDS from source (which I also recommend! that's how you implement project settings!) as I don't trust building prefixing into the source SCSS as a good long-term strategy.\nOur compiled CSS should already be prefixed, yes?. OK \u2014\u00a0I'm going to merge this, then dig into these issues. Hopefully that'll assure I only have to fix them once.. We may have some more homepage and blog post information to come, but they are complete enough for the purposes of this issue. Thanks for contributing to USWDS. Unfortunately, this issue is not on our current product roadmap.. Jumping on this now. Now \u2014 to squash some color bugs.... Yeah, passed Circle!. So I've been experimenting with something I've been thinking of as a \"deferred assignment\" technique for using maps and lists as a way to set project values without variables. It goes kinda like this:\n\n\nAll project settings overrides would happen before loading any USWDS files. To simplify, something like:\nsass\n@import project-settings\n@import uswds\n\n\nProject settings would be set with lists:\nsass\n$primary-lighter:     red, 10;\n$primary-light:       red, 30, vivid;\n$primary-base:        red, 50;\n$primary-vivid:       red, 50, vivid;\n$primary-dark:        red, 70, vivid;\n$primary-darker:      false;\n\n\nInternally, these values would be compiled into a new map:\nsass\n$project-colors : (\n  neutral: (\n    lighter: system-color($neutral-lighter),\n    light:   system-color($neutral-light),\n    base:    system-color($neutral-base),\n    dark:    system-color($neutral-dark),\n    darker:  system-color($neutral-darker),\n  ),\n  primary: (\n    lighter: system-color($primary-lighter),\n    light:   system-color($primary-light),\n    base:    system-color($primary-base),\n    vivid:   system-color($primary-vivid),\n    dark:    system-color($primary-dark),\n    darker:  system-color($primary-darker),\n  ),\n  secondary: (\n    light:   system-color($secondary-light),\n    base:    system-color($secondary-base),\n    vivid:   system-color($secondary-vivid),\n    dark:    system-color($secondary-dark),\n  ),\n  accent-warm: (\n    light:   system-color($accent-warm-lighter),\n    base:    system-color($accent-warm-base),\n  ),\n  accent-cool: (\n    light:   system-color($accent-cool-lighter),\n    base:    system-color($accent-cool-base),\n  ),\n  inverse: (\n    base:   system-color($inverse-base),\n    dark:   system-color($inverse-dark),\n  )\n);\n\n\nThese values use the system-color() function to pull values from a $system-colors map:\nsass\n@function system-color($props...){\n  @if length($props) == 0 {\n    @return false;\n  } @elseif type-of(nth($props,1)) == 'list' {\n    $props: nth($props,1);\n    @if length($props) == 2 {\n      @return map-deep-get(\n        $system-colors,\n        nth($props, 1),\n        nth($props, 2)\n      );\n    } @elseif length($props) == 3 {\n      @return map-deep-get(\n        $system-colors,\n        nth($props, 1),\n        nth($props, 3),\n        nth($props, 2)\n      );\n    }\n  } @elseif nth($props, 1) == false {\n    @return false;\n  } @elseif length($props) == 2 {\n    @return map-deep-get(\n      $system-colors,\n      nth($props, 1),\n      nth($props, 2)\n    );\n  } @else {\n    @return map-deep-get(\n      $system-colors,\n      nth($props, 1),\n      nth($props, 3),\n      nth($props, 2)\n    );\n  }\n}\n\n\nsass\n$system-colors: (\n  red: (\n    5 :          #fcf5f5,\n    10:          #f7ddda,\n    20:          #f7b7ad,\n    30:          #f28f88,\n    40:          #ed6b61,\n    50:          #d83731,\n    60:          #ab3a3a,\n    70:          #6e312f,\n    80:          #3b2523,\n    90:          #211b1b,\n    vivid: (\n      5:          false,\n      10:         #fccec7,\n      20:         #fda99c,\n      30:         #ff806c,\n      40:         #ff5c48,\n      50:         #e92106,\n      60:         #c31f0a,\n      70:         #9c1503,\n      80:         #631212,\n      90:         false,\n    ),\n  ),\n...\n\n\nThis $project-colors and $project-colors maps would be collected into a single map...\nsass\n$all-colors: map-collect(\n  $system-colors,\n  $project-colors\n);\n\n\n...That developers would access with a color() function in their component sass:\nsass\nbackground-color: color(primary, dark);\n\n\nEt voil\u00e0?\nAnd I think we could use a similar technique for any theme settings value \u2014 which could obviate the need to have a more complicated import pipeline.\n. This technique results in a system outcome influenced by the Salesforce token/function technique: https://medium.com/@sitaggart/how-we-use-sass-maps-for-design-tokens-and-developer-happiness-8bae50393114. Like this kind of thing as a default/example?\nsass\n$color-primary:       red;\n$primary-lighter:     $color-primary, 10;\n$primary-light:       $color-primary, 30, vivid;\n$primary-base:        $color-primary, 50;\n$primary-vivid:       $color-primary, 50, vivid;\n$primary-dark:        $color-primary, 70, vivid;\n$primary-darker:      false;. Not feasible at this point. Hi @annekainicUSDS \u2014 thanks so much for looking this through and asking thoughtful questions.\n\nHow do we accommodate different layouts at different breakpoints? Do we just add additional classes? E.g., tablet:g-col-6 desktop:g-col-12\n\nYes, the grid classes and utility classes both use a mobile-first methodology where responsive prefixing applies to the breakpoint and higher. And the classes are additive, just as you suggest \u2014 adding desktop:g-col-12 would give the element a 12-column width at desktop size and higher.\n\nAre visibility classes used by just adding :display-none to other grid classes?\n\nVisibility classes and other utility classes are available and would do something like what you say. Just not as a suffix... Adding the  u-display-none utility to a tag would apply display: none, just as tablet:u-display-block would add display:block to a media query of min-width: [tablet].\n\nThere seems to be a few different places where !important is used. Is there any concern for downstream effects this might cause?\n\nThe utility classes can be output with !important in project settings or you can output them without !important. In general, this would assure, by design, that they will always override any component CSS in a mixed utility/component environment. This is a feature of some utility class libraries (Buzzfeed Solid, and the override utilities in the new GDS design system are the first that come to mind) and we think the downstream effects will be understandable and intentional \u2014 but perhaps further testing is necessary to bear this out.\n\nAre you planning to maintain existing usa- grid classes in the new version? Keeping these classes, while perhaps deprecated, would enable us to upgrade to the new system incrementally instead of having to convert everything in one go.\n\nProbably? I tend to think it's a good idea. We haven't hashed this out yet, but I'm inclined to make as few hard breaking changes as we can reasonably accommodate. Incremental updating and implementation is one of our roadmap goals, so this would fit squarely within that goal.\n\nAre there plans for a screenreader-only class and what might that look like? What are the general plans for screenreader support? Currently the grid system includes support for screenreaders. Specific grid-related concern: changing the source order in the layout.\n\nYes, to screenreader-only class(es) but we haven't built them yet. Something like u-sr-only would be useful. Honestly, I don't know what screenreader support for grids means \u2014 happy to learn \u2014 but the utility class system includes u-order-[n] utilities for setting, say tablet:u-order-last.\n\nWe're curious about the choice to name the breakpoints after devices (e.g., tablet) instead of sizes. We'd love to know the reasoning for this.\n\nThere are pros and cons to sizing methodologies and I tend to fall on the side of being more explicit rather than more abstract. I know, as I develop, that I am often looking at reference material when I'm trying to remember exactly what abstract breakpoints like sm or md actually refer to. It is very true that tablet is shorthand for myriad sizes \u2014 no need to post any of those Luke Wroblewski photos! \u2014 but it's at least a more discrete shorthand that immediately signifies a range.\nWhile version 2.0 makes it possible to add custom sizing to breakpoint values, I do not encourage it. We're working to build a system that's easy to build from and contribute back into \u2014 a more immutable range of breakpoints helps component submissions by making responsive behavior more consistent and reliable. \nIn general, we've made design decisions that favor explicitness over concision where possible, especially in whitespace sizing and, by extension, breakpoints. \n\nAlso curious on why you decided to go with flexbox for the grid system, and have you done research into performance-related issues with this.\n\nWe've not done research into performance issues with flexbox \u2014 if there are performance issues, please let us know. We're following the lead of something like Bootstrap 4 (and others) that value the benefits of flexbox (flexible layout, ordering, and alignment are some of the big, showstopper benefits) over compatibility issues. Practically, we have to see flexbox layout as progressive enhancement \u2014 understanding that the oldest browsers will not see it and building layouts and components that are functional regardless.\n\nWhy the use of the colon (tablet:g-col-6) in the grid classes?\n\nWe use the colon for state-based prefixes to help distinguish states from the utility itself. This applies not only to responsive prefixes, but to hover:, active:, visited:, and focus: states. \nThis serves as disambiguation as well. tablet, for instance, is a width as well as a breakpoint. A utility like u-max-width-tablet is a good example and something like desktop:u-max-width-desktop is a potentially useful utility for setting application width. Colon-prefixing helps reinforce the usage of the particular prefix and help build, over time, a faster understanding of a utility, its value, and its state.\nThis is useful not only for clarity in markup, but also connects to a the pathway by which you might implement utility markup into component CSS.\nIf you were including the grid styling into CSS, you could do so by using @include g-col(6) in component markup. States and media queries are handled differently. Treating them differently from the beginning helps develop a consistent pattern and a connection with component integration.\nsass\n.my-component {\n  @include g-col(12);\n  &:hover {\n    @include u-background-color(black);\n  }\n  @include at-media(tablet) {\n    @include g-col(4);\n  }\n}\nAll this said \u2014 there are many issues at play here and with the work we're doing in support of version 2.0. Your feedback is very very helpful and it pushes us to make the best, most useful changes in support of real-life needs.\nLet's keep talking.. I would argue, with somewhat of a hedge, no \u2014\u00a0that it is clearer and more predictable to require explicitness and less opinion, even if it means more typing and redundancy. I think the defaults of our current grid are an opinionated and unpredictable net negative.\nThat said, I think there's something of a compromise. Set g-col equivalent to g-col-12. \nCurrently g-col gives you a flexible column of flex: 1, but this could easily be rewritten to be g-col-fill and that's consistent with flex utilities (like u-flex-fill).\nNow, if you had a column, you could set its classes as g-col tablet:g-col-4 and it would have the functionality you outline and address my own predictability concerns. I kinda love it.\nWhat do you say?\n. yoops \u2014\u00a0by the time I saw this I'd already made the change since I thought it was such a good idea! :/\nI still kinda think it is \u2014 though I do agree about g-col \u2014 the consistency with flex-fill though was deeply appealing to me...\n. Relatedly/unrelatedly \u2014\u00a0I'd never actually really used grid utilities until building this and prototyping with them (!), and now I can unreservedly say I love them.\nLive and learn! :). Thinking it could be worth adding a g-gap-small and renaming g-gap to g-gap-base to bring this more in line with other theme styling.. I like this \u2014 I added a very generic tooling to the engineering bullet \u2014 I don't know what that is, but in my mind it's things like @toolness's contrast checker, etc etc. I know we could develop a list of things.. 1. Yes, I'd say they helper toggles should be the same type size.\n2. I think the button looks fine with less padding.\nIn general, I do think it looks a little funny being as close as it is to the field and there's a bit of dissonance with the helper text toggle, but I consider these things minor, and better to fix the breaking change than mess about with spacing and introduce a new one.\nIt sucks to go back and forth though, since anyone building with the block button might find their layouts affected with this fix. Again, I don't think this is reason not to make this fix as implemented.\n. I can't say I know what this means or what I should do, but I can implement the fixes outlined in the warnings.. Have a feeling I know the kind of thing this is referring to. It's not an error I've gotten before, though. Is there an open branch I could look at? (Probably) somewhere a quote() function is getting a false value \u2014 I'll need to find out where it's coming from...\nDoes jekyll build --trace actually give you any more info?. Cool \u2014 there are only 8-9 places where quote() is used in the functions \u2014\u00a0I wonder if there are any other instances where a false value might creep in?. I admit this ongoing discussion is wearing me down. And I don't take my continued pushback against this proposal lightly \u2014 I am aware of the trends in our findings and in the larger design system community. Still, we are working to develop a system that works with flexibility and precision across a broad range of projects and use cases. Continued practical use points me in the direction of a static named system, neither t-shirt size nor numeric, and pushes me against these findings.\nMy experience building responsive websites points me to the following 13 useful units of whitespace for sites of all kinds. Not all sites use all these steps, but it's not unusual for a project to use all of them or most of them \u2014 particularly as the functionality of a project gets more complex. The boldfaced units are certainly the most critical, but every step on this scale has its use.\npixel     | grid 8  | t-shirt | relative  | named     |\n---       | ---     | ---     | ---       | ---       |\n1px   | 1px     | 1px     | 1px       | pixel\n2px   | 2px     | xxs     | smallest  | eighth\n4px   | 05      | xs      | smaller   | quarter\n8px   | 1       | sm      | small     | half\n12px      | 105     | \u2014       | \u2014         | half-plus\n16px  | 2       | md      | base      | base\n24px      | 3       | \u2014       | \u2014         | base-plus\n32px  | 4       | lg      | large     | double\n40px      | 5       | \u2014       | \u2014         | double-plus\n48px  | 6       | xl      | larger    | triple\n56px      | 7       | \u2014       | \u2014         | triple-plus\n64px  | 8       | xxl     | largest   | quad\n72px      | 9       | \u2014       | \u2014         | quad-plus\nWhatever the solution, I want it to work consistently and universally, and leave near-zero instances where designers and developers need to choose values outside the system to achieve the needed result. In general, I find the subset allowed with something like t-shirt to be too narrow. And I feel strongly that the 13 values listed above cover 95%+ of spacing needs, even for demanding applications.\nAs an aside, for now, I will also say that I prefer relative sizing (base, smaller|tighter|lighter) to t-shirt (sm, md, lg)  for reasons of conceptual consistency, and alignment with established naming conventions.\nI worry that a theme-defined spacing scale will make it more difficult to provide reliable modular components. This isn't a deal-breaker, in all cases, necessarily. To me, evaluating the balance comes down to the real experiential differences between elements in the palette, and the difference in scale between the system palette and the project theme palette.\nSpecifically, I am more inclined to adopt a relative, settings-based theme palette when a) the experiential difference between steps in the scale is relatively modest (an example might be border-radius); ~~and~~ and/or b) there are many more elements in the system palette than are practical in any specific project (an example might be color).\nIn the instance of spacing scale, I will argue that the experiential difference between steps is not modest and that there isn't significant difference between the size of the system spacing scale and a proposed theme scale. In face, I propose that the 13 steps outlined above should be the system palette for spacing scale (with the addition of responsive breakpoint values).\nThe complete system spacing scale would look like the following 22 sizes, with proportional sizing at standard margin and padding sizes, and \"physical\" sizing at responsive sizes (all based on an 8px grid):\npixel  |  name\n--- | --- \n1px | pixel\n2px | eighth\n4px | quarter\n8px | half\n12px | half-plus\n16px | base\n24px | base-plus\n32px | double\n40px | double-plus\n48px | triple\n56px | triple-plus\n64px | quad\n72px | quad-plus\npixel  |  name\n--- | --- \n160px | card\n240px | card-plus\n320px | mobile\n480px | mobile-plus\n640px | tablet\n880px | tablet-plus\n1024px | desktop\n1200px | desktop-plus\n1400px | widescreen \nThis could result in a statement like the following in component SASS, which is both readable and descriptive:\n@include at-media(desktop){\n  @include min-height(card-plus);\n}\nThis spacing scale naming system is both discrete and relatively unambiguous. Most spacing scales use abstraction to try and simplify the system. This post is not an argument against abstraction \u2014 it's useful and has a place when the the values are subject to change and the specific values are less important than the metaphor established by the abstraction. I argue that for spacing, the values can and perhaps should be immutable (for reasons of predictability and modularity) and that the specific value is more meaningful than the metaphor.\nFor me, media queries are a good example of the value over of the specific over the more abstract metaphor. While I'm all too aware that there is no canonical definition of mobile or tablet and that ymmv across the spectrum of devices and scales, there is absolutely no kind of definition (by design!) about what sm, md, or lg means. Thus, as a designer or a developer, from project to project (and very frequently within a single project) there's a real need to cross-reference just what md means in this instance. There's a necessary translation layer between the md in the code and the tablet in the mind. Why not just go and use tablet in the full understanding that they are both technically abstractions, but one has some practical intrinsic value?\nIn practice, this has been tremendously useful. Not only do I not find myself comparing and cross-referencing far less \u2014 but I have some reasonable expectation that responsive components I build will respond similarly in projects that use the same responsive naming and value. This has real importance for project-to-project modularity and predictability in a system like USWDS where we expect our components to behave predictably in diverse environments.\nIn my experience, the benefits of t-shirt for spacing scale (familiarity, \"simplicity\", and concision) do not compare to the practical benefits outlined above. T-shirt cannot reasonably accommodate what I consider the necessary breadth of a consistent, practical \"universal\" spacing system \u2014\u00a0and it introduces unnecessary unpredictability and ambiguity for a stylistic element (spacing) whose effect is so powerful and critical to effective, sophisticated design work.. @stphnwlkr I agree that that solution has a certain appeal, though I have found \u2014 by trying this out in  practice \u2014 that using specific numbers is too difficult to remember. That solution provides a high degree of specificity and control, but (certainly in my experience) at the expense of usability. \nI tend to look for solutions that allow you to remember a pattern or a system of naming instead of remembering specific magic numbers.. I think at some point you have to let the absolute values go. This is a necessary abstraction.. I could be comfortable using a spacing unit multiplier system like the following, based on a base spacing unit of 8px:\n| name | value |\n|---|---|\n| 1px | 1px |\n| 2px | 2px |\n| 05 | 0.5 spacing units\n| 1 | 1 spacing unit\n| 105 | 1.5 spacing units\n| 2 | 2 spacing units\n| 3 | 3 spacing units\n| 4 | 4 spacing units\n| 5 | 5 spacing units\n| 6 | 6 spacing units\n| 7 | 7 spacing units\n| 8 | 8 spacing units\n| 9 | 9 spacing units\nPlus -neg prefixed values (like -neg-1px or -neg-2) for negative spacing units.\nWhat I'm looking for is something that can accommodate what I consider the necessary spacing units, something that is simple to remember and apply, something that doesn't introduce critical ambiguities, and something that is both consistent with the rest of the system and works to strengthen the system as a whole.\nI think there are some ambiguities between the use of numerals here and in our layout grid system, but I feel OK that these ambiguities aren't too serious.. @maya the layout grid naming issues you mention were my biggest concerns about the system I'd initially proposed. . @stphnwlkr we are moving in that direction for layout grid. \nSee https://github.com/uswds/uswds/pull/2422. OK, so there are a few issues here I want to unpack and challenge, but first I'll say that I agree in principle that there is some limited subset of colors that would be useful in basic prototyping and should be available in the default set.\nBut I don't think this is how we should do it.\nI believe there is real system utility in using the default mechanics of the system to promote system literacy and I worry that this proposal unintentionally undermines system literacy.\n\nStepping back, let's look at the utility class system, the color system palette, and the project theme palette.\nThese proposed utilities deviate from the standard utility class naming in a way that may or may not be simpler, but is inconsistent with the broader system and would introduce misleading expectations. Whatever default colors we add to utilities should use the u-color-[NAME] and u-background-color-[NAME] construction that the rest of the utilities use.\nAs for the colors themselves, the system color palette has no purple color family. Colors that might traditionally fall under the purple hue are shared between indigo and violet. Might violet be named purple instead? Perhaps, but I like that the current system is aligned with ROYGBIV+ and that indigo and violet disambiguate purple. That said, I could be open to renaming violet as purple but I do not consider it an improvement from the point of view of consistency.\nI don't like that this subset excludes so many color families. I understand that exclusion is the nature of a subset, but I feel that the default \"basic palette\" (let's call it) could be more representative of the system palette. I would prefer to see more families and fewer grades in the basic palette.\nIn fact, this basic palette, as proposed, becomes a third palette system, a hybrid of the existing palettes:\n| palette | color families | grades\n| --- |--- |--- \n| System palette | hue-based | numeric/fixed\n| Project theme palette | use-based | relative\n| Proposed basic palette | hue-based | relative\nThis introduces another mental model into the system and continues to obscure the grades we use to assure Section 508 conformance.\nI want whatever system of prototyping and sketching in code to support understanding our system color palette and the method by which you might build a theme palette. The process has pedagogic value. This proposed basic palette is like a shadow system palette that obscures and possibly supplants both the system palette and the project theme palette. It feels like a counterproposal to the existing palettes instead of something that works with them.\nMy guidance for sketching with code, prototyping, and working with color goes something like this:\n\nTo start, work only in grayscale. Consider color progressive enhancement. Instead, work with type, hierarchy, and grade to sketch and build your first iteration. The system could support this by developing a \"sketching palette\" that includes (in part) a grade-only set of utilities used for the equivalent of a pencil sketch \u2014 like u-color-5 \u2014 in grades 0-5 and 10-100. This helps understand the grades that would eventually be necessary in the final project system palette, and test for Section 508 color contrast with the \"magic number\" grade test.\nNext, experiment with color families. Use simple color testing to try to map a color family onto the hues determined in the pencil sketch. The system could support this with a component of the sketching palette that was hue-only, taking a representative hue from each color family as a single value passed to the utility \u2014\u00a0like u-color-red-warm.\nRefine using plugins. This gives you enough information to adjust your utility settings with plugins, adding the full color families you've identified as promising. Setting plugins like plugin-color-red-warm to the $global-color-plugins list var in _project-utilities-settings.scsswould apply those values to any utility that accepts color. Then adjust to suit project needs.\nApply final values to project theme palette settings. At this point, you have all the information you need to build or modify a project theme palette \u2014 the palette every USWDS project should use as their standard production palette.\n\nSketching and prototyping is important to me, and it's an important feature of USWDS 2.0. I want to work to support it and provide a usable, practical, and pedagogically consistent pathway from idea to production code.\nI believe in both the concrete specificity of utility units and the scalable abstraction of production naming systems. I want to build a bridge between them in the  prototyping \u2192 production workflow. I think there are strong pedagogic and practical accessibility benefits to understanding the color grade system, and to encouraging the use of color as progressive enhancement, secondary to other elements of form, shape, and hierarchy. I realize that the workflow and solution I propose doesn't provide as much utility out of the box, but I believe that the process and progression I outline above \u2014 from simple to more complex \u2014 is important to assuring solid accessible design, understanding the range, intention, and capabilities of the design system, and assuring a better final product for everyone who uses our websites. This is what I want to encourage and build into our tools.. So, I think the issue you've outlined here comes down to the difference and distinction between the system palette and the project theme palette. To the question of whether we will use a relative scale (like t-shirt or base-relative) or a fixed numeric scale (like f#) \u2014 I guess I say that we will use both.\nThe system palette is the larger set of values that defines the set of all values used by the system. For typescale, we have a system of 20 values from f1 (~12px) to f20 (~140px) identified as the discrete set of typescale values available to any project using the system.\nThe project theme palette is a subset of the system palette and includes only those values used by a specific project. No single project (even complex projects) should use all 20 values in the system palette. It's appropriate that projects use fewer type sizes. Currently, the project theme palette is named with a 9-step base-relative naming system (defining a base value, then naming small, smaller, smallest, etc from it):\n| name |default size | use |\n| --- | --- | --- |\n| micro | f1 (12px) | small helper text; < 1 sentence reading\n| smallest | f3 (14px) | fine print ; < 2 sentences reading\n| smaller | f5 (16px) | helper text; < 1 paragraph reading\n| small | f6 (17px) | body small reading; buttons; long reading\n| base | f7 (18px) | body standard reading; buttons; long reading\n| large | f10 (24px) | small callout text; small headings; < 1 paragraph reading\n| larger | f12 (32px) | large callout text; headings; < 2 sentences reading\n| largest | f14 (40px) | small display; big heading; < 8 words reading\n| mega | f16 (56px) | big display; < 3 words reading\n\n\n\nFor now, I am going to avoid the normalization issue, but I will only say to those who \"don't care\" that it is fine that they don't care, but that I believe it makes sense for the system to care.\nProject theme typescale can access use-based assignments or face-based assignments \u2014\u00a0that is, you can specify a type size using something like u-font-text-base or like u-font-serif-base.\nUse-based families\n\ntext\ncode\nheading\nalt\n\nFace-based families\n\nsans\nserif\nmono\ncond\n\nYou can set what families/roles your project uses (and set the sizes) in _project-settings.scss.\nFor the utility output, you can use plugins to determine what families and values are output in _project-utilities-settings.scss.\nThe font utility default is to use plugin-font-theme-all and plugin-font-theme-roles-all to output utilities for all the base-relative theme sizes in both the role-based and face-based families. You could use a plugin like plugin-font-uswds-all as a prototyping tool to output all the system values as well, like u-font-sans-f19.\nThe basic idea is that projects set their type sizes from values available in the system palette. USWDS includes a usable project theme default set, but your project needs should determine the final settings. The 9 steps in the project theme palette should be sufficient for most projects, even considering responsive needs. (If not, projects can still access the sizes in the broader system palette.)\nI think this is consistent with the proposal outlined in the issue, but provides some additional breadth with a broader project theme palette.. One of the goal sets of USWDS 2.0 is to make the entire system more flexible, modular, and resilient, while maintaining some measure of system coherence. I think that building more font choice into the system, and providing a pathway to supporting new project typefaces, is in the service of this goal.\nIf we're asking whether adding and supporting new faces is because the existing faces are not sufficient, I think the answer is a clear yes \u2014 if only because we've seen how often sites using USWDS have implemented some custom solution with non-default faces. From my perspective, when there's a pattern of users implementing designs that necessitate a non-system solution we have to look at the system solutions and determine if this is an instance where we should change the system to accommodate the user need signaled with this behavior or classify this behavior as one we work to actively discourage.\nIn this instance, I think we should work to change the system. I don't believe that guidance tailored to a single set of faces is sufficient. I think our system and our guidance should acknowledge that typeface choice is an area where there is occasionally a legitimate need to use non-default solutions.\nWhat I'm proposing should, to some degree, be considered distinct from default guidance. Adding this-or-that face into the system is distinct from actively promoting that face as the best solution for most users. I think that debate is one we will have, but one for later.\nTo me, this issue is about modularity, resilience, and flexibility \u2014 what happens when you choose a face outside the boundary of the system, how to integrate that new typeface into the system, and how to integrate new components and solutions developed with that typeface back into the system.\nA common problem with changing typeface is that every typeface is different. Obvious, yes, but the difference between typefaces goes beyond the way a face looks. There is very little consistency from face to face around how large a face appears on screen \u2014\u00a0how big it looks to a reader (optical size) and how much space the face actually occupies (metrics).\nIf we want our system to be more modular and resilient, we should work to create a system that still performs well, regardless of the chosen typeface \u2014\u00a0and whether or not that specific font actually loads on the user's machine. If the font doesn't load, the layout definitely shouldn't break, and, even better, it should be deformed as little as possible.\nAnd we want the guidance we give to work as well as possible, regardless of the typeface. If we say that font size f8 is a good size for screen reading on a desktop monitor, we want this to be as true as possible from face to face. I don't think it's reasonable to assure that things work 100% seamlessly, but we want to be doing out best to make it as seamless as possible. And it isn't seamless when we swap a typeface like Source Sans Pro for a one like Merriweather, when they differ in metric size by about 6%.\nThis impacts the effectiveness of a page layout. The work that visual designers do to calibrate the perceptual hierarchy and readability of a page is absolutely affected by a 6% change.\nI think it's important that we work to create a system where our guidance is reliable, and where teams can make appropriate typeface decisions without needing to consider whether their chosen face will break our components. Adding new faces into the system and providing a method by which those faces can be used consistently and well in the system is an important way to demonstrate that we're working toward a practical solution.\n. Fixed in another branch \u2014\u00a0hopefully ready for merge soon.. Addressed in https://github.com/uswds/uswds/pull/2422. I think I have this fixed in another branch, but I will check.. Addressed in https://github.com/uswds/uswds/pull/2422. I've got this one implemented and coming up!. Currently implemented in https://github.com/uswds/uswds/pull/2422 if you want to take it for a spin.. I think I have this fixed in another branch \u2014 the new value should be ~1024px. But let me check, maybe the rem calculations are off.... So, I think what's up with this is that the rem calculation is dependent on the $theme-root-font-size variable in _settings.scss. This var is set to 16px by default. \nThis differs from the current USWDS root of 10px. To prevent any unintentional ill effects, the existing USWDS is still tied to 10px but all the utilities are defined by the $theme-root-font-size var.\nAs we get closer to integration, we'll rebuild our existing components with new tools and vars to access a common root font size value (and do all the rem calcs automatically, instead of with a hardcode). When we do this, it will allow any user to install USWDS on any system, regardless of a pre-existing root font size.\nUSWDS would probably want to declare html { font-size: $theme-root-font-size; } or whatever as well, but I think our path is clear when we integrate utilities and components.\nFor now, though, change the value of $theme-root-font-size in your project settings and you should get the expected 1024px calc (102.4rem).\nWe can also just change the default to 10px! It shouldn't make any effect on the look and feel of the output (as long as the root is actually set to 10px in the markup).. Update: I've tested this, and yes, it works as outlined above.. Well I am a user and I am saying that the UX is not so hot.. I do think that burying the lede in a six-word sentence is pithy, but a little more pithy than realistic. . So, the banner is not required, but probably helpful. I think many folks probably get the .gov part, but probably not the https part. All of it is something of a kludge for something more reliable \u2014 like something built into the browser that communicates the same message [like where it currently has a little lock and some text like 'secure'].\nThat said, I think you could get away with A United States government website and it would be an improvement. \nThis ain't The official snack chip of Major League Baseball or somesuch. Official has a whiff of security theater razzle-dazzle and hand-waveyness. The copy equivalent of one of those graphic design rubber-stamp things that says \"VALID\" at a 20\u00b0 angle.\nWhen you look at the site, you ask yourself \"Is this a government website?\" not \"Is this an official website of the United States government?\" \u2014 which sounds more like it belongs on a commemorative coin.\nThat said, I am a radical, and I don't really think the flag is the right thing to put up there either.. :fire:. Or This is a United States government website since that leading A United has an awk feel.. Think we're going to close for now, since the solution I'm proposing changes the markup and we're trying to avoid big, unnecessary markup changes in the 2.0 release.. That is true, but I don't think that's the end of the story on that text.. Hm! Per this article the em-based mq is based on the user's browser settings and has nothing to do with the markup!?!\nhttp://blog.w3conversions.com/2015/03/all-your-base-are-belong-to-us-%E2%80%94-or-what-base-size-do-em-based-media-queries-use/\nSo, let's not do that.. px4eva. Conversely, we could just set our own base font size to 16px/100% (which we should do regardless) and use an em base for the mqs. But it still feels odd to base your mqs off a value that may have no relationship to the layout. @hursey013 That makes sense to me \u2014 I was initially inclined to hew to the way you'd write the css (from 0-1) but clearly we're not heading down the path of 100% parity with css. I agree that opacity-100 feels way more sensical and immediately understandable. I'll make the change.. @hursey I made a couple additional changes to stringify 1px and 2pxvalues across the board in maps \u2014 and to adjust a quoting/stringify function to stringify and quote 1px and 2px values.\nHas some hacky vibes, but is pretty straightforward, I think.. @hursey013 oops, wrong username above. This now makes me want to change the size utility to font \u2014 since this is what that utility does \u2014 set both font-family and size.\nBut in component CSS, we probably don't want to always be setting both \u2014 that'd be a lot of redundant font-family \u2014 which is why there are these three mixins available.. Better, more consistent:\n- Utility for both family and size is font (i.e. font-sans-sm)\n- Utility for family is font-family(i.e. font-family-sans \u2014 rare)\n- Mixin for both family and size is font()\n- Mixin for family is font-family()\n- Mixin for font-size is font-size(). Lemme try this out \u2014\u00a0it's frustrating since I thought I'd tried this very thing, but maybe I didn't actually update to the latest package.... Closed in favor of #2614 . Oof. I feel like there's some real ambiguity in that guidance spec. Can't say it makes much sense from a semantic perspective to favor section > header > header over header > section > header \u2014 I don't see from the spec how conforming markup could have an unsectioned header within another parent header. \ud83d\ude15 \nAnd I can't seem to make the validator throw the expected errors with either the first solution or the existing code. \ud83e\udd37\u200d\u2640\ufe0f . [EDITED] Commented in the wrong PR :(. @fpigeonjr That sounds promising. Thanks for contributing to USWDS. Unfortunately, this issue is not on our current product roadmap.. OK \u2014 this is working in the docs site branch now, so I'm going to take it out of WIP.\nhttps://federalist-proxy.app.cloud.gov/preview/uswds/uswds-site/dw-componentize-docs/utilities/. OK, think I got 'em this time. Thanks for contributing to USWDS. Unfortunately, this issue is not on our current product roadmap.. Thanks for contributing to USWDS. Unfortunately, this issue is not on our current product roadmap.. Thanks for contributing to USWDS. Unfortunately, this issue is not on our current product roadmap.. Thanks for contributing to USWDS. Unfortunately, this issue is not on our current product roadmap.. Closing in favor of https://github.com/uswds/uswds-site/issues/641. This is done!. - This all looks great and right-on to me\n- The order and most of the names feel great\n- I think I like Documentation over Getting Started. (Mostly cos you may refer to this section multiple times over the course of a project.)\n- Getting started could be its own little section (or checklist) within Documentation\n- Yes, keep Components, Utilities, Style, Page templates in a flat hierarchy\n- I don't think documentation needs to be a single page \u2014\u00a0it's probably better suited to the multipage format we use for the other sections\n- I prefer the sidebar to the megamenu\n- I like the grouping subheds in the side menu \u2014 that's maybe something to think about\n- Community could be a good top-level item if and when we have more info for that section\n- What's new should be a subsection of Documentation . Yup \u2014\u00a0thanks for the reminder on this! That's just the way it should work I think.. Containers are not required for grid items. Currently if you want a full-width grid-row, its parent element would simply have no grid-container \u2014 would it be helpful to have a grid-container-full class to explicitly set the container to full width?. This will take me a little while to look through, but first thoughts:\nI wonder if it's worth being explicit about scoping components? That is, if one of our goals is to flatten our styles, does it make sense to explicitly name components that use nested scope with something like usa-content-scope to really emphasize that using this component will affect the elements within it? \nSo then a content area might use .usa-content.usa-content-scope to have a content area that sets a max width and maybe also a base font and size (usa-content) and one that specifically formats a suite of elements within that scope (usa-content-scope) \u2014 and/or a feature flag in the settings that activates the scoped styles for all usa-content components. I kinda like the both approach \u2014 to have a -scoped variant and a flag that activates the scoped styles to the default variant (perhaps set to true as the default). This could allow us to have more flexibility going forward and maintain some backward compatibility with current functionality.. I could definitely see some kind of default link style. Have to see what the effect on p would be.... But yeah, I think trying the gov.uk approach makes sense. My first comment is an attempt to be less ambiguous and try to address the following bullets:\n\nWhat's the relationship between this and usa-content which sets a max-width?\nBest name for the scoping class: usa-prose, usa-content?\n\nSo, what is the relationship between the existing component (usa-content) and the hook for the suite of scoped styles?\nCase 1: They are the same\n- What should the name be?\n- What is the technique for enabling or disabling the scoped styles associated with the component?\nCase 2: They are different\n- What should the names be?\n- What distinguishes the components?\nMy proposal argues for enabling Case 1 but that Case 2 is valid and could be controlled with settings:\n- There are two classes, one for nonscoped content styles (usa-content) and one for scoped content styles that is explicit in its naming that it's for scoping and thus may cause specificity issues (usa-content-scope)\n- There is a flag/setting for applying the scoped content styles to usa-content directly for those who always want usa-content to apply the scoped styles. This could be active by default \u2014 subject to feedback.\n- There are valid use cases of usa-content that want the scoped styles only in some instances \u2014 in which case you would deactivate the above flag and use both usa-content and usa-content-scope on an element that needs both\n- This is distinct from the global scope styling that we could set on a and possibly also p, which could also be disabled in settings\nSo what this means: Essentially, do what you've been doing, but add a new style (called something like usa-content-scope that has the scoped element styling. This potentially has the benefit of using class-based techniques to enable functionality that could previously only be activated with compiling from source, which we know is occasionally not possible.. I also think we may as well also add usa-link if only for completeness. @maya are you able to resolve the merge conflict? Otherwise this is probably good to go!. It's definitely dramatic \u2014 for better or for worse, it totally captures your attention, perhaps overshadowing the links(?). I think it works, but it gives the header a very different feel \u2014 more practical I'd say. Let's go for it.. I put a little \"real\" fake content in to get a better sense of how you might scan and read it. It's different, but successful.\n\n. 1) I think this is OK as is [and it's already merged :) ]\n2) Buuuut.... you could use something like new grid to do something like...\n```scss\n[role=search] {\n  @include grid-row;\n  @include u-flex(justify-end);\n}\n.usa-search-small [type=search] {\n  max-width: $search-min-width;\n  @include grid-col;\n}\n.usa-search-small [type=submit] {\n  @include grid-col(auto);\n}\n```\nThen there's no calc-ing required.. This is what we do in the banner, so let's go ahead and do it here, too. Down caret indicates openable, up caret indicates closable. Yeah, any numeric value should still work on units() \u2014 like units(1) or units(.5). Never mind \u2014 this isn't the equivalent of a line break, it's just a simple join. Could be useful for code readability, but not critical.. I'm not convinced we want to do this, since our global palette items are essentially constants but I wouldn't want to snakerize them.. I've done some work on this based on our earlier discussion (https://github.com/uswds/uswds/pull/2626) \u2014 though many of the functions and mixins could use another set of eyes.. You're right \u2014\u00a0we haven't gotten to this yet. Hoping to address variable usage this sprint.. This work is scheduled for the current sprint. Oy. Jeez. I wonder what the heck that was all about. \ud83d\ude2c \nCan't even remember what stupid event led to this.\n@el-mapache Lemme know if we should meet to sort this out.\n. Testing this now.... For now we will not implement aspect value as its calculation (x-height / total height) is different enough from our mostly cap-height-in-relation-to-total-height value that I'm not sure it'll result in the desired effect. However, as font-size-adjust gains in browser share, we should look into a way to implement it that's in sync with our implementation of font normalization. Nevermind \u2014 I guess is supported by, like, 0 browsers.. Looks like support for this is not so hot.. I see this PR is touching more than I bargained for. Changing the vars means..... well, lots of things changed. Please hold.. OK, left the old var names as is for now to help scope this PR. . Closing in favor of #2668 . From @maya in the old PR:\n\nThe old grid on desktop had a width of 1040px with 30px margins on each side making the content width 980px. On mobile, the margins are 15px. This is how all the other components are built on the site.\nThis new grid has a width of 1024px with 32px margins making the content 960px. On mobile the margins are also 32px.\nThis will make it look disjointed from the other components unless it's all done together. Was this the intention?. So, elements that were once 1040px would change to 1024px (desktop) in the new tokens.\nThe mobile margin would change to 4 units (32px) and the mobile to 2 units (16px).\n\nThat's the way this should be built rn. If the mobile margin is showing as 4u and not 2u, that's a problem. But outside that discrepancy, this component will necessarily be out of sync with the others until all components are updated to new tokens.. That said, 1024px is not a hard and fast number for desktop \u2014 1040px could potentially work as well.. OK, fixed that line height mistake. @maya you're probably most qualified to evaluate this. FWIW, all comments \u2014 with the exception of /*! important comments */ \u2014 are currently stripped from the compiled css. It is somewhat based on that epic, largely triggered by thinking about docs and the way we communicate the relative size of things. It's also related to https://github.com/uswds/uswds/issues/1469 and the problems I previously had with https://github.com/uswds/uswds/pull/2524\nBut after thinking it through, it seemed like we were in a good position to do this now, and come up to speed on this accessibility best practice.. I added the new vars into uswds-site/v2 to prevent breakage when this is merged. \nWe'll delete the old vars from site's settings once this is merged.. Well look at that \u2014 I'd already done this.. Added in https://github.com/uswds/uswds/pull/2919. So, I really complexed up this PR and managed to break the Circle build as well \ud83c\udf89. Unfortunately, I seem to be completely unable to parse Circle errors these days and I can't tell what broke.\nBut what the heck did I do?\nThe process of commenting the color() function raised a number of issues:\n\nColor vars had a different naming scheme from the rest of the style vars. They didn't use the $color- prefix, like $units- and $scale- vars.\nThe color functions were configured to accept any hex and rgb(a) color because the color mixins accepted color vars like $red-50 that, themselves, output as hex/rgb(a). They should probably only accept system/theme color values.\nExisting $uswds- prefixing of token vars was inconsistent with the system designation we're giving these values in the documentation.\n\nSo, how did I address these:\n\nI commented and cleaned up the color() fn\nI commented and cleaned up get-system-color() fn\nI used system instead of uswds for the system var prefix\nI used $color- as a color var prefix\nI used utility shortcodes (text strings) instead of variables (hex, rgb) in color functions. Now the color fns check for a string match with shortcodes instead of just passing a hex/rgb color through\nI disallowed the use of  \"basic colors\" (single-named system colors, like red or orange) in color functions because they are inappropriate for component Sass.\n\nI still have some more work to do to make all the color functions and mixins work properly. That work is coming soon. I'm sorry that this muddied up what was previously a nice, light PR!\n. @el-mapache I temporarily changed all the theme color vars to have a $color-theme prefix to prevent collision with the old vars. This fixes our test errors. I'll do a more permanent fix (using 2.0 color functions in our components) in a subsequent PR.\nI also tried to do a better job commenting the get-system-color() fn to better explain the reasoning and potential TODO fixes.\nI think we can consider the PR complete at this point. Thanks for your help shepherding it through.. This will break uswds-site until https://github.com/uswds/uswds-site/pull/629 is merged. \n. \n. Maybe not in scope here, but should %usa-paragraph have default measure applied?  And possibly(??) also get body font family applied?. Aight, let's merge and move onward.. Sorry, I've been in a bit of a hole \u2014\u00a0looking at this now. All these rules seem good \u2014\u00a0maybe with the exception of block-closing-brace-newline-after. I'm happy to follow it, but it's the difference between\nsass\n  @if map-has-key($our-breakpoints, $quoted-bp){\n    @if $theme-respect-user-font-size {\n      $bp: rem-to-user-em(map-get($our-breakpoints, $quoted-bp));\n    } @else {\n      $bp: rem-to-px(map-get($our-breakpoints, $quoted-bp));\n    }\n  } \nand\nsass\n  @if map-has-key($our-breakpoints, $quoted-bp){\n    @if $theme-respect-user-font-size {\n      $bp: rem-to-user-em(map-get($our-breakpoints, $quoted-bp));\n    } \n    @else {\n      $bp: rem-to-px(map-get($our-breakpoints, $quoted-bp));\n    }\n  }\nIt's a bit de gustibus though I'd agree that the second one is a bit easier to read, if a little loose.. Actually, it should use 0, not auto. Same with minw.\nhttps://www.w3schools.com/cssref/pr_dim_min-height.asp. Currently blocked by https://github.com/uswds/uswds/pull/2687\nI don't want to try to implement this until I know where these files will live.. I'm deciding against this in favor of better documentation. The simpler vars tend to be more readable and useful. Requiring use of a map-get() for accessing these values can become confusing and tedious.. Drat. Sourcemaps still seems a kinda messed up.... Drat. Sourcemaps still seems kinda messed up.... I'd consider it ready for review \u2014 the sourcemaps work 90% of the time and that's good enough for me rn. oh huh! maybe?! it makes sense. Having second thoughts about this line of work. Vars can still be very useful and too many map-get()s feels cumbersome. I like the work here around the color fns, so I may try to keep that and revert much of the map stuff.... Fixed \u2014 I think. u-text('white') should work as well, but i see that it is not currently working. I'll try and fix that. https://github.com/uswds/uswds/pull/2718 addresses the problem with u-text('white').\nI think either is acceptable, but I'd probably prefer the u-text() mixin because it's consistent with the text-[color] utility.\nShould we keep both mixins, though?\n. The nice thing about the u-text() mixin is that it can accept multiple arguments, like u-text('white', bold, underline, right) \u2014 I don't feel strongly that we need to cut the u-color() though.\nBut I will say that I agree that we should keep them in alpha order!. OK! Cut and print! Thanks for working through all the back-and-forth on this. Aaand it turns out we did already have all these anyway. Turns out the only one I had to add was font-family().\nI also made succinct clones of each hyphenated function since it's simple and maybe helpful:\n| verbose | succinct\n|---|---\n|line-height() | lh()\n|font-weight() | fw()\n| font-family() | ff()\n| letter-spacing() | ls()\n|z-index() | z()\n. Resolved by https://github.com/uswds/uswds/pull/2725. I think I'm going to need us to pause on this component (and perhaps most other components) until I get through typography and I can make a better suggestion about how to consistently style text.. If you didn't want to change the markup, you could try adding the following after https://github.com/uswds/uswds/pull/2731 is merged. I think it would work...\nsass\n.usa-hero-callout h2 {\n  @include typeset-h2;\n}. Yeah, I agree with that. Dunno \u2014\u00a0something like the following gets us pretty close?\n```sass\n.usa-hero {\n  .usa-button {\n    margin: 0;\n  } \n\n\n\n.usa-button {\n    margin-top: units(2);\n  }\n}\n```. Looking at this one now.. OK, made a couple changes of my own. (Sorry @maya I didn't realize you were actively working on this when I started.) The most significant:\n\n\n\nremoved grid-row and grid-gap from markup since they didn't seem to be doing anything?\n\nadded explicit usa-hero-content section to enclose the p(s) \u2014 this should allow more flexible spacing control\nremoved section-dark from the component, as it wasn't really supporting it well\ntweaked the theme.scale.xl size and system.line-height.2 line height to improve appearance . Checking this out now. @maya Reverted range slider to something closer to the original. Ah crap, I broke something. Oh good, I fixed something. With red-50 and green-40v these are the colorblind variations I see with https://github.com/LeonardoCardoso/Colorblinding\n\nDoes this look ok?\n\n. OK, updated the error state colors. I don't know if I can strip individual threads of work out of this PR \u2014 but I'm happy to flag/revert anything that looks suspicious or unusual. Yeah, sorry for the bigness of this \u2014 this is a component that touches everything. @maya any other fixes on this one?. I would say yes: use the v2 syntax and var \u2014 I think the older way was a kludge. I don't seem to be seeing a grid gap here. (see the two sections on the bottom row.)\n\n. When there is a gap between sections, should that gap be larger than the gap between the image and its text?. > Should the default layout grid grid-gap be lg above tablet instead of desktop? This will give the component a larger padding at smaller sizes and more consistent with grid-container breakpoints.\nCould be. Seems reasonable.\n\nNot sure which gap you're referring to, feel free to add an image to show what you mean. But the spacing looks pretty balanced to me.\n\nI'd make the gap between the circle and the text 3 units instead of 4, so it's slightly narrower than the gap between the columns of media blocks. Like a gestalt grouping principle to keep like items closer together. It's minor, though!\n. lgtm. Bumped the disabled button bgs up a grade. Yeah, I didn't know \u2014 their deprecation was news to me!. Cut 200 lines from footer.scss \ud83d\ude2c . What do you all think about underline-on-hover? Previously there was no underline at all, but I added it back to hover for clarity.. Current no-underline scope:\nsass\n.usa-footer-primary-link a,\n.usa-footer-secondary-link a\nDoes that seem sufficient?. Fixed the hover underline. You will still see it (erroneously) at some points just wider than mobile-lg because there's still a .hidden class applied. This will go away when we fix the js to stop applying  hidden at the appropriate (mobile-lg) breakpoint width.. That's probably the right fix rn, but it brings up a larger Q about using these values in js \u2014 since the explicit px value won't work properly with the em-based mqs triggered by $respect-user-font-settings \u2014 but this is not something to figure out in this PR. Fixed js and removed the css kludge. I think it's something with that show password text \u2014 can fix. It doesn't bother me, but I could probably give it 2px \u2014 something where the resulting space is a little less than that between the label and the input. Added in https://github.com/uswds/uswds/pull/2919. Gonna merge this \u2014 though there may be some further adjustments as I work through the nav component. ahh, thanks\n. It should probably just go down to the line.. Yeah, long titles work now \u2014 they maybe could stand some improvement in the future, but the basic support is there. I thought the full-bleed treatment for the nav indicator was making it harder to read and look more like a mistake. (You can imagine if the section below had the same color background...) And while I do think the full bleed looks modestly better where there is no color-fill section below, it's probably not worth loss of clarity. To follow on to the indicator bar/line discussion \u2014 I'm beginning to think that the bottom border isn't even necessary or helpful on the basic header. \nOne unit of bottom padding seems to be cleaner and just as effective.\n\n\n. The extended nav could be tidied and made more legible by removing the line (at least with the hero) and increasing the size of the links:\n\n. But all this is probably a discussion for another day!. The bold nav links aren't really doing us any favors.... > I thought it looked fine with font smoothing, SSP without it looks a bit heavy. But understand that's an issue for other fonts. Can we add font smoothing just for SSP headers?\nMaybe that's an issue to file \u2014 I'm not inclined to make face-by-face smoothing exceptions, but worth considering.. I'm not including any of these border/padding things in this PR. Another time. \nBut I also think that biggest contributor to lost/floaty feeling is the generic placeholder copy. When the copy doesn't demand to be read, it occupies less \"attention space\" and the page loses dynamism.. Lines are all back. I consider this done, pending further review notes. This was implemented for colors in https://github.com/uswds/uswds/pull/2756\nAny additional work can be in a new issue. Interesting \u2014\u00a0I'm game to make it smaller. @maya what do you think?. @el-mapache Can you handle the merge conflicts here?. OK, everything should be in \u2014\u00a0sorry for the mixup. Just a heads up: this merged into dw-nav-v2 so we won't see these changes in the main release branch until dw-nav-v2 is done and merged. Fixed in #2878. Ah geez, once again I wasn't paying attention and didn't notice your WIP PR. And yeah \u2014\u00a0many many vars will go away.. And yes, let's close #2752 in favor of this. I hesitate to call it smoothing, exactly, but I agree that the reversed text here is far more legible with subpixel rendering disabled. At least on a nice retina Mac!  It could be nice to see some examples of renders on a non-Mac, but on the face of it, this seems like a reasonable request.. This could also apply to nav menus, tags, graphic list. I wonder if there's a good way to automate this in Sass \u2014 that is, to make font rendering mode dependent on reversed (white, etc) text?. Yeah, that does look too light \u2014\u00a0I think this also applies to the non-bold links in dropdown menus as well. Perhaps it's best to scope this only to buttons and active nav items \u2014 it can make things look a little unbalanced where there's a mix of subpixel-smoothed text and antialiased text in a block.. I was actually just looking at this. It comes from the right rule in usa-form-group-error. If that class uses a negative left margin instead, it should work as expected.\nHowever, using either technique, the indicator has too much outset on mobile screens and is placed offscreen.. form-group-error would also need a width: auto;. Also, the thicker border in combination with the fixed height and box-sizing: border-box results in a smaller-looking field \u2014 should we consider changing the box-sizing model in these cases? Or use a different technique to highlight?\nRemoving the offset could have other consequences. (Maybe not.) We could at least reduce the offset on mobile.. Could be a simple solution. Does it have any implications for small/grouped form fields?. I think we should use the offset at desktop as we currently do, but inset at mobile. A different kind of solution \u2014 not for now, but to keep in mind \u2014 could use use a thicker rule for all form inputs so when one is highlighted, either with a state or with a focus, the border could take a state color but it wouldn't affect the perceived size of the input.\n\n. Can we just make the height 5 units and remove all those calculations?. Trying this out locally.... I think i'd prefer it if we just set the height as 5 units. Would that cause cross-browser problems?. @maya can you check my last changes? if they look good to you, I can approve.. I don't know what that comment means either. It wasn't my comment. Does it mean we were planning to deprecate the disabled class in favor of a non\u2013class based disabled state?. @maya Do you see any reason to deprecate the class-based disabled button?. OK, let's remove the comment and let the current code stand. Is what they were going for something like the idea that our buttons should only use the disabled attribute [link] and selector [link]? Is that something we should do?\nAs for the name of the mixin \u2014 I think button-disabled is clearer than the current name.. So, just to summarize: \n- For now, we are not deprecating the *-disabled classed buttons. \n- We'll retain the pointer-events: none rule in button-disabled() to support the class-based disabled button\n- We'll continue to support both -disabled and :disabled markup/styling for buttons\nDoes that sound right?. One last thing: is the stylelint-disable still necessary with the current code?. In general, this is because the sidenav and the top nav share the nav list mixin (nav-list()) \u2014\u00a0but I could use & statements in the mixin to pick up a parent class...\n```sass\n@mixin nav-list {\n  &-item {\n    rules...\n  }\n}\n.usa-sidenav {\n  @include nav-list;\n  ...\n}\n``. OK,-items will now be prefixed with their parent class \u2014\u00a0and the mixin is updated to target those new classes. My first-ever use of& &in a rule!.3does look the best to me as well. Is there any modification we should make tousa-hero-content? \nShould the amount of corner rounding be a hero setting?. I would love to move to a paradigm where js-controlled classes are very clear \u2014 something like prefixed withis-`. Reason 1 seems like a good reason to keep the existing classes for now, though.\nAnd, FWIW, controlling button hover state display via js seems like a real edge case, too!. I'd probably try to replace the Bourbon in uswds-site asap instead of re-adding it temporarily. Probably mostly padding and margin mixins to replace, I'd imagine. I'm conflicted about this first point, as the An official website... line is a fragment, which would not normally take a period. But since it is directly followed by an actionable item, it could make sense.\nI think we can address the underlining, though. Thanks for catching this.. Yeah, there's no extra space, but because the underlining is applied to the parent button and not the span it shows slightly more space on the right than it should. If we apply the underline to the span, it looks a little cleaner.. I was going to suggest reducing the spacing to 2px, but you'd done it already!. Looks like it's all up-to-date with release-2.0 now. And yup, I'm working on getting this into site, too. I'll put a PR together after this is all merged.. Not sure if any! But I noticed that there were a couple manual adjustments to the utilities settings when I was updating uswds-site and it raised a red flag that we were using them somewhere. Fixed with #2823 . We could move to something like 3ch here. We'll need to test and see if the current grades support any reliable AAA contrast \u2014 since the grades are based on relative luminance, it's very possible that they do. Excellent \u2014 that squares with what I was just about to write :). @vizionsinmotion Thanks for reaching out to us via email and for prompting this issue. I was wondering if there were any relevant links or research you could point us to around Irlen Syndrome and light sensitivity that we could use to inform our guidance?. @vizionsinmotion Thank you, this is very helpful. I'm going to update our guidance shortly and I'll tag you in the pull request so you can look at the proposed changes. It's somewhat ironic (I guess) that the Irlen syndrome website features pure black text on a pure white background, but such is life. \ud83e\udd37\u200d\u2640\ufe0f . Fixed in https://github.com/uswds/uswds-site/pull/664. I think if we just move the heading sibling rules after the graf sibling rules, it'll fix this.. Hm! \ud83e\udd14 Let me take a look at that. Are the bullets just in the mobile menu or do they appear in any other menu or unexpected location?. Unfortunately, I'm not able to easily troubleshoot Edge. Can you inspect this and let me know if there's something that looks amiss: particularly in list-style-type being attached to the wrong element or something like that?. usa-nav-primary should have the following styles:\ncss\n@media screen and (max-width: 1023px)\n.usa-nav-primary {\n    -ms-flex-order: 2;\n    -webkit-box-ordinal-group: 3;\n    list-style-type: none;\n    margin-bottom: 0;\n    margin-top: 2.4rem;\n    order: 2;\n    padding-left: 0;\nI wonder if it's not working for some reason, or if it's being overridden in some way.. Whoa. Thank you for tracking that down!\n. Awesome \u2014\u00a0and thanks. Fix is already underway for that accordion issue :). Yes, in general we are moving to a classing model where variant classes are additive to the base class. As in usa-button usa-button-outline and usa-accordion usa-accordion-bordered. Edge bug, but yes :) \ud83d\udc4b . Fixed in https://github.com/uswds/uswds-site/pull/689. May as well \u2014\u00a0there are still a lot of improvements to make to the repo, but there's no reason to delay moving the repo because of them. Done. https://github.com/uswds/public-sans. @maya @el-mapache What's the best way to do this?. haha I guess I thought mem was a subdependency :). For reference, according to Snyk, this is an issue with yargs which they are working to fix for 12.0.2 (we are on 8.something but I tried to update to 12.0.1 and that worked without issue): https://github.com/yargs/yargs/issues/1209. Fixed in https://github.com/uswds/uswds/pull/2842. Is there any way to check and see if this change had the desired effect?. Fixed in https://github.com/uswds/uswds/pull/2824. Fixed in https://github.com/uswds/uswds/pull/2828. Closed in #2826 . Added to develop in https://github.com/uswds/uswds/pull/2831. I'm going to start taking a look at this soon. I just want to make sure if it's something we add to 1.x that it's also something we incorporate into 2.0. It also reminds me that print stylesheets, in general, are a topic area we should address more fully in coming months.. Also, dunno if you're using it, but this is a useful way to force a print render mode in the Chrome inspector: https://stackoverflow.com/questions/9540990/using-chromes-element-inspector-in-print-preview-mode\nIt was new to me!. Thanks @David-Way \u2014 I'll publish a new 1.x release with this, and incorporate it into 2.0 as well.\nFYI, I'm merging this into a different branch, just to finish some internal testing before this makes its way into production.. Fixed in https://github.com/uswds/uswds/pull/2823 \nand https://github.com/uswds/uswds-site/pull/665. Done in https://github.com/uswds/uswds/pull/2850. Fixed in https://github.com/uswds/uswds/pull/2829. Can you tell me a bit more about how to reproduce this? I see the proper button variations on https://v2.designsystem.digital.gov/components/buttons/. Oof. Buttons shouldn't have a :visited style. I'll get on that.. OK, I've got a fix here if you want to check it out: https://github.com/uswds/uswds/pull/2827. Updated!. @stphnwlkr Does the updated solution in #2827 work for you?. Fixed in https://github.com/uswds/uswds/pull/2827/. Also for radio buttons: https://github.com/uswds/uswds/pull/2857\n. Checkbox print styles are already in.\nRadio print styles are included in https://github.com/uswds/uswds/pull/2950. Closed in favor of #2887 . Fixed in https://github.com/uswds/uswds/pull/2830. Fixed in https://github.com/uswds/uswds/pull/2828. Updated to remove the :not() rule since it was adding too much specificity. I went back and just focussed on the usa-button styles. . @saracope Tagging you in on this one for review!. Added to the wrong repo. See https://github.com/uswds/uswds-site/issues/669. Fixed in https://github.com/uswds/uswds-site/pull/694. Added to wrong repo. See https://github.com/uswds/uswds-site/issues/668. Hey all \u2014 thanks for checking in and getting started with USWDS 2.0. I really appreciate your time and interest!\nToday we released USWDS 2.0.0 Beta 2. If you haven't already done so, try to install USWDS 2.0 on a new or existing project \u2014 or re-install with the new Beta 2 \u2014 and let me know here in the thread or in a new issue when you find problems, instructions that are incorrect or confusing, or anything else you find.\nI've somewhat purposefully tried to be pretty vague here about how to install USWDS 2.0! But anything you find that's vague or incorrect on our site or in the docs is not on purpose.\nI'll be adding you all to a Week 2 issue today as well, to dig a little deeper.\n. Arg. Thanks for letting me know. I updated the release .zip package.. Fixed in https://github.com/uswds/uswds/pull/2844. Already up to date!. We're not going to do this. The example grunt is probably going to go away at some point.. This is now merged and will go out in the next 1.x patch release. Thanks @arch-lord \u2014 I think I probably know what's going on, but I'd love to have you take a swing at this \u2014 if only to approach the issue with fresh eyes.. OK, I was having trouble reproducing this and can now clarify that the issue seems to be that the mixin is not accepting the string equivalent units values like '05'. The numeric values like 0.5 are OK.. For now, we will add an 'icon' font family token, but will not add the typeface to the USWDS font definitions until we better understand how it's being used.. Added in https://github.com/uswds/uswds/pull/2919. OK \u2014 I'm getting started on this issue now, and I could see the need for a custom stack (or to reassign a face to an existing stack).\nAs far as custom fonts go \u2014 there is a way to do this and the system is designed to accommodate custom fonts. Using USWDS with Gatsby and PostCSS should be a great combo and I want to make sure it works as well as I'd hope it would.\n_uswds-theme-typography.scss is the primary settings file for type-related settings. Per the comments in that file, USWDS already has the following faces defined:\n'georgia'\n'helvetica'\n'merriweather'\n'open-sans'\n'public-sans'\n'roboto-mono'\n'source-sans-pro'\n'system'\n'tahoma'\n'verdana'\nYou could use any of these font tokens as the values for the Fonts in use variables. These are the current defaults:\n$theme-font-mono:   'roboto-mono';\n$theme-font-sans:   'source-sans-pro';\n$theme-font-serif:  'merriweather';\n$theme-font-cond:   false;\nBut you could change the values to anything from the supported list, like:\n$theme-font-mono:   'roboto-mono';\n$theme-font-sans:   'open-sans';\n$theme-font-serif:  'georgia';\n$theme-font-cond:   false;\nNow \u2014 say you have a custom face you want to use with USWDS. This is where the $theme-font-definitions map comes into play. You would create a new custom font for the system by uncommenting and entering its data into the $theme-font-definitions map. For example, I'll create a custom font map for a font called Example Sans whose font files live in /fonts/custom/example-sans/\nIn _uswds-theme-general:\n$theme-font-path:   '../fonts';\nIn _uswds-theme-typography:\n$theme-font-definitions: (\n  example-sans: (\n    name: 'Example Sans',\n    dir: 'custom/example-sans', \n    stack: $font-stack-system,\n    system-font: false,\n    cap-height: '372px', // height of a 500px `N` in Sketch\n    variable-font: false,\n    generate: true,\n    roman: (\n      100: false\n      200: false\n      300: false\n      400: 'ExampleSans-Normal',\n      500: false\n      600: 'ExampleSans-Bold',\n      700: false\n      800: false\n      900: false\n    ),\n    italic: (\n      100: false\n      200: false\n      300: false\n      400: 'ExampleSans-Italic',\n      500: false\n      600: 'ExampleSans-BoldItalic',\n      700: false\n      800: false\n      900: false\n    ),\n  ),\n);\n(In typing this, I realize I have to make the font-stack options findable!)\nAnyhow, now you can use example-sans as a token passed to $theme-font-sans:\n$theme-font-sans:   'example-sans';\nAnd the system should now use your custom font anywhere it's instructed to use the sans font. You could use it in custom Sass as follows (per https://v2.designsystem.digital.gov/design-tokens/typesetting/overview/):\n```\n.my-card-heading {\n  @include u-font('sans', 'lg');\n}\nor \n.my-card-heading {\n  font-family: family('sans');\n  font-size: size('sans', 'lg');\n}\n```\nRight now, I'm going to work to make sure all the supported faces perform as intended (I see as I type all this out that there are issues...) and that there's documentation that's more clear as to how you do this somewhat complicated custom font stuff (at least as comments in the code).\n. Thanks for the update @jhogue. I'm going to give the whole process a serious scrubbing and hopefully when you come back to it it'll work as expected and have some better docs!. Custom stacks and better, more reliable custom font settings coming in https://github.com/uswds/uswds/pull/2919. I'm just going to check this with our existing components and see if it has any noticeable unintended effects.. Fixed in uswds/uswds#2867. This all checks out on uswds-site. No new errors.. Fixed in #2874 . Good catch \u2014 that'll be fixed by the next beta release.. As @stphnwlkr says, this is fixed in USWDS 2.0. \ud83c\udf4fChecked and confirmed working on uswds-site. Fixed in https://github.com/uswds/uswds/pull/2881. This is fixed in USWDS 2.0 with https://github.com/uswds/uswds/pull/2910.\nOnce the dust clears from 2.0, we can look into getting this into a 1.x release.. To me, this is around understanding \"modern component architecture\" from at least three perspectives:\n- markup\n- styling\n- javascript\nPerhaps you might also add 'data' to this list. Maybe other things?\nI feel most comfortable understanding the markup and styling perspectives, and generally how props and data might flow and pass into components. But I don't really have a good technical handle on the js side, and this keeps me from really understanding how they all work together and the current pain points.\nIn general, I think that abstraction, modularity, and isolation are concepts we want to encourage in system architecture, in the interest of upgrade path, resilience, and compositional flexibility. Work that we do in the service of these goals has the possibility to be very valuable to the long-term health of the project. So as far as I can tell there are a couple main themes here:\n\nUSWDS should focus on responsive component styling, basic JS, and accessibility \u2014 as well as best practice guidance around design.\nUSWDS JS should play well with modern frameworks like React and Vue\nWe should organize our project files in a way that makes it easy for downstream developers to build with them in their desired framework \u2014 and encourage them to do this.\n\nI do still consider the points I raised in the initial issue to be significant:\n\n\nIt makes it very difficult to upgrade components and keep them in sync with the most current version of the design system\n\n\nIt is hard to track component changes from version to version and keeping markup/styles in sync with the current version of USWDS is a real challenge. One thing we can do in the short term here is try to figure out how we can do a better job of documenting these changes on a component-by-component basis \u2014 and perhaps encourage development of extensible templates written with methodologies that allow the end user to stay in sync with less irritating effort. (See the next point, below.)\n\n\nIt offers no abstraction layer between the component and the rendered html \u2014 leaving the component rather brittle and difficult to maintain.\n\n\nI know that going from 1.x -> 2.0 is a pain in the neck. Going through and find/replacing class names is no way to run a website. Folks who build sites could and should do it in such a way that \"you get the markup for free\" \u2014 that is, implemented with some layer of abstraction where you're rarely dealing with adding classes as much as adding components and passing values into them. While we may not provide React, etc components, thinking about components as markup + data/props (and perhaps documenting them more like this) will be useful to us.\n\n\nIt offers no explicit, practical guidance around best-practice implementation of USWDS components.\n\n\nWe will have to work with the developer community to improve our guidance around implementation. There's a lot to parse just in this discussion. I would love to work together to get to a point where we can support things like React and Vue implementations and keep them fresh, extensible, and useful to the wider gov community (including USWDS itself \u2014 I see no reason why the USWDS site couldn't use something like a React implementation alongside Gatsby and Federalist for our own site). . Fair point @tbaxter-18f \u2014 I think we're doing an ok job with that now, and will try to do even better in the future. Good html markup is the foundation, overlaid with a consistent component class naming system. \nFWIW, starting with USWDS 2.0 we will be using BEM consistently throughout our class names. I know this doesn't explicitly address semantics, accessibility, etc \u2014 but it will impose some rigor and predictability on our component classing.\nWhile USWDS often seems to focus on the presentation layer, I do believe that accessible markup is  true core that makes presentational accessibility (usability, readability, beauty, etc) possible.. Fixed in https://github.com/uswds/uswds/pull/2917. Are you compiling your own css or using the precompiled version?. As far as I can tell, the precompiled css has the proper vendor prefixing, but if you are compiling your own CSS you'll need to use an autoprefixer as described here: https://v2.designsystem.digital.gov/documentation/developers/#sass-compilation-requirements. I can't yet reproduce this locally. I'm currently running npm 6.5.0 and node 8.11.2 \u2014 dunno if that makes any difference.... This is also related to https://github.com/gulpjs/gulp/issues/2246. So, at first blush a fix seems to be to use resemblejs@3.0.0 to fix the canvas-prebuilt error and add natives@1.1.6 to fix the use strict error. I still need to test this and I don't immediately know where resemblejs is used. Updating to gulp 4 would also fix the use strict error without the natives hack, but would take more work. . And here's a cool zsh script for automatically using the version of node in the .nvmrc: https://github.com/creationix/nvm#zsh. Fixed in https://github.com/uswds/uswds/pull/2900. @maya I guess I would prefer using the current LTS version in this case. Dose that introduce any new issues here?. Closed in favor of using current Node LTS (10.15.1) as implemented in https://github.com/uswds/uswds/pull/2900. Thanks for opening this issue!\nI will check, but  I think the state colors are disabled intentionally in the default set of utilities (see https://v2.designsystem.digital.gov/utilities/color/), but it might make sense to include them. If we continue not to include them by default, it should be as clear as possible in the docs how to activate them, as it's a pretty common use case.\nTo activate them, see the Custom values section of the color utility page's Advanced settings section (https://v2.designsystem.digital.gov/utilities/color/#advanced-settings). You'll need to add the state color palette in _project-utilities-settings.scss. Yes, I see that this is maybe a bit too buried in the docs, and perhaps a simpler bool could be added for this common action...\nTo add the state colors to all color-related utilities, change the value of the $global-color-palettes map to the following:\n$global-color-palettes: (\n  'palette-color-default',\n  'palette-color-state'\n); \nTo add the state colors to a specific utility, change the value of the $[utility]-palettes map to the following:\n```\n$[utility]-palettes: (\n  'palette-color-state'\n);\n// for example...\n$background-color-palettes: (\n  'palette-color-state'\n);\n`` . Nice!. Yeah. This is something we should do in USWDS 2.0.. Implemented for USWDS 2.0 here: https://github.com/uswds/uswds/pull/2901. Fixed in https://github.com/uswds/uswds/pull/2900. Fixed in https://github.com/uswds/uswds/pull/2900. Awesome \u2014 thank you for being so thorough. Excellent \u2014\u00a0this was on my list of things to do! I'll review asap.. Fixed in #2910 . Cool. It looks like the reverse text might print a little light, but it's probably an improvement from what it was doing before.. Good to remember that we shouldn't put any critical images in backgrounds since they won't print!. @saracope please hold on merging until we sort out some Federalist issues. @maya @hursey013 @uswds/core Do you have any opinions about this?. Mostly because I don't like underscores :)\nAnd, personally, I don't think the distinction between block and element is important enough to warrant the special treatment.. I'm game to consider BEM though I do currently consider it overkill. It'll take a little longer to fully rewrite everything in BEM and I'm not sure if it sets some expectation that our codebase may not always deliver! But the upside could be just as you say.. OK. BEM it is.. BEM implementation here: https://github.com/uswds/uswds/pull/2904. Set this up with the wrong base and triggered the wrong CI. Let's try again. OK, non-docs fixes and merge conflicts are done. Do you mean in the table? I think I was unclear \u2014 what I meant to be saying there was \"If you had this setting in Beta 5, use this new setting in Beta 6\". The default is$theme-global-content-styles: false`. Hm \u2014\u00a0I'm not seeing this in action here: https://federalist-proxy.app.cloud.gov/preview/uswds/uswds/dw-grid-important/components/preview/header--default.html\nAm I missing something?. Oooof. Poor tab management skills.. Nice work \u2014\u00a0sorry for the confusion.. I guess I was going for grammatical correctness over consistency \u2014 do you think it makes better sense with use?. OK, renamed. I have some thoughts about what we could do as a longer-term solution for this kind of problem that I'll roll up into another PR.. Yeah, this should be usa-link--external and also usa-link--alt \u2014 I just made this change.. Is there a way to get the version through google fonts? I'm not 100% sure anything has changed since our version, but I just figured I'd grab whatever was currently available.... Comparing Merriweather 2.001 to 1.003\nThe newer one is a bit different and a bit nicer.\n\n. I'd love to get it in now, with follow up from the creators/maintainers.. @miguelsousa Thanks! We'll pause this PR until we get your feedback. Please let us know what you find. The Source Sans files in this PR are those from https://github.com/adobe-fonts/source-sans-pro/releases/tag/2.045R-ro%2F1.095R-it \u2014 subsetted into Latin and and converted into woff, woff2, and eot by https://transfonter.org/\nI'd be curious to know if this is a proper workflow or does anything unexpected to the files. . As for why the new weights and styles are included: In general, it's to support a wider range of project needs.\nUSWDS 2.0 supports a broader range of weights, so it made sense to make those weights available in the distribution package. System users can now activate or deactivate weights depending on their project needs \u2014 and the system only builds the necessary @font-face rules based on these settings.. @miguelsousa That would be very helpful, thank you.\n. Also, now that I know that our version of Source Sans has small caps support, we should add that support into our text utilities.. I'm going to look at this one now. Removed that left margin. OK, looking at this now. Fixed the mobile left margin alignment, too.\n\n. Aw crap \u2014 I think I know what this is...\nI'm sure I can fix the comma, but does it still fail if the comma goes away?. Hm. OK. This issue is next on my list.. Should we update the others to match since usa-alert--no-icon does have an effect on them, just not the expected effect.\nOr, should we make it so --no-icon has no effect on the named alerts?. Fixed in #2959 . That sparkbox guide is really nice. \nI think we've implemented our own BEM consistent with that guidance, so I hope there are only a few instances where stuff is out of whack.. One known inconsistency is with usa-unstyled-list. Currently this is a standalone block instead of a modifier of usa-list (\u00e0 la usa-list.usa-list--unstyled). I believe this is for simplicity's sake. But there's a fair argument to be made that the benefits of simplicity are outweighed by the cognitive burden of the inconsistency.\n.usa-button-unstyled is the same (but different). If we leave them as standalone blocks, they should both have the same naming system (probably something like usa-unstyled-button -- that would be consistent with usa-unstyled-list and usa-dark-background which are named that way to prevent being confused as modifiers).. Of course, maybe usa-button-unstyled should just be regular BEM \u2014 usa-button--unstyled.\nI'm inclined to leave usa-dark-background as is since usa-background is currently meaningless.. @maya what do you think about .usa-button-unstyled and . usa-unstyled-list? \nI think I'd like to just go ahead and BEM them but I'm not 100%.. OK, working on unstyled lists and button here: https://github.com/uswds/uswds/issues/2956. Let's set aside an hour to talk these through.. | current | suggested | status\n| --- | --- | ---\n| .usa-button-unstyled | .usa-button.usa-button--unstyled | #2956\n| .usa-unstyled-list | .usa-list.usa-list--unstyled | #2956\n| .usa-input-error-message | .usa-form__error-message | \u2014\n| .usa-input-label-helper | .usa-form__helper | \u2014\n| .usa-input-label-required | .usa-form__label.usa-form__label--required | \u2014\n| .usa-media-link | dunno what this one is... | \u2014\n| .usa-social-link | keep as is | n/a\n| .usa-form-hint | .usa-form__hint | \u2014\n| .usa-input-list | .usa-form__input-list  | \u2014\n| .usa-fieldset | .usa-form__fieldset  | \u2014\n| .usa-content-list | remove | \u2014\n| .usa-font-lead | .usa-intro | \u2014\n| .usa-dark-background | keep as is | n/a\n| .usa-footer-* | ? | ?\n| .usa-nav-*| ? | ?\n| .usa-mobile-nav-active | leave as is? could be a js- class as it's applied to <body>  | \u2014\n| .usa-menu-btn | usa-button.usa-button--menu | \u2014\nShould form subcomponents be subcomponents of usa-form like .usa-form__input? They'll never really appear anywhere else... \n| current | suggested\n| --- | --- \n| .usa-checkbox\u00a0| .usa-form__checkbox\n| .usa-checkbox-input | .usa-form__checkbox-input\n| .usa-checkbox-label | .usa-form__checkbox-label\n| .usa-fieldset | .usa-form__fieldset\n| .usa-form-group | .usa-form__group\n| .usa-form-group--day | .usa-form__group--day\n| .usa-form-group--error | .usa-form__group--error\n| .usa-form-group--month | .usa-form__group--month\n| .usa-form-group--year | .usa-form__group--year\n| .usa-form-hint | .usa-form__hint\n| .usa-input | .usa-form__input\n| .usa-input--inline | .usa-form__input--inline\n| .usa-input--medium | .usa-form__input--medium\n| .usa-input--small | .usa-form__input--small\n| .usa-input--success | .usa-form__input--success\n| .usa-input--error | .usa-form__input--error\n| .usa-input-error-message | .usa-form__error-message\n| .usa-input__label-helper | .usa-form__helper\n| .usa-input__label-required | .usa-form__required\n| .usa-input-list | .usa-form__input-list\n| .usa-label | .usa-form__label\n| .usa-label--error | .usa-form__label--error\n| .usa-legend | .usa-form__legend\n| .usa-memorable-date | .usa-form__memorable-date\n| .usa-radio\u00a0 | .usa-form__radio\n| .usa-radio__input | .usa-form__radio-input\n| .usa-radio__label | .usa-form__radio-label\n| .usa-range | .usa-form__range\n| .usa-select | .usa-form__select\n| .usa-textarea | .usa-form__textarea. The form components don't need one, but it actually fixes some of the edge cases and makes it all seem more consistent.. I think the edge case are \n- .usa-input-error-message\n- .usa-input-label-helper\n- .usa-form-hint\n- usa-input-list\n. That sounds good to me \u2014\u00a0as long as we're writing the CSS well and keeping everything appropriately flat this'll work. I think we just want to make sure that  something like error-message wouldn't migrate somewhere else and need unique styling.\nThe ul in usa-input-list must've been there for some kind of specificity thing, let's see if it's still required.. As well as I understand it, BEM is a way of being explicit about dependencies in a way \u2014\u00a0and making sure that components are clear about how modular they are and where they can be used. A long as we follow that general guidance (that is, no unexpected contextual styling) I think we can feel good about our naming.. As for intro \u2014 the lead is not really a lead (or lede). It's more accurately a deck (dek) or an intro. The lead is the first paragraph of a piece, where the main idea is expressed (i.e. \"burying the lead\" by putting the big news reveal too far into the piece). And deck is so technical, it feels out of place. (This is mostly my understanding of the terms: https://underthecurve.github.io/jekyll/update/2016/12/29/hed-dek-led-graf.html). I remember that I did not change this one because it was so unusual \u2014 it didn't have the usa prefix and seemed like some kind of outlier. Is there a reason why this particular class is unprefixed?. Yeah, I think this confusion was why I left it out of the Beta 6 pass.\nI think I would like to add usa-radio to the <li>s to make the relationship more clear.. I think browser support isn't there yet, but I would love to start using these. I'll get refreshed on the current state of support tho. Public Sans could also support this without much work.. Starting with USWDS 2.0 we will be using a .nvmrc file supporting the current LTS version of Node (10.15.1): https://github.com/uswds/uswds/blob/release-2.0/.nvmrc. Hm, whuts this new Snyk thing? \ud83e\udd14 . Yeah, I should have a docs update by later today as part of a big docs/typesetting update. You're right \u2014 we should check for non-leading zeroes.. Yeah, I'll just add to uswds-site for now \u2014 and not planning to redraw right now. Just looking at a couple case-by-case things at the moment, but we could look at the fontawesome set again at some point and see if we want to make any changes.. Closing in favor of doing this work directly in uswds-site. @iris-i Thanks for pointing this out! I think this is a mistake we've already fixed and will update in the next release. Check out the new _inputs.scss here: https://github.com/uswds/uswds/blob/release-2.0/src/stylesheets/elements/_inputs.scss\nDoes that look better?. I remember when this happened, and I'm comfortable removing this function, but I still think the Bourbon deprecation is a mistake and writing in raw rem makes the system too dependent on its base size declaration (10px). That is, if the System has to play nice with an existing codebase that's already defined its base size, we're SOL. Adding our own function to replace the soon-to-be-deprecated Bourbon function would make the whole system more flexible. But perhaps this is an argument for another day!. I'll use $heading-line-height here. Forgot those existed.. will do. will do. Yes, let's leave this as it. I don't think the extra 3px do enough to justify deviation from the \"standard\" indent. I wasn't thinking of this as a user-modifiable var, just a placekeeping var to keep our math consistent on line 214. But maybe this is a useful var to expose. We could include it in the side navigation docs (since the primary nav seems not to have its own docs).\nWhat about $current-highlight-border-width as a var name?. good point. will do.. Websites?. websites?. They are effectively the same, since a roundness of 50% is all you need to get to the midpoint of the square. (I have checked this!). i like input-label-helper. are there distinct styles for helper text for the required text and other (non-required) helper text?. Hasn't been covered yet, but I consider this a topic for upcoming guidance. But also even in the absence of guidance, by starting to build a library of font definitions, we can begin to use the system's new ability to normalize font sizes \u2014\u00a0and be more simpler and more programmatic about building our @font-face rules. See my last commit \u2014 thinking I want to restrict this just to 1px and 2px vals. But maybe that's overkill?. I do wonder if there's a more succinct way to write this! Curious about that index technique. Re drawbacks: probably not, particularly in the long term. It could be a short-term issue and throw an error if some older USWDS custom value were being passed to the spacing function. But this seems like a pretty small slice, and one that we'd probably want to iron out by 2.0 anyway. It might be an issue for some other custom implementations, too \u2014 but that also feels like a stretch. I'm gonna try that index technique (it worked!) and re-commit.. oh huh, I see it aligned in my editor... maybe there's a hidden tab or something. Fixed this bug: output the wrong keys in the error message.. FYI: unpack() converts nested arglists into single one-dimensional lists for proper parsing:\n((A, B), C) --> (A, B, C). Removed the family and weight options from this function. Vestigial functionality \u2014 converted to single-use (typescale only).. It definitely works like a multiplier, but since we've been using spacing units as the term for our standard whitespace palette, it started to make more sense to use units() \u2014 I think I'm open to other names for this function, but since this is one of the primary user-facing functions (like color()) I'd like a name that works to connects the function to the concept.. Oh, and I did write that comment, so I can accept full responsibility!. The double-nesting does seem redundant. But the intention of smart-quote() is to format specific types in a specific way (many of these functions can accept a range of types) \u2014 and to avoid the errors that come from doing something like quoting a number or a bool.. Just checking: Is this related to sourcemaps, or a small issue add-on? I'm not clear what this does, so I can't really review it properly!. We should probably use the autoprefixer settings technique we're already using: https://github.com/uswds/uswds/blob/24a33da15a3d982a34439d0f38dbf3ba8b1d0b47/config/gulp/sass.js#L79\n@maya Do the settings in https://github.com/uswds/uswds/blob/release-2.0/config/gulp/browsers.js still look like the right ones going forward?. This is after the sourcemaps.write since gulp-replace is not included on this list of sourcemaps-supported plugins: https://github.com/gulp-sourcemaps/gulp-sourcemaps/wiki/Plugins-with-gulp-sourcemaps-support\nPossibly worth testing to see if it affects the sourcemap output if the write comes after the replace?. I guess not really! I was just hoping to capture all of the code transformations within sourcemaps, just as a neatness/completeness thing, but I don't think it really matters.. Mostly to make it consistent with the other utility mixins that are built with the same function. It handles errors a little differently \u2014 that is, get-uswds-value accepts non-USWDS values (like 17px) with a warning and units throws an error. get-uswds-value() also \"knows\" the standard values for padding and will reject something like neg-2 or -2 since those negative values are invalid for padding. . \u2702\ufe0f!. I've already approved (and I like the way it looks right now) but perhaps 27ch better reflects the 27-character guidance?. Good ol $hit-area \u2014 always brightens my day. Good to see you again, friend.. I've been prefixing all the project theme settings vars with theme- \u2014 does this seem like overkill? Otherwise, maybe we should prefix these vars with theme- for consistency. Do you like the double-classing here? Or should usa-table-borderless extend usa-table?. The same question about double classes here: better to require usa-input usa-input-medium or have usa-input-medium extend usa-input?. Double-class instance. I do potentially see the value of double-classing in this instance: where usa-input-success is like a state of usa-input, and it might toggle to a different state. Double-class; also two class statements here. Double-class instance. Double-class instance\n. Double-class instance\n. Double-class instance. Wow, there sure were a lot of unclassed elements in these components :). Or, if prefixing, is theme- even the right prefix?. Same comment here about prefixing. units()!. Again, unrelated to this PR, but should the webkit-thumb explicitly have the same bg color as the other two?. Unrelated to this PR, but I see that these three tracks have different rules and it makes me want to see a cross-browser slider example \u2014 for instance, it strikes me as strange that webkit's bg is light gray, moz has primary, and ms is transparent..... Ah... this solves my transparent question :). I see this use of an @extend here \u2014 are we consciously avoiding this technique now in favor of requiring both classes?. I really like this placeholder --> mixin --> conditional --> include technique. Clean!. \ud83c\udf89\ud83c\udf89\ud83c\udf89 \nNow, it might make sense to make a note of the breaking markup changes so we can include them in the migration guide. Kewl \u2014 one of the points in that thread seemed particularly reasonable:\n\nsome designers/devs couldn\u2019t remember when to do button--dense-secondary or button--secondary-dense [when there's more than one additive suffix]. resolved above. In general, I was trying to scope the work in this PR as much as possible to this specific component. $theme-site-margins-mobile should be the new variable going forward, used anywhere $site-margins-mobile is used. We could begin to globally replace the spacing unit variables now, I suppose, but I started to go in that direction and found myself in deeper, broader PR water in my initial PR. \n\nSpacing units would be a good candidate for global replacement (in most instances) \u2014 something like font-size variables is definitely a bigger job and one I'd like to save for (possibly) a PR of its own or (more likely) something that's only integrated piece by piece.. Actually, I should revert these to the old values for now \u2014 to allow us to more specifically scope our work. Globally changing these vars will cause unexpected problems right now.\nPLEASE HOLD ON MERGING UNTIL I FIX THIS. I guess these should be OK to replace with new vars... I thought I'd reverted this, tho.\nThis means we can replace all instances of $site-margins and $site-margins-mobile with their $theme- counterparts.. OK, I changed the vars in the old grid to use the new margins theme vars. Oh ha \u2014 I knew this looked wrong.. Oh huh, it must not have picked up the last changes. Looks like this is a Bourbon mixin \u2014 just to keep in mind as we move to possibly deprecate. Yeah, I've been using esleifs, but I can find change to else if. Maybe I should work on making them consistent in a subsequent PR. And call this work done. You could combine this with the above mixin as @include u-text('white', 'uppercase'). Would we want to connect this to a settings var for base-font-size? Like @include u-font('sans', $theme-base-font-size)?. Annnd, this makes me want to set up our default to use relative sizes for vars like $theme-base-font-size \u2014\u00a0right now it's assigned 6 but it could/should be xs... . no, but there should be. made an issue here: https://github.com/uswds/uswds/issues/2723. - Let's use the theme palette var here: color('base-lighter')\n- Let's look at using 2px instead of 3px to align with system palette. base-darkest See https://github.com/uswds/uswds/blob/ca2b10fef9278a334715b6179e069a4a89e37a8e/src/stylesheets/core/variables.scss#L1047. You _could set this to units(2.5) and use the var as it was used previously. And we could  build a new set of vars like those that start at https://github.com/uswds/uswds/blob/ca2b10fef9278a334715b6179e069a4a89e37a8e/src/stylesheets/core/_variables.scss#L1139\n...and use them in these var assignments. Like:\nsass\n$theme-spacing-x-small: units(0.5); // was 0.5rem\n$theme-spacing-small: units(1); // was 1rem\n$theme-spacing-md-small: units(2); // was 1.5rem;\n$theme-spacing-medium: units(2.5); // 2rem;\n$theme-spacing-large: units(4); // 3rem;\nsass\n$icon-size: $theme-spacing-md-small;\n$h-padding: $theme-spacing-medium;  \n$v-padding: $theme-spacing-md-small;. now that's a complicated little fellow!. Use color('base-lighter'). Use color('base-darkest')\n. Whoops, nm. It's goes against the paradigm a bit to use functions in settings. The more reliable thing would be more like:\nsass\n$theme-spacing-x-small: 0.5; // was 0.5rem\n$theme-spacing-small: 1; // was 1rem\n$theme-spacing-md-small: 2; // was 1.5rem;\n$theme-spacing-medium: 2.5; // 2rem;\n$theme-spacing-large: 4; // 3rem;\nsass\n$icon-size: units($theme-spacing-md-small);\n$h-padding: units($theme-spacing-medium);   \n$v-padding: units($theme-spacing-md-small);. It's worth investigating using the technique I'd mentioned on line 7 to use variables as before, except assign those vars system tokens. See comment on line 70. See comment on line 70. See comment on line 70. See comment on line 70. See comment on line 70. This won't work properly in this format. $theme-font-sans is a key/token/string (like 'source-sans-pro') rather than a value/stack (like \"Source Sans Pro\", Helvetica, sans or whatever).\nI realize this is confusing (see https://github.com/uswds/uswds/issues/2633).\nFor now, use @include u-font-family('sans') \u2014 but I can make a function as well... something like family() as well as a var ($font-family-sans). Sounds good. There isn't a function for that one yet either. Yes, $color-theme-base-lighter will work. I think this is not yet settled law, but it could be a good start \u2014 \n1. if the variable is sufficient, use the variable\n2. else if the function is sufficient, use the function\n3. else use the mixin\nI'm hesitant to carve this in stone right now, but it's a useful decision tree. 0. If a standard rule is sufficient, use a standard rule. Let's go with this \u2014\u00a0I have some qualms about imposing a project-level tshirt spacing scale, but let's lay them aside for right now. Sorry, the u-padding() mixin cant take multiple arguments in this form (yet?) \u2014 use a conventional padding rule (or rules) instead:\n. Use @extend %usa-heading; in .usa-alert-heading to explicitly get the heading styles. I think I will add info to the state palette. OK to just do it in this branch?. yup \u2014 it needs font size/face/line-height etc now that these properties aren't being applied via the h3 element itself. Also, i made this change :). @maya @el-mapache do you have any clue what this deprecated comment means? I don't understand how it's deprecated if it's right there. Should we get rid of it?. In this instance I think it might look better rounding up to 0.5 units (4px). It's not 100% exact, but I wonder if it will matter? Also, I recommend using the new mixin for media queries: @include at-media('mobile-lg'). I'm gonna remove that rule. We have a v2 var for this one.\nYou can use u-padding-y($theme-site-margins) here. . Can we can just use black or white for those two colors instead of a function?. see line 15. see line 15. I don't feel strongly about this, but I generally feel that the system shouldn't set a definition of white of black that isn't white or black \u2014 that is to say, I'm comfortable that we have white and black defined in the system but i don't think they should ever change from pure white and pure black, so maybe they're redundant but also who knows it's been a day \ud83e\udd37\u200d\u2640\ufe0f . so let's just leave them as a function, at least for consistency's sake. Let's use $theme-site-margins here. I'm not really sure yet \u2014 but because font size and family are fundamentally coupled in v2 I've been playing with different techniques to make sure each component is accessing the proper value. I think after I muddle through typography I'll have a better attempt at guidance here. I'm inclined to choose the closer value unless there's a better reason to go down to mobile-lg. This is pretty much the only significant change to the input component. It evens the spacing in forms that have multicolumn elements.\nhttps://federalist-proxy.app.cloud.gov/preview/uswds/uswds/dw-typograhy-v2/components/preview/address-form.html. Oops, I will fix this typo. No, this looks like a mistake. nm, this rule is for .usa-accordion, .usa-accordion-bordered so it applies to both. I think I can remove the typeset from line 18, though. This whole rule is strange \u2014 why should a link in a sans face have no border-bottom? Why would it have border-bottom in the first place? Should we just nuke the whole a rule here?. removed. Kept this one and removed the one on line 18. Maybe a separate PR \u2014 there's a similar issue with usa-form and usa-form-large. yeah, I'll try that. yeah, that's probably a better pattern. @maya what's .usa-hero-link used for? I don't see it in the example. What's usa-hero-callout-alt used for? I don't see it in the example . oh yeah duh \ud83d\ude43 . 30 words?. Quote the strings in functions and mixins: @include at-media('tablet')\nThough the fns and mixins will work without them.... I wonder about using $theme-site-margins as a bottom margin in these. Is it important that if the theme site margins change that this changes with it?\n. Oops! Docs is wrong :(. I was wrong there :( You were right and I wasn't looking closely enough.\nTwice in a row!. I would say we probably don't need to call units() on 1px and 2px. But maybe it's just better to be consistent and use it every time?. I think we should try to use the theme tokens as much as possible: 'sm' in this case. Use the theme token '2xs'. typo: units. I feel like we should something like the following to settings-typography\n$theme-font-family-sidenav:         'ui' !default;\n...then typeset this component with @include typeset($theme-font-family-sidenav, null, 3). This could take away the need to add explicit line height deeper in the component? It also isolates the sidenav from the body font choice, which I think could be useful.\nThen use $theme-font-family-sidenav in subsequent font functions instead of 'body'. If there are user-settable vars, we should migrate them to the appropriate settings file. I see variables as the home for mostly non-user-settable vars.. Does this need the a specificity to work properly?. Does this need the a specificity to work properly?. we'll probably want to do a find/replace at some point to make everything consistent. Probably for the best! :). maybe settings-spacing?. 4 units seems like a good place to start. Do we actually use .usa-search-submit? I don't see it.. Should we use .usa-button here instead?. would it make sense to include the role with the form element, remove the inner div, and consolidate the styles?. Are we gaining something important by keeping them separate?. See comments on lines 17 and 18. See comments on lines 17 and 18. See comments on lines 17 and 18. would it make sense to include the role with the form element, remove the inner div, and consolidate the styles? Do we gain some important isolation/control by keeping them separate?. Since you have the new settings var, use typeset($theme-font-family-search) here instead. Gotcha. Can/should any of the rules tied to [role=search] be applied to usa-search instead?. Hm, not in this case \u2014 this is a component (in v1 as well) called .usa-checklist which is essentially a validation checklist of \"things you need to do\". Definitely open to new names for it, though.\nSee:\nhttps://components.designsystem.digital.gov/components/preview/validation.html\nand\nhttps://github.com/uswds/uswds/blob/e9249a0fb47733a065a35937eda06e5a47d00f22/src/stylesheets/components/forms.scss#L113\n. It felt like it _could be used in more cases than just in a forms alert, though, which is why I think it should be abstracted into its own component. Even usa-alert has a gray border. If there's a borderless alert, I can't track it down.  And even if there was one, the benefit of this technique (better text alignment between bordered and non-bordered alerts?) seems pretty minimal for the extra css required for an absolutely-positioned bar. \ud83e\udd37\u200d\u2640\ufe0f . Not saying this is a first-priority change by any means \u2014 just something I noticed. I'll try to replicate and see what's up. That's unusual. It's not just grid-container that triggers this behavior, but using neither and just adding the padding and max width manually also results in wonky output.. Adding overflow: auto; helps \u2014 is there some float clearing thing happening?. Done. yup, will do.. These should have a leading 0, too. . I'm proposing that we change scale() to font-size() to match other functions that mirror their rule names. This PR find/replaced across all the components, so nothing should need to be further updated.. good point, I'll write it in the standard style. Except the docs!. I'm just going to remove this one. Addressed in https://github.com/uswds/uswds/pull/2757/. I feel like usa-prose should work here, but it isn't. I'm not getting the heading + * spacing and the button text color is being overridden by the prose class...\n\nI'll need to dig into this a bit more. This shouldn't be necessary if usa-prose were working properly. oh huh. ahhh.... I compressed close-white-alt... one sec. Is there a way to check for this with linting?. Well, I guess I consider this section just an example of \"something you could do\". It's not really a component, per se, so it's not really important whether it uses usa-prose or some other technique. It's certainly OK to leave as is.  \nBut it does reveal some of what I might consider bugs in usa-prose. We'll address them in a subsequent issue, so I'd say it's ok to leave this as-is and move this PR along.. Just a note to self to address this in a subsequent issue.\nhttps://github.com/uswds/uswds/issues/2758. We could solve this by using negative margin-left here and width: auto... then you could remove the rule at line 77. I don't think I have a strong preference, but I do (legitimately or not) get anxious when I see calc() rules. \ud83e\udd37\u200d\u2640\ufe0f . Oh, yeah.. I don't know why I can't make this work \u2014 I guess we should leave the var out, but leave in the TODO in the mixin, and make a real issue around this. Maybe this should be a pure black check? It may make sense to optimize for grayscale printing.. - Add an explicit background-color of white here, just in case the user decides to print background images. \n- It might also be worth explicitly setting the background image to none as well. That could make this solution a bit more portable if we wanted to apply something similar elsewhere.\n- Set text-indent: 0 to center the new image in the checkbox. Nice use of utility mixin :). Yeah, this should say content styles. Updating prose scope docs is next on my list. yeah, will do. Is it worth saying that versions between 4.2.3 and 8.14.1 are necessary? Or is it better as is? . Untested afaik. ",
    "line47": "Thanks @maya! I've got some additional CSS that can be used for a more card type layout at mobile.\nThe trouble I have with horizontal scrolling is how does the user know that the table can be scrolled horizontally. All responsive tables that use horizontal scrolling that I've seen have no indicator to the user that there is more content to the right. \n. @thisisdano my thinking at the time was building something that worked without JS and was easy to implement. I'd love to find a way to reduce the redundancy as well. . This was a confusing this for me too, \nLooking at the primary color I didn't know that I needed to use color-primary to reference. \nUpdates proposed are to add the exact variable name.\nScreenshot before\n\nScreenshot after\n\n. I'd be happy to put in a PR around this specific update, just let me know. . This is great! Id love to see this type of flexibility with the grid. . That all makes sense and thanks for the thoughts. \nUnfortunately, this issue persists even when the links would be to another page.\nIt looks like it has to do with the focus state and the box-shadow property.\nhttps://plus.google.com/+MichielCrefcoeur/posts/gmvXhuQCHTo\n\n . I like the idea of showing the search textbox and search button instead of using JS to show/hide the search functionality. One other search related item I wanted to add was that when on a small screen and viewing the navigation the search is at the bottom of the list of navigation options. I would expect the search to be at the top in the navigation. . @shawnbot I really really like the idea of modularizing these components and making a tighter 1:1 relationship! \u2795 . @hursey013 - interesting - I'm going to give that a go on my branch as well \ud83d\udc4d . That fix worked for me \ud83d\udcaf . I agree \ud83d\udcaf . I like the idea of usa-page-footer or something similar as you mentioned above.. ",
    "nkkl": "I filed this bug 8 months before I joined 18F. \ud83d\ude02 . And I'm about to start my second term.. Let's be explicit about which OS(es) this command will work on. :)\n. Agreed. This phrasing makes Windows sound like an edge-case, which I do not think is the intent here.\n. And, for the record, npm -v works just fine on my Windows box. But my shell prompt isn't $, obviously, because Windows.\n. Maybe we can bundle with the (1 item) list in line 121?\n. ",
    "helenvholmes": "Noted! Is it still worth making the change to the top margin on the \"Show password\" link to make those consistent? I can go ahead and do that.\n. You'll see this in the commit, but I ended up adding the margin-bottom to name[confirmPassword] instead of a top-margin to the \"show password\" link to stay consistent what's already been done :blush: \n. ",
    "d3netxer": "Is this a Jekyll based site? Is this site built with a static site generator? This is something I would like to find out, I don't see it mentioned in the documentation. \n. ",
    "jehlers": "@jenniferthibault's explorations are awesome. \nI've used #767676 before which is basically the same as #757575. I think the red-er shade is helpful to contrast more with the black in cases like your hint text above. But I could see more than one gray palate that a designer could choose from depending on if their brand is on the warmer or colder color side of the spectrum. \n. ",
    "vzvenyach": "Just curious, is there a design benefit to removing it?\n. :+1: \n. ",
    "tysongach": "No harm in declaring the @charset (keep in mind it has to be first element in the stylesheet, per: https://developer.mozilla.org/en-US/docs/Web/CSS/@charset )\u2026but instead we could (should?) just escape that special character:\ndiff\n- content: \"\u2022\";\n+ content: \"\\00b7\";\nI usually use this handy table to find the entity I\u2019m looking for: https://brajeshwar.github.io/entities/\n. @rogeruiz Of course! I\u2019m the maintainer of Bourbon and I\u2019m more than happy to help with that. I figured I\u2019d start small and work iteratively. We\u2019ve also been working on the next major release of Bourbon which will have some deprecations I can help with, and also a few neat new features.\n. @maya Great question! And one we get often. The key difference is the ability to pass null in the Bourbon mixin.\nTaking the CSS you posted above\u2026\ncss\npadding: 20vh 0 10px 3em;\n\u2026padding-right is being set to 0 because using CSS shorthand sets all values. This can cause \u201cAccidental CSS Resets\u201d.\nWhen utilizing Bourbon\u2019s mixin, though\u2026\nscss\n@include padding(20vh null 10px 3em);\n\u2026we\u2019re able to use null, which compiles to longhand CSS and \u201cskips\u201d sides with a value of null:\ncss\npadding-top: 20vh;\npadding-bottom: 10px;\npadding-left: 3em;\n. @rogeruiz 5.0 is on master as of now (here\u2019s a comparison of 4.2.6 to 5.0.0).\nI\u2019m actually hoping to get the changelog written up this week and release the beta.\nThe overall theme for 5.0 is clean up and to have a more focused library. We are deprecating all of our prefixing features (we\u2019re encouraging use of Autoprefixer), which I think will affect this project. New features will be light, but include a contrast-switch function and a hide-visually mixin.\n. @maya Watch out for rendering implications with your sr-only() mixin. The off-screen position approach causes the box to be drawn to the size specified, in this 999em, which can decrease performance. We chose to utilize the clip method, for this reason.\nRegarding the prefixing mixins: I think a few of them may have made their way into the code :grin::\n- _skipnav.scss\n- _skipnav.scss\n- styleguide.scss\n- Maybe more\u2026but a couple quick searches returned these.\n. @rogeruiz That sounds like a plan! I\u2019m here to help!\n:tada: \n. @msecret Correct.\n. Bourbon 5.0.0-beta.1 has been released. You can find a change log here: https://github.com/thoughtbot/bourbon/blob/master/CHANGELOG.md\n. @maya Thanks!\nWe are leaving the actual prefixer mixin in as part of 5.0, but all of the individual mixins that were wrapped with the prefixer (transition, appearance, etc.) are no more. So, in case anyone wants to make their own, they still can. Might be useful for a particular bleeding-edge prefix before Autoprefixer supports it.\nem and rem have indeed been deprecated, and I imagine we\u2019ll get some heat around that. But simply put: they lied a lot when used throughout stylesheets. There is no way for those mixins to know the true font size (or the true font size of html for rem) of the parent where it is being used. Therefore\u2014as an example\u2014em(20) only outputs a value that is equal to 20px if its parent\u2019s font size is 16px (because we have to hard code 16 as the base in the mixin). And the risk of its parent having a different font size is too high, which leads to em(20) not actually necessarily being equal to 20px. I also believe you should  have the freedom to change font sizes as you need, and not accidentally create unintended affects to the codebase.\nI noticed something similar is already being discussed in #992. For now, it\u2019d be easy enough to copy these two small mixins over as custom mixins in this repo, and just stop relying on Bourbon for them if you do update to 5.0.\n. Here to help and answer any questions!\nThe best resource to reference when upgrading is our change log. Keep in mind, migrating from 4.2.x to 5.0 would include the changes from the alpha and beta of Bourbon 5.0.\n. The Neat media mixin accepts two arguments: $query and $total-columns. Though, $query is a list so it appears as though there are more arguments. The documentation for this mixin can be found here: http://thoughtbot.github.io/neat-docs/latest/#media\n@msecret Yes, I believe you are correct, since you all have the variables all set up: https://github.com/18F/web-design-standards/blob/18f-pages-staging/src/stylesheets/core/_grid-settings.scss#L9\nSo\u2026\nscss\n@include media($medium)\n\u2026would output:\ncss\n@media screen and (min-width: 600px)\n. @maya Yes, both mixins are looking at the same variables: https://github.com/18F/web-design-standards/blob/18f-pages-staging/src/stylesheets/core/_grid-settings.scss\n. @msecret Instead of node-bourbon and node-neat, you should be able to use our official npm packages: bourbon and bourbon-neat. We actually just released Neat 1.7.3 today, which now has the includePaths baked in. We\u2019re also part of eyeglass, if that makes anything easier.\nI\u2019m not sure I fully understand your issue. To clarify, this all works here, but another project is having path issues? Can you point me to that project? Honestly, I\u2019m not too familiar with the npm side of things, but happy to take a peek, and find help if I can\u2019t!\n. @rogeruiz Ah, I assumed Autoprefixer was already in place! If it\u2019s alright, I\u2019ll leave this PR as is and your team can get gulp-autoprefixer set up in another PR, as I don\u2019t have the bandwidth at the moment.\n. @rogeruiz Whoa, crazy! Never knew\u2026TIL! Thanks for that.\n. @rogeruiz Oh, bummer! That\u2019s no good.\nI just took a gander\u2026it looks like those grid classes (.usa-width-one-whole, .usa-width-one-half, etc. coming from utilities/_grid.scss) are not making it into the final CSS output final (http://localhost:4000/assets/css/styleguide.css). Is this also the case when you run locally?\nThis led me to docs/assets/css/styleguide.scss and Line 6, which is @import 'uswds';. I\u2019m not sure I see where this import traces back to?\nI think it\u2019s supposed to be importing docs/_scss/_uswds.scss, yeah? Does Jekyll line this path up for us?\n. @rogeruiz I was running gulp website:serve. I rebased and got the same results with npm start.\nAlso, when I made these changes and fired up the server, I got a really messy HEAD:\n```\nChanges not staged for commit:\n  (use \"git add/rm ...\" to update what will be committed)\n  (use \"git checkout -- ...\" to discard changes in working directory)\nmodified:   dist/css/uswds.css\n  modified:   dist/css/uswds.min.css\n  modified:   dist/css/uswds.min.css.map\n  modified:   dist/js/uswds.js\n  modified:   dist/js/uswds.min.js\n  modified:   dist/js/uswds.min.js.map\n  modified:   docs/_scss/_uswds.scss\n  deleted:    docs/_scss/core/_base.scss\n  modified:   docs/_scss/core/_defaults.scss\n  deleted:    docs/_scss/core/_grid.scss\n  deleted:    docs/_scss/core/_utilities.scss\n  modified:   docs/_scss/core/_variables.scss\n  modified:   docs/_scss/lib/_neat.scss\n  modified:   docs/assets/js/vendor/uswds.min.js\nUntracked files:\n  (use \"git add ...\" to include in what will be committed)\ndocs/_scss/core/_mixins.scss\n  docs/_scss/elements/_base.scss\n  docs/_scss/utilities/\n```\nI guess I\u2019m confused why so many things changed, and also what should and should not be committed?\n. @rogeruiz Ohhh! That\u2019s interesting. Maybe this is the issue:\nSo, Neat comes with a built-in media() mixin and it looks like we are also defining another mixin here within the repo of the same name.\nWe should probably remove one, if they are serving the same purpose, or namespace the one defined here within the repo.\n. @rogeruiz Thanks! Just applied the patch and rebased; should be all set now.\n. @rogeruiz I agree, they are very similar and the Neat mixin could solve the same needs the internal mixin has. That being said, I\u2019d suggest refactoring that in another Issue/PR. Thoughts?\n. \ud83d\udc4f \n. Hi @jessieay!\n\nAnother thought on this: maybe we shouldn't even pass the arg, and just declare the scss variable instead?\n\nYes, this is correct. I would recommend setting the global variable ($asset-pipeline) once instead of per mixin include.\n\nlooks like the bourbon default for $asset-pipeline is false\n\nYes, it\u2019s false by default. One note: The settings you linked to is for our new v5.0 settings, which are defined differently than in v4.x, which I believe we\u2019re using here (v5 is currently in beta).\nIn Bourbon 5.0 we are moving away from Sass variables for global library settings and instead wrapping them in a Sass map.\nSo, v4.x setting definitions look like this: \nscss\n$asset-pipeline: true;\n$em-base: 14px;\n// etc.\nAnd in v5.x, they\u2019ll be defined like this:\nscss\n$bourbon: (\n  \"contrast-switch-dark-color\": #000,\n  \"contrast-switch-light-color\": #fff,\n  \"global-font-file-formats\": (\"ttf\", \"woff2\", \"woff\"),\n  \"modular-scale-base\": 1em,\n  \"modular-scale-ratio\": $major-third,\n  \"rails-asset-pipeline\": false,\n);\n(note that some of the setting names have been updated, as well, to provide more clarity)\n\nbut you can set it to true and I'd assume that would cause an override anywhere that we are calling the font-face mixin as long as we don't pass the $asset-pipeline arg?\n\nYep. Any mixin that deals with assets will look at the global variable, but you can also override that when you call the mixin.\nHope this helps!\n. No need for this, as the mixin defines this argument to this value by default.\n. ",
    "panr": "So we can change background color of disabled button to even lighter gray (I think) :-)\nAnd of course every disabled element should use the same color pallete.\n. ",
    "humancompanion": "@maya - We also felt the disabled button didn't look quite disabled enough. In addition, we had an issue where a primary button was placed on a grey background, which worked fine until the button was disabled and then it matched the background color. In that case we made a special exception and altered the opacity. That combined with another instance (in our Document component) lead me to alter the opacity everywhere:\nhttp://usajobs.github.io/design-system/buttons/\nHere is the special instance:\n\nI noticed the trend is towards making disabled buttons gray (salesforce, material design), but what I've seen done in the past is retaining the original style of the button, not altering the classes but just adding the disabled attribute, and using opacity to style the disabled state. Was that considered and discarded? It would take more styling to handle hover and other states, but it would retain the intent of the button (primary still looks like primary, secondary still looks like secondary). For example, the instance above where a primary button is disabled:\n\n. @carodew - Sorry for the long delay in my, now rather long, response. We ended up moving away from sub-sections and a fat footer. Thus the quibbles I had with the subsection code are moot at this point. \nWe got to a usability test last week that included the footer. It was a tiny test with 7 folks and it wasn't all focused on the footer but, we did have a key takeaway: No one found the tiny, required links we inserted at the bottom (as we expected). We asked folks to find more information on the personal data we collect about them in hopes they would find the privacy policy link and no one could. Thus we're going to include some, or all, of the topics that those links point to as full articles in our help so that they can found with search. However, given that those links are required by law or policy I'm going to include them. I think it would be prudent for the Standards to mention those links. I certainly was not aware that some of them were required by law. \nI coded the component so here are my quibbles:\n- As I mentioned in the initial comment the problem I immediately ran into when adding sub-sections was that the CSS didn't expect them and thus declarations like .usa-footer-big ul li applied to every list item in the footer including sub-section items. Thus those styles had to be defeated with a more specific override. It could be more defensively coded with .usa-footer-big ul > li so that the styles only applied one level down.\nIn general the Standards do a good job to avoid styling bare elements and instead add a class to the element and apply the style to that class. This allows the markup to change if necessary without having to update the CSS. The footer, for whatever reason, doesn't seem to follow that methodology quite as closely. \nBut more importantly, given that I've since ripped out the sub-sections, it would be great if the styles and behavior within a component could be separated. For example, the footer is essentially an accordion and should use the same JS to behave like an accordion. But, currently it has to have separate JS because the accordion behaviors are attached to the class .usa-accordion:\n\n$('[class^=usa-accordion]').each(function() {\n    accordion($(this));\n  });\n\nBut it isn't a simple matter of adding the .usa-accordion class to the footer because then you'd get the styles of the accordion as well and the footer wants to use a different drawer handle, etc. Ideally, the accordion functionality would be attached to a data attribute. Then that data attribute could be added to any component that had the right aria attributes and thus it would behave like an accordion. \nThis article captures what I'm suggesting:\nhttps://medium.com/@cannikin/introducing-event-focused-js-and-css-efjac-9b8a9dd7bfe3#.lg7fu7tl6\n. @carodew - The question we asked in hopes that test participants would find the Privacy Policy link was \"Where might you click if you wanted to find out more about what data USAJOBS collects about you?\" For what it is worth, I did ask a follow up question to the test participants who tried for a significant amount of time to find the Privacy Policy. The question was along the lines of \"Is the data USAJOBS collects in relation to your account something that is important to you?\" It was an ad-lib, not in our test script, and in retrospect it was not well phrased. \nOne participant, a student, indicated it was important to her. However, she indicated that failing to find a link she would resort to searching the help center for \"privacy\". Thus in the end she would I suspect, given our decision to include that content in the search results for the help center, find the relevant content. \nIn short, including those privacy and policy related links in \"fine print\" at the bottom of the footer complies with the laws and policies governing our site but doesn't distract from key tasks. As long as that information is discoverable in another way (i.e. search) I feel the user's needs are met.\n. @maya - Sorry about that. package.json error on my part. We're back on 0.9.1. You fixed both issues on 4/15. Apologies.\n. ",
    "sawyerh": "Just sharing for others landing on this ticket: the CMS Design System has a Tabs pattern, which was heavily inspired by a Tabs pattern used by the Board of Veterans' Appeals team. . @bradnunnally We've spoken to some folks on your team in the past about the design system we're building for HealthCare.gov, which is largely based on the WDS. We'd be happy to continue that conversation and answer any research questions you might have. Just throwing our hat in the ring \ud83d\ude04 . I should be able to share more soon \ud83d\ude04 but wanted to jump in and +1 this. We've created utility classes for WDS background and text colors in our design system for HealthCare.gov and they've been handy for prototyping and beyond. Once we make the repo public, I'll be sure to ping y'all.. Setting it to color: inherit is one solution, though I'd like to propose another idea, which is to use $color-primary-darker, which would meet WCAG2.0 AA while still retaining the pattern of blue links. This is what we're doing in our design system, which is a variation of USWDS. \nIMO, this color difference between normal text and a link makes the link a bit more noticeable than if it were the same color as the surrounding text.\nScreenshot:\n\n. @donjo Ah got it \u2014 updated! \ud83d\udc4d . FWIW: A copy of the CoC is available here https://18f.gsa.gov/code-of-conduct/. \ud83d\udc4b Heya, just wanted to bump this thread. This is still a pain point we run into, and I'd be happy to make this PR if it's something y'all would be interested in. . \n. Curious to hear the thoughts behind this switch to a light gray focus state. Was there research showing the default blue focus state was being missed? Is there evidence that a dashed gray outline is better? Not saying I disagree with the choice, but would be great to hear more about why the change?. @rtwell Got it! Thanks for the context \ud83d\udc4d . Heya, just wanted to see where this lands on the roadmap for you all and if this is definitely the path you think you'll be going down with this design? We're currently working on implementing validation on our site and will probably go with this updated design if it's something that will be making it into the Standards in the future.. Just to be even more of a headache, here are two cases where something like a floating icon might be problematic for our current use case:\n\nFields that span the entire width of a \"card\"\nGrouped fields, like the date pattern\n\nA few workarounds might be placing the icon \"within\" the field, or offering a modifier class that doesn't place the icon on the invalid field?\n\n. @maya ah I missed that one. It looks like the SVG in #2178 is still a little misaligned with the pixel grid:\n\n. @maya Those particular validation messages are due to the min and max attributes. Removing the pattern attribute would still result in that validation occurring. I agree the validation is nice and definitely don't want to get rid of that functionality \ud83d\ude04 . This is great \ud83d\udc4d GitHub's new Team Discussions feature might also work if Issues doesn't feel right: https://github.com/blog/2471-introducing-team-discussions. So far we've done two rounds of user testing for the new HC.gov application. The format of the tests were InVision prototypes, so we haven't yet gotten a ton of results around the usability of the form fields themselves. There is one pattern that we've tested that we do have some preliminary results on, with secondary research, that have been encouraging and worth sharing:\nStep list\nDemo\nWe've been testing a \"step list\" pattern as a way to:\n\nIntroduce a user to the application so they know what's coming up.\nAllow the user to navigate to previous sections of the application.\nAllow a user to see their current progress, at a high level, within the application.\n\nThis pattern was inspired by GOV.UK's Task list pages, and they have some additional research notes here.\nThe first iteration we tested was this:\n| Step 1 | After completing step 1 | Example form page with \"View all steps\" link |\n| ------ | ------------------------ | -------------------- |\n|  |  |  |\nWe tested this prototype with 9 participants and some of the findings were:\n\nMost users tended to click the green \"Start\" button right away, not reading the text on the page. For our case, this is actually fine, and showed that users were able to quickly identify how to start their application, and understood to start from the first step in the list.\nSome users commented about the green button, one of them saying:\nI like green, green means go\n\n\nUsers understood that grayed-out steps were disabled, and that they needed to complete the steps one at a time from top to bottom.\nIn the design, the step titles were intended to be hyperlinks that would take the user to the same page as the \"Start\" button. The goal was to provide multiple ways for a user to proceed with their application, or navigate to previously completed step. However, this seemed to cause confusion for some users. Some users weren't sure where the title link would take them, and some thought it might take them to a page describing the step. Our takeaway here was to remove the link from the title in the next iteration.\nIn the prototype, when a user is on a question page, they can click a \"View all steps\" link to navigate back to the task list to see their progress. If a user hadn't yet started the next step, the button would say \"Start\". This caused confusion for some users. When one user came back to the page and the \"Start\" button moved to the second step, there was some concern that it would Start another application, and he suggested it would be clearer if it said \"Continue\". In future iterations the CTA will say \"Resume\" for subsequent steps, even if they haven't been started yet.\nUsers seemed to understand that to go back to a previous step, they would click the \"Edit\" link to the right of the step.\n\nP.S. Let me know if you prefer a different format for sharing future findings.. \ud83d\udc4b  Just flagging that this one has a typo . ",
    "rossdakin": "@msecret this is great \u2014\u00a0I have been hoping for a way to override values without modifying the distributed flies (so I can just nuke and replace /designstandards/ in my project but preserve my customized values).\nTwo potential issues with this though:\n1. I currently don't @import \"../node_modules/uswds/assets/_scss/all.scss\"; (I just link to the precompiled CSS that you distribute) because the import breaks CSS paths to images. This is its own issue, not exacerbated by your change here but one that prevents me from benefitting from your change.\n2. Because I'm not importing all, I am importing variables so that I can at least reference them in my custom SCSS. This change will kill that file and thus break my code. I wonder if you could leave the file in place but just import default into it? Or just tell me \"this is in beta -- get off my lawn.\" Both acceptable :-)\n. Also, just to make sure I understand this correctly, it seems like your example:\nscss\n@import \"../node_modules/uswds/assets/_scss/all.scss\";\n@import \"../src/css/override_vars.scss\";\n\u2026should actually be:\nscss\n@import \"../src/css/override_vars.scss\";\n@import \"../node_modules/uswds/assets/_scss/all.scss\";\nLooking at the !default docs as referenced here (but no longer live?):\n\nYou can assign to variables if they aren\u2019t already assigned by adding the !default flag to the end of the value. This means that if the variable has already been assigned to, it won\u2019t be re-assigned, but if it doesn\u2019t have a value yet, it will be given one.\n\nSo in the second version, you would set whatever override values you want, then !default would prevent them from being redefined in default, right?\n. Awesome -- thanks all! \ud83d\udc4f \n. Hey @shawnbot \u2014 that repo represents an obsolete view of the project. Its authoritative home is now https://www.fns.usda.gov/school-meals/web-based-prototype-application\nDevelopment is no longer active, but it would be nice if the dependency could continue to resolve for anyone who might try to build from USDA's source snapshot in the future.. Got it, thanks @shawnbot \u2014\u00a0is our code doing something it shouldn't (reaching into a private API)? If so, I say feel free to break it and just note in an issue somewhere in that repo.. ",
    "ghost": "I tested this again in Chrome (using latest version and with no extensions), here is the result. Note that I'm using the zip file from https://playbook.cio.gov/designstandards/all/ if this has been fixed since, then you can close this issue.\nBased on the fonts, your image seems to be an updated version of the code\n\n. ",
    "harrisj": "Thank you again @maya for catching my accessibility mistakes back then and helping us in micropurchase land!\n. ",
    "nickjs": "@msecret No, sorry, to be clear there are still a tonnnn of linter warnings all across the repo. I just concentrated on styleguide.scss for now. Subsequent PRs could fix other files. I also didn't add a postcommit hook or anything, so it's not like every time you try to commit you're going to get hundreds of warnings in your face. You still need to run scss-lint manually.\n. @rogeruiz Just pushed a change to the scss-lint config to only run on _scss and exclude _scss/lib. Ran it through wc, a default scss-lint with no arguments generates 234 warnings and 0 errors. Honestly, it seems like a lot of them can be easily grepped, I'd be willing to do that if we decide it's worth it to add the linting.\nBecause of the Jekyll front matter thing I mentioned above, you still need to manually lint styleguide.scss via scss-lint assets/css/styleguide.scss. If we can remove that front matter, we can add it to the default list of files, which will help until the refactor happens in #974.\nSo, has any work started on either of those issues? Super excited especially for #974, but if not, I'd recommend merging this now. It adds scss-lint without any side effects since it's not integrated into the automated release process. It will be a lot easier for you later on to just add the existing scss-lint to the build mechanism than it would be to add a whole new tool. Plus, if code is eventually going to get refactored, this PR will eventually just be one big merge conflict, so better to merge it in now, no? I'm not gonna be mad if styeguide.scss (and my little refactor here) disappear later on :)\n. I can commit to cleaning up at least 100 warnings if we merge this ;)\n. @msecret already added the config option to lint _scss by default when you run scss-lint (excluding lib/) :)\n@rogeruiz just updated the README with linting instructions. Good call.\nTotally up to you guys if you want to enable Hound, though still probably good to do a pass at removing as many warnings as possible first.\n. @maya thanks, fixed.\n. @maya actually I think the only files I can find that have it that we would care about would be assets/css/styleguide.scss and assets-styleguide/css/homepage.scss. I'm not sure what the difference between those two directories is and if they both should be linted, nor am I familiar enough with Jekyll to say whether the front matter can be removed or not.\nI figured, and I figured the code could change at any point, so I didn't spend too much time on it aside from getting it to (mostly) lint (the exception being the SelectorDepth and NestingDepth warnings).\n. :tada: Thanks @rogeruiz!\n@msecret Just to be clear, assets/_scss is currently linted when you just run a default scss-lint. As for what mechanism you choose to run that (Hound, cmd, etc), that is an exercise I leave to the reader :)\n. @maya #987 :boom: \n. Interesting, so the reason CI fails is because we switched to using the Ruby gem for the styleguide, but the styleguide doesn't have the newest copy of the assets from here yet, which has the new $color-black.\n. @rogeruiz Rebased, should be good to go, sorry for the delay\n. See above comment for why this still fails on CI. Basically the gem hasn't been updated with what's in 18f-pages-staging but styleguide.scss imports the gem version of the styleguide instead of the version in src/\n. @maya Well that was embarrassing. Fixed now, my bad!\n. @rogeruiz Rebased\n. @msecret Sorry so does this branch include everything from #985 just rebased onto the refactor?\n. Hmm, just looked into it, unfortunately scss-lint doesn't offer this config option. How deep should I shave this yak? I could open a PR there too to add an option...\n. But at the very least we should add this to shortcomings on https://pages.18f.gov/frontend/css-coding-styleguide/#shortcomings \n. @msecret sweet, should I revert this change and disable the SingleLinePerSelector linter, or...?\n. There's a few of these, we should probably figure out a way forward\n. The alternative here would be remove it from the scss styleguide\n. I'll call your attention to this file, where I did actually move things around to try to consolidate rules. If you don't mind, please double check to make sure I didn't miss anything :)\n. This is the only SelectorDepth I tried to fix, by moving the thead definition outside of the table. Again, let me know if that breaks anything.\n. Omg I must have stared at these for like 2 minutes trying to figure out why every image was duplicated. Must have just had a moment of code blindness where the two lines looked exactly the same. Totally did not notice the file extension was different. Will revert now.\nHowever, it does cause a linter warning, because it's a duplicate property. I guess there's no way around that...\n. ",
    "jonmost": "Created by mistake\n. Yes this was a mistake, not sure how it happened twice\n. My apologies, I think I accidentally submitted a series of prs (in one commit) by mistake. I am not attempting to make any changes please consider any from me a mistake. I sincerely apologize for the inconvenience\nSent with Good (www.good.com)\n-----Original Message-----\nFrom: Maya Benari [notifications@github.commailto:notifications@github.com]\nSent: Tuesday, February 02, 2016 04:57 PM Eastern Standard Time\nTo: 18F/web-design-standards\nCc: Mostowski, Jonathan\nSubject: Re: [web-design-standards] Gh pages (#979)\n@jonmost<%3Ehttps://github.com/jonmost%3C> was this a mistake PR as well?\n\u2014\nReply to this email directly or view it on GitHub<%3Ehttps://github.com/18F/web-design-standards/pull/979%3C#issuecomment-178847875>.\n. ",
    "simsong": "Some scientific websites that display maps take lat/lon. For example, http://earthexplorer.usgs.gov\nIf you wish, I would be happy putting together some proposed semantic standards for various kinds of typed data. Having textual descriptions is an important first step before having code.\n. Sort of. But I'm speaking about entering the data, rather than displaying it.\n. Sure. Here is an example:\nPhone numbers in the North American Numbering Plan should be entered in a single text field. Phone numbers can be entered as NNN-NNN-NNNN or NNNNNNNNNN. Phone numbers are automatically segmented for display. If a +1 or \"1\" is entered at the beginning of the number, they are displayed for the user convenience. Internally numbers are converted to a standardized representation.\nExplanation: Currently some USG systems require that phone numbers be entered as NNNNNNNNNN while others use three text fields and have people enter the numbers as [NNN] [NNN] [NNNN] with clever JavaScript that bumps you from the first-field to the second-field when you type the  3rd digit, but which doesn't intercept the delete or backspace to go back. \nThe same applies to SSN and Credit Card Numbers.  SSNs are printed NNN-NN-NNNN for a reason\u2014it is less error-prone to read and enter chunked numbers. However MANY USG systems require that SSNs be entered as NNNNNNNNN and generate an error when the dashes are inserted, even though it's less than a line of code to take out the \"-\". \nLikewise, CCNs are printed on the card NNNN NNNN NNNN NNNN (well, MC and VISA numbers), but MANY systems require that they be entered NNNNNNNNNNNNNNNN and generate user-errors when they are not.\nThis is a huge barrier to usability, both because of the inconsistency between systems, and because programmers are forcing users to enter and read numbers in a manner that we know is more error prone.\nI think that 18F should have standardized GUI elements \u2014 that have been user tested \u2014 for entering many kinds of structured information. This includes CCNs, SSN, dates, times, etc.\n. The three boxes with JS to automatically advance could work better. It's\nnot an impossibility, it's just that the implementations out there are very\npoor. However, I believe that 3 boxes is fundamentally wrong, because it\ndoesn't handle copy-and-paste properly.\nI'm not familiar with the term \"input masking.\" Can you define it for me?\nOn Fri, Feb 12, 2016 at 12:14 PM, Carolyn Dew notifications@github.com\nwrote:\n\nThanks! This is great, and exactly the way I think we should be thinking\nabout these patterns (best practices, backed by usability testing, etc).\nOne thing that @colinpmacarthur https://github.com/colinpmacarthur and\nI have struggled with is that input masking \u2013 while usually great for\nsighted users \u2013 is terrible for people using screen readers. Check out this\nrecording:\nhttps://docs.google.com/a/gsa.gov/file/d/0B9rGmqNcHo-mRGpMS0xQbzVzeGM/edit\nWe've implemented PoliteSpace by Filament Group\nhttps://github.com/filamentgroup/politespace in cases where we've\nwanted to use input masking to get around this problem, but the\nimplementation isn't perfect. For one, it doesn't provide visual hints when\nthe text field has focus, so that doesn't actually help sighted users while\nthey're typing (our initial research indicates that they want this). Also,\nwhen there is also password masking available, things get a little wonky\n(see issue #494 https://github.com/18F/web-design-standards/issues/494).\nNot sure that particular issue bothers sighted users a whole lot but it\nmight.\nWe're still looking for solutions for the above, and how to address the\nneeds of both sighted and unsighted users.\nSimilarly, three separate text fields that use JS to automatically advance\nfocus is really bad for keyboard users (it's hard or impossible to move\nback to an earlier text box if there is a mistake).\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/18F/web-design-standards/issues/986#issuecomment-183417686\n.\n. \n",
    "j-ta": "I am working on this.\n. ",
    "btn0s": "Is there a consensus on this? Hasn't been closed but given it was over a year ago I'd imagine it's been resolved.. @maya Awesome! Just looking around for things to do in here so I was wondering what the status was. Thanks!. For anyone who's not in those Slack groups/channels, is there another way to make the reference material accessible? Or maybe include links to join those channels?. ",
    "aredridel": "Use the resolve module instead of relying on the relative paths between modules. The assumptions of hard-coding node_modules paths are already broken in npm v2 in the face of npm dedup.\n. Perhaps. It may take some wiring to connect up -- you have to tweak how your CSS module looks up files; some preprocessors have had this done. atomify-css was one approach to this, and others have wired it up with sass before I know.\n. ",
    "ryanjgill": "@msecret Ok great. Thanks for clearing that up for me.\n. ",
    "AndrewArch": "Here's some GDS discussion on the issue of form completion - https://userresearch.blog.gov.uk/2014/07/30/reversing-a-circle-of-mistrust-2/\n. ",
    "amyfens": "We'll definitely look into that. Another thing to consider is that in our experience so far, the disabled option of both radio and checkbox forms appears to be a slightly smaller selector/image, and also (in the case of the radio button) appears to affect the styling of the associated label. I'm working on establishing the cause, and once I do I'll pass along for evaluation/remediation, but figured I would mention.\n. Here's what we did for the disabled checkbox--pretty easy fix for now:\nAdded a :checked:disabled option with the same image styling as :checked\ninput[type=\"checkbox\"]:checked + label::before,\ninput[type=\"checkbox\"]:checked:disabled + label::before {\n  background-image: url(\"../img/correct8.png\");\n  background-image: url(\"../img/correct8.svg\");\n  background-position: 50%;\n  background-repeat: no-repeat; }\nDarkened the disabled color (within the palette options) to improve contrast for both checkboxes and radio buttons:\ninput[type=\"checkbox\"]:disabled + label::before,\ninput[type=\"radio\"]:disabled + label::before {\n  background: #aeb0b5;\n  box-shadow: 0 0 0 1px #5b616b;\n  cursor: not-allowed; }\nHopefully this helps. Looks like it will be a workable solution for us!\n. Ditto for textarea. We just added another selector to the CSS so that the styling would be applied identically to the general input field:\n.usa-input-error {\n  border-left: 4px solid #cd2026;\n  margin-top: 3rem;\n  padding-bottom: .8rem;\n  padding-left: 1.5rem;\n  padding-top: .8rem;\n  position: relative;\n  right: 1.9rem; }\n  .usa-input-error input,\n  .usa-input-error textarea {\n    border: 3px solid #cd2026;\n    width: calc(100% + 1.5rem); }\n  .usa-input-error label {\n    margin-top: 0; }\n. ",
    "gigifrias": "Thanks for the quick reply, @maya! \nTo be clear, the spacing is not different within one list (inside of the same ul/ol tag), it's just that it varies from list to list when you have more than one set on a page separated by other elements. \nI'll take a closer look at the article you used in your approach, but would love to know if you are able to replicate our issue on your end.\nThanks again!\n. We figured out the issue!\nIn order to center our main content column on the page, we had to add width: 100%; with auto margins on both the left and right for all lists which is what was making the cell widths vary from list to list. We've now added a width to the cell with the bullet/number and that fixed the issue.\nThe link you shared helped us to better understand your approach and pinpoint our mistake. Thanks so much for your quick attention and help.\nP.S. We are not quite ready to publicly share our site just yet but we are getting very close and will definitely let you and your team know so that you can give us your feedback.\n. ",
    "patricknowlan": "I think there might be circumstances where developers would need to display both a security marking banner line as well as beta / alpha info (this could be a UI challenge). I am not sure if it can be done in the same banner/alert element or do these two pieces have to be separate in accordance to the security markings policy? On a side note, the policy actually probably needs to be updated to reflect modern web design...\nI agree with you on adding a link to the meaning of the data classifications and or other contents included in the banner. From what I have seen, banner-lines are traditionally text only and do not include links. My thoughts are if they are going to be included in a site, they might as well be useful, so why not add a link for more info. \nI would say the use case for this component is probably geared towards an interactive application but I could also see how they would be incorporated into a simple website. :+1: \n. ",
    "arielkennan": "Hello! Wanted to share that NYC is running to this too on one of our projects and we'd love a fix. We also ran into the IE11 issue with the artifact. Thanks!. Thanks for the quick reply! I'll also share our site once it launches you can see your beautiful work implemented on another .gov. . A breakthrough - this just in from one of our developers on how we were able to fix it: \nSo in my original build I was using additional padding on the left (right for RTL) to make room for the decorative custom arrow so it wouldn't overlap the text. As you saw in IE11 this caused two sets of arrows. IE11's native arrow control was being pushed inside by the padding rather than sitting on top of it. \nUsing\nselect::-ms-expand {\n  display: none;\n}\nI could selectively target IE11 and hide that native control. Then it was just a matter of fixing the background-size definition of the decorative custom arrow so it would work in IE11 and not appear like a tiny dot.. ",
    "daderonan": "@maya \nI have noticed an issue with HTTPS assets. I am recommending a prevention control system for when an asset is to be served to the user from an external non-https location.\nWhy?\nIt is Federal government policy that all assets be delivered via https. \"This Memorandum requires that all publicly accessible Federal websites and web services1 only provide service through a secure connection.\" (https://www.whitehouse.gov/sites/default/files/omb/memoranda/2015/m-15-13.pdf)\n\"Mixed Content8: Websites served over HTTPS need to ensure that all external resources (images, scripts, fonts, iframes, etc.) are also loaded over a secure connection. Modern browsers will refuse to load many insecure resources referenced from within a secure website. When migrating existing websites, this can involve a combination of automated and manual effort to update, replace, or remove references to insecure resources. For some websites, this can be the most time consuming aspect of the migration process.\"\nFor example: usa.gov wants to display some data to the user on a webpage, but the data is from a non-secure site http. That would break the secure connection thereby disabling the secure connection and causing browser errors, not to mention the fact that it is against federal government policy.\nSuggested Solution:\nIn order to ensure...when inserting an asset, have a validation system checking if the source is from https, if it is not, then prevent insertion with a warning \"All assets must be delivered from a secure location HTTPS. If that is not possible, then simply link to it.\"\nI can also provide some validating script if that would help.\nI hope that adds some clarification to the issue.\n. ",
    "lobsteropteryx": "That looks like a better solution, perhaps...I will test, and submit a PR.\n. Looking at the link you added, I'm not sure how to make that work cross-platform; I went ahead and submitted a PR with cross-spawn.\nThis PR also includes the changes from #1072 , since the require statements for spawn were changed there as well.\n. ",
    "noonkay": "Thanks for looking into it @juliaelman We were using VA's django module for the design standards. I believe the npm package wasn't yet available at the time. \n. ",
    "madmanlear": "I added #1134, which addresses this issue, but I agree that the js can be removed altogether. I'm happy to take a pass at a solution.\n. I experienced this same error on a new machine. Installing Bundler cleared it right up.\n. Gah! I did not, my apologies. I'll look more closely through PRs before submitting. Thanks @maya!\n. You bet!\n. I think your current approach is the right one, but here's how I solve that problem:\nWhenever I use lists for layout I include additional, semantic markup. For example, a list of links with a specific layout will be wrapped in a nav, and globally any lists that are children of navs have stripped down styles. For example:\n``` css\nul,\nol {\n  margin-left: 0;\n  padding: 0 0 0 40px;\n}\nnav ul,\nnav ol {\n  list-style: none;\n  list-style-image: none;\n  margin: 0;\n  padding: 0;\n}\n```\nIf that isn't acceptable, then I think your second solution is the way to go.\n. Hey @maya, no worries!\nGood point about screen readers. Could we target the \"speech\" media type to ensure that the lists are not hidden to screen readers? Or perhaps even better would be to use the \"screen\" media type and only hide lists when it's present.\nIf neither of those are acceptable then we're definitely back to requiring js, as far as I can tell.\nLet me know your thoughts and I'll prep a PR for the h4 fix. Thanks!\n. Thank you, @carodew, that makes perfect sense. I'll close this and move the h4 edit to a new PR. Thank you both for your guidance!\n. Hey @msecret thanks for your feedback! You'll find these changes in the latest commit.\n. @msecret I think I did it correctly but if not I'd love a breakdown of the process you use. Thanks!\n. @maya That makes perfect sense, but even after removing all top spacing from the li, the h4's top margin is still too much space compared to staging.\nHere's the difference, with staging on the left:\n\nI could instead increase the css specificity so that necessary changes to the h4 only get applied as a child of .usa-footer-primary-link\nAdditionally, having top margin on the immediate child of the li means that the li's layout doesn't start until the top of the h4, creating a situation where the background arrow on the li can't be placed vertically at the center. The above image shows background-position-top at 0.4rem to compensate. Here it is with background-position-top at center:\n\nLet me know if you'd like me to commit any of this to see what I mean in code.\n. @juliaelman Hi, no problem, I thought I was awaiting feedback from @maya. It should be up to date now!\n. @maya Sorry about those issues! I can't replicate on my end, but I've rebased again to make sure my branch is up to date with staging. Let me know if the issue persists!\n. @msecret Could you provide some guidance on this issue? I rebased as instructed, but if that is causing the issue @maya is having (and I see it too) then I can revert or make a new PR so she can review just what's changed.\n. ",
    "el-mapache": "@maya I'm not exactly sure what marco's comment above means, but the resize event is being debounced and fires what I think is a totally appropriate amount;  we should be able to close this.. Based on the acceptance criteria, it sounds like this request is more about writing end-to-end tests to ensure the page behaves the way we expect it to. Does that seem right? We should open a separate issue, I think, to write unit tests for the individual JS components. Let me know what ya'll think of that!\n. @msecret Actually, the tests are already running in circle. I just hooked in to the npm test command that was already in the package.json. If you go here https://circleci.com/gh/18F/web-design-standards/82 and check out the 'npm test' section, you can see the test output! \ud83c\udf89 \n. Although, I'm not sure if test failures will cause the build to fail as well, since I didn't update the circle.yml at all. Looking into that.\nEDIT: does the build fail if there are test errors? Just noticed there were linting errors, but the build proceeded. Also, it looks like circle infers you have tests based on the existence of an npm test command.\n. @roger awesome, looks like a useful utility! Rebasing that branch on top of master and fixing the errors would allow it to be merged, right?\n. @msecret Is this issue ready to be closed? PR is merged, and the tests are running on circle \ud83c\udf68\n. I'm definitely not suggesting that we style every button to not look like a button. Buttons are a super standard part of a form and it would be weird to style call-to-action buttons (like 'Submit' or 'Add') in a non standard way.\nThis issue is only asking if we care that we are using anchor tags to control form behavior, when semantically we should be using a button tag. Simplified:  tags change the url,  tags denote an action.\nI thinking that based on the questions asked so far, the button vs anchor question is probably semantically irrelevant.\n. Understood! Going ahead an closing this issue then.\n. @maya I know that the uswds.min.js error is caused by the start.js script running on pages where the DOM element being jQuery selected isn't available (i.e. targeting a form control on the accordion page). I added the error message when I put in the PR for JS testing.\nSince start.js runs on every page, what do you think the best way to deal with an element that isn't there? We could add a conditional check in that script that only initializes plugins when the appropriate element exists.\n. @maya Is it crazy to unify the start.js and styleguide.js files? The code samples accordion isn't opening because that content is dynamically added in the styleguide.js file. But, the accordion plugins are initialized in start.js (which we need to load first to make jquery available).\nIf unifying these files isn't possible we could put our accordion plugin under an 18F namespace on the window object. Then, we could initialize the code samples section as an accordion once its been added to the page.\n. @rogeruiz  That makes sense. So, we should still be able to move the docs page specific plugin initialization from start.js and put it into styleguide.js?\n. Your suggestion is appreciated, however it is not on the current product roadmap.. Your suggestion is appreciated, however it is not on the current product roadmap.. @maya we can close this issue, but it may be worthwhile to have another issue open to keep investigating mapping ARIA roles into behaviors as shawn noted above.\nWhat do you think?. Your suggestion is appreciated, however it is not on the current product roadmap.. Your suggestion is appreciated, however it is not on the current product roadmap.. Your suggestion is appreciated, however it is not on the current product roadmap.. Your suggestion is appreciated, however it is not on the current product roadmap.. Your suggestion is appreciated, however it is not on the current product roadmap.. Your suggestion is appreciated, however it is not on the current product roadmap.. Your suggestion is appreciated, however it is not on the current product roadmap.. Your suggestion is appreciated, however it is not on the current product roadmap.. Your suggestion is appreciated, however it is not on the current product roadmap.. This is part of the upcoming 2.0 release!. @timwood @subtera745 Hello! Thanks for your interest in this issue. I'm trying to get a little more context around how people are using the system, and would love to hear your thoughts on how the proposed meta-template compilation process would improve your workflows.. @maya From what I can tell #690 is primarily asking for the ability to use an alternative prefix for our SCSS/CSS classes.\nAdditionally, while the existing code does provide a way to override the JS namespace, it's not very straightforward . I can put in a PR to add the functionality he proposed (and I think it would be a nice feature), but we should keep issue #690 open until we figure out what approach to take with overriding the css class namespace.. @maya How is this coming along? Its been open for a bit so I just wanted to give it a lil bump. @maya Yes exactly, we did some similar stuff for login.gov. Probably don't need to break it out till we need to, though.. Ive been thinking about this a bit, and disabling the aXe tests when generating the golden master doesn't seem like the correct thing to do. We want the tests to run because a 'master' reference file that contains HTML which doesn't pass accessibility requirements should be considered an invalid reference.\nAlthough the tests are not super speedy to run, we generate these files fairly irregularly and I think we'd be better served trying to increase the speed of our slowest tests, rather than cutting them completely.. @thisisdano Should we try and knock this out, or close for now? . @maya Yep, my mistake, I applied the branch filter to the whole CircleCI set of tests. It now seems to be properly skipping only the code climate checks. Thanks @maya! I don't think a JS review is necessary for this, I mostly just moved functions around / renamed them when eslint complained.. @thisisdano To test this, I can just load up the style guide in a browser and make sure the minified files are properly expanded, correct?. @maya I can't actually view the preview link, can you double check the URL?. @maya Its ready to go! I basically left the wip on there in case one of ya'll saw anything that looked fishy. @maya makes sense! removed!. code climate reports the remaining complexity issues as fixed!. @thisisdano Thanks for the feedback, I moved around some of the transforms, please let me know how it looks!. @maya hmm, the secondary-link class has a ton of specificity attached to it, which is probably why trying to move the tag out of the list is breaking things. Do you think a better approach would be to style the primary link element to look more like an h4? Or do we specifically want that level of heading in this component pattern?. yes, but I believe the issue is that the mobile styles etc all depend on that link also being inside the list. I guess what I'm thinking is, its going to be a lot more work to pull all that stuff out, and make sure it doesnt break anything, than it is to just style the primary link to look like a header. @maya, ok, we'll have to keep the old JS as well, otherwise it will be a breaking change. Or should this be going into 2.0?. I've looked into this and I don't think the benefits are worth writing scripts to automate our releases.\nTo wit:\n\n\nReleases are more onerous because we are releasing both a prerelease and a release branch regularly. Once beta is out we heretically won't be pushing many, if any, changes to the 1.x branch.\n\n\nWe can't actually automate the publishing process to npm, since all updates are behind 2FA, and  require an otp code. Although npm does expose an otp flag, the person kicking off the publish task would still need to generate that code and supply it; and the release process would have to complete before the token expires.\n\n\nHaving to remember/lookup multiple commands to handle versioning and publishing is more or less the same as the two commands we have to run now.. @maya @thisisdano Update! So I have some code that more or less does what we want it to do. However, since the mega menu behavior is controlled by the accordion JS, we are getting some unintended side effects.\n\n\nI should be able to clear those up, but I think a better solution is to make a new dropdown JS component to handle this kind of behavior. Then the menu can use that.\nSince that would be a breaking change, we'd want to put it with the 2.0 release. I'd like to know if this is something we actually want to push out with the first version, or if we should de-prioritize it for now. I'm totally cool with either. It shouldn't really be too much work to make a new component!\nAlternatively, we can also keep both versions of the menu, and deprecate and remove the accordion based one at a later date.. @maya I opened a new PR since the old one had a million conflicts. @maya can you check this out again?. @maya sure, go nuts!. @maya also, if the visual styles dont actually match what they should be, we might need to add regression tests for this component? . @maya My mistake, it is ready for review. I don't think the accordion updates are affected at all by the issue you linked.. @maya All I did was take the 3 or 4 files we went over and replaced the newer versions with the older ones. It seems like some of the css must be targeting the DOM structure that we replaced? I'll go back in and take a look\n. @maya can you check this out again please? I've made some changes, but I'm not 100% sure if it looks like you'd expect the 2.0 accordion to look. Thanks!. sorry about that \ud83d\ude2c @maya. should be good now! . @maya thanks, I'm not sure why the padding blew up so much. mocha will only run javascript files, passing an image to it should result in an error. I specifically called out spec-file in the example since all of our tests have .spec.js. I can add that explicitly in the readme. thanks for reviewing!. @dano no worries! Maybe we can look into making a new PR with just the color changes? We can also look to see if there is a logical place to break up the some of the new work as well; for example, all the system prefixing could be a separate PR.\nThanks for helping out on this, it's looking really great!. @maya I'm not actually sure how to do that at the moment, its not a config option exposed by the stylelint library \ud83d\ude2c  The lib directory wasn't actually ever getting 'ignored', per se, as the ignore option wasn't configured correctly.. @maya Nothing was being ignored explicitly, stylelint was only ignoring the files in lib because it wasn't one of the folders being passed to the linter function.\nFiles found in the paths passed to ignore would still be checked by stylelint, just not linted.\nThe path being provided to the ignore option wasn't being recognized at all.\nNow that it is, it seems like stylelint's default behavior is to dump a message into the console whenever a file is ignored, which is pretty annoying. @maya hm ok, I'm a little hesitant to upgrade as it necessitates a change to the stylelint-rules package and a publish to npm, and I don't know how many other projects depend on it. I suppose we can just go for it!. the default formatter is actually the verbose level, the other ones have really ugly output. I'll play around with ti.. The stylelint-rules live in their own repo here, so we'll need to publish an update regardless. . I'm ok with that, the only caveat being that we lose the custom rules our package provides. However, maybe we don't need to care about those anymore?. @maya yep definitely! The rules in place already reflect the 18F linting config choices. Again, the only difference is we lose the custom plugins for rules that stylelint didn't handle.. @maya looks like I based this off of develop, and bringing it up to date with release-2.0 produces many linting errors in our new utilities folder. I'm going to close this and open a new one that fixes the errors, and also just uses gulp-stylelint, rather than our custom version. @maya, @thisisdano I'd love if one or both of ya'll could look at the scss linting failures on circle and see if the rules producing them are ones we want to follow, or ones we should disable. Thanks!. @maya hopefully! Thanks for taking a look, I'll try the autofix tool. Shouldn't take too long to manually resolve these though, if necessary. . We don't actually expose any way for an attacker to take advantage of the memory leaks mem can cause, since the uswds project only builds once, locally, on install. Therefore, there is no risk of a denial-of-service attack. . Please tell me all the things I'm doing wrong \ud83d\udc7c . Will probably need more work but removing the WIP to make it clear this is in a mostly done state. @thisisdano updated to remove to u-padding include. Sure, I can try that too! The spacing also seems slightly off between the text now, though :(. @maya yeah that feels better than adding more css if it isn't necessary. @maya updated, with one more question!. @dano or @maya does anything here look obviously incorrect? The build is failing on CI, but I get no aXe violations when I run this locally.. hmm in the preview, it looks like all the buttons are white on white, which is definitely wrong \ud83d\ude04 Seems like maybe importing variables this way might not work properly?\n. @uswds/core This PR is fixed, just an issue with string vs number keys!. @thisisdano do we also need to remove the references to bourbon in config/gulp/sass?. I would love for this to be an actual HTML or compiled-to-HTML file, although I'm not clear exactly how the consuming client would be able to drop that in to their application without have a build process themselves. I guess that's the questions everyone is asking though \ud83d\ude04 \n. The check is to prevent the code from instantiating those plugins if the DOM elements aren't on the page. We could definitely just check individually for the existence of those elements.\nI used URLs because it was faster than checking for each element individually, and because I didnt consider that other users might be installing the docs :(\n. Ah, so, in that case, we should probably move docs specific code to the styleguide.js file, correct?  Initializing the all the plugins with their respective DOM elements wouldn't relevant to the overall package, just to the docs pages. \n. yep, the build fails if any changes are detected. Someone will have to validate those changes and kick off the build again once those changes are accepted.\n. Thanks! I think you'll always have to rebuild manually, unfortunately.\n. I know you didn't write this comment but feels unclear. Should it be multiplier?. Where is the smart-quote fn coming from? I cannot find it anywhere in bourbon, the sass reference, or this repo. Asking because the double-nesting seems weird to me, but I don't really have any context :D. ah yep, I was searching the wrong branch. thanks!. Yeah, sorry, I meant the word multiple should be replaced with multiplier. The name of the function is totally clear. I started moving some of our shared commands into references. Not sure how far we want to take it, but thought this PR could be a good proof-of-concept. It seems like we just push the whole folder up to npm when we deploy (as opposed to just running npm pack and pushing up the tarball); the .zip file we build is put into the /dist folder. I think this line should be ok. We won't really know till we push it live \ud83c\udf08 . you got it!. I'm sorry, I'm not sure I follow. Does it matter when we write the version string?. haha fair enough. I am moving some stuff around anyway because we are currently exporting 2 sourcemaps, and I dont think we need both. we use this in two places, and have a comment explaining it, so it seems like a good candidate for a variable!. This seems fine, but I'm not sure I understand why this change was made. Can you give me a little context?. wow, good change. Did we want to use a class here, instead of targeting the actual HTML element? Or is targeting a specific subset of elements ok?\nI don't remember exactly where we landed but I thought that we were trying to move away from tag-based css. Doesn't matter to me, I think we have a lot more cases of having the elses on another line, for what it's worth. The bold portion here can be removed, it doesn't apply to the current state of the JS.. I think I'm not a huge fan of that? Like, we have all of the tokens, and this is an internal component, so why add the additional unnecessary abstraction of a new variable for this component? \nUnless we add them to variables that get used throughout the components?. Yep, the original was pretty complex too! What suggestions do you have to improve it? Should I explicitly list out each padding value (left, right, etc). actually, forget this! I totally misread what you wrote, adding those spacing vars to the variables file seems like a good idea!. I thought, according to the variables file, that base-darkest was the color we wanted here, not the ink one?. I was just going off of what @thisisdano wrote above. If there is a different standard I'll switch to that. . @dano Essentially then, the pattern is:\n\nAlways default to a theme variable if it exists\nIf not, use the string key of the token (not sure if that is the right word here)\n\n. Because, I see, for example, in @maya's PR here that she is using 'base-lighter' (the string) vs the variable/. Super helpful, thanks! I feel like arriving at a decision soon is fine, I'd rather know exactly what the accepted style is, so we can maintain consistency among contributors. @thisisdano If we want to use tshirt sizing here how would that look?\nperhaps:\ntheme-spacing-2xs\ntheme-spacing-xs\ntheme-spacing-sm\ntheme-spacing-md\ntheme-spacing-lg. I ended up going with the specific grade of gray. I don't actually know when this is relevant, since all the alerts are overriding the background color with their own. I guess it might come into play if someone uses a usa-alert with no modifier?. sure thing!. Is that in lieu of calling margin-top/bottom? Like we want to add all the additional styles (like line-height) to this header as well?. is that 8, in this case?. No, I was hoping you had some insight \ud83d\ude04 \n. the comment was added by marco, for what it's worth. Technically small-screen covers 481px, and our new mobile-lg starts at 480px, so not 100% sure if this is the right sub. my mistake, thanks!. nah, I changed it to use the at-media rule. It looks like medium-screen is defined at 600px, so the closest analog to that seems to be tablet, at 640px. mobile-lg is 480; that seems like a pretty significant difference.. yeah I already removed it, since it was failing my local builds. I just haven't pushed it yet. so I updated the grid classes with what matches the existing look most closely. This doesn't incorporate any of the screen type classes such as desktop or tablet however.. ",
    "justinelam": "@msecret Yeah, I thought it was that issue before as well, but when I tried changing the id properties to be different (I just did that again) it still didn't make a difference. :-/ \nSee: http://stage.vote.org/register-to-vote/alaska/\n. +1\n. ",
    "debracleaver": "i see our favorite issue is back open :)\n. ",
    "zaneriley": "@maya I know you're working with an entirely different scope, but we ran into similar issues with this approach. I think this is the right way to go, but putting it on the element itself might be too greedy.\nOur solution was to un-style ul and ol completely, and then to put these styles on their own modifier class (e.g. .--styled):\n``` scss\nul, ol {\n  // reset, unstyled lists out of the box\n&.--styled {\n    // standardize alignment styles\n  }\n}\n```\nThis keeps from having to add extra code to undo the changes. The obvious caveat is that, it may be tough to work backwards to append class modifiers to elements in an existing codebase.\n. ",
    "fulldecent": "It is done! CDNJS has added this and will maintain it automatically based on the npm.\nPull request coming to update the documentation.\n. This is hosted by CDNJS, it is not an official US government CDN server, so only use this server if you trust it.\nI trust it.\nIt is at:\nhttps://cdnjs.com/libraries/uswds/?\n. Looks good, thank you.. ",
    "philipashlock": "@jpyuda I was referring to web hosted content that is not properly published as web native content. This makes up a large portion of government content on the web and since these aren't \"channels outside of the web\" I don't think that's out of scope is it? \nSorry if I wasn't clear, but everything I was describing in my original description of the issue was referring to web content. \n@Drakenhart yes, this is the workflow I was getting at. Ensuring that any content which will primarily be shared via the web is managed in a toolchain the focuses on a web-native export, but which can also facilitate other mediums as needed. \n. As someone who's a big fan of this effort, but also works on formal standards processes in government, I deeply appreciate this getting some attention. One potential alternative to \"system\" might be \"styleguide\" as in \"U.S. Web Design Styleguide\" - and in the long term I think there's potential for more of this work to serve as a design style guide for other mediums than just traditional websites (see #1102)\n. Personally, I don't agree with the rationale for closing this issue earlier, but as the last update said to table for 6 months and we're coming up on that date I thought it'd be good to discuss re-opening. I think the more outreach and use that happens with the current name will make renaming more difficult and confusing and it seems like there's solid reason to rename. Ultimately this decision should probably come from OMB since they generally own the legally defined use and enforcement of the word in policy and should probably take the responsibility for mitigating how this use made its way into m-17-06 while it conflicts with other uses of the word in m-17-06 as well as more core and long established policies for standards and IT like OMB A-119 and OMB A-130. . One of the main reasons why this is such a hot button issue is that the existing use and understanding of the term \"standards\" in government is quite confusing and ambiguous to begin with. So this isn't just a matter of sowing new confusion, it's adding confusion on top of existing confusion. That is of course further exacerbated by simply referring to this work as \"The Standards.\" \nWhile the folks who focus on web content and web design may be less familiar with these issues, it seems to add unnecessary confusion to something that would already benefit from more clarity. Personally, I think the more appropriate term which is already well established for this community of practice is the U.S. Web Design Styleguide (maintaining the USWDS abbreviation). To the extent that the styleguide incorporates things that are explicitly mandated (like Section 508 accessibility requirements) perhaps that can provide extra weight to convince those who need it. Given how passive the language around the reference to USWDS is in M-17-06, I think it's quite a stretch to treat it as a standard in the form the term more commonly takes in government and I don't think that was OMB's intent. \n\nHere's my broader diatribe on the term \"standards\" in the U.S. Government...\nAmbiguity and miscommunication around the word \"standards\" is not unique to government and many efforts outside of government avoid using the term or only use it with more articulate qualifiers. For example, the W3C which is the main standards body for the specifications that make the web work, refers to their work product as \"recommendations\" rather than \"standards.\" In part, I think this is to connote that you can rarely designate a standard by fiat, something only truly becomes recognized as a standard through broad real-world adoption. This is where the government is unique, it can and does designate things by fiat. In fact many laws and regulations are effectively synonymous with the use of the word \"standard\" in government. When someone says, \"is that thing built to code?\" they're asking if it's built to the standards defined by government in law. \nAs government becomes increasingly digital and data driven, the ambiguity around this term in Federal policy seems to be more problematic. While many folks, including myself, have often pointed to the NTAA and it's authority thru OMB A-119 as the main policy governing standards and participation in standards development with regard to data and digital systems, I don't think the law was really written with this use in mind. Or to the extent that it was, it seems to be more of an afterthought. In practice it doesn't seem to be serving this purpose very well as you can see by relatively little mention of data standards or digital interoperability in the annual reporting for A-119 (Commerce's latest report from 2016 may however be a good counterexample)\nMy understanding of A-119 is that it was primarily meant to focus on standards that govern the build and process around physical things to ensure they meet minimum requirements for how they're produced or perform in terms of quality, safety, reliability, environment, etc. You can consult the current copy of A-119 for the full definition (the copy on Whitehouse.gov seems out of date) and it does include a wide range of descriptors to define a standard. Many of these seem to be framed more around \"physical things\" and there's similar language used to describe NIST's purpose e.g. \"manufacturing technology, quality control, and techniques for ensuring product reliability\" and \"Precise measurements, calibrations, and standards help United States industry and manufacturing concerns compete strongly in world markets.\" \nWhile the original definition in the NTTA is quite short (\"the term `technical standards' means performance-based or design-specific technical specifications and related management systems practices\") the incarnation in A-119's definition as well NIST's charter does include a little language that's more explicitly applicable to data and digital systems, but they're still short and brief compared to all the focus on those more physical things. In A-119 it's \"formats for information and communication exchange\" and in 15 U.S. Code \u00a7 272 it's \"develop and test standard interfaces, communication protocols, and data structures for computer and related telecommunications systems;\" In practice the main activities I seem to be aware of that fall into this category are things that also have more specific mandates under this like NIST's role in ensuring minimum standards for cybersecurity or digital infrastructure for voting systems whereas broader work for data standards often tends to come out of non-NIST efforts, e.g. NIEM, or through specific mandates, e.g. the DATA Act and the DAIMS, M-13-13 and data.json, M-16-21 and code.json, etc. \nIt turns out that OMB A-130 does give the Department of Commerce (NIST's parent) more emphasis on having government-wide responsibilities here and GSA is also named as being a partner. Although that authority still seems to be derived from the NIST Act and A-119. From Circular No. A-130, Part 6: \n\nThe Secretary of Commerce shall: Identify needs for standardization of telecommunications and information processing technology, and develop standards, in consultation with the Secretary of Defense and the Administrator of General Services, to ensure efficient application of such technology;\n\nA-130 also puts emphasis on \"open data standards\" but I'm not aware of much guidance or definition to support those roles and terms. For interoperability between digital systems most developed countries have something like a \"National Interoperability Framework\" but I'm not aware of equivalent guidance in the U.S. Government. \nAs has been already mentioned in comments here, it seems like it would be better to define the use of a standard in terms of what goal(s) standardization achieves rather than simply use the types of specifications or processes that define the context where standardization is applicable or achieved. In the case of A-119 it seems like the main purpose is \"conformity assessment\" - to be able to have an apples-to-apples comparison to ensure something meets a minimum set of requirements. This is different from the purpose of most standards in a digital context, or at least it's a much more limited scope of purpose. Here's how it's defined in A-119 \n\nWhat is Conformity Assessment?\n\"Conformity assessment\" is a demonstration, whether directly or indirectly, that specified requirements relating to a product, process, system, person, or body are fulfilled. Conformity assessment includes sampling and testing, inspection, supplier\u2019s declaration of conformity, certification, and management system assessment and registration. Conformity assessment also includes accreditation of the competence of those activities.\n\nWe should put more thought into the use of standardization or \"conformity\" for multiple purposes beyond that type of assessment. I started to list some examples below, but some of these will surely overlap or serve as foundations for the other. \n\nConformity to ensure mutual understanding (definition of words, fundamental units of measure)\nConformity to ensure minimum requirements - enabling conformity assessment to ensure something meets a minimum requirement or best practice (e.g. standards for safety or environmental regulations)\nConformity to ensure aggregate harmonization and comparative analysis\nConformity to ensure functional interoperability (or modular interchangeable parts)\nConformity to ensure accessibility and expected user experience conventions\nConformity to ensure consistent brand identity and voice\n\nOn a related note, I've been looking for an anatomy of digital and data standards that break it down into the multiple layers of standardization. I started to sketch that out in this comment. . I appreciate you setting expectations and I also think it's reasonable that this might not get sorted out until January or later, but there is some dissonance in emphasizing the discussion out in the open while signaling uncertainty about actually being responsive to that discussion. That same dissonance parallels the association with the main federal standards policy which is largely focused on working with voluntary consensus standards bodies. This means working with outside stakeholder groups in the public including private industry rather than defining standards unilaterally or unnecessarily creating government specific standards. Even if the main folks who author the USWDS think they're satisfying this by incorporating best practices already established outside government, that doesn't seem like a genuine way to incorporate input from the relevant stakeholder groups. \nHowever, in this regard I think the USWDS use case further helps convey why the current terminology and policy for standards in government is so incomplete and subject to confusion. Much like I tried to break down the different purposes of standards in my earlier comment, I would argue that there are primarily three distinct types of standardization that the USWDS are meant to support: 1) accessibility 2) usability 3) identity. \nOf these three only one of them, accessibility, really fits under the main definition for standards in the federal government. In the case of accessibility, there is a mandated regulation around it (Section 508) setting minimum requirements and there are relevant voluntary consensus standards bodies we should both defer to and where we should have an active voice as outlined in A-119 (e.g. the W3C and Web Content Accessibility Guidelines). \nStandardized design conventions and best practices for usability tend to be more informal and organic and rarely have a standards body around them, but clear conventions and best practices are still easy to identify and we should adopt them where they clearly add value. For the web this might include avoiding popups or using hamburger icons for menus. Examples of these types of usability \"standards\" out in the physical world include things like orange coffeepots to denote decaf coffee or the arrow next to the gas gauge helping you know which side of your rental car the gas tank is on.\nThe idea of a standardized identity or styleguide (including typography or even logos) is probably the most at odds with the principles of A-119, because by definition it is meant to be specific to the federal government. However, I think this is one of the main goals provided by the USWDS. \nThere can be some overlap between these, e.g. some standardized usability design conventions are also intertwined with standardized \"look and feel\" identity standards. For example, the iOS Human Interface Guidelines or Material Design for Android.\nEven if there is some overlap between these, I hope it illustrates all the many different kinds of standards we might be talking about when referring to something like the USWDS. While I'm strongly in favor of removing the term \"standards\" from the name of USWDS, I think the more important principle is that we should always be extra articulate when talking about standards in government and when we hear someone else talking about standards in government, we should never assume they're talking about the same thing we are. This is much like the Robustness Principle, one of the fundamental concepts that underlies the technical protocol standards that make the internet work: \"be conservative in what you do, be liberal in what you accept from others.\" \nSince we have so much miscommunication around the word \"standard\" we should put extra effort into being explicit when we say it and be extra unassuming when we hear others say it. This might mean always using the word with adjectives before it (e.g. \"mandatory accessibility standards\") or only using it as an adjective (e.g. \"standardized accessibility requirements\"). ",
    "hursey013": "When I was poking around the standards yesterday, I made the same mistake of adding some of those color classes to elements thinking that they were in the actual stylesheets.  I could see those being beneficial if someone wanted to use the compiled version or did not have the ability to use SCSS.\n. @maya @jpyuda - It's sort of buried in the NIST documentation, but they do specific in 5.1.1.1 that the password should be at least eight characters long.  Some additional guidance NIST provides:\n- SHALL be minimum of 8 characters. Regardless of single or two-factor\n- SHOULD (with heavy leaning to SHALL) be:\n  - Any allowable unicode character\n  - 40 characters or more\n  - No composition rules\n  - Won\u2019t expire\n  - Dictionary rules\ncc @brendansudol \n. @line47 It looks like updating the transition property of .usa-overlayto only target opacity rather than all might fix the issue. \nPreview: https://federalist-proxy.app.cloud.gov/preview/18f/federalist-uswds-template/bh-overlay-fix/\nBranch: https://github.com/18F/federalist-uswds-template/commit/f6ebe6c32b202171453d567e80e7c4564050b177\n. Awesome, I'll open a PR in this repo so we it can hopefully be fixed upstream.. @thisisdano I noticed the compiled versions of the stylesheets in /dist/css have a lot of comments in them, and not necessarily in a way that makes sense. dist/css/uswds-utilities.css has 1600+ lines of comments at the top of the file but I'm thinking we are probably safe to just remove them since they make more sense contextually in the Sass files, thoughts?. @thisisdano Added a commit to update the paths to a couple of the project sass files in _required.css to appease CircleCI. Yeah I had this same thought - we could offer the text of this banner in json format and host it somewhere so that folks cant import that. If they happen to be using Jekyll they could use something like https://github.com/18F/jekyll-get to pull in the same json file too. Lastly, again for the Jekyll crowd, if they happen to be using the uswds-jekyll theme, they would get that update automatically when they updated the theme version.\nAre there any other aspect of the site besides that banner that would need this functionality?. It sort of sounds like from https://github.com/uswds/uswds/issues/1738 that it's an open issue whether or not to include that detail text at all, which I would tend to agree with. Are you aware of any further decisions to that end?. Hi @arichiv-usds, just to echo what @maya mentioned above - the configuration files in this repo are used primarily to demonstrate components in our component library.\nWith that said, it looks like you are using https://github.com/18F/uswds-jekyll though, and this pull request make a lot of sense in that context - would you be interested in opening up a PR in that repo?. I think we may also want to update our documentation and default HTML in the footer component to change the link from # to #main-content so that it is more transparent on what the intended functionality is - what do you think @maya?. @maya I took another pass, let me know if it's \ud83d\udc4d . @maya Oops, there now \ud83d\ude2c . Unfortunately it looks like both $max-width, $border-box-sizing, and the outer-container mixin are removed in later versions so I don't think we can count on any of those. Is the plan to update Neat to 2.0 in the near future? Because if that is the case I think this issue is larger than duplicate code.\nI agree a new folder is probably overkill to set one variable, I'll refactor it as you suggested.. @joshbruce are you using Sass to compile your stylesheets?. Nevermind... just actually read your issue and see that you are referencing https://designsystem.digital.gov\nLooks like this is related to https://github.com/uswds/uswds-site/issues/523. @thisisdano think I tracked it down here https://github.com/uswds/uswds/pull/2430. Thanks for the contribution @danielnaab! I took a quick look at https://github.com/maoberlehner/node-sass-magic-importer and couldn't find any details specific to using the sass and style keys within package.json - could you point me towards more information about how those work, or maybe an example use case?. Interesting... yeah I am not sure, I was just guessing that was it, I really don't see anything else wrong with that particular link. Really strange.. Ah, that makes sense. Closing this PR.. My only other thought would be to represent the opacity as a percentage, as in opacity-30 vs opacity-03. For some reason opacity-100 is more clear to me the element is 100% opacity vs opacity-1. Purely personal preference though.. Only alternative I can think of would be input-label-text to be slightly more descriptive.. This is still accurate isn't it?. Yeah, I see what you're saying, I guess part of the confusion is that later on in the readme, where we describe using Sass it's specifically in reference to it being brought in by npm and the code residing in node_modules.. I know we explicitly recommend using Source Sans Pro and Merriweather now - how do Roboto Mono and United Sans work into that recommendation? Are these just to extend the number of available options or are there specific instances when these new font families should be chosen? (Sorry if this has already been covered elsewhere).. Looks like the if and elseif can be combined into one statement here since they are returning the same value. \n@if unit($value) == 'px' or unit($value) == 'xl' or unit($value) == 'xs' {\nMight be able to use index also (not tested):\n@if index(('px', 'xl', 'xs'), unit($value)) {. Are there any drawbacks to quoting all px values?. ",
    "Icemanbeta": "Hey @maya, took a dive into why I went with that magic number and seeing if I can get a more automated number. Can you take a look the following screenshots along with states (These were taken from the live site so unless mentioned, it wasn't changed through console):\n\ncss\nline-height: 1.5;\n\ncss\nline-height: 0.8;\nvertical-align: 0.2em;\nFor example, if you take out the 2 styles above (obviously defaulting to defaulting position we end up with this:\n\nThen I decided to look into how that outer ring was achieved and if there\u2019s was anyway we can get the \u201ccorrect\u201d height calculation so positioning was accurate. Couldn\u2019t really find anything to why the position is thrown off because padding or border wasn\u2019t used at all.\nTHEN, I found out that you guys used box-shadow: 0 0 0 2px #ffffff, 0 0 0 4px #0071bc;. I don\u2019t think it\u2019s normal for box-shadow directly affect element position (maybe just for pseudo elements, I didn\u2019t test it). But if I set box-shadow: none !important; and line-height: 1; so that we can sync up the line height with the label, here\u2019s what happens:\n\nSo I think the 1px magic value isn\u2019t quite so magic (although it was trial and error initially), it turns out, I got lucky.\nWanted to point out that it looks like it might not be perfect still but that\u2019s probably because you\u2019re trying to vertically center an element whose height is even where the parent height is an odd number by browser calculation.\n. ",
    "PeterDaveHello": "No problem @maya \n. @Haroenv try to optimize in every build may waste time, by lossless compression, the optimized images can't be smaller by the same compression, if the origin build process won't touch the images, just copy dist from src, then pre-compression can provide better efficiency, can currently, zopflipng may be the optimizer which has the most highest compression ratio, which spends a long time to compress a png image, so I assume the optimized result of gulp-imageoptim will be larger than the result in this PR.\n. The problem of zopfli is that it needs a very long time to compress a image, I'm not sure if you would like to wait for hours in each build just because of the image optimization, if the images are not changed so often, there is no need to do that.\n. hmmm ... seems this was overwritten by d4c3445c142088de77e48c96bae35f88be249d10 ?\n. ",
    "Haroenv": "wouldn't it be better to use something like gulp-imageoptim instead?\n. ",
    "OpenGlobe": ":+1: \n. ",
    "ducklet": "cc @edwelker \n. Hi @jbrucegsa,\nThe issue is actually not that it will be read by a screen reader, but that I can't use it as intended because the display: none !important hides any element it's applied to from sighted users as well.  \nThanks for looking into it. \n. @joshbruce I created https://github.com/18F/web-design-standards/pull/1153 to restore the functionality of aria-hidden, which should remain in place.  I believe it makes sense to add the display: none !important rule to the <div> when the <button>'s aria-expanded state is \"false\", but I don't know javascript.  When you re-open/restore this PR would you please be so kind as to add the appropriate code?  I believe this would be the last step in resolving #1120.   \nThanks, and of course kit with any comments/questions, I hope I've thought of everything here :)\n. @joshbruce looks good to me :) thank you!!\n. @maya @joshbruce sorry I've been mia; I'm starting to feel like the wheels came off the wagon a bit with the aria-hidden/display none rules...  why are we tying display: none into aria-hidden at all?  Having both is redundant.  Imho it would make more sense to simply create a class with rule display: none.  \nI'm also a bit confused by the request to use class name accessibly-hidden.  Maybe there's another logic that's escaping me, but content with display: none is inherently not accessible, to anyone.\nI understand the impetus behind not simply removing the display: none rule from aria-hidden, but I fear we may be dragging this out and adding unnecessary complexity to the accordion fix.  Could we consider just a \"use this to hide something until it's exposed\" class, be it specific to the accordion or more versatile for other potential future usages?  \nThanks for your consideration and esp @joshbruce your great work and persistence in making this fix happen!  I am able to override the rule for the time being but putting !important in our code to override !important feels icky :)\n. @maya this is merged but just something to think about moving forward, the problem with the abstract concepts we're now discussing is that bottom line, aria-hidden would never be used with display: none.  WebAim cautions that mis-using ARIA roles can be as bad or worse than not using them, and ignoring the fundamentals breeds bad practices.  I don't mean to harp but I do feel strongly that attaching our own interests to something like this is a slippery slope.\n. @maya my fault, five-sixths is working properly, thanks!\n. ",
    "scottaohara": "+1 for this issue.\naria-hidden is quite useful to hide content from assistive technology, but not visually (as ducket points out). \nmaybe this should be replaced with the native [hidden] attribute, as that has some older cross browser issues where a display: none!important would be useful.\n. Agreed with all the above. \nthere are also additional keyboard controls that should be implemented here, but I didn't this single issue to balloon out of control.\n. hi @maya \nI was aware of [hidden] not being fully supported by itself until IE11, as I had mentioned in my original comment that the display: none !important; rule would be better set to the hidden attribute, as the following:\ncss\n[hidden] { \n  display: none; \n}\nmakes the attribute behave as expected in all browsers, and thus could have been a native solution for the aria-hidden attribute, without needing to define a new .display-none class.\nRegardless, I've been following along with the updates in both of the related threads, and it looks like a solution has been decided upon.  I just didn't want to leave it out there that I was suggesting a fix that I hadn't actually thought through :)\n. ",
    "yozlet": "@msecret @maya We don't have to switch over exactly with this PR; that's why it specifies two of each branches, so it starts working before the switch and continues after. I also don't know the best way to do the redirect, but my initial guess is that we\n1. merge this, and start auto-deploying\n2. branch master & staging off the existing two branches\n3. remove the 18f-pages branches from the CircleCI config, so it won't push those branches to the new site\n4. commit the redirect pages to the 18f-pages branches, so that they get pushed to the old site\nDoes that make sense?\n. Also, I switched to Circle because my experiences with it have always been better than with Travis, especially when dealing with caching and debugging the build process. (Circle lets you SSH into the build as it's happening to debug it, if needed)\n. Makes sense to me! (But I'll leave it to @msecret to do the final review. I'm just trying to get more experience with WDS PRs.)\n. Hey, thanks for this!\nI'll leave it to my colleagues to review the rest of the commit, but could you revert the inclusion of Gemfile.lock? Those gems are due for an update but we should do that in a separate commit in case it breaks something.\n. @joshbruce I believe git checkout 35bc35b Gemfile.lock will revert the file to the previous version, but it'll need another commit. It's weird that bundle install didn't work, though! Can you try it again after doing the revert? (And whether it works or not, I'd much prefer we leave Gemfile.lock as the old version for this PR, but we can update it in another one.)\n. @joshbruce: Thank you! Nearly done - go_script needs to come out too (it was pulled out in the main repo 5 days ago). Sorry, it's a moving target!\n. @juliaelman I realised that my branch explanation is wrong, as it talks about merging straight from staging to master rather than going via a numbered release branch. Should I leave that fix to you?\n. @juliaelman gave a \ud83d\udc4d  over Slack, so merging. Thanks everyone!\n. Looks great! :shipit: once the upstream PR is merged.\n. @juliaelman Is that .18f-pages.yml file unused because Pages doesn't need it, or because we're not publishing to Pages any more? If the latter, is removal of the file going to unpublish the site from Pages? If so, we may want to hold off until we have the new 18f-pages branches in place with the redirects.\n. #1195 is now merged, so merging this too! Thanks @juliaelman!\n. The new web-design-standards-docs repo is now auto-deploying to https://wds-docs.apps.cloud.gov/ (master branch) and https://wds-docs-staging.apps.cloud.gov/ (staging branch). Right now we're all just working straight into master but before launch we'll resume the PR -> staging -> master workflow.\n. The Standards package currently uses Mocha and Should.js for tests. Unfortunately it appears that neither is fully supported in IE9. We're thinking we may need to switch to Chai for assertions since that maintains IE9 compatibility, but we're not going there yet. Will comment more here as we progress.\n. Ack, looks like our unit tests currently rely on jQuery too! But we're going to keep jQuery as a devDependency for the moment; perhaps removing it from the tests can be a separate task.\n. @juliaelman I think I've fixed everything - can you give it another look? Thank you!\n. \ud83d\udc4d  :shipit: \n. LGTM \ud83d\udc4d \n. LGTM! \ud83d\udc4d \n. Remaining work:\n- [x] Make dispatch() accept an array or string list of event types (to replace $(el).on('click touchstart' ...))\n- [ ] Add integration test for headers\nQuestion: Does toggleClass() in mobile.js need to be IE8 compatible? Right now it won't work but it won't error out either. And given that this code presumably is only for mobile, I'm inclined to leave it.\n. OK, dispatch() is fixed, and we'll leave the integration test for a separate PR.\n. @maya JS refactor is merged!\n. \ud83d\udea2 \ud83d\udea2 :shipit: \n. Yay! \ud83d\udc4d \n. \ud83d\udc4d \n. \ud83d\udc4d \ud83c\udf89 :shipit: \n. Argh, yes, what @shawnbot said. @maya, can you double-check? Because at the very least, the banner click shouldn't work (though I'll fix it in another commit)\n. OK, should be fixed. @maya, can you give it another go?\n. @shawnbot, can you give it one more look?\n. Done, and thank you for the nitpicking! (And if you have any pointers for good hyphenation practice, I'm keen to learn.)\n. Oops, well spotted @maya! Will fix.\n. Double oops, you already did. Thank you!\n. There for readability & obviousness, because (in my experience) people often miss the exclamation mark in (!something).\nThat said, this is the only usage of that method. I was considering naming it searchFormDoesNotContain() but that seemed rather unwieldy. What do you think?\n. No idea. I haven't changed the events that were there before, just rearranged them. It's very possible, but I don't have enough experience with event types and our target behaviours to make that decision. \ud83d\ude1e \n. My attitude so far has been to leave potential util functions in their existing files if they're only used in that place. Once more than one component needs them, I pull them out (like addClass & removeClass elsewhere in this PR).\n. OK, after discussion with people who understand this stuff, we've settled on just click.\n. I think we're avoiding use of Event.preventDefault() because it's not fully supported in older IEs, but having said that, I'm not entirely sure of the story. I've tended to switch them to return false; (at the end of the function) even though that's not quite the same thing.\nI'll look into it and see if I can get a more solid tactic here.\n. OK, here's how to avoid breakage on IE8 (which I think is worthwhile):\n(event.preventDefault) ? event.preventDefault() : event.returnValue = false;\n... which can be anywhere in the function, if we do want preventDefault() behaviour.\n. I didn't catch this earlier, but banner.js should really be exporting an initialisation function which this initialiser code calls, similar to what the Accordion, Footer and other components do. (Apart from header.js, which we should probably fix as well. Sorry, I didn't think about this properly before!)\n. OK, given Shawn's comment, I guess we do want this behaviour. @maya, can you add the line above to the top of the click function?\n. The new options arg looks potentially useful, but what's using it?\n. If it's not being used then I strongly recommend taking it out. Unused code infrastructure is great for confusing people, but not much else. Especially this kind of change, which is very easy to add when we need it.\n. Ouch, good catch, thanks!\n. Great idea, thank you!\n. Good catch!\n. Doh! Yes, thank you.\n. ",
    "dalfaro1": "Thanks Julia!\n\nFrom: Julia Elman notifications@github.com\nSent: Monday, May 9, 2016 10:33:24 AM\nTo: 18F/web-design-standards\nCc: Dyenell Alfaro; Mention\nSubject: Re: [18F/web-design-standards] Responsive Main Menu (horizontal and with children) (#1149)\nHi @dalfaro1https://github.com/dalfaro1 and thank you for your questions!\n1) Please see our Product Roadmaphttps://github.com/18F/web-design-standards/wiki/Product-Roadmap for future development.\n2) The code base for the left navigation of standards.usa.gov can be found here: https://github.com/18F/web-design-standards/blob/18f-pages-staging/docs/_includes/sidenav.html\n\nYou are receiving this because you were mentioned.\nReply to this email directly or view it on GitHubhttps://github.com/18F/web-design-standards/issues/1149#issuecomment-217881464\n. Responsive Left Nav code please? Thanks.\n\nFrom: Julia Elman notifications@github.com\nSent: Monday, May 9, 2016 10:33:24 AM\nTo: 18F/web-design-standards\nCc: Dyenell Alfaro; Mention\nSubject: Re: [18F/web-design-standards] Responsive Main Menu (horizontal and with children) (#1149)\nHi @dalfaro1https://github.com/dalfaro1 and thank you for your questions!\n1) Please see our Product Roadmaphttps://github.com/18F/web-design-standards/wiki/Product-Roadmap for future development.\n2) The code base for the left navigation of standards.usa.gov can be found here: https://github.com/18F/web-design-standards/blob/18f-pages-staging/docs/_includes/sidenav.html\n\nYou are receiving this because you were mentioned.\nReply to this email directly or view it on GitHubhttps://github.com/18F/web-design-standards/issues/1149#issuecomment-217881464\n. Thanks Julia! You guys rock so keep it up!\n\nFrom: Julia Elman notifications@github.com\nSent: Tuesday, May 10, 2016 9:24:53 AM\nTo: 18F/web-design-standards\nCc: Dyenell Alfaro; Mention\nSubject: Re: [18F/web-design-standards] Responsive left nav code (#1154)\nHello @dalfaro1https://github.com/dalfaro1!\nWe currently do not have a specific UI component for a left side nav. However, please feel free to checkout our implementation of the left side nav on the website. You can find the code that makes this side nav work in the following locations:\n-   https://github.com/18F/web-design-standards/blob/18f-pages-staging/docs/_includes/sidenav.html\n-   https://github.com/18F/web-design-standards/blob/18f-pages-staging/docs/assets/js/styleguide.js\n\nYou are receiving this because you were mentioned.\nReply to this email directly or view it on GitHubhttps://github.com/18F/web-design-standards/issues/1154#issuecomment-218155824\n. I tried separating the href inside the label.\nHover/clickable link still has a bug. FYI.\nThanks.\n. ",
    "pjux-old": "+1 for horizontal nav. This is a missing piece of the standards and precludes its adoption for my needs.\n. ",
    "jsimon727": "Hey, I am going to work on this.\n. ",
    "sublimemarch": "Hey there, I'm going to try tackling this issue!\n. Nevermind, was asked to leave this for core team. \ud83d\udc4d \n. ",
    "lisli": "I'm going to take a look at this one today at write/speak/code!\n. ",
    "cella": "Hey, I'm at Write/Speak/Code w/ Fureigh and going to check into this one during our coding session :)\n. ",
    "whmii": "@shawnbot @Drakenhart If you are interested in using Neat 2.0 I'd be happy to assist. Since it is based upon floats, the coverage remains quite good, even with the use of calc. http://caniuse.com/#feat=calc\nThe predominant issues with IE 9 and calc pertain to box-shadow which is not used.\n\nIE 9 - 11 don't render box-shadow when calc() is used for any of the values.\n. Minor note here. Neat has release 3.0 but the changes are minimal and will be a non-breaking change for almost all users. more here https://github.com/thoughtbot/neat/compare/v2.1.0...v3.0.0. \n",
    "terminaltraces": "I can submit a pull request for this!\n. ",
    "antislice": "That's more detailed than I had in mind, but I would know what to check for for ruby & the command-line tools. And I was raising the issue to help out less experienced people. Otherwise looks good.\nInstalling the uswds npm package runs a bundle install during npm install, but it doesn't hurt to list it separately.\n. Yeah, I think it'd be worth it. If you're new to this kind of thing, the confirmation steps will be valuable to you, and if you're experienced you'll be more interested in getting going.\n. ",
    "willcbaker": "all three states are difficult to discern, definitely for secondary(red), primary (blue) is not as difficult but also not easy.\nI personally notice a change HAS occurred, but I cannot determine which state I am in by purely looking at the screen (aka. if someone else where pressing the button and I was simply observing)\n. ",
    "nicoleslaw": "Sorry about that\u2014should be fixed. (I did the PR on the web and I think it timed out without me realizing.)\n. Sure! I believe I did this before the last revision, maybe it got reverted. Will resubmit.\n. ",
    "egrivel": "Confirming the fix, thanks!\n. ",
    "saracope": "Thank you @rogeruiz!!\n. Thanks for the contribution, @David-Way! Reviewing this today.. Code Climate will only run on the default branch.  It sounds like it may not be getting fully approved to use. \nI will look at codecov.io as was suggested.. Fixes #2849. No, one more PR to do on the develop branch.. Current examples: \n- Compiling CSS with node-sass\n- Bundling JavaScript with browserify and webpack\n- Automating CSS and JS generation with the Grunt and Gulp task runners. @thisisdano It looks like you may be on the wrong branch? You linked to dw-grid-important. But the change is on https://federalist-proxy.app.cloud.gov/preview/uswds/uswds/sg-header-arrow/components/preview/header--default.html. I put together a Docker image for testing, but it could also help solve this problem. If that seems interesting, I can run it by the devops group to get more eyes on and publish it to the repo.. OH, that looks real nice!. Snyk checks every PR for new vulnerabilities.\nI just updated for these specific vulnerabilities. If you pull the latest version of 2.0 it should resolve this.. ",
    "jameshupp": "Working on content here. https://docs.google.com/document/d/1zMNdp5UqJlMUWmDOboirop2kBMg5U50cOfSOajA_Vt8/edit#heading=h.9jgomg873wfw\n. @ericadeahl: Yeah, this looks awesome! I don't think the amount of text is a problem, since it's only visible to someone who's requested it.\n. Just getting myself up to speed: at what point should I consider a task like this complete? When it's implemented or into a branch, or when the copy itself is signed off?\n. @maya Working on some copy for these here. https://docs.google.com/document/d/1pX75cSlmr0v9b3yfrnTMcJ9cJeukvMYxSWUw8qhdh24/edit\n@kategarklavs I don't like the \"purpose of this banner\" copy, but it's also based on a sentiment I have and some stuff I'm seeing that research doesn't back up. I'd love your take.\nOn the second bit, I think it's about the right stuff (but always happy to get some copy edits; it's a bit long). I'll fold that into the README and/or \"getting started\" as I work through them. I agree it doesn't really need to be in this copy.\nWhen we're good on what to say, we can fold the first one into the header docs pretty easily. Not long, should be able to be quick about it.\n. @kategarklavs and I have divided up the list of existing components (or those that are just about to), including sub-components (for example, specific issues related to color). We're going to provide the copy Kate describes in the list above, but we need help from the rest of the team. For each component we need an SME to perform two roles:\n- provide the \"further reading\" or \"additional resources\" content\n- draft any copy that's totally absent from existing copy (this can be super rough)\nList of who's doing which components is here:\nhttps://docs.google.com/spreadsheets/d/1eFts437UQeTRCz-CsrdH6uifewwTxQwZSLiJqnFxRpg/edit#gid=0\n. So this is in pursuit of the first checkbox about where it makes sense on the site. I have a couple reactions.\n1. It's making me think bigger (which isn't necessarily a good thing). Current top nav is overview of ui components, overview of getting started, design principles, and overview of about our work. First one functions as the home page. Emphasizing customizability doesn't fit neatly there in a way that draws eyeballs. The principles (see below) do talk about this, but someone who shows up trying to examine or use a component isn't necessarily going to understand that. This may not be the goal, but I wonder if designers and developers are more likely to go looking for the design principles (and to understand what they mean in implementation) than higher-level decision makers. Basically: I'm not sure there a good place to emphasize this given our current menu and order. If we reordered, this wouldn't be that hard; if we added a true home page (or something about templates, for example) we might have a better place for it. But I don't really want an answer dependent on that.\n2. The simplest version of this \u2014 a note that the patterns are customizable \u2014 already exists on design principles under \"Design for flexibility.\" So one thought is we could just do a better job of writing cross-linking content.\n3. I also wonder if someone would go looking for this on about our work. The content of that section seems to assume people understand \"our work\" to refer to the process of building and releasing, not the product of the standards themselves. I'm not sure that's true.\nAll of which is to say, I think we probably need to emphasize the customizability on the first page people will see, whichever that is/those are. It seems to me a much simpler version of the principles belongs front and center: easy, accessible, flexible, and tested. That's what the components are.\nBut there are probably multiple ways to get that to front and center.\n. @kategarklavs Pretty sure this is closable now, yeah?\n. Are the templates going to be rendered from HTML, or are they images? And if they're images, are they only going to be of a single state? Thinking about things like whether we need sample copy in pull-down menus.\n. Working on copy in this doc. Noted here for team visibility. https://docs.google.com/document/d/11jrn9KAVwbGv2EQ3MmZRn2F9Ia_u85PQAYP-59QdJZE/edit#\n. Only one comment as-is: the style guide section has a justification for the CSS portion of the style guide but none for the JS portion. Options:\n- remove the CSS-specific references from the first sentence after ###CSS and put it before that header, since the idea of consistent code across 18F seems valuable regardless of where it's happening.\n- add a justification after ###JS that explains why a JS style guide is important\n- do neither, because what people pay attention to about CSS and JS are qualitatively different enough\nIf it's the first bullet, I'm happy to take a shot at it myself.\nNothing else stands out to me that's an issue for this file on its own. I'm inclined to host the license info in either just this file or just the README, but I'm still working through the README and am not totally sure which yet. Might be a few more things at that point, but I'll include those in my own PR.\n. @juliaelman Looks perfect then!\n@brittag's recommendation sounds perfect to me on licensing, unless @awfrancisco can shed light on a need to do otherwise. I'm going to make that the plan for the README and will PR into this branch to account for it both there and in CONTRIBUTING.\n. Okay I'll follow up on that point, but in the meantime, this particular PR shouldn't be held up for that. It doesn't really implicate the issue.\n. Okay I've made all edits per this conversation. Sadly, now we have merge conflicts.\n. One thought on this: do we need to track GH issues in the comms log? I think the other interaction types are definitely helpful, but a lot of our response to actionable prompts from other communication is to create or update issues. They end up right here once we've synthesized them. If someone files an issue it stays until we close it. So I guess I'm thinking we don't need to track that elsewhere alongside other comms, since this is where they come together in the end.\n. Yeah, that's a good point. I was thinking of the log as a resource we could use to build better work, which we track in issues anyway. Inquiries that don't need work aren't really the important ones to capture, even though we will capture them. But since we want to know where to prioritize better communication, including Github, it's probably valuable to keep them all together. Over the last two months we have, I think, eleven issues opened by people who aren't team members, so it's not overwhelming to track them.\nI think I'm on team keep Github now!\n. One more thing I've been doing today: testing the new log with any comms since September 1. I've noticed a couple things that needed updating, and I'm taking care of those, but I think it's basically good to go.\n. <3 Google sheets, so that's my vote, as well. I'm playing around with this today to see if I can't start down that road.\n. Yesterday @kategarklavs and I discussed our initial attempt at this, which seemed to involve too many things. Not enough time available to team members, and trying to put our arms around too much stuff to improve things quickly. So we narrowed our focus, and our current suggestion is:\n- Update the comms log to capture more of our communications than one-to-one emails. This will let us synthesize concerns more clearly.\n- Add questions to the interview guide about some of the specific communications channels that concern us so we have those inputs alongside the rest.\nThe types of issues we are most interested in are those related to comprehensibility, ease of getting started, and ease of use\u2014same as the rest of the project\u2014so setting up a more complex tracking system probably doesn't make a lot of sense here. We can always come back for quantitative questions later.\nDoes this make sense?\n. lgtm!\n. We've got a good number of talking points and tweets under \"Talking points\" in this doc. I'm not sure I'd call it exhaustive.\nhttps://docs.google.com/document/d/1_KYKjygTxjiCOWYYBIqLSITAjjR3Qlca1iFhrNzfzUY/edit#heading=h.dwihtdtgpznt\nEmail responses actually turned out to be pretty tough to draft in advance of a specific need. They'd be composed of various talking points. Might be easier to focus on things we want to emphasize to different types of email senders or listservs instead?\n. One thing worth considering about \"system\" is how it affects a different communication issue: that the USWDS components are not all or nothing. If people think \"standards\" is getting imposed on them, this may not be any better in that regard. But research questions about how people interpret these names (and others like \"styleguide\") could be helpful.\n. Ah, missed this one in my last commit. Will update momentarily.\n. Within the repo, though, sticking to full name or \"Standards\" seems exactly right. We did just use \"Draft Standards\" in some copy elsewhere. I could see all three of those being usable, depending on someone's level of context. The repo, though, is 100% contextualized already.\n. ",
    "jasonkaedingICE": "@shawnbot most of the suggestion (aside from breadcrumbs) is already in the v1 header, though the naming convention may still be applicable.. @shawnbot good question. I guess since you guys also have a \"side nav\" it does get a bit full of options.  As I'm not really a UX person, I don't know if it would be good practice to have all three present at one time.  So, perhaps if such a conclusion is reached, then maybe you do have a \"primary\" and \"secondary\" and then there is another class to dictate where it's located on large screens?  I don't use side nav so I haven't seen how it looks in the mobile view, but primary/secondary end up essentially looking like a side nav in the mobile mode.. @shawnbot You seem to have an extra form tag outside of the accordion, which is not present in the example I provided.  Perhaps that is the difference?. That looks more accurate, although I'm not seeing the behavior.  Not sure if I should be or not?  There is one minor difference with the accordion being collapsed to begin, whereas you have it expanded initially.  I tried my local test page and changed it to expanded and still see the behavior so I'm sure that's not it.  I do also see the references are to styleguide.css and styleguide.js and not uswds.css and uswds.js, but I assume that was made on purpose?. Yep, that looks like what I'm seeing.. I downloaded the fix and tried it out locally with my example file.  It works.. So why does the CSS have first-child and last-child for usa-grid at all then?. @juliaelman yes, the example you cited is more closely related to what we had in our page where I saw this behavior. Thanks!. Thanks @shawnbot for the info/suggestion.  Had to tweak the sizing, but otherwise it works well.. @shawnbot one thing we did end up finding is that this solution fails 508 because the image doesn't have alt text. I had to do an ugly solution which basically did the alt text as a usa-sr-only element to get into compliance. . I did try that out, and it does seem to work.  I'll have our 508 tester take a look tomorrow to confirm.\nIt would have been helpful if a mention of tabindex=\"-1\" was also present in the accessibility section of the header component page. Were it so, I probably would have already attempted it, not knowing until now about this other accessibility guide.  Also, observing the failure on the USWDS site itself didn't give me a good example to emulate... ;). An additional note: I did some further testing, and it looks like on some of our pages when we do have explicit tabindex already set up for our content (and skipnav already was working), this change actually breaks those instances. Since this is part of our page template, I think we'll have to strip out tabindex from our pages completely, although for 508 reasons \"natural\" tab ordering should be the right way to go anyway.  . Our 508 tester confirmed that the tabindex=\"-1\" fix is now compliant.  From my perspective, no code changes are required at all after we removed all other tabindex attributes from our application.. @shawnbot I can certainly see the rationale. In our case perhaps it is a bit more nuanced and I figured I'd share in case it is relevant to future design considerations. \nIn our application we have a group of checkboxes representing a \"complete\" package. Some of these items are manually performed and some are automatically performed via system interfaces. We used checked and disabled to communicate the system-derived items. So it actually does communicate useful information in this situation (whether the item is present) but we didn't want to make it seem \"clickable\" in order to not confuse the user.. @nickbristow thanks for the info. We actually have a couple instances of a disabled input communicating info. In this case, we actually enable the checkboxes upon submit because they are part of the submission.  We have another case where we have disabled text fields paired with type=\"hidden\" inputs to pass along the values. I guess in both patterns the values are part of the submission but immutable.\nThis got me thinking, would a label with a for attribute pointing to a hidden input be a way to approach that? I know we had a couple of completely orphaned labels that failed 508 but I wasn't sure how the screen reader would treat this pattern since it's at least linked to something.. @nickbristow our 508 tester just went through with the screen reader as-is (disabled+checked) and she reports that the NVDA screen reader reads \"[label] Unavailable\".  Obviously this is just one screen reader and others may behave differently.  I just figured I'd share. Even so, it isn't reading whether it's checked or not which is part of the meaningful information.. @shawnbot, thanks, those do work.  These aren't described anywhere (from what I can tell) in any \"Getting Started\" guides.  I wasn't sure if this was a conscious choice or not?. @shawnbot can you explain the \"preview\" aspect of the Federalist URLs?  Is that pre-release only and we should always use unpkg.com for production release?  Or will the final prod be available in .gov someday (with CORS, that is)?. Just an update from my side...  We discussed internally way back with our architects and they agreed with the previous justifications.  We're in prod now (yay!) and I would consider this closed.. @maya can the code above be placed in with the date input guidance on standards.usa.gov?  I experienced similar behavior and shouldn't have to hunt all the way down here to find out how to implement error styling.. ",
    "francisrupert": "If the motivation to change to href=\"javascript:void(0);\" is purely to avoid \"jumping to the top of the page\", that can be done via href=\"#some-totally-made-up-text-here\". \nThat won't scroll anywhere since it can\u2019t find an element with id=\"some-totally-made-up-text-here\" (though it does mess your browser history).\n(Probably moot for now as I see #1378 is resolved).\n. @shawnbot,\n\n\"...how people are currently customizing the standards by searching on github and reaching out to those users.\"\n\nRaising hand! As the Principal UXer at USDA-FSA (by way of SAIC), you can see how I'm doing so at https://github.com/USDA-FSA/fsa-style/blob/master/src/stylesheets/_uswds-select.scss\nfsa-style is our starting CSS Framework leaning on your team's awesome work, published as an NPM module and will be documented by the fsa-design-system. Baby steps of our own.\nGeneral Summary:\n1. package.json: Install USWDS.\n2. Grunt:: Copy from node_modules/uswds/src/ to src/stylesheets/lib/uswds/\n3. SASS\n   1. Import select USWDS partials.\n   2. Override / extend variables\n   3. Add in custom core, elements, components, etc.\n. @shawnbot,\nApologies for not paying attention to your mention.\nI am indeed the key maintainer of FSA's fsa-style and fsa-design-system. I recognize this issue has been closed, and you may have moved on to your new gig, so feel free to let me know if there's anything I can do to help or clarify. For that matter, you may refer me to anyone else at 18F that'd be interested in our use and general Design System roadmap.\nAt any rate, here are a few brief points you may find helpful:\n\nAs you've surmised, we are not using USWDS' JS. Our Design System approach is tech-stack-agnostic; focusing on markup and style, paired with guidelines, etc.\nThat said, the refactoring I'm seeing in action may change our thoughts on that. If nothing else, it'll serve as a source of inspiration.\nWe're very narrow about which USWDS assets we use. _uswds-select.scss generally shows which ones we take advantage of, while fsa-style.scss shows the additions/extensions/overrides in play.\nWe're limbo'ing at 0.13.x since 1.0.0 requires Node/NPM at a version the organization is not able to use (and I've no idea when/if that'd change). Generally stuck at something like Node 0.12.x, and in a Windows world to boot. Fun. As a result there's a domino stack of other stuff we can't do. At some point I'll have to figure out how to still use USWDS as it continues to mature, hopefully in a way that may not require our clients to update Node/NPM. . @shawnbot,\n\nThanks for the quick reply. I gave it another try, and yup, USWDS' dependency complaints. Specifically...\nnpm ERR! 404 'frctl/fractal' is not in the npm registry.\nnpm ERR! 404 'lorem/ipsum' is not in the npm registry.\nnpm ERR! 404 'lorem/ipsum' is not in the npm registry.\n...\n...and normally I'd be fine with not receiving some of those since I won't need them. But it completely aborts the npm install of USWDS, resulting in no uswds directory in node_modules. I tried --force and that failed too. I'm hoping there's something I'm missing, or an alternate way. \nThanks again!. @shawnbot,\nI've seen this same thing across many other things I've tried (that require Node 4+) on this gov-issued laptop. \nIt's clear your NVM doesn't truly emulate what we're stuck with, which is Node 0.12.0 / NPM 1.4.13.\nIf it's more appropriate to do so, any further discussion on this topic can be had at https://github.com/USDA-FSA/fsa-style/issues/157. Recommend responsive flexibility, as with any given grid system, e.g...\nhtml\nclass=\"usa-text-size--foo usa-text-size--bar@s usa-text-size--zazz@m\"\nAside: I'm extremely averse to utility styles in markup, but I recognize the wide variety of audiences USWDS caters to will appreciate a convenient way to do so -- and I've been plenty guilty to using them; besides, most grid systems are nothing more than utility classes. There's a valid discussion to be had that utility styles are \"too easy, possibly lazy\" and will be used far too liberally. It can be habit-forming and prevents users from growing their style skillsets, let alone understanding what exactly it is they're doing. At any rate...\n. ",
    "tomberek": "Politespace is still mentioned at: https://standards.usa.gov/form-templates/#02-address-form. ",
    "vjkapur": "And here it is on Maven Central: http://search.maven.org/#search|ga|1|a%3A%22uswds%22\n. ",
    "goldenmeanie": "A note about the Vets.gov progress indicator. We have two things going on. \nThe linked page has what we refer to as a subway map outline of the overall process. Every form has a similar outline starting with preparation that links to eligibility, and highlights required pieces of data to minimize surprises in the form itself. It also talks about what happens after the Veteran submits the form. The subway map is orientation, not navigation or \u201cyou are here\u201d type information. \nThe \u201cyou are here\u201d sense of progress is provided in the application form by a segmented horizontal bar. The segments turn blue (from grey) as you proceed through the chapters of the form.\n\nOur forms are all linear, there is no jumping around. The progress bar has no navigation function.\nOur forms are conditional. The number of screens in a given chapter can vary depending on answers provided. We only show progress by chapter so the number of steps doesn\u2019t jump around. \nOur progress segments do not have labels. We are trying to provide a meaningful marker of proportional progress that works on small screens without taking up too much vertical screen real estate. \nEach screen has a chapter title immediately below the progress bar X of Y Chapter Name to orient the Veteran to the current step without worrying too much about what\u2019s coming up.\nWe have reordered many of our forms to put hard, or high impact, questions early in the form. If there is a show stopper it comes before the Veteran has invested a lot of time. They can save progress and come back later.\nWe have a review step at the end of every form where Veterans can drill into any chapter (accordion) to see each piece of data they entered and make edits inline.\n\nVeteran feedback has been mostly positive. People appreciate the sense of progress and find it genrally understandable. There are occasional questions about steps within a chapter. We use subheads to disambiguate in places where it seems like it will be helpful.. ",
    "lukad03": "@shawnbot Using includePaths for the USWDS only, I'm able to reference functions unique to Bourbon and Neat without needing to install those as well. The main issue then is the naming of the all file in the USWDS node package. Currently I'm using includePaths and creating a vendor directory with a _uswds.scss file in it dedicated to importing all. Though not ideal, this helps avoid import loops on the generically named all file and provides context for importing the USWDS.\n. ",
    "strarsis": "Could this be helpful?: https://github.com/strarsis/sass-include-paths\n. ",
    "dhvidding": "Would like to second this as an issue that needs to be addressed. Single Page Application frameworks (Angular, Backbone) do not work since they are always dynamcially adding them to the dom (or even if you need to somehow change the DOM with js on a server delivered page). Also, if you are importing the .js as an external vendor script there is no way to re-initalize them. You are forced to rewrite the component logic which may also need to be rewritten if the styles change re-architected.. ",
    "bruffridge": "Need this soon, please! We are working on a project using angular with tight time schedule, and want to use the standards on it.. Thanks @kcjonesevans and @juliaelman. Using staging instead of master branches of the two repos worked. Everything is working now on Docker. If you ever want to run the docs and standards on Docker check out my Dockerfile and README.\n. Wouldn't I then have to update all the references to uswds.css files to nasa.css?. Basically the same as yours: I've forked both web-design-standards and web-design-standards-docs to make a version of the styleguide with styles slightly tweaked for NASA.. @shawnbot yes, i'm using npm link. that makes sense. I didn't realize the docs had it's own overrides file. I'll probably go with option 1. thanks for the tip!. We'd like a striped row table option as well.\nSomething like this:\nhttps://getbootstrap.com/docs/4.0/content/tables/#striped-rows. Is the left nav supposed to collapse to the bottom of the page on smaller screen sizes where it is hard to access? I like the way the standards documentation has the side nav collapse into the menu button along with the top nav.. I need a sticky top and left nav on my site, so if you want some help implementing this I'm available. I'm using the landing page template. For the life of me I can't figure out why applying position: sticky to the <nav class=\"usa-nav\"> doesn't work. I tried removing styles that might conflict, such as parent heights and overflows, but still doesn't work. I noticed on the standards docs site, the nav is taken out of the header element which works but I'd like to avoid that since it breaks the mobile menu. Any ideas?. Yes, I have top: 0. You can replicate on the standards landing page template. It's not being very sticky.\n\n. The parent <header> is scrolled out by it's sibling <main>. This is just how position: sticky works. So I think the only solution is to remove <nav> from <header> if you want to use position: sticky.\nYou can see this illustrated here:\nhttps://codepen.io/gcyrillus/pen/oxNLBO. Aha, found a solution! Just apply position: sticky and top: -115px (or whatever pixel height your header is minus your navbar) to <header> instead of <nav>. Thank you for considering this. Is there an icon library you use that you can point me to? In case you don't add Flickr, I can it to my fork. We do have an extensive library in Flickr.. Looks like flickr has a b/w version that would work as well, https://www.flickr.com/about/goodies/ . @maya This definitely helps, thanks! I might switch my social media icons to font-awesome for a cleaner look. https://www1.grc.nasa.gov/\n. Duplicate of: https://github.com/18F/web-design-standards/issues/1922. I was just going to open this bug. The biggest issue is the white button text on white background!\nhttps://standards.usa.gov/page-templates/landing/. ",
    "smmckeehan": "We are also experiencing this issue attempting to integrate the standards into a Single-Page Application, do we have an ETA for a fix?. ",
    "carlosvalle": "@maya - another solution will be to add a top margin to the paragraph only if it is the first child in usa-alert-body \n. @maya - it doesn't - the selector only works if 'p' is the first child element of the div ... I created a pull request #1460 - please let me know if you find any issues \n. \n. @juliaelman - comments removed. $usa-alerts variable for is giving me that specific lint error - I just feel that keeping this format is much more readable\n. ",
    "lauraponce": "Status as of Tuesday EOD:\n-Narrowed comparable sites to Angular Material, Bootstrap, Bourbon, Foundation, MailChimp, Skeleton and Yelp. \n-Spent some time going through each of the sites today to get a feel for the flow.\n-Will be looking at these sites from the angles of layout, code snippets, navigation, content order, and a couple more categories TBD.\n. @msecret -- There's no specific reason, I'll add that to the list too.\n. Added Material Design Lite as well! I'll post a revised list later today after I go through the Google Docs you sent.\n. Updated site list: Angular Material, Bootstrap, Bourbon, Foundation, Google Material Design Lite, Salesforce Lightning Design System, MailChimp, and Skeleton. \nAny and all feedback welcome about other additions! \n. I'll be focusing on the analysis from the heuristics/components of aesthetics, ease of use, code snippets, navigation, help and documentation, getting started and staying up to date. \n. The final results can be found here:\nComparativeAnalysisSpreadsheet.xlsx\nKeyFindingsDoc.pdf\n. The survey went out to the dev and news Slack channels on 9/26 and went out to the Web Content Managers listserv on 9/27 at 2:00pm EST\n. Here are the final results from the survey:\nSurveyResultsDoc.pdf\n. This is still in progress and will be completed/closed out by end of day today (12/23). The research and recommendation around community based on Foundation can be found here: \nWDS Community Research-Foundation.pdf \nand is in Google Drive here: https://docs.google.com/a/gsa.gov/document/d/1m_tTf9pNeXGl8mzAyl2RXMU-egb7HnFvSVhDC8vhr8U/edit?usp=sharing\n. This is still in progress and will be completed/closed out by end of day today (12/23). The gov-tech conference possibility list can be found here: \nQ2-Q3-Q4 gov-tech conferences.pdf\nand the doc is in Google Drive here: https://docs.google.com/a/gsa.gov/document/d/1rMfH_KgJPPE6QGsycwsmsbKr2yoeF8ShLD30QwbqkGA/edit?usp=sharing . I put in a request for access to the Government Wide Account on 12/14, but there is currently a DAP issue and they are not able to grant new access to that account at the moment. It is being looked into, but there is no ETA on when it will be resolved so I am blocked on moving forward with this issue until I receive access to that account.. Scheduled for 3/10 from 3:00-4:00 EST with Gray, Will, Marco, and Shawn plus Brad and Julia as optional.. I emailed folks at NASA, CBP, CFPB and OIG, and am waiting to hear back from everyone now before I'm able to get the interviews on the calendar.. For the first round, we interviewed DigitalGov. There are more interviews to come in the next sprint: CFPB, OPP, USA.gov, and HHS OIG.. The user needs mapped against the tools (Lighthouse and PageSpeed Insights) is here: https://docs.google.com/a/gsa.gov/spreadsheets/d/1QSpFb93VCPG-Aayk0iL9vp1KJoqcWZJNl-ySNsprzxc/edit?usp=sharing. Here is the Google Docs version: https://docs.google.com/document/d/1cUnFVdDi5MJxBkcq2-ueu4IVs5nZtE06fBTwAbdXqSc/edit#heading=h.7f4gck4x214a and attached is the pdf version. I removed the recommendations and next steps sections since that is being covered in the work @msecret is doing.\nWPResearchReport.pdf\n. Scheduled an interview with OPP 4/18 and with HIV.gov for 4/19. Findings are here: https://docs.google.com/a/gsa.gov/document/d/1qqIdJWHxoA4tV2fJZE46HeT5ICl1PkCnoUkjHnCy9zI/edit?usp=sharing . @AndreaSigz how does this look for the addition?:\n\"The web performance of the site should meet or exceed the performance of 3-6 similar sites, and they should use a preferred tool to run the comparison.\". Good suggestion @AndreaSigz. How does this sound? \n\"The web performance of the site should meet or exceed the performance of 3-6 similar sites that roughly compare to what the current product is trying to accomplish. A preferred tool should be used to run the comparison.\". I emailed dana.allen-greil@nara.gov to find the right POC on the team to interview, awaiting the response.. ",
    "jkassemi": "somewhat related: what are your thoughts on applying the color to th cells within the tbody?\n. ",
    "ckundo": "Hi @maya! I'd like to open a PR to add accesslint-ci to your CircleCI build so your team can keep track of these issues. Anything I can do to help that go smoothly? cc @nickbristow \n. Relates to https://github.com/18F/web-design-standards/issues/1459 cc @maya @nickbristow \n. CI will not pass without the CircleCI environment variables specified in the PR description. These options will be available to all builds:\nCircle CI setup\n\nSet the following in Circle CI environment variables\nACCESSLINT_GITHUB_TOKEN - GitHub personal access token\n    from a collaborator account with write permissions\nCIRCLE_TOKEN - Circle CI API token\n. A couple things got dropped in a rebase, fixing up now.\n. I see the jekyll site was extracted to https://github.com/18F/web-design-standards-docs, will reopen there.\n. \n",
    "tbolt": "@maya are there concerns around ux or a11y regarding modals? \nalso, im getting a 404 on this page - https://standards.usa.gov/about-our-work/product-roadmap/. That's a good point, there is some overlap. I think since sidebar uses a  that it may be redundant to have both. . Appreciate the deep dive into this. Another thought I had would be to just use the USA Flag emoji? \ud83c\uddfa\ud83c\uddf8. ",
    "rovo79": "Will you send out an email with a link to a third-party service hosting the survey?\n. That makes sense. I do have a gov email, but not currently using it on here. I was mainly curious to know which service you'll use for the survey. \nSent from my iPhone\n\nOn Sep 14, 2016, at 10:14 AM, Brad Nunnally notifications@github.com wrote:\n@rovo79 That'll be the plan, but due to some internal constraints on our end the survey will be limited to those with a .gov email address.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n. Hello, are the dev and news slack channels open? I couldn't find information on them. \n. \n",
    "kcjonesevans": "@bradnunnally signoff meaning the okay? it is just a google form right?\n. The directions on the linked repo you have seem to be different from the web design standards docs. Are you able to run the link and watch commands? \nI did not use docker to set up my dev environment on my mac, and only had issues with my glup install and xcode. Is this not an option for you? \n. In PR 1504, I suggested adding the class usa-input-required on labels which uses CSS to add required text after the label. \nI suggest something along those lines for a solution to your error message issue. Using javascript to add the class when the error occurs, showing the red box around the input as well as text next to the label. \n. ",
    "betson": "If I add z-index: -1; for input[type=\"checkbox\"], this fixes it for my site. I don't know the impact on other web components.\n. Fixed in #2002.. ",
    "RobLoach": "For those following along, this became kss-uswds. You can see the built styleguide over at:\nhttps://kalamuna.github.io/kss-uswds/section-uswds.html. ",
    "allanj-uaag": "The table title can be both an h6 and a caption.\nI think even if you don't style the caption and just leave the h6 styling,\nthat would be fine.\nThe important item for me is that the h6 is inside the caption so it is\nprogrammatically associated with the table and properly titles it.\nOn Wed, Sep 21, 2016 at 4:56 PM, Maya Benari notifications@github.com\nwrote:\n\nHi @allanj-uaag https://github.com/allanj-uaag, thanks so much for\nopening this issue! It's a great idea to use the  in the table\nexample.\nThese h6 headings are used throughout all of our examples for consistency\nso we'll need someone from our design team to think about what we want a\ndefault table caption style to look like.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/18F/web-design-standards/issues/1495#issuecomment-248754746,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AG_WL_E00eNWbxzrHk8nW-os4iZsGn0yks5qsafxgaJpZM4KDJiT\n.\n\n\nJim Allan, Accessibility Coordinator\nTexas School for the Blind and Visually Impaired\n1100 W. 45th St., Austin, Texas 78756\nvoice 512.206.9315    fax: 512.206.9264  http://www.tsbvi.edu/\n\"We shape our tools and thereafter our tools shape us.\" McLuhan, 1964\n. ",
    "romkedehaan": "This was merged into the release branch and not develop, @shawnbot to merge into the develop as well.. We aren't sure about this on right now. Will hold till @yowill . @AndreaSigz did you get any movement with this?. @AndreaSigz yes please do.. Put a comment in our google doc, but @shawnbot can you setup a meeting with us, but can you reach out to the NASA and SAM folks about user interviews?. @msecret just an update on this as well.. @msecret did you do anything with this?. @shawnbot do you remember what the output of this was to be?. Just realized this is a repeat. Deleting.. @shawnbot can you provide an estimate for this?. @lauraponce can I get more info on this?. ",
    "acolter": "Since the U.S. Web Design Standards are mentioned by name in the OMB's Policies for Federal Agency Public Websites and Digital Services we think it's probably best to keep the name for the time being, at least until the date agencies are expected to comply with the requirements of this Memorandum (within 180 days of its publication date).\nSo we're closing this issue for now.. The Summary section states, \"Our research has shown that potential users of the Draft USWDS want to see a mix of qualitative and quantitative metrics that show the value and usefulness of adopting the Draft USWDS.\"\nWhy do they want to see metrics? What problem will that solve or what will that allow them to do that they can't do now? Since that's left unsaid, it's difficult to determine whether these metrics will solve that problem.\n. I put together a quick affinity diagram of the list. They ended up in the following buckets: \n- Make web development easier\n- Meet you users' needs\n- Get help when you need it\n- Show stakeholders how using the Standards benefits your agency and its users\nSee http://boardthing.com/board/5825c90c32d3a2ed00003e7b\n. Sent an email to Pat Harris at NIST today to check in and see if they have any guidance for us yet. \n. Got an email back from Patricia who says that she needs to \"close the loop\" with two NIST people and that she will try to wrap this up before the end of the week.\n. Just sent another email to Patricia Harris at NIST.. Her response: \"Will send you our response this afternoon. Sorry for the delay.\"\nWill let you know when I hear from her. . From Patricia Harris at NIST: \n\nThank you for bringing your question regarding your group\u2019s the use of the word \u201cstandard\u201d to the NIST Standards Coordination Office. NIST is the chair of the Interagency Committee on Standards Policy (ICSP), so matters such as this are of great interest to us. I have consulted with a number of SCO staff with experience in standards development, implementation, and standards policy in the federal sector to comment and advise. Following is a summary of our viewpoints.\nBased on our experience, we can understand why the agency representatives you are working with are confused about the use of the word \u201cstandard\u201d in the context of your work.\nWithin the community of federal agencies, the generally accepted understanding of the term \u201cstandard\u201d is set forth in the NTTAA and the recent revision to OMB Circular A119.  This law and policy direct federal agencies to rely on standards developed by the private sector using a consensus-based process (some caveats and exceptions are noted).  Some of the confusion you are seeing from your agency colleagues may be based on their knowledge of A119 and their expectation that standards are developed in the private sector (primarily). \nIn those cases, where the federal government develops its own standards, it is generally in the form of a regulation that is required for use by either the regulated community in the private sector or a requirement for federal procurement or use within the federal government (often in the form of an executive order or OMB policy memo.)    This general acceptance that standards intended for use within the federal government are most often mandatory is the other source of confusion.\nYour group\u2019s decision to use the term \u2018standards\u2019 is entirely your decision to make. However, it may not be the best word to use.  Referring to your document set as the \u2018U.S. Web Design Standards\u2019 could denote to some that this is a U.S. national standard and thereby assume that is applicable beyond the federal government and has the full authority of the U.S. federal government.  We suggest your group consider a title that more clearly denotes that 1) this is a US federal government effort and 2) that this is not a mandatory standard.  Some ideas to suggest:  \u201cGuidelines for federal . . .\u201d or \u201cBest Practices for federal . . . .\u201d\nWe\u2019d be happy to discuss this further with you and others. Let me know if you think a conference call with your team to discuss this further would be beneficial. Fyi, I have taken the liberty of cc\u2019ing the GSA representatives to the ICSP, Jeffrey Thurston and Jennifer Moffatt.\nThank you for reaching out to NIST and giving us an opportunity to comment and advise.\n\n. Just sent a thank you email to Pat and the rest of the team at NIST. \nBecause of the recent OMB memo that directs people to the U.S. Web Design Standards, and the fact that federal agencies have 180 days from the publication of the memo on November 8 to implement its guidance, I'd suggest that we table the discussion of changing the name for now. We can pick this up again in six months so as not to confuse any agencies who are trying to follow the OMB memo. \nI do think it makes sense to address the use of the word \"standards\" on the website, clarifying that 1) this is a US federal government effort and 2) that this is not a mandatory standard.. Well, I booked my train tickets today, then just found out that my travel card was declined. Ironically I actually did take the travel card training by the deadline this week. Perhaps unironically, there appears to be no evidence that I did so on OLU. . The one pager is in PDF format at https://drive.google.com/open?id=0B8dk4rmN4KrvSFdPdWdQODVlUDA\nThe cost spreadsheet PDF is at https://drive.google.com/open?id=0B8dk4rmN4KrvNXdmMVFZVDBUNE0\nUnless there are any edits to be made, they're ready to send.. Please review and merge when ready, @juliaelman . Some thoughts around using Slack for developing a community: https://docs.google.com/document/d/1ukx-TXH8GvsRbbIETBKyguJSG0CYh5foplu5xREtxUw/edit#. Captured the discussion we had yesterday and added those items to the document. I'm looking for feedback about whether this is what the team needs. . I've added a link to the email guidelines and mentioned the idea of assigning someone to manage each channel or rotating management every two weeks. . I think we need to go ahead and tell people what their choices are for using the standards within the Using the Standards first paragraph: downloading them if [list conditions] or using npm to install them if [list conditions].\nI would also suggest reducing the word count by giving people an ordered list. For example: \n1. Download the U.S. Web Design Standards assets. \n2. Copy the files and folders that were downloaded into your project's code base\n   etc.\n. ",
    "timwood": "Thoughts on the status of this idea?. ",
    "aaronsnow": "@shawnbot This is great! Were you able to generate a report w/ more detail? Specifically I'm super curious about the distribution of that traffic.. Yes! I'd love to see a report that shows users + pageviews per site. (The\ntotal number of sites and pages are also useful data points.) Aside from\ndemonstrating reach and efficacy, this is also super useful for estimating\ncost savings.\nOn Tue, Dec 6, 2016 at 3:51 PM, Brad Nunnally notifications@github.com\nwrote:\n\n@aaronsnow https://github.com/aaronsnow Currently the top 10 for Q3 of\n2016 is\n[image: image]\nhttps://cloud.githubusercontent.com/assets/12515096/20942974/5a06d7a6-bbc3-11e6-98af-a4d5ae5cdab7.png\nBut I love the idea of making the report something more public or at least\nshareable with the team.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/18F/web-design-standards/issues/1577#issuecomment-265268341,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AAifoGhBywGuBRsAYKHctRKWlUPyZ2Msks5rFcrRgaJpZM4K4UKj\n.\n\n\n-- \nAaron Snow\n18F https://18f.gsa.gov/ / Technology Transformation Service\nhttp://www.gsa.gov/portal/content/251359\naaron.snow@gsa.gov\n. ",
    "guitarzan": "I'm glad you're addressing this! We've recently wrestled with adding a logo to USWDS to comply with our agency co-branding standards. Here's what we came up with. It's working well for us, but I'd appreciate your input.\nSCSS: \n```scss\n.usa-header-basic {\n    .gaepd-logo {\n    @include media($nav-width) {\n      bottom: 0;\n      position: relative;\n    }\n  }\n  .gaepd-navbar {\n    @include media($nav-width) {\n      width: auto;\n    }\n  }\n}\n.gaepd-logo-link {\n    display: flex;\n    align-items: center;\n}\n.gaepd-logo-link img {\n    width: 3rem;\n    margin-right: 1rem;\n@include media($nav-width) {\n    width: 8rem; \n    margin: 1rem 2rem 1rem 0;\n}\n\n}\n```\nHTML: \nhtml\n    <header class=\"usa-header usa-header-basic\" role=\"banner\">\n        <div class=\"usa-nav-container\">\n            <div class=\"usa-navbar gaepd-navbar\">\n                <button class=\"usa-menu-btn\">Menu</button>\n                <div class=\"usa-logo gaepd-logo\" id=\"logo\">\n                    <em class=\"usa-logo-text\">\n                        <a accesskey=\"1\" title=\"Home\" aria-label=\"Home\" class=\"gaepd-logo-link\" href=\"/\">\n                            <img src=\"/assets/logos/epd-icon.svg\" alt=\"\" /> Environmental Protection Division\n                        </a>\n                    </em>\n                </div>\n            </div>\n            <nav role=\"navigation\" class=\"usa-nav\">\n                <button class=\"usa-nav-close\">\n                    <img src=\"/assets/img/close.svg\" alt=\"close\">\n                </button>\n                <ul class=\"usa-nav-primary usa-accordion\">\n                    <li>\n                        <a title=\"Home\" aria-label=\"Home\" href=\"/\">Home</a>\n                    </li>\n                    <li class=\"js-search-button-container\">\n                        <a class=\"usa-header-search-button js-search-button\" href=\"/Search\">Search</a>\n                    </li>\n                </ul>\n            </nav>\n        </div>\n    </header>\nAnd here is how it looks on desktop/mobile:\n\n\n. ",
    "adborden": "@juliaelman sorry for the churn on this, but the discussion has been useful. We just reverted the npm token change on cg-style because it would require everyone touching the code to have a token set, and therefore an npm account. We could work around this by only adding the .npmrc file before deploy (not committed to the project) by adding a step in circleci:\n- \"echo '//registry.npmjs.org/:_authToken=${NPM_API_TOKEN}' > .npmrc\"\n- npm install\n...\nBut I haven't tested this yet. I would go ahead with the user/email setup, and then when I have a chance to make sure this works well, I'll submit a PR on wds.. Sounds good. FWIW, travis's approach is to create the .npmrc file at\ndeploy time, similar to what I have above.\nhttps://github.com/travis-ci/dpl/blob/master/lib/dpl/provider/npm.rb\n--\nAaron D Borden\nHuman and Hacker\n. Yeah, setting it for deployment only is a great idea.. LGTM, thanks!. Hmm, maybe I was mistaken about the width. It looks like it's happening at 319px. If it works at 320px, then that is good enough for me. Thanks!. I hadn't noticed the login step here (or in cg-style). We should be using api keys instead of user passwords. Also, it's best to avoid putting secrets on the command line which might accidentally be leaked if the command goes awry.\nHere's an example of how the API tokens work, but I haven't tested it yet. In the meantime maybe we can add &> /dev/null to the end of the line to prevent secrets accidentally getting printed to the logs.. ",
    "AndreaSigz": "@shawnbot or @donjo any thoughts?. Sure. Just requested access. @yowill As I'm thinking about the strategies, what is your overall goal for this press outreach? I think that will help. Thx. Thx. Will start on it. Yes, it's actually in #271. Want me to close that one and move the docs here?. @romkedehaan See my comment above.. Moved this out of issue #271 and closed #271:\nhttps://docs.google.com/document/d/1impxAFfaa1W22LJQZ1mc-ZohXrJjbL5hsOfqkYBNd6Y/edit#\nAlso, thoughts around publicizing release updates:\nFor each of the releases (1.1, 1.2, etc), it would be good to have a template/checklist to make sure ppl are aware of the updates each time.\nFor smaller releases, will need 1-2 sentences summarizing the update and next steps. Larger releases may need a few paragraphs to explain the updates.\nPossible outreach points:\nBlog/summary paragraph for site\nBlog for 18f blog & DigitalGov (with Comms slow turnaround, maybe only do for larger releases)\nPublic slack channel\nInternal slack channels for TTS - News, i-would-tweet-for-you\nMailing list (not sure who is on that)\nDigitalGov Community of Practice Managers listserv to send to related/interested communities: open-source, web managers, mobile, social media, UX\nAny other missing outlets?. - [x] Reached out to USA.gov team for interview\n\n\n[x] Send calendar invite for interview\n\n\n[x] Conduct interview & take notes\n\n\n[x] Write up interview\n\n\n[x] Send to USA.gov to review\n\n\n[ ] Publish on Standards site. Per top description, will close this one as final edits have been made. Will open a new one for publishing. USAJobs will do a user interview. Who on the team should I connect them with?. Here's a first pass at it:\n\n\nWeb Performance is the speed at which a website loads and appears in your browser when you type in the URL. A site\u2019s performance can be good or bad. Good performance means your users can interact with your site easily, while bad performance can cause your site to not open or your users to leave without taking any action. \nWeb performance is affected by many factors, such as: the speed of the network the site\u2019s computer- or your computer- is on; the physical distance between your computer and the site\u2019s server; how modern your computer/laptop/smart phone is. People who build and manage websites track web performance to see if they can improve the number of users completing actions on their site.\n. @lauraponce I think my part in this is done. . Here's a first pass. Borrowed language from acq SOWs:\nAdditional Requirements:\nAt sprint-wise intervals, the vendor will open issues that came as the result of usability testing by end-users.\nContractor shall use US Web Design Standards.\nAs part of the Web Design Standards, contractor shall track web performance with a tool and clearly communicate to the government team when there is slow performance and options they have for improving the site\u2019s performance.\nTool to track web performance shall be free of cost, track a variety of metrics, with multiple implementation options, and a useful results format.\nAll software code delivered under this order shall comply with the 18F open source policy in effect as of the date of award.\nAll software code delivered under this order shall comply with the 18F Accessibility Guidelines in effect as of the date of award.\nAs part of this being purchased off of the Agile Blanket Purchase Agreement (aBPA), work will be conducted in one or two-week sprints and reviewed at the end of each sprint for acceptability per the Quality Assurance Surveillance Plan (QASP).\nAll software code delivered under this order should be less than 10 mb total size; should complete download within 15 seconds; and should use http2.. Some additional thoughts from Andrew Meier via Slack:\nContractor shall establish, and ensure adherence to, a reasonable performance budget. At a minimum, pages with similar functionality in the new system shall be as performant as they are in the existing system.\nAsk for skills in\n\n\nResponsive design\n\u201cMobile first\u201d design\nProgressive enhancement\nPerformance budgeting. Per the user interview suggestion, we should add something about 'comparing to similar sites.'. @lauraponce I like it. Could we also add a few words explaining what a similar site would be?. Yes, @lauraponce I think this is ready to close. Thanks!. Hi Annie,\n\n\nMy apologies - that comment was for another thread :(\nI'm asking around beyond our team to see if there's anyone to send you to. Right now the Standards don't have any official guidance on it. I will reply to this thread by Thursday with any additional information.\nThanks!. Thx @tBaxter! @donjo @toolness @msecret . Thanks, Adam. Any thoughts @shawnbot or @donjo?. Thanks for letting us know, Tiffany. @shawnbot @donjo any thoughts?. Here it is:\nThe Web Design Standards is a library of design guidelines and code to help government developers and designers quickly create trustworthy, accessible, and consistent digital government services.\n[bullet] Release 1.1 https://standards.usa.gov/whats-new/updates/2017/04/26/fractal-federalist/\n[bullet] Release 1.0 https://standards.usa.gov/whats-new/releases/#version-1-0-0. @donjo Can you take a look? Thanks!. Thanks @bruffridge for letting us know. @shawnbot @donjo any thoughts?. Call's been put out :). Yesterday sent out the calendar invite for first meeting on Friday, June 16.. Thanks @toolness for letting us know! @donjo or @msecret any thoughts?. Thx @thoughtassassin. @donjo or @msecret have any thoughts on this?. @yowill do you have access to update since @donjo and @msecret are out? Thx!. Thx @asarazor! @donjo or @msecret any thoughts? . Thanks @jmccormick28 for letting us know. @toolness can you take a look? Thx!. Emailed Drew Jack with link to latest release and top blurb explaining why someone at GSA may be interested in learning more. From Drew Jack: This is what I submitted to GSA Today. We should see it in there tomorrow or Friday:\nDid you know a GSA team built a library of design guidelines and code to help government quickly create trustworthy, accessible, and consistent digital government services? They are called the Web Design Standards, and they\u2019re like LEGOs for web design: There a number of components, and it's up to you how you want to put them together. Questions? Join the public Slack channel or email the team directly at uswebdesignstandards@gsa.gov. Check out the latest release. Learn More.. Is this live? I don't see it yet.. Thanks @bruffridge. @donjo or @toolness any thoughts?. I made the change myself :). Thanks @sawyerh! @donjo or @toolness any thoughts?. Thanks @brockfanning. @toolness or @donjo any thoughts?. No worries @brockfanning for the delay! Thanks for getting back to us. Thanks @teebolt. @toolness @donjo  . Here's the OES case study: https://docs.google.com/document/d/1xuzfgDHNm4cAiI_xBs8AWB3H9xioBvRKJHWoawJLb5g/edit?ts=595539eb#. Can you let me know when this will publish so I can let Mo know? @donjo . Here's the URL for the code.gov case study: https://docs.google.com/document/d/1W5LqT89YvGTq4VvZmSBaOauq8PXpsqjtGz_xXcsyTbY/edit?pli=1#heading=h.f3bzzasq1bgc\nThanks!. - [x] Sent out calendar invite for team members\n\n\n[x] Create & share with team background doc for AMA flow\n\n\n[x] If consensus on time/date, will publicize in USWDS, general talk, i-would-tweet-for-you Slack channel, listservs, 18f & DG.gov Twitter, GSA Today newsletter\n. Here's a logistical doc for the AMA: https://docs.google.com/document/d/1Ir_FSeQFcFVqVAKb3SUS74WUhZoBDSvMpRKdqtA8yPo/edit#\nTake a look and let me know any issues/questions. Chat happened on Friday (7/28)! Closing and will start new issue for after-event doc. Thanks @jordandds. @donjo @atul . Thanks @fpoumian. What do you think @donjo @toolness?. This was finally published. https://www.digitalgov.gov/2017/09/25/slack-ama-connects-standards-team-with-public/. - [x] Conduct interview with Scott Weber about NSF Seed Fund\n\n\n[x] Write up interview\n\n\n[x] Send to Scott & NSF to review\n\n\n[x] Incorporate any edits & publish. This needs to be published with the next release.. Yes, let me find them. Here's NSF. It's ready to go: https://docs.google.com/document/d/16-HzoF66_76inYCt9SvUjbSrE1WPtWF035NU_bgT2Bo/edit#heading=h.x2xmev4dqks. - [x] Conduct interview with Jason Garber at DDS\n\n\n[x] Write up interview\n\n\n[x] Send to Jason and DDS partners to review\n\n\n[ ] Incorporate edits and publish. This needs to be published with the next release.. I'll dig that one out as well. Yes. It's still in notes form, so I need to clean it up and send to Jason, so probably will be next week. Thx!. Just shared doc with uswds Google group. https://docs.google.com/document/d/1Y4D-JkOqO0i4N63lcrjXIvNFdE3ewzM0WIuS41EJ6yE/edit?ts=5992fb85#heading=h.789bbdqrhlil\n\n\nThanks!. Thanks @bruffridge. @donjo @toolness . @donjo @toolness . Thanks @dalesthill. @donjo @toolness . Thanks @sawyerh! @toolness @donjo . https://docs.google.com/document/d/1n-UvXa1pMGnZMQ6O1t0SdO0EimtEv0a4eEpHcPeftes/edit#. This is the last one that didn't publish yet.. https://docs.google.com/document/d/129qVoqn9TUiTZ3bOjKtZGECj_lTyZDAXJEIUlJEHbGE/edit#. Thx @JJFranko . Hey @toolness It looks like this page isn't consistent on style-has sites listed by URL and by name of site. It would be better to pick one style. I think the URL would be better, but let me know if you feel differently.\nIf we go with that style (and update the rest of the page), then I think we should remove 'Department of Agriculture' and link USDA.gov to the site usda.gov\nWhat do you think?. Yeah, I like that combo. Should I copy/paste the updates into a comment below\u2014or the entire list?. Haha, yes. This is related to #2134, so closing. @toolness yeah, I'll see if I can find out where these went/why they are getting 404s. @toolness I reached out to Alex Bisker to see if she knew where the 18F sites went, but haven't heard back. Could you ping her?. Didn't hear back from Alex, but I created a first pass at a new order for the list (in #2134). We can close this one. . Thanks @njohnson! @maya or @donjo any thoughts?. Thanks @joshbruce for letting us know. @donjo any thoughts?. Thanks @jgacuca567 for the info. @donjo any thoughts?. Thanks @andrewmaier for documenting this!. I'm going to email the current attendee list to make sure they are ok with opening the call up, since we've been having the calls for a few months. \nAlso, @thisisdano I've been keeping these calls to 30 min to stay within Zoom's free time limit. I can see these calls expanding to an hour if we open them up, would we be able to upgrade to the \"paid\" version?. Call done, yea!\nWorked well to open it up to more ppl. Advertised to Web Managers & UX listservs; GSA Today newsletter; Slack channel.\nTo Dos:\n- [ ] Promote to CX, Plain Language, USDS listservs, as well\n\n\n[ ] Record or not? If we do, do we need to caption?\n\n\n[ ] Enable registration feature on Zoom?\n\n\n[ ] Schedule interview/video talk with Coqui & team to capture this further\n\n\n. Thanks @maya! And are ppl going to talk about them as \"the Standards\" or \"the Web Design Standards\"?\nAlso, is this a moment to revisit renaming?\n. Totally, that's what I was thinking. Wasn't meaning today :)\nUpdating the page . Yes!. The notes from our convo with Tim are at the bottom of his Regx doc. I think this also sync's up with the updating of the Who is Using list (issue #2134). I will also share this thread @thisisdano to the listserv, replying to the several emails about this in the last few days; directing them to this GitHub issue. Compiled items into this doc: https://docs.google.com/document/d/1X0cr_Pv-i7_ENPV_P1gWp9_HI4z1iWRsCOmI7E22Uwg/edit#. Yes, finishing up turning the three (innovation.gov, stopbullying & Benjamin theme) into articles...rescheduling (sick yesterday) with Brock (Drupal 8 theme). Happy to finish that one up as well. - [x] Benjamin WP\u2014OK to publish (via email to USWDS inbox)\n\n\n[ ] Stopbullying\u2014Waiting on OK from HHS\n\n\n[ ] Innovation.gov\u2014Waiting on OK from Amy\n\n\n[ ] Drupal 8 theme\u2014Drafting\n\n\n. @maya I shared the doc with you all when Benjamin was done. Need me to send again?. Here ya go: https://docs.google.com/document/d/1X_wdIdpEggJ7yK2aK64hg7vUbVcak-L2UwyjL40tglw/edit?usp=sharing. I'll have to look in the email, but I think I told them to work with you all to finish. ",
    "elainekamlley": "Reviewing the proposals this morning. \nUnfortunately, I don't have contacts with those organizers but would love to maintain a relationship, if you all present there. . @bradnunnally @yowill, I took a look and they look strong. I'm also looping in @gboone for review as well. He has been doing more regional stuff for our team and has great perspective. . ",
    "codecov[bot]": "Codecov Report\n\n:exclamation: No coverage uploaded for pull request base (staging@3a5258b). Click here to learn what that means.\n\n```diff\n@@            Coverage Diff             @@\nstaging    #1702   +/-\n==========================================\n  Coverage           ?   91.82%         \n==========================================\n  Files              ?        8         \n  Lines              ?      208         \n  Branches           ?       31         \n==========================================\n  Hits               ?      191         \n  Misses             ?       17         \n  Partials           ?        0\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 3a5258b...dbf3299. Read the comment docs.. \n",
    "hrod": "Hi @shawnbot! So like most shops, we're facing the issue where we keep implementing the same components over and over again, mostly using Drupal, but our implementations may vary from site to site. We decided to invest some time in exploring web components in order to standardize our implementation so that we can save time, ensure consistency, and create a better, more user-friendly experience for our site content editors. Since we do most of our work with government clients, we figured your USDS web standards would be a good candidate for componentizing, with the added benefit of being able to contribute back to the community.  However, since we don't want to reinvent the wheel if need be, we thought we'd check in with you guys first to see if any work or ground has been broken yet. We'll continue to think about this and start doing some prototyping on our side and keep you guys in the loop.. ",
    "nerdstein": "@shawnbot - have you considered registering a library on webcomponents.org? I think this would help with discoverability of US Design Standard web components. ",
    "awolfe76": "Thanks! This use case is probably pretty rare, but we ran into right away. \ud83d\ude04 \nIn case anyone is interested, we're using this for application we're building to accept HMDA data.\nRepos:\nhttps://github.com/cfpb/hmda-platform\nhttps://github.com/cfpb/hmda-platform-ui (uses USWDS)\nhttps://github.com/cfpb/hmda-platform-auth (uses USWDS for login and registration). ",
    "phae": "Yes, the basic header.\nIn terms of what we're using in addition, so far literally neither CSS nor SASS. We've only used the pattern library for a demo. \nAlso, I don't think this is a feature request. It's a bug. Not sure what the longest Federal Agency name is, but might be worth putting that in any tests you have. . ",
    "manavm1990": "Yes, probably for the docs. NP. Sounds good. It's really a very minor thing\nany way.\n\nManav Misra\nFounder & Lead Visioneer\n618-281-7252 <16182817252>\nvar greatResults = ourCode(yourVision);\nhttps://twitter.com/VisionWebSoft\nOn Mon, Feb 27, 2017 at 8:43 AM, Julia Elman notifications@github.com\nwrote:\n\n@manavm1990 https://github.com/manavm1990 thank you for your interest\nand contributing to the U.S. Web Design Standards.\nSince Bourbon and Neat are both part of the the Standards\nhttps://github.com/18F/web-design-standards/blob/staging/package.json#L36,\nadding this note to the code base might make folks think that they need to\nbe added manually. \ud83e\udd14\nIt might make more sense to add something to our developer documentation\nhttps://standards.usa.gov/getting-started/developers/ that explicitly\nstates that these libraries are part of our code base. Thoughts?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/18F/web-design-standards/pull/1737#issuecomment-282739103,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ADOxj-nvNM1jVlneCaW1kBvXs10lvdntks5rguD2gaJpZM4MLIkB\n.\n. \ud83d\ude02 Never DreamWeaver - well not for like 4 or 5 years!\n\nI have no blockers.\nIt's just that if you do: bourbon install in your 'stylesheets' directory,\nthen, what happens is it becomes: stylesheets/bourbon - and in here is the\nbourbon.scss and that imports from all other folders.\nSo, if someone was using Bourbon (or Neat), they would need to put: @import\nborbon/bourbon (else it will not find bourbon) - assuming they are not\nmanipulating the 'default' way of installing Bourbon as provided on\nbourbon.io\n\nManav Misra\nFounder & Lead Visioneer\n618-281-7252 <16182817252>\nvar greatResults = ourCode(yourVision);\nhttps://twitter.com/VisionWebSoft\nOn Mon, Feb 27, 2017 at 11:05 AM, Julia Elman notifications@github.com\nwrote:\n\n@manavm1990 https://github.com/manavm1990 I think you hit upon\nsomething that @evetsreklaw https://github.com/evetsreklaw brought up\nin our public Slack channel. Just to clarify, are you also using\nDreamweaver or have any blockers for installing Node?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/18F/web-design-standards/pull/1737#issuecomment-282782725,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ADOxj68rk0KJuLr_65utD2EJW-KllUBXks5rgwJTgaJpZM4MLIkB\n.\n. But, it said 1000%?\n\nOn Fri, Nov 17, 2017 at 12:00 PM Maya Benari notifications@github.com\nwrote:\n\nHi @manavm1990 https://github.com/manavm1990, thanks for checking on\nthis, however this is not a typo. It's for the blue background on each side\nif the mega menu. 100% corresponds the page width (980px) and this ensures\neven very large screens will have the blue background extending on each\nedge. We'll leave this in for now, but if you find a better solution feel\nfree to suggest.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/18F/web-design-standards/pull/2243#issuecomment-345317430,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ADOxj3aXY-O2yiYr3DpMYpTiS2no70SFks5s3cnDgaJpZM4QiQ6D\n.\n-- \n\n\nManav Misra\nFounder & Lead Visioneer\n618-281-7252 \nvar greatResults = ourCode(yourVision);\nhttps://twitter.com/VisionWebSoft\n. Understood. Tx.\nOn Fri, Nov 17, 2017 at 12:41 PM Maya Benari notifications@github.com\nwrote:\n\nHere's what it would look like zoomed out with 100% (980px), it cuts off\nat a certain point:\n[image: screen shot 2017-11-17 at 9 28 05 am]\nhttps://user-images.githubusercontent.com/5249443/32963062-9b94a614-cb83-11e7-81d1-83b575557afa.png\nIt affords us even larger screens with 1000%. Again, if you think of a\nmore efficient way of doing this let us know.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/18F/web-design-standards/pull/2243#issuecomment-345328161,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ADOxjxA7et3GmlC5kIId8dx2KujJjO_iks5s3dN2gaJpZM4QiQ6D\n.\n-- \n\n\nManav Misra\nFounder & Lead Visioneer\n618-281-7252 \nvar greatResults = ourCode(yourVision);\nhttps://twitter.com/VisionWebSoft\n. ",
    "smileytech": "I agree with @jpyuda that having the content live offsite would probably not be as effective...I would think some users might even be annoyed at having their task be interrupted by being taken to a different site for something like this.  Additionally, I think it weakens the connection between the message and the site the user is on if the message isn't on the website itself.\nWith that said, I think those that brought up the challenge of keeping content updates in sync as more sites use the standards make a good point.  Maybe one way to help with that would be to move the content from the template level into the JavaScript...that way, whenever anyone upgrades to a newer version of the standards, they automatically get the latest language.  I appreciate this violates the normal best practice of separating content from code, but I could see an argument in this case.  It'd also have the benefit of better following the principles of progressive enhancement, since only users with JavaScript can ever see this content anyway.. ",
    "gemfarmer": "@juliaelman I'm not sure. I would ask @line47 as he is the developer, to my knowledge.. ",
    "WayneWhitten": "@juliaelman Again, I haven't looked at the code yet, but as a hypothetical example, would a page footer design be required?  The Social Security Administration has its own, as do most other agencies, and I'd like to know whether this would be an issue.  I think the other posting you referenced is roughly the same concern, so thanks for including that.  This really boils down to what would be considered mandatory and whether it poses any conflicts.. Thank you.  I\u2019ll follow-up with more details if necessary as I get into the code.\nFrom: Julia Elman [mailto:notifications@github.com]\nSent: Tuesday, March 07, 2017 3:02 PM\nTo: 18F/web-design-standards web-design-standards@noreply.github.com\nCc: Whitten, Wayne R. Wayne.R.Whitten@ssa.gov; Mention mention@noreply.github.com\nSubject: Re: [18F/web-design-standards] Mandatory standards? (#1755)\n@WayneWhittenhttps://github.com/WayneWhitten thank you for taking the time to clarify - much appreciated! \ud83c\udf89\nI've added a comment in the original issue posted in 18F/web-design-standards-docs#197https://github.com/18F/web-design-standards-docs/issues/197 to take your comments into consideration as we come up with solutions. Going to close this issue since the objectives are similar.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHubhttps://github.com/18F/web-design-standards/issues/1755#issuecomment-284841754, or mute the threadhttps://github.com/notifications/unsubscribe-auth/ABCB__7FtRkXON6Bhg8VyDT55A1EzlnWks5rjbfCgaJpZM4MROtW.\n. ",
    "soulgalore": "Hey @shawnbot I'm one of the authors of sitespeed.io and I'm a little late to the party :) Any chance you could share with me your feedback on the tool so we can improve? Either in an issue or by email: peter [AT] soulgalore [dot] com.\nThanks in advance\nPeter. ",
    "mgwalker": "FWIW, I applied this patch in my project and it's looking good!  Let me know if there's more formal testing I can do to help.  \ud83d\ude04. Hmm.  I've of mixed minds.  On the one hand, semantic versioning is really all about public APIs - the internals can change, but as long as the outward-facing interfaces and behaviors are the same, it's not a breaking change.  On the other hand, if you know people are using those APIs and it's never been explicit which interfaces are public versus internal, then maybe that should be taken into account too.\nIs it possible to easily backport the event delegation fix, so there can be a PR with just that instead of all the refactoring as well?  That way you could get the 1.2 version out, and then the refactor could be 2.0.  Barring that, adding shims (with deprecation warnings, like @toolness suggests) makes sense to me (just don't remove the shims before the next major version!).\nIn any case, I think going forward, it might be helpful to have a clear list of public APIs and a notice that everything else is internal and is not subject to semantic versioning (i.e., \"use at your own risk\").  Then using something like cracks would be a great addition as well.  Ultimately, using internal or undocumented APIs should always put the risk on the developer who's doing it, but it seems reasonable not to pass that risk along unless/until we're clear on where the lines are.  All that to say, I think your point 2 is right on for the long term, but maybe not this time (I'm not certain whether the public/internal line has been drawn anywhere).. ",
    "timwis": "We're passively thinking about this in Philly (standards.phila.gov) and would be happy to partake in brainstorming and prototyping!. ",
    "angela-smithers": "Yes, I believe the files that I use are from way before release 1.0.0;\nprobably 0.12.0.\nMy js files consist of 8 or more: accordion.js, navigation.js, banner.js,\nutils/selectivizer.js, utils/when-dom-ready.js, and more.\nI will try eliminating all those files and replacing them with the 2 that\nare mentioned. (The same error occurs in my Drupal 8 dev environment).\nCheers!\nOn Mon, Apr 3, 2017 at 12:53 PM, Shawn Allen notifications@github.com\nwrote:\n\nHi @angela-smithers https://github.com/angela-smithers, can you tell me\nmore about your setup? It looks to me like you're linking directly to our source\nJavaScript files\nhttps://github.com/18F/web-design-standards/tree/master/src/js rather\nthan the generated uswds.js or uswds.min.js files in the zip distribution:\nhttps://github.com/18F/web-design-standards/releases/\ndownload/v1.0.0/uswds-1.0.0.zip\nYou won't need another framework to use the Standards if you follow the download\ninstallation instructions\nhttps://standards.usa.gov/getting-started/developers/#download. I'm not\nfamiliar enough with SharePoint to suggest a tool that works with CommonJS\nmodules, but my recommendation is to get your site working with the static\n(zip) distribution first, then follow the npm installation instructions\nhttps://standards.usa.gov/getting-started/developers/#using-npm when\nyou need to do something more complicated.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/18F/web-design-standards/issues/1824#issuecomment-291203588,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/APYLkMxeswEgJTbxN7EDKXDONUphf1Goks5rsSP3gaJpZM4Mxi_k\n.\n. I see.  Also, someone answered my quest for info this week and explained that the only JS needed were the 2 files included.\n\nBut now I am running into all sort of require(' ');\nFor example:\n\nWhere can I find these in GitHub?. Yes,\nI opened up the uswds.js to find out why the DOM was experiencing errors (according to Google Chrome).\nNothing showed in the Chrome inspector.\nOn line 936 (and other lines) in the unzipped uswds.js file it repeatedly asks for \"required\" files . And the console output:\nI haven't any errors related to the js files, but I am missing the required 'toggle-field-mask' js file mentioned in uswds.js\nCould be missing more; my accordion will only expand for a fraction of a second.. Okay, I actually used the usa- CSS and changed the prefixes to give my office that feeling of ownership when it comes to their code.\nAll else is the same.\nI am planning to use the accordion for this repo's code as well (https://github.com/GSA/sdg-indicators). When did you say the release 1.1.0 comes out for the accordion fix?. ",
    "jpgsa": "Did someone say mobile? \nWe created these SOW guidelines a while back when agencies started to understand mobile. However, we should collaborate on a way to update these. I think they are \"valid\" but not accurate and the mobile community would have some better guidelines on developer skills for mobile-first, etc.\nhttps://www.digitalgov.gov/resources/mobile-sow-and-developer-qualifications/. ",
    "jdmb77": "The attribute disabled does not take any values. You have disabled=\"\". If following the standard, disabled is a single attribute on the input field. So you just put disabled on the input. It grey's out for me in Chrome 57.0.2987.133 on Win7.\nThis: <input disabled>\nNot this: <input disabled=\"\">. Not to sound rude, but you a referencing text color. Not background-color. This works as expected in Chrome. Chrome actually converts the disabled=\"\" into just disabled anyway. Here is what the inspector shows in Chrome 57 for disabled inputs. Also just to confirm, you can't type into the field either. Have a great day!\n\nEnabled and Disabled side by side\n\n. Just crazy! Here is your fiddle in my Chrome with a completely different output. Thanks for entertaining my comments. Browsers?!?!? Geez!\n\n. ",
    "DK1999": "This is bothering us at USA.gov, as well. We feel that closing where you open is expected behavior.. ",
    "tBaxter": "Codepen of how this might work: https://codepen.io/MadeByMike/pen/EmzxYR. ",
    "JeffreyATW": "You can safely disregard our prototype - no plans to make any further changes to it (we were already accepted as vendors!). ",
    "EricSchles": "@shawnbot Here ya go: permit-finder-v02.app.cloud.gov\nAlso, here's the source I'm working off of:\nhttps://github.com/EricSchles/permit-finder\nI don't have write permissions to the 18F code base.\n. @shawnbot I'll give it a shot, sorry about stepping away from this.  I got pulled onto a new team and there has been a ton of overhead.  Gunna work on this today and let you know how it goes!. @shawnbot this causes a new error:\n\nDeploying to the server for debugging.\n. ",
    "AceInfoSolutions": "@shawnbot \nWow! Thanks so much shawnbot. I just tried your code, and got it worked!. ",
    "JamesVanWaza": "@shawnbot \nuswds : 1.1.0 \nWhich file would you like? . Attached below both files @shawnbot \ncompressed-packagejson and gruntfile.zip\n. @shawnbot it works, Thank You. \nThe other errors, that show up are related to Bourbon which shall be updated in the next release. \nAlso Normalize needs to be updated as well. \nMuch Appreciated. . ",
    "amm365dev": "M m\n\nOn May 22, 2017, at 4:31 PM, Shawn Allen notifications@github.com wrote:\nThis PR merges work that we've committed to develop since first cutting our v1.2 release branch. It looks like there are some merge conflicts, so we'll need to handle those first.\nYou can view, comment on, or merge this pull request online at:\nhttps://github.com/18F/web-design-standards/pull/1935\nCommit Summary\nMerge pull request #1810 from 18F/develop\nMerge pull request #1831 from 18F/develop\nMerge pull request #1863 from 18F/develop\n1.1.0\nMerge pull request #1864 from 18F/patch-npmignore\nadd nswatch and \"watch\" script for css and js\nupdate contributing docs w/new instructions\nadd cracks for detecting breaking changes\nnix gulp-mocha\nupdate yarn.lock\nadd refs to moved toggle functions\nadding VA OIT to standards list\nadding a word\nadding embed component documentation\nMerge pull request #1900 from 18F/update-standards-users\ntitle casing fixes\nAdd pre-release instructions\nFix formatting, reword branch naming guidance\ncall it a behavior, not a component\nadd 1.x API tests\nadd 1.x API shim for accordion\ntweak mocha npm script; add \"spec\" for all specs\nMerge pull request #1903 from 18F/embed-docs-update\nUpdate RELEASE.md\nMerge pull request #1906 from 18F/docs-prerelease\nMerge branch 'feature-nswatch' into develop\nnix \"js\" script in favor of \"build:js\"\nMerge pull request #1917 from 18F/feature-nswatch\nprefix w/1.x\nadd 1.x navigation component tests\nadd when-dom-ready export for back-compat\nadd back-compat API to navigation component\nadd TODO comment for 2.0\nMerge branch 'develop' into refactor-1x-shims\nadd should for 1.x test back-compat\nadd back-compat for dispatch()\nnix gulp-spawn-mocha (not needed for cracks after all)\nmove assign import down\nadd 1.x API shim to search component\nadd 1.x search component tests\nadd 1.x function shim for validator\narrow function\nadd TODOs to remove\nreorganize test vars\ncreate elements without innerHTML\nfall back to using the first .js-search-form\nadd 1.x tests for toggle functions\nflesh out back-compat APIs for toggle \"components\"\nallow id selectors in validate-input util\nreorder imports\nadd 1.x validator spec\nrun cracks on circle\nadd node-sass usage example\nadd browserify example\nadd webpack example\nfix source map links\nupdating lists and alerts when used in content body\nignore js output\nignore generated js\nignore generated css\nmove .gitignore\nadding paragraph width example\nadding example, adding usa-content rules for lists\nMerge pull request #1923 from 18F/doc-examples\nfixing indentation\nMerge pull request #1908 from 18F/refactor-1x-shims\nAdd bare-bones examples/README\nadding bordered accordion examples\nremoving white space\nMerge pull request #1925 from 18F/list-alerts-formatting\nFile Changes\nM CONTRIBUTING.md (64)\nM RELEASE.md (161)\nM WHO_IS_USING_USWDS.md (1)\nM circle.yml (2)\nA examples/README.md (10)\nA examples/browserify/README.md (47)\nA examples/browserify/js/.gitignore (2)\nA examples/browserify/package.json (18)\nA examples/browserify/src/js/main.js (1)\nA examples/node-sass/README.md (34)\nA examples/node-sass/css/.gitignore (1)\nA examples/node-sass/package.json (11)\nA examples/node-sass/src/css/main.scss (1)\nA examples/webpack/README.md (30)\nA examples/webpack/js/.gitignore     (2)\nA examples/webpack/package.json (10)\nA examples/webpack/src/js/main.js (1)\nM package.json (19)\nA spec/1.x/accordion.spec.js (103)\nA spec/1.x/dispatch.spec.js (81)\nA spec/1.x/navigation.spec.js (81)\nA spec/1.x/search.spec.js (63)\nA spec/1.x/toggle-field-mask.spec.js (19)\nA spec/1.x/toggle-form-input.spec.js (67)\nA spec/1.x/validator.spec.js (48)\nM spec/unit/accordion/accordion.spec.js (2)\nM spec/unit/toggle-fields/toggle-field-mask.spec.js (26)\nM src/components/alerts/alerts.njk (6)\nM src/components/labels/labels.njk (10)\nM src/components/test/kitchen-sink.config.yml (35)\nM src/components/test/kitchen-sink.njk (18)\nA src/components/utilities/embed-container/README.md (7)\nA src/components/utilities/embed-container/embed-container.config.yml (2)\nA src/components/utilities/embed-container/embed-container.njk (3)\nM src/js/components/accordion.js     (47)\nM src/js/components/navigation.js (13)\nM src/js/components/search.js (25)\nA src/js/components/toggle-field-mask.js (7)\nA src/js/components/toggle-form-input.js (17)\nM src/js/components/validator.js (15)\nA src/js/utils/dispatch.js (30)\nM src/js/utils/toggle-field-mask.js (2)\nM src/js/utils/validate-input.js (5)\nA src/js/utils/when-dom-ready.js (2)\nM src/stylesheets/components/_alerts.scss (10)\nM src/stylesheets/elements/_typography.scss (4)\nM yarn.lock (181)\nPatch Links:\nhttps://github.com/18F/web-design-standards/pull/1935.patch\nhttps://github.com/18F/web-design-standards/pull/1935.diff\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub, or mute the thread.\n. \n",
    "jgarber623": "@AndreaSigz Looks like this one's been taken care of and could be closed. \ud83d\udc4d . ",
    "vinhboy": "Hrmm... Is it really true this does nothing? Because I use it all over my code. I just kind of assumed it's the semantically correctly name because of the other ones.\nI think this page in general is just confusing: https://standards.usa.gov/components/grids/\nUnder Grid Examples It should have the semantic names of the columns instead of dummy text. Also, it should not show 1/1 if it doesn't exists.... ",
    "jmccormick28": "That makes total sense. Thanks!\nOn Tue, Jun 13, 2017 at 5:26 PM Atul Varma notifications@github.com wrote:\n\nOh, this one took me a little while to figure out--it looked like I\ncouldn't reproduce the bug at first, because the link actually works for\nme, but then I realized that the CoC repo itself is private!\nI've looked into this and it appears that there's an issue at\n18F/code-of-conduct#4 https://github.com/18F/code-of-conduct/issues/4\nwhich explains the situation--sadly, you won't be able to read it\n@jmccormick28 https://github.com/jmccormick28 because it's under that\nsame private repo, but the basic jist of it is that we've created a\n\"version 2.0\" of the CoC which still needs to be approved by the Office of\nGeneral Counsel before it can be made public.\nOne would hope that we could still link to the version 1.0 CoC in the\nmeantime, but I guess that isn't possible due to the way we're directly\nlinking to the markdown file in the repository. Urgh. I'll see if there's\nanything I can do to fix the link soon!\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/18F/web-design-standards/issues/1974#issuecomment-308253714,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AVCdqURHnQv1twriK4SPqQuN3KRimEndks5sDv6bgaJpZM4N3TrG\n.\n-- \nJoe McCormick\nDirector, Systems Engineering\nBluestoneLogic\n202-847-6043\nwww.bluestonelogic.com\n. Thanks, Sawyer!\n\nOn Tue, Jun 13, 2017 at 8:58 PM, Atul Varma notifications@github.com\nwrote:\n\nOh nice, thanks @sawyerh https://github.com/sawyerh! I think we can\njust link to that instead, and assume it'll change accordingly once 2.0 is\napproved by the OGC.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/18F/web-design-standards/issues/1974#issuecomment-308289438,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AVCdqam9IZAOrjD8cLE3vI8VWv-Gn7Cqks5sDzAvgaJpZM4N3TrG\n.\n\n\n-- \nJoe McCormick\nDirector, Systems Engineering\nBluestoneLogic\n202-847-6043\nwww.bluestonelogic.com\n. ",
    "aileendds": "We're running into this issue too. I see this block of CSS in IE10's developer tools style window but none of the rules are being applied: https://github.com/18F/web-design-standards/blob/9ff31e9e2c8906246b79d233116ef842cbc5a52c/src/stylesheets/components/_banner.scss#L140. ",
    "bonez0607": "@maya from what I could see when inspecting it appears that the class .usa-banner-button has width: 100% that overrides width: initial in IE11. That doesn't happen in Chrome. It appears changing the width to width: auto (at least within developer tools) resolves the issue in IE11 keeping everything on one line. \n\n\n\n. ",
    "mjoyce91": "This is also not working for me on Windows 10 with Chrome 59.0.3071.115 and Opera 46.0.2597.32. Works in Microsoft Edge. Also, the mobile responsive header/menu button does not open as well.. I won't have access to the the computer I experienced this with until later today, but it does have a touch screen.\nupdate: returned true.. @toolness - I'll have access to my computer this evening and will provide an update.\nupdate: @toolness - yep, accordions work for me! For good measure, I played around by using a mix of clicks and touch. Responsive nav works too, which I used to have issues with.. ",
    "JJFranko": "@toolness - Tested in Chrome V59 on Surface Pro 4 : Appears to be a success. \nAccordions and Menu Button (@ width < 950px) work for Mouse click and Trackpad tap and Screen Touch events.. ",
    "brockfanning": "@toolness @AndreaSigz Sorry for the long delay. I'm not particular about the variable names, though the use of $nav-width does make it seem pretty navigation-specific.\nHere are a few screenshots that hopefully help illustrate the use-case. In each of these screenshots you can see there are 2 divs that contains menus: \"usa-nav-mobile\" and \"usa-nav-desktop\". This allows for the 2 menus to have distinct content. The point of this PR is to make it easy that the appropriate menu displays at the appropriate device width.\nFirst, here's a shot with a narrower width. In this one, in the dev tools I'm highlighting the usa-nav-mobile div.\n\nNext here's the same width, but in the dev tools I'm highlighting the usa-nav-desktop div. Note it has a \"display:none\" rule.\n\nNext here's a shot with a wider width. In this one, in the dev tools I'm still highlighting the usa-nav-desktop, which now has a \"display:block\" rule.\n\nFinally here's a shot with the same wider width, but in the dev tools I'm highlighting the usa-nav-mobile div, which now has a \"display:none\" rule.\n\n. @maya Unless I'm misunderstanding, I don't think my PR could be simplified to that snippet. The point of it is to allow for completely different markup to display on either side of the $nav-width breakpoint. To give an example, given this markup:\n<ul class=\"usa-nav-mobile\">\n  <li>Menu A</li>\n</ul>\n<ul class=\"usa-nav-desktop\">\n  <li>Menu B</li>\n</ul>\nThis PR was intended to allow menu A (only) to display up to $nav-width, and menu B (only) to display beyond $nav-width.\nMaybe you intended this?\n.usa-nav-desktop {\n  display: none;\n  @include media($nav-width) {\n    display: block;\n  }\n}\nThis would allow for displaying menu A (only) up to $nav-width, and menus A and B (both) beyond $nav-width. That's some improvement, but unfortunately it's just short of what I was trying to allow for in this PR.. I'm not a front-end developer so probably need to be educated here: Why do React (or Angular or whatever) components need to include the styles and javascript? Is anything lost by limiting the React/Angular/etc components to markup only, and including styles/javascript in the usual way, with link/script tags? Wouldn't that make the maintenance bit easier?. Think I got it - so the javascript functionality might need to be included in the React/Angular/etc component to support reacting to changes in the model. So in the case of USWDS an example might be if you want to programmatically trigger the opening/closing of an \"accordion\" based on whatever state the model is in?. ",
    "jondandois": "What about using the Star Spangled Banner version of the flag?\n\nhttps://commons.wikimedia.org/wiki/File:Star-Spangled_Banner_flag.svg\nIt's a real version of the flag, has fewer stars, and there is also a public domain SVG available.\n. This is all very well thought out, but I think it misses very important context: This flag is to be shown with the text  \"This is an official website of the United States government\".  \nGiven this context, it seems that this should be an official flag of the US and not a stylized abstraction.\n. With the 2018 Winter Olympics underway and seeing the USOC logo with a 13-star American Flag, I thought it would be a good opportunity to push this issue again.  As you might notice from the current and 2016 Olympics, the US team logo uses the 13-star American Flag.  https://www.teamusa.org/brand-usage-guidelines\nI only noticed this during the current round of Olympics and wondered at the reason behind this design choice.  While I could not find another official source from within the USOC, I did find this article from the Chicago Tribune August 2016 where the USOC's chief marketing officer is quoted as saying \"We use the 13-star, which is an official American flag, on our logo because of sizing,\" http://www.chicagotribune.com/sports/international/ct-olympic-logo-flag-13-stars-spt-0811-20160810-story.html\nGiven this, I pitch to USWDS again:  Why can't an official US flag be used for this icon?\nArguments about blurry images and re-sampling from scaling seem to be at odds with the concept of an SVG and the fact that screen resolutions / pixel density continue to increase and are unlikely to decrease. Certainly, if the main argument is that \"We still want someone to SEE the stars and stripes, even when the flag is small\", then there are many real and official US flags that would suffice.\nI'd even go so far as to quote USWDS on another topic of misrepresentation in government and point out  #2240  regarding the use of the word \"Standards\" in the name of the project: \nWords have meaning, especially in government. It's a big thing to change a name, just as it's a big thing to misrepresent with that name. So we need to take this seriously.\nWhile the quote references the word \"Standards\", the same concept should certainly apply to something as substantial as an official symbol of the United States Government, like the US Flag.\nRespectfully, \nJonathan \n. Thanks @maya for those insights. I appreciate that you all have a far better perspective on the concept of iconography than I do, but it seems that there are two conflicting uses of the US Flag, one is for the favicon.ico and one is for the US flag image in the banner \"This is an official website of the US Government\".\nMuch larger favicon.ico sizes are obviously supported. https://en.wikipedia.org/wiki/ICO_(file_format), https://en.wikipedia.org/wiki/Favicon.  \nApplying the stylistic concepts of iconography to the US Flag is a misrepresentation of the symbol.  This seems irresponsible of the US Web Design System.  Why not use a real US Flag for the image in the banner text and another symbol for the favicon?  For example, a stylized version of the US flag is used as the favicon for another non-US website http://www.favicon.cc/?action=icon&file_id=501797, and since the USWDS has adopted a similar pattern, the significance of the symbol has been degraded.\n. ",
    "jordangov": "~The accordion is all lists now... but probably should be a <main> along with <section>'s and then (IMO) <header>'s versus using a button.~\nSorry... to clarify, the accordion is a list, but the content is a div, and I think should be a section and then header (versus button).. could just be this too: <header><button> ... </button></header> (cuts out the need to determine header level). I would also argue that internal div could be a section or article. commenting on the PR.... Thanks!. \ud83c\udf86 . Hmm... I'm not sure what that specific warning is for, but I do see that there isn't a single node for each accordion panel, which I think is going to be necessary. Basically, the {% for item in accordion.items %} needs a single element inside of it that represents the entire accordion panel?. sure, I think we're on the right track... and anything is better than div's ;). ",
    "nolawi": "I can take this if that is ok @rtwell . I will follow the pattern and have you review the PR. Its rerouting to the root of the app @maya . @maya is this change in the latest release, some how accordions are not triggering the proper styles for me. . this is awesome thank you for sharing @maya - the issue was in the upgrade of 1.x- 1.7- I do not think its related to this. . @thisisdano if its a go I can do it and send PR to you. . Just the slim version; since the font size is constant on all alerts regardless of screen size, it doesn't make sense to resize the icon on the default.. ",
    "asarazor": "I second that this change requires some testing to back up its efficacy. It seems the change has been made based on design gut feel and developer convenience. Those are valid in themselves, but for an accessibility feature there seems to be a distinct lack of data here.. ",
    "davidstenger": "Both Section 508 and WCAG 2.0 state that there must be a (\u201cwell defined\u201d) visual indication of focus, but neither explain what is considered sufficient. So it could be argued that relying on the native browser focus indication is sufficient for 508 compliance and that it would pass a 508 audit (although it probably depends on who the auditor is and what he or she feels is sufficient). With this in mind, the first requirement in your style guide would, of course, be that there is a visual indication of focus, to begin with. There are a few things to keep in mind here:\n\n\nSome CSS developers like to disable the native focus indicator. For example, they will define \u201coutline: 0;\u201d in CSS (hiding the dotted line), or use scripting to immediately move focus away from a focused element so that you\u2019ll never see the highlight (making the focusable control keyboard inaccessible at the same time). Such techniques should never be allowed and always be flagged as crucial accessibility obstacles.\n\n\nIn older versions of IE, only natively focusable elements (e.g. links and form controls) show the native indicator. If other elements (such as  and  used for ARIA widgets) are made focusable using the tabindex attribute, those elements will be able to receive programmatic focus, but will not show the native focus indicator.\n\n\nRegardless of how the focus is visualized, it must always be exposed programmatically. The object inspection tools are used to test for this.\n\n\nHaving said all this, I personally find the default dotted line in IE and the light blue line used in Chrome, Safari and FFX not sufficient enough in most cases. It\u2019s often difficult to locate focus visually (especially on complex pages), and generally the dotted line doesn\u2019t look very nice either. I usually recommend using CSS to provide a more clearly defined focus outline of at least 2px. That way it\u2019s always clear for keyboard users (even those who don\u2019t have perfect vision) where the current focus is. For example, uses the following styles for focus:\na:focus, input:focus, div[role=group]:focus, button:focus, testarea-focus,button:focus, select:focus {\n   outline: 2px solid #24889C;\n   outline-offset: 2 px;\n}\nThe advantage of the outline property is that it doesn\u2019t affect the positioning of the element like the border style does. Of course, depending on the content in can be useful to provide additional visual cues to visualize focus (e.g. CSS based icons, changes in background and foreground colors, font-weight, text decoration, and so on).\nOf course, there are also a few issues with the snippet above:\n\n\nVisual designers and developers generally don\u2019t like such a strongly defined focus indicator. If they oppose it, a fallback solution could be to provide this focus style as an alternative stylesheet that users can opt in to.\n\n\nInternet Explorer: Outline styles are not supported by older browsers, in particular, IE7 and below. The same goes for the :focus pseudo selector (although for links this can be resolved by simultaneously using the :active pseudo selector). If you want a custom focus style to be visible in IE7 as well, then you\u2019ll have to use scripting to add a focus event handler to all focusable elements, in which a class name is added to the element (and similarly add a blur event handler that removes this class name). Since you can\u2019t depend on the outline property in CSS, you would have to visually indicate the focus using a different way (e.g. changing the border, adding underlines, etc.). In other words, it\u2019s a lot of hassle and hacking.\n\n\nSo to summarize: Relying on the native visual focus indication could be considered as 508 compliant (it would be debatable for some though), but for true accessibility, it\u2019s better to provide a more clearly defined indication using CSS as part of your style guide. It\u2019s not something I think you can really enforce teams to do though, it\u2019s a recommendation that a team can follow if they agree with it. I would recommend sticking to the modern approach (using :focus and \u201coutline\u201d). Whatever approach is chosen, it\u2019s always important that the visual indication of focus is consistent throughout the site. So that means it\u2019s best to use the same focus highlight for all focusable content, regardless of whether it\u2019s text links, image links, form controls, or ARIA widgets.. ",
    "hbillings": "I've run into some issues with this also -- here are a couple of screenshots:\nThe contrast with the light colors in the project I was just on was pretty rough. Also notice how it looks odd with the search button:\n\nThe offset on it can also be problematic for some elements, like these tabs:\n\nI'd prefer a bright contrasting color instead of something that recedes (that said, this does work great on white backgrounds with lots of form fields -- maybe it's worth considering multiple focus styles).. ",
    "joe-watkins": "@maya @msecret Nailed it! ;) Good work.\n\n. ",
    "colinalford-gsa": "@joshbruce \nHeh, this problem is so widespread, it is included in this video about the worst flaws in Javascript:\nhttps://www.youtube.com/watch?v=0dgmeTy7X3I&feature=youtu.be&t=8m10s. ",
    "ncksllvn": "Thanks for your response Maya! Okay, we'll figure something out for our project and check back periodically. Great job with the project so far by the way! . Hi @maya! Based on @annekainicUSDS's suggestions would your team be open to contributions from the team at the Dept of Veteran Affairs? We're looking to do some revamping in the coming weeks and would love to work with you on this.. @emes001 @stphnwlkr - would the suggestions above work for your use case as well?. Awesome, thank you @maya! Really looking forward to it! . Thank you for checking it out @maya! That sounds good.. ",
    "emes001": "Fellow dev over at @USOPM here. I second more granular control of the grid system, based on a specific viewport. In lieu of this missing feature, I'm relying more on custom classes at the moment (more-so because this is for a prototype). Do you have a timeline for 2.0 and/or is this currently being worked on?. ",
    "annekainicUSDS": "Our team has done some thinking about the specific requirements for any enhancements to the grid that we would benefit from, and how those might be implemented. We thought we would share them here to get your thoughts and feedback!\nDesired Enhancements:\n\nMobile-First Grid System\nResponsive Utilities\n\nFollow-up to https://github.com/uswds/uswds/issues/2173.\nMobile-First Grid System\nCurrent Limitations\nThe current 12-column grid system works very well on large screens, but is limited when developing layouts that require more granular control for smaller devices.\nFor example, the standard layout for content on Vets.gov consists of a sidebar and main content. The sizes were defined as one fourth for the sidebar and three fourths for the main content. This works well for large screens. However, because on medium screens the grid is only six columns, the layout is broken - the sidebar remains the same size while the three-fourths content expands to 100%. To fix, we had to apply a custom override so that the medium screen size will be ~75%.\nhtml\n<!--\n// The following HTML layout required this CSS to keep the main content from collapsing below the sidebar:\n@media screen and (min-width: 768px)\n.usa-grid .usa-width-three-fourths {\nwidth: 74.41059%;\n}\n-->\n<div class=\"usa-grid\">\n<div id=\"sidebar\" class=\"usa-width-one-fourth\"></div>\n<div id=\"content\" class=\"usa-width-three-fourths\"></div>\n</div>\n\nAnother example illustrates the need for small screen grid styling. Our current layout for forms includes horizontally aligned navigation buttons at the bottom of each form page. These buttons are horizontally aligned even at the smallest screen widths (see screenshot below). We currently use Foundation classes to manage this alignment (see here).\n\nDesired Enhancement\nClasses that allowed an explicit screen size would be ideal. The following code was adapted from other grid systems, such as Bootstrap. When the screen size is omitted, it assumes all screens.\nscss\n.usa-width-one-fourth // all screens, including small-width screen sizes\n.usa-width-medium-one-fourth // screens medium and up\n.usa-width-large-one-fourth // screens large and up (in case there were an extra-large or something)\nUsing the above, we could define the sidebar/content layout as the following without any CSS overrides:\nhtml\n<div class=\"usa-grid\">\n<div id=\"sidebar\" class=\"usa-width-medium-one-fourth\"></div>\n<div id=\"content\" class=\"usa-width-medium-three-fourths\"></div>\n</div>\nBackwards-Compatibility\nBecause some websites may be reliant on the automatic responsive behavior of the current grid system, an additional grid class may be required to maintain backwards-compatibility. For example, we could use a wrapping element, <div class=\"usa-grid-manual\">, for the usa-width-*screen*-one-fourth class to prevent conflicts with the old grid system and preserve backwards compatibility for the websites that work with the current grid system. It would look like:\nhtml\n<div class=\"usa-grid-manual\"><div class=\"usa-width-large-one-half usa-width-medium-one-whole\"></div></div>\nVisiblity Classes\nCurrently there is no method of toggling the visiblity of an element based on the screen size. Based on Foundation's, these could be implemented as:\n```scss\n.usa-hide // hidden on all screens\n.usa-hide-small  // hidden on small and up\n.usa-hide-medium // hidden on medium and up\n.usa-hide-large // hidden on large and up\n.usa-hide-small-only  // hidden only on small\n.usa-hide-medium-only // hidden only on medium\n.usa-hide-large-only // hidden only on large\n.usa-show-medium // show on medium and up\n.usa-show-large // show on large and up\n.usa-show-small-only  // show only on small\n.usa-show-medium-only // show only on medium\n.usa-show-large-only // show only on large\n```\nFor example, in the layout above, we wrote CSS to hide the sidebar on small screens and reveal a button for sliding in the sidebar as a drawer. With utility classes, we could have written following:\nhtml\n<button class=\"usa-button usa-show-small-only\">Toggle Drawer</button>\n<div class=\"usa-grid\">\n<div id=\"sidebar\" class=\"usa-hidden-small-only usa-width-medium-one-fourth\"></div>\n<div id=\"content\" class=\"usa-width-medium-three-fourths\"></div>\n</div>. Thank you @thisisdano and @maya for all of the work on this! Our team is really excited about using this new functionality!\nWe reviewed the new implementation as a team and compiled a few questions for you:\nImplementation questions\n\nHow do we accommodate different layouts at different breakpoints? Do we just add additional classes? E.g., tablet:g-col-6 desktop:g-col-12\nAre visibility classes used by just adding :display-none to other grid classes?\nThere seems to be a few different places where !important is used. Is there any concern for downstream effects this might cause?\nAre you planning to maintain existing usa- grid classes in the new version? Keeping these classes, while perhaps deprecated, would enable us to upgrade to the new system incrementally instead of having to convert everything in one go.\nAre there plans for a screenreader-only class and what might that look like? What are the general plans for screenreader support? Currently the grid system includes support for screenreaders. Specific grid-related concern: changing the source order in the layout.\n\nThought-process questions\n\nWe're curious about the choice to name the breakpoints after devices (e.g., tablet) instead of sizes. We'd love to know the reasoning for this.\nAlso curious on why you decided to go with flexbox for the grid system, and have you done research into performance-related issues with this.\nWhy the use of the colon (tablet:g-col-6) in the grid classes?. \n",
    "herrjosua": "@maya No, I will have to look into adding that into the project. Thanks. @maya I'm still encountering the issue. I installed bourbon per the instructions, but I still get the error. I also tried importing the bourbon file before importing the the USWDS framework and my custom sass files. When I add both the import for the USWDS framework and the bourdon I get errors that it can not find the images and fonts directories. The second error is when I remove the bourdon import I get the $helvetica variable is undefined.\nThe only real major change I have made so far is to modify the $font-path and the $image-path variables to point where Angular CLI expects the assets (fonts, images, etc) to be src/assets/... I installed bourdon in my src/theme directory. \n. I'm not sure what is causing the issue. When I run the standard sass command in terminal, I'm able to see the missing styles in the complied css.\nI have a test repo here that is displaying this issue. . @maya With the help of a co-worker I was finally able to resolve the issue. I was missing the bourbon-neat package. Once I installed and added to my scss file the issue was resolved.. ",
    "amilie": "@maya That sounds great. Does that mean that the following item in the v1.4.0 release notes is no longer accurate?\n\nA new usa-input-optional class has been added in favor of usa-input-required (#2116). The latter is now deprecated and will be removed in a future release of the Standards. \n",
    "thecapacity": "I for one am not sure I understand the nuance, but I would leave the name because I think the cognitive work isn't worth the collective value. \nAlso my read of A119 perhaps differs from NIST, which may not be surprising given some of my other views on FIPS and SP-* however it seems to:\n  1. Define standards as voluntary which is entirely what the USWDS are... i.e. they seem aligned w/ the definition and \n  2. It seems to empower NIST to \"coordinate conformity assessment activities of the agencies...\" vs. relying on NIST to define them, i.e. I read that as NIST is fully empowered (but not obligated) to build an assessment tool, much as they've done for other \"standards\" (like IPv6)\nWhile I'm on the subject of IPv6, I'd note that NIST didn't define that standard (though I'm sure they had a valuable part in it) and it's entirely voluntary as a technology standard - i.e. if you don't want to be part of that community you don't use it... and having a standard mandated comes more directly (e.g. as part of an OMB action)\n. ",
    "lanebecker": "Curious about whether or not the phrase \"design system\" was rejected, and if so for what reason. Earlier discussion doesn't appear to end conclusively one way or the other, and it does seem to be the thing the CMS fork/Nava team went with.\nNot an endorsement of that approach, just curious.. ",
    "bruce-usab": "@thisisdano, You have picked a name for the product that interferes with its adoption.  OTOH, the terrible name has generated buzz, and buzz is good \u2014 but I have hard time believing that this one na\u00efve choice has been a net positive.  What if all this churn over the terrible name had been towards implementation of a terrific product?\nI am responding to @wslack\u2019s post here.  Is there really not a reply button?\n\nI think this says that it is policy for agencies to have a consistent look and feel - which means that agencies should be working off of \"design standards.\" The USWDS are an example set of standards.\n\nI think the correct term of art is \u201creference design\u201d.  The USWDS is a reference design.  It is a set of templates and other related components, so suggestions were made for \u201csystem\u201d and \u201cstyle guide\u201d.  Either of those would be fine choices, and lets you keep the same initials.\n\nFinally, in line with the NIST guidance, the USWDS are meant to \"import\" best private industry practice into the government. They are completely in line with that part of the guidance.\n\nI respectfully disagree.  Here is what ANSI says standards development looks like (halfway down the page):\nThe hallmarks of this process include:\n- Consensus must be reached by representatives from materially affected and interested parties;\n- Standards are required to undergo public reviews when any member of the public may submit comments;\n- Comments from the consensus body and public review commenters must be responded to in good faith;\n- An appeals process is required.\nYes, lots of that overlaps with an Open Source mindset and using a public forum like github.  But as the saying goes, close only counts with Horseshoes and hand grenades.  The product was first released without reaching out to \u201cmaterially affected and interested parties.\u201d\n\nMy suggestion would be to determine what you want the name to accomplish and then look at various possibilities against that criteria of success.\n\n+1\n\nI agree that \"standards\" can cause confusion, but if possible, I don't want to give up all of the benefits that the current name allows for the government.\n\nI agree with what @konklone wrote:\n\nI think the issue is that, to the extent there are benefits that the current name allows for the government, it's based on the \"gravitas\" the word \"standards\" has in the government, which is directly connected to the general government expectation that standards are mandatory.\n\nI agree with what @philipashlock wrote:\n\nGiven how passive the language around the reference to USWDS is in M-17-06, I think it's quite a stretch to treat it as a standard in the form the term more commonly takes in government and I don't think that was OMB's intent.\n\nThe name is a problem.  Please fix the problem rather than trying to argue it away.\n\nI wonder what other names can continue these benefits and be accurate in industry parlance without the possible confusion that's present today.\n\nReference Design.  Template Set.  Model.  Paragon.. Thank you @maya and @thisisdano et al.. > * cards == jpgs with text on them\n2018 and there still is no good substitute!   Just don\u2019t forget the alt tag!. @maya, you may be interested in this recentish WebAIM article:\nTo ARIA!  The Cause of, and Solution to, All Our Accessibility Problems\nI have hardly done any HTML5 coding myself, but the clear consensus is to first use good clean semantic HTML, and only add WAI-ARIA bits if your HTML does not have that information.  Using both IMHO is worse than only using one.  The deprecated browsers will quickly catch up to your syntactically valid code.. ",
    "MarkUCDC": "I'm going to feel quite small with my trite and short comments after the thoughtful, reasoned discourse above, but here goes:\nFocus on the mission of the \"Standards\":  to provide an working example, not force the solution.  To that extent, It's a MODEL.  SO, US Government Web Design Model would be my suggestion.  \nThe clear indication is that \"Standards\" in a government context is the wrong verbiage, so if my name doesn't meet your fancy, I suggest the team identify a proposed name, and ask the group to comment on it.  Just pick a name that doesn't imply a mandate: \"example\", \"prototype\", \"Best Practice\", \"Reference Option\", \"Template\", \"Resource\", \"Library\" are some options. \nUltimately, the conversation is a distraction. This seems a simple thing, and I'm a bit confused by the fact that this hasn't been addressed earlier.  . ",
    "gillick": "I found out yesterday that one of the firms my agency employs has been working with the guidelines (I will never use the word standards for this reference) for another agency site, not because it \"likes\" them, but because it was under the impression that they were official US government standards.  Perhaps the name confused them.\nI shared the news with that agency today, that a re-naming might be in the offing. To quote: \"Glad to see that they are listening.\". I should mention that context matters. There are enough quotes from 18F folks scattered across podcasts and blogs, adding bits of puffery to the guidelines, that it would be easy to mistake them for \"standards.\" \n\n\n\"Design Standards - Follow current government design standards when creating new websites or making significant changes to existing websites.\" (\"Checklist of Requirements for Federal Websites and Digital Services\", https://www.digitalgov.gov/resources/checklist-of-requirements-for-federal-digital-services/)\n\n\n\"The U.S. Web Design Standards are the U.S. government\u2019s very own set of common UI components and visual styles for websites.\" (\"Introducing the US Web Design Standards\", https://18f.gsa.gov/2015/09/28/web-design-standards/)\n\n\n\"With the new standards comes a slight modification to play three of the U.S. Digital Services Playbook (\u201cMake it simple and intuitive\u201d) from \u201cCreate or use an existing, simple, and flexible design style guide for the service\u201d to \u201cUse a simple and flexible design style guide for the service. Use the U.S. Web Design Standards as a default.\u201d\" (\"USDS publishes design standards for federal government websites\", https://govfresh.com/2015/09/usds-publishes-design-standards-for-federal-government-websites/)\n\n\n\"The Federal Government has recently took up the challenge of documenting an official guide for how federal websites should be designed, structured and presented to the public.\" (\"US Federal Government Releases Web Design Standards\", http://washingtonguard.org/us-federal-government-releases-web-design-standards/)\n\n\nThe list/confusion goes on.... Honestly, I don't even think the U.S. belongs in the name. \nI've got 10 bureaus in my agency, some of which are larger than other agencies. If we got together with Defense (another agency with some hefty sub-parts) or State and published web guidance to share with the rest of the government, we still probably wouldn't put US in the name -- and we'd probably have more claim to it.\nThe US implies an elevation of the system, above what it has earned or been granted.. ",
    "scottkellum": "It sounds like there may be a need for you to have the option of compiled CSS without styled elements.\nWhat if you had the regular uswds.scss file and a uswds-components.scss file for just the components. This way you can link to one or the other depending on your needs.\nA lot of the styles in /elements/ has utility classes alongside element selectors which may be hard to pick out in a simple way like in the button partial. If I were to do this I would have a custom normalize file and include styling for all basic elements alongside that file. This should clean up and consolidate the base styles everything else is build on while not linking to these file(s) would allow for other things to be namespaced.\nIf you want to style .usa-button the same as button then you can always use @extend. @maya Thanks! I am good with type scales if y\u2019all need help with that. I\u2019m mostly focused on infographic components at the moment. This might be helpful in some situations so that x-height of both web fonts and fallback fonts are consistent: https://developer.mozilla.org/en-US/docs/Web/CSS/font-size-adjust. @maya I\u2019m feeling comfortable for this to be reviewed now when y\u2019all are ready.\n\nI removed the pie chart because they aren\u2019t very good at displaying information\nConsolidated everything into a single component to reduce duplication\nAdded support for more than one dataset on a graph. Thanks @maya ! Let me know if you need anything from me in the process and I\u2019ll sit tight as you move through your sprints.. @maya Yup! Sorry about that, it should pass now. I\u2019m working on this feedback, I need to figure out a way to surface the caption in the rendered graph.\n\nIn terms of accessibility please review the rendered SVG as well. I tested it with VoiceOver and it reads through the data appropriately but you might have insights on things I\u2019m missing.. @maya @donjo Thanks for your feedback! I made revisions and feel like the accessability is much improved. For a chart title I just dropped an h2.. Thanks @maya! I was using info from CSS-Tricks when making these accessible but this makes a lot more sense. I\u2019ll try to get to this today.. @maya I\u2019m playing with this and it doesn\u2019t feel like it would be a great experience if the user has low vision. The visual indicators on screen are no longer aligned with the text. Navigation does feel much better for users who can\u2019t use the screen.\nUpdates pushed though, let me know how these feel to you.. This is really good feedback @maya thank you! I think I\u2019m going to take a step back and diverge a bit thinking about the various ways to display this data and giving both authors and users more flexibility in how that data is presented.. Hey @maya, Unfortunately I don\u2019t have bandwidth to work on this right now or in the near future.. ",
    "shawndwells": "Figures I'd find it seconds after opening this =/\nhttps://github.com/18F/uswds-jekyll. ",
    "tbaxter-18f": "To elaborate on my comment above, I think that if we change L16 to \nconst TOGGLES = [ NAV ]; then L30 will only impact the nav onload and the overlay will not be affected. We may need to then add OVERLAY back into TOGGLES at some point after L30 is first run. My theory is that either OVERLAY is on by default and we're quickly toggling it off, or that the toggle itself is creating a quick show/hide flash.\nI also see a 0.2s transition on overlay, so any hide/show won't be instant.. I think I'm fairly closely aligned with @davemcorwin on this. I believe that \n USWDS should provide simple vanilla JS where it's required for functionality\n USWDS should provide straightforward mechanisms to attach or unattach that vanilla JS. I was thinking a body class, but Dave has better ideas.\n* USWDS should document those cases where JS is in place for transparency and to avoid conflicts\nAt that point, it would be relatively easy to stand up a USWDS-React, USWDS-Angular, USWDS-Vue, or USWDS-whatever project that detaches the default vanilla JS and instead leverages the desired framework. There may be some discussion to be had about additional hooks needed, but with good semantic attribute-rich markup (which the USWDS already has) there should be quite a few hooks in place already.\n@brockfanning using your accordion example (because I think it's a very good example) by default USWDS would include a pretty simple hide/show toggle for the accordion. But If I'm wanting to use the USWDS in a react environment, I'm probably going to prefer to re-implement that functionality in React, if only so I know it's going to be a good citizen with the other JS I'm writing and not introduce weird event listening problems or other defects.. I think it would be helpful if the parent issue was reframed a bit. I think there's pretty clear consensus here that the USWDS itself should be framework-agnostic, so it should NOT provide React components itself. I think the actual desire is to have the USWDS play nicely with frameworks in general, to not preclude or complicate their use, and to provide a good foundation for framework-specific community efforts to build upon as desired.\nTo do so, USWDS will have to provide generalized vanilla JS for \"standard\" usage, along with some mechanism to NOT load that JS if another framework is in use. it would then be up to that implementor or the community to provide framework-specific replacement JS.\nI would suggest rewriting the issue and title to better reflect that desire. As is, it reads as though USWDS has an intent to be a react-specific system, which I don't believe aligns well with the project goals overall.. For what it's worth, since you mentioned implementation and markup, while I believe USWDS should have no opinion on frameworks, I believe it should be highly opinionated on markup. There just aren't that many ways to mark something up correctly once standards, semantics, a11y and other concerns are brought into mind. And I think highly opinionated HTML is highly predictable HTML, and is easier to port into other frameworks and have it work correctly.. ",
    "jseppi": "In the logs, I also see Exit status 137. I googled around a little and found this issue https://github.com/npm/npm/issues/4008#issuecomment-188495114, which has comments indicating that it might be a memory issue. Our build containers have 1G of memory, which maybe isn't enough for the complex build process of this repo. That's my current hunch, anyway.. This should now be fixed \ud83c\udf89 . I think you could use the spread operator to write this line as\njs\nconst sequence = function(...seq) {\nand remove the following line (const seq = [].slice.call(arguments);. Similarly, you could use ES2015 default args to write this as\njs\nreturn function (target=document.body) {. Consider using import in place of all requires. While it wouldn't really have any immediate effect, it would pave the way for tree-shaking in your bundler (either webpack2 or rollup).. Could also obviously be handled later in a separate PR.. Along the same vein of using import, consider using export/export default. Perhaps in a separate PR.. Is closest polyfilled? I think it needs to be for IE. http://caniuse.com/element-closest. consider extracting CLICK since it is used in multiple places. explanatory comment would be good here. Hrm, might want a single strategy for dealing cases where an expected element is missing. I see some other cases where an error is thrown: https://github.com/18F/web-design-standards/pull/1836/files#diff-6449513e1e61be79d366e960d8578ffbR16\nI don't have a good feeling for what is \"correct.\" On one hand, you would help developers by making problems obvious. On the other, it might break otherwise functional sites, which could be nasty for users.. Why not same touchstart || click as used in other components?. But the es2015 babel config you're using with babelify will take care of this :). \ud83d\ude2c Perhaps explore using jest and its babel runner: https://github.com/facebook/jest#using-babel. ",
    "jeremyzilar": "I think this would be an opportunity to put out a few cards* for Twitter and Facebook that talk about\n- The name change\n- Why the U.S. Web Design System is important\n- How to contribute\n\ud83c\uddfa\ud83c\uddf8 \nThe U.S. Web Design System is ready to help you make better digital services.\nBecome a part of the #uswds.\nOver 400 people have contributed to The U.S. Web Design System. \nBecome a part of the #uswds.\nBuild faster, and with greater assurance using The U.S. Web Design System. \nBecome a part of the #uswds.\nA design system for the public.\nAccessible. Flexible. Fast.\nBecome a part of the #uswds.\n* cards == jpgs with text on them. We can also reach out to a number of our friends in the Civic Tech space to help spread the word:\n- USDS comms team\n- Defense Digital Service\n- Code for America. @maya The DNS is hosted through Route53. I can help make the change. \nPrep\n- [x] Figure out where the existing redirects are located\n- [x] Get an export of the existing standards.usa.gov DNS record https://github.com/18F/dns/blob/deploy/terraform/usa.gov.tf\nSwitch-over\n- [x] Get the cloudfront URL from @wslack or the existing DNS setup\n- [x] Enter the Cloudfront URL into the digitalgov.gov terraform file\n- [x] Wait 3 mins for it to be live at designsystem.digital.gov\n- [x] Put in a redirect to designsystem.digital.gov\n- [ ] Check to see if we need to remove old DNS entries at usa.gov\n. @maya There is a 302 redirect there. We'll need to figure out where that is set, and hopefully we can add the new redirect in at that location.. Would we also move over components.standards.usa.gov to components.designsystem.digital.gov. Count me in \ud83c\udf89 . This was a helpful example that would be great to have on the website. Though I am not sure what stack: $font-stack-system, is. . ",
    "BalajiJBcs": "Yes, it should be created @maya , 404 templates should be included because if the visitors land in 404 page directly, he would opt to exit the site(The only option he has). On another hand, during the navigation of the site, a visitor might press back button, so he can visit the previous page of the site.\nPardon, I should say 404 templates rather than 404 page, which caused little confusion.\nSo it is my opinion to have 404 template page, which is very important.. ",
    "ryanbelisle": "Donjo,\nNevermind I figured it out! I needed to install the Fractal CLI tool. Thanks for replying so quickly.. ",
    "alex-page": "We recently solved this problem using lobotomised owls in our design system, you can take a look at an example here:\nhttps://github.com/govau/uikit/blob/master/packages/accordion/src/sass/_module.scss#L27\nOur inspiration came from this detailed article:\nhttps://alistapart.com/article/axiomatic-css-and-lobotomized-owls\nIf you want to collaborate on solving this issue let me know! Happy to help \ud83c\udde6\ud83c\uddfa + \ud83c\uddfa\ud83c\uddf8 .. Awesome work @maya let me know if you have any issues with this in the future, happy to contribute. \nMust feel great removing all those margin-top resets \ud83d\udc4d . ",
    "melwoodard": ":wave: a bunch of us on the Vets.gov team at DSVA are super excited to see this PR happening! \nWe've been wanting to approach spacing for some time and add some more sophisticated rules to allow content to line up right in different scenarios, and were really happy to see this happening within USWDS instead of rolling our own overrides. \nAny sense of timing for when this might be available in the design system?. ",
    "mbucknell": "So a couple of more details. We are building the css from the scss. We are compiling it with node-sass and using uglify for minimization (although I get the same results if I don't use uglify) I did try it without any of our custom style or leaflet (which we also have in the application) and got the same thing. I am using the latest Chrome and Safari as well.\nI am not a CSS wizard but it looked like perhaps some of the style rules for input were affecting the styling of all inputs including range.. It it appearing correctly (like your picture). So it must be a problem with compiling from the sass. How do you build the version in dist? I'm also using version 1.4.4. Let me try the latest.. The latest version (1.5.0)didn't change the appearance for me. . I think I found the issue. We are building from the source directory. If you go to https://github.com/uswds/uswds/blob/develop/src/stylesheets/elements/_inputs.scss#L249 and add -webkit-appearance: none; my range input is styled as you have shown.. Should I put in a PR for the fix?. I wonder if we need better documentation on how to build the css if we are building using the sass files. We don't use gulp and I'm concerned that we may be missing some other build steps.. I'll give that a try and let you know. Thanks for the suggestion!. I would need to figure out what options to set in the options.json file. The README doesn't help there. And I think I would still need more guidance as to how the sass is built for USWDS.. Just to close this out. I was able to use postcss-cli with autoprefixer in our build process and that fixed the styling issue. Thanks again!. Today, it seems like only the bootstrap works but then it doesn't fully hide on Chrome.  My head is beginning to spin.. Unfortunately we had a regression and the very long tables for screen readers weren't generated. I'm beginning to wonder if it doesn't have to do with the length of the tables. I'll do some more experimenting. I'll let you know if we decide to push the newest version out to our staging server.\nAs to your question, we do have overflow-x:hidden applied to the body tag.. I discovered two things this morning. I needed to add the usa-sr-only class to the div containing the tables of data that we want to hide. Previously the class was on the table.  I also added overflow: hidden to the usa-sr-only class. With these two changes, the page is rendered as expected on Firefox and Chrome... I think they are very useful for those of us who are building the assets be compiling or bunding uswds into our bundles . However they do need to be updated.. ",
    "squidjam": "I'm able to replicate on iPhone 8, iOS 11.2.6. ",
    "austinhernandez": "Here are mockups for NSF!\nhttps://gsa.invisionapp.com/d/main/#/projects/prototypes/11711789. ",
    "arichiv-usds": "Moving to https://github.com/18F/uswds-jekyll. I'll move to https://github.com/18F/uswds-jekyll, thanks!. ",
    "cjk101812": "Sorry for the lack of info in the first comment @maya, it appears the [type=submit] styling within the forms component is overriding all buttons with [type=submit].  In previous versions (1.4.6) that styling was nested with a form tag so that it didn't interfere with buttons outside of a form.\nCurrent: https://github.com/uswds/uswds/blob/915896677de863d8e50c075330e548ac1ba93c4c/src/stylesheets/components/_forms.scss#L5\nv1.4.6: https://github.com/uswds/uswds/blob/5eb6eba6ae1d13491fa5620a5ea8d2dc781dbcbb/src/stylesheets/components/_forms.scss#L3. Awesome! Thanks for following up!. ",
    "mattgarmon2018": "@stphnwlkr Thanks, I would also prefer the bootstrap 4 style grid naming conventions.  . ",
    "nrakochy": "You might also check out the conventions used by Bulma, which are rather nice and might offer some ideas for naming conventions. \nI think key insight there is that any column in a columns section will auto-size based on the total number present, and specific naming/classes is only added to the column(s) that need it  - \n<div class=\"columns\">\n  <div class=\"column is-four-fifths\">is-four-fifths</div>\n  <div class=\"column\">Auto sizes</div>\n  <div class=\"column\">Auto sizes</div>\n</div>\nRather late to the conversation, but thought it might be helpful to see another implementation with 175+ contributors.. ",
    "RonWilliams": "Hi @maya and @stphnwlkr --\nThis is correct, my request was related to pager/pagination in #959. Thank you for closing and cleaning up the issue queue. Sorry about the duplicate. . ",
    "johnnyporkchops": "Thanks @maya, I will circle back with designers and make sure this is what is intended.. ",
    "danielnaab": "@hursey013 - Thanks for your consideration. The relevant part of node-sass-magic importer is its node-sass-package-importer, whose README explains more: https://github.com/maoberlehner/node-sass-magic-importer/tree/master/packages/node-sass-package-importer. Comment as requested - we're using for a few projects at USGS Water Mission Area, and are transitioning to 2.0.. ",
    "waldoj": "I appreciate this feedback should have come 21 hours ago, but I don't think that this PR fixes the problem. Per the HTML 5.1 spec:\n\nFor cases where an developer wants to nest a header or footer within another header: The header element can only contain a header or footer if they are themselves contained within sectioning content.\n\nSo I think both header elements must be within e.g. a section container. Not only is that my read of the spec itself, but the W3's new validator rejects a header > section > header hierarchy. (As tested by html5validator which is powered by the Nu Html Checker which, in turn, powers the new W3 validator.\nThis PR created a header > section > header hierarchy, when it appears that what is required is  section > header > header.. ",
    "fpigeonjr": "awesome @maya! I appreciate the quick response and support. We are looking to integrate the uswds at work (JBSA-Sam Houston, TX) and I am super excited about this project. Thanks for all you do to unify government sites.. We are thinking of adding a npm package to bring in the uswds UI Components as React Components similar to the react-strap project. Would this be helpful for the community?. ",
    "mcharg": "Thanks!  Turns out we can easily rig a dev build that moves the nav for testing.  I'll post what we learn here in case it's helpful to others.. ",
    "bpdesigns": "my vote on this would be to point the caret up ^ to indicate open. ",
    "greensteph": "There isn't currently a white Carat Up UI element. I'm adding 2 options below using existing elements. Do we use one of these or create the Carat Up in white? @thisisdano @saracope \nBlue Up Carat:\n\n\nWhite Close X:\n\n. I also just ran into this. I found it confusing and could use some documentation around the settings language and usage. . Sign me up \ud83d\ude0a . Hi @suprenant thanks for submitting this issue. We are exploring how to best provide a solution as well as improving print styling overall. . usa-sign-up-heading => usa-sign-up__heading    needs updated to:\nusa-sign_up-header => usa-sign-up__heading\nusa-sign-up => usa-sign-up    needs updated to:\nusa-sign_up-block => usa-sign-up. ",
    "m8ker": "@maya, thanks for your reply. Changing those variables in the overriding variables.scss file does not fix the issue.  Do you have any other ideas of what might be going on?\nI'm trying to develop a theme based on USWDS and I'm wondering how best to move forward, so when 2.0 is available, I can just upgrade and everything will work well. \n\n\nIs the method you describe here the best way to set myself up for a smooth upgrade?\n\n\nDo you have an estimation of when you're releasing 2.0?. We use USWDS as the base theme for lots of municipal-level transportation project websites. Here is an example. We want to switch our approach to a single-page layout with levels of engagement. The idea is that a user will be able to scroll through the site for a summary and be able to dig deeper into particular sections that interest them (we'll probably end up using a modified version of your accordion that is more like a summary section that expands to the full section). \n\n\nWe've found that most users only spend 3 minutes on our sites, so we need them to understand what they need to know in three minutes, but also offer the ability to engage in surveys and dig into details if they are interested. \nBy the way, we love USWDS!. ",
    "ToniBonittoGSA": "Hmm.. I can see that\n --  maybe [it wouldn't \"need\" a period] if there was a single space between the flag and the text, and then a double or triple space between the text and the link? And/or the text was a different font?. Looks great! thanks!. ",
    "vizionsinmotion": "People with Dyslexia, Irlen Syndrome, and/or light sensitivity could be further challenged with the highest contrast combination of black/dark text on white background.  Some are un-diagnosed so they do not even realize or understand why words jumble, invert, float, shimmer, blur, or disappear or why they get searing migraines while reading.  \nTempering the contrast by changing the background from white to a light color (tan, off-white, etc.) is such a simple change that makes a world of difference to those impacted and with virtually no negative effects to those who are not.  Actually, the optimum contrast combination is white/light colored text on black/dark background which is a max contrast that also benefits those with color-blindness (addressed by min contrast settings).  Even better is to offer the users a way to set the color to what best suits them.  Hopefully more people will approach accessibility as a way to lessen the challenges instead of a \"nice to have if or when we can get to it\"?\nhttps://accessibility.digital.gov/visual-design/color-and-contrast\nhttps://www.w3.org/WAI/RD/2012/text-customization/r11\nhttps://irlen.com/what-is-irlen-syndrome/\nhttps://w3c.github.io/wcag/coga/gap-analysis.html \nhttps://www.dyslexic.com/blog/quick-guide-making-content-accessible/\nHope this helps!\n. @thisisdano - glad you found the info helpful and can appreciate its impacts.  Yes, the irlen.com site defaults to a white background but users can select from different background colors (aka colored glasses) at the top of the page but it is not very obvious.  The dyslexic site is also black text on white despite the content - obvious gap between content vs design.  Even some of the government sites have missed this one also.\nIdeally, everyone works together to maximize accessibility - content owners, solution architects, designers, developers, users, etc.  Hopefully this team helps to close the gap!  . A few more related references:\nhttps://www.w3.org/WAI/test-evaluate/preliminary/#contrast\nhttps://www.w3.org/TR/low-vision-needs/#brightness-and-color\nhttps://www.w3.org/TR/low-vision-needs/#text-contrast\nhttps://www.w3.org/TR/low-vision-needs/#light-sensitivity. ",
    "dmethvin-gov": "Awesome, thanks!. ",
    "David-Way": "\nAlso, dunno if you're using it, but this is a useful way to force a print render mode in the Chrome inspector: https://stackoverflow.com/questions/9540990/using-chromes-element-inspector-in-print-preview-mode\nIt was new to me!\n\nYeah cheers, it's very useful and really buried away in there.. ",
    "kognise": "I'm in for it! \ud83d\ude3a . I\u2019ll attempt a fix tomorrow morning after a good night\u2019s sleep. Although I don\u2019t know the project structure very well, I have some ideas as to this issue. . ",
    "jhogue": "This would be really nice. I am working with a local non-profit who is interested in using this framework and I am having a really hard time customizing the font-families for a branded look. I understand that this system was not designed to do that, but the way I am using it (more like a designer/developer would use Bootstrap) feels messy. All the declarations for fonts need to be overridden with my custom style sheet that loads after the USWDS loads, and that feels super hacky. \nVariables in _uswds-theme-typography.scss need to be SCSS maps and that is not made clear, either. I am using Gatsby with PostCSS, and so it is really easy to hit a fatal error that blocks site rendering just by trying to see what happens when one variable gets tweaked. . Thanks for this write up. I did eventually figure out everything you mentioned, but I would hit a snag with the processing of it all. The customization that I did never came through to the final style sheets. I loaded all the custom theme files first, and then the rest of the framework. I used values from the Type scale tokens to modify Headings type scale, for example, but saw no change in the CSS output. \nI had to move on and ditch the framework for the project I was working on had a very short turnaround, but the client will want me to come back to it at some point. I look forward to seeing what you come up with. Thanks again. . ",
    "yomatters": "Thanks!. Fixed in 63ce5bf6b75d4962e6de83e49744c70ef716a21c. Thanks!. ",
    "suprenant": "@greensteph sounds good, thanks for the update. I'll look forward to seeing what might come from this. If you ever want any feedback or anything, please let me know.. ",
    "karareinsel": "@greensteph we're seeing this issue on the TTS Join site  well so I wanted to see if any progress has been made on the bug? . ",
    "davemcorwin": "The goal should be to be able to use the USWDS with a variety of frameworks without too much work, but not to tie it to a specific one such as React. That said, we can use React as a test bed for understanding what changes need to be made and where to draw the lines.\nThe problems listed in the issue description are correct, I would add that the components' JS are not isolated, many of them reach out to the window, document, or body AND because we want to make sure these remain accessible is may be hard to isolate the correct pieces.\nThere is not a whole lot of JS here to begin with, so it might be possible to re-implement in various frameworks, but the maintenance still seems like it would be a lot.\nSome technical nuggets on getting it to \"function\" in React AND w server-side rendering (functino doesn't mean this is a good solution going forward):\n- The only export runs code that loads polyfills and attaches event handlers to the DOM\n  - This is great for the plain html/js use case when the user is just including the script on the page, but not good for integration with libraries that manipulate the DOM like React or server rendering\n  - Solution: export the components and polyfills so the implementor has control over DOM attachment/removal and loading of polyfills\n  - Hack: see webpack config and webpack config\n- There are polyfills included by dependencies that expect the DOM to be available when imported/required\n  - Same as above, but in this case we can't directly separate them out\n  - Solution: change the dependencies or conditionally require them only in the browser\n  - Hack: see webpack config and shim\n. @maya is jumping to 10.15 instead 11 possible since thats the current LTS version?. ",
    "duluca": "Had to create a sibling issue for Angular #2890. I think one thing that may be very helpful would be an update to README of this project, allowing React and Angular projects to use more suitable component libraries with native platform support that meet or exceed the guidelines. I did bold allow, because this repository is practically a legal document for contractors who are asked to adhere to USDWS guidelines/implementation. It'd go a long way to add some caveats in here.. Modern frameworks allow for data-binding, which, in a sense, automatically connects the markup (view) to code behind the markup (controller or viewModel). As such the markup is written with specific syntax to make this happen. And taking this idea further, modern frameworks make it possible to combine both logic and markup in to reusable components.\nOn the upside, you are able to encapsulate the behavior, look and feel of the user control neatly in to reusable components, which makes it super easy to implement a design standard like USWDS. \nOn the downside, each framework has a different way of implementing these components.\nLooking in to the future, the web framework standard will standardize how components are actually consumed, so a component written in one framework can be used in others, but that future is not here today, which is why having USWDS components natively in React, Angular and other popular frameworks has an immense productivity gain for development teams, while ensuring the best possible and most consistent user experience for users of US government websites. \nMy specific gripe out the current implementation is that it is locked in to how we thought about web design 5 years ago. If we pared it down to more simple HTML, CSS and JS that can be easily incorporated with modern frameworks, I think that's a viable direction to go as well. . ",
    "darthrellimnad": "Love this conversation! \u2764\ufe0f I'm pretty familiar with modern React, although my CSS skills are a bit dated now, but familiar enough with some of the techniques used in various communities.  I agree with comments here that biggest issue would be maintenance and matching updates with the vanilla version.\nI'm wondering what you all think about something like react-styleguidist or similar tools. Could be an idea for incrementally implementing the styleguide as matching React components (or similar for Angular or Vue).  Probably easiest to start with the basics first (buttons, headers, layouts, etc). Converting the HTML to JSX isn't the hard part, but finding an automated way to update styles from vanilla source might be difficult, especially for more complex stateful UI and CSS like the accordian example... I'd have to think on it.  Might be a place to start though \ud83e\udd14. Another (maybe short term) option could be to just use the produced css directly with decoupled React components.  Depending on the level of customization the Components need to be provided via props, the react components could bake in the classNames, so consumers would just need to ensure to include the css file normally, and then import and use the Components, referencing public api & styleguide as necessary.\nProblem with this approach would be optimizing for bundle sizes.  A lot of React developers use the create-react-app tool to bootstrap an SPA or PWA project, which uses Webpack internally.  Webpack can tree shake unused code with static analyzers, so lots of people use this feature to remove unused code in production builds of their applications.\nIf the CSS is global and all loaded by the browser up-front, then we can't really optimize bundle sizes for the style or imported assets from the stylesheet.  To resolve, i think it would require co-locating the React Component JSX (or source templates/html) with a css-module or using one of the many css-in-js solutions.  These sorts of solutions effectively automate the BEM pattern when used to avoid name collisions or specify scoping in stylesheets.\nWhile Webpack may be useful for the consumers of the Components, (and likely local dev/integration/test environments for style-guide & standards designers/developers) it may be simpler to build the open source npm distribution for the React components themselves using something like rollup.  Could also explore possibility of using popular code sharing tools like Bit, although that may present additional problems as well.. I agree with comments here about uswds responsibilities regarding frameworks. I'm mainly considering the maintenance cost for matching updates with vanilla source for each framework that has a community dedicated to its development.\nI think most of the popular component frameworks these days could benefit from a great library of accessible web components and style guide, like those developed by uswds.  Specifically, the attention to detail and automated testing scripts are things we would (ideally) like for the framework specific versions as well.\nSo while I don't believe it's uswds responsibility to maintain framework specific libraries, there might be ways to organize the code and/or styles to help framework community developers when applying updates to match changes made to vanilla source. I'm mostly familiar with React currently, but have used Angular and Vue a bit, and I think some of these issues may be similar across all framework communities interested in creating a component library from uswds source. Worth discussion, probably with input from people more familiar with other frameworks too :).\nThat said, we can probably find other ways to implement framework specific component libraries with existing templates and sass files from uswds source. Looking through, the existing component files are somewhat similar to how we might write and organize a framework specific component library & style guide (e.g. templates, template variables, styles, style guide example, tests, build scripts, docs, etc).  Not sure if an automated (or partially automated) way to convert source to framework specific templating/component solutions would be practical though \ud83e\udd14. The component JS would most likely require the most design and development effort per framework I think.  For React, it may make most sense for community to implement each component in style guide as a \"Stateless, Presentational Component\", and define \"Typed Props Interfaces\" to manage display states. This would likely be the preferred approach for most React consumers I think (even for accordian example I believe), since application state/data will most likely be driving the UI.. ",
    "dwagner4": "I make two suggestions\n\nDon't forget Vue.js  up and coming framework\nMaybe looking into Google's lit-html element which can be extended to make framework agnostic light weight components is worth the effort.  https://lit-element.polymer-project.org/guide  You can learn it in an afternoon. \n",
    "adunkman": "Ahh, got it! Yep, was able to enable them in https://github.com/18F/identity-style-guide/pull/58: \n```diff\n@@ -55,7 +55,8 @@ The following palettes will be added to\n*/\n$global-color-palettes: (\n-  'palette-color-default'\n+  'palette-color-default',\n+  'palette-color-state'\n);\n/*\n```\nThanks for pointing it out! . ",
    "amirbey": "this PR was simply a test. ",
    "joekarasek": "Oops, accidentally hit close. . ",
    "scshepard": "Hi All,Just jumping in the middle, so likely my thoughts not likely to make a difference, but...\nThe term \"Progressive Enhancement\" seems to have many different meanings; from the \"classic\" web design, it refers to CSS styling using the \"older\" css supported properties first; i.e.:p {color: rgb(255,255,255); color: rgba(255,255,255,.8)}\nIt also seems to have morphed into a conversation about web pages becoming more web application orientated. I wish that there was a clear way to define in an industry-wide convention.\nOne definition I really like: Progressive Enhancement means starting simple, that adding complexity.\nThanks!steve\nDate: Tue, 17 May 2016 12:42:15 -0700\nFrom: notifications@github.com\nTo: web-design-standards@noreply.github.com\nCC: \nSubject: Re: [18F/web-design-standards] Progressive enhancement proposed content (#1066)\nIn docs/pages/getting-started.html:\n\n@@ -50,7 +50,11 @@ For developers\nBrowser support:\n-The standards are designed to support both older and newer browsers through progressive enhancement, and officially support Internet Explorer 9 and up, and the latest versions of Chrome, Firefox, and Safari. Internet Explorer 8 and below generally see very low usage today, and most agency websites should be able to safely begin support at Internet Explorer 9.\n+The Standards are designed to support both older and newer browsers through progressive enhancement. They officially support IE 9 and up, along with the most recent versions of Chrome, Firefox, and Safari. Internet Explorer 8 and below see very low usage, and most agency websites should be able to safely begin support at Internet Explorer 9.\n+\n+Progressive enhancement:\n+\n+The Standards embrace progressive enhancement, which is a web development strategy with accessibility and responsiveness at its heart. Server-side languages and frameworks are leveraged for the majority of HTML generation. These pages are enhanced with CSS to create a rich user experience and design. Finally, client-side languages (like JavaScript) are applied to add the final layer of enhancement to the experience without losing the underlying functionality of the page or site. This means most processes are run on the servers hosting the site, meaning they aren't dependent on the client. For many users, this offers substantial benefits \u2014 mobile devices typically have fewer resources than desktops or laptops, for instance, and progressive enhancement offers mobile users a better experience all around. Further, you can focus on the functionality of the site, ensuring it works properly (the expected HTML is delivered) before continuing to enhance the experience. Finally, by maximizing server-side processing, you minimize the negative impact on battery life client-side processing can have.\n\nIf possible, I'd recommend replacing the use of passive voice (e.g., \"are leveraged\") with active voice. What is doing the leveraging, here? \n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly or view it on GitHub\n. ",
    "pkarman": "should this be:\n$font-path: '../fonts' !default;\nso that it can be overridden?\nper http://stackoverflow.com/questions/17089717/how-to-overwrite-scss-variables-when-compiling-to-css\n. "
}