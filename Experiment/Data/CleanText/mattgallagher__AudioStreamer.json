{
    "mayoneez": "Could this is related to my issue (see issue # 16)?\nI debugged a bit more and got this message in the console:\n\"AudioQueue changed state in unexpected way.\"\nAfter about 5 clicks after that (i.e. starting 5 new songs) the app crashed.\n. I have the same problem. Ideas, anyone?\nUPDATE: mine was a different problem, not related to this...\n. noticed that too. good fix :-)\n. More info: Seems to happen only on the simulator. Haven't been able to reproduce it on the device.\n. I debugged a bit more and got this message in the console:\n\"AudioQueue changed state in unexpected way.\"\nAfter about 5 clicks after that (i.e. starting 5 new songs) the app crashed.\n. After more debugging, it turns out that the handlePropertyChangeForQueue gets called when the object is in state AS_AUDIO_QUEUE_CREATION_FAILED:\n\"AudioQueue changed state in unexpected way. state = 8\"\nAfter a couple of plays after that, app crashes and before crash I saw this in the console:\n\"(967,0xb0185000) malloc: * error for object 0xe705aa0: incorrect checksum for freed object - object was probably modified after being freed.\n* set a breakpoint in malloc_error_break to debug\"\n. ",
    "nfranke": "I have the same problem. It appears that it receives a kCFStreamEventEndEncountered, but then just stops the stream instead of letting it finish playing. In addition, the progress field doesn't update after it read the last buffer. Seems the entire state model is lacking.\n. ",
    "cranberryred": "sorry to pull up a dead list....\nBut did you guys get a chance to solve this? I'm stuck with the exact same issue....\nAny guidance on how to stream short MP3 files??\n. ",
    "philchass": "Experiencing the same issue but not only with a short MP3.\nThe streamer progress doesn't update after a period of time, the streamer falls in AS_STOPPING_EOF.\n. I used the iPhone demo app and took a bunch of sounds from http://sounddogs.com/results.asp?Type=3&CategoryID=3018&SubcategoryID=1\nResult: all the sounds are not correctly played. Progress stops shortly +/- randomly.\nI'd like to use this class in my project but unfortunately this issue is to huge! \n. ",
    "holin": "I have the same problem.\n. ",
    "abless": "This seems to be a race condition. To fix this, I did an ugly hack (not a solution):\nAfter line 1441 (after calling AudioQueueStart), I inserted a [NSThread sleepForTimeInterval:0.5]. It seems to solve the biggest problems although there are still issues with wrong state. I hope this will get properly fixed at some point. I am not familiar with AudioQueues, so I can only offer this quick-fix instead of a real solution.\n. ",
    "kexoth": "I encountered the same issue, for small mp3's I got \"AudioQueue changed state in unexpected way.\" & I'm too unfamiliar with AudioQueues. I went through the code, changed kNumAQBufs to 8 & kAQDefaultBufSize to 512 & now the AudioStreamer works well with small files too.\n. ",
    "alanchen1988": "\" changed kNumAQBufs to 8 & kAQDefaultBufSize to 512 \" help me solve the issue.Thank you so much.\n. ",
    "mattgallagher": "I'd added handling of the \"audio queue stopped error\" in the progress method. I'll close this bug when I'm sure that's enough.\n. The #if TARGET_OS_IPHONE was independently implemented. Other changes don't appear to be relevant to general repository.\n. I've added the change as suggested by azone. I haven't tested thoroughly but it shouldn't cause any problems. I'll close this when I've tested more thoroughly.\n. These fixes have been independently implemented.\n. Exactly as the message states: you need to increase the size of the kAQDefaultBufSize to handle the audio you're trying to play.\n. Hi,\nIf you replace the start of the handlePropertyChangeForQueue:propertyID: method with the following code (leaving the @synchronized and everything below in place), this will avoid the deadlock:\n- (void)handlePropertyChange:(NSNumber *)num\n  {\n  [self handlePropertyChangeForQueue:NULL propertyID:[num intValue]];\n  }\n//\n// handlePropertyChangeForQueue:propertyID:\n//\n// Implementation for ASAudioQueueIsRunningCallback\n//\n// Parameters:\n//    inAQ - the audio queue\n//    inID - the property ID\n//\n- (void)handlePropertyChangeForQueue:(AudioQueueRef)inAQ\n  propertyID:(AudioQueuePropertyID)inID\n  {\n  NSAutoreleasePool *pool = [[NSAutoreleasePool alloc] init];\nif (![[NSThread currentThread] isEqual:internalThread])\n  {\n      [self performSelector:@selector(handlePropertyChange:)\n          onThread:internalThread\n          withObject:[NSNumber numberWithInt:inID]\n          waitUntilDone:NO\n          modes:[NSArray arrayWithObject:NSDefaultRunLoopMode]];\n      return;\n  }\nBut this will not fix your problem with the kNumAQBufs value. The way that AudioStreamer works requires the audio buffers to be filled before playback starts. Your MP3 file is too small to fill the buffers so playback will fail. You would need to edit the code to play smaller numbers of buffers if the end-of-file is reached before the buffers are filled. You would need to work out how to do this yourself (I do not know where you would need to start).\nRegards,\nMatt Gallagher.\nOn 21/02/2013, at 6:17 PM, zarcon notifications@github.com wrote:\n\nbtw, if i define kNumAQBufs as 8, all ok with this track, but have some problems with other :(\n\u2014\nReply to this email directly or view it on GitHub.\n. Thanks for the offer but in fitting with the \"AudioStreamer is badly out-of-date\" theme affecting the entire class, I'm going to avoid updating it to ARC. If I ever get back to writing on CocoaWithLove, I might release a completely new audio streaming class using libdispatch and ARC based on code I wrote for a different project. Until then, I'm, going to preserve AudioStreamer as a classic relic of a bygone era when everything was full of bugs and nothing worked quite right.\n. \n",
    "genzeb": "That fixes the problem ... the nice thing is the playback continues from the same point on the new audio output. I am not 100% how that happens though. The only interruption handler seems to pause the player on both begin and end interruption:\n\n- (void)handleInterruptionChangeToState:(AudioQueuePropertyID)inInterruptionState\n{\n    if (inInterruptionState == kAudioSessionBeginInterruption)\n    {\n        [self pause];\n    }\n    else if (inInterruptionState == kAudioSessionEndInterruption)\n    {\n        AudioSessionSetActive( true );\n        [self pause]; // Shouldn't this be start??\n    }\n}\n\nThe streamer works beautifully, so who am I to argue. Thank you for taking care of this as promptly as you've. \n. @mbrucedogs take a look at mattgallagher/AudioStreamer#26 for your pause/audio-interruption issue. \n. ",
    "raid5": "fixed in latest commit. http://github.com/mattgallagher/AudioStreamer/commit/9215fe1635f62e359941df8c9b9a4f51a489e485\n. ",
    "coneybeare": "for lack of a better solution right now, I added a hardware preference override to the audioqueue in \"createqueue\" line 1494\n// set the software codec too on the queue.\nUInt32 val = kAudioQueueHardwareCodecPolicy_PreferSoftware;\nOSStatus ignorableError;\nignorableError = AudioQueueSetProperty(audioQueue, kAudioQueueProperty_HardwareCodecPolicy, &val, sizeOfUInt32);\nif (ignorableError)\n{\n    return;\n}\n. wrote it up in more detail here http://code.coneybeare.net/using-audiostreamer-with-avaudioplayer-and-av\n. ",
    "xuzepei": "I have the same problem. Thanks coneybeare.\n. ",
    "jkap": "I feel like you should probably add this to a fork and request it be added into the main code base.\n. The streamer responds to standard iOS device volume. This is the Apple preferred way to change volume in the system as well, so if you're planning on going in the App Store, you should worry about that volume only.\n. ",
    "nmaisonneuve": "Yes , Playing multiple sounds doesn't work. \nthanks for the fix. This patch should be officially committed for this issue.\n. ",
    "priyankranka": "Can give me a sample code what needs to be written inside the listener. I am facing the same problem\n. ",
    "zliuva": "a walkaround I used\n\n\ndiff --git a/Classes/AudioStreamer.m b/Classes/AudioStreamer.m\nindex 6804833..fce0877 100644\n--- a/Classes/AudioStreamer.m\n+++ b/Classes/AudioStreamer.m\n@@ -45,6 +45,8 @@\n NSString * const AS_NETWORK_CONNECTION_FAILED_STRING = @\"Network connection failed\";\n NSString * const AS_AUDIO_BUFFER_TOO_SMALL_STRING = @\"Audio packets are larger than kAQDefaultBufSize.\";\n\n+static AudioStreamer *__streamer == nil;\n+\n @interface AudioStreamer ()\n @property (readwrite) AudioStreamerState state;\n\n@@ -182,8 +184,7 @@ void MyAudioQueueIsRunningCallback(void *inUserData, AudioQueueRef inAQ, AudioQu\n //\n void MyAudioSessionInterruptionListener(void *inClientData, UInt32 inInterruptionState)\n {\n-       AudioStreamer* streamer = (AudioStreamer *)inClientData;\n-       [streamer handleInterruptionChangeToState:inInterruptionState];\n+       [__streamer handleInterruptionChangeToState:inInterruptionState];\n }\n #endif\n\n@@ -761,6 +762,7 @@ - (void)startInternal\n                        &sessionCategory\n                );\n                AudioSessionSetActive(true);\n+               __streamer = self;\n        #endif\n\n                // initialize a mutex and condition so that we can block on buffers in use.\n\n\n. and obviously using this method you should only keep one active AudioStreamer instance\n. it comes out of the box (there's an background-enabled iPhone example in this fork: http://github.com/jfricker/AudioStreamer), just add \"audio\" key in Info.plist, also you have to have the playback started at least once before your app enters background for it to work\n. ",
    "loretoparisi": "I had the same problem, since I was sharing the streamer object to handle ASStatusChangedNotification in different views. Using the static instance solved this issue.\nThanks!\n. ",
    "mattla93": "Same problem here. The crash happen when doing the following actions:\n- create a streamer & play\n- interrupt streamer\n- open application, destory streamer & create, play streamer\n- interrupt streamer\n- application crash, EXEC_BAD_ACCESS\nSolved it with the static object, I think when destroing the Streamer, the Session reports the Interription twice, because the old streamer isn't cleared from the interupption handlers\n. ",
    "Phlibbo": "My app crashed for the same reason, the static object did the trick. Thanks!\n. ",
    "mbrucedogs": "The one issue I have found with the AudioStreamer and this project also would have the problem is implementing a \"Pause\" function instead of using the Stop.  The issue I have found with using pause is that in iOS4 if you pause the stream and have the app in the background this will affect other applications audio sessions.\nTry to add pause to this app instead of using Stop and you will see what I am talking about.  Pandora is the only app that I have seen that has solved this issue.  Other Streaming apps are just doing a Stop which doesn't work if you are listening to a individual stream of a song and not a station.  Example streaming a .mp3 file from a website.\n. ",
    "loic-prieto": "I don't know where else to look. I'm using the audio streamer to play a radio in my app. It all works fine until i go to background mode. There it still plays for some random time (from 1 minute to 10) and then it stops. If i resume my app, the stream is also resumed and continues to play.\nWhy should this happen? i've set nslogs everywhere in the audio streamer. I've put audio as an item in the UIBackgroundModes plist array, as instructed here. I think the problem has something to do with a network condition that happens wich causes the stream to pause, and then it doesn't resume. Perhaps buffering is not allowed in background? I don't know how to check what happens.\nedit: i've run more tests. If i upgrade my wifi connection to a better one (the first connection i tested was somewhat poor) the background streaming lasts a lot more. I'm starting to think that this issue appears when a buffering occurs while in background mode. In foreground mode buffering works by just pausing sound until the buffer is complete again and then resumes. When in background mode, buffering stops completely until i get to foreground again.\nAlso, one of the last times i got the sound in the background stopped, the last nslog in the console window was showing a call to setState with a value of 6 (buffering).\n. ",
    "jocull": "Is this background stream supposed to work on the simulator with your fork? I can't seem to get it to work. The app is clearly running in the background, but the audio stops playing (pauses) when the app is put away. It resumes where it left off when bringing the app back up.\n. My mistake, it appears that background audio doesn't work on the simulator. It does work on a real device, however. I just tested it.\n. ",
    "mickeyl": "I can confirm this behaviour. In our app, we don't handle error conditions in the streamer itself, but rather delegate these to a watchdog. Upon EOF we then recreate the streamer with the last URL. This seems to work fine, however I wonder whether it would be better to handle an EOF transparently by trying to reopen the CFNetworkStream instead.\n. ",
    "jonnyijapan": "Happens to me too. In the background it seems to be able to get the HTTP headers at least (I printed them to console), however it fails out with \"Audio queue start failed. err: (garbaged characters)\". Maybe I should just do like mickeyl, let another class do the connection + downloading.\n. Just a thought, if you can't do it on the device, maybe you could do it server side if you stream the music from a server :-) Kind of like what radio stations do...\n. ",
    "meandrik": "ok, I understand, but the thing that I wanted to make is fade in/fade out volume changing on start/stop. Is it possible? (As I know I can't control device volume)\n. oh, sorry. it was answered here - http://github.com/mattgallagher/AudioStreamer/issues#issue/7\n. ",
    "marcosanson": "I saw you can change the volume using AudioQueue created by AudioStreamer. But it doesn't work if you set the volume while is playing. I really don't know the reason. Any suggestion?\n. ",
    "markst": "I believe it was an issue with my code. \n. ",
    "isalkind": "Broke between the Nov 24, 2009 checkpoint and the Mar 29, 2010 checkpoint.\n. I did come up with a fix for this problem. If I recall correctly it had something to do with how VBR vs non-VBR streams are handled. Give me a chance to look at my changes and I will post later in the day.\n. I forked the repository and committed my changes. You can find them in the 'isalkind' branch. Only touched the AudioStreamer.h & AudioStreamer.m files. Certain calculations assumed VBR. These changes try to detect when something is non-VBR (CBR) and make calculations appropriately.\nAlthough the changes should work for other non-VBR streams, I have only tested them specifically with wav streams. Your millage may vary.\n. ",
    "ghassett": "I am having this exact same problem -- MP3's play, but WAV's cause the app to crash.\nI am working through the code in the debugger but cannot yet figure out why AudioQueueEnqueueBuffer returns -50 as an error on line 1372 of AudioStreamer.m.\nAnyone have any suggestions?  Here's where err comes back as -50:\n\nif (packetsFilled)\n{\n    err = AudioQueueEnqueueBuffer(audioQueue, fillBuf, packetsFilled, packetDescs);\n}\nelse\n{\n    err = AudioQueueEnqueueBuffer(audioQueue, fillBuf, 0, NULL);\n}\n\nif (err)\n{\n    [self failWithErrorCode:AS_AUDIO_QUEUE_ENQUEUE_FAILED];\n    return;\n}\n\n. Wow, thank you so much for your speedy response.  Looking forward to the fix.  I found a version of AudioStreamer that DOES in fact play WAV files (it's an older version of your code, without your other improvements).  I stepped through the code for both and am completely baffled why one works and the other doesn't, because they both appear to be calling into the audio framework in exactly the same way.  I really appreciate your help and your work -- thank you.\n. Great fix, life is good.  Thank you very, very much.\n. ",
    "bhavinb": "Faced the same issue and used fixed version of the streamer provided by isalkind. Wav streaming works great now. Thanks isalkind!!\n. ",
    "ghost": "hello, \nplease did you manage to resolve this issue , im facing the same problem.\nThnaks\n. This library is an essential part to numerous iphone apps --each one with their own fork, apparently. It fills a hole in iOS development, AVPlayer being too low level for a lot of people's needs. \nIt's a shame that someone hasn't taken over the project (and maybe even coordinated the forks).\n. A note about MPMoviePlayerController: It buffers the whole file, making it useless for 3G connections (apple will reject.)\nAnd while I thank @cbess for the useful and correct guidance, the fact remains that the iOS community wants a maintained AudioStreamer(-like) project. As it stands, everyone is reinventing the wheel.\n. I'm still interested. Thanks for this. Maybe make a separate project for it? I think people will join in.\n. ",
    "sebsto": "The internalThread is released in the cleanup part of - (void)startInternal\n. just try my repository I included a bunch of fixes for this http://github.com/sebsto/AudioStreamer\n. There were a couple of bugs wrt handling meta data changes while in background.\nI setup the changes in my own repository http://github.com/sebsto/AudioStreamer\nHave a look and try if this solves your issue\n. Hello, Yes I deleted my repository - this was years ago - I am not involved in this type of project anymore.  I certainly have a backup somewhere at home but not online on my laptop.\n@pramodgrit integrated my code as well - maybe he has a copy.  sorry for the inconvenience.\n. ",
    "renepardon": "push\nI need also a detection if the stream status has changed - a new song is playing so that i can pull the new song information. Is this possible with AudioStreamer?\n. ",
    "MosheBerman": "Neat!\n. ",
    "ototoapp": "I can't find page  http://github.com/sebsto/AudioStreamer \ni also try to show the name .\ncan you help ? \nplease ...\n. ",
    "pramodGrit": "thanx really for that...I have updated my code with ur latest one.\nI am also facing the problem with variable reading speed can we have solution using the audio-streamer to get variable reading speed.Thanx in advance.\n. ",
    "saturngod": "Hi @sebsto ,\nDid you delete AudioStreamer ? I am finding a way to get meta data .\n. @jeremyquinn  , did you solve it ?\n. ",
    "sbranding": "That looks valid to me and fixes it as well.\n. ",
    "msanders": "Oops, forgot to update my comment. The correct fix is:\n```\n- (AudioStreamerState)state\n{\n    AudioStreamerState ret;\n@synchronized(self) {\n    ret = state;\n}\n\nreturn ret;\n\n}\n```\n. ",
    "gregwym": "It works for me. Thx. \n. ",
    "kirbyt": "Whoa! My bad. Those other changes were not supposed to be part of the pull request. Guess I need to read up on pull requests and make sure I do them right going forward. Thanks.\n. ",
    "devideavate": "I found the same issue and got following error.\n:\"Error Domain=NSOSStatusErrorDomain Code=1685348671 \"Operation could not be completed. (OSStatus error 1685348671.)\"\nI try with different m4a files but still it having issue in the playing m4a file. Whereas mp3 file is working file.\nPlease let us know what is the reason and solution for it.\nThanks,\nShailendra\n. ",
    "secretlocation": "I'm seeing the same, any fix?\n. ",
    "pronebird": "It doesn't support local files playback..\n. ",
    "bkill": "That's normal.  Your app will be able to run in the background only if there is audio playing.  When the audio stops (ie: going to the next track), it will only resume when the player will go foreground again.  To workaround this, you should control a separate background task ([[UIApplication sharedApplication] beginBackgroundTaskWithExpirationHandler:]) when the audio stops so you can do your stuff in between.\n. ",
    "yasirmturk": "i tried doing this.. but it say something like this when try to play next song\nAudio queue start failed. err: \u00d5G -12985\n. Okay it fixed when i commented out AudioSessionSetActive(false);\n`#ifdef TARGET_OS_IPHONE          \n        //AudioSessionSetActive(false);\nendif`\nRef: http://stackoverflow.com/q/3121841/140220\n. ",
    "frcade": "There is probably a hardware issue if you get that. You usually cannot play anything then, so it's most likely NOT in your code. Happened to me when testing on iPhone 4S that had hung playing earlier, also googled similar issues on desktops.\n. ",
    "debugly": "I also met this problem in simulator\uff0cIt puzzled me for a long time\uff1b then I select another model work well\uff01You can try to restart your mac. Good luck!\n. ",
    "ajmsoftwares": "yes , confirmed\n. ",
    "t3rra": "I solved that issue by changing\nUInt32 sessionCategory = kAudioSessionCategory_MediaPlayback;\nto\nUInt32 sessionCategory = kAudioSessionCategory_MediaPlayback | kAudioSessionCategory_PlayAndRecord;\nin AudioStreamer.m (line # ~775). By the way, thank developer for this cool library! It definitely shortened my development time :) Thank you.\n. ",
    "mknippen": "yes, I ended up changing to just the  kAudioSessionCategory_PlayAndRecord and it worked great.\nThank You,\nMatthew\nOn May 8, 2012, at 6:31 PM, t3rra wrote:\n\nI solved that issue by changing\nUInt32 sessionCategory = kAudioSessionCategory_MediaPlayback;\nto\nUInt32 sessionCategory = kAudioSessionCategory_MediaPlayback | kAudioSessionCategory_PlayAndRecord;\nin AudioStreamer.m (line # ~775). By the way, thank developer for this cool library! It definitely shortened my development time :) Thank you.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/mattgallagher/AudioStreamer/issues/38#issuecomment-5589329\n. \n",
    "pil": "My MP3 file duration is 12.7 sec, but progress is stop at 9.5, but sound is hearing.\n. ",
    "freak4pc": "I get the same bug, the \"progress\" stops 3 seconds before the actual song ends (for some reason)... \n. ",
    "tehillim": "I get the same bug.. watching this.\n. ",
    "mikefrederick": "Same here. There seems to be a partial but incomplete fix available here: http://stackoverflow.com/questions/7952318/audiostreamer-doesnt-show-the-correct-play-time.\n. It seems to me like AVPlayer might be the best solution at this point.\n. Yeah, it is a shame. It is also a shame that AVAudioPlayer doesn't support streaming because I think AVPlayer is a bit messy and annoying to work with. If AVAudioPlayer supported streaming then a lot of people's problems would be solved.\nI integrated AudioStreamer into an app I am currently working on and within a couple of days I had to dig in and fix 3 bugs that showed up. That makes me feel like AudioStreamer might not be suitable for production and that AVPlayer might be a better solution.\n. @cbess I have also implemented an audio player using AVPlayer and AVPlayerItem. I agree that using AVPlayer is not a daunting task at all whatsoever, it would just be nice to have a cleaner and well-rounded solution (i.e. the use of a delegate instead of KVO and NSNotifications). For my particular task, I would really like to be able to use audio level metering with a streaming player -- something that I cannot figure out how to do with AVPlayer (it might not be possible). A couple of years ago I had to create an audio player from scratch with Core Audio (utilizing ffmpeg & streaming audio) and IMHO Core Audio is very poorly documented and it was was not a trivial task.\nI did not know that AVAudioPlayer was a wrapper around AVPlayer & AVPlayerItem. How do you know this? Can you point me somewhere that suggests this is true? I would expect AVAudioPlayer to support streaming audio if this were the case. Also, AVAudioPlayer has been around since iOS 2.2, whereas AVPlayer is relatively new I believe.\n. ",
    "azone": "CHANGE:\nobjc\n        if (sampleRate > 0 && ![self isFinishing])\n        {\n            if (state != AS_PLAYING && state != AS_PAUSED && state != AS_BUFFERING)\n            {\n                return lastProgress;\n            }\n        ...\n        }\nTO:\nobjc\n        if (sampleRate > 0 && (state == AS_STOPPING || ![self isFinishing]))\n        {\n            if (state != AS_PLAYING && state != AS_PAUSED && state != AS_BUFFERING && state != AS_STOPPING)\n            {\n                return lastProgress;\n            }\n         ...\n        }\nin progress method\n. @emile818 I just used C functions like fopen, fwrite, and fclose\n. You can use AVAudioPlayer to play local audio.\n. ",
    "gilnuy": "hi,\ni got the same problem, did you resolve that?\ndebug it comes here:\n```\n- (void)handleReadFromStream:(CFReadStreamRef)aStream eventType:(CFStreamEventType)eventType{\n.....\n            //\n            // Read the bytes from the stream\n            //\n            length = CFReadStreamRead(stream, bytes, kAQDefaultBufSize);\n        if (length == -1)\n        {\n            [self failWithErrorCode:AS_AUDIO_DATA_NOT_FOUND];\n            return;\n        }\n\n.....\n}\n```\nsometimes heapped at 6minute,sometimes at 10minute.\n. ",
    "Kabal": "in the - (void)handleReadFromStream:(CFReadStreamRef)aStream\n    eventType:(CFStreamEventType)eventType callback just write the bytes to disk...\nOf course then you will have the issue of this Streamer not supporting local file playback. I've managed to get it to do that, and it wasn't very hard - Basically replace the CFReadStream stuff with an NSURLConnection instead (which works fine with file URL's).\nThat said, AVQueuePlayer does a lot of what this does now, so if you don't mind only supporting iOS 4.0+ (which isn't really a big deal) You might be better off using that instead, unless you need the flexibility of this streamers low-level approach. Which I guess you might do if you wish to save the files as you play them, or any other number of reasons :)\n. ",
    "foreveryh": "it's helpful. I will try it.\n. ",
    "emile818": "@Kabal @foreveryh   how did you write the bytes to the disk? thx\n// USE this condition or something to validate\n    NSString * escapedValue = [NSString stringWithFormat:@\"%@\", XXXXXX];\n    NSData * mp3Ddata = [NSData dataWithBytes:bytes length:length];\n    NSFileHandle* outputFile = [NSFileHandle fileHandleForWritingAtPath:escapedValue];\n    [outputFile seekToEndOfFile];\n    [outputFile writeData:mp3Ddata];\n    [outputFile closeFile];\nI tried this but didn't support all the kind of streams url for some reason \n. @azone done, such a cool framework the AVAudioPlayer. Thanks. \n. ",
    "bbalachandhar": "@emile818 can you share the code to write audio into local directory?\n. ",
    "mhkhung": "Actually it works as long as the media hint is set to mp3 as default..\n. ",
    "simoa": "Someone have a solution for this issue? \n. ",
    "whsecurity": "I suppose if you use http://csmedia.serverroom.us:8720 and you hard code if it is necessary at line 1299 of AudioStreamer.m the file-type you will be ok.\nChange\nAudioFileTypeID fileTypeHint = \n                [AudioStreamer hintForFileExtension:[[url path] pathExtension]];\nWith:\nAudioFileTypeID fileTypeHint = kAudioFileMP3Type;\nI hope this helps...\n. Same problem here. I have tried a little debugging but with no avail. I have tried to fix it by replacing performSelector with NSTimer (!!!) but after a call or two it outputs an error to inID. When audio streamer brakes the inID returned the current date (ex 2013-12-16 11:14...)\nAny ideas?\n. ",
    "a363211861": "@whsecurity     Thank you very much\uff0c\u8c22\u8c22\u4f60\uff0c\u65b9\u6cd5\u975e\u5e38\u6709\u7528~\n. ",
    "jeewanaryal2012": "Hi Simoa,\nI am having the same problem with one of my iPhone App. Did you find any solutions to fix this issue?\n. ",
    "cbess": "@autodidakto I used to use this proj heavily (I built a media player app around it). Now having switched to AVPlayer, I don't think AVPlayer is low-level at all: [AVPlayer playerWithURL:] handled my needs. Its really a high level API and it provides more feedback about its internals using AVPlayerItem and KVO. I accept the abandonment.\n. @mikefrederick AVPlayer works with local and remote files. AVAudioPlayer is a wrapper around AVPlayer and AVPlayerItem objects. You can get the same behavior by implementing your own audio player using those two classes (which I have done). And yes, my app streams audio. I say all that to say it wasn't a daunting task, if you can understand or modify AudioStreamer code, then making you own wrapper for the two classes will/should be a breeze.\n. @mikefrederick Here is some support for my claim.\nOne: AV Foundation Programming\n\"There are two facets to the AV Foundation framework\u2014API related just to audio, which was available prior to iOS 4; and API introduced in iOS 4 and later. The older audio-related classes provide easy ways to deal with audio. They are described in Multimedia Programming Guide, not in this document.\"\nTwo: Multimedia Programming Guide\n\"The AVAudioPlayer class provides a simple Objective-C interface for playing sounds. If your application does not require stereo positioning or precise synchronization, and if you are not playing audio captured from a network stream, Apple recommends that you use this class for playback.\"\nThree: AV Foundation Programming\nThe layer photo at the top places iOS3 classes in the AVFoundation stack.\nAll of the above excerpts imply that AVAudioPlayer is a wrapper. And looking at AVPlayer and AVPlayerItem, which as you know come later, they expose most of the properties available from AVAudioPlayer, the other properties for metering will have to be implemented by you, using one of the other APIs. There doesn't seem to be a wrapper for the metering, other than AVAudioPlayer, but it is achievable without AVAudioPlayer.\nI could give more examples but this is not for me to research, its mostly for you (since its your project). I could possibly help you implement it though.\n. ",
    "myell0w": "for those of you who don't want to use AVPlayer: MPMoviePlayerController is working fine for audio-only streaming, despite the name and it's as high-level as it can get :)\n. ",
    "alexcrichton": "I'm not sure if anyone is still interested in this, I finally got around to taking a stab at actually figuring out what's going on here, and I've got a heavily modified version in one of my projects.\nThe major differences are:\n- Compiled with ARC\n- No internal thread, removed silly synchronization\n- General cleanup and exposure of some minutia through the API\n- Attempt at an explanation with a large header comment in the .h file\n- Plan on making it possible to buffer the entire audio stream immediately instead of limiting yourself to a statically sized buffer\n- Hopefully better management of state changes and error conditions.\nI'd like to support OSX 10.6, so I can't use AVAudioPlayer sadly. If you'd like to keep using AudioStreamer, but have problems with it, I might be able to help out!\n. I'll be maintaining and updating it here: https://github.com/alexcrichton/AudioStreamer\nInstructions and better documentation will be coming shortly.\n. ",
    "cytryn": "I also have this problem... any progress?\n. ",
    "Yosifz8": "I now use avplayer class of iPhone, it work very good and the seeking good too.\n. ",
    "jduffas": "finalement, j'ai fait totalement autrement,\nj'ai ajout\u00e9 \u00e0 la fin du destroy steamer ceci :\nif (playing && stoped){\n        playing=TRUE;\n        stoped=FALSE;\n        [self createStreamer];\n        [self setButtonImage:[UIImage imageNamed:@\"loadingbutton.png\"]];\n        [streamer start];\n        [self webLoad];\n}\navec ceci dans le AudioStream.m :\nif (length == 0)\n            {\n[self failWithErrorCode:AS_AUDIO_DATA_NOT_FOUND];\n            stoped=TRUE;\n            return;\n        }\n. ",
    "Bo98": "That's a problem with the SDK. It should be fixed in iOS 6.\n. ",
    "Mark-Kennedy": "Hi,\nWas wondering if you'd found a fix or solution for this, am having the same problem. The streamer works wonderfully in iOS 5.1 but when stopping and restoring to foreground in iOS6 it refuses to play. Have put an NSlog in on the button and the button press is definitely being picked up so not sure what the fault is.\nThe .xib version also works great on both iOS5 & 6.\nThanks in advance :-)\n. Tried Matt's latest version, imported into a storyboard and it worked perfectly :-) - thanks for the tip !\n. ",
    "coanag": "I have incorporated the latest audiostreamer into my demo and problem solved. \nI used a old version of the code. \nTo be honest, after several hours,  i didnt manage to find where the problem was.\n. Can you recommend size? Now is 2048 , i tried 3072 but get same error.\n. The solution to my problem was changing AudioStreamer.m \n// hintForFileExtension \nline 574 from \"kAudioFileAAC_ADTSType\" to \"kAudioFileMP3Type\"\nMy stream is at 128 kbps\n. ",
    "zzolrac": "that solution works for me thanks a lot\n. ",
    "yiruchujian": "\n\u6211\u7684\u95ee\u9898\u7684\u89e3\u51b3\u65b9\u6848\u662f\u5c06AudioStreamer.m \n// hintForFileExtension \n\u7b2c574\u884c\u4ece\u201ckAudioFileAAC_ADTSType\u201d\u66f4\u6539\u4e3a\u201ckAudioFileMP3Type\u201d\n\u6211\u7684\u6d41\u901f\u4e3a128 kbps\n\n\u975e\u5e38\u611f\u8c22 \u8fd9\u89e3\u51b3\u4e86\u6211\u7684\u95ee\u9898. ",
    "alexggordon": "Never mind. Need more coffe.\n. ",
    "getfile1": "do you have a solution?\nI'm seeking a answer.\nthank you.\n. ",
    "kdepp": "use MIME type detection, refer to https://github.com/DigitalDJ/AudioStreamer\n. ",
    "zarcon": "btw, if i define kNumAQBufs as 8, all ok with this track, but have some problems with others :(\n. Thanks for the enlightenment, Matt, I will try\n. ",
    "ndane": "Look at the structure of the files, they should contain the URL for the actual stream. \nTry curl http://www.supremeradio.it/supreme.pls in Terminal\n. ",
    "confact": "I have a simple function which get the first adress in the pls and return it.\nI have one for m3u too but this maybe makes more clear when you can see a okay example.\nobj-c\n- (NSString*)getAddressFromPLS:(NSURL *)url\n{\n    NSString *plsurl = @\"\";\n    NSError* error = nil;\n    NSString *fileContents = [NSString stringWithContentsOfURL: url \n                                                      encoding: NSUTF8StringEncoding \n                                                         error: &error];\n    if(![fileContents hasPrefix:@\"ICY 404\"]) {\n        if(fileContents && !error) {\n            NSMutableArray *lines = [fileContents componentsSeparatedByString:@\"\\n\"];\n            for(int i = 0;i<[lines count];i++)\n            {\n                if([[lines objectAtIndex:i] hasPrefix:@\"File1=\"])\n                {\n                    plsurl = [[lines objectAtIndex:i] stringByReplacingOccurrencesOfString:@\"File1=\" withString:@\"\"];\n                }\n            }\n        }\n    }\n    else\n    {\n        plsurl = @\"\";  \n    }\n    NSLog(@\"Address: %@\", plsurl);\n    return plsurl;\n}\n. ",
    "douster": "\u5728 2013\u5e746\u670812\u65e5\u661f\u671f\u4e09\uff0cH\u00e5kan Nyl\u00e9n \u5199\u9053\uff1a\n\nI have a simple function which get the first adress in the pls and return\nit.\nI have one for m3u too but this maybe makes more clear when you can see a\nokay example.\n- (NSString_)getAddressFromPLS:(NSURL )url{\n  NSString plsurl = @\"\";\n  NSError_ error = nil;\n  NSString fileContents = [NSString stringWithContentsOfURL: url\n                                                    encoding: NSUTF8StringEncoding\n                                                       error: &error];\n  if(![fileContents hasPrefix:@\"ICY 404\"]) {\n      if(fileContents && !error) {\n          NSMutableArray lines = [fileContents componentsSeparatedByString:@\"\\n\"];\n          for(int i = 0;i<[lines count];i++)\n          {\n              if([[lines objectAtIndex:i] hasPrefix:@\"File1=\"])\n              {\n                  plsurl = [[lines objectAtIndex:i] stringByReplacingOccurrencesOfString:@\"File1=\" withString:@\"\"];\n              }\n          }\n      }\n  }\n  else\n  {\n      plsurl = @\"\";\n  }\n  NSLog(@\"Address: %@\", plsurl);\n  return plsurl;}\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/mattgallagher/AudioStreamer/issues/61#issuecomment-19313298\n.\n. \n",
    "liuyong": "Oh, my e-mail is 465530401@qq.com\u3002\nLook forward to your reply\uff0cthank you!\n. ",
    "muthuka": "Happens on some of the audio sources I used consistently. So, I can't rely on AS_PLAYING to be the point to enable some of the buttons on my screen.\n. How do I get these updates?\n. Thank you. I forked and made some other changes. Not sure if that\u2019s useful for you.\nMuthu Arumugam\nm: 978-495-0931\nmuthu16@gmail.com\nOn Jul 23, 2013, at 1:06 PM, Nikos Maounis notifications@github.com wrote:\n\nYou can get them from my forked Audiostreamer. https://github.com/psy2k/AudioStreamer-ARC\n\u2014\nReply to this email directly or view it on GitHub.\n. \n",
    "sbradburn": "I ran into this problem, and think I fixed it by changing the call:\n[self performSelector: onThread: withObject: waitUntilDone: modes:]\nat the start of the function (handlePropertyChangeForQueue:propertyID:) to:\n[self performSelector: onThread: withObject: waitUntilDone:]\nIt seems like there is a mode mismatch which causes the call to be dropped in the first version.\n. ",
    "vieriwml": "@sbradburn is right ,I found that ,but the fix can't solve the problem , it is still the same\n. ",
    "NemoAir": "I encounter this problem too, #74 is the same issue, @mike-ferenduros say\n\n\"Looks 'enqueueBuffer' is blocking the internal thread, preventing \n'- (void)handleInterruptionChangeToState:(NSNotification *)notification'\n from happening. I did the same as atomic and commented out lines 1877-1886 as a quick fix but yeah, it's not the right solution.\"\n\nI think it may be the reason,but  also i can not fix it ,just comment the\n\nif (![[NSThread currentThread] isEqual:internalThread]) { ... }\n\nIt may cause other issue...\nBy the way, @mattgallagher ,did you had give up maintain this project\uff1f I see the last commit is two years ago.\n. Is Anyone solved this?\ncommet\nif (![[NSThread currentThread] isEqual:internalThread]) { ... }\nis not the right solution?\n@mattgallagher \n. @InderKumarRathore  LoL...  i can help you translate.\n@Ypoem \u4f60\u7684\u97f3\u9891\u6d41\u662fMP3\uff0c\u8fd9\u4e2a\u95ee\u9898\u548c #67 \u76f8\u4f3c . PS:Github\u4e0a\u8981\u6c42\u522b\u4eba\u8bf4\u4e2d\u6587\u592a\u4e3a\u96be\u4e86\u5427\n. ",
    "psy2k": "You can get them from my forked Audiostreamer. https://github.com/psy2k/AudioStreamer-ARC\n. ",
    "paulshapiro": "Bump. I am experiencing this as well.\n. ",
    "catbus": "Exact same issue here, currently looking for a solution.  Happens intermittently.\n. ",
    "hiren443": "Same issue here. Please give me solution.\n. ",
    "atomictag": "Same problem here. I tried commenting out the code that checks the current thread:\nif (![[NSThread currentThread] isEqual:internalThread]) { ... }\nand it seems to solve the problem. Not sure this is the right solution, but give it a spin.\n. ",
    "Yaqoot": "same here I have been try to fix it for long .. @atomictag  what did you do exactly , plz share us \n. ",
    "mike-ferenduros": "Same here.\nLooks 'enqueueBuffer' is blocking the internal thread, preventing 'handlePropertyChangeForQueue' from happening. I did the same as atomic and commented out lines 1877-1886 as a quick fix but yeah, it's not the right solution.\n. ",
    "mostafaberg": "I'm not 100% sure if you can \"continue\", but you can surely restart streaming and perhaps seek to the last part you stopped at.\nRegarding phone calls, it's supposed to continue automatically. are you sure your implementation is correct ?\n. ",
    "bennyk": "Hi Nadun,\nI have been using AudioStreamer on iOS7 but don't see the error you were describing. Is there a streaming URL to check this out?\nOn Friday, October 11, 2013 7:08 PM, Nadun De Silva notifications@github.com wrote:\nThis project is not working on iOS 7. In some times, we are stop playing and playing again, it is continuously buffering and not start playing again. Did anyone else get the same issue ?\n\u2014\nReply to this email directly or view it on GitHub.\n. Hi Nadun,\nI am using Xcode 5. I tested AudioStreamer on ipad3 and iphone4. Do you get similar behavior using other streaming URL too?\nI tried your streaming URL, my AudioStreamer keeps spinning endlessly. Could it be a server side issue coz I can get stable stream from other source?\nSent from my iPad\n\nOn 12 Oct, 2013, at 12:41 am, Nadun De Silva notifications@github.com wrote:\nHi bennyk,\nHere is the URL, what I'm using. http://live.tnlrn.com:8002\nThis is perfectly working on iOS 6. When I try this on upgraded iPhone, I have face the following issue.\nIt's working on the first time. Then I stop the player and play the player again. It shows me the buffering button for a long time and doesn't start to play again.\nI don't have an iOS 7 simulator and still I'm using xCode 4.6. I just check this by using an upgraded iPhone.\nDid you check this on a simulator or a real device. What is your xCode version. May it be an xCode issue ?\nThank You !\n\u2014\nReply to this email directly or view it on GitHub.\n. Hi Nadun,\n\nI tested your streaming URL on VLC desktop. It works!\nI run AudioStreamer on Xcode Simulator \u00a0it is spinning endlessly too. I am turning my suspicious on changes in Apple codec layer while transitioning from iOS6 to iOS7.\nPS: I don't have any more device in iOS6.\nOn Saturday, October 12, 2013 1:06 AM, Nadun De Silva notifications@github.com wrote:\nHi bennyk,\nI also thought that would be a server issue. But it's working perfectly on iOS 6 devices.\nI didn't try with default URL's. I'll try and let you know. Could you please check this URL with iOS 6 device whether it's gain you the same issu or not ? \n\u2014\nReply to this email directly or view it on GitHub.\n. ",
    "enadun": "Hi bennyk,\nHere is the URL, what I'm using. http://live.tnlrn.com:8002\nThis is perfectly working on iOS 6. When I try this on upgraded iPhone, I have face the following issue.\nIt's working on the first time. Then I stop the player and play the player again. It shows me the buffering button for a long time and doesn't start to play again.\nI don't have an iOS 7 simulator and still I'm using xCode 4.6. I just check this by using an upgraded iPhone.\nDid you check this on a simulator or a real device. What is your xCode version. May it be an xCode issue ?\nThank You !\n. Hi bennyk,\nI also thought that would be a server issue. But it's working perfectly on iOS 6 devices.\nI didn't try with default URL's. I'll try and let you know. Could you please check this URL with iOS 6 device whether it's gain you the same issu or not ? \n. ",
    "amitch001": "can anyone please tell me how to convert a string identifier (like AFDGHFJKDLFKG) into NSURL......I attached the screenshot of my code where i am creating audistreamer object. \n\n. ",
    "arjunbanker": "We\nOn Wednesday, February 5, 2014, Samar Singla notifications@github.com\nwrote:\n\nClosed #84 https://github.com/mattgallagher/AudioStreamer/issues/84.\n\nReply to this email directly or view it on GitHubhttps://github.com/mattgallagher/AudioStreamer/issues/84\n.\n. \n",
    "davidjonker": "Hello, @clicklabs \nI'm also facing same issue,\nCan you please tell me how to fix it?. ",
    "dusker": "I'm also having this issue, anybody managed to have a look at it?\n. ",
    "ashleyevans": "I noticed in the sample app the background audio capability isn't checked by default. Enabling this allowed the audio to play in the background as expected\nI'd be really interested if someone has converted this to run on ios7 code successfully\nThanks\n. ",
    "frakman1": "ashleyevans, I was able to get this to work on ios 8.1.3 if that is any help\n. ",
    "GaoHe-1": "Try again .......\u52a0\u17ce\u6cb9\u17ce\u52a0\u17ce\u6cb9\u17ce\n. ",
    "hovkaren": "Check stream URL is not nil.. ",
    "keab42": "You need to make some modifications to iPhoneStreamingPlayerViewController.m so that the streamer can respond to play/pause events from Control Centre\nIt needs to declare in the ViewDidLoad:\n[[UIApplication sharedApplication] beginReceivingRemoteControlEvents];\n[self becomeFirstResponder];\nYou also need to add the canBecomeFirestResponder method and set it to return true, and in viewWillDisappear:\n[[UIApplication sharedApplication] endReceivingRemoteControlEvents];\n[self resignFirstResponder];\nYou'll also need a - (void) ReceivedWithEvent:(UIEvent *)event method somewhere in the class to handle those play/pause/stop events.\n. ",
    "InderKumarRathore": "I think your stream is mp3, similar to #67 \n. \u6211\u89c9\u5f97\u4f60\u6d41\u7684 MP3 \uff0c\u7c7b\u4f3c\u4e8e #67 \n. @NemoAir Thanks buddy ;)\n. ",
    "Ypoem": "\u8bf4\u4e2d\u6587\u554a\n. ",
    "benzamin": "@mattgallagher Please check out the pull request :)\n. ",
    "numair": "This is really awesome! @mattgallagher will it get rolled into master?\n. ",
    "asifhabib": "Yes! You can. Please go ahead and do that. \n. ",
    "devgeeks": "Here is where my lack of depth of experience with Objective-C comes in... I am unsure if this is the correct signature for this type of property.\n. "
}